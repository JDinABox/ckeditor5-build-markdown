{"version":3,"sources":["webpack://MarkdownEditor/webpack/universalModuleDefinition","webpack://MarkdownEditor/webpack/bootstrap","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/ckeditorerror.js","webpack://MarkdownEditor/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://MarkdownEditor/./node_modules/lodash-es/_root.js","webpack://MarkdownEditor/./node_modules/lodash-es/isBuffer.js","webpack://MarkdownEditor/./node_modules/lodash-es/_nodeUtil.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/version.js","webpack://MarkdownEditor/./node_modules/lodash-es/_freeGlobal.js","webpack://MarkdownEditor/./node_modules/lodash-es/_cloneBuffer.js","webpack://MarkdownEditor/(webpack)/buildin/global.js","webpack://MarkdownEditor/(webpack)/buildin/harmony-module.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-heading/theme/heading.css?e8ec","webpack://MarkdownEditor/./node_modules/lodash-es/stubFalse.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-markdown-gfm/src/lib/marked/marked.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-markdown-gfm/src/lib/to-markdown/to-markdown.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/theme/placeholder.css?ed1e","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/theme/placeholder.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/globals/globals.css?f805","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/globals/globals.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/editorui/editorui.css?827c","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/editorui/editorui.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/label/label.css?cb8d","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/label/label.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/panel/stickypanel.css?9589","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/panel/stickypanel.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/dropdown.css?76f2","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/dropdown.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/icon/icon.css?8738","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/icon/icon.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/tooltip/tooltip.css?fee2","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/tooltip/tooltip.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/button/button.css?375d","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/button/button.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/list/list.css?5e57","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/list/list.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/button/switchbutton.css?2d12","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/button/switchbutton.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/toolbardropdown.css?4f42","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/toolbardropdown.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/listdropdown.css?b0a0","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/listdropdown.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/toolbar/toolbar.css?174a","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/toolbar/toolbar.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-editor-classic/theme/classiceditor.css?f024","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-editor-classic/theme/classiceditor.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/splitbutton.css?f7ac","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/splitbutton.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-code-block/theme/codeblock.css?1b41","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-code-block/theme/codeblock.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-block-quote/theme/blockquote.css?a3d1","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-block-quote/theme/blockquote.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-link/theme/link.css?1514","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-link/theme/link.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-widget/theme/widget.css?5f00","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-widget/theme/widget.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/labeledinput/labeledinput.css?3b7d","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/labeledinput/labeledinput.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/inputtext/inputtext.css?c337","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/inputtext/inputtext.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/theme/textalternativeform.css?78ca","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/theme/textalternativeform.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/panel/balloonpanel.css?7c60","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/panel/balloonpanel.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/panel/balloonrotator.css?6f91","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/panel/balloonrotator.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/panel/fakepanel.css?2560","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/panel/fakepanel.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/theme/image.css?0d33","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/theme/image.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/theme/imageuploadprogress.css?e2d1","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/theme/imageuploadprogress.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/theme/imageuploadicon.css?34f9","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/theme/imageuploadicon.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/theme/imageuploadloader.css?3fc7","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/theme/imageuploadloader.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-heading/theme/heading.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/theme/imagecaption.css?e945","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/theme/imagecaption.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/theme/imagestyle.css?394b","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/theme/imagestyle.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-link/theme/linkform.css?5619","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-link/theme/linkform.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-link/theme/linkactions.css?d014","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-link/theme/linkactions.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-table/theme/tableediting.css?c1e2","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-table/theme/tableediting.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-table/theme/inserttable.css?5a30","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-table/theme/inserttable.css","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-table/theme/table.css?f6ef","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-table/theme/table.css","webpack://MarkdownEditor/./node_modules/lodash-es/_Symbol.js","webpack://MarkdownEditor/./node_modules/lodash-es/_getRawTag.js","webpack://MarkdownEditor/./node_modules/lodash-es/_objectToString.js","webpack://MarkdownEditor/./node_modules/lodash-es/_baseGetTag.js","webpack://MarkdownEditor/./node_modules/lodash-es/_overArg.js","webpack://MarkdownEditor/./node_modules/lodash-es/_getPrototype.js","webpack://MarkdownEditor/./node_modules/lodash-es/isObjectLike.js","webpack://MarkdownEditor/./node_modules/lodash-es/isPlainObject.js","webpack://MarkdownEditor/./node_modules/lodash-es/_listCacheClear.js","webpack://MarkdownEditor/./node_modules/lodash-es/eq.js","webpack://MarkdownEditor/./node_modules/lodash-es/_assocIndexOf.js","webpack://MarkdownEditor/./node_modules/lodash-es/_listCacheDelete.js","webpack://MarkdownEditor/./node_modules/lodash-es/_listCacheGet.js","webpack://MarkdownEditor/./node_modules/lodash-es/_listCacheHas.js","webpack://MarkdownEditor/./node_modules/lodash-es/_listCacheSet.js","webpack://MarkdownEditor/./node_modules/lodash-es/_ListCache.js","webpack://MarkdownEditor/./node_modules/lodash-es/_stackClear.js","webpack://MarkdownEditor/./node_modules/lodash-es/_stackDelete.js","webpack://MarkdownEditor/./node_modules/lodash-es/_stackGet.js","webpack://MarkdownEditor/./node_modules/lodash-es/_stackHas.js","webpack://MarkdownEditor/./node_modules/lodash-es/isObject.js","webpack://MarkdownEditor/./node_modules/lodash-es/isFunction.js","webpack://MarkdownEditor/./node_modules/lodash-es/_isMasked.js","webpack://MarkdownEditor/./node_modules/lodash-es/_coreJsData.js","webpack://MarkdownEditor/./node_modules/lodash-es/_toSource.js","webpack://MarkdownEditor/./node_modules/lodash-es/_baseIsNative.js","webpack://MarkdownEditor/./node_modules/lodash-es/_getValue.js","webpack://MarkdownEditor/./node_modules/lodash-es/_getNative.js","webpack://MarkdownEditor/./node_modules/lodash-es/_Map.js","webpack://MarkdownEditor/./node_modules/lodash-es/_nativeCreate.js","webpack://MarkdownEditor/./node_modules/lodash-es/_hashClear.js","webpack://MarkdownEditor/./node_modules/lodash-es/_hashDelete.js","webpack://MarkdownEditor/./node_modules/lodash-es/_hashGet.js","webpack://MarkdownEditor/./node_modules/lodash-es/_hashHas.js","webpack://MarkdownEditor/./node_modules/lodash-es/_hashSet.js","webpack://MarkdownEditor/./node_modules/lodash-es/_Hash.js","webpack://MarkdownEditor/./node_modules/lodash-es/_mapCacheClear.js","webpack://MarkdownEditor/./node_modules/lodash-es/_isKeyable.js","webpack://MarkdownEditor/./node_modules/lodash-es/_getMapData.js","webpack://MarkdownEditor/./node_modules/lodash-es/_mapCacheDelete.js","webpack://MarkdownEditor/./node_modules/lodash-es/_mapCacheGet.js","webpack://MarkdownEditor/./node_modules/lodash-es/_mapCacheHas.js","webpack://MarkdownEditor/./node_modules/lodash-es/_mapCacheSet.js","webpack://MarkdownEditor/./node_modules/lodash-es/_MapCache.js","webpack://MarkdownEditor/./node_modules/lodash-es/_stackSet.js","webpack://MarkdownEditor/./node_modules/lodash-es/_Stack.js","webpack://MarkdownEditor/./node_modules/lodash-es/_arrayEach.js","webpack://MarkdownEditor/./node_modules/lodash-es/_defineProperty.js","webpack://MarkdownEditor/./node_modules/lodash-es/_baseAssignValue.js","webpack://MarkdownEditor/./node_modules/lodash-es/_assignValue.js","webpack://MarkdownEditor/./node_modules/lodash-es/_copyObject.js","webpack://MarkdownEditor/./node_modules/lodash-es/_baseTimes.js","webpack://MarkdownEditor/./node_modules/lodash-es/_baseIsArguments.js","webpack://MarkdownEditor/./node_modules/lodash-es/isArguments.js","webpack://MarkdownEditor/./node_modules/lodash-es/isArray.js","webpack://MarkdownEditor/./node_modules/lodash-es/_isIndex.js","webpack://MarkdownEditor/./node_modules/lodash-es/isLength.js","webpack://MarkdownEditor/./node_modules/lodash-es/_baseIsTypedArray.js","webpack://MarkdownEditor/./node_modules/lodash-es/_baseUnary.js","webpack://MarkdownEditor/./node_modules/lodash-es/isTypedArray.js","webpack://MarkdownEditor/./node_modules/lodash-es/_arrayLikeKeys.js","webpack://MarkdownEditor/./node_modules/lodash-es/_isPrototype.js","webpack://MarkdownEditor/./node_modules/lodash-es/_nativeKeys.js","webpack://MarkdownEditor/./node_modules/lodash-es/_baseKeys.js","webpack://MarkdownEditor/./node_modules/lodash-es/isArrayLike.js","webpack://MarkdownEditor/./node_modules/lodash-es/keys.js","webpack://MarkdownEditor/./node_modules/lodash-es/_baseAssign.js","webpack://MarkdownEditor/./node_modules/lodash-es/_nativeKeysIn.js","webpack://MarkdownEditor/./node_modules/lodash-es/_baseKeysIn.js","webpack://MarkdownEditor/./node_modules/lodash-es/keysIn.js","webpack://MarkdownEditor/./node_modules/lodash-es/_baseAssignIn.js","webpack://MarkdownEditor/./node_modules/lodash-es/_copyArray.js","webpack://MarkdownEditor/./node_modules/lodash-es/_arrayFilter.js","webpack://MarkdownEditor/./node_modules/lodash-es/stubArray.js","webpack://MarkdownEditor/./node_modules/lodash-es/_getSymbols.js","webpack://MarkdownEditor/./node_modules/lodash-es/_copySymbols.js","webpack://MarkdownEditor/./node_modules/lodash-es/_arrayPush.js","webpack://MarkdownEditor/./node_modules/lodash-es/_getSymbolsIn.js","webpack://MarkdownEditor/./node_modules/lodash-es/_copySymbolsIn.js","webpack://MarkdownEditor/./node_modules/lodash-es/_baseGetAllKeys.js","webpack://MarkdownEditor/./node_modules/lodash-es/_getAllKeys.js","webpack://MarkdownEditor/./node_modules/lodash-es/_getAllKeysIn.js","webpack://MarkdownEditor/./node_modules/lodash-es/_DataView.js","webpack://MarkdownEditor/./node_modules/lodash-es/_Promise.js","webpack://MarkdownEditor/./node_modules/lodash-es/_Set.js","webpack://MarkdownEditor/./node_modules/lodash-es/_WeakMap.js","webpack://MarkdownEditor/./node_modules/lodash-es/_getTag.js","webpack://MarkdownEditor/./node_modules/lodash-es/_initCloneArray.js","webpack://MarkdownEditor/./node_modules/lodash-es/_Uint8Array.js","webpack://MarkdownEditor/./node_modules/lodash-es/_cloneArrayBuffer.js","webpack://MarkdownEditor/./node_modules/lodash-es/_cloneDataView.js","webpack://MarkdownEditor/./node_modules/lodash-es/_cloneRegExp.js","webpack://MarkdownEditor/./node_modules/lodash-es/_cloneSymbol.js","webpack://MarkdownEditor/./node_modules/lodash-es/_cloneTypedArray.js","webpack://MarkdownEditor/./node_modules/lodash-es/_initCloneByTag.js","webpack://MarkdownEditor/./node_modules/lodash-es/_baseCreate.js","webpack://MarkdownEditor/./node_modules/lodash-es/_initCloneObject.js","webpack://MarkdownEditor/./node_modules/lodash-es/_baseIsMap.js","webpack://MarkdownEditor/./node_modules/lodash-es/isMap.js","webpack://MarkdownEditor/./node_modules/lodash-es/_baseIsSet.js","webpack://MarkdownEditor/./node_modules/lodash-es/isSet.js","webpack://MarkdownEditor/./node_modules/lodash-es/_baseClone.js","webpack://MarkdownEditor/./node_modules/lodash-es/cloneDeepWith.js","webpack://MarkdownEditor/./node_modules/lodash-es/isElement.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/config.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/spy.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/eventinfo.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/uid.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/priorities.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/emittermixin.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/mix.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/collection.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-core/src/plugincollection.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/translation-service.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/locale.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-core/src/context.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/comparearrays.js","webpack://MarkdownEditor/./node_modules/lodash-es/clone.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/node.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/text.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/textproxy.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/isiterable.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/tomap.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/objecttomap.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/matcher.js","webpack://MarkdownEditor/./node_modules/lodash-es/isSymbol.js","webpack://MarkdownEditor/./node_modules/lodash-es/_isKey.js","webpack://MarkdownEditor/./node_modules/lodash-es/memoize.js","webpack://MarkdownEditor/./node_modules/lodash-es/_memoizeCapped.js","webpack://MarkdownEditor/./node_modules/lodash-es/_stringToPath.js","webpack://MarkdownEditor/./node_modules/lodash-es/_arrayMap.js","webpack://MarkdownEditor/./node_modules/lodash-es/_baseToString.js","webpack://MarkdownEditor/./node_modules/lodash-es/toString.js","webpack://MarkdownEditor/./node_modules/lodash-es/_castPath.js","webpack://MarkdownEditor/./node_modules/lodash-es/last.js","webpack://MarkdownEditor/./node_modules/lodash-es/_toKey.js","webpack://MarkdownEditor/./node_modules/lodash-es/_baseGet.js","webpack://MarkdownEditor/./node_modules/lodash-es/_baseSlice.js","webpack://MarkdownEditor/./node_modules/lodash-es/_parent.js","webpack://MarkdownEditor/./node_modules/lodash-es/_baseUnset.js","webpack://MarkdownEditor/./node_modules/lodash-es/unset.js","webpack://MarkdownEditor/./node_modules/lodash-es/get.js","webpack://MarkdownEditor/./node_modules/lodash-es/_assignMergeValue.js","webpack://MarkdownEditor/./node_modules/lodash-es/_createBaseFor.js","webpack://MarkdownEditor/./node_modules/lodash-es/_baseFor.js","webpack://MarkdownEditor/./node_modules/lodash-es/isArrayLikeObject.js","webpack://MarkdownEditor/./node_modules/lodash-es/_safeGet.js","webpack://MarkdownEditor/./node_modules/lodash-es/toPlainObject.js","webpack://MarkdownEditor/./node_modules/lodash-es/_baseMergeDeep.js","webpack://MarkdownEditor/./node_modules/lodash-es/_baseMerge.js","webpack://MarkdownEditor/./node_modules/lodash-es/identity.js","webpack://MarkdownEditor/./node_modules/lodash-es/_apply.js","webpack://MarkdownEditor/./node_modules/lodash-es/_overRest.js","webpack://MarkdownEditor/./node_modules/lodash-es/constant.js","webpack://MarkdownEditor/./node_modules/lodash-es/_baseSetToString.js","webpack://MarkdownEditor/./node_modules/lodash-es/_shortOut.js","webpack://MarkdownEditor/./node_modules/lodash-es/_setToString.js","webpack://MarkdownEditor/./node_modules/lodash-es/_baseRest.js","webpack://MarkdownEditor/./node_modules/lodash-es/_isIterateeCall.js","webpack://MarkdownEditor/./node_modules/lodash-es/_createAssigner.js","webpack://MarkdownEditor/./node_modules/lodash-es/merge.js","webpack://MarkdownEditor/./node_modules/lodash-es/_baseSet.js","webpack://MarkdownEditor/./node_modules/lodash-es/set.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/stylesmap.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/element.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/containerelement.js","webpack://MarkdownEditor/./node_modules/lodash-es/assignIn.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/observablemixin.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/editableelement.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/rooteditableelement.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/treewalker.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/position.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/range.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/count.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/selection.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/documentselection.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/document.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/attributeelement.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/emptyelement.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/env.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/keyboard.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/uielement.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/documentfragment.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/downcastwriter.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/istext.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/filler.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/fastdiff.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/diff.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/insertat.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/remove.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/isnode.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/renderer.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/global.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/indexof.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/getancestors.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/domconverter.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/getcommonancestor.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/iswindow.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/emittermixin.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/observer.js","webpack://MarkdownEditor/./node_modules/lodash-es/_setCacheAdd.js","webpack://MarkdownEditor/./node_modules/lodash-es/_setCacheHas.js","webpack://MarkdownEditor/./node_modules/lodash-es/_SetCache.js","webpack://MarkdownEditor/./node_modules/lodash-es/_arraySome.js","webpack://MarkdownEditor/./node_modules/lodash-es/_cacheHas.js","webpack://MarkdownEditor/./node_modules/lodash-es/_equalArrays.js","webpack://MarkdownEditor/./node_modules/lodash-es/_mapToArray.js","webpack://MarkdownEditor/./node_modules/lodash-es/_setToArray.js","webpack://MarkdownEditor/./node_modules/lodash-es/_equalByTag.js","webpack://MarkdownEditor/./node_modules/lodash-es/_equalObjects.js","webpack://MarkdownEditor/./node_modules/lodash-es/_baseIsEqualDeep.js","webpack://MarkdownEditor/./node_modules/lodash-es/_baseIsEqual.js","webpack://MarkdownEditor/./node_modules/lodash-es/isEqualWith.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/mutationobserver.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/domeventdata.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/domeventobserver.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/keyobserver.js","webpack://MarkdownEditor/./node_modules/lodash-es/now.js","webpack://MarkdownEditor/./node_modules/lodash-es/toNumber.js","webpack://MarkdownEditor/./node_modules/lodash-es/debounce.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/fakeselectionobserver.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/selectionobserver.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/focusobserver.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/compositionobserver.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/inputobserver.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/isrange.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/getborderwidths.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/rect.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/scroll.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/view.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/node.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/text.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/textproxy.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/nodelist.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/element.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/treewalker.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/position.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/range.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/mapper.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/modelconsumable.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/downcastdispatcher.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/selection.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/liverange.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/documentselection.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/conversionhelpers.js","webpack://MarkdownEditor/./node_modules/lodash-es/cloneDeep.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/downcasthelpers.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/upcasthelpers.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/controller/editingcontroller.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-core/src/commandcollection.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/viewconsumable.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/schema.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/upcastdispatcher.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/controller/datacontroller.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/conversion.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/batch.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/operation.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/documentfragment.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/utils.js","webpack://MarkdownEditor/./node_modules/lodash-es/isEqual.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/attributeoperation.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/detachoperation.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/moveoperation.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/insertoperation.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/markeroperation.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/renameoperation.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/rootattributeoperation.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/mergeoperation.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/splitoperation.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/rootelement.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/writer.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/differ.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/history.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/unicode.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/document.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/markercollection.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/nooperation.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/operationfactory.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/liveposition.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/utils/insertcontent.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/utils/deletecontent.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/utils/modifyselection.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/utils/getselectedcontent.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/utils/selection-post-fixer.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/model.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/keystrokehandler.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-core/src/editingkeystrokehandler.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-core/src/editor/editor.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-core/src/editor/utils/dataapimixin.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-core/src/editor/utils/elementapimixin.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/setdatainelement.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/dataprocessor/basichtmlwriter.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/dataprocessor/htmldataprocessor.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/componentfactory.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/focustracker.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-core/src/editor/editorui.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/placeholder.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/elementreplacer.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-editor-classic/src/classiceditorui.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/toolbar/normalizetoolbarconfig.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/toolbar/enabletoolbarkeyboardfocus.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/viewcollection.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/template.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/view.js","webpack://MarkdownEditor/./node_modules/lodash-es/isString.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/editorui/bodycollection.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/createelement.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/editorui/editoruiview.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/label/labelview.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/editorui/boxed/boxededitoruiview.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/editableui/editableuiview.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/editableui/inline/inlineeditableuiview.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/tounit.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/panel/sticky/stickypanelview.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/focuscycler.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/toolbar/toolbarseparatorview.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/resizeobserver.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/dropdown/dropdownpanelview.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/position.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/getpositionedancestor.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/dropdown/dropdownview.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/icon/iconview.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/tooltip/tooltipview.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/button/buttonview.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/icons/dropdown-arrow.svg","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/dropdown/button/dropdownbuttonview.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/list/listview.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/list/listitemview.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/list/listseparatorview.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/button/switchbuttonview.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/bindings/clickoutsidehandler.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/dropdown/utils.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/toolbar/toolbarview.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/bindings/preventdefault.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-core/theme/icons/three-vertical-dots.svg","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-editor-classic/src/classiceditoruiview.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-editor-classic/src/classiceditor.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-core/src/editor/utils/attachtoform.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/getdatafromelement.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-core/src/plugin.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-clipboard/src/datatransfer.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-clipboard/src/clipboardobserver.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-clipboard/src/utils/viewtoplaintext.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-clipboard/src/clipboard.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-clipboard/src/utils/plaintexttohtml.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-clipboard/src/utils/normalizeclipboarddata.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-core/src/command.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-enter/src/utils.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-enter/src/entercommand.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-enter/src/enterobserver.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-enter/src/enter.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-enter/src/shiftentercommand.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-enter/src/shiftenter.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-typing/src/utils/changebuffer.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-typing/src/inputcommand.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-typing/src/utils/injectunsafekeystrokeshandling.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-typing/src/utils/utils.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/difftochanges.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-typing/src/utils/injecttypingmutationshandling.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-typing/src/input.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-typing/src/deletecommand.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-typing/src/deleteobserver.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-typing/src/delete.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-typing/src/typing.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/transform.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-undo/src/basecommand.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-undo/src/undocommand.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-undo/src/redocommand.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-undo/src/undoediting.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-undo/theme/icons/undo.svg","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-undo/theme/icons/redo.svg","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-undo/src/undoui.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-undo/src/undo.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-core/src/contextplugin.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-core/src/pendingactions.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-upload/src/filereader.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-upload/src/filerepository.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-adapter-ckfinder/src/utils.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-adapter-ckfinder/src/uploadadapter.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-autoformat/src/blockautoformatediting.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-autoformat/src/inlineautoformatediting.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-typing/src/utils/getlasttextline.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-autoformat/src/autoformat.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-basic-styles/src/attributecommand.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-basic-styles/src/bold/boldediting.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-basic-styles/src/bold/boldui.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-basic-styles/theme/icons/bold.svg","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-basic-styles/src/italic/italicediting.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-basic-styles/src/italic/italicui.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-basic-styles/theme/icons/italic.svg","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-utils/src/first.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-code-block/src/utils.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-code-block/src/codeblockcommand.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-code-block/src/indentcodeblockcommand.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-code-block/src/outdentcodeblockcommand.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-code-block/src/converters.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-code-block/src/codeblockediting.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/model.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/dropdown/button/splitbuttonview.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-code-block/src/codeblockui.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-code-block/theme/icons/codeblock.svg","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-block-quote/src/blockquotecommand.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-block-quote/src/blockquoteediting.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-block-quote/src/blockquoteui.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-core/theme/icons/quote.svg","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ckfinder/src/ckfinderui.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ckfinder/theme/icons/browse-files.svg","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/src/image/imageloadobserver.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/src/image/converters.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-widget/src/highlightstack.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-widget/src/utils.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-widget/theme/icons/drag-handle.svg","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/src/image/utils.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/src/image/imageinsertcommand.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/src/image/imageediting.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-link/src/findlinkrange.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-link/src/linkcommand.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-link/src/unlinkcommand.js","webpack://MarkdownEditor/./node_modules/lodash-es/_castSlice.js","webpack://MarkdownEditor/./node_modules/lodash-es/_hasUnicode.js","webpack://MarkdownEditor/./node_modules/lodash-es/_asciiToArray.js","webpack://MarkdownEditor/./node_modules/lodash-es/_unicodeToArray.js","webpack://MarkdownEditor/./node_modules/lodash-es/_stringToArray.js","webpack://MarkdownEditor/./node_modules/lodash-es/_createCaseFirst.js","webpack://MarkdownEditor/./node_modules/lodash-es/upperFirst.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-link/src/utils.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-link/src/utils/automaticdecorators.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-link/src/utils/manualdecorator.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/utils/bindtwostepcarettoattribute.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-link/src/linkediting.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/notification/notification.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ckfinder/src/ckfindercommand.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ckfinder/src/ckfinderediting.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor-cloud-services-core/src/uploadgateway/fileuploader.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor-cloud-services-core/src/token/token.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-cloud-services/src/cloudservices.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-easy-image/src/cloudservicesuploadadapter.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor-cloud-services-core/src/uploadgateway/uploadgateway.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/mouseobserver.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-widget/src/widget.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/src/imagetextalternative/imagetextalternativecommand.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/src/imagetextalternative/imagetextalternativeediting.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/labeledinput/labeledinputview.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/inputtext/inputtextview.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/bindings/submithandler.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-core/theme/icons/check.svg","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-core/theme/icons/cancel.svg","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/src/imagetextalternative/ui/textalternativeformview.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/panel/balloon/balloonpanelview.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/src/panel/balloon/contextualballoon.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/icons/previous-arrow.svg","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/icons/next-arrow.svg","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/src/image/ui/utils.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/src/imagetextalternative/imagetextalternativeui.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-core/theme/icons/low-vision.svg","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/src/imagetextalternative.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/src/image.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-upload/src/ui/filedialogbuttonview.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/src/imageupload/utils.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/src/imageupload/imageuploadui.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-core/theme/icons/image.svg","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/src/imageupload/imageuploadprogress.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/theme/icons/image_placeholder.svg","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/upcastwriter.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/src/imageupload/imageuploadcommand.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/src/imageupload/imageuploadediting.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/src/imageupload.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-paragraph/src/paragraphcommand.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-paragraph/src/paragraph.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-heading/src/headingcommand.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-heading/src/headingediting.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-heading/src/headingui.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-heading/src/utils.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/src/imagecaption/utils.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/src/imagecaption/imagecaptionediting.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/src/imagestyle/imagestylecommand.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/src/imagestyle/converters.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-core/theme/icons/object-full-width.svg","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-core/theme/icons/object-left.svg","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-core/theme/icons/object-center.svg","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-core/theme/icons/object-right.svg","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/src/imagestyle/utils.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/src/imagestyle/imagestyleediting.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/src/imagestyle/imagestyleui.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-widget/src/widgettoolbarrepository.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/clickobserver.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-link/src/ui/linkformview.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-link/src/ui/linkactionsview.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-link/theme/icons/unlink.svg","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-core/theme/icons/pencil.svg","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-link/src/linkui.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-link/theme/icons/link.svg","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-list/src/listcommand.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-list/src/indentcommand.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-list/src/utils.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-list/src/converters.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-list/src/listediting.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-list/src/listui.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-list/theme/icons/numberedlist.svg","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-list/theme/icons/bulletedlist.svg","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-paste-from-office/src/filters/list.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-paste-from-office/src/normalizers/googledocsnormalizer.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-paste-from-office/src/filters/removeboldwrapper.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-paste-from-office/src/filters/space.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-paste-from-office/src/filters/parse.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-paste-from-office/src/filters/image.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-paste-from-office/src/normalizers/mswordnormalizer.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-markdown-gfm/src/lib/marked/renderer.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-markdown-gfm/src/lib/to-markdown/converters.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-markdown-gfm/src/gfmdataprocessor.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-table/src/commands/utils.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-table/src/converters/upcasttable.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-table/src/tablewalker.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-table/src/utils.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-table/src/converters/downcast.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-table/src/commands/inserttablecommand.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-table/src/commands/insertrowcommand.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-table/src/commands/insertcolumncommand.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-table/src/commands/splitcellcommand.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-table/src/commands/mergecellcommand.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-table/src/commands/removerowcommand.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-table/src/commands/removecolumncommand.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-table/src/commands/setheaderrowcommand.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-table/src/commands/setheadercolumncommand.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-table/src/tableutils.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-table/src/converters/table-layout-post-fixer.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-table/src/converters/table-cell-paragraph-post-fixer.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-table/src/converters/table-cell-refresh-post-fixer.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-table/src/tableediting.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-table/src/ui/inserttableview.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-table/src/tableui.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-table/theme/icons/table.svg","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-table/theme/icons/table-column.svg","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-table/theme/icons/table-row.svg","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-table/theme/icons/table-merge-cell.svg","webpack://MarkdownEditor/./src/ckeditor.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-essentials/src/essentials.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-basic-styles/src/bold.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-basic-styles/src/italic.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-code-block/src/codeblock.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-block-quote/src/blockquote.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-ckfinder/src/ckfinder.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-easy-image/src/easyimage.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-heading/src/heading.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/src/imagecaption.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/src/imagestyle.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-image/src/imagetoolbar.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-link/src/link.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-list/src/list.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-paste-from-office/src/pastefromoffice.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-table/src/table.js","webpack://MarkdownEditor/./node_modules/@ckeditor/ckeditor5-table/src/tabletoolbar.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","CKEditorError","Error","message","context","data","attachLinkToDocumentation","JSON","stringify","super","this","type","err","is","error","stack","matchedErrorName","match","memo","isOldIE","Boolean","document","all","atob","getTarget","target","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","e","stylesInDom","getIndexByIdentifier","identifier","result","length","modulesToDom","list","options","idCountMap","identifiers","item","id","base","count","concat","index","obj","css","media","sourceMap","references","updater","push","addStyle","insertStyleElement","style","createElement","attributes","nonce","keys","forEach","setAttribute","insert","appendChild","textStore","replaceText","replacement","filter","join","applyToSingletonTag","remove","styleSheet","cssText","cssNode","createTextNode","childNodes","removeChild","insertBefore","applyToTag","removeAttribute","btoa","unescape","encodeURIComponent","firstChild","singleton","singletonCounter","update","styleIndex","parentNode","removeStyleElement","newObj","lastIdentifiers","newList","toString","newLastIdentifiers","_i","_index","splice","freeSelf","self","Function","freeExports","nodeType","freeModule","Buffer","undefined","isBuffer","freeProcess","process","nodeUtil","types","require","binding","windowOrGlobal","global","CKEDITOR_VERSION","freeGlobal","allocUnsafe","buffer","isDeep","slice","constructor","copy","g","originalModule","webpackPolyfill","children","api","content","default","exported","locals","block","newline","code","fences","noop","hr","heading","nptable","lheading","blockquote","html","def","table","paragraph","text","Lexer","tokens","links","marked","defaults","rules","normal","gfm","tables","bullet","replace","source","_tag","merge","lex","src","token","top","bq","next","loose","cap","bull","b","space","exec","substring","pedantic","lang","depth","header","split","align","cells","test","ordered","indexOf","RegExp","smartLists","charAt","sanitize","pre","sanitizer","toLowerCase","href","title","charCodeAt","inline","escape","autolink","url","tag","link","reflink","nolink","strong","em","br","del","InlineLexer","renderer","Renderer","breaks","Parser","encode","regex","opt","val","arguments","callback","pending","highlight","done","out","parse","escaped","silent","_inside","_href","output","mangle","inLink","outputLink","codespan","smartypants","image","ch","Math","random","langPrefix","quote","level","raw","headerPrefix","xhtml","body","listitem","tablerow","tablecell","flags","prot","decodeURIComponent","_","String","fromCharCode","parseInt","reverse","tok","pop","peek","parseText","row","cell","j","setOptions","parser","lexer","inlineLexer","u","f","1","toMarkdown","converters","mdConverters","gfmConverters","HtmlParser","collapse","blocks","isBlock","node","nodeName","voids","isVoid","getContent","_replacement","canConvert","Array","isArray","TypeError","isFlankedByWhitespace","side","sibling","regExp","isFlanked","previousSibling","nextSibling","nodeValue","textContent","flankingWhitespace","leading","trailing","hasLeading","innerHTML","hasTrailing","converter","whitespace","trim","input","string","tree","clone","parseFromString","documentElement","nodes","elem","inqueue","outqueue","shift","bfsOrder","outer","cloneNode","outerHTML","2","prefix","highlightRegEx","checked","borderCells","alignMap","left","right","center","border","className","3","_window","DOMParser","canParse","canParseHtmlNatively","jsdom","plugins","FetchExternalResources","ProcessExternalResources","useActiveX","implementation","createHTMLDocument","open","ActiveXObject","shouldUseActiveX","doc","write","close","designMode","createHtmlParser","4","hLevel","hPrefix","hasSiblings","isCodeBlock","getAttribute","titlePart","alt","parent","strings","5","6","7","voidElements","toUpperCase","blockElements","isBlockElem","prev","current","prevText","prevVoid","substr","nextNode","8","objectProto","nativeObjectToString","symToStringTag","isOwn","unmasked","func","transform","arg","getPrototypeOf","funcProto","funcToString","objectCtorString","proto","Ctor","__data__","size","other","array","ListCache","entries","clear","entry","set","has","uid","maskSrcKey","IE_PROTO","reIsHostCtor","reIsNative","Hash","map","MapCache","pairs","LARGE_ARRAY_SIZE","Stack","iteratee","objValue","props","customizer","isNew","newValue","propertyIsEnumerable","reIsUint","typedArrayTags","nodeIsTypedArray","isTypedArray","inherited","isArr","isArg","isBuff","isType","skipIndexes","isProto","predicate","resIndex","nativeGetSymbols","getOwnPropertySymbols","symbol","values","offset","keysFunc","symbolsFunc","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","getTag","ArrayBuffer","resolve","ctorString","Uint8Array","arrayBuffer","byteLength","dataView","byteOffset","reFlags","regexp","lastIndex","symbolProto","symbolValueOf","valueOf","typedArray","objectCreate","nodeIsMap","isMap","nodeIsSet","isSet","cloneableTags","baseClone","bitmask","isFlat","isFull","isFunc","stacked","subValue","add","keysIn","configurations","defaultConfigurations","_config","cloneConfig","_setObjectToTarget","_setToTarget","_getFromSource","isDefine","parts","part","configuration","leaveDOMReferences","spy","called","path","stop","off","HEX_NUMBERS","fill","r1","r2","r3","r4","priority","highest","high","low","lowest","_listeningTo","_emitterId","event","listenTo","wasFired","args","stopListening","emitter","emitterInfo","eventCallbacks","emitters","_getEmitterId","_setEmitterId","emitterId","callbacks","eventName","events","getEvents","childEventName","newEventNodes","childEvents","lastIndexOf","createEventNamespace","lists","getCallbacksListsForNamespace","callbackDefinition","added","removeCallback","eventOrInfo","eventInfo","getCallbacksForEvent","_events","callbackArgs","from","apply","_delegations","destinations","passAllDestinations","fireDelegatedEvents","return","rethrowUnexpectedError","to","nameOrFunction","Map","delete","eventNode","callbacksLists","childCallbacksLists","fireArgs","delegatedInfo","fire","mix","baseClass","mixins","mixin","getOwnPropertyNames","sourceDescriptor","getOwnPropertyDescriptor","_items","_itemMap","_idProperty","idProperty","_bindToExternalToInternalMap","WeakMap","_bindToInternalToExternalMap","_skippedIndexesFromExternal","itemId","idOrIndex","itemOrId","subject","itemDoesNotExist","externalItem","ctx","find","_bindToCollection","externalCollection","as","Class","_setUpBindToBinding","using","callbackOrProperty","addItem","evt","isExternalBoundToThis","externalItemBound","finalIndex","skipped","getIndex","reduce","iterator","availablePlugins","contextPlugins","_context","_plugins","_availablePlugins","PluginConstructor","pluginName","_contextPlugins","pluginInstance","plugin","errorMsg","removePlugins","that","loading","Set","loaded","pluginConstructors","mapToAvailableConstructors","removePluginConstructors","missingPlugins","pluginNameOrConstructor","getPluginConstructor","getMissingPluginNames","console","Promise","reject","loadPlugin","then","initPlugins","includes","requires","RequiredPluginConstructorOrName","RequiredPluginConstructor","isContextPlugin","requiredBy","_add","instantiatePlugin","catch","loadedPlugins","method","promise","PluginConstructorOrName","promises","destroy","plugin1","plugin2","translate","language","translationKey","numberOfLanguages","CKEDITOR_TRANSLATIONS","hasTranslation","RTL_LANGUAGE_CODES","uiLanguage","contentLanguage","uiLanguageDirection","getLanguageDirection","contentLanguageDirection","_t","warn","str","translatedString","languageCode","config","defaultConfig","builtinPlugins","languageConfig","locale","ui","editors","_contextOwner","Plugin","init","editor","isContextOwner","names","compareArrays","a","minLen","min","pos","getChildIndex","getChild","unshift","includeSelf","parentFirst","ancestors","ancestorsA","getAncestors","ancestorsB","thisPath","getPath","nodePath","isBefore","_removeChildren","_fireChange","json","_textData","otherNode","textNode","offsetInText","isIterable","toMap","objectToMap","Matcher","pattern","_patterns","classes","element","singleElement","isElementMatching","results","matchName","patterns","hasAttribute","attribute","matchAttributes","getClassNames","hasClass","matchClasses","styles","hasStyle","getStyle","matchStyles","reIsDeepProp","reIsPlainProp","memoize","resolver","memoized","cache","Cache","rePropName","reEscapeChar","number","subString","symbolToString","baseToString","start","end","defaultValue","fromRight","iterable","srcIndex","mergeFunc","srcValue","isCommon","isTyped","baseMerge","thisArg","nativeMax","max","otherArgs","nativeNow","Date","now","lastCalled","stamp","remaining","assigner","sources","guard","nested","_styles","_styleProcessor","isEmpty","getStyleNames","inlineStyle","parsedStyles","stylesString","quoteType","propertyNameStart","propertyValueStart","propertyName","stylesMap","char","propertyValue","parseInlineStyles","toNormalizedForm","propertyDescriptor","getReducedForm","nameOrObject","valueOrObject","toPath","_cleanEmptyObjectsOnPath","getNormalized","_getStylesEntries","arr","sort","getRelatedStyles","parsed","pathParts","parentPath","parentObject","_processor","processor","_normalizers","_extractors","_reducers","_consumables","appendStyleValue","normalizer","extractor","normalizedValue","reducer","callbackOrPath","shorthandName","styleNames","_mapStyleNames","alsoName","stylesObject","nameOrPath","valueToSet","attrs","_attrs","parseAttributes","_children","_insertChild","_classes","classString","parseClasses","setTo","_customProperties","cutType","otherElement","getAsString","matcher","deep","childrenClone","child","getChildren","_clone","cloned","getFillerOffset","items","childCount","normalize","_remove","howMany","classesSet","classesString","classArray","lastChild","observablePropertiesSymbol","boundObservablesSymbol","boundPropertiesSymbol","ObservableMixin","initObservable","properties","configurable","oldValue","bindProperties","isStringArray","boundProperties","bindings","bindTo","toMany","bindToMany","_observable","_bindProperties","_to","_bindings","unbindProperties","boundObservables","toObservable","toProperty","toProperties","toPropertyBindings","boundObservable","methodName","originalMethod","on","observable","parsedArgs","lastObservable","parseBindToArgs","bindingsKeys","numberOfBindings","updateBoundObservableProperty","chain","toPropertyName","bindingsToObservable","updateBoundObservables","updateBindToBound","observables","observableAndAttributePairs","getBindingTargets","every","documentSymbol","getCustomProperty","_setCustomProperty","isFocused","selection","editableElement","rootNameSymbol","rootName","boundaries","startPosition","direction","position","_createAt","singleCharacters","shallow","ignoreElementEnd","_boundaryStartParent","_boundaryEndParent","skip","prevPosition","_next","_previous","previousPosition","isAtEnd","_createAfter","_formatReturnValue","charactersCount","textLength","textProxy","isAtStart","_createBefore","startOffset","nextPosition","isEqual","endOffset","editable","shifted","treeWalker","otherPosition","compareWith","otherPath","itemOrPosition","getLastMatchingPosition","enlargeTrimSkip","isAfter","nodeAfterStart","nodeAfter","nodeBeforeEnd","nodeBefore","otherRange","isCollapsed","containsStart","containsPosition","containsEnd","ranges","isIntersecting","commonRangeStart","commonRangeEnd","getCommonAncestor","startElement","endElement","getShiftedBy","_createFromParentsAndOffsets","offsetSize","_createFromPositionAndShift","selectable","placeOrOffset","_ranges","_lastRangeBackward","_isFake","_fakeSelectionLabel","range","rangeCount","anchor","first","last","firstRange","getFirstRange","lastRange","getLastRange","otherSelection","isFake","fakeSelectionLabel","focus","thisRange","found","isBackward","numOfRangesA","getRanges","rangeA","getTrimmed","rangeB","_setRanges","_setFakeOptions","fake","label","backward","_createIn","_createOn","newFocus","_addRange","newRanges","isLastBackward","_pushRange","storedRange","addedRange","intersectingRange","_selection","delegate","getFirstPosition","getLastPosition","getSelectedElement","isSimilar","setFocus","roots","_postFixers","postFixer","writer","wasFixed","_priority","_id","_clonesGroup","nonUiChildrenCount","DEFAULT_PRIORITY","userAgent","navigator","isMac","isEdge","isGecko","isSafari","isAndroid","features","isRegExpUnicodePropertySupported","isSupported","search","macGlyphsToModifiers","modifiersToMacGlyphs","keyCodes","arrowleft","arrowup","arrowright","arrowdown","backspace","enter","esc","tab","ctrl","cmd","letter","generateKnownKeyCodes","getCode","keyCode","altKey","ctrlKey","shiftKey","parseKeystroke","keystroke","splitKeystrokeText","sum","getEnvKeystrokeText","domDocument","toDomElement","domElement","getAttributeKeys","injectUiElementHandling","view","domConverter","domSelection","domTarget","ownerDocument","defaultView","getSelection","domSelectionCollapsed","getRangeAt","collapsed","domParent","focusNode","domOffset","focusOffset","viewPosition","domPositionToView","jumpedOverAnyUiElement","nextViewPosition","newDomPosition","viewPositionToDom","extend","jumpOverUiElement","_cloneGroups","_setTo","_setFocus","attributeElement","_document","renderFunction","uiElement","render","_setAttribute","_removeAttribute","_addClass","_removeClass","_setStyle","_removeStyle","_removeCustomProperty","positionOrRange","_breakAttributes","_breakAttributesRange","newElement","sourceRange","targetPosition","move","positionOffset","positionParent","_removeFromClonedElementsGroup","mergeAttributes","mergeTextNodes","_appendChild","newPosition","validateNodesToInsert","errorContext","validNodesToInsert","some","validNode","container","getParentContainer","insertionPosition","_addToClonedElementsGroup","endPosition","rangeOrItem","validateRangeContainer","breakStart","breakEnd","parentContainer","removed","mergePosition","walker","getWalker","rangeToRemove","parentElement","ancestor","countBefore","_wrapPosition","viewSelection","setSelection","_wrapRange","newRange","_unwrapChildren","newName","viewElement","getAttributes","groupName","wrapElement","wrapPositions","isText","isAttribute","isUI","_wrapAttributeElement","shouldABeOutsideB","newAttribute","_wrapChildren","offsetChange","unwrapElement","unwrapPositions","unwrapped","_unwrapAttributeElement","movePositionToTextNode","breakTextNode","fakePosition","createAttributeElement","Number","POSITIVE_INFINITY","wrapRange","wrap","wrapper","toWrap","canBeJoined","setStyle","addClass","toUnwrap","removeClass","removeStyle","forceSplitText","rangeStart","rangeEnd","isContainerOrFragment","offsetAfter","clonedNode","nodesToMove","group","getIdentity","textToMove","_data","t1","t2","nodeBeforeLength","startContainer","endContainer","NBSP_FILLER","BR_FILLER","fillerBr","dataset","ckeFiller","INLINE_FILLER","inlineFiller","startsWithFiller","domNode","isInlineFiller","domText","getDataWithoutFiller","jumpOverInlineFiller","fastDiff","cmp","atomicChanges","changeIndexes","arr1","arr2","firstIndex","findFirstDifferenceIndex","lastIndexOld","lastIndexNew","oldArrayReversed","cutAndReverse","newArrayReversed","findChangeBoundaryIndexes","newLength","changeIndexesToAtomicChanges","newArray","changeIndexesToChanges","aLength","bLength","_insert","_delete","tmp","delta","es","fp","snake","k","y1","y2","dir","y","x","nodeToInsert","isNode","Document","Node","domDocuments","markedAttributes","markedChildren","markedTexts","_inlineFiller","_fakeSelectionContainer","mapViewToDom","inlineFillerPosition","_updateChildrenMappings","_isSelectionInInlineFiller","_removeInlineFiller","_getInlineFillerPosition","_needsInlineFillerAtSelection","_updateAttrs","_updateChildren","_updateText","fillerDomPosition","addInlineFiller","_updateSelection","_updateFocus","actualDomChildren","expectedDomChildren","viewChildrenToDom","withChildren","diff","_diffNodeLists","actions","_findReplaceActions","counter","equal","action","insertIndex","deleteIndex","viewChild","_updateElementMappings","unbindDomElement","bindElements","firstPos","selectionPosition","domFillerNode","selectionParent","selectionOffset","findAncestor","isEditable","viewText","findCorrespondingDomText","newDomText","viewToDom","actualText","expectedText","filler","insertData","deleteData","domAttrKeys","attr","viewAttrKeys","nodesToUnbind","_markDescendantTextToSync","domToView","domChildList","fakeSelectionContainer","childList","filterOutFakeSelectionContainer","actualDom","expectedDom","newActions","actualSlice","expectedSlice","areSimilar","viewNode","_removeDomSelection","_removeFakeSelection","domRoot","_updateFakeSelection","_updateDomSelection","assign","width","createFakeSelectionContainer","bindFakeSelection","_fakeSelectionNeedsUpdate","domRange","createRange","removeAllRanges","selectNodeContents","addRange","_domSelectionNeedsUpdate","ELEMENT_NODE","childAtOffset","tagName","fixGeckoSelectionAfterBr","isDomSelectionCorrect","oldViewSelection","domSelectionToView","anchorNode","contains","activeDomElement","activeElement","mapDomToView","domParentOrArray","nodeAfterFiller","fillerNode","node1","node2","actualDomChild","expectedDomChild","isBlockFiller","DOCUMENT_NODE","BR_FILLER_REF","blockFillerMode","preElements","_blockFiller","_domToViewMapping","_viewToDomMapping","_fakeSelectionMapping","viewDocumentSelection","domFragment","viewFragment","textData","_processDataFromViewText","createDocumentFragment","bindDocumentFragments","createElementNS","fillerPositionOffset","childView","viewRange","domStart","domEnd","setStart","setEnd","viewParent","domBefore","domAfter","getParentUIElement","_processDataFromDomText","isComment","isDocumentFragment","viewName","keepOriginalCase","domChildrenToView","domChild","fakeSelectionToView","isDomSelectionBackward","viewRanges","domRangeToView","viewStart","viewEnd","findCorrespondingViewText","viewBefore","domElementOrDocumentFragment","isElement","documentFragmentOrElement","viewEditable","domEditable","scrollX","scrollY","scrollPositions","forEachDomNodeAncestor","scrollLeft","scrollTop","scrollTo","DOCUMENT_FRAGMENT_NODE","COMMENT_NODE","isEqualNode","hasBlockParent","isNbspBlockFiller","anchorOffset","detach","_isDomSelectionPositionCorrect","prevNode","_getTouchingViewTextNode","_nodeEndsWithSpace","_hasDomParentOfType","_getTouchingInlineDomNode","shouldLeftTrim","_checkShouldLeftTrimDomText","shouldRightTrim","_checkShouldRightTrimDomText","Text","getNext","topmostParent","createTreeWalker","NodeFilter","SHOW_TEXT","SHOW_ELEMENT","acceptNode","FILTER_ACCEPT","FILTER_SKIP","currentNode","touchingNode","lca","nodeA","nodeB","boundaryParent","parents","isWindow","stringifiedObject","rest","proxy","_getProxyEmitter","attach","listeningEmitter","listenedToEmitterId","getNodeUID","_domNode","_domListeners","domListener","_createDomListener","useCapture","addEventListener","removeListener","domEvt","removeEventListener","Observer","isEnabled","disable","SetCache","equalFunc","isPartial","arrLength","othLength","seen","arrValue","othValue","compared","othIndex","convert","objProps","objLength","skipCtor","objCtor","othCtor","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","baseIsEqual","characterData","characterDataOldValue","subtree","_renderer","_domElements","_mutationObserver","MutationObserver","_onMutations","takeRecords","observe","enable","disconnect","domMutations","mutatedTexts","mutatedElements","mutation","_isBogusBrMutation","oldText","newText","viewMutations","mutatedText","markToSync","viewChildren","newViewChildren","sameNodes","oldChildren","newChildren","viewSelectionAnchor","viewSelectionFocus","child1","child2","forceRender","addedNode","removedNodes","addedNodes","domEvent","additionalData","preventDefault","stopPropagation","domEventType","onDomEvent","eventType","metaKey","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","isBinary","nativeMin","wait","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","maxing","invokeFunc","time","leadingEdge","setTimeout","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","clearTimeout","cancel","flush","_fireSelectionChangeDoneDebounced","_handleSelectionMove","newSelection","oldSelection","mutationObserver","getObserver","_documents","WeakSet","_clearInfiniteLoopInterval","setInterval","_clearInfiniteLoop","_loopbackCounter","_handleSelectionChange","clearInterval","newViewSelection","_renderTimeoutId","selectedEditable","isComposing","isRange","getBorderWidths","getComputedStyle","borderTopWidth","borderRightWidth","bottom","borderBottomWidth","borderLeftWidth","rectProperties","isSourceRange","_source","writable","copyRectProperties","getDomRangeRects","getBoundingClientRect","innerWidth","innerHeight","height","anotherRect","rect","getIntersection","getArea","visibleRect","isBody","commonAncestorContainer","parentRect","intersectionRect","prop","intersectRect","scrollBarWidth","scrollBarHeight","clientWidth","clientHeight","borderWidths","offsetWidth","offsetHeight","rects","clientRects","getClientRects","elementOrRange","scrollViewportToShowTarget","viewportOffset","targetWindow","getWindow","currentWindow","currentFrame","firstAncestorToScroll","getParentElement","scrollAncestorsToShowRect","getRectRelativeToWindow","targetRect","scrollWindowToShowRect","frameElement","targetShiftedDownRect","moveBy","targetShiftedUpRect","viewportRect","excludeScrollbarsAndBorders","isAbove","isBelow","isLeftOf","isRightOf","getRect","parentWindow","firstRect","secondRect","relativeWindow","frame","frameRect","scrollAncestorsToShowTarget","domRoots","_initialDomRootAttributes","_observers","_ongoingChange","_postFixersInProgress","_renderingDisabled","_hasChangedSinceTheLastRendering","_writer","addObserver","_render","viewRoot","getRoot","_name","initialDomRootAttributes","updateContenteditableAttribute","isReadOnly","change","observer","viewRangeToDom","isRenderingInProgress","callbackResult","_callPostFixers","flag","disableObservers","enableObservers","getChildStartOffset","toJSON","_nodes","_insertNodes","getNodeIndex","maxOffset","getNodeStartOffset","totalOffset","nodeList","indexStart","getNode","offsetToIndex","relativePath","_removeNodes","fromJSON","stickiness","_visitedParent","prevVisitedParent","formatReturnValue","offsetInTextNode","newOffset","diffAt","leftParent","getParentPath","operation","_getTransformedByInsertOperation","_getTransformedByMoveOperation","_getTransformedBySplitOperation","_getTransformedByMergeOperation","_getTransformedByInsertion","_getTransformedByMove","sourcePosition","movedRange","_getCombined","splitPosition","moveTargetPosition","graveyardPosition","_getTransformedByDeletion","deletionPosition","deletePosition","transformed","insertPosition","combined","graveyard","getCommonPath","posParent","operations","getTransformedByOperation","containsRange","spread","newPos","moveRange","differenceSet","getDifference","difference","common","transformedCommon","newStart","newEnd","ref","refIndex","_modelToViewMapping","_viewToModelMapping","_viewToModelLengthCallbacks","_markerNameToElements","_elementToMarkerNames","_unboundMarkerNames","viewContainer","modelPosition","_findPositionIn","viewBlock","findMappedViewAncestor","modelParent","modelOffset","_toModelOffset","modelElement","toModelElement","markerName","toViewElement","elements","nameToElements","elementToNames","markerNames","toModelPosition","modelRange","toViewPosition","mapper","isPhantom","boundElements","getElementsWithSameId","viewElementName","lengthCallback","viewOffset","getModelLength","len","expectedOffset","lastLength","_moveViewPositionToTextNode","_consumable","_textProxyRegistry","_normalizeConsumableType","_getSymbolForTextProxy","itemConsumables","startMap","endMap","_addSymbolForTextProxy","conversionApi","dispatcher","differ","markers","getMarkersToRemove","convertMarkerRemove","getChanges","convertInsert","convertRemove","convertAttribute","attributeKey","attributeOldValue","attributeNewValue","flushUnboundMarkerNames","markerRange","getRange","convertMarkerAdd","getMarkersToAdd","consumable","_createInsertConsumable","_testAndFire","_clearConversionApi","_createConsumableForRange","markersAtSelection","getMarkersAtPosition","_createSelectionConsumable","marker","shouldMarkerChangeBeConverted","getItems","containsItem","anyNewRange","oldRange","_removeAllRanges","directChange","_popRange","attributeKeys","visited","startBlock","getParentBlock","isTopBlockInRange","isUnvisitedTopBlock","endBlock","isTouching","limitStartPosition","limitEndPosition","_checkRange","isUnvisitedBlock","model","schema","hasParentLimit","isLimit","parentBlock","findAncestorBlock","bindWithDocument","isDocumentOperation","_createFromRanges","boundariesChanged","contentChanged","doesOperationChangeRangeContent","toRange","hasOwnRange","isGravityOverridden","getSelectedBlocks","containsEntireContent","_updateMarkers","_updateAttributes","_getStoredAttributes","overrideGravity","restoreGravity","startsWith","_model","_attributePriority","_fixGraveyardRangesData","_hasChangedRange","_overriddenGravityRegister","liveRange","_fixGraveyardSelection","_validateSelectionRange","batch","changeParent","enqueueChange","storedAttributes","clearAttributesStoredInElement","_getDefaultRange","optionsOrPlaceOrOffset","overrideUid","_prepareRange","fromRange","changed","selectionRange","oldMarkers","clearAll","newAttributes","_getSurroundingAttributes","oldAttributes","_setAttributesTo","newKey","oldKey","realKey","getAttrsIfCharacter","isObject","removedRangeStart","positionCandidate","getNearestSelectionRange","ConversionHelpers","dispatchers","_dispatchers","conversionHelper","normalizeToElementConfig","elementCreator","consume","converterPriority","downcastElementToElement","modelValue","getFromAttributeCreator","oldViewElement","newViewElement","viewWriter","toViewRange","unwrap","downcastAttributeToElement","normalizeToAttributeConfig","attributeCreator","oldAttribute","downcastAttributeToAttribute","isOpening","viewStartElement","viewEndElement","bindElementToMarker","markerNameToElements","unbindElementFromMarkerName","createRangeOn","clearClonedElementsGroup","downcastMarkerToElement","highlightDescriptor","descriptor","prepareDescriptor","createViewElementFromHighlightDescriptor","rangeAfterWrap","highlightElement","viewHighlightElement","removeHighlight","downcastMarkerToHighlight","viewElementType","modelData","viewElementDefinition","createContainerElement","createUIElement","createViewElementFromDefinition","modelAttributeValue","upcastElementToElement","normalizeModelAttributeConfig","prepareToAttributeConverter","elementName","getViewElementNameFromConfig","upcastElementToAttribute","viewKey","normalized","normalizeViewAttributeKeyValueConfig","upcastAttributeToAttribute","oldModel","modelWriter","normalizeToMarkerConfig","upcastElementToMarker","matcherResult","viewItem","splitResult","splitToAllowedParent","modelCursor","convertChildren","createPositionAt","getSplitParts","createPositionBefore","createPositionAfter","cursorParent","prepareToElementConverter","viewConfig","viewAttributeKeyToCopy","defaultModelValue","modelKey","configToTest","onlyViewNameIsDefined","modelAttribute","checkAttribute","setAttributeOn","downcastDispatcher","_disableRendering","convertChanges","convertSelection","modelSelection","toModelRange","convertSelectionChange","createText","modelEnd","createRangeIn","unbindViewElement","brokenPosition","breakAttributes","_commands","commandName","command","execute","commands","ViewConsumable","consumables","elementConsumables","revert","instance","consumablesFromElement","createFrom","_canConsumeName","_test","_consume","_revert","consumableName","toConsume","_sourceDefinitions","_attributeProperties","decorate","SchemaContext","getDefinition","itemName","definition","_clearCache","_compiledDefinitions","_compile","getDefinitions","isInline","_checkContextMatch","attributeName","allowAttributes","positionOrBaseElement","elementToMerge","checkMerge","checkChild","childDef","retValue","getAttributeProperties","selectionOrRangeOrPosition","rangeCommonAncestor","getMinimalFlatRanges","convertToMinimalFlatRanges","_getValidRangesForRange","backwardWalker","forwardWalker","forward","step","combineWalkers","removeDisallowedAttributeFromNode","positionsInRange","getPositions","compiledDefinitions","sourceRules","itemNames","compileBaseItemRule","compileAllowContentOf","compileAllowWhere","compileAllowAttributesOf","compileInheritPropertiesFrom","cleanUpAllowIn","cleanUpAllowAttributes","contextItemIndex","contextItem","getItem","allowIn","parentRule","mapContextItem","query","getNames","endsWith","sourceItemRules","itemRule","allowContentOf","allowWhere","allowAttributesOf","inheritTypesFrom","sourceItemRule","typeNames","copyTypes","copyProperty","inheritFrom","inheritAllFrom","makeInheritAllWork","allowContentOfItemName","getAllowedChildren","allowedItem","allowWhereItemName","allowedIn","allowAttributeOfItem","inheritAttributes","inheritPropertiesOfItem","existingItems","itemToCheck","ctxItem","_splitParts","_modelCursor","convertItem","_convertItem","_convertChildren","_splitToAllowedParent","_getSplitParts","contextDefinition","append","createContextTree","store","documentFragment","_removeEmptyElements","modelItem","markerElements","markerElement","currentPosition","extractMarkersFromModelFragment","nextModelCursor","allowedParent","findAllowedParent","treeWalkerValue","originalPart","splitPart","_registerSplitPair","anyRemoved","dataProcessor","upcastDispatcher","_checkIfRootsExists","hasContent","ignoreWhitespaces","modelElementOrFragment","viewDocumentFragment","toView","toData","clearBindings","elementRange","intersection","_getMarkersRelativeToElement","version","initialData","main","modelRoot","newData","removeSelectionAttribute","toModel","viewElementOrFragment","rootNames","getRootNames","downcastDispatchers","upcastDispatchers","_helpers","_downcast","_createConversionHelpers","isDowncast","_upcast","alias","for","elementToElement","_getAllUpcastDefinitions","attributeToElement","elementToAttribute","attributeToAttribute","helpers","upcastAlso","_getUpcastDefinition","upcastAlsoItem","Batch","op","baseVersion","Operation","__className","_normalizeNodes","_splitNodeAtPosition","_mergeNodesAtIndex","_move","_haveSameAttributes","mergedNode","offsetDiff","firstPart","secondPart","iteratorA","iteratorB","newTargetPosition","getMovedRangeStart","sourceElement","targetElement","sourceOffset","targetOffset","shouldReceiveAttributes","gyPosition","originalNodes","affectsData","_markers","oldName","mergedElement","getInsertionPosition","splitElement","_doc","_assertWriterUsedCorrectly","isSameTree","addOperation","applyOperation","rangeRootPosition","usingOperation","updateMarker","addMarker","itemOrRange","setAttributeOnRange","setAttributeOnItem","removeAttributesFromItem","_addOperationForAffectedMarkers","flat","applyRemoveOperation","_merge","_mergeDetached","createPositionFromPath","createSelection","renameOperation","limitElement","firstSplitElement","firstCopyElement","elementOrString","shiftedRange","applyMarkerOperation","_set","markerOrName","currentMarker","_refresh","hasUsingOperationDefined","affectsDataDefined","currentRange","updatedRange","managedUsingOperations","keyOrObjectOrIterable","_setSelectionAttribute","keyOrIterableOfKeys","_removeSelectionAttribute","_overrideGravity","_restoreGravity","storeKey","_getStoreAttributeKey","_currentWriter","isAffected","elementBefore","elementAfter","affectedInLeftElement","affectedInRightElement","affectedAfterLeftElement","affectedBeforeRightElement","valueBefore","valueAfter","lastSplitPosition","previousValue","rootA","rootB","markerCollection","_markerCollection","_changesInElement","_elementSnapshots","_changedMarkers","_changeCount","_cachedChanges","_cachedChangesWithGraveyard","_isInInsertedElement","_markRemove","_markInsert","getMarkersIntersectingRange","bufferMarkerChange","_markAttribute","sourceParentInserted","targetParentInserted","graveyardParent","mergedIntoElement","buffered","includeChangesInGraveyard","diffSet","changes","snapshotChildren","elementChildren","_getChildrenSnapshot","_generateActionsFromChanges","_getInsertDiff","_getRemoveDiff","elementAttributes","snapshotAttributes","_getAttributesDiff","changeCount","prevDiff","thisDiff","isConsecutiveTextRemove","isConsecutiveTextAdd","isConsecutiveAttributeChange","_changesInGraveyardFilter","changeItem","_markChange","_removeAllNestedChanges","_makeSnapshot","_getChangesForElement","_handleChange","inc","nodesToHandle","old","incEnd","oldEnd","intersectionLength","howManyAfter","attributePart","diffs","snapshot","oldChildrenLength","oldChildrenHandled","repeat","posInGy","rangeInGy","History","_operations","_undoPairs","_undoneOperations","undoneOperation","undoingOperation","isInsideSurrogatePair","character","isLowSurrogateHalf","isInsideCombinedSymbol","history","_hasSelectionChangedFromTheLastChangeBlock","createRoot","bufferOperation","_hasDocumentChangedFromTheLastChangeBlock","refresh","hasDataChanges","reset","defaultRoot","_getDefaultRoot","validateTextNodePosition","rangeBoundary","oldMarker","hasChanged","_attachLiveRange","_managedUsingOperations","_affectsData","_destroyMarker","_detachLiveRange","_liveRange","stopDelegating","oldPosition","toPosition","canMergeWith","_filterAttributesOf","_affectedStart","_affectedEnd","parentContext","_handleNode","isFirst","isLast","removeDisallowedAttributes","nodeToSelect","_handleObject","_checkAndSplitToAllowedPosition","_mergeSiblingsOf","_handleDisallowedNode","_tryAutoparagraphing","handleNodes","livePos","fromPosition","_setAffectedBoundaries","mergeLeft","_canMergeLeft","mergeRight","_canMergeRight","mergePosLeft","mergePosRight","livePosition","_getAllowedIn","tempPos","deleteContent","selRange","doNotResetEntireContent","getLimitElement","shouldEntireContentBeReplacedWithParagraph","insertParagraph","replaceEntireContentWithParagraph","startPos","endPos","leaveUnmerged","mergeBranches","startParent","endParent","leftPos","rightPos","rangeToCheck","checkCanBeMerged","parentToRemove","collapseSelectionAt","isTextAllowed","isParagraphAllowed","shouldAutoparagraph","validSelectionRange","doNotAutoparagraph","tryExtendingTo","unit","isForward","isAtWordBoundary","isAtNodeBoundary","boundaryChar","getCorrectWordBreakPosition","getCorrectPosition","getSearchRange","searchEnd","offsetToCheck","removeRangeContent","parentsToCheck","itemRange","parentToCheck","removeRange","injectSelectionPostFixer","registerPostFixer","correctedRange","tryFixingRange","nonIntersectingRanges","previousRange","merged","mergeIntersectingRanges","selectionPostFixer","originalPosition","nearestSelectionRange","fixedPosition","tryFixingCollapsedRange","isTextAllowedOnStart","isTextAllowedOnEnd","startLimitElement","endLimitElement","startIsOnBlock","endIsOnBlock","checkSelectionOnNonLimitElements","fixedStart","fixedEnd","isStartInLimit","isEndInLimit","bothInSameParent","expandStart","isInObject","expandEnd","findOutermostLimitAncestor","tryFixingNonCollapsedRage","startingNode","isLimitNode","_pendingChanges","_validate","register","addChildCheck","childDefinition","_runPendingChanges","batchOrType","_execute","insertion","nodesToInsert","getSelectionRange","affectedRange","getAffectedRange","insertContent","setSelectionFocus","modifySelection","frag","commonPath","commonParent","getNodeByPath","flatSubtreeRange","appendText","leftExcessRange","getSelectedContent","rangeOrElement","intersectingMarker","ret","currentBatch","callbackReturnValue","_handleChangeBlock","_listener","keyEvtData","evtData","_addEditor","_getEditorConfig","once","state","editing","conversion","addAlias","keystrokes","extraPlugins","readyPromise","_removeEditor","el","HTMLTextAreaElement","BasicHtmlWriter","fragment","_domParser","_domConverter","_htmlWriter","getHtml","_toDom","_components","originalName","_elements","_nextEventLoopTimeout","_focus","_blur","focusedElement","componentFactory","focusTracker","_editableElementsMap","ckeditorInstance","editorUI","documentPlaceholders","enablePlaceholder","isDirectHost","updateDocumentPlaceholders","hidePlaceholder","placeholders","wasViewModified","updatePlaceholder","hostElement","getChildPlaceholderHostSubstitute","isEmptyish","selectionAnchor","needsPlaceholder","showPlaceholder","ElementReplacer","_replacedElements","display","_toolbarConfig","_elementReplacer","replacementElement","editingView","editingRoot","setEditableElement","attachDomRoot","_initPlaceholder","_initToolbar","restore","detachDomRoot","stickyPanel","limiterElement","viewportTopOffset","toolbar","fillFromConfig","origin","originKeystrokeHandler","originFocusTracker","beforeFocus","afterBlur","enableToolbarKeyboardFocus","placeholderText","isRendered","_parentElement","elementOrDocFragment","dest","evtName","_isRendered","_revertData","_renderNode","intoFragment","isApplying","revertData","_revertTemplateFromNode","isView","isTemplate","eventNameOrFunctionOrAttribute","TemplateToBinding","eventNameOrFunction","if","valueIfTrue","TemplateIfBinding","template","extendTemplate","extendObjectValueArray","eventListeners","childIndex","isInvalid","_renderText","_renderElement","_renderAttributes","_renderElementChildren","_setUpListeners","hasTemplateBinding","_bindToObservable","getTextUpdater","attrName","attrValue","domAttrValue","attrNs","valueToBind","shouldExtend","getAttributeUpdater","_renderStyleAttribute","arrayValueReducer","isFalsy","setAttributeNS","styleName","styleValue","getStyleUpdater","isViewCollection","setParent","childRevertData","revertBindings","schemaItem","domEvtName","domSelector","activateDomEventListener","syncValueSchemaValue","templateBinding","activateAttributeListener","revertBinding","TemplateBinding","matches","getValue","getValueSchemaValue","removeAttributeNS","normalizePlainTextDefinition","normalizeTextDefinition","listeners","arrayify","normalizeListeners","normalizeAttributes","cur","ext","_viewCollections","_unboundChildren","createCollection","collection","_bindTemplate","registerChild","getViews","_bodyCollectionContainer","class","namespace","xmlns","childElementCount","attachToDom","detachFromDom","bindTemplate","setTemplate","_voiceLabelView","_createVoiceLabel","role","voiceLabel","_editableElement","_hasExternalElement","_editingView","_updateIsFocusedClasses","updateAfterRender","toUnit","toPx","_contentPanelPlaceholder","isSticky","_panelRect","_contentPanel","_hasViewportTopOffset","_isStickyToTheLimiter","limiterBottomOffset","marginLeft","_checkIfShouldBeSticky","panelRect","limiterRect","_limiterRect","isActive","_marginLeft","FocusCycler","keystrokeHandler","focusables","isFocusable","_getFocusableItem","viewIndex","focused","previous","collectionLength","_observerInstance","_createObserver","_element","_callback","_addElementCallback","_deleteElementCallback","_elementCallbacks","_getElementCallbacks","unobserve","ObserverConstructor","ResizeObserver","_previousRects","_periodicCheckTimeout","_checkElementRectsAndExecuteCallback","_startPeriodicCheck","_stopPeriodicCheck","periodicCheck","_hasRectChanged","contentRect","currentRect","previousRect","selectstart","focusLast","getOptimalPosition","positions","limiter","fitInViewport","positionedElementAncestor","getPositionedAncestor","elementRect","bestPosition","getVisible","bestPositionRect","bestPositionName","maxLimiterIntersectArea","maxViewportIntersectArea","elementRectArea","positionName","positionRect","getPosition","limiterIntersectArea","viewportIntersectArea","limiterViewportIntersectRect","getIntersectionArea","setBestPosition","getBestPosition","getAbsoluteRectCoordinates","ancestorPosition","ancestorBorderWidths","moveTo","buttonView","panelView","isOpen","panelPosition","_getOptimalPosition","_panelPositions","closeDropdown","southEast","southWest","northEast","northWest","defaultPanelPositions","buttonRect","viewBox","_updateXMLContent","_colorFillPaths","svg","fillColor","querySelectorAll","ariaLabelUid","tooltipView","_createTooltipView","labelView","_createLabelView","iconView","keystrokeView","_createKeystrokeView","_getTooltipString","tabindex","isToggleable","mousedown","click","icon","withKeystroke","tooltip","arrowView","_createArrowView","_focusCycler","focusPrevious","focusNext","focusFirst","toggleSwitchView","_createToggleView","clickOutsideHandler","activator","contextElements","contextElement","createDropdown","ButtonClass","dropdownView","closeDropdownOnBlur","closeDropdownOnExecute","focusDropdownContentsOnArrows","addDefaultBehavior","addListToDropdown","listView","listItemView","itemsView","_behavior","shouldGroupWhenFull","StaticLayout","viewFocusables","viewItemsView","viewFocusTracker","viewLocale","ungroupedItems","groupedItems","groupedItemsDropdown","_createGroupedItemsDropdown","resizeObserver","cachedPadding","_updateFocusCycleableItems","_updateGrouping","_enableGroupingOnResize","wereItemsGrouped","_areItemsOverflowing","_groupLastItem","_ungroupFirstItem","lastChildRect","toolbarRect","computedStyle","paddingProperty","previousWidth","dropdown","buttons","toolbarView","addToolbarToDropdown","shouldToolbarGroupWhenFull","sourceElementOrData","updateSourceElement","form","originalSubmit","onSubmit","submit","attachToForm","getInitialData","_disableStack","forceDisable","DataTransfer","nativeDataTransfer","files","kind","getAsFile","getFiles","_native","getData","setData","viewDocument","handleInput","targetRanges","dropRange","dataTransfer","clipboardData","domDoc","clientX","clientY","caretRangeFromPoint","rangeParent","rangeOffset","getDropViewRange","smallPaddingElements","modelDocument","onCopyCut","_htmlDataProcessor","fullMatch","spaces","scrollToTheSelection","dataController","modelFragment","viewToPlainText","childText","Command","forceDisabled","clearForceDisabled","getCopyOnEnterAttributes","allAttributes","copyOnEnter","isSelectionEmpty","attributesToCopy","splitBlock","setSelectionAttribute","isContainedWithinOneElement","enterBlock","splitPos","isSoft","insertBreak","softBreakAction","anchorPos","isInsideLimitElement","breakLineElement","createEmptyElement","ChangeBuffer","limit","isLocked","_changeCallback","_batch","_reset","_selectionChangeCallback","createBatch","ignoreLock","undoStepSize","_buffer","_batches","textInsertions","resultRange","isCollapsedRange","lock","unlock","injectUnsafeKeystrokesHandling","latestCompositionSelection","inputCommand","handleUnsafeKeystroke","isSelectionUnchanged","keyData","safeKeycodes","isSafeKeystroke","deleteSelectionContent","isFlatSelection","getSingleTextNodeChange","lastOperation","pushLast","isContinuationOf","expected","diffToChanges","compareChildNodes","oldChild","newChild","mutations","containerChildrenMutated","_handleContainerChildrenMutations","_handleTextMutation","_handleTextNodeInsertion","mutationsCommonAncestor","commonAncestor","getMutationsContainer","domMutationCommonAncestor","freshDomConverter","modelFromCurrentDom","currentModel","modelFromDomChildren","currentModelChildren","lastDomChild","lastCurrentChild","isSafeForTextMutation","diffResult","firstChangeAt","insertions","deletions","calculateChanges","modelSelectionRange","insertText","viewPos","modelPos","insertedText","lastChangeAt","handle","injectTypingMutationsHandling","_shouldEntireContentBeReplacedWithParagraph","sequence","_replaceEntireContentWithParagraph","limitElementFirstChild","fireViewDeleteEvent","originalEvent","hasWordModifier","inputType","selectionToRemove","deleteCommandParams","domSelectionAfterDeletion","transformations","setTransformation","OperationA","OperationB","transformationFunction","aGroup","noUpdateTransformation","getTransformation","transformSets","operationsA","operationsB","contextFactory","useRelations","forceWeakRemove","setOriginalOperations","originalOperations","nextTransformIndex","nextBaseVersionA","nextBaseVersionB","originalOperationsACount","originalOperationsBCount","opA","indexB","opB","newOpsA","getContext","newOpsB","updateRelation","newOpA","padWithNoOps","brokenOperationsACount","brokenOperationsBCount","updateBaseVersions","_history","_useRelations","_forceWeakRemove","_relations","takeFrom","originalOperation","_setRelation","affectedLeft","affectedRight","wasInLeftElement","wasStartBeforeMergedElement","wasEndBeforeMergedElement","wasInRightElement","aIsStrong","aWasUndone","_wasUndone","bWasUndone","abRelation","_getRelation","baRelation","originalOp","wasUndone","isUndoneOperation","origB","undoneB","getUndoneOperation","origA","relationsA","relation","_getComplementaryAttributeOperations","insertOperation","insertValue","_moveTargetIntoMovedRange","_makeMoveOperationsFromRanges","hasSameParentAs","moveOp","_breakRangeByMoveOperation","aNewRange","aToGraveyard","bToGraveyard","aIsWeak","removedRange","mergeInside","mergeSplittingElement","getReversed","aCompB","shouldSpread","rightRange","movesGraveyardElement","gyMoveSource","splitNodesMoveSource","gyMoveTarget","gyMove","splitNodesMoveTargetPath","splitNodesMoveTarget","splitNodesMove","extraRename","splitPath","additionalSplit","rangeToMove","gyElementMoved","newParentPosition","newTargetPath","howManyRemoved","aInGraveyard","bInGraveyard","newPositionPath","_stack","_createdBatches","docSelection","selectionRanges","transformSelectionRange","batchToUndo","undoingBatch","operationsToUndo","operationToUndo","nextBaseVersion","historyOperations","getOperations","reversedOperations","setOperationAsUndone","getTransformedByOperations","batchIndex","findIndex","_undo","_restoreSelection","redoingBatch","_batchRegistry","_undoCommand","_redoCommand","isRedoBatch","isUndoBatch","addBatch","clearStack","undoneBatch","localizedUndoIcon","undo","redo","localizedRedoIcon","_addButton","Icon","ContextPlugin","_actions","hasAny","FileReader","reader","_reader","onprogress","file","total","onload","onerror","onabort","readAsDataURL","abort","loaders","_updatePendingAction","_loadersMap","_pendingAction","uploaded","fileOrPromise","createUploadAdapter","loader","aggregatedUploaded","aggregatedTotal","uploadTotal","fileOrPromiseOrLoader","getLoader","_destroy","pendingActions","getMessage","uploadedPercent","filePromise","uploadAdapterCreator","_filePromiseWrapper","_createFilePromiseWrapper","_adapter","status","read","upload","uploadResponse","isFulfilled","rejecter","getCsrfToken","cookie","pair","getCookie","randValues","crypto","getRandomValues","generateToken","_initRequest","_initListeners","_sendRequest","xhr","XMLHttpRequest","responseType","genericError","response","lengthComputable","FormData","send","callbackOrCommand","blockToFormat","testRegexpOrCallback","attributeOrCallback","testCallback","formatCallback","format","leftDel","rightDel","delStart","delEnd","rangesToFormat","validRanges","getValidRanges","rangeText","getLastTextLine","testOutput","testOutputToRanges","rangesToRemove","arrays","getCallbackFunctionForInlineAutoformat","_getValueFromFirstAllowedNode","checkAttributeInSelection","forceValue","setAttributeProperties","isFormatting","fontWeight","iteratorItem","getNormalizedAndLocalizedLanguageDefinitions","languageDefs","getPropertyAssociation","association","getLeadingWhiteSpaces","rawSnippetTextToModelDocumentFragment","textLines","lastLine","appendElement","getIndentOutdentPositions","leadingWhiteSpaces","isModelSelectionInCodeBlock","firstBlock","_getValue","_checkEnabled","firstLanguageInConfig","_applyCodeBlock","_removeCodeBlock","canBeCodeBlock","allowedBlocks","rename","currentBlock","nextBlock","codeBlocks","_indentSequence","getLastOutdentableSequenceRange","nodeAtPosition","getCodeLineTextNodeAtPosition","lastIndexOfSequence","modelToViewCodeBlockInsertion","useLabels","languagesToClasses","languagesToLabels","codeBlockLanguage","targetViewPosition","preAttributes","spellcheck","dataViewToModelCodeBlockInsertion","classesToLanguages","defaultLanguageName","codeBlock","viewChildClasses","stringifiedElement","extractDataFromCodeElement","languages","indentSequence","normalizedLanguagesDefs","getCommandExecuter","addAttributeCheck","modelToDataViewSoftBreakInsertion","docFragment","newDocumentFragment","indent","outdent","registerChildCommand","isSoftEnter","modelDoc","lastSelectionPosition","newBlock","leaveBlockStartOnEnter","emptyLineRangeToRemoveOnEnter","leaveBlockEndOnEnter","breakLineOnEnter","actionView","_createActionView","normalizedLanguageDefs","defaultLanguageDefinition","splitButtonView","_codeBlockLanguage","_getLanguageListItemDefinitions","itemDefinitions","languageDef","withText","blocksToQuote","findQuote","checkCanBeQuoted","_applyQuote","_removeQuote","getRangesOfBlockGroups","groupRange","positionBefore","positionAfter","quotesToMerge","currentQuote","nextQuote","elementOrPosition","isBQAllowed","isBlockAllowedInBQ","button","_fireEvents","modelToViewAttributeConverter","img","HighlightStack","oldTop","_insertDescriptor","newTop","compareDescriptors","oldDescriptor","newDescriptor","_removeDescriptor","shouldABeBeforeB","classesToString","isWidget","toWidget","setCustomProperty","labelOrCreator","setLabel","hasSelectionHandle","widgetElement","selectionHandle","addSelectionHandle","setHighlightHandling","normalizeToArray","getLabel","labelCreator","toWidgetEditable","findOptimalInsertionPosition","selectedElement","getSelectedImageWidget","isImageWidget","isImage","insertImage","imageElement","insertAtSelection","isImageAllowed","getInsertImageParent","isImageAllowedInParent","checkSelectionOnObject","isInOtherImage","createImageViewElement","toImageWidget","altText","srcset","srcsetAttributeConverter","viewImage","conversionResult","modelImage","viewFigureToModel","emptyElement","figure","findLinkRange","_findBound","lookBack","lastNode","manualDecorators","manualDecorator","_getDecoratorStateFromModel","manualDecoratorIds","truthyManualDecorators","falsyManualDecorators","linkRange","decoratorName","linkCommand","rangesToUnlink","reHasUnicode","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsSeq","rsSymbol","reUnicode","strSymbols","chr","ATTRIBUTE_WHITESPACES","SAFE_URL","createLinkElement","linkElement","ensureSafeUrl","isSafeUrl","AutomaticDecorators","_definitions","ManualDecorator","TwoStepCaretHandler","_modelSelection","_overrideUid","_isNextGravityRestorationSkipped","_isGravityOverridden","isAtBoundary","_hasSelectionAttribute","isBetweenDifferentValues","_preventCaretMovement","isAtStartBoundary","isAtEndBoundary","_setSelectionAttributeFromTheNodeBefore","isStepAfterTheAttributeBoundary","_skipNextAutomaticGravityRestoration","overrideSelectionGravity","restoreSelectionGravity","isAttrBefore","isAttrAfter","EXTERNAL_LINKS_REGEXP","addTargetToExternalLinks","linkDecorators","decorators","localizedDecoratorsLabels","decorator","getLocalizedDecorators","retArray","normalizeDecorators","_enableAutomaticDecorators","_enableManualDecorators","twoStepCaretHandler","arrowRightPressed","arrowLeftPressed","contentDirection","isMovementHandled","handleForwardMovement","handleBackwardMovement","bindTwoStepCaretToAttribute","_setupLinkHighlight","automaticDecoratorDefinitions","automaticDecorators","rel","getDispatcher","manualDecoratorDefinitions","manualDecoratorName","highlightedLinks","alert","_showNotification","imageCommand","openerMethod","chooseFiles","originalOnInit","onInit","finder","toArray","images","linkFile","getUrl","imagesUrls","request","insertImages","resizedUrl","notification","showWarning","CKFinder","urls","BASE64_HEADER_REG_EXP","fileOrData","apiAddress","_isBase64","base64","sliceSize","contentType","base64Data","byteArrays","byteNumbers","Blob","_base64ToBlob","_token","_apiAddress","_prepareRequest","_attachXHRListeners","setRequestHeader","onError","statusCode","xhrResponse","formData","DEFAULT_OPTIONS","refreshInterval","autoRefresh","tokenUrlOrRefreshToken","initValue","defaultRefreshToken","tokenUrl","_options","_startRefreshing","_refreshToken","_stopRefreshing","_refreshInterval","optionName","Token","cloudServices","uploadUrl","_uploadGateway","_UploadGateway","Adapter","uploadGateway","fileUploader","selectAllKeystrokeCode","_previouslySelected","_clearPreviouslySelectedWidgets","lastMarked","isChild","_onMousedown","_onKeydown","_handleDelete","domEventData","isInsideNestedEditable","detail","_setSelectionOverElement","isLtrContent","wasHandled","isArrowKeyCode","isSelectAllKeyCode","_handleEnterKey","_selectAllNestedEditableContent","_selectAllContent","_handleArrowKeys","objectElement","_getObjectElementNextToSelection","previousNode","nodeToRemove","objectElement2","isBackwards","paragraphLimit","documentSelection","widgetParent","probe","widget","InputView","inputUid","statusUid","inputView","_createInputView","statusView","_createStatusView","errorText","infoText","ariaDescribedById","select","placeholder","readonly","setValue","submitHandler","labeledInput","_createLabeledInputView","saveButtonView","_createButton","check","cancelButtonView","_focusables","v","defaultLimiterElement","isVisible","show","defaultPositions","positionOptions","southArrowNorth","southArrowNorthWest","southArrowNorthEast","northArrowSouth","northArrowSouthWest","northArrowSouthEast","optimalPosition","unpin","_pinWhenIsVisibleCallback","_startPinning","_stopPinning","hide","attachTo","getDomElement","scrollTarget","isWithinScrollTarget","isLimiterWithinScrollTarget","getNorthTop","balloonRect","arrowVerticalOffset","getSouthTop","arrowHorizontalOffset","northWestArrowSouth","northWestArrowSouthWest","northWestArrowSouthEast","northEastArrowSouth","northEastArrowSouthEast","northEastArrowSouthWest","southWestArrowNorth","southWestArrowNorthWest","southWestArrowNorthEast","southEastArrowNorth","southEastArrowNorthEast","southEastArrowNorthWest","positionLimiter","_viewToStack","_idToStack","_rotatorView","_createRotatorView","_fakePanelsView","_createFakePanelsView","hasView","stackId","_numberOfStacks","_visibleStack","singleViewMode","showStack","_showView","_singleViewMode","visibleView","_showNextStack","hideView","_getStackId","pin","_getBalloonPosition","updatePosition","visibleStack","stacks","nextIndex","isSingleViewMode","numberOfStacks","buttonNextView","buttonPrevView","_showPrevStack","balloonClassName","withArrow","showView","_createButtonView","balloonPanelView","_balloonPanelView","_addPanels","_removePanels","deregisterChild","numberOfPanels","getBalloonPositionData","_createForm","_form","_showForm","_balloon","_hideForm","_isVisible","balloon","repositionContextualBalloon","_isInBalloon","focusEditable","_fileInputView","accept","multiple","createImageTypeRegExp","regExpSafeNames","fetchLocalImage","imageSrc","fetch","resource","blob","mimeType","getImageMimeType","filename","File","createFileFromBlob","imageTypes","imageTypesRegExp","acceptedType","allowMultipleFiles","imagesToUpload","uploadStatusChange","uploadId","fileRepository","viewFigure","_startAppearEffect","_showPlaceholder","_hidePlaceholder","progressBar","_createProgressBar","_showProgressBar","viewImg","_displayLocalImage","completeIcon","_showCompleteIcon","_removeUIElement","_hideProgressBar","_stopAppearEffect","_getUIElement","_createPlaceholder","imageFigure","uniqueProperty","removeChildren","oldElement","insertChild","filesToUpload","uploadImage","createLoader","fetchableImages","isLocalImage","fetchableImage","isInGraveyard","getImagesFromChangeItem","_readAndUpload","domFigure","originalDisplay","_ckHack","setAttributes","uploadStatus","_parseAndSetSrcsetAttributeOnImage","clean","destroyLoader","maxWidth","srcsetAttribute","isNaN","checkCanBecomeParagraph","paragraphLikeElements","isParagraphable","wrapInParagraph","_autoparagraphEmptyRoots","insertElement","createContext","modelElements","checkCanBecomeHeading","option","_addDefaultH1Conversion","enterCommand","localizedTitles","Paragraph","getLocalizedOptions","defaultTitle","dropdownTooltip","titles","headingCommand","paragraphCommand","commandValue","isOn","areEnabled","para","whichModel","getCaptionFromImage","imageModelElement","matchImageCaption","_insertMissingModelCaptionElement","captionModelToView","createCaptionForEditing","createEditableElement","captionElementCreator","_fixCaptionVisibility","_updateCaptionVisibility","lastCaption","_lastSelectedCaption","viewCaption","modelCaption","getParentCaption","showCaption","hideCaptionIfEmpty","viewModified","nodeFinder","imagesWithoutCaption","nestedItem","captionElement","insertViewCaptionAndBind","caption","defaultStyle","isDefault","attributeValue","getStyleByName","defaultStyles","full","alignLeft","alignCenter","alignRight","defaultIcons","normalizeImageStyles","configuredStyles","_normalizeStyle","extendedStyle","modelToViewConverter","newStyle","oldStyle","modelToViewStyleAttribute","filteredStyles","viewFigureElement","modelImageElement","viewToModelStyleAttribute","translatedStyles","translateStyles","localizedDefaultStylesTitles","componentName","balloonToolbar","isWidgetSelected","_toolbarDefinitions","_updateToolbarsVisibility","toolbarConfig","toolbarId","ariaLabel","getRelatedElement","maxRelatedElementDepth","deepestRelatedElement","deepestToolbarDefinition","relatedElement","relatedElementDepth","_isToolbarVisible","_hideToolbar","_isToolbarInBalloon","_showToolbar","toolbarDefinition","urlInputView","_createUrlInput","_manualDecoratorSwitches","_createManualDecoratorSwitches","_createFormChildren","classList","accumulator","switchButton","switches","additionalButtonsView","previewButtonView","_createPreviewButton","unlinkButtonView","editButtonView","actionsView","_createActionsView","formView","_createFormView","_createToolbarLinkButton","_enableUserBalloonInteractions","unlinkCommand","_addFormView","_hideUI","getDecoratorSwitchesState","_closeFormView","_showUI","_getSelectedLinkElement","_areActionsVisible","_isUIVisible","_isUIInPanel","_areActionsInPanel","_getBalloonPositionData","_isFormInPanel","restoreManualDecoratorStates","_removeFormView","forceVisible","_addActionsView","_startUpdatingUI","prevSelectedLink","prevSelectionParent","getSelectionParent","selectedLink","targetLink","findLinkElementAncestor","startLink","endLink","isLinkElement","checkCanBecomeListItem","turnOff","currentIndent","newIndent","listIndent","lowestIndent","_fixType","listType","listItem","startingItem","indentDirection","_indentBy","itemsToChange","lastItem","generateLiInUl","getListItemFillerOffset","createViewListItemElement","viewList","injectViewList","injectedItem","injectedList","refItem","getSiblingListItem","sameIndent","smallerIndent","prevItem","breakContainer","positionAfterUiElements","prevView","breakPosition","mergeViewLists","nextViewList","lastSubChild","modelChild","firstList","secondList","mergeContainers","itemIndent","createUIComponent","hasOnlyLists","modelViewInsertion","modelViewChangeType","listName","modelViewMergeAfterChangeType","modelViewSplitOnInsert","removeStart","removeEnd","previousList","mergePos","modelViewMergeAfter","viewItemPrev","viewItemNext","viewModelConverter","getIndent","listItemModel","convertedChild","findNextListItem","viewToModelListItemChildrenConverter","cleanList","isList","cleanListItem","foundList","firstNode","modelToViewPosition","topmostViewList","modelIndentPasteFixer","indentChange","hoistNestedLists","nextIndent","modelRemoveStartPosition","viewRemoveStartPosition","viewRemovedItem","prevModelItem","foo","prevIndent","prevViewList","itemToListHead","applied","_addListToFix","innerItem","listHead","_fixListIndents","_fixListTypes","maxIndent","fixBy","typesStack","modelChangePostFixer","registerViewToModelLength","getViewListItemLength","modelNode","modelLength","viewListPrev","modelViewChangeIndent","modelViewRemove","firstPosition","transformListItemLikeElementsIntoLists","itemLikeElements","itemLikeElementsMatcher","itemData","getListItemData","order","findAllItemLikeElements","currentList","itemLikeElement","previousItem","currentItem","isNewListNeeded","listStyle","listLikeItem","listStyleRegexp","listStyleTypeRegex","listStyleMatch","listStyleType","listStyleTypeMatch","detectListStyle","insertNewEmptyList","bulletMatcher","removeBulletElement","transformElementIntoListItem","idMatch","orderMatch","indentMatch","googleDocsMatch","htmlString","removeBoldWrapper","unwrapParagraphInListItem","normalizeSafariSpaceSpans","parseHtml","domParser","normalizedHtml","normalizeSpacing","cleanContentAfterBody","htmlDocument","innerTextLength","normalizeSpacerunSpans","bodyString","bodyView","documentToView","styleTags","getElementsByTagName","sheet","cssRules","extractStyles","replaceImagesSourceWithBase64","rtfData","upcastWriter","shapesIds","imageElementsMatcher","imgs","shapes","shape","removeAllImgElementsRepresentingShapes","shapeElementsMatcher","prevSiblingName","findAllShapesIds","removeAllShapeElements","findAllImageElementsWithLocalSource","imageElements","imagesHexSources","newSrc","hexString","hex","replaceImagesFileSourceWithInlineRepresentation","regexPictureHeader","regexPicture","imageType","extractImageDataFromRtf","msWordMatch1","msWordMatch2","_htmlDP","parentName","updateNumericAttribute","createEmptyTableCell","tableCell","upcastTable","viewTable","rows","headingRows","headingColumns","tableMeta","headRows","bodyRows","firstTheadElement","tableChild","trs","tr","headingCols","scanRowForHeadingColumns","scanTable","upcastTableCell","viewTableCell","th","TableWalker","startRow","endRow","includeSpanned","column","_skipRows","_row","_column","_cellIndex","_spannedCells","_nextCellAtColumn","_isOverEndRow","skipCurrentValue","outValue","_isSpanned","_getSpanned","_shouldSkipRow","_shouldSkipColumn","_formatOutValue","colspan","rowspan","_recordSpans","isSpanned","cellIndex","rowIsBelowStartRow","rowIsMarkedAsSkipped","columnToUpdate","_markSpannedCell","rowToUpdate","isTableWidget","getSelectedTableWidget","getTableWidgetAncestor","parentTable","downcastInsertTable","asWidget","figureElement","tableElement","tableWidget","tableWalker","tableAttributes","viewRows","tableWalkerValue","tableSection","getOrCreateTableSection","getSectionName","tableRow","trElement","createTr","createViewTableCellElement","downcastInsertRow","getViewTable","downcastInsertCell","rowIndex","downcastTableHeadingRowsChange","oldRows","newRows","rowsToMove","isBetween","moveViewRowsToTableSection","renameViewTableCell","removeTableSectionIfEmpty","renameViewTableCellIfRequired","lower","upper","downcastTableHeadingColumnsChange","oldColumns","newColumns","lastColumnToCheck","desiredCellElementName","viewCell","renamedCell","getCellElementName","cellElementName","cellElement","isSingleParagraph","innerParagraph","paragraphInsertPosition","fakeParagraph","sectionName","viewTableSection","getExistingTableSectionElement","tableChildElement","createTableSection","viewTableRow","validParent","getInsertTableParent","tableUtils","columns","createTable","tableParent","insertAt","insertRows","at","getCellLocation","insertColumns","isHorizontally","splitCellHorizontally","splitCellVertically","isHorizontal","cellToMerge","_getMergeableCell","isMergeNext","cellToExpand","cellToRemove","removedTableCellRow","mergeTableCells","spanAttribute","cellSpan","cellToMergeSpan","removedRowIndex","removeEmptyRow","horizontalCell","cellOnLeft","cellOnRight","leftCellColumn","rightCellColumn","leftCellSpan","rightCellSpan","isMergeWithBodyCell","isMergeWithHeadCell","getHorizontalCell","currentCellRowSpan","rowOfCellToMerge","tableMap","mergeColumn","cellToMergeData","getVerticalCell","span","currentRow","cellsToMove","rowspanToSet","targetRow","previousCell","cellToMove","getColumns","removedColumn","isInTable","_isInHeading","currentHeadingRows","selectionRow","headingRowsToSet","cellsToSplit","getOverlappingCells","splitHorizontally","newRowspan","spanToSet","columnIndex","tableCellPosition","selectionColumn","headingColumnsToSet","createEmptyRows","rowsToInsert","tableIterator","cellsToInsert","overlapsInsertedRow","columnsToInsert","tableColumns","createCells","skipRow","numberOfCells","newCellsSpan","updatedSpan","breakSpanEvenly","newCellsAttributes","splitCellColumn","cellsToUpdate","splitCellRow","cellColumn","isOnSameColumn","isInEvenlySplitRow","tableCellToInsert","floor","injectTableLayoutPostFixer","analyzedTables","isTableAttributeEntry","fixTableCellsRowspan","fixTableRowsSizes","tableLayoutPostFixer","cellsToTrim","maxRows","rowLimit","findCellsToTrim","rowsLengths","lengths","getRowsLengths","tableSize","maxColumns","isAttributeType","injectTableCellParagraphPostFixer","fixTable","fixTableRow","fixTableCellContent","checkTableCellChange","tableCellContentsPostFixer","textNodes","injectTableCellRefreshPostFixer","cellsToRefresh","checkRefresh","refreshItem","tableCellRefreshPostFixer","attributesCount","_handleTabOnSelectedTable","_getTabHandler","currentRowIndex","currentCellIndex","isFirstCellInRow","isLastCellInRow","isLastRow","cellToFocus","nextRow","previousRow","boxView","_highlightGridBoxes","mouseover","isContentLtr","insertTableView","bindIsOn","_prepareDropdown","addListOption","_addListAutoformats","_addBasicStylesAutoformats","_addHeadingAutoformats","_addBlockQuoteAutoformats","_addCodeBlockAutoformats","boldCallback","italicCallback","codeCallback","normalizers","isTransformedWithPasteFromOffice","activeNormalizer","widgetToolbarRepository","tableContentToolbarItems","tableToolbarItems","contentToolbar"],"mappings":"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","file":"ckeditor.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MarkdownEditor\"] = factory();\n\telse\n\t\troot[\"MarkdownEditor\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 90);\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/ckeditorerror\n */\n\n/**\n * URL to the documentation with error codes.\n */\nexport const DOCUMENTATION_URL =\n\t'https://ckeditor.com/docs/ckeditor5/latest/framework/guides/support/error-codes.html';\n\n/**\n * The CKEditor error class.\n *\n * You should throw `CKEditorError` when:\n *\n * * An unexpected situation occurred and the editor (most probably) will not work properly. Such exception will be handled\n * by the {@link module:watchdog/watchdog~Watchdog watchdog} (if it is integrated),\n * * If the editor is incorrectly integrated or the editor API is used in the wrong way. This way you will give\n * feedback to the developer as soon as possible. Keep in mind that for common integration issues which should not\n * stop editor initialization (like missing upload adapter, wrong name of a toolbar component) we use `console.warn()` with\n * {@link module:utils/ckeditorerror~attachLinkToDocumentation `attachLinkToDocumentation()`}\n * to improve developers experience and let them see the working editor as soon as possible.\n *\n *\t\t/**\n *\t\t * Error thrown when a plugin cannot be loaded due to JavaScript errors, lack of plugins with a given name, etc.\n *\t\t *\n *\t\t * @error plugin-load\n *\t\t * @param pluginName The name of the plugin that could not be loaded.\n *\t\t * @param moduleName The name of the module which tried to load this plugin.\n *\t\t * /\n *\t\tthrow new CKEditorError( 'plugin-load: It was not possible to load the \"{$pluginName}\" plugin in module \"{$moduleName}', {\n *\t\t\tpluginName: 'foo',\n *\t\t\tmoduleName: 'bar'\n *\t\t} );\n *\n * @extends Error\n */\nexport default class CKEditorError extends Error {\n\t/**\n\t * Creates an instance of the CKEditorError class.\n\t *\n\t * @param {String} message The error message in an `error-name: Error message.` format.\n\t * During the minification process the \"Error message\" part will be removed to limit the code size\n\t * and a link to this error documentation will be added to the `message`.\n\t * @param {Object|null} context A context of the error by which the {@link module:watchdog/watchdog~Watchdog watchdog}\n\t * is able to determine which editor crashed. It should be an editor instance or a property connected to it. It can be also\n\t * a `null` value if the editor should not be restarted in case of the error (e.g. during the editor initialization).\n\t * The error context should be checked using the `areConnectedThroughProperties( editor, context )` utility\n\t * to check if the object works as the context.\n\t * @param {Object} [data] Additional data describing the error. A stringified version of this object\n\t * will be appended to the error message, so the data are quickly visible in the console. The original\n\t * data object will also be later available under the {@link #data} property.\n\t */\n\tconstructor( message, context, data ) {\n\t\tmessage = attachLinkToDocumentation( message );\n\n\t\tif ( data ) {\n\t\t\tmessage += ' ' + JSON.stringify( data );\n\t\t}\n\n\t\tsuper( message );\n\n\t\t/**\n\t\t * @type {String}\n\t\t */\n\t\tthis.name = 'CKEditorError';\n\n\t\t/**\n\t\t * A context of the error by which the Watchdog is able to determine which editor crashed.\n\t\t *\n\t\t * @type {Object|null}\n\t\t */\n\t\tthis.context = context;\n\n\t\t/**\n\t\t * The additional error data passed to the constructor. Undefined if none was passed.\n\t\t *\n\t\t * @type {Object|undefined}\n\t\t */\n\t\tthis.data = data;\n\t}\n\n\t/**\n\t * Checks if the error is of the `CKEditorError` type.\n\t */\n\tis( type ) {\n\t\treturn type === 'CKEditorError';\n\t}\n\n\t/**\n\t * A utility that ensures the the thrown error is a {@link module:utils/ckeditorerror~CKEditorError} one.\n\t * It is useful when combined with the {@link module:watchdog/watchdog~Watchdog} feature, which can restart the editor in case\n\t * of a {@link module:utils/ckeditorerror~CKEditorError} error.\n\t *\n\t * @param {Error} err An error.\n\t * @param {Object} context An object connected through properties with the editor instance. This context will be used\n\t * by the watchdog to verify which editor should be restarted.\n\t */\n\tstatic rethrowUnexpectedError( err, context ) {\n\t\tif ( err.is && err.is( 'CKEditorError' ) ) {\n\t\t\tthrow err;\n\t\t}\n\n\t\t/**\n\t\t * An unexpected error occurred inside the CKEditor 5 codebase. This error will look like the original one\n\t\t * to make the debugging easier.\n\t\t *\n\t\t * This error is only useful when the editor is initialized using the {@link module:watchdog/watchdog~Watchdog} feature.\n\t\t * In case of such error (or any {@link module:utils/ckeditorerror~CKEditorError} error) the watchdog should restart the editor.\n\t\t *\n\t\t * @error unexpected-error\n\t\t */\n\t\tconst error = new CKEditorError( err.message, context );\n\n\t\t// Restore the original stack trace to make the error look like the original one.\n\t\t// See https://github.com/ckeditor/ckeditor5/issues/5595 for more details.\n\t\terror.stack = err.stack;\n\n\t\tthrow error;\n\t}\n}\n\n/**\n * Attaches the link to the documentation at the end of the error message. Use whenever you log a warning or error on the\n * console. It is also used by {@link module:utils/ckeditorerror~CKEditorError}.\n *\n *\t\t /**\n *\t\t  * There was a problem processing the configuration of the toolbar. The item with the given\n *\t\t  * name does not exist so it was omitted when rendering the toolbar.\n *\t\t  *\n *\t\t  * @error toolbarview-item-unavailable\n *\t\t  * @param {String} name The name of the component.\n *\t\t  * /\n *\t\t console.warn( attachLinkToDocumentation(\n *\t\t \t'toolbarview-item-unavailable: The requested toolbar item is unavailable.' ), { name } );\n *\n * @param {String} message Message to be logged.\n * @returns {String}\n */\nexport function attachLinkToDocumentation( message ) {\n\tconst matchedErrorName = message.match( /^([^:]+):/ );\n\n\tif ( !matchedErrorName ) {\n\t\treturn message;\n\t}\n\n\treturn message + ` Read more: ${ DOCUMENTATION_URL }#error-${ matchedErrorName[ 1 ] }\\n`;\n}\n","\"use strict\";\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\nimport stubFalse from './stubFalse.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nexport default isBuffer;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nexport default nodeUtil;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/version\n */\n\n/* globals window, global */\n\nimport CKEditorError from './ckeditorerror';\n\nconst version = '17.0.0';\n\n/* istanbul ignore next */\nconst windowOrGlobal = typeof window === 'object' ? window : global;\n\n/* istanbul ignore next */\nif ( windowOrGlobal.CKEDITOR_VERSION ) {\n\t/**\n\t * This error is thrown when due to a mistake in how CKEditor 5 was installed or initialized, some\n\t * of its modules were duplicated (evaluated and executed twice). Module duplication leads to inevitable runtime\n\t * errors.\n\t *\n\t * There are many situations in which some modules can be loaded twice. In the worst case scenario,\n\t * you may need to check your project for each of these issues and fix them all.\n\t *\n\t * # Trying to add a plugin to an existing build\n\t *\n\t * If you import an existing CKEditor 5 build and a plugin like this:\n\t *\n\t *\t\timport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\t *\t\timport Highlight from '@ckeditor/ckeditor5-highlight/src/highlight';\n\t *\n\t * Then your project loads some CKEditor 5 packages twice. How does it happen?\n\t *\n\t * The build package contains a file which is already compiled with webpack. This means\n\t * that it contains all the necessary code from e.g. `@ckeditor/ckeditor5-engine` and `@ckeditor/ckeditor5-utils`.\n\t *\n\t * However, the `Highlight` plugin imports some of the modules from these packages, too. If you ask webpack to\n\t * build such a project, you will end up with the modules being included (and run) twice &mdash; first, because they are\n\t * included inside the build package, and second, because they are required by the `Highlight` plugin.\n\t *\n\t * Therefore, **you must never add plugins to an existing build** unless your plugin has no dependencies.\n\t *\n\t * Adding plugins to a build is done by taking the source version of this build (so, before it was built with webpack)\n\t * and adding plugins there. In this situation, webpack will know that it only needs to load each plugin once.\n\t *\n\t * Read more in the {@glink builds/guides/integration/installing-plugins \"Installing plugins\"} guide.\n\t *\n\t * # Confused an editor build with an editor implementation\n\t *\n\t * This scenario is very similar to the previous one, but has a different origin.\n\t *\n\t * Let's assume that you wanted to use CKEditor 5 from source, as explained in the\n\t * {@glink builds/guides/integration/advanced-setup#scenario-2-building-from-source \"Building from source\"} section\n\t * or in the {@glink framework/guides/quick-start \"Quick start\"} guide of CKEditor 5 Framework.\n\t *\n\t * The correct way to do so is to import an editor and plugins and run them together like this:\n\t *\n\t *\t\timport ClassicEditor from '@ckeditor/ckeditor5-editor-classic/src/classiceditor';\n\t *\t\timport Essentials from '@ckeditor/ckeditor5-essentials/src/essentials';\n\t *\t\timport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\n\t *\t\timport Bold from '@ckeditor/ckeditor5-basic-styles/src/bold';\n\t *\t\timport Italic from '@ckeditor/ckeditor5-basic-styles/src/italic';\n\t *\n\t *\t\tClassicEditor\n\t *\t\t\t.create( document.querySelector( '#editor' ), {\n\t *\t\t\t\tplugins: [ Essentials, Paragraph, Bold, Italic ],\n\t *\t\t\t\ttoolbar: [ 'bold', 'italic' ]\n\t *\t\t\t} )\n\t *\t\t\t.then( editor => {\n\t *\t\t\t\tconsole.log( 'Editor was initialized', editor );\n\t *\t\t\t} )\n\t *\t\t\t.catch( error => {\n\t *\t\t\t\tconsole.error( error.stack );\n\t *\t\t\t} );\n\t *\n\t * However, you might have mistakenly imported a build instead of the source `ClassicEditor`. In this case\n\t * your imports will look like this:\n\t *\n\t *\t\timport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\t *\t\timport Essentials from '@ckeditor/ckeditor5-essentials/src/essentials';\n\t *\t\timport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\n\t *\t\timport Bold from '@ckeditor/ckeditor5-basic-styles/src/bold';\n\t *\t\timport Italic from '@ckeditor/ckeditor5-basic-styles/src/italic';\n\t *\n\t * This creates the same situation as in the previous section because you use a build together with source plugins.\n\t *\n\t * Remember: `@ckeditor/ckeditor5-build-*` packages contain editor builds and `@ckeditor/ckeditor5-editor-*` contain source editors.\n\t *\n\t * # Loading two or more builds on one page\n\t *\n\t * If you use CKEditor 5 builds, you might have loaded two (or more) `ckeditor.js` files on one web page.\n\t * Check your web page for duplicated `<script>` elements or make sure your page builder/bundler includes CKEditor only once.\n\t *\n\t * If you want to use two different types of editors at once, see the\n\t * {@glink builds/guides/integration/advanced-setup#scenario-3-using-two-different-editors \"Using two different editors\"}\n\t * section.\n\t *\n\t * # Using outdated packages\n\t *\n\t * Building CKEditor 5 from source requires using multiple npm packages. These packages have their dependencies\n\t * to other packages. If you use the latest version of, for example, `@ckeditor/ckeditor5-editor-classic` with\n\t * an outdated version of `@ckeditor/ckeditor5-image`, npm or yarn will need to install two different versions of\n\t * `@ckeditor/ckeditor5-core` because `@ckeditor/ckeditor5-editor-classic` and `@ckeditor/ckeditor5-image` may require\n\t * different versions of the core package.\n\t *\n\t * The solution to this issue is to update all packages to their latest version. We recommend\n\t * using tools like [`node-check-updates`](https://www.npmjs.com/package/npm-check-updates) which simplify this process.\n\t *\n\t * # Conflicting version of dependencies\n\t *\n\t * This is a special case of the previous scenario. If you use CKEditor 5 with some third-party plugins,\n\t * it may happen that even if you use the latest versions of the official packages and the latest version of\n\t * these third-party packages, there will be a conflict between some of their dependencies.\n\t *\n\t * Such a problem can be resolved by either downgrading CKEditor 5 packages (which we do not recommend) or\n\t * asking the author of the third-party package to upgrade its depdendencies (or forking their project and doing this yourself).\n\t *\n\t * # Packages were duplicated in `node_modules`\n\t *\n\t * In some situations, especially when calling `npm install` multiple times, it may happen\n\t * that npm will not correctly \"deduplicate\" packages.\n\t *\n\t * Normally, npm deduplicates all packages so, for example, `@ckeditor/ckeditor5-core` is installed only once in `node_modules/`.\n\t * However, it is known to fail to do so from time to time.\n\t *\n\t * We recommend checking if any of the steps listed below help:\n\t *\n\t * * `rm -rf node_modules && npm install` to make sure you have a clean `node_modules/` directory. This step\n\t * is known to help in most cases.\n\t * * If you use `yarn.lock` or `package-lock.json`, remove it before `npm install`.\n\t * * Check whether all CKEditor 5 packages are up to date and reinstall them\n\t * if you changed anything (`rm -rf node_modules && npm install`).\n\t *\n\t * If all packages are correct and compatible with each other, the steps above are known to help. If not, you may\n\t * try to check with `npm ls` how many times packages like `@ckeditor/ckeditor5-core`, `@ckeditor/ckeditor5-engine` and\n\t *`@ckeditor/ckeditor5-utils` are installed. If more than once, verify which package causes that.\n\t *\n\t * @error ckeditor-duplicated-modules\n\t */\n\tthrow new CKEditorError(\n\t\t'ckeditor-duplicated-modules: Some CKEditor 5 modules are duplicated.',\n\t\tnull\n\t);\n} else {\n\twindowOrGlobal.CKEDITOR_VERSION = version;\n}\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import root from './_root.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nexport default cloneBuffer;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./heading.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nexport default stubFalse;\n","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n */\n\n;(function() {\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^( *[-*_]){3,} *(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n  nptable: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  blockquote: /^( *>[^\\n]+(\\n(?!def)[^\\n]+)*\\n*)+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,\n  table: noop,\n  paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\n  text: /^[^\\n]+/\n};\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = replace(block.item, 'gm')\n  (/bull/g, block.bullet)\n  ();\n\nblock.list = replace(block.list)\n  (/bull/g, block.bullet)\n  ('hr', '\\\\n+(?=\\\\1?(?:[-*_] *){3,}(?:\\\\n+|$))')\n  ('def', '\\\\n+(?=' + block.def.source + ')')\n  ();\n\nblock.blockquote = replace(block.blockquote)\n  ('def', block.def)\n  ();\n\nblock._tag = '(?!(?:'\n  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\n  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\n  + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b';\n\nblock.html = replace(block.html)\n  ('comment', /<!--[\\s\\S]*?-->/)\n  ('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n  ('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)\n  (/tag/g, block._tag)\n  ();\n\nblock.paragraph = replace(block.paragraph)\n  ('hr', block.hr)\n  ('heading', block.heading)\n  ('lheading', block.lheading)\n  ('blockquote', block.blockquote)\n  ('tag', '<' + block._tag)\n  ('def', block.def)\n  ();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\s*\\1 *(?:\\n+|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = replace(block.paragraph)\n  ('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  ();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n  table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = {};\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top, bq) {\n  var src = src.replace(/^ +$/gm, '')\n    , next\n    , loose\n    , cap\n    , bull\n    , b\n    , item\n    , space\n    , i\n    , l;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? cap.replace(/\\n+$/, '')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i].split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top, true);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n\n      this.tokens.push({\n        type: 'list_start',\n        ordered: bull.length > 1\n      });\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        this.tokens.push({\n          type: loose\n            ? 'loose_item_start'\n            : 'list_item_start'\n        });\n\n        // Recurse.\n        this.token(item, false, bq);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if ((!bq && top) && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.links[cap[1].toLowerCase()] = {\n        href: cap[2],\n        title: cap[3]\n      };\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i]\n          .replace(/^ *\\| *| *\\| *$/g, '')\n          .split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n  autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\n  url: noop,\n  tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\n  link: /^!?\\[(inside)\\]\\(href\\)/,\n  reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n  nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\n  strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n  em: /^\\b_((?:[^_]|__)+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/\n};\n\ninline._inside = /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\ninline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\ninline.link = replace(inline.link)\n  ('inside', inline._inside)\n  ('href', inline._href)\n  ();\n\ninline.reflink = replace(inline.reflink)\n  ('inside', inline._inside)\n  ();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: replace(inline.escape)('])', '~|])')(),\n  url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\n  del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n  text: replace(inline.text)\n    (']|', '~]|')\n    ('|', '|https?://|')\n    ()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: replace(inline.br)('{2,}', '*')(),\n  text: replace(inline.gfm.text)('{2,}', '*')()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer;\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new\n      Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  } else if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = ''\n    , link\n    , text\n    , href\n    , cap;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = cap[1].charAt(6) === ':'\n          ? this.mangle(cap[1].substring(7))\n          : this.mangle(cap[1]);\n        href = this.mangle('mailto:') + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      src = src.substring(cap[0].length);\n      text = escape(cap[1]);\n      href = text;\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0]\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      out += this.outputLink(cap, {\n        href: cap[2],\n        title: cap[3]\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2], true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.text(escape(this.smartypants(cap[0])));\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = escape(link.href)\n    , title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = ''\n    , l = text.length\n    , i = 0\n    , ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || { };\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '\\n</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '\\n</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  return '<h'\n    + level\n    + ' id=\"'\n    + this.options.headerPrefix\n    + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n    + '\">'\n    + text\n    + '</h'\n    + level\n    + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered) {\n  var type = ordered ? 'ol' : 'ul';\n  return '<' + type + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + '<tbody>\\n'\n    + body\n    + '</tbody>\\n'\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return '';\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0) {\n      return '';\n    }\n  }\n  var out = '<a href=\"' + href + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer;\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options, renderer) {\n  var parser = new Parser(options, renderer);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options, this.renderer);\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        this.token.text);\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = ''\n        , body = ''\n        , i\n        , row\n        , cell\n        , flags\n        , j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        flags = { header: true, align: this.token.align[i] };\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      var body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      var body = ''\n        , ordered = this.token.ordered;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered);\n    }\n    case 'list_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'loose_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      var html = !this.token.pre && !this.options.pedantic\n        ? this.inline.output(this.token.text)\n        : this.token.text;\n      return this.renderer.html(html);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n\t// explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/g, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction replace(regex, opt) {\n  regex = regex.source;\n  opt = opt || '';\n  return function self(name, val) {\n    if (!name) return new RegExp(regex, opt);\n    val = val.source || val;\n    val = val.replace(/(^|[^\\[])\\^/g, '$1');\n    regex = regex.replace(name, val);\n    return self;\n  };\n}\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1\n    , target\n    , key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight\n      , tokens\n      , pending\n      , i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/chjj/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occured:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.defaults = {\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  sanitizer: null,\n  mangle: true,\n  smartLists: false,\n  silent: false,\n  highlight: null,\n  langPrefix: 'lang-',\n  smartypants: false,\n  headerPrefix: '',\n  renderer: new Renderer,\n  xhtml: false\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  this.marked = marked;\n}\n\n}).call(function() {\n  return this || (typeof window !== 'undefined' ? window : global);\n}());\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.toMarkdown = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\t/*\n\t * to-markdown - an HTML to Markdown converter\n\t *\n\t * Copyright 2011+, Dom Christie\n\t * Licenced under the MIT licence\n\t *\n\t */\n\n\t'use strict'\n\n\tvar toMarkdown\n\tvar converters\n\tvar mdConverters = require('./lib/md-converters')\n\tvar gfmConverters = require('./lib/gfm-converters')\n\tvar HtmlParser = require('./lib/html-parser')\n\tvar collapse = require('collapse-whitespace')\n\n\t/*\n\t * Utilities\n\t */\n\n\tvar blocks = ['address', 'article', 'aside', 'audio', 'blockquote', 'body',\n\t\t'canvas', 'center', 'dd', 'dir', 'div', 'dl', 'dt', 'fieldset', 'figcaption',\n\t\t'figure', 'footer', 'form', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6',\n\t\t'header', 'hgroup', 'hr', 'html', 'isindex', 'li', 'main', 'menu', 'nav',\n\t\t'noframes', 'noscript', 'ol', 'output', 'p', 'pre', 'section', 'table',\n\t\t'tbody', 'td', 'tfoot', 'th', 'thead', 'tr', 'ul'\n\t]\n\n\tfunction isBlock (node) {\n\t\treturn blocks.indexOf(node.nodeName.toLowerCase()) !== -1\n\t}\n\n\tvar voids = [\n\t\t'area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input',\n\t\t'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr'\n\t]\n\n\tfunction isVoid (node) {\n\t\treturn voids.indexOf(node.nodeName.toLowerCase()) !== -1\n\t}\n\n\tfunction htmlToDom (string) {\n\t\tvar tree = new HtmlParser().parseFromString(string, 'text/html')\n\t\tcollapse(tree.documentElement, isBlock)\n\t\treturn tree\n\t}\n\n\t/*\n\t * Flattens DOM tree into single array\n\t */\n\n\tfunction bfsOrder (node) {\n\t\tvar inqueue = [node]\n\t\tvar outqueue = []\n\t\tvar elem\n\t\tvar children\n\t\tvar i\n\n\t\twhile (inqueue.length > 0) {\n\t\t\telem = inqueue.shift()\n\t\t\toutqueue.push(elem)\n\t\t\tchildren = elem.childNodes\n\t\t\tfor (i = 0; i < children.length; i++) {\n\t\t\t\tif (children[i].nodeType === 1) inqueue.push(children[i])\n\t\t\t}\n\t\t}\n\t\toutqueue.shift()\n\t\treturn outqueue\n\t}\n\n\t/*\n\t * Contructs a Markdown string of replacement text for a given node\n\t */\n\n\tfunction getContent (node) {\n\t\tvar text = ''\n\t\tfor (var i = 0; i < node.childNodes.length; i++) {\n\t\t\tif (node.childNodes[i].nodeType === 1) {\n\t\t\t\ttext += node.childNodes[i]._replacement\n\t\t\t} else if (node.childNodes[i].nodeType === 3) {\n\t\t\t\ttext += node.childNodes[i].data\n\t\t\t} else continue\n\t\t}\n\t\treturn text\n\t}\n\n\t/*\n\t * Returns the HTML string of an element with its contents converted\n\t */\n\n\tfunction outer (node, content) {\n\t\treturn node.cloneNode(false).outerHTML.replace('><', '>' + content + '<')\n\t}\n\n\tfunction canConvert (node, filter) {\n\t\tif (typeof filter === 'string') {\n\t\t\treturn filter === node.nodeName.toLowerCase()\n\t\t}\n\t\tif (Array.isArray(filter)) {\n\t\t\treturn filter.indexOf(node.nodeName.toLowerCase()) !== -1\n\t\t} else if (typeof filter === 'function') {\n\t\t\treturn filter.call(toMarkdown, node)\n\t\t} else {\n\t\t\tthrow new TypeError('`filter` needs to be a string, array, or function')\n\t\t}\n\t}\n\n\tfunction isFlankedByWhitespace (side, node) {\n\t\tvar sibling\n\t\tvar regExp\n\t\tvar isFlanked\n\n\t\tif (side === 'left') {\n\t\t\tsibling = node.previousSibling\n\t\t\tregExp = / $/\n\t\t} else {\n\t\t\tsibling = node.nextSibling\n\t\t\tregExp = /^ /\n\t\t}\n\n\t\tif (sibling) {\n\t\t\tif (sibling.nodeType === 3) {\n\t\t\t\tisFlanked = regExp.test(sibling.nodeValue)\n\t\t\t} else if (sibling.nodeType === 1 && !isBlock(sibling)) {\n\t\t\t\tisFlanked = regExp.test(sibling.textContent)\n\t\t\t}\n\t\t}\n\t\treturn isFlanked\n\t}\n\n\tfunction flankingWhitespace (node) {\n\t\tvar leading = ''\n\t\tvar trailing = ''\n\n\t\tif (!isBlock(node)) {\n\t\t\tvar hasLeading = /^[ \\r\\n\\t]/.test(node.innerHTML)\n\t\t\tvar hasTrailing = /[ \\r\\n\\t]$/.test(node.innerHTML)\n\n\t\t\tif (hasLeading && !isFlankedByWhitespace('left', node)) {\n\t\t\t\tleading = ' '\n\t\t\t}\n\t\t\tif (hasTrailing && !isFlankedByWhitespace('right', node)) {\n\t\t\t\ttrailing = ' '\n\t\t\t}\n\t\t}\n\n\t\treturn { leading: leading, trailing: trailing }\n\t}\n\n\t/*\n\t * Finds a Markdown converter, gets the replacement, and sets it on\n\t * `_replacement`\n\t */\n\n\tfunction process (node) {\n\t\tvar replacement\n\t\tvar content = getContent(node)\n\n\t\t// Remove blank nodes\n\t\tif (!isVoid(node) && !/A|TH|TD/.test(node.nodeName) && /^\\s*$/i.test(content)) {\n\t\t\tnode._replacement = ''\n\t\t\treturn\n\t\t}\n\n\t\tfor (var i = 0; i < converters.length; i++) {\n\t\t\tvar converter = converters[i]\n\n\t\t\tif (canConvert(node, converter.filter)) {\n\t\t\t\tif (typeof converter.replacement !== 'function') {\n\t\t\t\t\tthrow new TypeError(\n\t\t\t\t\t\t'`replacement` needs to be a function that returns a string'\n\t\t\t\t\t)\n\t\t\t\t}\n\n\t\t\t\tvar whitespace = flankingWhitespace(node)\n\n\t\t\t\tif (whitespace.leading || whitespace.trailing) {\n\t\t\t\t\tcontent = content.trim()\n\t\t\t\t}\n\t\t\t\treplacement = whitespace.leading +\n\t\t\t\t\tconverter.replacement.call(toMarkdown, content, node) +\n\t\t\t\t\twhitespace.trailing\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tnode._replacement = replacement\n\t}\n\n\ttoMarkdown = function (input, options) {\n\t\toptions = options || {}\n\n\t\tif (typeof input !== 'string') {\n\t\t\tthrow new TypeError(input + ' is not a string')\n\t\t}\n\n\t\t// Escape potential ol triggers\n\t\tinput = input.replace(/(\\d+)\\. /g, '$1\\\\. ')\n\n\t\tvar clone = htmlToDom(input).body\n\t\tvar nodes = bfsOrder(clone)\n\t\tvar output\n\n\t\tconverters = mdConverters.slice(0)\n\t\tif (options.gfm) {\n\t\t\tconverters = gfmConverters.concat(converters)\n\t\t}\n\n\t\tif (options.converters) {\n\t\t\tconverters = options.converters.concat(converters)\n\t\t}\n\n\t\t// Process through nodes in reverse (so deepest child elements are first).\n\t\tfor (var i = nodes.length - 1; i >= 0; i--) {\n\t\t\tprocess(nodes[i])\n\t\t}\n\t\toutput = getContent(clone)\n\n\t\treturn output.replace(/^[\\t\\r\\n]+|[\\t\\r\\n\\s]+$/g, '')\n\t\t\t.replace(/\\n\\s+\\n/g, '\\n\\n')\n\t\t\t.replace(/\\n{3,}/g, '\\n\\n')\n\t}\n\n\ttoMarkdown.isBlock = isBlock\n\ttoMarkdown.isVoid = isVoid\n\ttoMarkdown.outer = outer\n\n\tmodule.exports = toMarkdown\n\n},{\"./lib/gfm-converters\":2,\"./lib/html-parser\":3,\"./lib/md-converters\":4,\"collapse-whitespace\":7}],2:[function(require,module,exports){\n\t'use strict'\n\n\tfunction cell (content, node) {\n\t\tvar index = Array.prototype.indexOf.call(node.parentNode.childNodes, node)\n\t\tvar prefix = ' '\n\t\tif (index === 0) prefix = '| '\n\t\treturn prefix + content + ' |'\n\t}\n\n\tvar highlightRegEx = /highlight highlight-(\\S+)/\n\n\tmodule.exports = [\n\t\t{\n\t\t\tfilter: 'br',\n\t\t\treplacement: function () {\n\t\t\t\treturn '\\n'\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tfilter: ['del', 's', 'strike'],\n\t\t\treplacement: function (content) {\n\t\t\t\treturn '~~' + content + '~~'\n\t\t\t}\n\t\t},\n\n\t\t{\n\t\t\tfilter: function (node) {\n\t\t\t\treturn node.type === 'checkbox' && node.parentNode.nodeName === 'LI'\n\t\t\t},\n\t\t\treplacement: function (content, node) {\n\t\t\t\treturn (node.checked ? '[x]' : '[ ]') + ' '\n\t\t\t}\n\t\t},\n\n\t\t{\n\t\t\tfilter: ['th', 'td'],\n\t\t\treplacement: function (content, node) {\n\t\t\t\treturn cell(content, node)\n\t\t\t}\n\t\t},\n\n\t\t{\n\t\t\tfilter: 'tr',\n\t\t\treplacement: function (content, node) {\n\t\t\t\tvar borderCells = ''\n\t\t\t\tvar alignMap = { left: ':--', right: '--:', center: ':-:' }\n\n\t\t\t\tif (node.parentNode.nodeName === 'THEAD') {\n\t\t\t\t\tfor (var i = 0; i < node.childNodes.length; i++) {\n\t\t\t\t\t\tvar align = node.childNodes[i].attributes.align\n\t\t\t\t\t\tvar border = '---'\n\n\t\t\t\t\t\tif (align) border = alignMap[align.value] || border\n\n\t\t\t\t\t\tborderCells += cell(border, node.childNodes[i])\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn '\\n' + content + (borderCells ? '\\n' + borderCells : '')\n\t\t\t}\n\t\t},\n\n\t\t{\n\t\t\tfilter: 'table',\n\t\t\treplacement: function (content) {\n\t\t\t\treturn '\\n\\n' + content + '\\n\\n'\n\t\t\t}\n\t\t},\n\n\t\t{\n\t\t\tfilter: ['thead', 'tbody', 'tfoot'],\n\t\t\treplacement: function (content) {\n\t\t\t\treturn content\n\t\t\t}\n\t\t},\n\n\t\t// Fenced code blocks\n\t\t{\n\t\t\tfilter: function (node) {\n\t\t\t\treturn node.nodeName === 'PRE' &&\n\t\t\t\t\tnode.firstChild &&\n\t\t\t\t\tnode.firstChild.nodeName === 'CODE'\n\t\t\t},\n\t\t\treplacement: function (content, node) {\n\t\t\t\treturn '\\n\\n```\\n' + node.firstChild.textContent + '\\n```\\n\\n'\n\t\t\t}\n\t\t},\n\n\t\t// Syntax-highlighted code blocks\n\t\t{\n\t\t\tfilter: function (node) {\n\t\t\t\treturn node.nodeName === 'PRE' &&\n\t\t\t\t\tnode.parentNode.nodeName === 'DIV' &&\n\t\t\t\t\thighlightRegEx.test(node.parentNode.className)\n\t\t\t},\n\t\t\treplacement: function (content, node) {\n\t\t\t\tvar language = node.parentNode.className.match(highlightRegEx)[1]\n\t\t\t\treturn '\\n\\n```' + language + '\\n' + node.textContent + '\\n```\\n\\n'\n\t\t\t}\n\t\t},\n\n\t\t{\n\t\t\tfilter: function (node) {\n\t\t\t\treturn node.nodeName === 'DIV' &&\n\t\t\t\t\thighlightRegEx.test(node.className)\n\t\t\t},\n\t\t\treplacement: function (content) {\n\t\t\t\treturn '\\n\\n' + content + '\\n\\n'\n\t\t\t}\n\t\t}\n\t]\n\n},{}],3:[function(require,module,exports){\n\t/*\n\t * Set up window for Node.js\n\t */\n\n\tvar _window = (typeof window !== 'undefined' ? window : this)\n\n\t/*\n\t * Parsing HTML strings\n\t */\n\n\tfunction canParseHtmlNatively () {\n\t\tvar Parser = _window.DOMParser\n\t\tvar canParse = false\n\n\t\t// Adapted from https://gist.github.com/1129031\n\t\t// Firefox/Opera/IE throw errors on unsupported types\n\t\ttry {\n\t\t\t// WebKit returns null on unsupported types\n\t\t\tif (new Parser().parseFromString('', 'text/html')) {\n\t\t\t\tcanParse = true\n\t\t\t}\n\t\t} catch (e) {}\n\n\t\treturn canParse\n\t}\n\n\tfunction createHtmlParser () {\n\t\tvar Parser = function () {}\n\n\t\t// For Node.js environments\n\t\tif (typeof document === 'undefined') {\n\t\t\tvar jsdom = require('jsdom')\n\t\t\tParser.prototype.parseFromString = function (string) {\n\t\t\t\treturn jsdom.jsdom(string, {\n\t\t\t\t\tplugins: {\n\t\t\t\t\t\tFetchExternalResources: [],\n\t\t\t\t\t\tProcessExternalResources: false\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t} else {\n\t\t\tif (!shouldUseActiveX()) {\n\t\t\t\tParser.prototype.parseFromString = function (string) {\n\t\t\t\t\tvar doc = document.implementation.createHTMLDocument('')\n\t\t\t\t\tdoc.open()\n\t\t\t\t\tdoc.write(string)\n\t\t\t\t\tdoc.close()\n\t\t\t\t\treturn doc\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tParser.prototype.parseFromString = function (string) {\n\t\t\t\t\tvar doc = new window.ActiveXObject('htmlfile')\n\t\t\t\t\tdoc.designMode = 'on' // disable on-page scripts\n\t\t\t\t\tdoc.open()\n\t\t\t\t\tdoc.write(string)\n\t\t\t\t\tdoc.close()\n\t\t\t\t\treturn doc\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Parser\n\t}\n\n\tfunction shouldUseActiveX () {\n\t\tvar useActiveX = false\n\n\t\ttry {\n\t\t\tdocument.implementation.createHTMLDocument('').open()\n\t\t} catch (e) {\n\t\t\tif (window.ActiveXObject) useActiveX = true\n\t\t}\n\n\t\treturn useActiveX\n\t}\n\n\tmodule.exports = canParseHtmlNatively() ? _window.DOMParser : createHtmlParser()\n\n},{\"jsdom\":6}],4:[function(require,module,exports){\n\t'use strict'\n\n\tmodule.exports = [\n\t\t{\n\t\t\tfilter: 'p',\n\t\t\treplacement: function (content) {\n\t\t\t\treturn '\\n\\n' + content + '\\n\\n'\n\t\t\t}\n\t\t},\n\n\t\t{\n\t\t\tfilter: 'br',\n\t\t\treplacement: function () {\n\t\t\t\treturn '  \\n'\n\t\t\t}\n\t\t},\n\n\t\t{\n\t\t\tfilter: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n\t\t\treplacement: function (content, node) {\n\t\t\t\tvar hLevel = node.nodeName.charAt(1)\n\t\t\t\tvar hPrefix = ''\n\t\t\t\tfor (var i = 0; i < hLevel; i++) {\n\t\t\t\t\thPrefix += '#'\n\t\t\t\t}\n\t\t\t\treturn '\\n\\n' + hPrefix + ' ' + content + '\\n\\n'\n\t\t\t}\n\t\t},\n\n\t\t{\n\t\t\tfilter: 'hr',\n\t\t\treplacement: function () {\n\t\t\t\treturn '\\n\\n* * *\\n\\n'\n\t\t\t}\n\t\t},\n\n\t\t{\n\t\t\tfilter: ['em', 'i'],\n\t\t\treplacement: function (content) {\n\t\t\t\treturn '_' + content + '_'\n\t\t\t}\n\t\t},\n\n\t\t{\n\t\t\tfilter: ['strong', 'b'],\n\t\t\treplacement: function (content) {\n\t\t\t\treturn '**' + content + '**'\n\t\t\t}\n\t\t},\n\n\t\t// Inline code\n\t\t{\n\t\t\tfilter: function (node) {\n\t\t\t\tvar hasSiblings = node.previousSibling || node.nextSibling\n\t\t\t\tvar isCodeBlock = node.parentNode.nodeName === 'PRE' && !hasSiblings\n\n\t\t\t\treturn node.nodeName === 'CODE' && !isCodeBlock\n\t\t\t},\n\t\t\treplacement: function (content) {\n\t\t\t\treturn '`' + content + '`'\n\t\t\t}\n\t\t},\n\n\t\t{\n\t\t\tfilter: function (node) {\n\t\t\t\treturn node.nodeName === 'A' && node.getAttribute('href')\n\t\t\t},\n\t\t\treplacement: function (content, node) {\n\t\t\t\tvar titlePart = node.title ? ' \"' + node.title + '\"' : ''\n\t\t\t\treturn '[' + content + '](' + node.getAttribute('href') + titlePart + ')'\n\t\t\t}\n\t\t},\n\n\t\t{\n\t\t\tfilter: 'img',\n\t\t\treplacement: function (content, node) {\n\t\t\t\tvar alt = node.alt || ''\n\t\t\t\tvar src = node.getAttribute('src') || ''\n\t\t\t\tvar title = node.title || ''\n\t\t\t\tvar titlePart = title ? ' \"' + title + '\"' : ''\n\t\t\t\treturn src ? '![' + alt + ']' + '(' + src + titlePart + ')' : ''\n\t\t\t}\n\t\t},\n\n\t\t// Code blocks\n\t\t{\n\t\t\tfilter: function (node) {\n\t\t\t\treturn node.nodeName === 'PRE' && node.firstChild.nodeName === 'CODE'\n\t\t\t},\n\t\t\treplacement: function (content, node) {\n\t\t\t\treturn '\\n\\n    ' + node.firstChild.textContent.replace(/\\n/g, '\\n    ') + '\\n\\n'\n\t\t\t}\n\t\t},\n\n\t\t{\n\t\t\tfilter: 'blockquote',\n\t\t\treplacement: function (content) {\n\t\t\t\tcontent = content.trim()\n\t\t\t\tcontent = content.replace(/\\n{3,}/g, '\\n\\n')\n\t\t\t\tcontent = content.replace(/^/gm, '> ')\n\t\t\t\treturn '\\n\\n' + content + '\\n\\n'\n\t\t\t}\n\t\t},\n\n\t\t{\n\t\t\tfilter: 'li',\n\t\t\treplacement: function (content, node) {\n\t\t\t\tcontent = content.replace(/^\\s+/, '').replace(/\\n/gm, '\\n    ')\n\t\t\t\tvar prefix = '*   '\n\t\t\t\tvar parent = node.parentNode\n\t\t\t\tvar index = Array.prototype.indexOf.call(parent.children, node) + 1\n\n\t\t\t\tprefix = /ol/i.test(parent.nodeName) ? index + '.  ' : '*   '\n\t\t\t\treturn prefix + content\n\t\t\t}\n\t\t},\n\n\t\t{\n\t\t\tfilter: ['ul', 'ol'],\n\t\t\treplacement: function (content, node) {\n\t\t\t\tvar strings = []\n\t\t\t\tfor (var i = 0; i < node.childNodes.length; i++) {\n\t\t\t\t\tstrings.push(node.childNodes[i]._replacement)\n\t\t\t\t}\n\n\t\t\t\tif (/li/i.test(node.parentNode.nodeName)) {\n\t\t\t\t\treturn '\\n' + strings.join('\\n')\n\t\t\t\t}\n\t\t\t\treturn '\\n\\n' + strings.join('\\n') + '\\n\\n'\n\t\t\t}\n\t\t},\n\n\t\t{\n\t\t\tfilter: function (node) {\n\t\t\t\treturn this.isBlock(node)\n\t\t\t},\n\t\t\treplacement: function (content, node) {\n\t\t\t\treturn '\\n\\n' + this.outer(node, content) + '\\n\\n'\n\t\t\t}\n\t\t},\n\n\t\t// Anything else!\n\t\t{\n\t\t\tfilter: function () {\n\t\t\t\treturn true\n\t\t\t},\n\t\t\treplacement: function (content, node) {\n\t\t\t\treturn this.outer(node, content)\n\t\t\t}\n\t\t}\n\t]\n\n},{}],5:[function(require,module,exports){\n\t/**\n\t * This file automatically generated from `build.js`.\n\t * Do not manually edit.\n\t */\n\n\tmodule.exports = [\n\t\t\"address\",\n\t\t\"article\",\n\t\t\"aside\",\n\t\t\"audio\",\n\t\t\"blockquote\",\n\t\t\"canvas\",\n\t\t\"dd\",\n\t\t\"div\",\n\t\t\"dl\",\n\t\t\"fieldset\",\n\t\t\"figcaption\",\n\t\t\"figure\",\n\t\t\"footer\",\n\t\t\"form\",\n\t\t\"h1\",\n\t\t\"h2\",\n\t\t\"h3\",\n\t\t\"h4\",\n\t\t\"h5\",\n\t\t\"h6\",\n\t\t\"header\",\n\t\t\"hgroup\",\n\t\t\"hr\",\n\t\t\"main\",\n\t\t\"nav\",\n\t\t\"noscript\",\n\t\t\"ol\",\n\t\t\"output\",\n\t\t\"p\",\n\t\t\"pre\",\n\t\t\"section\",\n\t\t\"table\",\n\t\t\"tfoot\",\n\t\t\"ul\",\n\t\t\"video\"\n\t];\n\n},{}],6:[function(require,module,exports){\n\n},{}],7:[function(require,module,exports){\n\t'use strict';\n\n\tvar voidElements = require('void-elements');\n\tObject.keys(voidElements).forEach(function (name) {\n\t\tvoidElements[name.toUpperCase()] = 1;\n\t});\n\n\tvar blockElements = {};\n\trequire('block-elements').forEach(function (name) {\n\t\tblockElements[name.toUpperCase()] = 1;\n\t});\n\n\t/**\n\t * isBlockElem(node) determines if the given node is a block element.\n\t *\n\t * @param {Node} node\n\t * @returns {Boolean}\n\t */\n\tfunction isBlockElem(node) {\n\t\treturn !!(node && blockElements[node.nodeName]);\n\t}\n\n\t/**\n\t * isVoid(node) determines if the given node is a void element.\n\t *\n\t * @param {Node} node\n\t * @returns {Boolean}\n\t */\n\tfunction isVoid(node) {\n\t\treturn !!(node && voidElements[node.nodeName]);\n\t}\n\n\t/**\n\t * whitespace(elem [, isBlock]) removes extraneous whitespace from an\n\t * the given element. The function isBlock may optionally be passed in\n\t * to determine whether or not an element is a block element; if none\n\t * is provided, defaults to using the list of block elements provided\n\t * by the `block-elements` module.\n\t *\n\t * @param {Node} elem\n\t * @param {Function} blockTest\n\t */\n\tfunction collapseWhitespace(elem, isBlock) {\n\t\tif (!elem.firstChild || elem.nodeName === 'PRE') return;\n\n\t\tif (typeof isBlock !== 'function') {\n\t\t\tisBlock = isBlockElem;\n\t\t}\n\n\t\tvar prevText = null;\n\t\tvar prevVoid = false;\n\n\t\tvar prev = null;\n\t\tvar node = next(prev, elem);\n\n\t\twhile (node !== elem) {\n\t\t\tif (node.nodeType === 3) {\n\t\t\t\t// Node.TEXT_NODE\n\t\t\t\tvar text = node.data.replace(/[ \\r\\n\\t]+/g, ' ');\n\n\t\t\t\tif ((!prevText || / $/.test(prevText.data)) && !prevVoid && text[0] === ' ') {\n\t\t\t\t\ttext = text.substr(1);\n\t\t\t\t}\n\n\t\t\t\t// `text` might be empty at this point.\n\t\t\t\tif (!text) {\n\t\t\t\t\tnode = remove(node);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tnode.data = text;\n\t\t\t\tprevText = node;\n\t\t\t} else if (node.nodeType === 1) {\n\t\t\t\t// Node.ELEMENT_NODE\n\t\t\t\tif (isBlock(node) || node.nodeName === 'BR') {\n\t\t\t\t\tif (prevText) {\n\t\t\t\t\t\tprevText.data = prevText.data.replace(/ $/, '');\n\t\t\t\t\t}\n\n\t\t\t\t\tprevText = null;\n\t\t\t\t\tprevVoid = false;\n\t\t\t\t} else if (isVoid(node)) {\n\t\t\t\t\t// Avoid trimming space around non-block, non-BR void elements.\n\t\t\t\t\tprevText = null;\n\t\t\t\t\tprevVoid = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode = remove(node);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar nextNode = next(prev, node);\n\t\t\tprev = node;\n\t\t\tnode = nextNode;\n\t\t}\n\n\t\tif (prevText) {\n\t\t\tprevText.data = prevText.data.replace(/ $/, '');\n\t\t\tif (!prevText.data) {\n\t\t\t\tremove(prevText);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * remove(node) removes the given node from the DOM and returns the\n\t * next node in the sequence.\n\t *\n\t * @param {Node} node\n\t * @returns {Node} node\n\t */\n\tfunction remove(node) {\n\t\tvar next = node.nextSibling || node.parentNode;\n\n\t\tnode.parentNode.removeChild(node);\n\n\t\treturn next;\n\t}\n\n\t/**\n\t * next(prev, current) returns the next node in the sequence, given the\n\t * current and previous nodes.\n\t *\n\t * @param {Node} prev\n\t * @param {Node} current\n\t * @returns {Node}\n\t */\n\tfunction next(prev, current) {\n\t\tif (prev && prev.parentNode === current || current.nodeName === 'PRE') {\n\t\t\treturn current.nextSibling || current.parentNode;\n\t\t}\n\n\t\treturn current.firstChild || current.nextSibling || current.parentNode;\n\t}\n\n\tmodule.exports = collapseWhitespace;\n\n},{\"block-elements\":5,\"void-elements\":8}],8:[function(require,module,exports){\n\t/**\n\t * This file automatically generated from `pre-publish.js`.\n\t * Do not manually edit.\n\t */\n\n\tmodule.exports = {\n\t\t\"area\": true,\n\t\t\"base\": true,\n\t\t\"br\": true,\n\t\t\"col\": true,\n\t\t\"embed\": true,\n\t\t\"hr\": true,\n\t\t\"img\": true,\n\t\t\"input\": true,\n\t\t\"keygen\": true,\n\t\t\"link\": true,\n\t\t\"menuitem\": true,\n\t\t\"meta\": true,\n\t\t\"param\": true,\n\t\t\"source\": true,\n\t\t\"track\": true,\n\t\t\"wbr\": true\n\t};\n\n},{}]},{},[1])(1)\n});\n","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./placeholder.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \".ck.ck-placeholder:before,.ck .ck-placeholder:before{content:attr(data-placeholder);pointer-events:none}.ck.ck-read-only .ck-placeholder:before{display:none}.ck.ck-placeholder:before,.ck .ck-placeholder:before{cursor:text;color:var(--ck-color-engine-placeholder-text)}\"","var api = require(\"!../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../postcss-loader/src/index.js??ref--5-1!./globals.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \".ck-hidden{display:none!important}.ck.ck-reset,.ck.ck-reset_all,.ck.ck-reset_all *{box-sizing:border-box;width:auto;height:auto;position:static}:root{--ck-z-default:1;--ck-z-modal:calc(var(--ck-z-default) + 999);--ck-color-base-foreground:#fafafa;--ck-color-base-background:#fff;--ck-color-base-border:#c4c4c4;--ck-color-base-action:#61b045;--ck-color-base-focus:#6cb5f9;--ck-color-base-text:#333;--ck-color-base-active:#198cf0;--ck-color-base-active-focus:#0e7fe1;--ck-color-base-error:#db3700;--ck-color-focus-border:#1f89e5;--ck-color-focus-outer-shadow:#bcdefb;--ck-color-focus-disabled-shadow:rgba(119,186,248,0.3);--ck-color-focus-error-shadow:rgba(255,64,31,0.3);--ck-color-text:var(--ck-color-base-text);--ck-color-shadow-drop:rgba(0,0,0,0.15);--ck-color-shadow-drop-active:rgba(0,0,0,0.2);--ck-color-shadow-inner:rgba(0,0,0,0.1);--ck-color-button-default-background:transparent;--ck-color-button-default-hover-background:#e6e6e6;--ck-color-button-default-active-background:#d9d9d9;--ck-color-button-default-active-shadow:#bfbfbf;--ck-color-button-default-disabled-background:transparent;--ck-color-button-on-background:#dedede;--ck-color-button-on-hover-background:#c4c4c4;--ck-color-button-on-active-background:#bababa;--ck-color-button-on-active-shadow:#a1a1a1;--ck-color-button-on-disabled-background:#dedede;--ck-color-button-action-background:var(--ck-color-base-action);--ck-color-button-action-hover-background:#579e3d;--ck-color-button-action-active-background:#53973b;--ck-color-button-action-active-shadow:#498433;--ck-color-button-action-disabled-background:#7ec365;--ck-color-button-action-text:var(--ck-color-base-background);--ck-color-button-save:#008a00;--ck-color-button-cancel:#db3700;--ck-color-switch-button-off-background:#b0b0b0;--ck-color-switch-button-off-hover-background:#a3a3a3;--ck-color-switch-button-on-background:var(--ck-color-button-action-background);--ck-color-switch-button-on-hover-background:#579e3d;--ck-color-switch-button-inner-background:var(--ck-color-base-background);--ck-color-switch-button-inner-shadow:rgba(0,0,0,0.1);--ck-color-dropdown-panel-background:var(--ck-color-base-background);--ck-color-dropdown-panel-border:var(--ck-color-base-border);--ck-color-input-background:var(--ck-color-base-background);--ck-color-input-border:#c7c7c7;--ck-color-input-error-border:var(--ck-color-base-error);--ck-color-input-text:var(--ck-color-base-text);--ck-color-input-disabled-background:#f2f2f2;--ck-color-input-disabled-border:#c7c7c7;--ck-color-input-disabled-text:#5c5c5c;--ck-color-list-background:var(--ck-color-base-background);--ck-color-list-button-hover-background:var(--ck-color-button-default-hover-background);--ck-color-list-button-on-background:var(--ck-color-base-active);--ck-color-list-button-on-background-focus:var(--ck-color-base-active-focus);--ck-color-list-button-on-text:var(--ck-color-base-background);--ck-color-panel-background:var(--ck-color-base-background);--ck-color-panel-border:var(--ck-color-base-border);--ck-color-toolbar-background:var(--ck-color-base-foreground);--ck-color-toolbar-border:var(--ck-color-base-border);--ck-color-tooltip-background:var(--ck-color-base-text);--ck-color-tooltip-text:var(--ck-color-base-background);--ck-color-engine-placeholder-text:#707070;--ck-color-upload-bar-background:#6cb5f9;--ck-color-link-default:#0000f0;--ck-color-link-selected-background:rgba(31,177,255,0.1);--ck-disabled-opacity:.5;--ck-focus-outer-shadow-geometry:0 0 0 3px;--ck-focus-outer-shadow:var(--ck-focus-outer-shadow-geometry) var(--ck-color-focus-outer-shadow);--ck-focus-disabled-outer-shadow:var(--ck-focus-outer-shadow-geometry) var(--ck-color-focus-disabled-shadow);--ck-focus-error-outer-shadow:var(--ck-focus-outer-shadow-geometry) var(--ck-color-focus-error-shadow);--ck-focus-ring:1px solid var(--ck-color-focus-border);--ck-font-size-base:13px;--ck-line-height-base:1.84615;--ck-font-face:Helvetica,Arial,Tahoma,Verdana,Sans-Serif;--ck-font-size-tiny:0.7em;--ck-font-size-small:0.75em;--ck-font-size-normal:1em;--ck-font-size-big:1.4em;--ck-font-size-large:1.8em;--ck-ui-component-min-height:2.3em}.ck.ck-reset,.ck.ck-reset_all,.ck.ck-reset_all *{margin:0;padding:0;border:0;background:transparent;text-decoration:none;vertical-align:middle;transition:none;word-wrap:break-word}.ck.ck-reset_all,.ck.ck-reset_all *{border-collapse:collapse;font:normal normal normal var(--ck-font-size-base)/var(--ck-line-height-base) var(--ck-font-face);color:var(--ck-color-text);text-align:left;white-space:nowrap;cursor:auto;float:none}.ck.ck-reset_all .ck-rtl *{text-align:right}.ck.ck-reset_all iframe{vertical-align:inherit}.ck.ck-reset_all textarea{white-space:pre-wrap}.ck.ck-reset_all input[type=password],.ck.ck-reset_all input[type=text],.ck.ck-reset_all textarea{cursor:text}.ck.ck-reset_all input[type=password][disabled],.ck.ck-reset_all input[type=text][disabled],.ck.ck-reset_all textarea[disabled]{cursor:default}.ck.ck-reset_all fieldset{padding:10px;border:2px groove #dfdee3}.ck.ck-reset_all button::-moz-focus-inner{padding:0;border:0}.ck[dir=rtl],.ck[dir=rtl] .ck{text-align:right}:root{--ck-border-radius:2px;--ck-inner-shadow:2px 2px 3px var(--ck-color-shadow-inner) inset;--ck-drop-shadow:0 1px 2px 1px var(--ck-color-shadow-drop);--ck-drop-shadow-active:0 3px 6px 1px var(--ck-color-shadow-drop-active);--ck-spacing-unit:0.6em;--ck-spacing-large:calc(var(--ck-spacing-unit)*1.5);--ck-spacing-standard:var(--ck-spacing-unit);--ck-spacing-medium:calc(var(--ck-spacing-unit)*0.8);--ck-spacing-small:calc(var(--ck-spacing-unit)*0.5);--ck-spacing-tiny:calc(var(--ck-spacing-unit)*0.3);--ck-spacing-extra-tiny:calc(var(--ck-spacing-unit)*0.16)}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./editorui.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \".ck.ck-editor__editable:not(.ck-editor__nested-editable){border-radius:0}.ck-rounded-corners .ck.ck-editor__editable:not(.ck-editor__nested-editable),.ck.ck-editor__editable:not(.ck-editor__nested-editable).ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-editor__editable:not(.ck-editor__nested-editable).ck-focused{outline:none;border:var(--ck-focus-ring);box-shadow:var(--ck-inner-shadow),0 0}.ck.ck-editor__editable_inline{overflow:auto;padding:0 var(--ck-spacing-standard);border:1px solid transparent}.ck.ck-editor__editable_inline[dir=ltr]{text-align:left}.ck.ck-editor__editable_inline[dir=rtl]{text-align:right}.ck.ck-editor__editable_inline>:first-child{margin-top:var(--ck-spacing-large)}.ck.ck-editor__editable_inline>:last-child{margin-bottom:var(--ck-spacing-large)}.ck.ck-balloon-panel.ck-toolbar-container[class*=arrow_n]:after{border-bottom-color:var(--ck-color-base-foreground)}.ck.ck-balloon-panel.ck-toolbar-container[class*=arrow_s]:after{border-top-color:var(--ck-color-base-foreground)}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./label.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \".ck.ck-label{display:block}.ck.ck-voice-label{display:none}.ck.ck-label{font-weight:700}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./stickypanel.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \".ck.ck-sticky-panel .ck-sticky-panel__content_sticky{z-index:var(--ck-z-modal);position:fixed;top:0}.ck.ck-sticky-panel .ck-sticky-panel__content_sticky_bottom-limit{top:auto;position:absolute}.ck.ck-sticky-panel .ck-sticky-panel__content_sticky{box-shadow:var(--ck-drop-shadow),0 0;border-width:0 1px 1px;border-top-left-radius:0;border-top-right-radius:0}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./dropdown.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \".ck.ck-dropdown{display:inline-block;position:relative}.ck.ck-dropdown .ck-dropdown__arrow{pointer-events:none;z-index:var(--ck-z-default)}.ck.ck-dropdown .ck-button.ck-dropdown__button{width:100%}.ck.ck-dropdown .ck-button.ck-dropdown__button.ck-on .ck-tooltip{display:none}.ck.ck-dropdown .ck-dropdown__panel{-webkit-backface-visibility:hidden;display:none;z-index:var(--ck-z-modal);position:absolute}.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel-visible{display:inline-block}.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_ne,.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_nw{bottom:100%}.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_se,.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_sw{top:100%;bottom:auto}.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_ne,.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_se{left:0}.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_nw,.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_sw{right:0}:root{--ck-dropdown-arrow-size:calc(0.5*var(--ck-icon-size))}.ck.ck-dropdown{font-size:inherit}.ck.ck-dropdown .ck-dropdown__arrow{width:var(--ck-dropdown-arrow-size)}[dir=ltr] .ck.ck-dropdown .ck-dropdown__arrow{right:var(--ck-spacing-standard);margin-left:var(--ck-spacing-small)}[dir=rtl] .ck.ck-dropdown .ck-dropdown__arrow{left:var(--ck-spacing-standard);margin-right:var(--ck-spacing-small)}.ck.ck-dropdown.ck-disabled .ck-dropdown__arrow{opacity:var(--ck-disabled-opacity)}[dir=ltr] .ck.ck-dropdown .ck-button.ck-dropdown__button:not(.ck-button_with-text){padding-left:var(--ck-spacing-small)}[dir=rtl] .ck.ck-dropdown .ck-button.ck-dropdown__button:not(.ck-button_with-text){padding-right:var(--ck-spacing-small)}.ck.ck-dropdown .ck-button.ck-dropdown__button .ck-button__label{width:7em;overflow:hidden;text-overflow:ellipsis}.ck.ck-dropdown .ck-button.ck-dropdown__button.ck-disabled .ck-button__label{opacity:var(--ck-disabled-opacity)}.ck.ck-dropdown .ck-button.ck-dropdown__button.ck-on{border-bottom-left-radius:0;border-bottom-right-radius:0}.ck.ck-dropdown__panel{box-shadow:var(--ck-drop-shadow),0 0;border-radius:0}.ck-rounded-corners .ck.ck-dropdown__panel,.ck.ck-dropdown__panel.ck-rounded-corners{border-radius:var(--ck-border-radius);border-top-left-radius:0}.ck.ck-dropdown__panel{background:var(--ck-color-dropdown-panel-background);border:1px solid var(--ck-color-dropdown-panel-border);bottom:0;min-width:100%}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./icon.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \".ck.ck-icon{vertical-align:middle}:root{--ck-icon-size:calc(var(--ck-line-height-base)*var(--ck-font-size-normal))}.ck.ck-icon{width:var(--ck-icon-size);height:var(--ck-icon-size);font-size:.8333350694em;will-change:transform}.ck.ck-icon,.ck.ck-icon *{color:inherit;cursor:inherit}.ck.ck-icon :not([fill]){fill:currentColor}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./tooltip.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \".ck.ck-tooltip,.ck.ck-tooltip .ck-tooltip__text:after{position:absolute;pointer-events:none;-webkit-backface-visibility:hidden}.ck.ck-tooltip{visibility:hidden;opacity:0;display:none;z-index:var(--ck-z-modal)}.ck.ck-tooltip .ck-tooltip__text{display:inline-block}.ck.ck-tooltip .ck-tooltip__text:after{content:\\\"\\\";width:0;height:0}:root{--ck-tooltip-arrow-size:5px}.ck.ck-tooltip{left:50%;top:0;transition:opacity .2s ease-in-out .2s}.ck.ck-tooltip .ck-tooltip__text{border-radius:0}.ck-rounded-corners .ck.ck-tooltip .ck-tooltip__text,.ck.ck-tooltip .ck-tooltip__text.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-tooltip .ck-tooltip__text{font-size:.9em;line-height:1.5;color:var(--ck-color-tooltip-text);padding:var(--ck-spacing-small) var(--ck-spacing-medium);background:var(--ck-color-tooltip-background);position:relative;left:-50%}.ck.ck-tooltip .ck-tooltip__text:after{transition:opacity .2s ease-in-out .2s;border-style:solid;left:50%}.ck.ck-tooltip.ck-tooltip_s{bottom:calc(-1*var(--ck-tooltip-arrow-size));transform:translateY(100%)}.ck.ck-tooltip.ck-tooltip_s .ck-tooltip__text:after{top:calc(-1*var(--ck-tooltip-arrow-size));transform:translateX(-50%);border-left-color:transparent;border-bottom-color:var(--ck-color-tooltip-background);border-right-color:transparent;border-top-color:transparent;border-left-width:var(--ck-tooltip-arrow-size);border-bottom-width:var(--ck-tooltip-arrow-size);border-right-width:var(--ck-tooltip-arrow-size);border-top-width:0}.ck.ck-tooltip.ck-tooltip_n{top:calc(-1*var(--ck-tooltip-arrow-size));transform:translateY(-100%)}.ck.ck-tooltip.ck-tooltip_n .ck-tooltip__text:after{bottom:calc(-1*var(--ck-tooltip-arrow-size));transform:translateX(-50%);border-left-color:transparent;border-bottom-color:transparent;border-right-color:transparent;border-top-color:var(--ck-color-tooltip-background);border-left-width:var(--ck-tooltip-arrow-size);border-bottom-width:0;border-right-width:var(--ck-tooltip-arrow-size);border-top-width:var(--ck-tooltip-arrow-size)}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./button.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \".ck.ck-button,a.ck.ck-button{-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none}.ck.ck-button .ck-tooltip,a.ck.ck-button .ck-tooltip{display:block}@media (hover:none){.ck.ck-button .ck-tooltip,a.ck.ck-button .ck-tooltip{display:none}}.ck.ck-button,a.ck.ck-button{position:relative;display:inline-flex;align-items:center;justify-content:left}.ck.ck-button .ck-button__label,a.ck.ck-button .ck-button__label{display:none}.ck.ck-button.ck-button_with-text .ck-button__label,a.ck.ck-button.ck-button_with-text .ck-button__label{display:inline-block}.ck.ck-button:not(.ck-button_with-text),a.ck.ck-button:not(.ck-button_with-text){justify-content:center}.ck.ck-button:hover .ck-tooltip,a.ck.ck-button:hover .ck-tooltip{visibility:visible;opacity:1}.ck.ck-button:focus:not(:hover) .ck-tooltip,a.ck.ck-button:focus:not(:hover) .ck-tooltip{display:none}.ck.ck-button,a.ck.ck-button{background:var(--ck-color-button-default-background)}.ck.ck-button:not(.ck-disabled):hover,a.ck.ck-button:not(.ck-disabled):hover{background:var(--ck-color-button-default-hover-background)}.ck.ck-button:not(.ck-disabled):active,a.ck.ck-button:not(.ck-disabled):active{background:var(--ck-color-button-default-active-background);box-shadow:inset 0 2px 2px var(--ck-color-button-default-active-shadow)}.ck.ck-button.ck-disabled,a.ck.ck-button.ck-disabled{background:var(--ck-color-button-default-disabled-background)}.ck.ck-button,a.ck.ck-button{border-radius:0}.ck-rounded-corners .ck.ck-button,.ck-rounded-corners a.ck.ck-button,.ck.ck-button.ck-rounded-corners,a.ck.ck-button.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-button,a.ck.ck-button{white-space:nowrap;cursor:default;vertical-align:middle;padding:var(--ck-spacing-tiny);text-align:center;min-width:var(--ck-ui-component-min-height);min-height:var(--ck-ui-component-min-height);line-height:1;font-size:inherit;border:1px solid transparent;transition:box-shadow .2s ease-in-out,border .2s ease-in-out;-webkit-appearance:none}.ck.ck-button:active,.ck.ck-button:focus,a.ck.ck-button:active,a.ck.ck-button:focus{outline:none;border:var(--ck-focus-ring);box-shadow:var(--ck-focus-outer-shadow),0 0}.ck.ck-button .ck-button__icon use,.ck.ck-button .ck-button__icon use *,a.ck.ck-button .ck-button__icon use,a.ck.ck-button .ck-button__icon use *{color:inherit}.ck.ck-button .ck-button__label,a.ck.ck-button .ck-button__label{font-size:inherit;font-weight:inherit;color:inherit;cursor:inherit;vertical-align:middle}[dir=ltr] .ck.ck-button .ck-button__label,[dir=ltr] a.ck.ck-button .ck-button__label{text-align:left}[dir=rtl] .ck.ck-button .ck-button__label,[dir=rtl] a.ck.ck-button .ck-button__label{text-align:right}.ck.ck-button .ck-button__keystroke,a.ck.ck-button .ck-button__keystroke{color:inherit}[dir=ltr] .ck.ck-button .ck-button__keystroke,[dir=ltr] a.ck.ck-button .ck-button__keystroke{margin-left:var(--ck-spacing-large)}[dir=rtl] .ck.ck-button .ck-button__keystroke,[dir=rtl] a.ck.ck-button .ck-button__keystroke{margin-right:var(--ck-spacing-large)}.ck.ck-button .ck-button__keystroke,a.ck.ck-button .ck-button__keystroke{font-weight:700;opacity:.7}.ck.ck-button.ck-disabled:active,.ck.ck-button.ck-disabled:focus,a.ck.ck-button.ck-disabled:active,a.ck.ck-button.ck-disabled:focus{box-shadow:var(--ck-focus-disabled-outer-shadow),0 0}.ck.ck-button.ck-disabled .ck-button__icon,a.ck.ck-button.ck-disabled .ck-button__icon{opacity:var(--ck-disabled-opacity)}.ck.ck-button.ck-disabled .ck-button__label,a.ck.ck-button.ck-disabled .ck-button__label{opacity:var(--ck-disabled-opacity)}.ck.ck-button.ck-disabled .ck-button__keystroke,a.ck.ck-button.ck-disabled .ck-button__keystroke{opacity:.3}.ck.ck-button.ck-button_with-text,a.ck.ck-button.ck-button_with-text{padding:var(--ck-spacing-tiny) var(--ck-spacing-standard)}[dir=ltr] .ck.ck-button.ck-button_with-text .ck-button__icon,[dir=ltr] a.ck.ck-button.ck-button_with-text .ck-button__icon{margin-left:calc(-1*var(--ck-spacing-small));margin-right:var(--ck-spacing-small)}[dir=rtl] .ck.ck-button.ck-button_with-text .ck-button__icon,[dir=rtl] a.ck.ck-button.ck-button_with-text .ck-button__icon{margin-right:calc(-1*var(--ck-spacing-small));margin-left:var(--ck-spacing-small)}.ck.ck-button.ck-button_with-keystroke .ck-button__label,a.ck.ck-button.ck-button_with-keystroke .ck-button__label{flex-grow:1}.ck.ck-button.ck-on,a.ck.ck-button.ck-on{background:var(--ck-color-button-on-background)}.ck.ck-button.ck-on:not(.ck-disabled):hover,a.ck.ck-button.ck-on:not(.ck-disabled):hover{background:var(--ck-color-button-on-hover-background)}.ck.ck-button.ck-on:not(.ck-disabled):active,a.ck.ck-button.ck-on:not(.ck-disabled):active{background:var(--ck-color-button-on-active-background);box-shadow:inset 0 2px 2px var(--ck-color-button-on-active-shadow)}.ck.ck-button.ck-on.ck-disabled,a.ck.ck-button.ck-on.ck-disabled{background:var(--ck-color-button-on-disabled-background)}.ck.ck-button.ck-button-save,a.ck.ck-button.ck-button-save{color:var(--ck-color-button-save)}.ck.ck-button.ck-button-cancel,a.ck.ck-button.ck-button-cancel{color:var(--ck-color-button-cancel)}.ck.ck-button-action,a.ck.ck-button-action{background:var(--ck-color-button-action-background)}.ck.ck-button-action:not(.ck-disabled):hover,a.ck.ck-button-action:not(.ck-disabled):hover{background:var(--ck-color-button-action-hover-background)}.ck.ck-button-action:not(.ck-disabled):active,a.ck.ck-button-action:not(.ck-disabled):active{background:var(--ck-color-button-action-active-background);box-shadow:inset 0 2px 2px var(--ck-color-button-action-active-shadow)}.ck.ck-button-action.ck-disabled,a.ck.ck-button-action.ck-disabled{background:var(--ck-color-button-action-disabled-background)}.ck.ck-button-action,a.ck.ck-button-action{color:var(--ck-color-button-action-text)}.ck.ck-button-bold,a.ck.ck-button-bold{font-weight:700}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./list.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \".ck.ck-list{-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none;display:flex;flex-direction:column}.ck.ck-list .ck-list__item,.ck.ck-list .ck-list__separator{display:block}.ck.ck-list .ck-list__item>:focus{position:relative;z-index:var(--ck-z-default)}.ck.ck-list{border-radius:0}.ck-rounded-corners .ck.ck-list,.ck.ck-list.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-list{list-style-type:none;background:var(--ck-color-list-background)}.ck.ck-list__item{cursor:default;min-width:12em}.ck.ck-list__item .ck-button{min-height:unset;width:100%;text-align:left;border-radius:0;padding:calc(0.2*var(--ck-line-height-base)*var(--ck-font-size-base)) calc(0.4*var(--ck-line-height-base)*var(--ck-font-size-base))}.ck.ck-list__item .ck-button .ck-button__label{line-height:calc(1.2*var(--ck-line-height-base)*var(--ck-font-size-base))}.ck.ck-list__item .ck-button:active{box-shadow:none}.ck.ck-list__item .ck-button.ck-on{background:var(--ck-color-list-button-on-background);color:var(--ck-color-list-button-on-text)}.ck.ck-list__item .ck-button.ck-on:active{box-shadow:none}.ck.ck-list__item .ck-button.ck-on:hover:not(.ck-disabled){background:var(--ck-color-list-button-on-background-focus)}.ck.ck-list__item .ck-button.ck-on:focus:not(.ck-disabled){border-color:var(--ck-color-base-background)}.ck.ck-list__item .ck-button:hover:not(.ck-disabled){background:var(--ck-color-list-button-hover-background)}.ck.ck-list__item .ck-switchbutton.ck-on{background:var(--ck-color-list-background);color:inherit}.ck.ck-list__item .ck-switchbutton.ck-on:hover:not(.ck-disabled){background:var(--ck-color-list-button-hover-background);color:inherit}.ck.ck-list__separator{height:1px;width:100%;background:var(--ck-color-base-border)}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./switchbutton.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \".ck.ck-button.ck-switchbutton .ck-button__toggle,.ck.ck-button.ck-switchbutton .ck-button__toggle .ck-button__toggle__inner{display:block}:root{--ck-switch-button-toggle-width:2.6153846154em;--ck-switch-button-toggle-inner-size:1.0769230769em;--ck-switch-button-toggle-spacing:1px;--ck-switch-button-translation:1.3846153847em}[dir=ltr] .ck.ck-button.ck-switchbutton .ck-button__label{margin-right:calc(2*var(--ck-spacing-large))}[dir=rtl] .ck.ck-button.ck-switchbutton .ck-button__label{margin-left:calc(2*var(--ck-spacing-large))}.ck.ck-button.ck-switchbutton .ck-button__toggle{border-radius:0}.ck-rounded-corners .ck.ck-button.ck-switchbutton .ck-button__toggle,.ck.ck-button.ck-switchbutton .ck-button__toggle.ck-rounded-corners{border-radius:var(--ck-border-radius)}[dir=ltr] .ck.ck-button.ck-switchbutton .ck-button__toggle{margin-left:auto}[dir=rtl] .ck.ck-button.ck-switchbutton .ck-button__toggle{margin-right:auto}.ck.ck-button.ck-switchbutton .ck-button__toggle{transition:background .4s ease;width:var(--ck-switch-button-toggle-width);background:var(--ck-color-switch-button-off-background)}.ck.ck-button.ck-switchbutton .ck-button__toggle .ck-button__toggle__inner{border-radius:0}.ck-rounded-corners .ck.ck-button.ck-switchbutton .ck-button__toggle .ck-button__toggle__inner,.ck.ck-button.ck-switchbutton .ck-button__toggle .ck-button__toggle__inner.ck-rounded-corners{border-radius:var(--ck-border-radius);border-radius:calc(0.5*var(--ck-border-radius))}.ck.ck-button.ck-switchbutton .ck-button__toggle .ck-button__toggle__inner{margin:var(--ck-switch-button-toggle-spacing);width:var(--ck-switch-button-toggle-inner-size);height:var(--ck-switch-button-toggle-inner-size);background:var(--ck-color-switch-button-inner-background);transition:all .3s ease}.ck.ck-button.ck-switchbutton .ck-button__toggle:hover{background:var(--ck-color-switch-button-off-hover-background)}.ck.ck-button.ck-switchbutton .ck-button__toggle:hover .ck-button__toggle__inner{box-shadow:0 0 0 5px var(--ck-color-switch-button-inner-shadow)}.ck.ck-button.ck-switchbutton.ck-disabled .ck-button__toggle{opacity:var(--ck-disabled-opacity)}.ck.ck-button.ck-switchbutton.ck-on .ck-button__toggle{background:var(--ck-color-switch-button-on-background)}.ck.ck-button.ck-switchbutton.ck-on .ck-button__toggle:hover{background:var(--ck-color-switch-button-on-hover-background)}[dir=ltr] .ck.ck-button.ck-switchbutton.ck-on .ck-button__toggle .ck-button__toggle__inner{transform:translateX(var(--ck-switch-button-translation))}[dir=rtl] .ck.ck-button.ck-switchbutton.ck-on .ck-button__toggle .ck-button__toggle__inner{transform:translateX(calc(-1*var(--ck-switch-button-translation)))}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./toolbardropdown.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \".ck.ck-toolbar-dropdown .ck.ck-toolbar .ck.ck-toolbar__items{flex-wrap:nowrap}.ck.ck-toolbar-dropdown .ck-dropdown__panel .ck-button:focus{z-index:calc(var(--ck-z-default) + 1)}.ck.ck-toolbar-dropdown .ck-toolbar{border:0}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./listdropdown.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \".ck.ck-dropdown .ck-dropdown__panel .ck-list{border-radius:0}.ck-rounded-corners .ck.ck-dropdown .ck-dropdown__panel .ck-list,.ck.ck-dropdown .ck-dropdown__panel .ck-list.ck-rounded-corners{border-radius:var(--ck-border-radius);border-top-left-radius:0}.ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:first-child .ck-button{border-radius:0}.ck-rounded-corners .ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:first-child .ck-button,.ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:first-child .ck-button.ck-rounded-corners{border-radius:var(--ck-border-radius);border-top-left-radius:0;border-bottom-left-radius:0;border-bottom-right-radius:0}.ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:last-child .ck-button{border-radius:0}.ck-rounded-corners .ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:last-child .ck-button,.ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:last-child .ck-button.ck-rounded-corners{border-radius:var(--ck-border-radius);border-top-left-radius:0;border-top-right-radius:0}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./toolbar.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \".ck.ck-toolbar{-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none;display:flex;flex-flow:row nowrap;align-items:center}.ck.ck-toolbar>.ck-toolbar__items{display:flex;flex-flow:row wrap;align-items:center;flex-grow:1}.ck.ck-toolbar .ck.ck-toolbar__separator{display:inline-block}.ck.ck-toolbar .ck.ck-toolbar__separator:first-child,.ck.ck-toolbar .ck.ck-toolbar__separator:last-child{display:none}.ck.ck-toolbar.ck-toolbar_grouping>.ck-toolbar__items{flex-wrap:nowrap}.ck.ck-toolbar.ck-toolbar_vertical>.ck-toolbar__items{flex-direction:column}.ck.ck-toolbar.ck-toolbar_floating>.ck-toolbar__items{flex-wrap:nowrap}.ck.ck-toolbar>.ck.ck-toolbar__grouped-dropdown>.ck-dropdown__button .ck-dropdown__arrow{display:none}.ck.ck-toolbar{border-radius:0}.ck-rounded-corners .ck.ck-toolbar,.ck.ck-toolbar.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-toolbar{background:var(--ck-color-toolbar-background);padding:0 var(--ck-spacing-small);border:1px solid var(--ck-color-toolbar-border)}.ck.ck-toolbar>.ck-toolbar__items>*{margin-top:var(--ck-spacing-small);margin-bottom:var(--ck-spacing-small);margin-right:var(--ck-spacing-small)}.ck.ck-toolbar.ck-toolbar_vertical{padding:0}.ck.ck-toolbar.ck-toolbar_vertical>.ck-toolbar__items>.ck{width:100%;margin:0;border-radius:0;border:0}.ck.ck-toolbar.ck-toolbar_compact{padding:0}.ck.ck-toolbar.ck-toolbar_compact .ck-toolbar__items>.ck{margin:0}.ck.ck-toolbar.ck-toolbar_compact .ck-toolbar__items>.ck:first-child{border-top-right-radius:0;border-bottom-right-radius:0}.ck.ck-toolbar.ck-toolbar_compact .ck-toolbar__items>.ck:last-child{border-top-left-radius:0;border-bottom-left-radius:0}.ck.ck-toolbar.ck-toolbar_compact .ck-toolbar__items>.ck:not(:first-child):not(:last-child){border-radius:0}.ck.ck-toolbar>.ck-toolbar__items>*,.ck.ck-toolbar>.ck.ck-toolbar__grouped-dropdown{margin-top:var(--ck-spacing-small);margin-bottom:var(--ck-spacing-small)}.ck.ck-toolbar>.ck.ck-toolbar__grouped-dropdown>.ck.ck-button.ck-dropdown__button{padding-left:var(--ck-spacing-tiny)}.ck.ck-toolbar .ck.ck-toolbar__separator{align-self:stretch;width:1px;min-width:1px;margin-top:0;margin-bottom:0;background:var(--ck-color-toolbar-border)}.ck-toolbar-container .ck.ck-toolbar{border:0}.ck.ck-toolbar[dir=rtl]>.ck.ck-toolbar__grouped-dropdown,[dir=rtl] .ck.ck-toolbar>.ck.ck-toolbar__grouped-dropdown{padding-right:var(--ck-spacing-small)}.ck.ck-toolbar[dir=rtl]>.ck.ck-toolbar__items>*,[dir=rtl] .ck.ck-toolbar>.ck.ck-toolbar__items>*{margin-left:var(--ck-spacing-small);margin-right:0}.ck.ck-toolbar[dir=rtl]>.ck.ck-toolbar__items>:last-child,[dir=rtl] .ck.ck-toolbar>.ck.ck-toolbar__items>:last-child{margin-left:0}.ck.ck-toolbar[dir=rtl].ck-toolbar_grouping>.ck-toolbar__items,[dir=rtl] .ck.ck-toolbar.ck-toolbar_grouping>.ck-toolbar__items{margin-left:var(--ck-spacing-small)}.ck.ck-toolbar[dir=ltr]>.ck.ck-toolbar__grouped-dropdown,[dir=ltr] .ck.ck-toolbar>.ck.ck-toolbar__grouped-dropdown{padding-left:var(--ck-spacing-small)}.ck.ck-toolbar[dir=ltr]>.ck.ck-toolbar__items>:last-child,[dir=ltr] .ck.ck-toolbar>.ck.ck-toolbar__items>:last-child{margin-right:0}.ck.ck-toolbar[dir=ltr].ck-toolbar_grouping>.ck-toolbar__items,[dir=ltr] .ck.ck-toolbar.ck-toolbar_grouping>.ck-toolbar__items{margin-right:var(--ck-spacing-small)}\"","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./classiceditor.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \".ck.ck-editor{position:relative}.ck.ck-editor .ck-editor__top .ck-sticky-panel .ck-toolbar{z-index:var(--ck-z-modal)}.ck.ck-editor__top .ck-sticky-panel .ck-toolbar{border-radius:0}.ck-rounded-corners .ck.ck-editor__top .ck-sticky-panel .ck-toolbar,.ck.ck-editor__top .ck-sticky-panel .ck-toolbar.ck-rounded-corners{border-radius:var(--ck-border-radius);border-bottom-left-radius:0;border-bottom-right-radius:0}.ck.ck-editor__top .ck-sticky-panel .ck-toolbar{border-bottom-width:0}.ck.ck-editor__top .ck-sticky-panel .ck-sticky-panel__content_sticky .ck-toolbar{border-bottom-width:1px;border-radius:0}.ck-rounded-corners .ck.ck-editor__top .ck-sticky-panel .ck-sticky-panel__content_sticky .ck-toolbar,.ck.ck-editor__top .ck-sticky-panel .ck-sticky-panel__content_sticky .ck-toolbar.ck-rounded-corners{border-radius:var(--ck-border-radius);border-radius:0}.ck.ck-editor__main>.ck-editor__editable{background:var(--ck-color-base-background);border-radius:0}.ck-rounded-corners .ck.ck-editor__main>.ck-editor__editable,.ck.ck-editor__main>.ck-editor__editable.ck-rounded-corners{border-radius:var(--ck-border-radius);border-top-left-radius:0;border-top-right-radius:0}.ck.ck-editor__main>.ck-editor__editable:not(.ck-focused){border-color:var(--ck-color-base-border)}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./splitbutton.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \".ck.ck-splitbutton{font-size:inherit}.ck.ck-splitbutton .ck-splitbutton__action:focus{z-index:calc(var(--ck-z-default) + 1)}.ck.ck-splitbutton.ck-splitbutton_open>.ck-button .ck-tooltip{display:none}:root{--ck-color-split-button-hover-background:#ebebeb;--ck-color-split-button-hover-border:#b3b3b3}[dir=ltr] .ck.ck-splitbutton>.ck-splitbutton__action{border-top-right-radius:unset;border-bottom-right-radius:unset}[dir=rtl] .ck.ck-splitbutton>.ck-splitbutton__action{border-top-left-radius:unset;border-bottom-left-radius:unset}.ck.ck-splitbutton>.ck-splitbutton__arrow{min-width:unset}[dir=ltr] .ck.ck-splitbutton>.ck-splitbutton__arrow{border-radius:0}.ck-rounded-corners [dir=ltr] .ck.ck-splitbutton>.ck-splitbutton__arrow,[dir=ltr] .ck.ck-splitbutton>.ck-splitbutton__arrow.ck-rounded-corners{border-radius:var(--ck-border-radius);border-top-left-radius:unset;border-bottom-left-radius:unset}[dir=rtl] .ck.ck-splitbutton>.ck-splitbutton__arrow{border-top-right-radius:unset;border-bottom-right-radius:unset}.ck.ck-splitbutton>.ck-splitbutton__arrow svg{width:var(--ck-dropdown-arrow-size)}.ck.ck-splitbutton.ck-splitbutton_open>.ck-button:not(.ck-on):not(.ck-disabled):not(:hover),.ck.ck-splitbutton:hover>.ck-button:not(.ck-on):not(.ck-disabled):not(:hover){background:var(--ck-color-split-button-hover-background)}[dir=ltr] .ck.ck-splitbutton.ck-splitbutton_open>.ck-splitbutton__arrow:not(.ck-disabled),[dir=ltr] .ck.ck-splitbutton:hover>.ck-splitbutton__arrow:not(.ck-disabled){border-left-color:var(--ck-color-split-button-hover-border)}[dir=rtl] .ck.ck-splitbutton.ck-splitbutton_open>.ck-splitbutton__arrow:not(.ck-disabled),[dir=rtl] .ck.ck-splitbutton:hover>.ck-splitbutton__arrow:not(.ck-disabled){border-right-color:var(--ck-color-split-button-hover-border)}.ck.ck-splitbutton.ck-splitbutton_open{border-radius:0}.ck-rounded-corners .ck.ck-splitbutton.ck-splitbutton_open,.ck.ck-splitbutton.ck-splitbutton_open.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck-rounded-corners .ck.ck-splitbutton.ck-splitbutton_open>.ck-splitbutton__action,.ck.ck-splitbutton.ck-splitbutton_open.ck-rounded-corners>.ck-splitbutton__action{border-bottom-left-radius:0}.ck-rounded-corners .ck.ck-splitbutton.ck-splitbutton_open>.ck-splitbutton__arrow,.ck.ck-splitbutton.ck-splitbutton_open.ck-rounded-corners>.ck-splitbutton__arrow{border-bottom-right-radius:0}\"","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./codeblock.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \".ck-content pre{padding:1em;color:#353535;background:hsla(0,0%,78%,.3);border:1px solid #c4c4c4;border-radius:2px;text-align:left;direction:ltr;tab-size:4;white-space:pre-wrap;font-style:normal;min-width:200px}.ck-content pre code{background:unset;padding:0;border-radius:0}.ck.ck-editor__editable pre{position:relative}.ck.ck-editor__editable pre[data-language]:after{content:attr(data-language);position:absolute}:root{--ck-color-code-block-label-background:#757575}.ck.ck-editor__editable pre[data-language]:after{top:-1px;right:10px;background:var(--ck-color-code-block-label-background);font-size:10px;font-family:var(--ck-font-face);line-height:16px;padding:var(--ck-spacing-tiny) var(--ck-spacing-medium);color:#fff;white-space:nowrap}.ck.ck-code-block-dropdown .ck-dropdown__panel{max-height:250px;overflow-y:auto;overflow-x:hidden}\"","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./blockquote.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \".ck-content blockquote{overflow:hidden;padding-right:1.5em;padding-left:1.5em;margin-left:0;margin-right:0;font-style:italic;border-left:5px solid #ccc}.ck-content[dir=rtl] blockquote{border-left:0;border-right:5px solid #ccc}\"","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./link.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \".ck .ck-link_selected{background:var(--ck-color-link-selected-background)}\"","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./widget.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \":root{--ck-color-resizer:var(--ck-color-focus-border);--ck-resizer-size:10px;--ck-resizer-border-width:1px;--ck-resizer-border-radius:2px;--ck-resizer-offset:calc(var(--ck-resizer-size)/-2 - 2px);--ck-resizer-tooltip-offset:10px;--ck-color-resizer-tooltip-background:#262626;--ck-color-resizer-tooltip-text:#f2f2f2}.ck .ck-widget.ck-widget_with-selection-handle{position:relative}.ck .ck-widget.ck-widget_with-selection-handle .ck-widget__selection-handle{position:absolute}.ck .ck-widget.ck-widget_with-selection-handle .ck-widget__selection-handle .ck-icon{display:block}.ck .ck-widget.ck-widget_with-selection-handle.ck-widget_selected .ck-widget__selection-handle,.ck .ck-widget.ck-widget_with-selection-handle:hover .ck-widget__selection-handle{visibility:visible}.ck .ck-size-view{background:var(--ck-color-resizer-tooltip-background);color:var(--ck-color-resizer-tooltip-text);border:1px solid var(--ck-color-resizer-tooltip-text);border-radius:var(--ck-resizer-border-radius);font-size:var(--ck-font-size-tiny);display:block;padding:var(--ck-spacing-small)}.ck .ck-size-view.ck-orientation-bottom-left,.ck .ck-size-view.ck-orientation-bottom-right,.ck .ck-size-view.ck-orientation-top-left,.ck .ck-size-view.ck-orientation-top-right{position:absolute}.ck .ck-size-view.ck-orientation-top-left{top:var(--ck-resizer-tooltip-offset);left:var(--ck-resizer-tooltip-offset)}.ck .ck-size-view.ck-orientation-top-right{top:var(--ck-resizer-tooltip-offset);right:var(--ck-resizer-tooltip-offset)}.ck .ck-size-view.ck-orientation-bottom-right{bottom:var(--ck-resizer-tooltip-offset);right:var(--ck-resizer-tooltip-offset)}.ck .ck-size-view.ck-orientation-bottom-left{bottom:var(--ck-resizer-tooltip-offset);left:var(--ck-resizer-tooltip-offset)}:root{--ck-widget-outline-thickness:3px;--ck-widget-handler-icon-size:16px;--ck-widget-handler-animation-duration:200ms;--ck-widget-handler-animation-curve:ease;--ck-color-widget-blurred-border:#dedede;--ck-color-widget-hover-border:#ffc83d;--ck-color-widget-editable-focus-background:var(--ck-color-base-background);--ck-color-widget-drag-handler-icon-color:var(--ck-color-base-background)}.ck .ck-widget{outline-width:var(--ck-widget-outline-thickness);outline-style:solid;outline-color:transparent;transition:outline-color var(--ck-widget-handler-animation-duration) var(--ck-widget-handler-animation-curve)}.ck .ck-widget.ck-widget_selected,.ck .ck-widget.ck-widget_selected:hover{outline:var(--ck-widget-outline-thickness) solid var(--ck-color-focus-border)}.ck .ck-widget:hover{outline-color:var(--ck-color-widget-hover-border)}.ck .ck-editor__nested-editable{border:1px solid transparent}.ck .ck-editor__nested-editable.ck-editor__nested-editable_focused,.ck .ck-editor__nested-editable:focus{outline:none;border:var(--ck-focus-ring);box-shadow:var(--ck-inner-shadow),0 0;background-color:var(--ck-color-widget-editable-focus-background)}.ck .ck-widget.ck-widget_with-selection-handle .ck-widget__selection-handle{padding:4px;box-sizing:border-box;background-color:transparent;opacity:0;transition:background-color var(--ck-widget-handler-animation-duration) var(--ck-widget-handler-animation-curve),visibility var(--ck-widget-handler-animation-duration) var(--ck-widget-handler-animation-curve),opacity var(--ck-widget-handler-animation-duration) var(--ck-widget-handler-animation-curve);border-radius:var(--ck-border-radius) var(--ck-border-radius) 0 0;transform:translateY(-100%);left:calc(0px - var(--ck-widget-outline-thickness))}.ck .ck-widget.ck-widget_with-selection-handle .ck-widget__selection-handle .ck-icon{width:var(--ck-widget-handler-icon-size);height:var(--ck-widget-handler-icon-size);color:var(--ck-color-widget-drag-handler-icon-color)}.ck .ck-widget.ck-widget_with-selection-handle .ck-widget__selection-handle .ck-icon .ck-icon__selected-indicator{opacity:0;transition:opacity .3s var(--ck-widget-handler-animation-curve)}.ck .ck-widget.ck-widget_with-selection-handle .ck-widget__selection-handle:hover .ck-icon .ck-icon__selected-indicator{opacity:1}.ck .ck-widget.ck-widget_with-selection-handle:hover .ck-widget__selection-handle{opacity:1;background-color:var(--ck-color-widget-hover-border)}.ck .ck-widget.ck-widget_with-selection-handle.ck-widget_selected .ck-widget__selection-handle,.ck .ck-widget.ck-widget_with-selection-handle.ck-widget_selected:hover .ck-widget__selection-handle{opacity:1;background-color:var(--ck-color-focus-border)}.ck .ck-widget.ck-widget_with-selection-handle.ck-widget_selected .ck-widget__selection-handle .ck-icon .ck-icon__selected-indicator,.ck .ck-widget.ck-widget_with-selection-handle.ck-widget_selected:hover .ck-widget__selection-handle .ck-icon .ck-icon__selected-indicator{opacity:1}.ck-editor__editable>.ck-widget.ck-widget_with-selection-handle:first-child,.ck-editor__editable blockquote>.ck-widget.ck-widget_with-selection-handle:first-child{margin-top:calc(1em + var(--ck-widget-handler-icon-size))}.ck[dir=rtl] .ck-widget.ck-widget_with-selection-handle .ck-widget__selection-handle{left:auto;right:calc(0px - var(--ck-widget-outline-thickness))}.ck-editor__editable.ck-blurred .ck-widget.ck-widget_selected,.ck-editor__editable.ck-blurred .ck-widget.ck-widget_selected:hover{outline-color:var(--ck-color-widget-blurred-border)}.ck-editor__editable.ck-blurred .ck-widget.ck-widget_selected.ck-widget_with-selection-handle .ck-widget__selection-handle,.ck-editor__editable.ck-blurred .ck-widget.ck-widget_selected.ck-widget_with-selection-handle .ck-widget__selection-handle:hover,.ck-editor__editable.ck-blurred .ck-widget.ck-widget_selected:hover.ck-widget_with-selection-handle .ck-widget__selection-handle,.ck-editor__editable.ck-blurred .ck-widget.ck-widget_selected:hover.ck-widget_with-selection-handle .ck-widget__selection-handle:hover{background:var(--ck-color-widget-blurred-border)}.ck-editor__editable.ck-read-only .ck-widget{--ck-widget-outline-thickness:0}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./labeledinput.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \".ck.ck-labeled-input .ck-labeled-input__status{font-size:var(--ck-font-size-small);margin-top:var(--ck-spacing-small);white-space:normal}.ck.ck-labeled-input .ck-labeled-input__status_error{color:var(--ck-color-base-error)}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./inputtext.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \":root{--ck-input-text-width:18em}.ck.ck-input-text{border-radius:0}.ck-rounded-corners .ck.ck-input-text,.ck.ck-input-text.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-input-text{box-shadow:var(--ck-inner-shadow),0 0;background:var(--ck-color-input-background);border:1px solid var(--ck-color-input-border);padding:var(--ck-spacing-extra-tiny) var(--ck-spacing-medium);min-width:var(--ck-input-text-width);min-height:var(--ck-ui-component-min-height);transition:box-shadow .2s ease-in-out,border .2s ease-in-out}.ck.ck-input-text:focus{outline:none;border:var(--ck-focus-ring);box-shadow:var(--ck-focus-outer-shadow),var(--ck-inner-shadow)}.ck.ck-input-text[readonly]{border:1px solid var(--ck-color-input-disabled-border);background:var(--ck-color-input-disabled-background);color:var(--ck-color-input-disabled-text)}.ck.ck-input-text[readonly]:focus{box-shadow:var(--ck-focus-disabled-outer-shadow),var(--ck-inner-shadow)}.ck.ck-input-text.ck-error{border-color:var(--ck-color-input-error-border);animation:ck-text-input-shake .3s ease both}.ck.ck-input-text.ck-error:focus{box-shadow:var(--ck-focus-error-outer-shadow),var(--ck-inner-shadow)}@keyframes ck-text-input-shake{20%{transform:translateX(-2px)}40%{transform:translateX(2px)}60%{transform:translateX(-1px)}80%{transform:translateX(1px)}}\"","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./textalternativeform.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \".ck.ck-text-alternative-form{display:flex;flex-direction:row;flex-wrap:nowrap}.ck.ck-text-alternative-form .ck-labeled-input{display:inline-block}.ck.ck-text-alternative-form .ck-label{display:none}@media screen and (max-width:600px){.ck.ck-text-alternative-form{flex-wrap:wrap}.ck.ck-text-alternative-form .ck-labeled-input{flex-basis:100%}.ck.ck-text-alternative-form .ck-button{flex-basis:50%}}.ck.ck-text-alternative-form{padding:var(--ck-spacing-standard)}.ck.ck-text-alternative-form:focus{outline:none}[dir=ltr] .ck.ck-text-alternative-form>:not(:first-child),[dir=rtl] .ck.ck-text-alternative-form>:not(:last-child){margin-left:var(--ck-spacing-standard)}@media screen and (max-width:600px){.ck.ck-text-alternative-form{padding:0;width:calc(0.8*var(--ck-input-text-width))}.ck.ck-text-alternative-form .ck-labeled-input{margin:var(--ck-spacing-standard) var(--ck-spacing-standard) 0}.ck.ck-text-alternative-form .ck-labeled-input .ck-input-text{min-width:0;width:100%}.ck.ck-text-alternative-form .ck-button{padding:var(--ck-spacing-standard);margin-top:var(--ck-spacing-standard);border-radius:0;border:0;border-top:1px solid var(--ck-color-base-border)}[dir=ltr] .ck.ck-text-alternative-form .ck-button{margin-left:0}[dir=ltr] .ck.ck-text-alternative-form .ck-button:first-of-type{border-right:1px solid var(--ck-color-base-border)}[dir=rtl] .ck.ck-text-alternative-form .ck-button{margin-left:0}[dir=rtl] .ck.ck-text-alternative-form .ck-button:last-of-type{border-right:1px solid var(--ck-color-base-border)}}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./balloonpanel.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \":root{--ck-balloon-panel-arrow-z-index:calc(var(--ck-z-default) - 3)}.ck.ck-balloon-panel{display:none;position:absolute;z-index:var(--ck-z-modal)}.ck.ck-balloon-panel.ck-balloon-panel_with-arrow:after,.ck.ck-balloon-panel.ck-balloon-panel_with-arrow:before{content:\\\"\\\";position:absolute}.ck.ck-balloon-panel.ck-balloon-panel_with-arrow:before{z-index:var(--ck-balloon-panel-arrow-z-index)}.ck.ck-balloon-panel.ck-balloon-panel_with-arrow:after{z-index:calc(var(--ck-balloon-panel-arrow-z-index) + 1)}.ck.ck-balloon-panel[class*=arrow_n]:before{z-index:var(--ck-balloon-panel-arrow-z-index)}.ck.ck-balloon-panel[class*=arrow_n]:after{z-index:calc(var(--ck-balloon-panel-arrow-z-index) + 1)}.ck.ck-balloon-panel[class*=arrow_s]:before{z-index:var(--ck-balloon-panel-arrow-z-index)}.ck.ck-balloon-panel[class*=arrow_s]:after{z-index:calc(var(--ck-balloon-panel-arrow-z-index) + 1)}.ck.ck-balloon-panel.ck-balloon-panel_visible{display:block}:root{--ck-balloon-arrow-offset:2px;--ck-balloon-arrow-height:10px;--ck-balloon-arrow-half-width:8px}.ck.ck-balloon-panel{border-radius:0}.ck-rounded-corners .ck.ck-balloon-panel,.ck.ck-balloon-panel.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-balloon-panel{box-shadow:var(--ck-drop-shadow),0 0;min-height:15px;background:var(--ck-color-panel-background);border:1px solid var(--ck-color-panel-border)}.ck.ck-balloon-panel.ck-balloon-panel_with-arrow:after,.ck.ck-balloon-panel.ck-balloon-panel_with-arrow:before{width:0;height:0;border-style:solid}.ck.ck-balloon-panel[class*=arrow_n]:after,.ck.ck-balloon-panel[class*=arrow_n]:before{border-left-width:var(--ck-balloon-arrow-half-width);border-bottom-width:var(--ck-balloon-arrow-height);border-right-width:var(--ck-balloon-arrow-half-width);border-top-width:0}.ck.ck-balloon-panel[class*=arrow_n]:before{border-bottom-color:var(--ck-color-panel-border)}.ck.ck-balloon-panel[class*=arrow_n]:after,.ck.ck-balloon-panel[class*=arrow_n]:before{border-left-color:transparent;border-right-color:transparent;border-top-color:transparent}.ck.ck-balloon-panel[class*=arrow_n]:after{border-bottom-color:var(--ck-color-panel-background);margin-top:var(--ck-balloon-arrow-offset)}.ck.ck-balloon-panel[class*=arrow_s]:after,.ck.ck-balloon-panel[class*=arrow_s]:before{border-left-width:var(--ck-balloon-arrow-half-width);border-bottom-width:0;border-right-width:var(--ck-balloon-arrow-half-width);border-top-width:var(--ck-balloon-arrow-height)}.ck.ck-balloon-panel[class*=arrow_s]:before{border-top-color:var(--ck-color-panel-border)}.ck.ck-balloon-panel[class*=arrow_s]:after,.ck.ck-balloon-panel[class*=arrow_s]:before{border-left-color:transparent;border-bottom-color:transparent;border-right-color:transparent}.ck.ck-balloon-panel[class*=arrow_s]:after{border-top-color:var(--ck-color-panel-background);margin-bottom:var(--ck-balloon-arrow-offset)}.ck.ck-balloon-panel.ck-balloon-panel_arrow_n:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_n:before{left:50%;margin-left:calc(-1*var(--ck-balloon-arrow-half-width));top:calc(-1*var(--ck-balloon-arrow-height))}.ck.ck-balloon-panel.ck-balloon-panel_arrow_nw:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_nw:before{left:calc(2*var(--ck-balloon-arrow-half-width));top:calc(-1*var(--ck-balloon-arrow-height))}.ck.ck-balloon-panel.ck-balloon-panel_arrow_ne:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_ne:before{right:calc(2*var(--ck-balloon-arrow-half-width));top:calc(-1*var(--ck-balloon-arrow-height))}.ck.ck-balloon-panel.ck-balloon-panel_arrow_s:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_s:before{left:50%;margin-left:calc(-1*var(--ck-balloon-arrow-half-width));bottom:calc(-1*var(--ck-balloon-arrow-height))}.ck.ck-balloon-panel.ck-balloon-panel_arrow_sw:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_sw:before{left:calc(2*var(--ck-balloon-arrow-half-width));bottom:calc(-1*var(--ck-balloon-arrow-height))}.ck.ck-balloon-panel.ck-balloon-panel_arrow_se:after,.ck.ck-balloon-panel.ck-balloon-panel_arrow_se:before{right:calc(2*var(--ck-balloon-arrow-half-width));bottom:calc(-1*var(--ck-balloon-arrow-height))}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./balloonrotator.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \".ck .ck-balloon-rotator__navigation{display:flex;align-items:center;justify-content:center}.ck .ck-balloon-rotator__content .ck-toolbar{justify-content:center}.ck .ck-balloon-rotator__navigation{background:var(--ck-color-toolbar-background);border-bottom:1px solid var(--ck-color-toolbar-border);padding:0 var(--ck-spacing-small)}.ck .ck-balloon-rotator__navigation>*{margin-right:var(--ck-spacing-small);margin-top:var(--ck-spacing-small);margin-bottom:var(--ck-spacing-small)}.ck .ck-balloon-rotator__navigation .ck-balloon-rotator__counter{margin-right:var(--ck-spacing-standard);margin-left:var(--ck-spacing-small)}.ck .ck-balloon-rotator__content .ck.ck-annotation-wrapper{box-shadow:none}\"","var api = require(\"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../postcss-loader/src/index.js??ref--5-1!./fakepanel.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \".ck .ck-fake-panel{position:absolute;z-index:calc(var(--ck-z-modal) - 1)}.ck .ck-fake-panel div{position:absolute}.ck .ck-fake-panel div:first-child{z-index:2}.ck .ck-fake-panel div:nth-child(2){z-index:1}:root{--ck-balloon-fake-panel-offset-horizontal:6px;--ck-balloon-fake-panel-offset-vertical:6px}.ck .ck-fake-panel div{box-shadow:var(--ck-drop-shadow),0 0;min-height:15px;background:var(--ck-color-panel-background);border:1px solid var(--ck-color-panel-border);border-radius:var(--ck-border-radius);width:100%;height:100%}.ck .ck-fake-panel div:first-child{margin-left:var(--ck-balloon-fake-panel-offset-horizontal);margin-top:var(--ck-balloon-fake-panel-offset-vertical)}.ck .ck-fake-panel div:nth-child(2){margin-left:calc(var(--ck-balloon-fake-panel-offset-horizontal)*2);margin-top:calc(var(--ck-balloon-fake-panel-offset-vertical)*2)}.ck .ck-fake-panel div:nth-child(3){margin-left:calc(var(--ck-balloon-fake-panel-offset-horizontal)*3);margin-top:calc(var(--ck-balloon-fake-panel-offset-vertical)*3)}.ck .ck-balloon-panel_arrow_s+.ck-fake-panel,.ck .ck-balloon-panel_arrow_se+.ck-fake-panel,.ck .ck-balloon-panel_arrow_sw+.ck-fake-panel{--ck-balloon-fake-panel-offset-vertical:-6px}\"","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./image.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \".ck-content .image{display:table;clear:both;text-align:center;margin:1em auto}.ck-content .image>img{display:block;margin:0 auto;max-width:100%;min-width:50px}\"","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./imageuploadprogress.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \".ck.ck-editor__editable .image{position:relative}.ck.ck-editor__editable .image .ck-progress-bar{position:absolute;top:0;left:0}.ck.ck-editor__editable .image.ck-appear{animation:fadeIn .7s}.ck.ck-editor__editable .image .ck-progress-bar{height:2px;width:0;background:var(--ck-color-upload-bar-background);transition:width .1s}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}\"","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./imageuploadicon.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \".ck-image-upload-complete-icon{display:block;position:absolute;top:10px;right:10px;border-radius:50%}.ck-image-upload-complete-icon:after{content:\\\"\\\";position:absolute}:root{--ck-color-image-upload-icon:#fff;--ck-color-image-upload-icon-background:#008a00;--ck-image-upload-icon-size:20px;--ck-image-upload-icon-width:2px}.ck-image-upload-complete-icon{width:var(--ck-image-upload-icon-size);height:var(--ck-image-upload-icon-size);opacity:0;background:var(--ck-color-image-upload-icon-background);animation-name:ck-upload-complete-icon-show,ck-upload-complete-icon-hide;animation-fill-mode:forwards,forwards;animation-duration:.5s,.5s;font-size:var(--ck-image-upload-icon-size);animation-delay:0ms,3s}.ck-image-upload-complete-icon:after{left:25%;top:50%;opacity:0;height:0;width:0;transform:scaleX(-1) rotate(135deg);transform-origin:left top;border-top:var(--ck-image-upload-icon-width) solid var(--ck-color-image-upload-icon);border-right:var(--ck-image-upload-icon-width) solid var(--ck-color-image-upload-icon);animation-name:ck-upload-complete-icon-check;animation-duration:.5s;animation-delay:.5s;animation-fill-mode:forwards;box-sizing:border-box}@keyframes ck-upload-complete-icon-show{0%{opacity:0}to{opacity:1}}@keyframes ck-upload-complete-icon-hide{0%{opacity:1}to{opacity:0}}@keyframes ck-upload-complete-icon-check{0%{opacity:1;width:0;height:0}33%{width:.3em;height:0}to{opacity:1;width:.3em;height:.45em}}\"","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./imageuploadloader.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \".ck .ck-upload-placeholder-loader{position:absolute;display:flex;align-items:center;justify-content:center;top:0;left:0}.ck .ck-upload-placeholder-loader:before{content:\\\"\\\";position:relative}:root{--ck-color-upload-placeholder-loader:#b3b3b3;--ck-upload-placeholder-loader-size:32px}.ck .ck-image-upload-placeholder{width:100%;margin:0}.ck .ck-upload-placeholder-loader{width:100%;height:100%}.ck .ck-upload-placeholder-loader:before{width:var(--ck-upload-placeholder-loader-size);height:var(--ck-upload-placeholder-loader-size);border-radius:50%;border-top:3px solid var(--ck-color-upload-placeholder-loader);border-right:2px solid transparent;animation:ck-upload-placeholder-loader 1s linear infinite}@keyframes ck-upload-placeholder-loader{to{transform:rotate(1turn)}}\"","module.exports = \".ck.ck-heading_heading1{font-size:20px}.ck.ck-heading_heading2{font-size:17px}.ck.ck-heading_heading3{font-size:14px}.ck[class*=ck-heading_heading]{font-weight:700}.ck.ck-dropdown.ck-heading-dropdown .ck-dropdown__button .ck-button__label{width:8em}.ck.ck-dropdown.ck-heading-dropdown .ck-dropdown__panel .ck-list__item{min-width:18em}\"","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./imagecaption.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \".ck-content .image>figcaption{display:table-caption;caption-side:bottom;word-break:break-word;color:#333;background-color:#f7f7f7;padding:.6em;font-size:.75em;outline-offset:-1px}\"","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./imagestyle.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \":root{--ck-image-style-spacing:1.5em}.ck-content .image-style-align-center,.ck-content .image-style-align-left,.ck-content .image-style-align-right,.ck-content .image-style-side{max-width:50%}.ck-content .image-style-side{float:right;margin-left:var(--ck-image-style-spacing)}.ck-content .image-style-align-left{float:left;margin-right:var(--ck-image-style-spacing)}.ck-content .image-style-align-center{margin-left:auto;margin-right:auto}.ck-content .image-style-align-right{float:right;margin-left:var(--ck-image-style-spacing)}\"","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./linkform.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \".ck.ck-link-form{display:flex}.ck.ck-link-form .ck-label{display:none}@media screen and (max-width:600px){.ck.ck-link-form{flex-wrap:wrap}.ck.ck-link-form .ck-labeled-input{flex-basis:100%}.ck.ck-link-form .ck-button{flex-basis:50%}}.ck.ck-link-form_layout-vertical{display:block}.ck.ck-link-form{padding:var(--ck-spacing-standard)}.ck.ck-link-form:focus{outline:none}[dir=ltr] .ck.ck-link-form>:not(:first-child),[dir=rtl] .ck.ck-link-form>:not(:last-child){margin-left:var(--ck-spacing-standard)}@media screen and (max-width:600px){.ck.ck-link-form{padding:0;width:calc(0.8*var(--ck-input-text-width))}.ck.ck-link-form .ck-labeled-input{margin:var(--ck-spacing-standard) var(--ck-spacing-standard) 0}.ck.ck-link-form .ck-labeled-input .ck-input-text{min-width:0;width:100%}.ck.ck-link-form .ck-button{padding:var(--ck-spacing-standard);margin-top:var(--ck-spacing-standard);border-radius:0;border:0;border-top:1px solid var(--ck-color-base-border)}[dir=ltr] .ck.ck-link-form .ck-button{margin-left:0}[dir=ltr] .ck.ck-link-form .ck-button:first-of-type{border-right:1px solid var(--ck-color-base-border)}[dir=rtl] .ck.ck-link-form .ck-button{margin-left:0}[dir=rtl] .ck.ck-link-form .ck-button:last-of-type{border-right:1px solid var(--ck-color-base-border)}}.ck.ck-link-form_layout-vertical{padding:0;min-width:var(--ck-input-text-width)}.ck.ck-link-form_layout-vertical .ck-labeled-input{margin:var(--ck-spacing-standard) var(--ck-spacing-standard) var(--ck-spacing-small)}.ck.ck-link-form_layout-vertical .ck-labeled-input .ck-input-text{min-width:0;width:100%}.ck.ck-link-form_layout-vertical .ck-button{padding:var(--ck-spacing-standard);margin:0;border-radius:0;border:0;border-top:1px solid var(--ck-color-base-border);width:50%}[dir=ltr] .ck.ck-link-form_layout-vertical .ck-button{margin-left:0}[dir=ltr] .ck.ck-link-form_layout-vertical .ck-button:first-of-type{border-right:1px solid var(--ck-color-base-border)}[dir=rtl] .ck.ck-link-form_layout-vertical .ck-button{margin-left:0}[dir=rtl] .ck.ck-link-form_layout-vertical .ck-button:last-of-type{border-right:1px solid var(--ck-color-base-border)}.ck.ck-link-form_layout-vertical .ck.ck-list{margin-left:0}.ck.ck-link-form_layout-vertical .ck.ck-list .ck-button.ck-switchbutton{border:0;width:100%}.ck.ck-link-form_layout-vertical .ck.ck-list .ck-button.ck-switchbutton:hover{background:none}\"","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./linkactions.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \".ck.ck-link-actions{display:flex;flex-direction:row;flex-wrap:nowrap}.ck.ck-link-actions .ck-link-actions__preview{display:inline-block}.ck.ck-link-actions .ck-link-actions__preview .ck-button__label{overflow:hidden}@media screen and (max-width:600px){.ck.ck-link-actions{flex-wrap:wrap}.ck.ck-link-actions .ck-link-actions__preview{flex-basis:100%}.ck.ck-link-actions .ck-button:not(.ck-link-actions__preview){flex-basis:50%}}.ck.ck-link-actions{padding:var(--ck-spacing-standard)}.ck.ck-link-actions .ck-button.ck-link-actions__preview{padding-left:0;padding-right:0}.ck.ck-link-actions .ck-button.ck-link-actions__preview .ck-button__label{padding:0 var(--ck-spacing-medium);color:var(--ck-color-link-default);text-overflow:ellipsis;cursor:pointer;max-width:var(--ck-input-text-width);min-width:3em;text-align:center}.ck.ck-link-actions .ck-button.ck-link-actions__preview .ck-button__label:hover{text-decoration:underline}.ck.ck-link-actions .ck-button.ck-link-actions__preview,.ck.ck-link-actions .ck-button.ck-link-actions__preview:active,.ck.ck-link-actions .ck-button.ck-link-actions__preview:focus,.ck.ck-link-actions .ck-button.ck-link-actions__preview:hover{background:none}.ck.ck-link-actions .ck-button.ck-link-actions__preview:active{box-shadow:none}.ck.ck-link-actions .ck-button.ck-link-actions__preview:focus .ck-button__label{text-decoration:underline}.ck.ck-link-actions:focus{outline:none}[dir=ltr] .ck.ck-link-actions .ck-button:not(:first-child),[dir=rtl] .ck.ck-link-actions .ck-button:not(:last-child){margin-left:var(--ck-spacing-standard)}@media screen and (max-width:600px){.ck.ck-link-actions{padding:0;width:calc(0.8*var(--ck-input-text-width))}.ck.ck-link-actions .ck-button.ck-link-actions__preview{margin:var(--ck-spacing-standard) var(--ck-spacing-standard) 0}.ck.ck-link-actions .ck-button.ck-link-actions__preview .ck-button__label{min-width:0;max-width:100%}.ck.ck-link-actions .ck-button:not(.ck-link-actions__preview){padding:var(--ck-spacing-standard);margin-top:var(--ck-spacing-standard);border-radius:0;border:0;border-top:1px solid var(--ck-color-base-border)}[dir=ltr] .ck.ck-link-actions .ck-button:not(.ck-link-actions__preview){margin-left:0}[dir=ltr] .ck.ck-link-actions .ck-button:not(.ck-link-actions__preview):first-of-type{border-right:1px solid var(--ck-color-base-border)}[dir=rtl] .ck.ck-link-actions .ck-button:not(.ck-link-actions__preview){margin-left:0}[dir=rtl] .ck.ck-link-actions .ck-button:not(.ck-link-actions__preview):last-of-type{border-right:1px solid var(--ck-color-base-border)}}\"","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./tableediting.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \":root{--ck-color-table-focused-cell-background:#f5fafe}.ck-widget.table td.ck-editor__nested-editable.ck-editor__nested-editable_focused,.ck-widget.table th.ck-editor__nested-editable.ck-editor__nested-editable_focused{background:var(--ck-color-table-focused-cell-background);border-style:none;outline:1px solid var(--ck-color-focus-border);outline-offset:-1px}\"","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./inserttable.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \".ck .ck-insert-table-dropdown__grid{display:flex;flex-direction:row;flex-wrap:wrap}:root{--ck-insert-table-dropdown-padding:10px;--ck-insert-table-dropdown-box-height:11px;--ck-insert-table-dropdown-box-width:12px;--ck-insert-table-dropdown-box-margin:1px}.ck .ck-insert-table-dropdown__grid{width:calc(var(--ck-insert-table-dropdown-box-width)*10 + var(--ck-insert-table-dropdown-box-margin)*20 + var(--ck-insert-table-dropdown-padding)*2);padding:var(--ck-insert-table-dropdown-padding) var(--ck-insert-table-dropdown-padding) 0}.ck .ck-insert-table-dropdown__label{text-align:center}.ck .ck-insert-table-dropdown-grid-box{width:var(--ck-insert-table-dropdown-box-width);height:var(--ck-insert-table-dropdown-box-height);margin:var(--ck-insert-table-dropdown-box-margin);border:1px solid var(--ck-color-base-border);border-radius:1px}.ck .ck-insert-table-dropdown-grid-box.ck-on{border-color:var(--ck-color-focus-border);background:var(--ck-color-focus-outer-shadow)}\"","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../postcss-loader/src/index.js??ref--5-1!./table.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {\"injectType\":\"singletonStyleTag\"};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","module.exports = \".ck-content .table{margin:1em auto;display:table}.ck-content .table table{border-collapse:collapse;border-spacing:0;width:100%;height:100%;border:1px double #b3b3b3}.ck-content .table table td,.ck-content .table table th{min-width:2em;padding:.4em;border-color:#d9d9d9}.ck-content .table table th{font-weight:700;background:#fafafa}\"","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nexport default listCacheClear;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nexport default eq;\n","import eq from './eq.js';\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nexport default assocIndexOf;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nexport default listCacheDelete;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nexport default listCacheGet;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nexport default listCacheHas;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nexport default listCacheSet;\n","import listCacheClear from './_listCacheClear.js';\nimport listCacheDelete from './_listCacheDelete.js';\nimport listCacheGet from './_listCacheGet.js';\nimport listCacheHas from './_listCacheHas.js';\nimport listCacheSet from './_listCacheSet.js';\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nexport default ListCache;\n","import ListCache from './_ListCache.js';\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nexport default stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nexport default stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nexport default stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nexport default stackHas;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n","import coreJsData from './_coreJsData.js';\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nexport default isMasked;\n","import root from './_root.js';\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nexport default coreJsData;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nexport default toSource;\n","import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nexport default getValue;\n","import baseIsNative from './_baseIsNative.js';\nimport getValue from './_getValue.js';\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nexport default getNative;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nexport default Map;\n","import getNative from './_getNative.js';\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nexport default nativeCreate;\n","import nativeCreate from './_nativeCreate.js';\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nexport default hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default hashDelete;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexport default hashGet;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nexport default hashHas;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexport default hashSet;\n","import hashClear from './_hashClear.js';\nimport hashDelete from './_hashDelete.js';\nimport hashGet from './_hashGet.js';\nimport hashHas from './_hashHas.js';\nimport hashSet from './_hashSet.js';\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nexport default Hash;\n","import Hash from './_Hash.js';\nimport ListCache from './_ListCache.js';\nimport Map from './_Map.js';\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nexport default mapCacheClear;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nexport default isKeyable;\n","import isKeyable from './_isKeyable.js';\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nexport default getMapData;\n","import getMapData from './_getMapData.js';\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default mapCacheDelete;\n","import getMapData from './_getMapData.js';\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nexport default mapCacheGet;\n","import getMapData from './_getMapData.js';\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nexport default mapCacheHas;\n","import getMapData from './_getMapData.js';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;\n","import mapCacheClear from './_mapCacheClear.js';\nimport mapCacheDelete from './_mapCacheDelete.js';\nimport mapCacheGet from './_mapCacheGet.js';\nimport mapCacheHas from './_mapCacheHas.js';\nimport mapCacheSet from './_mapCacheSet.js';\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nexport default MapCache;\n","import ListCache from './_ListCache.js';\nimport Map from './_Map.js';\nimport MapCache from './_MapCache.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nexport default stackSet;\n","import ListCache from './_ListCache.js';\nimport stackClear from './_stackClear.js';\nimport stackDelete from './_stackDelete.js';\nimport stackGet from './_stackGet.js';\nimport stackHas from './_stackHas.js';\nimport stackSet from './_stackSet.js';\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nexport default Stack;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n","import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n","import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignValue;\n","import assignValue from './_assignValue.js';\nimport baseAssignValue from './_baseAssignValue.js';\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nexport default copyObject;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nexport default baseTimes;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nexport default baseIsArguments;\n","import baseIsArguments from './_baseIsArguments.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nexport default isArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nexport default isIndex;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nexport default isLength;\n","import baseGetTag from './_baseGetTag.js';\nimport isLength from './isLength.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nexport default baseIsTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n","import baseIsTypedArray from './_baseIsTypedArray.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nexport default isTypedArray;\n","import baseTimes from './_baseTimes.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isIndex from './_isIndex.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default arrayLikeKeys;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nexport default isPrototype;\n","import overArg from './_overArg.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nexport default nativeKeys;\n","import isPrototype from './_isPrototype.js';\nimport nativeKeys from './_nativeKeys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeys;\n","import isFunction from './isFunction.js';\nimport isLength from './isLength.js';\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nexport default isArrayLike;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeys from './_baseKeys.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nexport default keys;\n","import copyObject from './_copyObject.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nexport default baseAssign;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default nativeKeysIn;\n","import isObject from './isObject.js';\nimport isPrototype from './_isPrototype.js';\nimport nativeKeysIn from './_nativeKeysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeysIn;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeysIn from './_baseKeysIn.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nexport default keysIn;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nexport default baseAssignIn;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nexport default copyArray;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default arrayFilter;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nexport default stubArray;\n","import arrayFilter from './_arrayFilter.js';\nimport stubArray from './stubArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nexport default getSymbols;\n","import copyObject from './_copyObject.js';\nimport getSymbols from './_getSymbols.js';\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nexport default copySymbols;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nexport default arrayPush;\n","import arrayPush from './_arrayPush.js';\nimport getPrototype from './_getPrototype.js';\nimport getSymbols from './_getSymbols.js';\nimport stubArray from './stubArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nexport default getSymbolsIn;\n","import copyObject from './_copyObject.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nexport default copySymbolsIn;\n","import arrayPush from './_arrayPush.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nexport default baseGetAllKeys;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbols from './_getSymbols.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nexport default getAllKeys;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nexport default getAllKeysIn;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nexport default DataView;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nexport default Promise;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nexport default Set;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nexport default WeakMap;\n","import DataView from './_DataView.js';\nimport Map from './_Map.js';\nimport Promise from './_Promise.js';\nimport Set from './_Set.js';\nimport WeakMap from './_WeakMap.js';\nimport baseGetTag from './_baseGetTag.js';\nimport toSource from './_toSource.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nexport default getTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nexport default initCloneArray;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nexport default Uint8Array;\n","import Uint8Array from './_Uint8Array.js';\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nexport default cloneArrayBuffer;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexport default cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexport default cloneRegExp;\n","import Symbol from './_Symbol.js';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexport default cloneTypedArray;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n","import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n","import baseCreate from './_baseCreate.js';\nimport getPrototype from './_getPrototype.js';\nimport isPrototype from './_isPrototype.js';\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nexport default initCloneObject;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nexport default baseIsMap;\n","import baseIsMap from './_baseIsMap.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nexport default isMap;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nexport default baseIsSet;\n","import baseIsSet from './_baseIsSet.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nexport default isSet;\n","import Stack from './_Stack.js';\nimport arrayEach from './_arrayEach.js';\nimport assignValue from './_assignValue.js';\nimport baseAssign from './_baseAssign.js';\nimport baseAssignIn from './_baseAssignIn.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport copyArray from './_copyArray.js';\nimport copySymbols from './_copySymbols.js';\nimport copySymbolsIn from './_copySymbolsIn.js';\nimport getAllKeys from './_getAllKeys.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\nimport getTag from './_getTag.js';\nimport initCloneArray from './_initCloneArray.js';\nimport initCloneByTag from './_initCloneByTag.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isMap from './isMap.js';\nimport isObject from './isObject.js';\nimport isSet from './isSet.js';\nimport keys from './keys.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport default baseClone;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.cloneWith` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @param {Function} [customizer] The function to customize cloning.\n * @returns {*} Returns the deep cloned value.\n * @see _.cloneWith\n * @example\n *\n * function customizer(value) {\n *   if (_.isElement(value)) {\n *     return value.cloneNode(true);\n *   }\n * }\n *\n * var el = _.cloneDeepWith(document.body, customizer);\n *\n * console.log(el === document.body);\n * // => false\n * console.log(el.nodeName);\n * // => 'BODY'\n * console.log(el.childNodes.length);\n * // => 20\n */\nfunction cloneDeepWith(value, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n}\n\nexport default cloneDeepWith;\n","import isObjectLike from './isObjectLike.js';\nimport isPlainObject from './isPlainObject.js';\n\n/**\n * Checks if `value` is likely a DOM element.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n * @example\n *\n * _.isElement(document.body);\n * // => true\n *\n * _.isElement('<body>');\n * // => false\n */\nfunction isElement(value) {\n  return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n}\n\nexport default isElement;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/config\n */\n\nimport { isPlainObject, isElement, cloneDeepWith } from 'lodash-es';\n\n/**\n * Handles a configuration dictionary.\n */\nexport default class Config {\n\t/**\n\t * Creates an instance of the {@link ~Config} class.\n\t *\n\t * @param {Object} [configurations] The initial configurations to be set. Usually, provided by the user.\n\t * @param {Object} [defaultConfigurations] The default configurations. Usually, provided by the system.\n\t */\n\tconstructor( configurations, defaultConfigurations ) {\n\t\t/**\n\t\t * Store for the whole configuration.\n\t\t *\n\t\t * @private\n\t\t * @member {Object}\n\t\t */\n\t\tthis._config = {};\n\n\t\t// Set default configuration.\n\t\tif ( defaultConfigurations ) {\n\t\t\t// Clone the configuration to make sure that the properties will not be shared\n\t\t\t// between editors and make the watchdog feature work correctly.\n\t\t\tthis.define( cloneConfig( defaultConfigurations ) );\n\t\t}\n\n\t\t// Set initial configuration.\n\t\tif ( configurations ) {\n\t\t\tthis._setObjectToTarget( this._config, configurations );\n\t\t}\n\t}\n\n\t/**\n\t * Set configuration values.\n\t *\n\t * It accepts both a name/value pair or an object, which properties and values will be used to set\n\t * configurations.\n\t *\n\t * It also accepts setting a \"deep configuration\" by using dots in the name. For example, `'resize.width'` sets\n\t * the value for the `width` configuration in the `resize` subset.\n\t *\n\t *\t\tconfig.set( 'width', 500 );\n\t *\t\tconfig.set( 'toolbar.collapsed', true );\n\t *\n\t *\t\t// Equivalent to:\n\t *\t\tconfig.set( {\n\t *\t\t\twidth: 500\n\t *\t\t\ttoolbar: {\n\t *\t\t\t\tcollapsed: true\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * Passing an object as the value will amend the configuration, not replace it.\n\t *\n\t *\t\tconfig.set( 'toolbar', {\n\t *\t\t\tcollapsed: true,\n\t *\t\t} );\n\t *\n\t *\t\tconfig.set( 'toolbar', {\n\t *\t\t\tcolor: 'red',\n\t *\t\t} );\n\t *\n\t *\t\tconfig.get( 'toolbar.collapsed' ); // true\n\t *\t\tconfig.get( 'toolbar.color' ); // 'red'\n\t *\n\t * @param {String|Object} name The configuration name or an object from which take properties as\n\t * configuration entries. Configuration names are case-sensitive.\n\t * @param {*} value The configuration value. Used if a name is passed.\n\t */\n\tset( name, value ) {\n\t\tthis._setToTarget( this._config, name, value );\n\t}\n\n\t/**\n\t * Does exactly the same as {@link #set} with one exception – passed configuration extends\n\t * existing one, but does not overwrite already defined values.\n\t *\n\t * This method is supposed to be called by plugin developers to setup plugin's configurations. It would be\n\t * rarely used for other needs.\n\t *\n\t * @param {String|Object} name The configuration name or an object from which take properties as\n\t * configuration entries. Configuration names are case-sensitive.\n\t * @param {*} value The configuration value. Used if a name is passed.\n\t */\n\tdefine( name, value ) {\n\t\tconst isDefine = true;\n\n\t\tthis._setToTarget( this._config, name, value, isDefine );\n\t}\n\n\t/**\n\t * Gets the value for a configuration entry.\n\t *\n\t *\t\tconfig.get( 'name' );\n\t *\n\t * Deep configurations can be retrieved by separating each part with a dot.\n\t *\n\t *\t\tconfig.get( 'toolbar.collapsed' );\n\t *\n\t * @param {String} name The configuration name. Configuration names are case-sensitive.\n\t * @returns {*} The configuration value or `undefined` if the configuration entry was not found.\n\t */\n\tget( name ) {\n\t\treturn this._getFromSource( this._config, name );\n\t}\n\n\t/**\n\t * Iterates over all top level configuration names.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\t* names() {\n\t\tfor ( const name of Object.keys( this._config ) ) {\n\t\t\tyield name;\n\t\t}\n\t}\n\n\t/**\n\t * Saves passed configuration to the specified target (nested object).\n\t *\n\t * @private\n\t * @param {Object} target Nested config object.\n\t * @param {String|Object} name The configuration name or an object from which take properties as\n\t * configuration entries. Configuration names are case-sensitive.\n\t * @param {*} value The configuration value. Used if a name is passed.\n\t * @param {Boolean} [isDefine=false] Define if passed configuration should overwrite existing one.\n\t */\n\t_setToTarget( target, name, value, isDefine = false ) {\n\t\t// In case of an object, iterate through it and call `_setToTarget` again for each property.\n\t\tif ( isPlainObject( name ) ) {\n\t\t\tthis._setObjectToTarget( target, name, isDefine );\n\n\t\t\treturn;\n\t\t}\n\n\t\t// The configuration name should be split into parts if it has dots. E.g. `resize.width` -> [`resize`, `width`].\n\t\tconst parts = name.split( '.' );\n\n\t\t// Take the name of the configuration out of the parts. E.g. `resize.width` -> `width`.\n\t\tname = parts.pop();\n\n\t\t// Iterate over parts to check if currently stored configuration has proper structure.\n\t\tfor ( const part of parts ) {\n\t\t\t// If there is no object for specified part then create one.\n\t\t\tif ( !isPlainObject( target[ part ] ) ) {\n\t\t\t\ttarget[ part ] = {};\n\t\t\t}\n\n\t\t\t// Nested object becomes a target.\n\t\t\ttarget = target[ part ];\n\t\t}\n\n\t\t// In case of value is an object.\n\t\tif ( isPlainObject( value ) ) {\n\t\t\t// We take care of proper config structure.\n\t\t\tif ( !isPlainObject( target[ name ] ) ) {\n\t\t\t\ttarget[ name ] = {};\n\t\t\t}\n\n\t\t\ttarget = target[ name ];\n\n\t\t\t// And iterate through this object calling `_setToTarget` again for each property.\n\t\t\tthis._setObjectToTarget( target, value, isDefine );\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Do nothing if we are defining configuration for non empty name.\n\t\tif ( isDefine && typeof target[ name ] != 'undefined' ) {\n\t\t\treturn;\n\t\t}\n\n\t\ttarget[ name ] = value;\n\t}\n\n\t/**\n\t * Get specified configuration from specified source (nested object).\n\t *\n\t * @private\n\t * @param {Object} source level of nested object.\n\t * @param {String} name The configuration name. Configuration names are case-sensitive.\n\t * @returns {*} The configuration value or `undefined` if the configuration entry was not found.\n\t */\n\t_getFromSource( source, name ) {\n\t\t// The configuration name should be split into parts if it has dots. E.g. `resize.width` -> [`resize`, `width`].\n\t\tconst parts = name.split( '.' );\n\n\t\t// Take the name of the configuration out of the parts. E.g. `resize.width` -> `width`.\n\t\tname = parts.pop();\n\n\t\t// Iterate over parts to check if currently stored configuration has proper structure.\n\t\tfor ( const part of parts ) {\n\t\t\tif ( !isPlainObject( source[ part ] ) ) {\n\t\t\t\tsource = null;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Nested object becomes a source.\n\t\t\tsource = source[ part ];\n\t\t}\n\n\t\t// Always returns undefined for non existing configuration.\n\t\treturn source ? cloneConfig( source[ name ] ) : undefined;\n\t}\n\n\t/**\n\t * Iterates through passed object and calls {@link #_setToTarget} method with object key and value for each property.\n\t *\n\t * @private\n\t * @param {Object} target Nested config object.\n\t * @param {Object} configuration Configuration data set\n\t * @param {Boolean} [isDefine] Defines if passed configuration is default configuration or not.\n\t */\n\t_setObjectToTarget( target, configuration, isDefine ) {\n\t\tObject.keys( configuration ).forEach( key => {\n\t\t\tthis._setToTarget( target, key, configuration[ key ], isDefine );\n\t\t} );\n\t}\n}\n\n// Clones configuration object or value.\n// @param {*} source Source configuration\n// @returns {*} Cloned configuration value.\nfunction cloneConfig( source ) {\n\treturn cloneDeepWith( source, leaveDOMReferences );\n}\n\n// A customized function for cloneDeepWith.\n// It will leave references to DOM Elements instead of cloning them.\n//\n// @param {*} value\n// @returns {Element|undefined}\nfunction leaveDOMReferences( value ) {\n\treturn isElement( value ) ? value : undefined;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/spy\n */\n\n/**\n * Creates a spy function (ala Sinon.js) that can be used to inspect call to it.\n *\n * The following are the present features:\n *\n * * spy.called: property set to `true` if the function has been called at least once.\n *\n * @returns {Function} The spy function.\n */\nfunction spy() {\n\treturn function spy() {\n\t\tspy.called = true;\n\t};\n}\n\nexport default spy;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/eventinfo\n */\n\nimport spy from './spy';\n\n/**\n * The event object passed to event callbacks. It is used to provide information about the event as well as a tool to\n * manipulate it.\n */\nexport default class EventInfo {\n\t/**\n\t * @param {Object} source The emitter.\n\t * @param {String} name The event name.\n\t */\n\tconstructor( source, name ) {\n\t\t/**\n\t\t * The object that fired the event.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Object}\n\t\t */\n\t\tthis.source = source;\n\n\t\t/**\n\t\t * The event name.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.name = name;\n\n\t\t/**\n\t\t * Path this event has followed. See {@link module:utils/emittermixin~EmitterMixin#delegate}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Array.<Object>}\n\t\t */\n\t\tthis.path = [];\n\n\t\t// The following methods are defined in the constructor because they must be re-created per instance.\n\n\t\t/**\n\t\t * Stops the event emitter to call further callbacks for this event interaction.\n\t\t *\n\t\t * @method #stop\n\t\t */\n\t\tthis.stop = spy();\n\n\t\t/**\n\t\t * Removes the current callback from future interactions of this event.\n\t\t *\n\t\t * @method #off\n\t\t */\n\t\tthis.off = spy();\n\n\t\t/**\n\t\t * The value which will be returned by {@link module:utils/emittermixin~EmitterMixin#fire}.\n\t\t *\n\t\t * It's `undefined` by default and can be changed by an event listener:\n\t\t *\n\t\t *\t\tdataController.fire( 'getSelectedContent', ( evt ) => {\n\t\t *\t\t\t// This listener will make `dataController.fire( 'getSelectedContent' )`\n\t\t *\t\t\t// always return an empty DocumentFragment.\n\t\t *\t\t\tevt.return = new DocumentFragment();\n\t\t *\n\t\t *\t\t\t// Make sure no other listeners are executed.\n\t\t *\t\t\tevt.stop();\n\t\t *\t\t} );\n\t\t *\n\t\t * @member #return\n\t\t */\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/uid\n */\n\n// A hash table of hex numbers to avoid using toString() in uid() which is costly.\n// [ '00', '01', '02', ..., 'fe', 'ff' ]\nconst HEX_NUMBERS = new Array( 256 ).fill()\n\t.map( ( val, index ) => ( '0' + ( index ).toString( 16 ) ).slice( -2 ) );\n\n/**\n * Returns a unique id. The id starts with an \"e\" character and a randomly generated string of\n * 32 alphanumeric characters.\n *\n * **Note**: The characters the unique id is built from correspond to the hex number notation\n * (from \"0\" to \"9\", from \"a\" to \"f\"). In other words, each id corresponds to an \"e\" followed\n * by 16 8-bit numbers next to each other.\n *\n * @returns {String} An unique id string.\n */\nexport default function uid() {\n\t// Let's create some positive random 32bit integers first.\n\t//\n\t// 1. Math.random() is a float between 0 and 1.\n\t// 2. 0x100000000 is 2^32 = 4294967296.\n\t// 3. >>> 0 enforces integer (in JS all numbers are floating point).\n\t//\n\t// For instance:\n\t//\t\tMath.random() * 0x100000000 = 3366450031.853859\n\t// but\n\t//\t\tMath.random() * 0x100000000 >>> 0 = 3366450031.\n\tconst r1 = Math.random() * 0x100000000 >>> 0;\n\tconst r2 = Math.random() * 0x100000000 >>> 0;\n\tconst r3 = Math.random() * 0x100000000 >>> 0;\n\tconst r4 = Math.random() * 0x100000000 >>> 0;\n\n\t// Make sure that id does not start with number.\n\treturn 'e' +\n\t\tHEX_NUMBERS[ r1 >> 0 & 0xFF ] +\n\t\tHEX_NUMBERS[ r1 >> 8 & 0xFF ] +\n\t\tHEX_NUMBERS[ r1 >> 16 & 0xFF ] +\n\t\tHEX_NUMBERS[ r1 >> 24 & 0xFF ] +\n\t\tHEX_NUMBERS[ r2 >> 0 & 0xFF ] +\n\t\tHEX_NUMBERS[ r2 >> 8 & 0xFF ] +\n\t\tHEX_NUMBERS[ r2 >> 16 & 0xFF ] +\n\t\tHEX_NUMBERS[ r2 >> 24 & 0xFF ] +\n\t\tHEX_NUMBERS[ r3 >> 0 & 0xFF ] +\n\t\tHEX_NUMBERS[ r3 >> 8 & 0xFF ] +\n\t\tHEX_NUMBERS[ r3 >> 16 & 0xFF ] +\n\t\tHEX_NUMBERS[ r3 >> 24 & 0xFF ] +\n\t\tHEX_NUMBERS[ r4 >> 0 & 0xFF ] +\n\t\tHEX_NUMBERS[ r4 >> 8 & 0xFF ] +\n\t\tHEX_NUMBERS[ r4 >> 16 & 0xFF ] +\n\t\tHEX_NUMBERS[ r4 >> 24 & 0xFF ];\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/priorities\n */\n\n/**\n * String representing a priority value.\n *\n * @typedef {'highest'|'high'|'normal'|'low'|'lowest'} module:utils/priorities~PriorityString\n */\n\n/**\n * Provides group of constants to use instead of hardcoding numeric priority values.\n *\n * @namespace\n */\nconst priorities = {\n\t/**\n\t * Converts a string with priority name to it's numeric value. If `Number` is given, it just returns it.\n\t *\n\t * @static\n\t * @param {module:utils/priorities~PriorityString|Number} priority Priority to convert.\n\t * @returns {Number} Converted priority.\n\t */\n\tget( priority ) {\n\t\tif ( typeof priority != 'number' ) {\n\t\t\treturn this[ priority ] || this.normal;\n\t\t} else {\n\t\t\treturn priority;\n\t\t}\n\t},\n\n\thighest: 100000,\n\thigh: 1000,\n\tnormal: 0,\n\tlow: -1000,\n\tlowest: -100000\n};\n\nexport default priorities;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/emittermixin\n */\n\nimport EventInfo from './eventinfo';\nimport uid from './uid';\nimport priorities from './priorities';\n\n// To check if component is loaded more than once.\nimport './version';\nimport CKEditorError from './ckeditorerror';\n\nconst _listeningTo = Symbol( 'listeningTo' );\nconst _emitterId = Symbol( 'emitterId' );\n\n/**\n * Mixin that injects the {@link ~Emitter events API} into its host.\n *\n * @mixin EmitterMixin\n * @implements module:utils/emittermixin~Emitter\n */\nconst EmitterMixin = {\n\t/**\n\t * @inheritDoc\n\t */\n\ton( event, callback, options = {} ) {\n\t\tthis.listenTo( this, event, callback, options );\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\tonce( event, callback, options ) {\n\t\tlet wasFired = false;\n\n\t\tconst onceCallback = function( event, ...args ) {\n\t\t\t// Ensure the callback is called only once even if the callback itself leads to re-firing the event\n\t\t\t// (which would call the callback again).\n\t\t\tif ( !wasFired ) {\n\t\t\t\twasFired = true;\n\n\t\t\t\t// Go off() at the first call.\n\t\t\t\tevent.off();\n\n\t\t\t\t// Go with the original callback.\n\t\t\t\tcallback.call( this, event, ...args );\n\t\t\t}\n\t\t};\n\n\t\t// Make a similar on() call, simply replacing the callback.\n\t\tthis.listenTo( this, event, onceCallback, options );\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\toff( event, callback ) {\n\t\tthis.stopListening( this, event, callback );\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\tlistenTo( emitter, event, callback, options = {} ) {\n\t\tlet emitterInfo, eventCallbacks;\n\n\t\t// _listeningTo contains a list of emitters that this object is listening to.\n\t\t// This list has the following format:\n\t\t//\n\t\t// _listeningTo: {\n\t\t//     emitterId: {\n\t\t//         emitter: emitter,\n\t\t//         callbacks: {\n\t\t//             event1: [ callback1, callback2, ... ]\n\t\t//             ....\n\t\t//         }\n\t\t//     },\n\t\t//     ...\n\t\t// }\n\n\t\tif ( !this[ _listeningTo ] ) {\n\t\t\tthis[ _listeningTo ] = {};\n\t\t}\n\n\t\tconst emitters = this[ _listeningTo ];\n\n\t\tif ( !_getEmitterId( emitter ) ) {\n\t\t\t_setEmitterId( emitter );\n\t\t}\n\n\t\tconst emitterId = _getEmitterId( emitter );\n\n\t\tif ( !( emitterInfo = emitters[ emitterId ] ) ) {\n\t\t\temitterInfo = emitters[ emitterId ] = {\n\t\t\t\temitter,\n\t\t\t\tcallbacks: {}\n\t\t\t};\n\t\t}\n\n\t\tif ( !( eventCallbacks = emitterInfo.callbacks[ event ] ) ) {\n\t\t\teventCallbacks = emitterInfo.callbacks[ event ] = [];\n\t\t}\n\n\t\teventCallbacks.push( callback );\n\n\t\t// Finally register the callback to the event.\n\t\tcreateEventNamespace( emitter, event );\n\t\tconst lists = getCallbacksListsForNamespace( emitter, event );\n\t\tconst priority = priorities.get( options.priority );\n\n\t\tconst callbackDefinition = {\n\t\t\tcallback,\n\t\t\tpriority\n\t\t};\n\n\t\t// Add the callback to all callbacks list.\n\t\tfor ( const callbacks of lists ) {\n\t\t\t// Add the callback to the list in the right priority position.\n\t\t\tlet added = false;\n\n\t\t\tfor ( let i = 0; i < callbacks.length; i++ ) {\n\t\t\t\tif ( callbacks[ i ].priority < priority ) {\n\t\t\t\t\tcallbacks.splice( i, 0, callbackDefinition );\n\t\t\t\t\tadded = true;\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add at the end, if right place was not found.\n\t\t\tif ( !added ) {\n\t\t\t\tcallbacks.push( callbackDefinition );\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstopListening( emitter, event, callback ) {\n\t\tconst emitters = this[ _listeningTo ];\n\t\tlet emitterId = emitter && _getEmitterId( emitter );\n\t\tconst emitterInfo = emitters && emitterId && emitters[ emitterId ];\n\t\tconst eventCallbacks = emitterInfo && event && emitterInfo.callbacks[ event ];\n\n\t\t// Stop if nothing has been listened.\n\t\tif ( !emitters || ( emitter && !emitterInfo ) || ( event && !eventCallbacks ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// All params provided. off() that single callback.\n\t\tif ( callback ) {\n\t\t\tremoveCallback( emitter, event, callback );\n\t\t}\n\t\t// Only `emitter` and `event` provided. off() all callbacks for that event.\n\t\telse if ( eventCallbacks ) {\n\t\t\twhile ( ( callback = eventCallbacks.pop() ) ) {\n\t\t\t\tremoveCallback( emitter, event, callback );\n\t\t\t}\n\n\t\t\tdelete emitterInfo.callbacks[ event ];\n\t\t}\n\t\t// Only `emitter` provided. off() all events for that emitter.\n\t\telse if ( emitterInfo ) {\n\t\t\tfor ( event in emitterInfo.callbacks ) {\n\t\t\t\tthis.stopListening( emitter, event );\n\t\t\t}\n\t\t\tdelete emitters[ emitterId ];\n\t\t}\n\t\t// No params provided. off() all emitters.\n\t\telse {\n\t\t\tfor ( emitterId in emitters ) {\n\t\t\t\tthis.stopListening( emitters[ emitterId ].emitter );\n\t\t\t}\n\t\t\tdelete this[ _listeningTo ];\n\t\t}\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\tfire( eventOrInfo, ...args ) {\n\t\ttry {\n\t\t\tconst eventInfo = eventOrInfo instanceof EventInfo ? eventOrInfo : new EventInfo( this, eventOrInfo );\n\t\t\tconst event = eventInfo.name;\n\t\t\tlet callbacks = getCallbacksForEvent( this, event );\n\n\t\t\t// Record that the event passed this emitter on its path.\n\t\t\teventInfo.path.push( this );\n\n\t\t\t// Handle event listener callbacks first.\n\t\t\tif ( callbacks ) {\n\t\t\t\t// Arguments passed to each callback.\n\t\t\t\tconst callbackArgs = [ eventInfo, ...args ];\n\n\t\t\t\t// Copying callbacks array is the easiest and most secure way of preventing infinite loops, when event callbacks\n\t\t\t\t// are added while processing other callbacks. Previous solution involved adding counters (unique ids) but\n\t\t\t\t// failed if callbacks were added to the queue before currently processed callback.\n\t\t\t\t// If this proves to be too inefficient, another method is to change `.on()` so callbacks are stored if same\n\t\t\t\t// event is currently processed. Then, `.fire()` at the end, would have to add all stored events.\n\t\t\t\tcallbacks = Array.from( callbacks );\n\n\t\t\t\tfor ( let i = 0; i < callbacks.length; i++ ) {\n\t\t\t\t\tcallbacks[ i ].callback.apply( this, callbackArgs );\n\n\t\t\t\t\t// Remove the callback from future requests if off() has been called.\n\t\t\t\t\tif ( eventInfo.off.called ) {\n\t\t\t\t\t\t// Remove the called mark for the next calls.\n\t\t\t\t\t\tdelete eventInfo.off.called;\n\n\t\t\t\t\t\tremoveCallback( this, event, callbacks[ i ].callback );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do not execute next callbacks if stop() was called.\n\t\t\t\t\tif ( eventInfo.stop.called ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Delegate event to other emitters if needed.\n\t\t\tif ( this._delegations ) {\n\t\t\t\tconst destinations = this._delegations.get( event );\n\t\t\t\tconst passAllDestinations = this._delegations.get( '*' );\n\n\t\t\t\tif ( destinations ) {\n\t\t\t\t\tfireDelegatedEvents( destinations, eventInfo, args );\n\t\t\t\t}\n\n\t\t\t\tif ( passAllDestinations ) {\n\t\t\t\t\tfireDelegatedEvents( passAllDestinations, eventInfo, args );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn eventInfo.return;\n\t\t} catch ( err ) {\n\t\t\t// @if CK_DEBUG // throw err;\n\t\t\t/* istanbul ignore next */\n\t\t\tCKEditorError.rethrowUnexpectedError( err, this );\n\t\t}\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdelegate( ...events ) {\n\t\treturn {\n\t\t\tto: ( emitter, nameOrFunction ) => {\n\t\t\t\tif ( !this._delegations ) {\n\t\t\t\t\tthis._delegations = new Map();\n\t\t\t\t}\n\n\t\t\t\t// Originally there was a for..of loop which unfortunately caused an error in Babel that didn't allow\n\t\t\t\t// build an application. See: https://github.com/ckeditor/ckeditor5-react/issues/40.\n\t\t\t\tevents.forEach( eventName => {\n\t\t\t\t\tconst destinations = this._delegations.get( eventName );\n\n\t\t\t\t\tif ( !destinations ) {\n\t\t\t\t\t\tthis._delegations.set( eventName, new Map( [ [ emitter, nameOrFunction ] ] ) );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestinations.set( emitter, nameOrFunction );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t};\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstopDelegating( event, emitter ) {\n\t\tif ( !this._delegations ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !event ) {\n\t\t\tthis._delegations.clear();\n\t\t} else if ( !emitter ) {\n\t\t\tthis._delegations.delete( event );\n\t\t} else {\n\t\t\tconst destinations = this._delegations.get( event );\n\n\t\t\tif ( destinations ) {\n\t\t\t\tdestinations.delete( emitter );\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport default EmitterMixin;\n\n/**\n * Emitter/listener interface.\n *\n * Can be easily implemented by a class by mixing the {@link module:utils/emittermixin~EmitterMixin} mixin.\n *\n * @interface Emitter\n */\n\n/**\n * Registers a callback function to be executed when an event is fired.\n *\n * Shorthand for {@link #listenTo `this.listenTo( this, event, callback, options )`} (it makes the emitter\n * listen on itself).\n *\n * @method #on\n * @param {String} event The name of the event.\n * @param {Function} callback The function to be called on event.\n * @param {Object} [options={}] Additional options.\n * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n * order they were added.\n */\n\n/**\n * Registers a callback function to be executed on the next time the event is fired only. This is similar to\n * calling {@link #on} followed by {@link #off} in the callback.\n *\n * @method #once\n * @param {String} event The name of the event.\n * @param {Function} callback The function to be called on event.\n * @param {Object} [options={}] Additional options.\n * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n * order they were added.\n */\n\n/**\n * Stops executing the callback on the given event.\n * Shorthand for {@link #stopListening `this.stopListening( this, event, callback )`}.\n *\n * @method #off\n * @param {String} event The name of the event.\n * @param {Function} callback The function to stop being called.\n */\n\n/**\n * Registers a callback function to be executed when an event is fired in a specific (emitter) object.\n *\n * Events can be grouped in namespaces using `:`.\n * When namespaced event is fired, it additionally fires all callbacks for that namespace.\n *\n *\t\t// myEmitter.on( ... ) is a shorthand for myEmitter.listenTo( myEmitter, ... ).\n *\t\tmyEmitter.on( 'myGroup', genericCallback );\n *\t\tmyEmitter.on( 'myGroup:myEvent', specificCallback );\n *\n *\t\t// genericCallback is fired.\n *\t\tmyEmitter.fire( 'myGroup' );\n *\t\t// both genericCallback and specificCallback are fired.\n *\t\tmyEmitter.fire( 'myGroup:myEvent' );\n *\t\t// genericCallback is fired even though there are no callbacks for \"foo\".\n *\t\tmyEmitter.fire( 'myGroup:foo' );\n *\n * An event callback can {@link module:utils/eventinfo~EventInfo#stop stop the event} and\n * set the {@link module:utils/eventinfo~EventInfo#return return value} of the {@link #fire} method.\n *\n * @method #listenTo\n * @param {module:utils/emittermixin~Emitter} emitter The object that fires the event.\n * @param {String} event The name of the event.\n * @param {Function} callback The function to be called on event.\n * @param {Object} [options={}] Additional options.\n * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n * order they were added.\n */\n\n/**\n * Stops listening for events. It can be used at different levels:\n *\n * * To stop listening to a specific callback.\n * * To stop listening to a specific event.\n * * To stop listening to all events fired by a specific object.\n * * To stop listening to all events fired by all objects.\n *\n * @method #stopListening\n * @param {module:utils/emittermixin~Emitter} [emitter] The object to stop listening to. If omitted, stops it for all objects.\n * @param {String} [event] (Requires the `emitter`) The name of the event to stop listening to. If omitted, stops it\n * for all events from `emitter`.\n * @param {Function} [callback] (Requires the `event`) The function to be removed from the call list for the given\n * `event`.\n */\n\n/**\n * Fires an event, executing all callbacks registered for it.\n *\n * The first parameter passed to callbacks is an {@link module:utils/eventinfo~EventInfo} object,\n * followed by the optional `args` provided in the `fire()` method call.\n *\n * @method #fire\n * @param {String|module:utils/eventinfo~EventInfo} eventOrInfo The name of the event or `EventInfo` object if event is delegated.\n * @param {...*} [args] Additional arguments to be passed to the callbacks.\n * @returns {*} By default the method returns `undefined`. However, the return value can be changed by listeners\n * through modification of the {@link module:utils/eventinfo~EventInfo#return `evt.return`}'s property (the event info\n * is the first param of every callback).\n */\n\n/**\n * Delegates selected events to another {@link module:utils/emittermixin~Emitter}. For instance:\n *\n *\t\temitterA.delegate( 'eventX' ).to( emitterB );\n *\t\temitterA.delegate( 'eventX', 'eventY' ).to( emitterC );\n *\n * then `eventX` is delegated (fired by) `emitterB` and `emitterC` along with `data`:\n *\n *\t\temitterA.fire( 'eventX', data );\n *\n * and `eventY` is delegated (fired by) `emitterC` along with `data`:\n *\n *\t\temitterA.fire( 'eventY', data );\n *\n * @method #delegate\n * @param {...String} events Event names that will be delegated to another emitter.\n * @returns {module:utils/emittermixin~EmitterMixinDelegateChain}\n */\n\n/**\n * Stops delegating events. It can be used at different levels:\n *\n * * To stop delegating all events.\n * * To stop delegating a specific event to all emitters.\n * * To stop delegating a specific event to a specific emitter.\n *\n * @method #stopDelegating\n * @param {String} [event] The name of the event to stop delegating. If omitted, stops it all delegations.\n * @param {module:utils/emittermixin~Emitter} [emitter] (requires `event`) The object to stop delegating a particular event to.\n * If omitted, stops delegation of `event` to all emitters.\n */\n\n/**\n * Checks if `listeningEmitter` listens to an emitter with given `listenedToEmitterId` and if so, returns that emitter.\n * If not, returns `null`.\n *\n * @protected\n * @param {module:utils/emittermixin~Emitter} listeningEmitter An emitter that listens.\n * @param {String} listenedToEmitterId Unique emitter id of emitter listened to.\n * @returns {module:utils/emittermixin~Emitter|null}\n */\nexport function _getEmitterListenedTo( listeningEmitter, listenedToEmitterId ) {\n\tif ( listeningEmitter[ _listeningTo ] && listeningEmitter[ _listeningTo ][ listenedToEmitterId ] ) {\n\t\treturn listeningEmitter[ _listeningTo ][ listenedToEmitterId ].emitter;\n\t}\n\n\treturn null;\n}\n\n/**\n * Sets emitter's unique id.\n *\n * **Note:** `_emitterId` can be set only once.\n *\n * @protected\n * @param {module:utils/emittermixin~Emitter} emitter An emitter for which id will be set.\n * @param {String} [id] Unique id to set. If not passed, random unique id will be set.\n */\nexport function _setEmitterId( emitter, id ) {\n\tif ( !emitter[ _emitterId ] ) {\n\t\temitter[ _emitterId ] = id || uid();\n\t}\n}\n\n/**\n * Returns emitter's unique id.\n *\n * @protected\n * @param {module:utils/emittermixin~Emitter} emitter An emitter which id will be returned.\n */\nexport function _getEmitterId( emitter ) {\n\treturn emitter[ _emitterId ];\n}\n\n// Gets the internal `_events` property of the given object.\n// `_events` property store all lists with callbacks for registered event names.\n// If there were no events registered on the object, empty `_events` object is created.\nfunction getEvents( source ) {\n\tif ( !source._events ) {\n\t\tObject.defineProperty( source, '_events', {\n\t\t\tvalue: {}\n\t\t} );\n\t}\n\n\treturn source._events;\n}\n\n// Creates event node for generic-specific events relation architecture.\nfunction makeEventNode() {\n\treturn {\n\t\tcallbacks: [],\n\t\tchildEvents: []\n\t};\n}\n\n// Creates an architecture for generic-specific events relation.\n// If needed, creates all events for given eventName, i.e. if the first registered event\n// is foo:bar:abc, it will create foo:bar:abc, foo:bar and foo event and tie them together.\n// It also copies callbacks from more generic events to more specific events when\n// specific events are created.\nfunction createEventNamespace( source, eventName ) {\n\tconst events = getEvents( source );\n\n\t// First, check if the event we want to add to the structure already exists.\n\tif ( events[ eventName ] ) {\n\t\t// If it exists, we don't have to do anything.\n\t\treturn;\n\t}\n\n\t// In other case, we have to create the structure for the event.\n\t// Note, that we might need to create intermediate events too.\n\t// I.e. if foo:bar:abc is being registered and we only have foo in the structure,\n\t// we need to also register foo:bar.\n\n\t// Currently processed event name.\n\tlet name = eventName;\n\t// Name of the event that is a child event for currently processed event.\n\tlet childEventName = null;\n\n\t// Array containing all newly created specific events.\n\tconst newEventNodes = [];\n\n\t// While loop can't check for ':' index because we have to handle generic events too.\n\t// In each loop, we truncate event name, going from the most specific name to the generic one.\n\t// I.e. foo:bar:abc -> foo:bar -> foo.\n\twhile ( name !== '' ) {\n\t\tif ( events[ name ] ) {\n\t\t\t// If the currently processed event name is already registered, we can be sure\n\t\t\t// that it already has all the structure created, so we can break the loop here\n\t\t\t// as no more events need to be registered.\n\t\t\tbreak;\n\t\t}\n\n\t\t// If this event is not yet registered, create a new object for it.\n\t\tevents[ name ] = makeEventNode();\n\t\t// Add it to the array with newly created events.\n\t\tnewEventNodes.push( events[ name ] );\n\n\t\t// Add previously processed event name as a child of this event.\n\t\tif ( childEventName ) {\n\t\t\tevents[ name ].childEvents.push( childEventName );\n\t\t}\n\n\t\tchildEventName = name;\n\t\t// If `.lastIndexOf()` returns -1, `.substr()` will return '' which will break the loop.\n\t\tname = name.substr( 0, name.lastIndexOf( ':' ) );\n\t}\n\n\tif ( name !== '' ) {\n\t\t// If name is not empty, we found an already registered event that was a parent of the\n\t\t// event we wanted to register.\n\n\t\t// Copy that event's callbacks to newly registered events.\n\t\tfor ( const node of newEventNodes ) {\n\t\t\tnode.callbacks = events[ name ].callbacks.slice();\n\t\t}\n\n\t\t// Add last newly created event to the already registered event.\n\t\tevents[ name ].childEvents.push( childEventName );\n\t}\n}\n\n// Gets an array containing callbacks list for a given event and it's more specific events.\n// I.e. if given event is foo:bar and there is also foo:bar:abc event registered, this will\n// return callback list of foo:bar and foo:bar:abc (but not foo).\nfunction getCallbacksListsForNamespace( source, eventName ) {\n\tconst eventNode = getEvents( source )[ eventName ];\n\n\tif ( !eventNode ) {\n\t\treturn [];\n\t}\n\n\tlet callbacksLists = [ eventNode.callbacks ];\n\n\tfor ( let i = 0; i < eventNode.childEvents.length; i++ ) {\n\t\tconst childCallbacksLists = getCallbacksListsForNamespace( source, eventNode.childEvents[ i ] );\n\n\t\tcallbacksLists = callbacksLists.concat( childCallbacksLists );\n\t}\n\n\treturn callbacksLists;\n}\n\n// Get the list of callbacks for a given event, but only if there any callbacks have been registered.\n// If there are no callbacks registered for given event, it checks if this is a specific event and looks\n// for callbacks for it's more generic version.\nfunction getCallbacksForEvent( source, eventName ) {\n\tlet event;\n\n\tif ( !source._events || !( event = source._events[ eventName ] ) || !event.callbacks.length ) {\n\t\t// There are no callbacks registered for specified eventName.\n\t\t// But this could be a specific-type event that is in a namespace.\n\t\tif ( eventName.indexOf( ':' ) > -1 ) {\n\t\t\t// If the eventName is specific, try to find callback lists for more generic event.\n\t\t\treturn getCallbacksForEvent( source, eventName.substr( 0, eventName.lastIndexOf( ':' ) ) );\n\t\t} else {\n\t\t\t// If this is a top-level generic event, return null;\n\t\t\treturn null;\n\t\t}\n\t}\n\n\treturn event.callbacks;\n}\n\n// Fires delegated events for given map of destinations.\n//\n// @private\n// * @param {Map.<utils.Emitter>} destinations A map containing\n// `[ {@link module:utils/emittermixin~Emitter}, \"event name\" ]` pair destinations.\n// * @param {utils.EventInfo} eventInfo The original event info object.\n// * @param {Array.<*>} fireArgs Arguments the original event was fired with.\nfunction fireDelegatedEvents( destinations, eventInfo, fireArgs ) {\n\tfor ( let [ emitter, name ] of destinations ) {\n\t\tif ( !name ) {\n\t\t\tname = eventInfo.name;\n\t\t} else if ( typeof name == 'function' ) {\n\t\t\tname = name( eventInfo.name );\n\t\t}\n\n\t\tconst delegatedInfo = new EventInfo( eventInfo.source, name );\n\n\t\tdelegatedInfo.path = [ ...eventInfo.path ];\n\n\t\temitter.fire( delegatedInfo, ...fireArgs );\n\t}\n}\n\n// Removes callback from emitter for given event.\n//\n// @param {module:utils/emittermixin~Emitter} emitter\n// @param {String} event\n// @param {Function} callback\nfunction removeCallback( emitter, event, callback ) {\n\tconst lists = getCallbacksListsForNamespace( emitter, event );\n\n\tfor ( const callbacks of lists ) {\n\t\tfor ( let i = 0; i < callbacks.length; i++ ) {\n\t\t\tif ( callbacks[ i ].callback == callback ) {\n\t\t\t\t// Remove the callback from the list (fixing the next index).\n\t\t\t\tcallbacks.splice( i, 1 );\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * The return value of {@link ~EmitterMixin#delegate}.\n *\n * @interface module:utils/emittermixin~EmitterMixinDelegateChain\n */\n\n/**\n * Selects destination for {@link module:utils/emittermixin~EmitterMixin#delegate} events.\n *\n * @method #to\n * @param {module:utils/emittermixin~Emitter} emitter An `EmitterMixin` instance which is the destination for delegated events.\n * @param {String|Function} [nameOrFunction] A custom event name or function which converts the original name string.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/mix\n */\n\n/**\n * Copies enumerable properties and symbols from the objects given as 2nd+ parameters to the\n * prototype of first object (a constructor).\n *\n *\t\tclass Editor {\n *\t\t\t...\n *\t\t}\n *\n *\t\tconst SomeMixin = {\n *\t\t\ta() {\n *\t\t\t\treturn 'a';\n *\t\t\t}\n *\t\t};\n *\n *\t\tmix( Editor, SomeMixin, ... );\n *\n *\t\tnew Editor().a(); // -> 'a'\n *\n * Note: Properties which already exist in the base class will not be overriden.\n *\n * @param {Function} [baseClass] Class which prototype will be extended.\n * @param {Object} [...mixins] Objects from which to get properties.\n */\nexport default function mix( baseClass, ...mixins ) {\n\tmixins.forEach( mixin => {\n\t\tObject.getOwnPropertyNames( mixin ).concat( Object.getOwnPropertySymbols( mixin ) )\n\t\t\t.forEach( key => {\n\t\t\t\tif ( key in baseClass.prototype ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst sourceDescriptor = Object.getOwnPropertyDescriptor( mixin, key );\n\t\t\t\tsourceDescriptor.enumerable = false;\n\n\t\t\t\tObject.defineProperty( baseClass.prototype, key, sourceDescriptor );\n\t\t\t} );\n\t} );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/collection\n */\n\nimport EmitterMixin from './emittermixin';\nimport CKEditorError from './ckeditorerror';\nimport uid from './uid';\nimport mix from './mix';\n\n/**\n * Collections are ordered sets of objects. Items in the collection can be retrieved by their indexes\n * in the collection (like in an array) or by their ids.\n *\n * If an object without an `id` property is being added to the collection, the `id` property will be generated\n * automatically. Note that the automatically generated id is unique only within this single collection instance.\n *\n * By default an item in the collection is identified by its `id` property. The name of the identifier can be\n * configured through the constructor of the collection.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\nexport default class Collection {\n\t/**\n\t * Creates a new Collection instance.\n\t *\n\t * @param {Object} [options={}] The options object.\n\t * @param {String} [options.idProperty='id'] The name of the property which is considered to identify an item.\n\t */\n\tconstructor( options = {} ) {\n\t\t/**\n\t\t * The internal list of items in the collection.\n\t\t *\n\t\t * @private\n\t\t * @member {Object[]}\n\t\t */\n\t\tthis._items = [];\n\n\t\t/**\n\t\t * The internal map of items in the collection.\n\t\t *\n\t\t * @private\n\t\t * @member {Map}\n\t\t */\n\t\tthis._itemMap = new Map();\n\n\t\t/**\n\t\t * The name of the property which is considered to identify an item.\n\t\t *\n\t\t * @private\n\t\t * @member {String}\n\t\t */\n\t\tthis._idProperty = options.idProperty || 'id';\n\n\t\t/**\n\t\t * A helper mapping external items of a bound collection ({@link #bindTo})\n\t\t * and actual items of this collection. It provides information\n\t\t * necessary to properly remove items bound to another collection.\n\t\t *\n\t\t * See {@link #_bindToInternalToExternalMap}.\n\t\t *\n\t\t * @protected\n\t\t * @member {WeakMap}\n\t\t */\n\t\tthis._bindToExternalToInternalMap = new WeakMap();\n\n\t\t/**\n\t\t * A helper mapping items of this collection to external items of a bound collection\n\t\t * ({@link #bindTo}). It provides information necessary to manage the bindings, e.g.\n\t\t * to avoid loops in two–way bindings.\n\t\t *\n\t\t * See {@link #_bindToExternalToInternalMap}.\n\t\t *\n\t\t * @protected\n\t\t * @member {WeakMap}\n\t\t */\n\t\tthis._bindToInternalToExternalMap = new WeakMap();\n\n\t\t/**\n\t\t * Stores indexes of skipped items from bound external collection.\n\t\t *\n\t\t * @private\n\t\t * @member {Array}\n\t\t */\n\t\tthis._skippedIndexesFromExternal = [];\n\n\t\t/**\n\t\t * A collection instance this collection is bound to as a result\n\t\t * of calling {@link #bindTo} method.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:utils/collection~Collection} #_bindToCollection\n\t\t */\n\t}\n\n\t/**\n\t * The number of items available in the collection.\n\t *\n\t * @member {Number} #length\n\t */\n\tget length() {\n\t\treturn this._items.length;\n\t}\n\n\t/**\n\t * Returns the first item from the collection or null when collection is empty.\n\t *\n\t * @returns {Object|null} The first item or `null` if collection is empty.\n\t */\n\tget first() {\n\t\treturn this._items[ 0 ] || null;\n\t}\n\n\t/**\n\t * Returns the last item from the collection or null when collection is empty.\n\t *\n\t * @returns {Object|null} The last item or `null` if collection is empty.\n\t */\n\tget last() {\n\t\treturn this._items[ this.length - 1 ] || null;\n\t}\n\n\t/**\n\t * Adds an item into the collection.\n\t *\n\t * If the item does not have an id, then it will be automatically generated and set on the item.\n\t *\n\t * @chainable\n\t * @param {Object} item\n\t * @param {Number} [index] The position of the item in the collection. The item\n\t * is pushed to the collection when `index` not specified.\n\t * @fires add\n\t */\n\tadd( item, index ) {\n\t\tlet itemId;\n\t\tconst idProperty = this._idProperty;\n\n\t\tif ( ( idProperty in item ) ) {\n\t\t\titemId = item[ idProperty ];\n\n\t\t\tif ( typeof itemId != 'string' ) {\n\t\t\t\t/**\n\t\t\t\t * This item's id should be a string.\n\t\t\t\t *\n\t\t\t\t * @error collection-add-invalid-id\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'collection-add-invalid-id', this );\n\t\t\t}\n\n\t\t\tif ( this.get( itemId ) ) {\n\t\t\t\t/**\n\t\t\t\t * This item already exists in the collection.\n\t\t\t\t *\n\t\t\t\t * @error collection-add-item-already-exists\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'collection-add-item-already-exists', this );\n\t\t\t}\n\t\t} else {\n\t\t\titem[ idProperty ] = itemId = uid();\n\t\t}\n\n\t\t// TODO: Use ES6 default function argument.\n\t\tif ( index === undefined ) {\n\t\t\tindex = this._items.length;\n\t\t} else if ( index > this._items.length || index < 0 ) {\n\t\t\t/**\n\t\t\t * The index number has invalid value.\n\t\t\t *\n\t\t\t * @error collection-add-item-bad-index\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'collection-add-item-invalid-index', this );\n\t\t}\n\n\t\tthis._items.splice( index, 0, item );\n\n\t\tthis._itemMap.set( itemId, item );\n\n\t\tthis.fire( 'add', item, index );\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Gets item by its id or index.\n\t *\n\t * @param {String|Number} idOrIndex The item id or index in the collection.\n\t * @returns {Object|null} The requested item or `null` if such item does not exist.\n\t */\n\tget( idOrIndex ) {\n\t\tlet item;\n\n\t\tif ( typeof idOrIndex == 'string' ) {\n\t\t\titem = this._itemMap.get( idOrIndex );\n\t\t} else if ( typeof idOrIndex == 'number' ) {\n\t\t\titem = this._items[ idOrIndex ];\n\t\t} else {\n\t\t\t/**\n\t\t\t * Index or id must be given.\n\t\t\t *\n\t\t\t * @error collection-get-invalid-arg\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'collection-get-invalid-arg: Index or id must be given.', this );\n\t\t}\n\n\t\treturn item || null;\n\t}\n\n\t/**\n\t * Returns a boolean indicating whether the collection contains an item.\n\t *\n\t * @param {Object|String} itemOrId The item or its id in the collection.\n\t * @returns {Boolean} `true` if the collection contains the item, `false` otherwise.\n\t */\n\thas( itemOrId ) {\n\t\tif ( typeof itemOrId == 'string' ) {\n\t\t\treturn this._itemMap.has( itemOrId );\n\t\t} else { // Object\n\t\t\tconst idProperty = this._idProperty;\n\t\t\tconst id = itemOrId[ idProperty ];\n\n\t\t\treturn this._itemMap.has( id );\n\t\t}\n\t}\n\n\t/**\n\t * Gets index of item in the collection.\n\t * When item is not defined in the collection then index will be equal -1.\n\t *\n\t * @param {Object|String} itemOrId The item or its id in the collection.\n\t * @returns {Number} Index of given item.\n\t */\n\tgetIndex( itemOrId ) {\n\t\tlet item;\n\n\t\tif ( typeof itemOrId == 'string' ) {\n\t\t\titem = this._itemMap.get( itemOrId );\n\t\t} else {\n\t\t\titem = itemOrId;\n\t\t}\n\n\t\treturn this._items.indexOf( item );\n\t}\n\n\t/**\n\t * Removes an item from the collection.\n\t *\n\t * @param {Object|Number|String} subject The item to remove, its id or index in the collection.\n\t * @returns {Object} The removed item.\n\t * @fires remove\n\t */\n\tremove( subject ) {\n\t\tlet index, id, item;\n\t\tlet itemDoesNotExist = false;\n\t\tconst idProperty = this._idProperty;\n\n\t\tif ( typeof subject == 'string' ) {\n\t\t\tid = subject;\n\t\t\titem = this._itemMap.get( id );\n\t\t\titemDoesNotExist = !item;\n\n\t\t\tif ( item ) {\n\t\t\t\tindex = this._items.indexOf( item );\n\t\t\t}\n\t\t} else if ( typeof subject == 'number' ) {\n\t\t\tindex = subject;\n\t\t\titem = this._items[ index ];\n\t\t\titemDoesNotExist = !item;\n\n\t\t\tif ( item ) {\n\t\t\t\tid = item[ idProperty ];\n\t\t\t}\n\t\t} else {\n\t\t\titem = subject;\n\t\t\tid = item[ idProperty ];\n\t\t\tindex = this._items.indexOf( item );\n\t\t\titemDoesNotExist = ( index == -1 || !this._itemMap.get( id ) );\n\t\t}\n\n\t\tif ( itemDoesNotExist ) {\n\t\t\t/**\n\t\t\t * Item not found.\n\t\t\t *\n\t\t\t * @error collection-remove-404\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'collection-remove-404: Item not found.', this );\n\t\t}\n\n\t\tthis._items.splice( index, 1 );\n\t\tthis._itemMap.delete( id );\n\n\t\tconst externalItem = this._bindToInternalToExternalMap.get( item );\n\t\tthis._bindToInternalToExternalMap.delete( item );\n\t\tthis._bindToExternalToInternalMap.delete( externalItem );\n\n\t\tthis.fire( 'remove', item, index );\n\n\t\treturn item;\n\t}\n\n\t/**\n\t * Executes the callback for each item in the collection and composes an array or values returned by this callback.\n\t *\n\t * @param {Function} callback\n\t * @param {Object} callback.item\n\t * @param {Number} callback.index\n\t * @param {Object} ctx Context in which the `callback` will be called.\n\t * @returns {Array} The result of mapping.\n\t */\n\tmap( callback, ctx ) {\n\t\treturn this._items.map( callback, ctx );\n\t}\n\n\t/**\n\t * Finds the first item in the collection for which the `callback` returns a true value.\n\t *\n\t * @param {Function} callback\n\t * @param {Object} callback.item\n\t * @param {Number} callback.index\n\t * @param {Object} ctx Context in which the `callback` will be called.\n\t * @returns {Object} The item for which `callback` returned a true value.\n\t */\n\tfind( callback, ctx ) {\n\t\treturn this._items.find( callback, ctx );\n\t}\n\n\t/**\n\t * Returns an array with items for which the `callback` returned a true value.\n\t *\n\t * @param {Function} callback\n\t * @param {Object} callback.item\n\t * @param {Number} callback.index\n\t * @param {Object} ctx Context in which the `callback` will be called.\n\t * @returns {Object[]} The array with matching items.\n\t */\n\tfilter( callback, ctx ) {\n\t\treturn this._items.filter( callback, ctx );\n\t}\n\n\t/**\n\t * Removes all items from the collection and destroys the binding created using\n\t * {@link #bindTo}.\n\t */\n\tclear() {\n\t\tif ( this._bindToCollection ) {\n\t\t\tthis.stopListening( this._bindToCollection );\n\t\t\tthis._bindToCollection = null;\n\t\t}\n\n\t\twhile ( this.length ) {\n\t\t\tthis.remove( 0 );\n\t\t}\n\t}\n\n\t/**\n\t * Binds and synchronizes the collection with another one.\n\t *\n\t * The binding can be a simple factory:\n\t *\n\t *\t\tclass FactoryClass {\n\t *\t\t\tconstructor( data ) {\n\t *\t\t\t\tthis.label = data.label;\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t *\t\tconst source = new Collection( { idProperty: 'label' } );\n\t *\t\tconst target = new Collection();\n\t *\n\t *\t\ttarget.bindTo( source ).as( FactoryClass );\n\t *\n\t *\t\tsource.add( { label: 'foo' } );\n\t *\t\tsource.add( { label: 'bar' } );\n\t *\n\t *\t\tconsole.log( target.length ); // 2\n\t *\t\tconsole.log( target.get( 1 ).label ); // 'bar'\n\t *\n\t *\t\tsource.remove( 0 );\n\t *\t\tconsole.log( target.length ); // 1\n\t *\t\tconsole.log( target.get( 0 ).label ); // 'bar'\n\t *\n\t * or the factory driven by a custom callback:\n\t *\n\t *\t\tclass FooClass {\n\t *\t\t\tconstructor( data ) {\n\t *\t\t\t\tthis.label = data.label;\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t *\t\tclass BarClass {\n\t *\t\t\tconstructor( data ) {\n\t *\t\t\t\tthis.label = data.label;\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t *\t\tconst source = new Collection( { idProperty: 'label' } );\n\t *\t\tconst target = new Collection();\n\t *\n\t *\t\ttarget.bindTo( source ).using( ( item ) => {\n\t *\t\t\tif ( item.label == 'foo' ) {\n\t *\t\t\t\treturn new FooClass( item );\n\t *\t\t\t} else {\n\t *\t\t\t\treturn new BarClass( item );\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\tsource.add( { label: 'foo' } );\n\t *\t\tsource.add( { label: 'bar' } );\n\t *\n\t *\t\tconsole.log( target.length ); // 2\n\t *\t\tconsole.log( target.get( 0 ) instanceof FooClass ); // true\n\t *\t\tconsole.log( target.get( 1 ) instanceof BarClass ); // true\n\t *\n\t * or the factory out of property name:\n\t *\n\t *\t\tconst source = new Collection( { idProperty: 'label' } );\n\t *\t\tconst target = new Collection();\n\t *\n\t *\t\ttarget.bindTo( source ).using( 'label' );\n\t *\n\t *\t\tsource.add( { label: { value: 'foo' } } );\n\t *\t\tsource.add( { label: { value: 'bar' } } );\n\t *\n\t *\t\tconsole.log( target.length ); // 2\n\t *\t\tconsole.log( target.get( 0 ).value ); // 'foo'\n\t *\t\tconsole.log( target.get( 1 ).value ); // 'bar'\n\t *\n\t * It's possible to skip specified items by returning falsy value:\n\t *\n\t *\t\tconst source = new Collection();\n\t *\t\tconst target = new Collection();\n\t *\n\t *\t\ttarget.bindTo( source ).using( item => {\n\t *\t\t\tif ( item.hidden ) {\n\t *\t\t\t\treturn null;\n\t *\t\t\t}\n\t *\n\t *\t\t\treturn item;\n\t *\t\t} );\n\t *\n\t *\t\tsource.add( { hidden: true } );\n\t *\t\tsource.add( { hidden: false } );\n\t *\n\t *\t\tconsole.log( source.length ); // 2\n\t *\t\tconsole.log( target.length ); // 1\n\t *\n\t * **Note**: {@link #clear} can be used to break the binding.\n\t *\n\t * @param {module:utils/collection~Collection} externalCollection A collection to be bound.\n\t * @returns {Object}\n\t * @returns {module:utils/collection~CollectionBindToChain} The binding chain object.\n\t */\n\tbindTo( externalCollection ) {\n\t\tif ( this._bindToCollection ) {\n\t\t\t/**\n\t\t\t * The collection cannot be bound more than once.\n\t\t\t *\n\t\t\t * @error collection-bind-to-rebind\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'collection-bind-to-rebind: The collection cannot be bound more than once.', this );\n\t\t}\n\n\t\tthis._bindToCollection = externalCollection;\n\n\t\treturn {\n\t\t\tas: Class => {\n\t\t\t\tthis._setUpBindToBinding( item => new Class( item ) );\n\t\t\t},\n\n\t\t\tusing: callbackOrProperty => {\n\t\t\t\tif ( typeof callbackOrProperty == 'function' ) {\n\t\t\t\t\tthis._setUpBindToBinding( item => callbackOrProperty( item ) );\n\t\t\t\t} else {\n\t\t\t\t\tthis._setUpBindToBinding( item => item[ callbackOrProperty ] );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Finalizes and activates a binding initiated by {#bindTo}.\n\t *\n\t * @protected\n\t * @param {Function} factory A function which produces collection items.\n\t */\n\t_setUpBindToBinding( factory ) {\n\t\tconst externalCollection = this._bindToCollection;\n\n\t\t// Adds the item to the collection once a change has been done to the external collection.\n\t\t//\n\t\t// @private\n\t\tconst addItem = ( evt, externalItem, index ) => {\n\t\t\tconst isExternalBoundToThis = externalCollection._bindToCollection == this;\n\t\t\tconst externalItemBound = externalCollection._bindToInternalToExternalMap.get( externalItem );\n\n\t\t\t// If an external collection is bound to this collection, which makes it a 2–way binding,\n\t\t\t// and the particular external collection item is already bound, don't add it here.\n\t\t\t// The external item has been created **out of this collection's item** and (re)adding it will\n\t\t\t// cause a loop.\n\t\t\tif ( isExternalBoundToThis && externalItemBound ) {\n\t\t\t\tthis._bindToExternalToInternalMap.set( externalItem, externalItemBound );\n\t\t\t\tthis._bindToInternalToExternalMap.set( externalItemBound, externalItem );\n\t\t\t} else {\n\t\t\t\tconst item = factory( externalItem );\n\n\t\t\t\t// When there is no item we need to remember skipped index first and then we can skip this item.\n\t\t\t\tif ( !item ) {\n\t\t\t\t\tthis._skippedIndexesFromExternal.push( index );\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Lets try to put item at the same index as index in external collection\n\t\t\t\t// but when there are a skipped items in one or both collections we need to recalculate this index.\n\t\t\t\tlet finalIndex = index;\n\n\t\t\t\t// When we try to insert item after some skipped items from external collection we need\n\t\t\t\t// to include this skipped items and decrease index.\n\t\t\t\t//\n\t\t\t\t// For the following example:\n\t\t\t\t// external -> [ 'A', 'B - skipped for internal', 'C - skipped for internal' ]\n\t\t\t\t// internal -> [ A ]\n\t\t\t\t//\n\t\t\t\t// Another item is been added at the end of external collection:\n\t\t\t\t// external.add( 'D' )\n\t\t\t\t// external -> [ 'A', 'B - skipped for internal', 'C - skipped for internal', 'D' ]\n\t\t\t\t//\n\t\t\t\t// We can't just add 'D' to internal at the same index as index in external because\n\t\t\t\t// this will produce empty indexes what is invalid:\n\t\t\t\t// internal -> [ 'A', empty, empty, 'D' ]\n\t\t\t\t//\n\t\t\t\t// So we need to include skipped items and decrease index\n\t\t\t\t// internal -> [ 'A', 'D' ]\n\t\t\t\tfor ( const skipped of this._skippedIndexesFromExternal ) {\n\t\t\t\t\tif ( index > skipped ) {\n\t\t\t\t\t\tfinalIndex--;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// We need to take into consideration that external collection could skip some items from\n\t\t\t\t// internal collection.\n\t\t\t\t//\n\t\t\t\t// For the following example:\n\t\t\t\t// internal -> [ 'A', 'B - skipped for external', 'C - skipped for external' ]\n\t\t\t\t// external -> [ A ]\n\t\t\t\t//\n\t\t\t\t// Another item is been added at the end of external collection:\n\t\t\t\t// external.add( 'D' )\n\t\t\t\t// external -> [ 'A', 'D' ]\n\t\t\t\t//\n\t\t\t\t// We need to include skipped items and place new item after them:\n\t\t\t\t// internal -> [ 'A', 'B - skipped for external', 'C - skipped for external', 'D' ]\n\t\t\t\tfor ( const skipped of externalCollection._skippedIndexesFromExternal ) {\n\t\t\t\t\tif ( finalIndex >= skipped ) {\n\t\t\t\t\t\tfinalIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._bindToExternalToInternalMap.set( externalItem, item );\n\t\t\t\tthis._bindToInternalToExternalMap.set( item, externalItem );\n\t\t\t\tthis.add( item, finalIndex );\n\n\t\t\t\t// After adding new element to internal collection we need update indexes\n\t\t\t\t// of skipped items in external collection.\n\t\t\t\tfor ( let i = 0; i < externalCollection._skippedIndexesFromExternal.length; i++ ) {\n\t\t\t\t\tif ( finalIndex <= externalCollection._skippedIndexesFromExternal[ i ] ) {\n\t\t\t\t\t\texternalCollection._skippedIndexesFromExternal[ i ]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Load the initial content of the collection.\n\t\tfor ( const externalItem of externalCollection ) {\n\t\t\taddItem( null, externalItem, externalCollection.getIndex( externalItem ) );\n\t\t}\n\n\t\t// Synchronize the with collection as new items are added.\n\t\tthis.listenTo( externalCollection, 'add', addItem );\n\n\t\t// Synchronize the with collection as new items are removed.\n\t\tthis.listenTo( externalCollection, 'remove', ( evt, externalItem, index ) => {\n\t\t\tconst item = this._bindToExternalToInternalMap.get( externalItem );\n\n\t\t\tif ( item ) {\n\t\t\t\tthis.remove( item );\n\t\t\t}\n\n\t\t\t// After removing element from external collection we need update/remove indexes\n\t\t\t// of skipped items in internal collection.\n\t\t\tthis._skippedIndexesFromExternal = this._skippedIndexesFromExternal.reduce( ( result, skipped ) => {\n\t\t\t\tif ( index < skipped ) {\n\t\t\t\t\tresult.push( skipped - 1 );\n\t\t\t\t}\n\n\t\t\t\tif ( index > skipped ) {\n\t\t\t\t\tresult.push( skipped );\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, [] );\n\t\t} );\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * @returns {Iterable.<*>}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this._items[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Fired when an item is added to the collection.\n\t *\n\t * @event add\n\t * @param {Object} item The added item.\n\t */\n\n\t/**\n\t * Fired when an item is removed from the collection.\n\t *\n\t * @event remove\n\t * @param {Object} item The removed item.\n\t * @param {Number} index Index from which item was removed.\n\t */\n}\n\nmix( Collection, EmitterMixin );\n\n/**\n * An object returned by the {@link module:utils/collection~Collection#bindTo `bindTo()`} method\n * providing functions that specify the type of the binding.\n *\n * See the {@link module:utils/collection~Collection#bindTo `bindTo()`} documentation for examples.\n *\n * @interface module:utils/collection~CollectionBindToChain\n */\n\n/**\n * Creates a callback or a property binding.\n *\n * @method #using\n * @param {Function|String} callbackOrProperty  When the function is passed, it should return\n * the collection items. When the string is provided, the property value is used to create the bound collection items.\n */\n\n/**\n * Creates the class factory binding in which items of the source collection are passed to\n * the constructor of the specified class.\n *\n * @method #as\n * @param {Function} Class The class constructor used to create instances in the factory.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/plugincollection\n */\n\n/* globals console */\n\nimport CKEditorError, { attachLinkToDocumentation } from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * Manages a list of CKEditor plugins, including loading, resolving dependencies and initialization.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\nexport default class PluginCollection {\n\t/**\n\t * Creates an instance of the plugin collection class.\n\t * Allows loading and initializing plugins and their dependencies.\n\t * Allows to provide a list of already loaded plugins. These plugins will not be destroyed along with this collection.\n\t *\n\t * @param {module:core/editor/editor~Editor|module:core/context~Context} context\n\t * @param {Array.<Function>} [availablePlugins] Plugins (constructors) which the collection will be able to use\n\t * when {@link module:core/plugincollection~PluginCollection#init} is used with plugin names (strings, instead of constructors).\n\t * Usually, the editor will pass its built-in plugins to the collection so they can later be\n\t * used in `config.plugins` or `config.removePlugins` by names.\n\t * @param {Iterable.<Array>} contextPlugins A list of already initialized plugins represented by a\n\t * `[ PluginConstructor, pluginInstance ]` pair.\n\t */\n\tconstructor( context, availablePlugins = [], contextPlugins = [] ) {\n\t\t/**\n\t\t * @protected\n\t\t * @type {module:core/editor/editor~Editor|module:core/context~Context}\n\t\t */\n\t\tthis._context = context;\n\n\t\t/**\n\t\t * @protected\n\t\t * @type {Map}\n\t\t */\n\t\tthis._plugins = new Map();\n\n\t\t/**\n\t\t * A map of plugin constructors that can be retrieved by their names.\n\t\t *\n\t\t * @protected\n\t\t * @type {Map.<String|Function,Function>}\n\t\t */\n\t\tthis._availablePlugins = new Map();\n\n\t\tfor ( const PluginConstructor of availablePlugins ) {\n\t\t\tif ( PluginConstructor.pluginName ) {\n\t\t\t\tthis._availablePlugins.set( PluginConstructor.pluginName, PluginConstructor );\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Map of {@link module:core/contextplugin~ContextPlugin context plugins} which can be retrieved by their constructors or instances.\n\t\t *\n\t\t * @protected\n\t\t * @type {Map<Function,Function>}\n\t\t */\n\t\tthis._contextPlugins = new Map();\n\n\t\tfor ( const [ PluginConstructor, pluginInstance ] of contextPlugins ) {\n\t\t\tthis._contextPlugins.set( PluginConstructor, pluginInstance );\n\t\t\tthis._contextPlugins.set( pluginInstance, PluginConstructor );\n\n\t\t\t// To make it possible to require a plugin by its name.\n\t\t\tif ( PluginConstructor.pluginName ) {\n\t\t\t\tthis._availablePlugins.set( PluginConstructor.pluginName, PluginConstructor );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * Returns `[ PluginConstructor, pluginInstance ]` pairs.\n\t *\n\t * @returns {Iterable.<Array>}\n\t */\n\t* [ Symbol.iterator ]() {\n\t\tfor ( const entry of this._plugins ) {\n\t\t\tif ( typeof entry[ 0 ] == 'function' ) {\n\t\t\t\tyield entry;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets the plugin instance by its constructor or name.\n\t *\n\t *\t\t// Check if 'Clipboard' plugin was loaded.\n\t *\t\tif ( editor.plugins.has( 'Clipboard' ) ) {\n\t *\t\t\t// Get clipboard plugin instance\n\t *\t\t\tconst clipboard = editor.plugins.get( 'Clipboard' );\n\t *\n\t *\t\t\tthis.listenTo( clipboard, 'inputTransformation', ( evt, data ) => {\n\t *\t\t\t\t// Do something on clipboard input.\n\t *\t\t\t} );\n\t *\t\t}\n\t *\n\t * **Note**: This method will throw error if plugin is not loaded. Use `{@link #has editor.plugins.has()}`\n\t * to check if plugin is available.\n\t *\n\t * @param {Function|String} key The plugin constructor or {@link module:core/plugin~PluginInterface.pluginName name}.\n\t * @returns {module:core/plugin~PluginInterface}\n\t */\n\tget( key ) {\n\t\tconst plugin = this._plugins.get( key );\n\n\t\tif ( !plugin ) {\n\t\t\t/**\n\t\t\t * The plugin is not loaded and could not be obtained.\n\t\t\t *\n\t\t\t * Plugin classes (constructors) need to be provided to the editor and must be loaded before they can be obtained from\n\t\t\t * the plugin collection.\n\t\t\t * This is usually done in CKEditor 5 builds by setting the {@link module:core/editor/editor~Editor.builtinPlugins}\n\t\t\t * property.\n\t\t\t *\n\t\t\t * **Note**: You can use `{@link module:core/plugincollection~PluginCollection#has editor.plugins.has()}`\n\t\t\t * to check if plugin was loaded.\n\t\t\t *\n\t\t\t * @error plugincollection-plugin-not-loaded\n\t\t\t * @param {String} plugin The name of the plugin which is not loaded.\n\t\t\t */\n\t\t\tconst errorMsg = 'plugincollection-plugin-not-loaded: The requested plugin is not loaded.';\n\n\t\t\tlet pluginName = key;\n\n\t\t\tif ( typeof key == 'function' ) {\n\t\t\t\tpluginName = key.pluginName || key.name;\n\t\t\t}\n\n\t\t\tthrow new CKEditorError( errorMsg, this._context, { plugin: pluginName } );\n\t\t}\n\n\t\treturn plugin;\n\t}\n\n\t/**\n\t * Checks if a plugin is loaded.\n\t *\n\t *\t\t// Check if the 'Clipboard' plugin was loaded.\n\t *\t\tif ( editor.plugins.has( 'Clipboard' ) ) {\n\t *\t\t\t// Now use the clipboard plugin instance:\n\t *\t\t\tconst clipboard = editor.plugins.get( 'Clipboard' );\n\t *\n\t *\t\t\t// ...\n\t *\t\t}\n\t *\n\t * @param {Function|String} key The plugin constructor or {@link module:core/plugin~PluginInterface.pluginName name}.\n\t * @returns {Boolean}\n\t */\n\thas( key ) {\n\t\treturn this._plugins.has( key );\n\t}\n\n\t/**\n\t * Initializes a set of plugins and adds them to the collection.\n\t *\n\t * @param {Array.<Function|String>} plugins An array of {@link module:core/plugin~PluginInterface plugin constructors}\n\t * or {@link module:core/plugin~PluginInterface.pluginName plugin names}. The second option (names) works only if\n\t * `availablePlugins` were passed to the {@link #constructor}.\n\t * @param {Array.<String|Function>} [removePlugins] Names of plugins or plugin constructors\n\t * that should not be loaded (despite being specified in the `plugins` array).\n\t * @returns {Promise.<module:core/plugin~LoadedPlugins>} A promise which gets resolved once all plugins are loaded\n\t * and available in the collection.\n\t */\n\tinit( plugins, removePlugins = [] ) {\n\t\tconst that = this;\n\t\tconst context = this._context;\n\t\tconst loading = new Set();\n\t\tconst loaded = [];\n\n\t\tconst pluginConstructors = mapToAvailableConstructors( plugins );\n\t\tconst removePluginConstructors = mapToAvailableConstructors( removePlugins );\n\t\tconst missingPlugins = getMissingPluginNames( plugins );\n\n\t\tif ( missingPlugins ) {\n\t\t\t/**\n\t\t\t * Some plugins are not available and could not be loaded.\n\t\t\t *\n\t\t\t * Plugin classes (constructors) need to be provided to the editor before they can be loaded by name.\n\t\t\t * This is usually done in CKEditor 5 builds by setting the {@link module:core/editor/editor~Editor.builtinPlugins}\n\t\t\t * property.\n\t\t\t *\n\t\t\t * **If you see this warning when using one of the {@glink builds/index CKEditor 5 Builds}**, it means\n\t\t\t * that you try to enable a plugin which was not included in that build. This may be due to a typo\n\t\t\t * in the plugin name or simply because that plugin is not a part of this build. In the latter scenario,\n\t\t\t * read more about {@glink builds/guides/development/custom-builds custom builds}.\n\t\t\t *\n\t\t\t * **If you see this warning when using one of the editor creators directly** (not a build), then it means\n\t\t\t * that you tried loading plugins by name. However, unlike CKEditor 4, CKEditor 5 does not implement a \"plugin loader\".\n\t\t\t * This means that CKEditor 5 does not know where to load the plugin modules from. Therefore, you need to\n\t\t\t * provide each plugin through reference (as a constructor function). Check out the examples in\n\t\t\t * {@glink builds/guides/integration/advanced-setup#scenario-2-building-from-source \"Building from source\"}.\n\t\t\t *\n\t\t\t * @error plugincollection-plugin-not-found\n\t\t\t * @param {Array.<String>} plugins The name of the plugins which could not be loaded.\n\t\t\t */\n\t\t\tconst errorMsg = 'plugincollection-plugin-not-found: Some plugins are not available and could not be loaded.';\n\n\t\t\t// Log the error so it's more visible on the console. Hopefully, for better DX.\n\t\t\tconsole.error( attachLinkToDocumentation( errorMsg ), { plugins: missingPlugins } );\n\n\t\t\treturn Promise.reject( new CKEditorError( errorMsg, context, { plugins: missingPlugins } ) );\n\t\t}\n\n\t\treturn Promise.all( pluginConstructors.map( loadPlugin ) )\n\t\t\t.then( () => initPlugins( loaded, 'init' ) )\n\t\t\t.then( () => initPlugins( loaded, 'afterInit' ) )\n\t\t\t.then( () => loaded );\n\n\t\tfunction loadPlugin( PluginConstructor ) {\n\t\t\tif ( removePluginConstructors.includes( PluginConstructor ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// The plugin is already loaded or being loaded - do nothing.\n\t\t\tif ( that._plugins.has( PluginConstructor ) || loading.has( PluginConstructor ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn instantiatePlugin( PluginConstructor )\n\t\t\t\t.catch( err => {\n\t\t\t\t\t/**\n\t\t\t\t\t * It was not possible to load the plugin.\n\t\t\t\t\t *\n\t\t\t\t\t * This is a generic error logged to the console when a JavaSript error is thrown during the initialization\n\t\t\t\t\t * of one of the plugins.\n\t\t\t\t\t *\n\t\t\t\t\t * If you correctly handled the promise returned by the editor's `create()` method (like shown below),\n\t\t\t\t\t * you will find the original error logged to the console, too:\n\t\t\t\t\t *\n\t\t\t\t\t *\t\tClassicEditor.create( document.getElementById( 'editor' ) )\n\t\t\t\t\t *\t\t\t.then( editor => {\n\t\t\t\t\t *\t\t\t\t// ...\n\t\t\t\t\t * \t\t\t} )\n\t\t\t\t\t *\t\t\t.catch( error => {\n\t\t\t\t\t *\t\t\t\tconsole.error( error );\n\t\t\t\t\t *\t\t\t} );\n\t\t\t\t\t *\n\t\t\t\t\t * @error plugincollection-load\n\t\t\t\t\t * @param {String} plugin The name of the plugin that could not be loaded.\n\t\t\t\t\t */\n\t\t\t\t\tconsole.error( attachLinkToDocumentation(\n\t\t\t\t\t\t'plugincollection-load: It was not possible to load the plugin.'\n\t\t\t\t\t), { plugin: PluginConstructor } );\n\n\t\t\t\t\tthrow err;\n\t\t\t\t} );\n\t\t}\n\n\t\tfunction initPlugins( loadedPlugins, method ) {\n\t\t\treturn loadedPlugins.reduce( ( promise, plugin ) => {\n\t\t\t\tif ( !plugin[ method ] ) {\n\t\t\t\t\treturn promise;\n\t\t\t\t}\n\n\t\t\t\tif ( that._contextPlugins.has( plugin ) ) {\n\t\t\t\t\treturn promise;\n\t\t\t\t}\n\n\t\t\t\treturn promise.then( plugin[ method ].bind( plugin ) );\n\t\t\t}, Promise.resolve() );\n\t\t}\n\n\t\tfunction instantiatePlugin( PluginConstructor ) {\n\t\t\treturn new Promise( resolve => {\n\t\t\t\tloading.add( PluginConstructor );\n\n\t\t\t\tif ( PluginConstructor.requires ) {\n\t\t\t\t\tPluginConstructor.requires.forEach( RequiredPluginConstructorOrName => {\n\t\t\t\t\t\tconst RequiredPluginConstructor = getPluginConstructor( RequiredPluginConstructorOrName );\n\n\t\t\t\t\t\tif ( PluginConstructor.isContextPlugin && !RequiredPluginConstructor.isContextPlugin ) {\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * If a plugin is a context plugin, all plugins it requires should also be context plugins\n\t\t\t\t\t\t\t * instead of plugins. In other words, if one plugin can be used in the context,\n\t\t\t\t\t\t\t * all its requirements should also be ready to be used in the context. Note that the context\n\t\t\t\t\t\t\t * provides only a part of the API provided by the editor. If one plugin needs a full\n\t\t\t\t\t\t\t * editor API, all plugins which require it are considered as plugins that need a full\n\t\t\t\t\t\t\t * editor API.\n\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t * @error plugincollection-context-required\n\t\t\t\t\t\t\t * @param {String} plugin The name of the required plugin.\n\t\t\t\t\t\t\t * @param {String} requiredBy The name of the parent plugin.\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t\t\t\t'plugincollection-context-required: Context plugin can not require plugin which is not a context plugin',\n\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t{ plugin: RequiredPluginConstructor.name, requiredBy: PluginConstructor.name }\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( removePlugins.includes( RequiredPluginConstructor ) ) {\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * Cannot load a plugin because one of its dependencies is listed in the `removePlugins` option.\n\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t * @error plugincollection-required\n\t\t\t\t\t\t\t * @param {String} plugin The name of the required plugin.\n\t\t\t\t\t\t\t * @param {String} requiredBy The name of the parent plugin.\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t\t\t\t'plugincollection-required: Cannot load a plugin because one of its dependencies is listed in' +\n\t\t\t\t\t\t\t\t'the `removePlugins` option.',\n\t\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\t\t{ plugin: RequiredPluginConstructor.name, requiredBy: PluginConstructor.name }\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tloadPlugin( RequiredPluginConstructor );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\tconst plugin = that._contextPlugins.get( PluginConstructor ) || new PluginConstructor( context );\n\t\t\t\tthat._add( PluginConstructor, plugin );\n\t\t\t\tloaded.push( plugin );\n\n\t\t\t\tresolve();\n\t\t\t} );\n\t\t}\n\n\t\tfunction getPluginConstructor( PluginConstructorOrName ) {\n\t\t\tif ( typeof PluginConstructorOrName == 'function' ) {\n\t\t\t\treturn PluginConstructorOrName;\n\t\t\t}\n\n\t\t\treturn that._availablePlugins.get( PluginConstructorOrName );\n\t\t}\n\n\t\tfunction getMissingPluginNames( plugins ) {\n\t\t\tconst missingPlugins = [];\n\n\t\t\tfor ( const pluginNameOrConstructor of plugins ) {\n\t\t\t\tif ( !getPluginConstructor( pluginNameOrConstructor ) ) {\n\t\t\t\t\tmissingPlugins.push( pluginNameOrConstructor );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn missingPlugins.length ? missingPlugins : null;\n\t\t}\n\n\t\tfunction mapToAvailableConstructors( plugins ) {\n\t\t\treturn plugins\n\t\t\t\t.map( pluginNameOrConstructor => getPluginConstructor( pluginNameOrConstructor ) )\n\t\t\t\t.filter( PluginConstructor => !!PluginConstructor );\n\t\t}\n\t}\n\n\t/**\n\t * Destroys all loaded plugins.\n\t *\n\t * @returns {Promise}\n\t */\n\tdestroy() {\n\t\tconst promises = [];\n\n\t\tfor ( const [ , pluginInstance ] of this ) {\n\t\t\tif ( typeof pluginInstance.destroy == 'function' && !this._contextPlugins.has( pluginInstance ) ) {\n\t\t\t\tpromises.push( pluginInstance.destroy() );\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.all( promises );\n\t}\n\n\t/**\n\t * Adds the plugin to the collection. Exposed mainly for testing purposes.\n\t *\n\t * @protected\n\t * @param {Function} PluginConstructor The plugin constructor.\n\t * @param {module:core/plugin~PluginInterface} plugin The instance of the plugin.\n\t */\n\t_add( PluginConstructor, plugin ) {\n\t\tthis._plugins.set( PluginConstructor, plugin );\n\n\t\tconst pluginName = PluginConstructor.pluginName;\n\n\t\tif ( !pluginName ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this._plugins.has( pluginName ) ) {\n\t\t\t/**\n\t\t\t * Two plugins with the same {@link module:core/plugin~PluginInterface.pluginName} were loaded.\n\t\t\t * This will lead to runtime conflicts between these plugins.\n\t\t\t *\n\t\t\t * In practice, this warning usually means that new plugins were added to an existing CKEditor 5 build.\n\t\t\t * Plugins should always be added to a source version of the editor (`@ckeditor/ckeditor5-editor-*`),\n\t\t\t * not to an editor imported from one of the `@ckeditor/ckeditor5-build-*` packages.\n\t\t\t *\n\t\t\t * Check your import paths and the list of plugins passed to\n\t\t\t * {@link module:core/editor/editor~Editor.create `Editor.create()`}\n\t\t\t * or specified in {@link module:core/editor/editor~Editor.builtinPlugins `Editor.builtinPlugins`}.\n\t\t\t *\n\t\t\t * The second option is that your `node_modules/` directory contains duplicated versions of the same\n\t\t\t * CKEditor 5 packages. Normally, on clean installations, npm deduplicates packages in `node_modules/`, so\n\t\t\t * it may be enough to call `rm -rf node_modules && npm i`. However, if you installed conflicting versions\n\t\t\t * of packages, their dependencies may need to be installed in more than one version which may lead to this\n\t\t\t * warning.\n\t\t\t *\n\t\t\t * Technically speaking, this error occurs because after adding a plugin to an existing editor build\n\t\t\t * dependencies of this plugin are being duplicated.\n\t\t\t * They are already built into that editor build and now get added for the second time as dependencies\n\t\t\t * of the plugin you are installing.\n\t\t\t *\n\t\t\t * Read more about {@glink builds/guides/integration/installing-plugins installing plugins}.\n\t\t\t *\n\t\t\t * @error plugincollection-plugin-name-conflict\n\t\t\t * @param {String} pluginName The duplicated plugin name.\n\t\t\t * @param {Function} plugin1 The first plugin constructor.\n\t\t\t * @param {Function} plugin2 The second plugin constructor.\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'plugincollection-plugin-name-conflict: Two plugins with the same name were loaded.',\n\t\t\t\tnull,\n\t\t\t\t{ pluginName, plugin1: this._plugins.get( pluginName ).constructor, plugin2: PluginConstructor }\n\t\t\t);\n\t\t}\n\n\t\tthis._plugins.set( pluginName, plugin );\n\t}\n}\n\nmix( PluginCollection, EmitterMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals window */\n\n/**\n * @module utils/translation-service\n */\n\n/* istanbul ignore else */\nif ( !window.CKEDITOR_TRANSLATIONS ) {\n\twindow.CKEDITOR_TRANSLATIONS = {};\n}\n\n/**\n * Adds translations to existing ones.\n * These translations will later be available for the {@link module:utils/translation-service~translate `translate()`} function.\n *\n *\t\tadd( 'pl', {\n *\t\t\t'OK': 'OK',\n *\t\t\t'Cancel [context: reject]': 'Anuluj'\n *\t\t} );\n *\n * If you cannot import this function from this module (e.g. because you use a CKEditor 5 build), then you can\n * still add translations by extending the global `window.CKEDITOR_TRANSLATIONS` object by using a function like\n * the one below:\n *\n *\t\tfunction addTranslations( language, translations ) {\n *\t\t\tif ( !window.CKEDITOR_TRANSLATIONS ) {\n *\t\t\t\twindow.CKEDITOR_TRANSLATIONS = {};\n *\t\t\t}\n *\n *\t\t\tconst dictionary = window.CKEDITOR_TRANSLATIONS[ language ] || ( window.CKEDITOR_TRANSLATIONS[ language ] = {} );\n *\n *\t\t\t// Extend the dictionary for the given language.\n *\t\t\tObject.assign( dictionary, translations );\n *\t\t}\n *\n * @param {String} language Target language.\n * @param {Object.<String, String>} translations Translations which will be added to the dictionary.\n */\nexport function add( language, translations ) {\n\tconst dictionary = window.CKEDITOR_TRANSLATIONS[ language ] || ( window.CKEDITOR_TRANSLATIONS[ language ] = {} );\n\n\tObject.assign( dictionary, translations );\n}\n\n/**\n * Translates string if the translation of the string was previously added to the dictionary.\n * See {@link module:utils/translation-service Translation Service}.\n * This happens in a multi-language mode were translation modules are created by the bundler.\n *\n * When no translation is defined in the dictionary or the dictionary doesn't exist this function returns\n * the original string without the `'[context: ]'` (happens in development and single-language modes).\n *\n * In a single-language mode (when values passed to `t()` were replaced with target language strings) the dictionary\n * is left empty, so this function will return the original strings always.\n *\n *\t\ttranslate( 'pl', 'Cancel [context: reject]' );\n *\n * @param {String} language Target language.\n * @param {String} translationKey String that will be translated.\n * @returns {String} Translated sentence.\n */\nexport function translate( language, translationKey ) {\n\tconst numberOfLanguages = getNumberOfLanguages();\n\n\tif ( numberOfLanguages === 1 ) {\n\t\t// Override the language to the only supported one.\n\t\t// This can't be done in the `Locale` class, because the translations comes after the `Locale` class initialization.\n\t\tlanguage = Object.keys( window.CKEDITOR_TRANSLATIONS )[ 0 ];\n\t}\n\n\tif ( numberOfLanguages === 0 || !hasTranslation( language, translationKey ) ) {\n\t\treturn translationKey.replace( / \\[context: [^\\]]+\\]$/, '' );\n\t}\n\n\tconst dictionary = window.CKEDITOR_TRANSLATIONS[ language ];\n\n\t// In case of missing translations we still need to cut off the `[context: ]` parts.\n\treturn dictionary[ translationKey ].replace( / \\[context: [^\\]]+\\]$/, '' );\n}\n\n/**\n * Clears dictionaries for test purposes.\n *\n * @protected\n */\nexport function _clear() {\n\twindow.CKEDITOR_TRANSLATIONS = {};\n}\n\n// Checks whether the dictionary exists and translation in that dictionary exists.\nfunction hasTranslation( language, translationKey ) {\n\treturn (\n\t\t( language in window.CKEDITOR_TRANSLATIONS ) &&\n\t\t( translationKey in window.CKEDITOR_TRANSLATIONS[ language ] )\n\t);\n}\n\nfunction getNumberOfLanguages() {\n\treturn Object.keys( window.CKEDITOR_TRANSLATIONS ).length;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/locale\n */\n\n/* globals console */\n\nimport { translate } from './translation-service';\n\nconst RTL_LANGUAGE_CODES = [ 'ar', 'fa', 'he', 'ku', 'ug' ];\n\n/**\n * Represents the localization services.\n */\nexport default class Locale {\n\t/**\n\t * Creates a new instance of the Locale class. Learn more about\n\t * {@glink features/ui-language configuring language of the editor}.\n\t *\n\t * @param {Object} [options] Locale configuration.\n\t * @param {String} [options.uiLanguage='en'] The editor UI language code in the\n\t * [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format. See {@link #uiLanguage}.\n\t * @param {String} [options.contentLanguage] The editor content language code in the\n\t * [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format. If not specified, the same as `options.language`.\n\t * See {@link #contentLanguage}.\n\t */\n\tconstructor( options = {} ) {\n\t\t/**\n\t\t * The editor UI language code in the [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.\n\t\t *\n\t\t * If the {@link #contentLanguage content language} was not specified in the `Locale` constructor,\n\t\t * it also defines the language of the content.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.uiLanguage = options.uiLanguage || 'en';\n\n\t\t/**\n\t\t * The editor content language code in the [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.\n\t\t *\n\t\t * Usually the same as {@link #uiLanguage editor language}, it can be customized by passing an optional\n\t\t * argument to the `Locale` constructor.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.contentLanguage = options.contentLanguage || this.uiLanguage;\n\n\t\t/**\n\t\t * Text direction of the {@link #uiLanguage editor UI language}. Either `'ltr'` or `'rtl'`.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.uiLanguageDirection = getLanguageDirection( this.uiLanguage );\n\n\t\t/**\n\t\t * Text direction of the {@link #contentLanguage editor content language}.\n\t\t *\n\t\t * If the content language was passed directly to the `Locale` constructor, this property represents the\n\t\t * direction of that language.\n\t\t *\n\t\t * If the {@link #contentLanguage editor content language} was derived from the {@link #uiLanguage editor language},\n\t\t * the content language direction is the same as the {@link #uiLanguageDirection UI language direction}.\n\t\t *\n\t\t * The value is either `'ltr'` or `'rtl'`.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.contentLanguageDirection = getLanguageDirection( this.contentLanguage );\n\n\t\t/**\n\t\t * Translates the given string to the {@link #uiLanguage}. This method is also available in\n\t\t * {@link module:core/editor/editor~Editor#t} and {@link module:ui/view~View#t}.\n\t\t *\n\t\t * The strings may contain placeholders (`%<index>`) for values which are passed as the second argument.\n\t\t * `<index>` is the index in the `values` array.\n\t\t *\n\t\t *\t\teditor.t( 'Created file \"%0\" in %1ms.', [ fileName, timeTaken ] );\n\t\t *\n\t\t * This method's context is statically bound to Locale instance,\n\t\t * so it can be called as a function:\n\t\t *\n\t\t *\t\tconst t = this.t;\n\t\t *\t\tt( 'Label' );\n\t\t *\n\t\t * @method #t\n\t\t * @param {String} str The string to translate.\n\t\t * @param {String[]} [values] Values that should be used to interpolate the string.\n\t\t */\n\t\tthis.t = ( ...args ) => this._t( ...args );\n\t}\n\n\t/**\n\t * The editor UI language code in the [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.\n\t *\n\t * **Note**: This property has been deprecated. Please use {@link #uiLanguage} and {@link #contentLanguage}\n\t * properties instead.\n\t *\n\t * @deprecated\n\t * @member {String}\n\t */\n\tget language() {\n\t\t/**\n\t\t * The {@link module:utils/locale~Locale#language `Locale#language`} property has been deprecated and will\n\t\t * be removed in the near future. Please use {@link #uiLanguage} and {@link #contentLanguage} properties instead.\n\t\t *\n\t\t * @error locale-deprecated-language-property\n\t\t */\n\t\tconsole.warn(\n\t\t\t'locale-deprecated-language-property: ' +\n\t\t\t'The Locale#language property has been deprecated and will be removed in the near future. ' +\n\t\t\t'Please use #uiLanguage and #contentLanguage properties instead.' );\n\n\t\treturn this.uiLanguage;\n\t}\n\n\t/**\n\t * Base for the {@link #t} method.\n\t *\n\t * @private\n\t */\n\t_t( str, values ) {\n\t\tlet translatedString = translate( this.uiLanguage, str );\n\n\t\tif ( values ) {\n\t\t\ttranslatedString = translatedString.replace( /%(\\d+)/g, ( match, index ) => {\n\t\t\t\treturn ( index < values.length ) ? values[ index ] : match;\n\t\t\t} );\n\t\t}\n\n\t\treturn translatedString;\n\t}\n}\n\n// Helps determine whether a language is LTR or RTL.\n//\n// @param {String} language The ISO 639-1 language code.\n// @returns {String} 'ltr' or 'rtl\nfunction getLanguageDirection( languageCode ) {\n\treturn RTL_LANGUAGE_CODES.includes( languageCode ) ? 'rtl' : 'ltr';\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/context\n */\n\nimport Config from '@ckeditor/ckeditor5-utils/src/config';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport PluginCollection from './plugincollection';\nimport Locale from '@ckeditor/ckeditor5-utils/src/locale';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Provides a common, higher-level environment for solutions that use multiple {@link module:core/editor/editor~Editor editors}\n * or plugins that work outside the editor. Use it instead of {@link module:core/editor/editor~Editor.create `Editor.create()`}\n * in advanced application integrations.\n *\n * All configuration options passed to a context will be used as default options for editor instances initialized in that context.\n *\n * {@link module:core/contextplugin~ContextPlugin Context plugins} passed to a context instance will be shared among all\n * editor instances initialized in this context. These will be the same plugin instances for all the editors.\n *\n * **Note:** The context can only be initialized with {@link module:core/contextplugin~ContextPlugin context plugins}\n * (e.g. [comments](https://ckeditor.com/collaboration/comments/)). Regular {@link module:core/plugin~Plugin plugins} require an\n * editor instance to work and cannot be added to a context.\n *\n * **Note:** You can add a context plugin to an editor instance, though.\n *\n * If you are using multiple editor instances on one page and use any context plugins, create a context to share the configuration and\n * plugins among these editors. Some plugins will use the information about all existing editors to better integrate between them.\n *\n * If you are using plugins that do not require an editor to work (e.g. [comments](https://ckeditor.com/collaboration/comments/)),\n * enable and configure them using the context.\n *\n * If you are using only a single editor on each page, use {@link module:core/editor/editor~Editor.create `Editor.create()`} instead.\n * In such case, a context instance will be created by the editor instance in a transparent way.\n *\n * See {@link module:core/context~Context.create `Context.create()`} for usage examples.\n */\nexport default class Context {\n\t/**\n\t * Creates a context instance with a given configuration.\n\t *\n\t * Usually not to be used directly. See the static {@link module:core/context~Context.create `create()`} method.\n\t *\n\t * @param {Object} [config={}] The context configuration.\n\t */\n\tconstructor( config ) {\n\t\t/**\n\t\t * Stores all the configurations specific to this context instance.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:utils/config~Config}\n\t\t */\n\t\tthis.config = new Config( config, this.constructor.defaultConfig );\n\n\t\tconst availablePlugins = this.constructor.builtinPlugins;\n\n\t\tthis.config.define( 'plugins', availablePlugins );\n\n\t\t/**\n\t\t * The plugins loaded and in use by this context instance.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:core/plugincollection~PluginCollection}\n\t\t */\n\t\tthis.plugins = new PluginCollection( this, availablePlugins );\n\n\t\tconst languageConfig = this.config.get( 'language' ) || {};\n\n\t\t/**\n\t\t * @readonly\n\t\t * @type {module:utils/locale~Locale}\n\t\t */\n\t\tthis.locale = new Locale( {\n\t\t\tuiLanguage: typeof languageConfig === 'string' ? languageConfig : languageConfig.ui,\n\t\t\tcontentLanguage: this.config.get( 'language.content' )\n\t\t} );\n\n\t\t/**\n\t\t * Shorthand for {@link module:utils/locale~Locale#t}.\n\t\t *\n\t\t * @see module:utils/locale~Locale#t\n\t\t * @method #t\n\t\t */\n\t\tthis.t = this.locale.t;\n\n\t\t/**\n\t\t * A list of editors that this context instance is injected to.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:utils/collection~Collection}\n\t\t */\n\t\tthis.editors = new Collection();\n\n\t\t/**\n\t\t * Reference to the editor which created the context.\n\t\t * Null when the context was created outside of the editor.\n\t\t *\n\t\t * It is used to destroy the context when removing the editor that has created the context.\n\t\t *\n\t\t * @private\n\t\t * @type {module:core/editor/editor~Editor|null}\n\t\t */\n\t\tthis._contextOwner = null;\n\t}\n\n\t/**\n\t * Loads and initializes plugins specified in the configuration.\n\t *\n\t * @returns {Promise.<module:core/plugin~LoadedPlugins>} A promise which resolves\n\t * once the initialization is completed, providing an array of loaded plugins.\n\t */\n\tinitPlugins() {\n\t\tconst plugins = this.config.get( 'plugins' ) || [];\n\n\t\tfor ( const Plugin of plugins ) {\n\t\t\tif ( typeof Plugin != 'function' ) {\n\t\t\t\t/**\n\t\t\t\t * Only a constructor function is allowed as a {@link module:core/contextplugin~ContextPlugin context plugin}.\n\t\t\t\t *\n\t\t\t\t * @error context-initplugins-constructor-only\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'context-initplugins-constructor-only: Only a constructor function is allowed as a context plugin.',\n\t\t\t\t\tnull,\n\t\t\t\t\t{ Plugin }\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif ( Plugin.isContextPlugin !== true ) {\n\t\t\t\t/**\n\t\t\t\t * Only a plugin marked as a {@link module:core/contextplugin~ContextPlugin.isContextPlugin context plugin}\n\t\t\t\t * is allowed to be used with a context.\n\t\t\t\t *\n\t\t\t\t * @error context-initplugins-invalid-plugin\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'context-initplugins-invalid-plugin: Only a plugin marked as a context plugin is allowed to be used with a context.',\n\t\t\t\t\tnull,\n\t\t\t\t\t{ Plugin }\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn this.plugins.init( plugins );\n\t}\n\n\t/**\n\t * Destroys the context instance and all editors used with the context,\n\t * releasing all resources used by the context.\n\t *\n\t * @returns {Promise} A promise that resolves once the context instance is fully destroyed.\n\t */\n\tdestroy() {\n\t\treturn Promise.all( Array.from( this.editors, editor => editor.destroy() ) )\n\t\t\t.then( () => this.plugins.destroy() );\n\t}\n\n\t/**\n\t * Adds a reference to the editor which is used with this context.\n\t *\n\t * When the given editor has created the context, the reference to this editor will be stored\n\t * as a {@link ~Context#_contextOwner}.\n\t *\n\t * This method should only be used by the editor.\n\t *\n\t * @protected\n\t * @param {module:core/editor/editor~Editor} editor\n\t * @param {Boolean} isContextOwner Stores the given editor as a context owner.\n\t */\n\t_addEditor( editor, isContextOwner ) {\n\t\tif ( this._contextOwner ) {\n\t\t\t/**\n\t\t\t * Cannot add multiple editors to the context which is created by the editor.\n\t\t\t *\n\t\t\t * @error context-addEditor-private-context\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'context-addEditor-private-context: Cannot add multiple editors to the context which is created by the editor.'\n\t\t\t);\n\t\t}\n\n\t\tthis.editors.add( editor );\n\n\t\tif ( isContextOwner ) {\n\t\t\tthis._contextOwner = editor;\n\t\t}\n\t}\n\n\t/**\n\t * Removes a reference to the editor which was used with this context.\n\t * When the context was created by the given editor, the context will be destroyed.\n\t *\n\t * This method should only be used by the editor.\n\t *\n\t * @protected\n\t * @param {module:core/editor/editor~Editor} editor\n\t * @return {Promise} A promise that resolves once the editor is removed from the context or when the context was destroyed.\n\t */\n\t_removeEditor( editor ) {\n\t\tif ( this.editors.has( editor ) ) {\n\t\t\tthis.editors.remove( editor );\n\t\t}\n\n\t\tif ( this._contextOwner === editor ) {\n\t\t\treturn this.destroy();\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Returns the context configuration which will be copied to the editors created using this context.\n\t *\n\t * The configuration returned by this method has the plugins configuration removed &mdash; plugins are shared with all editors\n\t * through another mechanism.\n\t *\n\t * This method should only be used by the editor.\n\t *\n\t * @protected\n\t * @returns {Object} Configuration as a plain object.\n\t */\n\t_getEditorConfig() {\n\t\tconst result = {};\n\n\t\tfor ( const name of this.config.names() ) {\n\t\t\tif ( ![ 'plugins', 'removePlugins', 'extraPlugins' ].includes( name ) ) {\n\t\t\t\tresult[ name ] = this.config.get( name );\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Creates and initializes a new context instance.\n\t *\n\t *\t\tconst commonConfig = { ... }; // Configuration for all the plugins and editors.\n\t *\t\tconst editorPlugins = [ ... ]; // Regular plugins here.\n\t *\n\t *\t\tContext\n\t *\t\t\t.create( {\n\t *\t\t\t\t// Only context plugins here.\n\t *\t\t\t\tplugins: [ ... ],\n\t *\n\t *\t\t\t\t// Configure the language for all the editors (it cannot be overwritten).\n\t *\t\t\t\tlanguage: { ... },\n\t *\n\t *\t\t\t\t// Configuration for context plugins.\n\t *\t\t\t\tcomments: { ... },\n\t *\t\t\t\t...\n\t *\n\t *\t\t\t\t// Default configuration for editor plugins.\n\t *\t\t\t\ttoolbar: { ... },\n\t *\t\t\t\timage: { ... },\n\t *\t\t\t\t...\n\t *\t\t\t} )\n\t *\t\t\t.then( context => {\n\t *\t\t\t\tconst promises = [];\n\t *\n\t *\t\t\t\tpromises.push( ClassicEditor.create(\n\t *\t\t\t\t\tdocument.getElementById( 'editor1' ),\n\t *\t\t\t\t\t{\n\t *\t\t\t\t\t\teditorPlugins,\n\t *\t\t\t\t\t\tcontext\n\t *\t\t\t\t\t}\n\t *\t\t\t\t) );\n\t *\n\t *\t\t\t\tpromises.push( ClassicEditor.create(\n\t *\t\t\t\t\tdocument.getElementById( 'editor2' ),\n\t *\t\t\t\t\t{\n\t *\t\t\t\t\t\teditorPlugins,\n\t *\t\t\t\t\t\tcontext,\n\t *\t\t\t\t\t\ttoolbar: { ... } // You can overwrite the configuration of the context.\n\t *\t\t\t\t\t}\n\t *\t\t\t\t) );\n\t *\n\t *\t\t\t\treturn Promise.all( promises );\n\t *\t\t\t} );\n\t *\n\t * @param {Object} [config] The context configuration.\n\t * @returns {Promise} A promise resolved once the context is ready. The promise resolves with the created context instance.\n\t */\n\tstatic create( config ) {\n\t\treturn new Promise( resolve => {\n\t\t\tconst context = new this( config );\n\n\t\t\tresolve( context.initPlugins().then( () => context ) );\n\t\t} );\n\t}\n}\n\n/**\n * An array of plugins built into the `Context` class.\n *\n * It is used in CKEditor 5 builds featuring `Context` to provide a list of context plugins which are later automatically initialized\n * during the context initialization.\n *\n * They will be automatically initialized by `Context` unless `config.plugins` is passed.\n *\n *\t\t// Build some context plugins into the Context class first.\n *\t\tContext.builtinPlugins = [ FooPlugin, BarPlugin ];\n *\n *\t\t// Normally, you need to define config.plugins, but since Context.builtinPlugins was\n *\t\t// defined, now you can call create() without any configuration.\n *\t\tContext\n *\t\t\t.create()\n *\t\t\t.then( context => {\n *\t\t\t\tcontext.plugins.get( FooPlugin ); // -> An instance of the Foo plugin.\n *\t\t\t\tcontext.plugins.get( BarPlugin ); // -> An instance of the Bar plugin.\n *\t\t\t} );\n *\n * See also {@link module:core/editor/editor~Editor.builtinPlugins} and {@link module:core/context~Context.defaultConfig}.\n *\n * @static\n * @member {Array.<Function>} module:core/context~Context.builtinPlugins\n */\n\n/**\n * The default configuration which is built into the `Context` class.\n *\n * It is used in CKEditor 5 builds featuring `Context` to provide the default configuration options which are later used during the\n * context initialization.\n *\n *\t\tContext.defaultConfig = {\n *\t\t\tfoo: 1,\n *\t\t\tbar: 2\n *\t\t};\n *\n *\t\tContext\n *\t\t\t.create()\n *\t\t\t.then( context => {\n *\t\t\t\tcontext.config.get( 'foo' ); // -> 1\n *\t\t\t\tcontext.config.get( 'bar' ); // -> 2\n *\t\t\t} );\n *\n *\t\t// The default options can be overridden by the configuration passed to create().\n *\t\tContext\n *\t\t\t.create( { bar: 3 } )\n *\t\t\t.then( context => {\n *\t\t\t\tcontext.config.get( 'foo' ); // -> 1\n *\t\t\t\tcontext.config.get( 'bar' ); // -> 3\n *\t\t\t} );\n *\n * See also {@link module:core/editor/editor~Editor.defaultConfig} and {@link module:core/context~Context.builtinPlugins}.\n *\n * @static\n * @member {Object} module:core/context~Context.defaultConfig\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/comparearrays\n */\n\n/**\n * Compares how given arrays relate to each other. One array can be: same as another array, prefix of another array\n * or completely different. If arrays are different, first index at which they differ is returned. Otherwise,\n * a flag specifying the relation is returned. Flags are negative numbers, so whenever a number >= 0 is returned\n * it means that arrays differ.\n *\n *\t\tcompareArrays( [ 0, 2 ], [ 0, 2 ] );\t\t// 'same'\n *\t\tcompareArrays( [ 0, 2 ], [ 0, 2, 1 ] );\t\t// 'prefix'\n *\t\tcompareArrays( [ 0, 2 ], [ 0 ] );\t\t\t// 'extension'\n *\t\tcompareArrays( [ 0, 2 ], [ 1, 2 ] );\t\t// 0\n *\t\tcompareArrays( [ 0, 2 ], [ 0, 1 ] );\t\t// 1\n *\n * @param {Array} a Array that is compared.\n * @param {Array} b Array to compare with.\n * @returns {module:utils/comparearrays~ArrayRelation} How array `a` is related to `b`.\n */\nexport default function compareArrays( a, b ) {\n\tconst minLen = Math.min( a.length, b.length );\n\n\tfor ( let i = 0; i < minLen; i++ ) {\n\t\tif ( a[ i ] != b[ i ] ) {\n\t\t\t// The arrays are different.\n\t\t\treturn i;\n\t\t}\n\t}\n\n\t// Both arrays were same at all points.\n\tif ( a.length == b.length ) {\n\t\t// If their length is also same, they are the same.\n\t\treturn 'same';\n\t} else if ( a.length < b.length ) {\n\t\t// Compared array is shorter so it is a prefix of the other array.\n\t\treturn 'prefix';\n\t} else {\n\t\t// Compared array is longer so it is an extension of the other array.\n\t\treturn 'extension';\n\t}\n}\n\n/**\n * @typedef {'extension'|'same'|'prefix'} module:utils/comparearrays~ArrayRelation\n */\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nexport default clone;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/node\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport { clone } from 'lodash-es';\n\n// To check if component is loaded more than once.\nimport '@ckeditor/ckeditor5-utils/src/version';\n\n/**\n * Abstract tree view node class.\n *\n * This is an abstract class. Its constructor should not be used directly.\n * Use the {@link module:engine/view/element~Element} class to create view elements\n * or {@link module:engine/view/text~Text} class to create view text nodes.\n *\n * @abstract\n */\nexport default class Node {\n\t/**\n\t * Creates a tree view node.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Parent element. Null by default. Set by {@link module:engine/view/element~Element#_insertChild}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|null}\n\t\t */\n\t\tthis.parent = null;\n\t}\n\n\t/**\n\t * Index of the node in the parent element or null if the node has no parent.\n\t *\n\t * Accessing this property throws an error if this node's parent element does not contain it.\n\t * This means that view tree got broken.\n\t *\n\t * @readonly\n\t * @type {Number|null}\n\t */\n\tget index() {\n\t\tlet pos;\n\n\t\tif ( !this.parent ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// No parent or child doesn't exist in parent's children.\n\t\tif ( ( pos = this.parent.getChildIndex( this ) ) == -1 ) {\n\t\t\t/**\n\t\t\t * The node's parent does not contain this node. It means that the document tree is corrupted.\n\t\t\t *\n\t\t\t * @error view-node-not-found-in-parent\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-node-not-found-in-parent: The node\\'s parent does not contain this node.', this );\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\t/**\n\t * Node's next sibling, or `null` if it is the last child.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|null}\n\t */\n\tget nextSibling() {\n\t\tconst index = this.index;\n\n\t\treturn ( index !== null && this.parent.getChild( index + 1 ) ) || null;\n\t}\n\n\t/**\n\t * Node's previous sibling, or `null` if it is the first child.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|null}\n\t */\n\tget previousSibling() {\n\t\tconst index = this.index;\n\n\t\treturn ( index !== null && this.parent.getChild( index - 1 ) ) || null;\n\t}\n\n\t/**\n\t * Top-most ancestor of the node. If the node has no parent it is the root itself.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\tlet root = this; // eslint-disable-line consistent-this\n\n\t\twhile ( root.parent ) {\n\t\t\troot = root.parent;\n\t\t}\n\n\t\treturn root;\n\t}\n\n\t/**\n\t * {@link module:engine/view/document~Document View document} that owns this node, or `null` if the node is inside\n\t * {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/document~Document|null}\n\t */\n\tget document() {\n\t\t// Parent might be Node, null or DocumentFragment.\n\t\tif ( this.parent instanceof Node ) {\n\t\t\treturn this.parent.document;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Gets a path to the node. The path is an array containing indices of consecutive ancestors of this node,\n\t * beginning from {@link module:engine/view/node~Node#root root}, down to this node's index.\n\t *\n\t *\t\tconst abc = downcastWriter.createText( 'abc' );\n\t *\t\tconst foo = downcastWriter.createText( 'foo' );\n\t *\t\tconst h1 = downcastWriter.createElement( 'h1', null, downcastWriter.createText( 'header' ) );\n\t *\t\tconst p = downcastWriter.createElement( 'p', null, [ abc, foo ] );\n\t *\t\tconst div = downcastWriter.createElement( 'div', null, [ h1, p ] );\n\t *\t\tfoo.getPath(); // Returns [ 1, 3 ]. `foo` is in `p` which is in `div`. `p` starts at offset 1, while `foo` at 3.\n\t *\t\th1.getPath(); // Returns [ 0 ].\n\t *\t\tdiv.getPath(); // Returns [].\n\t *\n\t * @returns {Array.<Number>} The path.\n\t */\n\tgetPath() {\n\t\tconst path = [];\n\t\tlet node = this; // eslint-disable-line consistent-this\n\n\t\twhile ( node.parent ) {\n\t\t\tpath.unshift( node.index );\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\treturn path;\n\t}\n\n\t/**\n\t * Returns ancestors array of this node.\n\t *\n\t * @param {Object} options Options object.\n\t * @param {Boolean} [options.includeSelf=false] When set to `true` this node will be also included in parent's array.\n\t * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from node's parent to root element,\n\t * otherwise root element will be the first item in the array.\n\t * @returns {Array} Array with ancestors.\n\t */\n\tgetAncestors( options = { includeSelf: false, parentFirst: false } ) {\n\t\tconst ancestors = [];\n\t\tlet parent = options.includeSelf ? this : this.parent;\n\n\t\twhile ( parent ) {\n\t\t\tancestors[ options.parentFirst ? 'push' : 'unshift' ]( parent );\n\t\t\tparent = parent.parent;\n\t\t}\n\n\t\treturn ancestors;\n\t}\n\n\t/**\n\t * Returns a {@link module:engine/view/element~Element} or {@link module:engine/view/documentfragment~DocumentFragment}\n\t * which is a common ancestor of both nodes.\n\t *\n\t * @param {module:engine/view/node~Node} node The second node.\n\t * @param {Object} options Options object.\n\t * @param {Boolean} [options.includeSelf=false] When set to `true` both nodes will be considered \"ancestors\" too.\n\t * Which means that if e.g. node A is inside B, then their common ancestor will be B.\n\t * @returns {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|null}\n\t */\n\tgetCommonAncestor( node, options = {} ) {\n\t\tconst ancestorsA = this.getAncestors( options );\n\t\tconst ancestorsB = node.getAncestors( options );\n\n\t\tlet i = 0;\n\n\t\twhile ( ancestorsA[ i ] == ancestorsB[ i ] && ancestorsA[ i ] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i === 0 ? null : ancestorsA[ i - 1 ];\n\t}\n\n\t/**\n\t * Returns whether this node is before given node. `false` is returned if nodes are in different trees (for example,\n\t * in different {@link module:engine/view/documentfragment~DocumentFragment}s).\n\t *\n\t * @param {module:engine/view/node~Node} node Node to compare with.\n\t * @returns {Boolean}\n\t */\n\tisBefore( node ) {\n\t\t// Given node is not before this node if they are same.\n\t\tif ( this == node ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Return `false` if it is impossible to compare nodes.\n\t\tif ( this.root !== node.root ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst thisPath = this.getPath();\n\t\tconst nodePath = node.getPath();\n\n\t\tconst result = compareArrays( thisPath, nodePath );\n\n\t\tswitch ( result ) {\n\t\t\tcase 'prefix':\n\t\t\t\treturn true;\n\n\t\t\tcase 'extension':\n\t\t\t\treturn false;\n\n\t\t\tdefault:\n\t\t\t\treturn thisPath[ result ] < nodePath[ result ];\n\t\t}\n\t}\n\n\t/**\n\t * Returns whether this node is after given node. `false` is returned if nodes are in different trees (for example,\n\t * in different {@link module:engine/view/documentfragment~DocumentFragment}s).\n\t *\n\t * @param {module:engine/view/node~Node} node Node to compare with.\n\t * @returns {Boolean}\n\t */\n\tisAfter( node ) {\n\t\t// Given node is not before this node if they are same.\n\t\tif ( this == node ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Return `false` if it is impossible to compare nodes.\n\t\tif ( this.root !== node.root ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// In other cases, just check if the `node` is before, and return the opposite.\n\t\treturn !this.isBefore( node );\n\t}\n\n\t/**\n\t * Removes node from parent.\n\t *\n\t * @protected\n\t */\n\t_remove() {\n\t\tthis.parent._removeChildren( this.index );\n\t}\n\n\t/**\n\t * @protected\n\t * @param {module:engine/view/document~ChangeType} type Type of the change.\n\t * @param {module:engine/view/node~Node} node Changed node.\n\t * @fires change\n\t */\n\t_fireChange( type, node ) {\n\t\tthis.fire( 'change:' + type, node );\n\n\t\tif ( this.parent ) {\n\t\t\tthis.parent._fireChange( type, node );\n\t\t}\n\t}\n\n\t/**\n\t * Custom toJSON method to solve child-parent circular dependencies.\n\t *\n\t * @returns {Object} Clone of this object with the parent property removed.\n\t */\n\ttoJSON() {\n\t\tconst json = clone( this );\n\n\t\t// Due to circular references we need to remove parent reference.\n\t\tdelete json.parent;\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t * This method is useful when processing view objects that are of unknown type. For example, a function\n\t * may return a {@link module:engine/view/documentfragment~DocumentFragment} or a {@link module:engine/view/node~Node}\n\t * that can be either a text node or an element. This method can be used to check what kind of object is returned.\n\t *\n\t *\t\tsomeObject.is( 'element' ); // -> true if this is an element\n\t *\t\tsomeObject.is( 'node' ); // -> true if this is a node (a text node or an element)\n\t *\t\tsomeObject.is( 'documentFragment' ); // -> true if this is a document fragment\n\t *\n\t * Since this method is also available on a range of model objects, you can prefix the type of the object with\n\t * `model:` or `view:` to check, for example, if this is the model's or view's element:\n\t *\n\t *\t\tviewElement.is( 'view:element' ); // -> true\n\t *\t\tviewElement.is( 'model:element' ); // -> false\n\t *\n\t * By using this method it is also possible to check a name of an element:\n\t *\n\t *\t\timgElement.is( 'img' ); // -> true\n\t *\t\timgElement.is( 'element', 'img' ); // -> same as above\n\t *\t\timgElement.is( 'view:element', 'img' ); // -> same as above, but more precise\n\t *\n\t * The list of view objects which implement the `is()` method:\n\t *\n\t * * {@link module:engine/view/attributeelement~AttributeElement#is `AttributeElement#is()`}\n\t * * {@link module:engine/view/containerelement~ContainerElement#is `ContainerElement#is()`}\n\t * * {@link module:engine/view/documentfragment~DocumentFragment#is `DocumentFragment#is()`}\n\t * * {@link module:engine/view/documentselection~DocumentSelection#is `DocumentSelection#is()`}\n\t * * {@link module:engine/view/editableelement~EditableElement#is `EditableElement#is()`}\n\t * * {@link module:engine/view/element~Element#is `Element#is()`}\n\t * * {@link module:engine/view/emptyelement~EmptyElement#is `EmptyElement#is()`}\n\t * * {@link module:engine/view/node~Node#is `Node#is()`}\n\t * * {@link module:engine/view/position~Position#is `Position#is()`}\n\t * * {@link module:engine/view/range~Range#is `Range#is()`}\n\t * * {@link module:engine/view/rooteditableelement~RootEditableElement#is `RootEditableElement#is()`}\n\t * * {@link module:engine/view/selection~Selection#is `Selection#is()`}\n\t * * {@link module:engine/view/text~Text#is `Text#is()`}\n\t * * {@link module:engine/view/textproxy~TextProxy#is `TextProxy#is()`}\n\t * * {@link module:engine/view/uielement~UIElement#is `UIElement#is()`}\n\t *\n\t * @method #is\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type == 'node' || type == 'view:node';\n\t}\n\n\t/**\n\t * Clones this node.\n\t *\n\t * @protected\n\t * @method #_clone\n\t * @returns {module:engine/view/node~Node} Clone of this node.\n\t */\n\n\t/**\n\t * Checks if provided node is similar to this node.\n\t *\n\t * @method #isSimilar\n\t * @returns {Boolean} True if nodes are similar.\n\t */\n}\n\n/**\n * Fired when list of {@link module:engine/view/element~Element elements} children changes.\n *\n * Change event is bubbled – it is fired on all ancestors.\n *\n * @event change:children\n * @param {module:engine/view/node~Node} changedNode\n */\n\n/**\n * Fired when list of {@link module:engine/view/element~Element elements} attributes changes.\n *\n * Change event is bubbled – it is fired on all ancestors.\n *\n * @event change:attributes\n * @param {module:engine/view/node~Node} changedNode\n */\n\n/**\n * Fired when {@link module:engine/view/text~Text text nodes} data changes.\n *\n * Change event is bubbled – it is fired on all ancestors.\n *\n * @event change:text\n * @param {module:engine/view/node~Node} changedNode\n */\n\n/**\n * @event change\n */\n\nmix( Node, EmitterMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/text\n */\n\nimport Node from './node';\n\n/**\n * Tree view text node.\n *\n * The constructor of this class shouldn't be used directly. To create new Text instances\n * use the {@link module:engine/view/downcastwriter~DowncastWriter#createText `DowncastWriter#createText()`}\n * method when working on data downcasted from the model or the\n * {@link module:engine/view/upcastwriter~UpcastWriter#createText `UpcastWriter#createText()`}\n * method when working on non-semantic views.\n *\n * @extends module:engine/view/node~Node\n */\nexport default class Text extends Node {\n\t/**\n\t * Creates a tree view text node.\n\t *\n\t * @protected\n\t * @param {String} data The text's data.\n\t */\n\tconstructor( data ) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The text content.\n\t\t *\n\t\t * Setting the data fires the {@link module:engine/view/node~Node#event:change:text change event}.\n\t\t *\n\t\t * @protected\n\t\t * @member {String} module:engine/view/text~Text#_textData\n\t\t */\n\t\tthis._textData = data;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t *\t\ttext.is( 'text' ); // -> true\n\t *\t\ttext.is( 'node' ); // -> true\n\t *\t\ttext.is( 'view:text' ); // -> true\n\t *\t\ttext.is( 'view:node' ); // -> true\n\t *\n\t *\t\ttext.is( 'model:text' ); // -> false\n\t *\t\ttext.is( 'element' ); // -> false\n\t *\t\ttext.is( 'range' ); // -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type == 'text' || type == 'view:text' || super.is( type );\n\t}\n\n\t/**\n\t * The text content.\n\t *\n\t * @readonly\n\t * @type {String}\n\t */\n\tget data() {\n\t\treturn this._textData;\n\t}\n\n\t/**\n\t * This getter is required when using the addition assignment operator on protected property:\n\t *\n\t *\t\tconst foo = downcastWriter.createText( 'foo' );\n\t *\t\tconst bar = downcastWriter.createText( 'bar' );\n\t *\n\t *\t\tfoo._data += bar.data;   // executes: `foo._data = foo._data + bar.data`\n\t *\t\tconsole.log( foo.data ); // prints: 'foobar'\n\t *\n\t * If the protected getter didn't exist, `foo._data` will return `undefined` and result of the merge will be invalid.\n\t *\n\t * @protected\n\t * @type {String}\n\t */\n\tget _data() {\n\t\treturn this.data;\n\t}\n\n\t/**\n\t * Sets data and fires the {@link module:engine/view/node~Node#event:change:text change event}.\n\t *\n\t * @protected\n\t * @fires change:text\n\t * @param {String} data New data for the text node.\n\t */\n\tset _data( data ) {\n\t\tthis._fireChange( 'text', this );\n\n\t\tthis._textData = data;\n\t}\n\n\t/**\n\t * Checks if this text node is similar to other text node.\n\t * Both nodes should have the same data to be considered as similar.\n\t *\n\t * @param {module:engine/view/text~Text} otherNode Node to check if it is same as this node.\n\t * @returns {Boolean}\n\t */\n\tisSimilar( otherNode ) {\n\t\tif ( !( otherNode instanceof Text ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this === otherNode || this.data === otherNode.data;\n\t}\n\n\t/**\n\t * Clones this node.\n\t *\n\t * @protected\n\t * @returns {module:engine/view/text~Text} Text node that is a clone of this node.\n\t */\n\t_clone() {\n\t\treturn new Text( this.data );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `#${ this.data }`;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // log() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ViewText: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logExtended() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ViewText: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/textproxy\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * TextProxy is a wrapper for substring of {@link module:engine/view/text~Text}. Instance of this class is created by\n * {@link module:engine/view/treewalker~TreeWalker} when only a part of {@link module:engine/view/text~Text} needs to be returned.\n *\n * `TextProxy` has an API similar to {@link module:engine/view/text~Text Text} and allows to do most of the common tasks performed\n * on view nodes.\n *\n * **Note:** Some `TextProxy` instances may represent whole text node, not just a part of it.\n * See {@link module:engine/view/textproxy~TextProxy#isPartial}.\n *\n * **Note:** `TextProxy` is a readonly interface.\n *\n * **Note:** `TextProxy` instances are created on the fly basing on the current state of parent {@link module:engine/view/text~Text}.\n * Because of this it is highly unrecommended to store references to `TextProxy instances because they might get\n * invalidated due to operations on Document. Also TextProxy is not a {@link module:engine/view/node~Node} so it can not be\n * inserted as a child of {@link module:engine/view/element~Element}.\n *\n * `TextProxy` instances are created by {@link module:engine/view/treewalker~TreeWalker view tree walker}. You should not need to create\n * an instance of this class by your own.\n */\nexport default class TextProxy {\n\t/**\n\t * Creates a text proxy.\n\t *\n\t * @protected\n\t * @param {module:engine/view/text~Text} textNode Text node which part is represented by this text proxy.\n\t * @param {Number} offsetInText Offset in {@link module:engine/view/textproxy~TextProxy#textNode text node}\n\t * from which the text proxy starts.\n\t * @param {Number} length Text proxy length, that is how many text node's characters, starting from `offsetInText` it represents.\n\t * @constructor\n\t */\n\tconstructor( textNode, offsetInText, length ) {\n\t\t/**\n\t\t * Reference to the {@link module:engine/view/text~Text} element which TextProxy is a substring.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/text~Text} module:engine/view/textproxy~TextProxy#textNode\n\t\t */\n\t\tthis.textNode = textNode;\n\n\t\tif ( offsetInText < 0 || offsetInText > textNode.data.length ) {\n\t\t\t/**\n\t\t\t * Given offsetInText value is incorrect.\n\t\t\t *\n\t\t\t * @error view-textproxy-wrong-offsetintext\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-textproxy-wrong-offsetintext: Given offsetInText value is incorrect.', this );\n\t\t}\n\n\t\tif ( length < 0 || offsetInText + length > textNode.data.length ) {\n\t\t\t/**\n\t\t\t * Given length value is incorrect.\n\t\t\t *\n\t\t\t * @error view-textproxy-wrong-length\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-textproxy-wrong-length: Given length value is incorrect.', this );\n\t\t}\n\n\t\t/**\n\t\t * Text data represented by this text proxy.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String} module:engine/view/textproxy~TextProxy#data\n\t\t */\n\t\tthis.data = textNode.data.substring( offsetInText, offsetInText + length );\n\n\t\t/**\n\t\t * Offset in the `textNode` where this `TextProxy` instance starts.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} module:engine/view/textproxy~TextProxy#offsetInText\n\t\t */\n\t\tthis.offsetInText = offsetInText;\n\t}\n\n\t/**\n\t * Offset size of this node.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget offsetSize() {\n\t\treturn this.data.length;\n\t}\n\n\t/**\n\t * Flag indicating whether `TextProxy` instance covers only part of the original {@link module:engine/view/text~Text text node}\n\t * (`true`) or the whole text node (`false`).\n\t *\n\t * This is `false` when text proxy starts at the very beginning of {@link module:engine/view/textproxy~TextProxy#textNode textNode}\n\t * ({@link module:engine/view/textproxy~TextProxy#offsetInText offsetInText} equals `0`) and text proxy sizes is equal to\n\t * text node size.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isPartial() {\n\t\treturn this.data.length !== this.textNode.data.length;\n\t}\n\n\t/**\n\t * Parent of this text proxy, which is same as parent of text node represented by this text proxy.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|null}\n\t */\n\tget parent() {\n\t\treturn this.textNode.parent;\n\t}\n\n\t/**\n\t * Root of this text proxy, which is same as root of text node represented by this text proxy.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\treturn this.textNode.root;\n\t}\n\n\t/**\n\t * {@link module:engine/view/document~Document View document} that owns this text proxy, or `null` if the text proxy is inside\n\t * {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/document~Document|null}\n\t */\n\tget document() {\n\t\treturn this.textNode.document;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t *\t\ttextProxy.is( 'textProxy' ); // -> true\n\t *\t\ttextProxy.is( 'view:textProxy' ); // -> true\n\t *\n\t *\t\ttextProxy.is( 'model:textProxy' ); // -> false\n\t *\t\ttextProxy.is( 'element' ); // -> false\n\t *\t\ttextProxy.is( 'range' ); // -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type == 'textProxy' || type == 'view:textProxy';\n\t}\n\n\t/**\n\t * Returns ancestors array of this text proxy.\n\t *\n\t * @param {Object} options Options object.\n\t * @param {Boolean} [options.includeSelf=false] When set to `true` {#textNode} will be also included in parent's array.\n\t * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from text proxy parent to\n\t * root element, otherwise root element will be the first item in the array.\n\t * @returns {Array} Array with ancestors.\n\t */\n\tgetAncestors( options = { includeSelf: false, parentFirst: false } ) {\n\t\tconst ancestors = [];\n\t\tlet parent = options.includeSelf ? this.textNode : this.parent;\n\n\t\twhile ( parent !== null ) {\n\t\t\tancestors[ options.parentFirst ? 'push' : 'unshift' ]( parent );\n\t\t\tparent = parent.parent;\n\t\t}\n\n\t\treturn ancestors;\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `#${ this.data }`;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // log() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ViewTextProxy: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logExtended() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ViewTextProxy: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/isiterable\n */\n\n/**\n * Checks if value implements iterator interface.\n *\n * @param {*} value The value to check.\n * @returns {Boolean} True if value implements iterator interface.\n */\nexport default function isIterable( value ) {\n\treturn !!( value && value[ Symbol.iterator ] );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/tomap\n */\n\nimport objectToMap from './objecttomap';\nimport isIterable from './isiterable';\n\n/**\n * Transforms object or iterable to map. Iterable needs to be in the format acceptable by the `Map` constructor.\n *\n *\t\tmap = toMap( { 'foo': 1, 'bar': 2 } );\n *\t\tmap = toMap( [ [ 'foo', 1 ], [ 'bar', 2 ] ] );\n *\t\tmap = toMap( anotherMap );\n *\n * @param {Object|Iterable} data Object or iterable to transform.\n * @returns {Map} Map created from data.\n */\nexport default function toMap( data ) {\n\tif ( isIterable( data ) ) {\n\t\treturn new Map( data );\n\t} else {\n\t\treturn objectToMap( data );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/objecttomap\n */\n\n/**\n * Transforms object to map.\n *\n *\t\tconst map = objectToMap( { 'foo': 1, 'bar': 2 } );\n *\t\tmap.get( 'foo' ); // 1\n *\n * **Note**: For mixed data (`Object` or `Iterable`) there's a dedicated {@link module:utils/tomap~toMap} function.\n *\n * @param {Object} obj Object to transform.\n * @returns {Map} Map created from object.\n */\nexport default function objectToMap( obj ) {\n\tconst map = new Map();\n\n\tfor ( const key in obj ) {\n\t\tmap.set( key, obj[ key ] );\n\t}\n\n\treturn map;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/matcher\n */\n\n/**\n * View matcher class.\n * Instance of this class can be used to find {@link module:engine/view/element~Element elements} that match given pattern.\n */\nexport default class Matcher {\n\t/**\n\t * Creates new instance of Matcher.\n\t *\n\t * @param {String|RegExp|Object} [pattern] Match patterns. See {@link module:engine/view/matcher~Matcher#add add method} for\n\t * more information.\n\t */\n\tconstructor( ...pattern ) {\n\t\t/**\n\t\t * @private\n\t\t * @type {Array<String|RegExp|Object>}\n\t\t */\n\t\tthis._patterns = [];\n\n\t\tthis.add( ...pattern );\n\t}\n\n\t/**\n\t * Adds pattern or patterns to matcher instance.\n\t *\n\t *\t\t// String.\n\t *\t\tmatcher.add( 'div' );\n\t *\n\t *\t\t// Regular expression.\n\t *\t\tmatcher.add( /^\\w/ );\n\t *\n\t *\t\t// Single class.\n\t *\t\tmatcher.add( {\n\t *\t\t\tclasses: 'foobar'\n\t *\t\t} );\n\t *\n\t * See {@link module:engine/view/matcher~MatcherPattern} for more examples.\n\t *\n\t * Multiple patterns can be added in one call:\n\t *\n\t * \t\tmatcher.add( 'div', { classes: 'foobar' } );\n\t *\n\t * @param {Object|String|RegExp|Function} pattern Object describing pattern details. If string or regular expression\n\t * is provided it will be used to match element's name. Pattern can be also provided in a form\n\t * of a function - then this function will be called with each {@link module:engine/view/element~Element element} as a parameter.\n\t * Function's return value will be stored under `match` key of the object returned from\n\t * {@link module:engine/view/matcher~Matcher#match match} or {@link module:engine/view/matcher~Matcher#matchAll matchAll} methods.\n\t * @param {String|RegExp} [pattern.name] Name or regular expression to match element's name.\n\t * @param {Object} [pattern.attributes] Object with key-value pairs representing attributes to match. Each object key\n\t * represents attribute name. Value under that key can be either:\n\t * * `true` - then attribute is just required (can be empty),\n\t * * a string - then attribute has to be equal, or\n\t * * a regular expression - then attribute has to match the expression.\n\t * @param {String|RegExp|Array} [pattern.classes] Class name or array of class names to match. Each name can be\n\t * provided in a form of string or regular expression.\n\t * @param {Object} [pattern.styles] Object with key-value pairs representing styles to match. Each object key\n\t * represents style name. Value under that key can be either a string or a regular expression and it will be used\n\t * to match style value.\n\t */\n\tadd( ...pattern ) {\n\t\tfor ( let item of pattern ) {\n\t\t\t// String or RegExp pattern is used as element's name.\n\t\t\tif ( typeof item == 'string' || item instanceof RegExp ) {\n\t\t\t\titem = { name: item };\n\t\t\t}\n\n\t\t\t// Single class name/RegExp can be provided.\n\t\t\tif ( item.classes && ( typeof item.classes == 'string' || item.classes instanceof RegExp ) ) {\n\t\t\t\titem.classes = [ item.classes ];\n\t\t\t}\n\n\t\t\tthis._patterns.push( item );\n\t\t}\n\t}\n\n\t/**\n\t * Matches elements for currently stored patterns. Returns match information about first found\n\t * {@link module:engine/view/element~Element element}, otherwise returns `null`.\n\t *\n\t * Example of returned object:\n\t *\n\t *\t\t{\n\t *\t\t\telement: <instance of found element>,\n\t *\t\t\tpattern: <pattern used to match found element>,\n\t *\t\t\tmatch: {\n\t *\t\t\t\tname: true,\n\t *\t\t\t\tattributes: [ 'title', 'href' ],\n\t *\t\t\t\tclasses: [ 'foo' ],\n\t *\t\t\t\tstyles: [ 'color', 'position' ]\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t * @see module:engine/view/matcher~Matcher#add\n\t * @see module:engine/view/matcher~Matcher#matchAll\n\t * @param {...module:engine/view/element~Element} element View element to match against stored patterns.\n\t * @returns {Object|null} result\n\t * @returns {module:engine/view/element~Element} result.element Matched view element.\n\t * @returns {Object|String|RegExp|Function} result.pattern Pattern that was used to find matched element.\n\t * @returns {Object} result.match Object representing matched element parts.\n\t * @returns {Boolean} [result.match.name] True if name of the element was matched.\n\t * @returns {Array} [result.match.attributes] Array with matched attribute names.\n\t * @returns {Array} [result.match.classes] Array with matched class names.\n\t * @returns {Array} [result.match.styles] Array with matched style names.\n\t */\n\tmatch( ...element ) {\n\t\tfor ( const singleElement of element ) {\n\t\t\tfor ( const pattern of this._patterns ) {\n\t\t\t\tconst match = isElementMatching( singleElement, pattern );\n\n\t\t\t\tif ( match ) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\telement: singleElement,\n\t\t\t\t\t\tpattern,\n\t\t\t\t\t\tmatch\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Matches elements for currently stored patterns. Returns array of match information with all found\n\t * {@link module:engine/view/element~Element elements}. If no element is found - returns `null`.\n\t *\n\t * @see module:engine/view/matcher~Matcher#add\n\t * @see module:engine/view/matcher~Matcher#match\n\t * @param {...module:engine/view/element~Element} element View element to match against stored patterns.\n\t * @returns {Array.<Object>|null} Array with match information about found elements or `null`. For more information\n\t * see {@link module:engine/view/matcher~Matcher#match match method} description.\n\t */\n\tmatchAll( ...element ) {\n\t\tconst results = [];\n\n\t\tfor ( const singleElement of element ) {\n\t\t\tfor ( const pattern of this._patterns ) {\n\t\t\t\tconst match = isElementMatching( singleElement, pattern );\n\n\t\t\t\tif ( match ) {\n\t\t\t\t\tresults.push( {\n\t\t\t\t\t\telement: singleElement,\n\t\t\t\t\t\tpattern,\n\t\t\t\t\t\tmatch\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn results.length > 0 ? results : null;\n\t}\n\n\t/**\n\t * Returns the name of the element to match if there is exactly one pattern added to the matcher instance\n\t * and it matches element name defined by `string` (not `RegExp`). Otherwise, returns `null`.\n\t *\n\t * @returns {String|null} Element name trying to match.\n\t */\n\tgetElementName() {\n\t\tif ( this._patterns.length !== 1 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst pattern = this._patterns[ 0 ];\n\t\tconst name = pattern.name;\n\n\t\treturn ( typeof pattern != 'function' && name && !( name instanceof RegExp ) ) ? name : null;\n\t}\n}\n\n// Returns match information if {@link module:engine/view/element~Element element} is matching provided pattern.\n// If element cannot be matched to provided pattern - returns `null`.\n//\n// @param {module:engine/view/element~Element} element\n// @param {Object|String|RegExp|Function} pattern\n// @returns {Object|null} Returns object with match information or null if element is not matching.\nfunction isElementMatching( element, pattern ) {\n\t// If pattern is provided as function - return result of that function;\n\tif ( typeof pattern == 'function' ) {\n\t\treturn pattern( element );\n\t}\n\n\tconst match = {};\n\t// Check element's name.\n\tif ( pattern.name ) {\n\t\tmatch.name = matchName( pattern.name, element.name );\n\n\t\tif ( !match.name ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// Check element's attributes.\n\tif ( pattern.attributes ) {\n\t\tmatch.attributes = matchAttributes( pattern.attributes, element );\n\n\t\tif ( !match.attributes ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// Check element's classes.\n\tif ( pattern.classes ) {\n\t\tmatch.classes = matchClasses( pattern.classes, element );\n\n\t\tif ( !match.classes ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t// Check element's styles.\n\tif ( pattern.styles ) {\n\t\tmatch.styles = matchStyles( pattern.styles, element );\n\n\t\tif ( !match.styles ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn match;\n}\n\n// Checks if name can be matched by provided pattern.\n//\n// @param {String|RegExp} pattern\n// @param {String} name\n// @returns {Boolean} Returns `true` if name can be matched, `false` otherwise.\nfunction matchName( pattern, name ) {\n\t// If pattern is provided as RegExp - test against this regexp.\n\tif ( pattern instanceof RegExp ) {\n\t\treturn pattern.test( name );\n\t}\n\n\treturn pattern === name;\n}\n\n// Checks if attributes of provided element can be matched against provided patterns.\n//\n// @param {Object} patterns Object with information about attributes to match. Each key of the object will be\n// used as attribute name. Value of each key can be a string or regular expression to match against attribute value.\n// @param {module:engine/view/element~Element} element Element which attributes will be tested.\n// @returns {Array|null} Returns array with matched attribute names or `null` if no attributes were matched.\nfunction matchAttributes( patterns, element ) {\n\tconst match = [];\n\n\tfor ( const name in patterns ) {\n\t\tconst pattern = patterns[ name ];\n\n\t\tif ( element.hasAttribute( name ) ) {\n\t\t\tconst attribute = element.getAttribute( name );\n\n\t\t\tif ( pattern === true ) {\n\t\t\t\tmatch.push( name );\n\t\t\t} else if ( pattern instanceof RegExp ) {\n\t\t\t\tif ( pattern.test( attribute ) ) {\n\t\t\t\t\tmatch.push( name );\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else if ( attribute === pattern ) {\n\t\t\t\tmatch.push( name );\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\treturn match;\n}\n\n// Checks if classes of provided element can be matched against provided patterns.\n//\n// @param {Array.<String|RegExp>} patterns Array of strings or regular expressions to match against element's classes.\n// @param {module:engine/view/element~Element} element Element which classes will be tested.\n// @returns {Array|null} Returns array with matched class names or `null` if no classes were matched.\nfunction matchClasses( patterns, element ) {\n\tconst match = [];\n\n\tfor ( const pattern of patterns ) {\n\t\tif ( pattern instanceof RegExp ) {\n\t\t\tconst classes = element.getClassNames();\n\n\t\t\tfor ( const name of classes ) {\n\t\t\t\tif ( pattern.test( name ) ) {\n\t\t\t\t\tmatch.push( name );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( match.length === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else if ( element.hasClass( pattern ) ) {\n\t\t\tmatch.push( pattern );\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\treturn match;\n}\n\n// Checks if styles of provided element can be matched against provided patterns.\n//\n// @param {Object} patterns Object with information about styles to match. Each key of the object will be\n// used as style name. Value of each key can be a string or regular expression to match against style value.\n// @param {module:engine/view/element~Element} element Element which styles will be tested.\n// @returns {Array|null} Returns array with matched style names or `null` if no styles were matched.\nfunction matchStyles( patterns, element ) {\n\tconst match = [];\n\n\tfor ( const name in patterns ) {\n\t\tconst pattern = patterns[ name ];\n\n\t\tif ( element.hasStyle( name ) ) {\n\t\t\tconst style = element.getStyle( name );\n\n\t\t\tif ( pattern instanceof RegExp ) {\n\t\t\t\tif ( pattern.test( style ) ) {\n\t\t\t\t\tmatch.push( name );\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else if ( style === pattern ) {\n\t\t\t\tmatch.push( name );\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\treturn match;\n}\n\n/**\n * An entity that is a valid pattern recognized by a matcher. `MatcherPattern` is used by {@link ~Matcher} to recognize\n * if a view element fits in a group of view elements described by the pattern.\n *\n * `MatcherPattern` can be given as a `String`, a `RegExp`, an `Object` or a `Function`.\n *\n * If `MatcherPattern` is given as a `String` or `RegExp`, it will match any view element that has a matching name:\n *\n *\t\t// Match any element with name equal to 'div'.\n *\t\tconst pattern = 'div';\n *\n *\t\t// Match any element which name starts on 'p'.\n *\t\tconst pattern = /^p/;\n *\n * If `MatcherPattern` is given as an `Object`, all the object's properties will be matched with view element properties.\n *\n *\t\t// Match view element's name.\n *\t\tconst pattern = { name: /^p/ };\n *\n *\t\t// Match view element which has matching attributes.\n *\t\tconst pattern = {\n *\t\t\tattributes: {\n *\t\t\t\ttitle: 'foobar',\t// Attribute title should equal 'foobar'.\n *\t\t\t\tfoo: /^\\w+/,\t\t// Attribute foo should match /^\\w+/ regexp.\n *\t\t\t\tbar: true\t\t\t// Attribute bar should be set (can be empty).\n *\t\t\t}\n *\t\t};\n *\n *\t\t// Match view element which has given class.\n *\t\tconst pattern = {\n *\t\t\tclasses: 'foobar'\n *\t\t};\n *\n *\t\t// Match view element class using regular expression.\n *\t\tconst pattern = {\n *\t\t\tclasses: /foo.../\n *\t\t};\n *\n *\t\t// Multiple classes to match.\n *\t\tconst pattern = {\n *\t\t\tclasses: [ 'baz', 'bar', /foo.../ ]\n *\t\t};\n *\n *\t\t// Match view element which has given styles.\n *\t\tconst pattern = {\n *\t\t\tstyles: {\n *\t\t\t\tposition: 'absolute',\n *\t\t\t\tcolor: /^\\w*blue$/\n *\t\t\t}\n *\t\t};\n *\n *\t\t// Pattern with multiple properties.\n *\t\tconst pattern = {\n *\t\t\tname: 'span',\n *\t\t\tstyles: {\n *\t\t\t\t'font-weight': 'bold'\n *\t\t\t},\n *\t\t\tclasses: 'highlighted'\n *\t\t};\n *\n * If `MatcherPattern` is given as a `Function`, the function takes a view element as a first and only parameter and\n * the function should decide whether that element matches. If so, it should return what part of the view element has been matched.\n * Otherwise, the function should return `null`. The returned result will be included in `match` property of the object\n * returned by {@link ~Matcher#match} call.\n *\n *\t\t// Match an empty <div> element.\n *\t\tconst pattern = element => {\n *\t\t\tif ( element.name == 'div' && element.childCount > 0 ) {\n *\t\t\t\t// Return which part of the element was matched.\n *\t\t\t\treturn { name: true };\n *\t\t\t}\n *\n *\t\t\treturn null;\n *\t\t};\n *\n *\t\t// Match a <p> element with big font (\"heading-like\" element).\n *\t\tconst pattern = element => {\n *\t\t\tif ( element.name == 'p' ) {\n *\t\t\t\tconst fontSize = element.getStyle( 'font-size' );\n *\t\t\t\tconst size = fontSize.match( /(\\d+)/px );\n *\n *\t\t\t\tif ( size && Number( size[ 1 ] ) > 26 ) {\n *\t\t\t\t\treturn { name: true, attribute: [ 'font-size' ] };\n *\t\t\t\t}\n *\t\t\t}\n *\n *\t\t\treturn null;\n *\t\t};\n *\n * `MatcherPattern` is defined in a way that it is a superset of {@link module:engine/view/elementdefinition~ElementDefinition},\n * that is, every `ElementDefinition` also can be used as a `MatcherPattern`.\n *\n * @typedef {String|RegExp|Object|Function} module:engine/view/matcher~MatcherPattern\n *\n * @property {String|RegExp} [name] View element name to match.\n * @property {String|RegExp|Array.<String|RegExp>} [classes] View element's class name(s) to match.\n * @property {Object} [styles] Object with key-value pairs representing styles to match.\n * Each object key represents style name. Value can be given as `String` or `RegExp`.\n * @property {Object} [attributes] Object with key-value pairs representing attributes to match.\n * Each object key represents attribute name. Value can be given as `String` or `RegExp`.\n */\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","import isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nexport default isKey;\n","import MapCache from './_MapCache.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nexport default memoize;\n","import memoize from './memoize.js';\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nexport default memoizeCapped;\n","import memoizeCapped from './_memoizeCapped.js';\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nexport default stringToPath;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n","import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n","import isArray from './isArray.js';\nimport isKey from './_isKey.js';\nimport stringToPath from './_stringToPath.js';\nimport toString from './toString.js';\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nexport default castPath;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n","import isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default toKey;\n","import castPath from './_castPath.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nexport default baseGet;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nexport default baseSlice;\n","import baseGet from './_baseGet.js';\nimport baseSlice from './_baseSlice.js';\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nexport default parent;\n","import castPath from './_castPath.js';\nimport last from './last.js';\nimport parent from './_parent.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nexport default baseUnset;\n","import baseUnset from './_baseUnset.js';\n\n/**\n * Removes the property at `path` of `object`.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n * _.unset(object, 'a[0].b.c');\n * // => true\n *\n * console.log(object);\n * // => { 'a': [{ 'b': {} }] };\n *\n * _.unset(object, ['a', '0', 'b', 'c']);\n * // => true\n *\n * console.log(object);\n * // => { 'a': [{ 'b': {} }] };\n */\nfunction unset(object, path) {\n  return object == null ? true : baseUnset(object, path);\n}\n\nexport default unset;\n","import baseGet from './_baseGet.js';\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nexport default get;\n","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignMergeValue;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nexport default createBaseFor;\n","import createBaseFor from './_createBaseFor.js';\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nexport default baseFor;\n","import isArrayLike from './isArrayLike.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nexport default isArrayLikeObject;\n","/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\nexport default safeGet;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\nexport default toPlainObject;\n","import assignMergeValue from './_assignMergeValue.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\nimport copyArray from './_copyArray.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\nimport isBuffer from './isBuffer.js';\nimport isFunction from './isFunction.js';\nimport isObject from './isObject.js';\nimport isPlainObject from './isPlainObject.js';\nimport isTypedArray from './isTypedArray.js';\nimport safeGet from './_safeGet.js';\nimport toPlainObject from './toPlainObject.js';\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\nexport default baseMergeDeep;\n","import Stack from './_Stack.js';\nimport assignMergeValue from './_assignMergeValue.js';\nimport baseFor from './_baseFor.js';\nimport baseMergeDeep from './_baseMergeDeep.js';\nimport isObject from './isObject.js';\nimport keysIn from './keysIn.js';\nimport safeGet from './_safeGet.js';\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nexport default baseMerge;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nexport default identity;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nexport default apply;\n","import apply from './_apply.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nexport default overRest;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nexport default constant;\n","import constant from './constant.js';\nimport defineProperty from './_defineProperty.js';\nimport identity from './identity.js';\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nexport default baseSetToString;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nexport default shortOut;\n","import baseSetToString from './_baseSetToString.js';\nimport shortOut from './_shortOut.js';\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nexport default setToString;\n","import identity from './identity.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nexport default baseRest;\n","import eq from './eq.js';\nimport isArrayLike from './isArrayLike.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nexport default isIterateeCall;\n","import baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nexport default createAssigner;\n","import baseMerge from './_baseMerge.js';\nimport createAssigner from './_createAssigner.js';\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\nexport default merge;\n","import assignValue from './_assignValue.js';\nimport castPath from './_castPath.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nexport default baseSet;\n","import baseSet from './_baseSet.js';\n\n/**\n * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n * it's created. Arrays are created for missing index properties while objects\n * are created for all other missing properties. Use `_.setWith` to customize\n * `path` creation.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, ['x', '0', 'y', 'z'], 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */\nfunction set(object, path, value) {\n  return object == null ? object : baseSet(object, path, value);\n}\n\nexport default set;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/stylesmap\n */\n\nimport { get, isObject, merge, set, unset } from 'lodash-es';\n\n/**\n * Styles map. Allows handling (adding, removing, retrieving) a set of style rules (usually, of an element).\n *\n * The styles map is capable of normalizing style names so e.g. the following operations are possible:\n */\nexport default class StylesMap {\n\t/**\n\t * Creates Styles instance.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Keeps an internal representation of styles map. Normalized styles are kept as object tree to allow unified modification and\n\t\t * value access model using lodash's get, set, unset, etc methods.\n\t\t *\n\t\t * When no style processor rules are defined the it acts as simple key-value storage.\n\t\t *\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._styles = {};\n\n\t\t// Hide _styleProcessor from the watchdog by making this property non-enumarable. Watchdog checks errors for their editor origin\n\t\t// by checking if two objects are connected through properties. Using singleton is against this check as it would detect\n\t\t// that two editors are connected through single style processor instance.\n\t\tObject.defineProperty( this, '_styleProcessor', {\n\t\t\tget() {\n\t\t\t\treturn StylesMap._styleProcessor;\n\t\t\t},\n\t\t\tenumerable: false\n\t\t} );\n\t}\n\n\t/**\n\t * Returns true if style map has no styles set.\n\t *\n\t * @returns {Boolean}\n\t */\n\tget isEmpty() {\n\t\tconst entries = Object.entries( this._styles );\n\t\tconst from = Array.from( entries );\n\n\t\treturn !from.length;\n\t}\n\n\t/**\n\t * Number of styles defined.\n\t *\n\t * @type {Number}\n\t */\n\tget size() {\n\t\tif ( this.isEmpty ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn this.getStyleNames().length;\n\t}\n\n\t/**\n\t * Set styles map to a new value.\n\t *\n\t *\t\tstyles.setTo( 'border:1px solid blue;margin-top:1px;' );\n\t *\n\t * @param {String} inlineStyle\n\t */\n\tsetTo( inlineStyle ) {\n\t\tthis.clear();\n\n\t\tconst parsedStyles = Array.from( parseInlineStyles( inlineStyle ).entries() );\n\n\t\tfor ( const [ key, value ] of parsedStyles ) {\n\t\t\tthis._styleProcessor.toNormalizedForm( key, value, this._styles );\n\t\t}\n\t}\n\n\t/**\n\t * Checks if a given style is set.\n\t *\n\t *\t\tstyles.setTo( 'margin-left:1px;' );\n\t *\n\t *\t\tstyles.has( 'margin-left' );    // -> true\n\t *\t\tstyles.has( 'padding' );        // -> false\n\t *\n\t * **Note**: This check supports normalized style names.\n\t *\n\t *\t\t// Enable 'margin' shorthand processing:\n\t *\t\teditor.editing.view.document.addStyleProcessorRules( addMarginRules );\n\t *\n\t *\t\tstyles.setTo( 'margin:2px;' );\n\t *\n\t *\t\tstyles.has( 'margin' );         // -> true\n\t *\t\tstyles.has( 'margin-top' );     // -> true\n\t *\t\tstyles.has( 'margin-left' );    // -> true\n\t *\n\t *\t\tstyles.remove( 'margin-top' );\n\t *\n\t *\t\tstyles.has( 'margin' );         // -> false\n\t *\t\tstyles.has( 'margin-top' );     // -> false\n\t *\t\tstyles.has( 'margin-left' );    // -> true\n\t *\n\t * @param {String} name Style name.\n\t * @returns {Boolean}\n\t */\n\thas( name ) {\n\t\tif ( this.isEmpty ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst styles = this._styleProcessor.getReducedForm( name, this._styles );\n\n\t\tconst propertyDescriptor = styles.find( ( [ property ] ) => property === name );\n\n\t\t// Only return a value if it is set;\n\t\treturn Array.isArray( propertyDescriptor );\n\t}\n\n\t/**\n\t * Sets a given style.\n\t *\n\t * Can insert one by one:\n\t *\n\t *\t\tstyles.set( 'color', 'blue' );\n\t *\t\tstyles.set( 'margin-right', '1em' );\n\t *\n\t * or many styles at once:\n\t *\n\t *\t\tstyles.set( {\n\t *\t\t\tcolor: 'blue',\n\t *\t\t\t'margin-right': '1em'\n\t *\t\t} );\n\t *\n\t * ***Note**:* This method uses {@link module:engine/view/document~Document#addStyleProcessorRules enabled style processor rules}\n\t * to normalize passed values.\n\t *\n\t *\t\t// Enable 'margin' shorthand processing:\n\t *\t\teditor.editing.view.document.addStyleProcessorRules( addMarginRules );\n\t *\n\t *\t\tstyles.set( 'margin', '2px' );\n\t *\n\t * The above code will set margin to:\n\t *\n\t *\t\tstyles.getNormalized( 'margin' );\n\t *\t\t// -> { top: '2px', right: '2px', bottom: '2px', left: '2px' }\n\t *\n\t * Which makes it possible to retrieve a \"sub-value\":\n\t *\n\t *\t\tstyles.get( 'margin-left' );       // -> '2px'\n\t *\n\t * Or modify it:\n\t *\n\t *\t\tstyles.remove( 'margin-left' );\n\t *\n\t *\t\tstyles.getNormalized( 'margin' );  // -> { top: '1px', bottom: '1px', right: '1px' }\n\t *\t\tstyles.toString();                 // -> 'margin-bottom:1px;margin-right:1px;margin-top:1px;'\n\t *\n\t * This method also allows to set normalized values directly (if a particular styles processor rule was enabled):\n\t *\n\t *\t\tstyles.set( 'border-color', { top: 'blue' } );\n\t *\t\tstyles.set( 'margin', { right: '2em' } );\n\t *\n\t *\t\tstyles.toString();                 // -> 'border-color-top:blue;margin-right:2em;'\n\t *\n\t * @param {String|Object} nameOrObject Style property name or object with multiple properties.\n\t * @param {String|Object} valueOrObject Value to set.\n\t */\n\tset( nameOrObject, valueOrObject ) {\n\t\tif ( isObject( nameOrObject ) ) {\n\t\t\tfor ( const [ key, value ] of Object.entries( nameOrObject ) ) {\n\t\t\t\tthis._styleProcessor.toNormalizedForm( key, value, this._styles );\n\t\t\t}\n\t\t} else {\n\t\t\tthis._styleProcessor.toNormalizedForm( nameOrObject, valueOrObject, this._styles );\n\t\t}\n\t}\n\n\t/**\n\t * Removes given style.\n\t *\n\t *\t\tstyles.setTo( 'background:#f00;margin-right:2px;' );\n\t *\n\t *\t\tstyles.remove( 'background' );\n\t *\n\t *\t\tstyles.toString();   // -> 'margin-right:2px;'\n\t *\n\t * ***Note**:* This method uses {@link module:engine/view/document~Document#addStyleProcessorRules enabled style processor rules}\n\t * to normalize passed values.\n\t *\n\t *\t\t// Enable 'margin' shorthand processing:\n\t *\t\teditor.editing.view.document.addStyleProcessorRules( addMarginRules );\n\t *\n\t *\t\tstyles.setTo( 'margin:1px' );\n\t *\n\t *\t\tstyles.remove( 'margin-top' );\n\t *\t\tstyles.remove( 'margin-right' );\n\t *\n\t *\t\tstyles.toString(); // -> 'margin-bottom:1px;margin-left:1px;'\n\t *\n\t * @param {String} name Style name.\n\t */\n\tremove( name ) {\n\t\tconst path = toPath( name );\n\n\t\tunset( this._styles, path );\n\t\tdelete this._styles[ name ];\n\n\t\tthis._cleanEmptyObjectsOnPath( path );\n\t}\n\n\t/**\n\t * Returns a normalized style object or a single value.\n\t *\n\t *\t\t// Enable 'margin' shorthand processing:\n\t *\t\teditor.editing.view.document.addStyleProcessorRules( addMarginRules );\n\t *\n\t *\t\tconst styles = new Styles();\n\t *\t\tstyles.setTo( 'margin:1px 2px 3em;' );\n\t *\n\t *\t\tstyles.getNormalized( 'margin' );\n\t *\t\t// will log:\n\t *\t\t// {\n\t *\t\t//     top: '1px',\n\t *\t\t//     right: '2px',\n\t *\t\t//     bottom: '3em',\n\t *\t\t//     left: '2px'     // normalized value from margin shorthand\n\t *\t\t// }\n\t *\n\t *\t\tstyles.getNormalized( 'margin-left' ); // -> '2px'\n\t *\n\t * **Note**: This method will only return normalized styles if a style processor was defined.\n\t *\n\t * @param {String} name Style name.\n\t * @returns {Object|String|undefined}\n\t */\n\tgetNormalized( name ) {\n\t\treturn this._styleProcessor.getNormalized( name, this._styles );\n\t}\n\n\t/**\n\t * Returns a normalized style string. Styles are sorted by name.\n\t *\n\t *\t\tstyles.set( 'margin' , '1px' );\n\t *\t\tstyles.set( 'background', '#f00' );\n\t *\n\t *\t\tstyles.toString(); // -> 'background:#f00;margin:1px;'\n\t *\n\t * **Note**: This method supports normalized styles if defined.\n\t *\n\t *\t\t// Enable 'margin' shorthand processing:\n\t *\t\teditor.editing.view.document.addStyleProcessorRules( addMarginRules );\n\t *\n\t *\t\tstyles.set( 'margin' , '1px' );\n\t *\t\tstyles.set( 'background', '#f00' );\n\t *\t\tstyles.remove( 'margin-top' );\n\t *\t\tstyles.remove( 'margin-right' );\n\t *\n\t *\t\tstyles.toString(); // -> 'background:#f00;margin-bottom:1px;margin-left:1px;'\n\t *\n\t * @returns {String}\n\t */\n\ttoString() {\n\t\tif ( this.isEmpty ) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn this._getStylesEntries()\n\t\t\t.map( arr => arr.join( ':' ) )\n\t\t\t.sort()\n\t\t\t.join( ';' ) + ';';\n\t}\n\n\t/**\n\t * Returns property as a value string or undefined if property is not set.\n\t *\n\t *\t\t// Enable 'margin' shorthand processing:\n\t *\t\teditor.editing.view.document.addStyleProcessorRules( addMarginRules );\n\t *\n\t *\t\tconst styles = new Styles();\n\t *\t\tstyles.setTo( 'margin:1px;' );\n\t *\t\tstyles.set( 'margin-bottom', '3em' );\n\t *\n\t *\t\tstyles.getAsString( 'margin' ); // -> 'margin: 1px 1px 3em;'\n\t *\n\t * Note, however, that all sub-values must be set for the longhand property name to return a value:\n\t *\n\t *\t\tconst styles = new Styles();\n\t *\t\tstyles.setTo( 'margin:1px;' );\n\t *\t\tstyles.remove( 'margin-bottom' );\n\t *\n\t *\t\tstyles.getAsString( 'margin' ); // -> undefined\n\t *\n\t * In the above scenario, it is not possible to return a `margin` value, so `undefined` is returned.\n\t * Instead, you should use:\n\t *\n\t *\t\tconst styles = new Styles();\n\t *\t\tstyles.setTo( 'margin:1px;' );\n\t *\t\tstyles.remove( 'margin-bottom' );\n\t *\n\t *\t\tfor ( const styleName of styles.getStyleNames() ) {\n\t *\t\t\tconsole.log( styleName, styles.getAsString( styleName ) );\n\t *\t\t}\n\t *\t\t// 'margin-top', '1px'\n\t *\t\t// 'margin-right', '1px'\n\t *\t\t// 'margin-left', '1px'\n\t *\n\t * In general, it is recommend to iterate over style names like in the example above. This way, you will always get all\n\t * the currently set style values. So, if all the 4 margin values would be set\n\t * the for-of loop above would yield only `'margin'`, `'1px'`:\n\t *\n\t *\t\tconst styles = new Styles();\n\t *\t\tstyles.setTo( 'margin:1px;' );\n\t *\n\t *\t\tfor ( const styleName of styles.getStyleNames() ) {\n\t *\t\t\tconsole.log( styleName, styles.getAsString( styleName ) );\n\t *\t\t}\n\t *\t\t// 'margin', '1px'\n\t *\n\t * **Note**: To get a normalized version of a longhand property use the {@link #getNormalized `#getNormalized()`} method.\n\t *\n\t * @param {String} propertyName\n\t * @returns {String|undefined}\n\t */\n\tgetAsString( propertyName ) {\n\t\tif ( this.isEmpty ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this._styles[ propertyName ] && !isObject( this._styles[ propertyName ] ) ) {\n\t\t\t// Try return styles set directly - values that are not parsed.\n\t\t\treturn this._styles[ propertyName ];\n\t\t}\n\n\t\tconst styles = this._styleProcessor.getReducedForm( propertyName, this._styles );\n\n\t\tconst propertyDescriptor = styles.find( ( [ property ] ) => property === propertyName );\n\n\t\t// Only return a value if it is set;\n\t\tif ( Array.isArray( propertyDescriptor ) ) {\n\t\t\treturn propertyDescriptor[ 1 ];\n\t\t}\n\t}\n\n\t/**\n\t * Returns style property names as they would appear when using {@link #toString `#toString()`}.\n\t *\n\t * @returns {Array.<String>}\n\t */\n\tgetStyleNames() {\n\t\tif ( this.isEmpty ) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst entries = this._getStylesEntries();\n\n\t\treturn entries.map( ( [ key ] ) => key );\n\t}\n\n\t/**\n\t * Removes all styles.\n\t */\n\tclear() {\n\t\tthis._styles = {};\n\t}\n\n\t/**\n\t * Returns related style names.\n\t *\n\t *\t\t// Enable 'margin' shorthand processing:\n\t *\t\teditor.editing.view.document.addStyleProcessorRules( addMarginRules );\n\t *\n\t *\t\tStylesMap.getRelatedStyles( 'margin' );\n\t *\t\t// will return: [ 'margin-top', 'margin-right', 'margin-bottom', 'margin-left' ];\n\t *\n\t *\t\tStylesMap.getRelatedStyles( 'margin-top' );\n\t *\t\t// will return: [ 'margin' ];\n\t *\n\t * **Note**: To define new style relations load an existing style processor (as shown above) or use\n\t * {@link module:engine/view/stylesmap~StylesProcessor#setStyleRelation `StylesProcessor.setStyleRelation()`}.\n\t *\n\t * @param {String} name\n\t * @returns {Array.<String>}\n\t */\n\tstatic getRelatedStyles( name ) {\n\t\treturn this._styleProcessor.getRelatedStyles( name );\n\t}\n\n\t/**\n\t * Returns normalized styles entries for further processing.\n\t *\n\t * @private\n\t * @returns {Array.<module:engine/view/stylesmap~PropertyDescriptor>}\n\t */\n\t_getStylesEntries() {\n\t\tconst parsed = [];\n\n\t\tconst keys = Object.keys( this._styles );\n\n\t\tfor ( const key of keys ) {\n\t\t\tparsed.push( ...this._styleProcessor.getReducedForm( key, this._styles ) );\n\t\t}\n\n\t\treturn parsed;\n\t}\n\n\t/**\n\t * Removes empty objects upon removing an entry from internal object.\n\t *\n\t * @param {String} path\n\t * @private\n\t */\n\t_cleanEmptyObjectsOnPath( path ) {\n\t\tconst pathParts = path.split( '.' );\n\t\tconst isChildPath = pathParts.length > 1;\n\n\t\tif ( !isChildPath ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst parentPath = pathParts.splice( 0, pathParts.length - 1 ).join( '.' );\n\n\t\tconst parentObject = get( this._styles, parentPath );\n\n\t\tif ( !parentObject ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isParentEmpty = !Array.from( Object.keys( parentObject ) ).length;\n\n\t\tif ( isParentEmpty ) {\n\t\t\tthis.remove( parentPath );\n\t\t}\n\t}\n\n\t/**\n\t * Returns global StylesProcessor instance.\n\t *\n\t * @returns {module:engine/view/stylesmap~StylesProcessor}\n\t * @private\n\t */\n\tstatic get _styleProcessor() {\n\t\tif ( !this._processor ) {\n\t\t\tthis._processor = new StylesProcessor();\n\t\t}\n\n\t\treturn this._processor;\n\t}\n\n\t/**\n\t * Set new StylesProcessor instance.\n\t *\n\t * This is an internal method used mostly in tests.\n\t *\n\t * @param processor\n\t * @protected\n\t */\n\tstatic _setProcessor( processor ) {\n\t\tthis._processor = processor;\n\t}\n}\n\n/**\n * Style processor is responsible for writing and reading a normalized styles object.\n */\nexport class StylesProcessor {\n\t/**\n\t * Creates StylesProcessor instance.\n\t *\n\t * @private\n\t */\n\tconstructor() {\n\t\tthis._normalizers = new Map();\n\t\tthis._extractors = new Map();\n\t\tthis._reducers = new Map();\n\t\tthis._consumables = new Map();\n\t}\n\n\t/**\n\t * Parse style string value to a normalized object and appends it to styles object.\n\t *\n\t *\t\tconst styles = {};\n\t *\n\t *\t\tstylesProcessor.toNormalizedForm( 'margin', '1px', styles );\n\t *\n\t *\t\t// styles will consist: { margin: { top: '1px', right: '1px', bottom: '1px', left: '1px; } }\n\t *\n\t * **Note**: To define normalizer callbacks use {@link #setNormalizer}.\n\t *\n\t * @param {String} name Name of style property.\n\t * @param {String} propertyValue Value of style property.\n\t * @param {Object} styles Object holding normalized styles.\n\t */\n\ttoNormalizedForm( name, propertyValue, styles ) {\n\t\tif ( isObject( propertyValue ) ) {\n\t\t\tappendStyleValue( styles, toPath( name ), propertyValue );\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this._normalizers.has( name ) ) {\n\t\t\tconst normalizer = this._normalizers.get( name );\n\n\t\t\tconst { path, value } = normalizer( propertyValue );\n\n\t\t\tappendStyleValue( styles, path, value );\n\t\t} else {\n\t\t\tappendStyleValue( styles, name, propertyValue );\n\t\t}\n\t}\n\n\t/**\n\t * Returns a normalized version of a style property.\n\t *\t\tconst styles = {\n\t *\t\t\tmargin: { top: '1px', right: '1px', bottom: '1px', left: '1px; },\n\t *\t\t\tbackground: { color: '#f00' }\n\t *\t\t};\n\t *\n\t *\t\tstylesProcessor.getNormalized( 'background' );\n\t *\t\t// will return: { color: '#f00' }\n\t *\n\t *\t\tstylesProcessor.getNormalized( 'margin-top' );\n\t *\t\t// will return: '1px'\n\t *\n\t * **Note**: In some cases extracting single value requires defining an extractor callback {@link #setExtractor}.\n\t *\n\t * @param {String} name Name of style property.\n\t * @param {Object} styles Object holding normalized styles.\n\t * @returns {*}\n\t */\n\tgetNormalized( name, styles ) {\n\t\tif ( !name ) {\n\t\t\treturn merge( {}, styles );\n\t\t}\n\n\t\t// Might be empty string.\n\t\tif ( styles[ name ] !== undefined ) {\n\t\t\treturn styles[ name ];\n\t\t}\n\n\t\tif ( this._extractors.has( name ) ) {\n\t\t\tconst extractor = this._extractors.get( name );\n\n\t\t\tif ( typeof extractor === 'string' ) {\n\t\t\t\treturn get( styles, extractor );\n\t\t\t}\n\n\t\t\tconst value = extractor( name, styles );\n\n\t\t\tif ( value ) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\n\t\treturn get( styles, toPath( name ) );\n\t}\n\n\t/**\n\t * Returns a reduced form of style property form normalized object.\n\t *\n\t * For default margin reducer, the below code:\n\t *\n\t *\t\tstylesProcessor.getReducedForm( 'margin', {\n\t *\t\t\tmargin: { top: '1px', right: '1px', bottom: '2px', left: '1px; }\n\t *\t\t} );\n\t *\n\t * will return:\n\t *\n\t *\t\t[\n\t *\t\t\t[ 'margin', '1px 1px 2px' ]\n\t *\t\t]\n\t *\n\t * because it might be represented as a shorthand 'margin' value. However if one of margin long hand values is missing it should return:\n\t *\n\t *\t\t[\n\t *\t\t\t[ 'margin-top', '1px' ],\n\t *\t\t\t[ 'margin-right', '1px' ],\n\t *\t\t\t[ 'margin-bottom', '2px' ]\n\t *\t\t\t// the 'left' value is missing - cannot use 'margin' shorthand.\n\t *\t\t]\n\t *\n\t * **Note**: To define reducer callbacks use {@link #setReducer}.\n\t *\n\t * @param {String} name\n\t * @param {String} name Name of style property.\n\t * @param {Object} styles Object holding normalized styles.\n\t * @returns {Array.<module:engine/view/stylesmap~PropertyDescriptor>}\n\t */\n\tgetReducedForm( name, styles ) {\n\t\tconst normalizedValue = this.getNormalized( name, styles );\n\n\t\t// Might be empty string.\n\t\tif ( normalizedValue === undefined ) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif ( this._reducers.has( name ) ) {\n\t\t\tconst reducer = this._reducers.get( name );\n\n\t\t\treturn reducer( normalizedValue );\n\t\t}\n\n\t\treturn [ [ name, normalizedValue ] ];\n\t}\n\n\t/**\n\t * Returns related style names.\n\t *\n\t *\t\tstylesProcessor.getRelatedStyles( 'margin' );\n\t *\t\t// will return: [ 'margin-top', 'margin-right', 'margin-bottom', 'margin-left' ];\n\t *\n\t *\t\tstylesProcessor.getRelatedStyles( 'margin-top' );\n\t *\t\t// will return: [ 'margin' ];\n\t *\n\t * **Note**: To define new style relations load an existing style processor or use\n\t * {@link module:engine/view/stylesmap~StylesProcessor#setStyleRelation `StylesProcessor.setStyleRelation()`}.\n\t *\n\t * @param {String} name\n\t * @returns {Array.<String>}\n\t */\n\tgetRelatedStyles( name ) {\n\t\treturn this._consumables.get( name ) || [];\n\t}\n\n\t/**\n\t * Adds a normalizer method for a style property.\n\t *\n\t * A normalizer returns describing how the value should be normalized.\n\t *\n\t * For instance 'margin' style is a shorthand for four margin values:\n\t *\n\t * - 'margin-top'\n\t * - 'margin-right'\n\t * - 'margin-bottom'\n\t * - 'margin-left'\n\t *\n\t * and can be written in various ways if some values are equal to others. For instance `'margin: 1px 2em;'` is a shorthand for\n\t * `'margin-top: 1px;margin-right: 2em;margin-bottom: 1px;margin-left: 2em'`.\n\t *\n\t * A normalizer should parse various margin notations as a single object:\n\t *\n\t *\t\tconst styles = {\n\t *\t\t\tmargin: {\n\t *\t\t\t\ttop: '1px',\n\t *\t\t\t\tright: '2em',\n\t *\t\t\t\tbottom: '1px',\n\t *\t\t\t\tleft: '2em'\n\t *\t\t\t}\n\t *\t\t};\n\t *\n\t * Thus a normalizer for 'margin' style should return an object defining style path and value to store:\n\t *\n\t *\t\tconst returnValue = {\n\t *\t\t\tpath: 'margin',\n\t *\t\t\tvalue: {\n\t *\t\t\t\ttop: '1px',\n\t *\t\t\t\tright: '2em',\n\t *\t\t\t\tbottom: '1px',\n\t *\t\t\t\tleft: '2em'\n\t *\t\t\t}\n\t *\t\t};\n\t *\n\t * Additionally to fully support all margin notations there should be also defined 4 normalizers for longhand margin notations. Below\n\t * is an example for 'margin-top' style property normalizer:\n\t *\n\t *\t\tstylesProcessor.setNormalizer( 'margin-top', valueString => {\n\t *\t\t\treturn {\n\t *\t\t\t\tpath: 'margin.top',\n\t *\t\t\t\tvalue: valueString\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * @param {String} name\n\t * @param {Function} callback\n\t */\n\tsetNormalizer( name, callback ) {\n\t\tthis._normalizers.set( name, callback );\n\t}\n\n\t/**\n\t * Adds a extractor callback for a style property.\n\t *\n\t * Most normalized style values are stored as one level objects. It is assumed that `'margin-top'` style will be stored as:\n\t *\n\t *\t\tconst styles = {\n\t *\t\t\tmargin: {\n\t *\t\t\t\ttop: 'value'\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t * However, some styles can have conflicting notations and thus it might be harder to extract a style value from shorthand. For instance\n\t * the 'border-top-style' can be defined using `'border-top:solid'`, `'border-style:solid none none none'` or by `'border:solid'`\n\t * shorthands. The default border styles processors stores styles as:\n\t *\n\t *\t\tconst styles = {\n\t *\t\t\tborder: {\n\t *\t\t\t\tstyle: {\n\t *\t\t\t\t\ttop: 'solid'\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t * as it is better to modify border style independently from other values. On the other part the output of the border might be\n\t * desired as `border-top`, `border-left`, etc notation.\n\t *\n\t * In the above example a reducer should return a side border value that combines style, color and width:\n\t *\n\t *\t\tstyleProcessor.setExtractor( 'border-top', styles => {\n\t *\t\t\treturn {\n\t *\t\t\t\tcolor: styles.border.color.top,\n\t *\t\t\t\tstyle: styles.border.style.top,\n\t *\t\t\t\twidth: styles.border.width.top\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * @param {String} name\n\t * @param {Function|String} callbackOrPath Callback that return a requested value or path string for single values.\n\t */\n\tsetExtractor( name, callbackOrPath ) {\n\t\tthis._extractors.set( name, callbackOrPath );\n\t}\n\n\t/**\n\t * Adds a reducer callback for a style property.\n\t *\n\t * Reducer returns a minimal notation for given style name. For longhand properties it is not required to write a reducer as\n\t * by default the direct value from style path is taken.\n\t *\n\t * For shorthand styles a reducer should return minimal style notation either by returning single name-value tuple or multiple tuples\n\t * if a shorthand cannot be used. For instance for a margin shorthand a reducer might return:\n\t *\n\t *\t\tconst marginShortHandTuple = [\n\t *\t\t\t[ 'margin', '1px 1px 2px' ]\n\t *\t\t];\n\t *\n\t * or a longhand tuples for defined values:\n\t *\n\t *\t\t// Considering margin.bottom and margin.left are undefined.\n\t *\t\tconst marginLonghandsTuples = [\n\t *\t\t\t[ 'margin-top', '1px' ],\n\t *\t\t\t[ 'margin-right', '1px' ]\n\t *\t\t];\n\t *\n\t * A reducer obtains a normalized style value:\n\t *\n\t *\t\t// Simplified reducer that always outputs 4 values which are always present:\n\t *\t\tstylesProcessor.setReducer( 'margin', margin => {\n\t *\t\t\treturn [\n\t *\t\t\t\t[ 'margin', `${ margin.top } ${ margin.right } ${ margin.bottom } ${ margin.left }` ]\n\t *\t\t\t]\n\t *\t\t} );\n\t *\n\t * @param {String} name\n\t * @param {Function} callback\n\t */\n\tsetReducer( name, callback ) {\n\t\tthis._reducers.set( name, callback );\n\t}\n\n\t/**\n\t * Defines a style shorthand relation to other style notations.\n\t *\n\t *\t\tstylesProcessor.setStyleRelation( 'margin', [\n\t *\t\t\t'margin-top',\n\t *\t\t\t'margin-right',\n\t *\t\t\t'margin-bottom',\n\t *\t\t\t'margin-left'\n\t *\t\t] );\n\t *\n\t * This enables expanding of style names for shorthands. For instance, if defined,\n\t * {@link module:engine/conversion/viewconsumable~ViewConsumable view consumable} items are automatically created\n\t * for long-hand margin style notation alongside the `'margin'` item.\n\t *\n\t * This means that when an element being converted has a style `margin`, a converter for `margin-left` will work just\n\t * fine since the view consumable will contain a consumable `margin-left` item (thanks to the relation) and\n\t * `element.getStyle( 'margin-left' )` will work as well assuming that the style processor was correctly configured.\n\t * However, once `margin-left` is consumed, `margin` will not be consumable anymore.\n\t *\n\t * @param {String} shorthandName\n\t * @param {Array.<String>} styleNames\n\t */\n\tsetStyleRelation( shorthandName, styleNames ) {\n\t\tthis._mapStyleNames( shorthandName, styleNames );\n\n\t\tfor ( const alsoName of styleNames ) {\n\t\t\tthis._mapStyleNames( alsoName, [ shorthandName ] );\n\t\t}\n\t}\n\n\t/**\n\t * Set two-way binding of style names.\n\t *\n\t * @param {String} name\n\t * @param {Array.<String>} styleNames\n\t * @private\n\t */\n\t_mapStyleNames( name, styleNames ) {\n\t\tif ( !this._consumables.has( name ) ) {\n\t\t\tthis._consumables.set( name, [] );\n\t\t}\n\n\t\tthis._consumables.get( name ).push( ...styleNames );\n\t}\n}\n\n// Parses inline styles and puts property - value pairs into styles map.\n//\n// @param {String} stylesString Styles to parse.\n// @returns {Map.<String, String>} stylesMap Map of parsed properties and values.\nfunction parseInlineStyles( stylesString ) {\n\t// `null` if no quote was found in input string or last found quote was a closing quote. See below.\n\tlet quoteType = null;\n\tlet propertyNameStart = 0;\n\tlet propertyValueStart = 0;\n\tlet propertyName = null;\n\n\tconst stylesMap = new Map();\n\n\t// Do not set anything if input string is empty.\n\tif ( stylesString === '' ) {\n\t\treturn stylesMap;\n\t}\n\n\t// Fix inline styles that do not end with `;` so they are compatible with algorithm below.\n\tif ( stylesString.charAt( stylesString.length - 1 ) != ';' ) {\n\t\tstylesString = stylesString + ';';\n\t}\n\n\t// Seek the whole string for \"special characters\".\n\tfor ( let i = 0; i < stylesString.length; i++ ) {\n\t\tconst char = stylesString.charAt( i );\n\n\t\tif ( quoteType === null ) {\n\t\t\t// No quote found yet or last found quote was a closing quote.\n\t\t\tswitch ( char ) {\n\t\t\t\tcase ':':\n\t\t\t\t\t// Most of time colon means that property name just ended.\n\t\t\t\t\t// Sometimes however `:` is found inside property value (for example in background image url).\n\t\t\t\t\tif ( !propertyName ) {\n\t\t\t\t\t\t// Treat this as end of property only if property name is not already saved.\n\t\t\t\t\t\t// Save property name.\n\t\t\t\t\t\tpropertyName = stylesString.substr( propertyNameStart, i - propertyNameStart );\n\t\t\t\t\t\t// Save this point as the start of property value.\n\t\t\t\t\t\tpropertyValueStart = i + 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase '\"':\n\t\t\t\tcase '\\'':\n\t\t\t\t\t// Opening quote found (this is an opening quote, because `quoteType` is `null`).\n\t\t\t\t\tquoteType = char;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ';': {\n\t\t\t\t\t// Property value just ended.\n\t\t\t\t\t// Use previously stored property value start to obtain property value.\n\t\t\t\t\tconst propertyValue = stylesString.substr( propertyValueStart, i - propertyValueStart );\n\n\t\t\t\t\tif ( propertyName ) {\n\t\t\t\t\t\t// Save parsed part.\n\t\t\t\t\t\tstylesMap.set( propertyName.trim(), propertyValue.trim() );\n\t\t\t\t\t}\n\n\t\t\t\t\tpropertyName = null;\n\n\t\t\t\t\t// Save this point as property name start. Property name starts immediately after previous property value ends.\n\t\t\t\t\tpropertyNameStart = i + 1;\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if ( char === quoteType ) {\n\t\t\t// If a quote char is found and it is a closing quote, mark this fact by `null`-ing `quoteType`.\n\t\t\tquoteType = null;\n\t\t}\n\t}\n\n\treturn stylesMap;\n}\n\n// Return lodash compatible path from style name.\nfunction toPath( name ) {\n\treturn name.replace( '-', '.' );\n}\n\n// Appends style definition to the styles object.\n//\n// @param {String} nameOrPath\n// @param {String|Object} valueOrObject\n// @private\nfunction appendStyleValue( stylesObject, nameOrPath, valueOrObject ) {\n\tlet valueToSet = valueOrObject;\n\n\tif ( isObject( valueOrObject ) ) {\n\t\tvalueToSet = merge( {}, get( stylesObject, nameOrPath ), valueOrObject );\n\t}\n\n\tset( stylesObject, nameOrPath, valueToSet );\n}\n\n/**\n * A CSS style property descriptor that contains tuplet of two strings:\n *\n * - first string describes property name\n * - second string describes property value\n *\n *\t\tconst marginDescriptor = [ 'margin', '2px 3em' ];\n *\t\tconst marginTopDescriptor = [ 'margin-top', '2px' ];\n *\n * @typedef {Array.<String, String>} module:engine/view/stylesmap~PropertyDescriptor\n */\n\n/**\n * An object describing values associated with the sides of a box, for instance margins, paddings,\n * border widths, border colors, etc.\n *\n *\t\tconst margin = {\n *\t\t\ttop: '1px',\n *\t\t\tright: '3px',\n *\t\t\tbottom: '3px',\n *\t\t\tleft: '7px'\n *\t\t};\n *\n *\t\tconst borderColor = {\n *\t\t\ttop: 'red',\n *\t\t\tright: 'blue',\n *\t\t\tbottom: 'blue',\n *\t\t\tleft: 'red'\n *\t\t};\n *\n * @typedef {Object} module:engine/view/stylesmap~BoxSides\n *\n * @property {String} top Top side value.\n * @property {String} right Right side value.\n * @property {String} bottom Bottom side value.\n * @property {String} left Left side value.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/element\n */\n\nimport Node from './node';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport toMap from '@ckeditor/ckeditor5-utils/src/tomap';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\nimport Matcher from './matcher';\nimport StylesMap from './stylesmap';\n\n// @if CK_DEBUG_ENGINE // const { convertMapToTags } = require( '../dev-utils/utils' );\n\n/**\n * View element.\n *\n * The editing engine does not define a fixed semantics of its elements (it is \"DTD-free\").\n * This is why the type of the {@link module:engine/view/element~Element} need to\n * be defined by the feature developer. When creating an element you should use one of the following methods:\n *\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createContainerElement `downcastWriter#createContainerElement()`}\n * in order to create a {@link module:engine/view/containerelement~ContainerElement},\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createAttributeElement `downcastWriter#createAttributeElement()`}\n * in order to create a {@link module:engine/view/attributeelement~AttributeElement},\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createEmptyElement `downcastWriter#createEmptyElement()`}\n * in order to create a {@link module:engine/view/emptyelement~EmptyElement}.\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createUIElement `downcastWriter#createUIElement()`}\n * in order to create a {@link module:engine/view/uielement~UIElement}.\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createEditableElement `downcastWriter#createEditableElement()`}\n * in order to create a {@link module:engine/view/editableelement~EditableElement}.\n *\n * Note that for view elements which are not created from the model, like elements from mutations, paste or\n * {@link module:engine/controller/datacontroller~DataController#set data.set} it is not possible to define the type of the element.\n * In such cases the {@link module:engine/view/upcastwriter~UpcastWriter#createElement `UpcastWriter#createElement()`} method\n * should be used to create generic view elements.\n *\n * @extends module:engine/view/node~Node\n */\nexport default class Element extends Node {\n\t/**\n\t * Creates a view element.\n\t *\n\t * Attributes can be passed in various formats:\n\t *\n\t *\t\tnew Element( 'div', { class: 'editor', contentEditable: 'true' } ); // object\n\t *\t\tnew Element( 'div', [ [ 'class', 'editor' ], [ 'contentEditable', 'true' ] ] ); // map-like iterator\n\t *\t\tnew Element( 'div', mapOfAttributes ); // map\n\t *\n\t * @protected\n\t * @param {String} name Node name.\n\t * @param {Object|Iterable} [attrs] Collection of attributes.\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n\t * A list of nodes to be inserted into created element.\n\t */\n\tconstructor( name, attrs, children ) {\n\t\tsuper();\n\n\t\t/**\n\t\t * Name of the element.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.name = name;\n\n\t\t/**\n\t\t * Map of attributes, where attributes names are keys and attributes values are values.\n\t\t *\n\t\t * @protected\n\t\t * @member {Map} #_attrs\n\t\t */\n\t\tthis._attrs = parseAttributes( attrs );\n\n\t\t/**\n\t\t * Array of child nodes.\n\t\t *\n\t\t * @protected\n\t\t * @member {Array.<module:engine/view/node~Node>}\n\t\t */\n\t\tthis._children = [];\n\n\t\tif ( children ) {\n\t\t\tthis._insertChild( 0, children );\n\t\t}\n\n\t\t/**\n\t\t * Set of classes associated with element instance.\n\t\t *\n\t\t * @protected\n\t\t * @member {Set}\n\t\t */\n\t\tthis._classes = new Set();\n\n\t\tif ( this._attrs.has( 'class' ) ) {\n\t\t\t// Remove class attribute and handle it by class set.\n\t\t\tconst classString = this._attrs.get( 'class' );\n\t\t\tparseClasses( this._classes, classString );\n\t\t\tthis._attrs.delete( 'class' );\n\t\t}\n\n\t\t/**\n\t\t * Normalized styles.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:engine/view/stylesmap~StylesMap} module:engine/view/element~Element#_styles\n\t\t */\n\t\tthis._styles = new StylesMap();\n\n\t\tif ( this._attrs.has( 'style' ) ) {\n\t\t\t// Remove style attribute and handle it by styles map.\n\t\t\tthis._styles.setTo( this._attrs.get( 'style' ) );\n\n\t\t\tthis._attrs.delete( 'style' );\n\t\t}\n\n\t\t/**\n\t\t * Map of custom properties.\n\t\t * Custom properties can be added to element instance, will be cloned but not rendered into DOM.\n\t\t *\n\t\t * @protected\n\t\t * @member {Map}\n\t\t */\n\t\tthis._customProperties = new Map();\n\t}\n\n\t/**\n\t * Number of element's children.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget childCount() {\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Is `true` if there are no nodes inside this element, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isEmpty() {\n\t\treturn this._children.length === 0;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\telement.is( 'element' ); // -> true\n\t *\t\telement.is( 'node' ); // -> true\n\t *\t\telement.is( 'view:element' ); // -> true\n\t *\t\telement.is( 'view:node' ); // -> true\n\t *\n\t *\t\telement.is( 'model:element' ); // -> false\n\t *\t\telement.is( 'documentSelection' ); // -> false\n\t *\n\t * Assuming that the object being checked is an element, you can also check its\n\t * {@link module:engine/view/element~Element#name name}:\n\t *\n\t *\t\telement.is( 'img' ); // -> true if this is an <img> element\n\t *\t\telement.is( 'element', 'img' ); // -> same as above\n\t *\t\ttext.is( 'img' ); -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type Type to check when `name` parameter is present.\n\t * Otherwise, it acts like the `name` parameter.\n\t * @param {String} [name] Element name.\n\t * @returns {Boolean}\n\t */\n\tis( type, name = null ) {\n\t\tconst cutType = type.replace( /^view:/, '' );\n\t\tif ( !name ) {\n\t\t\treturn cutType == 'element' || cutType == this.name || super.is( type );\n\t\t} else {\n\t\t\treturn cutType == 'element' && name == this.name;\n\t\t}\n\t}\n\n\t/**\n\t * Gets child at the given index.\n\t *\n\t * @param {Number} index Index of child.\n\t * @returns {module:engine/view/node~Node} Child node.\n\t */\n\tgetChild( index ) {\n\t\treturn this._children[ index ];\n\t}\n\n\t/**\n\t * Gets index of the given child node. Returns `-1` if child node is not found.\n\t *\n\t * @param {module:engine/view/node~Node} node Child node.\n\t * @returns {Number} Index of the child node.\n\t */\n\tgetChildIndex( node ) {\n\t\treturn this._children.indexOf( node );\n\t}\n\n\t/**\n\t * Gets child nodes iterator.\n\t *\n\t * @returns {Iterable.<module:engine/view/node~Node>} Child nodes iterator.\n\t */\n\tgetChildren() {\n\t\treturn this._children[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Returns an iterator that contains the keys for attributes. Order of inserting attributes is not preserved.\n\t *\n\t * @returns {Iterable.<String>} Keys for attributes.\n\t */\n\t* getAttributeKeys() {\n\t\tif ( this._classes.size > 0 ) {\n\t\t\tyield 'class';\n\t\t}\n\n\t\tif ( !this._styles.isEmpty ) {\n\t\t\tyield 'style';\n\t\t}\n\n\t\tyield* this._attrs.keys();\n\t}\n\n\t/**\n\t * Returns iterator that iterates over this element's attributes.\n\t *\n\t * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\n\t * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n\t *\n\t * @returns {Iterable.<*>}\n\t */\n\t* getAttributes() {\n\t\tyield* this._attrs.entries();\n\n\t\tif ( this._classes.size > 0 ) {\n\t\t\tyield [ 'class', this.getAttribute( 'class' ) ];\n\t\t}\n\n\t\tif ( !this._styles.isEmpty ) {\n\t\t\tyield [ 'style', this.getAttribute( 'style' ) ];\n\t\t}\n\t}\n\n\t/**\n\t * Gets attribute by key. If attribute is not present - returns undefined.\n\t *\n\t * @param {String} key Attribute key.\n\t * @returns {String|undefined} Attribute value.\n\t */\n\tgetAttribute( key ) {\n\t\tif ( key == 'class' ) {\n\t\t\tif ( this._classes.size > 0 ) {\n\t\t\t\treturn [ ...this._classes ].join( ' ' );\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif ( key == 'style' ) {\n\t\t\tconst inlineStyle = this._styles.toString();\n\n\t\t\treturn inlineStyle == '' ? undefined : inlineStyle;\n\t\t}\n\n\t\treturn this._attrs.get( key );\n\t}\n\n\t/**\n\t * Returns a boolean indicating whether an attribute with the specified key exists in the element.\n\t *\n\t * @param {String} key Attribute key.\n\t * @returns {Boolean} `true` if attribute with the specified key exists in the element, false otherwise.\n\t */\n\thasAttribute( key ) {\n\t\tif ( key == 'class' ) {\n\t\t\treturn this._classes.size > 0;\n\t\t}\n\n\t\tif ( key == 'style' ) {\n\t\t\treturn !this._styles.isEmpty;\n\t\t}\n\n\t\treturn this._attrs.has( key );\n\t}\n\n\t/**\n\t * Checks if this element is similar to other element.\n\t * Both elements should have the same name and attributes to be considered as similar. Two similar elements\n\t * can contain different set of children nodes.\n\t *\n\t * @param {module:engine/view/element~Element} otherElement\n\t * @returns {Boolean}\n\t */\n\tisSimilar( otherElement ) {\n\t\tif ( !( otherElement instanceof Element ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If exactly the same Element is provided - return true immediately.\n\t\tif ( this === otherElement ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Check element name.\n\t\tif ( this.name != otherElement.name ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check number of attributes, classes and styles.\n\t\tif ( this._attrs.size !== otherElement._attrs.size || this._classes.size !== otherElement._classes.size ||\n\t\t\tthis._styles.size !== otherElement._styles.size ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if attributes are the same.\n\t\tfor ( const [ key, value ] of this._attrs ) {\n\t\t\tif ( !otherElement._attrs.has( key ) || otherElement._attrs.get( key ) !== value ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Check if classes are the same.\n\t\tfor ( const className of this._classes ) {\n\t\t\tif ( !otherElement._classes.has( className ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Check if styles are the same.\n\t\tfor ( const property of this._styles.getStyleNames() ) {\n\t\t\tif (\n\t\t\t\t!otherElement._styles.has( property ) ||\n\t\t\t\totherElement._styles.getAsString( property ) !== this._styles.getAsString( property )\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns true if class is present.\n\t * If more then one class is provided - returns true only when all classes are present.\n\t *\n\t *\t\telement.hasClass( 'foo' ); // Returns true if 'foo' class is present.\n\t *\t\telement.hasClass( 'foo', 'bar' ); // Returns true if 'foo' and 'bar' classes are both present.\n\t *\n\t * @param {...String} className\n\t */\n\thasClass( ...className ) {\n\t\tfor ( const name of className ) {\n\t\t\tif ( !this._classes.has( name ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns iterator that contains all class names.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\tgetClassNames() {\n\t\treturn this._classes.keys();\n\t}\n\n\t/**\n\t * Returns style value for the given property mae.\n\t * If the style does not exist `undefined` is returned.\n\t *\n\t * **Note**: This method can work with normalized style names if\n\t * {@link module:engine/view/document~Document#addStyleProcessorRules a particular style processor rule is enabled}.\n\t * See {@link module:engine/view/stylesmap~StylesMap#getAsString `StylesMap#getAsString()`} for details.\n\t *\n\t * For an element with style set to `'margin:1px'`:\n\t *\n\t *\t\t// Enable 'margin' shorthand processing:\n\t *\t\teditor.editing.view.document.addStyleProcessorRules( addMarginRules );\n\t *\n\t *\t\tconst element = view.change( writer => {\n\t *\t\t\tconst element = writer.createElement();\n\t *\t\t\twriter.setStyle( 'margin', '1px' );\n\t *\t\t\twriter.setStyle( 'margin-bottom', '3em' );\n\t *\n\t *\t\t\treturn element;\n\t *\t\t} );\n\t *\n\t *\t\telement.getStyle( 'margin' ); // -> 'margin: 1px 1px 3em;'\n\t *\n\t * @param {String} property\n\t * @returns {String|undefined}\n\t */\n\tgetStyle( property ) {\n\t\treturn this._styles.getAsString( property );\n\t}\n\n\t/**\n\t * Returns a normalized style object or single style value.\n\t *\n\t * For an element with style set to: margin:1px 2px 3em;\n\t *\n\t *\t\telement.getNormalizedStyle( 'margin' ) );\n\t *\n\t * will return:\n\t *\n\t *\t\t{\n\t *\t\t\ttop: '1px',\n\t *\t\t\tright: '2px',\n\t *\t\t\tbottom: '3em',\n\t *\t\t\tleft: '2px'    // a normalized value from margin shorthand\n\t *\t\t}\n\t *\n\t * and reading for single style value:\n\t *\n\t *\t\tstyles.getNormalizedStyle( 'margin-left' );\n\t *\n\t * Will return a `2px` string.\n\t *\n\t * **Note**: This method will return normalized values only if\n\t * {@link module:engine/view/document~Document#addStyleProcessorRules a particular style processor rule is enabled}.\n\t * See {@link module:engine/view/stylesmap~StylesMap#getNormalized `StylesMap#getNormalized()`} for details.\n\t *\n\t *\n\t * @param {String} property Name of CSS property\n\t * @returns {Object|String|undefined}\n\t */\n\tgetNormalizedStyle( property ) {\n\t\treturn this._styles.getNormalized( property );\n\t}\n\n\t/**\n\t * Returns iterator that contains all style names.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\tgetStyleNames() {\n\t\treturn this._styles.getStyleNames();\n\t}\n\n\t/**\n\t * Returns true if style keys are present.\n\t * If more then one style property is provided - returns true only when all properties are present.\n\t *\n\t *\t\telement.hasStyle( 'color' ); // Returns true if 'border-top' style is present.\n\t *\t\telement.hasStyle( 'color', 'border-top' ); // Returns true if 'color' and 'border-top' styles are both present.\n\t *\n\t * @param {...String} property\n\t */\n\thasStyle( ...property ) {\n\t\tfor ( const name of property ) {\n\t\t\tif ( !this._styles.has( name ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns ancestor element that match specified pattern.\n\t * Provided patterns should be compatible with {@link module:engine/view/matcher~Matcher Matcher} as it is used internally.\n\t *\n\t * @see module:engine/view/matcher~Matcher\n\t * @param {Object|String|RegExp|Function} patterns Patterns used to match correct ancestor.\n\t * See {@link module:engine/view/matcher~Matcher}.\n\t * @returns {module:engine/view/element~Element|null} Found element or `null` if no matching ancestor was found.\n\t */\n\tfindAncestor( ...patterns ) {\n\t\tconst matcher = new Matcher( ...patterns );\n\t\tlet parent = this.parent;\n\n\t\twhile ( parent ) {\n\t\t\tif ( matcher.match( parent ) ) {\n\t\t\t\treturn parent;\n\t\t\t}\n\n\t\t\tparent = parent.parent;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the custom property value for the given key.\n\t *\n\t * @param {String|Symbol} key\n\t * @returns {*}\n\t */\n\tgetCustomProperty( key ) {\n\t\treturn this._customProperties.get( key );\n\t}\n\n\t/**\n\t * Returns an iterator which iterates over this element's custom properties.\n\t * Iterator provides `[ key, value ]` pairs for each stored property.\n\t *\n\t * @returns {Iterable.<*>}\n\t */\n\t* getCustomProperties() {\n\t\tyield* this._customProperties.entries();\n\t}\n\n\t/**\n\t * Returns identity string based on element's name, styles, classes and other attributes.\n\t * Two elements that {@link #isSimilar are similar} will have same identity string.\n\t * It has the following format:\n\t *\n\t *\t\t'name class=\"class1,class2\" style=\"style1:value1;style2:value2\" attr1=\"val1\" attr2=\"val2\"'\n \t *\n\t * For example:\n\t *\n\t *\t\tconst element = writer.createContainerElement( 'foo', {\n\t *\t\t\tbanana: '10',\n\t *\t\t\tapple: '20',\n\t *\t\t\tstyle: 'color: red; border-color: white;',\n\t *\t\t\tclass: 'baz'\n\t *\t\t} );\n\t *\n\t *\t\t// returns 'foo class=\"baz\" style=\"border-color:white;color:red\" apple=\"20\" banana=\"10\"'\n\t *\t\telement.getIdentity();\n\t *\n\t * **Note**: Classes, styles and other attributes are sorted alphabetically.\n\t *\n\t * @returns {String}\n\t */\n\tgetIdentity() {\n\t\tconst classes = Array.from( this._classes ).sort().join( ',' );\n\t\tconst styles = this._styles.toString();\n\t\tconst attributes = Array.from( this._attrs ).map( i => `${ i[ 0 ] }=\"${ i[ 1 ] }\"` ).sort().join( ' ' );\n\n\t\treturn this.name +\n\t\t\t( classes == '' ? '' : ` class=\"${ classes }\"` ) +\n\t\t\t( !styles ? '' : ` style=\"${ styles }\"` ) +\n\t\t\t( attributes == '' ? '' : ` ${ attributes }` );\n\t}\n\n\t/**\n\t * Clones provided element.\n\t *\n\t * @protected\n\t * @param {Boolean} [deep=false] If set to `true` clones element and all its children recursively. When set to `false`,\n\t * element will be cloned without any children.\n\t * @returns {module:engine/view/element~Element} Clone of this element.\n\t */\n\t_clone( deep = false ) {\n\t\tconst childrenClone = [];\n\n\t\tif ( deep ) {\n\t\t\tfor ( const child of this.getChildren() ) {\n\t\t\t\tchildrenClone.push( child._clone( deep ) );\n\t\t\t}\n\t\t}\n\n\t\t// ContainerElement and AttributeElement should be also cloned properly.\n\t\tconst cloned = new this.constructor( this.name, this._attrs, childrenClone );\n\n\t\t// Classes and styles are cloned separately - this solution is faster than adding them back to attributes and\n\t\t// parse once again in constructor.\n\t\tcloned._classes = new Set( this._classes );\n\t\tcloned._styles.set( this._styles.getNormalized() );\n\n\t\t// Clone custom properties.\n\t\tcloned._customProperties = new Map( this._customProperties );\n\n\t\t// Clone filler offset method.\n\t\t// We can't define this method in a prototype because it's behavior which\n\t\t// is changed by e.g. toWidget() function from ckeditor5-widget. Perhaps this should be one of custom props.\n\t\tcloned.getFillerOffset = this.getFillerOffset;\n\n\t\treturn cloned;\n\t}\n\n\t/**\n\t * {@link module:engine/view/element~Element#_insertChild Insert} a child node or a list of child nodes at the end of this node\n\t * and sets the parent of these nodes to this element.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#insert\n\t * @protected\n\t * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n\t * @fires module:engine/view/node~Node#change\n\t * @returns {Number} Number of appended nodes.\n\t */\n\t_appendChild( items ) {\n\t\treturn this._insertChild( this.childCount, items );\n\t}\n\n\t/**\n\t * Inserts a child node or a list of child nodes on the given index and sets the parent of these nodes to\n\t * this element.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#insert\n\t * @protected\n\t * @param {Number} index Position where nodes should be inserted.\n\t * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n\t * @fires module:engine/view/node~Node#change\n\t * @returns {Number} Number of inserted nodes.\n\t */\n\t_insertChild( index, items ) {\n\t\tthis._fireChange( 'children', this );\n\t\tlet count = 0;\n\n\t\tconst nodes = normalize( items );\n\n\t\tfor ( const node of nodes ) {\n\t\t\t// If node that is being added to this element is already inside another element, first remove it from the old parent.\n\t\t\tif ( node.parent !== null ) {\n\t\t\t\tnode._remove();\n\t\t\t}\n\n\t\t\tnode.parent = this;\n\n\t\t\tthis._children.splice( index, 0, node );\n\t\t\tindex++;\n\t\t\tcount++;\n\t\t}\n\n\t\treturn count;\n\t}\n\n\t/**\n\t * Removes number of child nodes starting at the given index and set the parent of these nodes to `null`.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#remove\n\t * @protected\n\t * @param {Number} index Number of the first node to remove.\n\t * @param {Number} [howMany=1] Number of nodes to remove.\n\t * @fires module:engine/view/node~Node#change\n\t * @returns {Array.<module:engine/view/node~Node>} The array of removed nodes.\n\t */\n\t_removeChildren( index, howMany = 1 ) {\n\t\tthis._fireChange( 'children', this );\n\n\t\tfor ( let i = index; i < index + howMany; i++ ) {\n\t\t\tthis._children[ i ].parent = null;\n\t\t}\n\n\t\treturn this._children.splice( index, howMany );\n\t}\n\n\t/**\n\t * Adds or overwrite attribute with a specified key and value.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#setAttribute\n\t * @protected\n\t * @param {String} key Attribute key.\n\t * @param {String} value Attribute value.\n\t * @fires module:engine/view/node~Node#change\n\t */\n\t_setAttribute( key, value ) {\n\t\tvalue = String( value );\n\n\t\tthis._fireChange( 'attributes', this );\n\n\t\tif ( key == 'class' ) {\n\t\t\tparseClasses( this._classes, value );\n\t\t} else if ( key == 'style' ) {\n\t\t\tthis._styles.setTo( value );\n\t\t} else {\n\t\t\tthis._attrs.set( key, value );\n\t\t}\n\t}\n\n\t/**\n\t * Removes attribute from the element.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#removeAttribute\n\t * @protected\n\t * @param {String} key Attribute key.\n\t * @returns {Boolean} Returns true if an attribute existed and has been removed.\n\t * @fires module:engine/view/node~Node#change\n\t */\n\t_removeAttribute( key ) {\n\t\tthis._fireChange( 'attributes', this );\n\n\t\t// Remove class attribute.\n\t\tif ( key == 'class' ) {\n\t\t\tif ( this._classes.size > 0 ) {\n\t\t\t\tthis._classes.clear();\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t// Remove style attribute.\n\t\tif ( key == 'style' ) {\n\t\t\tif ( !this._styles.isEmpty ) {\n\t\t\t\tthis._styles.clear();\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t// Remove other attributes.\n\t\treturn this._attrs.delete( key );\n\t}\n\n\t/**\n\t * Adds specified class.\n\t *\n\t *\t\telement._addClass( 'foo' ); // Adds 'foo' class.\n\t *\t\telement._addClass( [ 'foo', 'bar' ] ); // Adds 'foo' and 'bar' classes.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#addClass\n\t * @protected\n\t * @param {Array.<String>|String} className\n\t * @fires module:engine/view/node~Node#change\n\t */\n\t_addClass( className ) {\n\t\tthis._fireChange( 'attributes', this );\n\n\t\tclassName = Array.isArray( className ) ? className : [ className ];\n\t\tclassName.forEach( name => this._classes.add( name ) );\n\t}\n\n\t/**\n\t * Removes specified class.\n\t *\n\t *\t\telement._removeClass( 'foo' );  // Removes 'foo' class.\n\t *\t\telement._removeClass( [ 'foo', 'bar' ] ); // Removes both 'foo' and 'bar' classes.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#removeClass\n\t * @protected\n\t * @param {Array.<String>|String} className\n\t * @fires module:engine/view/node~Node#change\n\t */\n\t_removeClass( className ) {\n\t\tthis._fireChange( 'attributes', this );\n\n\t\tclassName = Array.isArray( className ) ? className : [ className ];\n\t\tclassName.forEach( name => this._classes.delete( name ) );\n\t}\n\n\t/**\n\t * Adds style to the element.\n\t *\n\t *\t\telement._setStyle( 'color', 'red' );\n\t *\t\telement._setStyle( {\n\t *\t\t\tcolor: 'red',\n\t *\t\t\tposition: 'fixed'\n\t *\t\t} );\n\t *\n\t * **Note**: This method can work with normalized style names if\n\t * {@link module:engine/view/document~Document#addStyleProcessorRules a particular style processor rule is enabled}.\n\t * See {@link module:engine/view/stylesmap~StylesMap#set `StylesMap#set()`} for details.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#setStyle\n\t * @protected\n\t * @param {String|Object} property Property name or object with key - value pairs.\n\t * @param {String} [value] Value to set. This parameter is ignored if object is provided as the first parameter.\n\t * @fires module:engine/view/node~Node#change\n\t */\n\t_setStyle( property, value ) {\n\t\tthis._fireChange( 'attributes', this );\n\n\t\tthis._styles.set( property, value );\n\t}\n\n\t/**\n\t * Removes specified style.\n\t *\n\t *\t\telement._removeStyle( 'color' );  // Removes 'color' style.\n\t *\t\telement._removeStyle( [ 'color', 'border-top' ] ); // Removes both 'color' and 'border-top' styles.\n\t *\n\t * **Note**: This method can work with normalized style names if\n\t * {@link module:engine/view/document~Document#addStyleProcessorRules a particular style processor rule is enabled}.\n\t * See {@link module:engine/view/stylesmap~StylesMap#remove `StylesMap#remove()`} for details.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#removeStyle\n\t * @protected\n\t * @param {Array.<String>|String} property\n\t * @fires module:engine/view/node~Node#change\n\t */\n\t_removeStyle( property ) {\n\t\tthis._fireChange( 'attributes', this );\n\n\t\tproperty = Array.isArray( property ) ? property : [ property ];\n\t\tproperty.forEach( name => this._styles.remove( name ) );\n\t}\n\n\t/**\n\t * Sets a custom property. Unlike attributes, custom properties are not rendered to the DOM,\n\t * so they can be used to add special data to elements.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#setCustomProperty\n\t * @protected\n\t * @param {String|Symbol} key\n\t * @param {*} value\n\t */\n\t_setCustomProperty( key, value ) {\n\t\tthis._customProperties.set( key, value );\n\t}\n\n\t/**\n\t * Removes the custom property stored under the given key.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#removeCustomProperty\n\t * @protected\n\t * @param {String|Symbol} key\n\t * @returns {Boolean} Returns true if property was removed.\n\t */\n\t_removeCustomProperty( key ) {\n\t\treturn this._customProperties.delete( key );\n\t}\n\n\t/**\n\t * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n\t *\n\t * @abstract\n\t * @method module:engine/view/element~Element#getFillerOffset\n\t */\n\n\t// @if CK_DEBUG_ENGINE // printTree( level = 0) {\n\t// @if CK_DEBUG_ENGINE // \tlet string = '';\n\n\t// @if CK_DEBUG_ENGINE //\tstring += '\\t'.repeat( level ) + `<${ this.name }${ convertMapToTags( this.getAttributes() ) }>`;\n\n\t// @if CK_DEBUG_ENGINE //\tfor ( const child of this.getChildren() ) {\n\t// @if CK_DEBUG_ENGINE //\t\tif ( child.is( 'text' ) ) {\n\t// @if CK_DEBUG_ENGINE //\t\t\tstring += '\\n' + '\\t'.repeat( level + 1 ) + child.data;\n\t// @if CK_DEBUG_ENGINE //\t\t} else {\n\t// @if CK_DEBUG_ENGINE //\t\t\tstring += '\\n' + child.printTree( level + 1 );\n\t// @if CK_DEBUG_ENGINE //\t\t}\n\t// @if CK_DEBUG_ENGINE //\t}\n\n\t// @if CK_DEBUG_ENGINE //\tif ( this.childCount ) {\n\t// @if CK_DEBUG_ENGINE //\t\tstring += '\\n' + '\\t'.repeat( level );\n\t// @if CK_DEBUG_ENGINE //\t}\n\n\t// @if CK_DEBUG_ENGINE //\tstring += `</${ this.name }>`;\n\n\t// @if CK_DEBUG_ENGINE //\treturn string;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logTree() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( this.printTree() );\n\t// @if CK_DEBUG_ENGINE // }\n}\n\n// Parses attributes provided to the element constructor before they are applied to an element. If attributes are passed\n// as an object (instead of `Iterable`), the object is transformed to the map. Attributes with `null` value are removed.\n// Attributes with non-`String` value are converted to `String`.\n//\n// @param {Object|Iterable} attrs Attributes to parse.\n// @returns {Map} Parsed attributes.\nfunction parseAttributes( attrs ) {\n\tattrs = toMap( attrs );\n\n\tfor ( const [ key, value ] of attrs ) {\n\t\tif ( value === null ) {\n\t\t\tattrs.delete( key );\n\t\t} else if ( typeof value != 'string' ) {\n\t\t\tattrs.set( key, String( value ) );\n\t\t}\n\t}\n\n\treturn attrs;\n}\n\n// Parses class attribute and puts all classes into classes set.\n// Classes set s cleared before insertion.\n//\n// @param {Set.<String>} classesSet Set to insert parsed classes.\n// @param {String} classesString String with classes to parse.\nfunction parseClasses( classesSet, classesString ) {\n\tconst classArray = classesString.split( /\\s+/ );\n\tclassesSet.clear();\n\tclassArray.forEach( name => classesSet.add( name ) );\n}\n\n// Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/view/item~Item|Iterable.<String|module:engine/view/item~Item>}\n// @returns {Iterable.<module:engine/view/node~Node>}\nfunction normalize( nodes ) {\n\t// Separate condition because string is iterable.\n\tif ( typeof nodes == 'string' ) {\n\t\treturn [ new Text( nodes ) ];\n\t}\n\n\tif ( !isIterable( nodes ) ) {\n\t\tnodes = [ nodes ];\n\t}\n\n\t// Array.from to enable .map() on non-arrays.\n\treturn Array.from( nodes )\n\t\t.map( node => {\n\t\t\tif ( typeof node == 'string' ) {\n\t\t\t\treturn new Text( node );\n\t\t\t}\n\n\t\t\tif ( node instanceof TextProxy ) {\n\t\t\t\treturn new Text( node.data );\n\t\t\t}\n\n\t\t\treturn node;\n\t\t} );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/containerelement\n */\n\nimport Element from './element';\n\n/**\n * Containers are elements which define document structure. They define boundaries for\n * {@link module:engine/view/attributeelement~AttributeElement attributes}. They are mostly used for block elements like `<p>` or `<div>`.\n *\n * Editing engine does not define a fixed HTML DTD. This is why a feature developer needs to choose between various\n * types (container element, {@link module:engine/view/attributeelement~AttributeElement attribute element},\n * {@link module:engine/view/emptyelement~EmptyElement empty element}, etc) when developing a feature.\n *\n * The container element should be your default choice when writing a converter, unless:\n *\n * * this element represents a model text attribute (then use {@link module:engine/view/attributeelement~AttributeElement}),\n * * this is an empty element like `<img>` (then use {@link module:engine/view/emptyelement~EmptyElement}),\n * * this is a root element,\n * * this is a nested editable element (then use  {@link module:engine/view/editableelement~EditableElement}).\n *\n * To create a new container element instance use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createContainerElement `DowncastWriter#createContainerElement()`}\n * method.\n *\n * @extends module:engine/view/element~Element\n */\nexport default class ContainerElement extends Element {\n\t/**\n\t * Creates a container element.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#createContainerElement\n\t * @see module:engine/view/element~Element\n\t * @protected\n\t */\n\tconstructor( name, attrs, children ) {\n\t\tsuper( name, attrs, children );\n\n\t\t/**\n\t\t * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n\t\t *\n\t\t * @method #getFillerOffset\n\t\t * @returns {Number|null} Block filler offset or `null` if block filler is not needed.\n\t\t */\n\t\tthis.getFillerOffset = getFillerOffset;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\tcontainerElement.is( 'containerElement' ); // -> true\n\t *\t\tcontainerElement.is( 'element' ); // -> true\n\t *\t\tcontainerElement.is( 'node' ); // -> true\n\t *\t\tcontainerElement.is( 'view:containerElement' ); // -> true\n\t *\t\tcontainerElement.is( 'view:element' ); // -> true\n\t *\t\tcontainerElement.is( 'view:node' ); // -> true\n\t *\n\t *\t\tcontainerElement.is( 'model:element' ); // -> false\n\t *\t\tcontainerElement.is( 'documentFragment' ); // -> false\n\t *\n\t * Assuming that the object being checked is a container element, you can also check its\n\t * {@link module:engine/view/containerelement~ContainerElement#name name}:\n\t *\n\t *\t\tcontainerElement.is( 'div' ); // -> true if this is a div container element\n\t *\t\tcontainerElement.is( 'contaienrElement', 'div' ); // -> same as above\n\t *\t\ttext.is( 'div' ); -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type Type to check when `name` parameter is present.\n\t * Otherwise, it acts like the `name` parameter.\n\t * @param {String} [name] Element name.\n\t * @returns {Boolean}\n\t */\n\tis( type, name = null ) {\n\t\tconst cutType = type && type.replace( /^view:/, '' );\n\t\tif ( !name ) {\n\t\t\treturn cutType == 'containerElement' || super.is( type );\n\t\t} else {\n\t\t\treturn ( cutType == 'containerElement' && name == this.name ) || super.is( type, name );\n\t\t}\n\t}\n}\n\n/**\n * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n *\n * @returns {Number|null} Block filler offset or `null` if block filler is not needed.\n */\nexport function getFillerOffset() {\n\tconst children = [ ...this.getChildren() ];\n\tconst lastChild = children[ this.childCount - 1 ];\n\n\t// Block filler is required after a `<br>` if it's the last element in its container. See #1422.\n\tif ( lastChild && lastChild.is( 'element', 'br' ) ) {\n\t\treturn this.childCount;\n\t}\n\n\tfor ( const child of children ) {\n\t\t// If there's any non-UI element – don't render the bogus.\n\t\tif ( !child.is( 'uiElement' ) ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// If there are only UI elements – render the bogus at the end of the element.\n\treturn this.childCount;\n}\n","import copyObject from './_copyObject.js';\nimport createAssigner from './_createAssigner.js';\nimport keysIn from './keysIn.js';\n\n/**\n * This method is like `_.assign` except that it iterates over own and\n * inherited source properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extend\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assign\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n */\nvar assignIn = createAssigner(function(object, source) {\n  copyObject(source, keysIn(source), object);\n});\n\nexport default assignIn;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/observablemixin\n */\n\nimport EmitterMixin from './emittermixin';\nimport CKEditorError from './ckeditorerror';\nimport { extend, isObject } from 'lodash-es';\n\nconst observablePropertiesSymbol = Symbol( 'observableProperties' );\nconst boundObservablesSymbol = Symbol( 'boundObservables' );\nconst boundPropertiesSymbol = Symbol( 'boundProperties' );\n\n/**\n * Mixin that injects the \"observable properties\" and data binding functionality described in the\n * {@link ~Observable} interface.\n *\n * Read more about the concept of observables in the:\n * * {@glink framework/guides/architecture/core-editor-architecture#event-system-and-observables \"Event system and observables\"}\n * section of the {@glink framework/guides/architecture/core-editor-architecture \"Core editor architecture\"} guide,\n * * {@glink framework/guides/deep-dive/observables \"Observables\" deep dive} guide.\n *\n * @mixin ObservableMixin\n * @mixes module:utils/emittermixin~EmitterMixin\n * @implements module:utils/observablemixin~Observable\n */\nconst ObservableMixin = {\n\t/**\n\t * @inheritDoc\n\t */\n\tset( name, value ) {\n\t\t// If the first parameter is an Object, iterate over its properties.\n\t\tif ( isObject( name ) ) {\n\t\t\tObject.keys( name ).forEach( property => {\n\t\t\t\tthis.set( property, name[ property ] );\n\t\t\t}, this );\n\n\t\t\treturn;\n\t\t}\n\n\t\tinitObservable( this );\n\n\t\tconst properties = this[ observablePropertiesSymbol ];\n\n\t\tif ( ( name in this ) && !properties.has( name ) ) {\n\t\t\t/**\n\t\t\t * Cannot override an existing property.\n\t\t\t *\n\t\t\t * This error is thrown when trying to {@link ~Observable#set set} an property with\n\t\t\t * a name of an already existing property. For example:\n\t\t\t *\n\t\t\t *\t\tlet observable = new Model();\n\t\t\t *\t\tobservable.property = 1;\n\t\t\t *\t\tobservable.set( 'property', 2 );\t\t\t// throws\n\t\t\t *\n\t\t\t *\t\tobservable.set( 'property', 1 );\n\t\t\t *\t\tobservable.set( 'property', 2 );\t\t\t// ok, because this is an existing property.\n\t\t\t *\n\t\t\t * @error observable-set-cannot-override\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'observable-set-cannot-override: Cannot override an existing property.', this );\n\t\t}\n\n\t\tObject.defineProperty( this, name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\n\t\t\tget() {\n\t\t\t\treturn properties.get( name );\n\t\t\t},\n\n\t\t\tset( value ) {\n\t\t\t\tconst oldValue = properties.get( name );\n\n\t\t\t\t// Fire `set` event before the new value will be set to make it possible\n\t\t\t\t// to override observable property without affecting `change` event.\n\t\t\t\t// See https://github.com/ckeditor/ckeditor5-utils/issues/171.\n\t\t\t\tlet newValue = this.fire( 'set:' + name, name, value, oldValue );\n\n\t\t\t\tif ( newValue === undefined ) {\n\t\t\t\t\tnewValue = value;\n\t\t\t\t}\n\n\t\t\t\t// Allow undefined as an initial value like A.define( 'x', undefined ) (#132).\n\t\t\t\t// Note: When properties map has no such own property, then its value is undefined.\n\t\t\t\tif ( oldValue !== newValue || !properties.has( name ) ) {\n\t\t\t\t\tproperties.set( name, newValue );\n\t\t\t\t\tthis.fire( 'change:' + name, name, newValue, oldValue );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\tthis[ name ] = value;\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\tbind( ...bindProperties ) {\n\t\tif ( !bindProperties.length || !isStringArray( bindProperties ) ) {\n\t\t\t/**\n\t\t\t * All properties must be strings.\n\t\t\t *\n\t\t\t * @error observable-bind-wrong-properties\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'observable-bind-wrong-properties: All properties must be strings.', this );\n\t\t}\n\n\t\tif ( ( new Set( bindProperties ) ).size !== bindProperties.length ) {\n\t\t\t/**\n\t\t\t * Properties must be unique.\n\t\t\t *\n\t\t\t * @error observable-bind-duplicate-properties\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'observable-bind-duplicate-properties: Properties must be unique.', this );\n\t\t}\n\n\t\tinitObservable( this );\n\n\t\tconst boundProperties = this[ boundPropertiesSymbol ];\n\n\t\tbindProperties.forEach( propertyName => {\n\t\t\tif ( boundProperties.has( propertyName ) ) {\n\t\t\t\t/**\n\t\t\t\t * Cannot bind the same property more than once.\n\t\t\t\t *\n\t\t\t\t * @error observable-bind-rebind\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'observable-bind-rebind: Cannot bind the same property more than once.', this );\n\t\t\t}\n\t\t} );\n\n\t\tconst bindings = new Map();\n\n\t\t// @typedef {Object} Binding\n\t\t// @property {Array} property Property which is bound.\n\t\t// @property {Array} to Array of observable–property components of the binding (`{ observable: ..., property: .. }`).\n\t\t// @property {Array} callback A function which processes `to` components.\n\t\tbindProperties.forEach( a => {\n\t\t\tconst binding = { property: a, to: [] };\n\n\t\t\tboundProperties.set( a, binding );\n\t\t\tbindings.set( a, binding );\n\t\t} );\n\n\t\t// @typedef {Object} BindChain\n\t\t// @property {Function} to See {@link ~ObservableMixin#_bindTo}.\n\t\t// @property {Function} toMany See {@link ~ObservableMixin#_bindToMany}.\n\t\t// @property {module:utils/observablemixin~Observable} _observable The observable which initializes the binding.\n\t\t// @property {Array} _bindProperties Array of `_observable` properties to be bound.\n\t\t// @property {Array} _to Array of `to()` observable–properties (`{ observable: toObservable, properties: ...toProperties }`).\n\t\t// @property {Map} _bindings Stores bindings to be kept in\n\t\t// {@link ~ObservableMixin#_boundProperties}/{@link ~ObservableMixin#_boundObservables}\n\t\t// initiated in this binding chain.\n\t\treturn {\n\t\t\tto: bindTo,\n\t\t\ttoMany: bindToMany,\n\n\t\t\t_observable: this,\n\t\t\t_bindProperties: bindProperties,\n\t\t\t_to: [],\n\t\t\t_bindings: bindings\n\t\t};\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\tunbind( ...unbindProperties ) {\n\t\t// Nothing to do here if not inited yet.\n\t\tif ( !( observablePropertiesSymbol in this ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst boundProperties = this[ boundPropertiesSymbol ];\n\t\tconst boundObservables = this[ boundObservablesSymbol ];\n\n\t\tif ( unbindProperties.length ) {\n\t\t\tif ( !isStringArray( unbindProperties ) ) {\n\t\t\t\t/**\n\t\t\t\t * Properties must be strings.\n\t\t\t\t *\n\t\t\t\t * @error observable-unbind-wrong-properties\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'observable-unbind-wrong-properties: Properties must be strings.', this );\n\t\t\t}\n\n\t\t\tunbindProperties.forEach( propertyName => {\n\t\t\t\tconst binding = boundProperties.get( propertyName );\n\n\t\t\t\t// Nothing to do if the binding is not defined\n\t\t\t\tif ( !binding ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet toObservable, toProperty, toProperties, toPropertyBindings;\n\n\t\t\t\tbinding.to.forEach( to => {\n\t\t\t\t\t// TODO: ES6 destructuring.\n\t\t\t\t\ttoObservable = to[ 0 ];\n\t\t\t\t\ttoProperty = to[ 1 ];\n\t\t\t\t\ttoProperties = boundObservables.get( toObservable );\n\t\t\t\t\ttoPropertyBindings = toProperties[ toProperty ];\n\n\t\t\t\t\ttoPropertyBindings.delete( binding );\n\n\t\t\t\t\tif ( !toPropertyBindings.size ) {\n\t\t\t\t\t\tdelete toProperties[ toProperty ];\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( !Object.keys( toProperties ).length ) {\n\t\t\t\t\t\tboundObservables.delete( toObservable );\n\t\t\t\t\t\tthis.stopListening( toObservable, 'change' );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tboundProperties.delete( propertyName );\n\t\t\t} );\n\t\t} else {\n\t\t\tboundObservables.forEach( ( bindings, boundObservable ) => {\n\t\t\t\tthis.stopListening( boundObservable, 'change' );\n\t\t\t} );\n\n\t\t\tboundObservables.clear();\n\t\t\tboundProperties.clear();\n\t\t}\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdecorate( methodName ) {\n\t\tconst originalMethod = this[ methodName ];\n\n\t\tif ( !originalMethod ) {\n\t\t\t/**\n\t\t\t * Cannot decorate an undefined method.\n\t\t\t *\n\t\t\t * @error observablemixin-cannot-decorate-undefined\n\t\t\t * @param {Object} object The object which method should be decorated.\n\t\t\t * @param {String} methodName Name of the method which does not exist.\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'observablemixin-cannot-decorate-undefined: Cannot decorate an undefined method.',\n\t\t\t\tthis,\n\t\t\t\t{ object: this, methodName }\n\t\t\t);\n\t\t}\n\n\t\tthis.on( methodName, ( evt, args ) => {\n\t\t\tevt.return = originalMethod.apply( this, args );\n\t\t} );\n\n\t\tthis[ methodName ] = function( ...args ) {\n\t\t\treturn this.fire( methodName, args );\n\t\t};\n\t}\n};\n\nextend( ObservableMixin, EmitterMixin );\n\nexport default ObservableMixin;\n\n// Init symbol properties needed to for the observable mechanism to work.\n//\n// @private\n// @param {module:utils/observablemixin~ObservableMixin} observable\nfunction initObservable( observable ) {\n\t// Do nothing if already inited.\n\tif ( observablePropertiesSymbol in observable ) {\n\t\treturn;\n\t}\n\n\t// The internal hash containing the observable's state.\n\t//\n\t// @private\n\t// @type {Map}\n\tObject.defineProperty( observable, observablePropertiesSymbol, {\n\t\tvalue: new Map()\n\t} );\n\n\t// Map containing bindings to external observables. It shares the binding objects\n\t// (`{ observable: A, property: 'a', to: ... }`) with {@link module:utils/observablemixin~ObservableMixin#_boundProperties} and\n\t// it is used to observe external observables to update own properties accordingly.\n\t// See {@link module:utils/observablemixin~ObservableMixin#bind}.\n\t//\n\t//\t\tA.bind( 'a', 'b', 'c' ).to( B, 'x', 'y', 'x' );\n\t//\t\tconsole.log( A._boundObservables );\n\t//\n\t//\t\t\tMap( {\n\t//\t\t\t\tB: {\n\t//\t\t\t\t\tx: Set( [\n\t//\t\t\t\t\t\t{ observable: A, property: 'a', to: [ [ B, 'x' ] ] },\n\t//\t\t\t\t\t\t{ observable: A, property: 'c', to: [ [ B, 'x' ] ] }\n\t//\t\t\t\t\t] ),\n\t//\t\t\t\t\ty: Set( [\n\t//\t\t\t\t\t\t{ observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n\t//\t\t\t\t\t] )\n\t//\t\t\t\t}\n\t//\t\t\t} )\n\t//\n\t//\t\tA.bind( 'd' ).to( B, 'z' ).to( C, 'w' ).as( callback );\n\t//\t\tconsole.log( A._boundObservables );\n\t//\n\t//\t\t\tMap( {\n\t//\t\t\t\tB: {\n\t//\t\t\t\t\tx: Set( [\n\t//\t\t\t\t\t\t{ observable: A, property: 'a', to: [ [ B, 'x' ] ] },\n\t//\t\t\t\t\t\t{ observable: A, property: 'c', to: [ [ B, 'x' ] ] }\n\t//\t\t\t\t\t] ),\n\t//\t\t\t\t\ty: Set( [\n\t//\t\t\t\t\t\t{ observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n\t//\t\t\t\t\t] ),\n\t//\t\t\t\t\tz: Set( [\n\t//\t\t\t\t\t\t{ observable: A, property: 'd', to: [ [ B, 'z' ], [ C, 'w' ] ], callback: callback }\n\t//\t\t\t\t\t] )\n\t//\t\t\t\t},\n\t//\t\t\t\tC: {\n\t//\t\t\t\t\tw: Set( [\n\t//\t\t\t\t\t\t{ observable: A, property: 'd', to: [ [ B, 'z' ], [ C, 'w' ] ], callback: callback }\n\t//\t\t\t\t\t] )\n\t//\t\t\t\t}\n\t//\t\t\t} )\n\t//\n\t// @private\n\t// @type {Map}\n\tObject.defineProperty( observable, boundObservablesSymbol, {\n\t\tvalue: new Map()\n\t} );\n\n\t// Object that stores which properties of this observable are bound and how. It shares\n\t// the binding objects (`{ observable: A, property: 'a', to: ... }`) with\n\t// {@link module:utils/observablemixin~ObservableMixin#_boundObservables}. This data structure is\n\t// a reverse of {@link module:utils/observablemixin~ObservableMixin#_boundObservables} and it is helpful for\n\t// {@link module:utils/observablemixin~ObservableMixin#unbind}.\n\t//\n\t// See {@link module:utils/observablemixin~ObservableMixin#bind}.\n\t//\n\t//\t\tA.bind( 'a', 'b', 'c' ).to( B, 'x', 'y', 'x' );\n\t//\t\tconsole.log( A._boundProperties );\n\t//\n\t//\t\t\tMap( {\n\t//\t\t\t\ta: { observable: A, property: 'a', to: [ [ B, 'x' ] ] },\n\t//\t\t\t\tb: { observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n\t//\t\t\t\tc: { observable: A, property: 'c', to: [ [ B, 'x' ] ] }\n\t//\t\t\t} )\n\t//\n\t//\t\tA.bind( 'd' ).to( B, 'z' ).to( C, 'w' ).as( callback );\n\t//\t\tconsole.log( A._boundProperties );\n\t//\n\t//\t\t\tMap( {\n\t//\t\t\t\ta: { observable: A, property: 'a', to: [ [ B, 'x' ] ] },\n\t//\t\t\t\tb: { observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n\t//\t\t\t\tc: { observable: A, property: 'c', to: [ [ B, 'x' ] ] },\n\t//\t\t\t\td: { observable: A, property: 'd', to: [ [ B, 'z' ], [ C, 'w' ] ], callback: callback }\n\t//\t\t\t} )\n\t//\n\t// @private\n\t// @type {Map}\n\tObject.defineProperty( observable, boundPropertiesSymbol, {\n\t\tvalue: new Map()\n\t} );\n}\n\n// A chaining for {@link module:utils/observablemixin~ObservableMixin#bind} providing `.to()` interface.\n//\n// @private\n// @param {...[Observable|String|Function]} args Arguments of the `.to( args )` binding.\nfunction bindTo( ...args ) {\n\tconst parsedArgs = parseBindToArgs( ...args );\n\tconst bindingsKeys = Array.from( this._bindings.keys() );\n\tconst numberOfBindings = bindingsKeys.length;\n\n\t// Eliminate A.bind( 'x' ).to( B, C )\n\tif ( !parsedArgs.callback && parsedArgs.to.length > 1 ) {\n\t\t/**\n\t\t * Binding multiple observables only possible with callback.\n\t\t *\n\t\t * @error observable-bind-no-callback\n\t\t */\n\t\tthrow new CKEditorError(\n\t\t\t'observable-bind-to-no-callback: Binding multiple observables only possible with callback.',\n\t\t\tthis\n\t\t);\n\t}\n\n\t// Eliminate A.bind( 'x', 'y' ).to( B, callback )\n\tif ( numberOfBindings > 1 && parsedArgs.callback ) {\n\t\t/**\n\t\t * Cannot bind multiple properties and use a callback in one binding.\n\t\t *\n\t\t * @error observable-bind-to-extra-callback\n\t\t */\n\t\tthrow new CKEditorError(\n\t\t\t'observable-bind-to-extra-callback: Cannot bind multiple properties and use a callback in one binding.',\n\t\t\tthis\n\t\t);\n\t}\n\n\tparsedArgs.to.forEach( to => {\n\t\t// Eliminate A.bind( 'x', 'y' ).to( B, 'a' )\n\t\tif ( to.properties.length && to.properties.length !== numberOfBindings ) {\n\t\t\t/**\n\t\t\t * The number of properties must match.\n\t\t\t *\n\t\t\t * @error observable-bind-to-properties-length\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'observable-bind-to-properties-length: The number of properties must match.', this );\n\t\t}\n\n\t\t// When no to.properties specified, observing source properties instead i.e.\n\t\t// A.bind( 'x', 'y' ).to( B ) -> Observe B.x and B.y\n\t\tif ( !to.properties.length ) {\n\t\t\tto.properties = this._bindProperties;\n\t\t}\n\t} );\n\n\tthis._to = parsedArgs.to;\n\n\t// Fill {@link BindChain#_bindings} with callback. When the callback is set there's only one binding.\n\tif ( parsedArgs.callback ) {\n\t\tthis._bindings.get( bindingsKeys[ 0 ] ).callback = parsedArgs.callback;\n\t}\n\n\tattachBindToListeners( this._observable, this._to );\n\n\t// Update observable._boundProperties and observable._boundObservables.\n\tupdateBindToBound( this );\n\n\t// Set initial values of bound properties.\n\tthis._bindProperties.forEach( propertyName => {\n\t\tupdateBoundObservableProperty( this._observable, propertyName );\n\t} );\n}\n\n// Binds to an attribute in a set of iterable observables.\n//\n// @private\n// @param {Array.<Observable>} observables\n// @param {String} attribute\n// @param {Function} callback\nfunction bindToMany( observables, attribute, callback ) {\n\tif ( this._bindings.size > 1 ) {\n\t\t/**\n\t\t * Binding one attribute to many observables only possible with one attribute.\n\t\t *\n\t\t * @error observable-bind-to-many-not-one-binding\n\t\t */\n\t\tthrow new CKEditorError( 'observable-bind-to-many-not-one-binding: Cannot bind multiple properties with toMany().', this );\n\t}\n\n\tthis.to(\n\t\t// Bind to #attribute of each observable...\n\t\t...getBindingTargets( observables, attribute ),\n\t\t// ...using given callback to parse attribute values.\n\t\tcallback\n\t);\n}\n\n// Returns an array of binding components for\n// {@link Observable#bind} from a set of iterable observables.\n//\n// @param {Array.<Observable>} observables\n// @param {String} attribute\n// @returns {Array.<String|Observable>}\nfunction getBindingTargets( observables, attribute ) {\n\tconst observableAndAttributePairs = observables.map( observable => [ observable, attribute ] );\n\n\t// Merge pairs to one-dimension array of observables and attributes.\n\treturn Array.prototype.concat.apply( [], observableAndAttributePairs );\n}\n\n// Check if all entries of the array are of `String` type.\n//\n// @private\n// @param {Array} arr An array to be checked.\n// @returns {Boolean}\nfunction isStringArray( arr ) {\n\treturn arr.every( a => typeof a == 'string' );\n}\n\n// Parses and validates {@link Observable#bind}`.to( args )` arguments and returns\n// an object with a parsed structure. For example\n//\n//\t\tA.bind( 'x' ).to( B, 'a', C, 'b', call );\n//\n// becomes\n//\n//\t\t{\n//\t\t\tto: [\n//\t\t\t\t{ observable: B, properties: [ 'a' ] },\n//\t\t\t\t{ observable: C, properties: [ 'b' ] },\n//\t\t\t],\n//\t\t\tcallback: call\n// \t\t}\n//\n// @private\n// @param {...*} args Arguments of {@link Observable#bind}`.to( args )`.\n// @returns {Object}\nfunction parseBindToArgs( ...args ) {\n\t// Eliminate A.bind( 'x' ).to()\n\tif ( !args.length ) {\n\t\t/**\n\t\t * Invalid argument syntax in `to()`.\n\t\t *\n\t\t * @error observable-bind-to-parse-error\n\t\t */\n\t\tthrow new CKEditorError( 'observable-bind-to-parse-error: Invalid argument syntax in `to()`.', null );\n\t}\n\n\tconst parsed = { to: [] };\n\tlet lastObservable;\n\n\tif ( typeof args[ args.length - 1 ] == 'function' ) {\n\t\tparsed.callback = args.pop();\n\t}\n\n\targs.forEach( a => {\n\t\tif ( typeof a == 'string' ) {\n\t\t\tlastObservable.properties.push( a );\n\t\t} else if ( typeof a == 'object' ) {\n\t\t\tlastObservable = { observable: a, properties: [] };\n\t\t\tparsed.to.push( lastObservable );\n\t\t} else {\n\t\t\tthrow new CKEditorError( 'observable-bind-to-parse-error: Invalid argument syntax in `to()`.', null );\n\t\t}\n\t} );\n\n\treturn parsed;\n}\n\n// Synchronizes {@link module:utils/observablemixin#_boundObservables} with {@link Binding}.\n//\n// @private\n// @param {Binding} binding A binding to store in {@link Observable#_boundObservables}.\n// @param {Observable} toObservable A observable, which is a new component of `binding`.\n// @param {String} toPropertyName A name of `toObservable`'s property, a new component of the `binding`.\nfunction updateBoundObservables( observable, binding, toObservable, toPropertyName ) {\n\tconst boundObservables = observable[ boundObservablesSymbol ];\n\tconst bindingsToObservable = boundObservables.get( toObservable );\n\tconst bindings = bindingsToObservable || {};\n\n\tif ( !bindings[ toPropertyName ] ) {\n\t\tbindings[ toPropertyName ] = new Set();\n\t}\n\n\t// Pass the binding to a corresponding Set in `observable._boundObservables`.\n\tbindings[ toPropertyName ].add( binding );\n\n\tif ( !bindingsToObservable ) {\n\t\tboundObservables.set( toObservable, bindings );\n\t}\n}\n\n// Synchronizes {@link Observable#_boundProperties} and {@link Observable#_boundObservables}\n// with {@link BindChain}.\n//\n// Assuming the following binding being created\n//\n// \t\tA.bind( 'a', 'b' ).to( B, 'x', 'y' );\n//\n// the following bindings were initialized by {@link Observable#bind} in {@link BindChain#_bindings}:\n//\n// \t\t{\n// \t\t\ta: { observable: A, property: 'a', to: [] },\n// \t\t\tb: { observable: A, property: 'b', to: [] },\n// \t\t}\n//\n// Iterate over all bindings in this chain and fill their `to` properties with\n// corresponding to( ... ) arguments (components of the binding), so\n//\n// \t\t{\n// \t\t\ta: { observable: A, property: 'a', to: [ B, 'x' ] },\n// \t\t\tb: { observable: A, property: 'b', to: [ B, 'y' ] },\n// \t\t}\n//\n// Then update the structure of {@link Observable#_boundObservables} with updated\n// binding, so it becomes:\n//\n// \t\tMap( {\n// \t\t\tB: {\n// \t\t\t\tx: Set( [\n// \t\t\t\t\t{ observable: A, property: 'a', to: [ [ B, 'x' ] ] }\n// \t\t\t\t] ),\n// \t\t\t\ty: Set( [\n// \t\t\t\t\t{ observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n// \t\t\t\t] )\n//\t\t\t}\n// \t\t} )\n//\n// @private\n// @param {BindChain} chain The binding initialized by {@link Observable#bind}.\nfunction updateBindToBound( chain ) {\n\tlet toProperty;\n\n\tchain._bindings.forEach( ( binding, propertyName ) => {\n\t\t// Note: For a binding without a callback, this will run only once\n\t\t// like in A.bind( 'x', 'y' ).to( B, 'a', 'b' )\n\t\t// TODO: ES6 destructuring.\n\t\tchain._to.forEach( to => {\n\t\t\ttoProperty = to.properties[ binding.callback ? 0 : chain._bindProperties.indexOf( propertyName ) ];\n\n\t\t\tbinding.to.push( [ to.observable, toProperty ] );\n\t\t\tupdateBoundObservables( chain._observable, binding, to.observable, toProperty );\n\t\t} );\n\t} );\n}\n\n// Updates an property of a {@link Observable} with a value\n// determined by an entry in {@link Observable#_boundProperties}.\n//\n// @private\n// @param {Observable} observable A observable which property is to be updated.\n// @param {String} propertyName An property to be updated.\nfunction updateBoundObservableProperty( observable, propertyName ) {\n\tconst boundProperties = observable[ boundPropertiesSymbol ];\n\tconst binding = boundProperties.get( propertyName );\n\tlet propertyValue;\n\n\t// When a binding with callback is created like\n\t//\n\t// \t\tA.bind( 'a' ).to( B, 'b', C, 'c', callback );\n\t//\n\t// collect B.b and C.c, then pass them to callback to set A.a.\n\tif ( binding.callback ) {\n\t\tpropertyValue = binding.callback.apply( observable, binding.to.map( to => to[ 0 ][ to[ 1 ] ] ) );\n\t} else {\n\t\tpropertyValue = binding.to[ 0 ];\n\t\tpropertyValue = propertyValue[ 0 ][ propertyValue[ 1 ] ];\n\t}\n\n\tif ( observable.hasOwnProperty( propertyName ) ) {\n\t\tobservable[ propertyName ] = propertyValue;\n\t} else {\n\t\tobservable.set( propertyName, propertyValue );\n\t}\n}\n\n// Starts listening to changes in {@link BindChain._to} observables to update\n// {@link BindChain._observable} {@link BindChain._bindProperties}. Also sets the\n// initial state of {@link BindChain._observable}.\n//\n// @private\n// @param {BindChain} chain The chain initialized by {@link Observable#bind}.\nfunction attachBindToListeners( observable, toBindings ) {\n\ttoBindings.forEach( to => {\n\t\tconst boundObservables = observable[ boundObservablesSymbol ];\n\t\tlet bindings;\n\n\t\t// If there's already a chain between the observables (`observable` listens to\n\t\t// `to.observable`), there's no need to create another `change` event listener.\n\t\tif ( !boundObservables.get( to.observable ) ) {\n\t\t\tobservable.listenTo( to.observable, 'change', ( evt, propertyName ) => {\n\t\t\t\tbindings = boundObservables.get( to.observable )[ propertyName ];\n\n\t\t\t\t// Note: to.observable will fire for any property change, react\n\t\t\t\t// to changes of properties which are bound only.\n\t\t\t\tif ( bindings ) {\n\t\t\t\t\tbindings.forEach( binding => {\n\t\t\t\t\t\tupdateBoundObservableProperty( observable, binding.property );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t} );\n}\n\n/**\n * Interface which adds \"observable properties\" and data binding functionality.\n *\n * Can be easily implemented by a class by mixing the {@link module:utils/observablemixin~ObservableMixin} mixin.\n *\n * Read more about the usage of this interface in the:\n * * {@glink framework/guides/architecture/core-editor-architecture#event-system-and-observables \"Event system and observables\"}\n * section of the {@glink framework/guides/architecture/core-editor-architecture \"Core editor architecture\"} guide,\n * * {@glink framework/guides/deep-dive/observables \"Observables\" deep dive} guide.\n *\n * @interface Observable\n * @extends module:utils/emittermixin~Emitter\n */\n\n/**\n * Fired when a property changed value.\n *\n *\t\tobservable.set( 'prop', 1 );\n *\n *\t\tobservable.on( 'change:prop', ( evt, propertyName, newValue, oldValue ) => {\n *\t\t\tconsole.log( `${ propertyName } has changed from ${ oldValue } to ${ newValue }` );\n *\t\t} );\n *\n *\t\tobservable.prop = 2; // -> 'prop has changed from 1 to 2'\n *\n * @event change:{property}\n * @param {String} name The property name.\n * @param {*} value The new property value.\n * @param {*} oldValue The previous property value.\n */\n\n/**\n * Fired when a property value is going to be set but is not set yet (before the `change` event is fired).\n *\n * You can control the final value of the property by using\n * the {@link module:utils/eventinfo~EventInfo#return event's `return` property}.\n *\n *\t\tobservable.set( 'prop', 1 );\n *\n *\t\tobservable.on( 'set:prop', ( evt, propertyName, newValue, oldValue ) => {\n *\t\t\tconsole.log( `Value is going to be changed from ${ oldValue } to ${ newValue }` );\n *\t\t\tconsole.log( `Current property value is ${ observable[ propertyName ] }` );\n *\n *\t\t\t// Let's override the value.\n *\t\t\tevt.return = 3;\n *\t\t} );\n *\n *\t\tobservable.on( 'change:prop', ( evt, propertyName, newValue, oldValue ) => {\n *\t\t\tconsole.log( `Value has changed from ${ oldValue } to ${ newValue }` );\n *\t\t} );\n *\n *\t\tobservable.prop = 2; // -> 'Value is going to be changed from 1 to 2'\n *\t\t                     // -> 'Current property value is 1'\n *\t\t                     // -> 'Value has changed from 1 to 3'\n *\n * **Note:** Event is fired even when the new value is the same as the old value.\n *\n * @event set:{property}\n * @param {String} name The property name.\n * @param {*} value The new property value.\n * @param {*} oldValue The previous property value.\n */\n\n/**\n * Creates and sets the value of an observable property of this object. Such an property becomes a part\n * of the state and is be observable.\n *\n * It accepts also a single object literal containing key/value pairs with properties to be set.\n *\n * This method throws the `observable-set-cannot-override` error if the observable instance already\n * have a property with the given property name. This prevents from mistakenly overriding existing\n * properties and methods, but means that `foo.set( 'bar', 1 )` may be slightly slower than `foo.bar = 1`.\n *\n * @method #set\n * @param {String|Object} name The property's name or object with `name=>value` pairs.\n * @param {*} [value] The property's value (if `name` was passed in the first parameter).\n */\n\n/**\n * Binds {@link #set observable properties} to other objects implementing the\n * {@link module:utils/observablemixin~Observable} interface.\n *\n * Read more in the {@glink framework/guides/deep-dive/observables#property-bindings dedicated guide}\n * covering the topic of property bindings with some additional examples.\n *\n * Consider two objects: a `button` and an associated `command` (both `Observable`).\n *\n * A simple property binding could be as follows:\n *\n *\t\tbutton.bind( 'isEnabled' ).to( command, 'isEnabled' );\n *\n * or even shorter:\n *\n *\t\tbutton.bind( 'isEnabled' ).to( command );\n *\n * which works in the following way:\n *\n * * `button.isEnabled` **instantly equals** `command.isEnabled`,\n * * whenever `command.isEnabled` changes, `button.isEnabled` will immediately reflect its value.\n *\n * **Note**: To release the binding, use {@link module:utils/observablemixin~Observable#unbind}.\n *\n * You can also \"rename\" the property in the binding by specifying the new name in the `to()` chain:\n *\n *\t\tbutton.bind( 'isEnabled' ).to( command, 'isWorking' );\n *\n * It is possible to bind more than one property at a time to shorten the code:\n *\n *\t\tbutton.bind( 'isEnabled', 'value' ).to( command );\n *\n * which corresponds to:\n *\n *\t\tbutton.bind( 'isEnabled' ).to( command );\n *\t\tbutton.bind( 'value' ).to( command );\n *\n * The binding can include more than one observable, combining multiple data sources in a custom callback:\n *\n *\t\tbutton.bind( 'isEnabled' ).to( command, 'isEnabled', ui, 'isVisible',\n *\t\t\t( isCommandEnabled, isUIVisible ) => isCommandEnabled && isUIVisible );\n *\n * It is also possible to bind to the same property in an array of observables.\n * To bind a `button` to multiple commands (also `Observables`) so that each and every one of them\n * must be enabled for the button to become enabled, use the following code:\n *\n *\t\tbutton.bind( 'isEnabled' ).toMany( [ commandA, commandB, commandC ], 'isEnabled',\n *\t\t\t( isAEnabled, isBEnabled, isCEnabled ) => isAEnabled && isBEnabled && isCEnabled );\n *\n * @method #bind\n * @param {...String} bindProperties Observable properties that will be bound to other observable(s).\n * @returns {Object} The bind chain with the `to()` and `toMany()` methods.\n */\n\n/**\n * Removes the binding created with {@link #bind}.\n *\n *\t\t// Removes the binding for the 'a' property.\n *\t\tA.unbind( 'a' );\n *\n *\t\t// Removes bindings for all properties.\n *\t\tA.unbind();\n *\n * @method #unbind\n * @param {...String} [unbindProperties] Observable properties to be unbound. All the bindings will\n * be released if no properties are provided.\n */\n\n/**\n * Turns the given methods of this object into event-based ones. This means that the new method will fire an event\n * (named after the method) and the original action will be plugged as a listener to that event.\n *\n * Read more in the {@glink framework/guides/deep-dive/observables#decorating-object-methods dedicated guide}\n * covering the topic of decorating methods with some additional examples.\n *\n * Decorating the method does not change its behavior (it only adds an event),\n * but it allows to modify it later on by listening to the method's event.\n *\n * For example, to cancel the method execution the event can be {@link module:utils/eventinfo~EventInfo#stop stopped}:\n *\n *\t\tclass Foo {\n *\t\t\tconstructor() {\n *\t\t\t\tthis.decorate( 'method' );\n *\t\t\t}\n *\n *\t\t\tmethod() {\n *\t\t\t\tconsole.log( 'called!' );\n *\t\t\t}\n *\t\t}\n *\n *\t\tconst foo = new Foo();\n *\t\tfoo.on( 'method', ( evt ) => {\n *\t\t\tevt.stop();\n *\t\t}, { priority: 'high' } );\n *\n *\t\tfoo.method(); // Nothing is logged.\n *\n *\n * **Note**: The high {@link module:utils/priorities~PriorityString priority} listener\n * has been used to execute this particular callback before the one which calls the original method\n * (which uses the \"normal\" priority).\n *\n * It is also possible to change the returned value:\n *\n *\t\tfoo.on( 'method', ( evt ) => {\n *\t\t\tevt.return = 'Foo!';\n *\t\t} );\n *\n *\t\tfoo.method(); // -> 'Foo'\n *\n * Finally, it is possible to access and modify the arguments the method is called with:\n *\n *\t\tmethod( a, b ) {\n *\t\t\tconsole.log( `${ a }, ${ b }`  );\n *\t\t}\n *\n *\t\t// ...\n *\n *\t\tfoo.on( 'method', ( evt, args ) => {\n *\t\t\targs[ 0 ] = 3;\n *\n *\t\t\tconsole.log( args[ 1 ] ); // -> 2\n *\t\t}, { priority: 'high' } );\n *\n *\t\tfoo.method( 1, 2 ); // -> '3, 2'\n *\n * @method #decorate\n * @param {String} methodName Name of the method to decorate.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/editableelement\n */\n\nimport ContainerElement from './containerelement';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\n\nconst documentSymbol = Symbol( 'document' );\n\n/**\n * Editable element which can be a {@link module:engine/view/rooteditableelement~RootEditableElement root}\n * or nested editable area in the editor.\n *\n * Editable is automatically read-only when its {@link module:engine/view/document~Document Document} is read-only.\n *\n * The constructor of this class shouldn't be used directly. To create new `EditableElement` use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createEditableElement `downcastWriter#createEditableElement()`} method.\n *\n * @extends module:engine/view/containerelement~ContainerElement\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class EditableElement extends ContainerElement {\n\t/**\n\t * Creates an editable element.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#createEditableElement\n\t * @protected\n\t */\n\tconstructor( name, attrs, children ) {\n\t\tsuper( name, attrs, children );\n\n\t\t/**\n\t\t * Whether the editable is in read-write or read-only mode.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} module:engine/view/editableelement~EditableElement#isReadOnly\n\t\t */\n\t\tthis.set( 'isReadOnly', false );\n\n\t\t/**\n\t\t * Whether the editable is focused.\n\t\t *\n\t\t * This property updates when {@link module:engine/view/document~Document#isFocused document.isFocused} or view\n\t\t * selection is changed.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} module:engine/view/editableelement~EditableElement#isFocused\n\t\t */\n\t\tthis.set( 'isFocused', false );\n\n\t\t/**\n\t\t * The {@link module:engine/view/document~Document} which is an owner of this root.\n\t\t * Can only by set once.\n\t\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-editableelement-document-already-set`\n\t\t * when document is already set.\n\t\t *\n\t\t * @member {module:engine/view/document~Document} #document\n\t\t */\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\teditableElement.is( 'editableElement' ); // -> true\n\t *\t\teditableElement.is( 'element' ); // -> true\n\t *\t\teditableElement.is( 'node' ); // -> true\n\t *\t\teditableElement.is( 'view:editableElement' ); // -> true\n\t *\t\teditableElement.is( 'view:element' ); // -> true\n\t *\t\teditableElement.is( 'view:node' ); // -> true\n\t *\n\t *\t\teditableElement.is( 'model:element' ); // -> false\n\t *\t\teditableElement.is( 'documentFragment' ); // -> false\n\t *\n\t * Assuming that the object being checked is an editbale element, you can also check its\n\t * {@link module:engine/view/editableelement~EditableElement#name name}:\n\t *\n\t *\t\teditableElement.is( 'div' ); // -> true if this is a div element\n\t *\t\teditableElement.is( 'editableElement', 'div' ); // -> same as above\n\t *\t\ttext.is( 'div' ); -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type Type to check when `name` parameter is present.\n\t * Otherwise, it acts like the `name` parameter.\n\t * @param {String} [name] Element name.\n\t * @returns {Boolean}\n\t */\n\tis( type, name = null ) {\n\t\tconst cutType = type && type.replace( /^view:/, '' );\n\t\tif ( !name ) {\n\t\t\treturn cutType == 'editableElement' || super.is( type );\n\t\t} else {\n\t\t\treturn ( cutType == 'editableElement' && name == this.name ) || super.is( type, name );\n\t\t}\n\t}\n\n\tdestroy() {\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Returns document associated with the editable.\n\t *\n\t * @readonly\n\t * @returns {module:engine/view/document~Document}\n\t */\n\tget document() {\n\t\treturn this.getCustomProperty( documentSymbol );\n\t}\n\n\t/**\n\t * Sets document of this editable element.\n\t *\n\t * @protected\n\t * @param {module:engine/view/document~Document} document\n\t */\n\tset _document( document ) {\n\t\tif ( this.getCustomProperty( documentSymbol ) ) {\n\t\t\t/**\n\t\t\t * View document is already set. It can only be set once.\n\t\t\t *\n\t\t\t * @error view-editableelement-document-already-set\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-editableelement-document-already-set: View document is already set.', this );\n\t\t}\n\n\t\tthis._setCustomProperty( documentSymbol, document );\n\n\t\tthis.bind( 'isReadOnly' ).to( document );\n\n\t\tthis.bind( 'isFocused' ).to(\n\t\t\tdocument,\n\t\t\t'isFocused',\n\t\t\tisFocused => isFocused && document.selection.editableElement == this\n\t\t);\n\n\t\t// Update focus state based on selection changes.\n\t\tthis.listenTo( document.selection, 'change', () => {\n\t\t\tthis.isFocused = document.isFocused && document.selection.editableElement == this;\n\t\t} );\n\t}\n}\n\nmix( EditableElement, ObservableMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/rooteditableelement\n */\n\nimport EditableElement from './editableelement';\n\nconst rootNameSymbol = Symbol( 'rootName' );\n\n/**\n * Class representing a single root in the data view. A root can be either {@link ~RootEditableElement#isReadOnly editable or read-only},\n * but in both cases it is called \"an editable\". Roots can contain other {@link module:engine/view/editableelement~EditableElement\n * editable elements} making them \"nested editables\".\n *\n * @extends module:engine/view/editableelement~EditableElement\n */\nexport default class RootEditableElement extends EditableElement {\n\t/**\n\t * Creates root editable element.\n\t *\n\t * @param {String} name Node name.\n\t */\n\tconstructor( name ) {\n\t\tsuper( name );\n\n\t\t/**\n\t\t * Name of this root inside {@link module:engine/view/document~Document} that is an owner of this root. If no\n\t\t * other name is set, `main` name is used.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.rootName = 'main';\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\trootEditableElement.is( 'rootEditableElement' ); // -> true\n\t *\t\trootEditableElement.is( 'editableElement' ); // -> true\n\t *\t\trootEditableElement.is( 'element' ); // -> true\n\t *\t\trootEditableElement.is( 'node' ); // -> true\n\t *\t\trootEditableElement.is( 'view:rootEditableElement' ); // -> true\n\t *\t\trootEditableElement.is( 'view:editableElement' ); // -> true\n\t *\t\trootEditableElement.is( 'view:element' ); // -> true\n\t *\t\trootEditableElement.is( 'view:node' ); // -> true\n\t *\n\t *\t\trootEditableElement.is( 'model:element' ); // -> false\n\t *\t\trootEditableElement.is( 'documentFragment' ); // -> false\n\t *\n\t * Assuming that the object being checked is a root editbale element, you can also check its\n\t * {@link module:engine/view/rooteditableelement~RootEditableElement#name name}:\n\t *\n\t *\t\trootEditableElement.is( 'div' ); // -> true if this is a div root editable element\n\t *\t\trootEditableElement.is( 'rootEditableElement', 'div' ); // -> same as above\n\t *\t\ttext.is( 'div' ); -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type Type to check when `name` parameter is present.\n\t * Otherwise, it acts like the `name` parameter.\n\t * @param {String} [name] Element name.\n\t * @returns {Boolean}\n\t */\n\tis( type, name = null ) {\n\t\tconst cutType = type.replace( /^view:/, '' );\n\t\tif ( !name ) {\n\t\t\treturn cutType == 'rootElement' || super.is( type );\n\t\t} else {\n\t\t\treturn ( cutType == 'rootElement' && name == this.name ) || super.is( type, name );\n\t\t}\n\t}\n\n\tget rootName() {\n\t\treturn this.getCustomProperty( rootNameSymbol );\n\t}\n\n\tset rootName( rootName ) {\n\t\tthis._setCustomProperty( rootNameSymbol, rootName );\n\t}\n\n\t/**\n\t * Overrides old element name and sets new one.\n\t * This is needed because view roots are created before they are attached to the DOM.\n\t * The name of the root element is temporary at this stage. It has to be changed when the\n\t * view root element is attached to the DOM element.\n\t *\n\t * @protected\n\t * @param {String} name The new name of element.\n\t */\n\tset _name( name ) {\n\t\tthis.name = name;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/treewalker\n */\n\nimport Element from './element';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport Position from './position';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Position iterator class. It allows to iterate forward and backward over the document.\n */\nexport default class TreeWalker {\n\t/**\n\t * Creates a range iterator. All parameters are optional, but you have to specify either `boundaries` or `startPosition`.\n\t *\n\t * @constructor\n\t * @param {Object} options Object with configuration.\n\t * @param {module:engine/view/range~Range} [options.boundaries=null] Range to define boundaries of the iterator.\n\t * @param {module:engine/view/position~Position} [options.startPosition] Starting position.\n\t * @param {'forward'|'backward'} [options.direction='forward'] Walking direction.\n\t * @param {Boolean} [options.singleCharacters=false] Flag indicating whether all characters from\n\t * {@link module:engine/view/text~Text} should be returned as one {@link module:engine/view/text~Text} (`false`) ore one by one as\n\t * {@link module:engine/view/textproxy~TextProxy} (`true`).\n\t * @param {Boolean} [options.shallow=false] Flag indicating whether iterator should enter elements or not. If the\n\t * iterator is shallow child nodes of any iterated node will not be returned along with `elementEnd` tag.\n\t * @param {Boolean} [options.ignoreElementEnd=false] Flag indicating whether iterator should ignore `elementEnd`\n\t * tags. If the option is true walker will not return a parent node of start position. If this option is `true`\n\t * each {@link module:engine/view/element~Element} will be returned once, while if the option is `false` they might be returned\n\t * twice: for `'elementStart'` and `'elementEnd'`.\n\t */\n\tconstructor( options = {} ) {\n\t\tif ( !options.boundaries && !options.startPosition ) {\n\t\t\t/**\n\t\t\t * Neither boundaries nor starting position have been defined.\n\t\t\t *\n\t\t\t * @error view-tree-walker-no-start-position\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'view-tree-walker-no-start-position: Neither boundaries nor starting position have been defined.',\n\t\t\t\tnull\n\t\t\t);\n\t\t}\n\n\t\tif ( options.direction && options.direction != 'forward' && options.direction != 'backward' ) {\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'view-tree-walker-unknown-direction: Only `backward` and `forward` direction allowed.',\n\t\t\t\toptions.startPosition,\n\t\t\t\t{ direction: options.direction }\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * Iterator boundaries.\n\t\t *\n\t\t * When the iterator is walking `'forward'` on the end of boundary or is walking `'backward'`\n\t\t * on the start of boundary, then `{ done: true }` is returned.\n\t\t *\n\t\t * If boundaries are not defined they are set before first and after last child of the root node.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/range~Range} module:engine/view/treewalker~TreeWalker#boundaries\n\t\t */\n\t\tthis.boundaries = options.boundaries || null;\n\n\t\t/**\n\t\t * Iterator position. If start position is not defined then position depends on {@link #direction}. If direction is\n\t\t * `'forward'` position starts form the beginning, when direction is `'backward'` position starts from the end.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/position~Position} module:engine/view/treewalker~TreeWalker#position\n\t\t */\n\t\tif ( options.startPosition ) {\n\t\t\tthis.position = Position._createAt( options.startPosition );\n\t\t} else {\n\t\t\tthis.position = Position._createAt( options.boundaries[ options.direction == 'backward' ? 'end' : 'start' ] );\n\t\t}\n\n\t\t/**\n\t\t * Walking direction. Defaults `'forward'`.\n\t\t *\n\t\t * @readonly\n\t\t * @member {'backward'|'forward'} module:engine/view/treewalker~TreeWalker#direction\n\t\t */\n\t\tthis.direction = options.direction || 'forward';\n\n\t\t/**\n\t\t * Flag indicating whether all characters from {@link module:engine/view/text~Text} should be returned as one\n\t\t * {@link module:engine/view/text~Text} or one by one as {@link module:engine/view/textproxy~TextProxy}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} module:engine/view/treewalker~TreeWalker#singleCharacters\n\t\t */\n\t\tthis.singleCharacters = !!options.singleCharacters;\n\n\t\t/**\n\t\t * Flag indicating whether iterator should enter elements or not. If the iterator is shallow child nodes of any\n\t\t * iterated node will not be returned along with `elementEnd` tag.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} module:engine/view/treewalker~TreeWalker#shallow\n\t\t */\n\t\tthis.shallow = !!options.shallow;\n\n\t\t/**\n\t\t * Flag indicating whether iterator should ignore `elementEnd` tags. If set to `true`, walker will not\n\t\t * return a parent node of the start position. Each {@link module:engine/view/element~Element} will be returned once.\n\t\t * When set to `false` each element might be returned twice: for `'elementStart'` and `'elementEnd'`.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} module:engine/view/treewalker~TreeWalker#ignoreElementEnd\n\t\t */\n\t\tthis.ignoreElementEnd = !!options.ignoreElementEnd;\n\n\t\t/**\n\t\t * Start boundary parent.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/view/node~Node} module:engine/view/treewalker~TreeWalker#_boundaryStartParent\n\t\t */\n\t\tthis._boundaryStartParent = this.boundaries ? this.boundaries.start.parent : null;\n\n\t\t/**\n\t\t * End boundary parent.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/view/node~Node} module:engine/view/treewalker~TreeWalker#_boundaryEndParent\n\t\t */\n\t\tthis._boundaryEndParent = this.boundaries ? this.boundaries.end.parent : null;\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * @returns {Iterable.<module:engine/view/treewalker~TreeWalkerValue>}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Moves {@link #position} in the {@link #direction} skipping values as long as the callback function returns `true`.\n\t *\n\t * For example:\n\t *\n\t * \t\twalker.skip( value => value.type == 'text' ); // <p>{}foo</p> -> <p>foo[]</p>\n\t * \t\twalker.skip( value => true ); // Move the position to the end: <p>{}foo</p> -> <p>foo</p>[]\n\t * \t\twalker.skip( value => false ); // Do not move the position.\n\t *\n\t * @param {Function} skip Callback function. Gets {@link module:engine/view/treewalker~TreeWalkerValue} and should\n\t * return `true` if the value should be skipped or `false` if not.\n\t */\n\tskip( skip ) {\n\t\tlet done, value, prevPosition;\n\n\t\tdo {\n\t\t\tprevPosition = this.position;\n\n\t\t\t( { done, value } = this.next() );\n\t\t} while ( !done && skip( value ) );\n\n\t\tif ( !done ) {\n\t\t\tthis.position = prevPosition;\n\t\t}\n\t}\n\n\t/**\n\t * Gets the next tree walker's value.\n\t *\n\t * @returns {module:engine/view/treewalker~TreeWalkerValue} Object implementing iterator interface, returning\n\t * information about taken step.\n\t */\n\tnext() {\n\t\tif ( this.direction == 'forward' ) {\n\t\t\treturn this._next();\n\t\t} else {\n\t\t\treturn this._previous();\n\t\t}\n\t}\n\n\t/**\n\t * Makes a step forward in view. Moves the {@link #position} to the next position and returns the encountered value.\n\t *\n\t * @private\n\t * @returns {Object}\n\t * @returns {Boolean} return.done `true` if iterator is done, `false` otherwise.\n\t * @returns {module:engine/view/treewalker~TreeWalkerValue} return.value Information about taken step.\n\t */\n\t_next() {\n\t\tlet position = this.position.clone();\n\t\tconst previousPosition = this.position;\n\t\tconst parent = position.parent;\n\n\t\t// We are at the end of the root.\n\t\tif ( parent.parent === null && position.offset === parent.childCount ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\t// We reached the walker boundary.\n\t\tif ( parent === this._boundaryEndParent && position.offset == this.boundaries.end.offset ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\t// Get node just after current position.\n\t\tlet node;\n\n\t\t// Text is a specific parent because it contains string instead of child nodes.\n\t\tif ( parent instanceof Text ) {\n\t\t\tif ( position.isAtEnd ) {\n\t\t\t\t// Prevent returning \"elementEnd\" for Text node. Skip that value and return the next walker step.\n\t\t\t\tthis.position = Position._createAfter( parent );\n\n\t\t\t\treturn this._next();\n\t\t\t}\n\n\t\t\tnode = parent.data[ position.offset ];\n\t\t} else {\n\t\t\tnode = parent.getChild( position.offset );\n\t\t}\n\n\t\tif ( node instanceof Element ) {\n\t\t\tif ( !this.shallow ) {\n\t\t\t\tposition = new Position( node, 0 );\n\t\t\t} else {\n\t\t\t\tposition.offset++;\n\t\t\t}\n\n\t\t\tthis.position = position;\n\n\t\t\treturn this._formatReturnValue( 'elementStart', node, previousPosition, position, 1 );\n\t\t} else if ( node instanceof Text ) {\n\t\t\tif ( this.singleCharacters ) {\n\t\t\t\tposition = new Position( node, 0 );\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn this._next();\n\t\t\t} else {\n\t\t\t\tlet charactersCount = node.data.length;\n\t\t\t\tlet item;\n\n\t\t\t\t// If text stick out of walker range, we need to cut it and wrap in TextProxy.\n\t\t\t\tif ( node == this._boundaryEndParent ) {\n\t\t\t\t\tcharactersCount = this.boundaries.end.offset;\n\t\t\t\t\titem = new TextProxy( node, 0, charactersCount );\n\t\t\t\t\tposition = Position._createAfter( item );\n\t\t\t\t} else {\n\t\t\t\t\titem = new TextProxy( node, 0, node.data.length );\n\t\t\t\t\t// If not just keep moving forward.\n\t\t\t\t\tposition.offset++;\n\t\t\t\t}\n\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn this._formatReturnValue( 'text', item, previousPosition, position, charactersCount );\n\t\t\t}\n\t\t} else if ( typeof node == 'string' ) {\n\t\t\tlet textLength;\n\n\t\t\tif ( this.singleCharacters ) {\n\t\t\t\ttextLength = 1;\n\t\t\t} else {\n\t\t\t\t// Check if text stick out of walker range.\n\t\t\t\tconst endOffset = parent === this._boundaryEndParent ? this.boundaries.end.offset : parent.data.length;\n\n\t\t\t\ttextLength = endOffset - position.offset;\n\t\t\t}\n\n\t\t\tconst textProxy = new TextProxy( parent, position.offset, textLength );\n\n\t\t\tposition.offset += textLength;\n\t\t\tthis.position = position;\n\n\t\t\treturn this._formatReturnValue( 'text', textProxy, previousPosition, position, textLength );\n\t\t} else {\n\t\t\t// `node` is not set, we reached the end of current `parent`.\n\t\t\tposition = Position._createAfter( parent );\n\t\t\tthis.position = position;\n\n\t\t\tif ( this.ignoreElementEnd ) {\n\t\t\t\treturn this._next();\n\t\t\t} else {\n\t\t\t\treturn this._formatReturnValue( 'elementEnd', parent, previousPosition, position );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Makes a step backward in view. Moves the {@link #position} to the previous position and returns the encountered value.\n\t *\n\t * @private\n\t * @returns {Object}\n\t * @returns {Boolean} return.done True if iterator is done.\n\t * @returns {module:engine/view/treewalker~TreeWalkerValue} return.value Information about taken step.\n\t */\n\t_previous() {\n\t\tlet position = this.position.clone();\n\t\tconst previousPosition = this.position;\n\t\tconst parent = position.parent;\n\n\t\t// We are at the beginning of the root.\n\t\tif ( parent.parent === null && position.offset === 0 ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\t// We reached the walker boundary.\n\t\tif ( parent == this._boundaryStartParent && position.offset == this.boundaries.start.offset ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\t// Get node just before current position.\n\t\tlet node;\n\n\t\t// Text {@link module:engine/view/text~Text} element is a specific parent because contains string instead of child nodes.\n\t\tif ( parent instanceof Text ) {\n\t\t\tif ( position.isAtStart ) {\n\t\t\t\t// Prevent returning \"elementStart\" for Text node. Skip that value and return the next walker step.\n\t\t\t\tthis.position = Position._createBefore( parent );\n\n\t\t\t\treturn this._previous();\n\t\t\t}\n\n\t\t\tnode = parent.data[ position.offset - 1 ];\n\t\t} else {\n\t\t\tnode = parent.getChild( position.offset - 1 );\n\t\t}\n\n\t\tif ( node instanceof Element ) {\n\t\t\tif ( !this.shallow ) {\n\t\t\t\tposition = new Position( node, node.childCount );\n\t\t\t\tthis.position = position;\n\n\t\t\t\tif ( this.ignoreElementEnd ) {\n\t\t\t\t\treturn this._previous();\n\t\t\t\t} else {\n\t\t\t\t\treturn this._formatReturnValue( 'elementEnd', node, previousPosition, position );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tposition.offset--;\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn this._formatReturnValue( 'elementStart', node, previousPosition, position, 1 );\n\t\t\t}\n\t\t} else if ( node instanceof Text ) {\n\t\t\tif ( this.singleCharacters ) {\n\t\t\t\tposition = new Position( node, node.data.length );\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn this._previous();\n\t\t\t} else {\n\t\t\t\tlet charactersCount = node.data.length;\n\t\t\t\tlet item;\n\n\t\t\t\t// If text stick out of walker range, we need to cut it and wrap in TextProxy.\n\t\t\t\tif ( node == this._boundaryStartParent ) {\n\t\t\t\t\tconst offset = this.boundaries.start.offset;\n\n\t\t\t\t\titem = new TextProxy( node, offset, node.data.length - offset );\n\t\t\t\t\tcharactersCount = item.data.length;\n\t\t\t\t\tposition = Position._createBefore( item );\n\t\t\t\t} else {\n\t\t\t\t\titem = new TextProxy( node, 0, node.data.length );\n\t\t\t\t\t// If not just keep moving backward.\n\t\t\t\t\tposition.offset--;\n\t\t\t\t}\n\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn this._formatReturnValue( 'text', item, previousPosition, position, charactersCount );\n\t\t\t}\n\t\t} else if ( typeof node == 'string' ) {\n\t\t\tlet textLength;\n\n\t\t\tif ( !this.singleCharacters ) {\n\t\t\t\t// Check if text stick out of walker range.\n\t\t\t\tconst startOffset = parent === this._boundaryStartParent ? this.boundaries.start.offset : 0;\n\n\t\t\t\ttextLength = position.offset - startOffset;\n\t\t\t} else {\n\t\t\t\ttextLength = 1;\n\t\t\t}\n\n\t\t\tposition.offset -= textLength;\n\n\t\t\tconst textProxy = new TextProxy( parent, position.offset, textLength );\n\n\t\t\tthis.position = position;\n\n\t\t\treturn this._formatReturnValue( 'text', textProxy, previousPosition, position, textLength );\n\t\t} else {\n\t\t\t// `node` is not set, we reached the beginning of current `parent`.\n\t\t\tposition = Position._createBefore( parent );\n\t\t\tthis.position = position;\n\n\t\t\treturn this._formatReturnValue( 'elementStart', parent, previousPosition, position, 1 );\n\t\t}\n\t}\n\n\t/**\n\t * Format returned data and adjust `previousPosition` and `nextPosition` if reach the bound of the {@link module:engine/view/text~Text}.\n\t *\n\t * @private\n\t * @param {module:engine/view/treewalker~TreeWalkerValueType} type Type of step.\n\t * @param {module:engine/view/item~Item} item Item between old and new position.\n\t * @param {module:engine/view/position~Position} previousPosition Previous position of iterator.\n\t * @param {module:engine/view/position~Position} nextPosition Next position of iterator.\n\t * @param {Number} [length] Length of the item.\n\t * @returns {module:engine/view/treewalker~TreeWalkerValue}\n\t */\n\t_formatReturnValue( type, item, previousPosition, nextPosition, length ) {\n\t\t// Text is a specific parent, because contains string instead of children.\n\t\t// Walker doesn't enter to the Text except situations when walker is iterating over every single character,\n\t\t// or the bound starts/ends inside the Text. So when the position is at the beginning or at the end of the Text\n\t\t// we move it just before or just after Text.\n\t\tif ( item instanceof TextProxy ) {\n\t\t\t// Position is at the end of Text.\n\t\t\tif ( item.offsetInText + item.data.length == item.textNode.data.length ) {\n\t\t\t\tif ( this.direction == 'forward' && !( this.boundaries && this.boundaries.end.isEqual( this.position ) ) ) {\n\t\t\t\t\tnextPosition = Position._createAfter( item.textNode );\n\t\t\t\t\t// When we change nextPosition of returned value we need also update walker current position.\n\t\t\t\t\tthis.position = nextPosition;\n\t\t\t\t} else {\n\t\t\t\t\tpreviousPosition = Position._createAfter( item.textNode );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Position is at the begining ot the text.\n\t\t\tif ( item.offsetInText === 0 ) {\n\t\t\t\tif ( this.direction == 'backward' && !( this.boundaries && this.boundaries.start.isEqual( this.position ) ) ) {\n\t\t\t\t\tnextPosition = Position._createBefore( item.textNode );\n\t\t\t\t\t// When we change nextPosition of returned value we need also update walker current position.\n\t\t\t\t\tthis.position = nextPosition;\n\t\t\t\t} else {\n\t\t\t\t\tpreviousPosition = Position._createBefore( item.textNode );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tdone: false,\n\t\t\tvalue: {\n\t\t\t\ttype,\n\t\t\t\titem,\n\t\t\t\tpreviousPosition,\n\t\t\t\tnextPosition,\n\t\t\t\tlength\n\t\t\t}\n\t\t};\n\t}\n}\n\n/**\n * Type of the step made by {@link module:engine/view/treewalker~TreeWalker}.\n * Possible values: `'elementStart'` if walker is at the beginning of a node, `'elementEnd'` if walker is at the end\n * of node, or `'text'` if walker traversed over single and multiple characters.\n * For {@link module:engine/view/text~Text} `elementStart` and `elementEnd` is not returned.\n *\n * @typedef {String} module:engine/view/treewalker~TreeWalkerValueType\n */\n\n/**\n * Object returned by {@link module:engine/view/treewalker~TreeWalker} when traversing tree view.\n *\n * @typedef {Object} module:engine/view/treewalker~TreeWalkerValue\n * @property {module:engine/view/treewalker~TreeWalkerValueType} type\n * @property {module:engine/view/item~Item} item Item between the old and the new positions\n * of the tree walker.\n * @property {module:engine/view/position~Position} previousPosition Previous position of the iterator.\n * * Forward iteration: For `'elementEnd'` it is the last position inside the element. For all other types it is the\n * position before the item.\n * * Backward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after item.\n * * If the position is at the beginning or at the end of the {@link module:engine/view/text~Text} it is always moved from the\n * inside of the text to its parent just before or just after that text.\n * @property {module:engine/view/position~Position} nextPosition Next position of the iterator.\n * * Forward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after the item.\n * * Backward iteration: For `'elementEnd'` it is last position inside element. For all other types it is the position\n * before the item.\n * * If the position is at the beginning or at the end of the {@link module:engine/view/text~Text} it is always moved from the\n * inside of the text to its parent just before or just after that text.\n * @property {Number} [length] Length of the item. For `'elementStart'` it is `1`. For `'text'` it is\n * the length of that text. For `'elementEnd'` it is `undefined`.\n */\n\n/**\n * Tree walking directions.\n *\n * @typedef {'forward'|'backward'} module:engine/view/treewalker~TreeWalkerDirection\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/position\n */\n\nimport TreeWalker from './treewalker';\n\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport EditableElement from './editableelement';\n\n// To check if component is loaded more than once.\nimport '@ckeditor/ckeditor5-utils/src/version';\n\n/**\n * Position in the view tree. Position is represented by its parent node and an offset in this parent.\n *\n * In order to create a new position instance use the `createPosition*()` factory methods available in:\n *\n * * {@link module:engine/view/view~View}\n * * {@link module:engine/view/downcastwriter~DowncastWriter}\n * * {@link module:engine/view/upcastwriter~UpcastWriter}\n */\nexport default class Position {\n\t/**\n\t * Creates a position.\n\t *\n\t * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} parent Position parent.\n\t * @param {Number} offset Position offset.\n\t */\n\tconstructor( parent, offset ) {\n\t\t/**\n\t\t * Position parent.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n\t\t * module:engine/view/position~Position#parent\n\t\t */\n\t\tthis.parent = parent;\n\n\t\t/**\n\t\t * Position offset.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} module:engine/view/position~Position#offset\n\t\t */\n\t\tthis.offset = offset;\n\t}\n\n\t/**\n\t * Node directly after the position. Equals `null` when there is no node after position or position is located\n\t * inside text node.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|null}\n\t */\n\tget nodeAfter() {\n\t\tif ( this.parent.is( 'text' ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.parent.getChild( this.offset ) || null;\n\t}\n\n\t/**\n\t * Node directly before the position. Equals `null` when there is no node before position or position is located\n\t * inside text node.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|null}\n\t */\n\tget nodeBefore() {\n\t\tif ( this.parent.is( 'text' ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.parent.getChild( this.offset - 1 ) || null;\n\t}\n\n\t/**\n\t * Is `true` if position is at the beginning of its {@link module:engine/view/position~Position#parent parent}, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isAtStart() {\n\t\treturn this.offset === 0;\n\t}\n\n\t/**\n\t * Is `true` if position is at the end of its {@link module:engine/view/position~Position#parent parent}, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isAtEnd() {\n\t\tconst endOffset = this.parent.is( 'text' ) ? this.parent.data.length : this.parent.childCount;\n\n\t\treturn this.offset === endOffset;\n\t}\n\n\t/**\n\t * Position's root, that is the root of the position's parent element.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\treturn this.parent.root;\n\t}\n\n\t/**\n\t * {@link module:engine/view/editableelement~EditableElement EditableElement} instance that contains this position, or `null` if\n\t * position is not inside an editable element.\n\t *\n\t * @type {module:engine/view/editableelement~EditableElement|null}\n\t */\n\tget editableElement() {\n\t\tlet editable = this.parent;\n\n\t\twhile ( !( editable instanceof EditableElement ) ) {\n\t\t\tif ( editable.parent ) {\n\t\t\t\teditable = editable.parent;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\treturn editable;\n\t}\n\n\t/**\n\t * Returns a new instance of Position with offset incremented by `shift` value.\n\t *\n\t * @param {Number} shift How position offset should get changed. Accepts negative values.\n\t * @returns {module:engine/view/position~Position} Shifted position.\n\t */\n\tgetShiftedBy( shift ) {\n\t\tconst shifted = Position._createAt( this );\n\n\t\tconst offset = shifted.offset + shift;\n\t\tshifted.offset = offset < 0 ? 0 : offset;\n\n\t\treturn shifted;\n\t}\n\n\t/**\n\t * Gets the farthest position which matches the callback using\n\t * {@link module:engine/view/treewalker~TreeWalker TreeWalker}.\n\t *\n\t * For example:\n\t *\n\t * \t\tgetLastMatchingPosition( value => value.type == 'text' ); // <p>{}foo</p> -> <p>foo[]</p>\n\t * \t\tgetLastMatchingPosition( value => value.type == 'text', { direction: 'backward' } ); // <p>foo[]</p> -> <p>{}foo</p>\n\t * \t\tgetLastMatchingPosition( value => false ); // Do not move the position.\n\t *\n\t * @param {Function} skip Callback function. Gets {@link module:engine/view/treewalker~TreeWalkerValue} and should\n\t * return `true` if the value should be skipped or `false` if not.\n\t * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n\t *\n\t * @returns {module:engine/view/position~Position} The position after the last item which matches the `skip` callback test.\n\t */\n\tgetLastMatchingPosition( skip, options = {} ) {\n\t\toptions.startPosition = this;\n\n\t\tconst treeWalker = new TreeWalker( options );\n\t\ttreeWalker.skip( skip );\n\n\t\treturn treeWalker.position;\n\t}\n\n\t/**\n\t * Returns ancestors array of this position, that is this position's parent and it's ancestors.\n\t *\n\t * @returns {Array} Array with ancestors.\n\t */\n\tgetAncestors() {\n\t\tif ( this.parent.is( 'documentFragment' ) ) {\n\t\t\treturn [ this.parent ];\n\t\t} else {\n\t\t\treturn this.parent.getAncestors( { includeSelf: true } );\n\t\t}\n\t}\n\n\t/**\n\t * Returns a {@link module:engine/view/node~Node} or {@link module:engine/view/documentfragment~DocumentFragment}\n\t * which is a common ancestor of both positions.\n\t *\n\t * @param {module:engine/view/position~Position} position\n\t * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null}\n\t */\n\tgetCommonAncestor( position ) {\n\t\tconst ancestorsA = this.getAncestors();\n\t\tconst ancestorsB = position.getAncestors();\n\n\t\tlet i = 0;\n\n\t\twhile ( ancestorsA[ i ] == ancestorsB[ i ] && ancestorsA[ i ] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i === 0 ? null : ancestorsA[ i - 1 ];\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t *\t\tposition.is( 'position' ); // -> true\n\t *\t\tposition.is( 'view:position' ); // -> true\n\t *\n\t *\t\tposition.is( 'model:position' ); // -> false\n\t *\t\tposition.is( 'element' ); // -> false\n\t *\t\tposition.is( 'range' ); // -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type == 'position' || type == 'view:position';\n\t}\n\n\t/**\n\t * Checks whether this position equals given position.\n\t *\n\t * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n\t * @returns {Boolean} True if positions are same.\n\t */\n\tisEqual( otherPosition ) {\n\t\treturn ( this.parent == otherPosition.parent && this.offset == otherPosition.offset );\n\t}\n\n\t/**\n\t * Checks whether this position is located before given position. When method returns `false` it does not mean that\n\t * this position is after give one. Two positions may be located inside separate roots and in that situation this\n\t * method will still return `false`.\n\t *\n\t * @see module:engine/view/position~Position#isAfter\n\t * @see module:engine/view/position~Position#compareWith\n\t * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n\t * @returns {Boolean} Returns `true` if this position is before given position.\n\t */\n\tisBefore( otherPosition ) {\n\t\treturn this.compareWith( otherPosition ) == 'before';\n\t}\n\n\t/**\n\t * Checks whether this position is located after given position. When method returns `false` it does not mean that\n\t * this position is before give one. Two positions may be located inside separate roots and in that situation this\n\t * method will still return `false`.\n\t *\n\t * @see module:engine/view/position~Position#isBefore\n\t * @see module:engine/view/position~Position#compareWith\n\t * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n\t * @returns {Boolean} Returns `true` if this position is after given position.\n\t */\n\tisAfter( otherPosition ) {\n\t\treturn this.compareWith( otherPosition ) == 'after';\n\t}\n\n\t/**\n\t * Checks whether this position is before, after or in same position that other position. Two positions may be also\n\t * different when they are located in separate roots.\n\t *\n\t * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n\t * @returns {module:engine/view/position~PositionRelation}\n\t */\n\tcompareWith( otherPosition ) {\n\t\tif ( this.root !== otherPosition.root ) {\n\t\t\treturn 'different';\n\t\t}\n\n\t\tif ( this.isEqual( otherPosition ) ) {\n\t\t\treturn 'same';\n\t\t}\n\n\t\t// Get path from root to position's parent element.\n\t\tconst thisPath = this.parent.is( 'node' ) ? this.parent.getPath() : [];\n\t\tconst otherPath = otherPosition.parent.is( 'node' ) ? otherPosition.parent.getPath() : [];\n\n\t\t// Add the positions' offsets to the parents offsets.\n\t\tthisPath.push( this.offset );\n\t\totherPath.push( otherPosition.offset );\n\n\t\t// Compare both path arrays to find common ancestor.\n\t\tconst result = compareArrays( thisPath, otherPath );\n\n\t\tswitch ( result ) {\n\t\t\tcase 'prefix':\n\t\t\t\treturn 'before';\n\n\t\t\tcase 'extension':\n\t\t\t\treturn 'after';\n\n\t\t\tdefault:\n\t\t\t\treturn thisPath[ result ] < otherPath[ result ] ? 'before' : 'after';\n\t\t}\n\t}\n\n\t/**\n\t * Creates a {@link module:engine/view/treewalker~TreeWalker TreeWalker} instance with this positions as a start position.\n\t *\n\t * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}\n\t * @param {module:engine/view/range~Range} [options.boundaries=null] Range to define boundaries of the iterator.\n\t * @param {Boolean} [options.singleCharacters=false]\n\t * @param {Boolean} [options.shallow=false]\n\t * @param {Boolean} [options.ignoreElementEnd=false]\n\t */\n\tgetWalker( options = {} ) {\n\t\toptions.startPosition = this;\n\n\t\treturn new TreeWalker( options );\n\t}\n\n\tclone() {\n\t\treturn new Position( this.parent, this.offset );\n\t}\n\n\t/**\n\t * Creates position at the given location. The location can be specified as:\n\t *\n\t * * a {@link module:engine/view/position~Position position},\n\t * * parent element and offset (offset defaults to `0`),\n\t * * parent element and `'end'` (sets position at the end of that element),\n\t * * {@link module:engine/view/item~Item view item} and `'before'` or `'after'` (sets position before or after given view item).\n\t *\n\t * This method is a shortcut to other constructors such as:\n\t *\n\t * * {@link module:engine/view/position~Position._createBefore},\n\t * * {@link module:engine/view/position~Position._createAfter}.\n\t *\n\t * @protected\n\t * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\n\t */\n\tstatic _createAt( itemOrPosition, offset ) {\n\t\tif ( itemOrPosition instanceof Position ) {\n\t\t\treturn new this( itemOrPosition.parent, itemOrPosition.offset );\n\t\t} else {\n\t\t\tconst node = itemOrPosition;\n\n\t\t\tif ( offset == 'end' ) {\n\t\t\t\toffset = node.is( 'text' ) ? node.data.length : node.childCount;\n\t\t\t} else if ( offset == 'before' ) {\n\t\t\t\treturn this._createBefore( node );\n\t\t\t} else if ( offset == 'after' ) {\n\t\t\t\treturn this._createAfter( node );\n\t\t\t} else if ( offset !== 0 && !offset ) {\n\t\t\t\t/**\n\t\t\t\t * {@link module:engine/view/view~View#createPositionAt `View#createPositionAt()`}\n\t\t\t\t * requires the offset to be specified when the first parameter is a view item.\n\t\t\t\t *\n\t\t\t\t * @error view-createPositionAt-offset-required\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'view-createPositionAt-offset-required: ' +\n\t\t\t\t\t'View#createPositionAt() requires the offset when the first parameter is a view item.',\n\t\t\t\t\tnode\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn new Position( node, offset );\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new position after given view item.\n\t *\n\t * @protected\n\t * @param {module:engine/view/item~Item} item View item after which the position should be located.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tstatic _createAfter( item ) {\n\t\t// TextProxy is not a instance of Node so we need do handle it in specific way.\n\t\tif ( item.is( 'textProxy' ) ) {\n\t\t\treturn new Position( item.textNode, item.offsetInText + item.data.length );\n\t\t}\n\n\t\tif ( !item.parent ) {\n\t\t\t/**\n\t\t\t * You can not make a position after a root.\n\t\t\t *\n\t\t\t * @error view-position-after-root\n\t\t\t * @param {module:engine/view/node~Node} root\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-position-after-root: You can not make position after root.', item, { root: item } );\n\t\t}\n\n\t\treturn new Position( item.parent, item.index + 1 );\n\t}\n\n\t/**\n\t * Creates a new position before given view item.\n\t *\n\t * @protected\n\t * @param {module:engine/view/item~Item} item View item before which the position should be located.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tstatic _createBefore( item ) {\n\t\t// TextProxy is not a instance of Node so we need do handle it in specific way.\n\t\tif ( item.is( 'textProxy' ) ) {\n\t\t\treturn new Position( item.textNode, item.offsetInText );\n\t\t}\n\n\t\tif ( !item.parent ) {\n\t\t\t/**\n\t\t\t * You cannot make a position before a root.\n\t\t\t *\n\t\t\t * @error view-position-before-root\n\t\t\t * @param {module:engine/view/node~Node} root\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-position-before-root: You can not make position before root.', item, { root: item } );\n\t\t}\n\n\t\treturn new Position( item.parent, item.index );\n\t}\n}\n\n/**\n * A flag indicating whether this position is `'before'` or `'after'` or `'same'` as given position.\n * If positions are in different roots `'different'` flag is returned.\n *\n * @typedef {String} module:engine/view/position~PositionRelation\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/range\n */\n\nimport Position from './position';\nimport TreeWalker from './treewalker';\n\n/**\n * Range in the view tree. A range is represented by its start and end {@link module:engine/view/position~Position positions}.\n *\n * In order to create a new position instance use the `createPosition*()` factory methods available in:\n *\n * * {@link module:engine/view/view~View}\n * * {@link module:engine/view/downcastwriter~DowncastWriter}\n * * {@link module:engine/view/upcastwriter~UpcastWriter}\n */\nexport default class Range {\n\t/**\n\t * Creates a range spanning from `start` position to `end` position.\n\t *\n\t * **Note:** Constructor creates it's own {@link module:engine/view/position~Position} instances basing on passed values.\n\t *\n\t * @param {module:engine/view/position~Position} start Start position.\n\t * @param {module:engine/view/position~Position} [end] End position. If not set, range will be collapsed at the `start` position.\n\t */\n\tconstructor( start, end = null ) {\n\t\t/**\n\t\t * Start position.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/position~Position}\n\t\t */\n\t\tthis.start = start.clone();\n\n\t\t/**\n\t\t * End position.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/position~Position}\n\t\t */\n\t\tthis.end = end ? end.clone() : start.clone();\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * Iterates over all {@link module:engine/view/item~Item view items} that are in this range and returns\n\t * them together with additional information like length or {@link module:engine/view/position~Position positions},\n\t * grouped as {@link module:engine/view/treewalker~TreeWalkerValue}.\n\t *\n\t * This iterator uses {@link module:engine/view/treewalker~TreeWalker TreeWalker} with `boundaries` set to this range and\n\t * `ignoreElementEnd` option\n\t * set to `true`.\n\t *\n\t * @returns {Iterable.<module:engine/view/treewalker~TreeWalkerValue>}\n\t */\n\t* [ Symbol.iterator ]() {\n\t\tyield* new TreeWalker( { boundaries: this, ignoreElementEnd: true } );\n\t}\n\n\t/**\n\t * Returns whether the range is collapsed, that is it start and end positions are equal.\n\t *\n\t * @type {Boolean}\n\t */\n\tget isCollapsed() {\n\t\treturn this.start.isEqual( this.end );\n\t}\n\n\t/**\n\t * Returns whether this range is flat, that is if {@link module:engine/view/range~Range#start start} position and\n\t * {@link module:engine/view/range~Range#end end} position are in the same {@link module:engine/view/position~Position#parent parent}.\n\t *\n\t * @type {Boolean}\n\t */\n\tget isFlat() {\n\t\treturn this.start.parent === this.end.parent;\n\t}\n\n\t/**\n\t * Range root element.\n\t *\n\t * @type {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\treturn this.start.root;\n\t}\n\n\t/**\n\t * Creates a maximal range that has the same content as this range but is expanded in both ways (at the beginning\n\t * and at the end).\n\t *\n\t * For example:\n\t *\n\t *\t\t<p>Foo</p><p><b>{Bar}</b></p> -> <p>Foo</p>[<p><b>Bar</b>]</p>\n\t *\t\t<p><b>foo</b>{bar}<span></span></p> -> <p><b>foo[</b>bar<span></span>]</p>\n\t *\n\t * Note that in the sample above:\n\t *\n\t * - `<p>` have type of {@link module:engine/view/containerelement~ContainerElement},\n\t * - `<b>` have type of {@link module:engine/view/attributeelement~AttributeElement},\n\t * - `<span>` have type of {@link module:engine/view/uielement~UIElement}.\n\t *\n\t * @returns {module:engine/view/range~Range} Enlarged range.\n\t */\n\tgetEnlarged() {\n\t\tlet start = this.start.getLastMatchingPosition( enlargeTrimSkip, { direction: 'backward' } );\n\t\tlet end = this.end.getLastMatchingPosition( enlargeTrimSkip );\n\n\t\t// Fix positions, in case if they are in Text node.\n\t\tif ( start.parent.is( 'text' ) && start.isAtStart ) {\n\t\t\tstart = Position._createBefore( start.parent );\n\t\t}\n\n\t\tif ( end.parent.is( 'text' ) && end.isAtEnd ) {\n\t\t\tend = Position._createAfter( end.parent );\n\t\t}\n\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Creates a minimum range that has the same content as this range but is trimmed in both ways (at the beginning\n\t * and at the end).\n\t *\n\t * For example:\n\t *\n\t *\t\t<p>Foo</p>[<p><b>Bar</b>]</p> -> <p>Foo</p><p><b>{Bar}</b></p>\n\t *\t\t<p><b>foo[</b>bar<span></span>]</p> -> <p><b>foo</b>{bar}<span></span></p>\n\t *\n\t * Note that in the sample above:\n\t *\n\t * - `<p>` have type of {@link module:engine/view/containerelement~ContainerElement},\n\t * - `<b>` have type of {@link module:engine/view/attributeelement~AttributeElement},\n\t * - `<span>` have type of {@link module:engine/view/uielement~UIElement}.\n\t *\n\t * @returns {module:engine/view/range~Range} Shrink range.\n\t */\n\tgetTrimmed() {\n\t\tlet start = this.start.getLastMatchingPosition( enlargeTrimSkip );\n\n\t\tif ( start.isAfter( this.end ) || start.isEqual( this.end ) ) {\n\t\t\treturn new Range( start, start );\n\t\t}\n\n\t\tlet end = this.end.getLastMatchingPosition( enlargeTrimSkip, { direction: 'backward' } );\n\t\tconst nodeAfterStart = start.nodeAfter;\n\t\tconst nodeBeforeEnd = end.nodeBefore;\n\n\t\t// Because TreeWalker prefers positions next to text node, we need to move them manually into these text nodes.\n\t\tif ( nodeAfterStart && nodeAfterStart.is( 'text' ) ) {\n\t\t\tstart = new Position( nodeAfterStart, 0 );\n\t\t}\n\n\t\tif ( nodeBeforeEnd && nodeBeforeEnd.is( 'text' ) ) {\n\t\t\tend = new Position( nodeBeforeEnd, nodeBeforeEnd.data.length );\n\t\t}\n\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Two ranges are equal if their start and end positions are equal.\n\t *\n\t * @param {module:engine/view/range~Range} otherRange Range to compare with.\n\t * @returns {Boolean} `true` if ranges are equal, `false` otherwise\n\t */\n\tisEqual( otherRange ) {\n\t\treturn this == otherRange || ( this.start.isEqual( otherRange.start ) && this.end.isEqual( otherRange.end ) );\n\t}\n\n\t/**\n\t * Checks whether this range contains given {@link module:engine/view/position~Position position}.\n\t *\n\t * @param {module:engine/view/position~Position} position Position to check.\n\t * @returns {Boolean} `true` if given {@link module:engine/view/position~Position position} is contained in this range,\n\t * `false` otherwise.\n\t */\n\tcontainsPosition( position ) {\n\t\treturn position.isAfter( this.start ) && position.isBefore( this.end );\n\t}\n\n\t/**\n\t * Checks whether this range contains given {@link module:engine/view/range~Range range}.\n\t *\n\t * @param {module:engine/view/range~Range} otherRange Range to check.\n\t * @param {Boolean} [loose=false] Whether the check is loose or strict. If the check is strict (`false`), compared range cannot\n\t * start or end at the same position as this range boundaries. If the check is loose (`true`), compared range can start, end or\n\t * even be equal to this range. Note that collapsed ranges are always compared in strict mode.\n\t * @returns {Boolean} `true` if given {@link module:engine/view/range~Range range} boundaries are contained by this range, `false`\n\t * otherwise.\n\t */\n\tcontainsRange( otherRange, loose = false ) {\n\t\tif ( otherRange.isCollapsed ) {\n\t\t\tloose = false;\n\t\t}\n\n\t\tconst containsStart = this.containsPosition( otherRange.start ) || ( loose && this.start.isEqual( otherRange.start ) );\n\t\tconst containsEnd = this.containsPosition( otherRange.end ) || ( loose && this.end.isEqual( otherRange.end ) );\n\n\t\treturn containsStart && containsEnd;\n\t}\n\n\t/**\n\t * Computes which part(s) of this {@link module:engine/view/range~Range range} is not a part of given\n\t * {@link module:engine/view/range~Range range}.\n\t * Returned array contains zero, one or two {@link module:engine/view/range~Range ranges}.\n\t *\n\t * Examples:\n\t *\n\t *\t\tlet foo = downcastWriter.createText( 'foo' );\n\t *\t\tlet img = downcastWriter.createContainerElement( 'img' );\n\t *\t\tlet bar = downcastWriter.createText( 'bar' );\n\t *\t\tlet p = downcastWriter.createContainerElement( 'p', null, [ foo, img, bar ] );\n\t *\n\t *\t\tlet range = view.createRange( view.createPositionAt( foo, 2 ), view.createPositionAt( bar, 1 ); // \"o\", img, \"b\" are in range.\n\t *\t\tlet otherRange = view.createRange( // \"oo\", img, \"ba\" are in range.\n\t *\t\t\tview.createPositionAt( foo, 1 ),\n\t *\t\t\tview.createPositionAt( bar, 2 )\n\t *\t\t);\n\t *\t\tlet transformed = range.getDifference( otherRange );\n\t *\t\t// transformed array has no ranges because `otherRange` contains `range`\n\t *\n\t *\t\totherRange = view.createRange( view.createPositionAt( foo, 1 ), view.createPositionAt( p, 2 ); // \"oo\", img are in range.\n\t *\t\ttransformed = range.getDifference( otherRange );\n\t *\t\t// transformed array has one range: from ( p, 2 ) to ( bar, 1 )\n\t *\n\t *\t\totherRange = view.createRange( view.createPositionAt( p, 1 ), view.createPositionAt( p, 2 ) ); // img is in range.\n\t *\t\ttransformed = range.getDifference( otherRange );\n\t *\t\t// transformed array has two ranges: from ( foo, 1 ) to ( p, 1 ) and from ( p, 2 ) to ( bar, 1 )\n\t *\n\t * @param {module:engine/view/range~Range} otherRange Range to differentiate against.\n\t * @returns {Array.<module:engine/view/range~Range>} The difference between ranges.\n\t */\n\tgetDifference( otherRange ) {\n\t\tconst ranges = [];\n\n\t\tif ( this.isIntersecting( otherRange ) ) {\n\t\t\t// Ranges intersect.\n\n\t\t\tif ( this.containsPosition( otherRange.start ) ) {\n\t\t\t\t// Given range start is inside this range. This means that we have to\n\t\t\t\t// add shrunken range - from the start to the middle of this range.\n\t\t\t\tranges.push( new Range( this.start, otherRange.start ) );\n\t\t\t}\n\n\t\t\tif ( this.containsPosition( otherRange.end ) ) {\n\t\t\t\t// Given range end is inside this range. This means that we have to\n\t\t\t\t// add shrunken range - from the middle of this range to the end.\n\t\t\t\tranges.push( new Range( otherRange.end, this.end ) );\n\t\t\t}\n\t\t} else {\n\t\t\t// Ranges do not intersect, return the original range.\n\t\t\tranges.push( this.clone() );\n\t\t}\n\n\t\treturn ranges;\n\t}\n\n\t/**\n\t * Returns an intersection of this {@link module:engine/view/range~Range range} and given {@link module:engine/view/range~Range range}.\n\t * Intersection is a common part of both of those ranges. If ranges has no common part, returns `null`.\n\t *\n\t * Examples:\n\t *\n\t *\t\tlet foo = downcastWriter.createText( 'foo' );\n\t *\t\tlet img = downcastWriter.createContainerElement( 'img' );\n\t *\t\tlet bar = downcastWriter.createText( 'bar' );\n\t *\t\tlet p = downcastWriter.createContainerElement( 'p', null, [ foo, img, bar ] );\n\t *\n\t *\t\tlet range = view.createRange( view.createPositionAt( foo, 2 ), view.createPositionAt( bar, 1 ); // \"o\", img, \"b\" are in range.\n\t *\t\tlet otherRange = view.createRange( view.createPositionAt( foo, 1 ), view.createPositionAt( p, 2 ); // \"oo\", img are in range.\n\t *\t\tlet transformed = range.getIntersection( otherRange ); // range from ( foo, 1 ) to ( p, 2 ).\n\t *\n\t *\t\totherRange = view.createRange( view.createPositionAt( bar, 1 ), view.createPositionAt( bar, 3 ); \"ar\" is in range.\n\t *\t\ttransformed = range.getIntersection( otherRange ); // null - no common part.\n\t *\n\t * @param {module:engine/view/range~Range} otherRange Range to check for intersection.\n\t * @returns {module:engine/view/range~Range|null} A common part of given ranges or `null` if ranges have no common part.\n\t */\n\tgetIntersection( otherRange ) {\n\t\tif ( this.isIntersecting( otherRange ) ) {\n\t\t\t// Ranges intersect, so a common range will be returned.\n\t\t\t// At most, it will be same as this range.\n\t\t\tlet commonRangeStart = this.start;\n\t\t\tlet commonRangeEnd = this.end;\n\n\t\t\tif ( this.containsPosition( otherRange.start ) ) {\n\t\t\t\t// Given range start is inside this range. This means thaNt we have to\n\t\t\t\t// shrink common range to the given range start.\n\t\t\t\tcommonRangeStart = otherRange.start;\n\t\t\t}\n\n\t\t\tif ( this.containsPosition( otherRange.end ) ) {\n\t\t\t\t// Given range end is inside this range. This means that we have to\n\t\t\t\t// shrink common range to the given range end.\n\t\t\t\tcommonRangeEnd = otherRange.end;\n\t\t\t}\n\n\t\t\treturn new Range( commonRangeStart, commonRangeEnd );\n\t\t}\n\n\t\t// Ranges do not intersect, so they do not have common part.\n\t\treturn null;\n\t}\n\n\t/**\n\t * Creates a {@link module:engine/view/treewalker~TreeWalker TreeWalker} instance with this range as a boundary.\n\t *\n\t * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n\t * @param {module:engine/view/position~Position} [options.startPosition]\n\t * @param {Boolean} [options.singleCharacters=false]\n\t * @param {Boolean} [options.shallow=false]\n\t * @param {Boolean} [options.ignoreElementEnd=false]\n\t * @returns {module:engine/view/treewalker~TreeWalker}\n\t */\n\tgetWalker( options = {} ) {\n\t\toptions.boundaries = this;\n\n\t\treturn new TreeWalker( options );\n\t}\n\n\t/**\n\t * Returns a {@link module:engine/view/node~Node} or {@link module:engine/view/documentfragment~DocumentFragment}\n\t * which is a common ancestor of range's both ends (in which the entire range is contained).\n\t *\n\t * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null}\n\t */\n\tgetCommonAncestor() {\n\t\treturn this.start.getCommonAncestor( this.end );\n\t}\n\n\t/**\n\t * Clones this range.\n\t *\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tclone() {\n\t\treturn new Range( this.start, this.end );\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all {@link module:engine/view/item~Item view items} that are in this range and returns\n\t * them.\n\t *\n\t * This method uses {@link module:engine/view/treewalker~TreeWalker} with `boundaries` set to this range and `ignoreElementEnd` option\n\t * set to `true`. However it returns only {@link module:engine/view/item~Item items},\n\t * not {@link module:engine/view/treewalker~TreeWalkerValue}.\n\t *\n\t * You may specify additional options for the tree walker. See {@link module:engine/view/treewalker~TreeWalker} for\n\t * a full list of available options.\n\t *\n\t * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n\t * @returns {Iterable.<module:engine/view/item~Item>}\n\t */\n\t* getItems( options = {} ) {\n\t\toptions.boundaries = this;\n\t\toptions.ignoreElementEnd = true;\n\n\t\tconst treeWalker = new TreeWalker( options );\n\n\t\tfor ( const value of treeWalker ) {\n\t\t\tyield value.item;\n\t\t}\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all {@link module:engine/view/position~Position positions} that are boundaries or\n\t * contained in this range.\n\t *\n\t * This method uses {@link module:engine/view/treewalker~TreeWalker} with `boundaries` set to this range. However it returns only\n\t * {@link module:engine/view/position~Position positions}, not {@link module:engine/view/treewalker~TreeWalkerValue}.\n\t *\n\t * You may specify additional options for the tree walker. See {@link module:engine/view/treewalker~TreeWalker} for\n\t * a full list of available options.\n\t *\n\t * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n\t * @returns {Iterable.<module:engine/view/position~Position>}\n\t */\n\t* getPositions( options = {} ) {\n\t\toptions.boundaries = this;\n\n\t\tconst treeWalker = new TreeWalker( options );\n\n\t\tyield treeWalker.position;\n\n\t\tfor ( const value of treeWalker ) {\n\t\t\tyield value.nextPosition;\n\t\t}\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t *\t\trange.is( 'range' ); // -> true\n\t *\t\trange.is( 'view:range' ); // -> true\n\t *\n\t *\t\trange.is( 'model:range' ); // -> false\n\t *\t\trange.is( 'element' ); // -> false\n\t *\t\trange.is( 'selection' ); // -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type == 'range' || type == 'view:range';\n\t}\n\n\t/**\n\t * Checks and returns whether this range intersects with the given range.\n\t *\n\t * @param {module:engine/view/range~Range} otherRange Range to compare with.\n\t * @returns {Boolean} True if ranges intersect.\n\t */\n\tisIntersecting( otherRange ) {\n\t\treturn this.start.isBefore( otherRange.end ) && this.end.isAfter( otherRange.start );\n\t}\n\n\t/**\n\t * Creates a range from the given parents and offsets.\n\t *\n\t * @protected\n\t * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} startElement Start position\n\t * parent element.\n\t * @param {Number} startOffset Start position offset.\n\t * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} endElement End position\n\t * parent element.\n\t * @param {Number} endOffset End position offset.\n\t * @returns {module:engine/view/range~Range} Created range.\n\t */\n\tstatic _createFromParentsAndOffsets( startElement, startOffset, endElement, endOffset ) {\n\t\treturn new this(\n\t\t\tnew Position( startElement, startOffset ),\n\t\t\tnew Position( endElement, endOffset )\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new range, spreading from specified {@link module:engine/view/position~Position position} to a position moved by\n\t * given `shift`. If `shift` is a negative value, shifted position is treated as the beginning of the range.\n\t *\n\t * @protected\n\t * @param {module:engine/view/position~Position} position Beginning of the range.\n\t * @param {Number} shift How long the range should be.\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tstatic _createFromPositionAndShift( position, shift ) {\n\t\tconst start = position;\n\t\tconst end = position.getShiftedBy( shift );\n\n\t\treturn shift > 0 ? new this( start, end ) : new this( end, start );\n\t}\n\n\t/**\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n\t * that element and ends after the last child of that element.\n\t *\n\t * @protected\n\t * @param {module:engine/view/element~Element} element Element which is a parent for the range.\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tstatic _createIn( element ) {\n\t\treturn this._createFromParentsAndOffsets( element, 0, element, element.childCount );\n\t}\n\n\t/**\n\t * Creates a range that starts before given {@link module:engine/view/item~Item view item} and ends after it.\n\t *\n\t * @protected\n\t * @param {module:engine/view/item~Item} item\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tstatic _createOn( item ) {\n\t\tconst size = item.is( 'textProxy' ) ? item.offsetSize : 1;\n\n\t\treturn this._createFromPositionAndShift( Position._createBefore( item ), size );\n\t}\n}\n\n// Function used by getEnlarged and getTrimmed methods.\nfunction enlargeTrimSkip( value ) {\n\tif ( value.item.is( 'attributeElement' ) || value.item.is( 'uiElement' ) ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/count\n */\n\n/**\n * Returns the number of items return by the iterator.\n *\n *\t\tcount( [ 1, 2, 3, 4, 5 ] ); // 5;\n *\n * @param {Iterable.<*>} iterator Any iterator.\n * @returns {Number} Number of items returned by that iterator.\n */\nexport default function count( iterator ) {\n\tlet count = 0;\n\n\tfor ( const _ of iterator ) { // eslint-disable-line no-unused-vars\n\t\tcount++;\n\t}\n\n\treturn count;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/selection\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Range from './range';\nimport Position from './position';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport Node from './node';\nimport Element from './element';\nimport count from '@ckeditor/ckeditor5-utils/src/count';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\nimport DocumentSelection from './documentselection';\n\n/**\n * Class representing an arbirtary selection in the view.\n * See also {@link module:engine/view/documentselection~DocumentSelection}.\n *\n * New selection instances can be created via the constructor or one these methods:\n *\n * * {@link module:engine/view/view~View#createSelection `View#createSelection()`},\n * * {@link module:engine/view/upcastwriter~UpcastWriter#createSelection `UpcastWriter#createSelection()`}.\n *\n * A selection can consist of {@link module:engine/view/range~Range ranges} that can be set by using\n * the {@link module:engine/view/selection~Selection#setTo `Selection#setTo()`} method.\n */\nexport default class Selection {\n\t/**\n\t * Creates new selection instance.\n\t *\n\t * **Note**: The selection constructor is available as a factory method:\n\t *\n\t * * {@link module:engine/view/view~View#createSelection `View#createSelection()`},\n\t * * {@link module:engine/view/upcastwriter~UpcastWriter#createSelection `UpcastWriter#createSelection()`}.\n\t *\n\t * \t\t// Creates empty selection without ranges.\n\t *\t\tconst selection = writer.createSelection();\n\t *\n\t *\t\t// Creates selection at the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\tconst selection = writer.createSelection( range );\n\t *\n\t *\t\t// Creates selection at the given ranges\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n\t *\t\tconst selection = writer.createSelection( ranges );\n\t *\n\t *\t\t// Creates selection from the other selection.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\tconst selection = writer.createSelection( otherSelection );\n\t *\n\t *\t\t// Creates selection from the document selection.\n\t *\t\tconst selection = writer.createSelection( editor.editing.view.document.selection );\n\t *\n\t * \t\t// Creates selection at the given position.\n\t *\t\tconst position = writer.createPositionFromPath( root, path );\n\t *\t\tconst selection = writer.createSelection( position );\n\t *\n\t *\t\t// Creates collapsed selection at the position of given item and offset.\n\t *\t\tconst paragraph = writer.createContainerElement( 'paragraph' );\n\t *\t\tconst selection = writer.createSelection( paragraph, offset );\n\t *\n\t *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\n\t *\t\t// first child of that element and ends after the last child of that element.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'in' );\n\t *\n\t *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\n\t *\t\t// just after the item.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'on' );\n\t *\n\t * `Selection`'s constructor allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n\t *\n\t *\t\t// Creates backward selection.\n\t *\t\tconst selection = writer.createSelection( range, { backward: true } );\n\t *\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n\t * represented in other way, for example by applying proper CSS class.\n\t *\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n\t * (and be  properly handled by screen readers).\n\t *\n\t *\t\t// Creates fake selection with label.\n\t *\t\tconst selection = writer.createSelection( range, { fake: true, label: 'foo' } );\n\t *\n\t * @param {module:engine/view/selection~Selectable} [selectable=null]\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n\t * @param {String} [options.label] Label for the fake selection.\n\t */\n\tconstructor( selectable = null, placeOrOffset, options ) {\n\t\t/**\n\t\t * Stores all ranges that are selected.\n\t\t *\n\t\t * @protected\n\t\t * @member {Array.<module:engine/view/range~Range>}\n\t\t */\n\t\tthis._ranges = [];\n\n\t\t/**\n\t\t * Specifies whether the last added range was added as a backward or forward range.\n\t\t *\n\t\t * @protected\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis._lastRangeBackward = false;\n\n\t\t/**\n\t\t * Specifies whether selection instance is fake.\n\t\t *\n\t\t * @private\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis._isFake = false;\n\n\t\t/**\n\t\t * Fake selection's label.\n\t\t *\n\t\t * @private\n\t\t * @member {String}\n\t\t */\n\t\tthis._fakeSelectionLabel = '';\n\n\t\tthis.setTo( selectable, placeOrOffset, options );\n\t}\n\n\t/**\n\t * Returns true if selection instance is marked as `fake`.\n\t *\n\t * @see #setTo\n\t * @returns {Boolean}\n\t */\n\tget isFake() {\n\t\treturn this._isFake;\n\t}\n\n\t/**\n\t * Returns fake selection label.\n\t *\n\t * @see #setTo\n\t * @returns {String}\n\t */\n\tget fakeSelectionLabel() {\n\t\treturn this._fakeSelectionLabel;\n\t}\n\n\t/**\n\t * Selection anchor. Anchor may be described as a position where the selection starts. Together with\n\t * {@link #focus focus} they define the direction of selection, which is important\n\t * when expanding/shrinking selection. Anchor is always the start or end of the most recent added range.\n\t * It may be a bit unintuitive when there are multiple ranges in selection.\n\t *\n\t * @see #focus\n\t * @type {module:engine/view/position~Position}\n\t */\n\tget anchor() {\n\t\tif ( !this._ranges.length ) {\n\t\t\treturn null;\n\t\t}\n\t\tconst range = this._ranges[ this._ranges.length - 1 ];\n\t\tconst anchor = this._lastRangeBackward ? range.end : range.start;\n\n\t\treturn anchor.clone();\n\t}\n\n\t/**\n\t * Selection focus. Focus is a position where the selection ends.\n\t *\n\t * @see #anchor\n\t * @type {module:engine/view/position~Position}\n\t */\n\tget focus() {\n\t\tif ( !this._ranges.length ) {\n\t\t\treturn null;\n\t\t}\n\t\tconst range = this._ranges[ this._ranges.length - 1 ];\n\t\tconst focus = this._lastRangeBackward ? range.start : range.end;\n\n\t\treturn focus.clone();\n\t}\n\n\t/**\n\t * Returns whether the selection is collapsed. Selection is collapsed when there is exactly one range which is\n\t * collapsed.\n\t *\n\t * @type {Boolean}\n\t */\n\tget isCollapsed() {\n\t\treturn this.rangeCount === 1 && this._ranges[ 0 ].isCollapsed;\n\t}\n\n\t/**\n\t * Returns number of ranges in selection.\n\t *\n\t * @type {Number}\n\t */\n\tget rangeCount() {\n\t\treturn this._ranges.length;\n\t}\n\n\t/**\n\t * Specifies whether the {@link #focus} precedes {@link #anchor}.\n\t *\n\t * @type {Boolean}\n\t */\n\tget isBackward() {\n\t\treturn !this.isCollapsed && this._lastRangeBackward;\n\t}\n\n\t/**\n\t * {@link module:engine/view/editableelement~EditableElement EditableElement} instance that contains this selection, or `null`\n\t * if the selection is not inside an editable element.\n\t *\n\t * @type {module:engine/view/editableelement~EditableElement|null}\n\t */\n\tget editableElement() {\n\t\tif ( this.anchor ) {\n\t\t\treturn this.anchor.editableElement;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns an iterable that contains copies of all ranges added to the selection.\n\t *\n\t * @returns {Iterable.<module:engine/view/range~Range>}\n\t */\n\t* getRanges() {\n\t\tfor ( const range of this._ranges ) {\n\t\t\tyield range.clone();\n\t\t}\n\t}\n\n\t/**\n\t * Returns copy of the first range in the selection. First range is the one which\n\t * {@link module:engine/view/range~Range#start start} position {@link module:engine/view/position~Position#isBefore is before} start\n\t * position of all other ranges (not to confuse with the first range added to the selection).\n\t * Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/range~Range|null}\n\t */\n\tgetFirstRange() {\n\t\tlet first = null;\n\n\t\tfor ( const range of this._ranges ) {\n\t\t\tif ( !first || range.start.isBefore( first.start ) ) {\n\t\t\t\tfirst = range;\n\t\t\t}\n\t\t}\n\n\t\treturn first ? first.clone() : null;\n\t}\n\n\t/**\n\t * Returns copy of the last range in the selection. Last range is the one which {@link module:engine/view/range~Range#end end}\n\t * position {@link module:engine/view/position~Position#isAfter is after} end position of all other ranges (not to confuse\n\t * with the last range added to the selection). Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/range~Range|null}\n\t */\n\tgetLastRange() {\n\t\tlet last = null;\n\n\t\tfor ( const range of this._ranges ) {\n\t\t\tif ( !last || range.end.isAfter( last.end ) ) {\n\t\t\t\tlast = range;\n\t\t\t}\n\t\t}\n\n\t\treturn last ? last.clone() : null;\n\t}\n\n\t/**\n\t * Returns copy of the first position in the selection. First position is the position that\n\t * {@link module:engine/view/position~Position#isBefore is before} any other position in the selection ranges.\n\t * Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/position~Position|null}\n\t */\n\tgetFirstPosition() {\n\t\tconst firstRange = this.getFirstRange();\n\n\t\treturn firstRange ? firstRange.start.clone() : null;\n\t}\n\n\t/**\n\t * Returns copy of the last position in the selection. Last position is the position that\n\t * {@link module:engine/view/position~Position#isAfter is after} any other position in the selection ranges.\n\t * Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/position~Position|null}\n\t */\n\tgetLastPosition() {\n\t\tconst lastRange = this.getLastRange();\n\n\t\treturn lastRange ? lastRange.end.clone() : null;\n\t}\n\n\t/**\n\t * Checks whether, this selection is equal to given selection. Selections are equal if they have same directions,\n\t * same number of ranges and all ranges from one selection equal to a range from other selection.\n\t *\n\t * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} otherSelection\n\t * Selection to compare with.\n\t * @returns {Boolean} `true` if selections are equal, `false` otherwise.\n\t */\n\tisEqual( otherSelection ) {\n\t\tif ( this.isFake != otherSelection.isFake ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( this.isFake && this.fakeSelectionLabel != otherSelection.fakeSelectionLabel ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( this.rangeCount != otherSelection.rangeCount ) {\n\t\t\treturn false;\n\t\t} else if ( this.rangeCount === 0 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( !this.anchor.isEqual( otherSelection.anchor ) || !this.focus.isEqual( otherSelection.focus ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor ( const thisRange of this._ranges ) {\n\t\t\tlet found = false;\n\n\t\t\tfor ( const otherRange of otherSelection._ranges ) {\n\t\t\t\tif ( thisRange.isEqual( otherRange ) ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( !found ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Checks whether this selection is similar to given selection. Selections are similar if they have same directions, same\n\t * number of ranges, and all {@link module:engine/view/range~Range#getTrimmed trimmed} ranges from one selection are\n\t * equal to any trimmed range from other selection.\n\t *\n\t * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} otherSelection\n\t * Selection to compare with.\n\t * @returns {Boolean} `true` if selections are similar, `false` otherwise.\n\t */\n\tisSimilar( otherSelection ) {\n\t\tif ( this.isBackward != otherSelection.isBackward ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst numOfRangesA = count( this.getRanges() );\n\t\tconst numOfRangesB = count( otherSelection.getRanges() );\n\n\t\t// If selections have different number of ranges, they cannot be similar.\n\t\tif ( numOfRangesA != numOfRangesB ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If both selections have no ranges, they are similar.\n\t\tif ( numOfRangesA == 0 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Check if each range in one selection has a similar range in other selection.\n\t\tfor ( let rangeA of this.getRanges() ) {\n\t\t\trangeA = rangeA.getTrimmed();\n\n\t\t\tlet found = false;\n\n\t\t\tfor ( let rangeB of otherSelection.getRanges() ) {\n\t\t\t\trangeB = rangeB.getTrimmed();\n\n\t\t\t\tif ( rangeA.start.isEqual( rangeB.start ) && rangeA.end.isEqual( rangeB.end ) ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// For `rangeA`, neither range in `otherSelection` was similar. So selections are not similar.\n\t\t\tif ( !found ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// There were no ranges that weren't matched. Selections are similar.\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns the selected element. {@link module:engine/view/element~Element Element} is considered as selected if there is only\n\t * one range in the selection, and that range contains exactly one element.\n\t * Returns `null` if there is no selected element.\n\t *\n\t * @returns {module:engine/view/element~Element|null}\n\t */\n\tgetSelectedElement() {\n\t\tif ( this.rangeCount !== 1 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst range = this.getFirstRange();\n\n\t\tlet nodeAfterStart = range.start.nodeAfter;\n\t\tlet nodeBeforeEnd = range.end.nodeBefore;\n\n\t\t// Handle the situation when selection position is at the beginning / at the end of a text node.\n\t\t// In such situation `.nodeAfter` and `.nodeBefore` are `null` but the selection still might be spanning\n\t\t// over one element.\n\t\t//\n\t\t// <p>Foo{<span class=\"widget\"></span>}bar</p> vs <p>Foo[<span class=\"widget\"></span>]bar</p>\n\t\t//\n\t\t// These are basically the same selections, only the difference is if the selection position is at\n\t\t// at the end/at the beginning of a text node or just before/just after the text node.\n\t\t//\n\t\tif ( range.start.parent.is( 'text' ) && range.start.isAtEnd && range.start.parent.nextSibling ) {\n\t\t\tnodeAfterStart = range.start.parent.nextSibling;\n\t\t}\n\n\t\tif ( range.end.parent.is( 'text' ) && range.end.isAtStart && range.end.parent.previousSibling ) {\n\t\t\tnodeBeforeEnd = range.end.parent.previousSibling;\n\t\t}\n\n\t\treturn ( nodeAfterStart instanceof Element && nodeAfterStart == nodeBeforeEnd ) ? nodeAfterStart : null;\n\t}\n\n\t/**\n\t * Sets this selection's ranges and direction to the specified location based on the given\n\t * {@link module:engine/view/selection~Selectable selectable}.\n\t *\n\t *\t\t// Sets selection to the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\tselection.setTo( range );\n\t *\n\t *\t\t// Sets selection to given ranges.\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n\t *\t\tselection.setTo( range );\n\t *\n\t *\t\t// Sets selection to the other selection.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\tselection.setTo( otherSelection );\n\t *\n\t *\t \t// Sets selection to contents of DocumentSelection.\n\t *\t\tselection.setTo( editor.editing.view.document.selection );\n\t *\n\t * \t\t// Sets collapsed selection at the given position.\n\t *\t\tconst position = writer.createPositionAt( root, path );\n\t *\t\tselection.setTo( position );\n\t *\n\t * \t\t// Sets collapsed selection at the position of given item and offset.\n\t *\t\tselection.setTo( paragraph, offset );\n\t *\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n\t * that element and ends after the last child of that element.\n\t *\n\t *\t\tselection.setTo( paragraph, 'in' );\n\t *\n\t * Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends just after the item.\n\t *\n\t *\t\tselection.setTo( paragraph, 'on' );\n\t *\n\t * \t\t// Clears selection. Removes all ranges.\n\t *\t\tselection.setTo( null );\n\t *\n\t * `Selection#setTo()` method allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n\t *\n\t *\t\t// Sets selection as backward.\n\t *\t\tselection.setTo( range, { backward: true } );\n\t *\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n\t * represented in other way, for example by applying proper CSS class.\n\t *\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n\t * (and be  properly handled by screen readers).\n\t *\n\t *\t\t// Creates fake selection with label.\n\t *\t\tselection.setTo( range, { fake: true, label: 'foo' } );\n\t *\n\t * @fires change\n\t * @param {module:engine/view/selection~Selectable} selectable\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n\t * @param {String} [options.label] Label for the fake selection.\n\t */\n\tsetTo( selectable, placeOrOffset, options ) {\n\t\tif ( selectable === null ) {\n\t\t\tthis._setRanges( [] );\n\t\t\tthis._setFakeOptions( placeOrOffset );\n\t\t} else if ( selectable instanceof Selection || selectable instanceof DocumentSelection ) {\n\t\t\tthis._setRanges( selectable.getRanges(), selectable.isBackward );\n\t\t\tthis._setFakeOptions( { fake: selectable.isFake, label: selectable.fakeSelectionLabel } );\n\t\t} else if ( selectable instanceof Range ) {\n\t\t\tthis._setRanges( [ selectable ], placeOrOffset && placeOrOffset.backward );\n\t\t\tthis._setFakeOptions( placeOrOffset );\n\t\t} else if ( selectable instanceof Position ) {\n\t\t\tthis._setRanges( [ new Range( selectable ) ] );\n\t\t\tthis._setFakeOptions( placeOrOffset );\n\t\t} else if ( selectable instanceof Node ) {\n\t\t\tconst backward = !!options && !!options.backward;\n\t\t\tlet range;\n\n\t\t\tif ( placeOrOffset === undefined ) {\n\t\t\t\t/**\n\t\t\t\t * selection.setTo requires the second parameter when the first parameter is a node.\n\t\t\t\t *\n\t\t\t\t * @error view-selection-setTo-required-second-parameter\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'view-selection-setTo-required-second-parameter: ' +\n\t\t\t\t\t'selection.setTo requires the second parameter when the first parameter is a node.',\n\t\t\t\t\tthis\n\t\t\t\t);\n\t\t\t} else if ( placeOrOffset == 'in' ) {\n\t\t\t\trange = Range._createIn( selectable );\n\t\t\t} else if ( placeOrOffset == 'on' ) {\n\t\t\t\trange = Range._createOn( selectable );\n\t\t\t} else {\n\t\t\t\trange = new Range( Position._createAt( selectable, placeOrOffset ) );\n\t\t\t}\n\n\t\t\tthis._setRanges( [ range ], backward );\n\t\t\tthis._setFakeOptions( options );\n\t\t} else if ( isIterable( selectable ) ) {\n\t\t\t// We assume that the selectable is an iterable of ranges.\n\t\t\t// Array.from() is used to prevent setting ranges to the old iterable\n\t\t\tthis._setRanges( selectable, placeOrOffset && placeOrOffset.backward );\n\t\t\tthis._setFakeOptions( placeOrOffset );\n\t\t} else {\n\t\t\t/**\n\t\t\t * Cannot set selection to given place.\n\t\t\t *\n\t\t\t * @error view-selection-setTo-not-selectable\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-selection-setTo-not-selectable: Cannot set selection to given place.', this );\n\t\t}\n\n\t\tthis.fire( 'change' );\n\t}\n\n\t/**\n\t * Moves {@link #focus} to the specified location.\n\t *\n\t * The location can be specified in the same form as {@link module:engine/view/view~View#createPositionAt view.createPositionAt()}\n\t * parameters.\n\t *\n\t * @fires change\n\t * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\n\t */\n\tsetFocus( itemOrPosition, offset ) {\n\t\tif ( this.anchor === null ) {\n\t\t\t/**\n\t\t\t * Cannot set selection focus if there are no ranges in selection.\n\t\t\t *\n\t\t\t * @error view-selection-setFocus-no-ranges\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'view-selection-setFocus-no-ranges: Cannot set selection focus if there are no ranges in selection.',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\tconst newFocus = Position._createAt( itemOrPosition, offset );\n\n\t\tif ( newFocus.compareWith( this.focus ) == 'same' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst anchor = this.anchor;\n\n\t\tthis._ranges.pop();\n\n\t\tif ( newFocus.compareWith( anchor ) == 'before' ) {\n\t\t\tthis._addRange( new Range( newFocus, anchor ), true );\n\t\t} else {\n\t\t\tthis._addRange( new Range( anchor, newFocus ) );\n\t\t}\n\n\t\tthis.fire( 'change' );\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t *\t\tselection.is( 'selection' ); // -> true\n\t *\t\tselection.is( 'view:selection' ); // -> true\n\t *\n\t *\t\tselection.is( 'model:selection' ); // -> false\n\t *\t\tselection.is( 'element' ); // -> false\n\t *\t\tselection.is( 'range' ); // -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type == 'selection' || type == 'view:selection';\n\t}\n\n\t/**\n\t * Replaces all ranges that were added to the selection with given array of ranges. Last range of the array\n\t * is treated like the last added range and is used to set {@link #anchor anchor} and {@link #focus focus}.\n\t * Accepts a flag describing in which way the selection is made.\n\t *\n\t * @private\n\t * @param {Iterable.<module:engine/view/range~Range>} newRanges Iterable object of ranges to set.\n\t * @param {Boolean} [isLastBackward=false] Flag describing if last added range was selected forward - from start to end\n\t * (`false`) or backward - from end to start (`true`). Defaults to `false`.\n\t */\n\t_setRanges( newRanges, isLastBackward = false ) {\n\t\t// New ranges should be copied to prevent removing them by setting them to `[]` first.\n\t\t// Only applies to situations when selection is set to the same selection or same selection's ranges.\n\t\tnewRanges = Array.from( newRanges );\n\n\t\tthis._ranges = [];\n\n\t\tfor ( const range of newRanges ) {\n\t\t\tthis._addRange( range );\n\t\t}\n\n\t\tthis._lastRangeBackward = !!isLastBackward;\n\t}\n\n\t/**\n\t * Sets this selection instance to be marked as `fake`. A fake selection does not render as browser native selection\n\t * over selected elements and is hidden to the user. This way, no native selection UI artifacts are displayed to\n\t * the user and selection over elements can be represented in other way, for example by applying proper CSS class.\n\t *\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM (and be\n\t * properly handled by screen readers).\n\t *\n\t * @private\n\t * @param {Object} [options] Options.\n\t * @param {Boolean} [options.fake] If set to true selection will be marked as `fake`.\n\t * @param {String} [options.label=''] Fake selection label.\n\t */\n\t_setFakeOptions( options = {} ) {\n\t\tthis._isFake = !!options.fake;\n\t\tthis._fakeSelectionLabel = options.fake ? options.label || '' : '';\n\t}\n\n\t/**\n\t * Adds a range to the selection. Added range is copied. This means that passed range is not saved in the\n\t * selection instance and you can safely operate on it.\n\t *\n\t * Accepts a flag describing in which way the selection is made - passed range might be selected from\n\t * {@link module:engine/view/range~Range#start start} to {@link module:engine/view/range~Range#end end}\n\t * or from {@link module:engine/view/range~Range#end end} to {@link module:engine/view/range~Range#start start}.\n\t * The flag is used to set {@link #anchor anchor} and {@link #focus focus} properties.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-selection-range-intersects` if added range intersects\n\t * with ranges already stored in Selection instance.\n\t *\n\t * @private\n\t * @fires change\n\t * @param {module:engine/view/range~Range} range\n\t * @param {Boolean} [isBackward]\n\t */\n\t_addRange( range, isBackward = false ) {\n\t\tif ( !( range instanceof Range ) ) {\n\t\t\t/**\n\t\t\t * Selection range set to an object that is not an instance of {@link module:engine/view/range~Range}.\n\t\t\t *\n\t\t\t * @error view-selection-add-range-not-range\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'view-selection-add-range-not-range: ' +\n\t\t\t\t'Selection range set to an object that is not an instance of view.Range',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\tthis._pushRange( range );\n\t\tthis._lastRangeBackward = !!isBackward;\n\t}\n\n\t/**\n\t * Adds range to selection - creates copy of given range so it can be safely used and modified.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-selection-range-intersects` if added range intersects\n\t * with ranges already stored in selection instance.\n\t *\n\t * @private\n\t * @param {module:engine/view/range~Range} range\n\t */\n\t_pushRange( range ) {\n\t\tfor ( const storedRange of this._ranges ) {\n\t\t\tif ( range.isIntersecting( storedRange ) ) {\n\t\t\t\t/**\n\t\t\t\t * Trying to add a range that intersects with another range from selection.\n\t\t\t\t *\n\t\t\t\t * @error view-selection-range-intersects\n\t\t\t\t * @param {module:engine/view/range~Range} addedRange Range that was added to the selection.\n\t\t\t\t * @param {module:engine/view/range~Range} intersectingRange Range from selection that intersects with `addedRange`.\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'view-selection-range-intersects: Trying to add a range that intersects with another range from selection.',\n\t\t\t\t\tthis,\n\t\t\t\t\t{ addedRange: range, intersectingRange: storedRange }\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tthis._ranges.push( new Range( range.start, range.end ) );\n\t}\n\n\t/**\n\t * Fired whenever selection ranges are changed through {@link ~Selection Selection API}.\n\t *\n\t * @event change\n\t */\n}\n\nmix( Selection, EmitterMixin );\n\n/**\n * An entity that is used to set selection.\n *\n * See also {@link module:engine/view/selection~Selection#setTo}\n *\n * @typedef {\n *    module:engine/view/selection~Selection|\n *    module:engine/view/documentselection~DocumentSelection|\n *    module:engine/view/position~Position|\n *    Iterable.<module:engine/view/range~Range>|\n *    module:engine/view/range~Range|\n *    module:engine/view/item~Item|\n *    null\n * } module:engine/view/selection~Selectable\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/documentselection\n */\n\nimport Selection from './selection';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\n\n/**\n * Class representing the document selection in the view.\n *\n * Its instance is available in {@link module:engine/view/document~Document#selection `Document#selection`}.\n *\n * It is similar to {@link module:engine/view/selection~Selection} but\n * it has a read-only API and can be modified only by the writer available in\n * the {@link module:engine/view/view~View#change `View#change()`} block\n * (so via {@link module:engine/view/downcastwriter~DowncastWriter#setSelection `DowncastWriter#setSelection()`}).\n */\nexport default class DocumentSelection {\n\t/**\n\t * Creates new DocumentSelection instance.\n\t *\n\t * \t\t// Creates empty selection without ranges.\n\t *\t\tconst selection = new DocumentSelection();\n\t *\n\t *\t\t// Creates selection at the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\tconst selection = new DocumentSelection( range );\n\t *\n\t *\t\t// Creates selection at the given ranges\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( start2, end2 ) ];\n\t *\t\tconst selection = new DocumentSelection( ranges );\n\t *\n\t *\t\t// Creates selection from the other selection.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\tconst selection = new DocumentSelection( otherSelection );\n\t *\n\t * \t\t// Creates selection at the given position.\n\t *\t\tconst position = writer.createPositionAt( root, offset );\n\t *\t\tconst selection = new DocumentSelection( position );\n\t *\n\t *\t\t// Creates collapsed selection at the position of given item and offset.\n\t *\t\tconst paragraph = writer.createContainerElement( 'paragraph' );\n\t *\t\tconst selection = new DocumentSelection( paragraph, offset );\n\t *\n\t *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\n\t *\t\t// first child of that element and ends after the last child of that element.\n\t *\t\tconst selection = new DocumentSelection( paragraph, 'in' );\n\t *\n\t *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\n\t *\t\t// just after the item.\n\t *\t\tconst selection = new DocumentSelection( paragraph, 'on' );\n\t *\n\t * `Selection`'s constructor allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n\t *\n\t *\t\t// Creates backward selection.\n\t *\t\tconst selection = new DocumentSelection( range, { backward: true } );\n\t *\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n\t * represented in other way, for example by applying proper CSS class.\n\t *\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n\t * (and be  properly handled by screen readers).\n\t *\n\t *\t\t// Creates fake selection with label.\n\t *\t\tconst selection = new DocumentSelection( range, { fake: true, label: 'foo' } );\n\t *\n\t * @param {module:engine/view/selection~Selectable} [selectable=null]\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n\t * @param {String} [options.label] Label for the fake selection.\n\t */\n\tconstructor( selectable = null, placeOrOffset, options ) {\n\t\t/**\n\t\t * Selection is used internally (`DocumentSelection` is a proxy to that selection).\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/view/selection~Selection}\n\t\t */\n\t\tthis._selection = new Selection();\n\n\t\t// Delegate change event to be fired on DocumentSelection instance.\n\t\tthis._selection.delegate( 'change' ).to( this );\n\n\t\t// Set selection data.\n\t\tthis._selection.setTo( selectable, placeOrOffset, options );\n\t}\n\n\t/**\n\t * Returns true if selection instance is marked as `fake`.\n\t *\n\t * @see #_setTo\n\t * @returns {Boolean}\n\t */\n\tget isFake() {\n\t\treturn this._selection.isFake;\n\t}\n\n\t/**\n\t * Returns fake selection label.\n\t *\n\t * @see #_setTo\n\t * @returns {String}\n\t */\n\tget fakeSelectionLabel() {\n\t\treturn this._selection.fakeSelectionLabel;\n\t}\n\n\t/**\n\t * Selection anchor. Anchor may be described as a position where the selection starts. Together with\n\t * {@link #focus focus} they define the direction of selection, which is important\n\t * when expanding/shrinking selection. Anchor is always the start or end of the most recent added range.\n\t * It may be a bit unintuitive when there are multiple ranges in selection.\n\t *\n\t * @see #focus\n\t * @type {module:engine/view/position~Position}\n\t */\n\tget anchor() {\n\t\treturn this._selection.anchor;\n\t}\n\n\t/**\n\t * Selection focus. Focus is a position where the selection ends.\n\t *\n\t * @see #anchor\n\t * @type {module:engine/view/position~Position}\n\t */\n\tget focus() {\n\t\treturn this._selection.focus;\n\t}\n\n\t/**\n\t * Returns whether the selection is collapsed. Selection is collapsed when there is exactly one range which is\n\t * collapsed.\n\t *\n\t * @type {Boolean}\n\t */\n\tget isCollapsed() {\n\t\treturn this._selection.isCollapsed;\n\t}\n\n\t/**\n\t * Returns number of ranges in selection.\n\t *\n\t * @type {Number}\n\t */\n\tget rangeCount() {\n\t\treturn this._selection.rangeCount;\n\t}\n\n\t/**\n\t * Specifies whether the {@link #focus} precedes {@link #anchor}.\n\t *\n\t * @type {Boolean}\n\t */\n\tget isBackward() {\n\t\treturn this._selection.isBackward;\n\t}\n\n\t/**\n\t * {@link module:engine/view/editableelement~EditableElement EditableElement} instance that contains this selection, or `null`\n\t * if the selection is not inside an editable element.\n\t *\n\t * @type {module:engine/view/editableelement~EditableElement|null}\n\t */\n\tget editableElement() {\n\t\treturn this._selection.editableElement;\n\t}\n\n\t/**\n\t * Used for the compatibility with the {@link module:engine/view/selection~Selection#isEqual} method.\n\t *\n\t * @protected\n\t */\n\tget _ranges() {\n\t\treturn this._selection._ranges;\n\t}\n\n\t/**\n\t * Returns an iterable that contains copies of all ranges added to the selection.\n\t *\n\t * @returns {Iterable.<module:engine/view/range~Range>}\n\t */\n\t* getRanges() {\n\t\tyield* this._selection.getRanges();\n\t}\n\n\t/**\n\t * Returns copy of the first range in the selection. First range is the one which\n\t * {@link module:engine/view/range~Range#start start} position {@link module:engine/view/position~Position#isBefore is before} start\n\t * position of all other ranges (not to confuse with the first range added to the selection).\n\t * Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/range~Range|null}\n\t */\n\tgetFirstRange() {\n\t\treturn this._selection.getFirstRange();\n\t}\n\n\t/**\n\t * Returns copy of the last range in the selection. Last range is the one which {@link module:engine/view/range~Range#end end}\n\t * position {@link module:engine/view/position~Position#isAfter is after} end position of all other ranges (not to confuse\n\t * with the last range added to the selection). Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/range~Range|null}\n\t */\n\tgetLastRange() {\n\t\treturn this._selection.getLastRange();\n\t}\n\n\t/**\n\t * Returns copy of the first position in the selection. First position is the position that\n\t * {@link module:engine/view/position~Position#isBefore is before} any other position in the selection ranges.\n\t * Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/position~Position|null}\n\t */\n\tgetFirstPosition() {\n\t\treturn this._selection.getFirstPosition();\n\t}\n\n\t/**\n\t * Returns copy of the last position in the selection. Last position is the position that\n\t * {@link module:engine/view/position~Position#isAfter is after} any other position in the selection ranges.\n\t * Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/position~Position|null}\n\t */\n\tgetLastPosition() {\n\t\treturn this._selection.getLastPosition();\n\t}\n\n\t/**\n\t * Returns the selected element. {@link module:engine/view/element~Element Element} is considered as selected if there is only\n\t * one range in the selection, and that range contains exactly one element.\n\t * Returns `null` if there is no selected element.\n\t *\n\t * @returns {module:engine/view/element~Element|null}\n\t */\n\tgetSelectedElement() {\n\t\treturn this._selection.getSelectedElement();\n\t}\n\n\t/**\n\t * Checks whether, this selection is equal to given selection. Selections are equal if they have same directions,\n\t * same number of ranges and all ranges from one selection equal to a range from other selection.\n\t *\n\t * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} otherSelection\n\t * Selection to compare with.\n\t * @returns {Boolean} `true` if selections are equal, `false` otherwise.\n\t */\n\tisEqual( otherSelection ) {\n\t\treturn this._selection.isEqual( otherSelection );\n\t}\n\n\t/**\n\t * Checks whether this selection is similar to given selection. Selections are similar if they have same directions, same\n\t * number of ranges, and all {@link module:engine/view/range~Range#getTrimmed trimmed} ranges from one selection are\n\t * equal to any trimmed range from other selection.\n\t *\n\t * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} otherSelection\n\t * Selection to compare with.\n\t * @returns {Boolean} `true` if selections are similar, `false` otherwise.\n\t */\n\tisSimilar( otherSelection ) {\n\t\treturn this._selection.isSimilar( otherSelection );\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t *\t\tdocSelection.is( 'selection' ); // -> true\n\t *\t\tdocSelection.is( 'documentSelection' ); // -> true\n\t *\t\tdocSelection.is( 'view:selection' ); // -> true\n\t *\t\tdocSelection.is( 'view:documentSelection' ); // -> true\n\t *\n\t *\t\tdocSelection.is( 'model:documentSelection' ); // -> false\n\t *\t\tdocSelection.is( 'element' ); // -> false\n\t *\t\tdocSelection.is( 'node' ); // -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type == 'selection' ||\n\t\t\ttype == 'documentSelection' ||\n\t\t\ttype == 'view:selection' ||\n\t\t\ttype == 'view:documentSelection';\n\t}\n\n\t/**\n\t * Sets this selection's ranges and direction to the specified location based on the given\n\t * {@link module:engine/view/selection~Selectable selectable}.\n\t *\n\t *\t\t// Sets selection to the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\tdocumentSelection._setTo( range );\n\t *\n\t *\t\t// Sets selection to given ranges.\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( start2, end2 ) ];\n\t *\t\tdocumentSelection._setTo( range );\n\t *\n\t *\t\t// Sets selection to the other selection.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\tdocumentSelection._setTo( otherSelection );\n\t *\n\t * \t\t// Sets collapsed selection at the given position.\n\t *\t\tconst position = writer.createPositionAt( root, offset );\n\t *\t\tdocumentSelection._setTo( position );\n\t *\n\t * \t\t// Sets collapsed selection at the position of given item and offset.\n\t *\t\tdocumentSelection._setTo( paragraph, offset );\n\t *\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n\t * that element and ends after the last child of that element.\n\t *\n\t *\t\tdocumentSelection._setTo( paragraph, 'in' );\n\t *\n\t * Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends just after the item.\n\t *\n\t *\t\tdocumentSelection._setTo( paragraph, 'on' );\n\t *\n\t * \t\t// Clears selection. Removes all ranges.\n\t *\t\tdocumentSelection._setTo( null );\n\t *\n\t * `Selection#_setTo()` method allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n\t *\n\t *\t\t// Sets selection as backward.\n\t *\t\tdocumentSelection._setTo( range, { backward: true } );\n\t *\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n\t * represented in other way, for example by applying proper CSS class.\n\t *\n\t * Additionally fake's selection label can be provided. It will be used to des cribe fake selection in DOM\n\t * (and be  properly handled by screen readers).\n\t *\n\t *\t\t// Creates fake selection with label.\n\t *\t\tdocumentSelection._setTo( range, { fake: true, label: 'foo' } );\n\t *\n\t * @protected\n\t * @fires change\n\t * @param {module:engine/view/selection~Selectable} selectable\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n\t * @param {String} [options.label] Label for the fake selection.\n\t */\n\t_setTo( selectable, placeOrOffset, options ) {\n\t\tthis._selection.setTo( selectable, placeOrOffset, options );\n\t}\n\n\t/**\n\t * Moves {@link #focus} to the specified location.\n\t *\n\t * The location can be specified in the same form as {@link module:engine/view/view~View#createPositionAt view.createPositionAt()}\n\t * parameters.\n\t *\n\t * @protected\n\t * @fires change\n\t * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\n\t */\n\t_setFocus( itemOrPosition, offset ) {\n\t\tthis._selection.setFocus( itemOrPosition, offset );\n\t}\n\n\t/**\n\t * Fired whenever selection ranges are changed through {@link ~DocumentSelection Selection API}.\n\t *\n\t * @event change\n\t */\n}\n\nmix( DocumentSelection, EmitterMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/document\n */\n\nimport DocumentSelection from './documentselection';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport StylesMap from './stylesmap';\n\n// @if CK_DEBUG_ENGINE // const { logDocument } = require( '../dev-utils/utils' );\n\n/**\n * Document class creates an abstract layer over the content editable area, contains a tree of view elements and\n * {@link module:engine/view/documentselection~DocumentSelection view selection} associated with this document.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class Document {\n\t/**\n\t * Creates a Document instance.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Selection done on this document.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/documentselection~DocumentSelection} module:engine/view/document~Document#selection\n\t\t */\n\t\tthis.selection = new DocumentSelection();\n\n\t\t/**\n\t\t * Roots of the view tree. Collection of the {@link module:engine/view/element~Element view elements}.\n\t\t *\n\t\t * View roots are created as a result of binding between {@link module:engine/view/document~Document#roots} and\n\t\t * {@link module:engine/model/document~Document#roots} and this is handled by\n\t\t * {@link module:engine/controller/editingcontroller~EditingController}, so to create view root we need to create\n\t\t * model root using {@link module:engine/model/document~Document#createRoot}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/collection~Collection} module:engine/view/document~Document#roots\n\t\t */\n\t\tthis.roots = new Collection( { idProperty: 'rootName' } );\n\n\t\t/**\n\t\t * Defines whether document is in read-only mode.\n\t\t *\n\t\t * When document is read-ony then all roots are read-only as well and caret placed inside this root is hidden.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isReadOnly\n\t\t */\n\t\tthis.set( 'isReadOnly', false );\n\n\t\t/**\n\t\t * True if document is focused.\n\t\t *\n\t\t * This property is updated by the {@link module:engine/view/observer/focusobserver~FocusObserver}.\n\t\t * If the {@link module:engine/view/observer/focusobserver~FocusObserver} is disabled this property will not change.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} module:engine/view/document~Document#isFocused\n\t\t */\n\t\tthis.set( 'isFocused', false );\n\n\t\t/**\n\t\t * True if composition is in progress inside the document.\n\t\t *\n\t\t * This property is updated by the {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n\t\t * If the {@link module:engine/view/observer/compositionobserver~CompositionObserver} is disabled this property will not change.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} module:engine/view/document~Document#isComposing\n\t\t */\n\t\tthis.set( 'isComposing', false );\n\n\t\t/**\n\t\t * Post-fixer callbacks registered to the view document.\n\t\t *\n\t\t * @private\n\t\t * @member {Set}\n\t\t */\n\t\tthis._postFixers = new Set();\n\t}\n\n\t/**\n\t * Gets a {@link module:engine/view/document~Document#roots view root element} with the specified name. If the name is not\n\t * specific \"main\" root is returned.\n\t *\n\t * @param {String} [name='main'] Name of the root.\n\t * @returns {module:engine/view/rooteditableelement~RootEditableElement|null} The view root element with the specified name\n\t * or null when there is no root of given name.\n\t */\n\tgetRoot( name = 'main' ) {\n\t\treturn this.roots.get( name );\n\t}\n\n\t/**\n\t * Allows registering post-fixer callbacks. A post-fixers mechanism allows to update the view tree just before it is rendered\n\t * to the DOM.\n\t *\n\t * Post-fixers are executed right after all changes from the outermost change block were applied but\n\t * before the {@link module:engine/view/view~View#event:render render event} is fired. If a post-fixer callback made\n\t * a change, it should return `true`. When this happens, all post-fixers are fired again to check if something else should\n\t * not be fixed in the new document tree state.\n\t *\n\t * View post-fixers are useful when you want to apply some fixes whenever the view structure changes. Keep in mind that\n\t * changes executed in a view post-fixer should not break model-view mapping.\n\t *\n\t * The types of changes which should be safe:\n\t *\n\t * * adding or removing attribute from elements,\n\t * * changes inside of {@link module:engine/view/uielement~UIElement UI elements},\n\t * * {@link module:engine/model/differ~Differ#refreshItem marking some of the model elements to be re-converted}.\n\t *\n\t * Try to avoid changes which touch view structure:\n\t *\n\t * * you should not add or remove nor wrap or unwrap any view elements,\n\t * * you should not change the editor data model in a view post-fixer.\n\t *\n\t * As a parameter, a post-fixer callback receives a {@link module:engine/view/downcastwriter~DowncastWriter downcast writer}.\n\t *\n\t * Typically, a post-fixer will look like this:\n\t *\n\t *\t\teditor.editing.view.document.registerPostFixer( writer => {\n\t *\t\t\tif ( checkSomeCondition() ) {\n\t *\t\t\t\twriter.doSomething();\n\t *\n\t *\t\t\t\t// Let other post-fixers know that something changed.\n\t *\t\t\t\treturn true;\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * Note that nothing happens right after you register a post-fixer (e.g. execute such a code in the console).\n\t * That is because adding a post-fixer does not execute it.\n\t * The post-fixer will be executed as soon as any change in the document needs to cause its rendering.\n\t * If you want to re-render the editor's view after registering the post-fixer then you should do it manually by calling\n\t * {@link module:engine/view/view~View#forceRender `view.forceRender()`}.\n\t *\n\t * If you need to register a callback which is executed when DOM elements are already updated,\n\t * use {@link module:engine/view/view~View#event:render render event}.\n\t *\n\t * @param {Function} postFixer\n\t */\n\tregisterPostFixer( postFixer ) {\n\t\tthis._postFixers.add( postFixer );\n\t}\n\n\t/**\n\t * Destroys this instance. Makes sure that all observers are destroyed and listeners removed.\n\t */\n\tdestroy() {\n\t\tthis.roots.map( root => root.destroy() );\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Adds a style processor normalization rules.\n\t *\n\t * The available style processors:\n\t *\n\t * * background: {@link module:engine/view/styles/background~addBackgroundRules}\n\t * * border: {@link module:engine/view/styles/border~addBorderRules}\n\t * * margin: {@link module:engine/view/styles/margin~addMarginRules}\n\t * * padding: {@link module:engine/view/styles/padding~addPaddingRules}\n\t *\n\t * @param {Function} callback\n\t */\n\taddStyleProcessorRules( callback ) {\n\t\tcallback( StylesMap._styleProcessor );\n\t}\n\n\t/**\n\t * Performs post-fixer loops. Executes post-fixer callbacks as long as none of them has done any changes to the model.\n\t *\n\t * @protected\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n\t */\n\t_callPostFixers( writer ) {\n\t\tlet wasFixed = false;\n\n\t\tdo {\n\t\t\tfor ( const callback of this._postFixers ) {\n\t\t\t\twasFixed = callback( writer );\n\n\t\t\t\tif ( wasFixed ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} while ( wasFixed );\n\t}\n\n\t/**\n\t * Event fired whenever document content layout changes. It is fired whenever content is\n\t * {@link module:engine/view/view~View#event:render rendered}, but should be also fired by observers in case of\n\t * other actions which may change layout, for instance when image loads.\n\t *\n\t * @event layoutChanged\n\t */\n\n\t// @if CK_DEBUG_ENGINE // log( version ) {\n\t// @if CK_DEBUG_ENGINE //\tlogDocument( this, version );\n\t// @if CK_DEBUG_ENGINE // }\n}\n\nmix( Document, ObservableMixin );\n\n/**\n * Enum representing type of the change.\n *\n * Possible values:\n *\n * * `children` - for child list changes,\n * * `attributes` - for element attributes changes,\n * * `text` - for text nodes changes.\n *\n * @typedef {String} module:engine/view/document~ChangeType\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/attributeelement\n */\n\nimport Element from './element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n// Default attribute priority.\nconst DEFAULT_PRIORITY = 10;\n\n/**\n * Attribute elements are used to represent formatting elements in the view (think – `<b>`, `<span style=\"font-size: 2em\">`, etc.).\n * Most often they are created when downcasting model text attributes.\n *\n * Editing engine does not define a fixed HTML DTD. This is why a feature developer needs to choose between various\n * types (container element, {@link module:engine/view/attributeelement~AttributeElement attribute element},\n * {@link module:engine/view/emptyelement~EmptyElement empty element}, etc) when developing a feature.\n *\n * To create a new attribute element instance use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createAttributeElement `DowncastWriter#createAttributeElement()`} method.\n *\n * @extends module:engine/view/element~Element\n */\nexport default class AttributeElement extends Element {\n\t/**\n\t * Creates an attribute element.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#createAttributeElement\n\t * @see module:engine/view/element~Element\n\t * @protected\n\t */\n\tconstructor( name, attrs, children ) {\n\t\tsuper( name, attrs, children );\n\n\t\t/**\n\t\t * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n\t\t *\n\t\t * @method #getFillerOffset\n\t\t * @returns {Number|null} Block filler offset or `null` if block filler is not needed.\n\t\t */\n\t\tthis.getFillerOffset = getFillerOffset;\n\n\t\t/**\n\t\t * Element priority. Decides in what order elements are wrapped by {@link module:engine/view/downcastwriter~DowncastWriter}.\n\t\t *\n\t\t * @protected\n\t\t * @member {Number}\n\t\t */\n\t\tthis._priority = DEFAULT_PRIORITY;\n\n\t\t/**\n\t\t * Element identifier. If set, it is used by {@link module:engine/view/element~Element#isSimilar},\n\t\t * and then two elements are considered similar if, and only if they have the same `_id`.\n\t\t *\n\t\t * @protected\n\t\t * @member {String|Number}\n\t\t */\n\t\tthis._id = null;\n\n\t\t/**\n\t\t * Keeps all the attribute elements that have the same {@link module:engine/view/attributeelement~AttributeElement#id ids}\n\t\t * and still exist in the view tree.\n\t\t *\n\t\t * This property is managed by {@link module:engine/view/downcastwriter~DowncastWriter}.\n\t\t *\n\t\t * @protected\n\t\t * @member {Set.<module:engine/view/attributeelement~AttributeElement>|null}\n\t\t */\n\t\tthis._clonesGroup = null;\n\t}\n\n\t/**\n\t * Element priority. Decides in what order elements are wrapped by {@link module:engine/view/downcastwriter~DowncastWriter}.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget priority() {\n\t\treturn this._priority;\n\t}\n\n\t/**\n\t * Element identifier. If set, it is used by {@link module:engine/view/element~Element#isSimilar},\n\t * and then two elements are considered similar if, and only if they have the same `id`.\n\t *\n\t * @readonly\n\t * @type {String|Number}\n\t */\n\tget id() {\n\t\treturn this._id;\n\t}\n\n\t/**\n\t * Returns all {@link module:engine/view/attributeelement~AttributeElement attribute elements} that has the\n\t * same {@link module:engine/view/attributeelement~AttributeElement#id id} and are in the view tree (were not removed).\n\t *\n\t * Note: If this element has been removed from the tree, returned set will not include it.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError attribute-element-get-elements-with-same-id-no-id}\n\t * if this element has no `id`.\n\t *\n\t * @returns {Set.<module:engine/view/attributeelement~AttributeElement>} Set containing all the attribute elements\n\t * with the same `id` that were added and not removed from the view tree.\n\t */\n\tgetElementsWithSameId() {\n\t\tif ( this.id === null ) {\n\t\t\t/**\n\t\t\t * Cannot get elements with the same id for an attribute element without id.\n\t\t\t *\n\t\t\t * @error attribute-element-get-elements-with-same-id-no-id\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'attribute-element-get-elements-with-same-id-no-id: ' +\n\t\t\t\t'Cannot get elements with the same id for an attribute element without id.',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\treturn new Set( this._clonesGroup );\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\tattributeElement.is( 'attributeElement' ); // -> true\n\t *\t\tattributeElement.is( 'element' ); // -> true\n\t *\t\tattributeElement.is( 'node' ); // -> true\n\t *\t\tattributeElement.is( 'view:attributeElement' ); // -> true\n\t *\t\tattributeElement.is( 'view:element' ); // -> true\n\t *\t\tattributeElement.is( 'view:node' ); // -> true\n\t *\n\t *\t\tattributeElement.is( 'model:element' ); // -> false\n\t *\t\tattributeElement.is( 'documentFragment' ); // -> false\n\t *\n\t * Assuming that the object being checked is an attribute element, you can also check its\n\t * {@link module:engine/view/attributeelement~AttributeElement#name name}:\n\t *\n\t *\t\tattributeElement.is( 'b' ); // -> true if this is a bold element\n\t *\t\tattributeElement.is( 'attributeElement', 'b' ); // -> same as above\n\t *\t\ttext.is( 'b' ); -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type Type to check when `name` parameter is present.\n\t * Otherwise, it acts like the `name` parameter.\n\t * @param {String} [name] Element name.\n\t * @returns {Boolean}\n\t */\n\tis( type, name = null ) {\n\t\tconst cutType = type && type.replace( /^view:/, '' );\n\n\t\tif ( !name ) {\n\t\t\treturn cutType == 'attributeElement' || super.is( type );\n\t\t} else {\n\t\t\treturn ( cutType == 'attributeElement' && name == this.name ) || super.is( type, name );\n\t\t}\n\t}\n\n\t/**\n\t * Checks if this element is similar to other element.\n\t *\n\t * If none of elements has set {@link module:engine/view/attributeelement~AttributeElement#id}, then both elements\n\t * should have the same name, attributes and priority to be considered as similar. Two similar elements can contain\n\t * different set of children nodes.\n\t *\n\t * If at least one element has {@link module:engine/view/attributeelement~AttributeElement#id} set, then both\n\t * elements have to have the same {@link module:engine/view/attributeelement~AttributeElement#id} value to be\n\t * considered similar.\n\t *\n\t * Similarity is important for {@link module:engine/view/downcastwriter~DowncastWriter}. For example:\n\t *\n\t * * two following similar elements can be merged together into one, longer element,\n\t * * {@link module:engine/view/downcastwriter~DowncastWriter#unwrap} checks similarity of passed element and processed element to\n\t * decide whether processed element should be unwrapped,\n\t * * etc.\n\t *\n\t * @param {module:engine/view/element~Element} otherElement\n\t * @returns {Boolean}\n\t */\n\tisSimilar( otherElement ) {\n\t\t// If any element has an `id` set, just compare the ids.\n\t\tif ( this.id !== null || otherElement.id !== null ) {\n\t\t\treturn this.id === otherElement.id;\n\t\t}\n\n\t\treturn super.isSimilar( otherElement ) && this.priority == otherElement.priority;\n\t}\n\n\t/**\n\t * Clones provided element with priority.\n\t *\n\t * @protected\n\t * @param {Boolean} deep If set to `true` clones element and all its children recursively. When set to `false`,\n\t * element will be cloned without any children.\n\t * @returns {module:engine/view/attributeelement~AttributeElement} Clone of this element.\n\t */\n\t_clone( deep ) {\n\t\tconst cloned = super._clone( deep );\n\n\t\t// Clone priority too.\n\t\tcloned._priority = this._priority;\n\n\t\t// And id too.\n\t\tcloned._id = this._id;\n\n\t\treturn cloned;\n\t}\n}\n\n/**\n * Default attribute priority.\n *\n * @member {Number} module:engine/view/attributeelement~AttributeElement.DEFAULT_PRIORITY\n */\nAttributeElement.DEFAULT_PRIORITY = DEFAULT_PRIORITY;\n\n// Returns block {@link module:engine/view/filler~Filler filler} offset or `null` if block filler is not needed.\n//\n// @returns {Number|null} Block filler offset or `null` if block filler is not needed.\nfunction getFillerOffset() {\n\t// <b>foo</b> does not need filler.\n\tif ( nonUiChildrenCount( this ) ) {\n\t\treturn null;\n\t}\n\n\tlet element = this.parent;\n\n\t// <p><b></b></p> needs filler -> <p><b><br></b></p>\n\twhile ( element && element.is( 'attributeElement' ) ) {\n\t\tif ( nonUiChildrenCount( element ) > 1 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\telement = element.parent;\n\t}\n\n\tif ( !element || nonUiChildrenCount( element ) > 1 ) {\n\t\treturn null;\n\t}\n\n\t// Render block filler at the end of element (after all ui elements).\n\treturn this.childCount;\n}\n\n// Returns total count of children that are not {@link module:engine/view/uielement~UIElement UIElements}.\n//\n// @param {module:engine/view/element~Element} element\n// @returns {Number}\nfunction nonUiChildrenCount( element ) {\n\treturn Array.from( element.getChildren() ).filter( element => !element.is( 'uiElement' ) ).length;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/emptyelement\n */\n\nimport Element from './element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Node from './node';\n\n/**\n * Empty element class. It is used to represent elements that cannot contain any child nodes (for example `<img>` elements).\n *\n * To create a new empty element use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createEmptyElement `downcastWriter#createEmptyElement()`} method.\n *\n * @extends module:engine/view/element~Element\n */\nexport default class EmptyElement extends Element {\n\t/**\n\t * Creates new instance of EmptyElement.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-emptyelement-cannot-add` when third parameter is passed,\n\t * to inform that usage of EmptyElement is incorrect (adding child nodes to EmptyElement is forbidden).\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#createEmptyElement\n\t * @protected\n\t * @param {String} name Node name.\n\t * @param {Object|Iterable} [attributes] Collection of attributes.\n\t */\n\tconstructor( name, attributes, children ) {\n\t\tsuper( name, attributes, children );\n\n\t\t/**\n\t\t * Returns `null` because filler is not needed for EmptyElements.\n\t\t *\n\t\t * @method #getFillerOffset\n\t\t * @returns {null} Always returns null.\n\t\t */\n\t\tthis.getFillerOffset = getFillerOffset;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\temptyElement.is( 'emptyElement' ); // -> true\n\t *\t\temptyElement.is( 'element' ); // -> true\n\t *\t\temptyElement.is( 'node' ); // -> true\n\t *\t\temptyElement.is( 'view:emptyElement' ); // -> true\n\t *\t\temptyElement.is( 'view:element' ); // -> true\n\t *\t\temptyElement.is( 'view:node' ); // -> true\n\t *\n\t *\t\temptyElement.is( 'model:element' ); // -> false\n\t *\t\temptyElement.is( 'documentFragment' ); // -> false\n\t *\n\t * Assuming that the object being checked is an empty element, you can also check its\n\t * {@link module:engine/view/emptyelement~EmptyElement#name name}:\n\t *\n\t *\t\temptyElement.is( 'img' ); // -> true if this is a img element\n\t *\t\temptyElement.is( 'emptyElement', 'img' ); // -> same as above\n\t *\t\ttext.is( 'img' ); -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type Type to check when `name` parameter is present.\n\t * Otherwise, it acts like the `name` parameter.\n\t * @param {String} [name] Element name.\n\t * @returns {Boolean}\n\t */\n\tis( type, name = null ) {\n\t\tconst cutType = type.replace( /^view:/, '' );\n\t\tif ( !name ) {\n\t\t\treturn cutType == 'emptyElement' || super.is( type );\n\t\t} else {\n\t\t\treturn ( cutType == 'emptyElement' && name == this.name ) || super.is( type, name );\n\t\t}\n\t}\n\n\t/**\n\t * Overrides {@link module:engine/view/element~Element#_insertChild} method.\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-emptyelement-cannot-add` to prevent\n\t * adding any child nodes to EmptyElement.\n\t *\n\t * @protected\n\t */\n\t_insertChild( index, nodes ) {\n\t\tif ( nodes && ( nodes instanceof Node || Array.from( nodes ).length > 0 ) ) {\n\t\t\t/**\n\t\t\t * Cannot add children to {@link module:engine/view/emptyelement~EmptyElement}.\n\t\t\t *\n\t\t\t * @error view-emptyelement-cannot-add\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'view-emptyelement-cannot-add: Cannot add child nodes to EmptyElement instance.',\n\t\t\t\t[ this, nodes ]\n\t\t\t);\n\t\t}\n\t}\n}\n\n// Returns `null` because block filler is not needed for EmptyElements.\n//\n// @returns {null}\nfunction getFillerOffset() {\n\treturn null;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals navigator:false */\n\n/**\n * @module utils/env\n */\n\nconst userAgent = navigator.userAgent.toLowerCase();\n\n/**\n * A namespace containing environment and browser information.\n *\n * @namespace\n */\nconst env = {\n\t/**\n\t * Indicates that the application is running on Macintosh.\n\t *\n\t * @static\n\t * @type {Boolean}\n\t */\n\tisMac: isMac( userAgent ),\n\n\t/**\n\t * Indicates that the application is running in Microsoft Edge.\n\t *\n\t * @static\n\t * @type {Boolean}\n\t */\n\tisEdge: isEdge( userAgent ),\n\n\t/**\n\t * Indicates that the application is running in Firefox (Gecko).\n\t *\n\t * @static\n\t * @type {Boolean}\n\t */\n\tisGecko: isGecko( userAgent ),\n\n\t/**\n\t * Indicates that the application is running in Safari.\n\t *\n\t * @static\n\t * @type {Boolean}\n\t */\n\tisSafari: isSafari( userAgent ),\n\n\t/**\n\t * Indicates that the application is running on Android mobile device.\n\t *\n\t * @static\n\t * @type {Boolean}\n\t */\n\tisAndroid: isAndroid( userAgent ),\n\n\t/**\n\t * Environment features information.\n\t *\n\t * @memberOf module:utils/env~env\n\t * @namespace\n\t */\n\tfeatures: {\n\t\t/**\n\t\t * Indicates that the environment supports ES2018 Unicode property escapes — like `\\p{P}` or `\\p{L}`.\n\t\t * More information about unicode properties might be found\n\t\t * [in Unicode Standard Annex #44](https://www.unicode.org/reports/tr44/#GC_Values_Table).\n\t\t *\n\t\t * @type {Boolean}\n\t\t */\n\t\tisRegExpUnicodePropertySupported: isRegExpUnicodePropertySupported()\n\t}\n};\n\nexport default env;\n\n/**\n * Checks if User Agent represented by the string is running on Macintosh.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is running on Macintosh or not.\n */\nexport function isMac( userAgent ) {\n\treturn userAgent.indexOf( 'macintosh' ) > -1;\n}\n\n/**\n * Checks if User Agent represented by the string is Microsoft Edge.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Edge or not.\n */\nexport function isEdge( userAgent ) {\n\treturn !!userAgent.match( /edge\\/(\\d+.?\\d*)/ );\n}\n\n/**\n * Checks if User Agent represented by the string is Firefox (Gecko).\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Firefox or not.\n */\nexport function isGecko( userAgent ) {\n\treturn !!userAgent.match( /gecko\\/\\d+/ );\n}\n\n/**\n * Checks if User Agent represented by the string is Safari.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Safari or not.\n */\nexport function isSafari( userAgent ) {\n\treturn userAgent.indexOf( ' applewebkit/' ) > -1 && userAgent.indexOf( 'chrome' ) === -1;\n}\n\n/**\n * Checks if User Agent represented by the string is Android mobile device.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Safari or not.\n */\nexport function isAndroid( userAgent ) {\n\treturn userAgent.indexOf( 'android' ) > -1;\n}\n\n/**\n * Checks if the current environment supports ES2018 Unicode properties like `\\p{P}` or `\\p{L}`.\n * More information about unicode properties might be found\n * [in Unicode Standard Annex #44](https://www.unicode.org/reports/tr44/#GC_Values_Table).\n *\n * @returns {Boolean}\n */\nexport function isRegExpUnicodePropertySupported() {\n\tlet isSupported = false;\n\n\t// Feature detection for Unicode properties. Added in ES2018. Currently Firefox and Edge do not support it.\n\t// See https://github.com/ckeditor/ckeditor5-mention/issues/44#issuecomment-487002174.\n\n\ttry {\n\t\t// Usage of regular expression literal cause error during build (ckeditor/ckeditor5-dev#534).\n\t\tisSupported = 'ć'.search( new RegExp( '[\\\\p{L}]', 'u' ) ) === 0;\n\t} catch ( error ) {\n\t\t// Firefox throws a SyntaxError when the group is unsupported.\n\t}\n\n\treturn isSupported;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * Set of utils related to keyboard support.\n *\n * @module utils/keyboard\n */\n\nimport CKEditorError from './ckeditorerror';\nimport env from './env';\n\nconst macGlyphsToModifiers = {\n\t'⌘': 'ctrl',\n\t'⇧': 'shift',\n\t'⌥': 'alt'\n};\n\nconst modifiersToMacGlyphs = {\n\t'ctrl': '⌘',\n\t'shift': '⇧',\n\t'alt': '⌥'\n};\n\n/**\n * Object with `keyName => keyCode` pairs for a set of known keys.\n *\n * Contains:\n *\n * * `a-z`,\n * * `0-9`,\n * * `f1-f12`,\n * * `arrow(left|up|right|bottom)`,\n * * `backspace`, `delete`, `enter`, `esc`, `tab`,\n * * `ctrl`, `cmd`, `shift`, `alt`.\n */\nexport const keyCodes = generateKnownKeyCodes();\n\n/**\n * Converts a key name or a {@link module:utils/keyboard~KeystrokeInfo keystroke info} into a key code.\n *\n * Note: Key names are matched with {@link module:utils/keyboard~keyCodes} in a case-insensitive way.\n *\n * @param {String|module:utils/keyboard~KeystrokeInfo} Key name (see {@link module:utils/keyboard~keyCodes})\n * or a keystroke data object.\n * @returns {Number} Key or keystroke code.\n */\nexport function getCode( key ) {\n\tlet keyCode;\n\n\tif ( typeof key == 'string' ) {\n\t\tkeyCode = keyCodes[ key.toLowerCase() ];\n\n\t\tif ( !keyCode ) {\n\t\t\t/**\n\t\t\t * Unknown key name. Only key names contained by the {@link module:utils/keyboard~keyCodes} can be used.\n\t\t\t *\n\t\t\t * @errror keyboard-unknown-key\n\t\t\t * @param {String} key\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'keyboard-unknown-key: Unknown key name.',\n\t\t\t\tnull, { key }\n\t\t\t);\n\t\t}\n\t} else {\n\t\tkeyCode = key.keyCode +\n\t\t\t( key.altKey ? keyCodes.alt : 0 ) +\n\t\t\t( key.ctrlKey ? keyCodes.ctrl : 0 ) +\n\t\t\t( key.shiftKey ? keyCodes.shift : 0 );\n\t}\n\n\treturn keyCode;\n}\n\n/**\n * Parses keystroke and returns a keystroke code that will match the code returned by\n * link {@link module:utils/keyboard.getCode} for a corresponding {@link module:utils/keyboard~KeystrokeInfo keystroke info}.\n *\n * The keystroke can be passed in two formats:\n *\n * * as a single string – e.g. `ctrl + A`,\n * * as an array of {@link module:utils/keyboard~keyCodes known key names} and key codes – e.g.:\n *   * `[ 'ctrl', 32 ]` (ctrl + space),\n *   * `[ 'ctrl', 'a' ]` (ctrl + A).\n *\n * Note: Key names are matched with {@link module:utils/keyboard~keyCodes} in a case-insensitive way.\n *\n * Note: Only keystrokes with a single non-modifier key are supported (e.g. `ctrl+A` is OK, but `ctrl+A+B` is not).\n *\n * @param {String|Array.<Number|String>} keystroke Keystroke definition.\n * @returns {Number} Keystroke code.\n */\nexport function parseKeystroke( keystroke ) {\n\tif ( typeof keystroke == 'string' ) {\n\t\tkeystroke = splitKeystrokeText( keystroke );\n\t}\n\n\treturn keystroke\n\t\t.map( key => ( typeof key == 'string' ) ? getCode( key ) : key )\n\t\t.reduce( ( key, sum ) => sum + key, 0 );\n}\n\n/**\n * It translates any keystroke string text like `\"CTRL+A\"` to an\n * environment–specific keystroke, i.e. `\"⌘A\"` on Mac OSX.\n *\n * @param {String} keystroke Keystroke text.\n * @returns {String} Keystroke text specific for the environment.\n */\nexport function getEnvKeystrokeText( keystroke ) {\n\tif ( !env.isMac ) {\n\t\treturn keystroke;\n\t}\n\n\treturn splitKeystrokeText( keystroke )\n\t\t// Replace modifiers (e.g. \"ctrl\") with Mac glyphs (e.g. \"⌘\") first.\n\t\t.map( key => modifiersToMacGlyphs[ key.toLowerCase() ] || key )\n\n\t\t// Decide whether to put \"+\" between keys in the keystroke or not.\n\t\t.reduce( ( value, key ) => {\n\t\t\tif ( value.slice( -1 ) in macGlyphsToModifiers ) {\n\t\t\t\treturn value + key;\n\t\t\t} else {\n\t\t\t\treturn value + '+' + key;\n\t\t\t}\n\t\t} );\n}\n\nfunction generateKnownKeyCodes() {\n\tconst keyCodes = {\n\t\tarrowleft: 37,\n\t\tarrowup: 38,\n\t\tarrowright: 39,\n\t\tarrowdown: 40,\n\t\tbackspace: 8,\n\t\tdelete: 46,\n\t\tenter: 13,\n\t\tspace: 32,\n\t\tesc: 27,\n\t\ttab: 9,\n\n\t\t// The idea about these numbers is that they do not collide with any real key codes, so we can use them\n\t\t// like bit masks.\n\t\tctrl: 0x110000,\n\t\t// Has the same code as ctrl, because their behaviour should be unified across the editor.\n\t\t// See http://ckeditor.github.io/editor-recommendations/general-policies#ctrl-vs-cmd\n\t\tcmd: 0x110000,\n\t\tshift: 0x220000,\n\t\talt: 0x440000\n\t};\n\n\t// a-z\n\tfor ( let code = 65; code <= 90; code++ ) {\n\t\tconst letter = String.fromCharCode( code );\n\n\t\tkeyCodes[ letter.toLowerCase() ] = code;\n\t}\n\n\t// 0-9\n\tfor ( let code = 48; code <= 57; code++ ) {\n\t\tkeyCodes[ code - 48 ] = code;\n\t}\n\n\t// F1-F12\n\tfor ( let code = 112; code <= 123; code++ ) {\n\t\tkeyCodes[ 'f' + ( code - 111 ) ] = code;\n\t}\n\n\treturn keyCodes;\n}\n\nfunction splitKeystrokeText( keystroke ) {\n\treturn keystroke.split( /\\s*\\+\\s*/ );\n}\n\n/**\n * Information about a keystroke.\n *\n * @interface module:utils/keyboard~KeystrokeInfo\n */\n\n/**\n * The [key code](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode).\n *\n * @member {Number} module:utils/keyboard~KeystrokeInfo#keyCode\n */\n\n/**\n * Whether the <kbd>Alt</kbd> modifier was pressed.\n *\n * @member {Bolean} module:utils/keyboard~KeystrokeInfo#altKey\n */\n\n/**\n * Whether the <kbd>Ctrl</kbd> or <kbd>Cmd</kbd> modifier was pressed.\n *\n * @member {Bolean} module:utils/keyboard~KeystrokeInfo#ctrlKey\n */\n\n/**\n * Whether the <kbd>Shift</kbd> modifier was pressed.\n *\n * @member {Bolean} module:utils/keyboard~KeystrokeInfo#shiftKey\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/uielement\n */\n\nimport Element from './element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Node from './node';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\n\n/**\n * UI element class. It should be used to represent editing UI which needs to be injected into the editing view\n * If possible, you should keep your UI outside the editing view. However, if that is not possible,\n * UI elements can be used.\n *\n * How a UI element is rendered is in your control (you pass a callback to\n * {@link module:engine/view/downcastwriter~DowncastWriter#createUIElement `downcastWriter#createUIElement()`}).\n * The editor will ignore your UI element – the selection cannot be placed in it, it is skipped (invisible) when\n * the user modifies the selection by using arrow keys and the editor does not listen to any mutations which\n * happen inside your UI elements.\n *\n * The limitation is that you cannot convert a model element to a UI element. UI elements need to be\n * created for {@link module:engine/model/markercollection~Marker markers} or as additinal elements\n * inside normal {@link module:engine/view/containerelement~ContainerElement container elements}.\n *\n * To create a new UI element use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createUIElement `downcastWriter#createUIElement()`} method.\n *\n * @extends module:engine/view/element~Element\n */\nexport default class UIElement extends Element {\n\t/**\n\t * Creates new instance of UIElement.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-uielement-cannot-add` when third parameter is passed,\n\t * to inform that usage of UIElement is incorrect (adding child nodes to UIElement is forbidden).\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#createUIElement\n\t * @protected\n\t * @param {String} name Node name.\n\t * @param {Object|Iterable} [attributes] Collection of attributes.\n\t */\n\tconstructor( name, attributes, children ) {\n\t\tsuper( name, attributes, children );\n\n\t\t/**\n\t\t * Returns `null` because filler is not needed for UIElements.\n\t\t *\n\t\t * @method #getFillerOffset\n\t\t * @returns {null} Always returns null.\n\t\t */\n\t\tthis.getFillerOffset = getFillerOffset;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\tuiElement.is( 'uiElement' ); // -> true\n\t *\t\tuiElement.is( 'element' ); // -> true\n\t *\t\tuiElement.is( 'node' ); // -> true\n\t *\t\tuiElement.is( 'view:uiElement' ); // -> true\n\t *\t\tuiElement.is( 'view:element' ); // -> true\n\t *\t\tuiElement.is( 'view:node' ); // -> true\n\t *\n\t *\t\tuiElement.is( 'model:element' ); // -> false\n\t *\t\tuiElement.is( 'documentFragment' ); // -> false\n\t *\n\t * Assuming that the object being checked is an ui element, you can also check its\n\t * {@link module:engine/view/uielement~UIElement#name name}:\n\t *\n\t *\t\tuiElement.is( 'span' ); // -> true if this is a span ui element\n\t *\t\tuiElement.is( 'uiElement', 'span' ); // -> same as above\n\t *\t\ttext.is( 'span' ); -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type Type to check when `name` parameter is present.\n\t * Otherwise, it acts like the `name` parameter.\n\t * @param {String} [name] Element name.\n\t * @returns {Boolean}\n\t */\n\tis( type, name = null ) {\n\t\tconst cutType = type.replace( /^view:/, '' );\n\t\tif ( !name ) {\n\t\t\treturn cutType == 'uiElement' || super.is( type );\n\t\t} else {\n\t\t\treturn ( cutType == 'uiElement' && name == this.name ) || super.is( type, name );\n\t\t}\n\t}\n\n\t/**\n\t * Overrides {@link module:engine/view/element~Element#_insertChild} method.\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-uielement-cannot-add` to prevent adding any child nodes\n\t * to UIElement.\n\t *\n\t * @protected\n\t */\n\t_insertChild( index, nodes ) {\n\t\tif ( nodes && ( nodes instanceof Node || Array.from( nodes ).length > 0 ) ) {\n\t\t\t/**\n\t\t\t * Cannot add children to {@link module:engine/view/uielement~UIElement}.\n\t\t\t *\n\t\t\t * @error view-uielement-cannot-add\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-uielement-cannot-add: Cannot add child nodes to UIElement instance.', this );\n\t\t}\n\t}\n\n\t/**\n\t * Renders this {@link module:engine/view/uielement~UIElement} to DOM. This method is called by\n\t * {@link module:engine/view/domconverter~DomConverter}.\n\t * Do not use inheritance to create custom rendering method, replace `render()` method instead:\n\t *\n\t *\t\tconst myUIElement = downcastWriter.createUIElement( 'span' );\n\t *\t\tmyUIElement.render = function( domDocument ) {\n\t *\t\t\tconst domElement = this.toDomElement( domDocument );\n\t *\t\t\tdomElement.innerHTML = '<b>this is ui element</b>';\n\t *\n\t *\t\t\treturn domElement;\n\t *\t\t};\n\t *\n\t * If changes in your UI element should trigger some editor UI update you should call\n\t * the {@link module:core/editor/editorui~EditorUI#update `editor.ui.update()`} method\n\t * after rendering your UI element.\n\t *\n\t * @param {Document} domDocument\n\t * @returns {HTMLElement}\n\t */\n\trender( domDocument ) {\n\t\treturn this.toDomElement( domDocument );\n\t}\n\n\t/**\n\t * Creates DOM element based on this view UIElement.\n\t * Note that each time this method is called new DOM element is created.\n\t *\n\t * @param {Document} domDocument\n\t * @returns {HTMLElement}\n\t */\n\ttoDomElement( domDocument ) {\n\t\tconst domElement = domDocument.createElement( this.name );\n\n\t\tfor ( const key of this.getAttributeKeys() ) {\n\t\t\tdomElement.setAttribute( key, this.getAttribute( key ) );\n\t\t}\n\n\t\treturn domElement;\n\t}\n}\n\n/**\n * This function injects UI element handling to the given {@link module:engine/view/document~Document document}.\n *\n * A callback is added to {@link module:engine/view/document~Document#event:keydown document keydown event}.\n * The callback handles the situation when right arrow key is pressed and selection is collapsed before a UI element.\n * Without this handler, it would be impossible to \"jump over\" UI element using right arrow key.\n *\n * @param {module:engine/view/view~View} view View controller to which the quirks handling will be injected.\n */\nexport function injectUiElementHandling( view ) {\n\tview.document.on( 'keydown', ( evt, data ) => jumpOverUiElement( evt, data, view.domConverter ) );\n}\n\n// Returns `null` because block filler is not needed for UIElements.\n//\n// @returns {null}\nfunction getFillerOffset() {\n\treturn null;\n}\n\n// Selection cannot be placed in a `UIElement`. Whenever it is placed there, it is moved before it. This\n// causes a situation when it is impossible to jump over `UIElement` using right arrow key, because the selection\n// ends up in ui element (in DOM) and is moved back to the left. This handler fixes this situation.\nfunction jumpOverUiElement( evt, data, domConverter ) {\n\tif ( data.keyCode == keyCodes.arrowright ) {\n\t\tconst domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\n\t\tconst domSelectionCollapsed = domSelection.rangeCount == 1 && domSelection.getRangeAt( 0 ).collapsed;\n\n\t\t// Jump over UI element if selection is collapsed or shift key is pressed. These are the cases when selection would extend.\n\t\tif ( domSelectionCollapsed || data.shiftKey ) {\n\t\t\tconst domParent = domSelection.focusNode;\n\t\t\tconst domOffset = domSelection.focusOffset;\n\n\t\t\tconst viewPosition = domConverter.domPositionToView( domParent, domOffset );\n\n\t\t\t// In case if dom element is not converted to view or is not mapped or something. Happens for example in some tests.\n\t\t\tif ( viewPosition === null ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Skip all following ui elements.\n\t\t\tlet jumpedOverAnyUiElement = false;\n\n\t\t\tconst nextViewPosition = viewPosition.getLastMatchingPosition( value => {\n\t\t\t\tif ( value.item.is( 'uiElement' ) ) {\n\t\t\t\t\t// Remember that there was at least one ui element.\n\t\t\t\t\tjumpedOverAnyUiElement = true;\n\t\t\t\t}\n\n\t\t\t\t// Jump over ui elements, jump over empty attribute elements, move up from inside of attribute element.\n\t\t\t\tif ( value.item.is( 'uiElement' ) || value.item.is( 'attributeElement' ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\t// Don't jump over text or don't get out of container element.\n\t\t\t\treturn false;\n\t\t\t} );\n\n\t\t\t// If anything has been skipped, fix position.\n\t\t\t// This `if` could be possibly omitted but maybe it is better not to mess with DOM selection if not needed.\n\t\t\tif ( jumpedOverAnyUiElement ) {\n\t\t\t\tconst newDomPosition = domConverter.viewPositionToDom( nextViewPosition );\n\n\t\t\t\tif ( domSelectionCollapsed ) {\n\t\t\t\t\t// Selection was collapsed, so collapse it at further position.\n\t\t\t\t\tdomSelection.collapse( newDomPosition.parent, newDomPosition.offset );\n\t\t\t\t} else {\n\t\t\t\t\t// Selection was not collapse, so extend it instead of collapsing.\n\t\t\t\t\tdomSelection.extend( newDomPosition.parent, newDomPosition.offset );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/documentfragment\n */\n\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\n\n/**\n * Document fragment.\n *\n * To create a new document fragment instance use the\n * {@link module:engine/view/upcastwriter~UpcastWriter#createDocumentFragment `UpcastWriter#createDocumentFragment()`}\n * method.\n */\nexport default class DocumentFragment {\n\t/**\n\t * Creates new DocumentFragment instance.\n\t *\n\t * @protected\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n\t * A list of nodes to be inserted into the created document fragment.\n\t */\n\tconstructor( children ) {\n\t\t/**\n\t\t * Array of child nodes.\n\t\t *\n\t\t * @protected\n\t\t * @member {Array.<module:engine/view/element~Element>} module:engine/view/documentfragment~DocumentFragment#_children\n\t\t */\n\t\tthis._children = [];\n\n\t\tif ( children ) {\n\t\t\tthis._insertChild( 0, children );\n\t\t}\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * Iterates over nodes added to this document fragment.\n\t *\n\t * @returns {Iterable.<module:engine/view/node~Node>}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this._children[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Number of child nodes in this document fragment.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget childCount() {\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Is `true` if there are no nodes inside this document fragment, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isEmpty() {\n\t\treturn this.childCount === 0;\n\t}\n\n\t/**\n\t * Artificial root of `DocumentFragment`. Returns itself. Added for compatibility reasons.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Artificial parent of `DocumentFragment`. Returns `null`. Added for compatibility reasons.\n\t *\n\t * @readonly\n\t * @type {null}\n\t */\n\tget parent() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t *\t\tdocFrag.is( 'documentFragment' ); // -> true\n\t *\t\tdocFrag.is( 'view:documentFragment' ); // -> true\n\t *\n\t *\t\tdocFrag.is( 'model:documentFragment' ); // -> false\n\t *\t\tdocFrag.is( 'element' ); // -> false\n\t *\t\tdocFrag.is( 'node' ); // -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type == 'documentFragment' || type == 'view:documentFragment';\n\t}\n\n\t/**\n\t * {@link module:engine/view/documentfragment~DocumentFragment#_insertChild Insert} a child node or a list of child nodes at the end\n\t * and sets the parent of these nodes to this fragment.\n\t *\n\t * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n\t * @returns {Number} Number of appended nodes.\n\t */\n\t_appendChild( items ) {\n\t\treturn this._insertChild( this.childCount, items );\n\t}\n\n\t/**\n\t * Gets child at the given index.\n\t *\n\t * @param {Number} index Index of child.\n\t * @returns {module:engine/view/node~Node} Child node.\n\t */\n\tgetChild( index ) {\n\t\treturn this._children[ index ];\n\t}\n\n\t/**\n\t * Gets index of the given child node. Returns `-1` if child node is not found.\n\t *\n\t * @param {module:engine/view/node~Node} node Child node.\n\t * @returns {Number} Index of the child node.\n\t */\n\tgetChildIndex( node ) {\n\t\treturn this._children.indexOf( node );\n\t}\n\n\t/**\n\t * Gets child nodes iterator.\n\t *\n\t * @returns {Iterable.<module:engine/view/node~Node>} Child nodes iterator.\n\t */\n\tgetChildren() {\n\t\treturn this._children[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Inserts a child node or a list of child nodes on the given index and sets the parent of these nodes to\n\t * this fragment.\n\t *\n\t * @param {Number} index Position where nodes should be inserted.\n\t * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n\t * @returns {Number} Number of inserted nodes.\n\t */\n\t_insertChild( index, items ) {\n\t\tthis._fireChange( 'children', this );\n\t\tlet count = 0;\n\n\t\tconst nodes = normalize( items );\n\n\t\tfor ( const node of nodes ) {\n\t\t\t// If node that is being added to this element is already inside another element, first remove it from the old parent.\n\t\t\tif ( node.parent !== null ) {\n\t\t\t\tnode._remove();\n\t\t\t}\n\n\t\t\tnode.parent = this;\n\n\t\t\tthis._children.splice( index, 0, node );\n\t\t\tindex++;\n\t\t\tcount++;\n\t\t}\n\n\t\treturn count;\n\t}\n\n\t/**\n\t * Removes number of child nodes starting at the given index and set the parent of these nodes to `null`.\n\t *\n\t * @param {Number} index Number of the first node to remove.\n\t * @param {Number} [howMany=1] Number of nodes to remove.\n\t * @returns {Array.<module:engine/view/node~Node>} The array of removed nodes.\n\t */\n\t_removeChildren( index, howMany = 1 ) {\n\t\tthis._fireChange( 'children', this );\n\n\t\tfor ( let i = index; i < index + howMany; i++ ) {\n\t\t\tthis._children[ i ].parent = null;\n\t\t}\n\n\t\treturn this._children.splice( index, howMany );\n\t}\n\n\t/**\n\t * Fires `change` event with given type of the change.\n\t *\n\t * @private\n\t * @param {module:engine/view/document~ChangeType} type Type of the change.\n\t * @param {module:engine/view/node~Node} node Changed node.\n\t * @fires module:engine/view/node~Node#change\n\t */\n\t_fireChange( type, node ) {\n\t\tthis.fire( 'change:' + type, node );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // printTree() {\n\t// @if CK_DEBUG_ENGINE //\tlet string = 'ViewDocumentFragment: [';\n\n\t// @if CK_DEBUG_ENGINE //\tfor ( const child of this.getChildren() ) {\n\t// @if CK_DEBUG_ENGINE //\t\tif ( child.is( 'text' ) ) {\n\t// @if CK_DEBUG_ENGINE //\t\t\tstring += '\\n' + '\\t'.repeat( 1 ) + child.data;\n\t// @if CK_DEBUG_ENGINE //\t\t} else {\n\t// @if CK_DEBUG_ENGINE //\t\t\tstring += '\\n' + child.printTree( 1 );\n\t// @if CK_DEBUG_ENGINE //\t\t}\n\t// @if CK_DEBUG_ENGINE //\t}\n\n\t// @if CK_DEBUG_ENGINE //\tstring += '\\n]';\n\n\t// @if CK_DEBUG_ENGINE //\treturn string;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logTree() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( this.printTree() );\n\t// @if CK_DEBUG_ENGINE // }\n}\n\nmix( DocumentFragment, EmitterMixin );\n\n// Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/view/item~Item|Iterable.<String|module:engine/view/item~Item>}\n// @returns {Iterable.<module:engine/view/node~Node>}\nfunction normalize( nodes ) {\n\t// Separate condition because string is iterable.\n\tif ( typeof nodes == 'string' ) {\n\t\treturn [ new Text( nodes ) ];\n\t}\n\n\tif ( !isIterable( nodes ) ) {\n\t\tnodes = [ nodes ];\n\t}\n\n\t// Array.from to enable .map() on non-arrays.\n\treturn Array.from( nodes )\n\t\t.map( node => {\n\t\t\tif ( typeof node == 'string' ) {\n\t\t\t\treturn new Text( node );\n\t\t\t}\n\n\t\t\tif ( node instanceof TextProxy ) {\n\t\t\t\treturn new Text( node.data );\n\t\t\t}\n\n\t\t\treturn node;\n\t\t} );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module module:engine/view/downcastwriter\n */\n\nimport Position from './position';\nimport Range from './range';\nimport Selection from './selection';\nimport ContainerElement from './containerelement';\nimport AttributeElement from './attributeelement';\nimport EmptyElement from './emptyelement';\nimport UIElement from './uielement';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport DocumentFragment from './documentfragment';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\nimport Text from './text';\nimport EditableElement from './editableelement';\nimport { isPlainObject } from 'lodash-es';\n\n/**\n * View downcast writer.\n *\n * It provides a set of methods used to manipulate view nodes.\n *\n * Do not create an instance of this writer manually. To modify a view structure, use\n * the {@link module:engine/view/view~View#change `View#change()`} block.\n *\n * The `DowncastWriter` is designed to work with semantic views which are the views that were/are being downcasted from the model.\n * To work with ordinary views (e.g. parsed from a pasted content) use the\n * {@link module:engine/view/upcastwriter~UpcastWriter upcast writer}.\n *\n * Read more about changing the view in the {@glink framework/guides/architecture/editing-engine#changing-the-view Changing the view}\n * section of the {@glink framework/guides/architecture/editing-engine Editing engine architecture} guide.\n */\nexport default class DowncastWriter {\n\tconstructor( document ) {\n\t\t/**\n\t\t * @readonly\n\t\t * @type {module:engine/view/document~Document}\n\t\t */\n\t\tthis.document = document;\n\n\t\t/**\n\t\t * Holds references to the attribute groups that share the same {@link module:engine/view/attributeelement~AttributeElement#id id}.\n\t\t * The keys are `id`s, the values are `Set`s holding {@link module:engine/view/attributeelement~AttributeElement}s.\n\t\t *\n\t\t * @private\n\t\t * @type {Map.<String,Set>}\n\t\t */\n\t\tthis._cloneGroups = new Map();\n\t}\n\n\t/**\n\t * Sets {@link module:engine/view/documentselection~DocumentSelection selection's} ranges and direction to the\n\t * specified location based on the given {@link module:engine/view/selection~Selectable selectable}.\n\t *\n\t * Usage:\n\t *\n\t *\t\t// Sets selection to the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\twriter.setSelection( range );\n\t *\n\t *\t\t// Sets backward selection to the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\twriter.setSelection( range );\n\t *\n\t *\t\t// Sets selection to given ranges.\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( start2, end2 ) ];\n\t *\t\twriter.setSelection( range );\n\t *\n\t *\t\t// Sets selection to the other selection.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\twriter.setSelection( otherSelection );\n\t *\n\t * \t\t// Sets collapsed selection at the given position.\n\t *\t\tconst position = writer.createPositionFromPath( root, path );\n\t *\t\twriter.setSelection( position );\n\t *\n\t * \t\t// Sets collapsed selection at the position of given item and offset.\n\t *\t\tconst paragraph = writer.createContainerElement( 'p' );\n\t *\t\twriter.setSelection( paragraph, offset );\n\t *\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n \t * that element and ends after the last child of that element.\n\t *\n\t * \t\twriter.setSelection( paragraph, 'in' );\n\t *\n\t * Creates a range on the {@link module:engine/view/item~Item item} which starts before the item and ends just after the item.\n\t *\n\t *\t\twriter.setSelection( paragraph, 'on' );\n\t *\n\t * \t\t// Removes all ranges.\n\t *\t\twriter.setSelection( null );\n\t *\n\t * `DowncastWriter#setSelection()` allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n\t *\n\t *\t\t// Sets selection as backward.\n\t *\t\twriter.setSelection( range, { backward: true } );\n\t *\n\t *\t\t// Sets selection as fake.\n\t *\t\t// Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n\t * \t\t// This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n\t * \t\t// represented in other way, for example by applying proper CSS class.\n\t *\t\twriter.setSelection( range, { fake: true } );\n\t *\n\t * \t\t// Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n\t * \t\t// (and be  properly handled by screen readers).\n\t *\t\twriter.setSelection( range, { fake: true, label: 'foo' } );\n\t *\n\t * @param {module:engine/view/selection~Selectable} selectable\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n\t * @param {String} [options.label] Label for the fake selection.\n\t */\n\tsetSelection( selectable, placeOrOffset, options ) {\n\t\tthis.document.selection._setTo( selectable, placeOrOffset, options );\n\t}\n\n\t/**\n\t * Moves {@link module:engine/view/documentselection~DocumentSelection#focus selection's focus} to the specified location.\n\t *\n\t * The location can be specified in the same form as {@link module:engine/view/view~View#createPositionAt view.createPositionAt()}\n\t * parameters.\n\t *\n\t * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\n\t */\n\tsetSelectionFocus( itemOrPosition, offset ) {\n\t\tthis.document.selection._setFocus( itemOrPosition, offset );\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/view/text~Text text node}.\n\t *\n\t *\t\twriter.createText( 'foo' );\n\t *\n\t * @param {String} data The text's data.\n\t * @returns {module:engine/view/text~Text} The created text node.\n\t */\n\tcreateText( data ) {\n\t\treturn new Text( data );\n\t}\n\n\t/**\n\t * Creates new {@link module:engine/view/attributeelement~AttributeElement}.\n\t *\n\t *\t\twriter.createAttributeElement( 'strong' );\n\t *\t\twriter.createAttributeElement( 'a', { href: 'foo.bar' } );\n\t *\n\t *\t\t// Make `<a>` element contain other attributes element so the `<a>` element is not broken.\n\t *\t\twriter.createAttributeElement( 'a', { href: 'foo.bar' }, { priority: 5 } );\n\t *\n\t *\t\t// Set `id` of a marker element so it is not joined or merged with \"normal\" elements.\n\t *\t\twriter.createAttributeElement( 'span', { class: 'my-marker' }, { id: 'marker:my' } );\n\t *\n\t * @param {String} name Name of the element.\n\t * @param {Object} [attributes] Element's attributes.\n\t * @param {Object} [options] Element's options.\n\t * @param {Number} [options.priority] Element's {@link module:engine/view/attributeelement~AttributeElement#priority priority}.\n\t * @param {Number|String} [options.id] Element's {@link module:engine/view/attributeelement~AttributeElement#id id}.\n\t * @returns {module:engine/view/attributeelement~AttributeElement} Created element.\n\t */\n\tcreateAttributeElement( name, attributes, options = {} ) {\n\t\tconst attributeElement = new AttributeElement( name, attributes );\n\n\t\tif ( options.priority ) {\n\t\t\tattributeElement._priority = options.priority;\n\t\t}\n\n\t\tif ( options.id ) {\n\t\t\tattributeElement._id = options.id;\n\t\t}\n\n\t\treturn attributeElement;\n\t}\n\n\t/**\n\t * Creates new {@link module:engine/view/containerelement~ContainerElement}.\n\t *\n\t *\t\twriter.createContainerElement( 'p' );\n\t *\n\t *\t\t// Create element with custom attributes.\n\t *\t\twriter.createContainerElement( 'div', { id: 'foo-bar', 'data-baz': '123' } );\n\t *\n\t *\t\t// Create element with custom styles.\n\t *\t\twriter.createContainerElement( 'p', { style: 'font-weight: bold; padding-bottom: 10px' } );\n\t *\n\t *\t\t// Create element with custom classes.\n\t *\t\twriter.createContainerElement( 'p', { class: 'foo bar baz' } );\n\t *\n\t * @param {String} name Name of the element.\n\t * @param {Object} [attributes] Elements attributes.\n\t * @returns {module:engine/view/containerelement~ContainerElement} Created element.\n\t */\n\tcreateContainerElement( name, attributes ) {\n\t\treturn new ContainerElement( name, attributes );\n\t}\n\n\t/**\n\t * Creates new {@link module:engine/view/editableelement~EditableElement}.\n\t *\n\t *\t\twriter.createEditableElement( 'div' );\n\t *\t\twriter.createEditableElement( 'div', { id: 'foo-1234' } );\n\t *\n\t * @param {String} name Name of the element.\n\t * @param {Object} [attributes] Elements attributes.\n\t * @returns {module:engine/view/editableelement~EditableElement} Created element.\n\t */\n\tcreateEditableElement( name, attributes ) {\n\t\tconst editableElement = new EditableElement( name, attributes );\n\t\teditableElement._document = this.document;\n\n\t\treturn editableElement;\n\t}\n\n\t/**\n\t * Creates new {@link module:engine/view/emptyelement~EmptyElement}.\n\t *\n\t *\t\twriter.createEmptyElement( 'img' );\n\t *\t\twriter.createEmptyElement( 'img', { id: 'foo-1234' } );\n\t *\n\t * @param {String} name Name of the element.\n\t * @param {Object} [attributes] Elements attributes.\n\t * @returns {module:engine/view/emptyelement~EmptyElement} Created element.\n\t */\n\tcreateEmptyElement( name, attributes ) {\n\t\treturn new EmptyElement( name, attributes );\n\t}\n\n\t/**\n\t * Creates new {@link module:engine/view/uielement~UIElement}.\n\t *\n\t *\t\twriter.createUIElement( 'span' );\n\t *\t\twriter.createUIElement( 'span', { id: 'foo-1234' } );\n\t *\n\t * Custom render function can be provided as third parameter:\n\t *\n\t *\t\twriter.createUIElement( 'span', null, function( domDocument ) {\n\t *\t\t\tconst domElement = this.toDomElement( domDocument );\n\t *\t\t\tdomElement.innerHTML = '<b>this is ui element</b>';\n\t *\n\t *\t\t\treturn domElement;\n\t *\t\t} );\n\t *\n\t * @param {String} name Name of the element.\n\t * @param {Object} [attributes] Elements attributes.\n\t * @param {Function} [renderFunction] Custom render function.\n\t * @returns {module:engine/view/uielement~UIElement} Created element.\n\t */\n\tcreateUIElement( name, attributes, renderFunction ) {\n\t\tconst uiElement = new UIElement( name, attributes );\n\n\t\tif ( renderFunction ) {\n\t\t\tuiElement.render = renderFunction;\n\t\t}\n\n\t\treturn uiElement;\n\t}\n\n\t/**\n\t * Adds or overwrite element's attribute with a specified key and value.\n\t *\n\t *\t\twriter.setAttribute( 'href', 'http://ckeditor.com', linkElement );\n\t *\n\t * @param {String} key Attribute key.\n\t * @param {String} value Attribute value.\n\t * @param {module:engine/view/element~Element} element\n\t */\n\tsetAttribute( key, value, element ) {\n\t\telement._setAttribute( key, value );\n\t}\n\n\t/**\n\t * Removes attribute from the element.\n\t *\n\t *\t\twriter.removeAttribute( 'href', linkElement );\n\t *\n\t * @param {String} key Attribute key.\n\t * @param {module:engine/view/element~Element} element\n\t */\n\tremoveAttribute( key, element ) {\n\t\telement._removeAttribute( key );\n\t}\n\n\t/**\n\t * Adds specified class to the element.\n\t *\n\t *\t\twriter.addClass( 'foo', linkElement );\n\t *\t\twriter.addClass( [ 'foo', 'bar' ], linkElement );\n\t *\n\t * @param {Array.<String>|String} className\n\t * @param {module:engine/view/element~Element} element\n\t */\n\taddClass( className, element ) {\n\t\telement._addClass( className );\n\t}\n\n\t/**\n\t * Removes specified class from the element.\n\t *\n\t *\t\twriter.removeClass( 'foo', linkElement );\n\t *\t\twriter.removeClass( [ 'foo', 'bar' ], linkElement );\n\t *\n\t * @param {Array.<String>|String} className\n\t * @param {module:engine/view/element~Element} element\n\t */\n\tremoveClass( className, element ) {\n\t\telement._removeClass( className );\n\t}\n\n\t/**\n\t * Adds style to the element.\n\t *\n\t *\t\twriter.setStyle( 'color', 'red', element );\n\t *\t\twriter.setStyle( {\n\t *\t\t\tcolor: 'red',\n\t *\t\t\tposition: 'fixed'\n\t *\t\t}, element );\n\t *\n\t * **Note**: The passed style can be normalized if\n\t * {@link module:engine/view/document~Document#addStyleProcessorRules a particular style processor rule is enabled}.\n\t * See {@link module:engine/view/stylesmap~StylesMap#set `StylesMap#set()`} for details.\n\t *\n\t * @param {String|Object} property Property name or object with key - value pairs.\n\t * @param {String} [value] Value to set. This parameter is ignored if object is provided as the first parameter.\n\t * @param {module:engine/view/element~Element} element Element to set styles on.\n\t */\n\tsetStyle( property, value, element ) {\n\t\tif ( isPlainObject( property ) && element === undefined ) {\n\t\t\telement = value;\n\t\t}\n\n\t\telement._setStyle( property, value );\n\t}\n\n\t/**\n\t * Removes specified style from the element.\n\t *\n\t *\t\twriter.removeStyle( 'color', element ); // Removes 'color' style.\n\t *\t\twriter.removeStyle( [ 'color', 'border-top' ], element ); // Removes both 'color' and 'border-top' styles.\n\t *\n\t * **Note**: This method can work with normalized style names if\n\t * {@link module:engine/view/document~Document#addStyleProcessorRules a particular style processor rule is enabled}.\n\t * See {@link module:engine/view/stylesmap~StylesMap#remove `StylesMap#remove()`} for details.\n\t *\n\t * @param {Array.<String>|String} property\n\t * @param {module:engine/view/element~Element} element\n\t */\n\tremoveStyle( property, element ) {\n\t\telement._removeStyle( property );\n\t}\n\n\t/**\n\t * Sets a custom property on element. Unlike attributes, custom properties are not rendered to the DOM,\n\t * so they can be used to add special data to elements.\n\t *\n\t * @param {String|Symbol} key\n\t * @param {*} value\n\t * @param {module:engine/view/element~Element} element\n\t */\n\tsetCustomProperty( key, value, element ) {\n\t\telement._setCustomProperty( key, value );\n\t}\n\n\t/**\n\t * Removes a custom property stored under the given key.\n\t *\n\t * @param {String|Symbol} key\n\t * @param {module:engine/view/element~Element} element\n\t * @returns {Boolean} Returns true if property was removed.\n\t */\n\tremoveCustomProperty( key, element ) {\n\t\treturn element._removeCustomProperty( key );\n\t}\n\n\t/**\n\t * Breaks attribute nodes at provided position or at boundaries of provided range. It breaks attribute elements inside\n\t * up to a container element.\n\t *\n\t * In following examples `<p>` is a container, `<b>` and `<u>` are attribute nodes:\n\t *\n\t *\t\t<p>foo<b><u>bar{}</u></b></p> -> <p>foo<b><u>bar</u></b>[]</p>\n\t *\t\t<p>foo<b><u>{}bar</u></b></p> -> <p>foo{}<b><u>bar</u></b></p>\n\t *\t\t<p>foo<b><u>b{}ar</u></b></p> -> <p>foo<b><u>b</u></b>[]<b><u>ar</u></b></p>\n\t *\t\t<p><b>fo{o</b><u>ba}r</u></p> -> <p><b>fo</b><b>o</b><u>ba</u><u>r</u></b></p>\n\t *\n\t * **Note:** {@link module:engine/view/documentfragment~DocumentFragment DocumentFragment} is treated like a container.\n\t *\n\t * **Note:** Difference between {@link module:engine/view/downcastwriter~DowncastWriter#breakAttributes breakAttributes} and\n\t * {@link module:engine/view/downcastwriter~DowncastWriter#breakContainer breakContainer} is that `breakAttributes` breaks all\n\t * {@link module:engine/view/attributeelement~AttributeElement attribute elements} that are ancestors of given `position`,\n\t * up to the first encountered {@link module:engine/view/containerelement~ContainerElement container element}.\n\t * `breakContainer` assumes that given `position` is directly in container element and breaks that container element.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container`\n\t * when {@link module:engine/view/range~Range#start start}\n\t * and {@link module:engine/view/range~Range#end end} positions of a passed range are not placed inside same parent container.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-empty-element`\n\t * when trying to break attributes\n\t * inside {@link module:engine/view/emptyelement~EmptyElement EmptyElement}.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-ui-element`\n\t * when trying to break attributes\n\t * inside {@link module:engine/view/uielement~UIElement UIElement}.\n\t *\n\t * @see module:engine/view/attributeelement~AttributeElement\n\t * @see module:engine/view/containerelement~ContainerElement\n\t * @see module:engine/view/downcastwriter~DowncastWriter#breakContainer\n\t * @param {module:engine/view/position~Position|module:engine/view/range~Range} positionOrRange Position where\n\t * to break attribute elements.\n\t * @returns {module:engine/view/position~Position|module:engine/view/range~Range} New position or range, after breaking the attribute\n\t * elements.\n\t */\n\tbreakAttributes( positionOrRange ) {\n\t\tif ( positionOrRange instanceof Position ) {\n\t\t\treturn this._breakAttributes( positionOrRange );\n\t\t} else {\n\t\t\treturn this._breakAttributesRange( positionOrRange );\n\t\t}\n\t}\n\n\t/**\n\t * Breaks {@link module:engine/view/containerelement~ContainerElement container view element} into two, at the given position. Position\n\t * has to be directly inside container element and cannot be in root. Does not break if position is at the beginning\n\t * or at the end of it's parent element.\n\t *\n\t *\t\t<p>foo^bar</p> -> <p>foo</p><p>bar</p>\n\t *\t\t<div><p>foo</p>^<p>bar</p></div> -> <div><p>foo</p></div><div><p>bar</p></div>\n\t *\t\t<p>^foobar</p> -> ^<p>foobar</p>\n\t *\t\t<p>foobar^</p> -> <p>foobar</p>^\n\t *\n\t * **Note:** Difference between {@link module:engine/view/downcastwriter~DowncastWriter#breakAttributes breakAttributes} and\n\t * {@link module:engine/view/downcastwriter~DowncastWriter#breakContainer breakContainer} is that `breakAttributes` breaks all\n\t * {@link module:engine/view/attributeelement~AttributeElement attribute elements} that are ancestors of given `position`,\n\t * up to the first encountered {@link module:engine/view/containerelement~ContainerElement container element}.\n\t * `breakContainer` assumes that given `position` is directly in container element and breaks that container element.\n\t *\n\t * @see module:engine/view/attributeelement~AttributeElement\n\t * @see module:engine/view/containerelement~ContainerElement\n\t * @see module:engine/view/downcastwriter~DowncastWriter#breakAttributes\n\t * @param {module:engine/view/position~Position} position Position where to break element.\n\t * @returns {module:engine/view/position~Position} Position between broken elements. If element has not been broken,\n\t * the returned position is placed either before it or after it.\n\t */\n\tbreakContainer( position ) {\n\t\tconst element = position.parent;\n\n\t\tif ( !( element.is( 'containerElement' ) ) ) {\n\t\t\t/**\n\t\t\t * Trying to break an element which is not a container element.\n\t\t\t *\n\t\t\t * @error view-writer-break-non-container-element\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'view-writer-break-non-container-element: Trying to break an element which is not a container element.',\n\t\t\t\tthis.document\n\t\t\t);\n\t\t}\n\n\t\tif ( !element.parent ) {\n\t\t\t/**\n\t\t\t * Trying to break root element.\n\t\t\t *\n\t\t\t * @error view-writer-break-root\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-writer-break-root: Trying to break root element.', this.document );\n\t\t}\n\n\t\tif ( position.isAtStart ) {\n\t\t\treturn Position._createBefore( element );\n\t\t} else if ( !position.isAtEnd ) {\n\t\t\tconst newElement = element._clone( false );\n\n\t\t\tthis.insert( Position._createAfter( element ), newElement );\n\n\t\t\tconst sourceRange = new Range( position, Position._createAt( element, 'end' ) );\n\t\t\tconst targetPosition = new Position( newElement, 0 );\n\n\t\t\tthis.move( sourceRange, targetPosition );\n\t\t}\n\n\t\treturn Position._createAfter( element );\n\t}\n\n\t/**\n\t * Merges {@link module:engine/view/attributeelement~AttributeElement attribute elements}. It also merges text nodes if needed.\n\t * Only {@link module:engine/view/attributeelement~AttributeElement#isSimilar similar} attribute elements can be merged.\n\t *\n\t * In following examples `<p>` is a container and `<b>` is an attribute element:\n\t *\n\t *\t\t<p>foo[]bar</p> -> <p>foo{}bar</p>\n\t *\t\t<p><b>foo</b>[]<b>bar</b></p> -> <p><b>foo{}bar</b></p>\n\t *\t\t<p><b foo=\"bar\">a</b>[]<b foo=\"baz\">b</b></p> -> <p><b foo=\"bar\">a</b>[]<b foo=\"baz\">b</b></p>\n\t *\n\t * It will also take care about empty attributes when merging:\n\t *\n\t *\t\t<p><b>[]</b></p> -> <p>[]</p>\n\t *\t\t<p><b>foo</b><i>[]</i><b>bar</b></p> -> <p><b>foo{}bar</b></p>\n\t *\n\t * **Note:** Difference between {@link module:engine/view/downcastwriter~DowncastWriter#mergeAttributes mergeAttributes} and\n\t * {@link module:engine/view/downcastwriter~DowncastWriter#mergeContainers mergeContainers} is that `mergeAttributes` merges two\n\t * {@link module:engine/view/attributeelement~AttributeElement attribute elements} or {@link module:engine/view/text~Text text nodes}\n\t * while `mergeContainer` merges two {@link module:engine/view/containerelement~ContainerElement container elements}.\n\t *\n\t * @see module:engine/view/attributeelement~AttributeElement\n\t * @see module:engine/view/containerelement~ContainerElement\n\t * @see module:engine/view/downcastwriter~DowncastWriter#mergeContainers\n\t * @param {module:engine/view/position~Position} position Merge position.\n\t * @returns {module:engine/view/position~Position} Position after merge.\n\t */\n\tmergeAttributes( position ) {\n\t\tconst positionOffset = position.offset;\n\t\tconst positionParent = position.parent;\n\n\t\t// When inside text node - nothing to merge.\n\t\tif ( positionParent.is( 'text' ) ) {\n\t\t\treturn position;\n\t\t}\n\n\t\t// When inside empty attribute - remove it.\n\t\tif ( positionParent.is( 'attributeElement' ) && positionParent.childCount === 0 ) {\n\t\t\tconst parent = positionParent.parent;\n\t\t\tconst offset = positionParent.index;\n\n\t\t\tpositionParent._remove();\n\t\t\tthis._removeFromClonedElementsGroup( positionParent );\n\n\t\t\treturn this.mergeAttributes( new Position( parent, offset ) );\n\t\t}\n\n\t\tconst nodeBefore = positionParent.getChild( positionOffset - 1 );\n\t\tconst nodeAfter = positionParent.getChild( positionOffset );\n\n\t\t// Position should be placed between two nodes.\n\t\tif ( !nodeBefore || !nodeAfter ) {\n\t\t\treturn position;\n\t\t}\n\n\t\t// When position is between two text nodes.\n\t\tif ( nodeBefore.is( 'text' ) && nodeAfter.is( 'text' ) ) {\n\t\t\treturn mergeTextNodes( nodeBefore, nodeAfter );\n\t\t}\n\t\t// When position is between two same attribute elements.\n\t\telse if ( nodeBefore.is( 'attributeElement' ) && nodeAfter.is( 'attributeElement' ) && nodeBefore.isSimilar( nodeAfter ) ) {\n\t\t\t// Move all children nodes from node placed after selection and remove that node.\n\t\t\tconst count = nodeBefore.childCount;\n\t\t\tnodeBefore._appendChild( nodeAfter.getChildren() );\n\n\t\t\tnodeAfter._remove();\n\t\t\tthis._removeFromClonedElementsGroup( nodeAfter );\n\n\t\t\t// New position is located inside the first node, before new nodes.\n\t\t\t// Call this method recursively to merge again if needed.\n\t\t\treturn this.mergeAttributes( new Position( nodeBefore, count ) );\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Merges two {@link module:engine/view/containerelement~ContainerElement container elements} that are before and after given position.\n\t * Precisely, the element after the position is removed and it's contents are moved to element before the position.\n\t *\n\t *\t\t<p>foo</p>^<p>bar</p> -> <p>foo^bar</p>\n\t *\t\t<div>foo</div>^<p>bar</p> -> <div>foo^bar</div>\n\t *\n\t * **Note:** Difference between {@link module:engine/view/downcastwriter~DowncastWriter#mergeAttributes mergeAttributes} and\n\t * {@link module:engine/view/downcastwriter~DowncastWriter#mergeContainers mergeContainers} is that `mergeAttributes` merges two\n\t * {@link module:engine/view/attributeelement~AttributeElement attribute elements} or {@link module:engine/view/text~Text text nodes}\n\t * while `mergeContainer` merges two {@link module:engine/view/containerelement~ContainerElement container elements}.\n\t *\n\t * @see module:engine/view/attributeelement~AttributeElement\n\t * @see module:engine/view/containerelement~ContainerElement\n\t * @see module:engine/view/downcastwriter~DowncastWriter#mergeAttributes\n\t * @param {module:engine/view/position~Position} position Merge position.\n\t * @returns {module:engine/view/position~Position} Position after merge.\n\t */\n\tmergeContainers( position ) {\n\t\tconst prev = position.nodeBefore;\n\t\tconst next = position.nodeAfter;\n\n\t\tif ( !prev || !next || !prev.is( 'containerElement' ) || !next.is( 'containerElement' ) ) {\n\t\t\t/**\n\t\t\t * Element before and after given position cannot be merged.\n\t\t\t *\n\t\t\t * @error view-writer-merge-containers-invalid-position\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-writer-merge-containers-invalid-position: ' +\n\t\t\t\t'Element before and after given position cannot be merged.', this.document );\n\t\t}\n\n\t\tconst lastChild = prev.getChild( prev.childCount - 1 );\n\t\tconst newPosition = lastChild instanceof Text ? Position._createAt( lastChild, 'end' ) : Position._createAt( prev, 'end' );\n\n\t\tthis.move( Range._createIn( next ), Position._createAt( prev, 'end' ) );\n\t\tthis.remove( Range._createOn( next ) );\n\n\t\treturn newPosition;\n\t}\n\n\t/**\n\t * Insert node or nodes at specified position. Takes care about breaking attributes before insertion\n\t * and merging them afterwards.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-insert-invalid-node` when nodes to insert\n\t * contains instances that are not {@link module:engine/view/text~Text Texts},\n\t * {@link module:engine/view/attributeelement~AttributeElement AttributeElements},\n\t * {@link module:engine/view/containerelement~ContainerElement ContainerElements},\n\t * {@link module:engine/view/emptyelement~EmptyElement EmptyElements} or\n\t * {@link module:engine/view/uielement~UIElement UIElements}.\n\t *\n\t * @param {module:engine/view/position~Position} position Insertion position.\n\t * @param {module:engine/view/text~Text|module:engine/view/attributeelement~AttributeElement|\n\t * module:engine/view/containerelement~ContainerElement|module:engine/view/emptyelement~EmptyElement|\n\t * module:engine/view/uielement~UIElement|Iterable.<module:engine/view/text~Text|\n\t * module:engine/view/attributeelement~AttributeElement|module:engine/view/containerelement~ContainerElement|\n\t * module:engine/view/emptyelement~EmptyElement|module:engine/view/uielement~UIElement>} nodes Node or nodes to insert.\n\t * @returns {module:engine/view/range~Range} Range around inserted nodes.\n\t */\n\tinsert( position, nodes ) {\n\t\tnodes = isIterable( nodes ) ? [ ...nodes ] : [ nodes ];\n\n\t\t// Check if nodes to insert are instances of AttributeElements, ContainerElements, EmptyElements, UIElements or Text.\n\t\tvalidateNodesToInsert( nodes, this.document );\n\n\t\tconst container = getParentContainer( position );\n\n\t\tif ( !container ) {\n\t\t\t/**\n\t\t\t * Position's parent container cannot be found.\n\t\t\t *\n\t\t\t * @error view-writer-invalid-position-container\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-writer-invalid-position-container', this.document );\n\t\t}\n\n\t\tconst insertionPosition = this._breakAttributes( position, true );\n\t\tconst length = container._insertChild( insertionPosition.offset, nodes );\n\n\t\tfor ( const node of nodes ) {\n\t\t\tthis._addToClonedElementsGroup( node );\n\t\t}\n\n\t\tconst endPosition = insertionPosition.getShiftedBy( length );\n\t\tconst start = this.mergeAttributes( insertionPosition );\n\n\t\t// When no nodes were inserted - return collapsed range.\n\t\tif ( length === 0 ) {\n\t\t\treturn new Range( start, start );\n\t\t} else {\n\t\t\t// If start position was merged - move end position.\n\t\t\tif ( !start.isEqual( insertionPosition ) ) {\n\t\t\t\tendPosition.offset--;\n\t\t\t}\n\n\t\t\tconst end = this.mergeAttributes( endPosition );\n\n\t\t\treturn new Range( start, end );\n\t\t}\n\t}\n\n\t/**\n\t * Removes provided range from the container.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n\t * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n\t * same parent container.\n\t *\n\t * @param {module:engine/view/range~Range|module:engine/view/item~Item} rangeOrItem Range to remove from container\n\t * or an {@link module:engine/view/item~Item item} to remove. If range is provided, after removing, it will be updated\n\t * to a collapsed range showing the new position.\n\t * @returns {module:engine/view/documentfragment~DocumentFragment} Document fragment containing removed nodes.\n\t */\n\tremove( rangeOrItem ) {\n\t\tconst range = rangeOrItem instanceof Range ? rangeOrItem : Range._createOn( rangeOrItem );\n\n\t\tvalidateRangeContainer( range, this.document );\n\n\t\t// If range is collapsed - nothing to remove.\n\t\tif ( range.isCollapsed ) {\n\t\t\treturn new DocumentFragment();\n\t\t}\n\n\t\t// Break attributes at range start and end.\n\t\tconst { start: breakStart, end: breakEnd } = this._breakAttributesRange( range, true );\n\t\tconst parentContainer = breakStart.parent;\n\n\t\tconst count = breakEnd.offset - breakStart.offset;\n\n\t\t// Remove nodes in range.\n\t\tconst removed = parentContainer._removeChildren( breakStart.offset, count );\n\n\t\tfor ( const node of removed ) {\n\t\t\tthis._removeFromClonedElementsGroup( node );\n\t\t}\n\n\t\t// Merge after removing.\n\t\tconst mergePosition = this.mergeAttributes( breakStart );\n\t\trange.start = mergePosition;\n\t\trange.end = mergePosition.clone();\n\n\t\t// Return removed nodes.\n\t\treturn new DocumentFragment( removed );\n\t}\n\n\t/**\n\t * Removes matching elements from given range.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n\t * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n\t * same parent container.\n\t *\n\t * @param {module:engine/view/range~Range} range Range to clear.\n\t * @param {module:engine/view/element~Element} element Element to remove.\n\t */\n\tclear( range, element ) {\n\t\tvalidateRangeContainer( range, this.document );\n\n\t\t// Create walker on given range.\n\t\t// We walk backward because when we remove element during walk it modifies range end position.\n\t\tconst walker = range.getWalker( {\n\t\t\tdirection: 'backward',\n\t\t\tignoreElementEnd: true\n\t\t} );\n\n\t\t// Let's walk.\n\t\tfor ( const current of walker ) {\n\t\t\tconst item = current.item;\n\t\t\tlet rangeToRemove;\n\n\t\t\t// When current item matches to the given element.\n\t\t\tif ( item.is( 'element' ) && element.isSimilar( item ) ) {\n\t\t\t\t// Create range on this element.\n\t\t\t\trangeToRemove = Range._createOn( item );\n\t\t\t\t// When range starts inside Text or TextProxy element.\n\t\t\t} else if ( !current.nextPosition.isAfter( range.start ) && item.is( 'textProxy' ) ) {\n\t\t\t\t// We need to check if parent of this text matches to given element.\n\t\t\t\tconst parentElement = item.getAncestors().find( ancestor => {\n\t\t\t\t\treturn ancestor.is( 'element' ) && element.isSimilar( ancestor );\n\t\t\t\t} );\n\n\t\t\t\t// If it is then create range inside this element.\n\t\t\t\tif ( parentElement ) {\n\t\t\t\t\trangeToRemove = Range._createIn( parentElement );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we have found element to remove.\n\t\t\tif ( rangeToRemove ) {\n\t\t\t\t// We need to check if element range stick out of the given range and truncate if it is.\n\t\t\t\tif ( rangeToRemove.end.isAfter( range.end ) ) {\n\t\t\t\t\trangeToRemove.end = range.end;\n\t\t\t\t}\n\n\t\t\t\tif ( rangeToRemove.start.isBefore( range.start ) ) {\n\t\t\t\t\trangeToRemove.start = range.start;\n\t\t\t\t}\n\n\t\t\t\t// At the end we remove range with found element.\n\t\t\t\tthis.remove( rangeToRemove );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Moves nodes from provided range to target position.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n\t * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n\t * same parent container.\n\t *\n\t * @param {module:engine/view/range~Range} sourceRange Range containing nodes to move.\n\t * @param {module:engine/view/position~Position} targetPosition Position to insert.\n\t * @returns {module:engine/view/range~Range} Range in target container. Inserted nodes are placed between\n\t * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions.\n\t */\n\tmove( sourceRange, targetPosition ) {\n\t\tlet nodes;\n\n\t\tif ( targetPosition.isAfter( sourceRange.end ) ) {\n\t\t\ttargetPosition = this._breakAttributes( targetPosition, true );\n\n\t\t\tconst parent = targetPosition.parent;\n\t\t\tconst countBefore = parent.childCount;\n\n\t\t\tsourceRange = this._breakAttributesRange( sourceRange, true );\n\n\t\t\tnodes = this.remove( sourceRange );\n\n\t\t\ttargetPosition.offset += ( parent.childCount - countBefore );\n\t\t} else {\n\t\t\tnodes = this.remove( sourceRange );\n\t\t}\n\n\t\treturn this.insert( targetPosition, nodes );\n\t}\n\n\t/**\n\t * Wraps elements within range with provided {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\n\t * If a collapsed range is provided, it will be wrapped only if it is equal to view selection.\n\t *\n\t * If a collapsed range was passed and is same as selection, the selection\n\t * will be moved to the inside of the wrapped attribute element.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-invalid-range-container`\n\t * when {@link module:engine/view/range~Range#start}\n\t * and {@link module:engine/view/range~Range#end} positions are not placed inside same parent container.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-invalid-attribute` when passed attribute element is not\n\t * an instance of {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-nonselection-collapsed-range` when passed range\n\t * is collapsed and different than view selection.\n\t *\n\t * @param {module:engine/view/range~Range} range Range to wrap.\n\t * @param {module:engine/view/attributeelement~AttributeElement} attribute Attribute element to use as wrapper.\n\t * @returns {module:engine/view/range~Range} range Range after wrapping, spanning over wrapping attribute element.\n\t*/\n\twrap( range, attribute ) {\n\t\tif ( !( attribute instanceof AttributeElement ) ) {\n\t\t\tthrow new CKEditorError( 'view-writer-wrap-invalid-attribute', this.document );\n\t\t}\n\n\t\tvalidateRangeContainer( range, this.document );\n\n\t\tif ( !range.isCollapsed ) {\n\t\t\t// Non-collapsed range. Wrap it with the attribute element.\n\t\t\treturn this._wrapRange( range, attribute );\n\t\t} else {\n\t\t\t// Collapsed range. Wrap position.\n\t\t\tlet position = range.start;\n\n\t\t\tif ( position.parent.is( 'element' ) && !_hasNonUiChildren( position.parent ) ) {\n\t\t\t\tposition = position.getLastMatchingPosition( value => value.item.is( 'uiElement' ) );\n\t\t\t}\n\n\t\t\tposition = this._wrapPosition( position, attribute );\n\t\t\tconst viewSelection = this.document.selection;\n\n\t\t\t// If wrapping position is equal to view selection, move view selection inside wrapping attribute element.\n\t\t\tif ( viewSelection.isCollapsed && viewSelection.getFirstPosition().isEqual( range.start ) ) {\n\t\t\t\tthis.setSelection( position );\n\t\t\t}\n\n\t\t\treturn new Range( position );\n\t\t}\n\t}\n\n\t/**\n\t * Unwraps nodes within provided range from attribute element.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n\t * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n\t * same parent container.\n\t *\n\t * @param {module:engine/view/range~Range} range\n\t * @param {module:engine/view/attributeelement~AttributeElement} attribute\n\t */\n\tunwrap( range, attribute ) {\n\t\tif ( !( attribute instanceof AttributeElement ) ) {\n\t\t\t/**\n\t\t\t * Attribute element need to be instance of attribute element.\n\t\t\t *\n\t\t\t * @error view-writer-unwrap-invalid-attribute\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-writer-unwrap-invalid-attribute', this.document );\n\t\t}\n\n\t\tvalidateRangeContainer( range, this.document );\n\n\t\t// If range is collapsed - nothing to unwrap.\n\t\tif ( range.isCollapsed ) {\n\t\t\treturn range;\n\t\t}\n\n\t\t// Break attributes at range start and end.\n\t\tconst { start: breakStart, end: breakEnd } = this._breakAttributesRange( range, true );\n\t\tconst parentContainer = breakStart.parent;\n\n\t\t// Unwrap children located between break points.\n\t\tconst newRange = this._unwrapChildren( parentContainer, breakStart.offset, breakEnd.offset, attribute );\n\n\t\t// Merge attributes at the both ends and return a new range.\n\t\tconst start = this.mergeAttributes( newRange.start );\n\n\t\t// If start position was merged - move end position back.\n\t\tif ( !start.isEqual( newRange.start ) ) {\n\t\t\tnewRange.end.offset--;\n\t\t}\n\n\t\tconst end = this.mergeAttributes( newRange.end );\n\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Renames element by creating a copy of renamed element but with changed name and then moving contents of the\n\t * old element to the new one. Keep in mind that this will invalidate all {@link module:engine/view/position~Position positions} which\n\t * has renamed element as {@link module:engine/view/position~Position#parent a parent}.\n\t *\n\t * New element has to be created because `Element#tagName` property in DOM is readonly.\n\t *\n\t * Since this function creates a new element and removes the given one, the new element is returned to keep reference.\n\t *\n\t * @param {String} newName New name for element.\n\t * @param {module:engine/view/containerelement~ContainerElement} viewElement Element to be renamed.\n\t */\n\trename( newName, viewElement ) {\n\t\tconst newElement = new ContainerElement( newName, viewElement.getAttributes() );\n\n\t\tthis.insert( Position._createAfter( viewElement ), newElement );\n\t\tthis.move( Range._createIn( viewElement ), Position._createAt( newElement, 0 ) );\n\t\tthis.remove( Range._createOn( viewElement ) );\n\n\t\treturn newElement;\n\t}\n\n\t/**\n\t * Cleans up memory by removing obsolete cloned elements group from the writer.\n\t *\n\t * Should be used whenever all {@link module:engine/view/attributeelement~AttributeElement attribute elements}\n\t * with the same {@link module:engine/view/attributeelement~AttributeElement#id id} are going to be removed from the view and\n\t * the group will no longer be needed.\n\t *\n\t * Cloned elements group are not removed automatically in case if the group is still needed after all its elements\n\t * were removed from the view.\n\t *\n\t * Keep in mind that group names are equal to the `id` property of the attribute element.\n\t *\n\t * @param {String} groupName Name of the group to clear.\n\t */\n\tclearClonedElementsGroup( groupName ) {\n\t\tthis._cloneGroups.delete( groupName );\n\t}\n\n\t/**\n\t * Creates position at the given location. The location can be specified as:\n\t *\n\t * * a {@link module:engine/view/position~Position position},\n\t * * parent element and offset (offset defaults to `0`),\n\t * * parent element and `'end'` (sets position at the end of that element),\n\t * * {@link module:engine/view/item~Item view item} and `'before'` or `'after'` (sets position before or after given view item).\n\t *\n\t * This method is a shortcut to other constructors such as:\n\t *\n\t * * {@link #createPositionBefore},\n\t * * {@link #createPositionAfter},\n\t *\n\t * @param {module:engine/view/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\n\t */\n\tcreatePositionAt( itemOrPosition, offset ) {\n\t\treturn Position._createAt( itemOrPosition, offset );\n\t}\n\n\t/**\n\t * Creates a new position after given view item.\n\t *\n\t * @param {module:engine/view/item~Item} item View item after which the position should be located.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tcreatePositionAfter( item ) {\n\t\treturn Position._createAfter( item );\n\t}\n\n\t/**\n\t * Creates a new position before given view item.\n\t *\n\t * @param {module:engine/view/item~Item} item View item before which the position should be located.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tcreatePositionBefore( item ) {\n\t\treturn Position._createBefore( item );\n\t}\n\n\t/**\n\t * Creates a range spanning from `start` position to `end` position.\n\t *\n\t * **Note:** This factory method creates it's own {@link module:engine/view/position~Position} instances basing on passed values.\n\t *\n\t * @param {module:engine/view/position~Position} start Start position.\n\t * @param {module:engine/view/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tcreateRange( start, end ) {\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Creates a range that starts before given {@link module:engine/view/item~Item view item} and ends after it.\n\t *\n\t * @param {module:engine/view/item~Item} item\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tcreateRangeOn( item ) {\n\t\treturn Range._createOn( item );\n\t}\n\n\t/**\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n\t * that element and ends after the last child of that element.\n\t *\n\t * @param {module:engine/view/element~Element} element Element which is a parent for the range.\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tcreateRangeIn( element ) {\n\t\treturn Range._createIn( element );\n\t}\n\n\t/**\n\t Creates new {@link module:engine/view/selection~Selection} instance.\n\t *\n\t * \t\t// Creates empty selection without ranges.\n\t *\t\tconst selection = writer.createSelection();\n\t *\n\t *\t\t// Creates selection at the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\tconst selection = writer.createSelection( range );\n\t *\n\t *\t\t// Creates selection at the given ranges\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n\t *\t\tconst selection = writer.createSelection( ranges );\n\t *\n\t *\t\t// Creates selection from the other selection.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\tconst selection = writer.createSelection( otherSelection );\n\t *\n\t *\t\t// Creates selection from the document selection.\n\t *\t\tconst selection = writer.createSelection( editor.editing.view.document.selection );\n\t *\n\t * \t\t// Creates selection at the given position.\n\t *\t\tconst position = writer.createPositionFromPath( root, path );\n\t *\t\tconst selection = writer.createSelection( position );\n\t *\n\t *\t\t// Creates collapsed selection at the position of given item and offset.\n\t *\t\tconst paragraph = writer.createContainerElement( 'p' );\n\t *\t\tconst selection = writer.createSelection( paragraph, offset );\n\t *\n\t *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\n\t *\t\t// first child of that element and ends after the last child of that element.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'in' );\n\t *\n\t *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\n\t *\t\t// just after the item.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'on' );\n\t *\n\t * `Selection`'s constructor allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n\t *\n\t *\t\t// Creates backward selection.\n\t *\t\tconst selection = writer.createSelection( range, { backward: true } );\n\t *\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n\t * represented in other way, for example by applying proper CSS class.\n\t *\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n\t * (and be  properly handled by screen readers).\n\t *\n\t *\t\t// Creates fake selection with label.\n\t *\t\tconst selection = writer.createSelection( range, { fake: true, label: 'foo' } );\n\t *\n\t * @param {module:engine/view/selection~Selectable} [selectable=null]\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n\t * @param {String} [options.label] Label for the fake selection.\n\t * @returns {module:engine/view/selection~Selection}\n\t */\n\tcreateSelection( selectable, placeOrOffset, options ) {\n\t\treturn new Selection( selectable, placeOrOffset, options );\n\t}\n\n\t/**\n\t * Wraps children with provided `wrapElement`. Only children contained in `parent` element between\n\t * `startOffset` and `endOffset` will be wrapped.\n\t *\n\t * @private\n\t * @param {module:engine/view/element~Element} parent\n\t * @param {Number} startOffset\n\t * @param {Number} endOffset\n\t * @param {module:engine/view/element~Element} wrapElement\n\t */\n\t_wrapChildren( parent, startOffset, endOffset, wrapElement ) {\n\t\tlet i = startOffset;\n\t\tconst wrapPositions = [];\n\n\t\twhile ( i < endOffset ) {\n\t\t\tconst child = parent.getChild( i );\n\t\t\tconst isText = child.is( 'text' );\n\t\t\tconst isAttribute = child.is( 'attributeElement' );\n\t\t\tconst isEmpty = child.is( 'emptyElement' );\n\t\t\tconst isUI = child.is( 'uiElement' );\n\n\t\t\t//\n\t\t\t// (In all examples, assume that `wrapElement` is `<span class=\"foo\">` element.)\n\t\t\t//\n\t\t\t// Check if `wrapElement` can be joined with the wrapped element. One of requirements is having same name.\n\t\t\t// If possible, join elements.\n\t\t\t//\n\t\t\t// <p><span class=\"bar\">abc</span></p>  -->  <p><span class=\"foo bar\">abc</span></p>\n\t\t\t//\n\t\t\tif ( isAttribute && this._wrapAttributeElement( wrapElement, child ) ) {\n\t\t\t\twrapPositions.push( new Position( parent, i ) );\n\t\t\t}\n\t\t\t//\n\t\t\t// Wrap the child if it is not an attribute element or if it is an attribute element that should be inside\n\t\t\t// `wrapElement` (due to priority).\n\t\t\t//\n\t\t\t// <p>abc</p>                   -->  <p><span class=\"foo\">abc</span></p>\n\t\t\t// <p><strong>abc</strong></p>  -->  <p><span class=\"foo\"><strong>abc</strong></span></p>\n\t\t\t//\n\t\t\telse if ( isText || isEmpty || isUI || ( isAttribute && shouldABeOutsideB( wrapElement, child ) ) ) {\n\t\t\t\t// Clone attribute.\n\t\t\t\tconst newAttribute = wrapElement._clone();\n\n\t\t\t\t// Wrap current node with new attribute.\n\t\t\t\tchild._remove();\n\t\t\t\tnewAttribute._appendChild( child );\n\n\t\t\t\tparent._insertChild( i, newAttribute );\n\t\t\t\tthis._addToClonedElementsGroup( newAttribute );\n\n\t\t\t\twrapPositions.push( new Position( parent, i ) );\n\t\t\t}\n\t\t\t//\n\t\t\t// If other nested attribute is found and it wasn't wrapped (see above), continue wrapping inside it.\n\t\t\t//\n\t\t\t// <p><a href=\"foo.html\">abc</a></p>  -->  <p><a href=\"foo.html\"><span class=\"foo\">abc</span></a></p>\n\t\t\t//\n\t\t\telse if ( isAttribute ) {\n\t\t\t\tthis._wrapChildren( child, 0, child.childCount, wrapElement );\n\t\t\t}\n\n\t\t\ti++;\n\t\t}\n\n\t\t// Merge at each wrap.\n\t\tlet offsetChange = 0;\n\n\t\tfor ( const position of wrapPositions ) {\n\t\t\tposition.offset -= offsetChange;\n\n\t\t\t// Do not merge with elements outside selected children.\n\t\t\tif ( position.offset == startOffset ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst newPosition = this.mergeAttributes( position );\n\n\t\t\t// If nodes were merged - other merge offsets will change.\n\t\t\tif ( !newPosition.isEqual( position ) ) {\n\t\t\t\toffsetChange++;\n\t\t\t\tendOffset--;\n\t\t\t}\n\t\t}\n\n\t\treturn Range._createFromParentsAndOffsets( parent, startOffset, parent, endOffset );\n\t}\n\n\t/**\n\t * Unwraps children from provided `unwrapElement`. Only children contained in `parent` element between\n\t * `startOffset` and `endOffset` will be unwrapped.\n\t *\n\t * @private\n\t * @param {module:engine/view/element~Element} parent\n\t * @param {Number} startOffset\n\t * @param {Number} endOffset\n\t * @param {module:engine/view/element~Element} unwrapElement\n\t */\n\t_unwrapChildren( parent, startOffset, endOffset, unwrapElement ) {\n\t\tlet i = startOffset;\n\t\tconst unwrapPositions = [];\n\n\t\t// Iterate over each element between provided offsets inside parent.\n\t\t// We don't use tree walker or range iterator because we will be removing and merging potentially multiple nodes,\n\t\t// so it could get messy. It is safer to it manually in this case.\n\t\twhile ( i < endOffset ) {\n\t\t\tconst child = parent.getChild( i );\n\n\t\t\t// Skip all text nodes. There should be no container element's here either.\n\t\t\tif ( !child.is( 'attributeElement' ) ) {\n\t\t\t\ti++;\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t//\n\t\t\t// (In all examples, assume that `unwrapElement` is `<span class=\"foo\">` element.)\n\t\t\t//\n\t\t\t// If the child is similar to the given attribute element, unwrap it - it will be completely removed.\n\t\t\t//\n\t\t\t// <p><span class=\"foo\">abc</span>xyz</p>  -->  <p>abcxyz</p>\n\t\t\t//\n\t\t\tif ( child.isSimilar( unwrapElement ) ) {\n\t\t\t\tconst unwrapped = child.getChildren();\n\t\t\t\tconst count = child.childCount;\n\n\t\t\t\t// Replace wrapper element with its children\n\t\t\t\tchild._remove();\n\t\t\t\tparent._insertChild( i, unwrapped );\n\n\t\t\t\tthis._removeFromClonedElementsGroup( child );\n\n\t\t\t\t// Save start and end position of moved items.\n\t\t\t\tunwrapPositions.push(\n\t\t\t\t\tnew Position( parent, i ),\n\t\t\t\t\tnew Position( parent, i + count )\n\t\t\t\t);\n\n\t\t\t\t// Skip elements that were unwrapped. Assuming there won't be another element to unwrap in child elements.\n\t\t\t\ti += count;\n\t\t\t\tendOffset += count - 1;\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t//\n\t\t\t// If the child is not similar but is an attribute element, try partial unwrapping - remove the same attributes/styles/classes.\n\t\t\t// Partial unwrapping will happen only if the elements have the same name.\n\t\t\t//\n\t\t\t// <p><span class=\"foo bar\">abc</span>xyz</p>  -->  <p><span class=\"bar\">abc</span>xyz</p>\n\t\t\t// <p><i class=\"foo\">abc</i>xyz</p>            -->  <p><i class=\"foo\">abc</i>xyz</p>\n\t\t\t//\n\t\t\tif ( this._unwrapAttributeElement( unwrapElement, child ) ) {\n\t\t\t\tunwrapPositions.push(\n\t\t\t\t\tnew Position( parent, i ),\n\t\t\t\t\tnew Position( parent, i + 1 )\n\t\t\t\t);\n\n\t\t\t\ti++;\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t//\n\t\t\t// If other nested attribute is found, look through it's children for elements to unwrap.\n\t\t\t//\n\t\t\t// <p><i><span class=\"foo\">abc</span></i><p>  -->  <p><i>abc</i><p>\n\t\t\t//\n\t\t\tthis._unwrapChildren( child, 0, child.childCount, unwrapElement );\n\n\t\t\ti++;\n\t\t}\n\n\t\t// Merge at each unwrap.\n\t\tlet offsetChange = 0;\n\n\t\tfor ( const position of unwrapPositions ) {\n\t\t\tposition.offset -= offsetChange;\n\n\t\t\t// Do not merge with elements outside selected children.\n\t\t\tif ( position.offset == startOffset || position.offset == endOffset ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst newPosition = this.mergeAttributes( position );\n\n\t\t\t// If nodes were merged - other merge offsets will change.\n\t\t\tif ( !newPosition.isEqual( position ) ) {\n\t\t\t\toffsetChange++;\n\t\t\t\tendOffset--;\n\t\t\t}\n\t\t}\n\n\t\treturn Range._createFromParentsAndOffsets( parent, startOffset, parent, endOffset );\n\t}\n\n\t/**\n\t * Helper function for `view.writer.wrap`. Wraps range with provided attribute element.\n\t * This method will also merge newly added attribute element with its siblings whenever possible.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-invalid-attribute` when passed attribute element is not\n\t * an instance of {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\n\t *\n\t * @private\n\t * @param {module:engine/view/range~Range} range\n\t * @param {module:engine/view/attributeelement~AttributeElement} attribute\n\t * @returns {module:engine/view/range~Range} New range after wrapping, spanning over wrapping attribute element.\n\t */\n\t_wrapRange( range, attribute ) {\n\t\t// Break attributes at range start and end.\n\t\tconst { start: breakStart, end: breakEnd } = this._breakAttributesRange( range, true );\n\t\tconst parentContainer = breakStart.parent;\n\n\t\t// Wrap all children with attribute.\n\t\tconst newRange = this._wrapChildren( parentContainer, breakStart.offset, breakEnd.offset, attribute );\n\n\t\t// Merge attributes at the both ends and return a new range.\n\t\tconst start = this.mergeAttributes( newRange.start );\n\n\t\t// If start position was merged - move end position back.\n\t\tif ( !start.isEqual( newRange.start ) ) {\n\t\t\tnewRange.end.offset--;\n\t\t}\n\t\tconst end = this.mergeAttributes( newRange.end );\n\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Helper function for {@link #wrap}. Wraps position with provided attribute element.\n\t * This method will also merge newly added attribute element with its siblings whenever possible.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-invalid-attribute` when passed attribute element is not\n\t * an instance of {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\n\t *\n\t * @private\n\t * @param {module:engine/view/position~Position} position\n\t * @param {module:engine/view/attributeelement~AttributeElement} attribute\n\t * @returns {module:engine/view/position~Position} New position after wrapping.\n\t */\n\t_wrapPosition( position, attribute ) {\n\t\t// Return same position when trying to wrap with attribute similar to position parent.\n\t\tif ( attribute.isSimilar( position.parent ) ) {\n\t\t\treturn movePositionToTextNode( position.clone() );\n\t\t}\n\n\t\t// When position is inside text node - break it and place new position between two text nodes.\n\t\tif ( position.parent.is( 'text' ) ) {\n\t\t\tposition = breakTextNode( position );\n\t\t}\n\n\t\t// Create fake element that will represent position, and will not be merged with other attributes.\n\t\tconst fakePosition = this.createAttributeElement();\n\t\tfakePosition._priority = Number.POSITIVE_INFINITY;\n\t\tfakePosition.isSimilar = () => false;\n\n\t\t// Insert fake element in position location.\n\t\tposition.parent._insertChild( position.offset, fakePosition );\n\n\t\t// Range around inserted fake attribute element.\n\t\tconst wrapRange = new Range( position, position.getShiftedBy( 1 ) );\n\n\t\t// Wrap fake element with attribute (it will also merge if possible).\n\t\tthis.wrap( wrapRange, attribute );\n\n\t\t// Remove fake element and place new position there.\n\t\tconst newPosition = new Position( fakePosition.parent, fakePosition.index );\n\t\tfakePosition._remove();\n\n\t\t// If position is placed between text nodes - merge them and return position inside.\n\t\tconst nodeBefore = newPosition.nodeBefore;\n\t\tconst nodeAfter = newPosition.nodeAfter;\n\n\t\tif ( nodeBefore instanceof Text && nodeAfter instanceof Text ) {\n\t\t\treturn mergeTextNodes( nodeBefore, nodeAfter );\n\t\t}\n\n\t\t// If position is next to text node - move position inside.\n\t\treturn movePositionToTextNode( newPosition );\n\t}\n\n\t/**\n\t * \tWraps one {@link module:engine/view/attributeelement~AttributeElement AttributeElement} into another by\n\t * \tmerging them if possible. When merging is possible - all attributes, styles and classes are moved from wrapper\n\t * \telement to element being wrapped.\n\t *\n\t * \t@private\n\t * \t@param {module:engine/view/attributeelement~AttributeElement} wrapper Wrapper AttributeElement.\n\t * \t@param {module:engine/view/attributeelement~AttributeElement} toWrap AttributeElement to wrap using wrapper element.\n\t * \t@returns {Boolean} Returns `true` if elements are merged.\n\t */\n\t_wrapAttributeElement( wrapper, toWrap ) {\n\t\tif ( !canBeJoined( wrapper, toWrap ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Can't merge if name or priority differs.\n\t\tif ( wrapper.name !== toWrap.name || wrapper.priority !== toWrap.priority ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if attributes can be merged.\n\t\tfor ( const key of wrapper.getAttributeKeys() ) {\n\t\t\t// Classes and styles should be checked separately.\n\t\t\tif ( key === 'class' || key === 'style' ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If some attributes are different we cannot wrap.\n\t\t\tif ( toWrap.hasAttribute( key ) && toWrap.getAttribute( key ) !== wrapper.getAttribute( key ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Check if styles can be merged.\n\t\tfor ( const key of wrapper.getStyleNames() ) {\n\t\t\tif ( toWrap.hasStyle( key ) && toWrap.getStyle( key ) !== wrapper.getStyle( key ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Move all attributes/classes/styles from wrapper to wrapped AttributeElement.\n\t\tfor ( const key of wrapper.getAttributeKeys() ) {\n\t\t\t// Classes and styles should be checked separately.\n\t\t\tif ( key === 'class' || key === 'style' ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Move only these attributes that are not present - other are similar.\n\t\t\tif ( !toWrap.hasAttribute( key ) ) {\n\t\t\t\tthis.setAttribute( key, wrapper.getAttribute( key ), toWrap );\n\t\t\t}\n\t\t}\n\n\t\tfor ( const key of wrapper.getStyleNames() ) {\n\t\t\tif ( !toWrap.hasStyle( key ) ) {\n\t\t\t\tthis.setStyle( key, wrapper.getStyle( key ), toWrap );\n\t\t\t}\n\t\t}\n\n\t\tfor ( const key of wrapper.getClassNames() ) {\n\t\t\tif ( !toWrap.hasClass( key ) ) {\n\t\t\t\tthis.addClass( key, toWrap );\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Unwraps {@link module:engine/view/attributeelement~AttributeElement AttributeElement} from another by removing\n\t * corresponding attributes, classes and styles. All attributes, classes and styles from wrapper should be present\n\t * inside element being unwrapped.\n\t *\n\t * @private\n\t * @param {module:engine/view/attributeelement~AttributeElement} wrapper Wrapper AttributeElement.\n\t * @param {module:engine/view/attributeelement~AttributeElement} toUnwrap AttributeElement to unwrap using wrapper element.\n\t * @returns {Boolean} Returns `true` if elements are unwrapped.\n\t **/\n\t_unwrapAttributeElement( wrapper, toUnwrap ) {\n\t\tif ( !canBeJoined( wrapper, toUnwrap ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Can't unwrap if name or priority differs.\n\t\tif ( wrapper.name !== toUnwrap.name || wrapper.priority !== toUnwrap.priority ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if AttributeElement has all wrapper attributes.\n\t\tfor ( const key of wrapper.getAttributeKeys() ) {\n\t\t\t// Classes and styles should be checked separately.\n\t\t\tif ( key === 'class' || key === 'style' ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If some attributes are missing or different we cannot unwrap.\n\t\t\tif ( !toUnwrap.hasAttribute( key ) || toUnwrap.getAttribute( key ) !== wrapper.getAttribute( key ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Check if AttributeElement has all wrapper classes.\n\t\tif ( !toUnwrap.hasClass( ...wrapper.getClassNames() ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if AttributeElement has all wrapper styles.\n\t\tfor ( const key of wrapper.getStyleNames() ) {\n\t\t\t// If some styles are missing or different we cannot unwrap.\n\t\t\tif ( !toUnwrap.hasStyle( key ) || toUnwrap.getStyle( key ) !== wrapper.getStyle( key ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Remove all wrapper's attributes from unwrapped element.\n\t\tfor ( const key of wrapper.getAttributeKeys() ) {\n\t\t\t// Classes and styles should be checked separately.\n\t\t\tif ( key === 'class' || key === 'style' ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis.removeAttribute( key, toUnwrap );\n\t\t}\n\n\t\t// Remove all wrapper's classes from unwrapped element.\n\t\tthis.removeClass( Array.from( wrapper.getClassNames() ), toUnwrap );\n\n\t\t// Remove all wrapper's styles from unwrapped element.\n\t\tthis.removeStyle( Array.from( wrapper.getStyleNames() ), toUnwrap );\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Helper function used by other `DowncastWriter` methods. Breaks attribute elements at the boundaries of given range.\n\t *\n\t * @private\n\t * @param {module:engine/view/range~Range} range Range which `start` and `end` positions will be used to break attributes.\n\t * @param {Boolean} [forceSplitText=false] If set to `true`, will break text nodes even if they are directly in container element.\n\t * This behavior will result in incorrect view state, but is needed by other view writing methods which then fixes view state.\n\t * @returns {module:engine/view/range~Range} New range with located at break positions.\n\t */\n\t_breakAttributesRange( range, forceSplitText = false ) {\n\t\tconst rangeStart = range.start;\n\t\tconst rangeEnd = range.end;\n\n\t\tvalidateRangeContainer( range, this.document );\n\n\t\t// Break at the collapsed position. Return new collapsed range.\n\t\tif ( range.isCollapsed ) {\n\t\t\tconst position = this._breakAttributes( range.start, forceSplitText );\n\n\t\t\treturn new Range( position, position );\n\t\t}\n\n\t\tconst breakEnd = this._breakAttributes( rangeEnd, forceSplitText );\n\t\tconst count = breakEnd.parent.childCount;\n\t\tconst breakStart = this._breakAttributes( rangeStart, forceSplitText );\n\n\t\t// Calculate new break end offset.\n\t\tbreakEnd.offset += breakEnd.parent.childCount - count;\n\n\t\treturn new Range( breakStart, breakEnd );\n\t}\n\n\t/**\n\t * Helper function used by other `DowncastWriter` methods. Breaks attribute elements at given position.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-empty-element` when break position\n\t * is placed inside {@link module:engine/view/emptyelement~EmptyElement EmptyElement}.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-ui-element` when break position\n\t * is placed inside {@link module:engine/view/uielement~UIElement UIElement}.\n\t *\n\t * @private\n\t * @param {module:engine/view/position~Position} position Position where to break attributes.\n\t * @param {Boolean} [forceSplitText=false] If set to `true`, will break text nodes even if they are directly in container element.\n\t * This behavior will result in incorrect view state, but is needed by other view writing methods which then fixes view state.\n\t * @returns {module:engine/view/position~Position} New position after breaking the attributes.\n\t */\n\t_breakAttributes( position, forceSplitText = false ) {\n\t\tconst positionOffset = position.offset;\n\t\tconst positionParent = position.parent;\n\n\t\t// If position is placed inside EmptyElement - throw an exception as we cannot break inside.\n\t\tif ( position.parent.is( 'emptyElement' ) ) {\n\t\t\t/**\n\t\t\t * Cannot break inside EmptyElement instance.\n\t\t\t *\n\t\t\t * @error view-writer-cannot-break-empty-element\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-writer-cannot-break-empty-element', this.document );\n\t\t}\n\n\t\t// If position is placed inside UIElement - throw an exception as we cannot break inside.\n\t\tif ( position.parent.is( 'uiElement' ) ) {\n\t\t\t/**\n\t\t\t * Cannot break inside UIElement instance.\n\t\t\t *\n\t\t\t * @error view-writer-cannot-break-ui-element\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-writer-cannot-break-ui-element', this.document );\n\t\t}\n\n\t\t// There are no attributes to break and text nodes breaking is not forced.\n\t\tif ( !forceSplitText && positionParent.is( 'text' ) && isContainerOrFragment( positionParent.parent ) ) {\n\t\t\treturn position.clone();\n\t\t}\n\n\t\t// Position's parent is container, so no attributes to break.\n\t\tif ( isContainerOrFragment( positionParent ) ) {\n\t\t\treturn position.clone();\n\t\t}\n\n\t\t// Break text and start again in new position.\n\t\tif ( positionParent.is( 'text' ) ) {\n\t\t\treturn this._breakAttributes( breakTextNode( position ), forceSplitText );\n\t\t}\n\n\t\tconst length = positionParent.childCount;\n\n\t\t// <p>foo<b><u>bar{}</u></b></p>\n\t\t// <p>foo<b><u>bar</u>[]</b></p>\n\t\t// <p>foo<b><u>bar</u></b>[]</p>\n\t\tif ( positionOffset == length ) {\n\t\t\tconst newPosition = new Position( positionParent.parent, positionParent.index + 1 );\n\n\t\t\treturn this._breakAttributes( newPosition, forceSplitText );\n\t\t} else {\n\t\t\t// <p>foo<b><u>{}bar</u></b></p>\n\t\t\t// <p>foo<b>[]<u>bar</u></b></p>\n\t\t\t// <p>foo{}<b><u>bar</u></b></p>\n\t\t\tif ( positionOffset === 0 ) {\n\t\t\t\tconst newPosition = new Position( positionParent.parent, positionParent.index );\n\n\t\t\t\treturn this._breakAttributes( newPosition, forceSplitText );\n\t\t\t}\n\t\t\t// <p>foo<b><u>b{}ar</u></b></p>\n\t\t\t// <p>foo<b><u>b[]ar</u></b></p>\n\t\t\t// <p>foo<b><u>b</u>[]<u>ar</u></b></p>\n\t\t\t// <p>foo<b><u>b</u></b>[]<b><u>ar</u></b></p>\n\t\t\telse {\n\t\t\t\tconst offsetAfter = positionParent.index + 1;\n\n\t\t\t\t// Break element.\n\t\t\t\tconst clonedNode = positionParent._clone();\n\n\t\t\t\t// Insert cloned node to position's parent node.\n\t\t\t\tpositionParent.parent._insertChild( offsetAfter, clonedNode );\n\t\t\t\tthis._addToClonedElementsGroup( clonedNode );\n\n\t\t\t\t// Get nodes to move.\n\t\t\t\tconst count = positionParent.childCount - positionOffset;\n\t\t\t\tconst nodesToMove = positionParent._removeChildren( positionOffset, count );\n\n\t\t\t\t// Move nodes to cloned node.\n\t\t\t\tclonedNode._appendChild( nodesToMove );\n\n\t\t\t\t// Create new position to work on.\n\t\t\t\tconst newPosition = new Position( positionParent.parent, offsetAfter );\n\n\t\t\t\treturn this._breakAttributes( newPosition, forceSplitText );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Stores the information that an {@link module:engine/view/attributeelement~AttributeElement attribute element} was\n\t * added to the tree. Saves the reference to the group in the given element and updates the group, so other elements\n\t * from the group now keep a reference to the given attribute element.\n\t *\n\t * The clones group can be obtained using {@link module:engine/view/attributeelement~AttributeElement#getElementsWithSameId}.\n\t *\n\t * Does nothing if added element has no {@link module:engine/view/attributeelement~AttributeElement#id id}.\n\t *\n\t * @private\n\t * @param {module:engine/view/attributeelement~AttributeElement} element Attribute element to save.\n\t */\n\t_addToClonedElementsGroup( element ) {\n\t\t// Add only if the element is in document tree.\n\t\tif ( !element.root.is( 'rootElement' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Traverse the element's children recursively to find other attribute elements that also might got inserted.\n\t\t// The loop is at the beginning so we can make fast returns later in the code.\n\t\tif ( element.is( 'element' ) ) {\n\t\t\tfor ( const child of element.getChildren() ) {\n\t\t\t\tthis._addToClonedElementsGroup( child );\n\t\t\t}\n\t\t}\n\n\t\tconst id = element.id;\n\n\t\tif ( !id ) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet group = this._cloneGroups.get( id );\n\n\t\tif ( !group ) {\n\t\t\tgroup = new Set();\n\t\t\tthis._cloneGroups.set( id, group );\n\t\t}\n\n\t\tgroup.add( element );\n\t\telement._clonesGroup = group;\n\t}\n\n\t/**\n\t * Removes all the information about the given {@link module:engine/view/attributeelement~AttributeElement attribute element}\n\t * from its clones group.\n\t *\n\t * Keep in mind, that the element will still keep a reference to the group (but the group will not keep a reference to it).\n\t * This allows to reference the whole group even if the element was already removed from the tree.\n\t *\n\t * Does nothing if the element has no {@link module:engine/view/attributeelement~AttributeElement#id id}.\n\t *\n\t * @private\n\t * @param {module:engine/view/attributeelement~AttributeElement} element Attribute element to remove.\n\t */\n\t_removeFromClonedElementsGroup( element ) {\n\t\t// Traverse the element's children recursively to find other attribute elements that also got removed.\n\t\t// The loop is at the beginning so we can make fast returns later in the code.\n\t\tif ( element.is( 'element' ) ) {\n\t\t\tfor ( const child of element.getChildren() ) {\n\t\t\t\tthis._removeFromClonedElementsGroup( child );\n\t\t\t}\n\t\t}\n\n\t\tconst id = element.id;\n\n\t\tif ( !id ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst group = this._cloneGroups.get( id );\n\n\t\tif ( !group ) {\n\t\t\treturn;\n\t\t}\n\n\t\tgroup.delete( element );\n\t\t// Not removing group from element on purpose!\n\t\t// If other parts of code have reference to this element, they will be able to get references to other elements from the group.\n\t}\n}\n\n// Helper function for `view.writer.wrap`. Checks if given element has any children that are not ui elements.\nfunction _hasNonUiChildren( parent ) {\n\treturn Array.from( parent.getChildren() ).some( child => !child.is( 'uiElement' ) );\n}\n\n/**\n * Attribute element need to be instance of attribute element.\n *\n * @error view-writer-wrap-invalid-attribute\n */\n\n// Returns first parent container of specified {@link module:engine/view/position~Position Position}.\n// Position's parent node is checked as first, then next parents are checked.\n// Note that {@link module:engine/view/documentfragment~DocumentFragment DocumentFragment} is treated like a container.\n//\n// @param {module:engine/view/position~Position} position Position used as a start point to locate parent container.\n// @returns {module:engine/view/containerelement~ContainerElement|module:engine/view/documentfragment~DocumentFragment|undefined}\n// Parent container element or `undefined` if container is not found.\nfunction getParentContainer( position ) {\n\tlet parent = position.parent;\n\n\twhile ( !isContainerOrFragment( parent ) ) {\n\t\tif ( !parent ) {\n\t\t\treturn undefined;\n\t\t}\n\t\tparent = parent.parent;\n\t}\n\n\treturn parent;\n}\n\n// Checks if first {@link module:engine/view/attributeelement~AttributeElement AttributeElement} provided to the function\n// can be wrapped otuside second element. It is done by comparing elements'\n// {@link module:engine/view/attributeelement~AttributeElement#priority priorities}, if both have same priority\n// {@link module:engine/view/element~Element#getIdentity identities} are compared.\n//\n// @param {module:engine/view/attributeelement~AttributeElement} a\n// @param {module:engine/view/attributeelement~AttributeElement} b\n// @returns {Boolean}\nfunction shouldABeOutsideB( a, b ) {\n\tif ( a.priority < b.priority ) {\n\t\treturn true;\n\t} else if ( a.priority > b.priority ) {\n\t\treturn false;\n\t}\n\n\t// When priorities are equal and names are different - use identities.\n\treturn a.getIdentity() < b.getIdentity();\n}\n\n// Returns new position that is moved to near text node. Returns same position if there is no text node before of after\n// specified position.\n//\n//\t\t<p>foo[]</p>  ->  <p>foo{}</p>\n//\t\t<p>[]foo</p>  ->  <p>{}foo</p>\n//\n// @param {module:engine/view/position~Position} position\n// @returns {module:engine/view/position~Position} Position located inside text node or same position if there is no text nodes\n// before or after position location.\nfunction movePositionToTextNode( position ) {\n\tconst nodeBefore = position.nodeBefore;\n\n\tif ( nodeBefore && nodeBefore.is( 'text' ) ) {\n\t\treturn new Position( nodeBefore, nodeBefore.data.length );\n\t}\n\n\tconst nodeAfter = position.nodeAfter;\n\n\tif ( nodeAfter && nodeAfter.is( 'text' ) ) {\n\t\treturn new Position( nodeAfter, 0 );\n\t}\n\n\treturn position;\n}\n\n// Breaks text node into two text nodes when possible.\n//\n//\t\t<p>foo{}bar</p> -> <p>foo[]bar</p>\n//\t\t<p>{}foobar</p> -> <p>[]foobar</p>\n//\t\t<p>foobar{}</p> -> <p>foobar[]</p>\n//\n// @param {module:engine/view/position~Position} position Position that need to be placed inside text node.\n// @returns {module:engine/view/position~Position} New position after breaking text node.\nfunction breakTextNode( position ) {\n\tif ( position.offset == position.parent.data.length ) {\n\t\treturn new Position( position.parent.parent, position.parent.index + 1 );\n\t}\n\n\tif ( position.offset === 0 ) {\n\t\treturn new Position( position.parent.parent, position.parent.index );\n\t}\n\n\t// Get part of the text that need to be moved.\n\tconst textToMove = position.parent.data.slice( position.offset );\n\n\t// Leave rest of the text in position's parent.\n\tposition.parent._data = position.parent.data.slice( 0, position.offset );\n\n\t// Insert new text node after position's parent text node.\n\tposition.parent.parent._insertChild( position.parent.index + 1, new Text( textToMove ) );\n\n\t// Return new position between two newly created text nodes.\n\treturn new Position( position.parent.parent, position.parent.index + 1 );\n}\n\n// Merges two text nodes into first node. Removes second node and returns merge position.\n//\n// @param {module:engine/view/text~Text} t1 First text node to merge. Data from second text node will be moved at the end of\n// this text node.\n// @param {module:engine/view/text~Text} t2 Second text node to merge. This node will be removed after merging.\n// @returns {module:engine/view/position~Position} Position after merging text nodes.\nfunction mergeTextNodes( t1, t2 ) {\n\t// Merge text data into first text node and remove second one.\n\tconst nodeBeforeLength = t1.data.length;\n\tt1._data += t2.data;\n\tt2._remove();\n\n\treturn new Position( t1, nodeBeforeLength );\n}\n\n// Checks if provided nodes are valid to insert. Checks if each node is an instance of\n// {@link module:engine/view/text~Text Text} or {@link module:engine/view/attributeelement~AttributeElement AttributeElement},\n// {@link module:engine/view/containerelement~ContainerElement ContainerElement},\n// {@link module:engine/view/emptyelement~EmptyElement EmptyElement} or\n// {@link module:engine/view/uielement~UIElement UIElement}.\n//\n// Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-insert-invalid-node` when nodes to insert\n// contains instances that are not {@link module:engine/view/text~Text Texts},\n// {@link module:engine/view/emptyelement~EmptyElement EmptyElements},\n// {@link module:engine/view/uielement~UIElement UIElements},\n// {@link module:engine/view/attributeelement~AttributeElement AttributeElements} or\n// {@link module:engine/view/containerelement~ContainerElement ContainerElements}.\n//\n// @param Iterable.<module:engine/view/text~Text|module:engine/view/attributeelement~AttributeElement\n// |module:engine/view/containerelement~ContainerElement> nodes\n// @param {Object} errorContext\nfunction validateNodesToInsert( nodes, errorContext ) {\n\tfor ( const node of nodes ) {\n\t\tif ( !validNodesToInsert.some( ( validNode => node instanceof validNode ) ) ) { // eslint-disable-line no-use-before-define\n\t\t\t/**\n\t\t\t * Inserted nodes should be valid to insert. of {@link module:engine/view/attributeelement~AttributeElement AttributeElement},\n\t\t\t * {@link module:engine/view/containerelement~ContainerElement ContainerElement},\n\t\t\t * {@link module:engine/view/emptyelement~EmptyElement EmptyElement},\n\t\t\t * {@link module:engine/view/uielement~UIElement UIElement}, {@link module:engine/view/text~Text Text}.\n\t\t\t *\n\t\t\t * @error view-writer-insert-invalid-node\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-writer-insert-invalid-node', errorContext );\n\t\t}\n\n\t\tif ( !node.is( 'text' ) ) {\n\t\t\tvalidateNodesToInsert( node.getChildren(), errorContext );\n\t\t}\n\t}\n}\n\nconst validNodesToInsert = [ Text, AttributeElement, ContainerElement, EmptyElement, UIElement ];\n\n// Checks if node is ContainerElement or DocumentFragment, because in most cases they should be treated the same way.\n//\n// @param {module:engine/view/node~Node} node\n// @returns {Boolean} Returns `true` if node is instance of ContainerElement or DocumentFragment.\nfunction isContainerOrFragment( node ) {\n\treturn node && ( node.is( 'containerElement' ) || node.is( 'documentFragment' ) );\n}\n\n// Checks if {@link module:engine/view/range~Range#start range start} and {@link module:engine/view/range~Range#end range end} are placed\n// inside same {@link module:engine/view/containerelement~ContainerElement container element}.\n// Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when validation fails.\n//\n// @param {module:engine/view/range~Range} range\n// @param {Object} errorContext\nfunction validateRangeContainer( range, errorContext ) {\n\tconst startContainer = getParentContainer( range.start );\n\tconst endContainer = getParentContainer( range.end );\n\n\tif ( !startContainer || !endContainer || startContainer !== endContainer ) {\n\t\t/**\n\t\t * Range container is invalid. This can happen if {@link module:engine/view/range~Range#start range start} and\n\t\t * {@link module:engine/view/range~Range#end range end} positions are not placed inside same container or\n\t\t * parent container for these positions cannot be found.\n\t\t *\n\t\t * @error view-writer-invalid-range-container\n\t\t */\n\n\t\tthrow new CKEditorError( 'view-writer-invalid-range-container', errorContext );\n\t}\n}\n\n// Checks if two attribute elements can be joined together. Elements can be joined together if, and only if\n// they do not have ids specified.\n//\n// @private\n// @param {module:engine/view/element~Element} a\n// @param {module:engine/view/element~Element} b\n// @returns {Boolean}\nfunction canBeJoined( a, b ) {\n\treturn a.id === null && b.id === null;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/istext\n */\n\n/**\n * Checks if the object is a native DOM Text node.\n *\n * @param {*} obj\n * @returns {Boolean}\n */\nexport default function isText( obj ) {\n\treturn Object.prototype.toString.call( obj ) == '[object Text]';\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport isText from '@ckeditor/ckeditor5-utils/src/dom/istext';\n\n/**\n * Set of utils related to block and inline fillers handling.\n *\n * Browsers do not allow to put caret in elements which does not have height. Because of it, we need to fill all\n * empty elements which should be selectable with elements or characters called \"fillers\". Unfortunately there is no one\n * universal filler, this is why two types are uses:\n *\n * * Block filler is an element which fill block elements, like `<p>`. CKEditor uses `<br>` as a block filler during the editing,\n * as browsers do natively. So instead of an empty `<p>` there will be `<p><br></p>`. The advantage of block filler is that\n * it is transparent for the selection, so when the caret is before the `<br>` and user presses right arrow he will be\n * moved to the next paragraph, not after the `<br>`. The disadvantage is that it breaks a block, so it can not be used\n * in the middle of a line of text. The {@link module:engine/view/filler~BR_FILLER `<br>` filler} can be replaced with any other\n * character in the data output, for instance {@link module:engine/view/filler~NBSP_FILLER non-breaking space}.\n *\n * * Inline filler is a filler which does not break a line of text, so it can be used inside the text, for instance in the empty\n * `<b>` surrendered by text: `foo<b></b>bar`, if we want to put the caret there. CKEditor uses a sequence of the zero-width\n * spaces as an {@link module:engine/view/filler~INLINE_FILLER inline filler} having the predetermined\n * {@link module:engine/view/filler~INLINE_FILLER_LENGTH length}. A sequence is used, instead of a single character to\n * avoid treating random zero-width spaces as the inline filler. Disadvantage of the inline filler is that it is not\n * transparent for the selection. The arrow key moves the caret between zero-width spaces characters, so the additional\n * code is needed to handle the caret.\n *\n * Both inline and block fillers are handled by the {@link module:engine/view/renderer~Renderer renderer} and are not present in the\n * view.\n *\n * @module engine/view/filler\n */\n\n/**\n * Non-breaking space filler creator. This is a function which creates `&nbsp;` text node.\n * It defines how the filler is created.\n *\n * @see module:engine/view/filler~BR_FILLER\n * @function\n */\nexport const NBSP_FILLER = domDocument => domDocument.createTextNode( '\\u00A0' );\n\n/**\n * `<br>` filler creator. This is a function which creates `<br data-cke-filler=\"true\">` element.\n * It defines how the filler is created.\n *\n * @see module:engine/view/filler~NBSP_FILLER\n * @function\n */\nexport const BR_FILLER = domDocument => {\n\tconst fillerBr = domDocument.createElement( 'br' );\n\tfillerBr.dataset.ckeFiller = true;\n\n\treturn fillerBr;\n};\n\n/**\n * Length of the {@link module:engine/view/filler~INLINE_FILLER INLINE_FILLER}.\n */\nexport const INLINE_FILLER_LENGTH = 7;\n\n/**\n * Inline filler which is a sequence of the zero width spaces.\n */\nexport const INLINE_FILLER = ( () => {\n\tlet inlineFiller = '';\n\n\tfor ( let i = 0; i < INLINE_FILLER_LENGTH; i++ ) {\n\t\tinlineFiller += '\\u200b';\n\t}\n\n\treturn inlineFiller;\n} )(); // Usu IIF so the INLINE_FILLER appears as a constant in the docs.\n\n/**\n * Checks if the node is a text node which starts with the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n *\n *\t\tstartsWithFiller( document.createTextNode( INLINE_FILLER ) ); // true\n *\t\tstartsWithFiller( document.createTextNode( INLINE_FILLER + 'foo' ) ); // true\n *\t\tstartsWithFiller( document.createTextNode( 'foo' ) ); // false\n *\t\tstartsWithFiller( document.createElement( 'p' ) ); // false\n *\n * @param {Node} domNode DOM node.\n * @returns {Boolean} True if the text node starts with the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n */\nexport function startsWithFiller( domNode ) {\n\treturn isText( domNode ) && ( domNode.data.substr( 0, INLINE_FILLER_LENGTH ) === INLINE_FILLER );\n}\n\n/**\n * Checks if the text node contains only the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n *\n *\t\tisInlineFiller( document.createTextNode( INLINE_FILLER ) ); // true\n *\t\tisInlineFiller( document.createTextNode( INLINE_FILLER + 'foo' ) ); // false\n *\n * @param {Text} domText DOM text node.\n * @returns {Boolean} True if the text node contains only the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n */\nexport function isInlineFiller( domText ) {\n\treturn domText.data.length == INLINE_FILLER_LENGTH && startsWithFiller( domText );\n}\n\n/**\n * Get string data from the text node, removing an {@link module:engine/view/filler~INLINE_FILLER inline filler} from it,\n * if text node contains it.\n *\n *\t\tgetDataWithoutFiller( document.createTextNode( INLINE_FILLER + 'foo' ) ) == 'foo' // true\n *\t\tgetDataWithoutFiller( document.createTextNode( 'foo' ) ) == 'foo' // true\n *\n * @param {Text} domText DOM text node, possible with inline filler.\n * @returns {String} Data without filler.\n */\nexport function getDataWithoutFiller( domText ) {\n\tif ( startsWithFiller( domText ) ) {\n\t\treturn domText.data.slice( INLINE_FILLER_LENGTH );\n\t} else {\n\t\treturn domText.data;\n\t}\n}\n\n/**\n * Assign key observer which move cursor from the end of the inline filler to the beginning of it when\n * the left arrow is pressed, so the filler does not break navigation.\n *\n * @param {module:engine/view/view~View} view View controller instance we should inject quirks handling on.\n */\nexport function injectQuirksHandling( view ) {\n\tview.document.on( 'keydown', jumpOverInlineFiller );\n}\n\n// Move cursor from the end of the inline filler to the beginning of it when, so the filler does not break navigation.\nfunction jumpOverInlineFiller( evt, data ) {\n\tif ( data.keyCode == keyCodes.arrowleft ) {\n\t\tconst domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\n\n\t\tif ( domSelection.rangeCount == 1 && domSelection.getRangeAt( 0 ).collapsed ) {\n\t\t\tconst domParent = domSelection.getRangeAt( 0 ).startContainer;\n\t\t\tconst domOffset = domSelection.getRangeAt( 0 ).startOffset;\n\n\t\t\tif ( startsWithFiller( domParent ) && domOffset <= INLINE_FILLER_LENGTH ) {\n\t\t\t\tdomSelection.collapse( domParent, 0 );\n\t\t\t}\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/fastdiff\n */\n\n/**\n * Finds positions of the first and last change in the given string/array and generates a set of changes:\n *\n *\t\tfastDiff( '12a', '12xyza' );\n *\t\t// [ { index: 2, type: 'insert', values: [ 'x', 'y', 'z' ] } ]\n *\n *\t\tfastDiff( '12a', '12aa' );\n *\t\t// [ { index: 3, type: 'insert', values: [ 'a' ] } ]\n *\n *\t\tfastDiff( '12xyza', '12a' );\n *\t\t// [ { index: 2, type: 'delete', howMany: 3 } ]\n *\n *\t\tfastDiff( [ '1', '2', 'a', 'a' ], [ '1', '2', 'a' ] );\n *\t\t// [ { index: 3, type: 'delete', howMany: 1 } ]\n *\n *\t\tfastDiff( [ '1', '2', 'a', 'b', 'c', '3' ], [ '2', 'a', 'b' ] );\n *\t\t// [ { index: 0, type: 'insert', values: [ '2', 'a', 'b' ] }, { index: 3, type: 'delete', howMany: 6 } ]\n *\n * Passed arrays can contain any type of data, however to compare them correctly custom comparator function\n * should be passed as a third parameter:\n *\n *\t\tfastDiff( [ { value: 1 }, { value: 2 } ], [ { value: 1 }, { value: 3 } ], ( a, b ) => {\n *\t\t\treturn a.value === b.value;\n *\t\t} );\n *\t\t// [ { index: 1, type: 'insert', values: [ { value: 3 } ] }, { index: 2, type: 'delete', howMany: 1 } ]\n *\n * The resulted set of changes can be applied to the input in order to transform it into the output, for example:\n *\n *\t\tlet input = '12abc3';\n *\t\tconst output = '2ab';\n *\t\tconst changes = fastDiff( input, output );\n *\n *\t\tchanges.forEach( change => {\n *\t\t\tif ( change.type == 'insert' ) {\n *\t\t\t\tinput = input.substring( 0, change.index ) + change.values.join( '' ) + input.substring( change.index );\n *\t\t\t} else if ( change.type == 'delete' ) {\n *\t\t\t\tinput = input.substring( 0, change.index ) + input.substring( change.index + change.howMany );\n *\t\t\t}\n *\t\t} );\n *\n *\t\t// input equals output now\n *\n * or in case of arrays:\n *\n *\t\tlet input = [ '1', '2', 'a', 'b', 'c', '3' ];\n *\t\tconst output = [ '2', 'a', 'b' ];\n *\t\tconst changes = fastDiff( input, output );\n *\n *\t\tchanges.forEach( change => {\n *\t\t\tif ( change.type == 'insert' ) {\n *\t\t\t\tinput = input.slice( 0, change.index ).concat( change.values, input.slice( change.index ) );\n *\t\t\t} else if ( change.type == 'delete' ) {\n *\t\t\t\tinput = input.slice( 0, change.index ).concat( input.slice( change.index + change.howMany ) );\n *\t\t\t}\n *\t\t} );\n *\n *\t\t// input equals output now\n *\n * By passing `true` as the fourth parameter (`atomicChanges`) the output of this function will become compatible with\n * the {@link module:utils/diff~diff `diff()`} function:\n *\n *\t\tfastDiff( '12a', '12xyza' );\n *\t\t// [ 'equal', 'equal', 'insert', 'insert', 'insert', 'equal' ]\n *\n * The default output format of this function is compatible with the output format of\n * {@link module:utils/difftochanges~diffToChanges `diffToChanges()`}. The `diffToChanges()` input format is, in turn,\n * compatible with the output of {@link module:utils/diff~diff `diff()`}:\n *\n *\t\tconst a = '1234';\n *\t\tconst b = '12xyz34';\n *\n *\t\t// Both calls will return the same results (grouped changes format).\n *\t\tfastDiff( a, b );\n *\t\tdiffToChanges( diff( a, b ) );\n *\n *\t\t// Again, both calls will return the same results (atomic changes format).\n *\t\tfastDiff( a, b, null, true );\n *\t\tdiff( a, b );\n *\n *\n * @param {Array|String} a Input array or string.\n * @param {Array|String} b Input array or string.\n * @param {Function} [cmp] Optional function used to compare array values, by default `===` (strict equal operator) is used.\n * @param {Boolean} [atomicChanges=false] Whether an array of `inset|delete|equal` operations should\n * be returned instead of changes set. This makes this function compatible with {@link module:utils/diff~diff `diff()`}.\n * @returns {Array} Array of changes.\n */\nexport default function fastDiff( a, b, cmp, atomicChanges = false ) {\n\t// Set the comparator function.\n\tcmp = cmp || function( a, b ) {\n\t\treturn a === b;\n\t};\n\n\t// Transform text or any iterable into arrays for easier, consistent processing.\n\tif ( !Array.isArray( a ) ) {\n\t\ta = Array.from( a );\n\t}\n\n\tif ( !Array.isArray( b ) ) {\n\t\tb = Array.from( b );\n\t}\n\n\t// Find first and last change.\n\tconst changeIndexes = findChangeBoundaryIndexes( a, b, cmp );\n\n\t// Transform into changes array.\n\treturn atomicChanges ? changeIndexesToAtomicChanges( changeIndexes, b.length ) : changeIndexesToChanges( b, changeIndexes );\n}\n\n// Finds position of the first and last change in the given arrays. For example:\n//\n//\t\tconst indexes = findChangeBoundaryIndexes( [ '1', '2', '3', '4' ], [ '1', '3', '4', '2', '4' ] );\n//\t\tconsole.log( indexes ); // { firstIndex: 1, lastIndexOld: 3, lastIndexNew: 4 }\n//\n// The above indexes means that in the first array the modified part is `1[23]4` and in the second array it is `1[342]4`.\n// Based on such indexes, array with `insert`/`delete` operations which allows transforming first value into the second one\n// can be generated.\n//\n// @param {Array} arr1\n// @param {Array} arr2\n// @param {Function} cmp Comparator function.\n// @returns {Object}\n// @returns {Number} return.firstIndex Index of the first change in both values (always the same for both).\n// @returns {Number} result.lastIndexOld Index of the last common value in `arr1`.\n// @returns {Number} result.lastIndexNew Index of the last common value in `arr2`.\nfunction findChangeBoundaryIndexes( arr1, arr2, cmp ) {\n\t// Find the first difference between passed values.\n\tconst firstIndex = findFirstDifferenceIndex( arr1, arr2, cmp );\n\n\t// If arrays are equal return -1 indexes object.\n\tif ( firstIndex === -1 ) {\n\t\treturn { firstIndex: -1, lastIndexOld: -1, lastIndexNew: -1 };\n\t}\n\n\t// Remove the common part of each value and reverse them to make it simpler to find the last difference between them.\n\tconst oldArrayReversed = cutAndReverse( arr1, firstIndex );\n\tconst newArrayReversed = cutAndReverse( arr2, firstIndex );\n\n\t// Find the first difference between reversed values.\n\t// It should be treated as \"how many elements from the end the last difference occurred\".\n\t//\n\t// For example:\n\t//\n\t// \t\t\t\tinitial\t->\tafter cut\t-> reversed:\n\t// oldValue:\t'321ba'\t->\t'21ba'\t\t-> 'ab12'\n\t// newValue:\t'31xba'\t->\t'1xba'\t\t-> 'abx1'\n\t// lastIndex:\t\t\t\t\t\t\t-> 2\n\t//\n\t// So the last change occurred two characters from the end of the arrays.\n\tconst lastIndex = findFirstDifferenceIndex( oldArrayReversed, newArrayReversed, cmp );\n\n\t// Use `lastIndex` to calculate proper offset, starting from the beginning (`lastIndex` kind of starts from the end).\n\tconst lastIndexOld = arr1.length - lastIndex;\n\tconst lastIndexNew = arr2.length - lastIndex;\n\n\treturn { firstIndex, lastIndexOld, lastIndexNew };\n}\n\n// Returns a first index on which given arrays differ. If both arrays are the same, -1 is returned.\n//\n// @param {Array} arr1\n// @param {Array} arr2\n// @param {Function} cmp Comparator function.\n// @returns {Number}\nfunction findFirstDifferenceIndex( arr1, arr2, cmp ) {\n\tfor ( let i = 0; i < Math.max( arr1.length, arr2.length ); i++ ) {\n\t\tif ( arr1[ i ] === undefined || arr2[ i ] === undefined || !cmp( arr1[ i ], arr2[ i ] ) ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1; // Return -1 if arrays are equal.\n}\n\n// Returns a copy of the given array with `howMany` elements removed starting from the beginning and in reversed order.\n//\n// @param {Array} arr Array to be processed.\n// @param {Number} howMany How many elements from array beginning to remove.\n// @returns {Array} Shortened and reversed array.\nfunction cutAndReverse( arr, howMany ) {\n\treturn arr.slice( howMany ).reverse();\n}\n\n// Generates changes array based on change indexes from `findChangeBoundaryIndexes` function. This function will\n// generate array with 0 (no changes), 1 (deletion or insertion) or 2 records (insertion and deletion).\n//\n// @param {Array} newArray New array for which change indexes were calculated.\n// @param {Object} changeIndexes Change indexes object from `findChangeBoundaryIndexes` function.\n// @returns {Array.<Object>} Array of changes compatible with {@link module:utils/difftochanges~diffToChanges} format.\nfunction changeIndexesToChanges( newArray, changeIndexes ) {\n\tconst result = [];\n\tconst { firstIndex, lastIndexOld, lastIndexNew } = changeIndexes;\n\n\t// Order operations as 'insert', 'delete' array to keep compatibility with {@link module:utils/difftochanges~diffToChanges}\n\t// in most cases. However, 'diffToChanges' does not stick to any order so in some cases\n\t// (for example replacing '12345' with 'abcd') it will generate 'delete', 'insert' order.\n\tif ( lastIndexNew - firstIndex > 0 ) {\n\t\tresult.push( {\n\t\t\tindex: firstIndex,\n\t\t\ttype: 'insert',\n\t\t\tvalues: newArray.slice( firstIndex, lastIndexNew )\n\t\t} );\n\t}\n\n\tif ( lastIndexOld - firstIndex > 0 ) {\n\t\tresult.push( {\n\t\t\tindex: firstIndex + ( lastIndexNew - firstIndex ), // Increase index of what was inserted.\n\t\t\ttype: 'delete',\n\t\t\thowMany: lastIndexOld - firstIndex\n\t\t} );\n\t}\n\n\treturn result;\n}\n\n// Generates array with set `equal|insert|delete` operations based on change indexes from `findChangeBoundaryIndexes` function.\n//\n// @param {Object} changeIndexes Change indexes object from `findChangeBoundaryIndexes` function.\n// @param {Number} newLength Length of the new array on which `findChangeBoundaryIndexes` calculated change indexes.\n// @returns {Array.<String>} Array of changes compatible with {@link module:utils/diff~diff} format.\nfunction changeIndexesToAtomicChanges( changeIndexes, newLength ) {\n\tconst { firstIndex, lastIndexOld, lastIndexNew } = changeIndexes;\n\n\t// No changes.\n\tif ( firstIndex === -1 ) {\n\t\treturn Array( newLength ).fill( 'equal' );\n\t}\n\n\tlet result = [];\n\tif ( firstIndex > 0 ) {\n\t\tresult = result.concat( Array( firstIndex ).fill( 'equal' ) );\n\t}\n\n\tif ( lastIndexNew - firstIndex > 0 ) {\n\t\tresult = result.concat( Array( lastIndexNew - firstIndex ).fill( 'insert' ) );\n\t}\n\n\tif ( lastIndexOld - firstIndex > 0 ) {\n\t\tresult = result.concat( Array( lastIndexOld - firstIndex ).fill( 'delete' ) );\n\t}\n\n\tif ( lastIndexNew < newLength ) {\n\t\tresult = result.concat( Array( newLength - lastIndexNew ).fill( 'equal' ) );\n\t}\n\n\treturn result;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/diff\n */\n\nimport fastDiff from '../src/fastdiff';\n\n// The following code is based on the \"O(NP) Sequence Comparison Algorithm\"\n// by Sun Wu, Udi Manber, Gene Myers, Webb Miller.\n\n/**\n * Calculates the difference between two arrays or strings producing an array containing a list of changes\n * necessary to transform input into output.\n *\n *\t\tdiff( 'aba', 'acca' ); // [ 'equal', 'insert', 'insert', 'delete', 'equal' ]\n *\n * This function is based on the \"O(NP) Sequence Comparison Algorithm\" by Sun Wu, Udi Manber, Gene Myers, Webb Miller.\n * Unfortunately, while it gives the most precise results, its to complex for longer strings/arrow (above 200 items).\n * Therefore, `diff()` automatically switches to {@link module:utils/fastdiff~fastDiff `fastDiff()`} when detecting\n * such a scenario. The return formats of both functions are identical.\n *\n * @param {Array|String} a Input array or string.\n * @param {Array|String} b Output array or string.\n * @param {Function} [cmp] Optional function used to compare array values, by default === is used.\n * @returns {Array} Array of changes.\n */\nexport default function diff( a, b, cmp ) {\n\t// Set the comparator function.\n\tcmp = cmp || function( a, b ) {\n\t\treturn a === b;\n\t};\n\n\tconst aLength = a.length;\n\tconst bLength = b.length;\n\n\t// Perform `fastDiff` for longer strings/arrays (see #269).\n\tif ( aLength > 200 || bLength > 200 || aLength + bLength > 300 ) {\n\t\treturn diff.fastDiff( a, b, cmp, true );\n\t}\n\n\t// Temporary action type statics.\n\tlet _insert, _delete;\n\n\t// Swapped the arrays to use the shorter one as the first one.\n\tif ( bLength < aLength ) {\n\t\tconst tmp = a;\n\n\t\ta = b;\n\t\tb = tmp;\n\n\t\t// We swap the action types as well.\n\t\t_insert = 'delete';\n\t\t_delete = 'insert';\n\t} else {\n\t\t_insert = 'insert';\n\t\t_delete = 'delete';\n\t}\n\n\tconst m = a.length;\n\tconst n = b.length;\n\tconst delta = n - m;\n\n\t// Edit scripts, for each diagonal.\n\tconst es = {};\n\t// Furthest points, the furthest y we can get on each diagonal.\n\tconst fp = {};\n\n\tfunction snake( k ) {\n\t\t// We use -1 as an alternative below to handle initial values ( instead of filling the fp with -1 first ).\n\t\t// Furthest points (y) on the diagonal below k.\n\t\tconst y1 = ( fp[ k - 1 ] !== undefined ? fp[ k - 1 ] : -1 ) + 1;\n\t\t// Furthest points (y) on the diagonal above k.\n\t\tconst y2 = fp[ k + 1 ] !== undefined ? fp[ k + 1 ] : -1;\n\t\t// The way we should go to get further.\n\t\tconst dir = y1 > y2 ? -1 : 1;\n\n\t\t// Clone previous changes array (if any).\n\t\tif ( es[ k + dir ] ) {\n\t\t\tes[ k ] = es[ k + dir ].slice( 0 );\n\t\t}\n\n\t\t// Create changes array.\n\t\tif ( !es[ k ] ) {\n\t\t\tes[ k ] = [];\n\t\t}\n\n\t\t// Push the action.\n\t\tes[ k ].push( y1 > y2 ? _insert : _delete );\n\n\t\t// Set the beginning coordinates.\n\t\tlet y = Math.max( y1, y2 );\n\t\tlet x = y - k;\n\n\t\t// Traverse the diagonal as long as the values match.\n\t\twhile ( x < m && y < n && cmp( a[ x ], b[ y ] ) ) {\n\t\t\tx++;\n\t\t\ty++;\n\t\t\t// Push no change action.\n\t\t\tes[ k ].push( 'equal' );\n\t\t}\n\n\t\treturn y;\n\t}\n\n\tlet p = 0;\n\tlet k;\n\n\t// Traverse the graph until we reach the end of the longer string.\n\tdo {\n\t\t// Updates furthest points and edit scripts for diagonals below delta.\n\t\tfor ( k = -p; k < delta; k++ ) {\n\t\t\tfp[ k ] = snake( k );\n\t\t}\n\n\t\t// Updates furthest points and edit scripts for diagonals above delta.\n\t\tfor ( k = delta + p; k > delta; k-- ) {\n\t\t\tfp[ k ] = snake( k );\n\t\t}\n\n\t\t// Updates furthest point and edit script for the delta diagonal.\n\t\t// note that the delta diagonal is the one which goes through the sink (m, n).\n\t\tfp[ delta ] = snake( delta );\n\n\t\tp++;\n\t} while ( fp[ delta ] !== n );\n\n\t// Return the final list of edit changes.\n\t// We remove the first item that represents the action for the injected nulls.\n\treturn es[ delta ].slice( 1 );\n}\n\n// Store the API in static property to easily overwrite it in tests.\n// Too bad dependency injection does not work in Webpack + ES 6 (const) + Babel.\ndiff.fastDiff = fastDiff;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/insertat\n */\n\n/**\n * Inserts node to the parent at given index.\n *\n * @param {Element} parentElement Parent element.\n * @param {Number} index Insertions index.\n * @param {Node} nodeToInsert Node to insert.\n */\nexport default function insertAt( parentElement, index, nodeToInsert ) {\n\tparentElement.insertBefore( nodeToInsert, parentElement.childNodes[ index ] || null );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/remove\n */\n\n/**\n * Removes given node from parent.\n *\n * @param {Node} node Node to remove.\n */\nexport default function remove( node ) {\n\tconst parent = node.parentNode;\n\n\tif ( parent ) {\n\t\tparent.removeChild( node );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/isnode\n */\n\n/**\n * Checks if the object is a native DOM Node.\n *\n * @param {*} obj\n * @returns {Boolean}\n */\nexport default function isNode( obj ) {\n\tif ( obj ) {\n\t\tif ( obj.defaultView ) {\n\t\t\treturn obj instanceof obj.defaultView.Document;\n\t\t} else if ( obj.ownerDocument && obj.ownerDocument.defaultView ) {\n\t\t\treturn obj instanceof obj.ownerDocument.defaultView.Node;\n\t\t}\n\t}\n\n\treturn false;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals Node */\n\n/**\n * @module engine/view/renderer\n */\n\nimport ViewText from './text';\nimport ViewPosition from './position';\nimport { INLINE_FILLER, INLINE_FILLER_LENGTH, startsWithFiller, isInlineFiller } from './filler';\n\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport diff from '@ckeditor/ckeditor5-utils/src/diff';\nimport insertAt from '@ckeditor/ckeditor5-utils/src/dom/insertat';\nimport remove from '@ckeditor/ckeditor5-utils/src/dom/remove';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport isText from '@ckeditor/ckeditor5-utils/src/dom/istext';\nimport isNode from '@ckeditor/ckeditor5-utils/src/dom/isnode';\nimport fastDiff from '@ckeditor/ckeditor5-utils/src/fastdiff';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n\n/**\n * Renderer is responsible for updating the DOM structure and the DOM selection based on\n * the {@link module:engine/view/renderer~Renderer#markToSync information about updated view nodes}.\n * In other words, it renders the view to the DOM.\n *\n * Its main responsibility is to make only the necessary, minimal changes to the DOM. However, unlike in many\n * virtual DOM implementations, the primary reason for doing minimal changes is not the performance but ensuring\n * that native editing features such as text composition, autocompletion, spell checking, selection's x-index are\n * affected as little as possible.\n *\n * Renderer uses {@link module:engine/view/domconverter~DomConverter} to transform view nodes and positions\n * to and from the DOM.\n */\nexport default class Renderer {\n\t/**\n\t * Creates a renderer instance.\n\t *\n\t * @param {module:engine/view/domconverter~DomConverter} domConverter Converter instance.\n\t * @param {module:engine/view/documentselection~DocumentSelection} selection View selection.\n\t */\n\tconstructor( domConverter, selection ) {\n\t\t/**\n\t\t * Set of DOM Documents instances.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Set.<Document>}\n\t\t */\n\t\tthis.domDocuments = new Set();\n\n\t\t/**\n\t\t * Converter instance.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/domconverter~DomConverter}\n\t\t */\n\t\tthis.domConverter = domConverter;\n\n\t\t/**\n\t\t * Set of nodes which attributes changed and may need to be rendered.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Set.<module:engine/view/node~Node>}\n\t\t */\n\t\tthis.markedAttributes = new Set();\n\n\t\t/**\n\t\t * Set of elements which child lists changed and may need to be rendered.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Set.<module:engine/view/node~Node>}\n\t\t */\n\t\tthis.markedChildren = new Set();\n\n\t\t/**\n\t\t * Set of text nodes which text data changed and may need to be rendered.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Set.<module:engine/view/node~Node>}\n\t\t */\n\t\tthis.markedTexts = new Set();\n\n\t\t/**\n\t\t * View selection. Renderer updates DOM selection based on the view selection.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/documentselection~DocumentSelection}\n\t\t */\n\t\tthis.selection = selection;\n\n\t\t/**\n\t\t * Indicates if the view document is focused and selection can be rendered. Selection will not be rendered if\n\t\t * this is set to `false`.\n\t\t *\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis.isFocused = false;\n\n\t\t/**\n\t\t * The text node in which the inline filler was rendered.\n\t\t *\n\t\t * @private\n\t\t * @member {Text}\n\t\t */\n\t\tthis._inlineFiller = null;\n\n\t\t/**\n\t\t * DOM element containing fake selection.\n\t\t *\n\t\t * @private\n\t\t * @type {null|HTMLElement}\n\t\t */\n\t\tthis._fakeSelectionContainer = null;\n\t}\n\n\t/**\n\t * Marks a view node to be updated in the DOM by {@link #render `render()`}.\n\t *\n\t * Note that only view nodes whose parents have corresponding DOM elements need to be marked to be synchronized.\n\t *\n\t * @see #markedAttributes\n\t * @see #markedChildren\n\t * @see #markedTexts\n\t *\n\t * @param {module:engine/view/document~ChangeType} type Type of the change.\n\t * @param {module:engine/view/node~Node} node Node to be marked.\n\t */\n\tmarkToSync( type, node ) {\n\t\tif ( type === 'text' ) {\n\t\t\tif ( this.domConverter.mapViewToDom( node.parent ) ) {\n\t\t\t\tthis.markedTexts.add( node );\n\t\t\t}\n\t\t} else {\n\t\t\t// If the node has no DOM element it is not rendered yet,\n\t\t\t// its children/attributes do not need to be marked to be sync.\n\t\t\tif ( !this.domConverter.mapViewToDom( node ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( type === 'attributes' ) {\n\t\t\t\tthis.markedAttributes.add( node );\n\t\t\t} else if ( type === 'children' ) {\n\t\t\t\tthis.markedChildren.add( node );\n\t\t\t} else {\n\t\t\t\t/**\n\t\t\t\t * Unknown type passed to Renderer.markToSync.\n\t\t\t\t *\n\t\t\t\t * @error renderer-unknown-type\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'view-renderer-unknown-type: Unknown type passed to Renderer.markToSync.', this );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Renders all buffered changes ({@link #markedAttributes}, {@link #markedChildren} and {@link #markedTexts}) and\n\t * the current view selection (if needed) to the DOM by applying a minimal set of changes to it.\n\t *\n\t * Renderer tries not to break the text composition (e.g. IME) and x-index of the selection,\n\t * so it does as little as it is needed to update the DOM.\n\t *\n\t * Renderer also handles {@link module:engine/view/filler fillers}. Especially, it checks if the inline filler is needed\n\t * at the selection position and adds or removes it. To prevent breaking text composition inline filler will not be\n\t * removed as long as the selection is in the text node which needed it at first.\n\t */\n\trender() {\n\t\tlet inlineFillerPosition;\n\n\t\t// Refresh mappings.\n\t\tfor ( const element of this.markedChildren ) {\n\t\t\tthis._updateChildrenMappings( element );\n\t\t}\n\n\t\t// There was inline filler rendered in the DOM but it's not\n\t\t// at the selection position any more, so we can remove it\n\t\t// (cause even if it's needed, it must be placed in another location).\n\t\tif ( this._inlineFiller && !this._isSelectionInInlineFiller() ) {\n\t\t\tthis._removeInlineFiller();\n\t\t}\n\n\t\t// If we've got the filler, let's try to guess its position in the view.\n\t\tif ( this._inlineFiller ) {\n\t\t\tinlineFillerPosition = this._getInlineFillerPosition();\n\t\t}\n\t\t// Otherwise, if it's needed, create it at the selection position.\n\t\telse if ( this._needsInlineFillerAtSelection() ) {\n\t\t\tinlineFillerPosition = this.selection.getFirstPosition();\n\n\t\t\t// Do not use `markToSync` so it will be added even if the parent is already added.\n\t\t\tthis.markedChildren.add( inlineFillerPosition.parent );\n\t\t}\n\n\t\tfor ( const element of this.markedAttributes ) {\n\t\t\tthis._updateAttrs( element );\n\t\t}\n\n\t\tfor ( const element of this.markedChildren ) {\n\t\t\tthis._updateChildren( element, { inlineFillerPosition } );\n\t\t}\n\n\t\tfor ( const node of this.markedTexts ) {\n\t\t\tif ( !this.markedChildren.has( node.parent ) && this.domConverter.mapViewToDom( node.parent ) ) {\n\t\t\t\tthis._updateText( node, { inlineFillerPosition } );\n\t\t\t}\n\t\t}\n\n\t\t// Check whether the inline filler is required and where it really is in the DOM.\n\t\t// At this point in most cases it will be in the DOM, but there are exceptions.\n\t\t// For example, if the inline filler was deep in the created DOM structure, it will not be created.\n\t\t// Similarly, if it was removed at the beginning of this function and then neither text nor children were updated,\n\t\t// it will not be present.\n\t\t// Fix those and similar scenarios.\n\t\tif ( inlineFillerPosition ) {\n\t\t\tconst fillerDomPosition = this.domConverter.viewPositionToDom( inlineFillerPosition );\n\t\t\tconst domDocument = fillerDomPosition.parent.ownerDocument;\n\n\t\t\tif ( !startsWithFiller( fillerDomPosition.parent ) ) {\n\t\t\t\t// Filler has not been created at filler position. Create it now.\n\t\t\t\tthis._inlineFiller = addInlineFiller( domDocument, fillerDomPosition.parent, fillerDomPosition.offset );\n\t\t\t} else {\n\t\t\t\t// Filler has been found, save it.\n\t\t\t\tthis._inlineFiller = fillerDomPosition.parent;\n\t\t\t}\n\t\t} else {\n\t\t\t// There is no filler needed.\n\t\t\tthis._inlineFiller = null;\n\t\t}\n\n\t\tthis._updateSelection();\n\t\tthis._updateFocus();\n\n\t\tthis.markedTexts.clear();\n\t\tthis.markedAttributes.clear();\n\t\tthis.markedChildren.clear();\n\t}\n\n\t/**\n\t * Updates mappings of view element's children.\n\t *\n\t * Children that were replaced in the view structure by similar elements (same tag name) are treated as 'replaced'.\n\t * This means that their mappings can be updated so the new view elements are mapped to the existing DOM elements.\n\t * Thanks to that these elements do not need to be re-rendered completely.\n\t *\n\t * @private\n\t * @param {module:engine/view/node~Node} viewElement The view element whose children mappings will be updated.\n\t */\n\t_updateChildrenMappings( viewElement ) {\n\t\tconst domElement = this.domConverter.mapViewToDom( viewElement );\n\n\t\tif ( !domElement ) {\n\t\t\t// If there is no `domElement` it means that it was already removed from DOM and there is no need to process it.\n\t\t\treturn;\n\t\t}\n\n\t\tconst actualDomChildren = this.domConverter.mapViewToDom( viewElement ).childNodes;\n\t\tconst expectedDomChildren = Array.from(\n\t\t\tthis.domConverter.viewChildrenToDom( viewElement, domElement.ownerDocument, { withChildren: false } )\n\t\t);\n\t\tconst diff = this._diffNodeLists( actualDomChildren, expectedDomChildren );\n\t\tconst actions = this._findReplaceActions( diff, actualDomChildren, expectedDomChildren );\n\n\t\tif ( actions.indexOf( 'replace' ) !== -1 ) {\n\t\t\tconst counter = { equal: 0, insert: 0, delete: 0 };\n\n\t\t\tfor ( const action of actions ) {\n\t\t\t\tif ( action === 'replace' ) {\n\t\t\t\t\tconst insertIndex = counter.equal + counter.insert;\n\t\t\t\t\tconst deleteIndex = counter.equal + counter.delete;\n\t\t\t\t\tconst viewChild = viewElement.getChild( insertIndex );\n\n\t\t\t\t\t// The 'uiElement' is a special one and its children are not stored in a view (#799),\n\t\t\t\t\t// so we cannot use it with replacing flow (since it uses view children during rendering\n\t\t\t\t\t// which will always result in rendering empty element).\n\t\t\t\t\tif ( viewChild && !viewChild.is( 'uiElement' ) ) {\n\t\t\t\t\t\tthis._updateElementMappings( viewChild, actualDomChildren[ deleteIndex ] );\n\t\t\t\t\t}\n\n\t\t\t\t\tremove( expectedDomChildren[ insertIndex ] );\n\t\t\t\t\tcounter.equal++;\n\t\t\t\t} else {\n\t\t\t\t\tcounter[ action ]++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Updates mappings of a given view element.\n\t *\n\t * @private\n\t * @param {module:engine/view/node~Node} viewElement The view element whose mappings will be updated.\n\t * @param {Node} domElement The DOM element representing the given view element.\n\t */\n\t_updateElementMappings( viewElement, domElement ) {\n\t\t// Remap 'DomConverter' bindings.\n\t\tthis.domConverter.unbindDomElement( domElement );\n\t\tthis.domConverter.bindElements( domElement, viewElement );\n\n\t\t// View element may have children which needs to be updated, but are not marked, mark them to update.\n\t\tthis.markedChildren.add( viewElement );\n\n\t\t// Because we replace new view element mapping with the existing one, the corresponding DOM element\n\t\t// will not be rerendered. The new view element may have different attributes than the previous one.\n\t\t// Since its corresponding DOM element will not be rerendered, new attributes will not be added\n\t\t// to the DOM, so we need to mark it here to make sure its attributes gets updated. See #1427 for more\n\t\t// detailed case study.\n\t\t// Also there are cases where replaced element is removed from the view structure and then has\n\t\t// its attributes changed or removed. In such cases the element will not be present in `markedAttributes`\n\t\t// and also may be the same (`element.isSimilar()`) as the reused element not having its attributes updated.\n\t\t// To prevent such situations we always mark reused element to have its attributes rerenderd (#1560).\n\t\tthis.markedAttributes.add( viewElement );\n\t}\n\n\t/**\n\t * Gets the position of the inline filler based on the current selection.\n\t * Here, we assume that we know that the filler is needed and\n\t * {@link #_isSelectionInInlineFiller is at the selection position}, and, since it is needed,\n\t * it is somewhere at the selection position.\n\t *\n\t * Note: The filler position cannot be restored based on the filler's DOM text node, because\n\t * when this method is called (before rendering), the bindings will often be broken. View-to-DOM\n\t * bindings are only dependable after rendering.\n\t *\n\t * @private\n\t * @returns {module:engine/view/position~Position}\n\t */\n\t_getInlineFillerPosition() {\n\t\tconst firstPos = this.selection.getFirstPosition();\n\n\t\tif ( firstPos.parent.is( 'text' ) ) {\n\t\t\treturn ViewPosition._createBefore( this.selection.getFirstPosition().parent );\n\t\t} else {\n\t\t\treturn firstPos;\n\t\t}\n\t}\n\n\t/**\n\t * Returns `true` if the selection has not left the inline filler's text node.\n\t * If it is `true`, it means that the filler had been added for a reason and the selection did not\n\t * leave the filler's text node. For example, the user can be in the middle of a composition so it should not be touched.\n\t *\n\t * @private\n\t * @returns {Boolean} `true` if the inline filler and selection are in the same place.\n\t */\n\t_isSelectionInInlineFiller() {\n\t\tif ( this.selection.rangeCount != 1 || !this.selection.isCollapsed ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Note, we can't check if selection's position equals position of the\n\t\t// this._inlineFiller node, because of #663. We may not be able to calculate\n\t\t// the filler's position in the view at this stage.\n\t\t// Instead, we check it the other way – whether selection is anchored in\n\t\t// that text node or next to it.\n\n\t\t// Possible options are:\n\t\t// \"FILLER{}\"\n\t\t// \"FILLERadded-text{}\"\n\t\tconst selectionPosition = this.selection.getFirstPosition();\n\t\tconst position = this.domConverter.viewPositionToDom( selectionPosition );\n\n\t\tif ( position && isText( position.parent ) && startsWithFiller( position.parent ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Removes the inline filler.\n\t *\n\t * @private\n\t */\n\t_removeInlineFiller() {\n\t\tconst domFillerNode = this._inlineFiller;\n\n\t\t// Something weird happened and the stored node doesn't contain the filler's text.\n\t\tif ( !startsWithFiller( domFillerNode ) ) {\n\t\t\t/**\n\t\t\t * The inline filler node was lost. Most likely, something overwrote the filler text node\n\t\t\t * in the DOM.\n\t\t\t *\n\t\t\t * @error view-renderer-filler-was-lost\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-renderer-filler-was-lost: The inline filler node was lost.', this );\n\t\t}\n\n\t\tif ( isInlineFiller( domFillerNode ) ) {\n\t\t\tdomFillerNode.parentNode.removeChild( domFillerNode );\n\t\t} else {\n\t\t\tdomFillerNode.data = domFillerNode.data.substr( INLINE_FILLER_LENGTH );\n\t\t}\n\n\t\tthis._inlineFiller = null;\n\t}\n\n\t/**\n\t * Checks if the inline {@link module:engine/view/filler filler} should be added.\n\t *\n\t * @private\n\t * @returns {Boolean} `true` if the inline filler should be added.\n\t */\n\t_needsInlineFillerAtSelection() {\n\t\tif ( this.selection.rangeCount != 1 || !this.selection.isCollapsed ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst selectionPosition = this.selection.getFirstPosition();\n\t\tconst selectionParent = selectionPosition.parent;\n\t\tconst selectionOffset = selectionPosition.offset;\n\n\t\t// If there is no DOM root we do not care about fillers.\n\t\tif ( !this.domConverter.mapViewToDom( selectionParent.root ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( !( selectionParent.is( 'element' ) ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Prevent adding inline filler inside elements with contenteditable=false.\n\t\t// https://github.com/ckeditor/ckeditor5-engine/issues/1170\n\t\tif ( !isEditable( selectionParent ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// We have block filler, we do not need inline one.\n\t\tif ( selectionOffset === selectionParent.getFillerOffset() ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst nodeBefore = selectionPosition.nodeBefore;\n\t\tconst nodeAfter = selectionPosition.nodeAfter;\n\n\t\tif ( nodeBefore instanceof ViewText || nodeAfter instanceof ViewText ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Checks if text needs to be updated and possibly updates it.\n\t *\n\t * @private\n\t * @param {module:engine/view/text~Text} viewText View text to update.\n\t * @param {Object} options\n\t * @param {module:engine/view/position~Position} options.inlineFillerPosition The position where the inline\n\t * filler should be rendered.\n\t */\n\t_updateText( viewText, options ) {\n\t\tconst domText = this.domConverter.findCorrespondingDomText( viewText );\n\t\tconst newDomText = this.domConverter.viewToDom( viewText, domText.ownerDocument );\n\n\t\tconst actualText = domText.data;\n\t\tlet expectedText = newDomText.data;\n\n\t\tconst filler = options.inlineFillerPosition;\n\n\t\tif ( filler && filler.parent == viewText.parent && filler.offset == viewText.index ) {\n\t\t\texpectedText = INLINE_FILLER + expectedText;\n\t\t}\n\n\t\tif ( actualText != expectedText ) {\n\t\t\tconst actions = fastDiff( actualText, expectedText );\n\n\t\t\tfor ( const action of actions ) {\n\t\t\t\tif ( action.type === 'insert' ) {\n\t\t\t\t\tdomText.insertData( action.index, action.values.join( '' ) );\n\t\t\t\t} else { // 'delete'\n\t\t\t\t\tdomText.deleteData( action.index, action.howMany );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if attribute list needs to be updated and possibly updates it.\n\t *\n\t * @private\n\t * @param {module:engine/view/element~Element} viewElement The view element to update.\n\t */\n\t_updateAttrs( viewElement ) {\n\t\tconst domElement = this.domConverter.mapViewToDom( viewElement );\n\n\t\tif ( !domElement ) {\n\t\t\t// If there is no `domElement` it means that 'viewElement' is outdated as its mapping was updated\n\t\t\t// in 'this._updateChildrenMappings()'. There is no need to process it as new view element which\n\t\t\t// replaced old 'viewElement' mapping was also added to 'this.markedAttributes'\n\t\t\t// in 'this._updateChildrenMappings()' so it will be processed separately.\n\t\t\treturn;\n\t\t}\n\n\t\tconst domAttrKeys = Array.from( domElement.attributes ).map( attr => attr.name );\n\t\tconst viewAttrKeys = viewElement.getAttributeKeys();\n\n\t\t// Add or overwrite attributes.\n\t\tfor ( const key of viewAttrKeys ) {\n\t\t\tdomElement.setAttribute( key, viewElement.getAttribute( key ) );\n\t\t}\n\n\t\t// Remove from DOM attributes which do not exists in the view.\n\t\tfor ( const key of domAttrKeys ) {\n\t\t\tif ( !viewElement.hasAttribute( key ) ) {\n\t\t\t\tdomElement.removeAttribute( key );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if elements child list needs to be updated and possibly updates it.\n\t *\n\t * @private\n\t * @param {module:engine/view/element~Element} viewElement View element to update.\n\t * @param {Object} options\n\t * @param {module:engine/view/position~Position} options.inlineFillerPosition The position where the inline\n\t * filler should be rendered.\n\t */\n\t_updateChildren( viewElement, options ) {\n\t\tconst domElement = this.domConverter.mapViewToDom( viewElement );\n\n\t\tif ( !domElement ) {\n\t\t\t// If there is no `domElement` it means that it was already removed from DOM.\n\t\t\t// There is no need to process it. It will be processed when re-inserted.\n\t\t\treturn;\n\t\t}\n\n\t\tconst inlineFillerPosition = options.inlineFillerPosition;\n\t\tconst actualDomChildren = this.domConverter.mapViewToDom( viewElement ).childNodes;\n\t\tconst expectedDomChildren = Array.from(\n\t\t\tthis.domConverter.viewChildrenToDom( viewElement, domElement.ownerDocument, { bind: true, inlineFillerPosition } )\n\t\t);\n\n\t\t// Inline filler element has to be created as it is present in the DOM, but not in the view. It is required\n\t\t// during diffing so text nodes could be compared correctly and also during rendering to maintain\n\t\t// proper order and indexes while updating the DOM.\n\t\tif ( inlineFillerPosition && inlineFillerPosition.parent === viewElement ) {\n\t\t\taddInlineFiller( domElement.ownerDocument, expectedDomChildren, inlineFillerPosition.offset );\n\t\t}\n\n\t\tconst diff = this._diffNodeLists( actualDomChildren, expectedDomChildren );\n\n\t\tlet i = 0;\n\t\tconst nodesToUnbind = new Set();\n\n\t\tfor ( const action of diff ) {\n\t\t\tif ( action === 'insert' ) {\n\t\t\t\tinsertAt( domElement, i, expectedDomChildren[ i ] );\n\t\t\t\ti++;\n\t\t\t} else if ( action === 'delete' ) {\n\t\t\t\tnodesToUnbind.add( actualDomChildren[ i ] );\n\t\t\t\tremove( actualDomChildren[ i ] );\n\t\t\t} else { // 'equal'\n\t\t\t\t// Force updating text nodes inside elements which did not change and do not need to be re-rendered (#1125).\n\t\t\t\tthis._markDescendantTextToSync( this.domConverter.domToView( expectedDomChildren[ i ] ) );\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\n\t\t// Unbind removed nodes. When node does not have a parent it means that it was removed from DOM tree during\n\t\t// comparision with the expected DOM. We don't need to check child nodes, because if child node was reinserted,\n\t\t// it was moved to DOM tree out of the removed node.\n\t\tfor ( const node of nodesToUnbind ) {\n\t\t\tif ( !node.parentNode ) {\n\t\t\t\tthis.domConverter.unbindDomElement( node );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shorthand for diffing two arrays or node lists of DOM nodes.\n\t *\n\t * @private\n\t * @param {Array.<Node>|NodeList} actualDomChildren Actual DOM children\n\t * @param {Array.<Node>|NodeList} expectedDomChildren Expected DOM children.\n\t * @returns {Array.<String>} The list of actions based on the {@link module:utils/diff~diff} function.\n\t */\n\t_diffNodeLists( actualDomChildren, expectedDomChildren ) {\n\t\tactualDomChildren = filterOutFakeSelectionContainer( actualDomChildren, this._fakeSelectionContainer );\n\n\t\treturn diff( actualDomChildren, expectedDomChildren, sameNodes.bind( null, this.domConverter ) );\n\t}\n\n\t/**\n\t * Finds DOM nodes that were replaced with the similar nodes (same tag name) in the view. All nodes are compared\n\t * within one `insert`/`delete` action group, for example:\n\t *\n\t * \t\tActual DOM:\t\t<p><b>Foo</b>Bar<i>Baz</i><b>Bax</b></p>\n\t * \t\tExpected DOM:\t<p>Bar<b>123</b><i>Baz</i><b>456</b></p>\n\t * \t\tInput actions:\t[ insert, insert, delete, delete, equal, insert, delete ]\n\t * \t\tOutput actions:\t[ insert, replace, delete, equal, replace ]\n\t *\n\t * @private\n\t * @param {Array.<String>} actions Actions array which is a result of the {@link module:utils/diff~diff} function.\n\t * @param {Array.<Node>|NodeList} actualDom Actual DOM children\n\t * @param {Array.<Node>} expectedDom Expected DOM children.\n\t * @returns {Array.<String>} Actions array modified with the `replace` actions.\n\t */\n\t_findReplaceActions( actions, actualDom, expectedDom ) {\n\t\t// If there is no both 'insert' and 'delete' actions, no need to check for replaced elements.\n\t\tif ( actions.indexOf( 'insert' ) === -1 || actions.indexOf( 'delete' ) === -1 ) {\n\t\t\treturn actions;\n\t\t}\n\n\t\tlet newActions = [];\n\t\tlet actualSlice = [];\n\t\tlet expectedSlice = [];\n\n\t\tconst counter = { equal: 0, insert: 0, delete: 0 };\n\n\t\tfor ( const action of actions ) {\n\t\t\tif ( action === 'insert' ) {\n\t\t\t\texpectedSlice.push( expectedDom[ counter.equal + counter.insert ] );\n\t\t\t} else if ( action === 'delete' ) {\n\t\t\t\tactualSlice.push( actualDom[ counter.equal + counter.delete ] );\n\t\t\t} else { // equal\n\t\t\t\tnewActions = newActions.concat( diff( actualSlice, expectedSlice, areSimilar ).map( x => x === 'equal' ? 'replace' : x ) );\n\t\t\t\tnewActions.push( 'equal' );\n\t\t\t\t// Reset stored elements on 'equal'.\n\t\t\t\tactualSlice = [];\n\t\t\t\texpectedSlice = [];\n\t\t\t}\n\t\t\tcounter[ action ]++;\n\t\t}\n\n\t\treturn newActions.concat( diff( actualSlice, expectedSlice, areSimilar ).map( x => x === 'equal' ? 'replace' : x ) );\n\t}\n\n\t/**\n\t * Marks text nodes to be synchronized.\n\t *\n\t * If a text node is passed, it will be marked. If an element is passed, all descendant text nodes inside it will be marked.\n\t *\n\t * @private\n\t * @param {module:engine/view/node~Node} viewNode View node to sync.\n\t */\n\t_markDescendantTextToSync( viewNode ) {\n\t\tif ( !viewNode ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( viewNode.is( 'text' ) ) {\n\t\t\tthis.markedTexts.add( viewNode );\n\t\t} else if ( viewNode.is( 'element' ) ) {\n\t\t\tfor ( const child of viewNode.getChildren() ) {\n\t\t\t\tthis._markDescendantTextToSync( child );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the selection needs to be updated and possibly updates it.\n\t *\n\t * @private\n\t */\n\t_updateSelection() {\n\t\t// If there is no selection - remove DOM and fake selections.\n\t\tif ( this.selection.rangeCount === 0 ) {\n\t\t\tthis._removeDomSelection();\n\t\t\tthis._removeFakeSelection();\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst domRoot = this.domConverter.mapViewToDom( this.selection.editableElement );\n\n\t\t// Do nothing if there is no focus, or there is no DOM element corresponding to selection's editable element.\n\t\tif ( !this.isFocused || !domRoot ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Render selection.\n\t\tif ( this.selection.isFake ) {\n\t\t\tthis._updateFakeSelection( domRoot );\n\t\t} else {\n\t\t\tthis._removeFakeSelection();\n\t\t\tthis._updateDomSelection( domRoot );\n\t\t}\n\t}\n\n\t/**\n\t * Updates the fake selection.\n\t *\n\t * @private\n\t * @param {HTMLElement} domRoot A valid DOM root where the fake selection container should be added.\n\t */\n\t_updateFakeSelection( domRoot ) {\n\t\tconst domDocument = domRoot.ownerDocument;\n\n\t\tif ( !this._fakeSelectionContainer ) {\n\t\t\tthis._fakeSelectionContainer = createFakeSelectionContainer( domDocument );\n\t\t}\n\n\t\tconst container = this._fakeSelectionContainer;\n\n\t\t// Bind fake selection container with the current selection *position*.\n\t\tthis.domConverter.bindFakeSelection( container, this.selection );\n\n\t\tif ( !this._fakeSelectionNeedsUpdate( domRoot ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !container.parentElement || container.parentElement != domRoot ) {\n\t\t\tdomRoot.appendChild( container );\n\t\t}\n\n\t\tcontainer.textContent = this.selection.fakeSelectionLabel || '\\u00A0';\n\n\t\tconst domSelection = domDocument.getSelection();\n\t\tconst domRange = domDocument.createRange();\n\n\t\tdomSelection.removeAllRanges();\n\t\tdomRange.selectNodeContents( container );\n\t\tdomSelection.addRange( domRange );\n\t}\n\n\t/**\n\t * Updates the DOM selection.\n\t *\n\t * @private\n\t * @param {HTMLElement} domRoot A valid DOM root where the DOM selection should be rendered.\n\t */\n\t_updateDomSelection( domRoot ) {\n\t\tconst domSelection = domRoot.ownerDocument.defaultView.getSelection();\n\n\t\t// Let's check whether DOM selection needs updating at all.\n\t\tif ( !this._domSelectionNeedsUpdate( domSelection ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Multi-range selection is not available in most browsers, and, at least in Chrome, trying to\n\t\t// set such selection, that is not continuous, throws an error. Because of that, we will just use anchor\n\t\t// and focus of view selection.\n\t\t// Since we are not supporting multi-range selection, we also do not need to check if proper editable is\n\t\t// selected. If there is any editable selected, it is okay (editable is taken from selection anchor).\n\t\tconst anchor = this.domConverter.viewPositionToDom( this.selection.anchor );\n\t\tconst focus = this.domConverter.viewPositionToDom( this.selection.focus );\n\n\t\t// Focus the new editing host.\n\t\t// Otherwise, FF may throw an error (https://github.com/ckeditor/ckeditor5/issues/721).\n\t\tdomRoot.focus();\n\n\t\tdomSelection.collapse( anchor.parent, anchor.offset );\n\t\tdomSelection.extend( focus.parent, focus.offset );\n\n\t\t// Firefox–specific hack (https://github.com/ckeditor/ckeditor5-engine/issues/1439).\n\t\tif ( env.isGecko ) {\n\t\t\tfixGeckoSelectionAfterBr( focus, domSelection );\n\t\t}\n\t}\n\n\t/**\n\t * Checks whether a given DOM selection needs to be updated.\n\t *\n\t * @private\n\t * @param {Selection} domSelection The DOM selection to check.\n\t * @returns {Boolean}\n\t */\n\t_domSelectionNeedsUpdate( domSelection ) {\n\t\tif ( !this.domConverter.isDomSelectionCorrect( domSelection ) ) {\n\t\t\t// Current DOM selection is in incorrect position. We need to update it.\n\t\t\treturn true;\n\t\t}\n\n\t\tconst oldViewSelection = domSelection && this.domConverter.domSelectionToView( domSelection );\n\n\t\tif ( oldViewSelection && this.selection.isEqual( oldViewSelection ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If selection is not collapsed, it does not need to be updated if it is similar.\n\t\tif ( !this.selection.isCollapsed && this.selection.isSimilar( oldViewSelection ) ) {\n\t\t\t// Selection did not changed and is correct, do not update.\n\t\t\treturn false;\n\t\t}\n\n\t\t// Selections are not similar.\n\t\treturn true;\n\t}\n\n\t/**\n\t * Checks whether the fake selection needs to be updated.\n\t *\n\t * @private\n\t * @param {HTMLElement} domRoot A valid DOM root where a new fake selection container should be added.\n\t * @returns {Boolean}\n\t */\n\t_fakeSelectionNeedsUpdate( domRoot ) {\n\t\tconst container = this._fakeSelectionContainer;\n\t\tconst domSelection = domRoot.ownerDocument.getSelection();\n\n\t\t// Fake selection needs to be updated if there's no fake selection container, or the container currently sits\n\t\t// in a different root.\n\t\tif ( !container || container.parentElement !== domRoot ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Make sure that the selection actually is within the fake selection.\n\t\tif ( domSelection.anchorNode !== container && !container.contains( domSelection.anchorNode ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn container.textContent !== this.selection.fakeSelectionLabel;\n\t}\n\n\t/**\n\t * Removes the DOM selection.\n\t *\n\t * @private\n\t */\n\t_removeDomSelection() {\n\t\tfor ( const doc of this.domDocuments ) {\n\t\t\tconst domSelection = doc.getSelection();\n\n\t\t\tif ( domSelection.rangeCount ) {\n\t\t\t\tconst activeDomElement = doc.activeElement;\n\t\t\t\tconst viewElement = this.domConverter.mapDomToView( activeDomElement );\n\n\t\t\t\tif ( activeDomElement && viewElement ) {\n\t\t\t\t\tdoc.getSelection().removeAllRanges();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Removes the fake selection.\n\t *\n\t * @private\n\t */\n\t_removeFakeSelection() {\n\t\tconst container = this._fakeSelectionContainer;\n\n\t\tif ( container ) {\n\t\t\tcontainer.remove();\n\t\t}\n\t}\n\n\t/**\n\t * Checks if focus needs to be updated and possibly updates it.\n\t *\n\t * @private\n\t */\n\t_updateFocus() {\n\t\tif ( this.isFocused ) {\n\t\t\tconst editable = this.selection.editableElement;\n\n\t\t\tif ( editable ) {\n\t\t\t\tthis.domConverter.focus( editable );\n\t\t\t}\n\t\t}\n\t}\n}\n\nmix( Renderer, ObservableMixin );\n\n// Checks if provided element is editable.\n//\n// @private\n// @param {module:engine/view/element~Element} element\n// @returns {Boolean}\nfunction isEditable( element ) {\n\tif ( element.getAttribute( 'contenteditable' ) == 'false' ) {\n\t\treturn false;\n\t}\n\n\tconst parent = element.findAncestor( element => element.hasAttribute( 'contenteditable' ) );\n\n\treturn !parent || parent.getAttribute( 'contenteditable' ) == 'true';\n}\n\n// Adds inline filler at a given position.\n//\n// The position can be given as an array of DOM nodes and an offset in that array,\n// or a DOM parent element and an offset in that element.\n//\n// @private\n// @param {Document} domDocument\n// @param {Element|Array.<Node>} domParentOrArray\n// @param {Number} offset\n// @returns {Text} The DOM text node that contains an inline filler.\nfunction addInlineFiller( domDocument, domParentOrArray, offset ) {\n\tconst childNodes = domParentOrArray instanceof Array ? domParentOrArray : domParentOrArray.childNodes;\n\tconst nodeAfterFiller = childNodes[ offset ];\n\n\tif ( isText( nodeAfterFiller ) ) {\n\t\tnodeAfterFiller.data = INLINE_FILLER + nodeAfterFiller.data;\n\n\t\treturn nodeAfterFiller;\n\t} else {\n\t\tconst fillerNode = domDocument.createTextNode( INLINE_FILLER );\n\n\t\tif ( Array.isArray( domParentOrArray ) ) {\n\t\t\tchildNodes.splice( offset, 0, fillerNode );\n\t\t} else {\n\t\t\tinsertAt( domParentOrArray, offset, fillerNode );\n\t\t}\n\n\t\treturn fillerNode;\n\t}\n}\n\n// Whether two DOM nodes should be considered as similar.\n// Nodes are considered similar if they have the same tag name.\n//\n// @private\n// @param {Node} node1\n// @param {Node} node2\n// @returns {Boolean}\nfunction areSimilar( node1, node2 ) {\n\treturn isNode( node1 ) && isNode( node2 ) &&\n\t\t!isText( node1 ) && !isText( node2 ) &&\n\t\tnode1.tagName.toLowerCase() === node2.tagName.toLowerCase();\n}\n\n// Whether two dom nodes should be considered as the same.\n// Two nodes which are considered the same are:\n//\n//\t\t* Text nodes with the same text.\n//\t\t* Element nodes represented by the same object.\n//\t\t* Two block filler elements.\n//\n// @private\n// @param {String} blockFillerMode Block filler mode, see {@link module:engine/view/domconverter~DomConverter#blockFillerMode}.\n// @param {Node} node1\n// @param {Node} node2\n// @returns {Boolean}\nfunction sameNodes( domConverter, actualDomChild, expectedDomChild ) {\n\t// Elements.\n\tif ( actualDomChild === expectedDomChild ) {\n\t\treturn true;\n\t}\n\t// Texts.\n\telse if ( isText( actualDomChild ) && isText( expectedDomChild ) ) {\n\t\treturn actualDomChild.data === expectedDomChild.data;\n\t}\n\t// Block fillers.\n\telse if ( domConverter.isBlockFiller( actualDomChild ) &&\n\t\tdomConverter.isBlockFiller( expectedDomChild ) ) {\n\t\treturn true;\n\t}\n\n\t// Not matching types.\n\treturn false;\n}\n\n// The following is a Firefox–specific hack (https://github.com/ckeditor/ckeditor5-engine/issues/1439).\n// When the native DOM selection is at the end of the block and preceded by <br /> e.g.\n//\n//\t\t<p>foo<br/>[]</p>\n//\n// which happens a lot when using the soft line break, the browser fails to (visually) move the\n// caret to the new line. A quick fix is as simple as force–refreshing the selection with the same range.\nfunction fixGeckoSelectionAfterBr( focus, domSelection ) {\n\tconst parent = focus.parent;\n\n\t// This fix works only when the focus point is at the very end of an element.\n\t// There is no point in running it in cases unrelated to the browser bug.\n\tif ( parent.nodeType != Node.ELEMENT_NODE || focus.offset != parent.childNodes.length - 1 ) {\n\t\treturn;\n\t}\n\n\tconst childAtOffset = parent.childNodes[ focus.offset ];\n\n\t// To stay on the safe side, the fix being as specific as possible, it targets only the\n\t// selection which is at the very end of the element and preceded by <br />.\n\tif ( childAtOffset && childAtOffset.tagName == 'BR' ) {\n\t\tdomSelection.addRange( domSelection.getRangeAt( 0 ) );\n\t}\n}\n\nfunction filterOutFakeSelectionContainer( domChildList, fakeSelectionContainer ) {\n\tconst childList = Array.from( domChildList );\n\n\tif ( childList.length == 0 || !fakeSelectionContainer ) {\n\t\treturn childList;\n\t}\n\n\tconst last = childList[ childList.length - 1 ];\n\n\tif ( last == fakeSelectionContainer ) {\n\t\tchildList.pop();\n\t}\n\n\treturn childList;\n}\n\n// Creates a fake selection container for a given document.\n//\n// @private\n// @param {Document} domDocument\n// @returns {HTMLElement}\nfunction createFakeSelectionContainer( domDocument ) {\n\tconst container = domDocument.createElement( 'div' );\n\n\tObject.assign( container.style, {\n\t\tposition: 'fixed',\n\t\ttop: 0,\n\t\tleft: '-9999px',\n\t\t// See https://github.com/ckeditor/ckeditor5/issues/752.\n\t\twidth: '42px'\n\t} );\n\n\t// Fill it with a text node so we can update it later.\n\tcontainer.textContent = '\\u00A0';\n\n\treturn container;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals window, document */\n\n/**\n * @module utils/dom/global\n */\n\n/**\n * A helper (module) giving an access to the global DOM objects such as `window` and\n * `document`. Accessing these objects using this helper allows easy and bulletproof\n * testing, i.e. stubbing native properties:\n *\n *\t\timport global from 'ckeditor5/utils/dom/global.js';\n *\n *\t\t// This stub will work for any code using global module.\n *\t\ttestUtils.sinon.stub( global, 'window', {\n *\t\t\tinnerWidth: 10000\n *\t\t} );\n *\n *\t\tconsole.log( global.window.innerWidth );\n */\nexport default { window, document };\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/indexof\n */\n\n/**\n * Returns index of the node in the parent element.\n *\n * @param {Node} node Node which index is tested.\n * @returns {Number} Index of the node in the parent element. Returns 0 if node has no parent.\n */\nexport default function indexOf( node ) {\n\tlet index = 0;\n\n\twhile ( node.previousSibling ) {\n\t\tnode = node.previousSibling;\n\t\tindex++;\n\t}\n\n\treturn index;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals Node */\n\n/**\n * @module utils/dom/getancestors\n */\n\n/**\n * Returns all ancestors of given DOM node, starting from the top-most (root). Includes the given node itself. If the\n * node is a part of `DocumentFragment` that `DocumentFragment` will be returned. In contrary, if the node is\n * appended to a `Document`, that `Document` will not be returned (algorithms operating on DOM tree care for `Document#documentElement`\n * at most, which will be returned).\n *\n * @param {Node} node DOM node.\n * @returns {Array.<Node|DocumentFragment>} Array of given `node` parents.\n */\nexport default function getAncestors( node ) {\n\tconst nodes = [];\n\n\t// We are interested in `Node`s `DocumentFragment`s only.\n\twhile ( node && node.nodeType != Node.DOCUMENT_NODE ) {\n\t\tnodes.unshift( node );\n\t\tnode = node.parentNode;\n\t}\n\n\treturn nodes;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/domconverter\n */\n\n/* globals document, Node, NodeFilter, Text */\n\nimport ViewText from './text';\nimport ViewElement from './element';\nimport ViewPosition from './position';\nimport ViewRange from './range';\nimport ViewSelection from './selection';\nimport ViewDocumentFragment from './documentfragment';\nimport ViewTreeWalker from './treewalker';\nimport { BR_FILLER, getDataWithoutFiller, INLINE_FILLER_LENGTH, isInlineFiller, NBSP_FILLER, startsWithFiller } from './filler';\n\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\nimport indexOf from '@ckeditor/ckeditor5-utils/src/dom/indexof';\nimport getAncestors from '@ckeditor/ckeditor5-utils/src/dom/getancestors';\nimport getCommonAncestor from '@ckeditor/ckeditor5-utils/src/dom/getcommonancestor';\nimport isText from '@ckeditor/ckeditor5-utils/src/dom/istext';\nimport { isElement } from 'lodash-es';\n\n// eslint-disable-next-line new-cap\nconst BR_FILLER_REF = BR_FILLER( document );\n\n/**\n * DomConverter is a set of tools to do transformations between DOM nodes and view nodes. It also handles\n * {@link module:engine/view/domconverter~DomConverter#bindElements binding} these nodes.\n *\n * The instance of DOMConverter is available in {@link module:engine/view/view~View#domConverter `editor.editing.view.domConverter`}.\n *\n * DomConverter does not check which nodes should be rendered (use {@link module:engine/view/renderer~Renderer}), does not keep a\n * state of a tree nor keeps synchronization between tree view and DOM tree (use {@link module:engine/view/document~Document}).\n *\n * DomConverter keeps DOM elements to View element bindings, so when the converter will be destroyed, the binding will\n * be lost. Two converters will keep separate binding maps, so one tree view can be bound with two DOM trees.\n */\nexport default class DomConverter {\n\t/**\n\t * Creates DOM converter.\n\t *\n\t * @param {Object} options Object with configuration options.\n\t * @param {module:engine/view/filler~BlockFillerMode} [options.blockFillerMode='br'] The type of the block filler to use.\n\t */\n\tconstructor( options = {} ) {\n\t\t/**\n\t\t * The mode of a block filler used by DOM converter.\n\t\t *\n\t\t * @readonly\n\t\t * @member {'br'|'nbsp'} module:engine/view/domconverter~DomConverter#blockFillerMode\n\t\t */\n\t\tthis.blockFillerMode = options.blockFillerMode || 'br';\n\n\t\t/**\n\t\t * Elements which are considered pre-formatted elements.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Array.<String>} module:engine/view/domconverter~DomConverter#preElements\n\t\t */\n\t\tthis.preElements = [ 'pre' ];\n\n\t\t/**\n\t\t * Elements which are considered block elements (and hence should be filled with a\n\t\t * {@link #isBlockFiller block filler}).\n\t\t *\n\t\t * Whether an element is considered a block element also affects handling of trailing whitespaces.\n\t\t *\n\t\t * You can extend this array if you introduce support for block elements which are not yet recognized here.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Array.<String>} module:engine/view/domconverter~DomConverter#blockElements\n\t\t */\n\t\tthis.blockElements = [ 'p', 'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'li', 'dd', 'dt', 'figcaption' ];\n\n\t\t/**\n\t\t * Block {@link module:engine/view/filler filler} creator, which is used to create all block fillers during the\n\t\t * view to DOM conversion and to recognize block fillers during the DOM to view conversion.\n\t\t *\n\t\t * @readonly\n\t\t * @private\n\t\t * @member {Function} module:engine/view/domconverter~DomConverter#_blockFiller\n\t\t */\n\t\tthis._blockFiller = this.blockFillerMode == 'br' ? BR_FILLER : NBSP_FILLER;\n\n\t\t/**\n\t\t * DOM to View mapping.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakMap} module:engine/view/domconverter~DomConverter#_domToViewMapping\n\t\t */\n\t\tthis._domToViewMapping = new WeakMap();\n\n\t\t/**\n\t\t * View to DOM mapping.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakMap} module:engine/view/domconverter~DomConverter#_viewToDomMapping\n\t\t */\n\t\tthis._viewToDomMapping = new WeakMap();\n\n\t\t/**\n\t\t * Holds mapping between fake selection containers and corresponding view selections.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakMap} module:engine/view/domconverter~DomConverter#_fakeSelectionMapping\n\t\t */\n\t\tthis._fakeSelectionMapping = new WeakMap();\n\t}\n\n\t/**\n\t * Binds given DOM element that represents fake selection to a **position** of a\n\t * {@link module:engine/view/documentselection~DocumentSelection document selection}.\n\t * Document selection copy is stored and can be retrieved by\n\t * {@link module:engine/view/domconverter~DomConverter#fakeSelectionToView} method.\n\t *\n\t * @param {HTMLElement} domElement\n\t * @param {module:engine/view/documentselection~DocumentSelection} viewDocumentSelection\n\t */\n\tbindFakeSelection( domElement, viewDocumentSelection ) {\n\t\tthis._fakeSelectionMapping.set( domElement, new ViewSelection( viewDocumentSelection ) );\n\t}\n\n\t/**\n\t * Returns {@link module:engine/view/selection~Selection view selection} instance corresponding to\n\t * given DOM element that represents fake selection. Returns `undefined` if binding to given DOM element does not exists.\n\t *\n\t * @param {HTMLElement} domElement\n\t * @returns {module:engine/view/selection~Selection|undefined}\n\t */\n\tfakeSelectionToView( domElement ) {\n\t\treturn this._fakeSelectionMapping.get( domElement );\n\t}\n\n\t/**\n\t * Binds DOM and View elements, so it will be possible to get corresponding elements using\n\t * {@link module:engine/view/domconverter~DomConverter#mapDomToView} and\n\t * {@link module:engine/view/domconverter~DomConverter#mapViewToDom}.\n\t *\n\t * @param {HTMLElement} domElement DOM element to bind.\n\t * @param {module:engine/view/element~Element} viewElement View element to bind.\n\t */\n\tbindElements( domElement, viewElement ) {\n\t\tthis._domToViewMapping.set( domElement, viewElement );\n\t\tthis._viewToDomMapping.set( viewElement, domElement );\n\t}\n\n\t/**\n\t * Unbinds given `domElement` from the view element it was bound to. Unbinding is deep, meaning that all children of\n\t * `domElement` will be unbound too.\n\t *\n\t * @param {HTMLElement} domElement DOM element to unbind.\n\t */\n\tunbindDomElement( domElement ) {\n\t\tconst viewElement = this._domToViewMapping.get( domElement );\n\n\t\tif ( viewElement ) {\n\t\t\tthis._domToViewMapping.delete( domElement );\n\t\t\tthis._viewToDomMapping.delete( viewElement );\n\n\t\t\t// Use Array.from because of MS Edge (#923).\n\t\t\tfor ( const child of Array.from( domElement.childNodes ) ) {\n\t\t\t\tthis.unbindDomElement( child );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Binds DOM and View document fragments, so it will be possible to get corresponding document fragments using\n\t * {@link module:engine/view/domconverter~DomConverter#mapDomToView} and\n\t * {@link module:engine/view/domconverter~DomConverter#mapViewToDom}.\n\t *\n\t * @param {DocumentFragment} domFragment DOM document fragment to bind.\n\t * @param {module:engine/view/documentfragment~DocumentFragment} viewFragment View document fragment to bind.\n\t */\n\tbindDocumentFragments( domFragment, viewFragment ) {\n\t\tthis._domToViewMapping.set( domFragment, viewFragment );\n\t\tthis._viewToDomMapping.set( viewFragment, domFragment );\n\t}\n\n\t/**\n\t * Converts view to DOM. For all text nodes, not bound elements and document fragments new items will\n\t * be created. For bound elements and document fragments function will return corresponding items.\n\t *\n\t * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} viewNode\n\t * View node or document fragment to transform.\n\t * @param {Document} domDocument Document which will be used to create DOM nodes.\n\t * @param {Object} [options] Conversion options.\n\t * @param {Boolean} [options.bind=false] Determines whether new elements will be bound.\n\t * @param {Boolean} [options.withChildren=true] If `true`, node's and document fragment's children will be converted too.\n\t * @returns {Node|DocumentFragment} Converted node or DocumentFragment.\n\t */\n\tviewToDom( viewNode, domDocument, options = {} ) {\n\t\tif ( viewNode.is( 'text' ) ) {\n\t\t\tconst textData = this._processDataFromViewText( viewNode );\n\n\t\t\treturn domDocument.createTextNode( textData );\n\t\t} else {\n\t\t\tif ( this.mapViewToDom( viewNode ) ) {\n\t\t\t\treturn this.mapViewToDom( viewNode );\n\t\t\t}\n\n\t\t\tlet domElement;\n\n\t\t\tif ( viewNode.is( 'documentFragment' ) ) {\n\t\t\t\t// Create DOM document fragment.\n\t\t\t\tdomElement = domDocument.createDocumentFragment();\n\n\t\t\t\tif ( options.bind ) {\n\t\t\t\t\tthis.bindDocumentFragments( domElement, viewNode );\n\t\t\t\t}\n\t\t\t} else if ( viewNode.is( 'uiElement' ) ) {\n\t\t\t\t// UIElement has its own render() method (see #799).\n\t\t\t\tdomElement = viewNode.render( domDocument );\n\n\t\t\t\tif ( options.bind ) {\n\t\t\t\t\tthis.bindElements( domElement, viewNode );\n\t\t\t\t}\n\n\t\t\t\treturn domElement;\n\t\t\t} else {\n\t\t\t\t// Create DOM element.\n\t\t\t\tif ( viewNode.hasAttribute( 'xmlns' ) ) {\n\t\t\t\t\tdomElement = domDocument.createElementNS( viewNode.getAttribute( 'xmlns' ), viewNode.name );\n\t\t\t\t} else {\n\t\t\t\t\tdomElement = domDocument.createElement( viewNode.name );\n\t\t\t\t}\n\n\t\t\t\tif ( options.bind ) {\n\t\t\t\t\tthis.bindElements( domElement, viewNode );\n\t\t\t\t}\n\n\t\t\t\t// Copy element's attributes.\n\t\t\t\tfor ( const key of viewNode.getAttributeKeys() ) {\n\t\t\t\t\tdomElement.setAttribute( key, viewNode.getAttribute( key ) );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( options.withChildren || options.withChildren === undefined ) {\n\t\t\t\tfor ( const child of this.viewChildrenToDom( viewNode, domDocument, options ) ) {\n\t\t\t\t\tdomElement.appendChild( child );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn domElement;\n\t\t}\n\t}\n\n\t/**\n\t * Converts children of the view element to DOM using the\n\t * {@link module:engine/view/domconverter~DomConverter#viewToDom} method.\n\t * Additionally, this method adds block {@link module:engine/view/filler filler} to the list of children, if needed.\n\t *\n\t * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} viewElement Parent view element.\n\t * @param {Document} domDocument Document which will be used to create DOM nodes.\n\t * @param {Object} options See {@link module:engine/view/domconverter~DomConverter#viewToDom} options parameter.\n\t * @returns {Iterable.<Node>} DOM nodes.\n\t */\n\t* viewChildrenToDom( viewElement, domDocument, options = {} ) {\n\t\tconst fillerPositionOffset = viewElement.getFillerOffset && viewElement.getFillerOffset();\n\t\tlet offset = 0;\n\n\t\tfor ( const childView of viewElement.getChildren() ) {\n\t\t\tif ( fillerPositionOffset === offset ) {\n\t\t\t\tyield this._blockFiller( domDocument );\n\t\t\t}\n\n\t\t\tyield this.viewToDom( childView, domDocument, options );\n\n\t\t\toffset++;\n\t\t}\n\n\t\tif ( fillerPositionOffset === offset ) {\n\t\t\tyield this._blockFiller( domDocument );\n\t\t}\n\t}\n\n\t/**\n\t * Converts view {@link module:engine/view/range~Range} to DOM range.\n\t * Inline and block {@link module:engine/view/filler fillers} are handled during the conversion.\n\t *\n\t * @param {module:engine/view/range~Range} viewRange View range.\n\t * @returns {Range} DOM range.\n\t */\n\tviewRangeToDom( viewRange ) {\n\t\tconst domStart = this.viewPositionToDom( viewRange.start );\n\t\tconst domEnd = this.viewPositionToDom( viewRange.end );\n\n\t\tconst domRange = document.createRange();\n\t\tdomRange.setStart( domStart.parent, domStart.offset );\n\t\tdomRange.setEnd( domEnd.parent, domEnd.offset );\n\n\t\treturn domRange;\n\t}\n\n\t/**\n\t * Converts view {@link module:engine/view/position~Position} to DOM parent and offset.\n\t *\n\t * Inline and block {@link module:engine/view/filler fillers} are handled during the conversion.\n\t * If the converted position is directly before inline filler it is moved inside the filler.\n\t *\n\t * @param {module:engine/view/position~Position} viewPosition View position.\n\t * @returns {Object|null} position DOM position or `null` if view position could not be converted to DOM.\n\t * @returns {Node} position.parent DOM position parent.\n\t * @returns {Number} position.offset DOM position offset.\n\t */\n\tviewPositionToDom( viewPosition ) {\n\t\tconst viewParent = viewPosition.parent;\n\n\t\tif ( viewParent.is( 'text' ) ) {\n\t\t\tconst domParent = this.findCorrespondingDomText( viewParent );\n\n\t\t\tif ( !domParent ) {\n\t\t\t\t// Position is in a view text node that has not been rendered to DOM yet.\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet offset = viewPosition.offset;\n\n\t\t\tif ( startsWithFiller( domParent ) ) {\n\t\t\t\toffset += INLINE_FILLER_LENGTH;\n\t\t\t}\n\n\t\t\treturn { parent: domParent, offset };\n\t\t} else {\n\t\t\t// viewParent is instance of ViewElement.\n\t\t\tlet domParent, domBefore, domAfter;\n\n\t\t\tif ( viewPosition.offset === 0 ) {\n\t\t\t\tdomParent = this.mapViewToDom( viewParent );\n\n\t\t\t\tif ( !domParent ) {\n\t\t\t\t\t// Position is in a view element that has not been rendered to DOM yet.\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tdomAfter = domParent.childNodes[ 0 ];\n\t\t\t} else {\n\t\t\t\tconst nodeBefore = viewPosition.nodeBefore;\n\n\t\t\t\tdomBefore = nodeBefore.is( 'text' ) ?\n\t\t\t\t\tthis.findCorrespondingDomText( nodeBefore ) :\n\t\t\t\t\tthis.mapViewToDom( viewPosition.nodeBefore );\n\n\t\t\t\tif ( !domBefore ) {\n\t\t\t\t\t// Position is after a view element that has not been rendered to DOM yet.\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tdomParent = domBefore.parentNode;\n\t\t\t\tdomAfter = domBefore.nextSibling;\n\t\t\t}\n\n\t\t\t// If there is an inline filler at position return position inside the filler. We should never return\n\t\t\t// the position before the inline filler.\n\t\t\tif ( isText( domAfter ) && startsWithFiller( domAfter ) ) {\n\t\t\t\treturn { parent: domAfter, offset: INLINE_FILLER_LENGTH };\n\t\t\t}\n\n\t\t\tconst offset = domBefore ? indexOf( domBefore ) + 1 : 0;\n\n\t\t\treturn { parent: domParent, offset };\n\t\t}\n\t}\n\n\t/**\n\t * Converts DOM to view. For all text nodes, not bound elements and document fragments new items will\n\t * be created. For bound elements and document fragments function will return corresponding items. For\n\t * {@link module:engine/view/filler fillers} `null` will be returned.\n\t * For all DOM elements rendered by {@link module:engine/view/uielement~UIElement} that UIElement will be returned.\n\t *\n\t * @param {Node|DocumentFragment} domNode DOM node or document fragment to transform.\n\t * @param {Object} [options] Conversion options.\n\t * @param {Boolean} [options.bind=false] Determines whether new elements will be bound.\n\t * @param {Boolean} [options.withChildren=true] If `true`, node's and document fragment's children will be converted too.\n\t * @param {Boolean} [options.keepOriginalCase=false] If `false`, node's tag name will be converter to lower case.\n\t * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null} Converted node or document fragment\n\t * or `null` if DOM node is a {@link module:engine/view/filler filler} or the given node is an empty text node.\n\t */\n\tdomToView( domNode, options = {} ) {\n\t\tif ( this.isBlockFiller( domNode, this.blockFillerMode ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// When node is inside UIElement return that UIElement as it's view representation.\n\t\tconst uiElement = this.getParentUIElement( domNode, this._domToViewMapping );\n\n\t\tif ( uiElement ) {\n\t\t\treturn uiElement;\n\t\t}\n\n\t\tif ( isText( domNode ) ) {\n\t\t\tif ( isInlineFiller( domNode ) ) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tconst textData = this._processDataFromDomText( domNode );\n\n\t\t\t\treturn textData === '' ? null : new ViewText( textData );\n\t\t\t}\n\t\t} else if ( this.isComment( domNode ) ) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\tif ( this.mapDomToView( domNode ) ) {\n\t\t\t\treturn this.mapDomToView( domNode );\n\t\t\t}\n\n\t\t\tlet viewElement;\n\n\t\t\tif ( this.isDocumentFragment( domNode ) ) {\n\t\t\t\t// Create view document fragment.\n\t\t\t\tviewElement = new ViewDocumentFragment();\n\n\t\t\t\tif ( options.bind ) {\n\t\t\t\t\tthis.bindDocumentFragments( domNode, viewElement );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Create view element.\n\t\t\t\tconst viewName = options.keepOriginalCase ? domNode.tagName : domNode.tagName.toLowerCase();\n\t\t\t\tviewElement = new ViewElement( viewName );\n\n\t\t\t\tif ( options.bind ) {\n\t\t\t\t\tthis.bindElements( domNode, viewElement );\n\t\t\t\t}\n\n\t\t\t\t// Copy element's attributes.\n\t\t\t\tconst attrs = domNode.attributes;\n\n\t\t\t\tfor ( let i = attrs.length - 1; i >= 0; i-- ) {\n\t\t\t\t\tviewElement._setAttribute( attrs[ i ].name, attrs[ i ].value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( options.withChildren || options.withChildren === undefined ) {\n\t\t\t\tfor ( const child of this.domChildrenToView( domNode, options ) ) {\n\t\t\t\t\tviewElement._appendChild( child );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn viewElement;\n\t\t}\n\t}\n\n\t/**\n\t * Converts children of the DOM element to view nodes using\n\t * the {@link module:engine/view/domconverter~DomConverter#domToView} method.\n\t * Additionally this method omits block {@link module:engine/view/filler filler}, if it exists in the DOM parent.\n\t *\n\t * @param {HTMLElement} domElement Parent DOM element.\n\t * @param {Object} options See {@link module:engine/view/domconverter~DomConverter#domToView} options parameter.\n\t * @returns {Iterable.<module:engine/view/node~Node>} View nodes.\n\t */\n\t* domChildrenToView( domElement, options = {} ) {\n\t\tfor ( let i = 0; i < domElement.childNodes.length; i++ ) {\n\t\t\tconst domChild = domElement.childNodes[ i ];\n\t\t\tconst viewChild = this.domToView( domChild, options );\n\n\t\t\tif ( viewChild !== null ) {\n\t\t\t\tyield viewChild;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Converts DOM selection to view {@link module:engine/view/selection~Selection}.\n\t * Ranges which cannot be converted will be omitted.\n\t *\n\t * @param {Selection} domSelection DOM selection.\n\t * @returns {module:engine/view/selection~Selection} View selection.\n\t */\n\tdomSelectionToView( domSelection ) {\n\t\t// DOM selection might be placed in fake selection container.\n\t\t// If container contains fake selection - return corresponding view selection.\n\t\tif ( domSelection.rangeCount === 1 ) {\n\t\t\tlet container = domSelection.getRangeAt( 0 ).startContainer;\n\n\t\t\t// The DOM selection might be moved to the text node inside the fake selection container.\n\t\t\tif ( isText( container ) ) {\n\t\t\t\tcontainer = container.parentNode;\n\t\t\t}\n\n\t\t\tconst viewSelection = this.fakeSelectionToView( container );\n\n\t\t\tif ( viewSelection ) {\n\t\t\t\treturn viewSelection;\n\t\t\t}\n\t\t}\n\n\t\tconst isBackward = this.isDomSelectionBackward( domSelection );\n\n\t\tconst viewRanges = [];\n\n\t\tfor ( let i = 0; i < domSelection.rangeCount; i++ ) {\n\t\t\t// DOM Range have correct start and end, no matter what is the DOM Selection direction. So we don't have to fix anything.\n\t\t\tconst domRange = domSelection.getRangeAt( i );\n\t\t\tconst viewRange = this.domRangeToView( domRange );\n\n\t\t\tif ( viewRange ) {\n\t\t\t\tviewRanges.push( viewRange );\n\t\t\t}\n\t\t}\n\n\t\treturn new ViewSelection( viewRanges, { backward: isBackward } );\n\t}\n\n\t/**\n\t * Converts DOM Range to view {@link module:engine/view/range~Range}.\n\t * If the start or end position can not be converted `null` is returned.\n\t *\n\t * @param {Range} domRange DOM range.\n\t * @returns {module:engine/view/range~Range|null} View range.\n\t */\n\tdomRangeToView( domRange ) {\n\t\tconst viewStart = this.domPositionToView( domRange.startContainer, domRange.startOffset );\n\t\tconst viewEnd = this.domPositionToView( domRange.endContainer, domRange.endOffset );\n\n\t\tif ( viewStart && viewEnd ) {\n\t\t\treturn new ViewRange( viewStart, viewEnd );\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Converts DOM parent and offset to view {@link module:engine/view/position~Position}.\n\t *\n\t * If the position is inside a {@link module:engine/view/filler filler} which has no corresponding view node,\n\t * position of the filler will be converted and returned.\n\t *\n\t * If the position is inside DOM element rendered by {@link module:engine/view/uielement~UIElement}\n\t * that position will be converted to view position before that UIElement.\n\t *\n\t * If structures are too different and it is not possible to find corresponding position then `null` will be returned.\n\t *\n\t * @param {Node} domParent DOM position parent.\n\t * @param {Number} domOffset DOM position offset.\n\t * @returns {module:engine/view/position~Position} viewPosition View position.\n\t */\n\tdomPositionToView( domParent, domOffset ) {\n\t\tif ( this.isBlockFiller( domParent, this.blockFillerMode ) ) {\n\t\t\treturn this.domPositionToView( domParent.parentNode, indexOf( domParent ) );\n\t\t}\n\n\t\t// If position is somewhere inside UIElement - return position before that element.\n\t\tconst viewElement = this.mapDomToView( domParent );\n\n\t\tif ( viewElement && viewElement.is( 'uiElement' ) ) {\n\t\t\treturn ViewPosition._createBefore( viewElement );\n\t\t}\n\n\t\tif ( isText( domParent ) ) {\n\t\t\tif ( isInlineFiller( domParent ) ) {\n\t\t\t\treturn this.domPositionToView( domParent.parentNode, indexOf( domParent ) );\n\t\t\t}\n\n\t\t\tconst viewParent = this.findCorrespondingViewText( domParent );\n\t\t\tlet offset = domOffset;\n\n\t\t\tif ( !viewParent ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( startsWithFiller( domParent ) ) {\n\t\t\t\toffset -= INLINE_FILLER_LENGTH;\n\t\t\t\toffset = offset < 0 ? 0 : offset;\n\t\t\t}\n\n\t\t\treturn new ViewPosition( viewParent, offset );\n\t\t}\n\t\t// domParent instanceof HTMLElement.\n\t\telse {\n\t\t\tif ( domOffset === 0 ) {\n\t\t\t\tconst viewParent = this.mapDomToView( domParent );\n\n\t\t\t\tif ( viewParent ) {\n\t\t\t\t\treturn new ViewPosition( viewParent, 0 );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst domBefore = domParent.childNodes[ domOffset - 1 ];\n\t\t\t\tconst viewBefore = isText( domBefore ) ?\n\t\t\t\t\tthis.findCorrespondingViewText( domBefore ) :\n\t\t\t\t\tthis.mapDomToView( domBefore );\n\n\t\t\t\t// TODO #663\n\t\t\t\tif ( viewBefore && viewBefore.parent ) {\n\t\t\t\t\treturn new ViewPosition( viewBefore.parent, viewBefore.index + 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Returns corresponding view {@link module:engine/view/element~Element Element} or\n\t * {@link module:engine/view/documentfragment~DocumentFragment} for provided DOM element or\n\t * document fragment. If there is no view item {@link module:engine/view/domconverter~DomConverter#bindElements bound}\n\t * to the given DOM - `undefined` is returned.\n\t * For all DOM elements rendered by {@link module:engine/view/uielement~UIElement} that UIElement will be returned.\n\t *\n\t * @param {DocumentFragment|Element} domElementOrDocumentFragment DOM element or document fragment.\n\t * @returns {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|undefined}\n\t * Corresponding view element, document fragment or `undefined` if no element was bound.\n\t */\n\tmapDomToView( domElementOrDocumentFragment ) {\n\t\treturn this.getParentUIElement( domElementOrDocumentFragment ) || this._domToViewMapping.get( domElementOrDocumentFragment );\n\t}\n\n\t/**\n\t * Finds corresponding text node. Text nodes are not {@link module:engine/view/domconverter~DomConverter#bindElements bound},\n\t * corresponding text node is returned based on the sibling or parent.\n\t *\n\t * If the directly previous sibling is a {@link module:engine/view/domconverter~DomConverter#bindElements bound} element, it is used\n\t * to find the corresponding text node.\n\t *\n\t * If this is a first child in the parent and the parent is a {@link module:engine/view/domconverter~DomConverter#bindElements bound}\n\t * element, it is used to find the corresponding text node.\n\t *\n\t * For all text nodes rendered by {@link module:engine/view/uielement~UIElement} that UIElement will be returned.\n\t *\n\t * Otherwise `null` is returned.\n\t *\n\t * Note that for the block or inline {@link module:engine/view/filler filler} this method returns `null`.\n\t *\n\t * @param {Text} domText DOM text node.\n\t * @returns {module:engine/view/text~Text|null} Corresponding view text node or `null`, if it was not possible to find a\n\t * corresponding node.\n\t */\n\tfindCorrespondingViewText( domText ) {\n\t\tif ( isInlineFiller( domText ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// If DOM text was rendered by UIElement - return that element.\n\t\tconst uiElement = this.getParentUIElement( domText );\n\n\t\tif ( uiElement ) {\n\t\t\treturn uiElement;\n\t\t}\n\n\t\tconst previousSibling = domText.previousSibling;\n\n\t\t// Try to use previous sibling to find the corresponding text node.\n\t\tif ( previousSibling ) {\n\t\t\tif ( !( this.isElement( previousSibling ) ) ) {\n\t\t\t\t// The previous is text or comment.\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst viewElement = this.mapDomToView( previousSibling );\n\n\t\t\tif ( viewElement ) {\n\t\t\t\tconst nextSibling = viewElement.nextSibling;\n\n\t\t\t\t// It might be filler which has no corresponding view node.\n\t\t\t\tif ( nextSibling instanceof ViewText ) {\n\t\t\t\t\treturn viewElement.nextSibling;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Try to use parent to find the corresponding text node.\n\t\telse {\n\t\t\tconst viewElement = this.mapDomToView( domText.parentNode );\n\n\t\t\tif ( viewElement ) {\n\t\t\t\tconst firstChild = viewElement.getChild( 0 );\n\n\t\t\t\t// It might be filler which has no corresponding view node.\n\t\t\t\tif ( firstChild instanceof ViewText ) {\n\t\t\t\t\treturn firstChild;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns corresponding DOM item for provided {@link module:engine/view/element~Element Element} or\n\t * {@link module:engine/view/documentfragment~DocumentFragment DocumentFragment}.\n\t * To find a corresponding text for {@link module:engine/view/text~Text view Text instance}\n\t * use {@link #findCorrespondingDomText}.\n\t *\n\t * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} viewNode\n\t * View element or document fragment.\n\t * @returns {Node|DocumentFragment|undefined} Corresponding DOM node or document fragment.\n\t */\n\tmapViewToDom( documentFragmentOrElement ) {\n\t\treturn this._viewToDomMapping.get( documentFragmentOrElement );\n\t}\n\n\t/**\n\t * Finds corresponding text node. Text nodes are not {@link module:engine/view/domconverter~DomConverter#bindElements bound},\n\t * corresponding text node is returned based on the sibling or parent.\n\t *\n\t * If the directly previous sibling is a {@link module:engine/view/domconverter~DomConverter#bindElements bound} element, it is used\n\t * to find the corresponding text node.\n\t *\n\t * If this is a first child in the parent and the parent is a {@link module:engine/view/domconverter~DomConverter#bindElements bound}\n\t * element, it is used to find the corresponding text node.\n\t *\n\t * Otherwise `null` is returned.\n\t *\n\t * @param {module:engine/view/text~Text} viewText View text node.\n\t * @returns {Text|null} Corresponding DOM text node or `null`, if it was not possible to find a corresponding node.\n\t */\n\tfindCorrespondingDomText( viewText ) {\n\t\tconst previousSibling = viewText.previousSibling;\n\n\t\t// Try to use previous sibling to find the corresponding text node.\n\t\tif ( previousSibling && this.mapViewToDom( previousSibling ) ) {\n\t\t\treturn this.mapViewToDom( previousSibling ).nextSibling;\n\t\t}\n\n\t\t// If this is a first node, try to use parent to find the corresponding text node.\n\t\tif ( !previousSibling && viewText.parent && this.mapViewToDom( viewText.parent ) ) {\n\t\t\treturn this.mapViewToDom( viewText.parent ).childNodes[ 0 ];\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Focuses DOM editable that is corresponding to provided {@link module:engine/view/editableelement~EditableElement}.\n\t *\n\t * @param {module:engine/view/editableelement~EditableElement} viewEditable\n\t */\n\tfocus( viewEditable ) {\n\t\tconst domEditable = this.mapViewToDom( viewEditable );\n\n\t\tif ( domEditable && domEditable.ownerDocument.activeElement !== domEditable ) {\n\t\t\t// Save the scrollX and scrollY positions before the focus.\n\t\t\tconst { scrollX, scrollY } = global.window;\n\t\t\tconst scrollPositions = [];\n\n\t\t\t// Save all scrollLeft and scrollTop values starting from domEditable up to\n\t\t\t// document#documentElement.\n\t\t\tforEachDomNodeAncestor( domEditable, node => {\n\t\t\t\tconst { scrollLeft, scrollTop } = node;\n\n\t\t\t\tscrollPositions.push( [ scrollLeft, scrollTop ] );\n\t\t\t} );\n\n\t\t\tdomEditable.focus();\n\n\t\t\t// Restore scrollLeft and scrollTop values starting from domEditable up to\n\t\t\t// document#documentElement.\n\t\t\t// https://github.com/ckeditor/ckeditor5-engine/issues/951\n\t\t\t// https://github.com/ckeditor/ckeditor5-engine/issues/957\n\t\t\tforEachDomNodeAncestor( domEditable, node => {\n\t\t\t\tconst [ scrollLeft, scrollTop ] = scrollPositions.shift();\n\n\t\t\t\tnode.scrollLeft = scrollLeft;\n\t\t\t\tnode.scrollTop = scrollTop;\n\t\t\t} );\n\n\t\t\t// Restore the scrollX and scrollY positions after the focus.\n\t\t\t// https://github.com/ckeditor/ckeditor5-engine/issues/951\n\t\t\tglobal.window.scrollTo( scrollX, scrollY );\n\t\t}\n\t}\n\n\t/**\n\t * Returns `true` when `node.nodeType` equals `Node.ELEMENT_NODE`.\n\t *\n\t * @param {Node} node Node to check.\n\t * @returns {Boolean}\n\t */\n\tisElement( node ) {\n\t\treturn node && node.nodeType == Node.ELEMENT_NODE;\n\t}\n\n\t/**\n\t * Returns `true` when `node.nodeType` equals `Node.DOCUMENT_FRAGMENT_NODE`.\n\t *\n\t * @param {Node} node Node to check.\n\t * @returns {Boolean}\n\t */\n\tisDocumentFragment( node ) {\n\t\treturn node && node.nodeType == Node.DOCUMENT_FRAGMENT_NODE;\n\t}\n\n\t/**\n\t * Returns `true` when `node.nodeType` equals `Node.COMMENT_NODE`.\n\t *\n\t * @param {Node} node Node to check.\n\t * @returns {Boolean}\n\t */\n\tisComment( node ) {\n\t\treturn node && node.nodeType == Node.COMMENT_NODE;\n\t}\n\n\t/**\n\t * Checks if the node is an instance of the block filler for this DOM converter.\n\t *\n\t *\t\tconst converter = new DomConverter( { blockFillerMode: 'br' } );\n\t *\n\t *\t\tconverter.isBlockFiller( BR_FILLER( document ) ); // true\n\t *\t\tconverter.isBlockFiller( NBSP_FILLER( document ) ); // false\n\t *\n\t * **Note:**: For the `'nbsp'` mode the method also checks context of a node so it cannot be a detached node.\n\t *\n\t * **Note:** A special case in the `'nbsp'` mode exists where the `<br>` in `<p><br></p>` is treated as a block filler.\n\t *\n\t * @param {Node} domNode DOM node to check.\n\t * @returns {Boolean} True if a node is considered a block filler for given mode.\n\t */\n\tisBlockFiller( domNode ) {\n\t\tif ( this.blockFillerMode == 'br' ) {\n\t\t\treturn domNode.isEqualNode( BR_FILLER_REF );\n\t\t}\n\n\t\t// Special case for <p><br></p> in which case the <br> should be treated as filler even\n\t\t// when we're in the 'nbsp' mode. See ckeditor5#5564.\n\t\tif ( domNode.tagName === 'BR' && hasBlockParent( domNode, this.blockElements ) && domNode.parentNode.childNodes.length === 1 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn isNbspBlockFiller( domNode, this.blockElements );\n\t}\n\n\t/**\n\t * Returns `true` if given selection is a backward selection, that is, if it's `focus` is before `anchor`.\n\t *\n\t * @param {Selection} DOM Selection instance to check.\n\t * @returns {Boolean}\n\t */\n\tisDomSelectionBackward( selection ) {\n\t\tif ( selection.isCollapsed ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Since it takes multiple lines of code to check whether a \"DOM Position\" is before/after another \"DOM Position\",\n\t\t// we will use the fact that range will collapse if it's end is before it's start.\n\t\tconst range = document.createRange();\n\n\t\trange.setStart( selection.anchorNode, selection.anchorOffset );\n\t\trange.setEnd( selection.focusNode, selection.focusOffset );\n\n\t\tconst backward = range.collapsed;\n\n\t\trange.detach();\n\n\t\treturn backward;\n\t}\n\n\t/**\n\t * Returns parent {@link module:engine/view/uielement~UIElement} for provided DOM node. Returns `null` if there is no\n\t * parent UIElement.\n\t *\n\t * @param {Node} domNode\n\t * @returns {module:engine/view/uielement~UIElement|null}\n\t */\n\tgetParentUIElement( domNode ) {\n\t\tconst ancestors = getAncestors( domNode );\n\n\t\t// Remove domNode from the list.\n\t\tancestors.pop();\n\n\t\twhile ( ancestors.length ) {\n\t\t\tconst domNode = ancestors.pop();\n\t\t\tconst viewNode = this._domToViewMapping.get( domNode );\n\n\t\t\tif ( viewNode && viewNode.is( 'uiElement' ) ) {\n\t\t\t\treturn viewNode;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Checks if given selection's boundaries are at correct places.\n\t *\n\t * The following places are considered as incorrect for selection boundaries:\n\t * * before or in the middle of the inline filler sequence,\n\t * * inside the DOM element which represents {@link module:engine/view/uielement~UIElement a view ui element}.\n\t *\n\t * @param {Selection} domSelection DOM Selection object to be checked.\n\t * @returns {Boolean} `true` if the given selection is at a correct place, `false` otherwise.\n\t */\n\tisDomSelectionCorrect( domSelection ) {\n\t\treturn this._isDomSelectionPositionCorrect( domSelection.anchorNode, domSelection.anchorOffset ) &&\n\t\t\tthis._isDomSelectionPositionCorrect( domSelection.focusNode, domSelection.focusOffset );\n\t}\n\n\t/**\n\t * Checks if the given DOM position is a correct place for selection boundary. See {@link #isDomSelectionCorrect}.\n\t *\n\t * @private\n\t * @param {Element} domParent Position parent.\n\t * @param {Number} offset Position offset.\n\t * @returns {Boolean} `true` if given position is at a correct place for selection boundary, `false` otherwise.\n\t */\n\t_isDomSelectionPositionCorrect( domParent, offset ) {\n\t\t// If selection is before or in the middle of inline filler string, it is incorrect.\n\t\tif ( isText( domParent ) && startsWithFiller( domParent ) && offset < INLINE_FILLER_LENGTH ) {\n\t\t\t// Selection in a text node, at wrong position (before or in the middle of filler).\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( this.isElement( domParent ) && startsWithFiller( domParent.childNodes[ offset ] ) ) {\n\t\t\t// Selection in an element node, before filler text node.\n\t\t\treturn false;\n\t\t}\n\n\t\tconst viewParent = this.mapDomToView( domParent );\n\n\t\t// If selection is in `view.UIElement`, it is incorrect. Note that `mapDomToView()` returns `view.UIElement`\n\t\t// also for any dom element that is inside the view ui element (so we don't need to perform any additional checks).\n\t\tif ( viewParent && viewParent.is( 'uiElement' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Takes text data from a given {@link module:engine/view/text~Text#data} and processes it so\n\t * it is correctly displayed in the DOM.\n\t *\n\t * Following changes are done:\n\t *\n\t * * a space at the beginning is changed to `&nbsp;` if this is the first text node in its container\n\t * element or if a previous text node ends with a space character,\n\t * * space at the end of the text node is changed to `&nbsp;` if there are two spaces at the end of a node or if next node\n\t * starts with a space or if it is the last text node in its container,\n\t * * remaining spaces are replaced to a chain of spaces and `&nbsp;` (e.g. `'x   x'` becomes `'x &nbsp; x'`).\n\t *\n\t * Content of {@link #preElements} is not processed.\n\t *\n\t * @private\n\t * @param {module:engine/view/text~Text} node View text node to process.\n\t * @returns {String} Processed text data.\n\t */\n\t_processDataFromViewText( node ) {\n\t\tlet data = node.data;\n\n\t\t// If any of node ancestors has a name which is in `preElements` array, then currently processed\n\t\t// view text node is (will be) in preformatted element. We should not change whitespaces then.\n\t\tif ( node.getAncestors().some( parent => this.preElements.includes( parent.name ) ) ) {\n\t\t\treturn data;\n\t\t}\n\n\t\t// 1. Replace the first space with a nbsp if the previous node ends with a space or there is no previous node\n\t\t// (container element boundary).\n\t\tif ( data.charAt( 0 ) == ' ' ) {\n\t\t\tconst prevNode = this._getTouchingViewTextNode( node, false );\n\t\t\tconst prevEndsWithSpace = prevNode && this._nodeEndsWithSpace( prevNode );\n\n\t\t\tif ( prevEndsWithSpace || !prevNode ) {\n\t\t\t\tdata = '\\u00A0' + data.substr( 1 );\n\t\t\t}\n\t\t}\n\n\t\t// 2. Replace the last space with nbsp if there are two spaces at the end or if the next node starts with space or there is no\n\t\t// next node (container element boundary).\n\t\t//\n\t\t// Keep in mind that Firefox prefers $nbsp; before tag, not inside it:\n\t\t//\n\t\t// Foo <span>&nbsp;bar</span>  <-- bad.\n\t\t// Foo&nbsp;<span> bar</span>  <-- good.\n\t\t//\n\t\t// More here: https://github.com/ckeditor/ckeditor5-engine/issues/1747.\n\t\tif ( data.charAt( data.length - 1 ) == ' ' ) {\n\t\t\tconst nextNode = this._getTouchingViewTextNode( node, true );\n\n\t\t\tif ( data.charAt( data.length - 2 ) == ' ' || !nextNode || nextNode.data.charAt( 0 ) == ' ' ) {\n\t\t\t\tdata = data.substr( 0, data.length - 1 ) + '\\u00A0';\n\t\t\t}\n\t\t}\n\n\t\t// 3. Create space+nbsp pairs.\n\t\treturn data.replace( / {2}/g, ' \\u00A0' );\n\t}\n\n\t/**\n\t * Checks whether given node ends with a space character after changing appropriate space characters to `&nbsp;`s.\n\t *\n\t * @private\n\t * @param {module:engine/view/text~Text} node Node to check.\n\t * @returns {Boolean} `true` if given `node` ends with space, `false` otherwise.\n\t */\n\t_nodeEndsWithSpace( node ) {\n\t\tif ( node.getAncestors().some( parent => this.preElements.includes( parent.name ) ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst data = this._processDataFromViewText( node );\n\n\t\treturn data.charAt( data.length - 1 ) == ' ';\n\t}\n\n\t/**\n\t * Takes text data from native `Text` node and processes it to a correct {@link module:engine/view/text~Text view text node} data.\n\t *\n\t * Following changes are done:\n\t *\n\t * * multiple whitespaces are replaced to a single space,\n\t * * space at the beginning of a text node is removed if it is the first text node in its container\n\t * element or if the previous text node ends with a space character,\n\t * * space at the end of the text node is removed if there are two spaces at the end of a node or if next node\n\t * starts with a space or if it is the last text node in its container\n\t * * nbsps are converted to spaces.\n\t *\n\t * @param {Node} node DOM text node to process.\n\t * @returns {String} Processed data.\n\t * @private\n\t */\n\t_processDataFromDomText( node ) {\n\t\tlet data = node.data;\n\n\t\tif ( _hasDomParentOfType( node, this.preElements ) ) {\n\t\t\treturn getDataWithoutFiller( node );\n\t\t}\n\n\t\t// Change all consecutive whitespace characters (from the [ \\n\\t\\r] set –\n\t\t// see https://github.com/ckeditor/ckeditor5-engine/issues/822#issuecomment-311670249) to a single space character.\n\t\t// That's how multiple whitespaces are treated when rendered, so we normalize those whitespaces.\n\t\t// We're replacing 1+ (and not 2+) to also normalize singular \\n\\t\\r characters (#822).\n\t\tdata = data.replace( /[ \\n\\t\\r]{1,}/g, ' ' );\n\n\t\tconst prevNode = this._getTouchingInlineDomNode( node, false );\n\t\tconst nextNode = this._getTouchingInlineDomNode( node, true );\n\n\t\tconst shouldLeftTrim = this._checkShouldLeftTrimDomText( prevNode );\n\t\tconst shouldRightTrim = this._checkShouldRightTrimDomText( node, nextNode );\n\n\t\t// If the previous dom text node does not exist or it ends by whitespace character, remove space character from the beginning\n\t\t// of this text node. Such space character is treated as a whitespace.\n\t\tif ( shouldLeftTrim ) {\n\t\t\tdata = data.replace( /^ /, '' );\n\t\t}\n\n\t\t// If the next text node does not exist remove space character from the end of this text node.\n\t\tif ( shouldRightTrim ) {\n\t\t\tdata = data.replace( / $/, '' );\n\t\t}\n\n\t\t// At the beginning and end of a block element, Firefox inserts normal space + <br> instead of non-breaking space.\n\t\t// This means that the text node starts/end with normal space instead of non-breaking space.\n\t\t// This causes a problem because the normal space would be removed in `.replace` calls above. To prevent that,\n\t\t// the inline filler is removed only after the data is initially processed (by the `.replace` above). See ckeditor5#692.\n\t\tdata = getDataWithoutFiller( new Text( data ) );\n\n\t\t// At this point we should have removed all whitespaces from DOM text data.\n\t\t//\n\t\t// Now, We will reverse the process that happens in `_processDataFromViewText`.\n\t\t//\n\t\t// We have to change &nbsp; chars, that were in DOM text data because of rendering reasons, to spaces.\n\t\t// First, change all ` \\u00A0` pairs (space + &nbsp;) to two spaces. DOM converter changes two spaces from model/view to\n\t\t// ` \\u00A0` to ensure proper rendering. Since here we convert back, we recognize those pairs and change them back to `  `.\n\t\tdata = data.replace( / \\u00A0/g, '  ' );\n\n\t\t// Then, let's change the last nbsp to a space.\n\t\tif ( /( |\\u00A0)\\u00A0$/.test( data ) || !nextNode || ( nextNode.data && nextNode.data.charAt( 0 ) == ' ' ) ) {\n\t\t\tdata = data.replace( /\\u00A0$/, ' ' );\n\t\t}\n\n\t\t// Then, change &nbsp; character that is at the beginning of the text node to space character.\n\t\t// We do that replacement only if this is the first node or the previous node ends on whitespace character.\n\t\tif ( shouldLeftTrim ) {\n\t\t\tdata = data.replace( /^\\u00A0/, ' ' );\n\t\t}\n\n\t\t// At this point, all whitespaces should be removed and all &nbsp; created for rendering reasons should be\n\t\t// changed to normal space. All left &nbsp; are &nbsp; inserted intentionally.\n\t\treturn data;\n\t}\n\n\t/**\n\t * Helper function which checks if a DOM text node, preceded by the given `prevNode` should\n\t * be trimmed from the left side.\n\t *\n\t * @param {Node} prevNode\n\t */\n\t_checkShouldLeftTrimDomText( prevNode ) {\n\t\tif ( !prevNode ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( isElement( prevNode ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn /[^\\S\\u00A0]/.test( prevNode.data.charAt( prevNode.data.length - 1 ) );\n\t}\n\n\t/**\n\t * Helper function which checks if a DOM text node, succeeded by the given `nextNode` should\n\t * be trimmed from the right side.\n\t *\n\t * @param {Node} node\n\t * @param {Node} nextNode\n\t */\n\t_checkShouldRightTrimDomText( node, nextNode ) {\n\t\tif ( nextNode ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !startsWithFiller( node );\n\t}\n\n\t/**\n\t * Helper function. For given {@link module:engine/view/text~Text view text node}, it finds previous or next sibling\n\t * that is contained in the same container element. If there is no such sibling, `null` is returned.\n\t *\n\t * @param {module:engine/view/text~Text} node Reference node.\n\t * @param {Boolean} getNext\n\t * @returns {module:engine/view/text~Text|null} Touching text node or `null` if there is no next or previous touching text node.\n\t */\n\t_getTouchingViewTextNode( node, getNext ) {\n\t\tconst treeWalker = new ViewTreeWalker( {\n\t\t\tstartPosition: getNext ? ViewPosition._createAfter( node ) : ViewPosition._createBefore( node ),\n\t\t\tdirection: getNext ? 'forward' : 'backward'\n\t\t} );\n\n\t\tfor ( const value of treeWalker ) {\n\t\t\t// ViewContainerElement is found on a way to next ViewText node, so given `node` was first/last\n\t\t\t// text node in its container element.\n\t\t\tif ( value.item.is( 'containerElement' ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t// <br> found – it works like a block boundary, so do not scan further.\n\t\t\telse if ( value.item.is( 'br' ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t// Found a text node in the same container element.\n\t\t\telse if ( value.item.is( 'textProxy' ) ) {\n\t\t\t\treturn value.item;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Helper function. For the given text node, it finds the closest touching node which is either\n\t * a text node or a `<br>`. The search is terminated at block element boundaries and if a matching node\n\t * wasn't found so far, `null` is returned.\n\t *\n\t * In the following DOM structure:\n\t *\n\t *\t\t<p>foo<b>bar</b><br>bom</p>\n\t *\n\t * * `foo` doesn't have its previous touching inline node (`null` is returned),\n\t * * `foo`'s next touching inline node is `bar`\n\t * * `bar`'s next touching inline node is `<br>`\n\t *\n\t * This method returns text nodes and `<br>` elements because these types of nodes affect how\n\t * spaces in the given text node need to be converted.\n\t *\n\t * @private\n\t * @param {Text} node\n\t * @param {Boolean} getNext\n\t * @returns {Text|Element|null}\n\t */\n\t_getTouchingInlineDomNode( node, getNext ) {\n\t\tif ( !node.parentNode ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst direction = getNext ? 'nextNode' : 'previousNode';\n\t\tconst document = node.ownerDocument;\n\t\tconst topmostParent = getAncestors( node )[ 0 ];\n\n\t\tconst treeWalker = document.createTreeWalker( topmostParent, NodeFilter.SHOW_TEXT | NodeFilter.SHOW_ELEMENT, {\n\t\t\tacceptNode( node ) {\n\t\t\t\tif ( isText( node ) ) {\n\t\t\t\t\treturn NodeFilter.FILTER_ACCEPT;\n\t\t\t\t}\n\n\t\t\t\tif ( node.tagName == 'BR' ) {\n\t\t\t\t\treturn NodeFilter.FILTER_ACCEPT;\n\t\t\t\t}\n\n\t\t\t\treturn NodeFilter.FILTER_SKIP;\n\t\t\t}\n\t\t} );\n\n\t\ttreeWalker.currentNode = node;\n\n\t\tconst touchingNode = treeWalker[ direction ]();\n\n\t\tif ( touchingNode !== null ) {\n\t\t\tconst lca = getCommonAncestor( node, touchingNode );\n\n\t\t\t// If there is common ancestor between the text node and next/prev text node,\n\t\t\t// and there are no block elements on a way from the text node to that ancestor,\n\t\t\t// and there are no block elements on a way from next/prev text node to that ancestor...\n\t\t\tif (\n\t\t\t\tlca &&\n\t\t\t\t!_hasDomParentOfType( node, this.blockElements, lca ) &&\n\t\t\t\t!_hasDomParentOfType( touchingNode, this.blockElements, lca )\n\t\t\t) {\n\t\t\t\t// Then they are in the same container element.\n\t\t\t\treturn touchingNode;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\n// Helper function.\n// Used to check if given native `Element` or `Text` node has parent with tag name from `types` array.\n//\n// @param {Node} node\n// @param {Array.<String>} types\n// @param {Boolean} [boundaryParent] Can be given if parents should be checked up to a given element (excluding that element).\n// @returns {Boolean} `true` if such parent exists or `false` if it does not.\nfunction _hasDomParentOfType( node, types, boundaryParent ) {\n\tlet parents = getAncestors( node );\n\n\tif ( boundaryParent ) {\n\t\tparents = parents.slice( parents.indexOf( boundaryParent ) + 1 );\n\t}\n\n\treturn parents.some( parent => parent.tagName && types.includes( parent.tagName.toLowerCase() ) );\n}\n\n// A helper that executes given callback for each DOM node's ancestor, starting from the given node\n// and ending in document#documentElement.\n//\n// @param {Node} node\n// @param {Function} callback A callback to be executed for each ancestor.\nfunction forEachDomNodeAncestor( node, callback ) {\n\twhile ( node && node != global.document ) {\n\t\tcallback( node );\n\t\tnode = node.parentNode;\n\t}\n}\n\n// Checks if given node is a nbsp block filler.\n//\n// A &nbsp; is a block filler only if it is a single child of a block element.\n//\n// @param {Node} domNode DOM node.\n// @returns {Boolean}\nfunction isNbspBlockFiller( domNode, blockElements ) {\n\tconst isNBSP = isText( domNode ) && domNode.data == '\\u00A0';\n\n\treturn isNBSP && hasBlockParent( domNode, blockElements ) && domNode.parentNode.childNodes.length === 1;\n}\n\n// Checks if domNode has block parent.\n//\n// @param {Node} domNode DOM node.\n// @returns {Boolean}\nfunction hasBlockParent( domNode, blockElements ) {\n\tconst parent = domNode.parentNode;\n\n\treturn parent && parent.tagName && blockElements.includes( parent.tagName.toLowerCase() );\n}\n\n/**\n * Enum representing type of the block filler.\n *\n * Possible values:\n *\n * * `br` - for `<br>` block filler used in editing view,\n * * `nbsp` - for `&nbsp;` block fillers used in the data.\n *\n * @typedef {String} module:engine/view/filler~BlockFillerMode\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/getcommonancestor\n */\n\nimport getAncestors from './getancestors';\n\n/**\n * Searches and returns the lowest common ancestor of two given nodes.\n *\n * @param {Node} nodeA First node.\n * @param {Node} nodeB Second node.\n * @returns {Node|DocumentFragment|Document|null} Lowest common ancestor of both nodes or `null` if nodes do not have a common ancestor.\n */\nexport default function getCommonAncestor( nodeA, nodeB ) {\n\tconst ancestorsA = getAncestors( nodeA );\n\tconst ancestorsB = getAncestors( nodeB );\n\n\tlet i = 0;\n\n\t// It does not matter which array is shorter.\n\twhile ( ancestorsA[ i ] == ancestorsB[ i ] && ancestorsA[ i ] ) {\n\t\ti++;\n\t}\n\n\treturn i === 0 ? null : ancestorsA[ i - 1 ];\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/iswindow\n */\n\n/**\n * Checks if the object is a native DOM Window.\n *\n * @param {*} obj\n * @returns {Boolean}\n */\nexport default function isWindow( obj ) {\n\tconst stringifiedObject = Object.prototype.toString.apply( obj );\n\n\t// Returns `true` for the `window` object in browser environments.\n\tif ( stringifiedObject == '[object Window]' ) {\n\t\treturn true;\n\t}\n\n\t// Returns `true` for the `window` object in the Electron environment.\n\tif ( stringifiedObject == '[object global]' ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/emittermixin\n */\n\nimport { default as EmitterMixin, _getEmitterListenedTo, _setEmitterId } from '../emittermixin';\nimport uid from '../uid';\nimport isNode from './isnode';\nimport isWindow from './iswindow';\nimport { extend } from 'lodash-es';\n\n/**\n * Mixin that injects the DOM events API into its host. It provides the API\n * compatible with {@link module:utils/emittermixin~EmitterMixin}.\n *\n * DOM emitter mixin is by default available in the {@link module:ui/view~View} class,\n * but it can also be mixed into any other class:\n *\n *\t\timport mix from '../utils/mix.js';\n *\t\timport DomEmitterMixin from '../utils/dom/emittermixin.js';\n *\n *\t\tclass SomeView {}\n *\t\tmix( SomeView, DomEmitterMixin );\n *\n *\t\tconst view = new SomeView();\n *\t\tview.listenTo( domElement, ( evt, domEvt ) => {\n *\t\t\tconsole.log( evt, domEvt );\n *\t\t} );\n *\n * @mixin EmitterMixin\n * @mixes module:utils/emittermixin~EmitterMixin\n * @implements module:utils/dom/emittermixin~Emitter\n */\nconst DomEmitterMixin = extend( {}, EmitterMixin, {\n\t/**\n\t * Registers a callback function to be executed when an event is fired in a specific Emitter or DOM Node.\n\t * It is backwards compatible with {@link module:utils/emittermixin~EmitterMixin#listenTo}.\n\t *\n\t * @param {module:utils/emittermixin~Emitter|Node} emitter The object that fires the event.\n\t * @param {String} event The name of the event.\n\t * @param {Function} callback The function to be called on event.\n\t * @param {Object} [options={}] Additional options.\n\t * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n\t * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n\t * order they were added.\n\t * @param {Boolean} [options.useCapture=false] Indicates that events of this type will be dispatched to the registered\n\t * listener before being dispatched to any EventTarget beneath it in the DOM tree.\n\t */\n\tlistenTo( emitter, ...rest ) {\n\t\t// Check if emitter is an instance of DOM Node. If so, replace the argument with\n\t\t// corresponding ProxyEmitter (or create one if not existing).\n\t\tif ( isNode( emitter ) || isWindow( emitter ) ) {\n\t\t\tconst proxy = this._getProxyEmitter( emitter ) || new ProxyEmitter( emitter );\n\n\t\t\tproxy.attach( ...rest );\n\n\t\t\temitter = proxy;\n\t\t}\n\n\t\t// Execute parent class method with Emitter (or ProxyEmitter) instance.\n\t\tEmitterMixin.listenTo.call( this, emitter, ...rest );\n\t},\n\n\t/**\n\t * Stops listening for events. It can be used at different levels:\n\t * It is backwards compatible with {@link module:utils/emittermixin~EmitterMixin#listenTo}.\n\t *\n\t * * To stop listening to a specific callback.\n\t * * To stop listening to a specific event.\n\t * * To stop listening to all events fired by a specific object.\n\t * * To stop listening to all events fired by all object.\n\t *\n\t * @param {module:utils/emittermixin~Emitter|Node} [emitter] The object to stop listening to. If omitted, stops it for all objects.\n\t * @param {String} [event] (Requires the `emitter`) The name of the event to stop listening to. If omitted, stops it\n\t * for all events from `emitter`.\n\t * @param {Function} [callback] (Requires the `event`) The function to be removed from the call list for the given\n\t * `event`.\n\t */\n\tstopListening( emitter, event, callback ) {\n\t\t// Check if emitter is an instance of DOM Node. If so, replace the argument with corresponding ProxyEmitter.\n\t\tif ( isNode( emitter ) || isWindow( emitter ) ) {\n\t\t\tconst proxy = this._getProxyEmitter( emitter );\n\n\t\t\t// Element has no listeners.\n\t\t\tif ( !proxy ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\temitter = proxy;\n\t\t}\n\n\t\t// Execute parent class method with Emitter (or ProxyEmitter) instance.\n\t\tEmitterMixin.stopListening.call( this, emitter, event, callback );\n\n\t\tif ( emitter instanceof ProxyEmitter ) {\n\t\t\temitter.detach( event );\n\t\t}\n\t},\n\n\t/**\n\t * Retrieves ProxyEmitter instance for given DOM Node residing in this Host.\n\t *\n\t * @private\n\t * @param {Node} node DOM Node of the ProxyEmitter.\n\t * @returns {module:utils/dom/emittermixin~ProxyEmitter} ProxyEmitter instance or null.\n\t */\n\t_getProxyEmitter( node ) {\n\t\treturn _getEmitterListenedTo( this, getNodeUID( node ) );\n\t}\n} );\n\nexport default DomEmitterMixin;\n\n/**\n * Creates a ProxyEmitter instance. Such an instance is a bridge between a DOM Node firing events\n * and any Host listening to them. It is backwards compatible with {@link module:utils/emittermixin~EmitterMixin#on}.\n *\n *                                  listenTo( click, ... )\n *                    +-----------------------------------------+\n *                    |              stopListening( ... )       |\n *     +----------------------------+                           |             addEventListener( click, ... )\n *     | Host                       |                           |   +---------------------------------------------+\n *     +----------------------------+                           |   |       removeEventListener( click, ... )     |\n *     | _listeningTo: {            |                +----------v-------------+                                   |\n *     |   UID: {                   |                | ProxyEmitter           |                                   |\n *     |     emitter: ProxyEmitter, |                +------------------------+                      +------------v----------+\n *     |     callbacks: {           |                | events: {              |                      | Node (HTMLElement)    |\n *     |       click: [ callbacks ] |                |   click: [ callbacks ] |                      +-----------------------+\n *     |     }                      |                | },                     |                      | data-ck-expando: UID  |\n *     |   }                        |                | _domNode: Node,        |                      +-----------------------+\n *     | }                          |                | _domListeners: {},     |                                   |\n *     | +------------------------+ |                | _emitterId: UID        |                                   |\n *     | | DomEmitterMixin        | |                +--------------^---------+                                   |\n *     | +------------------------+ |                           |   |                                             |\n *     +--------------^-------------+                           |   +---------------------------------------------+\n *                    |                                         |                  click (DOM Event)\n *                    +-----------------------------------------+\n *                                fire( click, DOM Event )\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n * @implements module:utils/dom/emittermixin~Emitter\n * @private\n */\nclass ProxyEmitter {\n\t/**\n\t * @param {Node} node DOM Node that fires events.\n\t * @returns {Object} ProxyEmitter instance bound to the DOM Node.\n\t */\n\tconstructor( node ) {\n\t\t// Set emitter ID to match DOM Node \"expando\" property.\n\t\t_setEmitterId( this, getNodeUID( node ) );\n\n\t\t// Remember the DOM Node this ProxyEmitter is bound to.\n\t\tthis._domNode = node;\n\t}\n}\n\nextend( ProxyEmitter.prototype, EmitterMixin, {\n\t/**\n\t * Collection of native DOM listeners.\n\t *\n\t * @private\n\t * @member {Object} module:utils/dom/emittermixin~ProxyEmitter#_domListeners\n\t */\n\n\t/**\n\t * Registers a callback function to be executed when an event is fired.\n\t *\n\t * It attaches a native DOM listener to the DOM Node. When fired,\n\t * a corresponding Emitter event will also fire with DOM Event object as an argument.\n\t *\n\t * @method module:utils/dom/emittermixin~ProxyEmitter#attach\n\t * @param {String} event The name of the event.\n\t * @param {Function} callback The function to be called on event.\n\t * @param {Object} [options={}] Additional options.\n\t * @param {Boolean} [options.useCapture=false] Indicates that events of this type will be dispatched to the registered\n\t * listener before being dispatched to any EventTarget beneath it in the DOM tree.\n\t */\n\tattach( event, callback, options = {} ) {\n\t\t// If the DOM Listener for given event already exist it is pointless\n\t\t// to attach another one.\n\t\tif ( this._domListeners && this._domListeners[ event ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst domListener = this._createDomListener( event, !!options.useCapture );\n\n\t\t// Attach the native DOM listener to DOM Node.\n\t\tthis._domNode.addEventListener( event, domListener, !!options.useCapture );\n\n\t\tif ( !this._domListeners ) {\n\t\t\tthis._domListeners = {};\n\t\t}\n\n\t\t// Store the native DOM listener in this ProxyEmitter. It will be helpful\n\t\t// when stopping listening to the event.\n\t\tthis._domListeners[ event ] = domListener;\n\t},\n\n\t/**\n\t * Stops executing the callback on the given event.\n\t *\n\t * @method module:utils/dom/emittermixin~ProxyEmitter#detach\n\t * @param {String} event The name of the event.\n\t */\n\tdetach( event ) {\n\t\tlet events;\n\n\t\t// Remove native DOM listeners which are orphans. If no callbacks\n\t\t// are awaiting given event, detach native DOM listener from DOM Node.\n\t\t// See: {@link attach}.\n\n\t\tif ( this._domListeners[ event ] && ( !( events = this._events[ event ] ) || !events.callbacks.length ) ) {\n\t\t\tthis._domListeners[ event ].removeListener();\n\t\t}\n\t},\n\n\t/**\n\t * Creates a native DOM listener callback. When the native DOM event\n\t * is fired it will fire corresponding event on this ProxyEmitter.\n\t * Note: A native DOM Event is passed as an argument.\n\t *\n\t * @private\n\t * @method module:utils/dom/emittermixin~ProxyEmitter#_createDomListener\n\t * @param {String} event The name of the event.\n\t * @param {Boolean} useCapture Indicates whether the listener was created for capturing event.\n\t * @returns {Function} The DOM listener callback.\n\t */\n\t_createDomListener( event, useCapture ) {\n\t\tconst domListener = domEvt => {\n\t\t\tthis.fire( event, domEvt );\n\t\t};\n\n\t\t// Supply the DOM listener callback with a function that will help\n\t\t// detach it from the DOM Node, when it is no longer necessary.\n\t\t// See: {@link detach}.\n\t\tdomListener.removeListener = () => {\n\t\t\tthis._domNode.removeEventListener( event, domListener, useCapture );\n\t\t\tdelete this._domListeners[ event ];\n\t\t};\n\n\t\treturn domListener;\n\t}\n} );\n\n// Gets an unique DOM Node identifier. The identifier will be set if not defined.\n//\n// @private\n// @param {Node} node\n// @returns {String} UID for given DOM Node.\nfunction getNodeUID( node ) {\n\treturn node[ 'data-ck-expando' ] || ( node[ 'data-ck-expando' ] = uid() );\n}\n\n/**\n * Interface representing classes which mix in {@link module:utils/dom/emittermixin~EmitterMixin}.\n *\n * @interface Emitter\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/observer\n */\n\nimport DomEmitterMixin from '@ckeditor/ckeditor5-utils/src/dom/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * Abstract base observer class. Observers are classes which listen to DOM events, do the preliminary\n * processing and fire events on the {@link module:engine/view/document~Document} objects.\n * Observers can also add features to the view, for instance by updating its status or marking elements\n * which need refresh on DOM events.\n *\n * @abstract\n */\nexport default class Observer {\n\t/**\n\t * Creates an instance of the observer.\n\t *\n\t * @param {module:engine/view/view~View} view\n\t */\n\tconstructor( view ) {\n\t\t/**\n\t\t * Instance of the view controller.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/view~View}\n\t\t */\n\t\tthis.view = view;\n\n\t\t/**\n\t\t * Reference to the {@link module:engine/view/document~Document} object.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/document~Document}\n\t\t */\n\t\tthis.document = view.document;\n\n\t\t/**\n\t\t * State of the observer. If it is disabled events will not be fired.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis.isEnabled = false;\n\t}\n\n\t/**\n\t * Enables the observer. This method is called when the observer is registered to the\n\t * {@link module:engine/view/view~View} and after {@link module:engine/view/view~View#forceRender rendering}\n\t * (all observers are {@link #disable disabled} before rendering).\n\t *\n\t * A typical use case for disabling observers is that mutation observers need to be disabled for the rendering.\n\t * However, a child class may not need to be disabled, so it can implement an empty method.\n\t *\n\t * @see module:engine/view/observer/observer~Observer#disable\n\t */\n\tenable() {\n\t\tthis.isEnabled = true;\n\t}\n\n\t/**\n\t * Disables the observer. This method is called before\n\t * {@link module:engine/view/view~View#forceRender rendering} to prevent firing events during rendering.\n\t *\n\t * @see module:engine/view/observer/observer~Observer#enable\n\t */\n\tdisable() {\n\t\tthis.isEnabled = false;\n\t}\n\n\t/**\n\t * Disables and destroys the observer, among others removes event listeners created by the observer.\n\t */\n\tdestroy() {\n\t\tthis.disable();\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Starts observing the given root element.\n\t *\n\t * @method #observe\n\t * @param {HTMLElement} domElement\n\t * @param {String} name The name of the root element.\n\t */\n}\n\nmix( Observer, DomEmitterMixin );\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nexport default setCacheAdd;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nexport default setCacheHas;\n","import MapCache from './_MapCache.js';\nimport setCacheAdd from './_setCacheAdd.js';\nimport setCacheHas from './_setCacheHas.js';\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nexport default SetCache;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default arraySome;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nexport default cacheHas;\n","import SetCache from './_SetCache.js';\nimport arraySome from './_arraySome.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalArrays;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nexport default mapToArray;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nexport default setToArray;\n","import Symbol from './_Symbol.js';\nimport Uint8Array from './_Uint8Array.js';\nimport eq from './eq.js';\nimport equalArrays from './_equalArrays.js';\nimport mapToArray from './_mapToArray.js';\nimport setToArray from './_setToArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nexport default equalByTag;\n","import getAllKeys from './_getAllKeys.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalObjects;\n","import Stack from './_Stack.js';\nimport equalArrays from './_equalArrays.js';\nimport equalByTag from './_equalByTag.js';\nimport equalObjects from './_equalObjects.js';\nimport getTag from './_getTag.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nexport default baseIsEqualDeep;\n","import baseIsEqualDeep from './_baseIsEqualDeep.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nexport default baseIsEqual;\n","import baseIsEqual from './_baseIsEqual.js';\n\n/**\n * This method is like `_.isEqual` except that it accepts `customizer` which\n * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n * are handled by the method instead. The `customizer` is invoked with up to\n * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * function isGreeting(value) {\n *   return /^h(?:i|ello)$/.test(value);\n * }\n *\n * function customizer(objValue, othValue) {\n *   if (isGreeting(objValue) && isGreeting(othValue)) {\n *     return true;\n *   }\n * }\n *\n * var array = ['hello', 'goodbye'];\n * var other = ['hi', 'goodbye'];\n *\n * _.isEqualWith(array, other, customizer);\n * // => true\n */\nfunction isEqualWith(value, other, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  var result = customizer ? customizer(value, other) : undefined;\n  return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n}\n\nexport default isEqualWith;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/mutationobserver\n */\n\n/* globals window */\n\nimport Observer from './observer';\nimport ViewSelection from '../selection';\nimport { startsWithFiller, getDataWithoutFiller } from '../filler';\nimport { isEqualWith } from 'lodash-es';\n\n/**\n * Mutation observer class observes changes in the DOM, fires {@link module:engine/view/document~Document#event:mutations} event, mark view\n * elements as changed and call {@link module:engine/view/renderer~Renderer#render}.\n * Because all mutated nodes are marked as \"to be rendered\" and the\n * {@link module:engine/view/renderer~Renderer#render} is called, all changes will be reverted, unless the mutation will be handled by the\n * {@link module:engine/view/document~Document#event:mutations} event listener. It means user will see only handled changes, and the editor\n * will block all changes which are not handled.\n *\n * Mutation Observer also take care of reducing number of mutations which are fired. It removes duplicates and\n * mutations on elements which do not have corresponding view elements. Also\n * {@link module:engine/view/observer/mutationobserver~MutatedText text mutation} is fired only if parent element do not change child list.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class MutationObserver extends Observer {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\t/**\n\t\t * Native mutation observer config.\n\t\t *\n\t\t * @private\n\t\t * @member {Object}\n\t\t */\n\t\tthis._config = {\n\t\t\tchildList: true,\n\t\t\tcharacterData: true,\n\t\t\tcharacterDataOldValue: true,\n\t\t\tsubtree: true\n\t\t};\n\n\t\t/**\n\t\t * Reference to the {@link module:engine/view/view~View#domConverter}.\n\t\t *\n\t\t * @member {module:engine/view/domconverter~DomConverter}\n\t\t */\n\t\tthis.domConverter = view.domConverter;\n\n\t\t/**\n\t\t * Reference to the {@link module:engine/view/view~View#_renderer}.\n\t\t *\n\t\t * @member {module:engine/view/renderer~Renderer}\n\t\t */\n\t\tthis.renderer = view._renderer;\n\n\t\t/**\n\t\t * Observed DOM elements.\n\t\t *\n\t\t * @private\n\t\t * @member {Array.<HTMLElement>}\n\t\t */\n\t\tthis._domElements = [];\n\n\t\t/**\n\t\t * Native mutation observer.\n\t\t *\n\t\t * @private\n\t\t * @member {MutationObserver}\n\t\t */\n\t\tthis._mutationObserver = new window.MutationObserver( this._onMutations.bind( this ) );\n\t}\n\n\t/**\n\t * Synchronously fires {@link module:engine/view/document~Document#event:mutations} event with all mutations in record queue.\n\t * At the same time empties the queue so mutations will not be fired twice.\n\t */\n\tflush() {\n\t\tthis._onMutations( this._mutationObserver.takeRecords() );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tobserve( domElement ) {\n\t\tthis._domElements.push( domElement );\n\n\t\tif ( this.isEnabled ) {\n\t\t\tthis._mutationObserver.observe( domElement, this._config );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tenable() {\n\t\tsuper.enable();\n\n\t\tfor ( const domElement of this._domElements ) {\n\t\t\tthis._mutationObserver.observe( domElement, this._config );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdisable() {\n\t\tsuper.disable();\n\n\t\tthis._mutationObserver.disconnect();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\tthis._mutationObserver.disconnect();\n\t}\n\n\t/**\n\t * Handles mutations. Deduplicates, mark view elements to sync, fire event and call render.\n\t *\n\t * @private\n\t * @param {Array.<Object>} domMutations Array of native mutations.\n\t */\n\t_onMutations( domMutations ) {\n\t\t// As a result of this.flush() we can have an empty collection.\n\t\tif ( domMutations.length === 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst domConverter = this.domConverter;\n\n\t\t// Use map and set for deduplication.\n\t\tconst mutatedTexts = new Map();\n\t\tconst mutatedElements = new Set();\n\n\t\t// Handle `childList` mutations first, so we will be able to check if the `characterData` mutation is in the\n\t\t// element with changed structure anyway.\n\t\tfor ( const mutation of domMutations ) {\n\t\t\tif ( mutation.type === 'childList' ) {\n\t\t\t\tconst element = domConverter.mapDomToView( mutation.target );\n\n\t\t\t\t// Do not collect mutations from UIElements.\n\t\t\t\tif ( element && element.is( 'uiElement' ) ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif ( element && !this._isBogusBrMutation( mutation ) ) {\n\t\t\t\t\tmutatedElements.add( element );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Handle `characterData` mutations later, when we have the full list of nodes which changed structure.\n\t\tfor ( const mutation of domMutations ) {\n\t\t\tconst element = domConverter.mapDomToView( mutation.target );\n\n\t\t\t// Do not collect mutations from UIElements.\n\t\t\tif ( element && element.is( 'uiElement' ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( mutation.type === 'characterData' ) {\n\t\t\t\tconst text = domConverter.findCorrespondingViewText( mutation.target );\n\n\t\t\t\tif ( text && !mutatedElements.has( text.parent ) ) {\n\t\t\t\t\t// Use text as a key, for deduplication. If there will be another mutation on the same text element\n\t\t\t\t\t// we will have only one in the map.\n\t\t\t\t\tmutatedTexts.set( text, {\n\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\toldText: text.data,\n\t\t\t\t\t\tnewText: getDataWithoutFiller( mutation.target ),\n\t\t\t\t\t\tnode: text\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\t// When we added first letter to the text node which had only inline filler, for the DOM it is mutation\n\t\t\t\t// on text, but for the view, where filler text node did not existed, new text node was created, so we\n\t\t\t\t// need to fire 'children' mutation instead of 'text'.\n\t\t\t\telse if ( !text && startsWithFiller( mutation.target ) ) {\n\t\t\t\t\tmutatedElements.add( domConverter.mapDomToView( mutation.target.parentNode ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Now we build the list of mutations to fire and mark elements. We did not do it earlier to avoid marking the\n\t\t// same node multiple times in case of duplication.\n\n\t\t// List of mutations we will fire.\n\t\tconst viewMutations = [];\n\n\t\tfor ( const mutatedText of mutatedTexts.values() ) {\n\t\t\tthis.renderer.markToSync( 'text', mutatedText.node );\n\t\t\tviewMutations.push( mutatedText );\n\t\t}\n\n\t\tfor ( const viewElement of mutatedElements ) {\n\t\t\tconst domElement = domConverter.mapViewToDom( viewElement );\n\t\t\tconst viewChildren = Array.from( viewElement.getChildren() );\n\t\t\tconst newViewChildren = Array.from( domConverter.domChildrenToView( domElement, { withChildren: false } ) );\n\n\t\t\t// It may happen that as a result of many changes (sth was inserted and then removed),\n\t\t\t// both elements haven't really changed. #1031\n\t\t\tif ( !isEqualWith( viewChildren, newViewChildren, sameNodes ) ) {\n\t\t\t\tthis.renderer.markToSync( 'children', viewElement );\n\n\t\t\t\tviewMutations.push( {\n\t\t\t\t\ttype: 'children',\n\t\t\t\t\toldChildren: viewChildren,\n\t\t\t\t\tnewChildren: newViewChildren,\n\t\t\t\t\tnode: viewElement\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\t// Retrieve `domSelection` using `ownerDocument` of one of mutated nodes.\n\t\t// There should not be simultaneous mutation in multiple documents, so it's fine.\n\t\tconst domSelection = domMutations[ 0 ].target.ownerDocument.getSelection();\n\n\t\tlet viewSelection = null;\n\n\t\tif ( domSelection && domSelection.anchorNode ) {\n\t\t\t// If `domSelection` is inside a dom node that is already bound to a view node from view tree, get\n\t\t\t// corresponding selection in the view and pass it together with `viewMutations`. The `viewSelection` may\n\t\t\t// be used by features handling mutations.\n\t\t\t// Only one range is supported.\n\n\t\t\tconst viewSelectionAnchor = domConverter.domPositionToView( domSelection.anchorNode, domSelection.anchorOffset );\n\t\t\tconst viewSelectionFocus = domConverter.domPositionToView( domSelection.focusNode, domSelection.focusOffset );\n\n\t\t\t// Anchor and focus has to be properly mapped to view.\n\t\t\tif ( viewSelectionAnchor && viewSelectionFocus ) {\n\t\t\t\tviewSelection = new ViewSelection( viewSelectionAnchor );\n\t\t\t\tviewSelection.setFocus( viewSelectionFocus );\n\t\t\t}\n\t\t}\n\n\t\t// In case only non-relevant mutations were recorded it skips the event and force render (#5600).\n\t\tif ( viewMutations.length ) {\n\t\t\tthis.document.fire( 'mutations', viewMutations, viewSelection );\n\n\t\t\t// If nothing changes on `mutations` event, at this point we have \"dirty DOM\" (changed) and de-synched\n\t\t\t// view (which has not been changed). In order to \"reset DOM\" we render the view again.\n\t\t\tthis.view.forceRender();\n\t\t}\n\n\t\tfunction sameNodes( child1, child2 ) {\n\t\t\t// First level of comparison (array of children vs array of children) – use the Lodash's default behavior.\n\t\t\tif ( Array.isArray( child1 ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Elements.\n\t\t\tif ( child1 === child2 ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t// Texts.\n\t\t\telse if ( child1.is( 'text' ) && child2.is( 'text' ) ) {\n\t\t\t\treturn child1.data === child2.data;\n\t\t\t}\n\n\t\t\t// Not matching types.\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Checks if mutation was generated by the browser inserting bogus br on the end of the block element.\n\t * Such mutations are generated while pressing space or performing native spellchecker correction\n\t * on the end of the block element in Firefox browser.\n\t *\n\t * @private\n\t * @param {Object} mutation Native mutation object.\n\t * @returns {Boolean}\n\t */\n\t_isBogusBrMutation( mutation ) {\n\t\tlet addedNode = null;\n\n\t\t// Check if mutation added only one node on the end of its parent.\n\t\tif ( mutation.nextSibling === null && mutation.removedNodes.length === 0 && mutation.addedNodes.length == 1 ) {\n\t\t\taddedNode = this.domConverter.domToView( mutation.addedNodes[ 0 ], {\n\t\t\t\twithChildren: false\n\t\t\t} );\n\t\t}\n\n\t\treturn addedNode && addedNode.is( 'element', 'br' );\n\t}\n}\n\n/**\n * Fired when mutation occurred. If tree view is not changed on this event, DOM will be reverted to the state before\n * mutation, so all changes which should be applied, should be handled on this event.\n *\n * Introduced by {@link module:engine/view/observer/mutationobserver~MutationObserver}.\n *\n * Note that because {@link module:engine/view/observer/mutationobserver~MutationObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/mutationobserver~MutationObserver\n * @event module:engine/view/document~Document#event:mutations\n * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|module:engine/view/observer/mutationobserver~MutatedChildren>}\n * viewMutations Array of mutations.\n * For mutated texts it will be {@link module:engine/view/observer/mutationobserver~MutatedText} and for mutated elements it will be\n * {@link module:engine/view/observer/mutationobserver~MutatedChildren}. You can recognize the type based on the `type` property.\n * @param {module:engine/view/selection~Selection|null} viewSelection View selection that is a result of converting DOM selection to view.\n * Keep in\n * mind that the DOM selection is already \"updated\", meaning that it already acknowledges changes done in mutation.\n */\n\n/**\n * Mutation item for text.\n *\n * @see module:engine/view/document~Document#event:mutations\n * @see module:engine/view/observer/mutationobserver~MutatedChildren\n *\n * @typedef {Object} module:engine/view/observer/mutationobserver~MutatedText\n *\n * @property {String} type For text mutations it is always 'text'.\n * @property {module:engine/view/text~Text} node Mutated text node.\n * @property {String} oldText Old text.\n * @property {String} newText New text.\n */\n\n/**\n * Mutation item for child nodes.\n *\n * @see module:engine/view/document~Document#event:mutations\n * @see module:engine/view/observer/mutationobserver~MutatedText\n *\n * @typedef {Object} module:engine/view/observer/mutationobserver~MutatedChildren\n *\n * @property {String} type For child nodes mutations it is always 'children'.\n * @property {module:engine/view/element~Element} node Parent of the mutated children.\n * @property {Array.<module:engine/view/node~Node>} oldChildren Old child nodes.\n * @property {Array.<module:engine/view/node~Node>} newChildren New child nodes.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/domeventdata\n */\n\nimport { extend } from 'lodash-es';\n\n/**\n * Information about a DOM event in context of the {@link module:engine/view/document~Document}.\n * It wraps the native event, which usually should not be used as the wrapper contains\n * additional data (like key code for keyboard events).\n */\nexport default class DomEventData {\n\t/**\n\t * @param {module:engine/view/view~View} view The instance of the view controller.\n\t * @param {Event} domEvent The DOM event.\n\t * @param {Object} [additionalData] Additional properties that the instance should contain.\n\t */\n\tconstructor( view, domEvent, additionalData ) {\n\t\t/**\n\t\t * Instance of the view controller.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/view~View} module:engine/view/observer/observer~Observer.DomEvent#view\n\t\t */\n\t\tthis.view = view;\n\n\t\t/**\n\t\t * The instance of the document.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/document~Document} module:engine/view/observer/observer~Observer.DomEvent#document\n\t\t */\n\t\tthis.document = view.document;\n\n\t\t/**\n\t\t * The DOM event.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Event} module:engine/view/observer/observer~Observer.DomEvent#domEvent\n\t\t */\n\t\tthis.domEvent = domEvent;\n\n\t\t/**\n\t\t * The DOM target.\n\t\t *\n\t\t * @readonly\n\t\t * @member {HTMLElement} module:engine/view/observer/observer~Observer.DomEvent#target\n\t\t */\n\t\tthis.domTarget = domEvent.target;\n\n\t\textend( this, additionalData );\n\t}\n\n\t/**\n\t * The tree view element representing the target.\n\t *\n\t * @readonly\n\t * @type module:engine/view/element~Element\n\t */\n\tget target() {\n\t\treturn this.view.domConverter.mapDomToView( this.domTarget );\n\t}\n\n\t/**\n\t * Prevents the native's event default action.\n\t */\n\tpreventDefault() {\n\t\tthis.domEvent.preventDefault();\n\t}\n\n\t/**\n\t * Stops native event propagation.\n\t */\n\tstopPropagation() {\n\t\tthis.domEvent.stopPropagation();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/domeventobserver\n */\n\nimport Observer from './observer';\nimport DomEventData from './domeventdata';\n\n/**\n * Base class for DOM event observers. This class handles\n * {@link module:engine/view/observer/observer~Observer#observe adding} listeners to DOM elements,\n * {@link module:engine/view/observer/observer~Observer#disable disabling} and\n * {@link module:engine/view/observer/observer~Observer#enable re-enabling} events.\n * Child class needs to define\n * {@link module:engine/view/observer/domeventobserver~DomEventObserver#domEventType DOM event type} and\n * {@link module:engine/view/observer/domeventobserver~DomEventObserver#onDomEvent callback}.\n *\n * For instance:\n *\n *\t\tclass ClickObserver extends DomEventObserver {\n *\t\t\t// It can also be defined as a normal property in the constructor.\n *\t\t\tget domEventType() {\n *\t\t\t\treturn 'click';\n *\t\t\t}\n *\n *\t\t\tonDomEvent( domEvent ) {\n *\t\t\t\tthis.fire( 'click', domEvent );\n *\t\t\t}\n *\t\t}\n *\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class DomEventObserver extends Observer {\n\t/**\n\t * Type of the DOM event the observer should listen on. Array of types can be defined\n\t * if the obsever should listen to multiple DOM events.\n\t *\n\t * @readonly\n\t * @member {String|Array.<String>} #domEventType\n\t */\n\n\t/**\n\t * Callback which should be called when the DOM event occurred. Note that the callback will not be called if\n\t * observer {@link #isEnabled is not enabled}.\n\t *\n\t * @see #domEventType\n\t * @abstract\n\t * @method #onDomEvent\n\t */\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\t/**\n\t\t * If set to `true` DOM events will be listened on the capturing phase.\n\t\t * Default value is `false`.\n\t\t *\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis.useCapture = false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tobserve( domElement ) {\n\t\tconst types = typeof this.domEventType == 'string' ? [ this.domEventType ] : this.domEventType;\n\n\t\ttypes.forEach( type => {\n\t\t\tthis.listenTo( domElement, type, ( eventInfo, domEvent ) => {\n\t\t\t\tif ( this.isEnabled ) {\n\t\t\t\t\tthis.onDomEvent( domEvent );\n\t\t\t\t}\n\t\t\t}, { useCapture: this.useCapture } );\n\t\t} );\n\t}\n\n\t/**\n\t * Calls `Document#fire()` if observer {@link #isEnabled is enabled}.\n\t *\n\t * @see module:utils/emittermixin~EmitterMixin#fire\n\t * @param {String} eventType The event type (name).\n\t * @param {Event} domEvent The DOM event.\n\t * @param {Object} [additionalData] The additional data which should extend the\n\t * {@link module:engine/view/observer/domeventdata~DomEventData event data} object.\n\t */\n\tfire( eventType, domEvent, additionalData ) {\n\t\tif ( this.isEnabled ) {\n\t\t\tthis.document.fire( eventType, new DomEventData( this.view, domEvent, additionalData ) );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/keyobserver\n */\n\nimport DomEventObserver from './domeventobserver';\nimport { getCode } from '@ckeditor/ckeditor5-utils/src/keyboard';\n\n/**\n * Observer for events connected with pressing keyboard keys.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nexport default class KeyObserver extends DomEventObserver {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\tthis.domEventType = [ 'keydown', 'keyup' ];\n\t}\n\n\tonDomEvent( domEvt ) {\n\t\tthis.fire( domEvt.type, domEvt, {\n\t\t\tkeyCode: domEvt.keyCode,\n\n\t\t\taltKey: domEvt.altKey,\n\t\t\tctrlKey: domEvt.ctrlKey || domEvt.metaKey,\n\t\t\tshiftKey: domEvt.shiftKey,\n\n\t\t\tget keystroke() {\n\t\t\t\treturn getCode( this );\n\t\t\t}\n\t\t} );\n\t}\n}\n\n/**\n * Fired when a key has been pressed.\n *\n * Introduced by {@link module:engine/view/observer/keyobserver~KeyObserver}.\n *\n * Note that because {@link module:engine/view/observer/keyobserver~KeyObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/keyobserver~KeyObserver\n * @event module:engine/view/document~Document#event:keydown\n * @param {module:engine/view/observer/keyobserver~KeyEventData} keyEventData\n */\n\n/**\n * Fired when a key has been released.\n *\n * Introduced by {@link module:engine/view/observer/keyobserver~KeyObserver}.\n *\n * Note that because {@link module:engine/view/observer/keyobserver~KeyObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/keyobserver~KeyObserver\n * @event module:engine/view/document~Document#event:keyup\n * @param {module:engine/view/observer/keyobserver~KeyEventData} keyEventData\n */\n\n/**\n * The value of both events - {@link module:engine/view/document~Document#event:keydown} and\n * {@link module:engine/view/document~Document#event:keyup}.\n *\n * @class module:engine/view/observer/keyobserver~KeyEventData\n * @extends module:engine/view/observer/domeventdata~DomEventData\n * @implements module:utils/keyboard~KeystrokeInfo\n */\n\n/**\n * Code of the whole keystroke. See {@link module:utils/keyboard~getCode}.\n *\n * @readonly\n * @member {Number} module:engine/view/observer/keyobserver~KeyEventData#keystroke\n */\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/fakeselectionobserver\n */\n\nimport Observer from './observer';\nimport ViewSelection from '../selection';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport { debounce } from 'lodash-es';\n\n/**\n * Fake selection observer class. If view selection is fake it is placed in dummy DOM container. This observer listens\n * on {@link module:engine/view/document~Document#event:keydown keydown} events and handles moving fake view selection to the correct place\n * if arrow keys are pressed.\n * Fires {@link module:engine/view/document~Document#event:selectionChange selectionChange event} simulating natural behaviour of\n * {@link module:engine/view/observer/selectionobserver~SelectionObserver SelectionObserver}.\n *\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class FakeSelectionObserver extends Observer {\n\t/**\n\t * Creates new FakeSelectionObserver instance.\n\t *\n\t * @param {module:engine/view/view~View} view\n\t */\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\t/**\n\t\t * Fires debounced event `selectionChangeDone`. It uses `lodash#debounce` method to delay function call.\n\t\t *\n\t\t * @private\n\t\t * @param {Object} data Selection change data.\n\t\t * @method #_fireSelectionChangeDoneDebounced\n\t\t */\n\t\tthis._fireSelectionChangeDoneDebounced = debounce( data => this.document.fire( 'selectionChangeDone', data ), 200 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tobserve() {\n\t\tconst document = this.document;\n\n\t\tdocument.on( 'keydown', ( eventInfo, data ) => {\n\t\t\tconst selection = document.selection;\n\n\t\t\tif ( selection.isFake && _isArrowKeyCode( data.keyCode ) && this.isEnabled ) {\n\t\t\t\t// Prevents default key down handling - no selection change will occur.\n\t\t\t\tdata.preventDefault();\n\n\t\t\t\tthis._handleSelectionMove( data.keyCode );\n\t\t\t}\n\t\t}, { priority: 'lowest' } );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\tthis._fireSelectionChangeDoneDebounced.cancel();\n\t}\n\n\t/**\n\t * Handles collapsing view selection according to given key code. If left or up key is provided - new selection will be\n\t * collapsed to left. If right or down key is pressed - new selection will be collapsed to right.\n\t *\n\t * This method fires {@link module:engine/view/document~Document#event:selectionChange} and\n\t * {@link module:engine/view/document~Document#event:selectionChangeDone} events imitating behaviour of\n\t * {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\n\t *\n\t * @private\n\t * @param {Number} keyCode\n\t * @fires module:engine/view/document~Document#event:selectionChange\n\t * @fires module:engine/view/document~Document#event:selectionChangeDone\n\t */\n\t_handleSelectionMove( keyCode ) {\n\t\tconst selection = this.document.selection;\n\t\tconst newSelection = new ViewSelection( selection.getRanges(), { backward: selection.isBackward, fake: false } );\n\n\t\t// Left or up arrow pressed - move selection to start.\n\t\tif ( keyCode == keyCodes.arrowleft || keyCode == keyCodes.arrowup ) {\n\t\t\tnewSelection.setTo( newSelection.getFirstPosition() );\n\t\t}\n\n\t\t// Right or down arrow pressed - move selection to end.\n\t\tif ( keyCode == keyCodes.arrowright || keyCode == keyCodes.arrowdown ) {\n\t\t\tnewSelection.setTo( newSelection.getLastPosition() );\n\t\t}\n\n\t\tconst data = {\n\t\t\toldSelection: selection,\n\t\t\tnewSelection,\n\t\t\tdomSelection: null\n\t\t};\n\n\t\t// Fire dummy selection change event.\n\t\tthis.document.fire( 'selectionChange', data );\n\n\t\t// Call` #_fireSelectionChangeDoneDebounced` every time when `selectionChange` event is fired.\n\t\t// This function is debounced what means that `selectionChangeDone` event will be fired only when\n\t\t// defined int the function time will elapse since the last time the function was called.\n\t\t// So `selectionChangeDone` will be fired when selection will stop changing.\n\t\tthis._fireSelectionChangeDoneDebounced( data );\n\t}\n}\n\n// Checks if one of the arrow keys is pressed.\n//\n// @private\n// @param {Number} keyCode\n// @returns {Boolean}\nfunction _isArrowKeyCode( keyCode ) {\n\treturn keyCode == keyCodes.arrowright ||\n\t\tkeyCode == keyCodes.arrowleft ||\n\t\tkeyCode == keyCodes.arrowup ||\n\t\tkeyCode == keyCodes.arrowdown;\n}\n\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/selectionobserver\n */\n\n/* global setInterval, clearInterval */\n\nimport Observer from './observer';\nimport MutationObserver from './mutationobserver';\nimport { debounce } from 'lodash-es';\n\n/**\n * Selection observer class observes selection changes in the document. If selection changes on the document this\n * observer checks if there are any mutations and if DOM selection is different than the\n * {@link module:engine/view/document~Document#selection view selection}. Selection observer fires\n * {@link module:engine/view/document~Document#event:selectionChange} event only if selection change was the only change in the document\n * and DOM selection is different then the view selection.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @see module:engine/view/observer/mutationobserver~MutationObserver\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class SelectionObserver extends Observer {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\t/**\n\t\t * Instance of the mutation observer. Selection observer calls\n\t\t * {@link module:engine/view/observer/mutationobserver~MutationObserver#flush} to ensure that the mutations will be handled\n\t\t * before the {@link module:engine/view/document~Document#event:selectionChange} event is fired.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/observer/mutationobserver~MutationObserver}\n\t\t * module:engine/view/observer/selectionobserver~SelectionObserver#mutationObserver\n\t\t */\n\t\tthis.mutationObserver = view.getObserver( MutationObserver );\n\n\t\t/**\n\t\t * Reference to the view {@link module:engine/view/documentselection~DocumentSelection} object used to compare\n\t\t * new selection with it.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/documentselection~DocumentSelection}\n\t\t * module:engine/view/observer/selectionobserver~SelectionObserver#selection\n\t\t */\n\t\tthis.selection = this.document.selection;\n\n\t\t/* eslint-disable max-len */\n\t\t/**\n\t\t * Reference to the {@link module:engine/view/view~View#domConverter}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/domconverter~DomConverter} module:engine/view/observer/selectionobserver~SelectionObserver#domConverter\n\t\t */\n\t\t/* eslint-enable max-len */\n\t\tthis.domConverter = view.domConverter;\n\n\t\t/**\n\t\t * Set of documents which have added \"selectionchange\" listener to avoid adding listener twice to the same\n\t\t * document.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakSet.<Document>} module:engine/view/observer/selectionobserver~SelectionObserver#_documents\n\t\t */\n\t\tthis._documents = new WeakSet();\n\n\t\t/**\n\t\t * Fires debounced event `selectionChangeDone`. It uses `lodash#debounce` method to delay function call.\n\t\t *\n\t\t * @private\n\t\t * @param {Object} data Selection change data.\n\t\t * @method #_fireSelectionChangeDoneDebounced\n\t\t */\n\t\tthis._fireSelectionChangeDoneDebounced = debounce( data => this.document.fire( 'selectionChangeDone', data ), 200 );\n\n\t\tthis._clearInfiniteLoopInterval = setInterval( () => this._clearInfiniteLoop(), 1000 );\n\n\t\t/**\n\t\t * Private property to check if the code does not enter infinite loop.\n\t\t *\n\t\t * @private\n\t\t * @member {Number} module:engine/view/observer/selectionobserver~SelectionObserver#_loopbackCounter\n\t\t */\n\t\tthis._loopbackCounter = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tobserve( domElement ) {\n\t\tconst domDocument = domElement.ownerDocument;\n\n\t\t// Add listener once per each document.\n\t\tif ( this._documents.has( domDocument ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.listenTo( domDocument, 'selectionchange', () => {\n\t\t\tthis._handleSelectionChange( domDocument );\n\t\t} );\n\n\t\tthis._documents.add( domDocument );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\tclearInterval( this._clearInfiniteLoopInterval );\n\t\tthis._fireSelectionChangeDoneDebounced.cancel();\n\t}\n\n\t/**\n\t * Selection change listener. {@link module:engine/view/observer/mutationobserver~MutationObserver#flush Flush} mutations, check if\n\t * selection changes and fires {@link module:engine/view/document~Document#event:selectionChange} event on every change\n\t * and {@link module:engine/view/document~Document#event:selectionChangeDone} when selection stop changing.\n\t *\n\t * @private\n\t * @param {Document} domDocument DOM document.\n\t */\n\t_handleSelectionChange( domDocument ) {\n\t\tif ( !this.isEnabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ensure the mutation event will be before selection event on all browsers.\n\t\tthis.mutationObserver.flush();\n\n\t\t// If there were mutations then the view will be re-rendered by the mutation observer and selection\n\t\t// will be updated, so selections will equal and event will not be fired, as expected.\n\t\tconst domSelection = domDocument.defaultView.getSelection();\n\t\tconst newViewSelection = this.domConverter.domSelectionToView( domSelection );\n\n\t\t// Do not convert selection change if the new view selection has no ranges in it.\n\t\t//\n\t\t// It means that the DOM selection is in some way incorrect. Ranges that were in the DOM selection could not be\n\t\t// converted to the view. This happens when the DOM selection was moved outside of the editable element.\n\t\tif ( newViewSelection.rangeCount == 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.selection.isEqual( newViewSelection ) && this.domConverter.isDomSelectionCorrect( domSelection ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ensure we are not in the infinite loop (#400).\n\t\t// This counter is reset each second. 60 selection changes in 1 second is enough high number\n\t\t// to be very difficult (impossible) to achieve using just keyboard keys (during normal editor use).\n\t\tif ( ++this._loopbackCounter > 60 ) {\n\t\t\t// Selection change observer detected an infinite rendering loop.\n\t\t\t// Most probably you try to put the selection in the position which is not allowed\n\t\t\t// by the browser and browser fixes it automatically what causes `selectionchange` event on\n\t\t\t// which a loopback through a model tries to re-render the wrong selection and again.\n\t\t\t//\n\t\t\t// @if CK_DEBUG // console.warn( 'Selection change observer detected an infinite rendering loop.' );\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.selection.isSimilar( newViewSelection ) ) {\n\t\t\t// If selection was equal and we are at this point of algorithm, it means that it was incorrect.\n\t\t\t// Just re-render it, no need to fire any events, etc.\n\t\t\tthis.view.forceRender();\n\t\t} else {\n\t\t\tconst data = {\n\t\t\t\toldSelection: this.selection,\n\t\t\t\tnewSelection: newViewSelection,\n\t\t\t\tdomSelection\n\t\t\t};\n\n\t\t\t// Prepare data for new selection and fire appropriate events.\n\t\t\tthis.document.fire( 'selectionChange', data );\n\n\t\t\t// Call` #_fireSelectionChangeDoneDebounced` every time when `selectionChange` event is fired.\n\t\t\t// This function is debounced what means that `selectionChangeDone` event will be fired only when\n\t\t\t// defined int the function time will elapse since the last time the function was called.\n\t\t\t// So `selectionChangeDone` will be fired when selection will stop changing.\n\t\t\tthis._fireSelectionChangeDoneDebounced( data );\n\t\t}\n\t}\n\n\t/**\n\t * Clears `SelectionObserver` internal properties connected with preventing infinite loop.\n\t *\n\t * @protected\n\t */\n\t_clearInfiniteLoop() {\n\t\tthis._loopbackCounter = 0;\n\t}\n}\n\n/**\n * Fired when selection has changed. This event is fired only when the selection change was the only change that happened\n * in the document, and old selection is different then the new selection.\n *\n * Introduced by {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\n *\n * Note that because {@link module:engine/view/observer/selectionobserver~SelectionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/selectionobserver~SelectionObserver\n * @event module:engine/view/document~Document#event:selectionChange\n * @param {Object} data\n * @param {module:engine/view/documentselection~DocumentSelection} data.oldSelection Old View selection which is\n * {@link module:engine/view/document~Document#selection}.\n * @param {module:engine/view/selection~Selection} data.newSelection New View selection which is converted DOM selection.\n * @param {Selection} data.domSelection Native DOM selection.\n */\n\n/**\n * Fired when selection stops changing.\n *\n * Introduced by {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\n *\n * Note that because {@link module:engine/view/observer/selectionobserver~SelectionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/selectionobserver~SelectionObserver\n * @event module:engine/view/document~Document#event:selectionChangeDone\n * @param {Object} data\n * @param {module:engine/view/documentselection~DocumentSelection} data.oldSelection Old View selection which is\n * {@link module:engine/view/document~Document#selection}.\n * @param {module:engine/view/selection~Selection} data.newSelection New View selection which is converted DOM selection.\n * @param {Selection} data.domSelection Native DOM selection.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/focusobserver\n */\n\n/* globals setTimeout, clearTimeout */\n\nimport DomEventObserver from './domeventobserver';\n\n/**\n * {@link module:engine/view/document~Document#event:focus Focus}\n * and {@link module:engine/view/document~Document#event:blur blur} events observer.\n * Focus observer handle also {@link module:engine/view/rooteditableelement~RootEditableElement#isFocused isFocused} property of the\n * {@link module:engine/view/rooteditableelement~RootEditableElement root elements}.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nexport default class FocusObserver extends DomEventObserver {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\tthis.domEventType = [ 'focus', 'blur' ];\n\t\tthis.useCapture = true;\n\t\tconst document = this.document;\n\n\t\tdocument.on( 'focus', () => {\n\t\t\tdocument.isFocused = true;\n\n\t\t\t// Unfortunately native `selectionchange` event is fired asynchronously.\n\t\t\t// We need to wait until `SelectionObserver` handle the event and then render. Otherwise rendering will\n\t\t\t// overwrite new DOM selection with selection from the view.\n\t\t\t// See https://github.com/ckeditor/ckeditor5-engine/issues/795 for more details.\n\t\t\t// Long timeout is needed to solve #676 and https://github.com/ckeditor/ckeditor5-engine/issues/1157 issues.\n\t\t\tthis._renderTimeoutId = setTimeout( () => view.forceRender(), 50 );\n\t\t} );\n\n\t\tdocument.on( 'blur', ( evt, data ) => {\n\t\t\tconst selectedEditable = document.selection.editableElement;\n\n\t\t\tif ( selectedEditable === null || selectedEditable === data.target ) {\n\t\t\t\tdocument.isFocused = false;\n\n\t\t\t\t// Re-render the document to update view elements.\n\t\t\t\tview.forceRender();\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * Identifier of the timeout currently used by focus listener to delay rendering execution.\n\t\t *\n\t\t * @private\n\t\t * @member {Number} #_renderTimeoutId\n\t\t */\n\t}\n\n\tonDomEvent( domEvent ) {\n\t\tthis.fire( domEvent.type, domEvent );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tif ( this._renderTimeoutId ) {\n\t\t\tclearTimeout( this._renderTimeoutId );\n\t\t}\n\n\t\tsuper.destroy();\n\t}\n}\n\n/**\n * Fired when one of the editables gets focus.\n *\n * Introduced by {@link module:engine/view/observer/focusobserver~FocusObserver}.\n *\n * Note that because {@link module:engine/view/observer/focusobserver~FocusObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/focusobserver~FocusObserver\n * @event module:engine/view/document~Document#event:focus\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n/**\n * Fired when one of the editables loses focus.\n *\n * Introduced by {@link module:engine/view/observer/focusobserver~FocusObserver}.\n *\n * Note that because {@link module:engine/view/observer/focusobserver~FocusObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/focusobserver~FocusObserver\n * @event module:engine/view/document~Document#event:blur\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/compositionobserver\n */\n\nimport DomEventObserver from './domeventobserver';\n\n/**\n * {@link module:engine/view/document~Document#event:compositionstart Compositionstart},\n * {@link module:engine/view/document~Document#event:compositionupdate compositionupdate} and\n * {@link module:engine/view/document~Document#event:compositionend compositionend} events observer.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nexport default class CompositionObserver extends DomEventObserver {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\tthis.domEventType = [ 'compositionstart', 'compositionupdate', 'compositionend' ];\n\t\tconst document = this.document;\n\n\t\tdocument.on( 'compositionstart', () => {\n\t\t\tdocument.isComposing = true;\n\t\t} );\n\n\t\tdocument.on( 'compositionend', () => {\n\t\t\tdocument.isComposing = false;\n\t\t} );\n\t}\n\n\tonDomEvent( domEvent ) {\n\t\tthis.fire( domEvent.type, domEvent );\n\t}\n}\n\n/**\n * Fired when composition starts inside one of the editables.\n *\n * Introduced by {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n *\n * Note that because {@link module:engine/view/observer/compositionobserver~CompositionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/compositionobserver~CompositionObserver\n * @event module:engine/view/document~Document#event:compositionstart\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n/**\n * Fired when composition is updated inside one of the editables.\n *\n * Introduced by {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n *\n * Note that because {@link module:engine/view/observer/compositionobserver~CompositionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/compositionobserver~CompositionObserver\n * @event module:engine/view/document~Document#event:compositionupdate\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n/**\n * Fired when composition ends inside one of the editables.\n *\n * Introduced by {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n *\n * Note that because {@link module:engine/view/observer/compositionobserver~CompositionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/compositionobserver~CompositionObserver\n * @event module:engine/view/document~Document#event:compositionend\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/observer/inputobserver\n */\n\nimport DomEventObserver from './domeventobserver';\n\n/**\n * Observer for events connected with data input.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nexport default class InputObserver extends DomEventObserver {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\tthis.domEventType = [ 'beforeinput' ];\n\t}\n\n\tonDomEvent( domEvent ) {\n\t\tthis.fire( domEvent.type, domEvent );\n\t}\n}\n\n/**\n * Fired before browser inputs (or deletes) some data.\n *\n * This event is available only on browsers which support DOM `beforeinput` event.\n *\n * Introduced by {@link module:engine/view/observer/inputobserver~InputObserver}.\n *\n * Note that because {@link module:engine/view/observer/inputobserver~InputObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/inputobserver~InputObserver\n * @event module:engine/view/document~Document#event:beforeinput\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/isrange\n */\n\n/**\n * Checks if the object is a native DOM Range.\n *\n * @param {*} obj\n * @returns {Boolean}\n */\nexport default function isRange( obj ) {\n\treturn Object.prototype.toString.apply( obj ) == '[object Range]';\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/getborderwidths\n */\n\n/**\n * Returns an object containing CSS border widths of a specified HTML element.\n *\n * @param {HTMLElement} element An element which has CSS borders.\n * @returns {Object} An object containing `top`, `left`, `right` and `bottom` properties\n * with numerical values of the `border-[top,left,right,bottom]-width` CSS styles.\n */\nexport default function getBorderWidths( element ) {\n\t// Call getComputedStyle on the window the element document belongs to.\n\tconst style = element.ownerDocument.defaultView.getComputedStyle( element );\n\n\treturn {\n\t\ttop: parseInt( style.borderTopWidth, 10 ),\n\t\tright: parseInt( style.borderRightWidth, 10 ),\n\t\tbottom: parseInt( style.borderBottomWidth, 10 ),\n\t\tleft: parseInt( style.borderLeftWidth, 10 )\n\t};\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/rect\n */\n\nimport isRange from './isrange';\nimport isWindow from './iswindow';\nimport getBorderWidths from './getborderwidths';\nimport isText from './istext';\nimport { isElement } from 'lodash-es';\n\nconst rectProperties = [ 'top', 'right', 'bottom', 'left', 'width', 'height' ];\n\n/**\n * A helper class representing a `ClientRect` object, e.g. value returned by\n * the native `object.getBoundingClientRect()` method. Provides a set of methods\n * to manipulate the rect and compare it against other rect instances.\n */\nexport default class Rect {\n\t/**\n\t * Creates an instance of rect.\n\t *\n\t *\t\t// Rect of an HTMLElement.\n\t *\t\tconst rectA = new Rect( document.body );\n\t *\n\t *\t\t// Rect of a DOM Range.\n\t *\t\tconst rectB = new Rect( document.getSelection().getRangeAt( 0 ) );\n\t *\n\t *\t\t// Rect of a window (web browser viewport).\n\t *\t\tconst rectC = new Rect( window );\n\t *\n\t *\t\t// Rect out of an object.\n\t *\t\tconst rectD = new Rect( { top: 0, right: 10, bottom: 10, left: 0, width: 10, height: 10 } );\n\t *\n\t *\t\t// Rect out of another Rect instance.\n\t *\t\tconst rectE = new Rect( rectD );\n\t *\n\t *\t\t// Rect out of a ClientRect.\n\t *\t\tconst rectF = new Rect( document.body.getClientRects().item( 0 ) );\n\t *\n\t * **Note**: By default a rect of an HTML element includes its CSS borders and scrollbars (if any)\n\t * ant the rect of a `window` includes scrollbars too. Use {@link #excludeScrollbarsAndBorders}\n\t * to get the inner part of the rect.\n\t *\n\t * @param {HTMLElement|Range|Window|ClientRect|module:utils/dom/rect~Rect|Object} source A source object to create the rect.\n\t */\n\tconstructor( source ) {\n\t\tconst isSourceRange = isRange( source );\n\n\t\t/**\n\t\t * The object this rect is for.\n\t\t *\n\t\t * @protected\n\t\t * @readonly\n\t\t * @member {HTMLElement|Range|ClientRect|module:utils/dom/rect~Rect|Object} #_source\n\t\t */\n\t\tObject.defineProperty( this, '_source', {\n\t\t\t// If the source is a Rect instance, copy it's #_source.\n\t\t\tvalue: source._source || source,\n\t\t\twritable: true,\n\t\t\tenumerable: false\n\t\t} );\n\n\t\tif ( isElement( source ) || isSourceRange ) {\n\t\t\t// The `Rect` class depends on `getBoundingClientRect` and `getClientRects` DOM methods. If the source\n\t\t\t// of a rect in an HTML element or a DOM range but it does not belong to any rendered DOM tree, these methods\n\t\t\t// will fail to obtain the geometry and the rect instance makes little sense to the features using it.\n\t\t\t// To get rid of this warning make sure the source passed to the constructor is a descendant of `window.document.body`.\n\t\t\t// @if CK_DEBUG // const sourceNode = isSourceRange ? source.startContainer : source;\n\t\t\t// @if CK_DEBUG // if ( !sourceNode.ownerDocument || !sourceNode.ownerDocument.body.contains( sourceNode ) ) {\n\t\t\t// @if CK_DEBUG // \tconsole.warn(\n\t\t\t// @if CK_DEBUG // \t\t'rect-source-not-in-dom: The source of this rect does not belong to any rendered DOM tree.',\n\t\t\t// @if CK_DEBUG // \t\t{ source } );\n\t\t\t// @if CK_DEBUG // }\n\n\t\t\tif ( isSourceRange ) {\n\t\t\t\tcopyRectProperties( this, Rect.getDomRangeRects( source )[ 0 ] );\n\t\t\t} else {\n\t\t\t\tcopyRectProperties( this, source.getBoundingClientRect() );\n\t\t\t}\n\t\t} else if ( isWindow( source ) ) {\n\t\t\tconst { innerWidth, innerHeight } = source;\n\n\t\t\tcopyRectProperties( this, {\n\t\t\t\ttop: 0,\n\t\t\t\tright: innerWidth,\n\t\t\t\tbottom: innerHeight,\n\t\t\t\tleft: 0,\n\t\t\t\twidth: innerWidth,\n\t\t\t\theight: innerHeight\n\t\t\t} );\n\t\t} else {\n\t\t\tcopyRectProperties( this, source );\n\t\t}\n\n\t\t/**\n\t\t * The \"top\" value of the rect.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #top\n\t\t */\n\n\t\t/**\n\t\t * The \"right\" value of the rect.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #right\n\t\t */\n\n\t\t/**\n\t\t * The \"bottom\" value of the rect.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #bottom\n\t\t */\n\n\t\t/**\n\t\t * The \"left\" value of the rect.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #left\n\t\t */\n\n\t\t/**\n\t\t * The \"width\" value of the rect.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #width\n\t\t */\n\n\t\t/**\n\t\t * The \"height\" value of the rect.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #height\n\t\t */\n\t}\n\n\t/**\n\t * Returns a clone of the rect.\n\t *\n\t * @returns {module:utils/dom/rect~Rect} A cloned rect.\n\t */\n\tclone() {\n\t\treturn new Rect( this );\n\t}\n\n\t/**\n\t * Moves the rect so that its upper–left corner lands in desired `[ x, y ]` location.\n\t *\n\t * @param {Number} x Desired horizontal location.\n\t * @param {Number} y Desired vertical location.\n\t * @returns {module:utils/dom/rect~Rect} A rect which has been moved.\n\t */\n\tmoveTo( x, y ) {\n\t\tthis.top = y;\n\t\tthis.right = x + this.width;\n\t\tthis.bottom = y + this.height;\n\t\tthis.left = x;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Moves the rect in–place by a dedicated offset.\n\t *\n\t * @param {Number} x A horizontal offset.\n\t * @param {Number} y A vertical offset\n\t * @returns {module:utils/dom/rect~Rect} A rect which has been moved.\n\t */\n\tmoveBy( x, y ) {\n\t\tthis.top += y;\n\t\tthis.right += x;\n\t\tthis.left += x;\n\t\tthis.bottom += y;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a new rect a a result of intersection with another rect.\n\t *\n\t * @param {module:utils/dom/rect~Rect} anotherRect\n\t * @returns {module:utils/dom/rect~Rect}\n\t */\n\tgetIntersection( anotherRect ) {\n\t\tconst rect = {\n\t\t\ttop: Math.max( this.top, anotherRect.top ),\n\t\t\tright: Math.min( this.right, anotherRect.right ),\n\t\t\tbottom: Math.min( this.bottom, anotherRect.bottom ),\n\t\t\tleft: Math.max( this.left, anotherRect.left )\n\t\t};\n\n\t\trect.width = rect.right - rect.left;\n\t\trect.height = rect.bottom - rect.top;\n\n\t\tif ( rect.width < 0 || rect.height < 0 ) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn new Rect( rect );\n\t\t}\n\t}\n\n\t/**\n\t * Returns the area of intersection with another rect.\n\t *\n\t * @param {module:utils/dom/rect~Rect} anotherRect [description]\n\t * @returns {Number} Area of intersection.\n\t */\n\tgetIntersectionArea( anotherRect ) {\n\t\tconst rect = this.getIntersection( anotherRect );\n\n\t\tif ( rect ) {\n\t\t\treturn rect.getArea();\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the area of the rect.\n\t *\n\t * @returns {Number}\n\t */\n\tgetArea() {\n\t\treturn this.width * this.height;\n\t}\n\n\t/**\n\t * Returns a new rect, a part of the original rect, which is actually visible to the user,\n\t * e.g. an original rect cropped by parent element rects which have `overflow` set in CSS\n\t * other than `\"visible\"`.\n\t *\n\t * If there's no such visible rect, which is when the rect is limited by one or many of\n\t * the ancestors, `null` is returned.\n\t *\n\t * @returns {module:utils/dom/rect~Rect|null} A visible rect instance or `null`, if there's none.\n\t */\n\tgetVisible() {\n\t\tconst source = this._source;\n\t\tlet visibleRect = this.clone();\n\n\t\t// There's no ancestor to crop <body> with the overflow.\n\t\tif ( !isBody( source ) ) {\n\t\t\tlet parent = source.parentNode || source.commonAncestorContainer;\n\n\t\t\t// Check the ancestors all the way up to the <body>.\n\t\t\twhile ( parent && !isBody( parent ) ) {\n\t\t\t\tconst parentRect = new Rect( parent );\n\t\t\t\tconst intersectionRect = visibleRect.getIntersection( parentRect );\n\n\t\t\t\tif ( intersectionRect ) {\n\t\t\t\t\tif ( intersectionRect.getArea() < visibleRect.getArea() ) {\n\t\t\t\t\t\t// Reduce the visible rect to the intersection.\n\t\t\t\t\t\tvisibleRect = intersectionRect;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// There's no intersection, the rect is completely invisible.\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tparent = parent.parentNode;\n\t\t\t}\n\t\t}\n\n\t\treturn visibleRect;\n\t}\n\n\t/**\n\t * Checks if all property values ({@link #top}, {@link #left}, {@link #right},\n\t * {@link #bottom}, {@link #width} and {@link #height}) are the equal in both rect\n\t * instances.\n\t *\n\t * @param {module:utils/dom/rect~Rect} rect A rect instance to compare with.\n\t * @returns {Boolean} `true` when Rects are equal. `false` otherwise.\n\t */\n\tisEqual( anotherRect ) {\n\t\tfor ( const prop of rectProperties ) {\n\t\t\tif ( this[ prop ] !== anotherRect[ prop ] ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Checks whether a rect fully contains another rect instance.\n\t *\n\t * @param {module:utils/dom/rect~Rect} anotherRect\n\t * @returns {Boolean} `true` if contains, `false` otherwise.\n\t */\n\tcontains( anotherRect ) {\n\t\tconst intersectRect = this.getIntersection( anotherRect );\n\n\t\treturn !!( intersectRect && intersectRect.isEqual( anotherRect ) );\n\t}\n\n\t/**\n\t * Excludes scrollbars and CSS borders from the rect.\n\t *\n\t * * Borders are removed when {@link #_source} is an HTML element.\n\t * * Scrollbars are excluded from HTML elements and the `window`.\n\t *\n\t * @returns {module:utils/dom/rect~Rect} A rect which has been updated.\n\t */\n\texcludeScrollbarsAndBorders() {\n\t\tconst source = this._source;\n\t\tlet scrollBarWidth, scrollBarHeight, direction;\n\n\t\tif ( isWindow( source ) ) {\n\t\t\tscrollBarWidth = source.innerWidth - source.document.documentElement.clientWidth;\n\t\t\tscrollBarHeight = source.innerHeight - source.document.documentElement.clientHeight;\n\t\t\tdirection = source.getComputedStyle( source.document.documentElement ).direction;\n\t\t} else {\n\t\t\tconst borderWidths = getBorderWidths( this._source );\n\n\t\t\tscrollBarWidth = source.offsetWidth - source.clientWidth - borderWidths.left - borderWidths.right;\n\t\t\tscrollBarHeight = source.offsetHeight - source.clientHeight - borderWidths.top - borderWidths.bottom;\n\t\t\tdirection = source.ownerDocument.defaultView.getComputedStyle( source ).direction;\n\n\t\t\tthis.left += borderWidths.left;\n\t\t\tthis.top += borderWidths.top;\n\t\t\tthis.right -= borderWidths.right;\n\t\t\tthis.bottom -= borderWidths.bottom;\n\t\t\tthis.width = this.right - this.left;\n\t\t\tthis.height = this.bottom - this.top;\n\t\t}\n\n\t\tthis.width -= scrollBarWidth;\n\n\t\tif ( direction === 'ltr' ) {\n\t\t\tthis.right -= scrollBarWidth;\n\t\t} else {\n\t\t\tthis.left += scrollBarWidth;\n\t\t}\n\n\t\tthis.height -= scrollBarHeight;\n\t\tthis.bottom -= scrollBarHeight;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns an array of rects of the given native DOM Range.\n\t *\n\t * @param {Range} range A native DOM range.\n\t * @returns {Array.<module:utils/dom/rect~Rect>} DOM Range rects.\n\t */\n\tstatic getDomRangeRects( range ) {\n\t\tconst rects = [];\n\t\t// Safari does not iterate over ClientRectList using for...of loop.\n\t\tconst clientRects = Array.from( range.getClientRects() );\n\n\t\tif ( clientRects.length ) {\n\t\t\tfor ( const rect of clientRects ) {\n\t\t\t\trects.push( new Rect( rect ) );\n\t\t\t}\n\t\t}\n\t\t// If there's no client rects for the Range, use parent container's bounding rect\n\t\t// instead and adjust rect's width to simulate the actual geometry of such range.\n\t\t// https://github.com/ckeditor/ckeditor5-utils/issues/153\n\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/317\n\t\telse {\n\t\t\tlet startContainer = range.startContainer;\n\n\t\t\tif ( isText( startContainer ) ) {\n\t\t\t\tstartContainer = startContainer.parentNode;\n\t\t\t}\n\n\t\t\tconst rect = new Rect( startContainer.getBoundingClientRect() );\n\t\t\trect.right = rect.left;\n\t\t\trect.width = 0;\n\n\t\t\trects.push( rect );\n\t\t}\n\n\t\treturn rects;\n\t}\n}\n\n// Acquires all the rect properties from the passed source.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} rect\n// @param {ClientRect|module:utils/dom/rect~Rect|Object} source\nfunction copyRectProperties( rect, source ) {\n\tfor ( const p of rectProperties ) {\n\t\trect[ p ] = source[ p ];\n\t}\n}\n\n// Checks if provided object is a <body> HTML element.\n//\n// @private\n// @param {HTMLElement|Range} elementOrRange\n// @returns {Boolean}\nfunction isBody( elementOrRange ) {\n\tif ( !isElement( elementOrRange ) ) {\n\t\treturn false;\n\t}\n\n\treturn elementOrRange === elementOrRange.ownerDocument.body;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/scroll\n */\n\nimport isRange from './isrange';\nimport Rect from './rect';\nimport isText from './istext';\n\nconst utils = {};\n\n/**\n * Makes any page `HTMLElement` or `Range` (`target`) visible inside the browser viewport.\n * This helper will scroll all `target` ancestors and the web browser viewport to reveal the target to\n * the user. If the `target` is already visible, nothing will happen.\n *\n * @param {HTMLElement|Range} options.target A target, which supposed to become visible to the user.\n * @param {Number} [options.viewportOffset] An offset from the edge of the viewport (in pixels)\n * the `target` will be moved by when the viewport is scrolled. It enhances the user experience\n * by keeping the `target` some distance from the edge of the viewport and thus making it easier to\n * read or edit by the user.\n */\nexport function scrollViewportToShowTarget( { target, viewportOffset = 0 } ) {\n\tconst targetWindow = getWindow( target );\n\tlet currentWindow = targetWindow;\n\tlet currentFrame = null;\n\n\t// Iterate over all windows, starting from target's parent window up to window#top.\n\twhile ( currentWindow ) {\n\t\tlet firstAncestorToScroll;\n\n\t\t// Let's scroll target's ancestors first to reveal it. Then, once the ancestor scrolls\n\t\t// settled down, the algorithm can eventually scroll the viewport of the current window.\n\t\t//\n\t\t// Note: If the current window is target's **original** window (e.g. the first one),\n\t\t// start scrolling the closest parent of the target. If not, scroll the closest parent\n\t\t// of an iframe that resides in the current window.\n\t\tif ( currentWindow == targetWindow ) {\n\t\t\tfirstAncestorToScroll = getParentElement( target );\n\t\t} else {\n\t\t\tfirstAncestorToScroll = getParentElement( currentFrame );\n\t\t}\n\n\t\t// Scroll the target's ancestors first. Once done, scrolling the viewport is easy.\n\t\tscrollAncestorsToShowRect( firstAncestorToScroll, () => {\n\t\t\t// Note: If the target does not belong to the current window **directly**,\n\t\t\t// i.e. it resides in an iframe belonging to the window, obtain the target's rect\n\t\t\t// in the coordinates of the current window. By default, a Rect returns geometry\n\t\t\t// relative to the current window's viewport. To make it work in a parent window,\n\t\t\t// it must be shifted.\n\t\t\treturn getRectRelativeToWindow( target, currentWindow );\n\t\t} );\n\n\t\t// Obtain the rect of the target after it has been scrolled within its ancestors.\n\t\t// It's time to scroll the viewport.\n\t\tconst targetRect = getRectRelativeToWindow( target, currentWindow );\n\n\t\tscrollWindowToShowRect( currentWindow, targetRect, viewportOffset );\n\n\t\tif ( currentWindow.parent != currentWindow ) {\n\t\t\t// Keep the reference to the <iframe> element the \"previous current window\" was\n\t\t\t// rendered within. It will be useful to re–calculate the rect of the target\n\t\t\t// in the parent window's relative geometry. The target's rect must be shifted\n\t\t\t// by it's iframe's position.\n\t\t\tcurrentFrame = currentWindow.frameElement;\n\t\t\tcurrentWindow = currentWindow.parent;\n\n\t\t\t// If the current window has some parent but frameElement is inaccessible, then they have\n\t\t\t// different domains/ports and, due to security reasons, accessing and scrolling\n\t\t\t// the parent window won't be possible.\n\t\t\t// See https://github.com/ckeditor/ckeditor5/issues/930.\n\t\t\tif ( !currentFrame ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tcurrentWindow = null;\n\t\t}\n\t}\n}\n\n/**\n * Makes any page `HTMLElement` or `Range` (target) visible within its scrollable ancestors,\n * e.g. if they have `overflow: scroll` CSS style.\n *\n * @param {HTMLElement|Range} target A target, which supposed to become visible to the user.\n */\nexport function scrollAncestorsToShowTarget( target ) {\n\tconst targetParent = getParentElement( target );\n\n\tscrollAncestorsToShowRect( targetParent, () => {\n\t\treturn new Rect( target );\n\t} );\n}\n\n// TODO: Using a property value shorthand in the top of the file\n// causes JSDoc to throw errors. See https://github.com/cksource/docs-builder/issues/75.\nObject.assign( utils, {\n\tscrollViewportToShowTarget,\n\tscrollAncestorsToShowTarget\n} );\n\n// Makes a given rect visible within its parent window.\n//\n// Note: Avoid the situation where the caret is still in the viewport, but totally\n// at the edge of it. In such situation, if it moved beyond the viewport in the next\n// action e.g. after paste, the scrolling would move it to the viewportOffset level\n// and it all would look like the caret visually moved up/down:\n//\n// 1.\n//\t\t| foo[]\n//\t\t|                                    <--- N px of space below the caret\n//\t\t+---------------------------------...\n//\n// 2. *paste*\n// 3.\n//\t\t|\n//\t\t|\n//\t\t+-foo-----------------------------...\n//\t\t  bar[]                              <--- caret below viewport, scrolling...\n//\n// 4. *scrolling*\n// 5.\n//\t\t|\n//\t\t| foo\n//\t\t| bar[]                              <--- caret precisely at the edge\n//\t\t+---------------------------------...\n//\n// To prevent this, this method checks the rects moved by the viewportOffset to cover\n// the upper/lower edge of the viewport. It makes sure if the action repeats, there's\n// no twitching – it's a purely visual improvement:\n//\n// 5. (after fix)\n//\t\t|\n//\t\t| foo\n//\t\t| bar[]\n//\t\t|                                    <--- N px of space below the caret\n//\t\t+---------------------------------...\n//\n// @private\n// @param {Window} window A window which is scrolled to reveal the rect.\n// @param {module:utils/dom/rect~Rect} rect A rect which is to be revealed.\n// @param {Number} viewportOffset See scrollViewportToShowTarget.\nfunction scrollWindowToShowRect( window, rect, viewportOffset ) {\n\tconst targetShiftedDownRect = rect.clone().moveBy( 0, viewportOffset );\n\tconst targetShiftedUpRect = rect.clone().moveBy( 0, -viewportOffset );\n\tconst viewportRect = new Rect( window ).excludeScrollbarsAndBorders();\n\n\tconst rects = [ targetShiftedUpRect, targetShiftedDownRect ];\n\n\tif ( !rects.every( rect => viewportRect.contains( rect ) ) ) {\n\t\tlet { scrollX, scrollY } = window;\n\n\t\tif ( isAbove( targetShiftedUpRect, viewportRect ) ) {\n\t\t\tscrollY -= viewportRect.top - rect.top + viewportOffset;\n\t\t} else if ( isBelow( targetShiftedDownRect, viewportRect ) ) {\n\t\t\tscrollY += rect.bottom - viewportRect.bottom + viewportOffset;\n\t\t}\n\n\t\t// TODO: Web browsers scroll natively to place the target in the middle\n\t\t// of the viewport. It's not a very popular case, though.\n\t\tif ( isLeftOf( rect, viewportRect ) ) {\n\t\t\tscrollX -= viewportRect.left - rect.left + viewportOffset;\n\t\t} else if ( isRightOf( rect, viewportRect ) ) {\n\t\t\tscrollX += rect.right - viewportRect.right + viewportOffset;\n\t\t}\n\n\t\twindow.scrollTo( scrollX, scrollY );\n\t}\n}\n\n// Recursively scrolls element ancestors to visually reveal a rect.\n//\n// @private\n// @param {HTMLElement} A parent The first ancestors to start scrolling.\n// @param {Function} getRect A function which returns the Rect, which is to be revealed.\nfunction scrollAncestorsToShowRect( parent, getRect ) {\n\tconst parentWindow = getWindow( parent );\n\tlet parentRect, targetRect;\n\n\twhile ( parent != parentWindow.document.body ) {\n\t\ttargetRect = getRect();\n\t\tparentRect = new Rect( parent ).excludeScrollbarsAndBorders();\n\n\t\tif ( !parentRect.contains( targetRect ) ) {\n\t\t\tif ( isAbove( targetRect, parentRect ) ) {\n\t\t\t\tparent.scrollTop -= parentRect.top - targetRect.top;\n\t\t\t} else if ( isBelow( targetRect, parentRect ) ) {\n\t\t\t\tparent.scrollTop += targetRect.bottom - parentRect.bottom;\n\t\t\t}\n\n\t\t\tif ( isLeftOf( targetRect, parentRect ) ) {\n\t\t\t\tparent.scrollLeft -= parentRect.left - targetRect.left;\n\t\t\t} else if ( isRightOf( targetRect, parentRect ) ) {\n\t\t\t\tparent.scrollLeft += targetRect.right - parentRect.right;\n\t\t\t}\n\t\t}\n\n\t\tparent = parent.parentNode;\n\t}\n}\n\n// Determines if a given `Rect` extends beyond the bottom edge of the second `Rect`.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} firstRect\n// @param {module:utils/dom/rect~Rect} secondRect\nfunction isBelow( firstRect, secondRect ) {\n\treturn firstRect.bottom > secondRect.bottom;\n}\n\n// Determines if a given `Rect` extends beyond the top edge of the second `Rect`.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} firstRect\n// @param {module:utils/dom/rect~Rect} secondRect\nfunction isAbove( firstRect, secondRect ) {\n\treturn firstRect.top < secondRect.top;\n}\n\n// Determines if a given `Rect` extends beyond the left edge of the second `Rect`.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} firstRect\n// @param {module:utils/dom/rect~Rect} secondRect\nfunction isLeftOf( firstRect, secondRect ) {\n\treturn firstRect.left < secondRect.left;\n}\n\n// Determines if a given `Rect` extends beyond the right edge of the second `Rect`.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} firstRect\n// @param {module:utils/dom/rect~Rect} secondRect\nfunction isRightOf( firstRect, secondRect ) {\n\treturn firstRect.right > secondRect.right;\n}\n\n// Returns the closest window of an element or range.\n//\n// @private\n// @param {HTMLElement|Range} firstRect\n// @returns {Window}\nfunction getWindow( elementOrRange ) {\n\tif ( isRange( elementOrRange ) ) {\n\t\treturn elementOrRange.startContainer.ownerDocument.defaultView;\n\t} else {\n\t\treturn elementOrRange.ownerDocument.defaultView;\n\t}\n}\n\n// Returns the closest parent of an element or DOM range.\n//\n// @private\n// @param {HTMLElement|Range} firstRect\n// @returns {HTMLelement}\nfunction getParentElement( elementOrRange ) {\n\tif ( isRange( elementOrRange ) ) {\n\t\tlet parent = elementOrRange.commonAncestorContainer;\n\n\t\t// If a Range is attached to the Text, use the closest element ancestor.\n\t\tif ( isText( parent ) ) {\n\t\t\tparent = parent.parentNode;\n\t\t}\n\n\t\treturn parent;\n\t} else {\n\t\treturn elementOrRange.parentNode;\n\t}\n}\n\n// Returns the rect of an element or range residing in an iframe.\n// The result rect is relative to the geometry of the passed window instance.\n//\n// @private\n// @param {HTMLElement|Range} target Element or range which rect should be returned.\n// @param {Window} relativeWindow A window the rect should be relative to.\n// @returns {module:utils/dom/rect~Rect}\nfunction getRectRelativeToWindow( target, relativeWindow ) {\n\tconst targetWindow = getWindow( target );\n\tconst rect = new Rect( target );\n\n\tif ( targetWindow === relativeWindow ) {\n\t\treturn rect;\n\t} else {\n\t\tlet currentWindow = targetWindow;\n\n\t\twhile ( currentWindow != relativeWindow ) {\n\t\t\tconst frame = currentWindow.frameElement;\n\t\t\tconst frameRect = new Rect( frame ).excludeScrollbarsAndBorders();\n\n\t\t\trect.moveBy( frameRect.left, frameRect.top );\n\n\t\t\tcurrentWindow = currentWindow.parent;\n\t\t}\n\t}\n\n\treturn rect;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/view\n */\n\nimport Document from './document';\nimport DowncastWriter from './downcastwriter';\nimport Renderer from './renderer';\nimport DomConverter from './domconverter';\nimport Position from './position';\nimport Range from './range';\nimport Selection from './selection';\n\nimport MutationObserver from './observer/mutationobserver';\nimport KeyObserver from './observer/keyobserver';\nimport FakeSelectionObserver from './observer/fakeselectionobserver';\nimport SelectionObserver from './observer/selectionobserver';\nimport FocusObserver from './observer/focusobserver';\nimport CompositionObserver from './observer/compositionobserver';\nimport InputObserver from './observer/inputobserver';\n\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport { scrollViewportToShowTarget } from '@ckeditor/ckeditor5-utils/src/dom/scroll';\nimport { injectUiElementHandling } from './uielement';\nimport { injectQuirksHandling } from './filler';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n\n/**\n * Editor's view controller class. Its main responsibility is DOM - View management for editing purposes, to provide\n * abstraction over the DOM structure and events and hide all browsers quirks.\n *\n * View controller renders view document to DOM whenever view structure changes. To determine when view can be rendered,\n * all changes need to be done using the {@link module:engine/view/view~View#change} method, using\n * {@link module:engine/view/downcastwriter~DowncastWriter}:\n *\n *\t\tview.change( writer => {\n *\t\t\twriter.insert( position, writer.createText( 'foo' ) );\n *\t\t} );\n *\n * View controller also register {@link module:engine/view/observer/observer~Observer observers} which observes changes\n * on DOM and fire events on the {@link module:engine/view/document~Document Document}.\n * Note that the following observers are added by the class constructor and are always available:\n *\n * * {@link module:engine/view/observer/mutationobserver~MutationObserver},\n * * {@link module:engine/view/observer/selectionobserver~SelectionObserver},\n * * {@link module:engine/view/observer/focusobserver~FocusObserver},\n * * {@link module:engine/view/observer/keyobserver~KeyObserver},\n * * {@link module:engine/view/observer/fakeselectionobserver~FakeSelectionObserver}.\n * * {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n *\n * This class also {@link module:engine/view/view~View#attachDomRoot binds the DOM and the view elements}.\n *\n * If you do not need full a DOM - view management, and only want to transform a tree of view elements to a tree of DOM\n * elements you do not need this controller. You can use the {@link module:engine/view/domconverter~DomConverter DomConverter} instead.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class View {\n\tconstructor() {\n\t\t/**\n\t\t * Instance of the {@link module:engine/view/document~Document} associated with this view controller.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:engine/view/document~Document}\n\t\t */\n\t\tthis.document = new Document();\n\n\t\t/**\n\t\t * Instance of the {@link module:engine/view/domconverter~DomConverter domConverter} used by\n\t\t * {@link module:engine/view/view~View#_renderer renderer}\n\t\t * and {@link module:engine/view/observer/observer~Observer observers}.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:engine/view/domconverter~DomConverter}\n\t\t */\n\t\tthis.domConverter = new DomConverter();\n\n\t\t/**\n\t\t * Roots of the DOM tree. Map on the `HTMLElement`s with roots names as keys.\n\t\t *\n\t\t * @readonly\n\t\t * @type {Map.<String, HTMLElement>}\n\t\t */\n\t\tthis.domRoots = new Map();\n\n\t\t/**\n\t\t * Used to prevent calling {@link #forceRender} and {@link #change} during rendering view to the DOM.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} #isRenderingInProgress\n\t\t */\n\t\tthis.set( 'isRenderingInProgress', false );\n\n\t\t/**\n\t\t * Instance of the {@link module:engine/view/renderer~Renderer renderer}.\n\t\t *\n\t\t * @protected\n\t\t * @type {module:engine/view/renderer~Renderer}\n\t\t */\n\t\tthis._renderer = new Renderer( this.domConverter, this.document.selection );\n\t\tthis._renderer.bind( 'isFocused' ).to( this.document );\n\n\t\t/**\n\t\t * A DOM root attributes cache. It saves the initial values of DOM root attributes before the DOM element\n\t\t * is {@link module:engine/view/view~View#attachDomRoot attached} to the view so later on, when\n\t\t * the view is destroyed ({@link module:engine/view/view~View#detachDomRoot}), they can be easily restored.\n\t\t * This way, the DOM element can go back to the (clean) state as if the editing view never used it.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakMap.<HTMLElement,Object>}\n\t\t */\n\t\tthis._initialDomRootAttributes = new WeakMap();\n\n\t\t/**\n\t\t * Map of registered {@link module:engine/view/observer/observer~Observer observers}.\n\t\t *\n\t\t * @private\n\t\t * @type {Map.<Function, module:engine/view/observer/observer~Observer>}\n\t\t */\n\t\tthis._observers = new Map();\n\n\t\t/**\n\t\t * Is set to `true` when {@link #change view changes} are currently in progress.\n\t\t *\n\t\t * @private\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._ongoingChange = false;\n\n\t\t/**\n\t\t * Used to prevent calling {@link #forceRender} and {@link #change} during rendering view to the DOM.\n\t\t *\n\t\t * @private\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._postFixersInProgress = false;\n\n\t\t/**\n\t\t * Internal flag to temporary disable rendering. See the usage in the {@link #_disableRendering}.\n\t\t *\n\t\t * @private\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._renderingDisabled = false;\n\n\t\t/**\n\t\t * Internal flag that disables rendering when there are no changes since the last rendering.\n\t\t * It stores information about changed selection and changed elements from attached document roots.\n\t\t *\n\t\t * @private\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._hasChangedSinceTheLastRendering = false;\n\n\t\t/**\n\t\t * DowncastWriter instance used in {@link #change change method} callbacks.\n\t\t *\n\t\t * @private\n\t\t * @type {module:engine/view/downcastwriter~DowncastWriter}\n\t\t */\n\t\tthis._writer = new DowncastWriter( this.document );\n\n\t\t// Add default observers.\n\t\tthis.addObserver( MutationObserver );\n\t\tthis.addObserver( SelectionObserver );\n\t\tthis.addObserver( FocusObserver );\n\t\tthis.addObserver( KeyObserver );\n\t\tthis.addObserver( FakeSelectionObserver );\n\t\tthis.addObserver( CompositionObserver );\n\n\t\tif ( env.isAndroid ) {\n\t\t\tthis.addObserver( InputObserver );\n\t\t}\n\n\t\t// Inject quirks handlers.\n\t\tinjectQuirksHandling( this );\n\t\tinjectUiElementHandling( this );\n\n\t\t// Use 'normal' priority so that rendering is performed as first when using that priority.\n\t\tthis.on( 'render', () => {\n\t\t\tthis._render();\n\n\t\t\t// Informs that layout has changed after render.\n\t\t\tthis.document.fire( 'layoutChanged' );\n\n\t\t\t// Reset the `_hasChangedSinceTheLastRendering` flag after rendering.\n\t\t\tthis._hasChangedSinceTheLastRendering = false;\n\t\t} );\n\n\t\t// Listen to the document selection changes directly.\n\t\tthis.listenTo( this.document.selection, 'change', () => {\n\t\t\tthis._hasChangedSinceTheLastRendering = true;\n\t\t} );\n\t}\n\n\t/**\n\t * Attaches a DOM root element to the view element and enable all observers on that element.\n\t * Also {@link module:engine/view/renderer~Renderer#markToSync mark element} to be synchronized\n\t * with the view what means that all child nodes will be removed and replaced with content of the view root.\n\t *\n\t * This method also will change view element name as the same as tag name of given dom root.\n\t * Name is always transformed to lower case.\n\t *\n\t * **Note:** Use {@link #detachDomRoot `detachDomRoot()`} to revert this action.\n\t *\n\t * @param {Element} domRoot DOM root element.\n\t * @param {String} [name='main'] Name of the root.\n\t */\n\tattachDomRoot( domRoot, name = 'main' ) {\n\t\tconst viewRoot = this.document.getRoot( name );\n\n\t\t// Set view root name the same as DOM root tag name.\n\t\tviewRoot._name = domRoot.tagName.toLowerCase();\n\n\t\tconst initialDomRootAttributes = {};\n\n\t\t// 1. Copy and cache the attributes to remember the state of the element before attaching.\n\t\t//    The cached attributes will be restored in detachDomRoot() so the element goes to the\n\t\t//    clean state as if the editing view never used it.\n\t\t// 2. Apply the attributes using the view writer, so they all go under the control of the engine.\n\t\t//    The editing view takes over the attribute management completely because various\n\t\t//    features (e.g. addPlaceholder()) require dynamic changes of those attributes and they\n\t\t//    cannot be managed by the engine and the UI library at the same time.\n\t\tfor ( const { name, value } of Array.from( domRoot.attributes ) ) {\n\t\t\tinitialDomRootAttributes[ name ] = value;\n\n\t\t\t// Do not use writer.setAttribute() for the class attribute. The EditableUIView class\n\t\t\t// and its descendants could have already set some using the writer.addClass() on the view\n\t\t\t// document root. They haven't been rendered yet so they are not present in the DOM root.\n\t\t\t// Using writer.setAttribute( 'class', ... ) would override them completely.\n\t\t\tif ( name === 'class' ) {\n\t\t\t\tthis._writer.addClass( value.split( ' ' ), viewRoot );\n\t\t\t} else {\n\t\t\t\tthis._writer.setAttribute( name, value, viewRoot );\n\t\t\t}\n\t\t}\n\n\t\tthis._initialDomRootAttributes.set( domRoot, initialDomRootAttributes );\n\n\t\tconst updateContenteditableAttribute = () => {\n\t\t\tthis._writer.setAttribute( 'contenteditable', !viewRoot.isReadOnly, viewRoot );\n\n\t\t\tif ( viewRoot.isReadOnly ) {\n\t\t\t\tthis._writer.addClass( 'ck-read-only', viewRoot );\n\t\t\t} else {\n\t\t\t\tthis._writer.removeClass( 'ck-read-only', viewRoot );\n\t\t\t}\n\t\t};\n\n\t\t// Set initial value.\n\t\tupdateContenteditableAttribute();\n\n\t\tthis.domRoots.set( name, domRoot );\n\t\tthis.domConverter.bindElements( domRoot, viewRoot );\n\t\tthis._renderer.markToSync( 'children', viewRoot );\n\t\tthis._renderer.markToSync( 'attributes', viewRoot );\n\t\tthis._renderer.domDocuments.add( domRoot.ownerDocument );\n\n\t\tviewRoot.on( 'change:children', ( evt, node ) => this._renderer.markToSync( 'children', node ) );\n\t\tviewRoot.on( 'change:attributes', ( evt, node ) => this._renderer.markToSync( 'attributes', node ) );\n\t\tviewRoot.on( 'change:text', ( evt, node ) => this._renderer.markToSync( 'text', node ) );\n\t\tviewRoot.on( 'change:isReadOnly', () => this.change( updateContenteditableAttribute ) );\n\n\t\tviewRoot.on( 'change', () => {\n\t\t\tthis._hasChangedSinceTheLastRendering = true;\n\t\t} );\n\n\t\tfor ( const observer of this._observers.values() ) {\n\t\t\tobserver.observe( domRoot, name );\n\t\t}\n\t}\n\n\t/**\n\t * Detaches a DOM root element from the view element and restores its attributes to the state before\n\t * {@link #attachDomRoot `attachDomRoot()`}.\n\t *\n\t * @param {String} name Name of the root to detach.\n\t */\n\tdetachDomRoot( name ) {\n\t\tconst domRoot = this.domRoots.get( name );\n\n\t\t// Remove all root attributes so the DOM element is \"bare\".\n\t\tArray.from( domRoot.attributes ).forEach( ( { name } ) => domRoot.removeAttribute( name ) );\n\n\t\tconst initialDomRootAttributes = this._initialDomRootAttributes.get( domRoot );\n\n\t\t// Revert all view root attributes back to the state before attachDomRoot was called.\n\t\tfor ( const attribute in initialDomRootAttributes ) {\n\t\t\tdomRoot.setAttribute( attribute, initialDomRootAttributes[ attribute ] );\n\t\t}\n\n\t\tthis.domRoots.delete( name );\n\t\tthis.domConverter.unbindDomElement( domRoot );\n\t}\n\n\t/**\n\t * Gets DOM root element.\n\t *\n\t * @param {String} [name='main']  Name of the root.\n\t * @returns {Element} DOM root element instance.\n\t */\n\tgetDomRoot( name = 'main' ) {\n\t\treturn this.domRoots.get( name );\n\t}\n\n\t/**\n\t * Creates observer of the given type if not yet created, {@link module:engine/view/observer/observer~Observer#enable enables} it\n\t * and {@link module:engine/view/observer/observer~Observer#observe attaches} to all existing and future\n\t * {@link #domRoots DOM roots}.\n\t *\n\t * Note: Observers are recognized by their constructor (classes). A single observer will be instantiated and used only\n\t * when registered for the first time. This means that features and other components can register a single observer\n\t * multiple times without caring whether it has been already added or not.\n\t *\n\t * @param {Function} Observer The constructor of an observer to add.\n\t * Should create an instance inheriting from {@link module:engine/view/observer/observer~Observer}.\n\t * @returns {module:engine/view/observer/observer~Observer} Added observer instance.\n\t */\n\taddObserver( Observer ) {\n\t\tlet observer = this._observers.get( Observer );\n\n\t\tif ( observer ) {\n\t\t\treturn observer;\n\t\t}\n\n\t\tobserver = new Observer( this );\n\n\t\tthis._observers.set( Observer, observer );\n\n\t\tfor ( const [ name, domElement ] of this.domRoots ) {\n\t\t\tobserver.observe( domElement, name );\n\t\t}\n\n\t\tobserver.enable();\n\n\t\treturn observer;\n\t}\n\n\t/**\n\t * Returns observer of the given type or `undefined` if such observer has not been added yet.\n\t *\n\t * @param {Function} Observer The constructor of an observer to get.\n\t * @returns {module:engine/view/observer/observer~Observer|undefined} Observer instance or undefined.\n\t */\n\tgetObserver( Observer ) {\n\t\treturn this._observers.get( Observer );\n\t}\n\n\t/**\n\t * Disables all added observers.\n\t */\n\tdisableObservers() {\n\t\tfor ( const observer of this._observers.values() ) {\n\t\t\tobserver.disable();\n\t\t}\n\t}\n\n\t/**\n\t * Enables all added observers.\n\t */\n\tenableObservers() {\n\t\tfor ( const observer of this._observers.values() ) {\n\t\t\tobserver.enable();\n\t\t}\n\t}\n\n\t/**\n\t * Scrolls the page viewport and {@link #domRoots} with their ancestors to reveal the\n\t * caret, if not already visible to the user.\n\t */\n\tscrollToTheSelection() {\n\t\tconst range = this.document.selection.getFirstRange();\n\n\t\tif ( range ) {\n\t\t\tscrollViewportToShowTarget( {\n\t\t\t\ttarget: this.domConverter.viewRangeToDom( range ),\n\t\t\t\tviewportOffset: 20\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * It will focus DOM element representing {@link module:engine/view/editableelement~EditableElement EditableElement}\n\t * that is currently having selection inside.\n\t */\n\tfocus() {\n\t\tif ( !this.document.isFocused ) {\n\t\t\tconst editable = this.document.selection.editableElement;\n\n\t\t\tif ( editable ) {\n\t\t\t\tthis.domConverter.focus( editable );\n\t\t\t\tthis.forceRender();\n\t\t\t} else {\n\t\t\t\t// Before focusing view document, selection should be placed inside one of the view's editables.\n\t\t\t\t// Normally its selection will be converted from model document (which have default selection), but\n\t\t\t\t// when using view document on its own, we need to manually place selection before focusing it.\n\t\t\t\t//\n\t\t\t\t// @if CK_DEBUG // console.warn( 'There is no selection in any editable to focus.' );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * The `change()` method is the primary way of changing the view. You should use it to modify any node in the view tree.\n\t * It makes sure that after all changes are made the view is rendered to the DOM (assuming that the view will be changed\n\t * inside the callback). It prevents situations when the DOM is updated when the view state is not yet correct. It allows\n\t * to nest calls one inside another and still performs a single rendering after all those changes are made.\n\t * It also returns the return value of its callback.\n\t *\n\t *\t\tconst text = view.change( writer => {\n\t *\t\t\tconst newText = writer.createText( 'foo' );\n\t *\t\t\twriter.insert( position1, newText );\n\t *\n\t *\t\t\tview.change( writer => {\n\t *\t\t\t\twriter.insert( position2, writer.createText( 'bar' ) );\n\t *\t\t\t} );\n\t *\n\t * \t\t\twriter.remove( range );\n\t *\n\t * \t\t\treturn newText;\n\t *\t\t} );\n\t *\n\t * When the outermost change block is done and rendering to the DOM is over the\n\t * {@link module:engine/view/view~View#event:render `View#render`} event is fired.\n\t *\n\t * This method throws a `applying-view-changes-on-rendering` error when\n\t * the change block is used after rendering to the DOM has started.\n\t *\n\t * @param {Function} callback Callback function which may modify the view.\n\t * @returns {*} Value returned by the callback.\n\t */\n\tchange( callback ) {\n\t\tif ( this.isRenderingInProgress || this._postFixersInProgress ) {\n\t\t\t/**\n\t\t\t * Thrown when there is an attempt to make changes to the view tree when it is in incorrect state. This may\n\t\t\t * cause some unexpected behaviour and inconsistency between the DOM and the view.\n\t\t\t * This may be caused by:\n\t\t\t *\n\t\t\t * * calling {@link #change} or {@link #forceRender} during rendering process,\n\t\t\t * * calling {@link #change} or {@link #forceRender} inside of\n\t\t\t *   {@link module:engine/view/document~Document#registerPostFixer post-fixer function}.\n\t\t\t *\n\t\t\t * @error cannot-change-view-tree\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'cannot-change-view-tree: ' +\n\t\t\t\t'Attempting to make changes to the view when it is in an incorrect state: rendering or post-fixers are in progress. ' +\n\t\t\t\t'This may cause some unexpected behavior and inconsistency between the DOM and the view.',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\ttry {\n\t\t\t// Recursive call to view.change() method - execute listener immediately.\n\t\t\tif ( this._ongoingChange ) {\n\t\t\t\treturn callback( this._writer );\n\t\t\t}\n\n\t\t\t// This lock will assure that all recursive calls to view.change() will end up in same block - one \"render\"\n\t\t\t// event for all nested calls.\n\t\t\tthis._ongoingChange = true;\n\t\t\tconst callbackResult = callback( this._writer );\n\t\t\tthis._ongoingChange = false;\n\n\t\t\t// This lock is used by editing controller to render changes from outer most model.change() once. As plugins might call\n\t\t\t// view.change() inside model.change() block - this will ensures that postfixers and rendering are called once after all\n\t\t\t// changes. Also, we don't need to render anything if there're no changes since last rendering.\n\t\t\tif ( !this._renderingDisabled && this._hasChangedSinceTheLastRendering ) {\n\t\t\t\tthis._postFixersInProgress = true;\n\t\t\t\tthis.document._callPostFixers( this._writer );\n\t\t\t\tthis._postFixersInProgress = false;\n\n\t\t\t\tthis.fire( 'render' );\n\t\t\t}\n\n\t\t\treturn callbackResult;\n\t\t} catch ( err ) {\n\t\t\t// @if CK_DEBUG // throw err;\n\t\t\t/* istanbul ignore next */\n\t\t\tCKEditorError.rethrowUnexpectedError( err, this );\n\t\t}\n\t}\n\n\t/**\n\t * Forces rendering {@link module:engine/view/document~Document view document} to DOM. If any view changes are\n\t * currently in progress, rendering will start after all {@link #change change blocks} are processed.\n\t *\n\t * Note that this method is dedicated for special cases. All view changes should be wrapped in the {@link #change}\n\t * block and the view will automatically check whether it needs to render DOM or not.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `applying-view-changes-on-rendering` when\n\t * trying to re-render when rendering to DOM has already started.\n\t */\n\tforceRender() {\n\t\tthis._hasChangedSinceTheLastRendering = true;\n\t\tthis.change( () => {} );\n\t}\n\n\t/**\n\t * Destroys this instance. Makes sure that all observers are destroyed and listeners removed.\n\t */\n\tdestroy() {\n\t\tfor ( const observer of this._observers.values() ) {\n\t\t\tobserver.destroy();\n\t\t}\n\n\t\tthis.document.destroy();\n\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Creates position at the given location. The location can be specified as:\n\t *\n\t * * a {@link module:engine/view/position~Position position},\n\t * * parent element and offset (offset defaults to `0`),\n\t * * parent element and `'end'` (sets position at the end of that element),\n\t * * {@link module:engine/view/item~Item view item} and `'before'` or `'after'` (sets position before or after given view item).\n\t *\n\t * This method is a shortcut to other constructors such as:\n\t *\n\t * * {@link #createPositionBefore},\n\t * * {@link #createPositionAfter},\n\t *\n\t * @param {module:engine/view/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\n\t */\n\tcreatePositionAt( itemOrPosition, offset ) {\n\t\treturn Position._createAt( itemOrPosition, offset );\n\t}\n\n\t/**\n\t * Creates a new position after given view item.\n\t *\n\t * @param {module:engine/view/item~Item} item View item after which the position should be located.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tcreatePositionAfter( item ) {\n\t\treturn Position._createAfter( item );\n\t}\n\n\t/**\n\t * Creates a new position before given view item.\n\t *\n\t * @param {module:engine/view/item~Item} item View item before which the position should be located.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tcreatePositionBefore( item ) {\n\t\treturn Position._createBefore( item );\n\t}\n\n\t/**\n\t * Creates a range spanning from `start` position to `end` position.\n\t *\n\t * **Note:** This factory method creates it's own {@link module:engine/view/position~Position} instances basing on passed values.\n\t *\n\t * @param {module:engine/view/position~Position} start Start position.\n\t * @param {module:engine/view/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tcreateRange( start, end ) {\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Creates a range that starts before given {@link module:engine/view/item~Item view item} and ends after it.\n\t *\n\t * @param {module:engine/view/item~Item} item\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tcreateRangeOn( item ) {\n\t\treturn Range._createOn( item );\n\t}\n\n\t/**\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n\t * that element and ends after the last child of that element.\n\t *\n\t * @param {module:engine/view/element~Element} element Element which is a parent for the range.\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tcreateRangeIn( element ) {\n\t\treturn Range._createIn( element );\n\t}\n\n\t/**\n\t Creates new {@link module:engine/view/selection~Selection} instance.\n\t *\n\t * \t\t// Creates empty selection without ranges.\n\t *\t\tconst selection = view.createSelection();\n\t *\n\t *\t\t// Creates selection at the given range.\n\t *\t\tconst range = view.createRange( start, end );\n\t *\t\tconst selection = view.createSelection( range );\n\t *\n\t *\t\t// Creates selection at the given ranges\n\t * \t\tconst ranges = [ view.createRange( start1, end2 ), view.createRange( star2, end2 ) ];\n\t *\t\tconst selection = view.createSelection( ranges );\n\t *\n\t *\t\t// Creates selection from the other selection.\n\t *\t\tconst otherSelection = view.createSelection();\n\t *\t\tconst selection = view.createSelection( otherSelection );\n\t *\n\t *\t\t// Creates selection from the document selection.\n\t *\t\tconst selection = view.createSelection( editor.editing.view.document.selection );\n\t *\n\t * \t\t// Creates selection at the given position.\n\t *\t\tconst position = view.createPositionFromPath( root, path );\n\t *\t\tconst selection = view.createSelection( position );\n\t *\n\t *\t\t// Creates collapsed selection at the position of given item and offset.\n\t *\t\tconst paragraph = view.createContainerElement( 'paragraph' );\n\t *\t\tconst selection = view.createSelection( paragraph, offset );\n\t *\n\t *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\n\t *\t\t// first child of that element and ends after the last child of that element.\n\t *\t\tconst selection = view.createSelection( paragraph, 'in' );\n\t *\n\t *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\n\t *\t\t// just after the item.\n\t *\t\tconst selection = view.createSelection( paragraph, 'on' );\n\t *\n\t * `Selection`'s factory method allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n\t *\n\t *\t\t// Creates backward selection.\n\t *\t\tconst selection = view.createSelection( range, { backward: true } );\n\t *\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n\t * represented in other way, for example by applying proper CSS class.\n\t *\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n\t * (and be  properly handled by screen readers).\n\t *\n\t *\t\t// Creates fake selection with label.\n\t *\t\tconst selection = view.createSelection( range, { fake: true, label: 'foo' } );\n\t *\n\t * @param {module:engine/view/selection~Selectable} [selectable=null]\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n\t * @param {String} [options.label] Label for the fake selection.\n\t * @returns {module:engine/view/selection~Selection}\n\t */\n\tcreateSelection( selectable, placeOrOffset, options ) {\n\t\treturn new Selection( selectable, placeOrOffset, options );\n\t}\n\n\t/**\n\t * Disables or enables rendering. If the flag is set to `true` then the rendering will be disabled.\n\t * If the flag is set to `false` and if there was some change in the meantime, then the rendering action will be performed.\n\t *\n\t * @protected\n\t * @param {Boolean} flag A flag indicates whether the rendering should be disabled.\n\t */\n\t_disableRendering( flag ) {\n\t\tthis._renderingDisabled = flag;\n\n\t\tif ( flag == false ) {\n\t\t\t// Render when you stop blocking rendering.\n\t\t\tthis.change( () => {} );\n\t\t}\n\t}\n\n\t/**\n\t * Renders all changes. In order to avoid triggering the observers (e.g. mutations) all observers are disabled\n\t * before rendering and re-enabled after that.\n\t *\n\t * @private\n\t */\n\t_render() {\n\t\tthis.isRenderingInProgress = true;\n\t\tthis.disableObservers();\n\t\tthis._renderer.render();\n\t\tthis.enableObservers();\n\t\tthis.isRenderingInProgress = false;\n\t}\n\n\t/**\n\t * Fired after a topmost {@link module:engine/view/view~View#change change block} and all\n\t * {@link module:engine/view/document~Document#registerPostFixer post-fixers} are executed.\n\t *\n\t * Actual rendering is performed as a first listener on 'normal' priority.\n\t *\n\t *\t\tview.on( 'render', () => {\n\t *\t\t\t// Rendering to the DOM is complete.\n\t *\t\t} );\n\t *\n\t * This event is useful when you want to update interface elements after the rendering, e.g. position of the\n\t * balloon panel. If you wants to change view structure use\n\t * {@link module:engine/view/document~Document#registerPostFixer post-fixers}.\n\t *\n\t * @event module:engine/view/view~View#event:render\n\t */\n}\n\nmix( View, ObservableMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/node\n */\n\nimport toMap from '@ckeditor/ckeditor5-utils/src/tomap';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\n\n// To check if component is loaded more than once.\nimport '@ckeditor/ckeditor5-utils/src/version';\n\n/**\n * Model node. Most basic structure of model tree.\n *\n * This is an abstract class that is a base for other classes representing different nodes in model.\n *\n * **Note:** If a node is detached from the model tree, you can manipulate it using it's API.\n * However, it is **very important** that nodes already attached to model tree should be only changed through\n * {@link module:engine/model/writer~Writer Writer API}.\n *\n * Changes done by `Node` methods, like {@link module:engine/model/element~Element#_insertChild _insertChild} or\n * {@link module:engine/model/node~Node#_setAttribute _setAttribute}\n * do not generate {@link module:engine/model/operation/operation~Operation operations}\n * which are essential for correct editor work if you modify nodes in {@link module:engine/model/document~Document document} root.\n *\n * The flow of working on `Node` (and classes that inherits from it) is as such:\n * 1. You can create a `Node` instance, modify it using it's API.\n * 2. Add `Node` to the model using `Batch` API.\n * 3. Change `Node` that was already added to the model using `Batch` API.\n *\n * Similarly, you cannot use `Batch` API on a node that has not been added to the model tree, with the exception\n * of {@link module:engine/model/writer~Writer#insert inserting} that node to the model tree.\n *\n * Be aware that using {@link module:engine/model/writer~Writer#remove remove from Batch API} does not allow to use `Node` API because\n * the information about `Node` is still kept in model document.\n *\n * In case of {@link module:engine/model/element~Element element node}, adding and removing children also counts as changing a node and\n * follows same rules.\n */\nexport default class Node {\n\t/**\n\t * Creates a model node.\n\t *\n\t * This is an abstract class, so this constructor should not be used directly.\n\t *\n\t * @abstract\n\t * @param {Object} [attrs] Node's attributes. See {@link module:utils/tomap~toMap} for a list of accepted values.\n\t */\n\tconstructor( attrs ) {\n\t\t/**\n\t\t * Parent of this node. It could be {@link module:engine/model/element~Element}\n\t\t * or {@link module:engine/model/documentfragment~DocumentFragment}.\n\t\t * Equals to `null` if the node has no parent.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n\t\t */\n\t\tthis.parent = null;\n\n\t\t/**\n\t\t * Attributes set on this node.\n\t\t *\n\t\t * @private\n\t\t * @member {Map} module:engine/model/node~Node#_attrs\n\t\t */\n\t\tthis._attrs = toMap( attrs );\n\t}\n\n\t/**\n\t * Index of this node in it's parent or `null` if the node has no parent.\n\t *\n\t * Accessing this property throws an error if this node's parent element does not contain it.\n\t * This means that model tree got broken.\n\t *\n\t * @readonly\n\t * @type {Number|null}\n\t */\n\tget index() {\n\t\tlet pos;\n\n\t\tif ( !this.parent ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( ( pos = this.parent.getChildIndex( this ) ) === null ) {\n\t\t\tthrow new CKEditorError( 'model-node-not-found-in-parent: The node\\'s parent does not contain this node.', this );\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\t/**\n\t * Offset at which this node starts in it's parent. It is equal to the sum of {@link #offsetSize offsetSize}\n\t * of all it's previous siblings. Equals to `null` if node has no parent.\n\t *\n\t * Accessing this property throws an error if this node's parent element does not contain it.\n\t * This means that model tree got broken.\n\t *\n\t * @readonly\n\t * @type {Number|null}\n\t */\n\tget startOffset() {\n\t\tlet pos;\n\n\t\tif ( !this.parent ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( ( pos = this.parent.getChildStartOffset( this ) ) === null ) {\n\t\t\tthrow new CKEditorError( 'model-node-not-found-in-parent: The node\\'s parent does not contain this node.', this );\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\t/**\n\t * Offset size of this node. Represents how much \"offset space\" is occupied by the node in it's parent.\n\t * It is important for {@link module:engine/model/position~Position position}. When node has `offsetSize` greater than `1`, position\n\t * can be placed between that node start and end. `offsetSize` greater than `1` is for nodes that represents more\n\t * than one entity, i.e. {@link module:engine/model/text~Text text node}.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget offsetSize() {\n\t\treturn 1;\n\t}\n\n\t/**\n\t * Offset at which this node ends in it's parent. It is equal to the sum of this node's\n\t * {@link module:engine/model/node~Node#startOffset start offset} and {@link #offsetSize offset size}.\n\t * Equals to `null` if the node has no parent.\n\t *\n\t * @readonly\n\t * @type {Number|null}\n\t */\n\tget endOffset() {\n\t\tif ( !this.parent ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.startOffset + this.offsetSize;\n\t}\n\n\t/**\n\t * Node's next sibling or `null` if the node is a last child of it's parent or if the node has no parent.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/node~Node|null}\n\t */\n\tget nextSibling() {\n\t\tconst index = this.index;\n\n\t\treturn ( index !== null && this.parent.getChild( index + 1 ) ) || null;\n\t}\n\n\t/**\n\t * Node's previous sibling or `null` if the node is a first child of it's parent or if the node has no parent.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/node~Node|null}\n\t */\n\tget previousSibling() {\n\t\tconst index = this.index;\n\n\t\treturn ( index !== null && this.parent.getChild( index - 1 ) ) || null;\n\t}\n\n\t/**\n\t * The top-most ancestor of the node. If node has no parent it is the root itself. If the node is a part\n\t * of {@link module:engine/model/documentfragment~DocumentFragment}, it's `root` is equal to that `DocumentFragment`.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/node~Node|module:engine/model/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\tlet root = this; // eslint-disable-line consistent-this\n\n\t\twhile ( root.parent ) {\n\t\t\troot = root.parent;\n\t\t}\n\n\t\treturn root;\n\t}\n\n\t/**\n\t * {@link module:engine/model/document~Document Document} that owns this node or `null` if the node has no parent or is inside\n\t * a {@link module:engine/model/documentfragment~DocumentFragment DocumentFragment}.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/document~Document|null}\n\t */\n\tget document() {\n\t\t// This is a top element of a sub-tree.\n\t\tif ( this.root == this ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Root may be `DocumentFragment` which does not have document property.\n\t\treturn this.root.document || null;\n\t}\n\n\t/**\n\t * Gets path to the node. The path is an array containing starting offsets of consecutive ancestors of this node,\n\t * beginning from {@link module:engine/model/node~Node#root root}, down to this node's starting offset. The path can be used to\n\t * create {@link module:engine/model/position~Position Position} instance.\n\t *\n\t *\t\tconst abc = new Text( 'abc' );\n\t *\t\tconst foo = new Text( 'foo' );\n\t *\t\tconst h1 = new Element( 'h1', null, new Text( 'header' ) );\n\t *\t\tconst p = new Element( 'p', null, [ abc, foo ] );\n\t *\t\tconst div = new Element( 'div', null, [ h1, p ] );\n\t *\t\tfoo.getPath(); // Returns [ 1, 3 ]. `foo` is in `p` which is in `div`. `p` starts at offset 1, while `foo` at 3.\n\t *\t\th1.getPath(); // Returns [ 0 ].\n\t *\t\tdiv.getPath(); // Returns [].\n\t *\n\t * @returns {Array.<Number>} The path.\n\t */\n\tgetPath() {\n\t\tconst path = [];\n\t\tlet node = this; // eslint-disable-line consistent-this\n\n\t\twhile ( node.parent ) {\n\t\t\tpath.unshift( node.startOffset );\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\treturn path;\n\t}\n\n\t/**\n\t * Returns ancestors array of this node.\n\t *\n\t * @param {Object} options Options object.\n\t * @param {Boolean} [options.includeSelf=false] When set to `true` this node will be also included in parent's array.\n\t * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from node's parent to root element,\n\t * otherwise root element will be the first item in the array.\n\t * @returns {Array} Array with ancestors.\n\t */\n\tgetAncestors( options = { includeSelf: false, parentFirst: false } ) {\n\t\tconst ancestors = [];\n\t\tlet parent = options.includeSelf ? this : this.parent;\n\n\t\twhile ( parent ) {\n\t\t\tancestors[ options.parentFirst ? 'push' : 'unshift' ]( parent );\n\t\t\tparent = parent.parent;\n\t\t}\n\n\t\treturn ancestors;\n\t}\n\n\t/**\n\t * Returns a {@link module:engine/model/element~Element} or {@link module:engine/model/documentfragment~DocumentFragment}\n\t * which is a common ancestor of both nodes.\n\t *\n\t * @param {module:engine/model/node~Node} node The second node.\n\t * @param {Object} options Options object.\n\t * @param {Boolean} [options.includeSelf=false] When set to `true` both nodes will be considered \"ancestors\" too.\n\t * Which means that if e.g. node A is inside B, then their common ancestor will be B.\n\t * @returns {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n\t */\n\tgetCommonAncestor( node, options = {} ) {\n\t\tconst ancestorsA = this.getAncestors( options );\n\t\tconst ancestorsB = node.getAncestors( options );\n\n\t\tlet i = 0;\n\n\t\twhile ( ancestorsA[ i ] == ancestorsB[ i ] && ancestorsA[ i ] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i === 0 ? null : ancestorsA[ i - 1 ];\n\t}\n\n\t/**\n\t * Returns whether this node is before given node. `false` is returned if nodes are in different trees (for example,\n\t * in different {@link module:engine/model/documentfragment~DocumentFragment}s).\n\t *\n\t * @param {module:engine/model/node~Node} node Node to compare with.\n\t * @returns {Boolean}\n\t */\n\tisBefore( node ) {\n\t\t// Given node is not before this node if they are same.\n\t\tif ( this == node ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Return `false` if it is impossible to compare nodes.\n\t\tif ( this.root !== node.root ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst thisPath = this.getPath();\n\t\tconst nodePath = node.getPath();\n\n\t\tconst result = compareArrays( thisPath, nodePath );\n\n\t\tswitch ( result ) {\n\t\t\tcase 'prefix':\n\t\t\t\treturn true;\n\n\t\t\tcase 'extension':\n\t\t\t\treturn false;\n\n\t\t\tdefault:\n\t\t\t\treturn thisPath[ result ] < nodePath[ result ];\n\t\t}\n\t}\n\n\t/**\n\t * Returns whether this node is after given node. `false` is returned if nodes are in different trees (for example,\n\t * in different {@link module:engine/model/documentfragment~DocumentFragment}s).\n\t *\n\t * @param {module:engine/model/node~Node} node Node to compare with.\n\t * @returns {Boolean}\n\t */\n\tisAfter( node ) {\n\t\t// Given node is not before this node if they are same.\n\t\tif ( this == node ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Return `false` if it is impossible to compare nodes.\n\t\tif ( this.root !== node.root ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// In other cases, just check if the `node` is before, and return the opposite.\n\t\treturn !this.isBefore( node );\n\t}\n\n\t/**\n\t * Checks if the node has an attribute with given key.\n\t *\n\t * @param {String} key Key of attribute to check.\n\t * @returns {Boolean} `true` if attribute with given key is set on node, `false` otherwise.\n\t */\n\thasAttribute( key ) {\n\t\treturn this._attrs.has( key );\n\t}\n\n\t/**\n\t * Gets an attribute value for given key or `undefined` if that attribute is not set on node.\n\t *\n\t * @param {String} key Key of attribute to look for.\n\t * @returns {*} Attribute value or `undefined`.\n\t */\n\tgetAttribute( key ) {\n\t\treturn this._attrs.get( key );\n\t}\n\n\t/**\n\t * Returns iterator that iterates over this node's attributes.\n\t *\n\t * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\n\t * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n\t *\n\t * @returns {Iterable.<*>}\n\t */\n\tgetAttributes() {\n\t\treturn this._attrs.entries();\n\t}\n\n\t/**\n\t * Returns iterator that iterates over this node's attribute keys.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\tgetAttributeKeys() {\n\t\treturn this._attrs.keys();\n\t}\n\n\t/**\n\t * Converts `Node` to plain object and returns it.\n\t *\n\t * @returns {Object} `Node` converted to plain object.\n\t */\n\ttoJSON() {\n\t\tconst json = {};\n\n\t\t// Serializes attributes to the object.\n\t\t// attributes = { a: 'foo', b: 1, c: true }.\n\t\tif ( this._attrs.size ) {\n\t\t\tjson.attributes = Array.from( this._attrs ).reduce( ( result, attr ) => {\n\t\t\t\tresult[ attr[ 0 ] ] = attr[ 1 ];\n\n\t\t\t\treturn result;\n\t\t\t}, {} );\n\t\t}\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t * This method is useful when processing model objects that are of unknown type. For example, a function\n\t * may return a {@link module:engine/model/documentfragment~DocumentFragment} or a {@link module:engine/model/node~Node}\n\t * that can be either a text node or an element. This method can be used to check what kind of object is returned.\n\t *\n\t *\t\tsomeObject.is( 'element' ); // -> true if this is an element\n\t *\t\tsomeObject.is( 'node' ); // -> true if this is a node (a text node or an element)\n\t *\t\tsomeObject.is( 'documentFragment' ); // -> true if this is a document fragment\n\t *\n\t * Since this method is also available on a range of view objects, you can prefix the type of the object with\n\t * `model:` or `view:` to check, for example, if this is the model's or view's element:\n\t *\n\t *\t\tmodelElement.is( 'model:element' ); // -> true\n\t *\t\tmodelElement.is( 'view:element' ); // -> false\n\t *\n\t * By using this method it is also possible to check a name of an element:\n\t *\n\t *\t\timageElement.is( 'image' ); // -> true\n\t *\t\timageElement.is( 'element', 'image' ); // -> same as above\n\t *\t\timageElement.is( 'model:element', 'image' ); // -> same as above, but more precise\n\t *\n\t * The list of model objects which implement the `is()` method:\n\t *\n\t * * {@link module:engine/model/node~Node#is `Node#is()`}\n\t * * {@link module:engine/model/text~Text#is `Text#is()`}\n\t * * {@link module:engine/model/element~Element#is `Element#is()`}\n\t * * {@link module:engine/model/rootelement~RootElement#is `RootElement#is()`}\n\t * * {@link module:engine/model/position~Position#is `Position#is()`}\n\t * * {@link module:engine/model/liveposition~LivePosition#is `LivePosition#is()`}\n\t * * {@link module:engine/model/range~Range#is `Range#is()`}\n\t * * {@link module:engine/model/liverange~LiveRange#is `LiveRange#is()`}\n\t * * {@link module:engine/model/documentfragment~DocumentFragment#is `DocumentFragment#is()`}\n\t * * {@link module:engine/model/selection~Selection#is `Selection#is()`}\n\t * * {@link module:engine/model/documentselection~DocumentSelection#is `DocumentSelection#is()`}\n\t * * {@link module:engine/model/markercollection~Marker#is `Marker#is()`}\n\t * * {@link module:engine/model/textproxy~TextProxy#is `TextProxy#is()`}\n\t *\n\t * @method #is\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type == 'node' || type == 'model:node';\n\t}\n\n\t/**\n\t * Creates a copy of this node, that is a node with exactly same attributes, and returns it.\n\t *\n\t * @protected\n\t * @returns {module:engine/model/node~Node} Node with same attributes as this node.\n\t */\n\t_clone() {\n\t\treturn new Node( this._attrs );\n\t}\n\n\t/**\n\t * Removes this node from it's parent.\n\t *\n\t * @see module:engine/model/writer~Writer#remove\n\t * @protected\n\t */\n\t_remove() {\n\t\tthis.parent._removeChildren( this.index );\n\t}\n\n\t/**\n\t * Sets attribute on the node. If attribute with the same key already is set, it's value is overwritten.\n\t *\n\t * @see module:engine/model/writer~Writer#setAttribute\n\t * @protected\n\t * @param {String} key Key of attribute to set.\n\t * @param {*} value Attribute value.\n\t */\n\t_setAttribute( key, value ) {\n\t\tthis._attrs.set( key, value );\n\t}\n\n\t/**\n\t * Removes all attributes from the node and sets given attributes.\n\t *\n\t * @see module:engine/model/writer~Writer#setAttributes\n\t * @protected\n\t * @param {Object} [attrs] Attributes to set. See {@link module:utils/tomap~toMap} for a list of accepted values.\n\t */\n\t_setAttributesTo( attrs ) {\n\t\tthis._attrs = toMap( attrs );\n\t}\n\n\t/**\n\t * Removes an attribute with given key from the node.\n\t *\n\t * @see module:engine/model/writer~Writer#removeAttribute\n\t * @protected\n\t * @param {String} key Key of attribute to remove.\n\t * @returns {Boolean} `true` if the attribute was set on the element, `false` otherwise.\n\t */\n\t_removeAttribute( key ) {\n\t\treturn this._attrs.delete( key );\n\t}\n\n\t/**\n\t * Removes all attributes from the node.\n\t *\n\t * @see module:engine/model/writer~Writer#clearAttributes\n\t * @protected\n\t */\n\t_clearAttributes() {\n\t\tthis._attrs.clear();\n\t}\n}\n\n/**\n * The node's parent does not contain this node.\n *\n * This error may be thrown from corrupted trees.\n *\n * @error model-node-not-found-in-parent\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/text\n */\n\nimport Node from './node';\n\n// @if CK_DEBUG_ENGINE // const { convertMapToStringifiedObject } = require( '../dev-utils/utils' );\n\n/**\n * Model text node. Type of {@link module:engine/model/node~Node node} that contains {@link module:engine/model/text~Text#data text data}.\n *\n * **Important:** see {@link module:engine/model/node~Node} to read about restrictions using `Text` and `Node` API.\n *\n * **Note:** keep in mind that `Text` instances might indirectly got removed from model tree when model is changed.\n * This happens when {@link module:engine/model/writer~Writer model writer} is used to change model and the text node is merged with\n * another text node. Then, both text nodes are removed and a new text node is inserted into the model. Because of\n * this behavior, keeping references to `Text` is not recommended. Instead, consider creating\n * {@link module:engine/model/liveposition~LivePosition live position} placed before the text node.\n *\n * @extends module:engine/model/node~Node\n */\nexport default class Text extends Node {\n\t/**\n\t * Creates a text node.\n\t *\n\t * **Note:** Constructor of this class shouldn't be used directly in the code.\n\t * Use the {@link module:engine/model/writer~Writer#createText} method instead.\n\t *\n\t * @protected\n\t * @param {String} data Node's text.\n\t * @param {Object} [attrs] Node's attributes. See {@link module:utils/tomap~toMap} for a list of accepted values.\n\t */\n\tconstructor( data, attrs ) {\n\t\tsuper( attrs );\n\n\t\t/**\n\t\t * Text data contained in this text node.\n\t\t *\n\t\t * @protected\n\t\t * @type {String}\n\t\t */\n\t\tthis._data = data || '';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget offsetSize() {\n\t\treturn this.data.length;\n\t}\n\n\t/**\n\t * Returns a text data contained in the node.\n\t *\n\t * @readonly\n\t * @type {String}\n\t */\n\tget data() {\n\t\treturn this._data;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\ttext.is( 'text' ); // -> true\n\t *\t\ttext.is( 'node' ); // -> true\n\t *\t\ttext.is( 'model:text' ); // -> true\n\t *\t\ttext.is( 'model:node' ); // -> true\n\t *\n\t *\t\ttext.is( 'view:text' ); // -> false\n\t *\t\ttext.is( 'documentSelection' ); // -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type Type to check when `name` parameter is present.\n\t * Otherwise, it acts like the `name` parameter.\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type == 'text' || type == 'model:text' || super.is( type );\n\t}\n\n\t/**\n\t * Converts `Text` instance to plain object and returns it.\n\t *\n\t * @returns {Object} `Text` instance converted to plain object.\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.data = this.data;\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * Creates a copy of this text node and returns it. Created text node has same text data and attributes as original text node.\n\t *\n\t * @protected\n\t * @returns {module:engine/model/text~Text} `Text` instance created using given plain object.\n\t */\n\t_clone() {\n\t\treturn new Text( this.data, this.getAttributes() );\n\t}\n\n\t/**\n\t * Creates a `Text` instance from given plain object (i.e. parsed JSON string).\n\t *\n\t * @param {Object} json Plain object to be converted to `Text`.\n\t * @returns {module:engine/model/text~Text} `Text` instance created using given plain object.\n\t */\n\tstatic fromJSON( json ) {\n\t\treturn new Text( json.data, json.attributes );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `#${ this.data }`;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logExtended() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( `ModelText: ${ this }, attrs: ${ convertMapToStringifiedObject( this.getAttributes() ) }` );\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // log() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ModelText: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/textproxy\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n// @if CK_DEBUG_ENGINE // const { convertMapToStringifiedObject } = require( '../dev-utils/utils' );\n\n/**\n * `TextProxy` represents a part of {@link module:engine/model/text~Text text node}.\n *\n * Since {@link module:engine/model/position~Position positions} can be placed between characters of a text node,\n * {@link module:engine/model/range~Range ranges} may contain only parts of text nodes. When {@link module:engine/model/range~Range#getItems\n * getting items}\n * contained in such range, we need to represent a part of that text node, since returning the whole text node would be incorrect.\n * `TextProxy` solves this issue.\n *\n * `TextProxy` has an API similar to {@link module:engine/model/text~Text Text} and allows to do most of the common tasks performed\n * on model nodes.\n *\n * **Note:** Some `TextProxy` instances may represent whole text node, not just a part of it.\n * See {@link module:engine/model/textproxy~TextProxy#isPartial}.\n *\n * **Note:** `TextProxy` is not an instance of {@link module:engine/model/node~Node node}. Keep this in mind when using it as a\n * parameter of methods.\n *\n * **Note:** `TextProxy` is a readonly interface. If you want to perform changes on model data represented by a `TextProxy`\n * use {@link module:engine/model/writer~Writer model writer API}.\n *\n * **Note:** `TextProxy` instances are created on the fly, basing on the current state of model. Because of this, it is\n * highly unrecommended to store references to `TextProxy` instances. `TextProxy` instances are not refreshed when\n * model changes, so they might get invalidated. Instead, consider creating {@link module:engine/model/liveposition~LivePosition live\n * position}.\n *\n * `TextProxy` instances are created by {@link module:engine/model/treewalker~TreeWalker model tree walker}. You should not need to create\n * an instance of this class by your own.\n */\nexport default class TextProxy {\n\t/**\n\t * Creates a text proxy.\n\t *\n\t * @protected\n\t * @param {module:engine/model/text~Text} textNode Text node which part is represented by this text proxy.\n\t * @param {Number} offsetInText Offset in {@link module:engine/model/textproxy~TextProxy#textNode text node} from which the text proxy\n\t * starts.\n\t * @param {Number} length Text proxy length, that is how many text node's characters, starting from `offsetInText` it represents.\n\t * @constructor\n\t */\n\tconstructor( textNode, offsetInText, length ) {\n\t\t/**\n\t\t * Text node which part is represented by this text proxy.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/text~Text}\n\t\t */\n\t\tthis.textNode = textNode;\n\n\t\tif ( offsetInText < 0 || offsetInText > textNode.offsetSize ) {\n\t\t\t/**\n\t\t\t * Given `offsetInText` value is incorrect.\n\t\t\t *\n\t\t\t * @error model-textproxy-wrong-offsetintext\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-textproxy-wrong-offsetintext: Given offsetInText value is incorrect.', this );\n\t\t}\n\n\t\tif ( length < 0 || offsetInText + length > textNode.offsetSize ) {\n\t\t\t/**\n\t\t\t * Given `length` value is incorrect.\n\t\t\t *\n\t\t\t * @error model-textproxy-wrong-length\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-textproxy-wrong-length: Given length value is incorrect.', this );\n\t\t}\n\n\t\t/**\n\t\t * Text data represented by this text proxy.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.data = textNode.data.substring( offsetInText, offsetInText + length );\n\n\t\t/**\n\t\t * Offset in {@link module:engine/model/textproxy~TextProxy#textNode text node} from which the text proxy starts.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number}\n\t\t */\n\t\tthis.offsetInText = offsetInText;\n\t}\n\n\t/**\n\t * Offset at which this text proxy starts in it's parent.\n\t *\n\t * @see module:engine/model/node~Node#startOffset\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget startOffset() {\n\t\treturn this.textNode.startOffset !== null ? this.textNode.startOffset + this.offsetInText : null;\n\t}\n\n\t/**\n\t * Offset size of this text proxy. Equal to the number of characters represented by the text proxy.\n\t *\n\t * @see module:engine/model/node~Node#offsetSize\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget offsetSize() {\n\t\treturn this.data.length;\n\t}\n\n\t/**\n\t * Offset at which this text proxy ends in it's parent.\n\t *\n\t * @see module:engine/model/node~Node#endOffset\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget endOffset() {\n\t\treturn this.startOffset !== null ? this.startOffset + this.offsetSize : null;\n\t}\n\n\t/**\n\t * Flag indicating whether `TextProxy` instance covers only part of the original {@link module:engine/model/text~Text text node}\n\t * (`true`) or the whole text node (`false`).\n\t *\n\t * This is `false` when text proxy starts at the very beginning of {@link module:engine/model/textproxy~TextProxy#textNode textNode}\n\t * ({@link module:engine/model/textproxy~TextProxy#offsetInText offsetInText} equals `0`) and text proxy sizes is equal to\n\t * text node size.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isPartial() {\n\t\treturn this.offsetSize !== this.textNode.offsetSize;\n\t}\n\n\t/**\n\t * Parent of this text proxy, which is same as parent of text node represented by this text proxy.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n\t */\n\tget parent() {\n\t\treturn this.textNode.parent;\n\t}\n\n\t/**\n\t * Root of this text proxy, which is same as root of text node represented by this text proxy.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/node~Node|module:engine/model/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\treturn this.textNode.root;\n\t}\n\n\t/**\n\t * {@link module:engine/model/document~Document Document} that owns text node represented by this text proxy or `null` if the text node\n\t * has no parent or is inside a {@link module:engine/model/documentfragment~DocumentFragment DocumentFragment}.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/document~Document|null}\n\t */\n\tget document() {\n\t\treturn this.textNode.document;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\ttextProxy.is( 'textProxy' ); // -> true\n\t *\t\ttextProxy.is( 'model:textProxy' ); // -> true\n\t *\n\t *\t\ttextProxy.is( 'view:textProxy' ); // -> false\n\t *\t\ttextProxy.is( 'range' ); // -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type == 'textProxy' || type == 'model:textProxy';\n\t}\n\n\t/**\n\t * Gets path to this text proxy.\n\t *\n\t * @see module:engine/model/node~Node#getPath\n\t * @returns {Array.<Number>}\n\t */\n\tgetPath() {\n\t\tconst path = this.textNode.getPath();\n\n\t\tif ( path.length > 0 ) {\n\t\t\tpath[ path.length - 1 ] += this.offsetInText;\n\t\t}\n\n\t\treturn path;\n\t}\n\n\t/**\n\t * Returns ancestors array of this text proxy.\n\t *\n\t * @param {Object} options Options object.\n\t * @param {Boolean} [options.includeSelf=false] When set to `true` this text proxy will be also included in parent's array.\n\t * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from text proxy parent to root element,\n\t * otherwise root element will be the first item in the array.\n\t * @returns {Array} Array with ancestors.\n\t */\n\tgetAncestors( options = { includeSelf: false, parentFirst: false } ) {\n\t\tconst ancestors = [];\n\t\tlet parent = options.includeSelf ? this : this.parent;\n\n\t\twhile ( parent ) {\n\t\t\tancestors[ options.parentFirst ? 'push' : 'unshift' ]( parent );\n\t\t\tparent = parent.parent;\n\t\t}\n\n\t\treturn ancestors;\n\t}\n\n\t/**\n\t * Checks if this text proxy has an attribute for given key.\n\t *\n\t * @param {String} key Key of attribute to check.\n\t * @returns {Boolean} `true` if attribute with given key is set on text proxy, `false` otherwise.\n\t */\n\thasAttribute( key ) {\n\t\treturn this.textNode.hasAttribute( key );\n\t}\n\n\t/**\n\t * Gets an attribute value for given key or `undefined` if that attribute is not set on text proxy.\n\t *\n\t * @param {String} key Key of attribute to look for.\n\t * @returns {*} Attribute value or `undefined`.\n\t */\n\tgetAttribute( key ) {\n\t\treturn this.textNode.getAttribute( key );\n\t}\n\n\t/**\n\t * Returns iterator that iterates over this node's attributes. Attributes are returned as arrays containing two\n\t * items. First one is attribute key and second is attribute value.\n\t *\n\t * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n\t *\n\t * @returns {Iterable.<*>}\n\t */\n\tgetAttributes() {\n\t\treturn this.textNode.getAttributes();\n\t}\n\n\t/**\n\t * Returns iterator that iterates over this node's attribute keys.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\tgetAttributeKeys() {\n\t\treturn this.textNode.getAttributeKeys();\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `#${ this.data }`;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // log() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ModelTextProxy: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logExtended() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( `ModelTextProxy: ${ this }, ` +\n\t// @if CK_DEBUG_ENGINE // \t\t`attrs: ${ convertMapToStringifiedObject( this.getAttributes() ) }` );\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/nodelist\n */\n\nimport Node from './node';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Provides an interface to operate on a list of {@link module:engine/model/node~Node nodes}. `NodeList` is used internally\n * in classes like {@link module:engine/model/element~Element Element}\n * or {@link module:engine/model/documentfragment~DocumentFragment DocumentFragment}.\n */\nexport default class NodeList {\n\t/**\n\t * Creates an empty node list.\n\t *\n\t * @protected\n\t * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes contained in this node list.\n\t */\n\tconstructor( nodes ) {\n\t\t/**\n\t\t * Nodes contained in this node list.\n\t\t *\n\t\t * @private\n\t\t * @member {Array.<module:engine/model/node~Node>}\n\t\t */\n\t\tthis._nodes = [];\n\n\t\tif ( nodes ) {\n\t\t\tthis._insertNodes( 0, nodes );\n\t\t}\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * Iterates over all nodes contained inside this node list.\n\t *\n\t * @returns {Iterable.<module:engine/model/node~Node>}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this._nodes[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Number of nodes contained inside this node list.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget length() {\n\t\treturn this._nodes.length;\n\t}\n\n\t/**\n\t * Sum of {@link module:engine/model/node~Node#offsetSize offset sizes} of all nodes contained inside this node list.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget maxOffset() {\n\t\treturn this._nodes.reduce( ( sum, node ) => sum + node.offsetSize, 0 );\n\t}\n\n\t/**\n\t * Gets the node at the given index. Returns `null` if incorrect index was passed.\n\t *\n\t * @param {Number} index Index of node.\n\t * @returns {module:engine/model/node~Node|null} Node at given index.\n\t */\n\tgetNode( index ) {\n\t\treturn this._nodes[ index ] || null;\n\t}\n\n\t/**\n\t * Returns an index of the given node. Returns `null` if given node is not inside this node list.\n\t *\n\t * @param {module:engine/model/node~Node} node Child node to look for.\n\t * @returns {Number|null} Child node's index.\n\t */\n\tgetNodeIndex( node ) {\n\t\tconst index = this._nodes.indexOf( node );\n\n\t\treturn index == -1 ? null : index;\n\t}\n\n\t/**\n\t * Returns the starting offset of given node. Starting offset is equal to the sum of\n\t * {@link module:engine/model/node~Node#offsetSize offset sizes} of all nodes that are before this node in this node list.\n\t *\n\t * @param {module:engine/model/node~Node} node Node to look for.\n\t * @returns {Number|null} Node's starting offset.\n\t */\n\tgetNodeStartOffset( node ) {\n\t\tconst index = this.getNodeIndex( node );\n\n\t\treturn index === null ? null : this._nodes.slice( 0, index ).reduce( ( sum, node ) => sum + node.offsetSize, 0 );\n\t}\n\n\t/**\n\t * Converts index to offset in node list.\n\t *\n\t * Returns starting offset of a node that is at given index. Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError}\n\t * `model-nodelist-index-out-of-bounds` if given index is less than `0` or more than {@link #length}.\n\t *\n\t * @param {Number} index Node's index.\n\t * @returns {Number} Node's starting offset.\n\t */\n\tindexToOffset( index ) {\n\t\tif ( index == this._nodes.length ) {\n\t\t\treturn this.maxOffset;\n\t\t}\n\n\t\tconst node = this._nodes[ index ];\n\n\t\tif ( !node ) {\n\t\t\t/**\n\t\t\t * Given index cannot be found in the node list.\n\t\t\t *\n\t\t\t * @error nodelist-index-out-of-bounds\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-nodelist-index-out-of-bounds: Given index cannot be found in the node list.', this );\n\t\t}\n\n\t\treturn this.getNodeStartOffset( node );\n\t}\n\n\t/**\n\t * Converts offset in node list to index.\n\t *\n\t * Returns index of a node that occupies given offset. Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError}\n\t * `model-nodelist-offset-out-of-bounds` if given offset is less than `0` or more than {@link #maxOffset}.\n\t *\n\t * @param {Number} offset Offset to look for.\n\t * @returns {Number} Index of a node that occupies given offset.\n\t */\n\toffsetToIndex( offset ) {\n\t\tlet totalOffset = 0;\n\n\t\tfor ( const node of this._nodes ) {\n\t\t\tif ( offset >= totalOffset && offset < totalOffset + node.offsetSize ) {\n\t\t\t\treturn this.getNodeIndex( node );\n\t\t\t}\n\n\t\t\ttotalOffset += node.offsetSize;\n\t\t}\n\n\t\tif ( totalOffset != offset ) {\n\t\t\t/**\n\t\t\t * Given offset cannot be found in the node list.\n\t\t\t *\n\t\t\t * @error model-nodelist-offset-out-of-bounds\n\t\t\t * @param {Number} offset\n\t\t\t * @param {module:engine/model/nodelist~NodeList} nodeList Stringified node list.\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-nodelist-offset-out-of-bounds: Given offset cannot be found in the node list.',\n\t\t\t\tthis,\n\t\t\t\t{\n\t\t\t\t\toffset,\n\t\t\t\t\tnodeList: this\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\treturn this.length;\n\t}\n\n\t/**\n\t * Inserts given nodes at given index.\n\t *\n\t * @protected\n\t * @param {Number} index Index at which nodes should be inserted.\n\t * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes to be inserted.\n\t */\n\t_insertNodes( index, nodes ) {\n\t\t// Validation.\n\t\tfor ( const node of nodes ) {\n\t\t\tif ( !( node instanceof Node ) ) {\n\t\t\t\t/**\n\t\t\t\t * Trying to insert an object which is not a Node instance.\n\t\t\t\t *\n\t\t\t\t * @error nodelist-insertNodes-not-node\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'model-nodelist-insertNodes-not-node: Trying to insert an object which is not a Node instance.',\n\t\t\t\t\tthis\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tthis._nodes.splice( index, 0, ...nodes );\n\t}\n\n\t/**\n\t * Removes one or more nodes starting at the given index.\n\t *\n\t * @protected\n\t * @param {Number} indexStart Index of the first node to remove.\n\t * @param {Number} [howMany=1] Number of nodes to remove.\n\t * @returns {Array.<module:engine/model/node~Node>} Array containing removed nodes.\n\t */\n\t_removeNodes( indexStart, howMany = 1 ) {\n\t\treturn this._nodes.splice( indexStart, howMany );\n\t}\n\n\t/**\n\t * Converts `NodeList` instance to an array containing nodes that were inserted in the node list. Nodes\n\t * are also converted to their plain object representation.\n\t *\n\t * @returns {Array.<module:engine/model/node~Node>} `NodeList` instance converted to `Array`.\n\t */\n\ttoJSON() {\n\t\treturn this._nodes.map( node => node.toJSON() );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/element\n */\n\nimport Node from './node';\nimport NodeList from './nodelist';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\n\n// @if CK_DEBUG_ENGINE // const { stringifyMap, convertMapToStringifiedObject, convertMapToTags } = require( '../dev-utils/utils' );\n\n/**\n * Model element. Type of {@link module:engine/model/node~Node node} that has a {@link module:engine/model/element~Element#name name} and\n * {@link module:engine/model/element~Element#getChildren child nodes}.\n *\n * **Important**: see {@link module:engine/model/node~Node} to read about restrictions using `Element` and `Node` API.\n *\n * @extends module:engine/model/node~Node\n */\nexport default class Element extends Node {\n\t/**\n\t * Creates a model element.\n\t *\n\t * **Note:** Constructor of this class shouldn't be used directly in the code.\n\t * Use the {@link module:engine/model/writer~Writer#createElement} method instead.\n\t *\n\t * @protected\n\t * @param {String} name Element's name.\n\t * @param {Object} [attrs] Element's attributes. See {@link module:utils/tomap~toMap} for a list of accepted values.\n\t * @param {module:engine/model/node~Node|Iterable.<module:engine/model/node~Node>} [children]\n\t * One or more nodes to be inserted as children of created element.\n\t */\n\tconstructor( name, attrs, children ) {\n\t\tsuper( attrs );\n\n\t\t/**\n\t\t * Element name.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String} module:engine/model/element~Element#name\n\t\t */\n\t\tthis.name = name;\n\n\t\t/**\n\t\t * List of children nodes.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/nodelist~NodeList} module:engine/model/element~Element#_children\n\t\t */\n\t\tthis._children = new NodeList();\n\n\t\tif ( children ) {\n\t\t\tthis._insertChild( 0, children );\n\t\t}\n\t}\n\n\t/**\n\t * Number of this element's children.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget childCount() {\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Sum of {@link module:engine/model/node~Node#offsetSize offset sizes} of all of this element's children.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget maxOffset() {\n\t\treturn this._children.maxOffset;\n\t}\n\n\t/**\n\t * Is `true` if there are no nodes inside this element, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isEmpty() {\n\t\treturn this.childCount === 0;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\telement.is( 'element' ); // -> true\n\t *\t\telement.is( 'node' ); // -> true\n\t *\t\telement.is( 'model:element' ); // -> true\n\t *\t\telement.is( 'model:node' ); // -> true\n\t *\n\t *\t\telement.is( 'view:element' ); // -> false\n\t *\t\telement.is( 'documentSelection' ); // -> false\n\t *\n\t * Assuming that the object being checked is an element, you can also check its\n\t * {@link module:engine/model/element~Element#name name}:\n\t *\n\t *\t\telement.is( 'image' ); // -> true if this is an <image> element\n\t *\t\telement.is( 'element', 'image' ); // -> same as above\n\t *\t\ttext.is( 'image' ); -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type Type to check when `name` parameter is present.\n\t * Otherwise, it acts like the `name` parameter.\n\t * @param {String} [name] Element name.\n\t * @returns {Boolean}\n\t */\n\tis( type, name = null ) {\n\t\tconst cutType = type.replace( /^model:/, '' );\n\n\t\tif ( !name ) {\n\t\t\treturn cutType == 'element' || cutType == this.name || super.is( type );\n\t\t} else {\n\t\t\treturn cutType == 'element' && name == this.name;\n\t\t}\n\t}\n\n\t/**\n\t * Gets the child at the given index.\n\t *\n\t * @param {Number} index Index of child.\n\t * @returns {module:engine/model/node~Node} Child node.\n\t */\n\tgetChild( index ) {\n\t\treturn this._children.getNode( index );\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all of this element's children.\n\t *\n\t * @returns {Iterable.<module:engine/model/node~Node>}\n\t */\n\tgetChildren() {\n\t\treturn this._children[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Returns an index of the given child node. Returns `null` if given node is not a child of this element.\n\t *\n\t * @param {module:engine/model/node~Node} node Child node to look for.\n\t * @returns {Number} Child node's index in this element.\n\t */\n\tgetChildIndex( node ) {\n\t\treturn this._children.getNodeIndex( node );\n\t}\n\n\t/**\n\t * Returns the starting offset of given child. Starting offset is equal to the sum of\n\t * {@link module:engine/model/node~Node#offsetSize offset sizes} of all node's siblings that are before it. Returns `null` if\n\t * given node is not a child of this element.\n\t *\n\t * @param {module:engine/model/node~Node} node Child node to look for.\n\t * @returns {Number} Child node's starting offset.\n\t */\n\tgetChildStartOffset( node ) {\n\t\treturn this._children.getNodeStartOffset( node );\n\t}\n\n\t/**\n\t * Returns index of a node that occupies given offset. If given offset is too low, returns `0`. If given offset is\n\t * too high, returns {@link module:engine/model/element~Element#getChildIndex index after last child}.\n\t *\n\t *\t\tconst textNode = new Text( 'foo' );\n\t *\t\tconst pElement = new Element( 'p' );\n\t *\t\tconst divElement = new Element( [ textNode, pElement ] );\n\t *\t\tdivElement.offsetToIndex( -1 ); // Returns 0, because offset is too low.\n\t *\t\tdivElement.offsetToIndex( 0 ); // Returns 0, because offset 0 is taken by `textNode` which is at index 0.\n\t *\t\tdivElement.offsetToIndex( 1 ); // Returns 0, because `textNode` has `offsetSize` equal to 3, so it occupies offset 1 too.\n\t *\t\tdivElement.offsetToIndex( 2 ); // Returns 0.\n\t *\t\tdivElement.offsetToIndex( 3 ); // Returns 1.\n\t *\t\tdivElement.offsetToIndex( 4 ); // Returns 2. There are no nodes at offset 4, so last available index is returned.\n\t *\n\t * @param {Number} offset Offset to look for.\n\t * @returns {Number}\n\t */\n\toffsetToIndex( offset ) {\n\t\treturn this._children.offsetToIndex( offset );\n\t}\n\n\t/**\n\t * Returns a descendant node by its path relative to this element.\n\t *\n\t *\t\t// <this>a<b>c</b></this>\n\t *\t\tthis.getNodeByPath( [ 0 ] );     // -> \"a\"\n\t *\t\tthis.getNodeByPath( [ 1 ] );     // -> <b>\n\t *\t\tthis.getNodeByPath( [ 1, 0 ] );  // -> \"c\"\n\t *\n\t * @param {Array.<Number>} relativePath Path of the node to find, relative to this element.\n\t * @returns {module:engine/model/node~Node}\n\t */\n\tgetNodeByPath( relativePath ) {\n\t\tlet node = this; // eslint-disable-line consistent-this\n\n\t\tfor ( const index of relativePath ) {\n\t\t\tnode = node.getChild( node.offsetToIndex( index ) );\n\t\t}\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * Converts `Element` instance to plain object and returns it. Takes care of converting all of this element's children.\n\t *\n\t * @returns {Object} `Element` instance converted to plain object.\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.name = this.name;\n\n\t\tif ( this._children.length > 0 ) {\n\t\t\tjson.children = [];\n\n\t\t\tfor ( const node of this._children ) {\n\t\t\t\tjson.children.push( node.toJSON() );\n\t\t\t}\n\t\t}\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * Creates a copy of this element and returns it. Created element has the same name and attributes as the original element.\n\t * If clone is deep, the original element's children are also cloned. If not, then empty element is removed.\n\t *\n\t * @protected\n\t * @param {Boolean} [deep=false] If set to `true` clones element and all its children recursively. When set to `false`,\n\t * element will be cloned without any child.\n\t */\n\t_clone( deep = false ) {\n\t\tconst children = deep ? Array.from( this._children ).map( node => node._clone( true ) ) : null;\n\n\t\treturn new Element( this.name, this.getAttributes(), children );\n\t}\n\n\t/**\n\t * {@link module:engine/model/element~Element#_insertChild Inserts} one or more nodes at the end of this element.\n\t *\n\t * @see module:engine/model/writer~Writer#append\n\t * @protected\n\t * @param {module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>} nodes Nodes to be inserted.\n\t */\n\t_appendChild( nodes ) {\n\t\tthis._insertChild( this.childCount, nodes );\n\t}\n\n\t/**\n\t * Inserts one or more nodes at the given index and sets {@link module:engine/model/node~Node#parent parent} of these nodes\n\t * to this element.\n\t *\n\t * @see module:engine/model/writer~Writer#insert\n\t * @protected\n\t * @param {Number} index Index at which nodes should be inserted.\n\t * @param {module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>} items Items to be inserted.\n\t */\n\t_insertChild( index, items ) {\n\t\tconst nodes = normalize( items );\n\n\t\tfor ( const node of nodes ) {\n\t\t\t// If node that is being added to this element is already inside another element, first remove it from the old parent.\n\t\t\tif ( node.parent !== null ) {\n\t\t\t\tnode._remove();\n\t\t\t}\n\n\t\t\tnode.parent = this;\n\t\t}\n\n\t\tthis._children._insertNodes( index, nodes );\n\t}\n\n\t/**\n\t * Removes one or more nodes starting at the given index and sets\n\t * {@link module:engine/model/node~Node#parent parent} of these nodes to `null`.\n\t *\n\t * @see module:engine/model/writer~Writer#remove\n\t * @protected\n\t * @param {Number} index Index of the first node to remove.\n\t * @param {Number} [howMany=1] Number of nodes to remove.\n\t * @returns {Array.<module:engine/model/node~Node>} Array containing removed nodes.\n\t */\n\t_removeChildren( index, howMany = 1 ) {\n\t\tconst nodes = this._children._removeNodes( index, howMany );\n\n\t\tfor ( const node of nodes ) {\n\t\t\tnode.parent = null;\n\t\t}\n\n\t\treturn nodes;\n\t}\n\n\t/**\n\t * Creates an `Element` instance from given plain object (i.e. parsed JSON string).\n\t * Converts `Element` children to proper nodes.\n\t *\n\t * @param {Object} json Plain object to be converted to `Element`.\n\t * @returns {module:engine/model/element~Element} `Element` instance created using given plain object.\n\t */\n\tstatic fromJSON( json ) {\n\t\tlet children = null;\n\n\t\tif ( json.children ) {\n\t\t\tchildren = [];\n\n\t\t\tfor ( const child of json.children ) {\n\t\t\t\tif ( child.name ) {\n\t\t\t\t\t// If child has name property, it is an Element.\n\t\t\t\t\tchildren.push( Element.fromJSON( child ) );\n\t\t\t\t} else {\n\t\t\t\t\t// Otherwise, it is a Text node.\n\t\t\t\t\tchildren.push( Text.fromJSON( child ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn new Element( json.name, json.attributes, children );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `<${ this.rootName || this.name }>`;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // log() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ModelElement: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logExtended() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( `ModelElement: ${ this }, ${ this.childCount } children,\n\t// @if CK_DEBUG_ENGINE //\t\tattrs: ${ convertMapToStringifiedObject( this.getAttributes() ) }` );\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logAll() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( '--------------------' );\n\t// @if CK_DEBUG_ENGINE //\n\t// @if CK_DEBUG_ENGINE // \tthis.logExtended();\n\t// @if CK_DEBUG_ENGINE //\tconsole.log( 'List of children:' );\n\t// @if CK_DEBUG_ENGINE //\n\t// @if CK_DEBUG_ENGINE // \tfor ( const child of this.getChildren() ) {\n\t// @if CK_DEBUG_ENGINE // \t\tchild.log();\n\t// @if CK_DEBUG_ENGINE // \t}\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // printTree( level = 0) {\n\t// @if CK_DEBUG_ENGINE // \tlet string = '';\n\n\t// @if CK_DEBUG_ENGINE // \tstring += '\\t'.repeat( level );\n\t// @if CK_DEBUG_ENGINE // \tstring += `<${ this.rootName || this.name }${ convertMapToTags( this.getAttributes() ) }>`;\n\n\t// @if CK_DEBUG_ENGINE // \tfor ( const child of this.getChildren() ) {\n\t// @if CK_DEBUG_ENGINE // \t\tstring += '\\n';\n\n\t// @if CK_DEBUG_ENGINE // \t\tif ( child.is( 'text' ) ) {\n\t// @if CK_DEBUG_ENGINE // \t\t\tconst textAttrs = convertMapToTags( child._attrs );\n\n\t// @if CK_DEBUG_ENGINE // \t\t\tstring += '\\t'.repeat( level + 1 );\n\n\t// @if CK_DEBUG_ENGINE // \t\t\tif ( textAttrs !== '' ) {\n\t// @if CK_DEBUG_ENGINE // \t\t\t\tstring += `<$text${ textAttrs }>` + child.data + '</$text>';\n\t// @if CK_DEBUG_ENGINE // \t\t\t} else {\n\t// @if CK_DEBUG_ENGINE // \t\t\t\tstring += child.data;\n\t// @if CK_DEBUG_ENGINE // \t\t\t}\n\t// @if CK_DEBUG_ENGINE // \t\t} else {\n\t// @if CK_DEBUG_ENGINE // \t\t\tstring += child.printTree( level + 1 );\n\t// @if CK_DEBUG_ENGINE // \t\t}\n\t// @if CK_DEBUG_ENGINE // \t}\n\n\t// @if CK_DEBUG_ENGINE // \tif ( this.childCount ) {\n\t// @if CK_DEBUG_ENGINE // \t\tstring += '\\n' + '\\t'.repeat( level );\n\t// @if CK_DEBUG_ENGINE // \t}\n\n\t// @if CK_DEBUG_ENGINE // \tstring += `</${ this.rootName || this.name }>`;\n\n\t// @if CK_DEBUG_ENGINE // \treturn string;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logTree() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( this.printTree() );\n\t// @if CK_DEBUG_ENGINE // }\n}\n\n// Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/model/item~Item|Iterable.<String|module:engine/model/item~Item>}\n// @returns {Iterable.<module:engine/model/node~Node>}\nfunction normalize( nodes ) {\n\t// Separate condition because string is iterable.\n\tif ( typeof nodes == 'string' ) {\n\t\treturn [ new Text( nodes ) ];\n\t}\n\n\tif ( !isIterable( nodes ) ) {\n\t\tnodes = [ nodes ];\n\t}\n\n\t// Array.from to enable .map() on non-arrays.\n\treturn Array.from( nodes )\n\t\t.map( node => {\n\t\t\tif ( typeof node == 'string' ) {\n\t\t\t\treturn new Text( node );\n\t\t\t}\n\n\t\t\tif ( node instanceof TextProxy ) {\n\t\t\t\treturn new Text( node.data, node.getAttributes() );\n\t\t\t}\n\n\t\t\treturn node;\n\t\t} );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/treewalker\n */\n\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport Element from './element';\nimport Position from './position';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Position iterator class. It allows to iterate forward and backward over the document.\n */\nexport default class TreeWalker {\n\t/**\n\t * Creates a range iterator. All parameters are optional, but you have to specify either `boundaries` or `startPosition`.\n\t *\n\t * @constructor\n\t * @param {Object} [options={}] Object with configuration.\n\t * @param {'forward'|'backward'} [options.direction='forward'] Walking direction.\n\t * @param {module:engine/model/range~Range} [options.boundaries=null] Range to define boundaries of the iterator.\n\t * @param {module:engine/model/position~Position} [options.startPosition] Starting position.\n\t * @param {Boolean} [options.singleCharacters=false] Flag indicating whether all consecutive characters with the same attributes\n\t * should be returned one by one as multiple {@link module:engine/model/textproxy~TextProxy} (`true`) objects or as one\n\t * {@link module:engine/model/textproxy~TextProxy} (`false`).\n\t * @param {Boolean} [options.shallow=false] Flag indicating whether iterator should enter elements or not. If the\n\t * iterator is shallow child nodes of any iterated node will not be returned along with `elementEnd` tag.\n\t * @param {Boolean} [options.ignoreElementEnd=false] Flag indicating whether iterator should ignore `elementEnd`\n\t * tags. If the option is true walker will not return a parent node of start position. If this option is `true`\n\t * each {@link module:engine/model/element~Element} will be returned once, while if the option is `false` they might be returned\n\t * twice: for `'elementStart'` and `'elementEnd'`.\n\t */\n\tconstructor( options = {} ) {\n\t\tif ( !options.boundaries && !options.startPosition ) {\n\t\t\t/**\n\t\t\t * Neither boundaries nor starting position of a `TreeWalker` have been defined.\n\t\t\t *\n\t\t\t * @error model-tree-walker-no-start-position\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-tree-walker-no-start-position: Neither boundaries nor starting position have been defined.',\n\t\t\t\tnull\n\t\t\t);\n\t\t}\n\n\t\tconst direction = options.direction || 'forward';\n\n\t\tif ( direction != 'forward' && direction != 'backward' ) {\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-tree-walker-unknown-direction: Only `backward` and `forward` direction allowed.',\n\t\t\t\toptions,\n\t\t\t\t{ direction }\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * Walking direction. Defaults `'forward'`.\n\t\t *\n\t\t * @readonly\n\t\t * @member {'backward'|'forward'} module:engine/model/treewalker~TreeWalker#direction\n\t\t */\n\t\tthis.direction = direction;\n\n\t\t/**\n\t\t * Iterator boundaries.\n\t\t *\n\t\t * When the iterator is walking `'forward'` on the end of boundary or is walking `'backward'`\n\t\t * on the start of boundary, then `{ done: true }` is returned.\n\t\t *\n\t\t * If boundaries are not defined they are set before first and after last child of the root node.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/range~Range} module:engine/model/treewalker~TreeWalker#boundaries\n\t\t */\n\t\tthis.boundaries = options.boundaries || null;\n\n\t\t/**\n\t\t * Iterator position. This is always static position, even if the initial position was a\n\t\t * {@link module:engine/model/liveposition~LivePosition live position}. If start position is not defined then position depends\n\t\t * on {@link #direction}. If direction is `'forward'` position starts form the beginning, when direction\n\t\t * is `'backward'` position starts from the end.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/position~Position} module:engine/model/treewalker~TreeWalker#position\n\t\t */\n\t\tif ( options.startPosition ) {\n\t\t\tthis.position = options.startPosition.clone();\n\t\t} else {\n\t\t\tthis.position = Position._createAt( this.boundaries[ this.direction == 'backward' ? 'end' : 'start' ] );\n\t\t}\n\n\t\t// Reset position stickiness in case it was set to other value, as the stickiness is kept after cloning.\n\t\tthis.position.stickiness = 'toNone';\n\n\t\t/**\n\t\t * Flag indicating whether all consecutive characters with the same attributes should be\n\t\t * returned as one {@link module:engine/model/textproxy~TextProxy} (`true`) or one by one (`false`).\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} module:engine/model/treewalker~TreeWalker#singleCharacters\n\t\t */\n\t\tthis.singleCharacters = !!options.singleCharacters;\n\n\t\t/**\n\t\t * Flag indicating whether iterator should enter elements or not. If the iterator is shallow child nodes of any\n\t\t * iterated node will not be returned along with `elementEnd` tag.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} module:engine/model/treewalker~TreeWalker#shallow\n\t\t */\n\t\tthis.shallow = !!options.shallow;\n\n\t\t/**\n\t\t * Flag indicating whether iterator should ignore `elementEnd` tags. If the option is true walker will not\n\t\t * return a parent node of the start position. If this option is `true` each {@link module:engine/model/element~Element} will\n\t\t * be returned once, while if the option is `false` they might be returned twice:\n\t\t * for `'elementStart'` and `'elementEnd'`.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} module:engine/model/treewalker~TreeWalker#ignoreElementEnd\n\t\t */\n\t\tthis.ignoreElementEnd = !!options.ignoreElementEnd;\n\n\t\t/**\n\t\t * Start boundary cached for optimization purposes.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/element~Element} module:engine/model/treewalker~TreeWalker#_boundaryStartParent\n\t\t */\n\t\tthis._boundaryStartParent = this.boundaries ? this.boundaries.start.parent : null;\n\n\t\t/**\n\t\t * End boundary cached for optimization purposes.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/element~Element} module:engine/model/treewalker~TreeWalker#_boundaryEndParent\n\t\t */\n\t\tthis._boundaryEndParent = this.boundaries ? this.boundaries.end.parent : null;\n\n\t\t/**\n\t\t * Parent of the most recently visited node. Cached for optimization purposes.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment}\n\t\t * module:engine/model/treewalker~TreeWalker#_visitedParent\n\t\t */\n\t\tthis._visitedParent = this.position.parent;\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * @returns {Iterable.<module:engine/model/treewalker~TreeWalkerValue>}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Moves {@link #position} in the {@link #direction} skipping values as long as the callback function returns `true`.\n\t *\n\t * For example:\n\t *\n\t * \t\twalker.skip( value => value.type == 'text' ); // <paragraph>[]foo</paragraph> -> <paragraph>foo[]</paragraph>\n\t * \t\twalker.skip( () => true ); // Move the position to the end: <paragraph>[]foo</paragraph> -> <paragraph>foo</paragraph>[]\n\t * \t\twalker.skip( () => false ); // Do not move the position.\n\t *\n\t * @param {Function} skip Callback function. Gets {@link module:engine/model/treewalker~TreeWalkerValue} and should\n\t * return `true` if the value should be skipped or `false` if not.\n\t */\n\tskip( skip ) {\n\t\tlet done, value, prevPosition, prevVisitedParent;\n\n\t\tdo {\n\t\t\tprevPosition = this.position;\n\t\t\tprevVisitedParent = this._visitedParent;\n\n\t\t\t( { done, value } = this.next() );\n\t\t} while ( !done && skip( value ) );\n\n\t\tif ( !done ) {\n\t\t\tthis.position = prevPosition;\n\t\t\tthis._visitedParent = prevVisitedParent;\n\t\t}\n\t}\n\n\t/**\n\t * Gets the next tree walker's value.\n\t *\n\t * @returns {module:engine/model/treewalker~TreeWalkerValue} Next tree walker's value.\n\t */\n\tnext() {\n\t\tif ( this.direction == 'forward' ) {\n\t\t\treturn this._next();\n\t\t} else {\n\t\t\treturn this._previous();\n\t\t}\n\t}\n\n\t/**\n\t * Makes a step forward in model. Moves the {@link #position} to the next position and returns the encountered value.\n\t *\n\t * @private\n\t * @returns {Object}\n\t * @returns {Boolean} return.done True if iterator is done.\n\t * @returns {module:engine/model/treewalker~TreeWalkerValue} return.value Information about taken step.\n\t */\n\t_next() {\n\t\tconst previousPosition = this.position;\n\t\tconst position = this.position.clone();\n\t\tconst parent = this._visitedParent;\n\n\t\t// We are at the end of the root.\n\t\tif ( parent.parent === null && position.offset === parent.maxOffset ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\t// We reached the walker boundary.\n\t\tif ( parent === this._boundaryEndParent && position.offset == this.boundaries.end.offset ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\tconst node = position.textNode ? position.textNode : position.nodeAfter;\n\n\t\tif ( node instanceof Element ) {\n\t\t\tif ( !this.shallow ) {\n\t\t\t\t// Manual operations on path internals for optimization purposes. Here and in the rest of the method.\n\t\t\t\tposition.path.push( 0 );\n\t\t\t\tthis._visitedParent = node;\n\t\t\t} else {\n\t\t\t\tposition.offset++;\n\t\t\t}\n\n\t\t\tthis.position = position;\n\n\t\t\treturn formatReturnValue( 'elementStart', node, previousPosition, position, 1 );\n\t\t} else if ( node instanceof Text ) {\n\t\t\tlet charactersCount;\n\n\t\t\tif ( this.singleCharacters ) {\n\t\t\t\tcharactersCount = 1;\n\t\t\t} else {\n\t\t\t\tlet offset = node.endOffset;\n\n\t\t\t\tif ( this._boundaryEndParent == parent && this.boundaries.end.offset < offset ) {\n\t\t\t\t\toffset = this.boundaries.end.offset;\n\t\t\t\t}\n\n\t\t\t\tcharactersCount = offset - position.offset;\n\t\t\t}\n\n\t\t\tconst offsetInTextNode = position.offset - node.startOffset;\n\t\t\tconst item = new TextProxy( node, offsetInTextNode, charactersCount );\n\n\t\t\tposition.offset += charactersCount;\n\t\t\tthis.position = position;\n\n\t\t\treturn formatReturnValue( 'text', item, previousPosition, position, charactersCount );\n\t\t} else {\n\t\t\t// `node` is not set, we reached the end of current `parent`.\n\t\t\tposition.path.pop();\n\t\t\tposition.offset++;\n\t\t\tthis.position = position;\n\t\t\tthis._visitedParent = parent.parent;\n\n\t\t\tif ( this.ignoreElementEnd ) {\n\t\t\t\treturn this._next();\n\t\t\t} else {\n\t\t\t\treturn formatReturnValue( 'elementEnd', parent, previousPosition, position );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Makes a step backward in model. Moves the {@link #position} to the previous position and returns the encountered value.\n\t *\n\t * @private\n\t * @returns {Object}\n\t * @returns {Boolean} return.done True if iterator is done.\n\t * @returns {module:engine/model/treewalker~TreeWalkerValue} return.value Information about taken step.\n\t */\n\t_previous() {\n\t\tconst previousPosition = this.position;\n\t\tconst position = this.position.clone();\n\t\tconst parent = this._visitedParent;\n\n\t\t// We are at the beginning of the root.\n\t\tif ( parent.parent === null && position.offset === 0 ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\t// We reached the walker boundary.\n\t\tif ( parent == this._boundaryStartParent && position.offset == this.boundaries.start.offset ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\t// Get node just before current position\n\t\tconst node = position.textNode ? position.textNode : position.nodeBefore;\n\n\t\tif ( node instanceof Element ) {\n\t\t\tposition.offset--;\n\n\t\t\tif ( !this.shallow ) {\n\t\t\t\tposition.path.push( node.maxOffset );\n\t\t\t\tthis.position = position;\n\t\t\t\tthis._visitedParent = node;\n\n\t\t\t\tif ( this.ignoreElementEnd ) {\n\t\t\t\t\treturn this._previous();\n\t\t\t\t} else {\n\t\t\t\t\treturn formatReturnValue( 'elementEnd', node, previousPosition, position );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn formatReturnValue( 'elementStart', node, previousPosition, position, 1 );\n\t\t\t}\n\t\t} else if ( node instanceof Text ) {\n\t\t\tlet charactersCount;\n\n\t\t\tif ( this.singleCharacters ) {\n\t\t\t\tcharactersCount = 1;\n\t\t\t} else {\n\t\t\t\tlet offset = node.startOffset;\n\n\t\t\t\tif ( this._boundaryStartParent == parent && this.boundaries.start.offset > offset ) {\n\t\t\t\t\toffset = this.boundaries.start.offset;\n\t\t\t\t}\n\n\t\t\t\tcharactersCount = position.offset - offset;\n\t\t\t}\n\n\t\t\tconst offsetInTextNode = position.offset - node.startOffset;\n\t\t\tconst item = new TextProxy( node, offsetInTextNode - charactersCount, charactersCount );\n\n\t\t\tposition.offset -= charactersCount;\n\t\t\tthis.position = position;\n\n\t\t\treturn formatReturnValue( 'text', item, previousPosition, position, charactersCount );\n\t\t} else {\n\t\t\t// `node` is not set, we reached the beginning of current `parent`.\n\t\t\tposition.path.pop();\n\t\t\tthis.position = position;\n\t\t\tthis._visitedParent = parent.parent;\n\n\t\t\treturn formatReturnValue( 'elementStart', parent, previousPosition, position, 1 );\n\t\t}\n\t}\n}\n\nfunction formatReturnValue( type, item, previousPosition, nextPosition, length ) {\n\treturn {\n\t\tdone: false,\n\t\tvalue: {\n\t\t\ttype,\n\t\t\titem,\n\t\t\tpreviousPosition,\n\t\t\tnextPosition,\n\t\t\tlength\n\t\t}\n\t};\n}\n\n/**\n * Type of the step made by {@link module:engine/model/treewalker~TreeWalker}.\n * Possible values: `'elementStart'` if walker is at the beginning of a node, `'elementEnd'` if walker is at the end of node,\n * `'character'` if walker traversed over a character, or `'text'` if walker traversed over multiple characters (available in\n * character merging mode, see {@link module:engine/model/treewalker~TreeWalker#constructor}).\n *\n * @typedef {'elementStart'|'elementEnd'|'character'|'text'} module:engine/model/treewalker~TreeWalkerValueType\n */\n\n/**\n * Object returned by {@link module:engine/model/treewalker~TreeWalker} when traversing tree model.\n *\n * @typedef {Object} module:engine/model/treewalker~TreeWalkerValue\n * @property {module:engine/model/treewalker~TreeWalkerValueType} type\n * @property {module:engine/model/item~Item} item Item between old and new positions of {@link module:engine/model/treewalker~TreeWalker}.\n * @property {module:engine/model/position~Position} previousPosition Previous position of the iterator.\n * * Forward iteration: For `'elementEnd'` it is the last position inside the element. For all other types it is the\n * position before the item.\n * * Backward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after item.\n * @property {module:engine/model/position~Position} nextPosition Next position of the iterator.\n * * Forward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after the item.\n * * Backward iteration: For `'elementEnd'` it is last position inside element. For all other types it is the position\n * before the item.\n * @property {Number} [length] Length of the item. For `'elementStart'` and `'character'` it is 1. For `'text'` it is\n * the length of the text. For `'elementEnd'` it is `undefined`.\n */\n\n/**\n * Tree walking directions.\n *\n * @typedef {'forward'|'backward'} module:engine/view/treewalker~TreeWalkerDirection\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/position\n */\n\nimport TreeWalker from './treewalker';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Text from './text';\nimport { last } from 'lodash-es';\n\n// To check if component is loaded more than once.\nimport '@ckeditor/ckeditor5-utils/src/version';\n\n/**\n * Represents a position in the model tree.\n *\n * A position is represented by its {@link module:engine/model/position~Position#root} and\n * a {@link module:engine/model/position~Position#path} in that root.\n *\n * You can create position instances via its constructor or the `createPosition*()` factory methods of\n * {@link module:engine/model/model~Model} and {@link module:engine/model/writer~Writer}.\n *\n * **Note:** Position is based on offsets, not indexes. This means that a position between two text nodes\n * `foo` and `bar` has offset `3`, not `1`. See {@link module:engine/model/position~Position#path} for more information.\n *\n * Since a position in the model is represented by a {@link module:engine/model/position~Position#root position root} and\n * {@link module:engine/model/position~Position#path position path} it is possible to create positions placed in non-existing places.\n * This requirement is important for operational transformation algorithms.\n *\n * Also, {@link module:engine/model/operation/operation~Operation operations}\n * kept in the {@link module:engine/model/document~Document#history document history}\n * are storing positions (and ranges) which were correct when those operations were applied, but may not be correct\n * after the document has changed.\n *\n * When changes are applied to the model, it may also happen that {@link module:engine/model/position~Position#parent position parent}\n * will change even if position path has not changed. Keep in mind, that if a position leads to non-existing element,\n * {@link module:engine/model/position~Position#parent} and some other properties and methods will throw errors.\n *\n * In most cases, position with wrong path is caused by an error in code, but it is sometimes needed, as described above.\n */\nexport default class Position {\n\t/**\n\t * Creates a position.\n\t *\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} root Root of the position.\n\t * @param {Array.<Number>} path Position path. See {@link module:engine/model/position~Position#path}.\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness.\n\t * See {@link module:engine/model/position~PositionStickiness}.\n\t */\n\tconstructor( root, path, stickiness = 'toNone' ) {\n\t\tif ( !root.is( 'element' ) && !root.is( 'documentFragment' ) ) {\n\t\t\t/**\n\t\t\t * Position root is invalid.\n\t\t\t *\n\t\t\t * Positions can only be anchored in elements or document fragments.\n\t\t\t *\n\t\t\t * @error model-position-root-invalid\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-position-root-invalid: Position root invalid.',\n\t\t\t\troot\n\t\t\t);\n\t\t}\n\n\t\tif ( !( path instanceof Array ) || path.length === 0 ) {\n\t\t\t/**\n\t\t\t * Position path must be an array with at least one item.\n\t\t\t *\n\t\t\t * @error model-position-path-incorrect-format\n\t\t\t * @param path\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-position-path-incorrect-format: Position path must be an array with at least one item.',\n\t\t\t\troot,\n\t\t\t\t{ path }\n\t\t\t);\n\t\t}\n\n\t\t// Normalize the root and path (if element was passed).\n\t\tpath = root.getPath().concat( path );\n\t\troot = root.root;\n\n\t\t/**\n\t\t * Root of the position path.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment}\n\t\t * module:engine/model/position~Position#root\n\t\t */\n\t\tthis.root = root;\n\n\t\t/**\n\t\t * Position of the node in the tree. **Path contains offsets, not indexes.**\n\t\t *\n\t\t * Position can be placed before, after or in a {@link module:engine/model/node~Node node} if that node has\n\t\t * {@link module:engine/model/node~Node#offsetSize} greater than `1`. Items in position path are\n\t\t * {@link module:engine/model/node~Node#startOffset starting offsets} of position ancestors, starting from direct root children,\n\t\t * down to the position offset in it's parent.\n\t\t *\n\t\t *\t\t ROOT\n\t\t *\t\t  |- P            before: [ 0 ]         after: [ 1 ]\n\t\t *\t\t  |- UL           before: [ 1 ]         after: [ 2 ]\n\t\t *\t\t     |- LI        before: [ 1, 0 ]      after: [ 1, 1 ]\n\t\t *\t\t     |  |- foo    before: [ 1, 0, 0 ]   after: [ 1, 0, 3 ]\n\t\t *\t\t     |- LI        before: [ 1, 1 ]      after: [ 1, 2 ]\n\t\t *\t\t        |- bar    before: [ 1, 1, 0 ]   after: [ 1, 1, 3 ]\n\t\t *\n\t\t * `foo` and `bar` are representing {@link module:engine/model/text~Text text nodes}. Since text nodes has offset size\n\t\t * greater than `1` you can place position offset between their start and end:\n\t\t *\n\t\t *\t\t ROOT\n\t\t *\t\t  |- P\n\t\t *\t\t  |- UL\n\t\t *\t\t     |- LI\n\t\t *\t\t     |  |- f^o|o  ^ has path: [ 1, 0, 1 ]   | has path: [ 1, 0, 2 ]\n\t\t *\t\t     |- LI\n\t\t *\t\t        |- b^a|r  ^ has path: [ 1, 1, 1 ]   | has path: [ 1, 1, 2 ]\n\t\t *\n\t\t * @readonly\n\t\t * @member {Array.<Number>} module:engine/model/position~Position#path\n\t\t */\n\t\tthis.path = path;\n\n\t\t/**\n\t\t * Position stickiness. See {@link module:engine/model/position~PositionStickiness}.\n\t\t *\n\t\t * @member {module:engine/model/position~PositionStickiness} module:engine/model/position~Position#stickiness\n\t\t */\n\t\tthis.stickiness = stickiness;\n\t}\n\n\t/**\n\t * Offset at which this position is located in its {@link module:engine/model/position~Position#parent parent}. It is equal\n\t * to the last item in position {@link module:engine/model/position~Position#path path}.\n\t *\n\t * @type {Number}\n\t */\n\tget offset() {\n\t\treturn last( this.path );\n\t}\n\n\t/**\n\t * @param {Number} newOffset\n\t */\n\tset offset( newOffset ) {\n\t\tthis.path[ this.path.length - 1 ] = newOffset;\n\t}\n\n\t/**\n\t * Parent element of this position.\n\t *\n\t * Keep in mind that `parent` value is calculated when the property is accessed.\n\t * If {@link module:engine/model/position~Position#path position path}\n\t * leads to a non-existing element, `parent` property will throw error.\n\t *\n\t * Also it is a good idea to cache `parent` property if it is used frequently in an algorithm (i.e. in a long loop).\n\t *\n\t * @readonly\n\t * @type {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment}\n\t */\n\tget parent() {\n\t\tlet parent = this.root;\n\n\t\tfor ( let i = 0; i < this.path.length - 1; i++ ) {\n\t\t\tparent = parent.getChild( parent.offsetToIndex( this.path[ i ] ) );\n\n\t\t\tif ( !parent ) {\n\t\t\t\tthrow new CKEditorError( 'model-position-path-incorrect: The position\\'s path is incorrect.', this, { position: this } );\n\t\t\t}\n\t\t}\n\n\t\tif ( parent.is( 'text' ) ) {\n\t\t\t/**\n\t\t\t * The position's path is incorrect. This means that a position does not point to\n\t\t\t * a correct place in the tree and hence, some of its methods and getters cannot work correctly.\n\t\t\t *\n\t\t\t * **Note**: Unlike DOM and view positions, in the model, the\n\t\t\t * {@link module:engine/model/position~Position#parent position's parent} is always an element or a document fragment.\n\t\t\t * The last offset in the {@link module:engine/model/position~Position#path position's path} is the point in this element where\n\t\t\t * this position points.\n\t\t\t *\n\t\t\t * Read more about model positions and offsets in\n\t\t\t * the {@glink framework/guides/architecture/editing-engine#indexes-and-offsets Editing engine architecture guide}.\n\t\t\t *\n\t\t\t * @error position-incorrect-path\n\t\t\t * @param {module:engine/model/position~Position} position The incorrect position.\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-position-path-incorrect: The position\\'s path is incorrect.', this, { position: this } );\n\t\t}\n\n\t\treturn parent;\n\t}\n\n\t/**\n\t * Position {@link module:engine/model/position~Position#offset offset} converted to an index in position's parent node. It is\n\t * equal to the {@link module:engine/model/node~Node#index index} of a node after this position. If position is placed\n\t * in text node, position index is equal to the index of that text node.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget index() {\n\t\treturn this.parent.offsetToIndex( this.offset );\n\t}\n\n\t/**\n\t * Returns {@link module:engine/model/text~Text text node} instance in which this position is placed or `null` if this\n\t * position is not in a text node.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/text~Text|null}\n\t */\n\tget textNode() {\n\t\tconst node = this.parent.getChild( this.index );\n\n\t\treturn ( node instanceof Text && node.startOffset < this.offset ) ? node : null;\n\t}\n\n\t/**\n\t * Node directly after this position or `null` if this position is in text node.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/node~Node|null}\n\t */\n\tget nodeAfter() {\n\t\treturn this.textNode === null ? this.parent.getChild( this.index ) : null;\n\t}\n\n\t/**\n\t * Node directly before this position or `null` if this position is in text node.\n\t *\n\t * @readonly\n\t * @type {Node}\n\t */\n\tget nodeBefore() {\n\t\treturn this.textNode === null ? this.parent.getChild( this.index - 1 ) : null;\n\t}\n\n\t/**\n\t * Is `true` if position is at the beginning of its {@link module:engine/model/position~Position#parent parent}, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isAtStart() {\n\t\treturn this.offset === 0;\n\t}\n\n\t/**\n\t * Is `true` if position is at the end of its {@link module:engine/model/position~Position#parent parent}, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isAtEnd() {\n\t\treturn this.offset == this.parent.maxOffset;\n\t}\n\n\t/**\n\t * Checks whether this position is before or after given position.\n\t *\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\n\t *\n\t * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n\t * @returns {module:engine/model/position~PositionRelation}\n\t */\n\tcompareWith( otherPosition ) {\n\t\tif ( this.root != otherPosition.root ) {\n\t\t\treturn 'different';\n\t\t}\n\n\t\tconst result = compareArrays( this.path, otherPosition.path );\n\n\t\tswitch ( result ) {\n\t\t\tcase 'same':\n\t\t\t\treturn 'same';\n\n\t\t\tcase 'prefix':\n\t\t\t\treturn 'before';\n\n\t\t\tcase 'extension':\n\t\t\t\treturn 'after';\n\n\t\t\tdefault:\n\t\t\t\treturn this.path[ result ] < otherPosition.path[ result ] ? 'before' : 'after';\n\t\t}\n\t}\n\n\t/**\n\t * Gets the farthest position which matches the callback using\n\t * {@link module:engine/model/treewalker~TreeWalker TreeWalker}.\n\t *\n\t * For example:\n\t *\n\t * \t\tgetLastMatchingPosition( value => value.type == 'text' );\n\t * \t\t// <paragraph>[]foo</paragraph> -> <paragraph>foo[]</paragraph>\n\t *\n\t * \t\tgetLastMatchingPosition( value => value.type == 'text', { direction: 'backward' } );\n\t * \t\t// <paragraph>foo[]</paragraph> -> <paragraph>[]foo</paragraph>\n\t *\n\t * \t\tgetLastMatchingPosition( value => false );\n\t * \t\t// Do not move the position.\n\t *\n\t * @param {Function} skip Callback function. Gets {@link module:engine/model/treewalker~TreeWalkerValue} and should\n\t * return `true` if the value should be skipped or `false` if not.\n\t * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\n\t *\n\t * @returns {module:engine/model/position~Position} The position after the last item which matches the `skip` callback test.\n\t */\n\tgetLastMatchingPosition( skip, options = {} ) {\n\t\toptions.startPosition = this;\n\n\t\tconst treeWalker = new TreeWalker( options );\n\t\ttreeWalker.skip( skip );\n\n\t\treturn treeWalker.position;\n\t}\n\n\t/**\n\t * Returns a path to this position's parent. Parent path is equal to position {@link module:engine/model/position~Position#path path}\n\t * but without the last item.\n\t *\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\n\t *\n\t * @returns {Array.<Number>} Path to the parent.\n\t */\n\tgetParentPath() {\n\t\treturn this.path.slice( 0, -1 );\n\t}\n\n\t/**\n\t * Returns ancestors array of this position, that is this position's parent and its ancestors.\n\t *\n\t * @returns {Array.<module:engine/model/item~Item>} Array with ancestors.\n\t */\n\tgetAncestors() {\n\t\tif ( this.parent.is( 'documentFragment' ) ) {\n\t\t\treturn [ this.parent ];\n\t\t} else {\n\t\t\treturn this.parent.getAncestors( { includeSelf: true } );\n\t\t}\n\t}\n\n\t/**\n\t * Returns the slice of two position {@link #path paths} which is identical. The {@link #root roots}\n\t * of these two paths must be identical.\n\t *\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\n\t *\n\t * @param {module:engine/model/position~Position} position The second position.\n\t * @returns {Array.<Number>} The common path.\n\t */\n\tgetCommonPath( position ) {\n\t\tif ( this.root != position.root ) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// We find on which tree-level start and end have the lowest common ancestor\n\t\tconst cmp = compareArrays( this.path, position.path );\n\t\t// If comparison returned string it means that arrays are same.\n\t\tconst diffAt = ( typeof cmp == 'string' ) ? Math.min( this.path.length, position.path.length ) : cmp;\n\n\t\treturn this.path.slice( 0, diffAt );\n\t}\n\n\t/**\n\t * Returns an {@link module:engine/model/element~Element} or {@link module:engine/model/documentfragment~DocumentFragment}\n\t * which is a common ancestor of both positions. The {@link #root roots} of these two positions must be identical.\n\t *\n\t * @param {module:engine/model/position~Position} position The second position.\n\t * @returns {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n\t */\n\tgetCommonAncestor( position ) {\n\t\tconst ancestorsA = this.getAncestors();\n\t\tconst ancestorsB = position.getAncestors();\n\n\t\tlet i = 0;\n\n\t\twhile ( ancestorsA[ i ] == ancestorsB[ i ] && ancestorsA[ i ] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i === 0 ? null : ancestorsA[ i - 1 ];\n\t}\n\n\t/**\n\t * Returns a new instance of `Position`, that has same {@link #parent parent} but it's offset\n\t * is shifted by `shift` value (can be a negative value).\n\t *\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\n\t *\n\t * @param {Number} shift Offset shift. Can be a negative value.\n\t * @returns {module:engine/model/position~Position} Shifted position.\n\t */\n\tgetShiftedBy( shift ) {\n\t\tconst shifted = this.clone();\n\n\t\tconst offset = shifted.offset + shift;\n\t\tshifted.offset = offset < 0 ? 0 : offset;\n\n\t\treturn shifted;\n\t}\n\n\t/**\n\t * Checks whether this position is after given position.\n\t *\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\n\t *\n\t * @see module:engine/model/position~Position#isBefore\n\t * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n\t * @returns {Boolean} True if this position is after given position.\n\t */\n\tisAfter( otherPosition ) {\n\t\treturn this.compareWith( otherPosition ) == 'after';\n\t}\n\n\t/**\n\t * Checks whether this position is before given position.\n\t *\n\t * **Note:** watch out when using negation of the value returned by this method, because the negation will also\n\t * be `true` if positions are in different roots and you might not expect this. You should probably use\n\t * `a.isAfter( b ) || a.isEqual( b )` or `!a.isBefore( p ) && a.root == b.root` in most scenarios. If your\n\t * condition uses multiple `isAfter` and `isBefore` checks, build them so they do not use negated values, i.e.:\n\t *\n\t *\t\tif ( a.isBefore( b ) && c.isAfter( d ) ) {\n\t *\t\t\t// do A.\n\t *\t\t} else {\n\t *\t\t\t// do B.\n\t *\t\t}\n\t *\n\t * or, if you have only one if-branch:\n\t *\n\t *\t\tif ( !( a.isBefore( b ) && c.isAfter( d ) ) {\n\t *\t\t\t// do B.\n\t *\t\t}\n\t *\n\t * rather than:\n\t *\n\t *\t\tif ( !a.isBefore( b ) || && !c.isAfter( d ) ) {\n\t *\t\t\t// do B.\n\t *\t\t} else {\n\t *\t\t\t// do A.\n\t *\t\t}\n\t *\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\n\t *\n\t * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n\t * @returns {Boolean} True if this position is before given position.\n\t */\n\tisBefore( otherPosition ) {\n\t\treturn this.compareWith( otherPosition ) == 'before';\n\t}\n\n\t/**\n\t * Checks whether this position is equal to given position.\n\t *\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\n\t *\n\t * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n\t * @returns {Boolean} True if positions are same.\n\t */\n\tisEqual( otherPosition ) {\n\t\treturn this.compareWith( otherPosition ) == 'same';\n\t}\n\n\t/**\n\t * Checks whether this position is touching given position. Positions touch when there are no text nodes\n\t * or empty nodes in a range between them. Technically, those positions are not equal but in many cases\n\t * they are very similar or even indistinguishable.\n\t *\n\t * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n\t * @returns {Boolean} True if positions touch.\n\t */\n\tisTouching( otherPosition ) {\n\t\tlet left = null;\n\t\tlet right = null;\n\t\tconst compare = this.compareWith( otherPosition );\n\n\t\tswitch ( compare ) {\n\t\t\tcase 'same':\n\t\t\t\treturn true;\n\n\t\t\tcase 'before':\n\t\t\t\tleft = Position._createAt( this );\n\t\t\t\tright = Position._createAt( otherPosition );\n\t\t\t\tbreak;\n\n\t\t\tcase 'after':\n\t\t\t\tleft = Position._createAt( otherPosition );\n\t\t\t\tright = Position._createAt( this );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\n\t\t// Cached for optimization purposes.\n\t\tlet leftParent = left.parent;\n\n\t\twhile ( left.path.length + right.path.length ) {\n\t\t\tif ( left.isEqual( right ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif ( left.path.length > right.path.length ) {\n\t\t\t\tif ( left.offset !== leftParent.maxOffset ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tleft.path = left.path.slice( 0, -1 );\n\t\t\t\tleftParent = leftParent.parent;\n\t\t\t\tleft.offset++;\n\t\t\t} else {\n\t\t\t\tif ( right.offset !== 0 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tright.path = right.path.slice( 0, -1 );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\tposition.is( 'position' ); // -> true\n\t *\t\tposition.is( 'model:position' ); // -> true\n\t *\n\t *\t\tposition.is( 'view:position' ); // -> false\n\t *\t\tposition.is( 'documentSelection' ); // -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type == 'position' || type == 'model:position';\n\t}\n\n\t/**\n\t * Checks if two positions are in the same parent.\n\t *\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\n\t *\n\t * @param {module:engine/model/position~Position} position Position to compare with.\n\t * @returns {Boolean} `true` if positions have the same parent, `false` otherwise.\n\t */\n\thasSameParentAs( position ) {\n\t\tif ( this.root !== position.root ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst thisParentPath = this.getParentPath();\n\t\tconst posParentPath = position.getParentPath();\n\n\t\treturn compareArrays( thisParentPath, posParentPath ) == 'same';\n\t}\n\n\t/**\n\t * Returns a copy of this position that is transformed by given `operation`.\n\t *\n\t * The new position's parameters are updated accordingly to the effect of the `operation`.\n\t *\n\t * For example, if `n` nodes are inserted before the position, the returned position {@link ~Position#offset} will be\n\t * increased by `n`. If the position was in a merged element, it will be accordingly moved to the new element, etc.\n\t *\n\t * This method is safe to use it on non-existing positions (for example during operational transformation).\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} operation Operation to transform by.\n\t * @returns {module:engine/model/position~Position} Transformed position.\n\t */\n\tgetTransformedByOperation( operation ) {\n\t\tlet result;\n\n\t\tswitch ( operation.type ) {\n\t\t\tcase 'insert':\n\t\t\t\tresult = this._getTransformedByInsertOperation( operation );\n\t\t\t\tbreak;\n\t\t\tcase 'move':\n\t\t\tcase 'remove':\n\t\t\tcase 'reinsert':\n\t\t\t\tresult = this._getTransformedByMoveOperation( operation );\n\t\t\t\tbreak;\n\t\t\tcase 'split':\n\t\t\t\tresult = this._getTransformedBySplitOperation( operation );\n\t\t\t\tbreak;\n\t\t\tcase 'merge':\n\t\t\t\tresult = this._getTransformedByMergeOperation( operation );\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tresult = Position._createAt( this );\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Returns a copy of this position transformed by an insert operation.\n\t *\n\t * @protected\n\t * @param {module:engine/model/operation/insertoperation~InsertOperation} operation\n\t * @returns {module:engine/model/position~Position}\n\t */\n\t_getTransformedByInsertOperation( operation ) {\n\t\treturn this._getTransformedByInsertion( operation.position, operation.howMany );\n\t}\n\n\t/**\n\t * Returns a copy of this position transformed by a move operation.\n\t *\n\t * @protected\n\t * @param {module:engine/model/operation/moveoperation~MoveOperation} operation\n\t * @returns {module:engine/model/position~Position}\n\t */\n\t_getTransformedByMoveOperation( operation ) {\n\t\treturn this._getTransformedByMove( operation.sourcePosition, operation.targetPosition, operation.howMany );\n\t}\n\n\t/**\n\t * Returns a copy of this position transformed by a split operation.\n\t *\n\t * @protected\n\t * @param {module:engine/model/operation/splitoperation~SplitOperation} operation\n\t * @returns {module:engine/model/position~Position}\n\t */\n\t_getTransformedBySplitOperation( operation ) {\n\t\tconst movedRange = operation.movedRange;\n\n\t\tconst isContained = movedRange.containsPosition( this ) ||\n\t\t\t( movedRange.start.isEqual( this ) && this.stickiness == 'toNext' );\n\n\t\tif ( isContained ) {\n\t\t\treturn this._getCombined( operation.splitPosition, operation.moveTargetPosition );\n\t\t} else {\n\t\t\tif ( operation.graveyardPosition ) {\n\t\t\t\treturn this._getTransformedByMove( operation.graveyardPosition, operation.insertionPosition, 1 );\n\t\t\t} else {\n\t\t\t\treturn this._getTransformedByInsertion( operation.insertionPosition, 1 );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns a copy of this position transformed by merge operation.\n\t *\n\t * @protected\n\t * @param {module:engine/model/operation/mergeoperation~MergeOperation} operation\n\t * @returns {module:engine/model/position~Position}\n\t */\n\t_getTransformedByMergeOperation( operation ) {\n\t\tconst movedRange = operation.movedRange;\n\t\tconst isContained = movedRange.containsPosition( this ) || movedRange.start.isEqual( this );\n\n\t\tlet pos;\n\n\t\tif ( isContained ) {\n\t\t\tpos = this._getCombined( operation.sourcePosition, operation.targetPosition );\n\n\t\t\tif ( operation.sourcePosition.isBefore( operation.targetPosition ) ) {\n\t\t\t\t// Above happens during OT when the merged element is moved before the merged-to element.\n\t\t\t\tpos = pos._getTransformedByDeletion( operation.deletionPosition, 1 );\n\t\t\t}\n\t\t} else if ( this.isEqual( operation.deletionPosition ) ) {\n\t\t\tpos = Position._createAt( operation.deletionPosition );\n\t\t} else {\n\t\t\tpos = this._getTransformedByMove( operation.deletionPosition, operation.graveyardPosition, 1 );\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\t/**\n\t * Returns a copy of this position that is updated by removing `howMany` nodes starting from `deletePosition`.\n\t * It may happen that this position is in a removed node. If that is the case, `null` is returned instead.\n\t *\n\t * @protected\n\t * @param {module:engine/model/position~Position} deletePosition Position before the first removed node.\n\t * @param {Number} howMany How many nodes are removed.\n\t * @returns {module:engine/model/position~Position|null} Transformed position or `null`.\n\t */\n\t_getTransformedByDeletion( deletePosition, howMany ) {\n\t\tconst transformed = Position._createAt( this );\n\n\t\t// This position can't be affected if deletion was in a different root.\n\t\tif ( this.root != deletePosition.root ) {\n\t\t\treturn transformed;\n\t\t}\n\n\t\tif ( compareArrays( deletePosition.getParentPath(), this.getParentPath() ) == 'same' ) {\n\t\t\t// If nodes are removed from the node that is pointed by this position...\n\t\t\tif ( deletePosition.offset < this.offset ) {\n\t\t\t\t// And are removed from before an offset of that position...\n\t\t\t\tif ( deletePosition.offset + howMany > this.offset ) {\n\t\t\t\t\t// Position is in removed range, it's no longer in the tree.\n\t\t\t\t\treturn null;\n\t\t\t\t} else {\n\t\t\t\t\t// Decrement the offset accordingly.\n\t\t\t\t\ttransformed.offset -= howMany;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if ( compareArrays( deletePosition.getParentPath(), this.getParentPath() ) == 'prefix' ) {\n\t\t\t// If nodes are removed from a node that is on a path to this position...\n\t\t\tconst i = deletePosition.path.length - 1;\n\n\t\t\tif ( deletePosition.offset <= this.path[ i ] ) {\n\t\t\t\t// And are removed from before next node of that path...\n\t\t\t\tif ( deletePosition.offset + howMany > this.path[ i ] ) {\n\t\t\t\t\t// If the next node of that path is removed return null\n\t\t\t\t\t// because the node containing this position got removed.\n\t\t\t\t\treturn null;\n\t\t\t\t} else {\n\t\t\t\t\t// Otherwise, decrement index on that path.\n\t\t\t\t\ttransformed.path[ i ] -= howMany;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn transformed;\n\t}\n\n\t/**\n\t * Returns a copy of this position that is updated by inserting `howMany` nodes at `insertPosition`.\n\t *\n\t * @protected\n\t * @param {module:engine/model/position~Position} insertPosition Position where nodes are inserted.\n\t * @param {Number} howMany How many nodes are inserted.\n\t * @returns {module:engine/model/position~Position} Transformed position.\n\t */\n\t_getTransformedByInsertion( insertPosition, howMany ) {\n\t\tconst transformed = Position._createAt( this );\n\n\t\t// This position can't be affected if insertion was in a different root.\n\t\tif ( this.root != insertPosition.root ) {\n\t\t\treturn transformed;\n\t\t}\n\n\t\tif ( compareArrays( insertPosition.getParentPath(), this.getParentPath() ) == 'same' ) {\n\t\t\t// If nodes are inserted in the node that is pointed by this position...\n\t\t\tif ( insertPosition.offset < this.offset || ( insertPosition.offset == this.offset && this.stickiness != 'toPrevious' ) ) {\n\t\t\t\t// And are inserted before an offset of that position...\n\t\t\t\t// \"Push\" this positions offset.\n\t\t\t\ttransformed.offset += howMany;\n\t\t\t}\n\t\t} else if ( compareArrays( insertPosition.getParentPath(), this.getParentPath() ) == 'prefix' ) {\n\t\t\t// If nodes are inserted in a node that is on a path to this position...\n\t\t\tconst i = insertPosition.path.length - 1;\n\n\t\t\tif ( insertPosition.offset <= this.path[ i ] ) {\n\t\t\t\t// And are inserted before next node of that path...\n\t\t\t\t// \"Push\" the index on that path.\n\t\t\t\ttransformed.path[ i ] += howMany;\n\t\t\t}\n\t\t}\n\n\t\treturn transformed;\n\t}\n\n\t/**\n\t * Returns a copy of this position that is updated by moving `howMany` nodes from `sourcePosition` to `targetPosition`.\n\t *\n\t * @protected\n\t * @param {module:engine/model/position~Position} sourcePosition Position before the first element to move.\n\t * @param {module:engine/model/position~Position} targetPosition Position where moved elements will be inserted.\n\t * @param {Number} howMany How many consecutive nodes to move, starting from `sourcePosition`.\n\t * @returns {module:engine/model/position~Position} Transformed position.\n\t */\n\t_getTransformedByMove( sourcePosition, targetPosition, howMany ) {\n\t\t// Update target position, as it could be affected by nodes removal.\n\t\ttargetPosition = targetPosition._getTransformedByDeletion( sourcePosition, howMany );\n\n\t\tif ( sourcePosition.isEqual( targetPosition ) ) {\n\t\t\t// If `targetPosition` is equal to `sourcePosition` this isn't really any move. Just return position as it is.\n\t\t\treturn Position._createAt( this );\n\t\t}\n\n\t\t// Moving a range removes nodes from their original position. We acknowledge this by proper transformation.\n\t\tconst transformed = this._getTransformedByDeletion( sourcePosition, howMany );\n\n\t\tconst isMoved = transformed === null ||\n\t\t\t( sourcePosition.isEqual( this ) && this.stickiness == 'toNext' ) ||\n\t\t\t( sourcePosition.getShiftedBy( howMany ).isEqual( this ) && this.stickiness == 'toPrevious' );\n\n\t\tif ( isMoved ) {\n\t\t\t// This position is inside moved range (or sticks to it).\n\t\t\t// In this case, we calculate a combination of this position, move source position and target position.\n\t\t\treturn this._getCombined( sourcePosition, targetPosition );\n\t\t} else {\n\t\t\t// This position is not inside a removed range.\n\t\t\t//\n\t\t\t// In next step, we simply reflect inserting `howMany` nodes, which might further affect the position.\n\t\t\treturn transformed._getTransformedByInsertion( targetPosition, howMany );\n\t\t}\n\t}\n\n\t/**\n\t * Returns a new position that is a combination of this position and given positions.\n\t *\n\t * The combined position is a copy of this position transformed by moving a range starting at `source` position\n\t * to the `target` position. It is expected that this position is inside the moved range.\n\t *\n\t * Example:\n\t *\n\t *\t\tlet original = model.createPositionFromPath( root, [ 2, 3, 1 ] );\n\t *\t\tlet source = model.createPositionFromPath( root, [ 2, 2 ] );\n\t *\t\tlet target = model.createPositionFromPath( otherRoot, [ 1, 1, 3 ] );\n\t *\t\toriginal._getCombined( source, target ); // path is [ 1, 1, 4, 1 ], root is `otherRoot`\n\t *\n\t * Explanation:\n\t *\n\t * We have a position `[ 2, 3, 1 ]` and move some nodes from `[ 2, 2 ]` to `[ 1, 1, 3 ]`. The original position\n\t * was inside moved nodes and now should point to the new place. The moved nodes will be after\n\t * positions `[ 1, 1, 3 ]`, `[ 1, 1, 4 ]`, `[ 1, 1, 5 ]`. Since our position was in the second moved node,\n\t * the transformed position will be in a sub-tree of a node at `[ 1, 1, 4 ]`. Looking at original path, we\n\t * took care of `[ 2, 3 ]` part of it. Now we have to add the rest of the original path to the transformed path.\n\t * Finally, the transformed position will point to `[ 1, 1, 4, 1 ]`.\n\t *\n\t * @protected\n\t * @param {module:engine/model/position~Position} source Beginning of the moved range.\n\t * @param {module:engine/model/position~Position} target Position where the range is moved.\n\t * @returns {module:engine/model/position~Position} Combined position.\n\t */\n\t_getCombined( source, target ) {\n\t\tconst i = source.path.length - 1;\n\n\t\t// The first part of a path to combined position is a path to the place where nodes were moved.\n\t\tconst combined = Position._createAt( target );\n\t\tcombined.stickiness = this.stickiness;\n\n\t\t// Then we have to update the rest of the path.\n\n\t\t// Fix the offset because this position might be after `from` position and we have to reflect that.\n\t\tcombined.offset = combined.offset + this.path[ i ] - source.offset;\n\n\t\t// Then, add the rest of the path.\n\t\t// If this position is at the same level as `from` position nothing will get added.\n\t\tcombined.path = combined.path.concat( this.path.slice( i + 1 ) );\n\n\t\treturn combined;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\treturn {\n\t\t\troot: this.root.toJSON(),\n\t\t\tpath: Array.from( this.path ),\n\t\t\tstickiness: this.stickiness\n\t\t};\n\t}\n\n\t/**\n\t * Returns a new position that is equal to current position.\n\t *\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tclone() {\n\t\treturn new this.constructor( this.root, this.path, this.stickiness );\n\t}\n\n\t/**\n\t * Creates position at the given location. The location can be specified as:\n\t *\n\t * * a {@link module:engine/model/position~Position position},\n\t * * parent element and offset (offset defaults to `0`),\n\t * * parent element and `'end'` (sets position at the end of that element),\n\t * * {@link module:engine/model/item~Item model item} and `'before'` or `'after'` (sets position before or after given model item).\n\t *\n\t * This method is a shortcut to other factory methods such as:\n\t *\n\t * * {@link module:engine/model/position~Position._createBefore},\n\t * * {@link module:engine/model/position~Position._createAfter}.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when the\n\t * first parameter is a {@link module:engine/model/item~Item model item}.\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness. Used only when the\n\t * first parameter is a {@link module:engine/model/item~Item model item}.\n\t * @protected\n\t */\n\tstatic _createAt( itemOrPosition, offset, stickiness = 'toNone' ) {\n\t\tif ( itemOrPosition instanceof Position ) {\n\t\t\treturn new Position( itemOrPosition.root, itemOrPosition.path, itemOrPosition.stickiness );\n\t\t} else {\n\t\t\tconst node = itemOrPosition;\n\n\t\t\tif ( offset == 'end' ) {\n\t\t\t\toffset = node.maxOffset;\n\t\t\t} else if ( offset == 'before' ) {\n\t\t\t\treturn this._createBefore( node, stickiness );\n\t\t\t} else if ( offset == 'after' ) {\n\t\t\t\treturn this._createAfter( node, stickiness );\n\t\t\t} else if ( offset !== 0 && !offset ) {\n\t\t\t\t/**\n\t\t\t\t * {@link module:engine/model/model~Model#createPositionAt `Model#createPositionAt()`}\n\t\t\t\t * requires the offset to be specified when the first parameter is a model item.\n\t\t\t\t *\n\t\t\t\t * @error model-createPositionAt-offset-required\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'model-createPositionAt-offset-required: ' +\n\t\t\t\t\t'Model#createPositionAt() requires the offset when the first parameter is a model item.',\n\t\t\t\t\t[ this, itemOrPosition ]\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif ( !node.is( 'element' ) && !node.is( 'documentFragment' ) ) {\n\t\t\t\t/**\n\t\t\t\t * Position parent have to be a model element or model document fragment.\n\t\t\t\t *\n\t\t\t\t * @error model-position-parent-incorrect\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'model-position-parent-incorrect: Position parent have to be a element or document fragment.',\n\t\t\t\t\t[ this, itemOrPosition ]\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst path = node.getPath();\n\n\t\t\tpath.push( offset );\n\n\t\t\treturn new this( node.root, path, stickiness );\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new position, after given {@link module:engine/model/item~Item model item}.\n\t *\n\t * @param {module:engine/model/item~Item} item Item after which the position should be placed.\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness.\n\t * @returns {module:engine/model/position~Position}\n\t * @protected\n\t */\n\tstatic _createAfter( item, stickiness ) {\n\t\tif ( !item.parent ) {\n\t\t\t/**\n\t\t\t * You can not make a position after a root element.\n\t\t\t *\n\t\t\t * @error model-position-after-root\n\t\t\t * @param {module:engine/model/item~Item} root\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-position-after-root: You cannot make a position after root.',\n\t\t\t\t[ this, item ],\n\t\t\t\t{ root: item }\n\t\t\t);\n\t\t}\n\n\t\treturn this._createAt( item.parent, item.endOffset, stickiness );\n\t}\n\n\t/**\n\t * Creates a new position, before the given {@link module:engine/model/item~Item model item}.\n\t *\n\t * @param {module:engine/model/item~Item} item Item before which the position should be placed.\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness.\n\t * @returns {module:engine/model/position~Position}\n\t * @protected\n\t */\n\tstatic _createBefore( item, stickiness ) {\n\t\tif ( !item.parent ) {\n\t\t\t/**\n\t\t\t * You can not make a position before a root element.\n\t\t\t *\n\t\t\t * @error model-position-before-root\n\t\t\t * @param {module:engine/model/item~Item} root\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-position-before-root: You cannot make a position before root.',\n\t\t\t\titem,\n\t\t\t\t{ root: item }\n\t\t\t);\n\t\t}\n\n\t\treturn this._createAt( item.parent, item.startOffset, stickiness );\n\t}\n\n\t/**\n\t * Creates a `Position` instance from given plain object (i.e. parsed JSON string).\n\t *\n\t * @param {Object} json Plain object to be converted to `Position`.\n\t * @param {module:engine/model/document~Document} doc Document object that will be position owner.\n\t * @returns {module:engine/model/position~Position} `Position` instance created using given plain object.\n\t */\n\tstatic fromJSON( json, doc ) {\n\t\tif ( json.root === '$graveyard' ) {\n\t\t\tconst pos = new Position( doc.graveyard, json.path );\n\t\t\tpos.stickiness = json.stickiness;\n\n\t\t\treturn pos;\n\t\t}\n\n\t\tif ( !doc.getRoot( json.root ) ) {\n\t\t\t/**\n\t\t\t * Cannot create position for document. Root with specified name does not exist.\n\t\t\t *\n\t\t\t * @error model-position-fromjson-no-root\n\t\t\t * @param {String} rootName\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-position-fromjson-no-root: Cannot create position for document. Root with specified name does not exist.',\n\t\t\t\tdoc,\n\t\t\t\t{ rootName: json.root }\n\t\t\t);\n\t\t}\n\n\t\treturn new Position( doc.getRoot( json.root ), json.path, json.stickiness );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `${ this.root } [ ${ this.path.join( ', ' ) } ]`;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // log() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ModelPosition: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n}\n\n/**\n * A flag indicating whether this position is `'before'` or `'after'` or `'same'` as given position.\n * If positions are in different roots `'different'` flag is returned.\n *\n * @typedef {String} module:engine/model/position~PositionRelation\n */\n\n/**\n * Represents how position is \"sticking\" with neighbour nodes. Used to define how position should be transformed (moved)\n * in edge cases. Possible values: `'toNone'`, `'toNext'`, `'toPrevious'`.\n *\n * Examples:\n *\n *\t\tInsert. Position is at | and nodes are inserted at the same position, marked as ^:\n *\n *\t\t- sticks to none:           <p>f^|oo</p>  ->  <p>fbar|oo</p>\n *\t\t- sticks to next node:      <p>f^|oo</p>  ->  <p>fbar|oo</p>\n *\t\t- sticks to previous node:  <p>f|^oo</p>  ->  <p>f|baroo</p>\n *\n *\n *\t\tMove. Position is at | and range [oo] is moved to position ^:\n *\n *\t\t- sticks to none:           <p>f|[oo]</p><p>b^ar</p>  ->  <p>f|</p><p>booar</p>\n *\t\t- sticks to none:           <p>f[oo]|</p><p>b^ar</p>  ->  <p>f|</p><p>booar</p>\n *\n *\t\t- sticks to next node:      <p>f|[oo]</p><p>b^ar</p>  ->  <p>f</p><p>b|ooar</p>\n *\t\t- sticks to next node:      <p>f[oo]|</p><p>b^ar</p>  ->  <p>f|</p><p>booar</p>\n *\n *\t\t- sticks to previous node:  <p>f|[oo]</p><p>b^ar</p>  ->  <p>f|</p><p>booar</p>\n *\t\t- sticks to previous node:  <p>f[oo]|</p><p>b^ar</p>  ->  <p>f</p><p>boo|ar</p>\n *\n * @typedef {String} module:engine/model/position~PositionStickiness\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/range\n */\n\nimport Position from './position';\nimport TreeWalker from './treewalker';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\n\n/**\n * Represents a range in the model tree.\n *\n * A range is defined by its {@link module:engine/model/range~Range#start} and {@link module:engine/model/range~Range#end}\n * positions.\n *\n * You can create range instances via its constructor or the `createRange*()` factory methods of\n * {@link module:engine/model/model~Model} and {@link module:engine/model/writer~Writer}.\n */\nexport default class Range {\n\t/**\n\t * Creates a range spanning from `start` position to `end` position.\n\t *\n\t * @param {module:engine/model/position~Position} start Start position.\n\t * @param {module:engine/model/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\n\t */\n\tconstructor( start, end = null ) {\n\t\t/**\n\t\t * Start position.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/position~Position}\n\t\t */\n\t\tthis.start = Position._createAt( start );\n\n\t\t/**\n\t\t * End position.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/position~Position}\n\t\t */\n\t\tthis.end = end ? Position._createAt( end ) : Position._createAt( start );\n\n\t\t// If the range is collapsed, treat in a similar way as a position and set its boundaries stickiness to 'toNone'.\n\t\t// In other case, make the boundaries stick to the \"inside\" of the range.\n\t\tthis.start.stickiness = this.isCollapsed ? 'toNone' : 'toNext';\n\t\tthis.end.stickiness = this.isCollapsed ? 'toNone' : 'toPrevious';\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * Iterates over all {@link module:engine/model/item~Item items} that are in this range and returns\n\t * them together with additional information like length or {@link module:engine/model/position~Position positions},\n\t * grouped as {@link module:engine/model/treewalker~TreeWalkerValue}.\n\t * It iterates over all {@link module:engine/model/textproxy~TextProxy text contents} that are inside the range\n\t * and all the {@link module:engine/model/element~Element}s that are entered into when iterating over this range.\n\t *\n\t * This iterator uses {@link module:engine/model/treewalker~TreeWalker} with `boundaries` set to this range\n\t * and `ignoreElementEnd` option set to `true`.\n\t *\n\t * @returns {Iterable.<module:engine/model/treewalker~TreeWalkerValue>}\n\t */\n\t* [ Symbol.iterator ]() {\n\t\tyield* new TreeWalker( { boundaries: this, ignoreElementEnd: true } );\n\t}\n\n\t/**\n\t * Returns whether the range is collapsed, that is if {@link #start} and\n\t * {@link #end} positions are equal.\n\t *\n\t * @type {Boolean}\n\t */\n\tget isCollapsed() {\n\t\treturn this.start.isEqual( this.end );\n\t}\n\n\t/**\n\t * Returns whether this range is flat, that is if {@link #start} position and\n\t * {@link #end} position are in the same {@link module:engine/model/position~Position#parent}.\n\t *\n\t * @type {Boolean}\n\t */\n\tget isFlat() {\n\t\tconst startParentPath = this.start.getParentPath();\n\t\tconst endParentPath = this.end.getParentPath();\n\n\t\treturn compareArrays( startParentPath, endParentPath ) == 'same';\n\t}\n\n\t/**\n\t * Range root element.\n\t *\n\t * @type {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\treturn this.start.root;\n\t}\n\n\t/**\n\t * Checks whether this range contains given {@link module:engine/model/position~Position position}.\n\t *\n\t * @param {module:engine/model/position~Position} position Position to check.\n\t * @returns {Boolean} `true` if given {@link module:engine/model/position~Position position} is contained\n\t * in this range,`false` otherwise.\n\t */\n\tcontainsPosition( position ) {\n\t\treturn position.isAfter( this.start ) && position.isBefore( this.end );\n\t}\n\n\t/**\n\t * Checks whether this range contains given {@link ~Range range}.\n\t *\n\t * @param {module:engine/model/range~Range} otherRange Range to check.\n\t * @param {Boolean} [loose=false] Whether the check is loose or strict. If the check is strict (`false`), compared range cannot\n\t * start or end at the same position as this range boundaries. If the check is loose (`true`), compared range can start, end or\n\t * even be equal to this range. Note that collapsed ranges are always compared in strict mode.\n\t * @returns {Boolean} `true` if given {@link ~Range range} boundaries are contained by this range, `false` otherwise.\n\t */\n\tcontainsRange( otherRange, loose = false ) {\n\t\tif ( otherRange.isCollapsed ) {\n\t\t\tloose = false;\n\t\t}\n\n\t\tconst containsStart = this.containsPosition( otherRange.start ) || ( loose && this.start.isEqual( otherRange.start ) );\n\t\tconst containsEnd = this.containsPosition( otherRange.end ) || ( loose && this.end.isEqual( otherRange.end ) );\n\n\t\treturn containsStart && containsEnd;\n\t}\n\n\t/**\n\t * Checks whether given {@link module:engine/model/item~Item} is inside this range.\n\t *\n\t * @param {module:engine/model/item~Item} item Model item to check.\n\t */\n\tcontainsItem( item ) {\n\t\tconst pos = Position._createBefore( item );\n\n\t\treturn this.containsPosition( pos ) || this.start.isEqual( pos );\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\trange.is( 'range' ); // -> true\n\t *\t\trange.is( 'model:range' ); // -> true\n\t *\n\t *\t\trange.is( 'view:range' ); // -> false\n\t *\t\trange.is( 'documentSelection' ); // -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type == 'range' || type == 'model:range';\n\t}\n\n\t/**\n\t * Two ranges are equal if their {@link #start} and {@link #end} positions are equal.\n\t *\n\t * @param {module:engine/model/range~Range} otherRange Range to compare with.\n\t * @returns {Boolean} `true` if ranges are equal, `false` otherwise.\n\t */\n\tisEqual( otherRange ) {\n\t\treturn this.start.isEqual( otherRange.start ) && this.end.isEqual( otherRange.end );\n\t}\n\n\t/**\n\t * Checks and returns whether this range intersects with given range.\n\t *\n\t * @param {module:engine/model/range~Range} otherRange Range to compare with.\n\t * @returns {Boolean} `true` if ranges intersect, `false` otherwise.\n\t */\n\tisIntersecting( otherRange ) {\n\t\treturn this.start.isBefore( otherRange.end ) && this.end.isAfter( otherRange.start );\n\t}\n\n\t/**\n\t * Computes which part(s) of this {@link ~Range range} is not a part of given {@link ~Range range}.\n\t * Returned array contains zero, one or two {@link ~Range ranges}.\n\t *\n\t * Examples:\n\t *\n\t *\t\tlet range = model.createRange(\n\t *\t\t\tmodel.createPositionFromPath( root, [ 2, 7 ] ),\n\t *\t\t\tmodel.createPositionFromPath( root, [ 4, 0, 1 ] )\n\t *\t\t);\n\t *\t\tlet otherRange = model.createRange( model.createPositionFromPath( root, [ 1 ] ), model.createPositionFromPath( root, [ 5 ] ) );\n\t *\t\tlet transformed = range.getDifference( otherRange );\n\t *\t\t// transformed array has no ranges because `otherRange` contains `range`\n\t *\n\t *\t\totherRange = model.createRange( model.createPositionFromPath( root, [ 1 ] ), model.createPositionFromPath( root, [ 3 ] ) );\n\t *\t\ttransformed = range.getDifference( otherRange );\n\t *\t\t// transformed array has one range: from [ 3 ] to [ 4, 0, 1 ]\n\t *\n\t *\t\totherRange = model.createRange( model.createPositionFromPath( root, [ 3 ] ), model.createPositionFromPath( root, [ 4 ] ) );\n\t *\t\ttransformed = range.getDifference( otherRange );\n\t *\t\t// transformed array has two ranges: from [ 2, 7 ] to [ 3 ] and from [ 4 ] to [ 4, 0, 1 ]\n\t *\n\t * @param {module:engine/model/range~Range} otherRange Range to differentiate against.\n\t * @returns {Array.<module:engine/model/range~Range>} The difference between ranges.\n\t */\n\tgetDifference( otherRange ) {\n\t\tconst ranges = [];\n\n\t\tif ( this.isIntersecting( otherRange ) ) {\n\t\t\t// Ranges intersect.\n\n\t\t\tif ( this.containsPosition( otherRange.start ) ) {\n\t\t\t\t// Given range start is inside this range. This means that we have to\n\t\t\t\t// add shrunken range - from the start to the middle of this range.\n\t\t\t\tranges.push( new Range( this.start, otherRange.start ) );\n\t\t\t}\n\n\t\t\tif ( this.containsPosition( otherRange.end ) ) {\n\t\t\t\t// Given range end is inside this range. This means that we have to\n\t\t\t\t// add shrunken range - from the middle of this range to the end.\n\t\t\t\tranges.push( new Range( otherRange.end, this.end ) );\n\t\t\t}\n\t\t} else {\n\t\t\t// Ranges do not intersect, return the original range.\n\t\t\tranges.push( new Range( this.start, this.end ) );\n\t\t}\n\n\t\treturn ranges;\n\t}\n\n\t/**\n\t * Returns an intersection of this {@link ~Range range} and given {@link ~Range range}.\n\t * Intersection is a common part of both of those ranges. If ranges has no common part, returns `null`.\n\t *\n\t * Examples:\n\t *\n\t *\t\tlet range = model.createRange(\n\t *\t\t\tmodel.createPositionFromPath( root, [ 2, 7 ] ),\n\t *\t\t\tmodel.createPositionFromPath( root, [ 4, 0, 1 ] )\n\t *\t\t);\n\t *\t\tlet otherRange = model.createRange( model.createPositionFromPath( root, [ 1 ] ), model.createPositionFromPath( root, [ 2 ] ) );\n\t *\t\tlet transformed = range.getIntersection( otherRange ); // null - ranges have no common part\n\t *\n\t *\t\totherRange = model.createRange( model.createPositionFromPath( root, [ 3 ] ), model.createPositionFromPath( root, [ 5 ] ) );\n\t *\t\ttransformed = range.getIntersection( otherRange ); // range from [ 3 ] to [ 4, 0, 1 ]\n\t *\n\t * @param {module:engine/model/range~Range} otherRange Range to check for intersection.\n\t * @returns {module:engine/model/range~Range|null} A common part of given ranges or `null` if ranges have no common part.\n\t */\n\tgetIntersection( otherRange ) {\n\t\tif ( this.isIntersecting( otherRange ) ) {\n\t\t\t// Ranges intersect, so a common range will be returned.\n\t\t\t// At most, it will be same as this range.\n\t\t\tlet commonRangeStart = this.start;\n\t\t\tlet commonRangeEnd = this.end;\n\n\t\t\tif ( this.containsPosition( otherRange.start ) ) {\n\t\t\t\t// Given range start is inside this range. This means thaNt we have to\n\t\t\t\t// shrink common range to the given range start.\n\t\t\t\tcommonRangeStart = otherRange.start;\n\t\t\t}\n\n\t\t\tif ( this.containsPosition( otherRange.end ) ) {\n\t\t\t\t// Given range end is inside this range. This means that we have to\n\t\t\t\t// shrink common range to the given range end.\n\t\t\t\tcommonRangeEnd = otherRange.end;\n\t\t\t}\n\n\t\t\treturn new Range( commonRangeStart, commonRangeEnd );\n\t\t}\n\n\t\t// Ranges do not intersect, so they do not have common part.\n\t\treturn null;\n\t}\n\n\t/**\n\t * Computes and returns the smallest set of {@link #isFlat flat} ranges, that covers this range in whole.\n\t *\n\t * See an example of a model structure (`[` and `]` are range boundaries):\n\t *\n\t *\t\troot                                                            root\n\t *\t\t |- element DIV                         DIV             P2              P3             DIV\n\t *\t\t |   |- element H                   H        P1        f o o           b a r       H         P4\n\t *\t\t |   |   |- \"fir[st\"             fir[st     lorem                               se]cond     ipsum\n\t *\t\t |   |- element P1\n\t *\t\t |   |   |- \"lorem\"                                              ||\n\t *\t\t |- element P2                                                   ||\n\t *\t\t |   |- \"foo\"                                                    VV\n\t *\t\t |- element P3\n\t *\t\t |   |- \"bar\"                                                   root\n\t *\t\t |- element DIV                         DIV             [P2             P3]             DIV\n\t *\t\t |   |- element H                   H       [P1]       f o o           b a r        H         P4\n\t *\t\t |   |   |- \"se]cond\"            fir[st]    lorem                               [se]cond     ipsum\n\t *\t\t |   |- element P4\n\t *\t\t |   |   |- \"ipsum\"\n\t *\n\t * As it can be seen, letters contained in the range are: `stloremfoobarse`, spread across different parents.\n\t * We are looking for minimal set of flat ranges that contains the same nodes.\n\t *\n\t * Minimal flat ranges for above range `( [ 0, 0, 3 ], [ 3, 0, 2 ] )` will be:\n\t *\n\t *\t\t( [ 0, 0, 3 ], [ 0, 0, 5 ] ) = \"st\"\n\t *\t\t( [ 0, 1 ], [ 0, 2 ] ) = element P1 (\"lorem\")\n\t *\t\t( [ 1 ], [ 3 ] ) = element P2, element P3 (\"foobar\")\n\t *\t\t( [ 3, 0, 0 ], [ 3, 0, 2 ] ) = \"se\"\n\t *\n\t * **Note:** if an {@link module:engine/model/element~Element element} is not wholly contained in this range, it won't be returned\n\t * in any of the returned flat ranges. See in the example how `H` elements at the beginning and at the end of the range\n\t * were omitted. Only their parts that were wholly in the range were returned.\n\t *\n\t * **Note:** this method is not returning flat ranges that contain no nodes.\n\t *\n\t * @returns {Array.<module:engine/model/range~Range>} Array of flat ranges covering this range.\n\t */\n\tgetMinimalFlatRanges() {\n\t\tconst ranges = [];\n\t\tconst diffAt = this.start.getCommonPath( this.end ).length;\n\n\t\tconst pos = Position._createAt( this.start );\n\t\tlet posParent = pos.parent;\n\n\t\t// Go up.\n\t\twhile ( pos.path.length > diffAt + 1 ) {\n\t\t\tconst howMany = posParent.maxOffset - pos.offset;\n\n\t\t\tif ( howMany !== 0 ) {\n\t\t\t\tranges.push( new Range( pos, pos.getShiftedBy( howMany ) ) );\n\t\t\t}\n\n\t\t\tpos.path = pos.path.slice( 0, -1 );\n\t\t\tpos.offset++;\n\t\t\tposParent = posParent.parent;\n\t\t}\n\n\t\t// Go down.\n\t\twhile ( pos.path.length <= this.end.path.length ) {\n\t\t\tconst offset = this.end.path[ pos.path.length - 1 ];\n\t\t\tconst howMany = offset - pos.offset;\n\n\t\t\tif ( howMany !== 0 ) {\n\t\t\t\tranges.push( new Range( pos, pos.getShiftedBy( howMany ) ) );\n\t\t\t}\n\n\t\t\tpos.offset = offset;\n\t\t\tpos.path.push( 0 );\n\t\t}\n\n\t\treturn ranges;\n\t}\n\n\t/**\n\t * Creates a {@link module:engine/model/treewalker~TreeWalker TreeWalker} instance with this range as a boundary.\n\t *\n\t * For example, to iterate over all items in the entire document root:\n\t *\n\t *\t\t// Create a range spanning over the entire root content:\n\t *\t\tconst range = editor.model.createRangeIn( editor.model.document.getRoot() );\n\t *\n\t *\t\t// Iterate over all items in this range:\n\t *\t\tfor ( const value of range.getWalker() ) {\n\t *\t\t\tconsole.log( value.item );\n\t *\t\t}\n\t *\n\t * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\n\t * @param {module:engine/model/position~Position} [options.startPosition]\n\t * @param {Boolean} [options.singleCharacters=false]\n\t * @param {Boolean} [options.shallow=false]\n\t * @param {Boolean} [options.ignoreElementEnd=false]\n\t */\n\tgetWalker( options = {} ) {\n\t\toptions.boundaries = this;\n\n\t\treturn new TreeWalker( options );\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all {@link module:engine/model/item~Item items} that are in this range and returns\n\t * them.\n\t *\n\t * This method uses {@link module:engine/model/treewalker~TreeWalker} with `boundaries` set to this range and `ignoreElementEnd` option\n\t * set to `true`. However it returns only {@link module:engine/model/item~Item model items},\n\t * not {@link module:engine/model/treewalker~TreeWalkerValue}.\n\t *\n\t * You may specify additional options for the tree walker. See {@link module:engine/model/treewalker~TreeWalker} for\n\t * a full list of available options.\n\t *\n\t * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\n\t * @returns {Iterable.<module:engine/model/item~Item>}\n\t */\n\t* getItems( options = {} ) {\n\t\toptions.boundaries = this;\n\t\toptions.ignoreElementEnd = true;\n\n\t\tconst treeWalker = new TreeWalker( options );\n\n\t\tfor ( const value of treeWalker ) {\n\t\t\tyield value.item;\n\t\t}\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all {@link module:engine/model/position~Position positions} that are boundaries or\n\t * contained in this range.\n\t *\n\t * This method uses {@link module:engine/model/treewalker~TreeWalker} with `boundaries` set to this range. However it returns only\n\t * {@link module:engine/model/position~Position positions}, not {@link module:engine/model/treewalker~TreeWalkerValue}.\n\t *\n\t * You may specify additional options for the tree walker. See {@link module:engine/model/treewalker~TreeWalker} for\n\t * a full list of available options.\n\t *\n\t * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\n\t * @returns {Iterable.<module:engine/model/position~Position>}\n\t */\n\t* getPositions( options = {} ) {\n\t\toptions.boundaries = this;\n\n\t\tconst treeWalker = new TreeWalker( options );\n\n\t\tyield treeWalker.position;\n\n\t\tfor ( const value of treeWalker ) {\n\t\t\tyield value.nextPosition;\n\t\t}\n\t}\n\n\t/**\n\t * Returns a range that is a result of transforming this range by given `operation`.\n\t *\n\t * **Note:** transformation may break one range into multiple ranges (for example, when a part of the range is\n\t * moved to a different part of document tree). For this reason, an array is returned by this method and it\n\t * may contain one or more `Range` instances.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} operation Operation to transform range by.\n\t * @returns {Array.<module:engine/model/range~Range>} Range which is the result of transformation.\n\t */\n\tgetTransformedByOperation( operation ) {\n\t\tswitch ( operation.type ) {\n\t\t\tcase 'insert':\n\t\t\t\treturn this._getTransformedByInsertOperation( operation );\n\t\t\tcase 'move':\n\t\t\tcase 'remove':\n\t\t\tcase 'reinsert':\n\t\t\t\treturn this._getTransformedByMoveOperation( operation );\n\t\t\tcase 'split':\n\t\t\t\treturn [ this._getTransformedBySplitOperation( operation ) ];\n\t\t\tcase 'merge':\n\t\t\t\treturn [ this._getTransformedByMergeOperation( operation ) ];\n\t\t}\n\n\t\treturn [ new Range( this.start, this.end ) ];\n\t}\n\n\t/**\n\t * Returns a range that is a result of transforming this range by multiple `operations`.\n\t *\n\t * @see ~Range#getTransformedByOperation\n\t * @param {Iterable.<module:engine/model/operation/operation~Operation>} operations Operations to transform the range by.\n\t * @returns {Array.<module:engine/model/range~Range>} Range which is the result of transformation.\n\t */\n\tgetTransformedByOperations( operations ) {\n\t\tconst ranges = [ new Range( this.start, this.end ) ];\n\n\t\tfor ( const operation of operations ) {\n\t\t\tfor ( let i = 0; i < ranges.length; i++ ) {\n\t\t\t\tconst result = ranges[ i ].getTransformedByOperation( operation );\n\n\t\t\t\tranges.splice( i, 1, ...result );\n\t\t\t\ti += result.length - 1;\n\t\t\t}\n\t\t}\n\n\t\t// It may happen that a range is split into two, and then the part of second \"piece\" is moved into first\n\t\t// \"piece\". In this case we will have incorrect third range, which should not be included in the result --\n\t\t// because it is already included in the first \"piece\". In this loop we are looking for all such ranges that\n\t\t// are inside other ranges and we simply remove them.\n\t\tfor ( let i = 0; i < ranges.length; i++ ) {\n\t\t\tconst range = ranges[ i ];\n\n\t\t\tfor ( let j = i + 1; j < ranges.length; j++ ) {\n\t\t\t\tconst next = ranges[ j ];\n\n\t\t\t\tif ( range.containsRange( next ) || next.containsRange( range ) || range.isEqual( next ) ) {\n\t\t\t\t\tranges.splice( j, 1 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn ranges;\n\t}\n\n\t/**\n\t * Returns an {@link module:engine/model/element~Element} or {@link module:engine/model/documentfragment~DocumentFragment}\n\t * which is a common ancestor of the range's both ends (in which the entire range is contained).\n\t *\n\t * @returns {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n\t */\n\tgetCommonAncestor() {\n\t\treturn this.start.getCommonAncestor( this.end );\n\t}\n\n\t/**\n\t * Converts `Range` to plain object and returns it.\n\t *\n\t * @returns {Object} `Node` converted to plain object.\n\t */\n\ttoJSON() {\n\t\treturn {\n\t\t\tstart: this.start.toJSON(),\n\t\t\tend: this.end.toJSON()\n\t\t};\n\t}\n\n\t/**\n\t * Returns a new range that is equal to current range.\n\t *\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tclone() {\n\t\treturn new this.constructor( this.start, this.end );\n\t}\n\n\t/**\n\t * Returns a result of transforming a copy of this range by insert operation.\n\t *\n\t * One or more ranges may be returned as a result of this transformation.\n\t *\n\t * @protected\n\t * @param {module:engine/model/operation/insertoperation~InsertOperation} operation\n\t * @returns {Array.<module:engine/model/range~Range>}\n\t */\n\t_getTransformedByInsertOperation( operation, spread = false ) {\n\t\treturn this._getTransformedByInsertion( operation.position, operation.howMany, spread );\n\t}\n\n\t/**\n\t * Returns a result of transforming a copy of this range by move operation.\n\t *\n\t * One or more ranges may be returned as a result of this transformation.\n\t *\n\t * @protected\n\t * @param {module:engine/model/operation/moveoperation~MoveOperation} operation\n\t * @returns {Array.<module:engine/model/range~Range>}\n\t */\n\t_getTransformedByMoveOperation( operation, spread = false ) {\n\t\tconst sourcePosition = operation.sourcePosition;\n\t\tconst howMany = operation.howMany;\n\t\tconst targetPosition = operation.targetPosition;\n\n\t\treturn this._getTransformedByMove( sourcePosition, targetPosition, howMany, spread );\n\t}\n\n\t/**\n\t * Returns a result of transforming a copy of this range by split operation.\n\t *\n\t * Always one range is returned. The transformation is done in a way to not break the range.\n\t *\n\t * @protected\n\t * @param {module:engine/model/operation/splitoperation~SplitOperation} operation\n\t * @returns {module:engine/model/range~Range}\n\t */\n\t_getTransformedBySplitOperation( operation ) {\n\t\tconst start = this.start._getTransformedBySplitOperation( operation );\n\t\tlet end = this.end._getTransformedBySplitOperation( operation );\n\n\t\tif ( this.end.isEqual( operation.insertionPosition ) ) {\n\t\t\tend = this.end.getShiftedBy( 1 );\n\t\t}\n\n\t\t// Below may happen when range contains graveyard element used by split operation.\n\t\tif ( start.root != end.root ) {\n\t\t\t// End position was next to the moved graveyard element and was moved with it.\n\t\t\t// Fix it by using old `end` which has proper `root`.\n\t\t\tend = this.end.getShiftedBy( -1 );\n\t\t}\n\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Returns a result of transforming a copy of this range by merge operation.\n\t *\n\t * Always one range is returned. The transformation is done in a way to not break the range.\n\t *\n\t * @protected\n\t * @param {module:engine/model/operation/mergeoperation~MergeOperation} operation\n\t * @returns {module:engine/model/range~Range}\n\t */\n\t_getTransformedByMergeOperation( operation ) {\n\t\t// Special case when the marker is set on \"the closing tag\" of an element. Marker can be set like that during\n\t\t// transformations, especially when a content of a few block elements were removed. For example:\n\t\t//\n\t\t// {} is the transformed range, [] is the removed range.\n\t\t// <p>F[o{o</p><p>B}ar</p><p>Xy]z</p>\n\t\t//\n\t\t// <p>Fo{o</p><p>B}ar</p><p>z</p>\n\t\t// <p>F{</p><p>B}ar</p><p>z</p>\n\t\t// <p>F{</p>}<p>z</p>\n\t\t// <p>F{}z</p>\n\t\t//\n\t\tif ( this.start.isEqual( operation.targetPosition ) && this.end.isEqual( operation.deletionPosition ) ) {\n\t\t\treturn new Range( this.start );\n\t\t}\n\n\t\tlet start = this.start._getTransformedByMergeOperation( operation );\n\t\tlet end = this.end._getTransformedByMergeOperation( operation );\n\n\t\tif ( start.root != end.root ) {\n\t\t\t// This happens when the end position was next to the merged (deleted) element.\n\t\t\t// Then, the end position was moved to the graveyard root. In this case we need to fix\n\t\t\t// the range cause its boundaries would be in different roots.\n\t\t\tend = this.end.getShiftedBy( -1 );\n\t\t}\n\n\t\tif ( start.isAfter( end ) ) {\n\t\t\t// This happens in three following cases:\n\t\t\t//\n\t\t\t// Case 1: Merge operation source position is before the target position (due to some transformations, OT, etc.)\n\t\t\t//         This means that start can be moved before the end of the range.\n\t\t\t//\n\t\t\t// Before: <p>a{a</p><p>b}b</p><p>cc</p>\n\t\t\t// Merge:  <p>b}b</p><p>cca{a</p>\n\t\t\t// Fix:    <p>{b}b</p><p>ccaa</p>\n\t\t\t//\n\t\t\t// Case 2: Range start is before merged node but not directly.\n\t\t\t//         Result should include all nodes that were in the original range.\n\t\t\t//\n\t\t\t// Before: <p>aa</p>{<p>cc</p><p>b}b</p>\n\t\t\t// Merge:  <p>aab}b</p>{<p>cc</p>\n\t\t\t// Fix:    <p>aa{bb</p><p>cc</p>}\n\t\t\t//\n\t\t\t//         The range is expanded by an additional `b` letter but it is better than dropping the whole `cc` paragraph.\n\t\t\t//\n\t\t\t// Case 3: Range start is directly before merged node.\n\t\t\t//         Resulting range should include only nodes from the merged element:\n\t\t\t//\n\t\t\t// Before: <p>aa</p>{<p>b}b</p><p>cc</p>\n\t\t\t// Merge:  <p>aab}b</p>{<p>cc</p>\n\t\t\t// Fix:    <p>aa{b}b</p><p>cc</p>\n\t\t\t//\n\n\t\t\tif ( operation.sourcePosition.isBefore( operation.targetPosition ) ) {\n\t\t\t\t// Case 1.\n\t\t\t\tstart = Position._createAt( end );\n\t\t\t\tstart.offset = 0;\n\t\t\t} else {\n\t\t\t\tif ( !operation.deletionPosition.isEqual( start ) ) {\n\t\t\t\t\t// Case 2.\n\t\t\t\t\tend = operation.deletionPosition;\n\t\t\t\t}\n\n\t\t\t\t// In both case 2 and 3 start is at the end of the merge-to element.\n\t\t\t\tstart = operation.targetPosition;\n\t\t\t}\n\n\t\t\treturn new Range( start, end );\n\t\t}\n\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Returns an array containing one or two {@link ~Range ranges} that are a result of transforming this\n\t * {@link ~Range range} by inserting `howMany` nodes at `insertPosition`. Two {@link ~Range ranges} are\n\t * returned if the insertion was inside this {@link ~Range range} and `spread` is set to `true`.\n\t *\n\t * Examples:\n\t *\n\t *\t\tlet range = model.createRange(\n\t *\t\t\tmodel.createPositionFromPath( root, [ 2, 7 ] ),\n\t *\t\t\tmodel.createPositionFromPath( root, [ 4, 0, 1 ] )\n\t *\t\t);\n\t *\t\tlet transformed = range._getTransformedByInsertion( model.createPositionFromPath( root, [ 1 ] ), 2 );\n\t *\t\t// transformed array has one range from [ 4, 7 ] to [ 6, 0, 1 ]\n\t *\n\t *\t\ttransformed = range._getTransformedByInsertion( model.createPositionFromPath( root, [ 4, 0, 0 ] ), 4 );\n\t *\t\t// transformed array has one range from [ 2, 7 ] to [ 4, 0, 5 ]\n\t *\n\t *\t\ttransformed = range._getTransformedByInsertion( model.createPositionFromPath( root, [ 3, 2 ] ), 4 );\n\t *\t\t// transformed array has one range, which is equal to original range\n\t *\n\t *\t\ttransformed = range._getTransformedByInsertion( model.createPositionFromPath( root, [ 3, 2 ] ), 4, true );\n\t *\t\t// transformed array has two ranges: from [ 2, 7 ] to [ 3, 2 ] and from [ 3, 6 ] to [ 4, 0, 1 ]\n\t *\n\t * @protected\n\t * @param {module:engine/model/position~Position} insertPosition Position where nodes are inserted.\n\t * @param {Number} howMany How many nodes are inserted.\n\t * @param {Boolean} [spread] Flag indicating whether this {~Range range} should be spread if insertion\n\t * was inside the range. Defaults to `false`.\n\t * @returns {Array.<module:engine/model/range~Range>} Result of the transformation.\n\t */\n\t_getTransformedByInsertion( insertPosition, howMany, spread = false ) {\n\t\tif ( spread && this.containsPosition( insertPosition ) ) {\n\t\t\t// Range has to be spread. The first part is from original start to the spread point.\n\t\t\t// The other part is from spread point to the original end, but transformed by\n\t\t\t// insertion to reflect insertion changes.\n\n\t\t\treturn [\n\t\t\t\tnew Range( this.start, insertPosition ),\n\t\t\t\tnew Range(\n\t\t\t\t\tinsertPosition.getShiftedBy( howMany ),\n\t\t\t\t\tthis.end._getTransformedByInsertion( insertPosition, howMany )\n\t\t\t\t)\n\t\t\t];\n\t\t} else {\n\t\t\tconst range = new Range( this.start, this.end );\n\n\t\t\trange.start = range.start._getTransformedByInsertion( insertPosition, howMany );\n\t\t\trange.end = range.end._getTransformedByInsertion( insertPosition, howMany );\n\n\t\t\treturn [ range ];\n\t\t}\n\t}\n\n\t/**\n\t * Returns an array containing {@link ~Range ranges} that are a result of transforming this\n\t * {@link ~Range range} by moving `howMany` nodes from `sourcePosition` to `targetPosition`.\n\t *\n\t * @protected\n\t * @param {module:engine/model/position~Position} sourcePosition Position from which nodes are moved.\n\t * @param {module:engine/model/position~Position} targetPosition Position to where nodes are moved.\n\t * @param {Number} howMany How many nodes are moved.\n\t * @param {Boolean} [spread=false] Whether the range should be spread if the move points inside the range.\n\t * @returns {Array.<module:engine/model/range~Range>} Result of the transformation.\n\t */\n\t_getTransformedByMove( sourcePosition, targetPosition, howMany, spread = false ) {\n\t\t// Special case for transforming a collapsed range. Just transform it like a position.\n\t\tif ( this.isCollapsed ) {\n\t\t\tconst newPos = this.start._getTransformedByMove( sourcePosition, targetPosition, howMany );\n\n\t\t\treturn [ new Range( newPos ) ];\n\t\t}\n\n\t\t// Special case for transformation when a part of the range is moved towards the range.\n\t\t//\n\t\t// Examples:\n\t\t//\n\t\t// <div><p>ab</p><p>c[d</p></div><p>e]f</p> --> <div><p>ab</p></div><p>c[d</p><p>e]f</p>\n\t\t// <p>e[f</p><div><p>a]b</p><p>cd</p></div> --> <p>e[f</p><p>a]b</p><div><p>cd</p></div>\n\t\t//\n\t\t// Without this special condition, the default algorithm leaves an \"artifact\" range from one of `differenceSet` parts:\n\t\t//\n\t\t// <div><p>ab</p><p>c[d</p></div><p>e]f</p> --> <div><p>ab</p>{</div>}<p>c[d</p><p>e]f</p>\n\t\t//\n\t\t// This special case is applied only if the range is to be kept together (not spread).\n\t\tconst moveRange = Range._createFromPositionAndShift( sourcePosition, howMany );\n\t\tconst insertPosition = targetPosition._getTransformedByDeletion( sourcePosition, howMany );\n\n\t\tif ( this.containsPosition( targetPosition ) && !spread ) {\n\t\t\tif ( moveRange.containsPosition( this.start ) || moveRange.containsPosition( this.end ) ) {\n\t\t\t\tconst start = this.start._getTransformedByMove( sourcePosition, targetPosition, howMany );\n\t\t\t\tconst end = this.end._getTransformedByMove( sourcePosition, targetPosition, howMany );\n\n\t\t\t\treturn [ new Range( start, end ) ];\n\t\t\t}\n\t\t}\n\n\t\t// Default algorithm.\n\t\tlet result;\n\n\t\tconst differenceSet = this.getDifference( moveRange );\n\t\tlet difference = null;\n\n\t\tconst common = this.getIntersection( moveRange );\n\n\t\tif ( differenceSet.length == 1 ) {\n\t\t\t// `moveRange` and this range may intersect but may be separate.\n\t\t\tdifference = new Range(\n\t\t\t\tdifferenceSet[ 0 ].start._getTransformedByDeletion( sourcePosition, howMany ),\n\t\t\t\tdifferenceSet[ 0 ].end._getTransformedByDeletion( sourcePosition, howMany )\n\t\t\t);\n\t\t} else if ( differenceSet.length == 2 ) {\n\t\t\t// `moveRange` is inside this range.\n\t\t\tdifference = new Range(\n\t\t\t\tthis.start,\n\t\t\t\tthis.end._getTransformedByDeletion( sourcePosition, howMany )\n\t\t\t);\n\t\t} // else, `moveRange` contains this range.\n\n\t\tif ( difference ) {\n\t\t\tresult = difference._getTransformedByInsertion( insertPosition, howMany, common !== null || spread );\n\t\t} else {\n\t\t\tresult = [];\n\t\t}\n\n\t\tif ( common ) {\n\t\t\tconst transformedCommon = new Range(\n\t\t\t\tcommon.start._getCombined( moveRange.start, insertPosition ),\n\t\t\t\tcommon.end._getCombined( moveRange.start, insertPosition )\n\t\t\t);\n\n\t\t\tif ( result.length == 2 ) {\n\t\t\t\tresult.splice( 1, 0, transformedCommon );\n\t\t\t} else {\n\t\t\t\tresult.push( transformedCommon );\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Returns a copy of this range that is transformed by deletion of `howMany` nodes from `deletePosition`.\n\t *\n\t * If the deleted range is intersecting with the transformed range, the transformed range will be shrank.\n\t *\n\t * If the deleted range contains transformed range, `null` will be returned.\n\t *\n\t * @protected\n\t * @param {module:engine/model/position~Position} deletionPosition Position from which nodes are removed.\n\t * @param {Number} howMany How many nodes are removed.\n\t * @returns {module:engine/model/range~Range|null} Result of the transformation.\n\t */\n\t_getTransformedByDeletion( deletePosition, howMany ) {\n\t\tlet newStart = this.start._getTransformedByDeletion( deletePosition, howMany );\n\t\tlet newEnd = this.end._getTransformedByDeletion( deletePosition, howMany );\n\n\t\tif ( newStart == null && newEnd == null ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( newStart == null ) {\n\t\t\tnewStart = deletePosition;\n\t\t}\n\n\t\tif ( newEnd == null ) {\n\t\t\tnewEnd = deletePosition;\n\t\t}\n\n\t\treturn new Range( newStart, newEnd );\n\t}\n\n\t/**\n\t * Creates a new range, spreading from specified {@link module:engine/model/position~Position position} to a position moved by\n\t * given `shift`. If `shift` is a negative value, shifted position is treated as the beginning of the range.\n\t *\n\t * @protected\n\t * @param {module:engine/model/position~Position} position Beginning of the range.\n\t * @param {Number} shift How long the range should be.\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tstatic _createFromPositionAndShift( position, shift ) {\n\t\tconst start = position;\n\t\tconst end = position.getShiftedBy( shift );\n\n\t\treturn shift > 0 ? new this( start, end ) : new this( end, start );\n\t}\n\n\t/**\n\t * Creates a range inside an {@link module:engine/model/element~Element element} which starts before the first child of\n\t * that element and ends after the last child of that element.\n\t *\n\t * @protected\n\t * @param {module:engine/model/element~Element} element Element which is a parent for the range.\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tstatic _createIn( element ) {\n\t\treturn new this( Position._createAt( element, 0 ), Position._createAt( element, element.maxOffset ) );\n\t}\n\n\t/**\n\t * Creates a range that starts before given {@link module:engine/model/item~Item model item} and ends after it.\n\t *\n\t * @protected\n\t * @param {module:engine/model/item~Item} item\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tstatic _createOn( item ) {\n\t\treturn this._createFromPositionAndShift( Position._createBefore( item ), item.offsetSize );\n\t}\n\n\t/**\n\t * Combines all ranges from the passed array into a one range. At least one range has to be passed.\n\t * Passed ranges must not have common parts.\n\t *\n\t * The first range from the array is a reference range. If other ranges start or end on the exactly same position where\n\t * the reference range, they get combined into one range.\n\t *\n\t *\t\t[  ][]  [    ][ ][             ][ ][]  [  ]  // Passed ranges, shown sorted\n\t *\t\t[    ]                                       // The result of the function if the first range was a reference range.\n\t *\t            [                           ]        // The result of the function if the third-to-seventh range was a reference range.\n\t *\t                                           [  ]  // The result of the function if the last range was a reference range.\n\t *\n\t * @param {Array.<module:engine/model/range~Range>} ranges Ranges to combine.\n\t * @returns {module:engine/model/range~Range} Combined range.\n\t */\n\tstatic _createFromRanges( ranges ) {\n\t\tif ( ranges.length === 0 ) {\n\t\t\t/**\n\t\t\t * At least one range has to be passed to\n\t\t\t * {@link module:engine/model/range~Range._createFromRanges `Range._createFromRanges()`}.\n\t\t\t *\n\t\t\t * @error range-create-from-ranges-empty-array\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'range-create-from-ranges-empty-array: At least one range has to be passed.',\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if ( ranges.length == 1 ) {\n\t\t\treturn ranges[ 0 ].clone();\n\t\t}\n\n\t\t// 1. Set the first range in `ranges` array as a reference range.\n\t\t// If we are going to return just a one range, one of the ranges need to be the reference one.\n\t\t// Other ranges will be stuck to that range, if possible.\n\t\tconst ref = ranges[ 0 ];\n\n\t\t// 2. Sort all the ranges so it's easier to process them.\n\t\tranges.sort( ( a, b ) => {\n\t\t\treturn a.start.isAfter( b.start ) ? 1 : -1;\n\t\t} );\n\n\t\t// 3. Check at which index the reference range is now.\n\t\tconst refIndex = ranges.indexOf( ref );\n\n\t\t// 4. At this moment we don't need the original range.\n\t\t// We are going to modify the result and we need to return a new instance of Range.\n\t\t// We have to create a copy of the reference range.\n\t\tconst result = new this( ref.start, ref.end );\n\n\t\t// 5. Ranges should be checked and glued starting from the range that is closest to the reference range.\n\t\t// Since ranges are sorted, start with the range with index that is closest to reference range index.\n\t\tif ( refIndex > 0 ) {\n\t\t\tfor ( let i = refIndex - 1; true; i++ ) {\n\t\t\t\tif ( ranges[ i ].end.isEqual( result.start ) ) {\n\t\t\t\t\tresult.start = Position._createAt( ranges[ i ].start );\n\t\t\t\t} else {\n\t\t\t\t\t// If ranges are not starting/ending at the same position there is no point in looking further.\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 6. Ranges should be checked and glued starting from the range that is closest to the reference range.\n\t\t// Since ranges are sorted, start with the range with index that is closest to reference range index.\n\t\tfor ( let i = refIndex + 1; i < ranges.length; i++ ) {\n\t\t\tif ( ranges[ i ].start.isEqual( result.end ) ) {\n\t\t\t\tresult.end = Position._createAt( ranges[ i ].end );\n\t\t\t} else {\n\t\t\t\t// If ranges are not starting/ending at the same position there is no point in looking further.\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Creates a `Range` instance from given plain object (i.e. parsed JSON string).\n\t *\n\t * @param {Object} json Plain object to be converted to `Range`.\n\t * @param {module:engine/model/document~Document} doc Document object that will be range owner.\n\t * @returns {module:engine/model/element~Element} `Range` instance created using given plain object.\n\t */\n\tstatic fromJSON( json, doc ) {\n\t\treturn new this( Position.fromJSON( json.start, doc ), Position.fromJSON( json.end, doc ) );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `${ this.root } [ ${ this.start.path.join( ', ' ) } ] - [ ${ this.end.path.join( ', ' ) } ]`;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // log() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ModelPosition: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/conversion/mapper\n */\n\nimport ModelPosition from '../model/position';\nimport ModelRange from '../model/range';\n\nimport ViewPosition from '../view/position';\nimport ViewRange from '../view/range';\nimport ViewText from '../view/text';\n\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * Maps elements, positions and markers between {@link module:engine/view/document~Document the view} and\n * {@link module:engine/model/model the model}.\n *\n * The instance of the Mapper used for the editing pipeline is available in\n * {@link module:engine/controller/editingcontroller~EditingController#mapper `editor.editing.mapper`}.\n *\n * Mapper uses bound elements to find corresponding elements and positions, so, to get proper results,\n * all model elements should be {@link module:engine/conversion/mapper~Mapper#bindElements bound}.\n *\n * To map complex model to/from view relations, you may provide custom callbacks for\n * {@link module:engine/conversion/mapper~Mapper#event:modelToViewPosition modelToViewPosition event} and\n * {@link module:engine/conversion/mapper~Mapper#event:viewToModelPosition viewToModelPosition event} that are fired whenever\n * a position mapping request occurs.\n * Those events are fired by {@link module:engine/conversion/mapper~Mapper#toViewPosition toViewPosition}\n * and {@link module:engine/conversion/mapper~Mapper#toModelPosition toModelPosition} methods. `Mapper` adds it's own default callbacks\n * with `'lowest'` priority. To override default `Mapper` mapping, add custom callback with higher priority and\n * stop the event.\n */\nexport default class Mapper {\n\t/**\n\t * Creates an instance of the mapper.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Model element to view element mapping.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakMap}\n\t\t */\n\t\tthis._modelToViewMapping = new WeakMap();\n\n\t\t/**\n\t\t * View element to model element mapping.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakMap}\n\t\t */\n\t\tthis._viewToModelMapping = new WeakMap();\n\n\t\t/**\n\t\t * A map containing callbacks between view element names and functions evaluating length of view elements\n\t\t * in model.\n\t\t *\n\t\t * @private\n\t\t * @member {Map}\n\t\t */\n\t\tthis._viewToModelLengthCallbacks = new Map();\n\n\t\t/**\n\t\t * Model marker name to view elements mapping.\n\t\t *\n\t\t * Keys are `String`s while values are `Set`s with {@link module:engine/view/element~Element view elements}.\n\t\t * One marker (name) can be mapped to multiple elements.\n\t\t *\n\t\t * @private\n\t\t * @member {Map}\n\t\t */\n\t\tthis._markerNameToElements = new Map();\n\n\t\t/**\n\t\t * View element to model marker names mapping.\n\t\t *\n\t\t * This is reverse to {@link ~Mapper#_markerNameToElements} map.\n\t\t *\n\t\t * @private\n\t\t * @member {Map}\n\t\t */\n\t\tthis._elementToMarkerNames = new Map();\n\n\t\t/**\n\t\t * Stores marker names of markers which has changed due to unbinding a view element (so it is assumed that the view element\n\t\t * has been removed, moved or renamed).\n\t\t *\n\t\t * @private\n\t\t * @member {Set.<module:engine/model/markercollection~Marker>}\n\t\t */\n\t\tthis._unboundMarkerNames = new Set();\n\n\t\t// Default mapper algorithm for mapping model position to view position.\n\t\tthis.on( 'modelToViewPosition', ( evt, data ) => {\n\t\t\tif ( data.viewPosition ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst viewContainer = this._modelToViewMapping.get( data.modelPosition.parent );\n\n\t\t\tdata.viewPosition = this._findPositionIn( viewContainer, data.modelPosition.offset );\n\t\t}, { priority: 'low' } );\n\n\t\t// Default mapper algorithm for mapping view position to model position.\n\t\tthis.on( 'viewToModelPosition', ( evt, data ) => {\n\t\t\tif ( data.modelPosition ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst viewBlock = this.findMappedViewAncestor( data.viewPosition );\n\t\t\tconst modelParent = this._viewToModelMapping.get( viewBlock );\n\t\t\tconst modelOffset = this._toModelOffset( data.viewPosition.parent, data.viewPosition.offset, viewBlock );\n\n\t\t\tdata.modelPosition = ModelPosition._createAt( modelParent, modelOffset );\n\t\t}, { priority: 'low' } );\n\t}\n\n\t/**\n\t * Marks model and view elements as corresponding. Corresponding elements can be retrieved by using\n\t * the {@link module:engine/conversion/mapper~Mapper#toModelElement toModelElement} and\n\t * {@link module:engine/conversion/mapper~Mapper#toViewElement toViewElement} methods.\n\t * The information that elements are bound is also used to translate positions.\n\t *\n\t * @param {module:engine/model/element~Element} modelElement Model element.\n\t * @param {module:engine/view/element~Element} viewElement View element.\n\t */\n\tbindElements( modelElement, viewElement ) {\n\t\tthis._modelToViewMapping.set( modelElement, viewElement );\n\t\tthis._viewToModelMapping.set( viewElement, modelElement );\n\t}\n\n\t/**\n\t * Unbinds given {@link module:engine/view/element~Element view element} from the map.\n\t *\n\t * **Note:** view-to-model binding will be removed, if it existed. However, corresponding model-to-view binding\n\t * will be removed only if model element is still bound to passed `viewElement`.\n\t *\n\t * This behavior lets for re-binding model element to another view element without fear of losing the new binding\n\t * when the previously bound view element is unbound.\n\t *\n\t * @param {module:engine/view/element~Element} viewElement View element to unbind.\n\t */\n\tunbindViewElement( viewElement ) {\n\t\tconst modelElement = this.toModelElement( viewElement );\n\n\t\tthis._viewToModelMapping.delete( viewElement );\n\n\t\tif ( this._elementToMarkerNames.has( viewElement ) ) {\n\t\t\tfor ( const markerName of this._elementToMarkerNames.get( viewElement ) ) {\n\t\t\t\tthis._unboundMarkerNames.add( markerName );\n\t\t\t}\n\t\t}\n\n\t\tif ( this._modelToViewMapping.get( modelElement ) == viewElement ) {\n\t\t\tthis._modelToViewMapping.delete( modelElement );\n\t\t}\n\t}\n\n\t/**\n\t * Unbinds given {@link module:engine/model/element~Element model element} from the map.\n\t *\n\t * **Note:** model-to-view binding will be removed, if it existed. However, corresponding view-to-model binding\n\t * will be removed only if view element is still bound to passed `modelElement`.\n\t *\n\t * This behavior lets for re-binding view element to another model element without fear of losing the new binding\n\t * when the previously bound model element is unbound.\n\t *\n\t * @param {module:engine/model/element~Element} modelElement Model element to unbind.\n\t */\n\tunbindModelElement( modelElement ) {\n\t\tconst viewElement = this.toViewElement( modelElement );\n\n\t\tthis._modelToViewMapping.delete( modelElement );\n\n\t\tif ( this._viewToModelMapping.get( viewElement ) == modelElement ) {\n\t\t\tthis._viewToModelMapping.delete( viewElement );\n\t\t}\n\t}\n\n\t/**\n\t * Binds given marker name with given {@link module:engine/view/element~Element view element}. The element\n\t * will be added to the current set of elements bound with given marker name.\n\t *\n\t * @param {module:engine/view/element~Element} element Element to bind.\n\t * @param {String} name Marker name.\n\t */\n\tbindElementToMarker( element, name ) {\n\t\tconst elements = this._markerNameToElements.get( name ) || new Set();\n\t\telements.add( element );\n\n\t\tconst names = this._elementToMarkerNames.get( element ) || new Set();\n\t\tnames.add( name );\n\n\t\tthis._markerNameToElements.set( name, elements );\n\t\tthis._elementToMarkerNames.set( element, names );\n\t}\n\n\t/**\n\t * Unbinds an element from given marker name.\n\t *\n\t * @param {module:engine/view/element~Element} element Element to unbind.\n\t * @param {String} name Marker name.\n\t */\n\tunbindElementFromMarkerName( element, name ) {\n\t\tconst nameToElements = this._markerNameToElements.get( name );\n\n\t\tif ( nameToElements ) {\n\t\t\tnameToElements.delete( element );\n\n\t\t\tif ( nameToElements.size == 0 ) {\n\t\t\t\tthis._markerNameToElements.delete( name );\n\t\t\t}\n\t\t}\n\n\t\tconst elementToNames = this._elementToMarkerNames.get( element );\n\n\t\tif ( elementToNames ) {\n\t\t\telementToNames.delete( name );\n\n\t\t\tif ( elementToNames.size == 0 ) {\n\t\t\t\tthis._elementToMarkerNames.delete( element );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns all marker names of markers which has changed due to unbinding a view element (so it is assumed that the view element\n\t * has been removed, moved or renamed) since the last flush. After returning, the marker names list is cleared.\n\t *\n\t * @returns {Array.<String>}\n\t */\n\tflushUnboundMarkerNames() {\n\t\tconst markerNames = Array.from( this._unboundMarkerNames );\n\n\t\tthis._unboundMarkerNames.clear();\n\n\t\treturn markerNames;\n\t}\n\n\t/**\n\t * Removes all model to view and view to model bindings.\n\t */\n\tclearBindings() {\n\t\tthis._modelToViewMapping = new WeakMap();\n\t\tthis._viewToModelMapping = new WeakMap();\n\t\tthis._markerNameToElements = new Map();\n\t\tthis._elementToMarkerNames = new Map();\n\t\tthis._unboundMarkerNames = new Set();\n\t}\n\n\t/**\n\t * Gets the corresponding model element.\n\t *\n\t * **Note:** {@link module:engine/view/uielement~UIElement} does not have corresponding element in model.\n\t *\n\t * @param {module:engine/view/element~Element} viewElement View element.\n\t * @returns {module:engine/model/element~Element|undefined} Corresponding model element or `undefined` if not found.\n\t */\n\ttoModelElement( viewElement ) {\n\t\treturn this._viewToModelMapping.get( viewElement );\n\t}\n\n\t/**\n\t * Gets the corresponding view element.\n\t *\n\t * @param {module:engine/model/element~Element} modelElement Model element.\n\t * @returns {module:engine/view/element~Element|undefined} Corresponding view element or `undefined` if not found.\n\t */\n\ttoViewElement( modelElement ) {\n\t\treturn this._modelToViewMapping.get( modelElement );\n\t}\n\n\t/**\n\t * Gets the corresponding model range.\n\t *\n\t * @param {module:engine/view/range~Range} viewRange View range.\n\t * @returns {module:engine/model/range~Range} Corresponding model range.\n\t */\n\ttoModelRange( viewRange ) {\n\t\treturn new ModelRange( this.toModelPosition( viewRange.start ), this.toModelPosition( viewRange.end ) );\n\t}\n\n\t/**\n\t * Gets the corresponding view range.\n\t *\n\t * @param {module:engine/model/range~Range} modelRange Model range.\n\t * @returns {module:engine/view/range~Range} Corresponding view range.\n\t */\n\ttoViewRange( modelRange ) {\n\t\treturn new ViewRange( this.toViewPosition( modelRange.start ), this.toViewPosition( modelRange.end ) );\n\t}\n\n\t/**\n\t * Gets the corresponding model position.\n\t *\n\t * @fires viewToModelPosition\n\t * @param {module:engine/view/position~Position} viewPosition View position.\n\t * @returns {module:engine/model/position~Position} Corresponding model position.\n\t */\n\ttoModelPosition( viewPosition ) {\n\t\tconst data = {\n\t\t\tviewPosition,\n\t\t\tmapper: this\n\t\t};\n\n\t\tthis.fire( 'viewToModelPosition', data );\n\n\t\treturn data.modelPosition;\n\t}\n\n\t/**\n\t * Gets the corresponding view position.\n\t *\n\t * @fires modelToViewPosition\n\t * @param {module:engine/model/position~Position} modelPosition Model position.\n\t * @param {Object} [options] Additional options for position mapping process.\n\t * @param {Boolean} [options.isPhantom=false] Should be set to `true` if the model position to map is pointing to a place\n\t * in model tree which no longer exists. For example, it could be an end of a removed model range.\n\t * @returns {module:engine/view/position~Position} Corresponding view position.\n\t */\n\ttoViewPosition( modelPosition, options = { isPhantom: false } ) {\n\t\tconst data = {\n\t\t\tmodelPosition,\n\t\t\tmapper: this,\n\t\t\tisPhantom: options.isPhantom\n\t\t};\n\n\t\tthis.fire( 'modelToViewPosition', data );\n\n\t\treturn data.viewPosition;\n\t}\n\n\t/**\n\t * Gets all view elements bound to the given marker name.\n\t *\n\t * @param {String} name Marker name.\n\t * @returns {Set.<module:engine/view/element~Element>|null} View elements bound with given marker name or `null`\n\t * if no elements are bound to given marker name.\n\t */\n\tmarkerNameToElements( name ) {\n\t\tconst boundElements = this._markerNameToElements.get( name );\n\n\t\tif ( !boundElements ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst elements = new Set();\n\n\t\tfor ( const element of boundElements ) {\n\t\t\tif ( element.is( 'attributeElement' ) ) {\n\t\t\t\tfor ( const clone of element.getElementsWithSameId() ) {\n\t\t\t\t\telements.add( clone );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\telements.add( element );\n\t\t\t}\n\t\t}\n\n\t\treturn elements;\n\t}\n\n\t/**\n\t * Registers a callback that evaluates the length in the model of a view element with given name.\n\t *\n\t * The callback is fired with one argument, which is a view element instance. The callback is expected to return\n\t * a number representing the length of view element in model.\n\t *\n\t *\t\t// List item in view may contain nested list, which have other list items. In model though,\n\t *\t\t// the lists are represented by flat structure. Because of those differences, length of list view element\n\t *\t\t// may be greater than one. In the callback it's checked how many nested list items are in evaluated list item.\n\t *\n\t *\t\tfunction getViewListItemLength( element ) {\n\t *\t\t\tlet length = 1;\n\t *\n\t *\t\t\tfor ( let child of element.getChildren() ) {\n\t *\t\t\t\tif ( child.name == 'ul' || child.name == 'ol' ) {\n\t *\t\t\t\t\tfor ( let item of child.getChildren() ) {\n\t *\t\t\t\t\t\tlength += getViewListItemLength( item );\n\t *\t\t\t\t\t}\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\n\t *\t\t\treturn length;\n\t *\t\t}\n\t *\n\t *\t\tmapper.registerViewToModelLength( 'li', getViewListItemLength );\n\t *\n\t * @param {String} viewElementName Name of view element for which callback is registered.\n\t * @param {Function} lengthCallback Function return a length of view element instance in model.\n\t */\n\tregisterViewToModelLength( viewElementName, lengthCallback ) {\n\t\tthis._viewToModelLengthCallbacks.set( viewElementName, lengthCallback );\n\t}\n\n\t/**\n\t * For given `viewPosition`, finds and returns the closest ancestor of this position that has a mapping to\n\t * the model.\n\t *\n\t * @param {module:engine/view/position~Position} viewPosition Position for which mapped ancestor should be found.\n\t * @returns {module:engine/view/element~Element}\n\t */\n\tfindMappedViewAncestor( viewPosition ) {\n\t\tlet parent = viewPosition.parent;\n\n\t\twhile ( !this._viewToModelMapping.has( parent ) ) {\n\t\t\tparent = parent.parent;\n\t\t}\n\n\t\treturn parent;\n\t}\n\n\t/**\n\t * Calculates model offset based on the view position and the block element.\n\t *\n\t * Example:\n\t *\n\t *\t\t<p>foo<b>ba|r</b></p> // _toModelOffset( b, 2, p ) -> 5\n\t *\n\t * Is a sum of:\n\t *\n\t *\t\t<p>foo|<b>bar</b></p> // _toModelOffset( p, 3, p ) -> 3\n\t *\t\t<p>foo<b>ba|r</b></p> // _toModelOffset( b, 2, b ) -> 2\n\t *\n\t * @private\n\t * @param {module:engine/view/element~Element} viewParent Position parent.\n\t * @param {Number} viewOffset Position offset.\n\t * @param {module:engine/view/element~Element} viewBlock Block used as a base to calculate offset.\n\t * @returns {Number} Offset in the model.\n\t */\n\t_toModelOffset( viewParent, viewOffset, viewBlock ) {\n\t\tif ( viewBlock != viewParent ) {\n\t\t\t// See example.\n\t\t\tconst offsetToParentStart = this._toModelOffset( viewParent.parent, viewParent.index, viewBlock );\n\t\t\tconst offsetInParent = this._toModelOffset( viewParent, viewOffset, viewParent );\n\n\t\t\treturn offsetToParentStart + offsetInParent;\n\t\t}\n\n\t\t// viewBlock == viewParent, so we need to calculate the offset in the parent element.\n\n\t\t// If the position is a text it is simple (\"ba|r\" -> 2).\n\t\tif ( viewParent.is( 'text' ) ) {\n\t\t\treturn viewOffset;\n\t\t}\n\n\t\t// If the position is in an element we need to sum lengths of siblings ( <b> bar </b> foo | -> 3 + 3 = 6 ).\n\t\tlet modelOffset = 0;\n\n\t\tfor ( let i = 0; i < viewOffset; i++ ) {\n\t\t\tmodelOffset += this.getModelLength( viewParent.getChild( i ) );\n\t\t}\n\n\t\treturn modelOffset;\n\t}\n\n\t/**\n\t * Gets the length of the view element in the model.\n\t *\n\t * The length is calculated as follows:\n\t * * if {@link #registerViewToModelLength length mapping callback} is provided for given `viewNode` it is used to\n\t * evaluate model length (`viewNode` is used as first and only parameter passed to the callback),\n\t * * length of a {@link module:engine/view/text~Text text node} is equal to the length of it's\n\t * {@link module:engine/view/text~Text#data data},\n\t * * length of a {@link module:engine/view/uielement~UIElement ui element} is equal to 0,\n\t * * length of a mapped {@link module:engine/view/element~Element element} is equal to 1,\n\t * * length of a not-mapped {@link module:engine/view/element~Element element} is equal to the length of it's children.\n\t *\n\t * Examples:\n\t *\n\t *\t\tfoo                          -> 3 // Text length is equal to it's data length.\n\t *\t\t<p>foo</p>                   -> 1 // Length of an element which is mapped is by default equal to 1.\n\t *\t\t<b>foo</b>                   -> 3 // Length of an element which is not mapped is a length of its children.\n\t *\t\t<div><p>x</p><p>y</p></div>  -> 2 // Assuming that <div> is not mapped and <p> are mapped.\n\t *\n\t * @param {module:engine/view/element~Element} viewNode View node.\n\t * @returns {Number} Length of the node in the tree model.\n\t */\n\tgetModelLength( viewNode ) {\n\t\tif ( this._viewToModelLengthCallbacks.get( viewNode.name ) ) {\n\t\t\tconst callback = this._viewToModelLengthCallbacks.get( viewNode.name );\n\n\t\t\treturn callback( viewNode );\n\t\t} else if ( this._viewToModelMapping.has( viewNode ) ) {\n\t\t\treturn 1;\n\t\t} else if ( viewNode.is( 'text' ) ) {\n\t\t\treturn viewNode.data.length;\n\t\t} else if ( viewNode.is( 'uiElement' ) ) {\n\t\t\treturn 0;\n\t\t} else {\n\t\t\tlet len = 0;\n\n\t\t\tfor ( const child of viewNode.getChildren() ) {\n\t\t\t\tlen += this.getModelLength( child );\n\t\t\t}\n\n\t\t\treturn len;\n\t\t}\n\t}\n\n\t/**\n\t * Finds the position in the view node (or its children) with the expected model offset.\n\t *\n\t * Example:\n\t *\n\t *\t\t<p>fo<b>bar</b>bom</p> -> expected offset: 4\n\t *\n\t *\t\t_findPositionIn( p, 4 ):\n\t *\t\t<p>|fo<b>bar</b>bom</p> -> expected offset: 4, actual offset: 0\n\t *\t\t<p>fo|<b>bar</b>bom</p> -> expected offset: 4, actual offset: 2\n\t *\t\t<p>fo<b>bar</b>|bom</p> -> expected offset: 4, actual offset: 5 -> we are too far\n\t *\n\t *\t\t_findPositionIn( b, 4 - ( 5 - 3 ) ):\n\t *\t\t<p>fo<b>|bar</b>bom</p> -> expected offset: 2, actual offset: 0\n\t *\t\t<p>fo<b>bar|</b>bom</p> -> expected offset: 2, actual offset: 3 -> we are too far\n\t *\n\t *\t\t_findPositionIn( bar, 2 - ( 3 - 3 ) ):\n\t *\t\tWe are in the text node so we can simple find the offset.\n\t *\t\t<p>fo<b>ba|r</b>bom</p> -> expected offset: 2, actual offset: 2 -> position found\n\t *\n\t * @private\n\t * @param {module:engine/view/element~Element} viewParent Tree view element in which we are looking for the position.\n\t * @param {Number} expectedOffset Expected offset.\n\t * @returns {module:engine/view/position~Position} Found position.\n\t */\n\t_findPositionIn( viewParent, expectedOffset ) {\n\t\t// Last scanned view node.\n\t\tlet viewNode;\n\t\t// Length of the last scanned view node.\n\t\tlet lastLength = 0;\n\n\t\tlet modelOffset = 0;\n\t\tlet viewOffset = 0;\n\n\t\t// In the text node it is simple: offset in the model equals offset in the text.\n\t\tif ( viewParent.is( 'text' ) ) {\n\t\t\treturn new ViewPosition( viewParent, expectedOffset );\n\t\t}\n\n\t\t// In other cases we add lengths of child nodes to find the proper offset.\n\n\t\t// If it is smaller we add the length.\n\t\twhile ( modelOffset < expectedOffset ) {\n\t\t\tviewNode = viewParent.getChild( viewOffset );\n\t\t\tlastLength = this.getModelLength( viewNode );\n\t\t\tmodelOffset += lastLength;\n\t\t\tviewOffset++;\n\t\t}\n\n\t\t// If it equals we found the position.\n\t\tif ( modelOffset == expectedOffset ) {\n\t\t\treturn this._moveViewPositionToTextNode( new ViewPosition( viewParent, viewOffset ) );\n\t\t}\n\t\t// If it is higher we need to enter last child.\n\t\telse {\n\t\t\t// ( modelOffset - lastLength ) is the offset to the child we enter,\n\t\t\t// so we subtract it from the expected offset to fine the offset in the child.\n\t\t\treturn this._findPositionIn( viewNode, expectedOffset - ( modelOffset - lastLength ) );\n\t\t}\n\t}\n\n\t/**\n\t * Because we prefer positions in text nodes over positions next to text node moves view position to the text node\n\t * if it was next to it.\n\t *\n\t *\t\t<p>[]<b>foo</b></p> -> <p>[]<b>foo</b></p> // do not touch if position is not directly next to text\n\t *\t\t<p>foo[]<b>foo</b></p> -> <p>foo{}<b>foo</b></p> // move to text node\n\t *\t\t<p><b>[]foo</b></p> -> <p><b>{}foo</b></p> // move to text node\n\t *\n\t * @private\n\t * @param {module:engine/view/position~Position} viewPosition Position potentially next to text node.\n\t * @returns {module:engine/view/position~Position} Position in text node if possible.\n\t */\n\t_moveViewPositionToTextNode( viewPosition ) {\n\t\t// If the position is just after text node, put it at the end of that text node.\n\t\t// If the position is just before text node, put it at the beginning of that text node.\n\t\tconst nodeBefore = viewPosition.nodeBefore;\n\t\tconst nodeAfter = viewPosition.nodeAfter;\n\n\t\tif ( nodeBefore instanceof ViewText ) {\n\t\t\treturn new ViewPosition( nodeBefore, nodeBefore.data.length );\n\t\t} else if ( nodeAfter instanceof ViewText ) {\n\t\t\treturn new ViewPosition( nodeAfter, 0 );\n\t\t}\n\n\t\t// Otherwise, just return the given position.\n\t\treturn viewPosition;\n\t}\n\n\t/**\n\t * Fired for each model-to-view position mapping request. The purpose of this event is to enable custom model-to-view position\n\t * mapping. Callbacks added to this event take {@link module:engine/model/position~Position model position} and are expected to\n\t * calculate {@link module:engine/view/position~Position view position}. Calculated view position should be added as `viewPosition`\n\t * value in `data` object that is passed as one of parameters to the event callback.\n\t *\n\t * \t\t// Assume that \"captionedImage\" model element is converted to <img> and following <span> elements in view,\n\t * \t\t// and the model element is bound to <img> element. Force mapping model positions inside \"captionedImage\" to that\n\t * \t\t// <span> element.\n\t *\t\tmapper.on( 'modelToViewPosition', ( evt, data ) => {\n\t *\t\t\tconst positionParent = modelPosition.parent;\n\t *\n\t *\t\t\tif ( positionParent.name == 'captionedImage' ) {\n\t *\t\t\t\tconst viewImg = data.mapper.toViewElement( positionParent );\n\t *\t\t\t\tconst viewCaption = viewImg.nextSibling; // The <span> element.\n\t *\n\t *\t\t\t\tdata.viewPosition = new ViewPosition( viewCaption, modelPosition.offset );\n\t *\n\t *\t\t\t\t// Stop the event if other callbacks should not modify calculated value.\n\t *\t\t\t\tevt.stop();\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * **Note:** keep in mind that sometimes a \"phantom\" model position is being converted. \"Phantom\" model position is\n\t * a position that points to a non-existing place in model. Such position might still be valid for conversion, though\n\t * (it would point to a correct place in view when converted). One example of such situation is when a range is\n\t * removed from model, there may be a need to map the range's end (which is no longer valid model position). To\n\t * handle such situation, check `data.isPhantom` flag:\n\t *\n\t * \t\t// Assume that there is \"customElement\" model element and whenever position is before it, we want to move it\n\t * \t\t// to the inside of the view element bound to \"customElement\".\n\t *\t\tmapper.on( 'modelToViewPosition', ( evt, data ) => {\n\t *\t\t\tif ( data.isPhantom ) {\n\t *\t\t\t\treturn;\n\t *\t\t\t}\n\t *\n\t *\t\t\t// Below line might crash for phantom position that does not exist in model.\n\t *\t\t\tconst sibling = data.modelPosition.nodeBefore;\n\t *\n\t *\t\t\t// Check if this is the element we are interested in.\n\t *\t\t\tif ( !sibling.is( 'customElement' ) ) {\n\t *\t\t\t\treturn;\n\t *\t\t\t}\n\t *\n\t *\t\t\tconst viewElement = data.mapper.toViewElement( sibling );\n\t *\n\t *\t\t\tdata.viewPosition = new ViewPosition( sibling, 0 );\n\t *\n\t *\t\t\tevt.stop();\n\t *\t\t} );\n\t *\n\t * **Note:** default mapping callback is provided with `low` priority setting and does not cancel the event, so it is possible to\n\t * attach a custom callback after default callback and also use `data.viewPosition` calculated by default callback\n\t * (for example to fix it).\n\t *\n\t * **Note:** default mapping callback will not fire if `data.viewPosition` is already set.\n\t *\n\t * **Note:** these callbacks are called **very often**. For efficiency reasons, it is advised to use them only when position\n\t * mapping between given model and view elements is unsolvable using just elements mapping and default algorithm. Also,\n\t * the condition that checks if special case scenario happened should be as simple as possible.\n\t *\n\t * @event modelToViewPosition\n\t * @param {Object} data Data pipeline object that can store and pass data between callbacks. The callback should add\n\t * `viewPosition` value to that object with calculated {@link module:engine/view/position~Position view position}.\n\t * @param {module:engine/conversion/mapper~Mapper} data.mapper Mapper instance that fired the event.\n\t */\n\n\t/**\n\t * Fired for each view-to-model position mapping request. See {@link module:engine/conversion/mapper~Mapper#event:modelToViewPosition}.\n\t *\n\t * \t\t// See example in `modelToViewPosition` event description.\n\t * \t\t// This custom mapping will map positions from <span> element next to <img> to the \"captionedImage\" element.\n\t *\t\tmapper.on( 'viewToModelPosition', ( evt, data ) => {\n\t *\t\t\tconst positionParent = viewPosition.parent;\n\t *\n\t *\t\t\tif ( positionParent.hasClass( 'image-caption' ) ) {\n\t *\t\t\t\tconst viewImg = positionParent.previousSibling;\n\t *\t\t\t\tconst modelImg = data.mapper.toModelElement( viewImg );\n\t *\n\t *\t\t\t\tdata.modelPosition = new ModelPosition( modelImg, viewPosition.offset );\n\t *\t\t\t\tevt.stop();\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * **Note:** default mapping callback is provided with `low` priority setting and does not cancel the event, so it is possible to\n\t * attach a custom callback after default callback and also use `data.modelPosition` calculated by default callback\n\t * (for example to fix it).\n\t *\n\t * **Note:** default mapping callback will not fire if `data.modelPosition` is already set.\n\t *\n\t * **Note:** these callbacks are called **very often**. For efficiency reasons, it is advised to use them only when position\n\t * mapping between given model and view elements is unsolvable using just elements mapping and default algorithm. Also,\n\t * the condition that checks if special case scenario happened should be as simple as possible.\n\t *\n\t * @event viewToModelPosition\n\t * @param {Object} data Data pipeline object that can store and pass data between callbacks. The callback should add\n\t * `modelPosition` value to that object with calculated {@link module:engine/model/position~Position model position}.\n\t * @param {module:engine/conversion/mapper~Mapper} data.mapper Mapper instance that fired the event.\n\t */\n}\n\nmix( Mapper, EmitterMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/conversion/modelconsumable\n */\n\nimport TextProxy from '../model/textproxy';\n\n/**\n * Manages a list of consumable values for {@link module:engine/model/item~Item model items}.\n *\n * Consumables are various aspects of the model. A model item can be broken down into singular properties that might be\n * taken into consideration when converting that item.\n *\n * `ModelConsumable` is used by {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher} while analyzing changed\n * parts of {@link module:engine/model/document~Document the document}. The added / changed / removed model items are broken down\n * into singular properties (the item itself and it's attributes). All those parts are saved in `ModelConsumable`. Then,\n * during conversion, when given part of model item is converted (i.e. the view element has been inserted into the view,\n * but without attributes), consumable value is removed from `ModelConsumable`.\n *\n * For model items, `ModelConsumable` stores consumable values of one of following types: `insert`, `addattribute:<attributeKey>`,\n * `changeattributes:<attributeKey>`, `removeattributes:<attributeKey>`.\n *\n * In most cases, it is enough to let {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}\n * gather consumable values, so there is no need to use\n * {@link module:engine/conversion/modelconsumable~ModelConsumable#add add method} directly.\n * However, it is important to understand how consumable values can be\n * {@link module:engine/conversion/modelconsumable~ModelConsumable#consume consumed}.\n * See {@link module:engine/conversion/downcasthelpers default downcast converters} for more information.\n *\n * Keep in mind, that one conversion event may have multiple callbacks (converters) attached to it. Each of those is\n * able to convert one or more parts of the model. However, when one of those callbacks actually converts\n * something, other should not, because they would duplicate the results. Using `ModelConsumable` helps avoiding\n * this situation, because callbacks should only convert those values, which were not yet consumed from `ModelConsumable`.\n *\n * Consuming multiple values in a single callback:\n *\n *\t\t// Converter for custom `image` element that might have a `caption` element inside which changes\n *\t\t// how the image is displayed in the view:\n *\t\t//\n *\t\t// Model:\n *\t\t//\n *\t\t// [image]\n *\t\t//   └─ [caption]\n *\t\t//       └─ foo\n *\t\t//\n *\t\t// View:\n *\t\t//\n *\t\t// <figure>\n *\t\t//   ├─ <img />\n *\t\t//   └─ <caption>\n *\t\t//       └─ foo\n *\t\tmodelConversionDispatcher.on( 'insert:image', ( evt, data, conversionApi ) => {\n *\t\t\t// First, consume the `image` element.\n *\t\t\tconversionApi.consumable.consume( data.item, 'insert' );\n *\n *\t\t\t// Just create normal image element for the view.\n *\t\t\t// Maybe it will be \"decorated\" later.\n *\t\t\tconst viewImage = new ViewElement( 'img' );\n *\t\t\tconst insertPosition = conversionApi.mapper.toViewPosition( data.range.start );\n *\t\t\tconst viewWriter = conversionApi.writer;\n *\n *\t\t\t// Check if the `image` element has children.\n *\t\t\tif ( data.item.childCount > 0 ) {\n *\t\t\t\tconst modelCaption = data.item.getChild( 0 );\n *\n *\t\t\t\t// `modelCaption` insertion change is consumed from consumable values.\n *\t\t\t\t// It will not be converted by other converters, but it's children (probably some text) will be.\n *\t\t\t\t// Through mapping, converters for text will know where to insert contents of `modelCaption`.\n *\t\t\t\tif ( conversionApi.consumable.consume( modelCaption, 'insert' ) ) {\n *\t\t\t\t\tconst viewCaption = new ViewElement( 'figcaption' );\n *\n *\t\t\t\t\tconst viewImageHolder = new ViewElement( 'figure', null, [ viewImage, viewCaption ] );\n *\n *\t\t\t\t\tconversionApi.mapper.bindElements( modelCaption, viewCaption );\n *\t\t\t\t\tconversionApi.mapper.bindElements( data.item, viewImageHolder );\n *\t\t\t\t\tviewWriter.insert( insertPosition, viewImageHolder );\n *\t\t\t\t}\n *\t\t\t} else {\n *\t\t\t\tconversionApi.mapper.bindElements( data.item, viewImage );\n *\t\t\t\tviewWriter.insert( insertPosition, viewImage );\n *\t\t\t}\n *\n *\t\t\tevt.stop();\n *\t\t} );\n */\nexport default class ModelConsumable {\n\t/**\n\t * Creates an empty consumables list.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Contains list of consumable values.\n\t\t *\n\t\t * @private\n\t\t * @member {Map} module:engine/conversion/modelconsumable~ModelConsumable#_consumable\n\t\t */\n\t\tthis._consumable = new Map();\n\n\t\t/**\n\t\t * For each {@link module:engine/model/textproxy~TextProxy} added to `ModelConsumable`, this registry holds parent\n\t\t * of that `TextProxy` and start and end indices of that `TextProxy`. This allows identification of `TextProxy`\n\t\t * instances that points to the same part of the model but are different instances. Each distinct `TextProxy`\n\t\t * is given unique `Symbol` which is then registered as consumable. This process is transparent for `ModelConsumable`\n\t\t * API user because whenever `TextProxy` is added, tested, consumed or reverted, internal mechanisms of\n\t\t * `ModelConsumable` translates `TextProxy` to that unique `Symbol`.\n\t\t *\n\t\t * @private\n\t\t * @member {Map} module:engine/conversion/modelconsumable~ModelConsumable#_textProxyRegistry\n\t\t */\n\t\tthis._textProxyRegistry = new Map();\n\t}\n\n\t/**\n\t * Adds a consumable value to the consumables list and links it with given model item.\n\t *\n\t *\t\tmodelConsumable.add( modelElement, 'insert' ); // Add `modelElement` insertion change to consumable values.\n\t *\t\tmodelConsumable.add( modelElement, 'addAttribute:bold' ); // Add `bold` attribute insertion on `modelElement` change.\n\t *\t\tmodelConsumable.add( modelElement, 'removeAttribute:bold' ); // Add `bold` attribute removal on `modelElement` change.\n\t *\t\tmodelConsumable.add( modelSelection, 'selection' ); // Add `modelSelection` to consumable values.\n\t *\t\tmodelConsumable.add( modelRange, 'range' ); // Add `modelRange` to consumable values.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\n\t * Model item, range or selection that has the consumable.\n\t * @param {String} type Consumable type. Will be normalized to a proper form, that is either `<word>` or `<part>:<part>`.\n\t * Second colon and everything after will be cut. Passing event name is a safe and good practice.\n\t */\n\tadd( item, type ) {\n\t\ttype = _normalizeConsumableType( type );\n\n\t\tif ( item instanceof TextProxy ) {\n\t\t\titem = this._getSymbolForTextProxy( item );\n\t\t}\n\n\t\tif ( !this._consumable.has( item ) ) {\n\t\t\tthis._consumable.set( item, new Map() );\n\t\t}\n\n\t\tthis._consumable.get( item ).set( type, true );\n\t}\n\n\t/**\n\t * Removes given consumable value from given model item.\n\t *\n\t *\t\tmodelConsumable.consume( modelElement, 'insert' ); // Remove `modelElement` insertion change from consumable values.\n\t *\t\tmodelConsumable.consume( modelElement, 'addAttribute:bold' ); // Remove `bold` attribute insertion on `modelElement` change.\n\t *\t\tmodelConsumable.consume( modelElement, 'removeAttribute:bold' ); // Remove `bold` attribute removal on `modelElement` change.\n\t *\t\tmodelConsumable.consume( modelSelection, 'selection' ); // Remove `modelSelection` from consumable values.\n\t *\t\tmodelConsumable.consume( modelRange, 'range' ); // Remove 'modelRange' from consumable values.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\n\t * Model item, range or selection from which consumable will be consumed.\n\t * @param {String} type Consumable type. Will be normalized to a proper form, that is either `<word>` or `<part>:<part>`.\n\t * Second colon and everything after will be cut. Passing event name is a safe and good practice.\n\t * @returns {Boolean} `true` if consumable value was available and was consumed, `false` otherwise.\n\t */\n\tconsume( item, type ) {\n\t\ttype = _normalizeConsumableType( type );\n\n\t\tif ( item instanceof TextProxy ) {\n\t\t\titem = this._getSymbolForTextProxy( item );\n\t\t}\n\n\t\tif ( this.test( item, type ) ) {\n\t\t\tthis._consumable.get( item ).set( type, false );\n\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Tests whether there is a consumable value of given type connected with given model item.\n\t *\n\t *\t\tmodelConsumable.test( modelElement, 'insert' ); // Check for `modelElement` insertion change.\n\t *\t\tmodelConsumable.test( modelElement, 'addAttribute:bold' ); // Check for `bold` attribute insertion on `modelElement` change.\n\t *\t\tmodelConsumable.test( modelElement, 'removeAttribute:bold' ); // Check for `bold` attribute removal on `modelElement` change.\n\t *\t\tmodelConsumable.test( modelSelection, 'selection' ); // Check if `modelSelection` is consumable.\n\t *\t\tmodelConsumable.test( modelRange, 'range' ); // Check if `modelRange` is consumable.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\n\t * Model item, range or selection to be tested.\n\t * @param {String} type Consumable type. Will be normalized to a proper form, that is either `<word>` or `<part>:<part>`.\n\t * Second colon and everything after will be cut. Passing event name is a safe and good practice.\n\t * @returns {null|Boolean} `null` if such consumable was never added, `false` if the consumable values was\n\t * already consumed or `true` if it was added and not consumed yet.\n\t */\n\ttest( item, type ) {\n\t\ttype = _normalizeConsumableType( type );\n\n\t\tif ( item instanceof TextProxy ) {\n\t\t\titem = this._getSymbolForTextProxy( item );\n\t\t}\n\n\t\tconst itemConsumables = this._consumable.get( item );\n\n\t\tif ( itemConsumables === undefined ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst value = itemConsumables.get( type );\n\n\t\tif ( value === undefined ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * Reverts consuming of consumable value.\n\t *\n\t *\t\tmodelConsumable.revert( modelElement, 'insert' ); // Revert consuming `modelElement` insertion change.\n\t *\t\tmodelConsumable.revert( modelElement, 'addAttribute:bold' ); // Revert consuming `bold` attribute insert from `modelElement`.\n\t *\t\tmodelConsumable.revert( modelElement, 'removeAttribute:bold' ); // Revert consuming `bold` attribute remove from `modelElement`.\n\t *\t\tmodelConsumable.revert( modelSelection, 'selection' ); // Revert consuming `modelSelection`.\n\t *\t\tmodelConsumable.revert( modelRange, 'range' ); // Revert consuming `modelRange`.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\n\t * Model item, range or selection to be reverted.\n\t * @param {String} type Consumable type.\n\t * @returns {null|Boolean} `true` if consumable has been reversed, `false` otherwise. `null` if the consumable has\n\t * never been added.\n\t */\n\trevert( item, type ) {\n\t\ttype = _normalizeConsumableType( type );\n\n\t\tif ( item instanceof TextProxy ) {\n\t\t\titem = this._getSymbolForTextProxy( item );\n\t\t}\n\n\t\tconst test = this.test( item, type );\n\n\t\tif ( test === false ) {\n\t\t\tthis._consumable.get( item ).set( type, true );\n\n\t\t\treturn true;\n\t\t} else if ( test === true ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Gets a unique symbol for passed {@link module:engine/model/textproxy~TextProxy} instance. All `TextProxy` instances that\n\t * have same parent, same start index and same end index will get the same symbol.\n\t *\n\t * Used internally to correctly consume `TextProxy` instances.\n\t *\n\t * @private\n\t * @param {module:engine/model/textproxy~TextProxy} textProxy `TextProxy` instance to get a symbol for.\n\t * @returns {Symbol} Symbol representing all equal instances of `TextProxy`.\n\t */\n\t_getSymbolForTextProxy( textProxy ) {\n\t\tlet symbol = null;\n\n\t\tconst startMap = this._textProxyRegistry.get( textProxy.startOffset );\n\n\t\tif ( startMap ) {\n\t\t\tconst endMap = startMap.get( textProxy.endOffset );\n\n\t\t\tif ( endMap ) {\n\t\t\t\tsymbol = endMap.get( textProxy.parent );\n\t\t\t}\n\t\t}\n\n\t\tif ( !symbol ) {\n\t\t\tsymbol = this._addSymbolForTextProxy( textProxy.startOffset, textProxy.endOffset, textProxy.parent );\n\t\t}\n\n\t\treturn symbol;\n\t}\n\n\t/**\n\t * Adds a symbol for given properties that characterizes a {@link module:engine/model/textproxy~TextProxy} instance.\n\t *\n\t * Used internally to correctly consume `TextProxy` instances.\n\t *\n\t * @private\n\t * @param {Number} startIndex Text proxy start index in it's parent.\n\t * @param {Number} endIndex Text proxy end index in it's parent.\n\t * @param {module:engine/model/element~Element} parent Text proxy parent.\n\t * @returns {Symbol} Symbol generated for given properties.\n\t */\n\t_addSymbolForTextProxy( start, end, parent ) {\n\t\tconst symbol = Symbol( 'textProxySymbol' );\n\t\tlet startMap, endMap;\n\n\t\tstartMap = this._textProxyRegistry.get( start );\n\n\t\tif ( !startMap ) {\n\t\t\tstartMap = new Map();\n\t\t\tthis._textProxyRegistry.set( start, startMap );\n\t\t}\n\n\t\tendMap = startMap.get( end );\n\n\t\tif ( !endMap ) {\n\t\t\tendMap = new Map();\n\t\t\tstartMap.set( end, endMap );\n\t\t}\n\n\t\tendMap.set( parent, symbol );\n\n\t\treturn symbol;\n\t}\n}\n\n// Returns a normalized consumable type name from given string. A normalized consumable type name is a string that has\n// at most one colon, for example: `insert` or `addMarker:highlight`. If string to normalize has more \"parts\" (more colons),\n// the other parts are dropped, for example: `addattribute:bold:$text` -> `addattributes:bold`.\n//\n// @param {String} type Consumable type.\n// @returns {String} Normalized consumable type.\nfunction _normalizeConsumableType( type ) {\n\tconst parts = type.split( ':' );\n\n\treturn parts.length > 1 ? parts[ 0 ] + ':' + parts[ 1 ] : parts[ 0 ];\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/conversion/downcastdispatcher\n */\n\nimport Consumable from './modelconsumable';\nimport Range from '../model/range';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport { extend } from 'lodash-es';\n\n/**\n * `DowncastDispatcher` is a central point of downcasting (conversion from model to view), which is a process of reacting to changes\n * in the model and firing a set of events. Callbacks listening to those events are called converters. Those\n * converters role is to convert the model changes to changes in view (for example, adding view nodes or\n * changing attributes on view elements).\n *\n * During conversion process, `DowncastDispatcher` fires events, basing on state of the model and prepares\n * data for those events. It is important to understand that those events are connected with changes done on model,\n * for example: \"node has been inserted\" or \"attribute has changed\". This is in a contrary to upcasting (view to model conversion),\n * where we convert view state (view nodes) to a model tree.\n *\n * The events are prepared basing on a diff created by {@link module:engine/model/differ~Differ Differ}, which buffers them\n * and then passes to `DowncastDispatcher` as a diff between old model state and new model state.\n *\n * Note, that because changes are converted there is a need to have a mapping between model structure and view structure.\n * To map positions and elements during downcast (model to view conversion) use {@link module:engine/conversion/mapper~Mapper}.\n *\n * `DowncastDispatcher` fires following events for model tree changes:\n *\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:insert insert}\n * if a range of nodes has been inserted to the model tree,\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:remove remove}\n * if a range of nodes has been removed from the model tree,\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute attribute}\n * if attribute has been added, changed or removed from a model node.\n *\n * For {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:insert insert}\n * and {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute attribute},\n * `DowncastDispatcher` generates {@link module:engine/conversion/modelconsumable~ModelConsumable consumables}.\n * These are used to have a control over which changes has been already consumed. It is useful when some converters\n * overwrite other or converts multiple changes (for example converts insertion of an element and also converts that\n * element's attributes during insertion).\n *\n * Additionally, `DowncastDispatcher` fires events for {@link module:engine/model/markercollection~Marker marker} changes:\n *\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker} if a marker has been added,\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:removeMarker} if a marker has been removed.\n *\n * Note, that changing a marker is done through removing the marker from the old range, and adding on the new range,\n * so both those events are fired.\n *\n * Finally, `DowncastDispatcher` also handles firing events for {@link module:engine/model/selection model selection}\n * conversion:\n *\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:selection}\n * which converts selection from model to view,\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute}\n * which is fired for every selection attribute,\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker}\n * which is fired for every marker which contains selection.\n *\n * Unlike model tree and markers, events for selection are not fired for changes but for selection state.\n *\n * When providing custom listeners for `DowncastDispatcher` remember to check whether given change has not been\n * {@link module:engine/conversion/modelconsumable~ModelConsumable#consume consumed} yet.\n *\n * When providing custom listeners for `DowncastDispatcher` keep in mind that any callback that had\n * {@link module:engine/conversion/modelconsumable~ModelConsumable#consume consumed} a value from a consumable and\n * converted the change should also stop the event (for efficiency purposes).\n *\n * When providing custom listeners for `DowncastDispatcher` remember to use provided\n * {@link module:engine/view/downcastwriter~DowncastWriter view downcast writer} to apply changes to the view document.\n *\n * Example of a custom converter for `DowncastDispatcher`:\n *\n *\t\t// We will convert inserting \"paragraph\" model element into the model.\n *\t\tdowncastDispatcher.on( 'insert:paragraph', ( evt, data, conversionApi ) => {\n *\t\t\t// Remember to check whether the change has not been consumed yet and consume it.\n *\t\t\tif ( conversionApi.consumable.consume( data.item, 'insert' ) ) {\n *\t\t\t\treturn;\n *\t\t\t}\n *\n *\t\t\t// Translate position in model to position in view.\n *\t\t\tconst viewPosition = conversionApi.mapper.toViewPosition( data.range.start );\n *\n *\t\t\t// Create <p> element that will be inserted in view at `viewPosition`.\n *\t\t\tconst viewElement = conversionApi.writer.createContainerElement( 'p' );\n *\n *\t\t\t// Bind the newly created view element to model element so positions will map accordingly in future.\n *\t\t\tconversionApi.mapper.bindElements( data.item, viewElement );\n *\n *\t\t\t// Add the newly created view element to the view.\n *\t\t\tconversionApi.writer.insert( viewPosition, viewElement );\n *\n *\t\t\t// Remember to stop the event propagation.\n *\t\t\tevt.stop();\n *\t\t} );\n */\nexport default class DowncastDispatcher {\n\t/**\n\t * Creates a `DowncastDispatcher` instance.\n\t *\n\t * @see module:engine/conversion/downcastdispatcher~DowncastConversionApi\n\t * @param {Object} conversionApi Additional properties for interface that will be passed to events fired\n\t * by `DowncastDispatcher`.\n\t */\n\tconstructor( conversionApi ) {\n\t\t/**\n\t\t * Interface passed by dispatcher to the events callbacks.\n\t\t *\n\t\t * @member {module:engine/conversion/downcastdispatcher~DowncastConversionApi}\n\t\t */\n\t\tthis.conversionApi = extend( { dispatcher: this }, conversionApi );\n\t}\n\n\t/**\n\t * Takes {@link module:engine/model/differ~Differ model differ} object with buffered changes and fires conversion basing on it.\n\t *\n\t * @param {module:engine/model/differ~Differ} differ Differ object with buffered changes.\n\t * @param {module:engine/model/markercollection~MarkerCollection} markers Markers connected with converted model.\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n\t */\n\tconvertChanges( differ, markers, writer ) {\n\t\t// Before the view is updated, remove markers which have changed.\n\t\tfor ( const change of differ.getMarkersToRemove() ) {\n\t\t\tthis.convertMarkerRemove( change.name, change.range, writer );\n\t\t}\n\n\t\t// Convert changes that happened on model tree.\n\t\tfor ( const entry of differ.getChanges() ) {\n\t\t\tif ( entry.type == 'insert' ) {\n\t\t\t\tthis.convertInsert( Range._createFromPositionAndShift( entry.position, entry.length ), writer );\n\t\t\t} else if ( entry.type == 'remove' ) {\n\t\t\t\tthis.convertRemove( entry.position, entry.length, entry.name, writer );\n\t\t\t} else {\n\t\t\t\t// entry.type == 'attribute'.\n\t\t\t\tthis.convertAttribute( entry.range, entry.attributeKey, entry.attributeOldValue, entry.attributeNewValue, writer );\n\t\t\t}\n\t\t}\n\n\t\tfor ( const markerName of this.conversionApi.mapper.flushUnboundMarkerNames() ) {\n\t\t\tconst markerRange = markers.get( markerName ).getRange();\n\n\t\t\tthis.convertMarkerRemove( markerName, markerRange, writer );\n\t\t\tthis.convertMarkerAdd( markerName, markerRange, writer );\n\t\t}\n\n\t\t// After the view is updated, convert markers which have changed.\n\t\tfor ( const change of differ.getMarkersToAdd() ) {\n\t\t\tthis.convertMarkerAdd( change.name, change.range, writer );\n\t\t}\n\t}\n\n\t/**\n\t * Starts conversion of a range insertion.\n\t *\n\t * For each node in the range, {@link #event:insert insert event is fired}. For each attribute on each node,\n\t * {@link #event:attribute attribute event is fired}.\n\t *\n\t * @fires insert\n\t * @fires attribute\n\t * @param {module:engine/model/range~Range} range Inserted range.\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n\t */\n\tconvertInsert( range, writer ) {\n\t\tthis.conversionApi.writer = writer;\n\n\t\t// Create a list of things that can be consumed, consisting of nodes and their attributes.\n\t\tthis.conversionApi.consumable = this._createInsertConsumable( range );\n\n\t\t// Fire a separate insert event for each node and text fragment contained in the range.\n\t\tfor ( const value of range ) {\n\t\t\tconst item = value.item;\n\t\t\tconst itemRange = Range._createFromPositionAndShift( value.previousPosition, value.length );\n\t\t\tconst data = {\n\t\t\t\titem,\n\t\t\t\trange: itemRange\n\t\t\t};\n\n\t\t\tthis._testAndFire( 'insert', data );\n\n\t\t\t// Fire a separate addAttribute event for each attribute that was set on inserted items.\n\t\t\t// This is important because most attributes converters will listen only to add/change/removeAttribute events.\n\t\t\t// If we would not add this part, attributes on inserted nodes would not be converted.\n\t\t\tfor ( const key of item.getAttributeKeys() ) {\n\t\t\t\tdata.attributeKey = key;\n\t\t\t\tdata.attributeOldValue = null;\n\t\t\t\tdata.attributeNewValue = item.getAttribute( key );\n\n\t\t\t\tthis._testAndFire( `attribute:${ key }`, data );\n\t\t\t}\n\t\t}\n\n\t\tthis._clearConversionApi();\n\t}\n\n\t/**\n\t * Fires conversion of a single node removal. Fires {@link #event:remove remove event} with provided data.\n\t *\n\t * @param {module:engine/model/position~Position} position Position from which node was removed.\n\t * @param {Number} length Offset size of removed node.\n\t * @param {String} name Name of removed node.\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n\t */\n\tconvertRemove( position, length, name, writer ) {\n\t\tthis.conversionApi.writer = writer;\n\n\t\tthis.fire( 'remove:' + name, { position, length }, this.conversionApi );\n\n\t\tthis._clearConversionApi();\n\t}\n\n\t/**\n\t * Starts conversion of attribute change on given `range`.\n\t *\n\t * For each node in the given `range`, {@link #event:attribute attribute event} is fired with the passed data.\n\t *\n\t * @fires attribute\n\t * @param {module:engine/model/range~Range} range Changed range.\n\t * @param {String} key Key of the attribute that has changed.\n\t * @param {*} oldValue Attribute value before the change or `null` if the attribute has not been set before.\n\t * @param {*} newValue New attribute value or `null` if the attribute has been removed.\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n\t */\n\tconvertAttribute( range, key, oldValue, newValue, writer ) {\n\t\tthis.conversionApi.writer = writer;\n\n\t\t// Create a list with attributes to consume.\n\t\tthis.conversionApi.consumable = this._createConsumableForRange( range, `attribute:${ key }` );\n\n\t\t// Create a separate attribute event for each node in the range.\n\t\tfor ( const value of range ) {\n\t\t\tconst item = value.item;\n\t\t\tconst itemRange = Range._createFromPositionAndShift( value.previousPosition, value.length );\n\t\t\tconst data = {\n\t\t\t\titem,\n\t\t\t\trange: itemRange,\n\t\t\t\tattributeKey: key,\n\t\t\t\tattributeOldValue: oldValue,\n\t\t\t\tattributeNewValue: newValue\n\t\t\t};\n\n\t\t\tthis._testAndFire( `attribute:${ key }`, data );\n\t\t}\n\n\t\tthis._clearConversionApi();\n\t}\n\n\t/**\n\t * Starts model selection conversion.\n\t *\n\t * Fires events for given {@link module:engine/model/selection~Selection selection} to start selection conversion.\n\t *\n\t * @fires selection\n\t * @fires addMarker\n\t * @fires attribute\n\t * @param {module:engine/model/selection~Selection} selection Selection to convert.\n\t * @param {module:engine/model/markercollection~MarkerCollection} markers Markers connected with converted model.\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n\t */\n\tconvertSelection( selection, markers, writer ) {\n\t\tconst markersAtSelection = Array.from( markers.getMarkersAtPosition( selection.getFirstPosition() ) );\n\n\t\tthis.conversionApi.writer = writer;\n\t\tthis.conversionApi.consumable = this._createSelectionConsumable( selection, markersAtSelection );\n\n\t\tthis.fire( 'selection', { selection }, this.conversionApi );\n\n\t\tif ( !selection.isCollapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor ( const marker of markersAtSelection ) {\n\t\t\tconst markerRange = marker.getRange();\n\n\t\t\tif ( !shouldMarkerChangeBeConverted( selection.getFirstPosition(), marker, this.conversionApi.mapper ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst data = {\n\t\t\t\titem: selection,\n\t\t\t\tmarkerName: marker.name,\n\t\t\t\tmarkerRange\n\t\t\t};\n\n\t\t\tif ( this.conversionApi.consumable.test( selection, 'addMarker:' + marker.name ) ) {\n\t\t\t\tthis.fire( 'addMarker:' + marker.name, data, this.conversionApi );\n\t\t\t}\n\t\t}\n\n\t\tfor ( const key of selection.getAttributeKeys() ) {\n\t\t\tconst data = {\n\t\t\t\titem: selection,\n\t\t\t\trange: selection.getFirstRange(),\n\t\t\t\tattributeKey: key,\n\t\t\t\tattributeOldValue: null,\n\t\t\t\tattributeNewValue: selection.getAttribute( key )\n\t\t\t};\n\n\t\t\t// Do not fire event if the attribute has been consumed.\n\t\t\tif ( this.conversionApi.consumable.test( selection, 'attribute:' + data.attributeKey ) ) {\n\t\t\t\tthis.fire( 'attribute:' + data.attributeKey + ':$text', data, this.conversionApi );\n\t\t\t}\n\t\t}\n\n\t\tthis._clearConversionApi();\n\t}\n\n\t/**\n\t * Converts added marker. Fires {@link #event:addMarker addMarker} event for each item\n\t * in marker's range. If range is collapsed single event is dispatched. See event description for more details.\n\t *\n\t * @fires addMarker\n\t * @param {String} markerName Marker name.\n\t * @param {module:engine/model/range~Range} markerRange Marker range.\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n\t */\n\tconvertMarkerAdd( markerName, markerRange, writer ) {\n\t\t// Do not convert if range is in graveyard or not in the document (e.g. in DocumentFragment).\n\t\tif ( !markerRange.root.document || markerRange.root.rootName == '$graveyard' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.conversionApi.writer = writer;\n\n\t\t// In markers' case, event name == consumable name.\n\t\tconst eventName = 'addMarker:' + markerName;\n\n\t\t//\n\t\t// First, fire an event for the whole marker.\n\t\t//\n\t\tconst consumable = new Consumable();\n\t\tconsumable.add( markerRange, eventName );\n\n\t\tthis.conversionApi.consumable = consumable;\n\n\t\tthis.fire( eventName, { markerName, markerRange }, this.conversionApi );\n\n\t\t//\n\t\t// Do not fire events for each item inside the range if the range got consumed.\n\t\t//\n\t\tif ( !consumable.test( markerRange, eventName ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t//\n\t\t// Then, fire an event for each item inside the marker range.\n\t\t//\n\t\tthis.conversionApi.consumable = this._createConsumableForRange( markerRange, eventName );\n\n\t\tfor ( const item of markerRange.getItems() ) {\n\t\t\t// Do not fire event for already consumed items.\n\t\t\tif ( !this.conversionApi.consumable.test( item, eventName ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst data = { item, range: Range._createOn( item ), markerName, markerRange };\n\n\t\t\tthis.fire( eventName, data, this.conversionApi );\n\t\t}\n\n\t\tthis._clearConversionApi();\n\t}\n\n\t/**\n\t * Fires conversion of marker removal. Fires {@link #event:removeMarker removeMarker} event with provided data.\n\t *\n\t * @fires removeMarker\n\t * @param {String} markerName Marker name.\n\t * @param {module:engine/model/range~Range} markerRange Marker range.\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n\t */\n\tconvertMarkerRemove( markerName, markerRange, writer ) {\n\t\t// Do not convert if range is in graveyard or not in the document (e.g. in DocumentFragment).\n\t\tif ( !markerRange.root.document || markerRange.root.rootName == '$graveyard' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.conversionApi.writer = writer;\n\n\t\tthis.fire( 'removeMarker:' + markerName, { markerName, markerRange }, this.conversionApi );\n\n\t\tthis._clearConversionApi();\n\t}\n\n\t/**\n\t * Creates {@link module:engine/conversion/modelconsumable~ModelConsumable} with values to consume from given range,\n\t * assuming that the range has just been inserted to the model.\n\t *\n\t * @private\n\t * @param {module:engine/model/range~Range} range Inserted range.\n\t * @returns {module:engine/conversion/modelconsumable~ModelConsumable} Values to consume.\n\t */\n\t_createInsertConsumable( range ) {\n\t\tconst consumable = new Consumable();\n\n\t\tfor ( const value of range ) {\n\t\t\tconst item = value.item;\n\n\t\t\tconsumable.add( item, 'insert' );\n\n\t\t\tfor ( const key of item.getAttributeKeys() ) {\n\t\t\t\tconsumable.add( item, 'attribute:' + key );\n\t\t\t}\n\t\t}\n\n\t\treturn consumable;\n\t}\n\n\t/**\n\t * Creates {@link module:engine/conversion/modelconsumable~ModelConsumable} with values to consume for given range.\n\t *\n\t * @private\n\t * @param {module:engine/model/range~Range} range Affected range.\n\t * @param {String} type Consumable type.\n\t * @returns {module:engine/conversion/modelconsumable~ModelConsumable} Values to consume.\n\t */\n\t_createConsumableForRange( range, type ) {\n\t\tconst consumable = new Consumable();\n\n\t\tfor ( const item of range.getItems() ) {\n\t\t\tconsumable.add( item, type );\n\t\t}\n\n\t\treturn consumable;\n\t}\n\n\t/**\n\t * Creates {@link module:engine/conversion/modelconsumable~ModelConsumable} with selection consumable values.\n\t *\n\t * @private\n\t * @param {module:engine/model/selection~Selection} selection Selection to create consumable from.\n\t * @param {Iterable.<module:engine/model/markercollection~Marker>} markers Markers which contains selection.\n\t * @returns {module:engine/conversion/modelconsumable~ModelConsumable} Values to consume.\n\t */\n\t_createSelectionConsumable( selection, markers ) {\n\t\tconst consumable = new Consumable();\n\n\t\tconsumable.add( selection, 'selection' );\n\n\t\tfor ( const marker of markers ) {\n\t\t\tconsumable.add( selection, 'addMarker:' + marker.name );\n\t\t}\n\n\t\tfor ( const key of selection.getAttributeKeys() ) {\n\t\t\tconsumable.add( selection, 'attribute:' + key );\n\t\t}\n\n\t\treturn consumable;\n\t}\n\n\t/**\n\t * Tests passed `consumable` to check whether given event can be fired and if so, fires it.\n\t *\n\t * @private\n\t * @fires insert\n\t * @fires attribute\n\t * @param {String} type Event type.\n\t * @param {Object} data Event data.\n\t */\n\t_testAndFire( type, data ) {\n\t\tif ( !this.conversionApi.consumable.test( data.item, type ) ) {\n\t\t\t// Do not fire event if the item was consumed.\n\t\t\treturn;\n\t\t}\n\n\t\tconst name = data.item.name || '$text';\n\n\t\tthis.fire( type + ':' + name, data, this.conversionApi );\n\t}\n\n\t/**\n\t * Clears conversion API object.\n\t *\n\t * @private\n\t */\n\t_clearConversionApi() {\n\t\tdelete this.conversionApi.writer;\n\t\tdelete this.conversionApi.consumable;\n\t}\n\n\t/**\n\t * Fired for inserted nodes.\n\t *\n\t * `insert` is a namespace for a class of events. Names of actually called events follow this pattern:\n\t * `insert:name`. `name` is either `'$text'`, when {@link module:engine/model/text~Text a text node} has been inserted,\n\t * or {@link module:engine/model/element~Element#name name} of inserted element.\n\t *\n\t * This way listeners can either listen to a general `insert` event or specific event (for example `insert:paragraph`).\n\t *\n\t * @event insert\n\t * @param {Object} data Additional information about the change.\n\t * @param {module:engine/model/item~Item} data.item Inserted item.\n\t * @param {module:engine/model/range~Range} data.range Range spanning over inserted item.\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\n\t * to be used by callback, passed in `DowncastDispatcher` constructor.\n\t */\n\n\t/**\n\t * Fired for removed nodes.\n\t *\n\t * `remove` is a namespace for a class of events. Names of actually called events follow this pattern:\n\t * `remove:name`. `name` is either `'$text'`, when {@link module:engine/model/text~Text a text node} has been removed,\n\t * or the {@link module:engine/model/element~Element#name name} of removed element.\n\t *\n\t * This way listeners can either listen to a general `remove` event or specific event (for example `remove:paragraph`).\n\t *\n\t * @event remove\n\t * @param {Object} data Additional information about the change.\n\t * @param {module:engine/model/position~Position} data.position Position from which the node has been removed.\n\t * @param {Number} data.length Offset size of the removed node.\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\n\t * to be used by callback, passed in `DowncastDispatcher` constructor.\n\t */\n\n\t/**\n\t * Fired in the following cases:\n\t *\n\t * * when an attribute has been added, changed, or removed from a node,\n\t * * when a node with an attribute is inserted,\n\t * * when collapsed model selection attribute is converted.\n\t *\n\t * `attribute` is a namespace for a class of events. Names of actually called events follow this pattern:\n\t * `attribute:attributeKey:name`. `attributeKey` is the key of added/changed/removed attribute.\n\t * `name` is either `'$text'` if change was on {@link module:engine/model/text~Text a text node},\n\t * or the {@link module:engine/model/element~Element#name name} of element which attribute has changed.\n\t *\n\t * This way listeners can either listen to a general `attribute:bold` event or specific event (for example `attribute:src:image`).\n\t *\n\t * @event attribute\n\t * @param {Object} data Additional information about the change.\n\t * @param {module:engine/model/item~Item|module:engine/model/documentselection~DocumentSelection} data.item Changed item\n\t * or converted selection.\n\t * @param {module:engine/model/range~Range} data.range Range spanning over changed item or selection range.\n\t * @param {String} data.attributeKey Attribute key.\n\t * @param {*} data.attributeOldValue Attribute value before the change. This is `null` when selection attribute is converted.\n\t * @param {*} data.attributeNewValue New attribute value.\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\n\t * to be used by callback, passed in `DowncastDispatcher` constructor.\n\t */\n\n\t/**\n\t * Fired for {@link module:engine/model/selection~Selection selection} changes.\n\t *\n\t * @event selection\n\t * @param {module:engine/model/selection~Selection} selection Selection that is converted.\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\n\t * to be used by callback, passed in `DowncastDispatcher` constructor.\n\t */\n\n\t/**\n\t * Fired when a new marker is added to the model. Also fired when collapsed model selection that is inside marker is converted.\n\t *\n\t * `addMarker` is a namespace for a class of events. Names of actually called events follow this pattern:\n\t * `addMarker:markerName`. By specifying certain marker names, you can make the events even more gradual. For example,\n\t * if markers are named `foo:abc`, `foo:bar`, then it is possible to listen to `addMarker:foo` or `addMarker:foo:abc` and\n\t * `addMarker:foo:bar` events.\n\t *\n\t * If the marker range is not collapsed:\n\t *\n\t * * the event is fired for each item in the marker range one by one,\n\t * * `conversionApi.consumable` includes each item of the marker range and the consumable value is same as event name.\n\t *\n\t * If the marker range is collapsed:\n\t *\n\t * * there is only one event,\n\t * * `conversionApi.consumable` includes marker range with event name.\n\t *\n\t * If selection inside a marker is converted:\n\t *\n\t * * there is only one event,\n\t * * `conversionApi.consumable` includes selection instance with event name.\n\t *\n\t * @event addMarker\n\t * @param {Object} data Additional information about the change.\n\t * @param {module:engine/model/item~Item|module:engine/model/selection~Selection} data.item Item inside the new marker or\n\t * the selection that is being converted.\n\t * @param {module:engine/model/range~Range} [data.range] Range spanning over converted item. Available only in marker conversion, if\n\t * the marker range was not collapsed.\n\t * @param {module:engine/model/range~Range} data.markerRange Marker range.\n\t * @param {String} data.markerName Marker name.\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\n\t * to be used by callback, passed in `DowncastDispatcher` constructor.\n\t */\n\n\t/**\n\t * Fired when marker is removed from the model.\n\t *\n\t * `removeMarker` is a namespace for a class of events. Names of actually called events follow this pattern:\n\t * `removeMarker:markerName`. By specifying certain marker names, you can make the events even more gradual. For example,\n\t * if markers are named `foo:abc`, `foo:bar`, then it is possible to listen to `removeMarker:foo` or `removeMarker:foo:abc` and\n\t * `removeMarker:foo:bar` events.\n\t *\n\t * @event removeMarker\n\t * @param {Object} data Additional information about the change.\n\t * @param {module:engine/model/range~Range} data.markerRange Marker range.\n\t * @param {String} data.markerName Marker name.\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\n\t * to be used by callback, passed in `DowncastDispatcher` constructor.\n\t */\n}\n\nmix( DowncastDispatcher, EmitterMixin );\n\n// Helper function, checks whether change of `marker` at `modelPosition` should be converted. Marker changes are not\n// converted if they happen inside an element with custom conversion method.\n//\n// @param {module:engine/model/position~Position} modelPosition\n// @param {module:engine/model/markercollection~Marker} marker\n// @param {module:engine/conversion/mapper~Mapper} mapper\n// @returns {Boolean}\nfunction shouldMarkerChangeBeConverted( modelPosition, marker, mapper ) {\n\tconst range = marker.getRange();\n\tconst ancestors = Array.from( modelPosition.getAncestors() );\n\tancestors.shift(); // Remove root element. It cannot be passed to `model.Range#containsItem`.\n\tancestors.reverse();\n\n\tconst hasCustomHandling = ancestors.some( element => {\n\t\tif ( range.containsItem( element ) ) {\n\t\t\tconst viewElement = mapper.toViewElement( element );\n\n\t\t\treturn !!viewElement.getCustomProperty( 'addHighlight' );\n\t\t}\n\t} );\n\n\treturn !hasCustomHandling;\n}\n\n/**\n * Conversion interface that is registered for given {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}\n * and is passed as one of parameters when {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher dispatcher}\n * fires it's events.\n *\n * @interface module:engine/conversion/downcastdispatcher~DowncastConversionApi\n */\n\n/**\n * The {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher} instance.\n *\n * @member {module:engine/conversion/downcastdispatcher~DowncastDispatcher} #dispatcher\n */\n\n/**\n * Stores information about what parts of processed model item are still waiting to be handled. After a piece of model item\n * was converted, appropriate consumable value should be {@link module:engine/conversion/modelconsumable~ModelConsumable#consume consumed}.\n *\n * @member {module:engine/conversion/modelconsumable~ModelConsumable} #consumable\n */\n\n/**\n * The {@link module:engine/conversion/mapper~Mapper} instance.\n *\n * @member {module:engine/conversion/mapper~Mapper} #mapper\n */\n\n/**\n * The {@link module:engine/view/downcastwriter~DowncastWriter} instance used to manipulate data during conversion.\n *\n * @member {module:engine/view/downcastwriter~DowncastWriter} #writer\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/selection\n */\n\nimport Position from './position';\nimport Element from './element';\nimport Node from './node';\nimport Range from './range';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\n\n/**\n * Selection is a set of {@link module:engine/model/range~Range ranges}. It has a direction specified by its\n * {@link module:engine/model/selection~Selection#anchor anchor} and {@link module:engine/model/selection~Selection#focus focus}\n * (it can be {@link module:engine/model/selection~Selection#isBackward forward or backward}).\n * Additionally, selection may have its own attributes (think – whether text typed in in this selection\n * should have those attributes – e.g. whether you type a bolded text).\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\nexport default class Selection {\n\t/**\n\t * Creates a new selection instance based on the given {@link module:engine/model/selection~Selectable selectable}\n\t * or creates an empty selection if no arguments were passed.\n\t *\n\t *\t\t// Creates empty selection without ranges.\n\t *\t\tconst selection = writer.createSelection();\n\t *\n\t *\t\t// Creates selection at the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\tconst selection = writer.createSelection( range );\n\t *\n\t *\t\t// Creates selection at the given ranges\n\t *\t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n\t *\t\tconst selection = writer.createSelection( ranges );\n\t *\n\t *\t\t// Creates selection from the other selection.\n\t *\t\t// Note: It doesn't copies selection attributes.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\tconst selection = writer.createSelection( otherSelection );\n\t *\n\t *\t\t// Creates selection from the given document selection.\n\t *\t\t// Note: It doesn't copies selection attributes.\n\t *\t\tconst documentSelection = model.document.selection;\n\t *\t\tconst selection = writer.createSelection( documentSelection );\n\t *\n\t *\t\t// Creates selection at the given position.\n\t *\t\tconst position = writer.createPositionFromPath( root, path );\n\t *\t\tconst selection = writer.createSelection( position );\n\t *\n\t *\t\t// Creates selection at the given offset in the given element.\n\t *\t\tconst paragraph = writer.createElement( 'paragraph' );\n\t *\t\tconst selection = writer.createSelection( paragraph, offset );\n\t *\n\t *\t\t// Creates a range inside an {@link module:engine/model/element~Element element} which starts before the\n\t *\t\t// first child of that element and ends after the last child of that element.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'in' );\n\t *\n\t *\t\t// Creates a range on an {@link module:engine/model/item~Item item} which starts before the item and ends\n\t *\t\t// just after the item.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'on' );\n\t *\n\t * Selection's constructor allow passing additional options (`'backward'`) as the last argument.\n\t *\n\t *\t\t// Creates backward selection.\n\t *\t\tconst selection = writer.createSelection( range, { backward: true } );\n\t *\n\t * @param {module:engine/model/selection~Selectable} selectable\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t */\n\tconstructor( selectable, placeOrOffset, options ) {\n\t\t/**\n\t\t * Specifies whether the last added range was added as a backward or forward range.\n\t\t *\n\t\t * @private\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._lastRangeBackward = false;\n\n\t\t/**\n\t\t * Stores selection ranges.\n\t\t *\n\t\t * @protected\n\t\t * @type {Array.<module:engine/model/range~Range>}\n\t\t */\n\t\tthis._ranges = [];\n\n\t\t/**\n\t\t * List of attributes set on current selection.\n\t\t *\n\t\t * @protected\n\t\t * @type {Map.<String,*>}\n\t\t */\n\t\tthis._attrs = new Map();\n\n\t\tif ( selectable ) {\n\t\t\tthis.setTo( selectable, placeOrOffset, options );\n\t\t}\n\t}\n\n\t/**\n\t * Selection anchor. Anchor is the position from which the selection was started. If a user is making a selection\n\t * by dragging the mouse, the anchor is where the user pressed the mouse button (the beggining of the selection).\n\t *\n\t * Anchor and {@link #focus} define the direction of the selection, which is important\n\t * when expanding/shrinking selection. The focus moves, while the anchor should remain in the same place.\n\t *\n\t * Anchor is always set to the {@link module:engine/model/range~Range#start start} or\n\t * {@link module:engine/model/range~Range#end end} position of the last of selection's ranges. Whether it is\n\t * the `start` or `end` depends on the specified `options.backward`. See the {@link #setTo `setTo()`} method.\n\t *\n\t * May be set to `null` if there are no ranges in the selection.\n\t *\n\t * @see #focus\n\t * @readonly\n\t * @type {module:engine/model/position~Position|null}\n\t */\n\tget anchor() {\n\t\tif ( this._ranges.length > 0 ) {\n\t\t\tconst range = this._ranges[ this._ranges.length - 1 ];\n\n\t\t\treturn this._lastRangeBackward ? range.end : range.start;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Selection focus. Focus is the position where the selection ends. If a user is making a selection\n\t * by dragging the mouse, the focus is where the mouse cursor is.\n\t *\n\t * May be set to `null` if there are no ranges in the selection.\n\t *\n\t * @see #anchor\n\t * @readonly\n\t * @type {module:engine/model/position~Position|null}\n\t */\n\tget focus() {\n\t\tif ( this._ranges.length > 0 ) {\n\t\t\tconst range = this._ranges[ this._ranges.length - 1 ];\n\n\t\t\treturn this._lastRangeBackward ? range.start : range.end;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Whether the selection is collapsed. Selection is collapsed when there is exactly one range in it\n\t * and it is collapsed.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isCollapsed() {\n\t\tconst length = this._ranges.length;\n\n\t\tif ( length === 1 ) {\n\t\t\treturn this._ranges[ 0 ].isCollapsed;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the number of ranges in the selection.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget rangeCount() {\n\t\treturn this._ranges.length;\n\t}\n\n\t/**\n\t * Specifies whether the selection's {@link #focus} precedes the selection's {@link #anchor}.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isBackward() {\n\t\treturn !this.isCollapsed && this._lastRangeBackward;\n\t}\n\n\t/**\n\t * Checks whether this selection is equal to the given selection. Selections are equal if they have the same directions,\n\t * the same number of ranges and all ranges from one selection equal to ranges from the another selection.\n\t *\n\t * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} otherSelection\n\t * Selection to compare with.\n\t * @returns {Boolean} `true` if selections are equal, `false` otherwise.\n\t */\n\tisEqual( otherSelection ) {\n\t\tif ( this.rangeCount != otherSelection.rangeCount ) {\n\t\t\treturn false;\n\t\t} else if ( this.rangeCount === 0 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( !this.anchor.isEqual( otherSelection.anchor ) || !this.focus.isEqual( otherSelection.focus ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor ( const thisRange of this._ranges ) {\n\t\t\tlet found = false;\n\n\t\t\tfor ( const otherRange of otherSelection._ranges ) {\n\t\t\t\tif ( thisRange.isEqual( otherRange ) ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( !found ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns an iterable object that iterates over copies of selection ranges.\n\t *\n\t * @returns {Iterable.<module:engine/model/range~Range>}\n\t */\n\t* getRanges() {\n\t\tfor ( const range of this._ranges ) {\n\t\t\tyield new Range( range.start, range.end );\n\t\t}\n\t}\n\n\t/**\n\t * Returns a copy of the first range in the selection.\n\t * First range is the one which {@link module:engine/model/range~Range#start start} position\n\t * {@link module:engine/model/position~Position#isBefore is before} start position of all other ranges\n\t * (not to confuse with the first range added to the selection).\n\t *\n\t * Returns `null` if there are no ranges in selection.\n\t *\n\t * @returns {module:engine/model/range~Range|null}\n\t */\n\tgetFirstRange() {\n\t\tlet first = null;\n\n\t\tfor ( const range of this._ranges ) {\n\t\t\tif ( !first || range.start.isBefore( first.start ) ) {\n\t\t\t\tfirst = range;\n\t\t\t}\n\t\t}\n\n\t\treturn first ? new Range( first.start, first.end ) : null;\n\t}\n\n\t/**\n\t * Returns a copy of the last range in the selection.\n\t * Last range is the one which {@link module:engine/model/range~Range#end end} position\n\t * {@link module:engine/model/position~Position#isAfter is after} end position of all other ranges (not to confuse with the range most\n\t * recently added to the selection).\n\t *\n\t * Returns `null` if there are no ranges in selection.\n\t *\n\t * @returns {module:engine/model/range~Range|null}\n\t */\n\tgetLastRange() {\n\t\tlet last = null;\n\n\t\tfor ( const range of this._ranges ) {\n\t\t\tif ( !last || range.end.isAfter( last.end ) ) {\n\t\t\t\tlast = range;\n\t\t\t}\n\t\t}\n\n\t\treturn last ? new Range( last.start, last.end ) : null;\n\t}\n\n\t/**\n\t * Returns the first position in the selection.\n\t * First position is the position that {@link module:engine/model/position~Position#isBefore is before}\n\t * any other position in the selection.\n\t *\n\t * Returns `null` if there are no ranges in selection.\n\t *\n\t * @returns {module:engine/model/position~Position|null}\n\t */\n\tgetFirstPosition() {\n\t\tconst first = this.getFirstRange();\n\n\t\treturn first ? first.start.clone() : null;\n\t}\n\n\t/**\n\t * Returns the last position in the selection.\n\t * Last position is the position that {@link module:engine/model/position~Position#isAfter is after}\n\t * any other position in the selection.\n\t *\n\t * Returns `null` if there are no ranges in selection.\n\t *\n\t * @returns {module:engine/model/position~Position|null}\n\t */\n\tgetLastPosition() {\n\t\tconst lastRange = this.getLastRange();\n\n\t\treturn lastRange ? lastRange.end.clone() : null;\n\t}\n\n\t/**\n\t * Sets this selection's ranges and direction to the specified location based on the given\n\t * {@link module:engine/model/selection~Selectable selectable}.\n\t *\n\t *\t\t// Removes all selection's ranges.\n\t *\t\tselection.setTo( null );\n\t *\n\t *\t\t// Sets selection to the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\tselection.setTo( range );\n\t *\n\t *\t\t// Sets selection to given ranges.\n\t *\t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n\t *\t\tselection.setTo( ranges );\n\t *\n\t *\t\t// Sets selection to other selection.\n\t *\t\t// Note: It doesn't copies selection attributes.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\tselection.setTo( otherSelection );\n\t *\n\t *\t\t// Sets selection to the given document selection.\n\t *\t\t// Note: It doesn't copies selection attributes.\n\t *\t\tconst documentSelection = new DocumentSelection( doc );\n\t *\t\tselection.setTo( documentSelection );\n\t *\n\t *\t\t// Sets collapsed selection at the given position.\n\t *\t\tconst position = writer.createPositionFromPath( root, path );\n\t *\t\tselection.setTo( position );\n\t *\n\t *\t\t// Sets collapsed selection at the position of the given node and an offset.\n\t *\t\tselection.setTo( paragraph, offset );\n\t *\n\t * Creates a range inside an {@link module:engine/model/element~Element element} which starts before the first child of\n \t * that element and ends after the last child of that element.\n\t *\n\t *\t\tselection.setTo( paragraph, 'in' );\n\t *\n\t * Creates a range on an {@link module:engine/model/item~Item item} which starts before the item and ends just after the item.\n\t *\n\t *\t\tselection.setTo( paragraph, 'on' );\n\t *\n\t * `Selection#setTo()`' method allow passing additional options (`backward`) as the last argument.\n\t *\n\t *\t\t// Sets backward selection.\n\t *\t\tconst selection = writer.createSelection( range, { backward: true } );\n\t *\n\t * @param {module:engine/model/selection~Selectable} selectable\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t */\n\tsetTo( selectable, placeOrOffset, options ) {\n\t\tif ( selectable === null ) {\n\t\t\tthis._setRanges( [] );\n\t\t} else if ( selectable instanceof Selection ) {\n\t\t\tthis._setRanges( selectable.getRanges(), selectable.isBackward );\n\t\t} else if ( selectable && typeof selectable.getRanges == 'function' ) {\n\t\t\t// We assume that the selectable is a DocumentSelection.\n\t\t\t// It can't be imported here, because it would lead to circular imports.\n\t\t\tthis._setRanges( selectable.getRanges(), selectable.isBackward );\n\t\t} else if ( selectable instanceof Range ) {\n\t\t\tthis._setRanges( [ selectable ], !!placeOrOffset && !!placeOrOffset.backward );\n\t\t} else if ( selectable instanceof Position ) {\n\t\t\tthis._setRanges( [ new Range( selectable ) ] );\n\t\t} else if ( selectable instanceof Node ) {\n\t\t\tconst backward = !!options && !!options.backward;\n\t\t\tlet range;\n\n\t\t\tif ( placeOrOffset == 'in' ) {\n\t\t\t\trange = Range._createIn( selectable );\n\t\t\t} else if ( placeOrOffset == 'on' ) {\n\t\t\t\trange = Range._createOn( selectable );\n\t\t\t} else if ( placeOrOffset !== undefined ) {\n\t\t\t\trange = new Range( Position._createAt( selectable, placeOrOffset ) );\n\t\t\t} else {\n\t\t\t\t/**\n\t\t\t\t * selection.setTo requires the second parameter when the first parameter is a node.\n\t\t\t\t *\n\t\t\t\t * @error model-selection-setTo-required-second-parameter\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'model-selection-setTo-required-second-parameter: ' +\n\t\t\t\t\t'selection.setTo requires the second parameter when the first parameter is a node.',\n\t\t\t\t\t[ this, selectable ]\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis._setRanges( [ range ], backward );\n\t\t} else if ( isIterable( selectable ) ) {\n\t\t\t// We assume that the selectable is an iterable of ranges.\n\t\t\tthis._setRanges( selectable, placeOrOffset && !!placeOrOffset.backward );\n\t\t} else {\n\t\t\t/**\n\t\t\t * Cannot set the selection to the given place.\n\t\t\t *\n\t\t\t * Invalid parameters were specified when setting the selection. Common issues:\n\t\t\t *\n\t\t\t * * A {@link module:engine/model/textproxy~TextProxy} instance was passed instead of\n\t\t\t * a real {@link module:engine/model/text~Text}.\n\t\t\t * * View nodes were passed instead of model nodes.\n\t\t\t * * `null`/`undefined` was passed.\n\t\t\t *\n\t\t\t * @error model-selection-setTo-not-selectable\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-selection-setTo-not-selectable: Cannot set the selection to the given place.',\n\t\t\t\t[ this, selectable ]\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Replaces all ranges that were added to the selection with given array of ranges. Last range of the array\n\t * is treated like the last added range and is used to set {@link module:engine/model/selection~Selection#anchor} and\n\t * {@link module:engine/model/selection~Selection#focus}. Accepts a flag describing in which direction the selection is made.\n\t *\n\t * @protected\n\t * @fires change:range\n\t * @param {Iterable.<module:engine/model/range~Range>} newRanges Ranges to set.\n\t * @param {Boolean} [isLastBackward=false] Flag describing if last added range was selected forward - from start to end (`false`)\n\t * or backward - from end to start (`true`).\n\t */\n\t_setRanges( newRanges, isLastBackward = false ) {\n\t\tnewRanges = Array.from( newRanges );\n\n\t\t// Check whether there is any range in new ranges set that is different than all already added ranges.\n\t\tconst anyNewRange = newRanges.some( newRange => {\n\t\t\tif ( !( newRange instanceof Range ) ) {\n\t\t\t\t/**\n\t\t\t\t * Selection range set to an object that is not an instance of {@link module:engine/model/range~Range}.\n\t\t\t\t *\n\t\t\t\t * Only {@link module:engine/model/range~Range} instances can be used to set a selection.\n\t\t\t\t * Common mistakes leading to this error are:\n\t\t\t\t *\n\t\t\t\t * * using DOM `Range` object,\n\t\t\t\t * * incorrect CKEditor 5 installation with multiple `ckeditor5-engine` packages having different versions.\n\t\t\t\t *\n\t\t\t\t * @error model-selection-set-ranges-not-range\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'model-selection-set-ranges-not-range: ' +\n\t\t\t\t\t'Selection range set to an object that is not an instance of model.Range.',\n\t\t\t\t\t[ this, newRanges ]\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn this._ranges.every( oldRange => {\n\t\t\t\treturn !oldRange.isEqual( newRange );\n\t\t\t} );\n\t\t} );\n\n\t\t// Don't do anything if nothing changed.\n\t\tif ( newRanges.length === this._ranges.length && !anyNewRange ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._removeAllRanges();\n\n\t\tfor ( const range of newRanges ) {\n\t\t\tthis._pushRange( range );\n\t\t}\n\n\t\tthis._lastRangeBackward = !!isLastBackward;\n\n\t\tthis.fire( 'change:range', { directChange: true } );\n\t}\n\n\t/**\n\t * Moves {@link module:engine/model/selection~Selection#focus} to the specified location.\n\t *\n\t * The location can be specified in the same form as\n\t * {@link module:engine/model/writer~Writer#createPositionAt writer.createPositionAt()} parameters.\n\t *\n\t * @fires change:range\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/model/item~Item model item}.\n\t */\n\tsetFocus( itemOrPosition, offset ) {\n\t\tif ( this.anchor === null ) {\n\t\t\t/**\n\t\t\t * Cannot set selection focus if there are no ranges in selection.\n\t\t\t *\n\t\t\t * @error model-selection-setFocus-no-ranges\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-selection-setFocus-no-ranges: Cannot set selection focus if there are no ranges in selection.',\n\t\t\t\t[ this, itemOrPosition ]\n\t\t\t);\n\t\t}\n\n\t\tconst newFocus = Position._createAt( itemOrPosition, offset );\n\n\t\tif ( newFocus.compareWith( this.focus ) == 'same' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst anchor = this.anchor;\n\n\t\tif ( this._ranges.length ) {\n\t\t\tthis._popRange();\n\t\t}\n\n\t\tif ( newFocus.compareWith( anchor ) == 'before' ) {\n\t\t\tthis._pushRange( new Range( newFocus, anchor ) );\n\t\t\tthis._lastRangeBackward = true;\n\t\t} else {\n\t\t\tthis._pushRange( new Range( anchor, newFocus ) );\n\t\t\tthis._lastRangeBackward = false;\n\t\t}\n\n\t\tthis.fire( 'change:range', { directChange: true } );\n\t}\n\n\t/**\n\t * Gets an attribute value for given key or `undefined` if that attribute is not set on the selection.\n\t *\n\t * @param {String} key Key of attribute to look for.\n\t * @returns {*} Attribute value or `undefined`.\n\t */\n\tgetAttribute( key ) {\n\t\treturn this._attrs.get( key );\n\t}\n\n\t/**\n\t * Returns iterable that iterates over this selection's attributes.\n\t *\n\t * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\n\t * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n\t *\n\t * @returns {Iterable.<*>}\n\t */\n\tgetAttributes() {\n\t\treturn this._attrs.entries();\n\t}\n\n\t/**\n\t * Returns iterable that iterates over this selection's attribute keys.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\tgetAttributeKeys() {\n\t\treturn this._attrs.keys();\n\t}\n\n\t/**\n\t * Checks if the selection has an attribute for given key.\n\t *\n\t * @param {String} key Key of attribute to check.\n\t * @returns {Boolean} `true` if attribute with given key is set on selection, `false` otherwise.\n\t */\n\thasAttribute( key ) {\n\t\treturn this._attrs.has( key );\n\t}\n\n\t/**\n\t * Removes an attribute with given key from the selection.\n\t *\n\t * If given attribute was set on the selection, fires the {@link #event:change:range} event with\n\t * removed attribute key.\n\t *\n\t * @fires change:attribute\n\t * @param {String} key Key of attribute to remove.\n\t */\n\tremoveAttribute( key ) {\n\t\tif ( this.hasAttribute( key ) ) {\n\t\t\tthis._attrs.delete( key );\n\n\t\t\tthis.fire( 'change:attribute', { attributeKeys: [ key ], directChange: true } );\n\t\t}\n\t}\n\n\t/**\n\t * Sets attribute on the selection. If attribute with the same key already is set, it's value is overwritten.\n\t *\n\t * If the attribute value has changed, fires the {@link #event:change:range} event with\n\t * the attribute key.\n\t *\n\t * @fires change:attribute\n\t * @param {String} key Key of attribute to set.\n\t * @param {*} value Attribute value.\n\t */\n\tsetAttribute( key, value ) {\n\t\tif ( this.getAttribute( key ) !== value ) {\n\t\t\tthis._attrs.set( key, value );\n\n\t\t\tthis.fire( 'change:attribute', { attributeKeys: [ key ], directChange: true } );\n\t\t}\n\t}\n\n\t/**\n\t * Returns the selected element. {@link module:engine/model/element~Element Element} is considered as selected if there is only\n\t * one range in the selection, and that range contains exactly one element.\n\t * Returns `null` if there is no selected element.\n\t *\n\t * @returns {module:engine/model/element~Element|null}\n\t */\n\tgetSelectedElement() {\n\t\tif ( this.rangeCount !== 1 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst range = this.getFirstRange();\n\t\tconst nodeAfterStart = range.start.nodeAfter;\n\t\tconst nodeBeforeEnd = range.end.nodeBefore;\n\n\t\treturn ( nodeAfterStart instanceof Element && nodeAfterStart == nodeBeforeEnd ) ? nodeAfterStart : null;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\tselection.is( 'selection' ); // -> true\n\t *\t\tselection.is( 'model:selection' ); // -> true\n\t *\n\t *\t\tselection.is( 'view:selection' ); // -> false\n\t *\t\tselection.is( 'range' ); // -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type == 'selection' || type == 'model:selection';\n\t}\n\n\t/**\n\t * Gets elements of type {@link module:engine/model/schema~Schema#isBlock \"block\"} touched by the selection.\n\t *\n\t * This method's result can be used for example to apply block styling to all blocks covered by this selection.\n\t *\n\t * **Note:** `getSelectedBlocks()` returns blocks that are nested in other non-block elements\n\t * but will not return blocks nested in other blocks.\n\t *\n\t * In this case the function will return exactly all 3 paragraphs (note: `<blockQuote>` is not a block itself):\n\t *\n\t *\t\t<paragraph>[a</paragraph>\n\t *\t\t<blockQuote>\n\t *\t\t\t<paragraph>b</paragraph>\n\t *\t\t</blockQuote>\n\t *\t\t<paragraph>c]d</paragraph>\n\t *\n\t * In this case the paragraph will also be returned, despite the collapsed selection:\n\t *\n\t *\t\t<paragraph>[]a</paragraph>\n\t *\n\t * In such a scenario, however, only blocks A, B & E will be returned as blocks C & D are nested in block B:\n\t *\n\t *\t\t[<blockA></blockA>\n\t *\t\t<blockB>\n\t *\t\t\t<blockC></blockC>\n\t *\t\t\t<blockD></blockD>\n\t *\t\t</blockB>\n\t *\t\t<blockE></blockE>]\n\t *\n\t * If the selection is inside a block all the inner blocks (A & B) are returned:\n\t *\n\t * \t\t<block>\n\t *\t\t\t<blockA>[a</blockA>\n\t * \t\t\t<blockB>b]</blockB>\n\t * \t\t</block>\n\t *\n\t * **Special case**: If a selection ends at the beginning of a block, that block is not returned as from user perspective\n\t * this block wasn't selected. See [#984](https://github.com/ckeditor/ckeditor5-engine/issues/984) for more details.\n\t *\n\t *\t\t<paragraph>[a</paragraph>\n\t *\t\t<paragraph>b</paragraph>\n\t *\t\t<paragraph>]c</paragraph> // this block will not be returned\n\t *\n\t * @returns {Iterable.<module:engine/model/element~Element>}\n\t */\n\t* getSelectedBlocks() {\n\t\tconst visited = new WeakSet();\n\n\t\tfor ( const range of this.getRanges() ) {\n\t\t\t// Get start block of range in case of a collapsed range.\n\t\t\tconst startBlock = getParentBlock( range.start, visited );\n\n\t\t\tif ( startBlock && isTopBlockInRange( startBlock, range ) ) {\n\t\t\t\tyield startBlock;\n\t\t\t}\n\n\t\t\tfor ( const value of range.getWalker() ) {\n\t\t\t\tconst block = value.item;\n\n\t\t\t\tif ( value.type == 'elementEnd' && isUnvisitedTopBlock( block, visited, range ) ) {\n\t\t\t\t\tyield block;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst endBlock = getParentBlock( range.end, visited );\n\n\t\t\t// #984. Don't return the end block if the range ends right at its beginning.\n\t\t\tif ( endBlock && !range.end.isTouching( Position._createAt( endBlock, 0 ) ) && isTopBlockInRange( endBlock, range ) ) {\n\t\t\t\tyield endBlock;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks whether the selection contains the entire content of the given element. This means that selection must start\n\t * at a position {@link module:engine/model/position~Position#isTouching touching} the element's start and ends at position\n\t * touching the element's end.\n\t *\n\t * By default, this method will check whether the entire content of the selection's current root is selected.\n\t * Useful to check if e.g. the user has just pressed <kbd>Ctrl</kbd> + <kbd>A</kbd>.\n\t *\n\t * @param {module:engine/model/element~Element} [element=this.anchor.root]\n\t * @returns {Boolean}\n\t */\n\tcontainsEntireContent( element = this.anchor.root ) {\n\t\tconst limitStartPosition = Position._createAt( element, 0 );\n\t\tconst limitEndPosition = Position._createAt( element, 'end' );\n\n\t\treturn limitStartPosition.isTouching( this.getFirstPosition() ) &&\n\t\t\tlimitEndPosition.isTouching( this.getLastPosition() );\n\t}\n\n\t/**\n\t * Adds given range to internal {@link #_ranges ranges array}. Throws an error\n\t * if given range is intersecting with any range that is already stored in this selection.\n\t *\n\t * @protected\n\t * @param {module:engine/model/range~Range} range Range to add.\n\t */\n\t_pushRange( range ) {\n\t\tthis._checkRange( range );\n\t\tthis._ranges.push( new Range( range.start, range.end ) );\n\t}\n\n\t/**\n\t * Checks if given range intersects with ranges that are already in the selection. Throws an error if it does.\n\t *\n\t * @protected\n\t * @param {module:engine/model/range~Range} range Range to check.\n\t */\n\t_checkRange( range ) {\n\t\tfor ( let i = 0; i < this._ranges.length; i++ ) {\n\t\t\tif ( range.isIntersecting( this._ranges[ i ] ) ) {\n\t\t\t\t/**\n\t\t\t\t * Trying to add a range that intersects with another range in the selection.\n\t\t\t\t *\n\t\t\t\t * @error model-selection-range-intersects\n\t\t\t\t * @param {module:engine/model/range~Range} addedRange Range that was added to the selection.\n\t\t\t\t * @param {module:engine/model/range~Range} intersectingRange Range in the selection that intersects with `addedRange`.\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'model-selection-range-intersects: Trying to add a range that intersects with another range in the selection.',\n\t\t\t\t\t[ this, range ],\n\t\t\t\t\t{ addedRange: range, intersectingRange: this._ranges[ i ] }\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Deletes ranges from internal range array. Uses {@link #_popRange _popRange} to\n\t * ensure proper ranges removal.\n\t *\n\t * @protected\n\t */\n\t_removeAllRanges() {\n\t\twhile ( this._ranges.length > 0 ) {\n\t\t\tthis._popRange();\n\t\t}\n\t}\n\n\t/**\n\t * Removes most recently added range from the selection.\n\t *\n\t * @protected\n\t */\n\t_popRange() {\n\t\tthis._ranges.pop();\n\t}\n\n\t/**\n\t * Fired when selection range(s) changed.\n\t *\n\t * @event change:range\n\t * @param {Boolean} directChange In case of {@link module:engine/model/selection~Selection} class it is always set\n\t * to `true` which indicates that the selection change was caused by a direct use of selection's API.\n\t * The {@link module:engine/model/documentselection~DocumentSelection}, however, may change because its position\n\t * was directly changed through the {@link module:engine/model/writer~Writer writer} or because its position was\n\t * changed because the structure of the model has been changed (which means an indirect change).\n\t * The indirect change does not occur in case of normal (detached) selections because they are \"static\" (as \"not live\")\n\t * which mean that they are not updated once the document changes.\n\t */\n\n\t/**\n\t * Fired when selection attribute changed.\n\t *\n\t * @event change:attribute\n\t * @param {Boolean} directChange In case of {@link module:engine/model/selection~Selection} class it is always set\n\t * to `true` which indicates that the selection change was caused by a direct use of selection's API.\n\t * The {@link module:engine/model/documentselection~DocumentSelection}, however, may change because its attributes\n\t * were directly changed through the {@link module:engine/model/writer~Writer writer} or because its position was\n\t * changed in the model and its attributes were refreshed (which means an indirect change).\n\t * The indirect change does not occur in case of normal (detached) selections because they are \"static\" (as \"not live\")\n\t * which mean that they are not updated once the document changes.\n\t * @param {Array.<String>} attributeKeys Array containing keys of attributes that changed.\n\t */\n}\n\nmix( Selection, EmitterMixin );\n\n// Checks whether the given element extends $block in the schema and has a parent (is not a root).\n// Marks it as already visited.\nfunction isUnvisitedBlock( element, visited ) {\n\tif ( visited.has( element ) ) {\n\t\treturn false;\n\t}\n\n\tvisited.add( element );\n\n\treturn element.document.model.schema.isBlock( element ) && element.parent;\n}\n\n// Checks if the given element is a $block was not previously visited and is a top block in a range.\nfunction isUnvisitedTopBlock( element, visited, range ) {\n\treturn isUnvisitedBlock( element, visited ) && isTopBlockInRange( element, range );\n}\n\n// Finds the lowest element in position's ancestors which is a block.\n// It will search until first ancestor that is a limit element.\n// Marks all ancestors as already visited to not include any of them later on.\nfunction getParentBlock( position, visited ) {\n\tconst schema = position.parent.document.model.schema;\n\n\tconst ancestors = position.parent.getAncestors( { parentFirst: true, includeSelf: true } );\n\n\tlet hasParentLimit = false;\n\n\tconst block = ancestors.find( element => {\n\t\t// Stop searching after first parent node that is limit element.\n\t\tif ( hasParentLimit ) {\n\t\t\treturn false;\n\t\t}\n\n\t\thasParentLimit = schema.isLimit( element );\n\n\t\treturn !hasParentLimit && isUnvisitedBlock( element, visited );\n\t} );\n\n\t// Mark all ancestors of this position's parent, because find() might've stopped early and\n\t// the found block may be a child of another block.\n\tancestors.forEach( element => visited.add( element ) );\n\n\treturn block;\n}\n\n// Checks if the blocks is not nested in other block inside a range.\n//\n// @param {module:engine/model/elmenent~Element} block Block to check.\n// @param {module:engine/model/range~Range} range Range to check.\nfunction isTopBlockInRange( block, range ) {\n\tconst parentBlock = findAncestorBlock( block );\n\n\tif ( !parentBlock ) {\n\t\treturn true;\n\t}\n\n\t// Add loose flag to check as parentRange can be equal to range.\n\tconst isParentInRange = range.containsRange( Range._createOn( parentBlock ), true );\n\n\treturn !isParentInRange;\n}\n\n// Returns first ancestor block of a node.\n//\n// @param {module:engine/model/node~Node} node\n// @returns {module:engine/model/node~Node|undefined}\nfunction findAncestorBlock( node ) {\n\tconst schema = node.document.model.schema;\n\n\tlet parent = node.parent;\n\n\twhile ( parent ) {\n\t\tif ( schema.isBlock( parent ) ) {\n\t\t\treturn parent;\n\t\t}\n\n\t\tparent = parent.parent;\n\t}\n}\n\n/**\n * An entity that is used to set selection.\n *\n * See also {@link module:engine/model/selection~Selection#setTo}\n *\n * @typedef {\n *     module:engine/model/selection~Selection|\n *     module:engine/model/documentselection~DocumentSelection|\n *     module:engine/model/position~Position|\n *     module:engine/model/range~Range|\n *     module:engine/model/node~Node|\n *     Iterable.<module:engine/model/range~Range>|\n *     null\n * } module:engine/model/selection~Selectable\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/liverange\n */\n\nimport Range from './range';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * `LiveRange` is a type of {@link module:engine/model/range~Range Range}\n * that updates itself as {@link module:engine/model/document~Document document}\n * is changed through operations. It may be used as a bookmark.\n *\n * **Note:** Be very careful when dealing with `LiveRange`. Each `LiveRange` instance bind events that might\n * have to be unbound. Use {@link module:engine/model/liverange~LiveRange#detach detach} whenever you don't need `LiveRange` anymore.\n */\nexport default class LiveRange extends Range {\n\t/**\n\t * Creates a live range.\n\t *\n\t * @see module:engine/model/range~Range\n\t */\n\tconstructor( start, end ) {\n\t\tsuper( start, end );\n\n\t\tbindWithDocument.call( this );\n\t}\n\n\t/**\n\t * Unbinds all events previously bound by `LiveRange`. Use it whenever you don't need `LiveRange` instance\n\t * anymore (i.e. when leaving scope in which it was declared or before re-assigning variable that was\n\t * referring to it).\n\t */\n\tdetach() {\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\tliveRange.is( 'range' ); // -> true\n\t *\t\tliveRange.is( 'model:range' ); // -> true\n\t *\t\tliveRange.is( 'liveRange' ); // -> true\n\t *\t\tliveRange.is( 'model:liveRange' ); // -> true\n\t *\n\t *\t\tliveRange.is( 'view:range' ); // -> false\n\t *\t\tliveRange.is( 'documentSelection' ); // -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type == 'liveRange' || type == 'model:liveRange' || super.is( type );\n\t}\n\n\t/**\n\t * Creates a {@link module:engine/model/range~Range range instance} that is equal to this live range.\n\t *\n\t * @returns {module:engine/model/range~Range}\n\t */\n\ttoRange() {\n\t\treturn new Range( this.start, this.end );\n\t}\n\n\t/**\n\t * Creates a `LiveRange` instance that is equal to the given range.\n\t *\n\t * @param {module:engine/model/range~Range} range\n\t * @returns {module:engine/model/liverange~LiveRange}\n\t */\n\tstatic fromRange( range ) {\n\t\treturn new LiveRange( range.start, range.end );\n\t}\n\n\t/**\n\t * @see module:engine/model/range~Range._createIn\n\t * @static\n\t * @protected\n\t * @method module:engine/model/liverange~LiveRange._createIn\n\t * @param {module:engine/model/element~Element} element\n\t * @returns {module:engine/model/liverange~LiveRange}\n\t */\n\n\t/**\n\t * @see module:engine/model/range~Range._createOn\n\t * @static\n\t * @protected\n\t * @method module:engine/model/liverange~LiveRange._createOn\n\t * @param {module:engine/model/element~Element} element\n\t * @returns {module:engine/model/liverange~LiveRange}\n\t */\n\n\t/**\n\t * @see module:engine/model/range~Range._createFromPositionAndShift\n\t * @static\n\t * @protected\n\t * @method module:engine/model/liverange~LiveRange._createFromPositionAndShift\n\t * @param {module:engine/model/position~Position} position\n\t * @param {Number} shift\n\t * @returns {module:engine/model/liverange~LiveRange}\n\t */\n\n\t/**\n\t * Fired when `LiveRange` instance boundaries have changed due to changes in the\n\t * {@link module:engine/model/document~Document document}.\n\t *\n\t * @event change:range\n\t * @param {module:engine/model/range~Range} oldRange Range with start and end position equal to start and end position of this live\n\t * range before it got changed.\n\t * @param {Object} data Object with additional information about the change.\n\t * @param {module:engine/model/position~Position|null} data.deletionPosition Source position for remove and merge changes.\n\t * Available if the range was moved to the graveyard root, `null` otherwise.\n\t */\n\n\t/**\n\t * Fired when `LiveRange` instance boundaries have not changed after a change in {@link module:engine/model/document~Document document}\n\t * but the change took place inside the range, effectively changing its content.\n\t *\n\t * @event change:content\n\t * @param {module:engine/model/range~Range} range Range with start and end position equal to start and end position of\n\t * change range.\n\t * @param {Object} data Object with additional information about the change.\n\t * @param {null} data.deletionPosition Due to the nature of this event, this property is always set to `null`. It is passed\n\t * for compatibility with the {@link module:engine/model/liverange~LiveRange#event:change:range} event.\n\t */\n}\n\n// Binds this `LiveRange` to the {@link module:engine/model/document~Document document}\n// that owns this range's {@link module:engine/model/range~Range#root root}.\n//\n// @private\nfunction bindWithDocument() {\n\tthis.listenTo(\n\t\tthis.root.document.model,\n\t\t'applyOperation',\n\t\t( event, args ) => {\n\t\t\tconst operation = args[ 0 ];\n\n\t\t\tif ( !operation.isDocumentOperation ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttransform.call( this, operation );\n\t\t},\n\t\t{ priority: 'low' }\n\t);\n}\n\n// Updates this range accordingly to the updates applied to the model. Bases on change events.\n//\n// @private\n// @param {module:engine/model/operation/operation~Operation} operation Executed operation.\nfunction transform( operation ) {\n\t// Transform the range by the operation. Join the result ranges if needed.\n\tconst ranges = this.getTransformedByOperation( operation );\n\tconst result = Range._createFromRanges( ranges );\n\n\tconst boundariesChanged = !result.isEqual( this );\n\tconst contentChanged = doesOperationChangeRangeContent( this, operation );\n\n\tlet deletionPosition = null;\n\n\tif ( boundariesChanged ) {\n\t\t// If range boundaries have changed, fire `change:range` event.\n\t\t//\n\t\tif ( result.root.rootName == '$graveyard' ) {\n\t\t\t// If the range was moved to the graveyard root, set `deletionPosition`.\n\t\t\tif ( operation.type == 'remove' ) {\n\t\t\t\tdeletionPosition = operation.sourcePosition;\n\t\t\t} else {\n\t\t\t\t// Merge operation.\n\t\t\t\tdeletionPosition = operation.deletionPosition;\n\t\t\t}\n\t\t}\n\n\t\tconst oldRange = this.toRange();\n\n\t\tthis.start = result.start;\n\t\tthis.end = result.end;\n\n\t\tthis.fire( 'change:range', oldRange, { deletionPosition } );\n\t} else if ( contentChanged ) {\n\t\t// If range boundaries have not changed, but there was change inside the range, fire `change:content` event.\n\t\tthis.fire( 'change:content', this.toRange(), { deletionPosition } );\n\t}\n}\n\n// Checks whether given operation changes something inside the range (even if it does not change boundaries).\n//\n// @private\n// @param {module:engine/model/range~Range} range Range to check.\n// @param {module:engine/model/operation/operation~Operation} operation Executed operation.\n// @returns {Boolean}\nfunction doesOperationChangeRangeContent( range, operation ) {\n\tswitch ( operation.type ) {\n\t\tcase 'insert':\n\t\t\treturn range.containsPosition( operation.position );\n\t\tcase 'move':\n\t\tcase 'remove':\n\t\tcase 'reinsert':\n\t\tcase 'merge':\n\t\t\treturn range.containsPosition( operation.sourcePosition ) ||\n\t\t\t\trange.start.isEqual( operation.sourcePosition ) ||\n\t\t\t\trange.containsPosition( operation.targetPosition );\n\t\tcase 'split':\n\t\t\treturn range.containsPosition( operation.splitPosition ) || range.containsPosition( operation.insertionPosition );\n\t}\n\n\treturn false;\n}\n\nmix( LiveRange, EmitterMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/documentselection\n */\n\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\n\nimport Selection from './selection';\nimport LiveRange from './liverange';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport toMap from '@ckeditor/ckeditor5-utils/src/tomap';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport uid from '@ckeditor/ckeditor5-utils/src/uid';\n\nconst storePrefix = 'selection:';\n\n/**\n * `DocumentSelection` is a special selection which is used as the\n * {@link module:engine/model/document~Document#selection document's selection}.\n * There can be only one instance of `DocumentSelection` per document.\n *\n * Document selection can only be changed by using the {@link module:engine/model/writer~Writer} instance\n * inside the {@link module:engine/model/model~Model#change `change()`} block, as it provides a secure way to modify model.\n *\n * `DocumentSelection` is automatically updated upon changes in the {@link module:engine/model/document~Document document}\n * to always contain valid ranges. Its attributes are inherited from the text unless set explicitly.\n *\n * Differences between {@link module:engine/model/selection~Selection} and `DocumentSelection` are:\n * * there is always a range in `DocumentSelection` - even if no ranges were added there is a \"default range\"\n * present in the selection,\n * * ranges added to this selection updates automatically when the document changes,\n * * attributes of `DocumentSelection` are updated automatically according to selection ranges.\n *\n * Since `DocumentSelection` uses {@link module:engine/model/liverange~LiveRange live ranges}\n * and is updated when {@link module:engine/model/document~Document document}\n * changes, it cannot be set on {@link module:engine/model/node~Node nodes}\n * that are inside {@link module:engine/model/documentfragment~DocumentFragment document fragment}.\n * If you need to represent a selection in document fragment,\n * use {@link module:engine/model/selection~Selection Selection class} instead.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\nexport default class DocumentSelection {\n\t/**\n\t * Creates an empty live selection for given {@link module:engine/model/document~Document}.\n\t *\n\t * @param {module:engine/model/document~Document} doc Document which owns this selection.\n\t */\n\tconstructor( doc ) {\n\t\t/**\n\t\t * Selection used internally by that class (`DocumentSelection` is a proxy to that selection).\n\t\t *\n\t\t * @protected\n\t\t */\n\t\tthis._selection = new LiveSelection( doc );\n\n\t\tthis._selection.delegate( 'change:range' ).to( this );\n\t\tthis._selection.delegate( 'change:attribute' ).to( this );\n\t\tthis._selection.delegate( 'change:marker' ).to( this );\n\t}\n\n\t/**\n\t * Returns whether the selection is collapsed. Selection is collapsed when there is exactly one range which is\n\t * collapsed.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isCollapsed() {\n\t\treturn this._selection.isCollapsed;\n\t}\n\n\t/**\n\t * Selection anchor. Anchor may be described as a position where the most recent part of the selection starts.\n\t * Together with {@link #focus} they define the direction of selection, which is important\n\t * when expanding/shrinking selection. Anchor is always {@link module:engine/model/range~Range#start start} or\n\t * {@link module:engine/model/range~Range#end end} position of the most recently added range.\n\t *\n\t * Is set to `null` if there are no ranges in selection.\n\t *\n\t * @see #focus\n\t * @readonly\n\t * @type {module:engine/model/position~Position|null}\n\t */\n\tget anchor() {\n\t\treturn this._selection.anchor;\n\t}\n\n\t/**\n\t * Selection focus. Focus is a position where the selection ends.\n\t *\n\t * Is set to `null` if there are no ranges in selection.\n\t *\n\t * @see #anchor\n\t * @readonly\n\t * @type {module:engine/model/position~Position|null}\n\t */\n\tget focus() {\n\t\treturn this._selection.focus;\n\t}\n\n\t/**\n\t * Returns number of ranges in selection.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget rangeCount() {\n\t\treturn this._selection.rangeCount;\n\t}\n\n\t/**\n\t * Describes whether `Documentselection` has own range(s) set, or if it is defaulted to\n\t * {@link module:engine/model/document~Document#_getDefaultRange document's default range}.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget hasOwnRange() {\n\t\treturn this._selection.hasOwnRange;\n\t}\n\n\t/**\n\t * Specifies whether the {@link #focus}\n\t * precedes {@link #anchor}.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isBackward() {\n\t\treturn this._selection.isBackward;\n\t}\n\n\t/**\n\t * Describes whether the gravity is overridden (using {@link module:engine/model/writer~Writer#overrideSelectionGravity}) or not.\n\t *\n\t * Note that the gravity remains overridden as long as will not be restored the same number of times as it was overridden.\n\t *\n\t * @readonly\n\t * @returns {Boolean}\n\t */\n\tget isGravityOverridden() {\n\t\treturn this._selection.isGravityOverridden;\n\t}\n\n\t/**\n\t * A collection of selection markers.\n\t * Marker is a selection marker when selection range is inside the marker range.\n\t *\n\t * @readonly\n\t * @type {module:utils/collection~Collection.<module:engine/model/markercollection~Marker>}\n\t */\n\tget markers() {\n\t\treturn this._selection.markers;\n\t}\n\n\t/**\n\t * Used for the compatibility with the {@link module:engine/model/selection~Selection#isEqual} method.\n\t *\n\t * @protected\n\t */\n\tget _ranges() {\n\t\treturn this._selection._ranges;\n\t}\n\n\t/**\n\t * Returns an iterable that iterates over copies of selection ranges.\n\t *\n\t * @returns {Iterable.<module:engine/model/range~Range>}\n\t */\n\tgetRanges() {\n\t\treturn this._selection.getRanges();\n\t}\n\n\t/**\n\t * Returns the first position in the selection.\n\t * First position is the position that {@link module:engine/model/position~Position#isBefore is before}\n\t * any other position in the selection.\n\t *\n\t * Returns `null` if there are no ranges in selection.\n\t *\n\t * @returns {module:engine/model/position~Position|null}\n\t */\n\tgetFirstPosition() {\n\t\treturn this._selection.getFirstPosition();\n\t}\n\n\t/**\n\t * Returns the last position in the selection.\n\t * Last position is the position that {@link module:engine/model/position~Position#isAfter is after}\n\t * any other position in the selection.\n\t *\n\t * Returns `null` if there are no ranges in selection.\n\t *\n\t * @returns {module:engine/model/position~Position|null}\n\t */\n\tgetLastPosition() {\n\t\treturn this._selection.getLastPosition();\n\t}\n\n\t/**\n\t * Returns a copy of the first range in the selection.\n\t * First range is the one which {@link module:engine/model/range~Range#start start} position\n\t * {@link module:engine/model/position~Position#isBefore is before} start position of all other ranges\n\t * (not to confuse with the first range added to the selection).\n\t *\n\t * Returns `null` if there are no ranges in selection.\n\t *\n\t * @returns {module:engine/model/range~Range|null}\n\t */\n\tgetFirstRange() {\n\t\treturn this._selection.getFirstRange();\n\t}\n\n\t/**\n\t * Returns a copy of the last range in the selection.\n\t * Last range is the one which {@link module:engine/model/range~Range#end end} position\n\t * {@link module:engine/model/position~Position#isAfter is after} end position of all other ranges (not to confuse with the range most\n\t * recently added to the selection).\n\t *\n\t * Returns `null` if there are no ranges in selection.\n\t *\n\t * @returns {module:engine/model/range~Range|null}\n\t */\n\tgetLastRange() {\n\t\treturn this._selection.getLastRange();\n\t}\n\n\t/**\n\t * Gets elements of type {@link module:engine/model/schema~Schema#isBlock \"block\"} touched by the selection.\n\t *\n\t * This method's result can be used for example to apply block styling to all blocks covered by this selection.\n\t *\n\t * **Note:** `getSelectedBlocks()` returns blocks that are nested in other non-block elements\n\t * but will not return blocks nested in other blocks.\n\t *\n\t * In this case the function will return exactly all 3 paragraphs (note: `<blockQuote>` is not a block itself):\n\t *\n\t *\t\t<paragraph>[a</paragraph>\n\t *\t\t<blockQuote>\n\t *\t\t\t<paragraph>b</paragraph>\n\t *\t\t</blockQuote>\n\t *\t\t<paragraph>c]d</paragraph>\n\t *\n\t * In this case the paragraph will also be returned, despite the collapsed selection:\n\t *\n\t *\t\t<paragraph>[]a</paragraph>\n\t *\n\t * In such a scenario, however, only blocks A, B & E will be returned as blocks C & D are nested in block B:\n\t *\n\t *\t\t[<blockA></blockA>\n\t *\t\t<blockB>\n\t *\t\t\t<blockC></blockC>\n\t *\t\t\t<blockD></blockD>\n\t *\t\t</blockB>\n\t *\t\t<blockE></blockE>]\n\t *\n\t * If the selection is inside a block all the inner blocks (A & B) are returned:\n\t *\n\t * \t\t<block>\n\t *\t\t\t<blockA>[a</blockA>\n\t * \t\t\t<blockB>b]</blockB>\n\t * \t\t</block>\n\t *\n\t * **Special case**: If a selection ends at the beginning of a block, that block is not returned as from user perspective\n\t * this block wasn't selected. See [#984](https://github.com/ckeditor/ckeditor5-engine/issues/984) for more details.\n\t *\n\t *\t\t<paragraph>[a</paragraph>\n\t *\t\t<paragraph>b</paragraph>\n\t *\t\t<paragraph>]c</paragraph> // this block will not be returned\n\t *\n\t * @returns {Iterable.<module:engine/model/element~Element>}\n\t */\n\tgetSelectedBlocks() {\n\t\treturn this._selection.getSelectedBlocks();\n\t}\n\n\t/**\n\t * Returns the selected element. {@link module:engine/model/element~Element Element} is considered as selected if there is only\n\t * one range in the selection, and that range contains exactly one element.\n\t * Returns `null` if there is no selected element.\n\t *\n\t * @returns {module:engine/model/element~Element|null}\n\t */\n\tgetSelectedElement() {\n\t\treturn this._selection.getSelectedElement();\n\t}\n\n\t/**\n\t * Checks whether the selection contains the entire content of the given element. This means that selection must start\n\t * at a position {@link module:engine/model/position~Position#isTouching touching} the element's start and ends at position\n\t * touching the element's end.\n\t *\n\t * By default, this method will check whether the entire content of the selection's current root is selected.\n\t * Useful to check if e.g. the user has just pressed <kbd>Ctrl</kbd> + <kbd>A</kbd>.\n\t *\n\t * @param {module:engine/model/element~Element} [element=this.anchor.root]\n\t * @returns {Boolean}\n\t */\n\tcontainsEntireContent( element ) {\n\t\treturn this._selection.containsEntireContent( element );\n\t}\n\n\t/**\n\t * Unbinds all events previously bound by document selection.\n\t */\n\tdestroy() {\n\t\tthis._selection.destroy();\n\t}\n\n\t/**\n\t * Returns iterable that iterates over this selection's attribute keys.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\tgetAttributeKeys() {\n\t\treturn this._selection.getAttributeKeys();\n\t}\n\n\t/**\n\t * Returns iterable that iterates over this selection's attributes.\n\t *\n\t * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\n\t * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n\t *\n\t * @returns {Iterable.<*>}\n\t */\n\tgetAttributes() {\n\t\treturn this._selection.getAttributes();\n\t}\n\n\t/**\n\t * Gets an attribute value for given key or `undefined` if that attribute is not set on the selection.\n\t *\n\t * @param {String} key Key of attribute to look for.\n\t * @returns {*} Attribute value or `undefined`.\n\t */\n\tgetAttribute( key ) {\n\t\treturn this._selection.getAttribute( key );\n\t}\n\n\t/**\n\t * Checks if the selection has an attribute for given key.\n\t *\n\t * @param {String} key Key of attribute to check.\n\t * @returns {Boolean} `true` if attribute with given key is set on selection, `false` otherwise.\n\t */\n\thasAttribute( key ) {\n\t\treturn this._selection.hasAttribute( key );\n\t}\n\n\t/**\n\t * Refreshes selection attributes and markers according to the current position in the model.\n\t */\n\trefresh() {\n\t\tthis._selection._updateMarkers();\n\t\tthis._selection._updateAttributes( false );\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t *\t\tselection.is( 'selection' ); // -> true\n\t *\t\tselection.is( 'documentSelection' ); // -> true\n\t *\t\tselection.is( 'model:selection' ); // -> true\n\t *\t\tselection.is( 'model:documentSelection' ); // -> true\n\t *\n\t *\t\tselection.is( 'view:selection' ); // -> false\n\t *\t\tselection.is( 'element' ); // -> false\n\t *\t\tselection.is( 'node' ); // -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type == 'selection' ||\n\t\t\ttype == 'model:selection' ||\n\t\t\ttype == 'documentSelection' ||\n\t\t\ttype == 'model:documentSelection';\n\t}\n\n\t/**\n\t * Moves {@link module:engine/model/documentselection~DocumentSelection#focus} to the specified location.\n\t * Should be used only within the {@link module:engine/model/writer~Writer#setSelectionFocus} method.\n\t *\n\t * The location can be specified in the same form as\n\t * {@link module:engine/model/writer~Writer#createPositionAt writer.createPositionAt()} parameters.\n\t *\n\t * @see module:engine/model/writer~Writer#setSelectionFocus\n\t * @protected\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/model/item~Item model item}.\n\t */\n\t_setFocus( itemOrPosition, offset ) {\n\t\tthis._selection.setFocus( itemOrPosition, offset );\n\t}\n\n\t/**\n\t * Sets this selection's ranges and direction to the specified location based on the given\n\t * {@link module:engine/model/selection~Selectable selectable}.\n\t * Should be used only within the {@link module:engine/model/writer~Writer#setSelection} method.\n\t *\n\t * @see module:engine/model/writer~Writer#setSelection\n\t * @protected\n\t * @param {module:engine/model/selection~Selectable} selectable\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t */\n\t_setTo( selectable, placeOrOffset, options ) {\n\t\tthis._selection.setTo( selectable, placeOrOffset, options );\n\t}\n\n\t/**\n\t * Sets attribute on the selection. If attribute with the same key already is set, it's value is overwritten.\n\t * Should be used only within the {@link module:engine/model/writer~Writer#setSelectionAttribute} method.\n\t *\n\t * @see module:engine/model/writer~Writer#setSelectionAttribute\n\t * @protected\n\t * @param {String} key Key of the attribute to set.\n\t * @param {*} value Attribute value.\n\t */\n\t_setAttribute( key, value ) {\n\t\tthis._selection.setAttribute( key, value );\n\t}\n\n\t/**\n\t * Removes an attribute with given key from the selection.\n\t * If the given attribute was set on the selection, fires the {@link module:engine/model/selection~Selection#event:change:range}\n\t * event with removed attribute key.\n\t * Should be used only within the {@link module:engine/model/writer~Writer#removeSelectionAttribute} method.\n\t *\n\t * @see module:engine/model/writer~Writer#removeSelectionAttribute\n\t * @protected\n\t * @param {String} key Key of the attribute to remove.\n\t */\n\t_removeAttribute( key ) {\n\t\tthis._selection.removeAttribute( key );\n\t}\n\n\t/**\n\t * Returns an iterable that iterates through all selection attributes stored in current selection's parent.\n\t *\n\t * @protected\n\t * @returns {Iterable.<*>}\n\t */\n\t_getStoredAttributes() {\n\t\treturn this._selection._getStoredAttributes();\n\t}\n\n\t/**\n\t * Temporarily changes the gravity of the selection from the left to the right.\n\t *\n\t * The gravity defines from which direction the selection inherits its attributes. If it's the default left\n\t * gravity, the selection (after being moved by the the user) inherits attributes from its left hand side.\n\t * This method allows to temporarily override this behavior by forcing the gravity to the right.\n\t *\n\t * It returns an unique identifier which is required to restore the gravity. It guarantees the symmetry\n\t * of the process.\n\t *\n\t * @see module:engine/model/writer~Writer#overrideSelectionGravity\n\t * @protected\n\t * @returns {String} The unique id which allows restoring the gravity.\n\t */\n\t_overrideGravity() {\n\t\treturn this._selection.overrideGravity();\n\t}\n\n\t/**\n\t * Restores the {@link ~DocumentSelection#_overrideGravity overridden gravity}.\n\t *\n\t * Restoring the gravity is only possible using the unique identifier returned by\n\t * {@link ~DocumentSelection#_overrideGravity}. Note that the gravity remains overridden as long as won't be restored\n\t * the same number of times it was overridden.\n\t *\n\t * @see module:engine/model/writer~Writer#restoreSelectionGravity\n\t * @protected\n\t * @param {String} uid The unique id returned by {@link #_overrideGravity}.\n\t */\n\t_restoreGravity( uid ) {\n\t\tthis._selection.restoreGravity( uid );\n\t}\n\n\t/**\n\t * Generates and returns an attribute key for selection attributes store, basing on original attribute key.\n\t *\n\t * @protected\n\t * @param {String} key Attribute key to convert.\n\t * @returns {String} Converted attribute key, applicable for selection store.\n\t */\n\tstatic _getStoreAttributeKey( key ) {\n\t\treturn storePrefix + key;\n\t}\n\n\t/**\n\t * Checks whether the given attribute key is an attribute stored on an element.\n\t *\n\t * @protected\n\t * @param {String} key\n\t * @returns {Boolean}\n\t */\n\tstatic _isStoreAttributeKey( key ) {\n\t\treturn key.startsWith( storePrefix );\n\t}\n}\n\nmix( DocumentSelection, EmitterMixin );\n\n/**\n * Fired when selection range(s) changed.\n *\n * @event change:range\n * @param {Boolean} directChange In case of {@link module:engine/model/selection~Selection} class it is always set\n * to `true` which indicates that the selection change was caused by a direct use of selection's API.\n * The {@link module:engine/model/documentselection~DocumentSelection}, however, may change because its position\n * was directly changed through the {@link module:engine/model/writer~Writer writer} or because its position was\n * changed because the structure of the model has been changed (which means an indirect change).\n * The indirect change does not occur in case of normal (detached) selections because they are \"static\" (as \"not live\")\n * which mean that they are not updated once the document changes.\n */\n\n/**\n * Fired when selection attribute changed.\n *\n * @event change:attribute\n * @param {Boolean} directChange In case of {@link module:engine/model/selection~Selection} class it is always set\n * to `true` which indicates that the selection change was caused by a direct use of selection's API.\n * The {@link module:engine/model/documentselection~DocumentSelection}, however, may change because its attributes\n * were directly changed through the {@link module:engine/model/writer~Writer writer} or because its position was\n * changed in the model and its attributes were refreshed (which means an indirect change).\n * The indirect change does not occur in case of normal (detached) selections because they are \"static\" (as \"not live\")\n * which mean that they are not updated once the document changes.\n * @param {Array.<String>} attributeKeys Array containing keys of attributes that changed.\n */\n\n/**\n * Fired when selection marker(s) changed.\n *\n * @event change:marker\n * @param {Boolean} directChange This is always set to `false` in case of `change:marker` event as there is no possibility\n * to change markers directly through {@link module:engine/model/documentselection~DocumentSelection} API.\n * See also {@link module:engine/model/documentselection~DocumentSelection#event:change:range} and\n * {@link module:engine/model/documentselection~DocumentSelection#event:change:attribute}.\n * @param {Array.<module:engine/model/markercollection~Marker>} oldMarkers Markers in which the selection was before the change.\n */\n\n// `LiveSelection` is used internally by {@link module:engine/model/documentselection~DocumentSelection} and shouldn't be used directly.\n//\n// LiveSelection` is automatically updated upon changes in the {@link module:engine/model/document~Document document}\n// to always contain valid ranges. Its attributes are inherited from the text unless set explicitly.\n//\n// Differences between {@link module:engine/model/selection~Selection} and `LiveSelection` are:\n// * there is always a range in `LiveSelection` - even if no ranges were added there is a \"default range\"\n// present in the selection,\n// * ranges added to this selection updates automatically when the document changes,\n// * attributes of `LiveSelection` are updated automatically according to selection ranges.\n//\n// @extends module:engine/model/selection~Selection\n//\n\nclass LiveSelection extends Selection {\n\t// Creates an empty live selection for given {@link module:engine/model/document~Document}.\n\t// @param {module:engine/model/document~Document} doc Document which owns this selection.\n\tconstructor( doc ) {\n\t\tsuper();\n\n\t\t// List of selection markers.\n\t\t// Marker is a selection marker when selection range is inside the marker range.\n\t\t//\n\t\t// @type {module:utils/collection~Collection}\n\t\tthis.markers = new Collection( { idProperty: 'name' } );\n\n\t\t// Document which owns this selection.\n\t\t//\n\t\t// @protected\n\t\t// @member {module:engine/model/model~Model}\n\t\tthis._model = doc.model;\n\n\t\t// Document which owns this selection.\n\t\t//\n\t\t// @protected\n\t\t// @member {module:engine/model/document~Document}\n\t\tthis._document = doc;\n\n\t\t// Keeps mapping of attribute name to priority with which the attribute got modified (added/changed/removed)\n\t\t// last time. Possible values of priority are: `'low'` and `'normal'`.\n\t\t//\n\t\t// Priorities are used by internal `LiveSelection` mechanisms. All attributes set using `LiveSelection`\n\t\t// attributes API are set with `'normal'` priority.\n\t\t//\n\t\t// @private\n\t\t// @member {Map} module:engine/model/liveselection~LiveSelection#_attributePriority\n\t\tthis._attributePriority = new Map();\n\n\t\t// Contains data required to fix ranges which have been moved to the graveyard.\n\t\t// @private\n\t\t// @member {Array} module:engine/model/liveselection~LiveSelection#_fixGraveyardRangesData\n\t\tthis._fixGraveyardRangesData = [];\n\n\t\t// Flag that informs whether the selection ranges have changed. It is changed on true when `LiveRange#change:range` event is fired.\n\t\t// @private\n\t\t// @member {Array} module:engine/model/liveselection~LiveSelection#_hasChangedRange\n\t\tthis._hasChangedRange = false;\n\n\t\t// Each overriding gravity adds an UID to the set and each removal removes it.\n\t\t// Gravity is overridden when there's at least one UID in the set.\n\t\t// Gravity is restored when the set is empty.\n\t\t// This is to prevent conflicts when gravity is overridden by more than one feature at the same time.\n\t\t// @private\n\t\t// @type {Set}\n\t\tthis._overriddenGravityRegister = new Set();\n\n\t\t// Ensure selection is correct after each operation.\n\t\tthis.listenTo( this._model, 'applyOperation', ( evt, args ) => {\n\t\t\tconst operation = args[ 0 ];\n\n\t\t\tif ( !operation.isDocumentOperation || operation.type == 'marker' || operation.type == 'rename' || operation.type == 'noop' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\twhile ( this._fixGraveyardRangesData.length ) {\n\t\t\t\tconst { liveRange, sourcePosition } = this._fixGraveyardRangesData.shift();\n\n\t\t\t\tthis._fixGraveyardSelection( liveRange, sourcePosition );\n\t\t\t}\n\n\t\t\tif ( this._hasChangedRange ) {\n\t\t\t\tthis._hasChangedRange = false;\n\t\t\t\tthis.fire( 'change:range', { directChange: false } );\n\t\t\t}\n\t\t}, { priority: 'lowest' } );\n\n\t\t// Ensure selection is correct and up to date after each range change.\n\t\tthis.on( 'change:range', () => {\n\t\t\tfor ( const range of this.getRanges() ) {\n\t\t\t\tif ( !this._document._validateSelectionRange( range ) ) {\n\t\t\t\t\t/**\n\t\t\t\t\t * Range from {@link module:engine/model/documentselection~DocumentSelection document selection}\n\t\t\t\t\t * starts or ends at incorrect position.\n\t\t\t\t\t *\n\t\t\t\t\t * @error document-selection-wrong-position\n\t\t\t\t\t * @param {module:engine/model/range~Range} range\n\t\t\t\t\t */\n\t\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t\t'document-selection-wrong-position: Range from document selection starts or ends at incorrect position.',\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t{ range }\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t// Update markers data stored by the selection after each marker change.\n\t\tthis.listenTo( this._model.markers, 'update', () => this._updateMarkers() );\n\n\t\t// Ensure selection is up to date after each change block.\n\t\tthis.listenTo( this._document, 'change', ( evt, batch ) => {\n\t\t\tclearAttributesStoredInElement( this._model, batch );\n\t\t} );\n\t}\n\n\tget isCollapsed() {\n\t\tconst length = this._ranges.length;\n\n\t\treturn length === 0 ? this._document._getDefaultRange().isCollapsed : super.isCollapsed;\n\t}\n\n\tget anchor() {\n\t\treturn super.anchor || this._document._getDefaultRange().start;\n\t}\n\n\tget focus() {\n\t\treturn super.focus || this._document._getDefaultRange().end;\n\t}\n\n\tget rangeCount() {\n\t\treturn this._ranges.length ? this._ranges.length : 1;\n\t}\n\n\t// Describes whether `LiveSelection` has own range(s) set, or if it is defaulted to\n\t// {@link module:engine/model/document~Document#_getDefaultRange document's default range}.\n\t//\n\t// @readonly\n\t// @type {Boolean}\n\tget hasOwnRange() {\n\t\treturn this._ranges.length > 0;\n\t}\n\n\t// When set to `true` then selection attributes on node before the caret won't be taken\n\t// into consideration while updating selection attributes.\n\t//\n\t// @protected\n\t// @type {Boolean}\n\tget isGravityOverridden() {\n\t\treturn !!this._overriddenGravityRegister.size;\n\t}\n\n\t// Unbinds all events previously bound by live selection.\n\tdestroy() {\n\t\tfor ( let i = 0; i < this._ranges.length; i++ ) {\n\t\t\tthis._ranges[ i ].detach();\n\t\t}\n\n\t\tthis.stopListening();\n\t}\n\n\t* getRanges() {\n\t\tif ( this._ranges.length ) {\n\t\t\tyield* super.getRanges();\n\t\t} else {\n\t\t\tyield this._document._getDefaultRange();\n\t\t}\n\t}\n\n\tgetFirstRange() {\n\t\treturn super.getFirstRange() || this._document._getDefaultRange();\n\t}\n\n\tgetLastRange() {\n\t\treturn super.getLastRange() || this._document._getDefaultRange();\n\t}\n\n\tsetTo( selectable, optionsOrPlaceOrOffset, options ) {\n\t\tsuper.setTo( selectable, optionsOrPlaceOrOffset, options );\n\t\tthis._updateAttributes( true );\n\t\tthis._updateMarkers();\n\t}\n\n\tsetFocus( itemOrPosition, offset ) {\n\t\tsuper.setFocus( itemOrPosition, offset );\n\t\tthis._updateAttributes( true );\n\t\tthis._updateMarkers();\n\t}\n\n\tsetAttribute( key, value ) {\n\t\tif ( this._setAttribute( key, value ) ) {\n\t\t\t// Fire event with exact data.\n\t\t\tconst attributeKeys = [ key ];\n\t\t\tthis.fire( 'change:attribute', { attributeKeys, directChange: true } );\n\t\t}\n\t}\n\n\tremoveAttribute( key ) {\n\t\tif ( this._removeAttribute( key ) ) {\n\t\t\t// Fire event with exact data.\n\t\t\tconst attributeKeys = [ key ];\n\t\t\tthis.fire( 'change:attribute', { attributeKeys, directChange: true } );\n\t\t}\n\t}\n\n\toverrideGravity() {\n\t\tconst overrideUid = uid();\n\n\t\t// Remember that another overriding has been requested. It will need to be removed\n\t\t// before the gravity is to be restored.\n\t\tthis._overriddenGravityRegister.add( overrideUid );\n\n\t\tif ( this._overriddenGravityRegister.size === 1 ) {\n\t\t\tthis._updateAttributes( true );\n\t\t}\n\n\t\treturn overrideUid;\n\t}\n\n\trestoreGravity( uid ) {\n\t\tif ( !this._overriddenGravityRegister.has( uid ) ) {\n\t\t\t/**\n\t\t\t * Restoring gravity for an unknown UID is not possible. Make sure you are using a correct\n\t\t\t * UID obtained from the {@link module:engine/model/writer~Writer#overrideSelectionGravity} to restore.\n\t\t\t *\n\t\t\t * @error document-selection-gravity-wrong-restore\n\t\t\t * @param {String} uid The unique identifier returned by\n\t\t\t * {@link module:engine/model/documentselection~DocumentSelection#_overrideGravity}.\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'document-selection-gravity-wrong-restore: Attempting to restore the selection gravity for an unknown UID.',\n\t\t\t\tthis,\n\t\t\t\t{ uid }\n\t\t\t);\n\t\t}\n\n\t\tthis._overriddenGravityRegister.delete( uid );\n\n\t\t// Restore gravity only when all overriding have been restored.\n\t\tif ( !this.isGravityOverridden ) {\n\t\t\tthis._updateAttributes( true );\n\t\t}\n\t}\n\n\t_popRange() {\n\t\tthis._ranges.pop().detach();\n\t}\n\n\t_pushRange( range ) {\n\t\tconst liveRange = this._prepareRange( range );\n\n\t\t// `undefined` is returned when given `range` is in graveyard root.\n\t\tif ( liveRange ) {\n\t\t\tthis._ranges.push( liveRange );\n\t\t}\n\t}\n\n\t// Prepares given range to be added to selection. Checks if it is correct,\n\t// converts it to {@link module:engine/model/liverange~LiveRange LiveRange}\n\t// and sets listeners listening to the range's change event.\n\t//\n\t// @private\n\t// @param {module:engine/model/range~Range} range\n\t_prepareRange( range ) {\n\t\tthis._checkRange( range );\n\n\t\tif ( range.root == this._document.graveyard ) {\n\t\t\t// @if CK_DEBUG // console.warn( 'Trying to add a Range that is in the graveyard root. Range rejected.' );\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst liveRange = LiveRange.fromRange( range );\n\n\t\tliveRange.on( 'change:range', ( evt, oldRange, data ) => {\n\t\t\tthis._hasChangedRange = true;\n\n\t\t\t// If `LiveRange` is in whole moved to the graveyard, save necessary data. It will be fixed on `Model#applyOperation` event.\n\t\t\tif ( liveRange.root == this._document.graveyard ) {\n\t\t\t\tthis._fixGraveyardRangesData.push( {\n\t\t\t\t\tliveRange,\n\t\t\t\t\tsourcePosition: data.deletionPosition\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\treturn liveRange;\n\t}\n\n\t_updateMarkers() {\n\t\tconst markers = [];\n\t\tlet changed = false;\n\n\t\tfor ( const marker of this._model.markers ) {\n\t\t\tconst markerRange = marker.getRange();\n\n\t\t\tfor ( const selectionRange of this.getRanges() ) {\n\t\t\t\tif ( markerRange.containsRange( selectionRange, !selectionRange.isCollapsed ) ) {\n\t\t\t\t\tmarkers.push( marker );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst oldMarkers = Array.from( this.markers );\n\n\t\tfor ( const marker of markers ) {\n\t\t\tif ( !this.markers.has( marker ) ) {\n\t\t\t\tthis.markers.add( marker );\n\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t}\n\n\t\tfor ( const marker of Array.from( this.markers ) ) {\n\t\t\tif ( !markers.includes( marker ) ) {\n\t\t\t\tthis.markers.remove( marker );\n\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( changed ) {\n\t\t\tthis.fire( 'change:marker', { oldMarkers, directChange: false } );\n\t\t}\n\t}\n\n\t// Updates this selection attributes according to its ranges and the {@link module:engine/model/document~Document model document}.\n\t//\n\t// @protected\n\t// @param {Boolean} clearAll\n\t// @fires change:attribute\n\t_updateAttributes( clearAll ) {\n\t\tconst newAttributes = toMap( this._getSurroundingAttributes() );\n\t\tconst oldAttributes = toMap( this.getAttributes() );\n\n\t\tif ( clearAll ) {\n\t\t\t// If `clearAll` remove all attributes and reset priorities.\n\t\t\tthis._attributePriority = new Map();\n\t\t\tthis._attrs = new Map();\n\t\t} else {\n\t\t\t// If not, remove only attributes added with `low` priority.\n\t\t\tfor ( const [ key, priority ] of this._attributePriority ) {\n\t\t\t\tif ( priority == 'low' ) {\n\t\t\t\t\tthis._attrs.delete( key );\n\t\t\t\t\tthis._attributePriority.delete( key );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._setAttributesTo( newAttributes );\n\n\t\t// Let's evaluate which attributes really changed.\n\t\tconst changed = [];\n\n\t\t// First, loop through all attributes that are set on selection right now.\n\t\t// Check which of them are different than old attributes.\n\t\tfor ( const [ newKey, newValue ] of this.getAttributes() ) {\n\t\t\tif ( !oldAttributes.has( newKey ) || oldAttributes.get( newKey ) !== newValue ) {\n\t\t\t\tchanged.push( newKey );\n\t\t\t}\n\t\t}\n\n\t\t// Then, check which of old attributes got removed.\n\t\tfor ( const [ oldKey ] of oldAttributes ) {\n\t\t\tif ( !this.hasAttribute( oldKey ) ) {\n\t\t\t\tchanged.push( oldKey );\n\t\t\t}\n\t\t}\n\n\t\t// Fire event with exact data (fire only if anything changed).\n\t\tif ( changed.length > 0 ) {\n\t\t\tthis.fire( 'change:attribute', { attributeKeys: changed, directChange: false } );\n\t\t}\n\t}\n\n\t// Internal method for setting `LiveSelection` attribute. Supports attribute priorities (through `directChange`\n\t// parameter).\n\t//\n\t// @private\n\t// @param {String} key Attribute key.\n\t// @param {*} value Attribute value.\n\t// @param {Boolean} [directChange=true] `true` if the change is caused by `Selection` API, `false` if change\n\t// is caused by `Batch` API.\n\t// @returns {Boolean} Whether value has changed.\n\t_setAttribute( key, value, directChange = true ) {\n\t\tconst priority = directChange ? 'normal' : 'low';\n\n\t\tif ( priority == 'low' && this._attributePriority.get( key ) == 'normal' ) {\n\t\t\t// Priority too low.\n\t\t\treturn false;\n\t\t}\n\n\t\tconst oldValue = super.getAttribute( key );\n\n\t\t// Don't do anything if value has not changed.\n\t\tif ( oldValue === value ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._attrs.set( key, value );\n\n\t\t// Update priorities map.\n\t\tthis._attributePriority.set( key, priority );\n\n\t\treturn true;\n\t}\n\n\t// Internal method for removing `LiveSelection` attribute. Supports attribute priorities (through `directChange`\n\t// parameter).\n\t//\n\t// NOTE: Even if attribute is not present in the selection but is provided to this method, it's priority will\n\t// be changed according to `directChange` parameter.\n\t//\n\t// @private\n\t// @param {String} key Attribute key.\n\t// @param {Boolean} [directChange=true] `true` if the change is caused by `Selection` API, `false` if change\n\t// is caused by `Batch` API.\n\t// @returns {Boolean} Whether attribute was removed. May not be true if such attributes didn't exist or the\n\t// existing attribute had higher priority.\n\t_removeAttribute( key, directChange = true ) {\n\t\tconst priority = directChange ? 'normal' : 'low';\n\n\t\tif ( priority == 'low' && this._attributePriority.get( key ) == 'normal' ) {\n\t\t\t// Priority too low.\n\t\t\treturn false;\n\t\t}\n\n\t\t// Update priorities map.\n\t\tthis._attributePriority.set( key, priority );\n\n\t\t// Don't do anything if value has not changed.\n\t\tif ( !super.hasAttribute( key ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._attrs.delete( key );\n\n\t\treturn true;\n\t}\n\n\t// Internal method for setting multiple `LiveSelection` attributes. Supports attribute priorities (through\n\t// `directChange` parameter).\n\t//\n\t// @private\n\t// @param {Map.<String,*>} attrs Iterable object containing attributes to be set.\n\t// @returns {Set.<String>} Changed attribute keys.\n\t_setAttributesTo( attrs ) {\n\t\tconst changed = new Set();\n\n\t\tfor ( const [ oldKey, oldValue ] of this.getAttributes() ) {\n\t\t\t// Do not remove attribute if attribute with same key and value is about to be set.\n\t\t\tif ( attrs.get( oldKey ) === oldValue ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// All rest attributes will be removed so changed attributes won't change .\n\t\t\tthis._removeAttribute( oldKey, false );\n\t\t}\n\n\t\tfor ( const [ key, value ] of attrs ) {\n\t\t\t// Attribute may not be set because of attributes or because same key/value is already added.\n\t\t\tconst gotAdded = this._setAttribute( key, value, false );\n\n\t\t\tif ( gotAdded ) {\n\t\t\t\tchanged.add( key );\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n\n\t// Returns an iterable that iterates through all selection attributes stored in current selection's parent.\n\t//\n\t// @protected\n\t// @returns {Iterable.<*>}\n\t* _getStoredAttributes() {\n\t\tconst selectionParent = this.getFirstPosition().parent;\n\n\t\tif ( this.isCollapsed && selectionParent.isEmpty ) {\n\t\t\tfor ( const key of selectionParent.getAttributeKeys() ) {\n\t\t\t\tif ( key.startsWith( storePrefix ) ) {\n\t\t\t\t\tconst realKey = key.substr( storePrefix.length );\n\n\t\t\t\t\tyield [ realKey, selectionParent.getAttribute( key ) ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Checks model text nodes that are closest to the selection's first position and returns attributes of first\n\t// found element. If there are no text nodes in selection's first position parent, it returns selection\n\t// attributes stored in that parent.\n\t//\n\t// @private\n\t// @returns {Iterable.<*>} Collection of attributes.\n\t_getSurroundingAttributes() {\n\t\tconst position = this.getFirstPosition();\n\t\tconst schema = this._model.schema;\n\n\t\tlet attrs = null;\n\n\t\tif ( !this.isCollapsed ) {\n\t\t\t// 1. If selection is a range...\n\t\t\tconst range = this.getFirstRange();\n\n\t\t\t// ...look for a first character node in that range and take attributes from it.\n\t\t\tfor ( const value of range ) {\n\t\t\t\t// If the item is an object, we don't want to get attributes from its children.\n\t\t\t\tif ( value.item.is( 'element' ) && schema.isObject( value.item ) ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif ( value.type == 'text' ) {\n\t\t\t\t\tattrs = value.item.getAttributes();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// 2. If the selection is a caret or the range does not contain a character node...\n\n\t\t\tconst nodeBefore = position.textNode ? position.textNode : position.nodeBefore;\n\t\t\tconst nodeAfter = position.textNode ? position.textNode : position.nodeAfter;\n\n\t\t\t// When gravity is overridden then don't take node before into consideration.\n\t\t\tif ( !this.isGravityOverridden ) {\n\t\t\t\t// ...look at the node before caret and take attributes from it if it is a character node.\n\t\t\t\tattrs = getAttrsIfCharacter( nodeBefore );\n\t\t\t}\n\n\t\t\t// 3. If not, look at the node after caret...\n\t\t\tif ( !attrs ) {\n\t\t\t\tattrs = getAttrsIfCharacter( nodeAfter );\n\t\t\t}\n\n\t\t\t// 4. If not, try to find the first character on the left, that is in the same node.\n\t\t\t// When gravity is overridden then don't take node before into consideration.\n\t\t\tif ( !this.isGravityOverridden && !attrs ) {\n\t\t\t\tlet node = nodeBefore;\n\n\t\t\t\twhile ( node && !attrs ) {\n\t\t\t\t\tnode = node.previousSibling;\n\t\t\t\t\tattrs = getAttrsIfCharacter( node );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 5. If not found, try to find the first character on the right, that is in the same node.\n\t\t\tif ( !attrs ) {\n\t\t\t\tlet node = nodeAfter;\n\n\t\t\t\twhile ( node && !attrs ) {\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t\tattrs = getAttrsIfCharacter( node );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 6. If not found, selection should retrieve attributes from parent.\n\t\t\tif ( !attrs ) {\n\t\t\t\tattrs = this._getStoredAttributes();\n\t\t\t}\n\t\t}\n\n\t\treturn attrs;\n\t}\n\n\t// Fixes a selection range after it ends up in graveyard root.\n\t//\n\t// @private\n\t// @param {module:engine/model/liverange~LiveRange} liveRange The range from selection, that ended up in the graveyard root.\n\t// @param {module:engine/model/position~Position} removedRangeStart Start position of a range which was removed.\n\t_fixGraveyardSelection( liveRange, removedRangeStart ) {\n\t\t// The start of the removed range is the closest position to the `liveRange` - the original selection range.\n\t\t// This is a good candidate for a fixed selection range.\n\t\tconst positionCandidate = removedRangeStart.clone();\n\n\t\t// Find a range that is a correct selection range and is closest to the start of removed range.\n\t\tconst selectionRange = this._model.schema.getNearestSelectionRange( positionCandidate );\n\n\t\t// Remove the old selection range before preparing and adding new selection range. This order is important,\n\t\t// because new range, in some cases, may intersect with old range (it depends on `getNearestSelectionRange()` result).\n\t\tconst index = this._ranges.indexOf( liveRange );\n\t\tthis._ranges.splice( index, 1 );\n\t\tliveRange.detach();\n\n\t\t// If nearest valid selection range has been found - add it in the place of old range.\n\t\tif ( selectionRange ) {\n\t\t\t// Check the range, convert it to live range, bind events, etc.\n\t\t\tconst newRange = this._prepareRange( selectionRange );\n\n\t\t\t// Add new range in the place of old range.\n\t\t\tthis._ranges.splice( index, 0, newRange );\n\t\t}\n\t\t// If nearest valid selection range cannot be found - just removing the old range is fine.\n\t}\n}\n\n// Helper function for {@link module:engine/model/liveselection~LiveSelection#_updateAttributes}.\n//\n// It takes model item, checks whether it is a text node (or text proxy) and, if so, returns it's attributes. If not, returns `null`.\n//\n// @param {module:engine/model/item~Item|null}  node\n// @returns {Boolean}\nfunction getAttrsIfCharacter( node ) {\n\tif ( node instanceof TextProxy || node instanceof Text ) {\n\t\treturn node.getAttributes();\n\t}\n\n\treturn null;\n}\n\n// Removes selection attributes from element which is not empty anymore.\n//\n// @private\n// @param {module:engine/model/model~Model} model\n// @param {module:engine/model/batch~Batch} batch\nfunction clearAttributesStoredInElement( model, batch ) {\n\tconst differ = model.document.differ;\n\n\tfor ( const entry of differ.getChanges() ) {\n\t\tif ( entry.type != 'insert' ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst changeParent = entry.position.parent;\n\t\tconst isNoLongerEmpty = entry.length === changeParent.maxOffset;\n\n\t\tif ( isNoLongerEmpty ) {\n\t\t\tmodel.enqueueChange( batch, writer => {\n\t\t\t\tconst storedAttributes = Array.from( changeParent.getAttributeKeys() )\n\t\t\t\t\t.filter( key => key.startsWith( storePrefix ) );\n\n\t\t\t\tfor ( const key of storedAttributes ) {\n\t\t\t\t\twriter.removeAttribute( key, changeParent );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/conversion/conversionhelpers\n */\n\n/**\n * Base class for conversion helpers.\n */\nexport default class ConversionHelpers {\n\t/**\n\t * Creates a conversion helpers instance.\n\t *\n\t * @param {Array.<module:engine/conversion/downcastdispatcher~DowncastDispatcher|\n\t * module:engine/conversion/upcastdispatcher~UpcastDispatcher>} dispatchers\n\t */\n\tconstructor( dispatchers ) {\n\t\tthis._dispatchers = dispatchers;\n\t}\n\n\t/**\n\t * Registers a conversion helper.\n\t *\n\t * **Note**: See full usage example in the `{@link module:engine/conversion/conversion~Conversion#for conversion.for()}`\n\t * method description.\n\t *\n\t * @param {Function} conversionHelper The function to be called on event.\n\t * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers|module:engine/conversion/upcasthelpers~UpcastHelpers}\n\t */\n\tadd( conversionHelper ) {\n\t\tfor ( const dispatcher of this._dispatchers ) {\n\t\t\tconversionHelper( dispatcher );\n\t\t}\n\n\t\treturn this;\n\t}\n}\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * Contains downcast (model-to-view) converters for {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}.\n *\n * @module engine/conversion/downcasthelpers\n */\n\nimport ModelRange from '../model/range';\nimport ModelSelection from '../model/selection';\nimport ModelElement from '../model/element';\n\nimport ViewAttributeElement from '../view/attributeelement';\nimport DocumentSelection from '../model/documentselection';\nimport ConversionHelpers from './conversionhelpers';\n\nimport { cloneDeep } from 'lodash-es';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Downcast conversion helper functions.\n *\n * @extends module:engine/conversion/conversionhelpers~ConversionHelpers\n */\nexport default class DowncastHelpers extends ConversionHelpers {\n\t/**\n\t * Model element to view element conversion helper.\n\t *\n\t * This conversion results in creating a view element. For example, model `<paragraph>Foo</paragraph>` becomes `<p>Foo</p>` in the view.\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).elementToElement( {\n\t *\t\t\tmodel: 'paragraph',\n\t *\t\t\tview: 'p'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).elementToElement( {\n\t *\t\t\tmodel: 'paragraph',\n\t *\t\t\tview: 'div',\n\t *\t\t\tconverterPriority: 'high'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).elementToElement( {\n\t *\t\t\tmodel: 'fancyParagraph',\n\t *\t\t\tview: {\n\t *\t\t\t\tname: 'p',\n\t *\t\t\t\tclasses: 'fancy'\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).elementToElement( {\n\t *\t\t\tmodel: 'heading',\n\t *\t\t\tview: ( modelElement, viewWriter ) => {\n\t *\t\t\t\treturn viewWriter.createContainerElement( 'h' + modelElement.getAttribute( 'level' ) )\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n\t * to the conversion process.\n\t *\n\t * @method #elementToElement\n\t * @param {Object} config Conversion configuration.\n\t * @param {String} config.model The name of the model element to convert.\n\t * @param {module:engine/view/elementdefinition~ElementDefinition|Function} config.view A view element definition or a function\n\t * that takes the model element and {@link module:engine/view/downcastwriter~DowncastWriter view downcast writer}\n\t * as parameters and returns a view container element.\n\t * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers}\n\t */\n\telementToElement( config ) {\n\t\treturn this.add( downcastElementToElement( config ) );\n\t}\n\n\t/**\n\t * Model attribute to view element conversion helper.\n\t *\n\t * This conversion results in wrapping view nodes with a view attribute element. For example, a model text node with\n\t * `\"Foo\"` as data and the `bold` attribute becomes `<strong>Foo</strong>` in the view.\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n\t *\t\t\tmodel: 'bold',\n\t *\t\t\tview: 'strong'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n\t *\t\t\tmodel: 'bold',\n\t *\t\t\tview: 'b',\n\t *\t\t\tconverterPriority: 'high'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n\t *\t\t\tmodel: 'invert',\n\t *\t\t\tview: {\n\t *\t\t\t\tname: 'span',\n\t *\t\t\t\tclasses: [ 'font-light', 'bg-dark' ]\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n\t *\t\t\tmodel: {\n\t *\t\t\t\tkey: 'fontSize',\n\t *\t\t\t\tvalues: [ 'big', 'small' ]\n\t *\t\t\t},\n\t *\t\t\tview: {\n\t *\t\t\t\tbig: {\n\t *\t\t\t\t\tname: 'span',\n\t *\t\t\t\t\tstyles: {\n\t *\t\t\t\t\t\t'font-size': '1.2em'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t},\n\t *\t\t\t\tsmall: {\n\t *\t\t\t\t\tname: 'span',\n\t *\t\t\t\t\tstyles: {\n\t *\t\t\t\t\t\t'font-size': '0.8em'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n\t *\t\t\tmodel: 'bold',\n\t *\t\t\tview: ( modelAttributeValue, viewWriter ) => {\n\t *\t\t\t\treturn viewWriter.createAttributeElement( 'span', {\n\t *\t\t\t\t\tstyle: 'font-weight:' + modelAttributeValue\n\t *\t\t\t\t} );\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n\t *\t\t\tmodel: {\n\t *\t\t\t\tkey: 'color',\n\t *\t\t\t\tname: '$text'\n\t *\t\t\t},\n\t *\t\t\tview: ( modelAttributeValue, viewWriter ) => {\n\t *\t\t\t\treturn viewWriter.createAttributeElement( 'span', {\n\t *\t\t\t\t\tstyle: 'color:' + modelAttributeValue\n\t *\t\t\t\t} );\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n\t * to the conversion process.\n\t *\n\t * @method #attributeToElement\n\t * @param {Object} config Conversion configuration.\n\t * @param {String|Object} config.model The key of the attribute to convert from or a `{ key, values }` object. `values` is an array\n\t * of `String`s with possible values if the model attribute is an enumerable.\n\t * @param {module:engine/view/elementdefinition~ElementDefinition|Function|Object} config.view A view element definition or a function\n\t * that takes the model attribute value and {@link module:engine/view/downcastwriter~DowncastWriter view downcast writer}\n\t * as parameters and returns a view attribute element. If `config.model.values` is\n\t * given, `config.view` should be an object assigning values from `config.model.values` to view element definitions or functions.\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n\t * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers}\n\t */\n\tattributeToElement( config ) {\n\t\treturn this.add( downcastAttributeToElement( config ) );\n\t}\n\n\t/**\n\t * Model attribute to view attribute conversion helper.\n\t *\n\t * This conversion results in adding an attribute to a view node, basing on an attribute from a model node. For example,\n\t * `<image src='foo.jpg'></image>` is converted to `<img src='foo.jpg'></img>`.\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\n\t *\t\t\tmodel: 'source',\n\t *\t\t\tview: 'src'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\n\t *\t\t\tmodel: 'source',\n\t *\t\t\tview: 'href',\n\t *\t\t\tconverterPriority: 'high'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\n\t *\t\t\tmodel: {\n\t *\t\t\t\tname: 'image',\n\t *\t\t\t\tkey: 'source'\n\t *\t\t\t},\n\t *\t\t\tview: 'src'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\n\t *\t\t\tmodel: {\n\t *\t\t\t\tname: 'styled',\n\t *\t\t\t\tvalues: [ 'dark', 'light' ]\n\t *\t\t\t},\n\t *\t\t\tview: {\n\t *\t\t\t\tdark: {\n\t *\t\t\t\t\tkey: 'class',\n\t *\t\t\t\t\tvalue: [ 'styled', 'styled-dark' ]\n\t *\t\t\t\t},\n\t *\t\t\t\tlight: {\n\t *\t\t\t\t\tkey: 'class',\n\t *\t\t\t\t\tvalue: [ 'styled', 'styled-light' ]\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\n\t *\t\t\tmodel: 'styled',\n\t *\t\t\tview: modelAttributeValue => ( { key: 'class', value: 'styled-' + modelAttributeValue } )\n\t *\t\t} );\n\t *\n\t * **Note**: Downcasting to a style property requires providing `value` as an object:\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\n\t *\t\t\tmodel: 'lineHeight',\n\t *\t\t\tview: modelAttributeValue => ( {\n\t *\t\t\t\tkey: 'style',\n\t *\t\t\t\tvalue: {\n\t *\t\t\t\t\t'line-height': modelAttributeValue,\n\t *\t\t\t\t\t'border-bottom': '1px dotted #ba2'\n\t *\t\t\t\t}\n\t *\t\t\t} )\n\t *\t\t} );\n\t *\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n\t * to the conversion process.\n\t *\n\t * @method #attributeToAttribute\n\t * @param {Object} config Conversion configuration.\n\t * @param {String|Object} config.model The key of the attribute to convert from or a `{ key, values, [ name ] }` object describing\n\t * the attribute key, possible values and, optionally, an element name to convert from.\n\t * @param {String|Object|Function} config.view A view attribute key, or a `{ key, value }` object or a function that takes\n\t * the model attribute value and returns a `{ key, value }` object. If `key` is `'class'`, `value` can be a `String` or an\n\t * array of `String`s. If `key` is `'style'`, `value` is an object with key-value pairs. In other cases, `value` is a `String`.\n\t * If `config.model.values` is set, `config.view` should be an object assigning values from `config.model.values` to\n\t * `{ key, value }` objects or a functions.\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n\t * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers}\n\t */\n\tattributeToAttribute( config ) {\n\t\treturn this.add( downcastAttributeToAttribute( config ) );\n\t}\n\n\t/**\n\t * Model marker to view element conversion helper.\n\t *\n\t * This conversion results in creating a view element on the boundaries of the converted marker. If the converted marker\n\t * is collapsed, only one element is created. For example, model marker set like this: `<paragraph>F[oo b]ar</paragraph>`\n\t * becomes `<p>F<span data-marker=\"search\"></span>oo b<span data-marker=\"search\"></span>ar</p>` in the view.\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).markerToElement( {\n\t *\t\t\tmodel: 'search',\n\t *\t\t\tview: 'marker-search'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).markerToElement( {\n\t *\t\t\tmodel: 'search',\n\t *\t\t\tview: 'search-result',\n\t *\t\t\tconverterPriority: 'high'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).markerToElement( {\n\t *\t\t\tmodel: 'search',\n\t *\t\t\tview: {\n\t *\t\t\t\tname: 'span',\n\t *\t\t\t\tattributes: {\n\t *\t\t\t\t\t'data-marker': 'search'\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).markerToElement( {\n\t *\t\t\tmodel: 'search',\n\t *\t\t\tview: ( markerData, viewWriter ) => {\n\t *\t\t\t\treturn viewWriter.createUIElement( 'span', {\n\t *\t\t\t\t\t'data-marker': 'search',\n\t *\t\t\t\t\t'data-start': markerData.isOpening\n\t *\t\t\t\t} );\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * If a function is passed as the `config.view` parameter, it will be used to generate both boundary elements. The function\n\t * receives the `data` object as a parameter and should return an instance of the\n\t * {@link module:engine/view/uielement~UIElement view UI element}. The `data` object and\n\t * {@link module:engine/conversion/downcastdispatcher~DowncastConversionApi `conversionApi`} are passed from\n\t * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker}. Additionally,\n\t * the `data.isOpening` parameter is passed, which is set to `true` for the marker start boundary element, and `false` to\n\t * the marker end boundary element.\n\t *\n\t * This kind of conversion is useful for saving data into the database, so it should be used in the data conversion pipeline.\n\t *\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n\t * to the conversion process.\n\t *\n\t * @method #markerToElement\n\t * @param {Object} config Conversion configuration.\n\t * @param {String} config.model The name of the model marker (or model marker group) to convert.\n\t * @param {module:engine/view/elementdefinition~ElementDefinition|Function} config.view A view element definition or a function\n\t * that takes the model marker data as a parameter and returns a view UI element.\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n\t * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers}\n\t */\n\tmarkerToElement( config ) {\n\t\treturn this.add( downcastMarkerToElement( config ) );\n\t}\n\n\t/**\n\t * Model marker to highlight conversion helper.\n\t *\n\t * This conversion results in creating a highlight on view nodes. For this kind of conversion,\n\t * {@link module:engine/conversion/downcasthelpers~HighlightDescriptor} should be provided.\n\t *\n\t * For text nodes, a `<span>` {@link module:engine/view/attributeelement~AttributeElement} is created and it wraps all text nodes\n\t * in the converted marker range. For example, a model marker set like this: `<paragraph>F[oo b]ar</paragraph>` becomes\n\t * `<p>F<span class=\"comment\">oo b</span>ar</p>` in the view.\n\t *\n\t * {@link module:engine/view/containerelement~ContainerElement} may provide a custom way of handling highlight. Most often,\n\t * the element itself is given classes and attributes described in the highlight descriptor (instead of being wrapped in `<span>`).\n\t * For example, a model marker set like this: `[<image src=\"foo.jpg\"></image>]` becomes `<img src=\"foo.jpg\" class=\"comment\"></img>`\n\t * in the view.\n\t *\n\t * For container elements, the conversion is two-step. While the converter processes the highlight descriptor and passes it\n\t * to a container element, it is the container element instance itself that applies values from the highlight descriptor.\n\t * So, in a sense, the converter takes care of stating what should be applied on what, while the element decides how to apply that.\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).markerToHighlight( { model: 'comment', view: { classes: 'comment' } } );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).markerToHighlight( {\n\t *\t\t\tmodel: 'comment',\n\t *\t\t\tview: { classes: 'new-comment' },\n\t *\t\t\tconverterPriority: 'high'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'downcast' ).markerToHighlight( {\n\t *\t\t\tmodel: 'comment',\n\t *\t\t\tview: data => {\n\t *\t\t\t\t// Assuming that the marker name is in a form of comment:commentType.\n\t *\t\t\t\tconst commentType = data.markerName.split( ':' )[ 1 ];\n\t *\n\t *\t\t\t\treturn {\n\t *\t\t\t\t\tclasses: [ 'comment', 'comment-' + commentType ]\n\t *\t\t\t\t};\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * If a function is passed as the `config.view` parameter, it will be used to generate the highlight descriptor. The function\n\t * receives the `data` object as a parameter and should return a\n\t * {@link module:engine/conversion/downcasthelpers~HighlightDescriptor highlight descriptor}.\n\t * The `data` object properties are passed from {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker}.\n\t *\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n\t * to the conversion process.\n\t *\n\t * @method #markerToHighlight\n\t * @param {Object} config Conversion configuration.\n\t * @param {String} config.model The name of the model marker (or model marker group) to convert.\n\t * @param {module:engine/conversion/downcasthelpers~HighlightDescriptor|Function} config.view A highlight descriptor\n\t * that will be used for highlighting or a function that takes the model marker data as a parameter and returns a highlight descriptor.\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n\t * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers}\n\t */\n\tmarkerToHighlight( config ) {\n\t\treturn this.add( downcastMarkerToHighlight( config ) );\n\t}\n}\n\n/**\n * Function factory that creates a default downcast converter for text insertion changes.\n *\n * The converter automatically consumes the corresponding value from the consumables list and stops the event (see\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}).\n *\n *\t\tmodelDispatcher.on( 'insert:$text', insertText() );\n *\n * @returns {Function} Insert text event converter.\n */\nexport function insertText() {\n\treturn ( evt, data, conversionApi ) => {\n\t\tif ( !conversionApi.consumable.consume( data.item, 'insert' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewWriter = conversionApi.writer;\n\t\tconst viewPosition = conversionApi.mapper.toViewPosition( data.range.start );\n\t\tconst viewText = viewWriter.createText( data.item.data );\n\n\t\tviewWriter.insert( viewPosition, viewText );\n\t};\n}\n\n/**\n * Function factory that creates a default downcast converter for node remove changes.\n *\n *\t\tmodelDispatcher.on( 'remove', remove() );\n *\n * @returns {Function} Remove event converter.\n */\nexport function remove() {\n\treturn ( evt, data, conversionApi ) => {\n\t\t// Find view range start position by mapping model position at which the remove happened.\n\t\tconst viewStart = conversionApi.mapper.toViewPosition( data.position );\n\n\t\tconst modelEnd = data.position.getShiftedBy( data.length );\n\t\tconst viewEnd = conversionApi.mapper.toViewPosition( modelEnd, { isPhantom: true } );\n\n\t\tconst viewRange = conversionApi.writer.createRange( viewStart, viewEnd );\n\n\t\t// Trim the range to remove in case some UI elements are on the view range boundaries.\n\t\tconst removed = conversionApi.writer.remove( viewRange.getTrimmed() );\n\n\t\t// After the range is removed, unbind all view elements from the model.\n\t\t// Range inside view document fragment is used to unbind deeply.\n\t\tfor ( const child of conversionApi.writer.createRangeIn( removed ).getItems() ) {\n\t\t\tconversionApi.mapper.unbindViewElement( child );\n\t\t}\n\t};\n}\n\n/**\n * Creates a `<span>` {@link module:engine/view/attributeelement~AttributeElement view attribute element} from the information\n * provided by the {@link module:engine/conversion/downcasthelpers~HighlightDescriptor highlight descriptor} object. If a priority\n * is not provided in the descriptor, the default priority will be used.\n *\n * @param {module:engine/conversion/downcasthelpers~HighlightDescriptor} descriptor\n * @returns {module:engine/view/attributeelement~AttributeElement}\n */\nexport function createViewElementFromHighlightDescriptor( descriptor ) {\n\tconst viewElement = new ViewAttributeElement( 'span', descriptor.attributes );\n\n\tif ( descriptor.classes ) {\n\t\tviewElement._addClass( descriptor.classes );\n\t}\n\n\tif ( descriptor.priority ) {\n\t\tviewElement._priority = descriptor.priority;\n\t}\n\n\tviewElement._id = descriptor.id;\n\n\treturn viewElement;\n}\n\n/**\n * Function factory that creates a converter which converts a non-collapsed {@link module:engine/model/selection~Selection model selection}\n * to a {@link module:engine/view/documentselection~DocumentSelection view selection}. The converter consumes appropriate\n * value from the `consumable` object and maps model positions from the selection to view positions.\n *\n *\t\tmodelDispatcher.on( 'selection', convertRangeSelection() );\n *\n * @returns {Function} Selection converter.\n */\nexport function convertRangeSelection() {\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst selection = data.selection;\n\n\t\tif ( selection.isCollapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !conversionApi.consumable.consume( selection, 'selection' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewRanges = [];\n\n\t\tfor ( const range of selection.getRanges() ) {\n\t\t\tconst viewRange = conversionApi.mapper.toViewRange( range );\n\t\t\tviewRanges.push( viewRange );\n\t\t}\n\n\t\tconversionApi.writer.setSelection( viewRanges, { backward: selection.isBackward } );\n\t};\n}\n\n/**\n * Function factory that creates a converter which converts a collapsed {@link module:engine/model/selection~Selection model selection} to\n * a {@link module:engine/view/documentselection~DocumentSelection view selection}. The converter consumes appropriate\n * value from the `consumable` object, maps the model selection position to the view position and breaks\n * {@link module:engine/view/attributeelement~AttributeElement attribute elements} at the selection position.\n *\n *\t\tmodelDispatcher.on( 'selection', convertCollapsedSelection() );\n *\n * An example of the view state before and after converting the collapsed selection:\n *\n *\t\t   <p><strong>f^oo<strong>bar</p>\n *\t\t-> <p><strong>f</strong>^<strong>oo</strong>bar</p>\n *\n * By breaking attribute elements like `<strong>`, the selection is in a correct element. Then, when the selection attribute is\n * converted, broken attributes might be merged again, or the position where the selection is may be wrapped\n * with different, appropriate attribute elements.\n *\n * See also {@link module:engine/conversion/downcasthelpers~clearAttributes} which does a clean-up\n * by merging attributes.\n *\n * @returns {Function} Selection converter.\n */\nexport function convertCollapsedSelection() {\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst selection = data.selection;\n\n\t\tif ( !selection.isCollapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !conversionApi.consumable.consume( selection, 'selection' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewWriter = conversionApi.writer;\n\t\tconst modelPosition = selection.getFirstPosition();\n\t\tconst viewPosition = conversionApi.mapper.toViewPosition( modelPosition );\n\t\tconst brokenPosition = viewWriter.breakAttributes( viewPosition );\n\n\t\tviewWriter.setSelection( brokenPosition );\n\t};\n}\n\n/**\n * Function factory that creates a converter which clears artifacts after the previous\n * {@link module:engine/model/selection~Selection model selection} conversion. It removes all empty\n * {@link module:engine/view/attributeelement~AttributeElement view attribute elements} and merges sibling attributes at all start and end\n * positions of all ranges.\n *\n *\t\t   <p><strong>^</strong></p>\n *\t\t-> <p>^</p>\n *\n *\t\t   <p><strong>foo</strong>^<strong>bar</strong>bar</p>\n *\t\t-> <p><strong>foo^bar<strong>bar</p>\n *\n *\t\t   <p><strong>foo</strong><em>^</em><strong>bar</strong>bar</p>\n *\t\t-> <p><strong>foo^bar<strong>bar</p>\n *\n * This listener should be assigned before any converter for the new selection:\n *\n *\t\tmodelDispatcher.on( 'selection', clearAttributes() );\n *\n * See {@link module:engine/conversion/downcasthelpers~convertCollapsedSelection}\n * which does the opposite by breaking attributes in the selection position.\n *\n * @returns {Function} Selection converter.\n */\nexport function clearAttributes() {\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst viewWriter = conversionApi.writer;\n\t\tconst viewSelection = viewWriter.document.selection;\n\n\t\tfor ( const range of viewSelection.getRanges() ) {\n\t\t\t// Not collapsed selection should not have artifacts.\n\t\t\tif ( range.isCollapsed ) {\n\t\t\t\t// Position might be in the node removed by the view writer.\n\t\t\t\tif ( range.end.parent.document ) {\n\t\t\t\t\tconversionApi.writer.mergeAttributes( range.start );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tviewWriter.setSelection( null );\n\t};\n}\n\n/**\n * Function factory that creates a converter which converts set/change/remove attribute changes from the model to the view.\n * It can also be used to convert selection attributes. In that case, an empty attribute element will be created and the\n * selection will be put inside it.\n *\n * Attributes from the model are converted to a view element that will be wrapping these view nodes that are bound to\n * model elements having the given attribute. This is useful for attributes like `bold` that may be set on text nodes in the model\n * but are represented as an element in the view:\n *\n *\t\t[paragraph]              MODEL ====> VIEW        <p>\n *\t\t\t|- a {bold: true}                             |- <b>\n *\t\t\t|- b {bold: true}                             |   |- ab\n *\t\t\t|- c                                          |- c\n *\n * Passed `Function` will be provided with the attribute value and then all the parameters of the\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute `attribute` event}.\n * It is expected that the function returns an {@link module:engine/view/element~Element}.\n * The result of the function will be the wrapping element.\n * When the provided `Function` does not return any element, no conversion will take place.\n *\n * The converter automatically consumes the corresponding value from the consumables list and stops the event (see\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}).\n *\n *\t\tmodelDispatcher.on( 'attribute:bold', wrap( ( modelAttributeValue, viewWriter ) => {\n *\t\t\treturn viewWriter.createAttributeElement( 'strong' );\n *\t\t} );\n *\n * @protected\n * @param {Function} elementCreator Function returning a view element that will be used for wrapping.\n * @returns {Function} Set/change attribute converter.\n */\nexport function wrap( elementCreator ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\t// Recreate current wrapping node. It will be used to unwrap view range if the attribute value has changed\n\t\t// or the attribute was removed.\n\t\tconst oldViewElement = elementCreator( data.attributeOldValue, conversionApi.writer );\n\n\t\t// Create node to wrap with.\n\t\tconst newViewElement = elementCreator( data.attributeNewValue, conversionApi.writer );\n\n\t\tif ( !oldViewElement && !newViewElement ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !conversionApi.consumable.consume( data.item, evt.name ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewWriter = conversionApi.writer;\n\t\tconst viewSelection = viewWriter.document.selection;\n\n\t\tif ( data.item instanceof ModelSelection || data.item instanceof DocumentSelection ) {\n\t\t\t// Selection attribute conversion.\n\t\t\tviewWriter.wrap( viewSelection.getFirstRange(), newViewElement );\n\t\t} else {\n\t\t\t// Node attribute conversion.\n\t\t\tlet viewRange = conversionApi.mapper.toViewRange( data.range );\n\n\t\t\t// First, unwrap the range from current wrapper.\n\t\t\tif ( data.attributeOldValue !== null && oldViewElement ) {\n\t\t\t\tviewRange = viewWriter.unwrap( viewRange, oldViewElement );\n\t\t\t}\n\n\t\t\tif ( data.attributeNewValue !== null && newViewElement ) {\n\t\t\t\tviewWriter.wrap( viewRange, newViewElement );\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * Function factory that creates a converter which converts node insertion changes from the model to the view.\n * The function passed will be provided with all the parameters of the dispatcher's\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:insert `insert` event}.\n * It is expected that the function returns an {@link module:engine/view/element~Element}.\n * The result of the function will be inserted into the view.\n *\n * The converter automatically consumes the corresponding value from the consumables list, stops the event (see\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}) and binds the model and view elements.\n *\n *\t\tdowncastDispatcher.on(\n *\t\t\t'insert:myElem',\n *\t\t\tinsertElement( ( modelItem, viewWriter ) => {\n *\t\t\t\tconst text = viewWriter.createText( 'myText' );\n *\t\t\t\tconst myElem = viewWriter.createElement( 'myElem', { myAttr: 'my-' + modelItem.getAttribute( 'myAttr' ) }, text );\n *\n *\t\t\t\t// Do something fancy with `myElem` using `modelItem` or other parameters.\n *\n *\t\t\t\treturn myElem;\n *\t\t\t}\n *\t\t) );\n *\n * @protected\n * @param {Function} elementCreator Function returning a view element, which will be inserted.\n * @returns {Function} Insert element event converter.\n */\nexport function insertElement( elementCreator ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst viewElement = elementCreator( data.item, conversionApi.writer );\n\n\t\tif ( !viewElement ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !conversionApi.consumable.consume( data.item, 'insert' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewPosition = conversionApi.mapper.toViewPosition( data.range.start );\n\n\t\tconversionApi.mapper.bindElements( data.item, viewElement );\n\t\tconversionApi.writer.insert( viewPosition, viewElement );\n\t};\n}\n\n/**\n * Function factory that creates a converter which converts marker adding change to the\n * {@link module:engine/view/uielement~UIElement view UI element}.\n *\n * The view UI element that will be added to the view depends on the passed parameter. See {@link ~insertElement}.\n * In case of a non-collapsed range, the UI element will not wrap nodes but separate elements will be placed at the beginning\n * and at the end of the range.\n *\n * This converter binds created UI elements with the marker name using {@link module:engine/conversion/mapper~Mapper#bindElementToMarker}.\n *\n * @protected\n * @param {module:engine/view/uielement~UIElement|Function} elementCreator A view UI element or a function returning the view element\n * that will be inserted.\n * @returns {Function} Insert element event converter.\n */\nexport function insertUIElement( elementCreator ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\t// Create two view elements. One will be inserted at the beginning of marker, one at the end.\n\t\t// If marker is collapsed, only \"opening\" element will be inserted.\n\t\tdata.isOpening = true;\n\t\tconst viewStartElement = elementCreator( data, conversionApi.writer );\n\n\t\tdata.isOpening = false;\n\t\tconst viewEndElement = elementCreator( data, conversionApi.writer );\n\n\t\tif ( !viewStartElement || !viewEndElement ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst markerRange = data.markerRange;\n\n\t\t// Marker that is collapsed has consumable build differently that non-collapsed one.\n\t\t// For more information see `addMarker` event description.\n\t\t// If marker's range is collapsed - check if it can be consumed.\n\t\tif ( markerRange.isCollapsed && !conversionApi.consumable.consume( markerRange, evt.name ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If marker's range is not collapsed - consume all items inside.\n\t\tfor ( const value of markerRange ) {\n\t\t\tif ( !conversionApi.consumable.consume( value.item, evt.name ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tconst mapper = conversionApi.mapper;\n\t\tconst viewWriter = conversionApi.writer;\n\n\t\t// Add \"opening\" element.\n\t\tviewWriter.insert( mapper.toViewPosition( markerRange.start ), viewStartElement );\n\t\tconversionApi.mapper.bindElementToMarker( viewStartElement, data.markerName );\n\n\t\t// Add \"closing\" element only if range is not collapsed.\n\t\tif ( !markerRange.isCollapsed ) {\n\t\t\tviewWriter.insert( mapper.toViewPosition( markerRange.end ), viewEndElement );\n\t\t\tconversionApi.mapper.bindElementToMarker( viewEndElement, data.markerName );\n\t\t}\n\n\t\tevt.stop();\n\t};\n}\n\n// Function factory that returns a default downcast converter for removing a {@link module:engine/view/uielement~UIElement UI element}\n// basing on marker remove change.\n//\n// This converter unbinds elements from the marker name.\n//\n// @returns {Function} Removed UI element converter.\nfunction removeUIElement() {\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst elements = conversionApi.mapper.markerNameToElements( data.markerName );\n\n\t\tif ( !elements ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor ( const element of elements ) {\n\t\t\tconversionApi.mapper.unbindElementFromMarkerName( element, data.markerName );\n\t\t\tconversionApi.writer.clear( conversionApi.writer.createRangeOn( element ), element );\n\t\t}\n\n\t\tconversionApi.writer.clearClonedElementsGroup( data.markerName );\n\n\t\tevt.stop();\n\t};\n}\n\n// Function factory that creates a converter which converts set/change/remove attribute changes from the model to the view.\n//\n// Attributes from the model are converted to the view element attributes in the view. You may provide a custom function to generate\n// a key-value attribute pair to add/change/remove. If not provided, model attributes will be converted to view element\n// attributes on a one-to-one basis.\n//\n// *Note:** The provided attribute creator should always return the same `key` for a given attribute from the model.\n//\n// The converter automatically consumes the corresponding value from the consumables list and stops the event (see\n// {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}).\n//\n//\t\tmodelDispatcher.on( 'attribute:customAttr:myElem', changeAttribute( ( value, data ) => {\n//\t\t\t// Change attribute key from `customAttr` to `class` in the view.\n//\t\t\tconst key = 'class';\n//\t\t\tlet value = data.attributeNewValue;\n//\n//\t\t\t// Force attribute value to 'empty' if the model element is empty.\n//\t\t\tif ( data.item.childCount === 0 ) {\n//\t\t\t\tvalue = 'empty';\n//\t\t\t}\n//\n//\t\t\t// Return the key-value pair.\n//\t\t\treturn { key, value };\n//\t\t} ) );\n//\n// @param {Function} [attributeCreator] Function returning an object with two properties: `key` and `value`, which\n// represent the attribute key and attribute value to be set on a {@link module:engine/view/element~Element view element}.\n// The function is passed the model attribute value as the first parameter and additional data about the change as the second parameter.\n// @returns {Function} Set/change attribute converter.\nfunction changeAttribute( attributeCreator ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst oldAttribute = attributeCreator( data.attributeOldValue, data );\n\t\tconst newAttribute = attributeCreator( data.attributeNewValue, data );\n\n\t\tif ( !oldAttribute && !newAttribute ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !conversionApi.consumable.consume( data.item, evt.name ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewElement = conversionApi.mapper.toViewElement( data.item );\n\t\tconst viewWriter = conversionApi.writer;\n\n\t\t// If model item cannot be mapped to a view element, it means item is not an `Element` instance but a `TextProxy` node.\n\t\t// Only elements can have attributes in a view so do not proceed for anything else (#1587).\n\t\tif ( !viewElement ) {\n\t\t\t/**\n\t\t\t * This error occurs when a {@link module:engine/model/textproxy~TextProxy text node's} attribute is to be downcasted\n\t\t\t * by {@link module:engine/conversion/conversion~Conversion#attributeToAttribute `Attribute to Attribute converter`}.\n\t\t\t * In most cases it is caused by converters misconfiguration when only \"generic\" converter is defined:\n\t\t\t *\n\t\t\t *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\n\t\t\t *\t\t\tmodel: 'attribute-name',\n\t\t\t *\t\t\tview: 'attribute-name'\n\t\t\t *\t\t} ) );\n\t\t\t *\n\t\t\t * and given attribute is used on text node, for example:\n\t\t\t *\n\t\t\t *\t\tmodel.change( writer => {\n\t\t\t *\t\t\twriter.insertText( 'Foo', { 'attribute-name': 'bar' }, parent, 0 );\n\t\t\t *\t\t} );\n\t\t\t *\n\t\t\t * In such cases, to convert the same attribute for both {@link module:engine/model/element~Element}\n\t\t\t * and {@link module:engine/model/textproxy~TextProxy `Text`} nodes, text specific\n\t\t\t * {@link module:engine/conversion/conversion~Conversion#attributeToElement `Attribute to Element converter`}\n\t\t\t * with higher {@link module:utils/priorities~PriorityString priority} must also be defined:\n\t\t\t *\n\t\t\t *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n\t\t\t *\t\t\tmodel: {\n\t\t\t *\t\t\t\tkey: 'attribute-name',\n\t\t\t *\t\t\t\tname: '$text'\n\t\t\t *\t\t\t},\n\t\t\t *\t\t\tview: ( value, writer ) => {\n\t\t\t *\t\t\t\treturn writer.createAttributeElement( 'span', { 'attribute-name': value } );\n\t\t\t *\t\t\t},\n\t\t\t *\t\t\tconverterPriority: 'high'\n\t\t\t *\t\t} ) );\n\t\t\t *\n\t\t\t * @error conversion-attribute-to-attribute-on-text\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'conversion-attribute-to-attribute-on-text: ' +\n\t\t\t\t'Trying to convert text node\\'s attribute with attribute-to-attribute converter.',\n\t\t\t\t[ data, conversionApi ]\n\t\t\t);\n\t\t}\n\n\t\t// First remove the old attribute if there was one.\n\t\tif ( data.attributeOldValue !== null && oldAttribute ) {\n\t\t\tif ( oldAttribute.key == 'class' ) {\n\t\t\t\tconst classes = Array.isArray( oldAttribute.value ) ? oldAttribute.value : [ oldAttribute.value ];\n\n\t\t\t\tfor ( const className of classes ) {\n\t\t\t\t\tviewWriter.removeClass( className, viewElement );\n\t\t\t\t}\n\t\t\t} else if ( oldAttribute.key == 'style' ) {\n\t\t\t\tconst keys = Object.keys( oldAttribute.value );\n\n\t\t\t\tfor ( const key of keys ) {\n\t\t\t\t\tviewWriter.removeStyle( key, viewElement );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tviewWriter.removeAttribute( oldAttribute.key, viewElement );\n\t\t\t}\n\t\t}\n\n\t\t// Then set the new attribute.\n\t\tif ( data.attributeNewValue !== null && newAttribute ) {\n\t\t\tif ( newAttribute.key == 'class' ) {\n\t\t\t\tconst classes = Array.isArray( newAttribute.value ) ? newAttribute.value : [ newAttribute.value ];\n\n\t\t\t\tfor ( const className of classes ) {\n\t\t\t\t\tviewWriter.addClass( className, viewElement );\n\t\t\t\t}\n\t\t\t} else if ( newAttribute.key == 'style' ) {\n\t\t\t\tconst keys = Object.keys( newAttribute.value );\n\n\t\t\t\tfor ( const key of keys ) {\n\t\t\t\t\tviewWriter.setStyle( key, newAttribute.value[ key ], viewElement );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tviewWriter.setAttribute( newAttribute.key, newAttribute.value, viewElement );\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Function factory that creates a converter which converts the text inside marker's range. The converter wraps the text with\n// {@link module:engine/view/attributeelement~AttributeElement} created from the provided descriptor.\n// See {link module:engine/conversion/downcasthelpers~createViewElementFromHighlightDescriptor}.\n//\n// It can also be used to convert the selection that is inside a marker. In that case, an empty attribute element will be\n// created and the selection will be put inside it.\n//\n// If the highlight descriptor does not provide the `priority` property, `10` will be used.\n//\n// If the highlight descriptor does not provide the `id` property, the name of the marker will be used.\n//\n// This converter binds the created {@link module:engine/view/attributeelement~AttributeElement attribute elemens} with the marker name\n// using the {@link module:engine/conversion/mapper~Mapper#bindElementToMarker} method.\n//\n// @param {module:engine/conversion/downcasthelpers~HighlightDescriptor|Function} highlightDescriptor\n// @returns {Function}\nfunction highlightText( highlightDescriptor ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\tif ( !data.item ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !( data.item instanceof ModelSelection || data.item instanceof DocumentSelection ) && !data.item.is( 'textProxy' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst descriptor = prepareDescriptor( highlightDescriptor, data, conversionApi );\n\n\t\tif ( !descriptor ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !conversionApi.consumable.consume( data.item, evt.name ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewElement = createViewElementFromHighlightDescriptor( descriptor );\n\t\tconst viewWriter = conversionApi.writer;\n\t\tconst viewSelection = viewWriter.document.selection;\n\n\t\tif ( data.item instanceof ModelSelection || data.item instanceof DocumentSelection ) {\n\t\t\tviewWriter.wrap( viewSelection.getFirstRange(), viewElement, viewSelection );\n\t\t} else {\n\t\t\tconst viewRange = conversionApi.mapper.toViewRange( data.range );\n\t\t\tconst rangeAfterWrap = viewWriter.wrap( viewRange, viewElement );\n\n\t\t\tfor ( const element of rangeAfterWrap.getItems() ) {\n\t\t\t\tif ( element.is( 'attributeElement' ) && element.isSimilar( viewElement ) ) {\n\t\t\t\t\tconversionApi.mapper.bindElementToMarker( element, data.markerName );\n\n\t\t\t\t\t// One attribute element is enough, because all of them are bound together by the view writer.\n\t\t\t\t\t// Mapper uses this binding to get all the elements no matter how many of them are registered in the mapper.\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Converter function factory. It creates a function which applies the marker's highlight to an element inside the marker's range.\n//\n// The converter checks if an element has the `addHighlight` function stored as a\n// {@link module:engine/view/element~Element#_setCustomProperty custom property} and, if so, uses it to apply the highlight.\n// In such case the converter will consume all element's children, assuming that they were handled by the element itself.\n//\n// When the `addHighlight` custom property is not present, the element is not converted in any special way.\n// This means that converters will proceed to convert the element's child nodes.\n//\n// If the highlight descriptor does not provide the `priority` property, `10` will be used.\n//\n// If the highlight descriptor does not provide the `id` property, the name of the marker will be used.\n//\n// This converter binds altered {@link module:engine/view/containerelement~ContainerElement container elements} with the marker name using\n// the {@link module:engine/conversion/mapper~Mapper#bindElementToMarker} method.\n//\n// @param {module:engine/conversion/downcasthelpers~HighlightDescriptor|Function} highlightDescriptor\n// @returns {Function}\nfunction highlightElement( highlightDescriptor ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\tif ( !data.item ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !( data.item instanceof ModelElement ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst descriptor = prepareDescriptor( highlightDescriptor, data, conversionApi );\n\n\t\tif ( !descriptor ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !conversionApi.consumable.test( data.item, evt.name ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewElement = conversionApi.mapper.toViewElement( data.item );\n\n\t\tif ( viewElement && viewElement.getCustomProperty( 'addHighlight' ) ) {\n\t\t\t// Consume element itself.\n\t\t\tconversionApi.consumable.consume( data.item, evt.name );\n\n\t\t\t// Consume all children nodes.\n\t\t\tfor ( const value of ModelRange._createIn( data.item ) ) {\n\t\t\t\tconversionApi.consumable.consume( value.item, evt.name );\n\t\t\t}\n\n\t\t\tviewElement.getCustomProperty( 'addHighlight' )( viewElement, descriptor, conversionApi.writer );\n\n\t\t\tconversionApi.mapper.bindElementToMarker( viewElement, data.markerName );\n\t\t}\n\t};\n}\n\n// Function factory that creates a converter which converts the removing model marker to the view.\n//\n// Both text nodes and elements are handled by this converter but they are handled a bit differently.\n//\n// Text nodes are unwrapped using the {@link module:engine/view/attributeelement~AttributeElement attribute element} created from the\n// provided highlight descriptor. See {link module:engine/conversion/downcasthelpers~HighlightDescriptor}.\n//\n// For elements, the converter checks if an element has the `removeHighlight` function stored as a\n// {@link module:engine/view/element~Element#_setCustomProperty custom property}. If so, it uses it to remove the highlight.\n// In such case, the children of that element will not be converted.\n//\n// When `removeHighlight` is not present, the element is not converted in any special way.\n// The converter will proceed to convert the element's child nodes instead.\n//\n// If the highlight descriptor does not provide the `priority` property, `10` will be used.\n//\n// If the highlight descriptor does not provide the `id` property, the name of the marker will be used.\n//\n// This converter unbinds elements from the marker name.\n//\n// @param {module:engine/conversion/downcasthelpers~HighlightDescriptor|Function} highlightDescriptor\n// @returns {Function}\nfunction removeHighlight( highlightDescriptor ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\t// This conversion makes sense only for non-collapsed range.\n\t\tif ( data.markerRange.isCollapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst descriptor = prepareDescriptor( highlightDescriptor, data, conversionApi );\n\n\t\tif ( !descriptor ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// View element that will be used to unwrap `AttributeElement`s.\n\t\tconst viewHighlightElement = createViewElementFromHighlightDescriptor( descriptor );\n\n\t\t// Get all elements bound with given marker name.\n\t\tconst elements = conversionApi.mapper.markerNameToElements( data.markerName );\n\n\t\tif ( !elements ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor ( const element of elements ) {\n\t\t\tconversionApi.mapper.unbindElementFromMarkerName( element, data.markerName );\n\n\t\t\tif ( element.is( 'attributeElement' ) ) {\n\t\t\t\tconversionApi.writer.unwrap( conversionApi.writer.createRangeOn( element ), viewHighlightElement );\n\t\t\t} else {\n\t\t\t\t// if element.is( 'containerElement' ).\n\t\t\t\telement.getCustomProperty( 'removeHighlight' )( element, descriptor.id, conversionApi.writer );\n\t\t\t}\n\t\t}\n\n\t\tconversionApi.writer.clearClonedElementsGroup( data.markerName );\n\n\t\tevt.stop();\n\t};\n}\n\n// Model element to view element conversion helper.\n//\n// See {@link ~DowncastHelpers#elementToElement `.elementToElement()` downcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {String} config.model The name of the model element to convert.\n// @param {module:engine/view/elementdefinition~ElementDefinition|Function} config.view A view element definition or a function\n// that takes the model element and {@link module:engine/view/downcastwriter~DowncastWriter view downcast writer}\n// as parameters and returns a view container element.\n// @returns {Function} Conversion helper.\nfunction downcastElementToElement( config ) {\n\tconfig = cloneDeep( config );\n\n\tconfig.view = normalizeToElementConfig( config.view, 'container' );\n\n\treturn dispatcher => {\n\t\tdispatcher.on( 'insert:' + config.model, insertElement( config.view ), { priority: config.converterPriority || 'normal' } );\n\t};\n}\n\n// Model attribute to view element conversion helper.\n//\n// See {@link ~DowncastHelpers#attributeToElement `.attributeToElement()` downcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {String|Object} config.model The key of the attribute to convert from or a `{ key, values }` object. `values` is an array\n// of `String`s with possible values if the model attribute is an enumerable.\n// @param {module:engine/view/elementdefinition~ElementDefinition|Function|Object} config.view A view element definition or a function\n// that takes the model attribute value and {@link module:engine/view/downcastwriter~DowncastWriter view downcast writer}\n// as parameters and returns a view attribute element. If `config.model.values` is\n// given, `config.view` should be an object assigning values from `config.model.values` to view element definitions or functions.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n// @returns {Function} Conversion helper.\nfunction downcastAttributeToElement( config ) {\n\tconfig = cloneDeep( config );\n\n\tconst modelKey = config.model.key ? config.model.key : config.model;\n\tlet eventName = 'attribute:' + modelKey;\n\n\tif ( config.model.name ) {\n\t\teventName += ':' + config.model.name;\n\t}\n\n\tif ( config.model.values ) {\n\t\tfor ( const modelValue of config.model.values ) {\n\t\t\tconfig.view[ modelValue ] = normalizeToElementConfig( config.view[ modelValue ], 'attribute' );\n\t\t}\n\t} else {\n\t\tconfig.view = normalizeToElementConfig( config.view, 'attribute' );\n\t}\n\n\tconst elementCreator = getFromAttributeCreator( config );\n\n\treturn dispatcher => {\n\t\tdispatcher.on( eventName, wrap( elementCreator ), { priority: config.converterPriority || 'normal' } );\n\t};\n}\n\n// Model attribute to view attribute conversion helper.\n//\n// See {@link ~DowncastHelpers#attributeToAttribute `.attributeToAttribute()` downcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {String|Object} config.model The key of the attribute to convert from or a `{ key, values, [ name ] }` object describing\n// the attribute key, possible values and, optionally, an element name to convert from.\n// @param {String|Object|Function} config.view A view attribute key, or a `{ key, value }` object or a function that takes\n// the model attribute value and returns a `{ key, value }` object. If `key` is `'class'`, `value` can be a `String` or an\n// array of `String`s. If `key` is `'style'`, `value` is an object with key-value pairs. In other cases, `value` is a `String`.\n// If `config.model.values` is set, `config.view` should be an object assigning values from `config.model.values` to\n// `{ key, value }` objects or a functions.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n// @returns {Function} Conversion helper.\nfunction downcastAttributeToAttribute( config ) {\n\tconfig = cloneDeep( config );\n\n\tconst modelKey = config.model.key ? config.model.key : config.model;\n\tlet eventName = 'attribute:' + modelKey;\n\n\tif ( config.model.name ) {\n\t\teventName += ':' + config.model.name;\n\t}\n\n\tif ( config.model.values ) {\n\t\tfor ( const modelValue of config.model.values ) {\n\t\t\tconfig.view[ modelValue ] = normalizeToAttributeConfig( config.view[ modelValue ] );\n\t\t}\n\t} else {\n\t\tconfig.view = normalizeToAttributeConfig( config.view );\n\t}\n\n\tconst elementCreator = getFromAttributeCreator( config );\n\n\treturn dispatcher => {\n\t\tdispatcher.on( eventName, changeAttribute( elementCreator ), { priority: config.converterPriority || 'normal' } );\n\t};\n}\n\n// Model marker to view element conversion helper.\n//\n// See {@link ~DowncastHelpers#markerToElement `.markerToElement()` downcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {String} config.model The name of the model marker (or model marker group) to convert.\n// @param {module:engine/view/elementdefinition~ElementDefinition|Function} config.view A view element definition or a function\n// that takes the model marker data as a parameter and returns a view UI element.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n// @returns {Function} Conversion helper.\nfunction downcastMarkerToElement( config ) {\n\tconfig = cloneDeep( config );\n\n\tconfig.view = normalizeToElementConfig( config.view, 'ui' );\n\n\treturn dispatcher => {\n\t\tdispatcher.on( 'addMarker:' + config.model, insertUIElement( config.view ), { priority: config.converterPriority || 'normal' } );\n\t\tdispatcher.on( 'removeMarker:' + config.model, removeUIElement( config.view ), { priority: config.converterPriority || 'normal' } );\n\t};\n}\n\n// Model marker to highlight conversion helper.\n//\n// See {@link ~DowncastHelpers#markerToElement `.markerToElement()` downcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {String} config.model The name of the model marker (or model marker group) to convert.\n// @param {module:engine/conversion/downcasthelpers~HighlightDescriptor|Function} config.view A highlight descriptor\n// that will be used for highlighting or a function that takes the model marker data as a parameter and returns a highlight descriptor.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n// @returns {Function} Conversion helper.\nfunction downcastMarkerToHighlight( config ) {\n\treturn dispatcher => {\n\t\tdispatcher.on( 'addMarker:' + config.model, highlightText( config.view ), { priority: config.converterPriority || 'normal' } );\n\t\tdispatcher.on( 'addMarker:' + config.model, highlightElement( config.view ), { priority: config.converterPriority || 'normal' } );\n\t\tdispatcher.on( 'removeMarker:' + config.model, removeHighlight( config.view ), { priority: config.converterPriority || 'normal' } );\n\t};\n}\n\n// Takes `config.view`, and if it is an {@link module:engine/view/elementdefinition~ElementDefinition}, converts it\n// to a function (because lower level converters accept only element creator functions).\n//\n// @param {module:engine/view/elementdefinition~ElementDefinition|Function} view View configuration.\n// @param {'container'|'attribute'|'ui'} viewElementType View element type to create.\n// @returns {Function} Element creator function to use in lower level converters.\nfunction normalizeToElementConfig( view, viewElementType ) {\n\tif ( typeof view == 'function' ) {\n\t\t// If `view` is already a function, don't do anything.\n\t\treturn view;\n\t}\n\n\treturn ( modelData, viewWriter ) => createViewElementFromDefinition( view, viewWriter, viewElementType );\n}\n\n// Creates a view element instance from the provided {@link module:engine/view/elementdefinition~ElementDefinition} and class.\n//\n// @param {module:engine/view/elementdefinition~ElementDefinition} viewElementDefinition\n// @param {module:engine/view/downcastwriter~DowncastWriter} viewWriter\n// @param {'container'|'attribute'|'ui'} viewElementType\n// @returns {module:engine/view/element~Element}\nfunction createViewElementFromDefinition( viewElementDefinition, viewWriter, viewElementType ) {\n\tif ( typeof viewElementDefinition == 'string' ) {\n\t\t// If `viewElementDefinition` is given as a `String`, normalize it to an object with `name` property.\n\t\tviewElementDefinition = { name: viewElementDefinition };\n\t}\n\n\tlet element;\n\tconst attributes = Object.assign( {}, viewElementDefinition.attributes );\n\n\tif ( viewElementType == 'container' ) {\n\t\telement = viewWriter.createContainerElement( viewElementDefinition.name, attributes );\n\t} else if ( viewElementType == 'attribute' ) {\n\t\tconst options = {\n\t\t\tpriority: viewElementDefinition.priority || ViewAttributeElement.DEFAULT_PRIORITY\n\t\t};\n\n\t\telement = viewWriter.createAttributeElement( viewElementDefinition.name, attributes, options );\n\t} else {\n\t\t// 'ui'.\n\t\telement = viewWriter.createUIElement( viewElementDefinition.name, attributes );\n\t}\n\n\tif ( viewElementDefinition.styles ) {\n\t\tconst keys = Object.keys( viewElementDefinition.styles );\n\n\t\tfor ( const key of keys ) {\n\t\t\tviewWriter.setStyle( key, viewElementDefinition.styles[ key ], element );\n\t\t}\n\t}\n\n\tif ( viewElementDefinition.classes ) {\n\t\tconst classes = viewElementDefinition.classes;\n\n\t\tif ( typeof classes == 'string' ) {\n\t\t\tviewWriter.addClass( classes, element );\n\t\t} else {\n\t\t\tfor ( const className of classes ) {\n\t\t\t\tviewWriter.addClass( className, element );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn element;\n}\n\nfunction getFromAttributeCreator( config ) {\n\tif ( config.model.values ) {\n\t\treturn ( modelAttributeValue, viewWriter ) => {\n\t\t\tconst view = config.view[ modelAttributeValue ];\n\n\t\t\tif ( view ) {\n\t\t\t\treturn view( modelAttributeValue, viewWriter );\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\t} else {\n\t\treturn config.view;\n\t}\n}\n\n// Takes the configuration, adds default parameters if they do not exist and normalizes other parameters to be used in downcast converters\n// for generating a view attribute.\n//\n// @param {Object} view View configuration.\nfunction normalizeToAttributeConfig( view ) {\n\tif ( typeof view == 'string' ) {\n\t\treturn modelAttributeValue => ( { key: view, value: modelAttributeValue } );\n\t} else if ( typeof view == 'object' ) {\n\t\t// { key, value, ... }\n\t\tif ( view.value ) {\n\t\t\treturn () => view;\n\t\t}\n\t\t// { key, ... }\n\t\telse {\n\t\t\treturn modelAttributeValue => ( { key: view.key, value: modelAttributeValue } );\n\t\t}\n\t} else {\n\t\t// function.\n\t\treturn view;\n\t}\n}\n\n// Helper function for `highlight`. Prepares the actual descriptor object using value passed to the converter.\nfunction prepareDescriptor( highlightDescriptor, data, conversionApi ) {\n\t// If passed descriptor is a creator function, call it. If not, just use passed value.\n\tconst descriptor = typeof highlightDescriptor == 'function' ?\n\t\thighlightDescriptor( data, conversionApi ) :\n\t\thighlightDescriptor;\n\n\tif ( !descriptor ) {\n\t\treturn null;\n\t}\n\n\t// Apply default descriptor priority.\n\tif ( !descriptor.priority ) {\n\t\tdescriptor.priority = 10;\n\t}\n\n\t// Default descriptor id is marker name.\n\tif ( !descriptor.id ) {\n\t\tdescriptor.id = data.markerName;\n\t}\n\n\treturn descriptor;\n}\n\n/**\n * An object describing how the marker highlight should be represented in the view.\n *\n * Each text node contained in a highlighted range will be wrapped in a `<span>`\n * {@link module:engine/view/attributeelement~AttributeElement view attribute element} with CSS class(es), attributes and a priority\n * described by this object.\n *\n * Additionally, each {@link module:engine/view/containerelement~ContainerElement container element} can handle displaying the highlight\n * separately by providing the `addHighlight` and `removeHighlight` custom properties. In this case:\n *\n *  * The `HighlightDescriptor` object is passed to the `addHighlight` function upon conversion and should be used to apply the highlight to\n *  the element.\n *  * The descriptor `id` is passed to the `removeHighlight` function upon conversion and should be used to remove the highlight with the\n *  given ID from the element.\n *\n * @typedef {Object} module:engine/conversion/downcasthelpers~HighlightDescriptor\n *\n * @property {String|Array.<String>} classes A CSS class or an array of classes to set. If the descriptor is used to\n * create an {@link module:engine/view/attributeelement~AttributeElement attribute element} over text nodes, these classes will be set\n * on that attribute element. If the descriptor is applied to an element, usually these classes will be set on that element, however,\n * this depends on how the element converts the descriptor.\n *\n * @property {String} [id] Descriptor identifier. If not provided, it defaults to the converted marker's name.\n *\n * @property {Number} [priority] Descriptor priority. If not provided, it defaults to `10`. If the descriptor is used to create\n * an {@link module:engine/view/attributeelement~AttributeElement attribute element}, it will be that element's\n * {@link module:engine/view/attributeelement~AttributeElement#priority priority}. If the descriptor is applied to an element,\n * the priority will be used to determine which descriptor is more important.\n *\n * @property {Object} [attributes] Attributes to set. If the descriptor is used to create\n * an {@link module:engine/view/attributeelement~AttributeElement attribute element} over text nodes, these attributes will be set on that\n * attribute element. If the descriptor is applied to an element, usually these attributes will be set on that element, however,\n * this depends on how the element converts the descriptor.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport Matcher from '../view/matcher';\nimport ModelRange from '../model/range';\nimport ConversionHelpers from './conversionhelpers';\n\nimport { cloneDeep } from 'lodash-es';\nimport ModelSelection from '../model/selection';\n\n/**\n * Contains {@link module:engine/view/view view} to {@link module:engine/model/model model} converters for\n * {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher}.\n *\n * @module engine/conversion/upcasthelpers\n */\n\n/**\n * Upcast conversion helper functions.\n *\n * @extends module:engine/conversion/conversionhelpers~ConversionHelpers\n */\nexport default class UpcastHelpers extends ConversionHelpers {\n\t/**\n\t * View element to model element conversion helper.\n\t *\n\t * This conversion results in creating a model element. For example,\n\t * view `<p>Foo</p>` becomes `<paragraph>Foo</paragraph>` in the model.\n\t *\n\t * Keep in mind that the element will be inserted only if it is allowed\n\t * by {@link module:engine/model/schema~Schema schema} configuration.\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToElement( {\n\t *\t\t\tview: 'p',\n\t *\t\t\tmodel: 'paragraph'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToElement( {\n\t *\t\t\tview: 'p',\n\t *\t\t\tmodel: 'paragraph',\n\t *\t\t\tconverterPriority: 'high'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToElement( {\n\t *\t\t\tview: {\n\t *\t\t\t\tname: 'p',\n\t *\t\t\t\tclasses: 'fancy'\n\t *\t\t\t},\n\t *\t\t\tmodel: 'fancyParagraph'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToElement( {\n\t * \t\t\tview: {\n\t *\t\t\t\tname: 'p',\n\t *\t\t\t\tclasses: 'heading'\n\t * \t\t\t},\n\t * \t\t\tmodel: ( viewElement, modelWriter ) => {\n\t * \t\t\t\treturn modelWriter.createElement( 'heading', { level: viewElement.getAttribute( 'data-level' ) } );\n\t * \t\t\t}\n\t * \t\t} );\n\t *\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n\t * to the conversion process.\n\t *\n\t * @method #elementToElement\n\t * @param {Object} config Conversion configuration.\n\t * @param {module:engine/view/matcher~MatcherPattern} [config.view] Pattern matching all view elements which should be converted. If not\n\t * set, the converter will fire for every view element.\n\t * @param {String|module:engine/model/element~Element|Function} config.model Name of the model element, a model element\n\t * instance or a function that takes a view element and returns a model element. The model element will be inserted in the model.\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n\t * @returns {module:engine/conversion/upcasthelpers~UpcastHelpers}\n\t */\n\telementToElement( config ) {\n\t\treturn this.add( upcastElementToElement( config ) );\n\t}\n\n\t/**\n\t * View element to model attribute conversion helper.\n\t *\n\t * This conversion results in setting an attribute on a model node. For example, view `<strong>Foo</strong>` becomes\n\t * `Foo` {@link module:engine/model/text~Text model text node} with `bold` attribute set to `true`.\n\t *\n\t * This helper is meant to set a model attribute on all the elements that are inside the converted element:\n\t *\n\t *\t\t<strong>Foo</strong>   -->   <strong><p>Foo</p></strong>   -->   <paragraph><$text bold=\"true\">Foo</$text></paragraph>\n\t *\n\t * Above is a sample of HTML code, that goes through autoparagraphing (first step) and then is converted (second step).\n\t * Even though `<strong>` is over `<p>` element, `bold=\"true\"` was added to the text. See\n\t * {@link module:engine/conversion/upcasthelpers~UpcastHelpers#attributeToAttribute} for comparison.\n\t *\n\t * Keep in mind that the attribute will be set only if it is allowed by {@link module:engine/model/schema~Schema schema} configuration.\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\n\t *\t\t\tview: 'strong',\n\t *\t\t\tmodel: 'bold'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\n\t *\t\t\tview: 'strong',\n\t *\t\t\tmodel: 'bold',\n\t *\t\t\tconverterPriority: 'high'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\n\t *\t\t\tview: {\n\t *\t\t\t\tname: 'span',\n\t *\t\t\t\tclasses: 'bold'\n\t *\t\t\t},\n\t *\t\t\tmodel: 'bold'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\n\t *\t\t\tview: {\n\t *\t\t\t\tname: 'span',\n\t *\t\t\t\tclasses: [ 'styled', 'styled-dark' ]\n\t *\t\t\t},\n\t *\t\t\tmodel: {\n\t *\t\t\t\tkey: 'styled',\n\t *\t\t\t\tvalue: 'dark'\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * \t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\n\t *\t\t\tview: {\n\t *\t\t\t\tname: 'span',\n\t *\t\t\t\tstyles: {\n\t *\t\t\t\t\t'font-size': /[\\s\\S]+/\n\t *\t\t\t\t}\n\t *\t\t\t},\n\t *\t\t\tmodel: {\n\t *\t\t\t\tkey: 'fontSize',\n\t *\t\t\t\tvalue: viewElement => {\n\t *\t\t\t\t\tconst fontSize = viewElement.getStyle( 'font-size' );\n\t *\t\t\t\t\tconst value = fontSize.substr( 0, fontSize.length - 2 );\n\t *\n\t *\t\t\t\t\tif ( value <= 10 ) {\n\t *\t\t\t\t\t\treturn 'small';\n\t *\t\t\t\t\t} else if ( value > 12 ) {\n\t *\t\t\t\t\t\treturn 'big';\n\t *\t\t\t\t\t}\n\t *\n\t *\t\t\t\t\treturn null;\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n\t * to the conversion process.\n\t *\n\t * @method #elementToAttribute\n\t * @param {Object} config Conversion configuration.\n\t * @param {module:engine/view/matcher~MatcherPattern} config.view Pattern matching all view elements which should be converted.\n\t * @param {String|Object} config.model Model attribute key or an object with `key` and `value` properties, describing\n\t * the model attribute. `value` property may be set as a function that takes a view element and returns the value.\n\t * If `String` is given, the model attribute value will be set to `true`.\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='low'] Converter priority.\n\t * @returns {module:engine/conversion/upcasthelpers~UpcastHelpers}\n\t */\n\telementToAttribute( config ) {\n\t\treturn this.add( upcastElementToAttribute( config ) );\n\t}\n\n\t/**\n\t * View attribute to model attribute conversion helper.\n\t *\n\t * This conversion results in setting an attribute on a model node. For example, view `<img src=\"foo.jpg\"></img>` becomes\n\t * `<image source=\"foo.jpg\"></image>` in the model.\n\t *\n\t * This helper is meant to convert view attributes from view elements which got converted to the model, so the view attribute\n\t * is set only on the corresponding model node:\n\t *\n\t *\t\t<div class=\"dark\"><div>foo</div></div>    -->    <div dark=\"true\"><div>foo</div></div>\n\t *\n\t * Above, `class=\"dark\"` attribute is added only to the `<div>` elements that has it. This is in contrary to\n\t * {@link module:engine/conversion/upcasthelpers~UpcastHelpers#elementToAttribute} which sets attributes for\n\t * all the children in the model:\n\t *\n\t *\t\t<strong>Foo</strong>   -->   <strong><p>Foo</p></strong>   -->   <paragraph><$text bold=\"true\">Foo</$text></paragraph>\n\t *\n\t * Above is a sample of HTML code, that goes through autoparagraphing (first step) and then is converted (second step).\n\t * Even though `<strong>` is over `<p>` element, `bold=\"true\"` was added to the text.\n\t *\n\t * Keep in mind that the attribute will be set only if it is allowed by {@link module:engine/model/schema~Schema schema} configuration.\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n\t *\t\t\tview: 'src',\n\t *\t\t\tmodel: 'source'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n\t *\t\t\tview: { key: 'src' },\n\t *\t\t\tmodel: 'source'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n\t *\t\t\tview: { key: 'src' },\n\t *\t\t\tmodel: 'source',\n\t *\t\t\tconverterPriority: 'normal'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n\t *\t\t\tview: {\n\t *\t\t\t\tkey: 'data-style',\n\t *\t\t\t\tvalue: /[\\s\\S]+/\n\t *\t\t\t},\n\t *\t\t\tmodel: 'styled'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n\t *\t\t\tview: {\n\t *\t\t\t\tname: 'img',\n\t *\t\t\t\tkey: 'class',\n\t *\t\t\t\tvalue: 'styled-dark'\n\t *\t\t\t},\n\t *\t\t\tmodel: {\n\t *\t\t\t\tkey: 'styled',\n\t *\t\t\t\tvalue: 'dark'\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n\t *\t\t\tview: {\n\t *\t\t\t\tkey: 'class',\n\t *\t\t\t\tvalue: /styled-[\\S]+/\n\t *\t\t\t},\n\t *\t\t\tmodel: {\n\t *\t\t\t\tkey: 'styled'\n\t *\t\t\t\tvalue: viewElement => {\n\t *\t\t\t\t\tconst regexp = /styled-([\\S]+)/;\n\t *\t\t\t\t\tconst match = viewElement.getAttribute( 'class' ).match( regexp );\n\t *\n\t *\t\t\t\t\treturn match[ 1 ];\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * Converting styles works a bit differently as it requires `view.styles` to be an object and by default\n\t * a model attribute will be set to `true` by such a converter. You can set the model attribute to any value by providing the `value`\n\t * callback that returns the desired value.\n\t *\n\t *\t\t// Default conversion of font-weight style will result in setting bold attribute to true.\n\t *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n\t *\t\t\tview: {\n\t *\t\t\t\tstyles: {\n\t *\t\t\t\t\t'font-weight': 'bold'\n\t *\t\t\t\t}\n\t *\t\t\t},\n\t *\t\t\tmodel: 'bold'\n\t *\t\t} );\n\t *\n\t *\t\t// This converter will pass any style value to the `lineHeight` model attribute.\n\t *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n\t *\t\t\tview: {\n\t *\t\t\t\tstyles: {\n\t *\t\t\t\t\t'line-height': /[\\s\\S]+/\n\t *\t\t\t\t}\n\t *\t\t\t},\n\t *\t\t\tmodel: {\n\t *\t\t\t\tkey: 'lineHeight',\n\t *\t\t\t\tvalue: viewElement => viewElement.getStyle( 'line-height' )\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n\t * to the conversion process.\n\t *\n\t * @method #attributeToAttribute\n\t * @param {Object} config Conversion configuration.\n\t * @param {String|Object} config.view Specifies which view attribute will be converted. If a `String` is passed,\n\t * attributes with given key will be converted. If an `Object` is passed, it must have a required `key` property,\n\t * specifying view attribute key, and may have an optional `value` property, specifying view attribute value and optional `name`\n\t * property specifying a view element name from/on which the attribute should be converted. `value` can be given as a `String`,\n\t * a `RegExp` or a function callback, that takes view attribute value as the only parameter and returns `Boolean`.\n\t * @param {String|Object} config.model Model attribute key or an object with `key` and `value` properties, describing\n\t * the model attribute. `value` property may be set as a function that takes a view element and returns the value.\n\t * If `String` is given, the model attribute value will be same as view attribute value.\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='low'] Converter priority.\n\t * @returns {module:engine/conversion/upcasthelpers~UpcastHelpers}\n\t */\n\tattributeToAttribute( config ) {\n\t\treturn this.add( upcastAttributeToAttribute( config ) );\n\t}\n\n\t/**\n\t * View element to model marker conversion helper.\n\t *\n\t * This conversion results in creating a model marker. For example, if the marker was stored in a view as an element:\n\t * `<p>Fo<span data-marker=\"comment\" data-comment-id=\"7\"></span>o</p><p>B<span data-marker=\"comment\" data-comment-id=\"7\"></span>ar</p>`,\n\t * after the conversion is done, the marker will be available in\n\t * {@link module:engine/model/model~Model#markers model document markers}.\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToMarker( {\n\t *\t\t\tview: 'marker-search',\n\t *\t\t\tmodel: 'search'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToMarker( {\n\t *\t\t\tview: 'marker-search',\n\t *\t\t\tmodel: 'search',\n\t *\t\t\tconverterPriority: 'high'\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToMarker( {\n\t *\t\t\tview: 'marker-search',\n\t *\t\t\tmodel: viewElement => 'comment:' + viewElement.getAttribute( 'data-comment-id' )\n\t *\t\t} );\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).elementToMarker( {\n\t *\t\t\tview: {\n\t *\t\t\t\tname: 'span',\n\t *\t\t\t\tattributes: {\n\t *\t\t\t\t\t'data-marker': 'search'\n\t *\t\t\t\t}\n\t *\t\t\t},\n\t *\t\t\tmodel: 'search'\n\t *\t\t} );\n\t *\n\t * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n\t * to the conversion process.\n\t *\n\t * @method #elementToMarker\n\t * @param {Object} config Conversion configuration.\n\t * @param {module:engine/view/matcher~MatcherPattern} config.view Pattern matching all view elements which should be converted.\n\t * @param {String|Function} config.model Name of the model marker, or a function that takes a view element and returns\n\t * a model marker name.\n\t * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n\t * @returns {module:engine/conversion/upcasthelpers~UpcastHelpers}\n\t */\n\telementToMarker( config ) {\n\t\treturn this.add( upcastElementToMarker( config ) );\n\t}\n}\n\n/**\n * Function factory, creates a converter that converts {@link module:engine/view/documentfragment~DocumentFragment view document fragment}\n * or all children of {@link module:engine/view/element~Element} into\n * {@link module:engine/model/documentfragment~DocumentFragment model document fragment}.\n * This is the \"entry-point\" converter for upcast (view to model conversion). This converter starts the conversion of all children\n * of passed view document fragment. Those children {@link module:engine/view/node~Node view nodes} are then handled by other converters.\n *\n * This also a \"default\", last resort converter for all view elements that has not been converted by other converters.\n * When a view element is being converted to the model but it does not have converter specified, that view element\n * will be converted to {@link module:engine/model/documentfragment~DocumentFragment model document fragment} and returned.\n *\n * @returns {Function} Universal converter for view {@link module:engine/view/documentfragment~DocumentFragment fragments} and\n * {@link module:engine/view/element~Element elements} that returns\n * {@link module:engine/model/documentfragment~DocumentFragment model fragment} with children of converted view item.\n */\nexport function convertToModelFragment() {\n\treturn ( evt, data, conversionApi ) => {\n\t\t// Second argument in `consumable.consume` is discarded for ViewDocumentFragment but is needed for ViewElement.\n\t\tif ( !data.modelRange && conversionApi.consumable.consume( data.viewItem, { name: true } ) ) {\n\t\t\tconst { modelRange, modelCursor } = conversionApi.convertChildren( data.viewItem, data.modelCursor );\n\n\t\t\tdata.modelRange = modelRange;\n\t\t\tdata.modelCursor = modelCursor;\n\t\t}\n\t};\n}\n\n/**\n * Function factory, creates a converter that converts {@link module:engine/view/text~Text} to {@link module:engine/model/text~Text}.\n *\n * @returns {Function} {@link module:engine/view/text~Text View text} converter.\n */\nexport function convertText() {\n\treturn ( evt, data, conversionApi ) => {\n\t\tif ( conversionApi.schema.checkChild( data.modelCursor, '$text' ) ) {\n\t\t\tif ( conversionApi.consumable.consume( data.viewItem ) ) {\n\t\t\t\tconst text = conversionApi.writer.createText( data.viewItem.data );\n\n\t\t\t\tconversionApi.writer.insert( text, data.modelCursor );\n\n\t\t\t\tdata.modelRange = ModelRange._createFromPositionAndShift( data.modelCursor, text.offsetSize );\n\t\t\t\tdata.modelCursor = data.modelRange.end;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * Function factory, creates a callback function which converts a {@link module:engine/view/selection~Selection\n * view selection} taken from the {@link module:engine/view/document~Document#event:selectionChange} event\n * and sets in on the {@link module:engine/model/document~Document#selection model}.\n *\n * **Note**: because there is no view selection change dispatcher nor any other advanced view selection to model\n * conversion mechanism, the callback should be set directly on view document.\n *\n *\t\tview.document.on( 'selectionChange', convertSelectionChange( modelDocument, mapper ) );\n *\n * @param {module:engine/model/model~Model} model Data model.\n * @param {module:engine/conversion/mapper~Mapper} mapper Conversion mapper.\n * @returns {Function} {@link module:engine/view/document~Document#event:selectionChange} callback function.\n */\nexport function convertSelectionChange( model, mapper ) {\n\treturn ( evt, data ) => {\n\t\tconst viewSelection = data.newSelection;\n\t\tconst modelSelection = new ModelSelection();\n\n\t\tconst ranges = [];\n\n\t\tfor ( const viewRange of viewSelection.getRanges() ) {\n\t\t\tranges.push( mapper.toModelRange( viewRange ) );\n\t\t}\n\n\t\tmodelSelection.setTo( ranges, { backward: viewSelection.isBackward } );\n\n\t\tif ( !modelSelection.isEqual( model.document.selection ) ) {\n\t\t\tmodel.change( writer => {\n\t\t\t\twriter.setSelection( modelSelection );\n\t\t\t} );\n\t\t}\n\t};\n}\n\n// View element to model element conversion helper.\n//\n// See {@link ~UpcastHelpers#elementToElement `.elementToElement()` upcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {module:engine/view/matcher~MatcherPattern} [config.view] Pattern matching all view elements which should be converted. If not\n// set, the converter will fire for every view element.\n// @param {String|module:engine/model/element~Element|Function} config.model Name of the model element, a model element\n// instance or a function that takes a view element and returns a model element. The model element will be inserted in the model.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n// @returns {Function} Conversion helper.\nfunction upcastElementToElement( config ) {\n\tconfig = cloneDeep( config );\n\n\tconst converter = prepareToElementConverter( config );\n\n\tconst elementName = getViewElementNameFromConfig( config.view );\n\tconst eventName = elementName ? 'element:' + elementName : 'element';\n\n\treturn dispatcher => {\n\t\tdispatcher.on( eventName, converter, { priority: config.converterPriority || 'normal' } );\n\t};\n}\n\n// View element to model attribute conversion helper.\n//\n// See {@link ~UpcastHelpers#elementToAttribute `.elementToAttribute()` upcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {module:engine/view/matcher~MatcherPattern} config.view Pattern matching all view elements which should be converted.\n// @param {String|Object} config.model Model attribute key or an object with `key` and `value` properties, describing\n// the model attribute. `value` property may be set as a function that takes a view element and returns the value.\n// If `String` is given, the model attribute value will be set to `true`.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='low'] Converter priority.\n// @returns {Function} Conversion helper.\nfunction upcastElementToAttribute( config ) {\n\tconfig = cloneDeep( config );\n\n\tnormalizeModelAttributeConfig( config );\n\n\tconst converter = prepareToAttributeConverter( config, false );\n\n\tconst elementName = getViewElementNameFromConfig( config.view );\n\tconst eventName = elementName ? 'element:' + elementName : 'element';\n\n\treturn dispatcher => {\n\t\tdispatcher.on( eventName, converter, { priority: config.converterPriority || 'low' } );\n\t};\n}\n\n// View attribute to model attribute conversion helper.\n//\n// See {@link ~UpcastHelpers#attributeToAttribute `.attributeToAttribute()` upcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {String|Object} config.view Specifies which view attribute will be converted. If a `String` is passed,\n// attributes with given key will be converted. If an `Object` is passed, it must have a required `key` property,\n// specifying view attribute key, and may have an optional `value` property, specifying view attribute value and optional `name`\n// property specifying a view element name from/on which the attribute should be converted. `value` can be given as a `String`,\n// a `RegExp` or a function callback, that takes view attribute value as the only parameter and returns `Boolean`.\n// @param {String|Object} config.model Model attribute key or an object with `key` and `value` properties, describing\n// the model attribute. `value` property may be set as a function that takes a view element and returns the value.\n// If `String` is given, the model attribute value will be same as view attribute value.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='low'] Converter priority.\n// @returns {Function} Conversion helper.\nfunction upcastAttributeToAttribute( config ) {\n\tconfig = cloneDeep( config );\n\n\tlet viewKey = null;\n\n\tif ( typeof config.view == 'string' || config.view.key ) {\n\t\tviewKey = normalizeViewAttributeKeyValueConfig( config );\n\t}\n\n\tnormalizeModelAttributeConfig( config, viewKey );\n\n\tconst converter = prepareToAttributeConverter( config, true );\n\n\treturn dispatcher => {\n\t\tdispatcher.on( 'element', converter, { priority: config.converterPriority || 'low' } );\n\t};\n}\n\n// View element to model marker conversion helper.\n//\n// See {@link ~UpcastHelpers#elementToMarker `.elementToMarker()` upcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {module:engine/view/matcher~MatcherPattern} config.view Pattern matching all view elements which should be converted.\n// @param {String|Function} config.model Name of the model marker, or a function that takes a view element and returns\n// a model marker name.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n// @returns {Function} Conversion helper.\nfunction upcastElementToMarker( config ) {\n\tconfig = cloneDeep( config );\n\n\tnormalizeToMarkerConfig( config );\n\n\treturn upcastElementToElement( config );\n}\n\n// Helper function for from-view-element conversion. Checks if `config.view` directly specifies converted view element's name\n// and if so, returns it.\n//\n// @param {Object} config Conversion view config.\n// @returns {String|null} View element name or `null` if name is not directly set.\nfunction getViewElementNameFromConfig( viewConfig ) {\n\tif ( typeof viewConfig == 'string' ) {\n\t\treturn viewConfig;\n\t}\n\n\tif ( typeof viewConfig == 'object' && typeof viewConfig.name == 'string' ) {\n\t\treturn viewConfig.name;\n\t}\n\n\treturn null;\n}\n\n// Helper for to-model-element conversion. Takes a config object and returns a proper converter function.\n//\n// @param {Object} config Conversion configuration.\n// @returns {Function} View to model converter.\nfunction prepareToElementConverter( config ) {\n\tconst matcher = config.view ? new Matcher( config.view ) : null;\n\n\treturn ( evt, data, conversionApi ) => {\n\t\tlet match = {};\n\n\t\t// If `config.view` has not been passed do not try matching. In this case, the converter should fire for all elements.\n\t\tif ( matcher ) {\n\t\t\t// This will be usually just one pattern but we support matchers with many patterns too.\n\t\t\tconst matcherResult = matcher.match( data.viewItem );\n\n\t\t\t// If there is no match, this callback should not do anything.\n\t\t\tif ( !matcherResult ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmatch = matcherResult.match;\n\t\t}\n\n\t\t// Force consuming element's name.\n\t\tmatch.name = true;\n\n\t\t// Create model element basing on config.\n\t\tconst modelElement = getModelElement( config.model, data.viewItem, conversionApi.writer );\n\n\t\t// Do not convert if element building function returned falsy value.\n\t\tif ( !modelElement ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// When element was already consumed then skip it.\n\t\tif ( !conversionApi.consumable.test( data.viewItem, match ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Find allowed parent for element that we are going to insert.\n\t\t// If current parent does not allow to insert element but one of the ancestors does\n\t\t// then split nodes to allowed parent.\n\t\tconst splitResult = conversionApi.splitToAllowedParent( modelElement, data.modelCursor );\n\n\t\t// When there is no split result it means that we can't insert element to model tree, so let's skip it.\n\t\tif ( !splitResult ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Insert element on allowed position.\n\t\tconversionApi.writer.insert( modelElement, splitResult.position );\n\n\t\t// Convert children and insert to element.\n\t\tconversionApi.convertChildren( data.viewItem, conversionApi.writer.createPositionAt( modelElement, 0 ) );\n\n\t\t// Consume appropriate value from consumable values list.\n\t\tconversionApi.consumable.consume( data.viewItem, match );\n\n\t\tconst parts = conversionApi.getSplitParts( modelElement );\n\n\t\t// Set conversion result range.\n\t\tdata.modelRange = new ModelRange(\n\t\t\tconversionApi.writer.createPositionBefore( modelElement ),\n\t\t\tconversionApi.writer.createPositionAfter( parts[ parts.length - 1 ] )\n\t\t);\n\n\t\t// Now we need to check where the `modelCursor` should be.\n\t\tif ( splitResult.cursorParent ) {\n\t\t\t// If we split parent to insert our element then we want to continue conversion in the new part of the split parent.\n\t\t\t//\n\t\t\t// before: <allowed><notAllowed>foo[]</notAllowed></allowed>\n\t\t\t// after:  <allowed><notAllowed>foo</notAllowed><converted></converted><notAllowed>[]</notAllowed></allowed>\n\n\t\t\tdata.modelCursor = conversionApi.writer.createPositionAt( splitResult.cursorParent, 0 );\n\t\t} else {\n\t\t\t// Otherwise just continue after inserted element.\n\n\t\t\tdata.modelCursor = data.modelRange.end;\n\t\t}\n\t};\n}\n\n// Helper function for upcasting-to-element converter. Takes the model configuration, the converted view element\n// and a writer instance and returns a model element instance to be inserted in the model.\n//\n// @param {String|Function|module:engine/model/element~Element} model Model conversion configuration.\n// @param {module:engine/view/node~Node} input The converted view node.\n// @param {module:engine/model/writer~Writer} writer A writer instance to use to create the model element.\nfunction getModelElement( model, input, writer ) {\n\tif ( model instanceof Function ) {\n\t\treturn model( input, writer );\n\t} else {\n\t\treturn writer.createElement( model );\n\t}\n}\n\n// Helper function view-attribute-to-model-attribute helper. Normalizes `config.view` which was set as `String` or\n// as an `Object` with `key`, `value` and `name` properties. Normalized `config.view` has is compatible with\n// {@link module:engine/view/matcher~MatcherPattern}.\n//\n// @param {Object} config Conversion config.\n// @returns {String} Key of the converted view attribute.\nfunction normalizeViewAttributeKeyValueConfig( config ) {\n\tif ( typeof config.view == 'string' ) {\n\t\tconfig.view = { key: config.view };\n\t}\n\n\tconst key = config.view.key;\n\tlet normalized;\n\n\tif ( key == 'class' || key == 'style' ) {\n\t\tconst keyName = key == 'class' ? 'classes' : 'styles';\n\n\t\tnormalized = {\n\t\t\t[ keyName ]: config.view.value\n\t\t};\n\t} else {\n\t\tconst value = typeof config.view.value == 'undefined' ? /[\\s\\S]*/ : config.view.value;\n\n\t\tnormalized = {\n\t\t\tattributes: {\n\t\t\t\t[ key ]: value\n\t\t\t}\n\t\t};\n\t}\n\n\tif ( config.view.name ) {\n\t\tnormalized.name = config.view.name;\n\t}\n\n\tconfig.view = normalized;\n\n\treturn key;\n}\n\n// Helper function that normalizes `config.model` in from-model-attribute conversion. `config.model` can be set\n// as a `String`, an `Object` with only `key` property or an `Object` with `key` and `value` properties. Normalized\n// `config.model` is an `Object` with `key` and `value` properties.\n//\n// @param {Object} config Conversion config.\n// @param {String} viewAttributeKeyToCopy Key of the converted view attribute. If it is set, model attribute value\n// will be equal to view attribute value.\nfunction normalizeModelAttributeConfig( config, viewAttributeKeyToCopy = null ) {\n\tconst defaultModelValue = viewAttributeKeyToCopy === null ? true : viewElement => viewElement.getAttribute( viewAttributeKeyToCopy );\n\n\tconst key = typeof config.model != 'object' ? config.model : config.model.key;\n\tconst value = typeof config.model != 'object' || typeof config.model.value == 'undefined' ? defaultModelValue : config.model.value;\n\n\tconfig.model = { key, value };\n}\n\n// Helper for to-model-attribute conversion. Takes the model attribute name and conversion configuration and returns\n// a proper converter function.\n//\n// @param {String} modelAttributeKey The key of the model attribute to set on a model node.\n// @param {Object|Array.<Object>} config Conversion configuration. It is possible to provide multiple configurations in an array.\n// @param {Boolean} shallow If set to `true` the attribute will be set only on top-level nodes. Otherwise, it will be set\n// on all elements in the range.\nfunction prepareToAttributeConverter( config, shallow ) {\n\tconst matcher = new Matcher( config.view );\n\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst match = matcher.match( data.viewItem );\n\n\t\t// If there is no match, this callback should not do anything.\n\t\tif ( !match ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst modelKey = config.model.key;\n\t\tconst modelValue = typeof config.model.value == 'function' ? config.model.value( data.viewItem ) : config.model.value;\n\n\t\t// Do not convert if attribute building function returned falsy value.\n\t\tif ( modelValue === null ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( onlyViewNameIsDefined( config.view, data.viewItem ) ) {\n\t\t\tmatch.match.name = true;\n\t\t} else {\n\t\t\t// Do not test or consume `name` consumable.\n\t\t\tdelete match.match.name;\n\t\t}\n\n\t\t// Try to consume appropriate values from consumable values list.\n\t\tif ( !conversionApi.consumable.test( data.viewItem, match.match ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Since we are converting to attribute we need an range on which we will set the attribute.\n\t\t// If the range is not created yet, we will create it.\n\t\tif ( !data.modelRange ) {\n\t\t\t// Convert children and set conversion result as a current data.\n\t\t\tdata = Object.assign( data, conversionApi.convertChildren( data.viewItem, data.modelCursor ) );\n\t\t}\n\n\t\t// Set attribute on current `output`. `Schema` is checked inside this helper function.\n\t\tconst attributeWasSet = setAttributeOn( data.modelRange, { key: modelKey, value: modelValue }, shallow, conversionApi );\n\n\t\tif ( attributeWasSet ) {\n\t\t\tconversionApi.consumable.consume( data.viewItem, match.match );\n\t\t}\n\t};\n}\n\n// Helper function that checks if element name should be consumed in attribute converters.\n//\n// @param {Object} config Conversion view config.\n// @returns {Boolean}\nfunction onlyViewNameIsDefined( viewConfig, viewItem ) {\n\t// https://github.com/ckeditor/ckeditor5-engine/issues/1786\n\tconst configToTest = typeof viewConfig == 'function' ? viewConfig( viewItem ) : viewConfig;\n\n\tif ( typeof configToTest == 'object' && !getViewElementNameFromConfig( configToTest ) ) {\n\t\treturn false;\n\t}\n\n\treturn !configToTest.classes && !configToTest.attributes && !configToTest.styles;\n}\n\n// Helper function for to-model-attribute converter. Sets model attribute on given range. Checks {@link module:engine/model/schema~Schema}\n// to ensure proper model structure.\n//\n// @param {module:engine/model/range~Range} modelRange Model range on which attribute should be set.\n// @param {Object} modelAttribute Model attribute to set.\n// @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion API.\n// @param {Boolean} shallow If set to `true` the attribute will be set only on top-level nodes. Otherwise, it will be set\n// on all elements in the range.\n// @returns {Boolean} `true` if attribute was set on at least one node from given `modelRange`.\nfunction setAttributeOn( modelRange, modelAttribute, shallow, conversionApi ) {\n\tlet result = false;\n\n\t// Set attribute on each item in range according to Schema.\n\tfor ( const node of Array.from( modelRange.getItems( { shallow } ) ) ) {\n\t\tif ( conversionApi.schema.checkAttribute( node, modelAttribute.key ) ) {\n\t\t\tconversionApi.writer.setAttribute( modelAttribute.key, modelAttribute.value, node );\n\n\t\t\tresult = true;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n// Helper function for upcasting-to-marker conversion. Takes the config in a format requested by `upcastElementToMarker()`\n// function and converts it to a format that is supported by `_upcastElementToElement()` function.\n//\n// @param {Object} config Conversion configuration.\nfunction normalizeToMarkerConfig( config ) {\n\tconst oldModel = config.model;\n\n\tconfig.model = ( viewElement, modelWriter ) => {\n\t\tconst markerName = typeof oldModel == 'string' ? oldModel : oldModel( viewElement );\n\n\t\treturn modelWriter.createElement( '$marker', { 'data-name': markerName } );\n\t};\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/controller/editingcontroller\n */\n\nimport RootEditableElement from '../view/rooteditableelement';\nimport View from '../view/view';\nimport Mapper from '../conversion/mapper';\nimport DowncastDispatcher from '../conversion/downcastdispatcher';\nimport { clearAttributes, convertCollapsedSelection, convertRangeSelection, insertText, remove } from '../conversion/downcasthelpers';\n\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport { convertSelectionChange } from '../conversion/upcasthelpers';\n\n// @if CK_DEBUG_ENGINE // const { dumpTrees, initDocumentDumping } = require( '../dev-utils/utils' );\n\n/**\n * Controller for the editing pipeline. The editing pipeline controls {@link ~EditingController#model model} rendering,\n * including selection handling. It also creates the {@link ~EditingController#view view} which builds a\n * browser-independent virtualization over the DOM elements. The editing controller also attaches default converters.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class EditingController {\n\t/**\n\t * Creates an editing controller instance.\n\t *\n\t * @param {module:engine/model/model~Model} model Editing model.\n\t */\n\tconstructor( model ) {\n\t\t/**\n\t\t * Editor model.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/model~Model}\n\t\t */\n\t\tthis.model = model;\n\n\t\t/**\n\t\t * Editing view controller.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/view~View}\n\t\t */\n\t\tthis.view = new View();\n\n\t\t/**\n\t\t * Mapper which describes the model-view binding.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/conversion/mapper~Mapper}\n\t\t */\n\t\tthis.mapper = new Mapper();\n\n\t\t/**\n\t\t * Downcast dispatcher that converts changes from the model to {@link #view the editing view}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/conversion/downcastdispatcher~DowncastDispatcher} #downcastDispatcher\n\t\t */\n\t\tthis.downcastDispatcher = new DowncastDispatcher( {\n\t\t\tmapper: this.mapper\n\t\t} );\n\n\t\tconst doc = this.model.document;\n\t\tconst selection = doc.selection;\n\t\tconst markers = this.model.markers;\n\n\t\t// When plugins listen on model changes (on selection change, post fixers, etc) and change the view as a result of\n\t\t// model's change, they might trigger view rendering before the conversion is completed (e.g. before the selection\n\t\t// is converted). We disable rendering for the length of the outermost model change() block to prevent that.\n\t\t//\n\t\t// See https://github.com/ckeditor/ckeditor5-engine/issues/1528\n\t\tthis.listenTo( this.model, '_beforeChanges', () => {\n\t\t\tthis.view._disableRendering( true );\n\t\t}, { priority: 'highest' } );\n\n\t\tthis.listenTo( this.model, '_afterChanges', () => {\n\t\t\tthis.view._disableRendering( false );\n\t\t}, { priority: 'lowest' } );\n\n\t\t// Whenever model document is changed, convert those changes to the view (using model.Document#differ).\n\t\t// Do it on 'low' priority, so changes are converted after other listeners did their job.\n\t\t// Also convert model selection.\n\t\tthis.listenTo( doc, 'change', () => {\n\t\t\tthis.view.change( writer => {\n\t\t\t\tthis.downcastDispatcher.convertChanges( doc.differ, markers, writer );\n\t\t\t\tthis.downcastDispatcher.convertSelection( selection, markers, writer );\n\t\t\t} );\n\t\t}, { priority: 'low' } );\n\n\t\t// Convert selection from the view to the model when it changes in the view.\n\t\tthis.listenTo( this.view.document, 'selectionChange', convertSelectionChange( this.model, this.mapper ) );\n\n\t\t// Attach default model converters.\n\t\tthis.downcastDispatcher.on( 'insert:$text', insertText(), { priority: 'lowest' } );\n\t\tthis.downcastDispatcher.on( 'remove', remove(), { priority: 'low' } );\n\n\t\t// Attach default model selection converters.\n\t\tthis.downcastDispatcher.on( 'selection', clearAttributes(), { priority: 'low' } );\n\t\tthis.downcastDispatcher.on( 'selection', convertRangeSelection(), { priority: 'low' } );\n\t\tthis.downcastDispatcher.on( 'selection', convertCollapsedSelection(), { priority: 'low' } );\n\n\t\t// Binds {@link module:engine/view/document~Document#roots view roots collection} to\n\t\t// {@link module:engine/model/document~Document#roots model roots collection} so creating\n\t\t// model root automatically creates corresponding view root.\n\t\tthis.view.document.roots.bindTo( this.model.document.roots ).using( root => {\n\t\t\t// $graveyard is a special root that has no reflection in the view.\n\t\t\tif ( root.rootName == '$graveyard' ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst viewRoot = new RootEditableElement( root.name );\n\n\t\t\tviewRoot.rootName = root.rootName;\n\t\t\tviewRoot._document = this.view.document;\n\t\t\tthis.mapper.bindElements( root, viewRoot );\n\n\t\t\treturn viewRoot;\n\t\t} );\n\n\t\t// @if CK_DEBUG_ENGINE // initDocumentDumping( this.model.document );\n\t\t// @if CK_DEBUG_ENGINE // initDocumentDumping( this.view.document );\n\n\t\t// @if CK_DEBUG_ENGINE // dumpTrees( this.model.document, this.model.document.version );\n\t\t// @if CK_DEBUG_ENGINE // dumpTrees( this.view.document, this.model.document.version );\n\n\t\t// @if CK_DEBUG_ENGINE // this.model.document.on( 'change', () => {\n\t\t// @if CK_DEBUG_ENGINE //\tdumpTrees( this.view.document, this.model.document.version );\n\t\t// @if CK_DEBUG_ENGINE // }, { priority: 'lowest' } );\n\t}\n\n\t/**\n\t * Removes all event listeners attached to the `EditingController`. Destroys all objects created\n\t * by `EditingController` that need to be destroyed.\n\t */\n\tdestroy() {\n\t\tthis.view.destroy();\n\t\tthis.stopListening();\n\t}\n}\n\nmix( EditingController, ObservableMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/commandcollection\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Collection of commands. Its instance is available in {@link module:core/editor/editor~Editor#commands `editor.commands`}.\n */\nexport default class CommandCollection {\n\t/**\n\t * Creates collection instance.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Command map.\n\t\t *\n\t\t * @private\n\t\t * @member {Map}\n\t\t */\n\t\tthis._commands = new Map();\n\t}\n\n\t/**\n\t * Registers a new command.\n\t *\n\t * @param {String} commandName The name of the command.\n\t * @param {module:core/command~Command} command\n\t */\n\tadd( commandName, command ) {\n\t\tthis._commands.set( commandName, command );\n\t}\n\n\t/**\n\t * Retrieves a command from the collection.\n\t *\n\t * @param {String} commandName The name of the command.\n\t * @returns {module:core/command~Command}\n\t */\n\tget( commandName ) {\n\t\treturn this._commands.get( commandName );\n\t}\n\n\t/**\n\t * Executes a command.\n\t *\n\t * @param {String} commandName The name of the command.\n\t * @param {*} [...commandParams] Command parameters.\n\t */\n\texecute( commandName, ...args ) {\n\t\tconst command = this.get( commandName );\n\n\t\tif ( !command ) {\n\t\t\t/**\n\t\t\t * Command does not exist.\n\t\t\t *\n\t\t\t * @error commandcollection-command-not-found\n\t\t\t * @param {String} commandName Name of the command.\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'commandcollection-command-not-found: Command does not exist.', this, { commandName } );\n\t\t}\n\n\t\tcommand.execute( ...args );\n\t}\n\n\t/**\n\t * Returns iterator of command names.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\t* names() {\n\t\tyield* this._commands.keys();\n\t}\n\n\t/**\n\t * Returns iterator of command instances.\n\t *\n\t * @returns {Iterable.<module:core/command~Command>}\n\t */\n\t* commands() {\n\t\tyield* this._commands.values();\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * Returns `[ commandName, commandInstance ]` pairs.\n\t *\n\t * @returns {Iterable.<Array>}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this._commands[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Destroys all collection commands.\n\t */\n\tdestroy() {\n\t\tfor ( const command of this.commands() ) {\n\t\t\tcommand.destroy();\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/conversion/viewconsumable\n */\n\nimport { isArray } from 'lodash-es';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport StylesMap from '../view/stylesmap';\n\n/**\n * Class used for handling consumption of view {@link module:engine/view/element~Element elements},\n * {@link module:engine/view/text~Text text nodes} and {@link module:engine/view/documentfragment~DocumentFragment document fragments}.\n * Element's name and its parts (attributes, classes and styles) can be consumed separately. Consuming an element's name\n * does not consume its attributes, classes and styles.\n * To add items for consumption use {@link module:engine/conversion/viewconsumable~ViewConsumable#add add method}.\n * To test items use {@link module:engine/conversion/viewconsumable~ViewConsumable#test test method}.\n * To consume items use {@link module:engine/conversion/viewconsumable~ViewConsumable#consume consume method}.\n * To revert already consumed items use {@link module:engine/conversion/viewconsumable~ViewConsumable#revert revert method}.\n *\n *\t\tviewConsumable.add( element, { name: true } ); // Adds element's name as ready to be consumed.\n *\t\tviewConsumable.add( textNode ); // Adds text node for consumption.\n *\t\tviewConsumable.add( docFragment ); // Adds document fragment for consumption.\n *\t\tviewConsumable.test( element, { name: true }  ); // Tests if element's name can be consumed.\n *\t\tviewConsumable.test( textNode ); // Tests if text node can be consumed.\n *\t\tviewConsumable.test( docFragment ); // Tests if document fragment can be consumed.\n *\t\tviewConsumable.consume( element, { name: true }  ); // Consume element's name.\n *\t\tviewConsumable.consume( textNode ); // Consume text node.\n *\t\tviewConsumable.consume( docFragment ); // Consume document fragment.\n *\t\tviewConsumable.revert( element, { name: true }  ); // Revert already consumed element's name.\n *\t\tviewConsumable.revert( textNode ); // Revert already consumed text node.\n *\t\tviewConsumable.revert( docFragment ); // Revert already consumed document fragment.\n */\nexport default class ViewConsumable {\n\t/**\n\t * Creates new ViewConsumable.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Map of consumable elements. If {@link module:engine/view/element~Element element} is used as a key,\n\t\t * {@link module:engine/conversion/viewconsumable~ViewElementConsumables ViewElementConsumables} instance is stored as value.\n\t\t * For {@link module:engine/view/text~Text text nodes} and\n\t\t * {@link module:engine/view/documentfragment~DocumentFragment document fragments} boolean value is stored as value.\n\t\t *\n\t\t * @protected\n\t\t * @member {Map.<module:engine/conversion/viewconsumable~ViewElementConsumables|Boolean>}\n\t\t*/\n\t\tthis._consumables = new Map();\n\t}\n\n\t/**\n\t * Adds {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\n\t * {@link module:engine/view/documentfragment~DocumentFragment document fragment} as ready to be consumed.\n\t *\n\t *\t\tviewConsumable.add( p, { name: true } ); // Adds element's name to consume.\n\t *\t\tviewConsumable.add( p, { attributes: 'name' } ); // Adds element's attribute.\n\t *\t\tviewConsumable.add( p, { classes: 'foobar' } ); // Adds element's class.\n\t *\t\tviewConsumable.add( p, { styles: 'color' } ); // Adds element's style\n\t *\t\tviewConsumable.add( p, { attributes: 'name', styles: 'color' } ); // Adds attribute and style.\n\t *\t\tviewConsumable.add( p, { classes: [ 'baz', 'bar' ] } ); // Multiple consumables can be provided.\n\t *\t\tviewConsumable.add( textNode ); // Adds text node to consume.\n\t *\t\tviewConsumable.add( docFragment ); // Adds document fragment to consume.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `viewconsumable-invalid-attribute` when `class` or `style`\n\t * attribute is provided - it should be handled separately by providing actual style/class.\n\t *\n\t *\t\tviewConsumable.add( p, { attributes: 'style' } ); // This call will throw an exception.\n\t *\t\tviewConsumable.add( p, { styles: 'color' } ); // This is properly handled style.\n\t *\n\t * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\n\t * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\n\t * @param {Boolean} consumables.name If set to true element's name will be included.\n\t * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names.\n\t * @param {String|Array.<String>} consumables.classes Class name or array of class names.\n\t * @param {String|Array.<String>} consumables.styles Style name or array of style names.\n\t */\n\tadd( element, consumables ) {\n\t\tlet elementConsumables;\n\n\t\t// For text nodes and document fragments just mark them as consumable.\n\t\tif ( element.is( 'text' ) || element.is( 'documentFragment' ) ) {\n\t\t\tthis._consumables.set( element, true );\n\n\t\t\treturn;\n\t\t}\n\n\t\t// For elements create new ViewElementConsumables or update already existing one.\n\t\tif ( !this._consumables.has( element ) ) {\n\t\t\telementConsumables = new ViewElementConsumables();\n\t\t\tthis._consumables.set( element, elementConsumables );\n\t\t} else {\n\t\t\telementConsumables = this._consumables.get( element );\n\t\t}\n\n\t\telementConsumables.add( consumables );\n\t}\n\n\t/**\n\t * Tests if {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\n\t * {@link module:engine/view/documentfragment~DocumentFragment document fragment} can be consumed.\n\t * It returns `true` when all items included in method's call can be consumed. Returns `false` when\n\t * first already consumed item is found and `null` when first non-consumable item is found.\n\t *\n\t *\t\tviewConsumable.test( p, { name: true } ); // Tests element's name.\n\t *\t\tviewConsumable.test( p, { attributes: 'name' } ); // Tests attribute.\n\t *\t\tviewConsumable.test( p, { classes: 'foobar' } ); // Tests class.\n\t *\t\tviewConsumable.test( p, { styles: 'color' } ); // Tests style.\n\t *\t\tviewConsumable.test( p, { attributes: 'name', styles: 'color' } ); // Tests attribute and style.\n\t *\t\tviewConsumable.test( p, { classes: [ 'baz', 'bar' ] } ); // Multiple consumables can be tested.\n\t *\t\tviewConsumable.test( textNode ); // Tests text node.\n\t *\t\tviewConsumable.test( docFragment ); // Tests document fragment.\n\t *\n\t * Testing classes and styles as attribute will test if all added classes/styles can be consumed.\n\t *\n\t *\t\tviewConsumable.test( p, { attributes: 'class' } ); // Tests if all added classes can be consumed.\n\t *\t\tviewConsumable.test( p, { attributes: 'style' } ); // Tests if all added styles can be consumed.\n\t *\n\t * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\n\t * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\n\t * @param {Boolean} consumables.name If set to true element's name will be included.\n\t * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names.\n\t * @param {String|Array.<String>} consumables.classes Class name or array of class names.\n\t * @param {String|Array.<String>} consumables.styles Style name or array of style names.\n\t * @returns {Boolean|null} Returns `true` when all items included in method's call can be consumed. Returns `false`\n\t * when first already consumed item is found and `null` when first non-consumable item is found.\n\t */\n\ttest( element, consumables ) {\n\t\tconst elementConsumables = this._consumables.get( element );\n\n\t\tif ( elementConsumables === undefined ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// For text nodes and document fragments return stored boolean value.\n\t\tif ( element.is( 'text' ) || element.is( 'documentFragment' ) ) {\n\t\t\treturn elementConsumables;\n\t\t}\n\n\t\t// For elements test consumables object.\n\t\treturn elementConsumables.test( consumables );\n\t}\n\n\t/**\n\t * Consumes {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\n\t * {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\n\t * It returns `true` when all items included in method's call can be consumed, otherwise returns `false`.\n\t *\n\t *\t\tviewConsumable.consume( p, { name: true } ); // Consumes element's name.\n\t *\t\tviewConsumable.consume( p, { attributes: 'name' } ); // Consumes element's attribute.\n\t *\t\tviewConsumable.consume( p, { classes: 'foobar' } ); // Consumes element's class.\n\t *\t\tviewConsumable.consume( p, { styles: 'color' } ); // Consumes element's style.\n\t *\t\tviewConsumable.consume( p, { attributes: 'name', styles: 'color' } ); // Consumes attribute and style.\n\t *\t\tviewConsumable.consume( p, { classes: [ 'baz', 'bar' ] } ); // Multiple consumables can be consumed.\n\t *\t\tviewConsumable.consume( textNode ); // Consumes text node.\n\t *\t\tviewConsumable.consume( docFragment ); // Consumes document fragment.\n\t *\n\t * Consuming classes and styles as attribute will test if all added classes/styles can be consumed.\n\t *\n\t *\t\tviewConsumable.consume( p, { attributes: 'class' } ); // Consume only if all added classes can be consumed.\n\t *\t\tviewConsumable.consume( p, { attributes: 'style' } ); // Consume only if all added styles can be consumed.\n\t *\n\t * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\n\t * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\n\t * @param {Boolean} consumables.name If set to true element's name will be included.\n\t * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names.\n\t * @param {String|Array.<String>} consumables.classes Class name or array of class names.\n\t * @param {String|Array.<String>} consumables.styles Style name or array of style names.\n\t * @returns {Boolean} Returns `true` when all items included in method's call can be consumed,\n\t * otherwise returns `false`.\n\t */\n\tconsume( element, consumables ) {\n\t\tif ( this.test( element, consumables ) ) {\n\t\t\tif ( element.is( 'text' ) || element.is( 'documentFragment' ) ) {\n\t\t\t\t// For text nodes and document fragments set value to false.\n\t\t\t\tthis._consumables.set( element, false );\n\t\t\t} else {\n\t\t\t\t// For elements - consume consumables object.\n\t\t\t\tthis._consumables.get( element ).consume( consumables );\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Reverts {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\n\t * {@link module:engine/view/documentfragment~DocumentFragment document fragment} so they can be consumed once again.\n\t * Method does not revert items that were never previously added for consumption, even if they are included in\n\t * method's call.\n\t *\n\t *\t\tviewConsumable.revert( p, { name: true } ); // Reverts element's name.\n\t *\t\tviewConsumable.revert( p, { attributes: 'name' } ); // Reverts element's attribute.\n\t *\t\tviewConsumable.revert( p, { classes: 'foobar' } ); // Reverts element's class.\n\t *\t\tviewConsumable.revert( p, { styles: 'color' } ); // Reverts element's style.\n\t *\t\tviewConsumable.revert( p, { attributes: 'name', styles: 'color' } ); // Reverts attribute and style.\n\t *\t\tviewConsumable.revert( p, { classes: [ 'baz', 'bar' ] } ); // Multiple names can be reverted.\n\t *\t\tviewConsumable.revert( textNode ); // Reverts text node.\n\t *\t\tviewConsumable.revert( docFragment ); // Reverts document fragment.\n\t *\n\t * Reverting classes and styles as attribute will revert all classes/styles that were previously added for\n\t * consumption.\n\t *\n\t *\t\tviewConsumable.revert( p, { attributes: 'class' } ); // Reverts all classes added for consumption.\n\t *\t\tviewConsumable.revert( p, { attributes: 'style' } ); // Reverts all styles added for consumption.\n\t *\n\t * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\n\t * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\n\t * @param {Boolean} consumables.name If set to true element's name will be included.\n\t * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names.\n\t * @param {String|Array.<String>} consumables.classes Class name or array of class names.\n\t * @param {String|Array.<String>} consumables.styles Style name or array of style names.\n\t */\n\trevert( element, consumables ) {\n\t\tconst elementConsumables = this._consumables.get( element );\n\n\t\tif ( elementConsumables !== undefined ) {\n\t\t\tif ( element.is( 'text' ) || element.is( 'documentFragment' ) ) {\n\t\t\t\t// For text nodes and document fragments - set consumable to true.\n\t\t\t\tthis._consumables.set( element, true );\n\t\t\t} else {\n\t\t\t\t// For elements - revert items from consumables object.\n\t\t\t\telementConsumables.revert( consumables );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates consumable object from {@link module:engine/view/element~Element view element}. Consumable object will include\n\t * element's name and all its attributes, classes and styles.\n\t *\n\t * @static\n\t * @param {module:engine/view/element~Element} element\n\t * @returns {Object} consumables\n\t */\n\tstatic consumablesFromElement( element ) {\n\t\tconst consumables = {\n\t\t\tname: true,\n\t\t\tattributes: [],\n\t\t\tclasses: [],\n\t\t\tstyles: []\n\t\t};\n\n\t\tconst attributes = element.getAttributeKeys();\n\n\t\tfor ( const attribute of attributes ) {\n\t\t\t// Skip classes and styles - will be added separately.\n\t\t\tif ( attribute == 'style' || attribute == 'class' ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconsumables.attributes.push( attribute );\n\t\t}\n\n\t\tconst classes = element.getClassNames();\n\n\t\tfor ( const className of classes ) {\n\t\t\tconsumables.classes.push( className );\n\t\t}\n\n\t\tconst styles = element.getStyleNames();\n\n\t\tfor ( const style of styles ) {\n\t\t\tconsumables.styles.push( style );\n\t\t}\n\n\t\treturn consumables;\n\t}\n\n\t/**\n\t * Creates {@link module:engine/conversion/viewconsumable~ViewConsumable ViewConsumable} instance from\n\t * {@link module:engine/view/node~Node node} or {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\n\t * Instance will contain all elements, child nodes, attributes, styles and classes added for consumption.\n\t *\n\t * @static\n\t * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} from View node or document fragment\n\t * from which `ViewConsumable` will be created.\n\t * @param {module:engine/conversion/viewconsumable~ViewConsumable} [instance] If provided, given `ViewConsumable` instance will be used\n\t * to add all consumables. It will be returned instead of a new instance.\n\t */\n\tstatic createFrom( from, instance ) {\n\t\tif ( !instance ) {\n\t\t\tinstance = new ViewConsumable();\n\t\t}\n\n\t\tif ( from.is( 'text' ) ) {\n\t\t\tinstance.add( from );\n\n\t\t\treturn instance;\n\t\t}\n\n\t\t// Add `from` itself, if it is an element.\n\t\tif ( from.is( 'element' ) ) {\n\t\t\tinstance.add( from, ViewConsumable.consumablesFromElement( from ) );\n\t\t}\n\n\t\tif ( from.is( 'documentFragment' ) ) {\n\t\t\tinstance.add( from );\n\t\t}\n\n\t\tfor ( const child of from.getChildren() ) {\n\t\t\tinstance = ViewConsumable.createFrom( child, instance );\n\t\t}\n\n\t\treturn instance;\n\t}\n}\n\n/**\n * This is a private helper-class for {@link module:engine/conversion/viewconsumable~ViewConsumable}.\n * It represents and manipulates consumable parts of a single {@link module:engine/view/element~Element}.\n *\n * @private\n */\nclass ViewElementConsumables {\n\t/**\n\t * Creates ViewElementConsumables instance.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Flag indicating if name of the element can be consumed.\n\t\t *\n\t\t * @private\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis._canConsumeName = null;\n\n\t\t/**\n\t\t * Contains maps of element's consumables: attributes, classes and styles.\n\t\t *\n\t\t * @private\n\t\t * @member {Object}\n\t\t */\n\t\tthis._consumables = {\n\t\t\tattributes: new Map(),\n\t\t\tstyles: new Map(),\n\t\t\tclasses: new Map()\n\t\t};\n\t}\n\n\t/**\n\t * Adds consumable parts of the {@link module:engine/view/element~Element view element}.\n\t * Element's name itself can be marked to be consumed (when element's name is consumed its attributes, classes and\n\t * styles still could be consumed):\n\t *\n\t *\t\tconsumables.add( { name: true } );\n\t *\n\t * Attributes classes and styles:\n\t *\n\t *\t\tconsumables.add( { attributes: 'title', classes: 'foo', styles: 'color' } );\n\t *\t\tconsumables.add( { attributes: [ 'title', 'name' ], classes: [ 'foo', 'bar' ] );\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `viewconsumable-invalid-attribute` when `class` or `style`\n\t * attribute is provided - it should be handled separately by providing `style` and `class` in consumables object.\n\t *\n\t * @param {Object} consumables Object describing which parts of the element can be consumed.\n\t * @param {Boolean} consumables.name If set to `true` element's name will be added as consumable.\n\t * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names to add as consumable.\n\t * @param {String|Array.<String>} consumables.classes Class name or array of class names to add as consumable.\n\t * @param {String|Array.<String>} consumables.styles Style name or array of style names to add as consumable.\n\t */\n\tadd( consumables ) {\n\t\tif ( consumables.name ) {\n\t\t\tthis._canConsumeName = true;\n\t\t}\n\n\t\tfor ( const type in this._consumables ) {\n\t\t\tif ( type in consumables ) {\n\t\t\t\tthis._add( type, consumables[ type ] );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Tests if parts of the {@link module:engine/view/node~Node view node} can be consumed.\n\t *\n\t * Element's name can be tested:\n\t *\n\t *\t\tconsumables.test( { name: true } );\n\t *\n\t * Attributes classes and styles:\n\t *\n\t *\t\tconsumables.test( { attributes: 'title', classes: 'foo', styles: 'color' } );\n\t *\t\tconsumables.test( { attributes: [ 'title', 'name' ], classes: [ 'foo', 'bar' ] );\n\t *\n\t * @param {Object} consumables Object describing which parts of the element should be tested.\n\t * @param {Boolean} consumables.name If set to `true` element's name will be tested.\n\t * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names to test.\n\t * @param {String|Array.<String>} consumables.classes Class name or array of class names to test.\n\t * @param {String|Array.<String>} consumables.styles Style name or array of style names to test.\n\t * @returns {Boolean|null} `true` when all tested items can be consumed, `null` when even one of the items\n\t * was never marked for consumption and `false` when even one of the items was already consumed.\n\t */\n\ttest( consumables ) {\n\t\t// Check if name can be consumed.\n\t\tif ( consumables.name && !this._canConsumeName ) {\n\t\t\treturn this._canConsumeName;\n\t\t}\n\n\t\tfor ( const type in this._consumables ) {\n\t\t\tif ( type in consumables ) {\n\t\t\t\tconst value = this._test( type, consumables[ type ] );\n\n\t\t\t\tif ( value !== true ) {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Return true only if all can be consumed.\n\t\treturn true;\n\t}\n\n\t/**\n\t * Consumes parts of {@link module:engine/view/element~Element view element}. This function does not check if consumable item\n\t * is already consumed - it consumes all consumable items provided.\n\t * Element's name can be consumed:\n\t *\n\t *\t\tconsumables.consume( { name: true } );\n\t *\n\t * Attributes classes and styles:\n\t *\n\t *\t\tconsumables.consume( { attributes: 'title', classes: 'foo', styles: 'color' } );\n\t *\t\tconsumables.consume( { attributes: [ 'title', 'name' ], classes: [ 'foo', 'bar' ] );\n\t *\n\t * @param {Object} consumables Object describing which parts of the element should be consumed.\n\t * @param {Boolean} consumables.name If set to `true` element's name will be consumed.\n\t * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names to consume.\n\t * @param {String|Array.<String>} consumables.classes Class name or array of class names to consume.\n\t * @param {String|Array.<String>} consumables.styles Style name or array of style names to consume.\n\t */\n\tconsume( consumables ) {\n\t\tif ( consumables.name ) {\n\t\t\tthis._canConsumeName = false;\n\t\t}\n\n\t\tfor ( const type in this._consumables ) {\n\t\t\tif ( type in consumables ) {\n\t\t\t\tthis._consume( type, consumables[ type ] );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Revert already consumed parts of {@link module:engine/view/element~Element view Element}, so they can be consumed once again.\n\t * Element's name can be reverted:\n\t *\n\t *\t\tconsumables.revert( { name: true } );\n\t *\n\t * Attributes classes and styles:\n\t *\n\t *\t\tconsumables.revert( { attributes: 'title', classes: 'foo', styles: 'color' } );\n\t *\t\tconsumables.revert( { attributes: [ 'title', 'name' ], classes: [ 'foo', 'bar' ] );\n\t *\n\t * @param {Object} consumables Object describing which parts of the element should be reverted.\n\t * @param {Boolean} consumables.name If set to `true` element's name will be reverted.\n\t * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names to revert.\n\t * @param {String|Array.<String>} consumables.classes Class name or array of class names to revert.\n\t * @param {String|Array.<String>} consumables.styles Style name or array of style names to revert.\n\t */\n\trevert( consumables ) {\n\t\tif ( consumables.name ) {\n\t\t\tthis._canConsumeName = true;\n\t\t}\n\n\t\tfor ( const type in this._consumables ) {\n\t\t\tif ( type in consumables ) {\n\t\t\t\tthis._revert( type, consumables[ type ] );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Helper method that adds consumables of a given type: attribute, class or style.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `viewconsumable-invalid-attribute` when `class` or `style`\n\t * type is provided - it should be handled separately by providing actual style/class type.\n\t *\n\t * @private\n\t * @param {String} type Type of the consumable item: `attributes`, `classes` or `styles`.\n\t * @param {String|Array.<String>} item Consumable item or array of items.\n\t */\n\t_add( type, item ) {\n\t\tconst items = isArray( item ) ? item : [ item ];\n\t\tconst consumables = this._consumables[ type ];\n\n\t\tfor ( const name of items ) {\n\t\t\tif ( type === 'attributes' && ( name === 'class' || name === 'style' ) ) {\n\t\t\t\t/**\n\t\t\t\t * Class and style attributes should be handled separately in\n\t\t\t\t * {@link module:engine/conversion/viewconsumable~ViewConsumable#add `ViewConsumable#add()`}.\n\t\t\t\t *\n\t\t\t\t * What you have done is trying to use:\n\t\t\t\t *\n\t\t\t\t *\t\tconsumables.add( { attributes: [ 'class', 'style' ] } );\n\t\t\t\t *\n\t\t\t\t * While each class and style should be registered separately:\n\t\t\t\t *\n\t\t\t\t *\t\tconsumables.add( { classes: 'some-class', styles: 'font-weight' } );\n\t\t\t\t *\n\t\t\t\t * @error viewconsumable-invalid-attribute\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'viewconsumable-invalid-attribute: Classes and styles should be handled separately.', this );\n\t\t\t}\n\n\t\t\tconsumables.set( name, true );\n\n\t\t\tif ( type === 'styles' ) {\n\t\t\t\tfor ( const alsoName of StylesMap.getRelatedStyles( name ) ) {\n\t\t\t\t\tconsumables.set( alsoName, true );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Helper method that tests consumables of a given type: attribute, class or style.\n\t *\n\t * @private\n\t * @param {String} type Type of the consumable item: `attributes`, `classes` or `styles`.\n\t * @param {String|Array.<String>} item Consumable item or array of items.\n\t * @returns {Boolean|null} Returns `true` if all items can be consumed, `null` when one of the items cannot be\n\t * consumed and `false` when one of the items is already consumed.\n\t */\n\t_test( type, item ) {\n\t\tconst items = isArray( item ) ? item : [ item ];\n\t\tconst consumables = this._consumables[ type ];\n\n\t\tfor ( const name of items ) {\n\t\t\tif ( type === 'attributes' && ( name === 'class' || name === 'style' ) ) {\n\t\t\t\tconst consumableName = name == 'class' ? 'classes' : 'styles';\n\n\t\t\t\t// Check all classes/styles if class/style attribute is tested.\n\t\t\t\tconst value = this._test( consumableName, [ ...this._consumables[ consumableName ].keys() ] );\n\n\t\t\t\tif ( value !== true ) {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst value = consumables.get( name );\n\t\t\t\t// Return null if attribute is not found.\n\t\t\t\tif ( value === undefined ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tif ( !value ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Helper method that consumes items of a given type: attribute, class or style.\n\t *\n\t * @private\n\t * @param {String} type Type of the consumable item: `attributes`, `classes` or `styles`.\n\t * @param {String|Array.<String>} item Consumable item or array of items.\n\t */\n\t_consume( type, item ) {\n\t\tconst items = isArray( item ) ? item : [ item ];\n\t\tconst consumables = this._consumables[ type ];\n\n\t\tfor ( const name of items ) {\n\t\t\tif ( type === 'attributes' && ( name === 'class' || name === 'style' ) ) {\n\t\t\t\tconst consumableName = name == 'class' ? 'classes' : 'styles';\n\n\t\t\t\t// If class or style is provided for consumption - consume them all.\n\t\t\t\tthis._consume( consumableName, [ ...this._consumables[ consumableName ].keys() ] );\n\t\t\t} else {\n\t\t\t\tconsumables.set( name, false );\n\n\t\t\t\tif ( type == 'styles' ) {\n\t\t\t\t\tfor ( const toConsume of StylesMap.getRelatedStyles( name ) ) {\n\t\t\t\t\t\tconsumables.set( toConsume, false );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Helper method that reverts items of a given type: attribute, class or style.\n\t *\n\t * @private\n\t * @param {String} type Type of the consumable item: `attributes`, `classes` or , `styles`.\n\t * @param {String|Array.<String>} item Consumable item or array of items.\n\t */\n\t_revert( type, item ) {\n\t\tconst items = isArray( item ) ? item : [ item ];\n\t\tconst consumables = this._consumables[ type ];\n\n\t\tfor ( const name of items ) {\n\t\t\tif ( type === 'attributes' && ( name === 'class' || name === 'style' ) ) {\n\t\t\t\tconst consumableName = name == 'class' ? 'classes' : 'styles';\n\n\t\t\t\t// If class or style is provided for reverting - revert them all.\n\t\t\t\tthis._revert( consumableName, [ ...this._consumables[ consumableName ].keys() ] );\n\t\t\t} else {\n\t\t\t\tconst value = consumables.get( name );\n\n\t\t\t\tif ( value === false ) {\n\t\t\t\t\tconsumables.set( name, true );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/schema\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\nimport Range from './range';\nimport Position from './position';\nimport Element from './element';\nimport Text from './text';\nimport TreeWalker from './treewalker';\n\n/**\n * The model's schema. It defines allowed and disallowed structures of nodes as well as nodes' attributes.\n * The schema is usually defined by features and based on them the editing framework and features\n * make decisions how to change and process the model.\n *\n * The instance of schema is available in {@link module:engine/model/model~Model#schema `editor.model.schema`}.\n *\n * Read more about the schema in:\n *\n * * {@glink framework/guides/architecture/editing-engine#schema \"Schema\"} section of the\n * {@glink framework/guides/architecture/editing-engine Introduction to the \"Editing engine architecture\"}.\n * * {@glink framework/guides/deep-dive/schema \"Schema\" deep dive} guide.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class Schema {\n\t/**\n\t * Creates schema instance.\n\t */\n\tconstructor() {\n\t\tthis._sourceDefinitions = {};\n\n\t\t/**\n\t\t * A dictionary containing attribute properties.\n\t\t *\n\t\t * @private\n\t\t * @member {Object.<String,String>}\n\t\t */\n\t\tthis._attributeProperties = {};\n\n\t\tthis.decorate( 'checkChild' );\n\t\tthis.decorate( 'checkAttribute' );\n\n\t\tthis.on( 'checkAttribute', ( evt, args ) => {\n\t\t\targs[ 0 ] = new SchemaContext( args[ 0 ] );\n\t\t}, { priority: 'highest' } );\n\n\t\tthis.on( 'checkChild', ( evt, args ) => {\n\t\t\targs[ 0 ] = new SchemaContext( args[ 0 ] );\n\t\t\targs[ 1 ] = this.getDefinition( args[ 1 ] );\n\t\t}, { priority: 'highest' } );\n\t}\n\n\t/**\n\t * Registers schema item. Can only be called once for every item name.\n\t *\n\t *\t\tschema.register( 'paragraph', {\n\t *\t\t\tinheritAllFrom: '$block'\n\t *\t\t} );\n\t *\n\t * @param {String} itemName\n\t * @param {module:engine/model/schema~SchemaItemDefinition} definition\n\t */\n\tregister( itemName, definition ) {\n\t\tif ( this._sourceDefinitions[ itemName ] ) {\n\t\t\t/**\n\t\t\t * A single item cannot be registered twice in the schema.\n\t\t\t *\n\t\t\t * This situation may happen when:\n\t\t\t *\n\t\t\t * * Two or more plugins called {@link #register `register()`} with the same name. This will usually mean that\n\t\t\t * there is a collision between plugins which try to use the same element in the model. Unfortunately,\n\t\t\t * the only way to solve this is by modifying one of these plugins to use a unique model element name.\n\t\t\t * * A single plugin was loaded twice. This happens when it is installed by npm/yarn in two versions\n\t\t\t * and usually means one or more of the following issues:\n\t\t\t *     * a version mismatch (two of your dependencies require two different versions of this plugin),\n\t\t\t *     * incorrect imports (this plugin is somehow imported twice in a way which confuses webpack),\n\t\t\t *     * mess in `node_modules/` (`rm -rf node_modules/` may help).\n\t\t\t *\n\t\t\t * **Note:** Check the logged `itemName` to better understand which plugin was duplicated/conflicting.\n\t\t\t *\n\t\t\t * @param itemName The name of the model element that is being registered twice.\n\t\t\t * @error schema-cannot-register-item-twice\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'schema-cannot-register-item-twice: A single item cannot be registered twice in the schema.',\n\t\t\t\tthis,\n\t\t\t\t{\n\t\t\t\t\titemName\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tthis._sourceDefinitions[ itemName ] = [\n\t\t\tObject.assign( {}, definition )\n\t\t];\n\n\t\tthis._clearCache();\n\t}\n\n\t/**\n\t * Extends a {@link #register registered} item's definition.\n\t *\n\t * Extending properties such as `allowIn` will add more items to the existing properties,\n\t * while redefining properties such as `isBlock` will override the previously defined ones.\n\t *\n\t *\t\tschema.register( 'foo', {\n\t *\t\t\tallowIn: '$root',\n\t *\t\t\tisBlock: true;\n\t *\t\t} );\n\t *\t\tschema.extend( 'foo', {\n\t *\t\t\tallowIn: 'blockQuote',\n\t *\t\t\tisBlock: false\n\t *\t\t} );\n\t *\n\t *\t\tschema.getDefinition( 'foo' );\n\t *\t\t//\t{\n\t *\t\t//\t\tallowIn: [ '$root', 'blockQuote' ],\n\t *\t\t// \t\tisBlock: false\n\t *\t\t//\t}\n\t *\n\t * @param {String} itemName\n\t * @param {module:engine/model/schema~SchemaItemDefinition} definition\n\t */\n\textend( itemName, definition ) {\n\t\tif ( !this._sourceDefinitions[ itemName ] ) {\n\t\t\t/**\n\t\t\t * Cannot extend an item which was not registered yet.\n\t\t\t *\n\t\t\t * This error happens when a plugin tries to extend the schema definition of an item which was not\n\t\t\t * {@link #register registered} yet.\n\t\t\t *\n\t\t\t * @param itemName The name of the model element which is being extended.\n\t\t\t * @error schema-cannot-extend-missing-item\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'schema-cannot-extend-missing-item: Cannot extend an item which was not registered yet.', this, {\n\t\t\t\titemName\n\t\t\t} );\n\t\t}\n\n\t\tthis._sourceDefinitions[ itemName ].push( Object.assign( {}, definition ) );\n\n\t\tthis._clearCache();\n\t}\n\n\t/**\n\t * Returns all registered items.\n\t *\n\t * @returns {Object.<String,module:engine/model/schema~SchemaCompiledItemDefinition>}\n\t */\n\tgetDefinitions() {\n\t\tif ( !this._compiledDefinitions ) {\n\t\t\tthis._compile();\n\t\t}\n\n\t\treturn this._compiledDefinitions;\n\t}\n\n\t/**\n\t * Returns a definition of the given item or `undefined` if item is not registered.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n\t * @returns {module:engine/model/schema~SchemaCompiledItemDefinition}\n\t */\n\tgetDefinition( item ) {\n\t\tlet itemName;\n\n\t\tif ( typeof item == 'string' ) {\n\t\t\titemName = item;\n\t\t} else if ( item.is && ( item.is( 'text' ) || item.is( 'textProxy' ) ) ) {\n\t\t\titemName = '$text';\n\t\t}\n\t\t// Element or module:engine/model/schema~SchemaContextItem.\n\t\telse {\n\t\t\titemName = item.name;\n\t\t}\n\n\t\treturn this.getDefinitions()[ itemName ];\n\t}\n\n\t/**\n\t * Returns `true` if the given item is registered in the schema.\n\t *\n\t *\t\tschema.isRegistered( 'paragraph' ); // -> true\n\t *\t\tschema.isRegistered( editor.model.document.getRoot() ); // -> true\n\t *\t\tschema.isRegistered( 'foo' ); // -> false\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n\t */\n\tisRegistered( item ) {\n\t\treturn !!this.getDefinition( item );\n\t}\n\n\t/**\n\t * Returns `true` if the given item is defined to be\n\t * a block by {@link module:engine/model/schema~SchemaItemDefinition}'s `isBlock` property.\n\t *\n\t *\t\tschema.isBlock( 'paragraph' ); // -> true\n\t *\t\tschema.isBlock( '$root' ); // -> false\n\t *\n\t *\t\tconst paragraphElement = writer.createElement( 'paragraph' );\n\t *\t\tschema.isBlock( paragraphElement ); // -> true\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n\t */\n\tisBlock( item ) {\n\t\tconst def = this.getDefinition( item );\n\n\t\treturn !!( def && def.isBlock );\n\t}\n\n\t/**\n\t * Returns `true` if the given item is defined to be\n\t * a limit element by {@link module:engine/model/schema~SchemaItemDefinition}'s `isLimit` or `isObject` property\n\t * (all objects are also limits).\n\t *\n\t *\t\tschema.isLimit( 'paragraph' ); // -> false\n\t *\t\tschema.isLimit( '$root' ); // -> true\n\t *\t\tschema.isLimit( editor.model.document.getRoot() ); // -> true\n\t *\t\tschema.isLimit( 'image' ); // -> true\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n\t */\n\tisLimit( item ) {\n\t\tconst def = this.getDefinition( item );\n\n\t\tif ( !def ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!( def.isLimit || def.isObject );\n\t}\n\n\t/**\n\t * Returns `true` if the given item is defined to be\n\t * an object element by {@link module:engine/model/schema~SchemaItemDefinition}'s `isObject` property.\n\t *\n\t *\t\tschema.isObject( 'paragraph' ); // -> false\n\t *\t\tschema.isObject( 'image' ); // -> true\n\t *\n\t *\t\tconst imageElement = writer.createElement( 'image' );\n\t *\t\tschema.isObject( imageElement ); // -> true\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n\t */\n\tisObject( item ) {\n\t\tconst def = this.getDefinition( item );\n\n\t\treturn !!( def && def.isObject );\n\t}\n\n\t/**\n\t * Returns `true` if the given item is defined to be\n\t * an inline element by {@link module:engine/model/schema~SchemaItemDefinition}'s `isInline` property.\n\t *\n\t *\t\tschema.isInline( 'paragraph' ); // -> false\n\t *\t\tschema.isInline( 'softBreak' ); // -> true\n\t *\n\t *\t\tconst text = writer.createText('foo' );\n\t *\t\tschema.isInline( text ); // -> true\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n\t */\n\tisInline( item ) {\n\t\tconst def = this.getDefinition( item );\n\n\t\treturn !!( def && def.isInline );\n\t}\n\n\t/**\n\t * Checks whether the given node (`child`) can be a child of the given context.\n\t *\n\t *\t\tschema.checkChild( model.document.getRoot(), paragraph ); // -> false\n\t *\n\t *\t\tschema.register( 'paragraph', {\n\t *\t\t\tallowIn: '$root'\n\t *\t\t} );\n\t *\t\tschema.checkChild( model.document.getRoot(), paragraph ); // -> true\n\t *\n\t * Note: When verifying whether the given node can be a child of the given context, the\n\t * schema also verifies the entire context &mdash; from its root to its last element. Therefore, it is possible\n\t * for `checkChild()` to return `false` even though the context's last element can contain the checked child.\n\t * It happens if one of the context's elements does not allow its child.\n\t *\n\t * @fires checkChild\n\t * @param {module:engine/model/schema~SchemaContextDefinition} context The context in which the child will be checked.\n\t * @param {module:engine/model/node~Node|String} def The child to check.\n\t */\n\tcheckChild( context, def ) {\n\t\t// Note: context and child are already normalized here to a SchemaContext and SchemaCompiledItemDefinition.\n\t\tif ( !def ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this._checkContextMatch( def, context );\n\t}\n\n\t/**\n\t * Checks whether the given attribute can be applied in the given context (on the last\n\t * item of the context).\n\t *\n\t *\t\tschema.checkAttribute( textNode, 'bold' ); // -> false\n\t *\n\t *\t\tschema.extend( '$text', {\n\t *\t\t\tallowAttributes: 'bold'\n\t *\t\t} );\n\t *\t\tschema.checkAttribute( textNode, 'bold' ); // -> true\n\t *\n\t * @fires checkAttribute\n\t * @param {module:engine/model/schema~SchemaContextDefinition} context The context in which the attribute will be checked.\n\t * @param {String} attributeName\n\t */\n\tcheckAttribute( context, attributeName ) {\n\t\tconst def = this.getDefinition( context.last );\n\n\t\tif ( !def ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn def.allowAttributes.includes( attributeName );\n\t}\n\n\t/**\n\t * Checks whether the given element (`elementToMerge`) can be merged with the specified base element (`positionOrBaseElement`).\n\t *\n\t * In other words &mdash; whether `elementToMerge`'s children {@link #checkChild are allowed} in the `positionOrBaseElement`.\n\t *\n\t * This check ensures that elements merged with {@link module:engine/model/writer~Writer#merge `Writer#merge()`}\n\t * will be valid.\n\t *\n\t * Instead of elements, you can pass the instance of the {@link module:engine/model/position~Position} class as the\n\t * `positionOrBaseElement`. It means that the elements before and after the position will be checked whether they can be merged.\n\t *\n\t * @param {module:engine/model/position~Position|module:engine/model/element~Element} positionOrBaseElement The position or base\n\t * element to which the `elementToMerge` will be merged.\n\t * @param {module:engine/model/element~Element} elementToMerge The element to merge. Required if `positionOrBaseElement` is an element.\n\t * @returns {Boolean}\n\t */\n\tcheckMerge( positionOrBaseElement, elementToMerge = null ) {\n\t\tif ( positionOrBaseElement instanceof Position ) {\n\t\t\tconst nodeBefore = positionOrBaseElement.nodeBefore;\n\t\t\tconst nodeAfter = positionOrBaseElement.nodeAfter;\n\n\t\t\tif ( !( nodeBefore instanceof Element ) ) {\n\t\t\t\t/**\n\t\t\t\t * The node before the merge position must be an element.\n\t\t\t\t *\n\t\t\t\t * @error schema-check-merge-no-element-before\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'schema-check-merge-no-element-before: The node before the merge position must be an element.',\n\t\t\t\t\tthis\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif ( !( nodeAfter instanceof Element ) ) {\n\t\t\t\t/**\n\t\t\t\t * The node after the merge position must be an element.\n\t\t\t\t *\n\t\t\t\t * @error schema-check-merge-no-element-after\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'schema-check-merge-no-element-after: The node after the merge position must be an element.',\n\t\t\t\t\tthis\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn this.checkMerge( nodeBefore, nodeAfter );\n\t\t}\n\n\t\tfor ( const child of elementToMerge.getChildren() ) {\n\t\t\tif ( !this.checkChild( positionOrBaseElement, child ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Allows registering a callback to the {@link #checkChild} method calls.\n\t *\n\t * Callbacks allow you to implement rules which are not otherwise possible to achieve\n\t * by using the declarative API of {@link module:engine/model/schema~SchemaItemDefinition}.\n\t * For example, by using this method you can disallow elements in specific contexts.\n\t *\n\t * This method is a shorthand for using the {@link #event:checkChild} event. For even better control,\n\t * you can use that event instead.\n\t *\n\t * Example:\n\t *\n\t *\t\t// Disallow heading1 directly inside a blockQuote.\n\t *\t\tschema.addChildCheck( ( context, childDefinition ) => {\n\t *\t\t\tif ( context.endsWith( 'blockQuote' ) && childDefinition.name == 'heading1' ) {\n\t *\t\t\t\treturn false;\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * Which translates to:\n\t *\n\t *\t\tschema.on( 'checkChild', ( evt, args ) => {\n\t *\t\t\tconst context = args[ 0 ];\n\t *\t\t\tconst childDefinition = args[ 1 ];\n\t *\n\t *\t\t\tif ( context.endsWith( 'blockQuote' ) && childDefinition && childDefinition.name == 'heading1' ) {\n\t *\t\t\t\t// Prevent next listeners from being called.\n\t *\t\t\t\tevt.stop();\n\t *\t\t\t\t// Set the checkChild()'s return value.\n\t *\t\t\t\tevt.return = false;\n\t *\t\t\t}\n\t *\t\t}, { priority: 'high' } );\n\t *\n\t * @param {Function} callback The callback to be called. It is called with two parameters:\n\t * {@link module:engine/model/schema~SchemaContext} (context) instance and\n\t * {@link module:engine/model/schema~SchemaCompiledItemDefinition} (child-to-check definition).\n\t * The callback may return `true/false` to override `checkChild()`'s return value. If it does not return\n\t * a boolean value, the default algorithm (or other callbacks) will define `checkChild()`'s return value.\n\t */\n\taddChildCheck( callback ) {\n\t\tthis.on( 'checkChild', ( evt, [ ctx, childDef ] ) => {\n\t\t\t// checkChild() was called with a non-registered child.\n\t\t\t// In 99% cases such check should return false, so not to overcomplicate all callbacks\n\t\t\t// don't even execute them.\n\t\t\tif ( !childDef ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst retValue = callback( ctx, childDef );\n\n\t\t\tif ( typeof retValue == 'boolean' ) {\n\t\t\t\tevt.stop();\n\t\t\t\tevt.return = retValue;\n\t\t\t}\n\t\t}, { priority: 'high' } );\n\t}\n\n\t/**\n\t * Allows registering a callback to the {@link #checkAttribute} method calls.\n\t *\n\t * Callbacks allow you to implement rules which are not otherwise possible to achieve\n\t * by using the declarative API of {@link module:engine/model/schema~SchemaItemDefinition}.\n\t * For example, by using this method you can disallow attribute if node to which it is applied\n\t * is contained within some other element (e.g. you want to disallow `bold` on `$text` within `heading1`).\n\t *\n\t * This method is a shorthand for using the {@link #event:checkAttribute} event. For even better control,\n\t * you can use that event instead.\n\t *\n\t * Example:\n\t *\n\t *\t\t// Disallow bold on $text inside heading1.\n\t *\t\tschema.addAttributeCheck( ( context, attributeName ) => {\n\t *\t\t\tif ( context.endsWith( 'heading1 $text' ) && attributeName == 'bold' ) {\n\t *\t\t\t\treturn false;\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * Which translates to:\n\t *\n\t *\t\tschema.on( 'checkAttribute', ( evt, args ) => {\n\t *\t\t\tconst context = args[ 0 ];\n\t *\t\t\tconst attributeName = args[ 1 ];\n\t *\n\t *\t\t\tif ( context.endsWith( 'heading1 $text' ) && attributeName == 'bold' ) {\n\t *\t\t\t\t// Prevent next listeners from being called.\n\t *\t\t\t\tevt.stop();\n\t *\t\t\t\t// Set the checkAttribute()'s return value.\n\t *\t\t\t\tevt.return = false;\n\t *\t\t\t}\n\t *\t\t}, { priority: 'high' } );\n\t *\n\t * @param {Function} callback The callback to be called. It is called with two parameters:\n\t * {@link module:engine/model/schema~SchemaContext} (context) instance and attribute name.\n\t * The callback may return `true/false` to override `checkAttribute()`'s return value. If it does not return\n\t * a boolean value, the default algorithm (or other callbacks) will define `checkAttribute()`'s return value.\n\t */\n\taddAttributeCheck( callback ) {\n\t\tthis.on( 'checkAttribute', ( evt, [ ctx, attributeName ] ) => {\n\t\t\tconst retValue = callback( ctx, attributeName );\n\n\t\t\tif ( typeof retValue == 'boolean' ) {\n\t\t\t\tevt.stop();\n\t\t\t\tevt.return = retValue;\n\t\t\t}\n\t\t}, { priority: 'high' } );\n\t}\n\n\t/**\n\t * This method allows assigning additional metadata to the model attributes. For example,\n\t * {@link module:engine/model/schema~AttributeProperties `AttributeProperties#isFormatting` property} is\n\t * used to mark formatting attributes (like `bold` or `italic`).\n\t *\n\t *\t\t// Mark bold as a formatting attribute.\n\t *\t\tschema.setAttributeProperties( 'bold', {\n\t *\t\t\tisFormatting: true\n\t *\t\t} );\n\t *\n\t *\t\t// Override code not to be considered a formatting markup.\n\t *\t\tschema.setAttributeProperties( 'code', {\n\t *\t\t\tisFormatting: false\n\t *\t\t} );\n\t *\n\t * Properties are not limited to members defined in the\n\t * {@link module:engine/model/schema~AttributeProperties `AttributeProperties` type} and you can also use custom properties:\n\t *\n\t *\t\tschema.setAttributeProperties( 'blockQuote', {\n\t *\t\t\tcustomProperty: 'value'\n\t *\t\t} );\n\t *\n\t * Subsequent calls with the same attribute will extend its custom properties:\n\t *\n\t *\t\tschema.setAttributeProperties( 'blockQuote', {\n\t *\t\t\tone: 1\n\t *\t\t} );\n\t *\n\t *\t\tschema.setAttributeProperties( 'blockQuote', {\n\t *\t\t\ttwo: 2\n\t *\t\t} );\n\t *\n\t *\t\tconsole.log( schema.getAttributeProperties( 'blockQuote' ) );\n\t *\t\t// Logs: { one: 1, two: 2 }\n\t *\n\t * @param {String} attributeName A name of the attribute to receive the properties.\n\t * @param {module:engine/model/schema~AttributeProperties} properties A dictionary of properties.\n\t */\n\tsetAttributeProperties( attributeName, properties ) {\n\t\tthis._attributeProperties[ attributeName ] = Object.assign( this.getAttributeProperties( attributeName ), properties );\n\t}\n\n\t/**\n\t * Returns properties associated with a given model attribute. See {@link #setAttributeProperties `setAttributeProperties()`}.\n\t *\n\t * @param {String} attributeName A name of the attribute.\n\t * @returns {module:engine/model/schema~AttributeProperties}\n\t */\n\tgetAttributeProperties( attributeName ) {\n\t\treturn this._attributeProperties[ attributeName ] || {};\n\t}\n\n\t/**\n\t * Returns the lowest {@link module:engine/model/schema~Schema#isLimit limit element} containing the entire\n\t * selection/range/position or the root otherwise.\n\t *\n\t * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection|\n\t * module:engine/model/range~Range|module:engine/model/position~Position} selectionOrRangeOrPosition\n\t * The selection/range/position to check.\n\t * @returns {module:engine/model/element~Element} The lowest limit element containing\n\t * the entire `selectionOrRangeOrPosition`.\n\t */\n\tgetLimitElement( selectionOrRangeOrPosition ) {\n\t\tlet element;\n\n\t\tif ( selectionOrRangeOrPosition instanceof Position ) {\n\t\t\telement = selectionOrRangeOrPosition.parent;\n\t\t} else {\n\t\t\tconst ranges = selectionOrRangeOrPosition instanceof Range ?\n\t\t\t\t[ selectionOrRangeOrPosition ] :\n\t\t\t\tArray.from( selectionOrRangeOrPosition.getRanges() );\n\n\t\t\t// Find the common ancestor for all selection's ranges.\n\t\t\telement = ranges\n\t\t\t\t.reduce( ( element, range ) => {\n\t\t\t\t\tconst rangeCommonAncestor = range.getCommonAncestor();\n\n\t\t\t\t\tif ( !element ) {\n\t\t\t\t\t\treturn rangeCommonAncestor;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn element.getCommonAncestor( rangeCommonAncestor, { includeSelf: true } );\n\t\t\t\t}, null );\n\t\t}\n\n\t\twhile ( !this.isLimit( element ) ) {\n\t\t\tif ( element.parent ) {\n\t\t\t\telement = element.parent;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn element;\n\t}\n\n\t/**\n\t * Checks whether the attribute is allowed in selection:\n\t *\n\t * * if the selection is not collapsed, then checks if the attribute is allowed on any of nodes in that range,\n\t * * if the selection is collapsed, then checks if on the selection position there's a text with the\n\t * specified attribute allowed.\n\t *\n\t * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n\t * Selection which will be checked.\n\t * @param {String} attribute The name of the attribute to check.\n\t * @returns {Boolean}\n\t */\n\tcheckAttributeInSelection( selection, attribute ) {\n\t\tif ( selection.isCollapsed ) {\n\t\t\tconst firstPosition = selection.getFirstPosition();\n\t\t\tconst context = [\n\t\t\t\t...firstPosition.getAncestors(),\n\t\t\t\tnew Text( '', selection.getAttributes() )\n\t\t\t];\n\n\t\t\t// Check whether schema allows for a text with the attribute in the selection.\n\t\t\treturn this.checkAttribute( context, attribute );\n\t\t} else {\n\t\t\tconst ranges = selection.getRanges();\n\n\t\t\t// For all ranges, check nodes in them until you find a node that is allowed to have the attribute.\n\t\t\tfor ( const range of ranges ) {\n\t\t\t\tfor ( const value of range ) {\n\t\t\t\t\tif ( this.checkAttribute( value.item, attribute ) ) {\n\t\t\t\t\t\t// If we found a node that is allowed to have the attribute, return true.\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If we haven't found such node, return false.\n\t\treturn false;\n\t}\n\n\t/**\n\t * Transforms the given set of ranges into a set of ranges where the given attribute is allowed (and can be applied).\n\t *\n\t * @param {Array.<module:engine/model/range~Range>} ranges Ranges to be validated.\n\t * @param {String} attribute The name of the attribute to check.\n\t * @returns {Iterable.<module:engine/model/range~Range>} Ranges in which the attribute is allowed.\n\t */\n\t* getValidRanges( ranges, attribute ) {\n\t\tranges = convertToMinimalFlatRanges( ranges );\n\n\t\tfor ( const range of ranges ) {\n\t\t\tyield* this._getValidRangesForRange( range, attribute );\n\t\t}\n\t}\n\n\t/**\n\t * Basing on given `position`, finds and returns a {@link module:engine/model/range~Range range} which is\n\t * nearest to that `position` and is a correct range for selection.\n\t *\n\t * The correct selection range might be collapsed when it is located in a position where the text node can be placed.\n\t * Non-collapsed range is returned when selection can be placed around element marked as an \"object\" in\n\t * the {@link module:engine/model/schema~Schema schema}.\n\t *\n\t * Direction of searching for the nearest correct selection range can be specified as:\n\t *\n\t * * `both` - searching will be performed in both ways,\n\t * * `forward` - searching will be performed only forward,\n\t * * `backward` - searching will be performed only backward.\n\t *\n\t * When valid selection range cannot be found, `null` is returned.\n\t *\n\t * @param {module:engine/model/position~Position} position Reference position where new selection range should be looked for.\n\t * @param {'both'|'forward'|'backward'} [direction='both'] Search direction.\n\t * @returns {module:engine/model/range~Range|null} Nearest selection range or `null` if one cannot be found.\n\t */\n\tgetNearestSelectionRange( position, direction = 'both' ) {\n\t\t// Return collapsed range if provided position is valid.\n\t\tif ( this.checkChild( position, '$text' ) ) {\n\t\t\treturn new Range( position );\n\t\t}\n\n\t\tlet backwardWalker, forwardWalker;\n\n\t\tif ( direction == 'both' || direction == 'backward' ) {\n\t\t\tbackwardWalker = new TreeWalker( { startPosition: position, direction: 'backward' } );\n\t\t}\n\n\t\tif ( direction == 'both' || direction == 'forward' ) {\n\t\t\tforwardWalker = new TreeWalker( { startPosition: position } );\n\t\t}\n\n\t\tfor ( const data of combineWalkers( backwardWalker, forwardWalker ) ) {\n\t\t\tconst type = ( data.walker == backwardWalker ? 'elementEnd' : 'elementStart' );\n\t\t\tconst value = data.value;\n\n\t\t\tif ( value.type == type && this.isObject( value.item ) ) {\n\t\t\t\treturn Range._createOn( value.item );\n\t\t\t}\n\n\t\t\tif ( this.checkChild( value.nextPosition, '$text' ) ) {\n\t\t\t\treturn new Range( value.nextPosition );\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Tries to find position ancestors that allows to insert given node.\n\t * It starts searching from the given position and goes node by node to the top of the model tree\n\t * as long as {@link module:engine/model/schema~Schema#isLimit limit element},\n\t * {@link module:engine/model/schema~Schema#isObject object element} or top-most ancestor won't be reached.\n\t *\n\t * @params {module:engine/model/position~Position} position Position from searching will start.\n\t * @params {module:engine/model/node~Node|String} node Node for which allowed parent should be found or its name.\n\t * @returns {module:engine/model/element~Element|null} element Allowed parent or null if nothing was found.\n\t */\n\tfindAllowedParent( position, node ) {\n\t\tlet parent = position.parent;\n\n\t\twhile ( parent ) {\n\t\t\tif ( this.checkChild( parent, node ) ) {\n\t\t\t\treturn parent;\n\t\t\t}\n\n\t\t\t// Do not split limit elements.\n\t\t\tif ( this.isLimit( parent ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tparent = parent.parent;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Removes attributes disallowed by the schema.\n\t *\n\t * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes that will be filtered.\n\t * @param {module:engine/model/writer~Writer} writer\n\t */\n\tremoveDisallowedAttributes( nodes, writer ) {\n\t\tfor ( const node of nodes ) {\n\t\t\t// When node is a `Text` it has no children, so just filter it out.\n\t\t\tif ( node.is( 'text' ) ) {\n\t\t\t\tremoveDisallowedAttributeFromNode( this, node, writer );\n\t\t\t}\n\t\t\t// In a case of `Element` iterates through positions between nodes inside this element\n\t\t\t// and filter out node before the current position, or position parent when position\n\t\t\t// is at start of an element. Using positions prevent from omitting merged nodes\n\t\t\t// see https://github.com/ckeditor/ckeditor5-engine/issues/1789.\n\t\t\telse {\n\t\t\t\tconst rangeInNode = Range._createIn( node );\n\t\t\t\tconst positionsInRange = rangeInNode.getPositions();\n\n\t\t\t\tfor ( const position of positionsInRange ) {\n\t\t\t\t\tconst item = position.nodeBefore || position.parent;\n\n\t\t\t\t\tremoveDisallowedAttributeFromNode( this, item, writer );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates an instance of the schema context.\n\t *\n\t * @param {module:engine/model/schema~SchemaContextDefinition} context\n\t * @returns {module:engine/model/schema~SchemaContext}\n\t */\n\tcreateContext( context ) {\n\t\treturn new SchemaContext( context );\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_clearCache() {\n\t\tthis._compiledDefinitions = null;\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_compile() {\n\t\tconst compiledDefinitions = {};\n\t\tconst sourceRules = this._sourceDefinitions;\n\t\tconst itemNames = Object.keys( sourceRules );\n\n\t\tfor ( const itemName of itemNames ) {\n\t\t\tcompiledDefinitions[ itemName ] = compileBaseItemRule( sourceRules[ itemName ], itemName );\n\t\t}\n\n\t\tfor ( const itemName of itemNames ) {\n\t\t\tcompileAllowContentOf( compiledDefinitions, itemName );\n\t\t}\n\n\t\tfor ( const itemName of itemNames ) {\n\t\t\tcompileAllowWhere( compiledDefinitions, itemName );\n\t\t}\n\n\t\tfor ( const itemName of itemNames ) {\n\t\t\tcompileAllowAttributesOf( compiledDefinitions, itemName );\n\t\t\tcompileInheritPropertiesFrom( compiledDefinitions, itemName );\n\t\t}\n\n\t\tfor ( const itemName of itemNames ) {\n\t\t\tcleanUpAllowIn( compiledDefinitions, itemName );\n\t\t\tcleanUpAllowAttributes( compiledDefinitions, itemName );\n\t\t}\n\n\t\tthis._compiledDefinitions = compiledDefinitions;\n\t}\n\n\t/**\n\t * @private\n\t * @param {module:engine/model/schema~SchemaCompiledItemDefinition} def\n\t * @param {module:engine/model/schema~SchemaContext} context\n\t * @param {Number} contextItemIndex\n\t */\n\t_checkContextMatch( def, context, contextItemIndex = context.length - 1 ) {\n\t\tconst contextItem = context.getItem( contextItemIndex );\n\n\t\tif ( def.allowIn.includes( contextItem.name ) ) {\n\t\t\tif ( contextItemIndex == 0 ) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tconst parentRule = this.getDefinition( contextItem );\n\n\t\t\t\treturn this._checkContextMatch( parentRule, context, contextItemIndex - 1 );\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Takes a flat range and an attribute name. Traverses the range recursively and deeply to find and return all ranges\n\t * inside the given range on which the attribute can be applied.\n\t *\n\t * This is a helper function for {@link ~Schema#getValidRanges}.\n\t *\n\t * @private\n\t * @param {module:engine/model/range~Range} range Range to process.\n\t * @param {String} attribute The name of the attribute to check.\n\t * @returns {Iterable.<module:engine/model/range~Range>} Ranges in which the attribute is allowed.\n\t */\n\t* _getValidRangesForRange( range, attribute ) {\n\t\tlet start = range.start;\n\t\tlet end = range.start;\n\n\t\tfor ( const item of range.getItems( { shallow: true } ) ) {\n\t\t\tif ( item.is( 'element' ) ) {\n\t\t\t\tyield* this._getValidRangesForRange( Range._createIn( item ), attribute );\n\t\t\t}\n\n\t\t\tif ( !this.checkAttribute( item, attribute ) ) {\n\t\t\t\tif ( !start.isEqual( end ) ) {\n\t\t\t\t\tyield new Range( start, end );\n\t\t\t\t}\n\n\t\t\t\tstart = Position._createAfter( item );\n\t\t\t}\n\n\t\t\tend = Position._createAfter( item );\n\t\t}\n\n\t\tif ( !start.isEqual( end ) ) {\n\t\t\tyield new Range( start, end );\n\t\t}\n\t}\n}\n\nmix( Schema, ObservableMixin );\n\n/**\n * Event fired when the {@link #checkChild} method is called. It allows plugging in\n * additional behavior – e.g. implementing rules which cannot be defined using the declarative\n * {@link module:engine/model/schema~SchemaItemDefinition} interface.\n *\n * **Note:** The {@link #addChildCheck} method is a more handy way to register callbacks. Internally,\n * it registers a listener to this event but comes with a simpler API and it is the recommended choice\n * in most of the cases.\n *\n * The {@link #checkChild} method fires an event because it is\n * {@link module:utils/observablemixin~ObservableMixin#decorate decorated} with it. Thanks to that you can\n * use this event in a various way, but the most important use case is overriding standard behaviour of the\n * `checkChild()` method. Let's see a typical listener template:\n *\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst childDefinition = args[ 1 ];\n *\t\t}, { priority: 'high' } );\n *\n * The listener is added with a `high` priority to be executed before the default method is really called. The `args` callback\n * parameter contains arguments passed to `checkChild( context, child )`. However, the `context` parameter is already\n * normalized to a {@link module:engine/model/schema~SchemaContext} instance and `child` to a\n * {@link module:engine/model/schema~SchemaCompiledItemDefinition} instance, so you don't have to worry about\n * the various ways how `context` and `child` may be passed to `checkChild()`.\n *\n * **Note:** `childDefinition` may be `undefined` if `checkChild()` was called with a non-registered element.\n *\n * So, in order to implement a rule \"disallow `heading1` in `blockQuote`\" you can add such a listener:\n *\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst childDefinition = args[ 1 ];\n *\n *\t\t\tif ( context.endsWith( 'blockQuote' ) && childDefinition && childDefinition.name == 'heading1' ) {\n *\t\t\t\t// Prevent next listeners from being called.\n *\t\t\t\tevt.stop();\n *\t\t\t\t// Set the checkChild()'s return value.\n *\t\t\t\tevt.return = false;\n *\t\t\t}\n *\t\t}, { priority: 'high' } );\n *\n * Allowing elements in specific contexts will be a far less common use case, because it's normally handled by\n * `allowIn` rule from {@link module:engine/model/schema~SchemaItemDefinition} but if you have a complex scenario\n * where `listItem` should be allowed only in element `foo` which must be in element `bar`, then this would be the way:\n *\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst childDefinition = args[ 1 ];\n *\n *\t\t\tif ( context.endsWith( 'bar foo' ) && childDefinition.name == 'listItem' ) {\n *\t\t\t\t// Prevent next listeners from being called.\n *\t\t\t\tevt.stop();\n *\t\t\t\t// Set the checkChild()'s return value.\n *\t\t\t\tevt.return = true;\n *\t\t\t}\n *\t\t}, { priority: 'high' } );\n *\n * @event checkChild\n * @param {Array} args The `checkChild()`'s arguments.\n */\n\n/**\n * Event fired when the {@link #checkAttribute} method is called. It allows plugging in\n * additional behavior – e.g. implementing rules which cannot be defined using the declarative\n * {@link module:engine/model/schema~SchemaItemDefinition} interface.\n *\n * **Note:** The {@link #addAttributeCheck} method is a more handy way to register callbacks. Internally,\n * it registers a listener to this event but comes with a simpler API and it is the recommended choice\n * in most of the cases.\n *\n * The {@link #checkAttribute} method fires an event because it's\n * {@link module:utils/observablemixin~ObservableMixin#decorate decorated} with it. Thanks to that you can\n * use this event in a various way, but the most important use case is overriding standard behaviour of the\n * `checkAttribute()` method. Let's see a typical listener template:\n *\n *\t\tschema.on( 'checkAttribute', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst attributeName = args[ 1 ];\n *\t\t}, { priority: 'high' } );\n *\n * The listener is added with a `high` priority to be executed before the default method is really called. The `args` callback\n * parameter contains arguments passed to `checkAttribute( context, attributeName )`. However, the `context` parameter is already\n * normalized to a {@link module:engine/model/schema~SchemaContext} instance, so you don't have to worry about\n * the various ways how `context` may be passed to `checkAttribute()`.\n *\n * So, in order to implement a rule \"disallow `bold` in a text which is in a `heading1` you can add such a listener:\n *\n *\t\tschema.on( 'checkAttribute', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst atributeName = args[ 1 ];\n *\n *\t\t\tif ( context.endsWith( 'heading1 $text' ) && attributeName == 'bold' ) {\n *\t\t\t\t// Prevent next listeners from being called.\n *\t\t\t\tevt.stop();\n *\t\t\t\t// Set the checkAttribute()'s return value.\n *\t\t\t\tevt.return = false;\n *\t\t\t}\n *\t\t}, { priority: 'high' } );\n *\n * Allowing attributes in specific contexts will be a far less common use case, because it's normally handled by\n * `allowAttributes` rule from {@link module:engine/model/schema~SchemaItemDefinition} but if you have a complex scenario\n * where `bold` should be allowed only in element `foo` which must be in element `bar`, then this would be the way:\n *\n *\t\tschema.on( 'checkAttribute', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst atributeName = args[ 1 ];\n *\n *\t\t\tif ( context.endsWith( 'bar foo $text' ) && attributeName == 'bold' ) {\n *\t\t\t\t// Prevent next listeners from being called.\n *\t\t\t\tevt.stop();\n *\t\t\t\t// Set the checkAttribute()'s return value.\n *\t\t\t\tevt.return = true;\n *\t\t\t}\n *\t\t}, { priority: 'high' } );\n *\n * @event checkAttribute\n * @param {Array} args The `checkAttribute()`'s arguments.\n */\n\n/**\n * A definition of a {@link module:engine/model/schema~Schema schema} item.\n *\n * You can define the following rules:\n *\n * * `allowIn` &ndash; A string or an array of strings. Defines in which other items this item will be allowed.\n * * `allowAttributes` &ndash; A string or an array of strings. Defines allowed attributes of the given item.\n * * `allowContentOf` &ndash; A string or an array of strings. Inherits \"allowed children\" from other items.\n * * `allowWhere` &ndash; A string or an array of strings. Inherits \"allowed in\" from other items.\n * * `allowAttributesOf` &ndash; A string or an array of strings. Inherits attributes from other items.\n * * `inheritTypesFrom` &ndash; A string or an array of strings. Inherits `is*` properties of other items.\n * * `inheritAllFrom` &ndash; A string. A shorthand for `allowContentOf`, `allowWhere`, `allowAttributesOf`, `inheritTypesFrom`.\n * * Additionally, you can define the following `is*` properties: `isBlock`, `isLimit`, `isObject`, `isInline`. Read about them below.\n *\n * # The is* properties\n *\n * There are 3 commonly used `is*` properties. Their role is to assign additional semantics to schema items.\n * You can define more properties but you will also need to implement support for them in the existing editor features.\n *\n * * `isBlock` &ndash; Whether this item is paragraph-like. Generally speaking, content is usually made out of blocks\n * like paragraphs, list items, images, headings, etc. All these elements are marked as blocks. A block\n * should not allow another block inside. Note: There is also the `$block` generic item which has `isBlock` set to `true`.\n * Most block type items will inherit from `$block` (through `inheritAllFrom`).\n * * `isLimit` &ndash; It can be understood as whether this element should not be split by <kbd>Enter</kbd>.\n * Examples of limit elements: `$root`, table cell, image caption, etc. In other words, all actions that happen inside\n * a limit element are limited to its content. **Note:** All objects (`isObject`) are treated as limit elements, too.\n * * `isObject` &ndash; Whether an item is \"self-contained\" and should be treated as a whole. Examples of object elements:\n * `image`, `table`, `video`, etc. **Note:** An object is also a limit, so\n * {@link module:engine/model/schema~Schema#isLimit `isLimit()`} returns `true` for object elements automatically.\n * * `isInline` &ndash; Whether an item is \"text-like\" and should be treated as an inline node. Examples of inline elements:\n * `$text`, `softBreak` (`<br>`), etc.\n *\n * # Generic items\n *\n * There are three basic generic items: `$root`, `$block` and `$text`.\n * They are defined as follows:\n *\n *\t\tthis.schema.register( '$root', {\n *\t\t\tisLimit: true\n *\t\t} );\n *\t\tthis.schema.register( '$block', {\n *\t\t\tallowIn: '$root',\n *\t\t\tisBlock: true\n *\t\t} );\n *\t\tthis.schema.register( '$text', {\n *\t\t\tallowIn: '$block',\n *\t\t\tisInline: true\n *\t\t} );\n *\n * They reflect typical editor content that is contained within one root, consists of several blocks\n * (paragraphs, lists items, headings, images) which, in turn, may contain text inside.\n *\n * By inheriting from the generic items you can define new items which will get extended by other editor features.\n * Read more about generic types in the {@glink framework/guides/deep-dive/schema Defining schema} guide.\n *\n * # Example definitions\n *\n * Allow `paragraph` in roots and block quotes:\n *\n *\t\tschema.register( 'paragraph', {\n *\t\t\tallowIn: [ '$root', 'blockQuote' ],\n *\t\t\tisBlock: true\n *\t\t} );\n *\n * Allow `paragraph` everywhere where `$block` is allowed (i.e. in `$root`):\n *\n *\t\tschema.register( 'paragraph', {\n *\t\t\tallowWhere: '$block',\n *\t\t\tisBlock: true\n *\t\t} );\n *\n * Make `image` a block object, which is allowed everywhere where `$block` is.\n * Also, allow `src` and `alt` attributes in it:\n *\n *\t\tschema.register( 'image', {\n *\t\t\tallowWhere: '$block',\n *\t\t\tallowAttributes: [ 'src', 'alt' ],\n *\t\t\tisBlock: true,\n *\t\t\tisObject: true\n *\t\t} );\n *\n * Make `caption` allowed in `image` and make it allow all the content of `$block`s (usually, `$text`).\n * Also, mark it as a limit element so it cannot be split:\n *\n *\t\tschema.register( 'caption', {\n *\t\t\tallowIn: 'image',\n *\t\t\tallowContentOf: '$block',\n *\t\t\tisLimit: true\n *\t\t} );\n *\n * Make `listItem` inherit all from `$block` but also allow additional attributes:\n *\n *\t\tschema.register( 'listItem', {\n *\t\t\tinheritAllFrom: '$block',\n *\t\t\tallowAttributes: [ 'listType', 'listIndent' ]\n *\t\t} );\n *\n * Which translates to:\n *\n *\t\tschema.register( 'listItem', {\n *\t\t\tallowWhere: '$block',\n *\t\t\tallowContentOf: '$block',\n *\t\t\tallowAttributesOf: '$block',\n *\t\t\tinheritTypesFrom: '$block',\n *\t\t\tallowAttributes: [ 'listType', 'listIndent' ]\n *\t\t} );\n *\n * # Tips\n *\n * * Check schema definitions of existing features to see how they are defined.\n * * If you want to publish your feature so other developers can use it, try to use\n * generic items as much as possible.\n * * Keep your model clean. Limit it to the actual data and store information in a normalized way.\n * * Remember about definining the `is*` properties. They do not affect the allowed structures, but they can\n * affect how the editor features treat your elements.\n *\n * @typedef {Object} module:engine/model/schema~SchemaItemDefinition\n */\n\n/**\n * A simplified version of {@link module:engine/model/schema~SchemaItemDefinition} after\n * compilation by the {@link module:engine/model/schema~Schema schema}.\n * Rules fed to the schema by {@link module:engine/model/schema~Schema#register}\n * and {@link module:engine/model/schema~Schema#extend} methods are defined in the\n * {@link module:engine/model/schema~SchemaItemDefinition} format.\n * Later on, they are compiled to `SchemaCompiledItemDefition` so when you use e.g.\n * the {@link module:engine/model/schema~Schema#getDefinition} method you get the compiled version.\n *\n * The compiled version contains only the following properties:\n *\n * * The `name` property,\n * * The `is*` properties,\n * * The `allowIn` array,\n * * The `allowAttributes` array.\n *\n * @typedef {Object} module:engine/model/schema~SchemaCompiledItemDefinition\n */\n\n/**\n * A schema context &mdash; a list of ancestors of a given position in the document.\n *\n * Considering such position:\n *\n *\t\t<$root>\n *\t\t\t<blockQuote>\n *\t\t\t\t<paragraph>\n *\t\t\t\t\t^\n *\t\t\t\t</paragraph>\n *\t\t\t</blockQuote>\n *\t\t</$root>\n *\n * The context of this position is its {@link module:engine/model/position~Position#getAncestors lists of ancestors}:\n *\n *\t\t[ rootElement, blockQuoteElement, paragraphElement ]\n *\n * Contexts are used in the {@link module:engine/model/schema~Schema#event:checkChild `Schema#checkChild`} and\n * {@link module:engine/model/schema~Schema#event:checkAttribute `Schema#checkAttribute`} events as a definition\n * of a place in the document where the check occurs. The context instances are created based on the first arguments\n * of the {@link module:engine/model/schema~Schema#checkChild `Schema#checkChild()`} and\n * {@link module:engine/model/schema~Schema#checkAttribute `Schema#checkAttribute()`} methods so when\n * using these methods you need to use {@link module:engine/model/schema~SchemaContextDefinition}s.\n */\nexport class SchemaContext {\n\t/**\n\t * Creates an instance of the context.\n\t *\n\t * @param {module:engine/model/schema~SchemaContextDefinition} context\n\t */\n\tconstructor( context ) {\n\t\tif ( context instanceof SchemaContext ) {\n\t\t\treturn context;\n\t\t}\n\n\t\tif ( typeof context == 'string' ) {\n\t\t\tcontext = [ context ];\n\t\t} else if ( !Array.isArray( context ) ) {\n\t\t\t// `context` is item or position.\n\t\t\t// Position#getAncestors() doesn't accept any parameters but it works just fine here.\n\t\t\tcontext = context.getAncestors( { includeSelf: true } );\n\t\t}\n\n\t\tif ( context[ 0 ] && typeof context[ 0 ] != 'string' && context[ 0 ].is( 'documentFragment' ) ) {\n\t\t\tcontext.shift();\n\t\t}\n\n\t\tthis._items = context.map( mapContextItem );\n\t}\n\n\t/**\n\t * The number of items.\n\t *\n\t * @type {Number}\n\t */\n\tget length() {\n\t\treturn this._items.length;\n\t}\n\n\t/**\n\t * The last item (the lowest node).\n\t *\n\t * @type {module:engine/model/schema~SchemaContextItem}\n\t */\n\tget last() {\n\t\treturn this._items[ this._items.length - 1 ];\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * Iterates over all context items.\n\t *\n\t * @returns {Iterable.<module:engine/model/schema~SchemaContextItem>}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this._items[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Returns a new schema context instance with an additional item.\n\t *\n\t * Item can be added as:\n\t *\n\t * \t\tconst context = new SchemaContext( [ '$root' ] );\n\t *\n\t * \t\t// An element.\n\t * \t\tconst fooElement = writer.createElement( 'fooElement' );\n\t * \t\tconst newContext = context.push( fooElement ); // [ '$root', 'fooElement' ]\n\t *\n\t * \t\t// A text node.\n\t * \t\tconst text = writer.createText( 'foobar' );\n\t * \t\tconst newContext = context.push( text ); // [ '$root', '$text' ]\n\t *\n\t * \t\t// A string (element name).\n\t * \t\tconst newContext = context.push( 'barElement' ); // [ '$root', 'barElement' ]\n\t *\n\t * **Note** {@link module:engine/model/node~Node} that is already in the model tree will be added as the only item\n\t * (without ancestors).\n\t *\n\t * @param {String|module:engine/model/node~Node|Array<String|module:engine/model/node~Node>} item An item that will be added\n\t * to the current context.\n\t * @returns {module:engine/model/schema~SchemaContext} A new schema context instance with an additional item.\n\t */\n\tpush( item ) {\n\t\tconst ctx = new SchemaContext( [ item ] );\n\n\t\tctx._items = [ ...this._items, ...ctx._items ];\n\n\t\treturn ctx;\n\t}\n\n\t/**\n\t * Gets an item on the given index.\n\t *\n\t * @returns {module:engine/model/schema~SchemaContextItem}\n\t */\n\tgetItem( index ) {\n\t\treturn this._items[ index ];\n\t}\n\n\t/**\n\t * Returns the names of items.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\t* getNames() {\n\t\tyield* this._items.map( item => item.name );\n\t}\n\n\t/**\n\t * Checks whether the context ends with the given nodes.\n\t *\n\t *\t\tconst ctx = new SchemaContext( [ rootElement, paragraphElement, textNode ] );\n\t *\n\t *\t\tctx.endsWith( '$text' ); // -> true\n\t *\t\tctx.endsWith( 'paragraph $text' ); // -> true\n\t *\t\tctx.endsWith( '$root' ); // -> false\n\t *\t\tctx.endsWith( 'paragraph' ); // -> false\n\t *\n\t * @param {String} query\n\t * @returns {Boolean}\n\t */\n\tendsWith( query ) {\n\t\treturn Array.from( this.getNames() ).join( ' ' ).endsWith( query );\n\t}\n\n\t/**\n\t * Checks whether the context starts with the given nodes.\n\t *\n\t *\t\tconst ctx = new SchemaContext( [ rootElement, paragraphElement, textNode ] );\n\t *\n\t *\t\tctx.endsWith( '$root' ); // -> true\n\t *\t\tctx.endsWith( '$root paragraph' ); // -> true\n\t *\t\tctx.endsWith( '$text' ); // -> false\n\t *\t\tctx.endsWith( 'paragraph' ); // -> false\n\t *\n\t * @param {String} query\n\t * @returns {Boolean}\n\t */\n\tstartsWith( query ) {\n\t\treturn Array.from( this.getNames() ).join( ' ' ).startsWith( query );\n\t}\n}\n\n/**\n * The definition of a {@link module:engine/model/schema~SchemaContext schema context}.\n *\n * Contexts can be created in multiple ways:\n *\n * * By defining a **node** – in this cases this node and all its ancestors will be used.\n * * By defining a **position** in the document – in this case all its ancestors will be used.\n * * By defining an **array of nodes** – in this case this array defines the entire context.\n * * By defining a **name of node** - in this case node will be \"mocked\". It is not recommended because context\n * will be unrealistic (e.g. attributes of these nodes are not specified). However, at times this may be the only\n * way to define the context (e.g. when checking some hypothetical situation).\n * * By defining an **array of node names** (potentially, mixed with real nodes) – The same as **name of node**\n * but it is possible to create a path.\n * * By defining a {@link module:engine/model/schema~SchemaContext} instance - in this case the same instance as provided\n * will be return.\n *\n * Examples of context definitions passed to the {@link module:engine/model/schema~Schema#checkChild `Schema#checkChild()`}\n * method:\n *\n *\t\t// Assuming that we have a $root > blockQuote > paragraph structure, the following code\n *\t\t// will check node 'foo' in the following context:\n *\t\t// [ rootElement, blockQuoteElement, paragraphElement ]\n *\t\tconst contextDefinition = paragraphElement;\n * \t\tconst childToCheck = 'foo';\n *\t\tschema.checkChild( contextDefinition, childToCheck );\n *\n *\t\t// Also check in [ rootElement, blockQuoteElement, paragraphElement ].\n *\t\tschema.checkChild( model.createPositionAt( paragraphElement, 0 ), 'foo' );\n *\n *\t\t// Check in [ rootElement, paragraphElement ].\n *\t\tschema.checkChild( [ rootElement, paragraphElement ], 'foo' );\n *\n *\t\t// Check only fakeParagraphElement.\n *\t\tschema.checkChild( 'paragraph', 'foo' );\n *\n *\t\t// Check in [ fakeRootElement, fakeBarElement, paragraphElement ].\n *\t\tschema.checkChild( [ '$root', 'bar', paragraphElement ], 'foo' );\n *\n * All these `checkChild()` calls will fire {@link module:engine/model/schema~Schema#event:checkChild `Schema#checkChild`}\n * events in which `args[ 0 ]` is an instance of the context. Therefore, you can write a listener like this:\n *\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\n *\t\t\tconst ctx = args[ 0 ];\n *\n *\t\t\tconsole.log( Array.from( ctx.getNames() ) );\n *\t\t} );\n *\n * Which will log the following:\n *\n *\t\t[ '$root', 'blockQuote', 'paragraph' ]\n *\t\t[ '$root', 'paragraph' ]\n *\t\t[ '$root', 'bar', 'paragraph' ]\n *\n * Note: When using the {@link module:engine/model/schema~Schema#checkAttribute `Schema#checkAttribute()`} method\n * you may want to check whether a text node may have an attribute. A {@link module:engine/model/text~Text} is a\n * correct way to define a context so you can do this:\n *\n *\t\tschema.checkAttribute( textNode, 'bold' );\n *\n * But sometimes you want to check whether a text at a given position might've had some attribute,\n * in which case you can create a context by mising an array of elements with a `'$text'` string:\n *\n *\t\t// Check in [ rootElement, paragraphElement, textNode ].\n *\t\tschema.checkChild( [ ...positionInParagraph.getAncestors(), '$text' ], 'bold' );\n *\n * @typedef {module:engine/model/node~Node|module:engine/model/position~Position|module:engine/model/schema~SchemaContext|\n * String|Array.<String|module:engine/model/node~Node>} module:engine/model/schema~SchemaContextDefinition\n */\n\n/**\n * An item of the {@link module:engine/model/schema~SchemaContext schema context}.\n *\n * It contains 3 properties:\n *\n * * `name` – the name of this item,\n * * `* getAttributeKeys()` – a generator of keys of item attributes,\n * * `getAttribute( keyName )` – a method to get attribute values.\n *\n * The context item interface is a highly simplified version of {@link module:engine/model/node~Node} and its role\n * is to expose only the information which schema checks are able to provide (which is the name of the node and\n * node's attributes).\n *\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\n *\t\t\tconst ctx = args[ 0 ];\n *\t\t\tconst firstItem = ctx.getItem( 0 );\n *\n *\t\t\tconsole.log( firstItem.name ); // -> '$root'\n *\t\t\tconsole.log( firstItem.getAttribute( 'foo' ) ); // -> 'bar'\n *\t\t\tconsole.log( Array.from( firstItem.getAttributeKeys() ) ); // -> [ 'foo', 'faa' ]\n *\t\t} );\n *\n * @typedef {Object} module:engine/model/schema~SchemaContextItem\n */\n\n/**\n * A structure containing additional metadata describing the attribute.\n *\n * See {@link module:engine/model/schema~Schema#setAttributeProperties `Schema#setAttributeProperties()`} for usage examples.\n *\n * @typedef {Object} module:engine/model/schema~AttributeProperties\n * @property {Boolean} [isFormatting] Indicates that the attribute should be considered as a visual formatting, like `bold`, `italic` or\n * `fontSize` rather than semantic attribute (such as `src`, `listType`, etc.). For example, it is used by the \"Remove format\" feature.\n * @property {Boolean} [copyOnEnter] Indicates that given text attribute should be copied to the next block when enter is pressed.\n */\n\nfunction compileBaseItemRule( sourceItemRules, itemName ) {\n\tconst itemRule = {\n\t\tname: itemName,\n\n\t\tallowIn: [],\n\t\tallowContentOf: [],\n\t\tallowWhere: [],\n\n\t\tallowAttributes: [],\n\t\tallowAttributesOf: [],\n\n\t\tinheritTypesFrom: []\n\t};\n\n\tcopyTypes( sourceItemRules, itemRule );\n\n\tcopyProperty( sourceItemRules, itemRule, 'allowIn' );\n\tcopyProperty( sourceItemRules, itemRule, 'allowContentOf' );\n\tcopyProperty( sourceItemRules, itemRule, 'allowWhere' );\n\n\tcopyProperty( sourceItemRules, itemRule, 'allowAttributes' );\n\tcopyProperty( sourceItemRules, itemRule, 'allowAttributesOf' );\n\n\tcopyProperty( sourceItemRules, itemRule, 'inheritTypesFrom' );\n\n\tmakeInheritAllWork( sourceItemRules, itemRule );\n\n\treturn itemRule;\n}\n\nfunction compileAllowContentOf( compiledDefinitions, itemName ) {\n\tfor ( const allowContentOfItemName of compiledDefinitions[ itemName ].allowContentOf ) {\n\t\t// The allowContentOf property may point to an unregistered element.\n\t\tif ( compiledDefinitions[ allowContentOfItemName ] ) {\n\t\t\tconst allowedChildren = getAllowedChildren( compiledDefinitions, allowContentOfItemName );\n\n\t\t\tallowedChildren.forEach( allowedItem => {\n\t\t\t\tallowedItem.allowIn.push( itemName );\n\t\t\t} );\n\t\t}\n\t}\n\n\tdelete compiledDefinitions[ itemName ].allowContentOf;\n}\n\nfunction compileAllowWhere( compiledDefinitions, itemName ) {\n\tfor ( const allowWhereItemName of compiledDefinitions[ itemName ].allowWhere ) {\n\t\tconst inheritFrom = compiledDefinitions[ allowWhereItemName ];\n\n\t\t// The allowWhere property may point to an unregistered element.\n\t\tif ( inheritFrom ) {\n\t\t\tconst allowedIn = inheritFrom.allowIn;\n\n\t\t\tcompiledDefinitions[ itemName ].allowIn.push( ...allowedIn );\n\t\t}\n\t}\n\n\tdelete compiledDefinitions[ itemName ].allowWhere;\n}\n\nfunction compileAllowAttributesOf( compiledDefinitions, itemName ) {\n\tfor ( const allowAttributeOfItem of compiledDefinitions[ itemName ].allowAttributesOf ) {\n\t\tconst inheritFrom = compiledDefinitions[ allowAttributeOfItem ];\n\n\t\tif ( inheritFrom ) {\n\t\t\tconst inheritAttributes = inheritFrom.allowAttributes;\n\n\t\t\tcompiledDefinitions[ itemName ].allowAttributes.push( ...inheritAttributes );\n\t\t}\n\t}\n\n\tdelete compiledDefinitions[ itemName ].allowAttributesOf;\n}\n\nfunction compileInheritPropertiesFrom( compiledDefinitions, itemName ) {\n\tconst item = compiledDefinitions[ itemName ];\n\n\tfor ( const inheritPropertiesOfItem of item.inheritTypesFrom ) {\n\t\tconst inheritFrom = compiledDefinitions[ inheritPropertiesOfItem ];\n\n\t\tif ( inheritFrom ) {\n\t\t\tconst typeNames = Object.keys( inheritFrom ).filter( name => name.startsWith( 'is' ) );\n\n\t\t\tfor ( const name of typeNames ) {\n\t\t\t\tif ( !( name in item ) ) {\n\t\t\t\t\titem[ name ] = inheritFrom[ name ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdelete item.inheritTypesFrom;\n}\n\n// Remove items which weren't registered (because it may break some checks or we'd need to complicate them).\n// Make sure allowIn doesn't contain repeated values.\nfunction cleanUpAllowIn( compiledDefinitions, itemName ) {\n\tconst itemRule = compiledDefinitions[ itemName ];\n\tconst existingItems = itemRule.allowIn.filter( itemToCheck => compiledDefinitions[ itemToCheck ] );\n\n\titemRule.allowIn = Array.from( new Set( existingItems ) );\n}\n\nfunction cleanUpAllowAttributes( compiledDefinitions, itemName ) {\n\tconst itemRule = compiledDefinitions[ itemName ];\n\n\titemRule.allowAttributes = Array.from( new Set( itemRule.allowAttributes ) );\n}\n\nfunction copyTypes( sourceItemRules, itemRule ) {\n\tfor ( const sourceItemRule of sourceItemRules ) {\n\t\tconst typeNames = Object.keys( sourceItemRule ).filter( name => name.startsWith( 'is' ) );\n\n\t\tfor ( const name of typeNames ) {\n\t\t\titemRule[ name ] = sourceItemRule[ name ];\n\t\t}\n\t}\n}\n\nfunction copyProperty( sourceItemRules, itemRule, propertyName ) {\n\tfor ( const sourceItemRule of sourceItemRules ) {\n\t\tif ( typeof sourceItemRule[ propertyName ] == 'string' ) {\n\t\t\titemRule[ propertyName ].push( sourceItemRule[ propertyName ] );\n\t\t} else if ( Array.isArray( sourceItemRule[ propertyName ] ) ) {\n\t\t\titemRule[ propertyName ].push( ...sourceItemRule[ propertyName ] );\n\t\t}\n\t}\n}\n\nfunction makeInheritAllWork( sourceItemRules, itemRule ) {\n\tfor ( const sourceItemRule of sourceItemRules ) {\n\t\tconst inheritFrom = sourceItemRule.inheritAllFrom;\n\n\t\tif ( inheritFrom ) {\n\t\t\titemRule.allowContentOf.push( inheritFrom );\n\t\t\titemRule.allowWhere.push( inheritFrom );\n\t\t\titemRule.allowAttributesOf.push( inheritFrom );\n\t\t\titemRule.inheritTypesFrom.push( inheritFrom );\n\t\t}\n\t}\n}\n\nfunction getAllowedChildren( compiledDefinitions, itemName ) {\n\tconst itemRule = compiledDefinitions[ itemName ];\n\n\treturn getValues( compiledDefinitions ).filter( def => def.allowIn.includes( itemRule.name ) );\n}\n\nfunction getValues( obj ) {\n\treturn Object.keys( obj ).map( key => obj[ key ] );\n}\n\nfunction mapContextItem( ctxItem ) {\n\tif ( typeof ctxItem == 'string' ) {\n\t\treturn {\n\t\t\tname: ctxItem,\n\n\t\t\t* getAttributeKeys() {},\n\n\t\t\tgetAttribute() {}\n\t\t};\n\t} else {\n\t\treturn {\n\t\t\t// '$text' means text nodes and text proxies.\n\t\t\tname: ctxItem.is( 'element' ) ? ctxItem.name : '$text',\n\n\t\t\t* getAttributeKeys() {\n\t\t\t\tyield* ctxItem.getAttributeKeys();\n\t\t\t},\n\n\t\t\tgetAttribute( key ) {\n\t\t\t\treturn ctxItem.getAttribute( key );\n\t\t\t}\n\t\t};\n\t}\n}\n\n// Generator function returning values from provided walkers, switching between them at each iteration. If only one walker\n// is provided it will return data only from that walker.\n//\n// @param {module:engine/module/treewalker~TreeWalker} [backward] Walker iterating in backward direction.\n// @param {module:engine/module/treewalker~TreeWalker} [forward] Walker iterating in forward direction.\n// @returns {Iterable.<Object>} Object returned at each iteration contains `value` and `walker` (informing which walker returned\n// given value) fields.\nfunction* combineWalkers( backward, forward ) {\n\tlet done = false;\n\n\twhile ( !done ) {\n\t\tdone = true;\n\n\t\tif ( backward ) {\n\t\t\tconst step = backward.next();\n\n\t\t\tif ( !step.done ) {\n\t\t\t\tdone = false;\n\t\t\t\tyield {\n\t\t\t\t\twalker: backward,\n\t\t\t\t\tvalue: step.value\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( forward ) {\n\t\t\tconst step = forward.next();\n\n\t\t\tif ( !step.done ) {\n\t\t\t\tdone = false;\n\t\t\t\tyield {\n\t\t\t\t\twalker: forward,\n\t\t\t\t\tvalue: step.value\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Takes an array of non-intersecting ranges. For each of them gets minimal flat ranges covering that range and returns\n// all those minimal flat ranges.\n//\n// @param {Array.<module:engine/model/range~Range>} ranges Ranges to process.\n// @returns {Iterable.<module:engine/model/range~Range>} Minimal flat ranges of given `ranges`.\nfunction* convertToMinimalFlatRanges( ranges ) {\n\tfor ( const range of ranges ) {\n\t\tyield* range.getMinimalFlatRanges();\n\t}\n}\n\nfunction removeDisallowedAttributeFromNode( schema, node, writer ) {\n\tfor ( const attribute of node.getAttributeKeys() ) {\n\t\tif ( !schema.checkAttribute( node, attribute ) ) {\n\t\t\twriter.removeAttribute( attribute, node );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/conversion/upcastdispatcher\n */\n\nimport ViewConsumable from './viewconsumable';\nimport ModelRange from '../model/range';\nimport ModelPosition from '../model/position';\nimport { SchemaContext } from '../model/schema';\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * `UpcastDispatcher` is a central point of {@link module:engine/view/view view} conversion, which is a process of\n * converting given {@link module:engine/view/documentfragment~DocumentFragment view document fragment} or\n * {@link module:engine/view/element~Element} into another structure.\n * In default application, {@link module:engine/view/view view} is converted to {@link module:engine/model/model}.\n *\n * During conversion process, for all {@link module:engine/view/node~Node view nodes} from the converted view document fragment,\n * `UpcastDispatcher` fires corresponding events. Special callbacks called \"converters\" should listen to\n * `UpcastDispatcher` for those events.\n *\n * Each callback, as the second argument, is passed a special object `data` that has `viewItem`, `modelCursor` and\n * `modelRange` properties. `viewItem` property contains {@link module:engine/view/node~Node view node} or\n * {@link module:engine/view/documentfragment~DocumentFragment view document fragment}\n * that is converted at the moment and might be handled by the callback. `modelRange` property should be used to save the result\n * of conversion and is always a {@link module:engine/model/range~Range} when conversion result is correct.\n * `modelCursor` property is a {@link module:engine/model/position~Position position} on which conversion result will be inserted\n * and is a context according to {@link module:engine/model/schema~Schema schema} will be checked before the conversion.\n * See also {@link ~UpcastDispatcher#convert}. It is also shared by reference by all callbacks listening to given event.\n *\n * The third parameter passed to a callback is an instance of {@link ~UpcastDispatcher}\n * which provides additional tools for converters.\n *\n * Examples of providing callbacks for `UpcastDispatcher`:\n *\n *\t\t// Converter for links (<a>).\n *\t\teditor.data.upcastDispatcher.on( 'element:a', ( evt, data, conversionApi ) => {\n *\t\t\tif ( conversionApi.consumable.consume( data.viewItem, { name: true, attributes: [ 'href' ] } ) ) {\n *\t\t\t\t// <a> element is inline and is represented by an attribute in the model.\n *\t\t\t\t// This is why we need to convert only children.\n *\t\t\t\tconst { modelRange } = conversionApi.convertChildren( data.viewItem, data.modelCursor );\n *\n *\t\t\t\tfor ( let item of modelRange.getItems() ) {\n *\t\t\t\t\tif ( conversionApi.schema.checkAttribute( item, 'linkHref' ) ) {\n *\t\t\t\t\t\tconversionApi.writer.setAttribute( 'linkHref', data.viewItem.getAttribute( 'href' ), item );\n *\t\t\t\t\t}\n *\t\t\t\t}\n *\t\t\t}\n *\t\t} );\n *\n *\t\t// Convert <p>'s font-size style.\n *\t\t// Note: You should use a low-priority observer in order to ensure that\n *\t\t// it's executed after the element-to-element converter.\n *\t\teditor.data.upcastDispatcher.on( 'element:p', ( evt, data, conversionApi ) => {\n *\t\t\tconst { consumable, schema, writer } = conversionApi;\n *\n *\t\t\tif ( !consumable.consume( data.viewItem, { style: 'font-size' } ) ) {\n *\t\t\t\treturn;\n *\t\t\t}\n *\n *\t\t\tconst fontSize = data.viewItem.getStyle( 'font-size' );\n *\n *\t\t\t// Don't go for the model element after data.modelCursor because it might happen\n *\t\t\t// that a single view element was converted to multiple model elements. Get all of them.\n *\t\t\tfor ( const item of data.modelRange.getItems( { shallow: true } ) ) {\n *\t\t\t\tif ( schema.checkAttribute( item, 'fontSize' ) ) {\n *\t\t\t\t\twriter.setAttribute( 'fontSize', fontSize, item );\n *\t\t\t\t}\n *\t\t\t}\n *\t\t}, { priority: 'low' } );\n *\n *\t\t// Convert all elements which have no custom converter into paragraph (autoparagraphing).\n *  \teditor.data.upcastDispatcher.on( 'element', ( evt, data, conversionApi ) => {\n *  \t \t// When element is already consumed by higher priority converters then do nothing.\n *  \t \tif ( conversionApi.consumable.test( data.viewItem, { name: data.viewItem.name } ) ) {\n *  \t \t\t\tconst paragraph = conversionApi.writer.createElement( 'paragraph' );\n *\n *  \t \t\t\t// Find allowed parent for paragraph that we are going to insert. If current parent does not allow\n *  \t \t\t\t// to insert paragraph but one of the ancestors does then split nodes to allowed parent.\n *  \t \t\t\tconst splitResult = conversionApi.splitToAllowedParent( paragraph, data.modelCursor );\n *\n *  \t \t\t\t// When there is no split result it means that we can't insert paragraph in this position.\n *  \t \t\t\tif ( splitResult ) {\n *  \t \t\t\t\t// Insert paragraph in allowed position.\n *  \t \t\t\t\tconversionApi.writer.insert( paragraph, splitResult.position );\n *\n *  \t \t\t\t\t// Convert children to paragraph.\n *  \t \t\t\t\tconst { modelRange } = conversionApi.convertChildren(\n *  \t \t\t\t\t\tdata.viewItem,\n *  \t \t\t\t\t\tconversionApi.writer.createPositionAt( paragraph, 0 )\n *  \t \t\t\t\t);\n *\n * \t\t\t\t\t\t// Set as conversion result, attribute converters may use this property.\n *  \t \t\t\t\tdata.modelRange = conversionApi.writer.createRange(\n *  \t \t\t\t\t\tconversionApi.writer.createPositionBefore( paragraph ),\n *  \t \t\t\t\t\tmodelRange.end\n *  \t \t\t\t\t);\n *\n *  \t \t\t\t\t// Continue conversion inside paragraph.\n *  \t \t\t\t\tdata.modelCursor = data.modelRange.end;\n *  \t \t\t\t}\n *  \t \t\t}\n *  \t \t}\n *  \t }, { priority: 'low' } );\n *\n * Before each conversion process, `UpcastDispatcher` fires {@link ~UpcastDispatcher#event:viewCleanup}\n * event which can be used to prepare tree view for conversion.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n * @fires viewCleanup\n * @fires element\n * @fires text\n * @fires documentFragment\n */\nexport default class UpcastDispatcher {\n\t/**\n\t * Creates a `UpcastDispatcher` that operates using passed API.\n\t *\n\t * @see module:engine/conversion/upcastdispatcher~UpcastConversionApi\n\t * @param {Object} [conversionApi] Additional properties for interface that will be passed to events fired\n\t * by `UpcastDispatcher`.\n\t */\n\tconstructor( conversionApi = {} ) {\n\t\t/**\n\t\t * List of the elements that were created during splitting.\n\t\t *\n\t\t * After conversion process the list is cleared.\n\t\t *\n\t\t * @private\n\t\t * @type {Map.<module:engine/model/element~Element,Array.<module:engine/model/element~Element>>}\n\t\t */\n\t\tthis._splitParts = new Map();\n\n\t\t/**\n\t\t * Position in the temporary structure where the converted content is inserted. The structure reflect the context of\n\t\t * the target position where the content will be inserted. This property is build based on the context parameter of the\n\t\t * convert method.\n\t\t *\n\t\t * @private\n\t\t * @type {module:engine/model/position~Position|null}\n\t\t */\n\t\tthis._modelCursor = null;\n\n\t\t/**\n\t\t * Interface passed by dispatcher to the events callbacks.\n\t\t *\n\t\t * @member {module:engine/conversion/upcastdispatcher~UpcastConversionApi}\n\t\t */\n\t\tthis.conversionApi = Object.assign( {}, conversionApi );\n\n\t\t// `convertItem`, `convertChildren` and `splitToAllowedParent` are bound to this `UpcastDispatcher`\n\t\t// instance and set on `conversionApi`. This way only a part of `UpcastDispatcher` API is exposed.\n\t\tthis.conversionApi.convertItem = this._convertItem.bind( this );\n\t\tthis.conversionApi.convertChildren = this._convertChildren.bind( this );\n\t\tthis.conversionApi.splitToAllowedParent = this._splitToAllowedParent.bind( this );\n\t\tthis.conversionApi.getSplitParts = this._getSplitParts.bind( this );\n\t}\n\n\t/**\n\t * Starts the conversion process. The entry point for the conversion.\n\t *\n\t * @fires element\n\t * @fires text\n\t * @fires documentFragment\n\t * @param {module:engine/view/documentfragment~DocumentFragment|module:engine/view/element~Element} viewItem\n\t * Part of the view to be converted.\n\t * @param {module:engine/model/writer~Writer} writer Instance of model writer.\n\t * @param {module:engine/model/schema~SchemaContextDefinition} [context=['$root']] Elements will be converted according to this context.\n\t * @returns {module:engine/model/documentfragment~DocumentFragment} Model data that is a result of the conversion process\n\t * wrapped in `DocumentFragment`. Converted marker elements will be set as that document fragment's\n\t * {@link module:engine/model/documentfragment~DocumentFragment#markers static markers map}.\n\t */\n\tconvert( viewItem, writer, context = [ '$root' ] ) {\n\t\tthis.fire( 'viewCleanup', viewItem );\n\n\t\t// Create context tree and set position in the top element.\n\t\t// Items will be converted according to this position.\n\t\tthis._modelCursor = createContextTree( context, writer );\n\n\t\t// Store writer in conversion as a conversion API\n\t\t// to be sure that conversion process will use the same batch.\n\t\tthis.conversionApi.writer = writer;\n\n\t\t// Create consumable values list for conversion process.\n\t\tthis.conversionApi.consumable = ViewConsumable.createFrom( viewItem );\n\n\t\t// Custom data stored by converter for conversion process.\n\t\tthis.conversionApi.store = {};\n\n\t\t// Do the conversion.\n\t\tconst { modelRange } = this._convertItem( viewItem, this._modelCursor );\n\n\t\t// Conversion result is always a document fragment so let's create it.\n\t\tconst documentFragment = writer.createDocumentFragment();\n\n\t\t// When there is a conversion result.\n\t\tif ( modelRange ) {\n\t\t\t// Remove all empty elements that were create while splitting.\n\t\t\tthis._removeEmptyElements();\n\n\t\t\t// Move all items that were converted in context tree to the document fragment.\n\t\t\tfor ( const item of Array.from( this._modelCursor.parent.getChildren() ) ) {\n\t\t\t\twriter.append( item, documentFragment );\n\t\t\t}\n\n\t\t\t// Extract temporary markers elements from model and set as static markers collection.\n\t\t\tdocumentFragment.markers = extractMarkersFromModelFragment( documentFragment, writer );\n\t\t}\n\n\t\t// Clear context position.\n\t\tthis._modelCursor = null;\n\n\t\t// Clear split elements lists.\n\t\tthis._splitParts.clear();\n\n\t\t// Clear conversion API.\n\t\tthis.conversionApi.writer = null;\n\t\tthis.conversionApi.store = null;\n\n\t\t// Return fragment as conversion result.\n\t\treturn documentFragment;\n\t}\n\n\t/**\n\t * @private\n\t * @see module:engine/conversion/upcastdispatcher~UpcastConversionApi#convertItem\n\t */\n\t_convertItem( viewItem, modelCursor ) {\n\t\tconst data = Object.assign( { viewItem, modelCursor, modelRange: null } );\n\n\t\tif ( viewItem.is( 'element' ) ) {\n\t\t\tthis.fire( 'element:' + viewItem.name, data, this.conversionApi );\n\t\t} else if ( viewItem.is( 'text' ) ) {\n\t\t\tthis.fire( 'text', data, this.conversionApi );\n\t\t} else {\n\t\t\tthis.fire( 'documentFragment', data, this.conversionApi );\n\t\t}\n\n\t\t// Handle incorrect conversion result.\n\t\tif ( data.modelRange && !( data.modelRange instanceof ModelRange ) ) {\n\t\t\t/**\n\t\t\t * Incorrect conversion result was dropped.\n\t\t\t *\n\t\t\t * {@link module:engine/model/range~Range Model range} should be a conversion result.\n\t\t\t *\n\t\t\t * @error view-conversion-dispatcher-incorrect-result\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-conversion-dispatcher-incorrect-result: Incorrect conversion result was dropped.', this );\n\t\t}\n\n\t\treturn { modelRange: data.modelRange, modelCursor: data.modelCursor };\n\t}\n\n\t/**\n\t * @private\n\t * @see module:engine/conversion/upcastdispatcher~UpcastConversionApi#convertChildren\n\t */\n\t_convertChildren( viewItem, modelCursor ) {\n\t\tconst modelRange = new ModelRange( modelCursor );\n\t\tlet nextModelCursor = modelCursor;\n\n\t\tfor ( const viewChild of Array.from( viewItem.getChildren() ) ) {\n\t\t\tconst result = this._convertItem( viewChild, nextModelCursor );\n\n\t\t\tif ( result.modelRange instanceof ModelRange ) {\n\t\t\t\tmodelRange.end = result.modelRange.end;\n\t\t\t\tnextModelCursor = result.modelCursor;\n\t\t\t}\n\t\t}\n\n\t\treturn { modelRange, modelCursor: nextModelCursor };\n\t}\n\n\t/**\n\t * @private\n\t * @see module:engine/conversion/upcastdispatcher~UpcastConversionApi#splitToAllowedParent\n\t */\n\t_splitToAllowedParent( node, modelCursor ) {\n\t\t// Try to find allowed parent.\n\t\tconst allowedParent = this.conversionApi.schema.findAllowedParent( modelCursor, node );\n\n\t\t// When there is no parent that allows to insert node then return `null`.\n\t\tif ( !allowedParent ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// When current position parent allows to insert node then return this position.\n\t\tif ( allowedParent === modelCursor.parent ) {\n\t\t\treturn { position: modelCursor };\n\t\t}\n\n\t\t// When allowed parent is in context tree.\n\t\tif ( this._modelCursor.parent.getAncestors().includes( allowedParent ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Split element to allowed parent.\n\t\tconst splitResult = this.conversionApi.writer.split( modelCursor, allowedParent );\n\n\t\t// Using the range returned by `model.Writer#split`, we will pair original elements with their split parts.\n\t\t//\n\t\t// The range returned from the writer spans \"over the split\" or, precisely saying, from the end of the original element (the one\n\t\t// that got split) to the beginning of the other part of that element:\n\t\t//\n\t\t// <limit><a><b><c>X[]Y</c></b><a></limit> ->\n\t\t// <limit><a><b><c>X[</c></b></a><a><b><c>]Y</c></b></a>\n\t\t//\n\t\t// After the split there cannot be any full node between the positions in `splitRange`. The positions are touching.\n\t\t// Also, because of how splitting works, it is easy to notice, that \"closing tags\" are in the reverse order than \"opening tags\".\n\t\t// Also, since we split all those elements, each of them has to have the other part.\n\t\t//\n\t\t// With those observations in mind, we will pair the original elements with their split parts by saving \"closing tags\" and matching\n\t\t// them with \"opening tags\" in the reverse order. For that we can use a stack.\n\t\tconst stack = [];\n\n\t\tfor ( const treeWalkerValue of splitResult.range.getWalker() ) {\n\t\t\tif ( treeWalkerValue.type == 'elementEnd' ) {\n\t\t\t\tstack.push( treeWalkerValue.item );\n\t\t\t} else {\n\t\t\t\t// There should not be any text nodes after the element is split, so the only other value is `elementStart`.\n\t\t\t\tconst originalPart = stack.pop();\n\t\t\t\tconst splitPart = treeWalkerValue.item;\n\n\t\t\t\tthis._registerSplitPair( originalPart, splitPart );\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tposition: splitResult.position,\n\t\t\tcursorParent: splitResult.range.end.parent\n\t\t};\n\t}\n\n\t/**\n\t * Registers that `splitPart` element is a split part of the `originalPart` element.\n\t *\n\t * Data set by this method is used by {@link #_getSplitParts} and {@link #_removeEmptyElements}.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} originalPart\n\t * @param {module:engine/model/element~Element} splitPart\n\t */\n\t_registerSplitPair( originalPart, splitPart ) {\n\t\tif ( !this._splitParts.has( originalPart ) ) {\n\t\t\tthis._splitParts.set( originalPart, [ originalPart ] );\n\t\t}\n\n\t\tconst list = this._splitParts.get( originalPart );\n\n\t\tthis._splitParts.set( splitPart, list );\n\t\tlist.push( splitPart );\n\t}\n\n\t/**\n\t * @private\n\t * @see module:engine/conversion/upcastdispatcher~UpcastConversionApi#getSplitParts\n\t */\n\t_getSplitParts( element ) {\n\t\tlet parts;\n\n\t\tif ( !this._splitParts.has( element ) ) {\n\t\t\tparts = [ element ];\n\t\t} else {\n\t\t\tparts = this._splitParts.get( element );\n\t\t}\n\n\t\treturn parts;\n\t}\n\n\t/**\n\t * Checks if there are any empty elements created while splitting and removes them.\n\t *\n\t * This method works recursively to re-check empty elements again after at least one element was removed in the initial call,\n\t * as some elements might have become empty after other empty elements were removed from them.\n\t *\n\t * @private\n\t */\n\t_removeEmptyElements() {\n\t\tlet anyRemoved = false;\n\n\t\tfor ( const element of this._splitParts.keys() ) {\n\t\t\tif ( element.isEmpty ) {\n\t\t\t\tthis.conversionApi.writer.remove( element );\n\t\t\t\tthis._splitParts.delete( element );\n\n\t\t\t\tanyRemoved = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( anyRemoved ) {\n\t\t\tthis._removeEmptyElements();\n\t\t}\n\t}\n\n\t/**\n\t * Fired before the first conversion event, at the beginning of upcast (view to model conversion) process.\n\t *\n\t * @event viewCleanup\n\t * @param {module:engine/view/documentfragment~DocumentFragment|module:engine/view/element~Element}\n\t * viewItem Part of the view to be converted.\n\t */\n\n\t/**\n\t * Fired when {@link module:engine/view/element~Element} is converted.\n\t *\n\t * `element` is a namespace event for a class of events. Names of actually called events follow this pattern:\n\t * `element:<elementName>` where `elementName` is the name of converted element. This way listeners may listen to\n\t * all elements conversion or to conversion of specific elements.\n\t *\n\t * @event element\n\t * @param {Object} data Conversion data. Keep in mind that this object is shared by reference between all\n\t * callbacks that will be called. This means that callbacks can override values if needed, and those values will\n\t * be available in other callbacks.\n\t * @param {module:engine/view/item~Item} data.viewItem Converted item.\n\t * @param {module:engine/model/position~Position} data.modelCursor Position where a converter should start changes.\n\t * Change this value for the next converter to tell where the conversion should continue.\n\t * @param {module:engine/model/range~Range} data.modelRange The current state of conversion result. Every change to\n\t * converted element should be reflected by setting or modifying this property.\n\t * @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion utilities to be used by callback.\n\t */\n\n\t/**\n\t * Fired when {@link module:engine/view/text~Text} is converted.\n\t *\n\t * @event text\n\t * @see #event:element\n\t */\n\n\t/**\n\t * Fired when {@link module:engine/view/documentfragment~DocumentFragment} is converted.\n\t *\n\t * @event documentFragment\n\t * @see #event:element\n\t */\n}\n\nmix( UpcastDispatcher, EmitterMixin );\n\n// Traverses given model item and searches elements which marks marker range. Found element is removed from\n// DocumentFragment but path of this element is stored in a Map which is then returned.\n//\n// @param {module:engine/view/documentfragment~DocumentFragment|module:engine/view/node~Node} modelItem Fragment of model.\n// @returns {Map<String, module:engine/model/range~Range>} List of static markers.\nfunction extractMarkersFromModelFragment( modelItem, writer ) {\n\tconst markerElements = new Set();\n\tconst markers = new Map();\n\n\t// Create ModelTreeWalker.\n\tconst range = ModelRange._createIn( modelItem ).getItems();\n\n\t// Walk through DocumentFragment and collect marker elements.\n\tfor ( const item of range ) {\n\t\t// Check if current element is a marker.\n\t\tif ( item.name == '$marker' ) {\n\t\t\tmarkerElements.add( item );\n\t\t}\n\t}\n\n\t// Walk through collected marker elements store its path and remove its from the DocumentFragment.\n\tfor ( const markerElement of markerElements ) {\n\t\tconst markerName = markerElement.getAttribute( 'data-name' );\n\t\tconst currentPosition = writer.createPositionBefore( markerElement );\n\n\t\t// When marker of given name is not stored it means that we have found the beginning of the range.\n\t\tif ( !markers.has( markerName ) ) {\n\t\t\tmarkers.set( markerName, new ModelRange( currentPosition.clone() ) );\n\t\t// Otherwise is means that we have found end of the marker range.\n\t\t} else {\n\t\t\tmarkers.get( markerName ).end = currentPosition.clone();\n\t\t}\n\n\t\t// Remove marker element from DocumentFragment.\n\t\twriter.remove( markerElement );\n\t}\n\n\treturn markers;\n}\n\n// Creates model fragment according to given context and returns position in the bottom (the deepest) element.\nfunction createContextTree( contextDefinition, writer ) {\n\tlet position;\n\n\tfor ( const item of new SchemaContext( contextDefinition ) ) {\n\t\tconst attributes = {};\n\n\t\tfor ( const key of item.getAttributeKeys() ) {\n\t\t\tattributes[ key ] = item.getAttribute( key );\n\t\t}\n\n\t\tconst current = writer.createElement( item.name, attributes );\n\n\t\tif ( position ) {\n\t\t\twriter.append( current, position );\n\t\t}\n\n\t\tposition = ModelPosition._createAt( current, 0 );\n\t}\n\n\treturn position;\n}\n\n/**\n * Conversion interface that is registered for given {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher}\n * and is passed as one of parameters when {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher dispatcher}\n * fires it's events.\n *\n * @interface module:engine/conversion/upcastdispatcher~UpcastConversionApi\n */\n\n/**\n * Starts conversion of given item by firing an appropriate event.\n *\n * Every fired event is passed (as first parameter) an object with `modelRange` property. Every event may set and/or\n * modify that property. When all callbacks are done, the final value of `modelRange` property is returned by this method.\n * The `modelRange` must be {@link module:engine/model/range~Range model range} or `null` (as set by default).\n *\n * @method #convertItem\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:text\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:documentFragment\n * @param {module:engine/view/item~Item} viewItem Item to convert.\n * @param {module:engine/model/position~Position} modelCursor Position of conversion.\n * @returns {Object} result Conversion result.\n * @returns {module:engine/model/range~Range|null} result.modelRange Model range containing result of item conversion,\n * created and modified by callbacks attached to fired event, or `null` if the conversion result was incorrect.\n * @returns {module:engine/model/position~Position} result.modelCursor Position where conversion should be continued.\n */\n\n/**\n * Starts conversion of all children of given item by firing appropriate events for all those children.\n *\n * @method #convertChildren\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:text\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:documentFragment\n * @param {module:engine/view/item~Item} viewItem Element which children should be converted.\n * @param {module:engine/model/position~Position} modelCursor Position of conversion.\n * @returns {Object} result Conversion result.\n * @returns {module:engine/model/range~Range} result.modelRange Model range containing results of conversion of all children of given item.\n * When no children was converted then range is collapsed.\n * @returns {module:engine/model/position~Position} result.modelCursor Position where conversion should be continued.\n */\n\n/**\n * Checks {@link module:engine/model/schema~Schema schema} to find allowed parent for element that we are going to insert\n * starting from given position. If current parent does not allow to insert element but one of the ancestors does then\n * split nodes to allowed parent.\n *\n * If schema allows to insert node in given position, nothing is split and object with that position is returned.\n *\n * If it was not possible to find allowed parent, `null` is returned, nothing is split.\n *\n * Otherwise, ancestors are split and object with position and the copy of the split element is returned.\n *\n * For instance, if `<image>` is not allowed in `<paragraph>` but is allowed in `$root`:\n *\n *\t\t<paragraph>foo[]bar</paragraph>\n *\n *  \t-> split for `<image>` ->\n *\n *  \t<paragraph>foo</paragraph>[]<paragraph>bar</paragraph>\n *\n * In the sample above position between `<paragraph>` elements will be returned as `position` and the second `paragraph`\n * as `cursorParent`.\n *\n * @method #splitToAllowedParent\n * @param {module:engine/model/position~Position} position Position on which element is going to be inserted.\n * @param {module:engine/model/node~Node} node Node to insert.\n * @returns {Object|null} Split result. If it was not possible to find allowed position `null` is returned.\n * @returns {module:engine/model/position~Position} position between split elements.\n * @returns {module:engine/model/element~Element} [cursorParent] Element inside which cursor should be placed to\n * continue conversion. When element is not defined it means that there was no split.\n */\n\n/**\n * Returns all the split parts of given `element` that were created during upcasting through using {@link #splitToAllowedParent}.\n * It enables you to easily track those elements and continue processing them after they are split during their children conversion.\n *\n *\t\t<paragraph>Foo<image />bar<image />baz</paragraph> ->\n *\t\t<paragraph>Foo</paragraph><image /><paragraph>bar</paragraph><image /><paragraph>baz</paragraph>\n *\n * For a reference to any of above paragraphs, the function will return all three paragraphs (the original element included),\n * sorted in the order of their creation (the original element is the first one).\n *\n * If given `element` was not split, an array with single element is returned.\n *\n * Example of a usage in a converter code:\n *\n *\t\tconst myElement = conversionApi.writer.createElement( 'myElement' );\n *\n *\t\t// Children conversion may split `myElement`.\n *\t\tconversionApi.convertChildren( myElement, modelCursor );\n *\n *\t\tconst splitParts = conversionApi.getSplitParts( myElement );\n *\t\tconst lastSplitPart = splitParts[ splitParts.length - 1 ];\n *\n *\t\t// Setting `data.modelRange` basing on split parts:\n *\t\tdata.modelRange = conversionApi.writer.createRange(\n *\t\t\tconversionApi.writer.createPositionBefore( myElement ),\n *\t\t\tconversionApi.writer.createPositionAfter( lastSplitPart )\n *\t\t);\n *\n *\t\t// Setting `data.modelCursor` to continue after the last split element:\n *\t\tdata.modelCursor = conversionApi.writer.createPositionAfter( lastSplitPart );\n *\n * **Tip:** if you are unable to get a reference to the original element (for example because the code is split into multiple converters\n * or even classes) but it was already converted, you might want to check first element in `data.modelRange`. This is a common situation\n * if an attribute converter is separated from an element converter.\n *\n * @method #getSplitParts\n * @param {module:engine/model/element~Element} element\n * @returns {Array.<module:engine/model/element~Element>}\n */\n\n/**\n * Stores information about what parts of processed view item are still waiting to be handled. After a piece of view item\n * was converted, appropriate consumable value should be {@link module:engine/conversion/viewconsumable~ViewConsumable#consume consumed}.\n *\n * @member {module:engine/conversion/viewconsumable~ViewConsumable} #consumable\n */\n\n/**\n * Custom data stored by converters for conversion process. Custom properties of this object can be defined and use to\n * pass parameters between converters.\n *\n * The difference between this property and `data` parameter of\n * {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element} is that `data` parameters allows you\n * to pass parameters within a single event and `store` within the whole conversion.\n *\n * @member {Object} #store\n */\n\n/**\n * The model's schema instance.\n *\n * @member {module:engine/model/schema~Schema} #schema\n */\n\n/**\n * The {@link module:engine/model/writer~Writer} instance used to manipulate data during conversion.\n *\n * @member {module:engine/model/writer~Writer} #writer\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/controller/datacontroller\n */\n\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\nimport Mapper from '../conversion/mapper';\n\nimport DowncastDispatcher from '../conversion/downcastdispatcher';\nimport { insertText } from '../conversion/downcasthelpers';\n\nimport UpcastDispatcher from '../conversion/upcastdispatcher';\nimport { convertText, convertToModelFragment } from '../conversion/upcasthelpers';\n\nimport ViewDocumentFragment from '../view/documentfragment';\nimport ViewDocument from '../view/document';\nimport ViewDowncastWriter from '../view/downcastwriter';\n\nimport ModelRange from '../model/range';\n\n/**\n * Controller for the data pipeline. The data pipeline controls how data is retrieved from the document\n * and set inside it. Hence, the controller features two methods which allow to {@link ~DataController#get get}\n * and {@link ~DataController#set set} data of the {@link ~DataController#model model}\n * using given:\n *\n * * {@link module:engine/dataprocessor/dataprocessor~DataProcessor data processor},\n * * downcast converters,\n * * upcast converters.\n *\n * An instance of the data controller is always available in the {@link module:core/editor/editor~Editor#data `editor.data`}\n * property:\n *\n *\t\teditor.data.get( { rootName: 'customRoot' } ); // -> '<p>Hello!</p>'\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class DataController {\n\t/**\n\t * Creates a data controller instance.\n\t *\n\t * @param {module:engine/model/model~Model} model Data model.\n\t * @param {module:engine/dataprocessor/dataprocessor~DataProcessor} [dataProcessor] Data processor that should be used\n\t * by the controller.\n\t */\n\tconstructor( model, dataProcessor ) {\n\t\t/**\n\t\t * Data model.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/model~Model}\n\t\t */\n\t\tthis.model = model;\n\n\t\t/**\n\t\t * Data processor used during the conversion.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/dataprocessor/dataprocessor~DataProcessor}\n\t\t */\n\t\tthis.processor = dataProcessor;\n\n\t\t/**\n\t\t * Mapper used for the conversion. It has no permanent bindings, because they are created when getting data and\n\t\t * cleared directly after the data are converted. However, the mapper is defined as a class property, because\n\t\t * it needs to be passed to the `DowncastDispatcher` as a conversion API.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/conversion/mapper~Mapper}\n\t\t */\n\t\tthis.mapper = new Mapper();\n\n\t\t/**\n\t\t * Downcast dispatcher used by the {@link #get get method}. Downcast converters should be attached to it.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/conversion/downcastdispatcher~DowncastDispatcher}\n\t\t */\n\t\tthis.downcastDispatcher = new DowncastDispatcher( {\n\t\t\tmapper: this.mapper\n\t\t} );\n\t\tthis.downcastDispatcher.on( 'insert:$text', insertText(), { priority: 'lowest' } );\n\n\t\t/**\n\t\t * Upcast dispatcher used by the {@link #set set method}. Upcast converters should be attached to it.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/conversion/upcastdispatcher~UpcastDispatcher}\n\t\t */\n\t\tthis.upcastDispatcher = new UpcastDispatcher( {\n\t\t\tschema: model.schema\n\t\t} );\n\n\t\t// Define default converters for text and elements.\n\t\t//\n\t\t// Note that if there is no default converter for the element it will be skipped, for instance `<b>foo</b>` will be\n\t\t// converted to nothing. We add `convertToModelFragment` as a last converter so it converts children of that\n\t\t// element to the document fragment so `<b>foo</b>` will be converted to `foo` if there is no converter for `<b>`.\n\t\tthis.upcastDispatcher.on( 'text', convertText(), { priority: 'lowest' } );\n\t\tthis.upcastDispatcher.on( 'element', convertToModelFragment(), { priority: 'lowest' } );\n\t\tthis.upcastDispatcher.on( 'documentFragment', convertToModelFragment(), { priority: 'lowest' } );\n\n\t\tthis.decorate( 'init' );\n\n\t\t// Fire `ready` event when initialisation has completed. Such low level listener gives possibility\n\t\t// to plug into initialisation pipeline without interrupting the initialisation flow.\n\t\tthis.on( 'init', () => {\n\t\t\tthis.fire( 'ready' );\n\t\t}, { priority: 'lowest' } );\n\t}\n\n\t/**\n\t * Returns the model's data converted by downcast dispatchers attached to {@link #downcastDispatcher} and\n\t * formatted by the {@link #processor data processor}.\n\t *\n\t * @param {Object} [options]\n\t * @param {String} [options.rootName='main'] Root name.\n\t * @param {String} [options.trim='empty'] Whether returned data should be trimmed. This option is set to `empty` by default,\n\t * which means whenever editor content is considered empty, an empty string will be returned. To turn off trimming completely\n\t * use `'none'`. In such cases exact content will be returned (for example `<p>&nbsp;</p>` for an empty editor).\n\t * @returns {String} Output data.\n\t */\n\tget( options ) {\n\t\tconst { rootName = 'main', trim = 'empty' } = options || {};\n\n\t\tif ( !this._checkIfRootsExists( [ rootName ] ) ) {\n\t\t\t/**\n\t\t\t * Cannot get data from a non-existing root. This error is thrown when {@link #get DataController#get() method}\n\t\t\t * is called with non-existent root name. For example, if there is an editor instance with only `main` root,\n\t\t\t * calling {@link #get} like:\n\t\t\t *\n\t\t\t *\t\tdata.get( { rootName: 'root2' } );\n\t\t\t *\n\t\t\t * will throw this error.\n\t\t\t *\n\t\t\t * @error datacontroller-get-non-existent-root\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'datacontroller-get-non-existent-root: Attempting to get data from a non-existing root.', this );\n\t\t}\n\n\t\tconst root = this.model.document.getRoot( rootName );\n\n\t\tif ( trim === 'empty' && !this.model.hasContent( root, { ignoreWhitespaces: true } ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn this.stringify( root );\n\t}\n\n\t/**\n\t * Returns the content of the given {@link module:engine/model/element~Element model's element} or\n\t * {@link module:engine/model/documentfragment~DocumentFragment model document fragment} converted by the downcast converters\n\t * attached to {@link #downcastDispatcher} and formatted by the {@link #processor data processor}.\n\t *\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} modelElementOrFragment\n\t * Element whose content will be stringified.\n\t * @returns {String} Output data.\n\t */\n\tstringify( modelElementOrFragment ) {\n\t\t// Model -> view.\n\t\tconst viewDocumentFragment = this.toView( modelElementOrFragment );\n\n\t\t// View -> data.\n\t\treturn this.processor.toData( viewDocumentFragment );\n\t}\n\n\t/**\n\t * Returns the content of the given {@link module:engine/model/element~Element model element} or\n\t * {@link module:engine/model/documentfragment~DocumentFragment model document fragment} converted by the downcast\n\t * converters attached to {@link #downcastDispatcher} to a\n\t * {@link module:engine/view/documentfragment~DocumentFragment view document fragment}.\n\t *\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} modelElementOrFragment\n\t * Element or document fragment whose content will be converted.\n\t * @returns {module:engine/view/documentfragment~DocumentFragment} Output view DocumentFragment.\n\t */\n\ttoView( modelElementOrFragment ) {\n\t\t// Clear bindings so the call to this method gives correct results.\n\t\tthis.mapper.clearBindings();\n\n\t\t// First, convert elements.\n\t\tconst modelRange = ModelRange._createIn( modelElementOrFragment );\n\n\t\tconst viewDocumentFragment = new ViewDocumentFragment();\n\n\t\t// Create separate ViewDowncastWriter just for data conversion purposes.\n\t\t// We have no view controller and rendering do DOM in DataController so view.change() block is not used here.\n\t\tconst viewWriter = new ViewDowncastWriter( new ViewDocument() );\n\t\tthis.mapper.bindElements( modelElementOrFragment, viewDocumentFragment );\n\n\t\tthis.downcastDispatcher.convertInsert( modelRange, viewWriter );\n\n\t\tif ( !modelElementOrFragment.is( 'documentFragment' ) ) {\n\t\t\t// Then, if a document element is converted, convert markers.\n\t\t\t// From all document markers, get those, which \"intersect\" with the converter element.\n\t\t\tconst markers = _getMarkersRelativeToElement( modelElementOrFragment );\n\n\t\t\tfor ( const [ name, range ] of markers ) {\n\t\t\t\tthis.downcastDispatcher.convertMarkerAdd( name, range, viewWriter );\n\t\t\t}\n\t\t}\n\n\t\treturn viewDocumentFragment;\n\t}\n\n\t/**\n\t * Sets initial input data parsed by the {@link #processor data processor} and\n\t * converted by the {@link #upcastDispatcher view-to-model converters}.\n\t * Initial data can be set only to document that {@link module:engine/model/document~Document#version} is equal 0.\n\t *\n\t * **Note** This method is {@link module:utils/observablemixin~ObservableMixin#decorate decorated} which is\n\t * used by e.g. collaborative editing plugin that syncs remote data on init.\n\t *\n\t * When data is passed as a string it is initialized on a default `main` root:\n\t *\n\t *\t\tdataController.init( '<p>Foo</p>' ); // Initializes data on the `main` root.\n\t *\n\t * To initialize data on a different root or multiple roots at once, object containing `rootName` - `data` pairs should be passed:\n\t *\n\t *\t\tdataController.init( { main: '<p>Foo</p>', title: '<h1>Bar</h1>' } ); // Initializes data on the `main` and `title` roots.\n\t *\n\t * @fires init\n\t * @param {String|Object.<String,String>} data Input data as a string or an object containing `rootName` - `data`\n\t * pairs to initialize data on multiple roots at once.\n\t * @returns {Promise} Promise that is resolved after the data is set on the editor.\n\t */\n\tinit( data ) {\n\t\tif ( this.model.document.version ) {\n\t\t\t/**\n\t\t\t * Cannot set initial data to not empty {@link module:engine/model/document~Document}.\n\t\t\t * Initial data should be set once, during {@link module:core/editor/editor~Editor} initialization,\n\t\t\t * when the {@link module:engine/model/document~Document#version} is equal 0.\n\t\t\t *\n\t\t\t * @error datacontroller-init-document-not-empty\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'datacontroller-init-document-not-empty: Trying to set initial data to not empty document.', this );\n\t\t}\n\n\t\tlet initialData = {};\n\t\tif ( typeof data === 'string' ) {\n\t\t\tinitialData.main = data; // Default root is 'main'. To initiate data on a different root, object should be passed.\n\t\t} else {\n\t\t\tinitialData = data;\n\t\t}\n\n\t\tif ( !this._checkIfRootsExists( Object.keys( initialData ) ) ) {\n\t\t\t/**\n\t\t\t * Cannot init data on a non-existing root. This error is thrown when {@link #init DataController#init() method}\n\t\t\t * is called with non-existent root name. For example, if there is an editor instance with only `main` root,\n\t\t\t * calling {@link #init} like:\n\t\t\t *\n\t\t\t * \t\tdata.init( { main: '<p>Foo</p>', root2: '<p>Bar</p>' } );\n\t\t\t *\n\t\t\t * will throw this error.\n\t\t\t *\n\t\t\t * @error datacontroller-init-non-existent-root\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'datacontroller-init-non-existent-root: Attempting to init data on a non-existing root.', this );\n\t\t}\n\n\t\tthis.model.enqueueChange( 'transparent', writer => {\n\t\t\tfor ( const rootName of Object.keys( initialData ) ) {\n\t\t\t\tconst modelRoot = this.model.document.getRoot( rootName );\n\t\t\t\twriter.insert( this.parse( initialData[ rootName ], modelRoot ), modelRoot, 0 );\n\t\t\t}\n\t\t} );\n\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Sets input data parsed by the {@link #processor data processor} and\n\t * converted by the {@link #upcastDispatcher view-to-model converters}.\n\t * This method can be used any time to replace existing editor data by the new one without clearing the\n\t * {@link module:engine/model/document~Document#history document history}.\n\t *\n\t * This method also creates a batch with all the changes applied. If all you need is to parse data, use\n\t * the {@link #parse} method.\n\t *\n\t * When data is passed as a string it is set on a default `main` root:\n\t *\n\t *\t\tdataController.set( '<p>Foo</p>' ); // Sets data on the `main` root.\n\t *\n\t * To set data on a different root or multiple roots at once, object containing `rootName` - `data` pairs should be passed:\n\t *\n\t *\t\tdataController.set( { main: '<p>Foo</p>', title: '<h1>Bar</h1>' } ); // Sets data on the `main` and `title` roots.\n\t *\n\t * @param {String|Object.<String,String>} data Input data as a string or an object containing `rootName` - `data`\n\t * pairs to set data on multiple roots at once.\n\t */\n\tset( data ) {\n\t\tlet newData = {};\n\n\t\tif ( typeof data === 'string' ) {\n\t\t\tnewData.main = data; // Default root is 'main'. To set data on a different root, object should be passed.\n\t\t} else {\n\t\t\tnewData = data;\n\t\t}\n\n\t\tif ( !this._checkIfRootsExists( Object.keys( newData ) ) ) {\n\t\t\t/**\n\t\t\t * Cannot set data on a non-existing root. This error is thrown when {@link #set DataController#set() method}\n\t\t\t * is called with non-existent root name. For example, if there is an editor instance with only `main` root,\n\t\t\t * calling {@link #set} like:\n\t\t\t *\n\t\t\t * \t\tdata.set( { main: '<p>Foo</p>', root2: '<p>Bar</p>' } );\n\t\t\t *\n\t\t\t * will throw this error.\n\t\t\t *\n\t\t\t * @error datacontroller-set-non-existent-root\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'datacontroller-set-non-existent-root: Attempting to set data on a non-existing root.', this );\n\t\t}\n\n\t\tthis.model.enqueueChange( 'transparent', writer => {\n\t\t\twriter.setSelection( null );\n\t\t\twriter.removeSelectionAttribute( this.model.document.selection.getAttributeKeys() );\n\n\t\t\tfor ( const rootName of Object.keys( newData ) ) {\n\t\t\t\t// Save to model.\n\t\t\t\tconst modelRoot = this.model.document.getRoot( rootName );\n\n\t\t\t\twriter.remove( writer.createRangeIn( modelRoot ) );\n\t\t\t\twriter.insert( this.parse( newData[ rootName ], modelRoot ), modelRoot, 0 );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Returns the data parsed by the {@link #processor data processor} and then converted by upcast converters\n\t * attached to the {@link #upcastDispatcher}.\n\t *\n\t * @see #set\n\t * @param {String} data Data to parse.\n\t * @param {module:engine/model/schema~SchemaContextDefinition} [context='$root'] Base context in which the view will\n\t * be converted to the model. See: {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher#convert}.\n\t * @returns {module:engine/model/documentfragment~DocumentFragment} Parsed data.\n\t */\n\tparse( data, context = '$root' ) {\n\t\t// data -> view\n\t\tconst viewDocumentFragment = this.processor.toView( data );\n\n\t\t// view -> model\n\t\treturn this.toModel( viewDocumentFragment, context );\n\t}\n\n\t/**\n\t * Returns the result of the given {@link module:engine/view/element~Element view element} or\n\t * {@link module:engine/view/documentfragment~DocumentFragment view document fragment} converted by the\n\t * {@link #upcastDispatcher view-to-model converters}, wrapped by {@link module:engine/model/documentfragment~DocumentFragment}.\n\t *\n\t * When marker elements were converted during the conversion process, it will be set as a document fragment's\n\t * {@link module:engine/model/documentfragment~DocumentFragment#markers static markers map}.\n\t *\n\t * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} viewElementOrFragment\n\t * Element or document fragment whose content will be converted.\n\t * @param {module:engine/model/schema~SchemaContextDefinition} [context='$root'] Base context in which the view will\n\t * be converted to the model. See: {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher#convert}.\n\t * @returns {module:engine/model/documentfragment~DocumentFragment} Output document fragment.\n\t */\n\ttoModel( viewElementOrFragment, context = '$root' ) {\n\t\treturn this.model.change( writer => {\n\t\t\treturn this.upcastDispatcher.convert( viewElementOrFragment, writer, context );\n\t\t} );\n\t}\n\n\t/**\n\t * Removes all event listeners set by the DataController.\n\t */\n\tdestroy() {\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Checks if all provided root names are existing editor roots.\n\t *\n\t * @private\n\t * @param {Array.<String>} rootNames Root names to check.\n\t * @returns {Boolean} Whether all provided root names are existing editor roots.\n\t */\n\t_checkIfRootsExists( rootNames ) {\n\t\tfor ( const rootName of rootNames ) {\n\t\t\tif ( !this.model.document.getRootNames().includes( rootName ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Event fired once data initialisation has finished.\n\t *\n\t * @event ready\n\t */\n\n\t/**\n\t * Event fired after {@link #init init() method} has been run. It can be {@link #listenTo listened to} to adjust/modify\n\t * the initialisation flow. However, if the `init` event is stopped or prevented, the {@link #event:ready ready event}\n\t * should be fired manually.\n\t *\n\t * The `init` event is fired by decorated {@link #init} method.\n\t * See {@link module:utils/observablemixin~ObservableMixin#decorate} for more information and samples.\n\t *\n\t * @event init\n\t */\n}\n\nmix( DataController, ObservableMixin );\n\n// Helper function for downcast conversion.\n//\n// Takes a document element (element that is added to a model document) and checks which markers are inside it\n// and which markers are containing it. If the marker is intersecting with element, the intersection is returned.\nfunction _getMarkersRelativeToElement( element ) {\n\tconst result = [];\n\tconst doc = element.root.document;\n\n\tif ( !doc ) {\n\t\treturn [];\n\t}\n\n\tconst elementRange = ModelRange._createIn( element );\n\n\tfor ( const marker of doc.model.markers ) {\n\t\tconst intersection = elementRange.getIntersection( marker.getRange() );\n\n\t\tif ( intersection ) {\n\t\t\tresult.push( [ marker.name, intersection ] );\n\t\t}\n\t}\n\n\treturn result;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/conversion/conversion\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport UpcastHelpers from './upcasthelpers';\nimport DowncastHelpers from './downcasthelpers';\n\n/**\n * A utility class that helps add converters to upcast and downcast dispatchers.\n *\n * We recommend reading the {@glink framework/guides/architecture/editing-engine Editing engine architecture} guide first to\n * understand the core concepts of the conversion mechanisms.\n *\n * An instance of the conversion manager is available in the\n * {@link module:core/editor/editor~Editor#conversion `editor.conversion`} property\n * and by default has the following groups of dispatchers (i.e. directions of conversion):\n *\n * * `downcast` (editing and data downcasts)\n * * `editingDowncast`\n * * `dataDowncast`\n * * `upcast`\n *\n * # One-way converters\n *\n * To add a converter to a specific group, use the {@link module:engine/conversion/conversion~Conversion#for `for()`}\n * method:\n *\n *\t\t// Add a converter to editing downcast and data downcast.\n *\t\teditor.conversion.for( 'downcast' ).elementToElement( config ) );\n *\n *\t\t// Add a converter to the data pipepline only:\n *\t\teditor.conversion.for( 'dataDowncast' ).elementToElement( dataConversionConfig ) );\n *\n *\t\t// And a slightly different one for the editing pipeline:\n *\t\teditor.conversion.for( 'editingDowncast' ).elementToElement( editingConversionConfig ) );\n *\n * See {@link module:engine/conversion/conversion~Conversion#for `for()`} method documentation to learn more about\n * available conversion helpers and how to use your custom ones.\n *\n * # Two-way converters\n *\n * Besides using one-way converters via the `for()` method, you can also use other methods available in this\n * class to add two-way converters (upcast and downcast):\n *\n * * {@link module:engine/conversion/conversion~Conversion#elementToElement `elementToElement()`} &ndash;\n * Model element to view element and vice versa.\n * * {@link module:engine/conversion/conversion~Conversion#attributeToElement `attributeToElement()`} &ndash;\n * Model attribute to view element and vice versa.\n * * {@link module:engine/conversion/conversion~Conversion#attributeToAttribute `attributeToAttribute()`} &ndash;\n * Model attribute to view element and vice versa.\n */\nexport default class Conversion {\n\t/**\n\t * Creates a new conversion instance.\n\t *\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastDispatcher|\n\t * Array.<module:engine/conversion/downcastdispatcher~DowncastDispatcher>} downcastDispatchers\n\t * @param {module:engine/conversion/upcastdispatcher~UpcastDispatcher|\n\t * Array.<module:engine/conversion/upcastdispatcher~UpcastDispatcher>} upcastDispatchers\n\t */\n\tconstructor( downcastDispatchers, upcastDispatchers ) {\n\t\t/**\n\t\t * Maps dispatchers group name to ConversionHelpers instances.\n\t\t *\n\t\t * @private\n\t\t * @member {Map.<String,module:engine/conversion/conversionhelpers~ConversionHelpers>}\n\t\t */\n\t\tthis._helpers = new Map();\n\n\t\t// Define default 'downcast' & 'upcast' dispatchers groups. Those groups are always available as two-way converters needs them.\n\t\tthis._downcast = Array.isArray( downcastDispatchers ) ? downcastDispatchers : [ downcastDispatchers ];\n\t\tthis._createConversionHelpers( { name: 'downcast', dispatchers: this._downcast, isDowncast: true } );\n\n\t\tthis._upcast = Array.isArray( upcastDispatchers ) ? upcastDispatchers : [ upcastDispatchers ];\n\t\tthis._createConversionHelpers( { name: 'upcast', dispatchers: this._upcast, isDowncast: false } );\n\t}\n\n\t/**\n\t * Define an alias for registered dispatcher.\n\t *\n\t *\t\tconst conversion = new Conversion(\n\t *\t\t\t[ dataDowncastDispatcher, editingDowncastDispatcher ],\n\t *\t\t\tupcastDispatcher\n\t *\t\t);\n\t *\n\t *\t\tconversion.addAlias( 'dataDowncast', dataDowncastDispatcher );\n\t *\n\t * @param {String} alias An alias of a dispatcher.\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastDispatcher|\n\t * module:engine/conversion/upcastdispatcher~UpcastDispatcher} dispatcher Dispatcher which should have an alias.\n\t */\n\taddAlias( alias, dispatcher ) {\n\t\tconst isDowncast = this._downcast.includes( dispatcher );\n\t\tconst isUpcast = this._upcast.includes( dispatcher );\n\n\t\tif ( !isUpcast && !isDowncast ) {\n\t\t\t/**\n\t\t\t * Trying to register and alias for a dispatcher that nas not been registered.\n\t\t\t *\n\t\t\t * @error conversion-add-alias-dispatcher-not-registered\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'conversion-add-alias-dispatcher-not-registered: ' +\n\t\t\t\t'Trying to register and alias for a dispatcher that nas not been registered.',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\tthis._createConversionHelpers( { name: alias, dispatchers: [ dispatcher ], isDowncast } );\n\t}\n\n\t/**\n\t * Provides a chainable API to assign converters to conversion dispatchers group.\n\t *\n\t * If the given group name has not been registered, the\n\t * {@link module:utils/ckeditorerror~CKEditorError `conversion-for-unknown-group` error} is thrown.\n\t *\n\t * You can use conversion helpers available directly in the `for()` chain or your custom ones via\n\t * the {@link module:engine/conversion/conversionhelpers~ConversionHelpers#add `add()`} method.\n\t *\n\t * # Using bulit-in conversion helpers\n\t *\n\t * The `for()` chain comes with a set of conversion helpers which you can use like this:\n\t *\n\t *\t\teditor.conversion.for( 'downcast' )\n\t *\t\t\t.elementToElement( config1 )        // Adds an element-to-element downcast converter.\n\t *\t\t\t.attributeToElement( config2 );     // Adds an attribute-to-element downcast converter.\n\t *\n\t *\t\teditor.conversion.for( 'upcast' )\n\t *\t\t\t.elementToAttribute( config3 );     // Adds an element-to-attribute upcast converter.\n\t *\n\t * Refer to the documentation of built-in conversion helpers to learn about their configuration options.\n\t *\n\t * * downcast (model-to-view) conversion helpers:\n\t *\n\t *\t* {@link module:engine/conversion/downcasthelpers~DowncastHelpers#elementToElement `elementToElement()`},\n\t *\t* {@link module:engine/conversion/downcasthelpers~DowncastHelpers#attributeToElement `attributeToElement()`},\n\t *\t* {@link module:engine/conversion/downcasthelpers~DowncastHelpers#attributeToAttribute `attributeToAttribute()`}.\n\t *\t* {@link module:engine/conversion/downcasthelpers~DowncastHelpers#markerToElement `markerToElement()`}.\n\t *\t* {@link module:engine/conversion/downcasthelpers~DowncastHelpers#markerToHighlight `markerToHighlight()`}.\n\t *\n\t * * upcast (view-to-model) conversion helpers:\n\t *\n\t *\t* {@link module:engine/conversion/upcasthelpers~UpcastHelpers#elementToElement `elementToElement()`},\n\t *\t* {@link module:engine/conversion/upcasthelpers~UpcastHelpers#elementToAttribute `elementToAttribute()`},\n\t *\t* {@link module:engine/conversion/upcasthelpers~UpcastHelpers#attributeToAttribute `attributeToAttribute()`}.\n\t *\t* {@link module:engine/conversion/upcasthelpers~UpcastHelpers#elementToMarker `elementToMarker()`}.\n\t *\n\t * # Using custom conversion helpers\n\t *\n\t * If you need to implement a nontypical converter, you can do so by calling:\n\t *\n\t *\t\teditor.conversion.for( direction ).add( customHelper );\n\t *\n\t * The `.add()` method takes exactly one parameter, which is a function. This function should accept one parameter that\n\t * is a dispatcher instance. The function should add an actual converter to the passed dispatcher instance.\n\t *\n\t * Example:\n\t *\n\t *\t\teditor.conversion.for( 'upcast' ).add( dispatcher => {\n\t *\t\t\tdispatcher.on( 'element:a',  ( evt, data, conversionApi ) => {\n\t *\t\t\t\t// Do something with a view <a> element.\n\t *\t\t\t} );\n\t *\t\t} );\n\t *\n\t * Refer to the documentation of {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher}\n\t * and {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher} to learn how to write\n\t * custom converters.\n\t *\n\t * @param {String} groupName The name of dispatchers group to add the converters to.\n\t * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers|module:engine/conversion/upcasthelpers~UpcastHelpers}\n\t */\n\tfor( groupName ) {\n\t\tif ( !this._helpers.has( groupName ) ) {\n\t\t\t/**\n\t\t\t * Trying to add a converter to an unknown dispatchers group.\n\t\t\t *\n\t\t\t * @error conversion-for-unknown-group\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'conversion-for-unknown-group: Trying to add a converter to an unknown dispatchers group.', this );\n\t\t}\n\n\t\treturn this._helpers.get( groupName );\n\t}\n\n\t/**\n\t * Sets up converters between the model and the view that convert a model element to a view element (and vice versa).\n\t * For example, the model `<paragraph>Foo</paragraph>` is `<p>Foo</p>` in the view.\n\t *\n\t *\t\t// A simple conversion from the `paragraph` model element to the `<p>` view element (and vice versa).\n\t *\t\teditor.conversion.elementToElement( { model: 'paragraph', view: 'p' } );\n\t *\n\t *\t\t// Override other converters by specifying a converter definition with a higher priority.\n\t *\t\teditor.conversion.elementToElement( { model: 'paragraph', view: 'div', converterPriority: 'high' } );\n\t *\n\t *\t\t// View specified as an object instead of a string.\n\t *\t\teditor.conversion.elementToElement( {\n\t *\t\t\tmodel: 'fancyParagraph',\n\t *\t\t\tview: {\n\t *\t\t\t\tname: 'p',\n\t *\t\t\t\tclasses: 'fancy'\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\t// Use `upcastAlso` to define other view elements that should also be converted to a `paragraph` element.\n\t *\t\teditor.conversion.elementToElement( {\n\t *\t\t\tmodel: 'paragraph',\n\t *\t\t\tview: 'p',\n\t *\t\t\tupcastAlso: [\n\t *\t\t\t\t'div',\n\t *\t\t\t\t{\n\t *\t\t\t\t\t// Any element with the `display: block` style.\n\t *\t\t\t\t\tstyles: {\n\t *\t\t\t\t\t\tdisplay: 'block'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t}\n\t *\t\t\t]\n\t *\t\t} );\n\t *\n\t *\t\t// `upcastAlso` set as callback enables a conversion of a wide range of different view elements.\n\t *\t\teditor.conversion.elementToElement( {\n\t *\t\t\tmodel: 'heading',\n\t *\t\t\tview: 'h2',\n\t *\t\t\t// Convert \"headling-like\" paragraphs to headings.\n\t *\t\t\tupcastAlso: viewElement => {\n\t *\t\t\t\tconst fontSize = viewElement.getStyle( 'font-size' );\n\t *\n\t *\t\t\t\tif ( !fontSize ) {\n\t *\t\t\t\t\treturn null;\n\t *\t\t\t\t}\n\t *\n\t *\t\t\t\tconst match = fontSize.match( /(\\d+)\\s*px/ );\n\t *\n\t *\t\t\t\tif ( !match ) {\n\t *\t\t\t\t\treturn null;\n\t *\t\t\t\t}\n\t *\n\t *\t\t\t\tconst size = Number( match[ 1 ] );\n\t *\n\t *\t\t\t\tif ( size > 26 ) {\n\t *\t\t\t\t\t// Returned value can be an object with the matched properties.\n\t *\t\t\t\t\t// These properties will be \"consumed\" during the conversion.\n\t *\t\t\t\t\t// See `engine.view.Matcher~MatcherPattern` and `engine.view.Matcher#match` for more details.\n\t *\n\t *\t\t\t\t\treturn { name: true, styles: [ 'font-size' ] };\n\t *\t\t\t\t}\n\t *\n\t *\t\t\t\treturn null;\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * `definition.model` is a `String` with a model element name to convert from or to.\n\t * See {@link module:engine/conversion/conversion~ConverterDefinition} to learn about other parameters.\n\t *\n\t * @param {module:engine/conversion/conversion~ConverterDefinition} definition The converter definition.\n\t */\n\telementToElement( definition ) {\n\t\t// Set up downcast converter.\n\t\tthis.for( 'downcast' ).elementToElement( definition );\n\n\t\t// Set up upcast converter.\n\t\tfor ( const { model, view } of _getAllUpcastDefinitions( definition ) ) {\n\t\t\tthis.for( 'upcast' )\n\t\t\t\t.elementToElement( {\n\t\t\t\t\tmodel,\n\t\t\t\t\tview,\n\t\t\t\t\tconverterPriority: definition.converterPriority\n\t\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Sets up converters between the model and the view that convert a model attribute to a view element (and vice versa).\n\t * For example, a model text node with `\"Foo\"` as data and the `bold` attribute is `<strong>Foo</strong>` in the view.\n\t *\n\t *\t\t// A simple conversion from the `bold=true` attribute to the `<strong>` view element (and vice versa).\n\t *\t\teditor.conversion.attributeToElement( { model: 'bold', view: 'strong' } );\n\t *\n\t *\t\t// Override other converters by specifying a converter definition with a higher priority.\n\t *\t\teditor.conversion.attributeToElement( { model: 'bold', view: 'b', converterPriority: 'high' } );\n\t *\n\t *\t\t// View specified as an object instead of a string.\n\t *\t\teditor.conversion.attributeToElement( {\n\t *\t\t\tmodel: 'bold',\n\t *\t\t\tview: {\n\t *\t\t\t\tname: 'span',\n\t *\t\t\t\tclasses: 'bold'\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\t// Use `config.model.name` to define the conversion only from a given node type, `$text` in this case.\n\t *\t\t// The same attribute on different elements may then be handled by a different converter.\n\t *\t\teditor.conversion.attributeToElement( {\n\t *\t\t\tmodel: {\n\t *\t\t\t\tkey: 'textDecoration',\n\t *\t\t\t\tvalues: [ 'underline', 'lineThrough' ],\n\t *\t\t\t\tname: '$text'\n\t *\t\t\t},\n\t *\t\t\tview: {\n\t *\t\t\t\tunderline: {\n\t *\t\t\t\t\tname: 'span',\n\t *\t\t\t\t\tstyles: {\n\t *\t\t\t\t\t\t'text-decoration': 'underline'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t},\n\t *\t\t\t\tlineThrough: {\n\t *\t\t\t\t\tname: 'span',\n\t *\t\t\t\t\tstyles: {\n\t *\t\t\t\t\t\t'text-decoration': 'line-through'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\t// Use `upcastAlso` to define other view elements that should also be converted to the `bold` attribute.\n\t *\t\teditor.conversion.attributeToElement( {\n\t *\t\t\tmodel: 'bold',\n\t *\t\t\tview: 'strong',\n\t *\t\t\tupcastAlso: [\n\t *\t\t\t\t'b',\n\t *\t\t\t\t{\n\t *\t\t\t\t\tname: 'span',\n\t *\t\t\t\t\tclasses: 'bold'\n\t *\t\t\t\t},\n\t *\t\t\t\t{\n\t *\t\t\t\t\tname: 'span',\n\t *\t\t\t\t\tstyles: {\n\t *\t\t\t\t\t\t'font-weight': 'bold'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t},\n\t *\t\t\t\tviewElement => {\n\t *\t\t\t\t\tconst fontWeight = viewElement.getStyle( 'font-weight' );\n\t *\n\t *\t\t\t\t\tif ( viewElement.is( 'span' ) && fontWeight && /\\d+/.test() && Number( fontWeight ) > 500 ) {\n\t *\t\t\t\t\t\t// Returned value can be an object with the matched properties.\n\t *\t\t\t\t\t\t// These properties will be \"consumed\" during the conversion.\n\t *\t\t\t\t\t\t// See `engine.view.Matcher~MatcherPattern` and `engine.view.Matcher#match` for more details.\n\t *\n\t *\t\t\t\t\t\treturn {\n\t *\t\t\t\t\t\t\tname: true,\n\t *\t\t\t\t\t\t\tstyles: [ 'font-weight' ]\n\t *\t\t\t\t\t\t};\n\t *\t\t\t\t\t}\n\t *\t\t\t\t}\n\t *\t\t\t]\n\t *\t\t} );\n\t *\n\t *\t\t// Conversion from and to a model attribute key whose value is an enum (`fontSize=big|small`).\n\t *\t\t// `upcastAlso` set as callback enables a conversion of a wide range of different view elements.\n\t *\t\teditor.conversion.attributeToElement( {\n\t *\t\t\tmodel: {\n\t *\t\t\t\tkey: 'fontSize',\n\t *\t\t\t\tvalues: [ 'big', 'small' ]\n\t *\t\t\t},\n\t *\t\t\tview: {\n\t *\t\t\t\tbig: {\n\t *\t\t\t\t\tname: 'span',\n\t *\t\t\t\t\tstyles: {\n\t *\t\t\t\t\t\t'font-size': '1.2em'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t},\n\t *\t\t\t\tsmall: {\n\t *\t\t\t\t\tname: 'span',\n\t *\t\t\t\t\tstyles: {\n\t *\t\t\t\t\t\t'font-size': '0.8em'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t}\n\t *\t\t\t},\n\t *\t\t\tupcastAlso: {\n\t *\t\t\t\tbig: viewElement => {\n\t *\t\t\t\t\tconst fontSize = viewElement.getStyle( 'font-size' );\n\t *\n\t *\t\t\t\t\tif ( !fontSize ) {\n\t *\t\t\t\t\t\treturn null;\n\t *\t\t\t\t\t}\n\t *\n\t *\t\t\t\t\tconst match = fontSize.match( /(\\d+)\\s*px/ );\n\t *\n\t *\t\t\t\t\tif ( !match ) {\n\t *\t\t\t\t\t\treturn null;\n\t *\t\t\t\t\t}\n\t *\n\t *\t\t\t\t\tconst size = Number( match[ 1 ] );\n\t *\n\t *\t\t\t\t\tif ( viewElement.is( 'span' ) && size > 10 ) {\n\t *\t\t\t\t\t\t// Returned value can be an object with the matched properties.\n\t *\t\t\t\t\t\t// These properties will be \"consumed\" during the conversion.\n\t *\t\t\t\t\t\t// See `engine.view.Matcher~MatcherPattern` and `engine.view.Matcher#match` for more details.\n\t *\n\t *\t\t\t\t\t\treturn { name: true, styles: [ 'font-size' ] };\n\t *\t\t\t\t\t}\n\t *\n\t *\t\t\t\t\treturn null;\n\t *\t\t\t\t},\n\t *\t\t\t\tsmall: viewElement => {\n\t *\t\t\t\t\tconst fontSize = viewElement.getStyle( 'font-size' );\n\t *\n\t *\t\t\t\t\tif ( !fontSize ) {\n\t *\t\t\t\t\t\treturn null;\n\t *\t\t\t\t\t}\n\t *\n\t *\t\t\t\t\tconst match = fontSize.match( /(\\d+)\\s*px/ );\n\t *\n\t *\t\t\t\t\tif ( !match ) {\n\t *\t\t\t\t\t\treturn null;\n\t *\t\t\t\t\t}\n\t *\n\t *\t\t\t\t\tconst size = Number( match[ 1 ] );\n\t *\n\t *\t\t\t\t\tif ( viewElement.is( 'span' ) && size < 10 ) {\n\t *\t\t\t\t\t\t// Returned value can be an object with the matched properties.\n\t *\t\t\t\t\t\t// These properties will be \"consumed\" during the conversion.\n\t *\t\t\t\t\t\t// See `engine.view.Matcher~MatcherPattern` and `engine.view.Matcher#match` for more details.\n\t *\n\t *\t\t\t\t\t\treturn { name: true, styles: [ 'font-size' ] };\n\t *\t\t\t\t\t}\n\t *\n\t *\t\t\t\t\treturn null;\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * The `definition.model` parameter specifies which model attribute should be converted from or to. It can be a `{ key, value }` object\n\t * describing the attribute key and value to convert or a `String` specifying just the attribute key (then `value` is set to `true`).\n\t * See {@link module:engine/conversion/conversion~ConverterDefinition} to learn about other parameters.\n\t *\n\t * @param {module:engine/conversion/conversion~ConverterDefinition} definition The converter definition.\n\t */\n\tattributeToElement( definition ) {\n\t\t// Set up downcast converter.\n\t\tthis.for( 'downcast' ).attributeToElement( definition );\n\n\t\t// Set up upcast converter.\n\t\tfor ( const { model, view } of _getAllUpcastDefinitions( definition ) ) {\n\t\t\tthis.for( 'upcast' )\n\t\t\t\t.elementToAttribute( {\n\t\t\t\t\tview,\n\t\t\t\t\tmodel,\n\t\t\t\t\tconverterPriority: definition.converterPriority\n\t\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Sets up converters between the model and the view that convert a model attribute to a view attribute (and vice versa).\n\t * For example, `<image src='foo.jpg'></image>` is converted to `<img src='foo.jpg'></img>` (the same attribute key and value).\n\t * This type of converters is intended to be used with {@link module:engine/model/element~Element model element} nodes.\n\t * To convert text attributes {@link module:engine/conversion/conversion~Conversion#attributeToElement `attributeToElement converter`}\n\t * should be set up.\n\t *\n\t *\t\t// A simple conversion from the `source` model attribute to the `src` view attribute (and vice versa).\n\t *\t\teditor.conversion.attributeToAttribute( { model: 'source', view: 'src' } );\n\t *\n\t *\t\t// Attribute values are strictly specified.\n\t *\t\teditor.conversion.attributeToAttribute( {\n\t *\t\t\tmodel: {\n\t *\t\t\t\tname: 'image',\n\t *\t\t\t\tkey: 'aside',\n\t *\t\t\t\tvalues: [ 'aside' ]\n\t *\t\t\t},\n\t *\t\t\tview: {\n\t *\t\t\t\taside: {\n\t *\t\t\t\t\tname: 'img',\n\t *\t\t\t\t\tkey: 'class',\n\t *\t\t\t\t\tvalue: [ 'aside', 'half-size' ]\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\t// Set the style attribute.\n\t *\t\teditor.conversion.attributeToAttribute( {\n\t *\t\t\tmodel: {\n\t *\t\t\t\tname: 'image',\n\t *\t\t\t\tkey: 'aside',\n\t *\t\t\t\tvalues: [ 'aside' ]\n\t *\t\t\t},\n\t *\t\t\tview: {\n\t *\t\t\t\taside: {\n\t *\t\t\t\t\tname: 'img',\n\t *\t\t\t\t\tkey: 'style',\n\t *\t\t\t\t\tvalue: {\n\t *\t\t\t\t\t\tfloat: 'right',\n\t *\t\t\t\t\t\twidth: '50%',\n\t *\t\t\t\t\t\tmargin: '5px'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\t// Conversion from and to a model attribute key whose value is an enum (`align=right|center`).\n\t *\t\t// Use `upcastAlso` to define other view elements that should also be converted to the `align=right` attribute.\n\t *\t\teditor.conversion.attributeToAttribute( {\n\t *\t\t\tmodel: {\n\t *\t\t\t\tkey: 'align',\n\t *\t\t\t\tvalues: [ 'right', 'center' ]\n\t *\t\t\t},\n\t *\t\t\tview: {\n\t *\t\t\t\tright: {\n\t *\t\t\t\t\tkey: 'class',\n\t *\t\t\t\t\tvalue: 'align-right'\n\t *\t\t\t\t},\n\t *\t\t\t\tcenter: {\n\t *\t\t\t\t\tkey: 'class',\n\t *\t\t\t\t\tvalue: 'align-center'\n\t *\t\t\t\t}\n\t *\t\t\t},\n\t *\t\t\tupcastAlso: {\n\t *\t\t\t\tright: {\n\t *\t\t\t\t\tstyles: {\n\t *\t\t\t\t\t\t'text-align': 'right'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t},\n\t *\t\t\t\tcenter: {\n\t *\t\t\t\t\tstyles: {\n\t *\t\t\t\t\t\t'text-align': 'center'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * The `definition.model` parameter specifies which model attribute should be converted from and to.\n\t * It can be a `{ key, [ values ], [ name ] }` object or a `String`, which will be treated like `{ key: definition.model }`.\n\t * The `key` property is the model attribute key to convert from and to.\n\t * The `values` are the possible model attribute values. If `values` is not set, the model attribute value will be the same as the\n\t * view attribute value.\n\t * If `name` is set, the conversion will be set up only for model elements with the given name.\n\t *\n\t * The `definition.view` parameter specifies which view attribute should be converted from and to.\n\t * It can be a `{ key, value, [ name ] }` object or a `String`, which will be treated like `{ key: definition.view }`.\n\t * The `key` property is the view attribute key to convert from and to.\n\t * The `value` is the view attribute value to convert from and to. If `definition.value` is not set, the view attribute value will be\n\t * the same as the model attribute value.\n\t * If `key` is `'class'`, `value` can be a `String` or an array of `String`s.\n\t * If `key` is `'style'`, `value` is an object with key-value pairs.\n\t * In other cases, `value` is a `String`.\n\t * If `name` is set, the conversion will be set up only for model elements with the given name.\n\t * If `definition.model.values` is set, `definition.view` is an object that assigns values from `definition.model.values`\n\t * to `{ key, value, [ name ] }` objects.\n\t *\n\t * `definition.upcastAlso` specifies which other matching view elements should also be upcast to the given model configuration.\n\t * If `definition.model.values` is set, `definition.upcastAlso` should be an object assigning values from `definition.model.values`\n\t * to {@link module:engine/view/matcher~MatcherPattern}s or arrays of {@link module:engine/view/matcher~MatcherPattern}s.\n\t *\n\t * **Note:** `definition.model` and `definition.view` form should be mirrored, so the same types of parameters should\n\t * be given in both parameters.\n\t *\n\t * @param {Object} definition The converter definition.\n\t * @param {String|Object} definition.model The model attribute to convert from and to.\n\t * @param {String|Object} definition.view The view attribute to convert from and to.\n\t * @param {module:engine/view/matcher~MatcherPattern|Array.<module:engine/view/matcher~MatcherPattern>} [definition.upcastAlso]\n\t * Any view element matching `definition.upcastAlso` will also be converted to the given model attribute. `definition.upcastAlso`\n\t * is used only if `config.model.values` is specified.\n\t */\n\tattributeToAttribute( definition ) {\n\t\t// Set up downcast converter.\n\t\tthis.for( 'downcast' ).attributeToAttribute( definition );\n\n\t\t// Set up upcast converter.\n\t\tfor ( const { model, view } of _getAllUpcastDefinitions( definition ) ) {\n\t\t\tthis.for( 'upcast' )\n\t\t\t\t.attributeToAttribute( {\n\t\t\t\t\tview,\n\t\t\t\t\tmodel\n\t\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Creates and caches conversion helpers for given dispatchers group.\n\t *\n\t * @private\n\t * @param {Object} options\n\t * @param {String} options.name Group name.\n\t * @param {Array.<module:engine/conversion/downcastdispatcher~DowncastDispatcher|\n\t * module:engine/conversion/upcastdispatcher~UpcastDispatcher>} options.dispatchers\n\t * @param {Boolean} options.isDowncast\n\t */\n\t_createConversionHelpers( { name, dispatchers, isDowncast } ) {\n\t\tif ( this._helpers.has( name ) ) {\n\t\t\t/**\n\t\t\t * Trying to register a group name that has already been registered.\n\t\t\t *\n\t\t\t * @error conversion-group-exists\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'conversion-group-exists: Trying to register a group name that has already been registered.', this );\n\t\t}\n\n\t\tconst helpers = isDowncast ? new DowncastHelpers( dispatchers ) : new UpcastHelpers( dispatchers );\n\n\t\tthis._helpers.set( name, helpers );\n\t}\n}\n\n/**\n * Defines how the model should be converted from and to the view.\n *\n * @typedef {Object} module:engine/conversion/conversion~ConverterDefinition\n *\n * @property {*} [model] The model conversion definition. Describes the model element or model attribute to convert. This parameter differs\n * for different functions that accept `ConverterDefinition`. See the description of the function to learn how to set it.\n * @property {module:engine/view/elementdefinition~ElementDefinition|Object} view The definition of the view element to convert from and\n * to. If `model` describes multiple values, `view` is an object that assigns these values (`view` object keys) to view element definitions\n * (`view` object values).\n * @property {module:engine/view/matcher~MatcherPattern|Array.<module:engine/view/matcher~MatcherPattern>} [upcastAlso]\n * Any view element matching `upcastAlso` will also be converted to the model. If `model` describes multiple values, `upcastAlso`\n * is an object that assigns these values (`upcastAlso` object keys) to {@link module:engine/view/matcher~MatcherPattern}s\n * (`upcastAlso` object values).\n * @property {module:utils/priorities~PriorityString} [converterPriority] The converter priority.\n */\n\n// Helper function that creates a joint array out of an item passed in `definition.view` and items passed in\n// `definition.upcastAlso`.\n//\n// @param {module:engine/conversion/conversion~ConverterDefinition} definition\n// @returns {Array} Array containing view definitions.\nfunction* _getAllUpcastDefinitions( definition ) {\n\tif ( definition.model.values ) {\n\t\tfor ( const value of definition.model.values ) {\n\t\t\tconst model = { key: definition.model.key, value };\n\t\t\tconst view = definition.view[ value ];\n\t\t\tconst upcastAlso = definition.upcastAlso ? definition.upcastAlso[ value ] : undefined;\n\n\t\t\tyield* _getUpcastDefinition( model, view, upcastAlso );\n\t\t}\n\t} else {\n\t\tyield* _getUpcastDefinition( definition.model, definition.view, definition.upcastAlso );\n\t}\n}\n\nfunction* _getUpcastDefinition( model, view, upcastAlso ) {\n\tyield { model, view };\n\n\tif ( upcastAlso ) {\n\t\tupcastAlso = Array.isArray( upcastAlso ) ? upcastAlso : [ upcastAlso ];\n\n\t\tfor ( const upcastAlsoItem of upcastAlso ) {\n\t\t\tyield { model, view: upcastAlsoItem };\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/batch\n */\n\n/**\n * A batch instance groups model changes ({@link module:engine/model/operation/operation~Operation operations}). All operations\n * grouped in a single batch can be reverted together, so you can also think about a batch as of a single undo step. If you want\n * to extend a given undo step, you can add more changes to the batch using {@link module:engine/model/model~Model#enqueueChange}:\n *\n *\t\tmodel.enqueueChange( batch, writer => {\n *\t\t\twriter.insertText( 'foo', paragraph, 'end' );\n *\t\t} );\n *\n * @see module:engine/model/model~Model#enqueueChange\n * @see module:engine/model/model~Model#change\n */\nexport default class Batch {\n\t/**\n\t * Creates a batch instance.\n\t *\n\t * @see module:engine/model/model~Model#enqueueChange\n\t * @see module:engine/model/model~Model#change\n\t * @param {'transparent'|'default'} [type='default'] The type of the batch.\n\t */\n\tconstructor( type = 'default' ) {\n\t\t/**\n\t\t * An array of operations that compose this batch.\n\t\t *\n\t\t * @readonly\n\t\t * @type {Array.<module:engine/model/operation/operation~Operation>}\n\t\t */\n\t\tthis.operations = [];\n\n\t\t/**\n\t\t * The type of the batch.\n\t\t *\n\t\t * It can be one of the following values:\n\t\t * * `'default'` &ndash; All \"normal\" batches. This is the most commonly used type.\n\t\t * * `'transparent'` &ndash; A batch that should be ignored by other features, i.e. an initial batch or collaborative editing\n\t\t * changes.\n\t\t *\n\t\t * @readonly\n\t\t * @type {'transparent'|'default'}\n\t\t */\n\t\tthis.type = type;\n\t}\n\n\t/**\n\t * Returns the base version of this batch, which is equal to the base version of the first operation in the batch.\n\t * If there are no operations in the batch or neither operation has the base version set, it returns `null`.\n\t *\n\t * @readonly\n\t * @type {Number|null}\n\t */\n\tget baseVersion() {\n\t\tfor ( const op of this.operations ) {\n\t\t\tif ( op.baseVersion !== null ) {\n\t\t\t\treturn op.baseVersion;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Adds an operation to the batch instance.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} operation An operation to add.\n\t * @returns {module:engine/model/operation/operation~Operation} The added operation.\n\t */\n\taddOperation( operation ) {\n\t\toperation.batch = this;\n\t\tthis.operations.push( operation );\n\n\t\treturn operation;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/operation\n */\n\n/**\n * Abstract base operation class.\n *\n * @abstract\n */\nexport default class Operation {\n\t/**\n\t * Base operation constructor.\n\t *\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\n\t */\n\tconstructor( baseVersion ) {\n\t\t/**\n\t\t * {@link module:engine/model/document~Document#version} on which operation can be applied. If you try to\n\t\t * {@link module:engine/model/model~Model#applyOperation apply} operation with different base version than the\n\t\t * {@link module:engine/model/document~Document#version document version} the\n\t\t * {@link module:utils/ckeditorerror~CKEditorError model-document-applyOperation-wrong-version} error is thrown.\n\t\t *\n\t\t * @member {Number}\n\t\t */\n\t\tthis.baseVersion = baseVersion;\n\n\t\t/**\n\t\t * Defines whether operation is executed on attached or detached {@link module:engine/model/item~Item items}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} #isDocumentOperation\n\t\t */\n\t\tthis.isDocumentOperation = this.baseVersion !== null;\n\n\t\t/**\n\t\t * {@link module:engine/model/batch~Batch Batch} to which the operation is added or `null` if the operation is not\n\t\t * added to any batch yet.\n\t\t *\n\t\t * @member {module:engine/model/batch~Batch|null} #batch\n\t\t */\n\t\tthis.batch = null;\n\n\t\t/**\n\t\t * Operation type.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String} #type\n\t\t */\n\n\t\t/**\n\t\t * Creates and returns an operation that has the same parameters as this operation.\n\t\t *\n\t\t * @method #clone\n\t\t * @returns {module:engine/model/operation/operation~Operation} Clone of this operation.\n\t\t */\n\n\t\t/**\n\t\t * Creates and returns a reverse operation. Reverse operation when executed right after\n\t\t * the original operation will bring back tree model state to the point before the original\n\t\t * operation execution. In other words, it reverses changes done by the original operation.\n\t\t *\n\t\t * Keep in mind that tree model state may change since executing the original operation,\n\t\t * so reverse operation will be \"outdated\". In that case you will need to transform it by\n\t\t * all operations that were executed after the original operation.\n\t\t *\n\t\t * @method #getReversed\n\t\t * @returns {module:engine/model/operation/operation~Operation} Reversed operation.\n\t\t */\n\n\t\t/**\n\t\t * Executes the operation - modifications described by the operation properties will be applied to the model tree.\n\t\t *\n\t\t * @protected\n\t\t * @method #_execute\n\t\t */\n\t}\n\n\t/**\n\t * Checks whether the operation's parameters are correct and the operation can be correctly executed. Throws\n\t * an error if operation is not valid.\n\t *\n\t * @protected\n\t * @method #_validate\n\t */\n\t_validate() {\n\t}\n\n\t/**\n\t * Custom toJSON method to solve child-parent circular dependencies.\n\t *\n\t * @method #toJSON\n\t * @returns {Object} Clone of this object with the operation property replaced with string.\n\t */\n\ttoJSON() {\n\t\t// This method creates only a shallow copy, all nested objects should be defined separately.\n\t\t// See https://github.com/ckeditor/ckeditor5-engine/issues/1477.\n\t\tconst json = Object.assign( {}, this );\n\n\t\tjson.__className = this.constructor.className;\n\n\t\t// Remove reference to the parent `Batch` to avoid circular dependencies.\n\t\tdelete json.batch;\n\n\t\t// Only document operations are shared with other clients so it is not necessary to keep this information.\n\t\tdelete json.isDocumentOperation;\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * Name of the operation class used for serialization.\n\t *\n\t * @type {String}\n\t */\n\tstatic get className() {\n\t\treturn 'Operation';\n\t}\n\n\t/**\n\t * Creates Operation object from deserilized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} doc Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/operation~Operation}\n\t */\n\tstatic fromJSON( json ) {\n\t\treturn new this( json.baseVersion );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // log() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( this.toString() );\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module module:engine/model/documentfragment\n */\n\nimport NodeList from './nodelist';\nimport Element from './element';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\n\n// @if CK_DEBUG_ENGINE // const { stringifyMap } = require( '../dev-utils/utils' );\n\n/**\n * DocumentFragment represents a part of model which does not have a common root but it's top-level nodes\n * can be seen as siblings. In other words, it is a detached part of model tree, without a root.\n *\n * DocumentFragment has own {@link module:engine/model/markercollection~MarkerCollection}. Markers from this collection\n * will be set to the {@link module:engine/model/model~Model#markers model markers} by a\n * {@link module:engine/model/writer~Writer#insert} function.\n */\nexport default class DocumentFragment {\n\t/**\n\t * Creates an empty `DocumentFragment`.\n\t *\n\t * **Note:** Constructor of this class shouldn't be used directly in the code.\n\t * Use the {@link module:engine/model/writer~Writer#createDocumentFragment} method instead.\n\t *\n\t * @protected\n\t * @param {module:engine/model/node~Node|Iterable.<module:engine/model/node~Node>} [children]\n\t * Nodes to be contained inside the `DocumentFragment`.\n\t */\n\tconstructor( children ) {\n\t\t/**\n\t\t * DocumentFragment static markers map. This is a list of names and {@link module:engine/model/range~Range ranges}\n\t\t * which will be set as Markers to {@link module:engine/model/model~Model#markers model markers collection}\n\t\t * when DocumentFragment will be inserted to the document.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Map<String,module:engine/model/range~Range>} module:engine/model/documentfragment~DocumentFragment#markers\n\t\t */\n\t\tthis.markers = new Map();\n\n\t\t/**\n\t\t * List of nodes contained inside the document fragment.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/nodelist~NodeList} module:engine/model/documentfragment~DocumentFragment#_children\n\t\t */\n\t\tthis._children = new NodeList();\n\n\t\tif ( children ) {\n\t\t\tthis._insertChild( 0, children );\n\t\t}\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all nodes contained inside this document fragment.\n\t *\n\t * @returns {Iterable.<module:engine/model/node~Node>}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this.getChildren();\n\t}\n\n\t/**\n\t * Number of this document fragment's children.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget childCount() {\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Sum of {@link module:engine/model/node~Node#offsetSize offset sizes} of all of this document fragment's children.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget maxOffset() {\n\t\treturn this._children.maxOffset;\n\t}\n\n\t/**\n\t * Is `true` if there are no nodes inside this document fragment, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isEmpty() {\n\t\treturn this.childCount === 0;\n\t}\n\n\t/**\n\t * Artificial root of `DocumentFragment`. Returns itself. Added for compatibility reasons.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Artificial parent of `DocumentFragment`. Returns `null`. Added for compatibility reasons.\n\t *\n\t * @readonly\n\t * @type {null}\n\t */\n\tget parent() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t *\t\tdocFrag.is( 'documentFragment' ); // -> true\n\t *\t\tdocFrag.is( 'model:documentFragment' ); // -> true\n\t *\n\t *\t\tdocFrag.is( 'view:documentFragment' ); // -> false\n\t *\t\tdocFrag.is( 'element' ); // -> false\n\t *\t\tdocFrag.is( 'node' ); // -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type == 'documentFragment' || type == 'model:documentFragment';\n\t}\n\n\t/**\n\t * Gets the child at the given index. Returns `null` if incorrect index was passed.\n\t *\n\t * @param {Number} index Index of child.\n\t * @returns {module:engine/model/node~Node|null} Child node.\n\t */\n\tgetChild( index ) {\n\t\treturn this._children.getNode( index );\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all of this document fragment's children.\n\t *\n\t * @returns {Iterable.<module:engine/model/node~Node>}\n\t */\n\tgetChildren() {\n\t\treturn this._children[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Returns an index of the given child node. Returns `null` if given node is not a child of this document fragment.\n\t *\n\t * @param {module:engine/model/node~Node} node Child node to look for.\n\t * @returns {Number|null} Child node's index.\n\t */\n\tgetChildIndex( node ) {\n\t\treturn this._children.getNodeIndex( node );\n\t}\n\n\t/**\n\t * Returns the starting offset of given child. Starting offset is equal to the sum of\n\t * {@link module:engine/model/node~Node#offsetSize offset sizes} of all node's siblings that are before it. Returns `null` if\n\t * given node is not a child of this document fragment.\n\t *\n\t * @param {module:engine/model/node~Node} node Child node to look for.\n\t * @returns {Number|null} Child node's starting offset.\n\t */\n\tgetChildStartOffset( node ) {\n\t\treturn this._children.getNodeStartOffset( node );\n\t}\n\n\t/**\n\t * Returns path to a `DocumentFragment`, which is an empty array. Added for compatibility reasons.\n\t *\n\t * @returns {Array}\n\t */\n\tgetPath() {\n\t\treturn [];\n\t}\n\n\t/**\n\t * Returns a descendant node by its path relative to this element.\n\t *\n\t *\t\t// <this>a<b>c</b></this>\n\t *\t\tthis.getNodeByPath( [ 0 ] );     // -> \"a\"\n\t *\t\tthis.getNodeByPath( [ 1 ] );     // -> <b>\n\t *\t\tthis.getNodeByPath( [ 1, 0 ] );  // -> \"c\"\n\t *\n\t * @param {Array.<Number>} relativePath Path of the node to find, relative to this element.\n\t * @returns {module:engine/model/node~Node|module:engine/model/documentfragment~DocumentFragment}\n\t */\n\tgetNodeByPath( relativePath ) {\n\t\tlet node = this; // eslint-disable-line consistent-this\n\n\t\tfor ( const index of relativePath ) {\n\t\t\tnode = node.getChild( node.offsetToIndex( index ) );\n\t\t}\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * Converts offset \"position\" to index \"position\".\n\t *\n\t * Returns index of a node that occupies given offset. If given offset is too low, returns `0`. If given offset is\n\t * too high, returns index after last child}.\n\t *\n\t *\t\tconst textNode = new Text( 'foo' );\n\t *\t\tconst pElement = new Element( 'p' );\n\t *\t\tconst docFrag = new DocumentFragment( [ textNode, pElement ] );\n\t *\t\tdocFrag.offsetToIndex( -1 ); // Returns 0, because offset is too low.\n\t *\t\tdocFrag.offsetToIndex( 0 ); // Returns 0, because offset 0 is taken by `textNode` which is at index 0.\n\t *\t\tdocFrag.offsetToIndex( 1 ); // Returns 0, because `textNode` has `offsetSize` equal to 3, so it occupies offset 1 too.\n\t *\t\tdocFrag.offsetToIndex( 2 ); // Returns 0.\n\t *\t\tdocFrag.offsetToIndex( 3 ); // Returns 1.\n\t *\t\tdocFrag.offsetToIndex( 4 ); // Returns 2. There are no nodes at offset 4, so last available index is returned.\n\t *\n\t * @param {Number} offset Offset to look for.\n\t * @returns {Number} Index of a node that occupies given offset.\n\t */\n\toffsetToIndex( offset ) {\n\t\treturn this._children.offsetToIndex( offset );\n\t}\n\n\t/**\n\t * Converts `DocumentFragment` instance to plain object and returns it.\n\t * Takes care of converting all of this document fragment's children.\n\t *\n\t * @returns {Object} `DocumentFragment` instance converted to plain object.\n\t */\n\ttoJSON() {\n\t\tconst json = [];\n\n\t\tfor ( const node of this._children ) {\n\t\t\tjson.push( node.toJSON() );\n\t\t}\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * Creates a `DocumentFragment` instance from given plain object (i.e. parsed JSON string).\n\t * Converts `DocumentFragment` children to proper nodes.\n\t *\n\t * @param {Object} json Plain object to be converted to `DocumentFragment`.\n\t * @returns {module:engine/model/documentfragment~DocumentFragment} `DocumentFragment` instance created using given plain object.\n\t */\n\tstatic fromJSON( json ) {\n\t\tconst children = [];\n\n\t\tfor ( const child of json ) {\n\t\t\tif ( child.name ) {\n\t\t\t\t// If child has name property, it is an Element.\n\t\t\t\tchildren.push( Element.fromJSON( child ) );\n\t\t\t} else {\n\t\t\t\t// Otherwise, it is a Text node.\n\t\t\t\tchildren.push( Text.fromJSON( child ) );\n\t\t\t}\n\t\t}\n\n\t\treturn new DocumentFragment( children );\n\t}\n\n\t/**\n\t * {@link #_insertChild Inserts} one or more nodes at the end of this document fragment.\n\t *\n\t * @protected\n\t * @param {module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>} items Items to be inserted.\n\t */\n\t_appendChild( items ) {\n\t\tthis._insertChild( this.childCount, items );\n\t}\n\n\t/**\n\t * Inserts one or more nodes at the given index and sets {@link module:engine/model/node~Node#parent parent} of these nodes\n\t * to this document fragment.\n\t *\n\t * @protected\n\t * @param {Number} index Index at which nodes should be inserted.\n\t * @param {module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>} items Items to be inserted.\n\t */\n\t_insertChild( index, items ) {\n\t\tconst nodes = normalize( items );\n\n\t\tfor ( const node of nodes ) {\n\t\t\t// If node that is being added to this element is already inside another element, first remove it from the old parent.\n\t\t\tif ( node.parent !== null ) {\n\t\t\t\tnode._remove();\n\t\t\t}\n\n\t\t\tnode.parent = this;\n\t\t}\n\n\t\tthis._children._insertNodes( index, nodes );\n\t}\n\n\t/**\n\t * Removes one or more nodes starting at the given index\n\t * and sets {@link module:engine/model/node~Node#parent parent} of these nodes to `null`.\n\t *\n\t * @protected\n\t * @param {Number} index Index of the first node to remove.\n\t * @param {Number} [howMany=1] Number of nodes to remove.\n\t * @returns {Array.<module:engine/model/node~Node>} Array containing removed nodes.\n\t */\n\t_removeChildren( index, howMany = 1 ) {\n\t\tconst nodes = this._children._removeNodes( index, howMany );\n\n\t\tfor ( const node of nodes ) {\n\t\t\tnode.parent = null;\n\t\t}\n\n\t\treturn nodes;\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn 'documentFragment';\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // log() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ModelDocumentFragment: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // printTree() {\n\t// @if CK_DEBUG_ENGINE //\tlet string = 'ModelDocumentFragment: [';\n\n\t// @if CK_DEBUG_ENGINE //\tfor ( const child of this.getChildren() ) {\n\t// @if CK_DEBUG_ENGINE //\t\tstring += '\\n';\n\n\t// @if CK_DEBUG_ENGINE //\t\tif ( child.is( 'text' ) ) {\n\t// @if CK_DEBUG_ENGINE //\t\t\tconst textAttrs = stringifyMap( child._attrs );\n\n\t// @if CK_DEBUG_ENGINE //\t\t\tstring += '\\t'.repeat( 1 );\n\n\t// @if CK_DEBUG_ENGINE //\t\t\tif ( textAttrs !== '' ) {\n\t// @if CK_DEBUG_ENGINE //\t\t\t\tstring += `<$text${ textAttrs }>` + child.data + '</$text>';\n\t// @if CK_DEBUG_ENGINE //\t\t\t} else {\n\t// @if CK_DEBUG_ENGINE //\t\t\t\tstring += child.data;\n\t// @if CK_DEBUG_ENGINE //\t\t\t}\n\t// @if CK_DEBUG_ENGINE //\t\t} else {\n\t// @if CK_DEBUG_ENGINE //\t\t\tstring += child.printTree( 1 );\n\t// @if CK_DEBUG_ENGINE //\t\t}\n\t// @if CK_DEBUG_ENGINE //\t}\n\n\t// @if CK_DEBUG_ENGINE //\tstring += '\\n]';\n\n\t// @if CK_DEBUG_ENGINE //\treturn string;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logTree() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( this.printTree() );\n\t// @if CK_DEBUG_ENGINE // }\n}\n\n// Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>}\n// @returns {Iterable.<module:engine/model/node~Node>}\nfunction normalize( nodes ) {\n\t// Separate condition because string is iterable.\n\tif ( typeof nodes == 'string' ) {\n\t\treturn [ new Text( nodes ) ];\n\t}\n\n\tif ( !isIterable( nodes ) ) {\n\t\tnodes = [ nodes ];\n\t}\n\n\t// Array.from to enable .map() on non-arrays.\n\treturn Array.from( nodes )\n\t\t.map( node => {\n\t\t\tif ( typeof node == 'string' ) {\n\t\t\t\treturn new Text( node );\n\t\t\t}\n\n\t\t\tif ( node instanceof TextProxy ) {\n\t\t\t\treturn new Text( node.data, node.getAttributes() );\n\t\t\t}\n\n\t\t\treturn node;\n\t\t} );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/utils\n */\n\nimport Node from '../node';\nimport Text from '../text';\nimport TextProxy from '../textproxy';\nimport Range from '../range';\nimport DocumentFragment from '../documentfragment';\nimport NodeList from '../nodelist';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Contains functions used for composing model tree by {@link module:engine/model/operation/operation~Operation operations}.\n * Those functions are built on top of {@link module:engine/model/node~Node node}, and it's child classes', APIs.\n *\n * @protected\n * @namespace utils\n */\n\n/**\n * Inserts given nodes at given position.\n *\n * @protected\n * @function module:engine/model/operation/utils~utils.insert\n * @param {module:engine/model/position~Position} position Position at which nodes should be inserted.\n * @param {module:engine/model/node~NodeSet} nodes Nodes to insert.\n * @returns {module:engine/model/range~Range} Range spanning over inserted elements.\n */\nexport function _insert( position, nodes ) {\n\tnodes = _normalizeNodes( nodes );\n\n\t// We have to count offset before inserting nodes because they can get merged and we would get wrong offsets.\n\tconst offset = nodes.reduce( ( sum, node ) => sum + node.offsetSize, 0 );\n\tconst parent = position.parent;\n\n\t// Insertion might be in a text node, we should split it if that's the case.\n\t_splitNodeAtPosition( position );\n\tconst index = position.index;\n\n\t// Insert nodes at given index. After splitting we have a proper index and insertion is between nodes,\n\t// using basic `Element` API.\n\tparent._insertChild( index, nodes );\n\n\t// Merge text nodes, if possible. Merging is needed only at points where inserted nodes \"touch\" \"old\" nodes.\n\t_mergeNodesAtIndex( parent, index + nodes.length );\n\t_mergeNodesAtIndex( parent, index );\n\n\treturn new Range( position, position.getShiftedBy( offset ) );\n}\n\n/**\n * Removed nodes in given range. Only {@link module:engine/model/range~Range#isFlat flat} ranges are accepted.\n *\n * @protected\n * @function module:engine/model/operation/utils~utils._remove\n * @param {module:engine/model/range~Range} range Range containing nodes to remove.\n * @returns {Array.<module:engine/model/node~Node>}\n */\nexport function _remove( range ) {\n\tif ( !range.isFlat ) {\n\t\t/**\n\t\t * Trying to remove a range which starts and ends in different element.\n\t\t *\n\t\t * @error operation-utils-remove-range-not-flat\n\t\t */\n\t\tthrow new CKEditorError(\n\t\t\t'operation-utils-remove-range-not-flat: ' +\n\t\t\t'Trying to remove a range which starts and ends in different element.',\n\t\t\tthis\n\t\t);\n\t}\n\n\tconst parent = range.start.parent;\n\n\t// Range may be inside text nodes, we have to split them if that's the case.\n\t_splitNodeAtPosition( range.start );\n\t_splitNodeAtPosition( range.end );\n\n\t// Remove the text nodes using basic `Element` API.\n\tconst removed = parent._removeChildren( range.start.index, range.end.index - range.start.index );\n\n\t// Merge text nodes, if possible. After some nodes were removed, node before and after removed range will be\n\t// touching at the position equal to the removed range beginning. We check merging possibility there.\n\t_mergeNodesAtIndex( parent, range.start.index );\n\n\treturn removed;\n}\n\n/**\n * Moves nodes in given range to given target position. Only {@link module:engine/model/range~Range#isFlat flat} ranges are accepted.\n *\n * @protected\n * @function module:engine/model/operation/utils~utils.move\n * @param {module:engine/model/range~Range} sourceRange Range containing nodes to move.\n * @param {module:engine/model/position~Position} targetPosition Position to which nodes should be moved.\n * @returns {module:engine/model/range~Range} Range containing moved nodes.\n */\nexport function _move( sourceRange, targetPosition ) {\n\tif ( !sourceRange.isFlat ) {\n\t\t/**\n\t\t * Trying to move a range which starts and ends in different element.\n\t\t *\n\t\t * @error operation-utils-move-range-not-flat\n\t\t */\n\t\tthrow new CKEditorError(\n\t\t\t'operation-utils-move-range-not-flat: ' +\n\t\t\t'Trying to move a range which starts and ends in different element.',\n\t\t\tthis\n\t\t);\n\t}\n\n\tconst nodes = _remove( sourceRange );\n\n\t// We have to fix `targetPosition` because model changed after nodes from `sourceRange` got removed and\n\t// that change might have an impact on `targetPosition`.\n\ttargetPosition = targetPosition._getTransformedByDeletion( sourceRange.start, sourceRange.end.offset - sourceRange.start.offset );\n\n\treturn _insert( targetPosition, nodes );\n}\n\n/**\n * Sets given attribute on nodes in given range. The attributes are only set on top-level nodes of the range, not on its children.\n *\n * @protected\n * @function module:engine/model/operation/utils~utils._setAttribute\n * @param {module:engine/model/range~Range} range Range containing nodes that should have the attribute set. Must be a flat range.\n * @param {String} key Key of attribute to set.\n * @param {*} value Attribute value.\n */\nexport function _setAttribute( range, key, value ) {\n\t// Range might start or end in text nodes, so we have to split them.\n\t_splitNodeAtPosition( range.start );\n\t_splitNodeAtPosition( range.end );\n\n\t// Iterate over all items in the range.\n\tfor ( const item of range.getItems( { shallow: true } ) ) {\n\t\t// Iterator will return `TextProxy` instances but we know that those text proxies will\n\t\t// always represent full text nodes (this is guaranteed thanks to splitting we did before).\n\t\t// So, we can operate on those text proxies' text nodes.\n\t\tconst node = item.is( 'textProxy' ) ? item.textNode : item;\n\n\t\tif ( value !== null ) {\n\t\t\tnode._setAttribute( key, value );\n\t\t} else {\n\t\t\tnode._removeAttribute( key );\n\t\t}\n\n\t\t// After attributes changing it may happen that some text nodes can be merged. Try to merge with previous node.\n\t\t_mergeNodesAtIndex( node.parent, node.index );\n\t}\n\n\t// Try to merge last changed node with it's previous sibling (not covered by the loop above).\n\t_mergeNodesAtIndex( range.end.parent, range.end.index );\n}\n\n/**\n * Normalizes given object or an array of objects to an array of {@link module:engine/model/node~Node nodes}. See\n * {@link module:engine/model/node~NodeSet NodeSet} for details on how normalization is performed.\n *\n * @protected\n * @function module:engine/model/operation/utils~utils.normalizeNodes\n * @param {module:engine/model/node~NodeSet} nodes Objects to normalize.\n * @returns {Array.<module:engine/model/node~Node>} Normalized nodes.\n */\nexport function _normalizeNodes( nodes ) {\n\tconst normalized = [];\n\n\tif ( !( nodes instanceof Array ) ) {\n\t\tnodes = [ nodes ];\n\t}\n\n\t// Convert instances of classes other than Node.\n\tfor ( let i = 0; i < nodes.length; i++ ) {\n\t\tif ( typeof nodes[ i ] == 'string' ) {\n\t\t\tnormalized.push( new Text( nodes[ i ] ) );\n\t\t} else if ( nodes[ i ] instanceof TextProxy ) {\n\t\t\tnormalized.push( new Text( nodes[ i ].data, nodes[ i ].getAttributes() ) );\n\t\t} else if ( nodes[ i ] instanceof DocumentFragment || nodes[ i ] instanceof NodeList ) {\n\t\t\tfor ( const child of nodes[ i ] ) {\n\t\t\t\tnormalized.push( child );\n\t\t\t}\n\t\t} else if ( nodes[ i ] instanceof Node ) {\n\t\t\tnormalized.push( nodes[ i ] );\n\t\t}\n\t\t// Skip unrecognized type.\n\t}\n\n\t// Merge text nodes.\n\tfor ( let i = 1; i < normalized.length; i++ ) {\n\t\tconst node = normalized[ i ];\n\t\tconst prev = normalized[ i - 1 ];\n\n\t\tif ( node instanceof Text && prev instanceof Text && _haveSameAttributes( node, prev ) ) {\n\t\t\t// Doing this instead changing `prev.data` because `data` is readonly.\n\t\t\tnormalized.splice( i - 1, 2, new Text( prev.data + node.data, prev.getAttributes() ) );\n\t\t\ti--;\n\t\t}\n\t}\n\n\treturn normalized;\n}\n\n// Checks if nodes before and after given index in given element are {@link module:engine/model/text~Text text nodes} and\n// merges them into one node if they have same attributes.\n//\n// Merging is done by removing two text nodes and inserting a new text node containing data from both merged text nodes.\n//\n// @private\n// @param {module:engine/model/element~Element} element Parent element of nodes to merge.\n// @param {Number} index Index between nodes to merge.\nfunction _mergeNodesAtIndex( element, index ) {\n\tconst nodeBefore = element.getChild( index - 1 );\n\tconst nodeAfter = element.getChild( index );\n\n\t// Check if both of those nodes are text objects with same attributes.\n\tif ( nodeBefore && nodeAfter && nodeBefore.is( 'text' ) && nodeAfter.is( 'text' ) && _haveSameAttributes( nodeBefore, nodeAfter ) ) {\n\t\t// Append text of text node after index to the before one.\n\t\tconst mergedNode = new Text( nodeBefore.data + nodeAfter.data, nodeBefore.getAttributes() );\n\n\t\t// Remove separate text nodes.\n\t\telement._removeChildren( index - 1, 2 );\n\n\t\t// Insert merged text node.\n\t\telement._insertChild( index - 1, mergedNode );\n\t}\n}\n\n// Checks if given position is in a text node, and if so, splits the text node in two text nodes, each of them\n// containing a part of original text node.\n//\n// @private\n// @param {module:engine/model/position~Position} position Position at which node should be split.\nfunction _splitNodeAtPosition( position ) {\n\tconst textNode = position.textNode;\n\tconst element = position.parent;\n\n\tif ( textNode ) {\n\t\tconst offsetDiff = position.offset - textNode.startOffset;\n\t\tconst index = textNode.index;\n\n\t\telement._removeChildren( index, 1 );\n\n\t\tconst firstPart = new Text( textNode.data.substr( 0, offsetDiff ), textNode.getAttributes() );\n\t\tconst secondPart = new Text( textNode.data.substr( offsetDiff ), textNode.getAttributes() );\n\n\t\telement._insertChild( index, [ firstPart, secondPart ] );\n\t}\n}\n\n// Checks whether two given nodes have same attributes.\n//\n// @private\n// @param {module:engine/model/node~Node} nodeA Node to check.\n// @param {module:engine/model/node~Node} nodeB Node to check.\n// @returns {Boolean} `true` if nodes have same attributes, `false` otherwise.\nfunction _haveSameAttributes( nodeA, nodeB ) {\n\tconst iteratorA = nodeA.getAttributes();\n\tconst iteratorB = nodeB.getAttributes();\n\n\tfor ( const attr of iteratorA ) {\n\t\tif ( attr[ 1 ] !== nodeB.getAttribute( attr[ 0 ] ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\titeratorB.next();\n\t}\n\n\treturn iteratorB.next().done;\n}\n\n/**\n * Value that can be normalized to an array of {@link module:engine/model/node~Node nodes}.\n *\n * Non-arrays are normalized as follows:\n * * {@link module:engine/model/node~Node Node} is left as is,\n * * {@link module:engine/model/textproxy~TextProxy TextProxy} and `String` are normalized to {@link module:engine/model/text~Text Text},\n * * {@link module:engine/model/nodelist~NodeList NodeList} is normalized to an array containing all nodes that are in that node list,\n * * {@link module:engine/model/documentfragment~DocumentFragment DocumentFragment} is normalized to an array containing all of it's\n * * children.\n *\n * Arrays are processed item by item like non-array values and flattened to one array. Normalization always results in\n * a flat array of {@link module:engine/model/node~Node nodes}. Consecutive text nodes (or items normalized to text nodes) will be\n * merged if they have same attributes.\n *\n * @typedef {module:engine/model/node~Node|module:engine/model/textproxy~TextProxy|String|\n * module:engine/model/nodelist~NodeList|module:engine/model/documentfragment~DocumentFragment|Iterable}\n * module:engine/model/node~NodeSet\n */\n","import baseIsEqual from './_baseIsEqual.js';\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nexport default isEqual;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/attributeoperation\n */\n\nimport Operation from './operation';\nimport Range from '../range';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport { _setAttribute } from './utils';\nimport { isEqual } from 'lodash-es';\n\n/**\n * Operation to change nodes' attribute.\n *\n * Using this class you can add, remove or change value of the attribute.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class AttributeOperation extends Operation {\n\t/**\n\t * Creates an operation that changes, removes or adds attributes.\n\t *\n\t * If only `newValue` is set, attribute will be added on a node. Note that all nodes in operation's range must not\n\t * have an attribute with the same key as the added attribute.\n\t *\n\t * If only `oldValue` is set, then attribute with given key will be removed. Note that all nodes in operation's range\n\t * must have an attribute with that key added.\n\t *\n\t * If both `newValue` and `oldValue` are set, then the operation will change the attribute value. Note that all nodes in\n\t * operation's ranges must already have an attribute with given key and `oldValue` as value\n\t *\n\t * @param {module:engine/model/range~Range} range Range on which the operation should be applied. Must be a flat range.\n\t * @param {String} key Key of an attribute to change or remove.\n\t * @param {*} oldValue Old value of the attribute with given key or `null`, if attribute was not set before.\n\t * @param {*} newValue New value of the attribute with given key or `null`, if operation should remove attribute.\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\n\t */\n\tconstructor( range, key, oldValue, newValue, baseVersion ) {\n\t\tsuper( baseVersion );\n\n\t\t/**\n\t\t * Range on which operation should be applied.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/range~Range}\n\t\t */\n\t\tthis.range = range.clone();\n\n\t\t/**\n\t\t * Key of an attribute to change or remove.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.key = key;\n\n\t\t/**\n\t\t * Old value of the attribute with given key or `null`, if attribute was not set before.\n\t\t *\n\t\t * @readonly\n\t\t * @member {*}\n\t\t */\n\t\tthis.oldValue = oldValue === undefined ? null : oldValue;\n\n\t\t/**\n\t\t * New value of the attribute with given key or `null`, if operation should remove attribute.\n\t\t *\n\t\t * @readonly\n\t\t * @member {*}\n\t\t */\n\t\tthis.newValue = newValue === undefined ? null : newValue;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\tif ( this.oldValue === null ) {\n\t\t\treturn 'addAttribute';\n\t\t} else if ( this.newValue === null ) {\n\t\t\treturn 'removeAttribute';\n\t\t} else {\n\t\t\treturn 'changeAttribute';\n\t\t}\n\t}\n\n\t/**\n\t * Creates and returns an operation that has the same parameters as this operation.\n\t *\n\t * @returns {module:engine/model/operation/attributeoperation~AttributeOperation} Clone of this operation.\n\t */\n\tclone() {\n\t\treturn new AttributeOperation( this.range, this.key, this.oldValue, this.newValue, this.baseVersion );\n\t}\n\n\t/**\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n\t *\n\t * @returns {module:engine/model/operation/attributeoperation~AttributeOperation}\n\t */\n\tgetReversed() {\n\t\treturn new AttributeOperation( this.range, this.key, this.newValue, this.oldValue, this.baseVersion + 1 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.range = this.range.toJSON();\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_validate() {\n\t\tif ( !this.range.isFlat ) {\n\t\t\t/**\n\t\t\t * The range to change is not flat.\n\t\t\t *\n\t\t\t * @error attribute-operation-range-not-flat\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'attribute-operation-range-not-flat: The range to change is not flat.', this );\n\t\t}\n\n\t\tfor ( const item of this.range.getItems( { shallow: true } ) ) {\n\t\t\tif ( this.oldValue !== null && !isEqual( item.getAttribute( this.key ), this.oldValue ) ) {\n\t\t\t\t/**\n\t\t\t\t * Changed node has different attribute value than operation's old attribute value.\n\t\t\t\t *\n\t\t\t\t * @error attribute-operation-wrong-old-value\n\t\t\t\t * @param {module:engine/model/item~Item} item\n\t\t\t\t * @param {String} key\n\t\t\t\t * @param {*} value\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'attribute-operation-wrong-old-value: Changed node has different attribute value than operation\\'s ' +\n\t\t\t\t\t'old attribute value.',\n\t\t\t\t\tthis,\n\t\t\t\t\t{ item, key: this.key, value: this.oldValue }\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif ( this.oldValue === null && this.newValue !== null && item.hasAttribute( this.key ) ) {\n\t\t\t\t/**\n\t\t\t\t * The attribute with given key already exists for the given node.\n\t\t\t\t *\n\t\t\t\t * @error attribute-operation-attribute-exists\n\t\t\t\t * @param {module:engine/model/node~Node} node\n\t\t\t\t * @param {String} key\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'attribute-operation-attribute-exists: The attribute with given key already exists.',\n\t\t\t\t\tthis,\n\t\t\t\t\t{ node: item, key: this.key }\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\t// If value to set is same as old value, don't do anything.\n\t\tif ( !isEqual( this.oldValue, this.newValue ) ) {\n\t\t\t// Execution.\n\t\t\t_setAttribute( this.range, this.key, this.newValue );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'AttributeOperation';\n\t}\n\n\t/**\n\t * Creates `AttributeOperation` object from deserilized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/attributeoperation~AttributeOperation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\treturn new AttributeOperation( Range.fromJSON( json.range, document ), json.key, json.oldValue, json.newValue, json.baseVersion );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `AttributeOperation( ${ this.baseVersion } ): ` +\n\t// @if CK_DEBUG_ENGINE //\t\t`\"${ this.key }\": ${ JSON.stringify( this.oldValue ) }` +\n\t// @if CK_DEBUG_ENGINE //\t\t` -> ${ JSON.stringify( this.newValue ) }, ${ this.range }`;\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/detachoperation\n */\n\nimport Operation from './operation';\nimport Range from '../range';\nimport { _remove } from './utils';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n// @if CK_DEBUG_ENGINE // const ModelRange = require( '../range' ).default;\n\n/**\n * Operation to permanently remove node from detached root.\n * Note this operation is only a local operation and won't be send to the other clients.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class DetachOperation extends Operation {\n\t/**\n\t * Creates an insert operation.\n\t *\n\t * @param {module:engine/model/position~Position} sourcePosition\n\t * Position before the first {@link module:engine/model/item~Item model item} to move.\n\t * @param {Number} howMany Offset size of moved range. Moved range will start from `sourcePosition` and end at\n\t * `sourcePosition` with offset shifted by `howMany`.\n\t */\n\tconstructor( sourcePosition, howMany ) {\n\t\tsuper( null );\n\n\t\t/**\n\t\t * Position before the first {@link module:engine/model/item~Item model item} to detach.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} #sourcePosition\n\t\t */\n\t\tthis.sourcePosition = sourcePosition.clone();\n\n\t\t/**\n\t\t * Offset size of moved range.\n\t\t *\n\t\t * @member {Number} #howMany\n\t\t */\n\t\tthis.howMany = howMany;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\treturn 'detach';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.sourcePosition = this.sourcePosition.toJSON();\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_validate() {\n\t\tif ( this.sourcePosition.root.document ) {\n\t\t\t/**\n\t\t\t * Cannot detach document node.\n\t\t\t *\n\t\t\t * @error detach-operation-on-document-node\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'detach-operation-on-document-node: Cannot detach document node.', this );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\t_remove( Range._createFromPositionAndShift( this.sourcePosition, this.howMany ) );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'DetachOperation';\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // const range = ModelRange._createFromPositionAndShift( this.sourcePosition, this.howMany );\n\t// @if CK_DEBUG_ENGINE //\tconst nodes = Array.from( range.getItems() );\n\t// @if CK_DEBUG_ENGINE //\tconst nodeString = nodes.length > 1 ? `[ ${ nodes.length } ]` : nodes[ 0 ];\n\n\t// @if CK_DEBUG_ENGINE //\treturn `DetachOperation( ${ this.baseVersion } ): ${ nodeString } -> ${ range }`;\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/moveoperation\n */\n\nimport Operation from './operation';\nimport Position from '../position';\nimport Range from '../range';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport { _move } from './utils';\n\n// @if CK_DEBUG_ENGINE // const ModelRange = require( '../range' ).default;\n\n/**\n * Operation to move a range of {@link module:engine/model/item~Item model items}\n * to given {@link module:engine/model/position~Position target position}.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class MoveOperation extends Operation {\n\t/**\n\t * Creates a move operation.\n\t *\n\t * @param {module:engine/model/position~Position} sourcePosition\n\t * Position before the first {@link module:engine/model/item~Item model item} to move.\n\t * @param {Number} howMany Offset size of moved range. Moved range will start from `sourcePosition` and end at\n\t * `sourcePosition` with offset shifted by `howMany`.\n\t * @param {module:engine/model/position~Position} targetPosition Position at which moved nodes will be inserted.\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\n\t */\n\tconstructor( sourcePosition, howMany, targetPosition, baseVersion ) {\n\t\tsuper( baseVersion );\n\n\t\t/**\n\t\t * Position before the first {@link module:engine/model/item~Item model item} to move.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/moveoperation~MoveOperation#sourcePosition\n\t\t */\n\t\tthis.sourcePosition = sourcePosition.clone();\n\t\t// `'toNext'` because `sourcePosition` is a bit like a start of the moved range.\n\t\tthis.sourcePosition.stickiness = 'toNext';\n\n\t\t/**\n\t\t * Offset size of moved range.\n\t\t *\n\t\t * @member {Number} module:engine/model/operation/moveoperation~MoveOperation#howMany\n\t\t */\n\t\tthis.howMany = howMany;\n\n\t\t/**\n\t\t * Position at which moved nodes will be inserted.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/moveoperation~MoveOperation#targetPosition\n\t\t */\n\t\tthis.targetPosition = targetPosition.clone();\n\t\tthis.targetPosition.stickiness = 'toNone';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\tif ( this.targetPosition.root.rootName == '$graveyard' ) {\n\t\t\treturn 'remove';\n\t\t} else if ( this.sourcePosition.root.rootName == '$graveyard' ) {\n\t\t\treturn 'reinsert';\n\t\t}\n\n\t\treturn 'move';\n\t}\n\n\t/**\n\t * Creates and returns an operation that has the same parameters as this operation.\n\t *\n\t * @returns {module:engine/model/operation/moveoperation~MoveOperation} Clone of this operation.\n\t */\n\tclone() {\n\t\treturn new this.constructor( this.sourcePosition, this.howMany, this.targetPosition, this.baseVersion );\n\t}\n\n\t/**\n\t * Returns the start position of the moved range after it got moved. This may be different than\n\t * {@link module:engine/model/operation/moveoperation~MoveOperation#targetPosition} in some cases, i.e. when a range is moved\n\t * inside the same parent but {@link module:engine/model/operation/moveoperation~MoveOperation#targetPosition targetPosition}\n\t * is after {@link module:engine/model/operation/moveoperation~MoveOperation#sourcePosition sourcePosition}.\n\t *\n\t *\t\t vv              vv\n\t *\t\tabcdefg ===> adefbcg\n\t *\t\t     ^          ^\n\t *\t\t     targetPos\tmovedRangeStart\n\t *\t\t     offset 6\toffset 4\n\t *\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tgetMovedRangeStart() {\n\t\treturn this.targetPosition._getTransformedByDeletion( this.sourcePosition, this.howMany );\n\t}\n\n\t/**\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n\t *\n\t * @returns {module:engine/model/operation/moveoperation~MoveOperation}\n\t */\n\tgetReversed() {\n\t\tconst newTargetPosition = this.sourcePosition._getTransformedByInsertion( this.targetPosition, this.howMany );\n\n\t\treturn new this.constructor( this.getMovedRangeStart(), this.howMany, newTargetPosition, this.baseVersion + 1 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_validate() {\n\t\tconst sourceElement = this.sourcePosition.parent;\n\t\tconst targetElement = this.targetPosition.parent;\n\t\tconst sourceOffset = this.sourcePosition.offset;\n\t\tconst targetOffset = this.targetPosition.offset;\n\n\t\t// Validate whether move operation has correct parameters.\n\t\t// Validation is pretty complex but move operation is one of the core ways to manipulate the document state.\n\t\t// We expect that many errors might be connected with one of scenarios described below.\n\t\tif ( sourceOffset + this.howMany > sourceElement.maxOffset ) {\n\t\t\t/**\n\t\t\t * The nodes which should be moved do not exist.\n\t\t\t *\n\t\t\t * @error move-operation-nodes-do-not-exist\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'move-operation-nodes-do-not-exist: The nodes which should be moved do not exist.', this\n\t\t\t);\n\t\t} else if ( sourceElement === targetElement && sourceOffset < targetOffset && targetOffset < sourceOffset + this.howMany ) {\n\t\t\t/**\n\t\t\t * Trying to move a range of nodes into the middle of that range.\n\t\t\t *\n\t\t\t * @error move-operation-range-into-itself\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'move-operation-range-into-itself: Trying to move a range of nodes to the inside of that range.', this\n\t\t\t);\n\t\t} else if ( this.sourcePosition.root == this.targetPosition.root ) {\n\t\t\tif ( compareArrays( this.sourcePosition.getParentPath(), this.targetPosition.getParentPath() ) == 'prefix' ) {\n\t\t\t\tconst i = this.sourcePosition.path.length - 1;\n\n\t\t\t\tif ( this.targetPosition.path[ i ] >= sourceOffset && this.targetPosition.path[ i ] < sourceOffset + this.howMany ) {\n\t\t\t\t\t/**\n\t\t\t\t\t * Trying to move a range of nodes into one of nodes from that range.\n\t\t\t\t\t *\n\t\t\t\t\t * @error move-operation-node-into-itself\n\t\t\t\t\t */\n\t\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t\t'move-operation-node-into-itself: Trying to move a range of nodes into one of nodes from that range.', this\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\t_move( Range._createFromPositionAndShift( this.sourcePosition, this.howMany ), this.targetPosition );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.sourcePosition = this.sourcePosition.toJSON();\n\t\tjson.targetPosition = this.targetPosition.toJSON();\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'MoveOperation';\n\t}\n\n\t/**\n\t * Creates `MoveOperation` object from deserilized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/moveoperation~MoveOperation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\tconst sourcePosition = Position.fromJSON( json.sourcePosition, document );\n\t\tconst targetPosition = Position.fromJSON( json.targetPosition, document );\n\n\t\treturn new this( sourcePosition, json.howMany, targetPosition, json.baseVersion );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \tconst range = ModelRange._createFromPositionAndShift( this.sourcePosition, this.howMany );\n\n\t// @if CK_DEBUG_ENGINE //\treturn `MoveOperation( ${ this.baseVersion } ): ${ range } -> ${ this.targetPosition }`;\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/insertoperation\n */\n\nimport Operation from './operation';\nimport Position from '../position';\nimport NodeList from '../nodelist';\nimport MoveOperation from './moveoperation';\nimport { _insert, _normalizeNodes } from './utils';\nimport Text from '../text';\nimport Element from '../element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Operation to insert one or more nodes at given position in the model.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class InsertOperation extends Operation {\n\t/**\n\t * Creates an insert operation.\n\t *\n\t * @param {module:engine/model/position~Position} position Position of insertion.\n\t * @param {module:engine/model/node~NodeSet} nodes The list of nodes to be inserted.\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\n\t */\n\tconstructor( position, nodes, baseVersion ) {\n\t\tsuper( baseVersion );\n\n\t\t/**\n\t\t * Position of insertion.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/insertoperation~InsertOperation#position\n\t\t */\n\t\tthis.position = position.clone();\n\t\tthis.position.stickiness = 'toNone';\n\n\t\t/**\n\t\t * List of nodes to insert.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/nodelist~NodeList} module:engine/model/operation/insertoperation~InsertOperation#nodeList\n\t\t */\n\t\tthis.nodes = new NodeList( _normalizeNodes( nodes ) );\n\n\t\t/**\n\t\t * Flag deciding how the operation should be transformed. If set to `true`, nodes might get additional attributes\n\t\t * during operational transformation. This happens when the operation insertion position is inside of a range\n\t\t * where attributes have changed.\n\t\t *\n\t\t * @member {Boolean} module:engine/model/operation/insertoperation~InsertOperation#shouldReceiveAttributes\n\t\t */\n\t\tthis.shouldReceiveAttributes = false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\treturn 'insert';\n\t}\n\n\t/**\n\t * Total offset size of inserted nodes.\n\t *\n\t * @returns {Number}\n\t */\n\tget howMany() {\n\t\treturn this.nodes.maxOffset;\n\t}\n\n\t/**\n\t * Creates and returns an operation that has the same parameters as this operation.\n\t *\n\t * @returns {module:engine/model/operation/insertoperation~InsertOperation} Clone of this operation.\n\t */\n\tclone() {\n\t\tconst nodes = new NodeList( [ ...this.nodes ].map( node => node._clone( true ) ) );\n\t\tconst insert = new InsertOperation( this.position, nodes, this.baseVersion );\n\n\t\tinsert.shouldReceiveAttributes = this.shouldReceiveAttributes;\n\n\t\treturn insert;\n\t}\n\n\t/**\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n\t *\n\t * @returns {module:engine/model/operation/moveoperation~MoveOperation}\n\t */\n\tgetReversed() {\n\t\tconst graveyard = this.position.root.document.graveyard;\n\t\tconst gyPosition = new Position( graveyard, [ 0 ] );\n\n\t\treturn new MoveOperation( this.position, this.nodes.maxOffset, gyPosition, this.baseVersion + 1 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_validate() {\n\t\tconst targetElement = this.position.parent;\n\n\t\tif ( !targetElement || targetElement.maxOffset < this.position.offset ) {\n\t\t\t/**\n\t\t\t * Insertion position is invalid.\n\t\t\t *\n\t\t\t * @error insert-operation-position-invalid\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'insert-operation-position-invalid: Insertion position is invalid.',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\t// What happens here is that we want original nodes be passed to writer because we want original nodes\n\t\t// to be inserted to the model. But in InsertOperation, we want to keep those nodes as they were added\n\t\t// to the operation, not modified. For example, text nodes can get merged or cropped while Elements can\n\t\t// get children. It is important that InsertOperation has the copy of original nodes in intact state.\n\t\tconst originalNodes = this.nodes;\n\t\tthis.nodes = new NodeList( [ ...originalNodes ].map( node => node._clone( true ) ) );\n\n\t\t_insert( this.position, originalNodes );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.position = this.position.toJSON();\n\t\tjson.nodes = this.nodes.toJSON();\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'InsertOperation';\n\t}\n\n\t/**\n\t * Creates `InsertOperation` object from deserilized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/insertoperation~InsertOperation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\tconst children = [];\n\n\t\tfor ( const child of json.nodes ) {\n\t\t\tif ( child.name ) {\n\t\t\t\t// If child has name property, it is an Element.\n\t\t\t\tchildren.push( Element.fromJSON( child ) );\n\t\t\t} else {\n\t\t\t\t// Otherwise, it is a Text node.\n\t\t\t\tchildren.push( Text.fromJSON( child ) );\n\t\t\t}\n\t\t}\n\n\t\tconst insert = new InsertOperation( Position.fromJSON( json.position, document ), children, json.baseVersion );\n\t\tinsert.shouldReceiveAttributes = json.shouldReceiveAttributes;\n\n\t\treturn insert;\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \tconst nodeString = this.nodes.length > 1 ? `[ ${ this.nodes.length } ]` : this.nodes.getNode( 0 );\n\n\t// @if CK_DEBUG_ENGINE //\treturn `InsertOperation( ${ this.baseVersion } ): ${ nodeString } -> ${ this.position }`;\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/markeroperation\n */\n\nimport Operation from './operation';\nimport Range from '../range';\n\n/**\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class MarkerOperation extends Operation {\n\t/**\n\t * @param {String} name Marker name.\n\t * @param {module:engine/model/range~Range} oldRange Marker range before the change.\n\t * @param {module:engine/model/range~Range} newRange Marker range after the change.\n\t * @param {module:engine/model/markercollection~MarkerCollection} markers Marker collection on which change should be executed.\n\t * @param {Boolean} affectsData Specifies whether the marker operation affects the data produced by the data pipeline\n\t * (is persisted in the editor's data).\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\n\t */\n\tconstructor( name, oldRange, newRange, markers, affectsData, baseVersion ) {\n\t\tsuper( baseVersion );\n\n\t\t/**\n\t\t * Marker name.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.name = name;\n\n\t\t/**\n\t\t * Marker range before the change.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/range~Range}\n\t\t */\n\t\tthis.oldRange = oldRange ? oldRange.clone() : null;\n\n\t\t/**\n\t\t * Marker range after the change.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/range~Range}\n\t\t */\n\t\tthis.newRange = newRange ? newRange.clone() : null;\n\n\t\t/**\n\t\t * Specifies whether the marker operation affects the data produced by the data pipeline\n\t\t * (is persisted in the editor's data).\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis.affectsData = affectsData;\n\n\t\t/**\n\t\t * Marker collection on which change should be executed.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/markercollection~MarkerCollection}\n\t\t */\n\t\tthis._markers = markers;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\treturn 'marker';\n\t}\n\n\t/**\n\t * Creates and returns an operation that has the same parameters as this operation.\n\t *\n\t * @returns {module:engine/model/operation/markeroperation~MarkerOperation} Clone of this operation.\n\t */\n\tclone() {\n\t\treturn new MarkerOperation( this.name, this.oldRange, this.newRange, this._markers, this.affectsData, this.baseVersion );\n\t}\n\n\t/**\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n\t *\n\t * @returns {module:engine/model/operation/markeroperation~MarkerOperation}\n\t */\n\tgetReversed() {\n\t\treturn new MarkerOperation( this.name, this.newRange, this.oldRange, this._markers, this.affectsData, this.baseVersion + 1 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\tconst type = this.newRange ? '_set' : '_remove';\n\n\t\tthis._markers[ type ]( this.name, this.newRange, true, this.affectsData );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tif ( this.oldRange ) {\n\t\t\tjson.oldRange = this.oldRange.toJSON();\n\t\t}\n\n\t\tif ( this.newRange ) {\n\t\t\tjson.newRange = this.newRange.toJSON();\n\t\t}\n\n\t\tdelete json._markers;\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'MarkerOperation';\n\t}\n\n\t/**\n\t * Creates `MarkerOperation` object from deserialized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/markeroperation~MarkerOperation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\treturn new MarkerOperation(\n\t\t\tjson.name,\n\t\t\tjson.oldRange ? Range.fromJSON( json.oldRange, document ) : null,\n\t\t\tjson.newRange ? Range.fromJSON( json.newRange, document ) : null,\n\t\t\tdocument.model.markers,\n\t\t\tjson.affectsData,\n\t\t\tjson.baseVersion\n\t\t);\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `MarkerOperation( ${ this.baseVersion } ): ` +\n\t// @if CK_DEBUG_ENGINE //\t\t`\"${ this.name }\": ${ this.oldRange } -> ${ this.newRange }`;\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/renameoperation\n */\n\nimport Operation from './operation';\nimport Element from '../element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Position from '../position';\n\n/**\n * Operation to change element's name.\n *\n * Using this class you can change element's name.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class RenameOperation extends Operation {\n\t/**\n\t * Creates an operation that changes element's name.\n\t *\n\t * @param {module:engine/model/position~Position} position Position before an element to change.\n\t * @param {String} oldName Current name of the element.\n\t * @param {String} newName New name for the element.\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\n\t */\n\tconstructor( position, oldName, newName, baseVersion ) {\n\t\tsuper( baseVersion );\n\n\t\t/**\n\t\t * Position before an element to change.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/renameoperation~RenameOperation#position\n\t\t */\n\t\tthis.position = position;\n\t\t// This position sticks to the next node because it is a position before the node that we want to change.\n\t\tthis.position.stickiness = 'toNext';\n\n\t\t/**\n\t\t * Current name of the element.\n\t\t *\n\t\t * @member {String} module:engine/model/operation/renameoperation~RenameOperation#oldName\n\t\t */\n\t\tthis.oldName = oldName;\n\n\t\t/**\n\t\t * New name for the element.\n\t\t *\n\t\t * @member {String} module:engine/model/operation/renameoperation~RenameOperation#newName\n\t\t */\n\t\tthis.newName = newName;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\treturn 'rename';\n\t}\n\n\t/**\n\t * Creates and returns an operation that has the same parameters as this operation.\n\t *\n\t * @returns {module:engine/model/operation/renameoperation~RenameOperation} Clone of this operation.\n\t */\n\tclone() {\n\t\treturn new RenameOperation( this.position.clone(), this.oldName, this.newName, this.baseVersion );\n\t}\n\n\t/**\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n\t *\n\t * @returns {module:engine/model/operation/renameoperation~RenameOperation}\n\t */\n\tgetReversed() {\n\t\treturn new RenameOperation( this.position.clone(), this.newName, this.oldName, this.baseVersion + 1 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_validate() {\n\t\tconst element = this.position.nodeAfter;\n\n\t\tif ( !( element instanceof Element ) ) {\n\t\t\t/**\n\t\t\t * Given position is invalid or node after it is not instance of Element.\n\t\t\t *\n\t\t\t * @error rename-operation-wrong-position\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'rename-operation-wrong-position: Given position is invalid or node after it is not an instance of Element.',\n\t\t\t\tthis\n\t\t\t);\n\t\t} else if ( element.name !== this.oldName ) {\n\t\t\t/**\n\t\t\t * Element to change has different name than operation's old name.\n\t\t\t *\n\t\t\t * @error rename-operation-wrong-name\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'rename-operation-wrong-name: Element to change has different name than operation\\'s old name.',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\tconst element = this.position.nodeAfter;\n\n\t\telement.name = this.newName;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.position = this.position.toJSON();\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'RenameOperation';\n\t}\n\n\t/**\n\t * Creates `RenameOperation` object from deserialized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/attributeoperation~AttributeOperation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\treturn new RenameOperation( Position.fromJSON( json.position, document ), json.oldName, json.newName, json.baseVersion );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `RenameOperation( ${ this.baseVersion } ): ` +\n\t// @if CK_DEBUG_ENGINE //\t\t`${ this.position }: \"${ this.oldName }\" -> \"${ this.newName }\"`;\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/rootattributeoperation\n */\n\nimport Operation from './operation';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Operation to change root element's attribute. Using this class you can add, remove or change value of the attribute.\n *\n * This operation is needed, because root elements can't be changed through\n * @link module:engine/model/operation/attributeoperation~AttributeOperation}.\n * It is because {@link module:engine/model/operation/attributeoperation~AttributeOperation}\n * requires a range to change and root element can't\n * be a part of range because every {@link module:engine/model/position~Position} has to be inside a root.\n * {@link module:engine/model/position~Position} can't be created before a root element.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class RootAttributeOperation extends Operation {\n\t/**\n\t * Creates an operation that changes, removes or adds attributes on root element.\n\t *\n\t * @see module:engine/model/operation/attributeoperation~AttributeOperation\n\t * @param {module:engine/model/rootelement~RootElement} root Root element to change.\n\t * @param {String} key Key of an attribute to change or remove.\n\t * @param {*} oldValue Old value of the attribute with given key or `null` if adding a new attribute.\n\t * @param {*} newValue New value to set for the attribute. If `null`, then the operation just removes the attribute.\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\n\t */\n\tconstructor( root, key, oldValue, newValue, baseVersion ) {\n\t\tsuper( baseVersion );\n\n\t\t/**\n\t\t * Root element to change.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/rootelement~RootElement}\n\t\t */\n\t\tthis.root = root;\n\n\t\t/**\n\t\t * Key of an attribute to change or remove.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.key = key;\n\n\t\t/**\n\t\t * Old value of the attribute with given key or `null` if adding a new attribute.\n\t\t *\n\t\t * @readonly\n\t\t * @member {*}\n\t\t */\n\t\tthis.oldValue = oldValue;\n\n\t\t/**\n\t\t * New value to set for the attribute. If `null`, then the operation just removes the attribute.\n\t\t *\n\t\t * @readonly\n\t\t * @member {*}\n\t\t */\n\t\tthis.newValue = newValue;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\tif ( this.oldValue === null ) {\n\t\t\treturn 'addRootAttribute';\n\t\t} else if ( this.newValue === null ) {\n\t\t\treturn 'removeRootAttribute';\n\t\t} else {\n\t\t\treturn 'changeRootAttribute';\n\t\t}\n\t}\n\n\t/**\n\t * Creates and returns an operation that has the same parameters as this operation.\n\t *\n\t * @returns {module:engine/model/operation/rootattributeoperation~RootAttributeOperation} Clone of this operation.\n\t */\n\tclone() {\n\t\treturn new RootAttributeOperation( this.root, this.key, this.oldValue, this.newValue, this.baseVersion );\n\t}\n\n\t/**\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n\t *\n\t * @returns {module:engine/model/operation/rootattributeoperation~RootAttributeOperation}\n\t */\n\tgetReversed() {\n\t\treturn new RootAttributeOperation( this.root, this.key, this.newValue, this.oldValue, this.baseVersion + 1 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_validate() {\n\t\tif ( this.root != this.root.root || this.root.is( 'documentFragment' ) ) {\n\t\t\t/**\n\t\t\t * The element to change is not a root element.\n\t\t\t *\n\t\t\t * @error rootattribute-operation-not-a-root\n\t\t\t * @param {module:engine/model/rootelement~RootElement} root\n\t\t\t * @param {String} key\n\t\t\t * @param {*} value\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'rootattribute-operation-not-a-root: The element to change is not a root element.',\n\t\t\t\tthis,\n\t\t\t\t{ root: this.root, key: this.key }\n\t\t\t);\n\t\t}\n\n\t\tif ( this.oldValue !== null && this.root.getAttribute( this.key ) !== this.oldValue ) {\n\t\t\t/**\n\t\t\t * The attribute which should be removed does not exists for the given node.\n\t\t\t *\n\t\t\t * @error rootattribute-operation-wrong-old-value\n\t\t\t * @param {module:engine/model/rootelement~RootElement} root\n\t\t\t * @param {String} key\n\t\t\t * @param {*} value\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'rootattribute-operation-wrong-old-value: Changed node has different attribute value than operation\\'s ' +\n\t\t\t\t'old attribute value.',\n\t\t\t\tthis,\n\t\t\t\t{ root: this.root, key: this.key }\n\t\t\t);\n\t\t}\n\n\t\tif ( this.oldValue === null && this.newValue !== null && this.root.hasAttribute( this.key ) ) {\n\t\t\t/**\n\t\t\t * The attribute with given key already exists for the given node.\n\t\t\t *\n\t\t\t * @error rootattribute-operation-attribute-exists\n\t\t\t * @param {module:engine/model/rootelement~RootElement} root\n\t\t\t * @param {String} key\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'rootattribute-operation-attribute-exists: The attribute with given key already exists.',\n\t\t\t\tthis,\n\t\t\t\t{ root: this.root, key: this.key }\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\tif ( this.newValue !== null ) {\n\t\t\tthis.root._setAttribute( this.key, this.newValue );\n\t\t} else {\n\t\t\tthis.root._removeAttribute( this.key );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.root = this.root.toJSON();\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'RootAttributeOperation';\n\t}\n\n\t/**\n\t * Creates RootAttributeOperation object from deserilized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/rootattributeoperation~RootAttributeOperation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\tif ( !document.getRoot( json.root ) ) {\n\t\t\t/**\n\t\t\t * Cannot create RootAttributeOperation for document. Root with specified name does not exist.\n\t\t\t *\n\t\t\t * @error rootattributeoperation-fromjson-no-root\n\t\t\t * @param {String} rootName\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'rootattribute-operation-fromjson-no-root: Cannot create RootAttributeOperation. Root with specified name does not exist.',\n\t\t\t\tthis,\n\t\t\t\t{ rootName: json.root }\n\t\t\t);\n\t\t}\n\n\t\treturn new RootAttributeOperation( document.getRoot( json.root ), json.key, json.oldValue, json.newValue, json.baseVersion );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `RootAttributeOperation( ${ this.baseVersion } ): ` +\n\t// @if CK_DEBUG_ENGINE //\t\t`\"${ this.key }\": ${ JSON.stringify( this.oldValue ) }` +\n\t// @if CK_DEBUG_ENGINE //\t\t` -> ${ JSON.stringify( this.newValue ) }, ${ this.root.rootName }`;\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/mergeoperation\n */\n\nimport Operation from './operation';\nimport SplitOperation from './splitoperation';\nimport Position from '../position';\nimport Range from '../range';\nimport { _move } from './utils';\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Operation to merge two {@link module:engine/model/element~Element elements}.\n *\n * The merged element is the parent of {@link ~MergeOperation#sourcePosition} and it is merged into the parent of\n * {@link ~MergeOperation#targetPosition}. All nodes from the merged element are moved to {@link ~MergeOperation#targetPosition}.\n *\n * The merged element is moved to the graveyard at {@link ~MergeOperation#graveyardPosition}.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class MergeOperation extends Operation {\n\t/**\n\t * Creates a merge operation.\n\t *\n\t * @param {module:engine/model/position~Position} sourcePosition Position inside the merged element. All nodes from that\n\t * element after that position will be moved to {@link ~#targetPosition}.\n\t * @param {Number} howMany Summary offset size of nodes which will be moved from the merged element to the new parent.\n\t * @param {module:engine/model/position~Position} targetPosition Position which the nodes from the merged elements will be moved to.\n\t * @param {module:engine/model/position~Position} graveyardPosition Position in graveyard to which the merged element will be moved.\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\n\t */\n\tconstructor( sourcePosition, howMany, targetPosition, graveyardPosition, baseVersion ) {\n\t\tsuper( baseVersion );\n\n\t\t/**\n\t\t * Position inside the merged element. All nodes from that element after that position will be moved to {@link ~#targetPosition}.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/mergeoperation~MergeOperation#sourcePosition\n\t\t */\n\t\tthis.sourcePosition = sourcePosition.clone();\n\t\t// This is, and should always remain, the first position in its parent.\n\t\tthis.sourcePosition.stickiness = 'toPrevious';\n\n\t\t/**\n\t\t * Summary offset size of nodes which will be moved from the merged element to the new parent.\n\t\t *\n\t\t * @member {Number} module:engine/model/operation/mergeoperation~MergeOperation#howMany\n\t\t */\n\t\tthis.howMany = howMany;\n\n\t\t/**\n\t\t * Position which the nodes from the merged elements will be moved to.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/mergeoperation~MergeOperation#targetPosition\n\t\t */\n\t\tthis.targetPosition = targetPosition.clone();\n\t\t// Except of a rare scenario in `MergeOperation` x `MergeOperation` transformation,\n\t\t// this is, and should always remain, the last position in its parent.\n\t\tthis.targetPosition.stickiness = 'toNext';\n\n\t\t/**\n\t\t * Position in graveyard to which the merged element will be moved.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/mergeoperation~MergeOperation#graveyardPosition\n\t\t */\n\t\tthis.graveyardPosition = graveyardPosition.clone();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\treturn 'merge';\n\t}\n\n\t/**\n\t * Position before the merged element (which will be deleted).\n\t *\n\t * @readonly\n\t * @type {module:engine/model/position~Position}\n\t */\n\tget deletionPosition() {\n\t\treturn new Position( this.sourcePosition.root, this.sourcePosition.path.slice( 0, -1 ) );\n\t}\n\n\t/**\n\t * Artificial range that contains all the nodes from the merged element that will be moved to {@link ~MergeOperation#sourcePosition}.\n\t * The range starts at {@link ~MergeOperation#sourcePosition} and ends in the same parent, at `POSITIVE_INFINITY` offset.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/range~Range}\n\t */\n\tget movedRange() {\n\t\tconst end = this.sourcePosition.getShiftedBy( Number.POSITIVE_INFINITY );\n\n\t\treturn new Range( this.sourcePosition, end );\n\t}\n\n\t/**\n\t * Creates and returns an operation that has the same parameters as this operation.\n\t *\n\t * @returns {module:engine/model/operation/mergeoperation~MergeOperation} Clone of this operation.\n\t */\n\tclone() {\n\t\treturn new this.constructor( this.sourcePosition, this.howMany, this.targetPosition, this.graveyardPosition, this.baseVersion );\n\t}\n\n\t/**\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n\t *\n\t * @returns {module:engine/model/operation/splitoperation~SplitOperation}\n\t */\n\tgetReversed() {\n\t\t// Positions in this method are transformed by this merge operation because the split operation bases on\n\t\t// the context after this merge operation happened (because split operation reverses it).\n\t\t// So we need to acknowledge that the merge operation happened and those positions changed a little.\n\t\tconst targetPosition = this.targetPosition._getTransformedByMergeOperation( this );\n\n\t\tconst path = this.sourcePosition.path.slice( 0, -1 );\n\t\tconst insertionPosition = new Position( this.sourcePosition.root, path )._getTransformedByMergeOperation( this );\n\n\t\tconst split = new SplitOperation( targetPosition, this.howMany, this.graveyardPosition, this.baseVersion + 1 );\n\t\tsplit.insertionPosition = insertionPosition;\n\n\t\treturn split;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_validate() {\n\t\tconst sourceElement = this.sourcePosition.parent;\n\t\tconst targetElement = this.targetPosition.parent;\n\n\t\t// Validate whether merge operation has correct parameters.\n\t\tif ( !sourceElement.parent ) {\n\t\t\t/**\n\t\t\t * Merge source position is invalid. The element to be merged must have a parent node.\n\t\t\t *\n\t\t\t * @error merge-operation-source-position-invalid\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'merge-operation-source-position-invalid: Merge source position is invalid.', this );\n\t\t} else if ( !targetElement.parent ) {\n\t\t\t/**\n\t\t\t * Merge target position is invalid. The element to be merged must have a parent node.\n\t\t\t *\n\t\t\t * @error merge-operation-target-position-invalid\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'merge-operation-target-position-invalid: Merge target position is invalid.', this );\n\t\t} else if ( this.howMany != sourceElement.maxOffset ) {\n\t\t\t/**\n\t\t\t * Merge operation specifies wrong number of nodes to move.\n\t\t\t *\n\t\t\t * @error merge-operation-how-many-invalid\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'merge-operation-how-many-invalid: Merge operation specifies wrong number of nodes to move.', this );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\tconst mergedElement = this.sourcePosition.parent;\n\t\tconst sourceRange = Range._createIn( mergedElement );\n\n\t\t_move( sourceRange, this.targetPosition );\n\t\t_move( Range._createOn( mergedElement ), this.graveyardPosition );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.sourcePosition = json.sourcePosition.toJSON();\n\t\tjson.targetPosition = json.targetPosition.toJSON();\n\t\tjson.graveyardPosition = json.graveyardPosition.toJSON();\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'MergeOperation';\n\t}\n\n\t/**\n\t * Creates `MergeOperation` object from deserilized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/mergeoperation~MergeOperation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\tconst sourcePosition = Position.fromJSON( json.sourcePosition, document );\n\t\tconst targetPosition = Position.fromJSON( json.targetPosition, document );\n\t\tconst graveyardPosition = Position.fromJSON( json.graveyardPosition, document );\n\n\t\treturn new this( sourcePosition, json.howMany, targetPosition, graveyardPosition, json.baseVersion );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `MergeOperation( ${ this.baseVersion } ): ` +\n\t// @if CK_DEBUG_ENGINE //\t\t`${ this.sourcePosition } -> ${ this.targetPosition }` +\n\t// @if CK_DEBUG_ENGINE //\t\t` ( ${ this.howMany } ), ${ this.graveyardPosition }`;\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/splitoperation\n */\n\nimport Operation from './operation';\nimport MergeOperation from './mergeoperation';\nimport Position from '../position';\nimport Range from '../range';\nimport { _insert, _move } from './utils';\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Operation to split {@link module:engine/model/element~Element an element} at given\n * {@link module:engine/model/operation/splitoperation~SplitOperation#splitPosition split position} into two elements,\n * both containing a part of the element's original content.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class SplitOperation extends Operation {\n\t/**\n\t * Creates a split operation.\n\t *\n\t * @param {module:engine/model/position~Position} splitPosition Position at which an element should be split.\n\t * @param {Number} howMany Total offset size of elements that are in the split element after `position`.\n\t * @param {module:engine/model/position~Position|null} graveyardPosition Position in the graveyard root before the element which\n\t * should be used as a parent of the nodes after `position`. If it is not set, a copy of the the `position` parent will be used.\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\n\t */\n\tconstructor( splitPosition, howMany, graveyardPosition, baseVersion ) {\n\t\tsuper( baseVersion );\n\n\t\t/**\n\t\t * Position at which an element should be split.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/splitoperation~SplitOperation#splitPosition\n\t\t */\n\t\tthis.splitPosition = splitPosition.clone();\n\t\t// Keep position sticking to the next node. This way any new content added at the place where the element is split\n\t\t// will be left in the original element.\n\t\tthis.splitPosition.stickiness = 'toNext';\n\n\t\t/**\n\t\t * Total offset size of elements that are in the split element after `position`.\n\t\t *\n\t\t * @member {Number} module:engine/model/operation/splitoperation~SplitOperation#howMany\n\t\t */\n\t\tthis.howMany = howMany;\n\n\t\t/**\n\t\t * Position at which the clone of split element (or element from graveyard) will be inserted.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/splitoperation~SplitOperation#insertionPosition\n\t\t */\n\t\tthis.insertionPosition = SplitOperation.getInsertionPosition( splitPosition );\n\t\tthis.insertionPosition.stickiness = 'toNone';\n\n\t\t/**\n\t\t * Position in the graveyard root before the element which should be used as a parent of the nodes after `position`.\n\t\t * If it is not set, a copy of the the `position` parent will be used.\n\t\t *\n\t\t * The default behavior is to clone the split element. Element from graveyard is used during undo.\n\t\t *\n\t\t * @member {module:engine/model/position~Position|null} #graveyardPosition\n\t\t */\n\t\tthis.graveyardPosition = graveyardPosition ? graveyardPosition.clone() : null;\n\n\t\tif ( this.graveyardPosition ) {\n\t\t\tthis.graveyardPosition.stickiness = 'toNext';\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\treturn 'split';\n\t}\n\n\t/**\n\t * Position inside the new clone of a split element.\n\t *\n\t * This is a position where nodes that are after the split position will be moved to.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/position~Position}\n\t */\n\tget moveTargetPosition() {\n\t\tconst path = this.insertionPosition.path.slice();\n\t\tpath.push( 0 );\n\n\t\treturn new Position( this.insertionPosition.root, path );\n\t}\n\n\t/**\n\t * Artificial range that contains all the nodes from the split element that will be moved to the new element.\n\t * The range starts at {@link ~#splitPosition} and ends in the same parent, at `POSITIVE_INFINITY` offset.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/range~Range}\n\t */\n\tget movedRange() {\n\t\tconst end = this.splitPosition.getShiftedBy( Number.POSITIVE_INFINITY );\n\n\t\treturn new Range( this.splitPosition, end );\n\t}\n\n\t/**\n\t * Creates and returns an operation that has the same parameters as this operation.\n\t *\n\t * @returns {module:engine/model/operation/splitoperation~SplitOperation} Clone of this operation.\n\t */\n\tclone() {\n\t\tconst split = new this.constructor( this.splitPosition, this.howMany, this.graveyardPosition, this.baseVersion );\n\t\tsplit.insertionPosition = this.insertionPosition;\n\n\t\treturn split;\n\t}\n\n\t/**\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n\t *\n\t * @returns {module:engine/model/operation/mergeoperation~MergeOperation}\n\t */\n\tgetReversed() {\n\t\tconst graveyard = this.splitPosition.root.document.graveyard;\n\t\tconst graveyardPosition = new Position( graveyard, [ 0 ] );\n\n\t\treturn new MergeOperation( this.moveTargetPosition, this.howMany, this.splitPosition, graveyardPosition, this.baseVersion + 1 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_validate() {\n\t\tconst element = this.splitPosition.parent;\n\t\tconst offset = this.splitPosition.offset;\n\n\t\t// Validate whether split operation has correct parameters.\n\t\tif ( !element || element.maxOffset < offset ) {\n\t\t\t/**\n\t\t\t * Split position is invalid.\n\t\t\t *\n\t\t\t * @error split-operation-position-invalid\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'split-operation-position-invalid: Split position is invalid.', this );\n\t\t} else if ( !element.parent ) {\n\t\t\t/**\n\t\t\t * Cannot split root element.\n\t\t\t *\n\t\t\t * @error split-operation-split-in-root\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'split-operation-split-in-root: Cannot split root element.', this );\n\t\t} else if ( this.howMany != element.maxOffset - this.splitPosition.offset ) {\n\t\t\t/**\n\t\t\t * Split operation specifies wrong number of nodes to move.\n\t\t\t *\n\t\t\t * @error split-operation-how-many-invalid\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'split-operation-how-many-invalid: Split operation specifies wrong number of nodes to move.', this );\n\t\t} else if ( this.graveyardPosition && !this.graveyardPosition.nodeAfter ) {\n\t\t\t/**\n\t\t\t * Graveyard position invalid.\n\t\t\t *\n\t\t\t * @error split-operation-graveyard-position-invalid\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'split-operation-graveyard-position-invalid: Graveyard position invalid.', this );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\tconst splitElement = this.splitPosition.parent;\n\n\t\tif ( this.graveyardPosition ) {\n\t\t\t_move( Range._createFromPositionAndShift( this.graveyardPosition, 1 ), this.insertionPosition );\n\t\t} else {\n\t\t\tconst newElement = splitElement._clone();\n\n\t\t\t_insert( this.insertionPosition, newElement );\n\t\t}\n\n\t\tconst sourceRange = new Range(\n\t\t\tPosition._createAt( splitElement, this.splitPosition.offset ),\n\t\t\tPosition._createAt( splitElement, splitElement.maxOffset )\n\t\t);\n\n\t\t_move( sourceRange, this.moveTargetPosition );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.splitPosition = this.splitPosition.toJSON();\n\t\tjson.insertionPosition = this.insertionPosition.toJSON();\n\n\t\tif ( this.graveyardPosition ) {\n\t\t\tjson.graveyardPosition = this.graveyardPosition.toJSON();\n\t\t}\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'SplitOperation';\n\t}\n\n\t/**\n\t * Helper function that returns a default insertion position basing on given `splitPosition`. The default insertion\n\t * position is after the split element.\n\t *\n\t * @param {module:engine/model/position~Position} splitPosition\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tstatic getInsertionPosition( splitPosition ) {\n\t\tconst path = splitPosition.path.slice( 0, -1 );\n\t\tpath[ path.length - 1 ]++;\n\n\t\treturn new Position( splitPosition.root, path );\n\t}\n\n\t/**\n\t * Creates `SplitOperation` object from deserilized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/splitoperation~SplitOperation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\tconst splitPosition = Position.fromJSON( json.splitPosition, document );\n\t\tconst insertionPosition = Position.fromJSON( json.insertionPosition, document );\n\t\tconst graveyardPosition = json.graveyardPosition ? Position.fromJSON( json.graveyardPosition, document ) : null;\n\n\t\tconst split = new this( splitPosition, json.howMany, graveyardPosition, json.baseVersion );\n\t\tsplit.insertionPosition = insertionPosition;\n\n\t\treturn split;\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `SplitOperation( ${ this.baseVersion } ): ${ this.splitPosition } ` +\n\t// @if CK_DEBUG_ENGINE //\t\t`( ${ this.howMany } ) -> ${ this.insertionPosition }` +\n\t// @if CK_DEBUG_ENGINE //\t\t`${ this.graveyardPosition ? ' with ' + this.graveyardPosition : '' }`;\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/rootelement\n */\n\nimport Element from './element';\n\n/**\n * Type of {@link module:engine/model/element~Element} that is a root of a model tree.\n * @extends module:engine/model/element~Element\n */\nexport default class RootElement extends Element {\n\t/**\n\t * Creates root element.\n\t *\n\t * @param {module:engine/model/document~Document} doc Document that is an owner of this root.\n\t * @param {String} name Node name.\n\t * @param {String} [rootName='main'] Unique root name used to identify this root\n\t * element by {@link module:engine/model/document~Document}.\n\t */\n\tconstructor( doc, name, rootName = 'main' ) {\n\t\tsuper( name );\n\n\t\t/**\n\t\t * Document that is an owner of this root.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/document~Document}\n\t\t */\n\t\tthis._doc = doc;\n\n\t\t/**\n\t\t * Unique root name used to identify this root element by {@link module:engine/model/document~Document}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.rootName = rootName;\n\t}\n\n\t/**\n\t * {@link module:engine/model/document~Document Document} that owns this root element.\n\t *\n\t * In contrary, to {@link module:engine/model/node~Node node}, root element always have a `document`.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/document~Document|null}\n\t */\n\tget document() {\n\t\treturn this._doc;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\trootElement.is( 'rootElement' ); // -> true\n\t *\t\trootElement.is( 'element' ); // -> true\n\t *\t\trootElement.is( 'node' ); // -> true\n\t *\t\trootElement.is( 'model:rootElement' ); // -> true\n\t *\t\trootElement.is( 'model:element' ); // -> true\n\t *\t\trootElement.is( 'model:node' ); // -> true\n\t *\n\t *\t\trootElement.is( 'view:element' ); // -> false\n\t *\t\trootElement.is( 'documentFragment' ); // -> false\n\t *\n\t * Assuming that the object being checked is an element, you can also check its\n\t * {@link module:engine/model/element~Element#name name}:\n\t *\n\t *\t\trootElement.is( '$root' ); // -> true if this is a $root element\n\t *\t\trootElement.is( 'rootElement', '$root' ); // -> same as above\n\t *\t\ttext.is( '$root' ); -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type Type to check when `name` parameter is present.\n\t * Otherwise, it acts like the `name` parameter.\n\t * @param {String} [name] Element name.\n\t * @returns {Boolean}\n\t */\n\tis( type, name ) {\n\t\tconst cutType = type.replace( 'model:', '' );\n\t\tif ( !name ) {\n\t\t\treturn cutType == 'rootElement' || super.is( type );\n\t\t} else {\n\t\t\treturn ( cutType == 'rootElement' && name == this.name ) || super.is( type, name );\n\t\t}\n\t}\n\n\t/**\n\t * Converts `RootElement` instance to `String` containing it's name.\n\t *\n\t * @returns {String} `RootElement` instance converted to `String`.\n\t */\n\ttoJSON() {\n\t\treturn this.rootName;\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn this.rootName;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // log() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ModelRootElement: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/writer\n */\n\nimport AttributeOperation from './operation/attributeoperation';\nimport DetachOperation from './operation/detachoperation';\nimport InsertOperation from './operation/insertoperation';\nimport MarkerOperation from './operation/markeroperation';\nimport MoveOperation from './operation/moveoperation';\nimport RenameOperation from './operation/renameoperation';\nimport RootAttributeOperation from './operation/rootattributeoperation';\nimport SplitOperation from './operation/splitoperation';\nimport MergeOperation from './operation/mergeoperation';\n\nimport DocumentFragment from './documentfragment';\nimport Text from './text';\nimport Element from './element';\nimport RootElement from './rootelement';\nimport Position from './position';\nimport Range from './range.js';\nimport DocumentSelection from './documentselection';\n\nimport toMap from '@ckeditor/ckeditor5-utils/src/tomap';\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * The model can only be modified by using the writer. It should be used whenever you want to create a node, modify\n * child nodes, attributes or text, set the selection's position and its attributes.\n *\n * The instance of the writer is only available in the {@link module:engine/model/model~Model#change `change()`} or\n * {@link module:engine/model/model~Model#enqueueChange `enqueueChange()`}.\n *\n *\t\tmodel.change( writer => {\n *\t\t\twriter.insertText( 'foo', paragraph, 'end' );\n *\t\t} );\n *\n * Note that the writer should never be stored and used outside of the `change()` and\n * `enqueueChange()` blocks.\n *\n * Note that writer's methods do not check the {@link module:engine/model/schema~Schema}. It is possible\n * to create incorrect model structures by using the writer. Read more about in\n * {@glink framework/guides/deep-dive/schema#who-checks-the-schema \"Who checks the schema?\"}.\n *\n * @see module:engine/model/model~Model#change\n * @see module:engine/model/model~Model#enqueueChange\n */\nexport default class Writer {\n\t/**\n\t * Creates a writer instance.\n\t *\n\t * **Note:** It is not recommended to use it directly. Use {@link module:engine/model/model~Model#change `Model#change()`} or\n\t * {@link module:engine/model/model~Model#enqueueChange `Model#enqueueChange()`} instead.\n\t *\n\t * @protected\n\t * @param {module:engine/model/model~Model} model\n\t * @param {module:engine/model/batch~Batch} batch\n\t */\n\tconstructor( model, batch ) {\n\t\t/**\n\t\t * Instance of the model on which this writer operates.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:engine/model/model~Model}\n\t\t */\n\t\tthis.model = model;\n\n\t\t/**\n\t\t * The batch to which this writer will add changes.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:engine/model/batch~Batch}\n\t\t */\n\t\tthis.batch = batch;\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/model/text~Text text node}.\n\t *\n\t *\t\twriter.createText( 'foo' );\n\t *\t\twriter.createText( 'foo', { bold: true } );\n\t *\n\t * @param {String} data Text data.\n\t * @param {Object} [attributes] Text attributes.\n\t * @returns {module:engine/model/text~Text} Created text node.\n\t */\n\tcreateText( data, attributes ) {\n\t\treturn new Text( data, attributes );\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/model/element~Element element}.\n\t *\n\t *\t\twriter.createElement( 'paragraph' );\n\t *\t\twriter.createElement( 'paragraph', { alignment: 'center' } );\n\t *\n\t * @param {String} name Name of the element.\n\t * @param {Object} [attributes] Elements attributes.\n\t * @returns {module:engine/model/element~Element} Created element.\n\t */\n\tcreateElement( name, attributes ) {\n\t\treturn new Element( name, attributes );\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/model/documentfragment~DocumentFragment document fragment}.\n\t *\n\t * @returns {module:engine/model/documentfragment~DocumentFragment} Created document fragment.\n\t */\n\tcreateDocumentFragment() {\n\t\treturn new DocumentFragment();\n\t}\n\n\t/**\n\t * Inserts item on given position.\n\t *\n\t *\t\tconst paragraph = writer.createElement( 'paragraph' );\n\t *\t\twriter.insert( paragraph, position );\n\t *\n\t * Instead of using position you can use parent and offset:\n\t *\n\t *\t\tconst text = writer.createText( 'foo' );\n\t *\t\twriter.insert( text, paragraph, 5 );\n\t *\n\t * You can also use `end` instead of the offset to insert at the end:\n\t *\n\t *\t\tconst text = writer.createText( 'foo' );\n\t *\t\twriter.insert( text, paragraph, 'end' );\n\t *\n\t * Or insert before or after another element:\n\t *\n\t *\t\tconst paragraph = writer.createElement( 'paragraph' );\n\t *\t\twriter.insert( paragraph, anotherParagraph, 'after' );\n\t *\n\t * These parameters works the same way as {@link #createPositionAt `writer.createPositionAt()`}.\n\t *\n\t * Note that if the item already has parent it will be removed from the previous parent.\n\t *\n\t * Note that you cannot re-insert a node from a document to a different document or a document fragment. In this case,\n\t * `model-writer-insert-forbidden-move` is thrown.\n\t *\n\t * If you want to move {@link module:engine/model/range~Range range} instead of an\n\t * {@link module:engine/model/item~Item item} use {@link module:engine/model/writer~Writer#move `Writer#move()`}.\n\t *\n\t * **Note:** For a paste-like content insertion mechanism see\n\t * {@link module:engine/model/model~Model#insertContent `model.insertContent()`}.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/documentfragment~DocumentFragment} item Item or document\n\t * fragment to insert.\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * second parameter is a {@link module:engine/model/item~Item model item}.\n\t */\n\tinsert( item, itemOrPosition, offset = 0 ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tif ( item instanceof Text && item.data == '' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst position = Position._createAt( itemOrPosition, offset );\n\n\t\t// If item has a parent already.\n\t\tif ( item.parent ) {\n\t\t\t// We need to check if item is going to be inserted within the same document.\n\t\t\tif ( isSameTree( item.root, position.root ) ) {\n\t\t\t\t// If it's we just need to move it.\n\t\t\t\tthis.move( Range._createOn( item ), position );\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// If it isn't the same root.\n\t\t\telse {\n\t\t\t\tif ( item.root.document ) {\n\t\t\t\t\t/**\n\t\t\t\t\t * Cannot move a node from a document to a different tree.\n\t\t\t\t\t * It is forbidden to move a node that was already in a document outside of it.\n\t\t\t\t\t *\n\t\t\t\t\t * @error model-writer-insert-forbidden-move\n\t\t\t\t\t */\n\t\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t\t'model-writer-insert-forbidden-move: ' +\n\t\t\t\t\t\t'Cannot move a node from a document to a different tree. ' +\n\t\t\t\t\t\t'It is forbidden to move a node that was already in a document outside of it.',\n\t\t\t\t\t\tthis\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t// Move between two different document fragments or from document fragment to a document is possible.\n\t\t\t\t\t// In that case, remove the item from it's original parent.\n\t\t\t\t\tthis.remove( item );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst version = position.root.document ? position.root.document.version : null;\n\n\t\tconst insert = new InsertOperation( position, item, version );\n\n\t\tif ( item instanceof Text ) {\n\t\t\tinsert.shouldReceiveAttributes = true;\n\t\t}\n\n\t\tthis.batch.addOperation( insert );\n\t\tthis.model.applyOperation( insert );\n\n\t\t// When element is a DocumentFragment we need to move its markers to Document#markers.\n\t\tif ( item instanceof DocumentFragment ) {\n\t\t\tfor ( const [ markerName, markerRange ] of item.markers ) {\n\t\t\t\t// We need to migrate marker range from DocumentFragment to Document.\n\t\t\t\tconst rangeRootPosition = Position._createAt( markerRange.root, 0 );\n\t\t\t\tconst range = new Range(\n\t\t\t\t\tmarkerRange.start._getCombined( rangeRootPosition, position ),\n\t\t\t\t\tmarkerRange.end._getCombined( rangeRootPosition, position )\n\t\t\t\t);\n\n\t\t\t\tconst options = { range, usingOperation: true, affectsData: true };\n\n\t\t\t\tif ( this.model.markers.has( markerName ) ) {\n\t\t\t\t\tthis.updateMarker( markerName, options );\n\t\t\t\t} else {\n\t\t\t\t\tthis.addMarker( markerName, options );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates and inserts text on given position. You can optionally set text attributes:\n\t *\n\t *\t\twriter.insertText( 'foo', position );\n\t *\t\twriter.insertText( 'foo', { bold: true }, position );\n\t *\n\t * Instead of using position you can use parent and offset or define that text should be inserted at the end\n\t * or before or after other node:\n\t *\n\t *\t\t// Inserts 'foo' in paragraph, at offset 5:\n\t *\t\twriter.insertText( 'foo', paragraph, 5 );\n\t *\t\t// Inserts 'foo' at the end of a paragraph:\n\t *\t\twriter.insertText( 'foo', paragraph, 'end' );\n\t *\t\t// Inserts 'foo' after an image:\n\t *\t\twriter.insertText( 'foo', image, 'after' );\n\t *\n\t * These parameters work in the same way as {@link #createPositionAt `writer.createPositionAt()`}.\n\t *\n\t * @param {String} data Text data.\n\t * @param {Object} [attributes] Text attributes.\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * third parameter is a {@link module:engine/model/item~Item model item}.\n\t */\n\tinsertText( text, attributes, itemOrPosition, offset ) {\n\t\tif ( attributes instanceof DocumentFragment || attributes instanceof Element || attributes instanceof Position ) {\n\t\t\tthis.insert( this.createText( text ), attributes, itemOrPosition );\n\t\t} else {\n\t\t\tthis.insert( this.createText( text, attributes ), itemOrPosition, offset );\n\t\t}\n\t}\n\n\t/**\n\t * Creates and inserts element on given position. You can optionally set attributes:\n\t *\n\t *\t\twriter.insertElement( 'paragraph', position );\n\t *\t\twriter.insertElement( 'paragraph', { alignment: 'center' }, position );\n\t *\n\t * Instead of using position you can use parent and offset or define that text should be inserted at the end\n\t * or before or after other node:\n\t *\n\t *\t\t// Inserts paragraph in the root at offset 5:\n\t *\t\twriter.insertElement( 'paragraph', root, 5 );\n\t *\t\t// Inserts paragraph at the end of a blockquote:\n\t *\t\twriter.insertElement( 'paragraph', blockquote, 'end' );\n\t *\t\t// Inserts after an image:\n\t *\t\twriter.insertElement( 'paragraph', image, 'after' );\n\t *\n\t * These parameters works the same way as {@link #createPositionAt `writer.createPositionAt()`}.\n\t *\n\t * @param {String} name Name of the element.\n\t * @param {Object} [attributes] Elements attributes.\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * third parameter is a {@link module:engine/model/item~Item model item}.\n\t */\n\tinsertElement( name, attributes, itemOrPosition, offset ) {\n\t\tif ( attributes instanceof DocumentFragment || attributes instanceof Element || attributes instanceof Position ) {\n\t\t\tthis.insert( this.createElement( name ), attributes, itemOrPosition );\n\t\t} else {\n\t\t\tthis.insert( this.createElement( name, attributes ), itemOrPosition, offset );\n\t\t}\n\t}\n\n\t/**\n\t * Inserts item at the end of the given parent.\n\t *\n\t *\t\tconst paragraph = writer.createElement( 'paragraph' );\n\t *\t\twriter.append( paragraph, root );\n\t *\n\t * Note that if the item already has parent it will be removed from the previous parent.\n\t *\n\t * If you want to move {@link module:engine/model/range~Range range} instead of an\n\t * {@link module:engine/model/item~Item item} use {@link module:engine/model/writer~Writer#move `Writer#move()`}.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/documentfragment~DocumentFragment}\n\t * item Item or document fragment to insert.\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} parent\n\t */\n\tappend( item, parent ) {\n\t\tthis.insert( item, parent, 'end' );\n\t}\n\n\t/**\n\t * Creates text node and inserts it at the end of the parent. You can optionally set text attributes:\n\t *\n\t *\t\twriter.appendText( 'foo', paragraph );\n\t *\t\twriter.appendText( 'foo', { bold: true }, paragraph );\n\t *\n\t * @param {String} text Text data.\n\t * @param {Object} [attributes] Text attributes.\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} parent\n\t */\n\tappendText( text, attributes, parent ) {\n\t\tif ( attributes instanceof DocumentFragment || attributes instanceof Element ) {\n\t\t\tthis.insert( this.createText( text ), attributes, 'end' );\n\t\t} else {\n\t\t\tthis.insert( this.createText( text, attributes ), parent, 'end' );\n\t\t}\n\t}\n\n\t/**\n\t * Creates element and inserts it at the end of the parent. You can optionally set attributes:\n\t *\n\t *\t\twriter.appendElement( 'paragraph', root );\n\t *\t\twriter.appendElement( 'paragraph', { alignment: 'center' }, root );\n\t *\n\t * @param {String} name Name of the element.\n\t * @param {Object} [attributes] Elements attributes.\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} parent\n\t */\n\tappendElement( name, attributes, parent ) {\n\t\tif ( attributes instanceof DocumentFragment || attributes instanceof Element ) {\n\t\t\tthis.insert( this.createElement( name ), attributes, 'end' );\n\t\t} else {\n\t\t\tthis.insert( this.createElement( name, attributes ), parent, 'end' );\n\t\t}\n\t}\n\n\t/**\n\t * Sets value of the attribute with given key on a {@link module:engine/model/item~Item model item}\n\t * or on a {@link module:engine/model/range~Range range}.\n\t *\n\t * @param {String} key Attribute key.\n\t * @param {*} value Attribute new value.\n\t * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange\n\t * Model item or range on which the attribute will be set.\n\t */\n\tsetAttribute( key, value, itemOrRange ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tif ( itemOrRange instanceof Range ) {\n\t\t\tconst ranges = itemOrRange.getMinimalFlatRanges();\n\n\t\t\tfor ( const range of ranges ) {\n\t\t\t\tsetAttributeOnRange( this, key, value, range );\n\t\t\t}\n\t\t} else {\n\t\t\tsetAttributeOnItem( this, key, value, itemOrRange );\n\t\t}\n\t}\n\n\t/**\n\t * Sets values of attributes on a {@link module:engine/model/item~Item model item}\n\t * or on a {@link module:engine/model/range~Range range}.\n\t *\n\t *\t\twriter.setAttributes( {\n\t *\t\t\tbold: true,\n\t *\t\t\titalic: true\n\t *\t\t}, range );\n\t *\n\t * @param {Object} attributes Attributes keys and values.\n\t * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange\n\t * Model item or range on which the attributes will be set.\n\t */\n\tsetAttributes( attributes, itemOrRange ) {\n\t\tfor ( const [ key, val ] of toMap( attributes ) ) {\n\t\t\tthis.setAttribute( key, val, itemOrRange );\n\t\t}\n\t}\n\n\t/**\n\t * Removes an attribute with given key from a {@link module:engine/model/item~Item model item}\n\t * or from a {@link module:engine/model/range~Range range}.\n\t *\n\t * @param {String} key Attribute key.\n\t * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange\n\t * Model item or range from which the attribute will be removed.\n\t */\n\tremoveAttribute( key, itemOrRange ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tif ( itemOrRange instanceof Range ) {\n\t\t\tconst ranges = itemOrRange.getMinimalFlatRanges();\n\n\t\t\tfor ( const range of ranges ) {\n\t\t\t\tsetAttributeOnRange( this, key, null, range );\n\t\t\t}\n\t\t} else {\n\t\t\tsetAttributeOnItem( this, key, null, itemOrRange );\n\t\t}\n\t}\n\n\t/**\n\t * Removes all attributes from all elements in the range or from the given item.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange\n\t * Model item or range from which all attributes will be removed.\n\t */\n\tclearAttributes( itemOrRange ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tconst removeAttributesFromItem = item => {\n\t\t\tfor ( const attribute of item.getAttributeKeys() ) {\n\t\t\t\tthis.removeAttribute( attribute, item );\n\t\t\t}\n\t\t};\n\n\t\tif ( !( itemOrRange instanceof Range ) ) {\n\t\t\tremoveAttributesFromItem( itemOrRange );\n\t\t} else {\n\t\t\tfor ( const item of itemOrRange.getItems() ) {\n\t\t\t\tremoveAttributesFromItem( item );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Moves all items in the source range to the target position.\n\t *\n\t *\t\twriter.move( sourceRange, targetPosition );\n\t *\n\t * Instead of the target position you can use parent and offset or define that range should be moved to the end\n\t * or before or after chosen item:\n\t *\n\t *\t\t// Moves all items in the range to the paragraph at offset 5:\n\t *\t\twriter.move( sourceRange, paragraph, 5 );\n\t *\t\t// Moves all items in the range to the end of a blockquote:\n\t *\t\twriter.move( sourceRange, blockquote, 'end' );\n\t *\t\t// Moves all items in the range to a position after an image:\n\t *\t\twriter.move( sourceRange, image, 'after' );\n\t *\n\t * These parameters works the same way as {@link #createPositionAt `writer.createPositionAt()`}.\n\t *\n\t * Note that items can be moved only within the same tree. It means that you can move items within the same root\n\t * (element or document fragment) or between {@link module:engine/model/document~Document#roots documents roots},\n\t * but you can not move items from document fragment to the document or from one detached element to another. Use\n\t * {@link module:engine/model/writer~Writer#insert} in such cases.\n\t *\n\t * @param {module:engine/model/range~Range} range Source range.\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * second parameter is a {@link module:engine/model/item~Item model item}.\n\t */\n\tmove( range, itemOrPosition, offset ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tif ( !( range instanceof Range ) ) {\n\t\t\t/**\n\t\t\t * Invalid range to move.\n\t\t\t *\n\t\t\t * @error writer-move-invalid-range\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-move-invalid-range: Invalid range to move.', this );\n\t\t}\n\n\t\tif ( !range.isFlat ) {\n\t\t\t/**\n\t\t\t * Range to move is not flat.\n\t\t\t *\n\t\t\t * @error writer-move-range-not-flat\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-move-range-not-flat: Range to move is not flat.', this );\n\t\t}\n\n\t\tconst position = Position._createAt( itemOrPosition, offset );\n\n\t\t// Do not move anything if the move target is same as moved range start.\n\t\tif ( position.isEqual( range.start ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If part of the marker is removed, create additional marker operation for undo purposes.\n\t\tthis._addOperationForAffectedMarkers( 'move', range );\n\n\t\tif ( !isSameTree( range.root, position.root ) ) {\n\t\t\t/**\n\t\t\t * Range is going to be moved within not the same document. Please use\n\t\t\t * {@link module:engine/model/writer~Writer#insert insert} instead.\n\t\t\t *\n\t\t\t * @error writer-move-different-document\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-move-different-document: Range is going to be moved between different documents.', this );\n\t\t}\n\n\t\tconst version = range.root.document ? range.root.document.version : null;\n\t\tconst operation = new MoveOperation( range.start, range.end.offset - range.start.offset, position, version );\n\n\t\tthis.batch.addOperation( operation );\n\t\tthis.model.applyOperation( operation );\n\t}\n\n\t/**\n\t * Removes given model {@link module:engine/model/item~Item item} or {@link module:engine/model/range~Range range}.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange Model item or range to remove.\n\t */\n\tremove( itemOrRange ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tconst rangeToRemove = itemOrRange instanceof Range ? itemOrRange : Range._createOn( itemOrRange );\n\t\tconst ranges = rangeToRemove.getMinimalFlatRanges().reverse();\n\n\t\tfor ( const flat of ranges ) {\n\t\t\t// If part of the marker is removed, create additional marker operation for undo purposes.\n\t\t\tthis._addOperationForAffectedMarkers( 'move', flat );\n\n\t\t\tapplyRemoveOperation( flat.start, flat.end.offset - flat.start.offset, this.batch, this.model );\n\t\t}\n\t}\n\n\t/**\n\t * Merges two siblings at the given position.\n\t *\n\t * Node before and after the position have to be an element. Otherwise `writer-merge-no-element-before` or\n\t * `writer-merge-no-element-after` error will be thrown.\n\t *\n\t * @param {module:engine/model/position~Position} position Position between merged elements.\n\t */\n\tmerge( position ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tconst nodeBefore = position.nodeBefore;\n\t\tconst nodeAfter = position.nodeAfter;\n\n\t\t// If part of the marker is removed, create additional marker operation for undo purposes.\n\t\tthis._addOperationForAffectedMarkers( 'merge', position );\n\n\t\tif ( !( nodeBefore instanceof Element ) ) {\n\t\t\t/**\n\t\t\t * Node before merge position must be an element.\n\t\t\t *\n\t\t\t * @error writer-merge-no-element-before\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-merge-no-element-before: Node before merge position must be an element.', this );\n\t\t}\n\n\t\tif ( !( nodeAfter instanceof Element ) ) {\n\t\t\t/**\n\t\t\t * Node after merge position must be an element.\n\t\t\t *\n\t\t\t * @error writer-merge-no-element-after\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-merge-no-element-after: Node after merge position must be an element.', this );\n\t\t}\n\n\t\tif ( !position.root.document ) {\n\t\t\tthis._mergeDetached( position );\n\t\t} else {\n\t\t\tthis._merge( position );\n\t\t}\n\t}\n\n\t/**\n\t * Shortcut for {@link module:engine/model/model~Model#createPositionFromPath `Model#createPositionFromPath()`}.\n\t *\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} root Root of the position.\n\t * @param {Array.<Number>} path Position path. See {@link module:engine/model/position~Position#path}.\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness.\n\t * See {@link module:engine/model/position~PositionStickiness}.\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tcreatePositionFromPath( root, path, stickiness ) {\n\t\treturn this.model.createPositionFromPath( root, path, stickiness );\n\t}\n\n\t/**\n\t * Shortcut for {@link module:engine/model/model~Model#createPositionAt `Model#createPositionAt()`}.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/model/item~Item model item}.\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tcreatePositionAt( itemOrPosition, offset ) {\n\t\treturn this.model.createPositionAt( itemOrPosition, offset );\n\t}\n\n\t/**\n\t * Shortcut for {@link module:engine/model/model~Model#createPositionAfter `Model#createPositionAfter()`}.\n\t *\n\t * @param {module:engine/model/item~Item} item Item after which the position should be placed.\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tcreatePositionAfter( item ) {\n\t\treturn this.model.createPositionAfter( item );\n\t}\n\n\t/**\n\t * Shortcut for {@link module:engine/model/model~Model#createPositionBefore `Model#createPositionBefore()`}.\n\t *\n\t * @param {module:engine/model/item~Item} item Item after which the position should be placed.\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tcreatePositionBefore( item ) {\n\t\treturn this.model.createPositionBefore( item );\n\t}\n\n\t/**\n\t * Shortcut for {@link module:engine/model/model~Model#createRange `Model#createRange()`}.\n\t *\n\t * @param {module:engine/model/position~Position} start Start position.\n\t * @param {module:engine/model/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tcreateRange( start, end ) {\n\t\treturn this.model.createRange( start, end );\n\t}\n\n\t/**\n\t * Shortcut for {@link module:engine/model/model~Model#createRangeIn `Model#createRangeIn()`}.\n\t *\n\t * @param {module:engine/model/element~Element} element Element which is a parent for the range.\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tcreateRangeIn( element ) {\n\t\treturn this.model.createRangeIn( element );\n\t}\n\n\t/**\n\t * Shortcut for {@link module:engine/model/model~Model#createRangeOn `Model#createRangeOn()`}.\n\t *\n\t * @param {module:engine/model/element~Element} element Element which is a parent for the range.\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tcreateRangeOn( element ) {\n\t\treturn this.model.createRangeOn( element );\n\t}\n\n\t/**\n\t * Shortcut for {@link module:engine/model/model~Model#createSelection `Model#createSelection()`}.\n\t *\n\t * @param {module:engine/model/selection~Selectable} selectable\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @returns {module:engine/model/selection~Selection}\n\t */\n\tcreateSelection( selectable, placeOrOffset, options ) {\n\t\treturn this.model.createSelection( selectable, placeOrOffset, options );\n\t}\n\n\t/**\n\t * Performs merge action in a detached tree.\n\t *\n\t * @private\n\t * @param {module:engine/model/position~Position} position Position between merged elements.\n\t */\n\t_mergeDetached( position ) {\n\t\tconst nodeBefore = position.nodeBefore;\n\t\tconst nodeAfter = position.nodeAfter;\n\n\t\tthis.move( Range._createIn( nodeAfter ), Position._createAt( nodeBefore, 'end' ) );\n\t\tthis.remove( nodeAfter );\n\t}\n\n\t/**\n\t * Performs merge action in a non-detached tree.\n\t *\n\t * @private\n\t * @param {module:engine/model/position~Position} position Position between merged elements.\n\t */\n\t_merge( position ) {\n\t\tconst targetPosition = Position._createAt( position.nodeBefore, 'end' );\n\t\tconst sourcePosition = Position._createAt( position.nodeAfter, 0 );\n\n\t\tconst graveyard = position.root.document.graveyard;\n\t\tconst graveyardPosition = new Position( graveyard, [ 0 ] );\n\n\t\tconst version = position.root.document.version;\n\n\t\tconst merge = new MergeOperation( sourcePosition, position.nodeAfter.maxOffset, targetPosition, graveyardPosition, version );\n\n\t\tthis.batch.addOperation( merge );\n\t\tthis.model.applyOperation( merge );\n\t}\n\n\t/**\n\t * Renames the given element.\n\t *\n\t * @param {module:engine/model/element~Element} element The element to rename.\n\t * @param {String} newName New element name.\n\t */\n\trename( element, newName ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tif ( !( element instanceof Element ) ) {\n\t\t\t/**\n\t\t\t * Trying to rename an object which is not an instance of Element.\n\t\t\t *\n\t\t\t * @error writer-rename-not-element-instance\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'writer-rename-not-element-instance: Trying to rename an object which is not an instance of Element.',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\tconst version = element.root.document ? element.root.document.version : null;\n\t\tconst renameOperation = new RenameOperation( Position._createBefore( element ), element.name, newName, version );\n\n\t\tthis.batch.addOperation( renameOperation );\n\t\tthis.model.applyOperation( renameOperation );\n\t}\n\n\t/**\n\t * Splits elements starting from the given position and going to the top of the model tree as long as given\n\t * `limitElement` is reached. When `limitElement` is not defined then only the parent of the given position will be split.\n\t *\n\t * The element needs to have a parent. It cannot be a root element nor a document fragment.\n\t * The `writer-split-element-no-parent` error will be thrown if you try to split an element with no parent.\n\t *\n\t * @param {module:engine/model/position~Position} position Position of split.\n\t * @param {module:engine/model/node~Node} [limitElement] Stop splitting when this element will be reached.\n\t * @returns {Object} result Split result.\n\t * @returns {module:engine/model/position~Position} result.position Position between split elements.\n\t * @returns {module:engine/model/range~Range} result.range Range that stars from the end of the first split element and ends\n\t * at the beginning of the first copy element.\n\t */\n\tsplit( position, limitElement ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tlet splitElement = position.parent;\n\n\t\tif ( !splitElement.parent ) {\n\t\t\t/**\n\t\t\t * Element with no parent can not be split.\n\t\t\t *\n\t\t\t * @error writer-split-element-no-parent\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-split-element-no-parent: Element with no parent can not be split.', this );\n\t\t}\n\n\t\t// When limit element is not defined lets set splitElement parent as limit.\n\t\tif ( !limitElement ) {\n\t\t\tlimitElement = splitElement.parent;\n\t\t}\n\n\t\tif ( !position.parent.getAncestors( { includeSelf: true } ).includes( limitElement ) ) {\n\t\t\tthrow new CKEditorError( 'writer-split-invalid-limit-element: Limit element is not a position ancestor.', this );\n\t\t}\n\n\t\t// We need to cache elements that will be created as a result of the first split because\n\t\t// we need to create a range from the end of the first split element to the beginning of the\n\t\t// first copy element. This should be handled by LiveRange but it doesn't work on detached nodes.\n\t\tlet firstSplitElement, firstCopyElement;\n\n\t\tdo {\n\t\t\tconst version = splitElement.root.document ? splitElement.root.document.version : null;\n\t\t\tconst howMany = splitElement.maxOffset - position.offset;\n\t\t\tconst split = new SplitOperation( position, howMany, null, version );\n\n\t\t\tthis.batch.addOperation( split );\n\t\t\tthis.model.applyOperation( split );\n\n\t\t\t// Cache result of the first split.\n\t\t\tif ( !firstSplitElement && !firstCopyElement ) {\n\t\t\t\tfirstSplitElement = splitElement;\n\t\t\t\tfirstCopyElement = position.parent.nextSibling;\n\t\t\t}\n\n\t\t\tposition = this.createPositionAfter( position.parent );\n\t\t\tsplitElement = position.parent;\n\t\t} while ( splitElement !== limitElement );\n\n\t\treturn {\n\t\t\tposition,\n\t\t\trange: new Range( Position._createAt( firstSplitElement, 'end' ), Position._createAt( firstCopyElement, 0 ) )\n\t\t};\n\t}\n\n\t/**\n\t * Wraps the given range with the given element or with a new element (if a string was passed).\n\t *\n\t * **Note:** range to wrap should be a \"flat range\" (see {@link module:engine/model/range~Range#isFlat `Range#isFlat`}).\n\t * If not, an error will be thrown.\n\t *\n\t * @param {module:engine/model/range~Range} range Range to wrap.\n\t * @param {module:engine/model/element~Element|String} elementOrString Element or name of element to wrap the range with.\n\t */\n\twrap( range, elementOrString ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tif ( !range.isFlat ) {\n\t\t\t/**\n\t\t\t * Range to wrap is not flat.\n\t\t\t *\n\t\t\t * @error writer-wrap-range-not-flat\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-wrap-range-not-flat: Range to wrap is not flat.', this );\n\t\t}\n\n\t\tconst element = elementOrString instanceof Element ? elementOrString : new Element( elementOrString );\n\n\t\tif ( element.childCount > 0 ) {\n\t\t\t/**\n\t\t\t * Element to wrap with is not empty.\n\t\t\t *\n\t\t\t * @error writer-wrap-element-not-empty\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-wrap-element-not-empty: Element to wrap with is not empty.', this );\n\t\t}\n\n\t\tif ( element.parent !== null ) {\n\t\t\t/**\n\t\t\t * Element to wrap with is already attached to a tree model.\n\t\t\t *\n\t\t\t * @error writer-wrap-element-attached\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-wrap-element-attached: Element to wrap with is already attached to tree model.', this );\n\t\t}\n\n\t\tthis.insert( element, range.start );\n\n\t\t// Shift the range-to-wrap because we just inserted an element before that range.\n\t\tconst shiftedRange = new Range( range.start.getShiftedBy( 1 ), range.end.getShiftedBy( 1 ) );\n\n\t\tthis.move( shiftedRange, Position._createAt( element, 0 ) );\n\t}\n\n\t/**\n\t * Unwraps children of the given element – all its children are moved before it and then the element is removed.\n\t * Throws error if you try to unwrap an element which does not have a parent.\n\t *\n\t * @param {module:engine/model/element~Element} element Element to unwrap.\n\t */\n\tunwrap( element ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tif ( element.parent === null ) {\n\t\t\t/**\n\t\t\t * Trying to unwrap an element which has no parent.\n\t\t\t *\n\t\t\t * @error writer-unwrap-element-no-parent\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-unwrap-element-no-parent: Trying to unwrap an element which has no parent.', this );\n\t\t}\n\n\t\tthis.move( Range._createIn( element ), this.createPositionAfter( element ) );\n\t\tthis.remove( element );\n\t}\n\n\t/**\n\t * Adds a {@link module:engine/model/markercollection~Marker marker}. Marker is a named range, which tracks\n\t * changes in the document and updates its range automatically, when model tree changes.\n\t *\n\t * As the first parameter you can set marker name.\n\t *\n\t * The required `options.usingOperation` parameter lets you decide if the marker should be managed by operations or not. See\n\t * {@link module:engine/model/markercollection~Marker marker class description} to learn about the difference between\n\t * markers managed by operations and not-managed by operations.\n\t *\n\t * The `options.affectsData` parameter, which defaults to `false`, allows you to define if a marker affects the data. It should be\n\t * `true` when the marker change changes the data returned by the\n\t * {@link module:core/editor/utils/dataapimixin~DataApi#getData `editor.getData()`} method.\n\t * When set to `true` it fires the {@link module:engine/model/document~Document#event:change:data `change:data`} event.\n\t * When set to `false` it fires the {@link module:engine/model/document~Document#event:change `change`} event.\n\t *\n\t * Create marker directly base on marker's name:\n\t *\n\t *\t\taddMarker( markerName, { range, usingOperation: false } );\n\t *\n\t * Create marker using operation:\n\t *\n\t *\t\taddMarker( markerName, { range, usingOperation: true } );\n\t *\n\t * Create marker that affects the editor data:\n\t *\n\t *\t\taddMarker( markerName, { range, usingOperation: false, affectsData: true } );\n\t *\n\t * Note: For efficiency reasons, it's best to create and keep as little markers as possible.\n\t *\n\t * @see module:engine/model/markercollection~Marker\n\t * @param {String} name Name of a marker to create - must be unique.\n\t * @param {Object} options\n\t * @param {Boolean} options.usingOperation Flag indicating that the marker should be added by MarkerOperation.\n\t * See {@link module:engine/model/markercollection~Marker#managedUsingOperations}.\n\t * @param {module:engine/model/range~Range} options.range Marker range.\n\t * @param {Boolean} [options.affectsData=false] Flag indicating that the marker changes the editor data.\n\t * @returns {module:engine/model/markercollection~Marker} Marker that was set.\n\t */\n\taddMarker( name, options ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tif ( !options || typeof options.usingOperation != 'boolean' ) {\n\t\t\t/**\n\t\t\t * The `options.usingOperation` parameter is required when adding a new marker.\n\t\t\t *\n\t\t\t * @error writer-addMarker-no-usingOperation\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'writer-addMarker-no-usingOperation: The options.usingOperation parameter is required when adding a new marker.',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\tconst usingOperation = options.usingOperation;\n\t\tconst range = options.range;\n\t\tconst affectsData = options.affectsData === undefined ? false : options.affectsData;\n\n\t\tif ( this.model.markers.has( name ) ) {\n\t\t\t/**\n\t\t\t * Marker with provided name already exists.\n\t\t\t *\n\t\t\t * @error writer-addMarker-marker-exists\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-addMarker-marker-exists: Marker with provided name already exists.', this );\n\t\t}\n\n\t\tif ( !range ) {\n\t\t\t/**\n\t\t\t * Range parameter is required when adding a new marker.\n\t\t\t *\n\t\t\t * @error writer-addMarker-no-range\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'writer-addMarker-no-range: Range parameter is required when adding a new marker.',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\tif ( !usingOperation ) {\n\t\t\treturn this.model.markers._set( name, range, usingOperation, affectsData );\n\t\t}\n\n\t\tapplyMarkerOperation( this, name, null, range, affectsData );\n\n\t\treturn this.model.markers.get( name );\n\t}\n\n\t/**\n\t * Adds, updates or refreshes a {@link module:engine/model/markercollection~Marker marker}. Marker is a named range, which tracks\n\t * changes in the document and updates its range automatically, when model tree changes. Still, it is possible to change the\n\t * marker's range directly using this method.\n\t *\n\t * As the first parameter you can set marker name or instance. If none of them is provided, new marker, with a unique\n\t * name is created and returned.\n\t *\n\t * As the second parameter you can set the new marker data or leave this parameter as empty which will just refresh\n\t * the marker by triggering downcast conversion for it. Refreshing the marker is useful when you want to change\n\t * the marker {@link module:engine/view/element~Element view element} without changing any marker data.\n\t *\n\t * \t\tlet isCommentActive = false;\n\t *\n\t * \t\tmodel.conversion.markerToHighlight( {\n\t * \t\t\tmodel: 'comment',\n\t *\t\t\tview: data => {\n\t *\t\t\t\tconst classes = [ 'comment-marker' ];\n\t *\n\t *\t\t\t\tif ( isCommentActive ) {\n\t *\t\t\t\t\tclasses.push( 'comment-marker--active' );\n\t *\t\t\t\t}\n\t *\n\t *\t\t\t\treturn { classes };\n\t *\t\t\t}\n\t * \t\t} );\n\t *\n\t * \t\t// Change the property that indicates if marker is displayed as active or not.\n\t * \t\tisCommentActive = true;\n\t *\n\t * \t\t// And refresh the marker to convert it with additional class.\n\t * \t\tmodel.change( writer => writer.updateMarker( 'comment' ) );\n\t *\n\t * The `options.usingOperation` parameter lets you change if the marker should be managed by operations or not. See\n\t * {@link module:engine/model/markercollection~Marker marker class description} to learn about the difference between\n\t * markers managed by operations and not-managed by operations. It is possible to change this option for an existing marker.\n\t *\n\t * The `options.affectsData` parameter, which defaults to `false`, allows you to define if a marker affects the data. It should be\n\t * `true` when the marker change changes the data returned by\n\t * the {@link module:core/editor/utils/dataapimixin~DataApi#getData `editor.getData()`} method.\n\t * When set to `true` it fires the {@link module:engine/model/document~Document#event:change:data `change:data`} event.\n\t * When set to `false` it fires the {@link module:engine/model/document~Document#event:change `change`} event.\n\t *\n\t * Update marker directly base on marker's name:\n\t *\n\t *\t\tupdateMarker( markerName, { range } );\n\t *\n\t * Update marker using operation:\n\t *\n\t *\t\tupdateMarker( marker, { range, usingOperation: true } );\n\t *\t\tupdateMarker( markerName, { range, usingOperation: true } );\n\t *\n\t * Change marker's option (start using operations to manage it):\n\t *\n\t *\t\tupdateMarker( marker, { usingOperation: true } );\n\t *\n\t * Change marker's option (inform the engine, that the marker does not affect the data anymore):\n\t *\n\t *\t\tupdateMarker( markerName, { affectsData: false } );\n\t *\n\t * @see module:engine/model/markercollection~Marker\n\t * @param {String|module:engine/model/markercollection~Marker} markerOrName Name of a marker to update, or a marker instance.\n\t * @param {Object} [options] If options object is not defined then marker will be refreshed by triggering\n\t * downcast conversion for this marker with the same data.\n\t * @param {module:engine/model/range~Range} [options.range] Marker range to update.\n\t * @param {Boolean} [options.usingOperation] Flag indicated whether the marker should be added by MarkerOperation.\n\t * See {@link module:engine/model/markercollection~Marker#managedUsingOperations}.\n\t * @param {Boolean} [options.affectsData] Flag indicating that the marker changes the editor data.\n\t */\n\tupdateMarker( markerOrName, options ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tconst markerName = typeof markerOrName == 'string' ? markerOrName : markerOrName.name;\n\t\tconst currentMarker = this.model.markers.get( markerName );\n\n\t\tif ( !currentMarker ) {\n\t\t\t/**\n\t\t\t * Marker with provided name does not exists.\n\t\t\t *\n\t\t\t * @error writer-updateMarker-marker-not-exists\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-updateMarker-marker-not-exists: Marker with provided name does not exists.', this );\n\t\t}\n\n\t\tif ( !options ) {\n\t\t\tthis.model.markers._refresh( currentMarker );\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst hasUsingOperationDefined = typeof options.usingOperation == 'boolean';\n\t\tconst affectsDataDefined = typeof options.affectsData == 'boolean';\n\n\t\t// Use previously defined marker's affectsData if the property is not provided.\n\t\tconst affectsData = affectsDataDefined ? options.affectsData : currentMarker.affectsData;\n\n\t\tif ( !hasUsingOperationDefined && !options.range && !affectsDataDefined ) {\n\t\t\t/**\n\t\t\t * One of the options is required - provide range, usingOperations or affectsData.\n\t\t\t *\n\t\t\t * @error writer-updateMarker-wrong-options\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'writer-updateMarker-wrong-options: One of the options is required - provide range, usingOperations or affectsData.',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\tconst currentRange = currentMarker.getRange();\n\t\tconst updatedRange = options.range ? options.range : currentRange;\n\n\t\tif ( hasUsingOperationDefined && options.usingOperation !== currentMarker.managedUsingOperations ) {\n\t\t\t// The marker type is changed so it's necessary to create proper operations.\n\t\t\tif ( options.usingOperation ) {\n\t\t\t\t// If marker changes to a managed one treat this as synchronizing existing marker.\n\t\t\t\t// Create `MarkerOperation` with `oldRange` set to `null`, so reverse operation will remove the marker.\n\t\t\t\tapplyMarkerOperation( this, markerName, null, updatedRange, affectsData );\n\t\t\t} else {\n\t\t\t\t// If marker changes to a marker that do not use operations then we need to create additional operation\n\t\t\t\t// that removes that marker first.\n\t\t\t\tapplyMarkerOperation( this, markerName, currentRange, null, affectsData );\n\n\t\t\t\t// Although not managed the marker itself should stay in model and its range should be preserver or changed to passed range.\n\t\t\t\tthis.model.markers._set( markerName, updatedRange, undefined, affectsData );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Marker's type doesn't change so update it accordingly.\n\t\tif ( currentMarker.managedUsingOperations ) {\n\t\t\tapplyMarkerOperation( this, markerName, currentRange, updatedRange, affectsData );\n\t\t} else {\n\t\t\tthis.model.markers._set( markerName, updatedRange, undefined, affectsData );\n\t\t}\n\t}\n\n\t/**\n\t * Removes given {@link module:engine/model/markercollection~Marker marker} or marker with given name.\n\t * The marker is removed accordingly to how it has been created, so if the marker was created using operation,\n\t * it will be destroyed using operation.\n\t *\n\t * @param {module:engine/model/markercollection~Marker|String} markerOrName Marker or marker name to remove.\n\t */\n\tremoveMarker( markerOrName ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tconst name = typeof markerOrName == 'string' ? markerOrName : markerOrName.name;\n\n\t\tif ( !this.model.markers.has( name ) ) {\n\t\t\t/**\n\t\t\t * Trying to remove marker which does not exist.\n\t\t\t *\n\t\t\t * @error writer-removeMarker-no-marker\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'writer-removeMarker-no-marker: Trying to remove marker which does not exist.', this );\n\t\t}\n\n\t\tconst marker = this.model.markers.get( name );\n\n\t\tif ( !marker.managedUsingOperations ) {\n\t\t\tthis.model.markers._remove( name );\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst oldRange = marker.getRange();\n\n\t\tapplyMarkerOperation( this, name, oldRange, null, marker.affectsData );\n\t}\n\n\t/**\n\t * Sets the document's selection (ranges and direction) to the specified location based on the given\n\t * {@link module:engine/model/selection~Selectable selectable} or creates an empty selection if no arguments were passed.\n\t *\n\t *\t\t// Sets selection to the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\twriter.setSelection( range );\n\t *\n\t *\t\t// Sets selection to given ranges.\n\t *\t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n\t *\t\twriter.setSelection( range );\n\t *\n\t *\t\t// Sets selection to other selection.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\twriter.setSelection( otherSelection );\n\t *\n\t *\t\t// Sets selection to the given document selection.\n\t *\t\tconst documentSelection = model.document.selection;\n\t *\t\twriter.setSelection( documentSelection );\n\t *\n\t *\t\t// Sets collapsed selection at the given position.\n\t *\t\tconst position = writer.createPosition( root, path );\n\t *\t\twriter.setSelection( position );\n\t *\n\t *\t\t// Sets collapsed selection at the position of the given node and an offset.\n\t *\t\twriter.setSelection( paragraph, offset );\n\t *\n\t * Creates a range inside an {@link module:engine/model/element~Element element} which starts before the first child of\n \t * that element and ends after the last child of that element.\n\t *\n\t *\t\twriter.setSelection( paragraph, 'in' );\n\t *\n\t * Creates a range on an {@link module:engine/model/item~Item item} which starts before the item and ends just after the item.\n\t *\n\t *\t\twriter.setSelection( paragraph, 'on' );\n\t *\n\t *\t\t// Removes all selection's ranges.\n\t *\t\twriter.setSelection( null );\n\t *\n\t * `Writer#setSelection()` allow passing additional options (`backward`) as the last argument.\n\t *\n\t *\t\t// Sets selection as backward.\n\t *\t\twriter.setSelection( range, { backward: true } );\n\t *\n\t * Throws `writer-incorrect-use` error when the writer is used outside the `change()` block.\n\t *\n\t * @param {module:engine/model/selection~Selectable} selectable\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t */\n\tsetSelection( selectable, placeOrOffset, options ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tthis.model.document.selection._setTo( selectable, placeOrOffset, options );\n\t}\n\n\t/**\n\t * Moves {@link module:engine/model/documentselection~DocumentSelection#focus} to the specified location.\n\t *\n\t * The location can be specified in the same form as\n\t * {@link #createPositionAt `writer.createPositionAt()`} parameters.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset=0] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/model/item~Item model item}.\n\t */\n\tsetSelectionFocus( itemOrPosition, offset ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tthis.model.document.selection._setFocus( itemOrPosition, offset );\n\t}\n\n\t/**\n\t * Sets attribute(s) on the selection. If attribute with the same key already is set, it's value is overwritten.\n\t *\n\t * Using key and value pair:\n\t *\n\t * \twriter.setSelectionAttribute( 'italic', true );\n\t *\n\t * Using key-value object:\n\t *\n\t * \twriter.setSelectionAttribute( { italic: true, bold: false } );\n\t *\n\t * Using iterable object:\n\t *\n\t * \twriter.setSelectionAttribute( new Map( [ [ 'italic', true ] ] ) );\n\t *\n\t * @param {String|Object|Iterable.<*>} keyOrObjectOrIterable Key of the attribute to set\n\t * or object / iterable of key => value attribute pairs.\n\t * @param {*} [value] Attribute value.\n\t */\n\tsetSelectionAttribute( keyOrObjectOrIterable, value ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tif ( typeof keyOrObjectOrIterable === 'string' ) {\n\t\t\tthis._setSelectionAttribute( keyOrObjectOrIterable, value );\n\t\t} else {\n\t\t\tfor ( const [ key, value ] of toMap( keyOrObjectOrIterable ) ) {\n\t\t\t\tthis._setSelectionAttribute( key, value );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Removes attribute(s) with given key(s) from the selection.\n\t *\n\t * Remove one attribute:\n\t *\n\t *\t\twriter.removeSelectionAttribute( 'italic' );\n\t *\n\t * Remove multiple attributes:\n\t *\n\t *\t\twriter.removeSelectionAttribute( [ 'italic', 'bold' ] );\n\t *\n\t * @param {String|Iterable.<String>} keyOrIterableOfKeys Key of the attribute to remove or an iterable of attribute keys to remove.\n\t */\n\tremoveSelectionAttribute( keyOrIterableOfKeys ) {\n\t\tthis._assertWriterUsedCorrectly();\n\n\t\tif ( typeof keyOrIterableOfKeys === 'string' ) {\n\t\t\tthis._removeSelectionAttribute( keyOrIterableOfKeys );\n\t\t} else {\n\t\t\tfor ( const key of keyOrIterableOfKeys ) {\n\t\t\t\tthis._removeSelectionAttribute( key );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Temporarily changes the {@link module:engine/model/documentselection~DocumentSelection#isGravityOverridden gravity}\n\t * of the selection from left to right.\n\t *\n\t * The gravity defines from which direction the selection inherits its attributes. If it's the default left gravity,\n\t * then the selection (after being moved by the user) inherits attributes from its left-hand side.\n\t * This method allows to temporarily override this behavior by forcing the gravity to the right.\n\t *\n\t * For the following model fragment:\n\t *\n\t *\t\t<$text bold=\"true\" linkHref=\"url\">bar[]</$text><$text bold=\"true\">biz</$text>\n\t *\n\t * * Default gravity: selection will have the `bold` and `linkHref` attributes.\n\t * * Overridden gravity: selection will have `bold` attribute.\n\t *\n\t * **Note**: It returns an unique identifier which is required to restore the gravity. It guarantees the symmetry\n\t * of the process.\n\t *\n\t * @returns {String} The unique id which allows restoring the gravity.\n\t */\n\toverrideSelectionGravity() {\n\t\treturn this.model.document.selection._overrideGravity();\n\t}\n\n\t/**\n\t * Restores {@link ~Writer#overrideSelectionGravity} gravity to default.\n\t *\n\t * Restoring the gravity is only possible using the unique identifier returned by\n\t * {@link ~Writer#overrideSelectionGravity}. Note that the gravity remains overridden as long as won't be restored\n\t * the same number of times it was overridden.\n\t *\n\t * @param {String} uid The unique id returned by {@link ~Writer#overrideSelectionGravity}.\n\t */\n\trestoreSelectionGravity( uid ) {\n\t\tthis.model.document.selection._restoreGravity( uid );\n\t}\n\n\t/**\n\t * @private\n\t * @param {String} key Key of the attribute to remove.\n\t * @param {*} value Attribute value.\n\t */\n\t_setSelectionAttribute( key, value ) {\n\t\tconst selection = this.model.document.selection;\n\n\t\t// Store attribute in parent element if the selection is collapsed in an empty node.\n\t\tif ( selection.isCollapsed && selection.anchor.parent.isEmpty ) {\n\t\t\tconst storeKey = DocumentSelection._getStoreAttributeKey( key );\n\n\t\t\tthis.setAttribute( storeKey, value, selection.anchor.parent );\n\t\t}\n\n\t\tselection._setAttribute( key, value );\n\t}\n\n\t/**\n\t * @private\n\t * @param {String} key Key of the attribute to remove.\n\t */\n\t_removeSelectionAttribute( key ) {\n\t\tconst selection = this.model.document.selection;\n\n\t\t// Remove stored attribute from parent element if the selection is collapsed in an empty node.\n\t\tif ( selection.isCollapsed && selection.anchor.parent.isEmpty ) {\n\t\t\tconst storeKey = DocumentSelection._getStoreAttributeKey( key );\n\n\t\t\tthis.removeAttribute( storeKey, selection.anchor.parent );\n\t\t}\n\n\t\tselection._removeAttribute( key );\n\t}\n\n\t/**\n\t * Throws `writer-detached-writer-tries-to-modify-model` error when the writer is used outside of the `change()` block.\n\t *\n\t * @private\n\t */\n\t_assertWriterUsedCorrectly() {\n\t\t/**\n\t\t * Trying to use a writer outside a {@link module:engine/model/model~Model#change `change()`} or\n\t\t * {@link module:engine/model/model~Model#enqueueChange `enqueueChange()`} blocks.\n\t\t *\n\t\t * The writer can only be used inside these blocks which ensures that the model\n\t\t * can only be changed during such \"sessions\".\n\t\t *\n\t\t * @error writer-incorrect-use\n\t\t */\n\t\tif ( this.model._currentWriter !== this ) {\n\t\t\tthrow new CKEditorError( 'writer-incorrect-use: Trying to use a writer outside the change() block.', this );\n\t\t}\n\t}\n\n\t/**\n\t * For given action `type` and `positionOrRange` where the action happens, this function finds all affected markers\n\t * and applies a marker operation with the new marker range equal to the current range. Thanks to this, the marker range\n\t * can be later correctly processed during undo.\n\t *\n\t * @private\n\t * @param {'move'|'merge'} type Writer action type.\n\t * @param {module:engine/model/position~Position|module:engine/model/range~Range} positionOrRange Position or range\n\t * where the writer action happens.\n\t */\n\t_addOperationForAffectedMarkers( type, positionOrRange ) {\n\t\tfor ( const marker of this.model.markers ) {\n\t\t\tif ( !marker.managedUsingOperations ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst markerRange = marker.getRange();\n\t\t\tlet isAffected = false;\n\n\t\t\tif ( type == 'move' ) {\n\t\t\t\tisAffected =\n\t\t\t\t\tpositionOrRange.containsPosition( markerRange.start ) ||\n\t\t\t\t\tpositionOrRange.start.isEqual( markerRange.start ) ||\n\t\t\t\t\tpositionOrRange.containsPosition( markerRange.end ) ||\n\t\t\t\t\tpositionOrRange.end.isEqual( markerRange.end );\n\t\t\t} else {\n\t\t\t\t// if type == 'merge'.\n\t\t\t\tconst elementBefore = positionOrRange.nodeBefore;\n\t\t\t\tconst elementAfter = positionOrRange.nodeAfter;\n\n\t\t\t\t//               Start:  <p>Foo[</p><p>Bar]</p>\n\t\t\t\t//         After merge:  <p>Foo[Bar]</p>\n\t\t\t\t// After undoing split:  <p>Foo</p><p>[Bar]</p>     <-- incorrect, needs remembering for undo.\n\t\t\t\t//\n\t\t\t\tconst affectedInLeftElement = markerRange.start.parent == elementBefore && markerRange.start.isAtEnd;\n\n\t\t\t\t//               Start:  <p>[Foo</p><p>]Bar</p>\n\t\t\t\t//         After merge:  <p>[Foo]Bar</p>\n\t\t\t\t// After undoing split:  <p>[Foo]</p><p>Bar</p>     <-- incorrect, needs remembering for undo.\n\t\t\t\t//\n\t\t\t\tconst affectedInRightElement = markerRange.end.parent == elementAfter && markerRange.end.offset == 0;\n\n\t\t\t\t//               Start:  <p>[Foo</p>]<p>Bar</p>\n\t\t\t\t//         After merge:  <p>[Foo]Bar</p>\n\t\t\t\t// After undoing split:  <p>[Foo]</p><p>Bar</p>     <-- incorrect, needs remembering for undo.\n\t\t\t\t//\n\t\t\t\tconst affectedAfterLeftElement = markerRange.end.nodeAfter == elementAfter;\n\n\t\t\t\t//               Start:  <p>Foo</p>[<p>Bar]</p>\n\t\t\t\t//         After merge:  <p>Foo[Bar]</p>\n\t\t\t\t// After undoing split:  <p>Foo</p><p>[Bar]</p>     <-- incorrect, needs remembering for undo.\n\t\t\t\t//\n\t\t\t\tconst affectedBeforeRightElement = markerRange.start.nodeAfter == elementAfter;\n\n\t\t\t\tisAffected = affectedInLeftElement || affectedInRightElement || affectedAfterLeftElement || affectedBeforeRightElement;\n\t\t\t}\n\n\t\t\tif ( isAffected ) {\n\t\t\t\tthis.updateMarker( marker.name, { range: markerRange } );\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Sets given attribute to each node in given range. When attribute value is null then attribute will be removed.\n//\n// Because attribute operation needs to have the same attribute value on the whole range, this function splits\n// the range into smaller parts.\n//\n// Given `range` must be flat.\n//\n// @private\n// @param {module:engine/model/writer~Writer} writer\n// @param {String} key Attribute key.\n// @param {*} value Attribute new value.\n// @param {module:engine/model/range~Range} range Model range on which the attribute will be set.\nfunction setAttributeOnRange( writer, key, value, range ) {\n\tconst model = writer.model;\n\tconst doc = model.document;\n\n\t// Position of the last split, the beginning of the new range.\n\tlet lastSplitPosition = range.start;\n\n\t// Currently position in the scanning range. Because we need value after the position, it is not a current\n\t// position of the iterator but the previous one (we need to iterate one more time to get the value after).\n\tlet position;\n\n\t// Value before the currently position.\n\tlet valueBefore;\n\n\t// Value after the currently position.\n\tlet valueAfter;\n\n\tfor ( const val of range.getWalker( { shallow: true } ) ) {\n\t\tvalueAfter = val.item.getAttribute( key );\n\n\t\t// At the first run of the iterator the position in undefined. We also do not have a valueBefore, but\n\t\t// because valueAfter may be null, valueBefore may be equal valueAfter ( undefined == null ).\n\t\tif ( position && valueBefore != valueAfter ) {\n\t\t\t// if valueBefore == value there is nothing to change, so we add operation only if these values are different.\n\t\t\tif ( valueBefore != value ) {\n\t\t\t\taddOperation();\n\t\t\t}\n\n\t\t\tlastSplitPosition = position;\n\t\t}\n\n\t\tposition = val.nextPosition;\n\t\tvalueBefore = valueAfter;\n\t}\n\n\t// Because position in the loop is not the iterator position (see let position comment), the last position in\n\t// the while loop will be last but one position in the range. We need to check the last position manually.\n\tif ( position instanceof Position && position != lastSplitPosition && valueBefore != value ) {\n\t\taddOperation();\n\t}\n\n\tfunction addOperation() {\n\t\tconst range = new Range( lastSplitPosition, position );\n\t\tconst version = range.root.document ? doc.version : null;\n\t\tconst operation = new AttributeOperation( range, key, valueBefore, value, version );\n\n\t\twriter.batch.addOperation( operation );\n\t\tmodel.applyOperation( operation );\n\t}\n}\n\n// Sets given attribute to the given node. When attribute value is null then attribute will be removed.\n//\n// @private\n// @param {module:engine/model/writer~Writer} writer\n// @param {String} key Attribute key.\n// @param {*} value Attribute new value.\n// @param {module:engine/model/item~Item} item Model item on which the attribute will be set.\nfunction setAttributeOnItem( writer, key, value, item ) {\n\tconst model = writer.model;\n\tconst doc = model.document;\n\tconst previousValue = item.getAttribute( key );\n\tlet range, operation;\n\n\tif ( previousValue != value ) {\n\t\tconst isRootChanged = item.root === item;\n\n\t\tif ( isRootChanged ) {\n\t\t\t// If we change attributes of root element, we have to use `RootAttributeOperation`.\n\t\t\tconst version = item.document ? doc.version : null;\n\n\t\t\toperation = new RootAttributeOperation( item, key, previousValue, value, version );\n\t\t} else {\n\t\t\trange = new Range( Position._createBefore( item ), writer.createPositionAfter( item ) );\n\n\t\t\tconst version = range.root.document ? doc.version : null;\n\n\t\t\toperation = new AttributeOperation( range, key, previousValue, value, version );\n\t\t}\n\n\t\twriter.batch.addOperation( operation );\n\t\tmodel.applyOperation( operation );\n\t}\n}\n\n// Creates and applies marker operation to {@link module:engine/model/operation/operation~Operation operation}.\n//\n// @private\n// @param {module:engine/model/writer~Writer} writer\n// @param {String} name Marker name.\n// @param {module:engine/model/range~Range} oldRange Marker range before the change.\n// @param {module:engine/model/range~Range} newRange Marker range after the change.\n// @param {Boolean} affectsData\nfunction applyMarkerOperation( writer, name, oldRange, newRange, affectsData ) {\n\tconst model = writer.model;\n\tconst doc = model.document;\n\n\tconst operation = new MarkerOperation( name, oldRange, newRange, model.markers, affectsData, doc.version );\n\n\twriter.batch.addOperation( operation );\n\tmodel.applyOperation( operation );\n}\n\n// Creates `MoveOperation` or `DetachOperation` that removes `howMany` nodes starting from `position`.\n// The operation will be applied on given model instance and added to given operation instance.\n//\n// @private\n// @param {module:engine/model/position~Position} position Position from which nodes are removed.\n// @param {Number} howMany Number of nodes to remove.\n// @param {Batch} batch Batch to which the operation will be added.\n// @param {module:engine/model/model~Model} model Model instance on which operation will be applied.\nfunction applyRemoveOperation( position, howMany, batch, model ) {\n\tlet operation;\n\n\tif ( position.root.document ) {\n\t\tconst doc = model.document;\n\t\tconst graveyardPosition = new Position( doc.graveyard, [ 0 ] );\n\n\t\toperation = new MoveOperation( position, howMany, graveyardPosition, doc.version );\n\t} else {\n\t\toperation = new DetachOperation( position, howMany );\n\t}\n\n\tbatch.addOperation( operation );\n\tmodel.applyOperation( operation );\n}\n\n// Returns `true` if both root elements are the same element or both are documents root elements.\n//\n// Elements in the same tree can be moved (for instance you can move element form one documents root to another, or\n// within the same document fragment), but when element supposed to be moved from document fragment to the document, or\n// to another document it should be removed and inserted to avoid problems with OT. This is because features like undo or\n// collaboration may track changes on the document but ignore changes on detached fragments and should not get\n// unexpected `move` operation.\nfunction isSameTree( rootA, rootB ) {\n\t// If it is the same root this is the same tree.\n\tif ( rootA === rootB ) {\n\t\treturn true;\n\t}\n\n\t// If both roots are documents root it is operation within the document what we still treat as the same tree.\n\tif ( rootA instanceof RootElement && rootB instanceof RootElement ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/differ\n */\n\nimport Position from './position';\nimport Range from './range';\n\n/**\n * Calculates the difference between two model states.\n *\n * Receives operations that are to be applied on the model document. Marks parts of the model document tree which\n * are changed and saves the state of these elements before the change. Then, it compares saved elements with the\n * changed elements, after all changes are applied on the model document. Calculates the diff between saved\n * elements and new ones and returns a change set.\n */\nexport default class Differ {\n\t/**\n\t * Creates a `Differ` instance.\n\t *\n\t * @param {module:engine/model/markercollection~MarkerCollection} markerCollection Model's marker collection.\n\t */\n\tconstructor( markerCollection ) {\n\t\t/**\n\t\t * Reference to the model's marker collection.\n\t\t *\n\t\t * @private\n\t\t * @type {module:engine/model/markercollection~MarkerCollection}\n\t\t */\n\t\tthis._markerCollection = markerCollection;\n\n\t\t/**\n\t\t * A map that stores changes that happened in a given element.\n\t\t *\n\t\t * The keys of the map are references to the model elements.\n\t\t * The values of the map are arrays with changes that were done on this element.\n\t\t *\n\t\t * @private\n\t\t * @type {Map}\n\t\t */\n\t\tthis._changesInElement = new Map();\n\n\t\t/**\n\t\t * A map that stores \"element's children snapshots\". A snapshot is representing children of a given element before\n\t\t * the first change was applied on that element. Snapshot items are objects with two properties: `name`,\n\t\t * containing the element name (or `'$text'` for a text node) and `attributes` which is a map of the node's attributes.\n\t\t *\n\t\t * @private\n\t\t * @type {Map}\n\t\t */\n\t\tthis._elementSnapshots = new Map();\n\n\t\t/**\n\t\t * A map that stores all changed markers.\n\t\t *\n\t\t * The keys of the map are marker names.\n\t\t * The values of the map are objects with the `oldRange` and `newRange` properties. They store the marker range\n\t\t * state before and after the change.\n\t\t *\n\t\t * @private\n\t\t * @type {Map}\n\t\t */\n\t\tthis._changedMarkers = new Map();\n\n\t\t/**\n\t\t * Stores the number of changes that were processed. Used to order the changes chronologically. It is important\n\t\t * when changes are sorted.\n\t\t *\n\t\t * @private\n\t\t * @type {Number}\n\t\t */\n\t\tthis._changeCount = 0;\n\n\t\t/**\n\t\t * For efficiency purposes, `Differ` stores the change set returned by the differ after {@link #getChanges} call.\n\t\t * Cache is reset each time a new operation is buffered. If the cache has not been reset, {@link #getChanges} will\n\t\t * return the cached value instead of calculating it again.\n\t\t *\n\t\t * This property stores those changes that did not take place in graveyard root.\n\t\t *\n\t\t * @private\n\t\t * @type {Array.<Object>|null}\n\t\t */\n\t\tthis._cachedChanges = null;\n\n\t\t/**\n\t\t * For efficiency purposes, `Differ` stores the change set returned by the differ after the {@link #getChanges} call.\n\t\t * The cache is reset each time a new operation is buffered. If the cache has not been reset, {@link #getChanges} will\n\t\t * return the cached value instead of calculating it again.\n\t\t *\n\t\t * This property stores all changes evaluated by `Differ`, including those that took place in the graveyard.\n\t\t *\n\t\t * @private\n\t\t * @type {Array.<Object>|null}\n\t\t */\n\t\tthis._cachedChangesWithGraveyard = null;\n\t}\n\n\t/**\n\t * Informs whether there are any changes buffered in `Differ`.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isEmpty() {\n\t\treturn this._changesInElement.size == 0 && this._changedMarkers.size == 0;\n\t}\n\n\t/**\n\t * Marks given `item` in differ to be \"refreshed\". It means that the item will be marked as removed and inserted in the differ changes\n\t * set, so it will be effectively re-converted when differ changes will be handled by a dispatcher.\n\t *\n\t * @param {module:engine/model/item~Item} item Item to refresh.\n\t */\n\trefreshItem( item ) {\n\t\tif ( this._isInInsertedElement( item.parent ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._markRemove( item.parent, item.startOffset, item.offsetSize );\n\t\tthis._markInsert( item.parent, item.startOffset, item.offsetSize );\n\n\t\tconst range = Range._createOn( item );\n\n\t\tfor ( const marker of this._markerCollection.getMarkersIntersectingRange( range ) ) {\n\t\t\tconst markerRange = marker.getRange();\n\n\t\t\tthis.bufferMarkerChange( marker.name, markerRange, markerRange, marker.affectsData );\n\t\t}\n\n\t\t// Clear cache after each buffered operation as it is no longer valid.\n\t\tthis._cachedChanges = null;\n\t}\n\n\t/**\n\t * Buffers the given operation. An operation has to be buffered before it is executed.\n\t *\n\t * Operation type is checked and it is checked which nodes it will affect. These nodes are then stored in `Differ`\n\t * in the state before the operation is executed.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} operation An operation to buffer.\n\t */\n\tbufferOperation( operation ) {\n\t\t// Below we take an operation, check its type, then use its parameters in marking (private) methods.\n\t\t// The general rule is to not mark elements inside inserted element. All inserted elements are re-rendered.\n\t\t// Marking changes in them would cause a \"double\" changing then.\n\t\t//\n\t\tswitch ( operation.type ) {\n\t\t\tcase 'insert': {\n\t\t\t\tif ( this._isInInsertedElement( operation.position.parent ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._markInsert( operation.position.parent, operation.position.offset, operation.nodes.maxOffset );\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'addAttribute':\n\t\t\tcase 'removeAttribute':\n\t\t\tcase 'changeAttribute': {\n\t\t\t\tfor ( const item of operation.range.getItems( { shallow: true } ) ) {\n\t\t\t\t\tif ( this._isInInsertedElement( item.parent ) ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._markAttribute( item );\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'remove':\n\t\t\tcase 'move':\n\t\t\tcase 'reinsert': {\n\t\t\t\t// When range is moved to the same position then not mark it as a change.\n\t\t\t\t// See: https://github.com/ckeditor/ckeditor5-engine/issues/1664.\n\t\t\t\tif (\n\t\t\t\t\toperation.sourcePosition.isEqual( operation.targetPosition ) ||\n\t\t\t\t\toperation.sourcePosition.getShiftedBy( operation.howMany ).isEqual( operation.targetPosition )\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst sourceParentInserted = this._isInInsertedElement( operation.sourcePosition.parent );\n\t\t\t\tconst targetParentInserted = this._isInInsertedElement( operation.targetPosition.parent );\n\n\t\t\t\tif ( !sourceParentInserted ) {\n\t\t\t\t\tthis._markRemove( operation.sourcePosition.parent, operation.sourcePosition.offset, operation.howMany );\n\t\t\t\t}\n\n\t\t\t\tif ( !targetParentInserted ) {\n\t\t\t\t\tthis._markInsert( operation.targetPosition.parent, operation.getMovedRangeStart().offset, operation.howMany );\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'rename': {\n\t\t\t\tif ( this._isInInsertedElement( operation.position.parent ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._markRemove( operation.position.parent, operation.position.offset, 1 );\n\t\t\t\tthis._markInsert( operation.position.parent, operation.position.offset, 1 );\n\n\t\t\t\tconst range = Range._createFromPositionAndShift( operation.position, 1 );\n\n\t\t\t\tfor ( const marker of this._markerCollection.getMarkersIntersectingRange( range ) ) {\n\t\t\t\t\tconst markerRange = marker.getRange();\n\n\t\t\t\t\tthis.bufferMarkerChange( marker.name, markerRange, markerRange, marker.affectsData );\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'split': {\n\t\t\t\tconst splitElement = operation.splitPosition.parent;\n\n\t\t\t\t// Mark that children of the split element were removed.\n\t\t\t\tif ( !this._isInInsertedElement( splitElement ) ) {\n\t\t\t\t\tthis._markRemove( splitElement, operation.splitPosition.offset, operation.howMany );\n\t\t\t\t}\n\n\t\t\t\t// Mark that the new element (split copy) was inserted.\n\t\t\t\tif ( !this._isInInsertedElement( operation.insertionPosition.parent ) ) {\n\t\t\t\t\tthis._markInsert( operation.insertionPosition.parent, operation.insertionPosition.offset, 1 );\n\t\t\t\t}\n\n\t\t\t\t// If the split took the element from the graveyard, mark that the element from the graveyard was removed.\n\t\t\t\tif ( operation.graveyardPosition ) {\n\t\t\t\t\tthis._markRemove( operation.graveyardPosition.parent, operation.graveyardPosition.offset, 1 );\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'merge': {\n\t\t\t\t// Mark that the merged element was removed.\n\t\t\t\tconst mergedElement = operation.sourcePosition.parent;\n\n\t\t\t\tif ( !this._isInInsertedElement( mergedElement.parent ) ) {\n\t\t\t\t\tthis._markRemove( mergedElement.parent, mergedElement.startOffset, 1 );\n\t\t\t\t}\n\n\t\t\t\t// Mark that the merged element was inserted into graveyard.\n\t\t\t\tconst graveyardParent = operation.graveyardPosition.parent;\n\n\t\t\t\tthis._markInsert( graveyardParent, operation.graveyardPosition.offset, 1 );\n\n\t\t\t\t// Mark that children of merged element were inserted at new parent.\n\t\t\t\tconst mergedIntoElement = operation.targetPosition.parent;\n\n\t\t\t\tif ( !this._isInInsertedElement( mergedIntoElement ) ) {\n\t\t\t\t\tthis._markInsert( mergedIntoElement, operation.targetPosition.offset, mergedElement.maxOffset );\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Clear cache after each buffered operation as it is no longer valid.\n\t\tthis._cachedChanges = null;\n\t}\n\n\t/**\n\t * Buffers a marker change.\n\t *\n\t * @param {String} markerName The name of the marker that changed.\n\t * @param {module:engine/model/range~Range|null} oldRange Marker range before the change or `null` if the marker has just\n\t * been created.\n\t * @param {module:engine/model/range~Range|null} newRange Marker range after the change or `null` if the marker was removed.\n\t * @param {Boolean} affectsData Flag indicating whether marker affects the editor data.\n\t */\n\tbufferMarkerChange( markerName, oldRange, newRange, affectsData ) {\n\t\tconst buffered = this._changedMarkers.get( markerName );\n\n\t\tif ( !buffered ) {\n\t\t\tthis._changedMarkers.set( markerName, {\n\t\t\t\toldRange,\n\t\t\t\tnewRange,\n\t\t\t\taffectsData\n\t\t\t} );\n\t\t} else {\n\t\t\tbuffered.newRange = newRange;\n\t\t\tbuffered.affectsData = affectsData;\n\n\t\t\tif ( buffered.oldRange == null && buffered.newRange == null ) {\n\t\t\t\t// The marker is going to be removed (`newRange == null`) but it did not exist before the first buffered change\n\t\t\t\t// (`buffered.oldRange == null`). In this case, do not keep the marker in buffer at all.\n\t\t\t\tthis._changedMarkers.delete( markerName );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns all markers that should be removed as a result of buffered changes.\n\t *\n\t * @returns {Array.<Object>} Markers to remove. Each array item is an object containing the `name` and `range` properties.\n\t */\n\tgetMarkersToRemove() {\n\t\tconst result = [];\n\n\t\tfor ( const [ name, change ] of this._changedMarkers ) {\n\t\t\tif ( change.oldRange != null ) {\n\t\t\t\tresult.push( { name, range: change.oldRange } );\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Returns all markers which should be added as a result of buffered changes.\n\t *\n\t * @returns {Array.<Object>} Markers to add. Each array item is an object containing the `name` and `range` properties.\n\t */\n\tgetMarkersToAdd() {\n\t\tconst result = [];\n\n\t\tfor ( const [ name, change ] of this._changedMarkers ) {\n\t\t\tif ( change.newRange != null ) {\n\t\t\t\tresult.push( { name, range: change.newRange } );\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Returns all markers which changed.\n\t *\n\t * @returns {Array.<Object>}\n\t */\n\tgetChangedMarkers() {\n\t\treturn Array.from( this._changedMarkers ).map( item => (\n\t\t\t{\n\t\t\t\tname: item[ 0 ],\n\t\t\t\tdata: {\n\t\t\t\t\toldRange: item[ 1 ].oldRange,\n\t\t\t\t\tnewRange: item[ 1 ].newRange\n\t\t\t\t}\n\t\t\t}\n\t\t) );\n\t}\n\n\t/**\n\t * Checks whether some of the buffered changes affect the editor data.\n\t *\n\t * Types of changes which affect the editor data:\n\t *\n\t * * model structure changes,\n\t * * attribute changes,\n\t * * changes of markers which were defined as `affectingData`.\n\t *\n\t * @returns {Boolean}\n\t */\n\thasDataChanges() {\n\t\tfor ( const [ , change ] of this._changedMarkers ) {\n\t\t\tif ( change.affectsData ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// If markers do not affect the data, check whether there are some changes in elements.\n\t\treturn this._changesInElement.size > 0;\n\t}\n\n\t/**\n\t * Calculates the diff between the old model tree state (the state before the first buffered operations since the last {@link #reset}\n\t * call) and the new model tree state (actual one). It should be called after all buffered operations are executed.\n\t *\n\t * The diff set is returned as an array of diff items, each describing a change done on the model. The items are sorted by\n\t * the position on which the change happened. If a position {@link module:engine/model/position~Position#isBefore is before}\n\t * another one, it will be on an earlier index in the diff set.\n\t *\n\t * Because calculating the diff is a costly operation, the result is cached. If no new operation was buffered since the\n\t * previous {@link #getChanges} call, the next call will return the cached value.\n\t *\n\t * @param {Object} options Additional options.\n\t * @param {Boolean} [options.includeChangesInGraveyard=false] If set to `true`, also changes that happened\n\t * in the graveyard root will be returned. By default, changes in the graveyard root are not returned.\n\t * @returns {Array.<Object>} Diff between the old and the new model tree state.\n\t */\n\tgetChanges( options = { includeChangesInGraveyard: false } ) {\n\t\t// If there are cached changes, just return them instead of calculating changes again.\n\t\tif ( this._cachedChanges ) {\n\t\t\tif ( options.includeChangesInGraveyard ) {\n\t\t\t\treturn this._cachedChangesWithGraveyard.slice();\n\t\t\t} else {\n\t\t\t\treturn this._cachedChanges.slice();\n\t\t\t}\n\t\t}\n\n\t\t// Will contain returned results.\n\t\tconst diffSet = [];\n\n\t\t// Check all changed elements.\n\t\tfor ( const element of this._changesInElement.keys() ) {\n\t\t\t// Get changes for this element and sort them.\n\t\t\tconst changes = this._changesInElement.get( element ).sort( ( a, b ) => {\n\t\t\t\tif ( a.offset === b.offset ) {\n\t\t\t\t\tif ( a.type != b.type ) {\n\t\t\t\t\t\t// If there are multiple changes at the same position, \"remove\" change should be first.\n\t\t\t\t\t\t// If the order is different, for example, we would first add some nodes and then removed them\n\t\t\t\t\t\t// (instead of the nodes that we should remove).\n\t\t\t\t\t\treturn a.type == 'remove' ? -1 : 1;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn a.offset < b.offset ? -1 : 1;\n\t\t\t} );\n\n\t\t\t// Get children of this element before any change was applied on it.\n\t\t\tconst snapshotChildren = this._elementSnapshots.get( element );\n\t\t\t// Get snapshot of current element's children.\n\t\t\tconst elementChildren = _getChildrenSnapshot( element.getChildren() );\n\n\t\t\t// Generate actions basing on changes done on element.\n\t\t\tconst actions = _generateActionsFromChanges( snapshotChildren.length, changes );\n\n\t\t\tlet i = 0; // Iterator in `elementChildren` array -- iterates through current children of element.\n\t\t\tlet j = 0; // Iterator in `snapshotChildren` array -- iterates through old children of element.\n\n\t\t\t// Process every action.\n\t\t\tfor ( const action of actions ) {\n\t\t\t\tif ( action === 'i' ) {\n\t\t\t\t\t// Generate diff item for this element and insert it into the diff set.\n\t\t\t\t\tdiffSet.push( this._getInsertDiff( element, i, elementChildren[ i ].name ) );\n\n\t\t\t\t\ti++;\n\t\t\t\t} else if ( action === 'r' ) {\n\t\t\t\t\t// Generate diff item for this element and insert it into the diff set.\n\t\t\t\t\tdiffSet.push( this._getRemoveDiff( element, i, snapshotChildren[ j ].name ) );\n\n\t\t\t\t\tj++;\n\t\t\t\t} else if ( action === 'a' ) {\n\t\t\t\t\t// Take attributes from saved and current children.\n\t\t\t\t\tconst elementAttributes = elementChildren[ i ].attributes;\n\t\t\t\t\tconst snapshotAttributes = snapshotChildren[ j ].attributes;\n\t\t\t\t\tlet range;\n\n\t\t\t\t\tif ( elementChildren[ i ].name == '$text' ) {\n\t\t\t\t\t\trange = new Range( Position._createAt( element, i ), Position._createAt( element, i + 1 ) );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst index = element.offsetToIndex( i );\n\t\t\t\t\t\trange = new Range( Position._createAt( element, i ), Position._createAt( element.getChild( index ), 0 ) );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Generate diff items for this change (there might be multiple attributes changed and\n\t\t\t\t\t// there is a single diff for each of them) and insert them into the diff set.\n\t\t\t\t\tdiffSet.push( ...this._getAttributesDiff( range, snapshotAttributes, elementAttributes ) );\n\n\t\t\t\t\ti++;\n\t\t\t\t\tj++;\n\t\t\t\t} else {\n\t\t\t\t\t// `action` is 'equal'. Child not changed.\n\t\t\t\t\ti++;\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Then, sort the changes by the position (change at position before other changes is first).\n\t\tdiffSet.sort( ( a, b ) => {\n\t\t\t// If the change is in different root, we don't care much, but we'd like to have all changes in given\n\t\t\t// root \"together\" in the array. So let's just sort them by the root name. It does not matter which root\n\t\t\t// will be processed first.\n\t\t\tif ( a.position.root != b.position.root ) {\n\t\t\t\treturn a.position.root.rootName < b.position.root.rootName ? -1 : 1;\n\t\t\t}\n\n\t\t\t// If change happens at the same position...\n\t\t\tif ( a.position.isEqual( b.position ) ) {\n\t\t\t\t// Keep chronological order of operations.\n\t\t\t\treturn a.changeCount - b.changeCount;\n\t\t\t}\n\n\t\t\t// If positions differ, position \"on the left\" should be earlier in the result.\n\t\t\treturn a.position.isBefore( b.position ) ? -1 : 1;\n\t\t} );\n\n\t\t// Glue together multiple changes (mostly on text nodes).\n\t\tfor ( let i = 1; i < diffSet.length; i++ ) {\n\t\t\tconst prevDiff = diffSet[ i - 1 ];\n\t\t\tconst thisDiff = diffSet[ i ];\n\n\t\t\t// Glue remove changes if they happen on text on same position.\n\t\t\tconst isConsecutiveTextRemove =\n\t\t\t\tprevDiff.type == 'remove' && thisDiff.type == 'remove' &&\n\t\t\t\tprevDiff.name == '$text' && thisDiff.name == '$text' &&\n\t\t\t\tprevDiff.position.isEqual( thisDiff.position );\n\n\t\t\t// Glue insert changes if they happen on text on consecutive fragments.\n\t\t\tconst isConsecutiveTextAdd =\n\t\t\t\tprevDiff.type == 'insert' && thisDiff.type == 'insert' &&\n\t\t\t\tprevDiff.name == '$text' && thisDiff.name == '$text' &&\n\t\t\t\tprevDiff.position.parent == thisDiff.position.parent &&\n\t\t\t\tprevDiff.position.offset + prevDiff.length == thisDiff.position.offset;\n\n\t\t\t// Glue attribute changes if they happen on consecutive fragments and have same key, old value and new value.\n\t\t\tconst isConsecutiveAttributeChange =\n\t\t\t\tprevDiff.type == 'attribute' && thisDiff.type == 'attribute' &&\n\t\t\t\tprevDiff.position.parent == thisDiff.position.parent &&\n\t\t\t\tprevDiff.range.isFlat && thisDiff.range.isFlat &&\n\t\t\t\tprevDiff.position.offset + prevDiff.length == thisDiff.position.offset &&\n\t\t\t\tprevDiff.attributeKey == thisDiff.attributeKey &&\n\t\t\t\tprevDiff.attributeOldValue == thisDiff.attributeOldValue &&\n\t\t\t\tprevDiff.attributeNewValue == thisDiff.attributeNewValue;\n\n\t\t\tif ( isConsecutiveTextRemove || isConsecutiveTextAdd || isConsecutiveAttributeChange ) {\n\t\t\t\tdiffSet[ i - 1 ].length++;\n\n\t\t\t\tif ( isConsecutiveAttributeChange ) {\n\t\t\t\t\tdiffSet[ i - 1 ].range.end = diffSet[ i - 1 ].range.end.getShiftedBy( 1 );\n\t\t\t\t}\n\n\t\t\t\tdiffSet.splice( i, 1 );\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\n\t\t// Remove `changeCount` property from diff items. It is used only for sorting and is internal thing.\n\t\tfor ( const item of diffSet ) {\n\t\t\tdelete item.changeCount;\n\n\t\t\tif ( item.type == 'attribute' ) {\n\t\t\t\tdelete item.position;\n\t\t\t\tdelete item.length;\n\t\t\t}\n\t\t}\n\n\t\tthis._changeCount = 0;\n\n\t\t// Cache changes.\n\t\tthis._cachedChangesWithGraveyard = diffSet.slice();\n\t\tthis._cachedChanges = diffSet.slice().filter( _changesInGraveyardFilter );\n\n\t\tif ( options.includeChangesInGraveyard ) {\n\t\t\treturn this._cachedChangesWithGraveyard;\n\t\t} else {\n\t\t\treturn this._cachedChanges;\n\t\t}\n\t}\n\n\t/**\n\t * Resets `Differ`. Removes all buffered changes.\n\t */\n\treset() {\n\t\tthis._changesInElement.clear();\n\t\tthis._elementSnapshots.clear();\n\t\tthis._changedMarkers.clear();\n\t\tthis._cachedChanges = null;\n\t}\n\n\t/**\n\t * Saves and handles an insert change.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} parent\n\t * @param {Number} offset\n\t * @param {Number} howMany\n\t */\n\t_markInsert( parent, offset, howMany ) {\n\t\tconst changeItem = { type: 'insert', offset, howMany, count: this._changeCount++ };\n\n\t\tthis._markChange( parent, changeItem );\n\t}\n\n\t/**\n\t * Saves and handles a remove change.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} parent\n\t * @param {Number} offset\n\t * @param {Number} howMany\n\t */\n\t_markRemove( parent, offset, howMany ) {\n\t\tconst changeItem = { type: 'remove', offset, howMany, count: this._changeCount++ };\n\n\t\tthis._markChange( parent, changeItem );\n\n\t\tthis._removeAllNestedChanges( parent, offset, howMany );\n\t}\n\n\t/**\n\t * Saves and handles an attribute change.\n\t *\n\t * @private\n\t * @param {module:engine/model/item~Item} item\n\t */\n\t_markAttribute( item ) {\n\t\tconst changeItem = { type: 'attribute', offset: item.startOffset, howMany: item.offsetSize, count: this._changeCount++ };\n\n\t\tthis._markChange( item.parent, changeItem );\n\t}\n\n\t/**\n\t * Saves and handles a model change.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} parent\n\t * @param {Object} changeItem\n\t */\n\t_markChange( parent, changeItem ) {\n\t\t// First, make a snapshot of this parent's children (it will be made only if it was not made before).\n\t\tthis._makeSnapshot( parent );\n\n\t\t// Then, get all changes that already were done on the element (empty array if this is the first change).\n\t\tconst changes = this._getChangesForElement( parent );\n\n\t\t// Then, look through all the changes, and transform them or the new change.\n\t\tthis._handleChange( changeItem, changes );\n\n\t\t// Add the new change.\n\t\tchanges.push( changeItem );\n\n\t\t// Remove incorrect changes. During transformation some change might be, for example, included in another.\n\t\t// In that case, the change will have `howMany` property set to `0` or less. We need to remove those changes.\n\t\tfor ( let i = 0; i < changes.length; i++ ) {\n\t\t\tif ( changes[ i ].howMany < 1 ) {\n\t\t\t\tchanges.splice( i, 1 );\n\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets an array of changes that have already been saved for a given element.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} element\n\t * @returns {Array.<Object>}\n\t */\n\t_getChangesForElement( element ) {\n\t\tlet changes;\n\n\t\tif ( this._changesInElement.has( element ) ) {\n\t\t\tchanges = this._changesInElement.get( element );\n\t\t} else {\n\t\t\tchanges = [];\n\n\t\t\tthis._changesInElement.set( element, changes );\n\t\t}\n\n\t\treturn changes;\n\t}\n\n\t/**\n\t * Saves a children snapshot for a given element.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} element\n\t */\n\t_makeSnapshot( element ) {\n\t\tif ( !this._elementSnapshots.has( element ) ) {\n\t\t\tthis._elementSnapshots.set( element, _getChildrenSnapshot( element.getChildren() ) );\n\t\t}\n\t}\n\n\t/**\n\t * For a given newly saved change, compares it with a change already done on the element and modifies the incoming\n\t * change and/or the old change.\n\t *\n\t * @private\n\t * @param {Object} inc Incoming (new) change.\n\t * @param {Array.<Object>} changes An array containing all the changes done on that element.\n\t */\n\t_handleChange( inc, changes ) {\n\t\t// We need a helper variable that will store how many nodes are to be still handled for this change item.\n\t\t// `nodesToHandle` (how many nodes still need to be handled) and `howMany` (how many nodes were affected)\n\t\t// needs to be differentiated.\n\t\t//\n\t\t// This comes up when there are multiple changes that are affected by `inc` change item.\n\t\t//\n\t\t// For example: assume two insert changes: `{ offset: 2, howMany: 1 }` and `{ offset: 5, howMany: 1 }`.\n\t\t// Assume that `inc` change is remove `{ offset: 2, howMany: 2, nodesToHandle: 2 }`.\n\t\t//\n\t\t// Then, we:\n\t\t// - \"forget\" about first insert change (it is \"eaten\" by remove),\n\t\t// - because of that, at the end we will want to remove only one node (`nodesToHandle = 1`),\n\t\t// - but still we have to change offset of the second insert change from `5` to `3`!\n\t\t//\n\t\t// So, `howMany` does not change throughout items transformation and keeps information about how many nodes were affected,\n\t\t// while `nodesToHandle` means how many nodes need to be handled after the change item is transformed by other changes.\n\t\tinc.nodesToHandle = inc.howMany;\n\n\t\tfor ( const old of changes ) {\n\t\t\tconst incEnd = inc.offset + inc.howMany;\n\t\t\tconst oldEnd = old.offset + old.howMany;\n\n\t\t\tif ( inc.type == 'insert' ) {\n\t\t\t\tif ( old.type == 'insert' ) {\n\t\t\t\t\tif ( inc.offset <= old.offset ) {\n\t\t\t\t\t\told.offset += inc.howMany;\n\t\t\t\t\t} else if ( inc.offset < oldEnd ) {\n\t\t\t\t\t\told.howMany += inc.nodesToHandle;\n\t\t\t\t\t\tinc.nodesToHandle = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( old.type == 'remove' ) {\n\t\t\t\t\tif ( inc.offset < old.offset ) {\n\t\t\t\t\t\told.offset += inc.howMany;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( old.type == 'attribute' ) {\n\t\t\t\t\tif ( inc.offset <= old.offset ) {\n\t\t\t\t\t\told.offset += inc.howMany;\n\t\t\t\t\t} else if ( inc.offset < oldEnd ) {\n\t\t\t\t\t\t// This case is more complicated, because attribute change has to be split into two.\n\t\t\t\t\t\t// Example (assume that uppercase and lowercase letters mean different attributes):\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// initial state:\t\tabcxyz\n\t\t\t\t\t\t// attribute change:\taBCXYz\n\t\t\t\t\t\t// incoming insert:\t\taBCfooXYz\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// Change ranges cannot intersect because each item has to be described exactly (it was either\n\t\t\t\t\t\t// not changed, inserted, removed, or its attribute was changed). That's why old attribute\n\t\t\t\t\t\t// change has to be split and both parts has to be handled separately from now on.\n\t\t\t\t\t\tconst howMany = old.howMany;\n\n\t\t\t\t\t\told.howMany = inc.offset - old.offset;\n\n\t\t\t\t\t\t// Add the second part of attribute change to the beginning of processed array so it won't\n\t\t\t\t\t\t// be processed again in this loop.\n\t\t\t\t\t\tchanges.unshift( {\n\t\t\t\t\t\t\ttype: 'attribute',\n\t\t\t\t\t\t\toffset: incEnd,\n\t\t\t\t\t\t\thowMany: howMany - old.howMany,\n\t\t\t\t\t\t\tcount: this._changeCount++\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( inc.type == 'remove' ) {\n\t\t\t\tif ( old.type == 'insert' ) {\n\t\t\t\t\tif ( incEnd <= old.offset ) {\n\t\t\t\t\t\told.offset -= inc.howMany;\n\t\t\t\t\t} else if ( incEnd <= oldEnd ) {\n\t\t\t\t\t\tif ( inc.offset < old.offset ) {\n\t\t\t\t\t\t\tconst intersectionLength = incEnd - old.offset;\n\n\t\t\t\t\t\t\told.offset = inc.offset;\n\n\t\t\t\t\t\t\told.howMany -= intersectionLength;\n\t\t\t\t\t\t\tinc.nodesToHandle -= intersectionLength;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\told.howMany -= inc.nodesToHandle;\n\t\t\t\t\t\t\tinc.nodesToHandle = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif ( inc.offset <= old.offset ) {\n\t\t\t\t\t\t\tinc.nodesToHandle -= old.howMany;\n\t\t\t\t\t\t\told.howMany = 0;\n\t\t\t\t\t\t} else if ( inc.offset < oldEnd ) {\n\t\t\t\t\t\t\tconst intersectionLength = oldEnd - inc.offset;\n\n\t\t\t\t\t\t\told.howMany -= intersectionLength;\n\t\t\t\t\t\t\tinc.nodesToHandle -= intersectionLength;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( old.type == 'remove' ) {\n\t\t\t\t\tif ( incEnd <= old.offset ) {\n\t\t\t\t\t\told.offset -= inc.howMany;\n\t\t\t\t\t} else if ( inc.offset < old.offset ) {\n\t\t\t\t\t\tinc.nodesToHandle += old.howMany;\n\t\t\t\t\t\told.howMany = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( old.type == 'attribute' ) {\n\t\t\t\t\tif ( incEnd <= old.offset ) {\n\t\t\t\t\t\told.offset -= inc.howMany;\n\t\t\t\t\t} else if ( inc.offset < old.offset ) {\n\t\t\t\t\t\tconst intersectionLength = incEnd - old.offset;\n\n\t\t\t\t\t\told.offset = inc.offset;\n\t\t\t\t\t\told.howMany -= intersectionLength;\n\t\t\t\t\t} else if ( inc.offset < oldEnd ) {\n\t\t\t\t\t\tif ( incEnd <= oldEnd ) {\n\t\t\t\t\t\t\t// On first sight in this case we don't need to split attribute operation into two.\n\t\t\t\t\t\t\t// However the changes set is later converted to actions (see `_generateActionsFromChanges`).\n\t\t\t\t\t\t\t// For that reason, no two changes may intersect.\n\t\t\t\t\t\t\t// So we cannot have an attribute change that \"contains\" remove change.\n\t\t\t\t\t\t\t// Attribute change needs to be split.\n\t\t\t\t\t\t\tconst howMany = old.howMany;\n\n\t\t\t\t\t\t\told.howMany = inc.offset - old.offset;\n\n\t\t\t\t\t\t\tconst howManyAfter = howMany - old.howMany - inc.nodesToHandle;\n\n\t\t\t\t\t\t\t// Add the second part of attribute change to the beginning of processed array so it won't\n\t\t\t\t\t\t\t// be processed again in this loop.\n\t\t\t\t\t\t\tchanges.unshift( {\n\t\t\t\t\t\t\t\ttype: 'attribute',\n\t\t\t\t\t\t\t\toffset: inc.offset,\n\t\t\t\t\t\t\t\thowMany: howManyAfter,\n\t\t\t\t\t\t\t\tcount: this._changeCount++\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\told.howMany -= oldEnd - inc.offset;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( inc.type == 'attribute' ) {\n\t\t\t\t// In case of attribute change, `howMany` should be kept same as `nodesToHandle`. It's not an error.\n\t\t\t\tif ( old.type == 'insert' ) {\n\t\t\t\t\tif ( inc.offset < old.offset && incEnd > old.offset ) {\n\t\t\t\t\t\tif ( incEnd > oldEnd ) {\n\t\t\t\t\t\t\t// This case is similar to a case described when incoming change was insert and old change was attribute.\n\t\t\t\t\t\t\t// See comment above.\n\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t// This time incoming change is attribute. We need to split incoming change in this case too.\n\t\t\t\t\t\t\t// However this time, the second part of the attribute change needs to be processed further\n\t\t\t\t\t\t\t// because there might be other changes that it collides with.\n\t\t\t\t\t\t\tconst attributePart = {\n\t\t\t\t\t\t\t\ttype: 'attribute',\n\t\t\t\t\t\t\t\toffset: oldEnd,\n\t\t\t\t\t\t\t\thowMany: incEnd - oldEnd,\n\t\t\t\t\t\t\t\tcount: this._changeCount++\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tthis._handleChange( attributePart, changes );\n\n\t\t\t\t\t\t\tchanges.push( attributePart );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tinc.nodesToHandle = old.offset - inc.offset;\n\t\t\t\t\t\tinc.howMany = inc.nodesToHandle;\n\t\t\t\t\t} else if ( inc.offset >= old.offset && inc.offset < oldEnd ) {\n\t\t\t\t\t\tif ( incEnd > oldEnd ) {\n\t\t\t\t\t\t\tinc.nodesToHandle = incEnd - oldEnd;\n\t\t\t\t\t\t\tinc.offset = oldEnd;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tinc.nodesToHandle = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( old.type == 'remove' ) {\n\t\t\t\t\t// This is a case when attribute change \"contains\" remove change.\n\t\t\t\t\t// The attribute change needs to be split into two because changes cannot intersect.\n\t\t\t\t\tif ( inc.offset < old.offset && incEnd > old.offset ) {\n\t\t\t\t\t\tconst attributePart = {\n\t\t\t\t\t\t\ttype: 'attribute',\n\t\t\t\t\t\t\toffset: old.offset,\n\t\t\t\t\t\t\thowMany: incEnd - old.offset,\n\t\t\t\t\t\t\tcount: this._changeCount++\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tthis._handleChange( attributePart, changes );\n\n\t\t\t\t\t\tchanges.push( attributePart );\n\n\t\t\t\t\t\tinc.nodesToHandle = old.offset - inc.offset;\n\t\t\t\t\t\tinc.howMany = inc.nodesToHandle;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( old.type == 'attribute' ) {\n\t\t\t\t\t// There are only two conflicting scenarios possible here:\n\t\t\t\t\tif ( inc.offset >= old.offset && incEnd <= oldEnd ) {\n\t\t\t\t\t\t// `old` change includes `inc` change, or they are the same.\n\t\t\t\t\t\tinc.nodesToHandle = 0;\n\t\t\t\t\t\tinc.howMany = 0;\n\t\t\t\t\t\tinc.offset = 0;\n\t\t\t\t\t} else if ( inc.offset <= old.offset && incEnd >= oldEnd ) {\n\t\t\t\t\t\t// `inc` change includes `old` change.\n\t\t\t\t\t\told.howMany = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tinc.howMany = inc.nodesToHandle;\n\t\tdelete inc.nodesToHandle;\n\t}\n\n\t/**\n\t * Returns an object with a single insert change description.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} parent The element in which the change happened.\n\t * @param {Number} offset The offset at which change happened.\n\t * @param {String} name The name of the removed element or `'$text'` for a character.\n\t * @returns {Object} The diff item.\n\t */\n\t_getInsertDiff( parent, offset, name ) {\n\t\treturn {\n\t\t\ttype: 'insert',\n\t\t\tposition: Position._createAt( parent, offset ),\n\t\t\tname,\n\t\t\tlength: 1,\n\t\t\tchangeCount: this._changeCount++\n\t\t};\n\t}\n\n\t/**\n\t * Returns an object with a single remove change description.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} parent The element in which change happened.\n\t * @param {Number} offset The offset at which change happened.\n\t * @param {String} name The name of the removed element or `'$text'` for a character.\n\t * @returns {Object} The diff item.\n\t */\n\t_getRemoveDiff( parent, offset, name ) {\n\t\treturn {\n\t\t\ttype: 'remove',\n\t\t\tposition: Position._createAt( parent, offset ),\n\t\t\tname,\n\t\t\tlength: 1,\n\t\t\tchangeCount: this._changeCount++\n\t\t};\n\t}\n\n\t/**\n\t * Returns an array of objects where each one is a single attribute change description.\n\t *\n\t * @private\n\t * @param {module:engine/model/range~Range} range The range where the change happened.\n\t * @param {Map} oldAttributes A map, map iterator or compatible object that contains attributes before the change.\n\t * @param {Map} newAttributes A map, map iterator or compatible object that contains attributes after the change.\n\t * @returns {Array.<Object>} An array containing one or more diff items.\n\t */\n\t_getAttributesDiff( range, oldAttributes, newAttributes ) {\n\t\t// Results holder.\n\t\tconst diffs = [];\n\n\t\t// Clone new attributes as we will be performing changes on this object.\n\t\tnewAttributes = new Map( newAttributes );\n\n\t\t// Look through old attributes.\n\t\tfor ( const [ key, oldValue ] of oldAttributes ) {\n\t\t\t// Check what is the new value of the attribute (or if it was removed).\n\t\t\tconst newValue = newAttributes.has( key ) ? newAttributes.get( key ) : null;\n\n\t\t\t// If values are different (or attribute was removed)...\n\t\t\tif ( newValue !== oldValue ) {\n\t\t\t\t// Add diff item.\n\t\t\t\tdiffs.push( {\n\t\t\t\t\ttype: 'attribute',\n\t\t\t\t\tposition: range.start,\n\t\t\t\t\trange: range.clone(),\n\t\t\t\t\tlength: 1,\n\t\t\t\t\tattributeKey: key,\n\t\t\t\t\tattributeOldValue: oldValue,\n\t\t\t\t\tattributeNewValue: newValue,\n\t\t\t\t\tchangeCount: this._changeCount++\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Prevent returning two diff items for the same change.\n\t\t\tnewAttributes.delete( key );\n\t\t}\n\n\t\t// Look through new attributes that weren't handled above.\n\t\tfor ( const [ key, newValue ] of newAttributes ) {\n\t\t\t// Each of them is a new attribute. Add diff item.\n\t\t\tdiffs.push( {\n\t\t\t\ttype: 'attribute',\n\t\t\t\tposition: range.start,\n\t\t\t\trange: range.clone(),\n\t\t\t\tlength: 1,\n\t\t\t\tattributeKey: key,\n\t\t\t\tattributeOldValue: null,\n\t\t\t\tattributeNewValue: newValue,\n\t\t\t\tchangeCount: this._changeCount++\n\t\t\t} );\n\t\t}\n\n\t\treturn diffs;\n\t}\n\n\t/**\n\t * Checks whether given element or any of its parents is an element that is buffered as an inserted element.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} element Element to check.\n\t * @returns {Boolean}\n\t */\n\t_isInInsertedElement( element ) {\n\t\tconst parent = element.parent;\n\n\t\tif ( !parent ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst changes = this._changesInElement.get( parent );\n\t\tconst offset = element.startOffset;\n\n\t\tif ( changes ) {\n\t\t\tfor ( const change of changes ) {\n\t\t\t\tif ( change.type == 'insert' && offset >= change.offset && offset < change.offset + change.howMany ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this._isInInsertedElement( parent );\n\t}\n\n\t/**\n\t * Removes deeply all buffered changes that are registered in elements from range specified by `parent`, `offset`\n\t * and `howMany`.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} parent\n\t * @param {Number} offset\n\t * @param {Number} howMany\n\t */\n\t_removeAllNestedChanges( parent, offset, howMany ) {\n\t\tconst range = new Range( Position._createAt( parent, offset ), Position._createAt( parent, offset + howMany ) );\n\n\t\tfor ( const item of range.getItems( { shallow: true } ) ) {\n\t\t\tif ( item.is( 'element' ) ) {\n\t\t\t\tthis._elementSnapshots.delete( item );\n\t\t\t\tthis._changesInElement.delete( item );\n\n\t\t\t\tthis._removeAllNestedChanges( item, 0, item.maxOffset );\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Returns an array that is a copy of passed child list with the exception that text nodes are split to one or more\n// objects, each representing one character and attributes set on that character.\nfunction _getChildrenSnapshot( children ) {\n\tconst snapshot = [];\n\n\tfor ( const child of children ) {\n\t\tif ( child.is( 'text' ) ) {\n\t\t\tfor ( let i = 0; i < child.data.length; i++ ) {\n\t\t\t\tsnapshot.push( {\n\t\t\t\t\tname: '$text',\n\t\t\t\t\tattributes: new Map( child.getAttributes() )\n\t\t\t\t} );\n\t\t\t}\n\t\t} else {\n\t\t\tsnapshot.push( {\n\t\t\t\tname: child.name,\n\t\t\t\tattributes: new Map( child.getAttributes() )\n\t\t\t} );\n\t\t}\n\t}\n\n\treturn snapshot;\n}\n\n// Generates array of actions for given changes set.\n// It simulates what `diff` function does.\n// Generated actions are:\n// - 'e' for 'equal' - when item at that position did not change,\n// - 'i' for 'insert' - when item at that position was inserted,\n// - 'r' for 'remove' - when item at that position was removed,\n// - 'a' for 'attribute' - when item at that position has it attributes changed.\n//\n// Example (assume that uppercase letters have bold attribute, compare with function code):\n//\n// children before:\tfooBAR\n// children after:\tfoxybAR\n//\n// changes: type: remove, offset: 1, howMany: 1\n//\t\t\ttype: insert, offset: 2, howMany: 2\n//\t\t\ttype: attribute, offset: 4, howMany: 1\n//\n// expected actions: equal (f), remove (o), equal (o), insert (x), insert (y), attribute (b), equal (A), equal (R)\n//\n// steps taken by th script:\n//\n// 1. change = \"type: remove, offset: 1, howMany: 1\"; offset = 0; oldChildrenHandled = 0\n//    1.1 between this change and the beginning is one not-changed node, fill with one equal action, one old child has been handled\n//    1.2 this change removes one node, add one remove action\n//    1.3 change last visited `offset` to 1\n//    1.4 since an old child has been removed, one more old child has been handled\n//    1.5 actions at this point are: equal, remove\n//\n// 2. change = \"type: insert, offset: 2, howMany: 2\"; offset = 1; oldChildrenHandled = 2\n//    2.1 between this change and previous change is one not-changed node, add equal action, another one old children has been handled\n//    2.2 this change inserts two nodes, add two insert actions\n//    2.3 change last visited offset to the end of the inserted range, that is 4\n//    2.4 actions at this point are: equal, remove, equal, insert, insert\n//\n// 3. change = \"type: attribute, offset: 4, howMany: 1\"; offset = 4, oldChildrenHandled = 3\n//    3.1 between this change and previous change are no not-changed nodes\n//    3.2 this change changes one node, add one attribute action\n//    3.3 change last visited `offset` to the end of change range, that is 5\n//    3.4 since an old child has been changed, one more old child has been handled\n//    3.5 actions at this point are: equal, remove, equal, insert, insert, attribute\n//\n// 4. after loop oldChildrenHandled = 4, oldChildrenLength = 6 (fooBAR is 6 characters)\n//    4.1 fill up with two equal actions\n//\n// The result actions are: equal, remove, equal, insert, insert, attribute, equal, equal.\nfunction _generateActionsFromChanges( oldChildrenLength, changes ) {\n\tconst actions = [];\n\n\tlet offset = 0;\n\tlet oldChildrenHandled = 0;\n\n\t// Go through all buffered changes.\n\tfor ( const change of changes ) {\n\t\t// First, fill \"holes\" between changes with \"equal\" actions.\n\t\tif ( change.offset > offset ) {\n\t\t\tfor ( let i = 0; i < change.offset - offset; i++ ) {\n\t\t\t\tactions.push( 'e' );\n\t\t\t}\n\n\t\t\toldChildrenHandled += change.offset - offset;\n\t\t}\n\n\t\t// Then, fill up actions accordingly to change type.\n\t\tif ( change.type == 'insert' ) {\n\t\t\tfor ( let i = 0; i < change.howMany; i++ ) {\n\t\t\t\tactions.push( 'i' );\n\t\t\t}\n\n\t\t\t// The last handled offset is after inserted range.\n\t\t\toffset = change.offset + change.howMany;\n\t\t} else if ( change.type == 'remove' ) {\n\t\t\tfor ( let i = 0; i < change.howMany; i++ ) {\n\t\t\t\tactions.push( 'r' );\n\t\t\t}\n\n\t\t\t// The last handled offset is at the position where the nodes were removed.\n\t\t\toffset = change.offset;\n\t\t\t// We removed `howMany` old nodes, update `oldChildrenHandled`.\n\t\t\toldChildrenHandled += change.howMany;\n\t\t} else {\n\t\t\tactions.push( ...'a'.repeat( change.howMany ).split( '' ) );\n\n\t\t\t// The last handled offset is at the position after the changed range.\n\t\t\toffset = change.offset + change.howMany;\n\t\t\t// We changed `howMany` old nodes, update `oldChildrenHandled`.\n\t\t\toldChildrenHandled += change.howMany;\n\t\t}\n\t}\n\n\t// Fill \"equal\" actions at the end of actions set. Use `oldChildrenHandled` to see how many children\n\t// has not been changed / removed at the end of their parent.\n\tif ( oldChildrenHandled < oldChildrenLength ) {\n\t\tfor ( let i = 0; i < oldChildrenLength - oldChildrenHandled - offset; i++ ) {\n\t\t\tactions.push( 'e' );\n\t\t}\n\t}\n\n\treturn actions;\n}\n\n// Filter callback for Array.filter that filters out change entries that are in graveyard.\nfunction _changesInGraveyardFilter( entry ) {\n\tconst posInGy = entry.position && entry.position.root.rootName == '$graveyard';\n\tconst rangeInGy = entry.range && entry.range.root.rootName == '$graveyard';\n\n\treturn !posInGy && !rangeInGy;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/history\n */\n\n/**\n * `History` keeps the track of all the operations applied to the {@link module:engine/model/document~Document document}.\n */\nexport default class History {\n\t/**\n\t * Creates an empty History instance.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Operations added to the history.\n\t\t *\n\t\t * @protected\n\t\t * @member {Array.<module:engine/model/operation/operation~Operation>} module:engine/model/history~History#_operations\n\t\t */\n\t\tthis._operations = [];\n\n\t\t/**\n\t\t * Holds an information which {@link module:engine/model/operation/operation~Operation operation} undoes which\n\t\t * {@link module:engine/model/operation/operation~Operation operation}.\n\t\t *\n\t\t * Keys of the map are \"undoing operations\", that is operations that undone some other operations. For each key, the\n\t\t * value is an operation that has been undone by the \"undoing operation\".\n\t\t *\n\t\t * @private\n\t\t * @member {Map} module:engine/model/history~History#_undoPairs\n\t\t */\n\t\tthis._undoPairs = new Map();\n\n\t\t/**\n\t\t * Holds all undone operations.\n\t\t *\n\t\t * @private\n\t\t * @member {Set.<module:engine/model/operation/operation~Operation>} module:engine/model/history~History#_undoneOperations\n\t\t */\n\t\tthis._undoneOperations = new Set();\n\t}\n\n\t/**\n\t * Adds an operation to the history.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} operation Operation to add.\n\t */\n\taddOperation( operation ) {\n\t\tif ( this._operations.includes( operation ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._operations.push( operation );\n\t}\n\n\t/**\n\t * Returns operations added to the history.\n\t *\n\t * @param {Number} [from=0] Base version from which operations should be returned (inclusive). Defaults to `0`, which means\n\t * that operations from the first one will be returned.\n\t * @param {Number} [to=Number.POSITIVE_INFINITY] Base version up to which operations should be returned (exclusive).\n\t * Defaults to `Number.POSITIVE_INFINITY` which means that operations up to the last one will be returned.\n\t * @returns {Iterable.<module:engine/model/operation/operation~Operation>} Operations added to the history.\n\t */\n\tgetOperations( from = 0, to = Number.POSITIVE_INFINITY ) {\n\t\tif ( from < 0 ) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn this._operations.slice( from, to );\n\t}\n\n\t/**\n\t * Returns operation from the history that bases on given `baseVersion`.\n\t *\n\t * @param {Number} baseVersion Base version of the operation to get.\n\t * @returns {module:engine/model/operation/operation~Operation|null} Operation with given base version or `null` if\n\t * there is no such operation in history.\n\t */\n\tgetOperation( baseVersion ) {\n\t\treturn this._operations[ baseVersion ];\n\t}\n\n\t/**\n\t * Marks in history that one operation is an operation that is undoing the other operation. By marking operation this way,\n\t * history is keeping more context information about operations, which helps in operational transformation.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} undoneOperation Operation which is undone by `undoingOperation`.\n\t * @param {module:engine/model/operation/operation~Operation} undoingOperation Operation which undoes `undoneOperation`.\n\t */\n\tsetOperationAsUndone( undoneOperation, undoingOperation ) {\n\t\tthis._undoPairs.set( undoingOperation, undoneOperation );\n\t\tthis._undoneOperations.add( undoneOperation );\n\t}\n\n\t/**\n\t * Checks whether given `operation` is undoing any other operation.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} operation Operation to check.\n\t * @returns {Boolean} `true` if given `operation` is undoing any other operation, `false` otherwise.\n\t */\n\tisUndoingOperation( operation ) {\n\t\treturn this._undoPairs.has( operation );\n\t}\n\n\t/**\n\t * Checks whether given `operation` has been undone by any other operation.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} operation Operation to check.\n\t * @returns {Boolean} `true` if given `operation` has been undone any other operation, `false` otherwise.\n\t */\n\tisUndoneOperation( operation ) {\n\t\treturn this._undoneOperations.has( operation );\n\t}\n\n\t/**\n\t * For given `undoingOperation`, returns the operation which has been undone by it.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} undoingOperation\n\t * @returns {module:engine/model/operation/operation~Operation|undefined} Operation that has been undone by given\n\t * `undoingOperation` or `undefined` if given `undoingOperation` is not undoing any other operation.\n\t */\n\tgetUndoneOperation( undoingOperation ) {\n\t\treturn this._undoPairs.get( undoingOperation );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * Set of utils to handle unicode characters.\n *\n * @module utils/unicode\n */\n\n/**\n * Checks whether given `character` is a combining mark.\n *\n * @param {String} character Character to check.\n * @returns {Boolean}\n */\nexport function isCombiningMark( character ) {\n\treturn !!character && character.length == 1 && /[\\u0300-\\u036f\\u1ab0-\\u1aff\\u1dc0-\\u1dff\\u20d0-\\u20ff\\ufe20-\\ufe2f]/.test( character );\n}\n\n/**\n * Checks whether given `character` is a high half of surrogate pair.\n *\n * Using UTF-16 terminology, a surrogate pair denotes UTF-16 character using two UTF-8 characters. The surrogate pair\n * consist of high surrogate pair character followed by low surrogate pair character.\n *\n * @param {String} character Character to check.\n * @returns {Boolean}\n */\nexport function isHighSurrogateHalf( character ) {\n\treturn !!character && character.length == 1 && /[\\ud800-\\udbff]/.test( character );\n}\n\n/**\n * Checks whether given `character` is a low half of surrogate pair.\n *\n * Using UTF-16 terminology, a surrogate pair denotes UTF-16 character using two UTF-8 characters. The surrogate pair\n * consist of high surrogate pair character followed by low surrogate pair character.\n *\n * @param {String} character Character to check.\n * @returns {Boolean}\n */\nexport function isLowSurrogateHalf( character ) {\n\treturn !!character && character.length == 1 && /[\\udc00-\\udfff]/.test( character );\n}\n\n/**\n * Checks whether given offset in a string is inside a surrogate pair (between two surrogate halves).\n *\n * @param {String} string String to check.\n * @param {Number} offset Offset to check.\n * @returns {Boolean}\n */\nexport function isInsideSurrogatePair( string, offset ) {\n\treturn isHighSurrogateHalf( string.charAt( offset - 1 ) ) && isLowSurrogateHalf( string.charAt( offset ) );\n}\n\n/**\n * Checks whether given offset in a string is between base character and combining mark or between two combining marks.\n *\n * @param {String} string String to check.\n * @param {Number} offset Offset to check.\n * @returns {Boolean}\n */\nexport function isInsideCombinedSymbol( string, offset ) {\n\treturn isCombiningMark( string.charAt( offset ) );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/document\n */\n\nimport Differ from './differ';\nimport RootElement from './rootelement';\nimport History from './history';\nimport DocumentSelection from './documentselection';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport { isInsideSurrogatePair, isInsideCombinedSymbol } from '@ckeditor/ckeditor5-utils/src/unicode';\nimport { clone } from 'lodash-es';\n\n// @if CK_DEBUG_ENGINE // const { logDocument } = require( '../dev-utils/utils' );\n\nconst graveyardName = '$graveyard';\n\n/**\n * Data model's document. It contains the model's structure, its selection and the history of changes.\n *\n * Read more about working with the model in\n * {@glink framework/guides/architecture/editing-engine#model introduction to the the editing engine's architecture}.\n *\n * Usually, the document contains just one {@link module:engine/model/document~Document#roots root element}, so\n * you can retrieve it by just calling {@link module:engine/model/document~Document#getRoot} without specifying its name:\n *\n *\t\tmodel.document.getRoot(); // -> returns the main root\n *\n * However, the document may contain multiple roots – e.g. when the editor has multiple editable areas\n * (e.g. a title and a body of a message).\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\nexport default class Document {\n\t/**\n\t * Creates an empty document instance with no {@link #roots} (other than\n\t * the {@link #graveyard graveyard root}).\n\t */\n\tconstructor( model ) {\n\t\t/**\n\t\t * The {@link module:engine/model/model~Model model} that the document is a part of.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:engine/model/model~Model}\n\t\t */\n\t\tthis.model = model;\n\n\t\t/**\n\t\t * The document version. It starts from `0` and every operation increases the version number. It is used to ensure that\n\t\t * operations are applied on a proper document version.\n\t\t *\n\t\t * If the {@link module:engine/model/operation/operation~Operation#baseVersion base version} does not match the document version,\n\t\t * a {@link module:utils/ckeditorerror~CKEditorError model-document-applyOperation-wrong-version} error is thrown.\n\t\t *\n\t\t * @readonly\n\t\t * @type {Number}\n\t\t */\n\t\tthis.version = 0;\n\n\t\t/**\n\t\t * The document's history.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:engine/model/history~History}\n\t\t */\n\t\tthis.history = new History( this );\n\n\t\t/**\n\t\t * The selection in this document.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:engine/model/documentselection~DocumentSelection}\n\t\t */\n\t\tthis.selection = new DocumentSelection( this );\n\n\t\t/**\n\t\t * A list of roots that are owned and managed by this document. Use {@link #createRoot} and\n\t\t * {@link #getRoot} to manipulate it.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:utils/collection~Collection}\n\t\t */\n\t\tthis.roots = new Collection( { idProperty: 'rootName' } );\n\n\t\t/**\n\t\t * The model differ object. Its role is to buffer changes done on the model document and then calculate a diff of those changes.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:engine/model/differ~Differ}\n\t\t */\n\t\tthis.differ = new Differ( model.markers );\n\n\t\t/**\n\t\t * Post-fixer callbacks registered to the model document.\n\t\t *\n\t\t * @private\n\t\t * @type {Set.<Function>}\n\t\t */\n\t\tthis._postFixers = new Set();\n\n\t\t/**\n\t\t * A boolean indicates whether the selection has changed until\n\t\t *\n\t\t * @private\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._hasSelectionChangedFromTheLastChangeBlock = false;\n\n\t\t// Graveyard tree root. Document always have a graveyard root, which stores removed nodes.\n\t\tthis.createRoot( '$root', graveyardName );\n\n\t\t// First, if the operation is a document operation check if it's base version is correct.\n\t\tthis.listenTo( model, 'applyOperation', ( evt, args ) => {\n\t\t\tconst operation = args[ 0 ];\n\n\t\t\tif ( operation.isDocumentOperation && operation.baseVersion !== this.version ) {\n\t\t\t\t/**\n\t\t\t\t * Only operations with matching versions can be applied.\n\t\t\t\t *\n\t\t\t\t * @error document-applyOperation-wrong-version\n\t\t\t\t * @param {module:engine/model/operation/operation~Operation} operation\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'model-document-applyOperation-wrong-version: Only operations with matching versions can be applied.',\n\t\t\t\t\tthis,\n\t\t\t\t\t{ operation }\n\t\t\t\t);\n\t\t\t}\n\t\t}, { priority: 'highest' } );\n\n\t\t// Then, still before an operation is applied on model, buffer the change in differ.\n\t\tthis.listenTo( model, 'applyOperation', ( evt, args ) => {\n\t\t\tconst operation = args[ 0 ];\n\n\t\t\tif ( operation.isDocumentOperation ) {\n\t\t\t\tthis.differ.bufferOperation( operation );\n\t\t\t}\n\t\t}, { priority: 'high' } );\n\n\t\t// After the operation is applied, bump document's version and add the operation to the history.\n\t\tthis.listenTo( model, 'applyOperation', ( evt, args ) => {\n\t\t\tconst operation = args[ 0 ];\n\n\t\t\tif ( operation.isDocumentOperation ) {\n\t\t\t\tthis.version++;\n\t\t\t\tthis.history.addOperation( operation );\n\t\t\t}\n\t\t}, { priority: 'low' } );\n\n\t\t// Listen to selection changes. If selection changed, mark it.\n\t\tthis.listenTo( this.selection, 'change', () => {\n\t\t\tthis._hasSelectionChangedFromTheLastChangeBlock = true;\n\t\t} );\n\n\t\t// Buffer marker changes.\n\t\t// This is not covered in buffering operations because markers may change outside of them (when they\n\t\t// are modified using `model.markers` collection, not through `MarkerOperation`).\n\t\tthis.listenTo( model.markers, 'update', ( evt, marker, oldRange, newRange ) => {\n\t\t\t// Whenever marker is updated, buffer that change.\n\t\t\tthis.differ.bufferMarkerChange( marker.name, oldRange, newRange, marker.affectsData );\n\n\t\t\tif ( oldRange === null ) {\n\t\t\t\t// If this is a new marker, add a listener that will buffer change whenever marker changes.\n\t\t\t\tmarker.on( 'change', ( evt, oldRange ) => {\n\t\t\t\t\tthis.differ.bufferMarkerChange( marker.name, oldRange, marker.getRange(), marker.affectsData );\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * The graveyard tree root. A document always has a graveyard root that stores removed nodes.\n\t *\n\t * @readonly\n\t * @member {module:engine/model/rootelement~RootElement}\n\t */\n\tget graveyard() {\n\t\treturn this.getRoot( graveyardName );\n\t}\n\n\t/**\n\t * Creates a new root.\n\t *\n\t * @param {String} [elementName='$root'] The element name. Defaults to `'$root'` which also has some basic schema defined\n\t * (`$block`s are allowed inside the `$root`). Make sure to define a proper schema if you use a different name.\n\t * @param {String} [rootName='main'] A unique root name.\n\t * @returns {module:engine/model/rootelement~RootElement} The created root.\n\t */\n\tcreateRoot( elementName = '$root', rootName = 'main' ) {\n\t\tif ( this.roots.get( rootName ) ) {\n\t\t\t/**\n\t\t\t * A root with the specified name already exists.\n\t\t\t *\n\t\t\t * @error model-document-createRoot-name-exists\n\t\t\t * @param {module:engine/model/document~Document} doc\n\t\t\t * @param {String} name\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-document-createRoot-name-exists: Root with specified name already exists.',\n\t\t\t\tthis,\n\t\t\t\t{ name: rootName }\n\t\t\t);\n\t\t}\n\n\t\tconst root = new RootElement( this, elementName, rootName );\n\t\tthis.roots.add( root );\n\n\t\treturn root;\n\t}\n\n\t/**\n\t * Removes all event listeners set by the document instance.\n\t */\n\tdestroy() {\n\t\tthis.selection.destroy();\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Returns a root by its name.\n\t *\n\t * @param {String} [name='main'] A unique root name.\n\t * @returns {module:engine/model/rootelement~RootElement|null} The root registered under a given name or `null` when\n\t * there is no root with the given name.\n\t */\n\tgetRoot( name = 'main' ) {\n\t\treturn this.roots.get( name );\n\t}\n\n\t/**\n\t * Returns an array with names of all roots (without the {@link #graveyard}) added to the document.\n\t *\n\t * @returns {Array.<String>} Roots names.\n\t */\n\tgetRootNames() {\n\t\treturn Array.from( this.roots, root => root.rootName ).filter( name => name != graveyardName );\n\t}\n\n\t/**\n\t * Used to register a post-fixer callback. A post-fixer mechanism guarantees that the features\n\t * will operate on a correct model state.\n\t *\n\t * An execution of a feature may lead to an incorrect document tree state. The callbacks are used to fix the document tree after\n\t * it has changed. Post-fixers are fired just after all changes from the outermost change block were applied but\n\t * before the {@link module:engine/model/document~Document#event:change change event} is fired. If a post-fixer callback made\n\t * a change, it should return `true`. When this happens, all post-fixers are fired again to check if something else should\n\t * not be fixed in the new document tree state.\n\t *\n\t * As a parameter, a post-fixer callback receives a {@link module:engine/model/writer~Writer writer} instance connected with the\n\t * executed changes block. Thanks to that, all changes done by the callback will be added to the same\n\t * {@link module:engine/model/batch~Batch batch} (and undo step) as the original changes. This makes post-fixer changes transparent\n\t * for the user.\n\t *\n\t * An example of a post-fixer is a callback that checks if all the data were removed from the editor. If so, the\n\t * callback should add an empty paragraph so that the editor is never empty:\n\t *\n\t *\t\tdocument.registerPostFixer( writer => {\n\t *\t\t\tconst changes = document.differ.getChanges();\n\t *\n\t *\t\t\t// Check if the changes lead to an empty root in the editor.\n\t *\t\t\tfor ( const entry of changes ) {\n\t *\t\t\t\tif ( entry.type == 'remove' && entry.position.root.isEmpty ) {\n\t *\t\t\t\t\twriter.insertElement( 'paragraph', entry.position.root, 0 );\n\t *\n\t *\t\t\t\t\t// It is fine to return early, even if multiple roots would need to be fixed.\n\t *\t\t\t\t\t// All post-fixers will be fired again, so if there are more empty roots, those will be fixed, too.\n\t *\t\t\t\t\treturn true;\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * @param {Function} postFixer\n\t */\n\tregisterPostFixer( postFixer ) {\n\t\tthis._postFixers.add( postFixer );\n\t}\n\n\t/**\n\t * A custom `toJSON()` method to solve child-parent circular dependencies.\n\t *\n\t * @returns {Object} A clone of this object with the document property changed to a string.\n\t */\n\ttoJSON() {\n\t\tconst json = clone( this );\n\n\t\t// Due to circular references we need to remove parent reference.\n\t\tjson.selection = '[engine.model.DocumentSelection]';\n\t\tjson.model = '[engine.model.Model]';\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * Check if there were any changes done on document, and if so, call post-fixers,\n\t * fire `change` event for features and conversion and then reset the differ.\n\t * Fire `change:data` event when at least one operation or buffered marker changes the data.\n\t *\n\t * @protected\n\t * @fires change\n\t * @fires change:data\n\t * @param {module:engine/model/writer~Writer} writer The writer on which post-fixers will be called.\n\t */\n\t_handleChangeBlock( writer ) {\n\t\tif ( this._hasDocumentChangedFromTheLastChangeBlock() ) {\n\t\t\tthis._callPostFixers( writer );\n\n\t\t\t// Refresh selection attributes according to the final position in the model after the change.\n\t\t\tthis.selection.refresh();\n\n\t\t\tif ( this.differ.hasDataChanges() ) {\n\t\t\t\tthis.fire( 'change:data', writer.batch );\n\t\t\t} else {\n\t\t\t\tthis.fire( 'change', writer.batch );\n\t\t\t}\n\n\t\t\t// Theoretically, it is not necessary to refresh selection after change event because\n\t\t\t// post-fixers are the last who should change the model, but just in case...\n\t\t\tthis.selection.refresh();\n\n\t\t\tthis.differ.reset();\n\t\t}\n\n\t\tthis._hasSelectionChangedFromTheLastChangeBlock = false;\n\t}\n\n\t/**\n\t * Returns whether there is a buffered change or if the selection has changed from the last\n\t * {@link module:engine/model/model~Model#enqueueChange `enqueueChange()` block}\n\t * or {@link module:engine/model/model~Model#change `change()` block}.\n\t *\n\t * @protected\n\t * @returns {Boolean} Returns `true` if document has changed from the last `change()` or `enqueueChange()` block.\n\t */\n\t_hasDocumentChangedFromTheLastChangeBlock() {\n\t\treturn !this.differ.isEmpty || this._hasSelectionChangedFromTheLastChangeBlock;\n\t}\n\n\t/**\n\t * Returns the default root for this document which is either the first root that was added to the document using\n\t * {@link #createRoot} or the {@link #graveyard graveyard root} if no other roots were created.\n\t *\n\t * @protected\n\t * @returns {module:engine/model/rootelement~RootElement} The default root for this document.\n\t */\n\t_getDefaultRoot() {\n\t\tfor ( const root of this.roots ) {\n\t\t\tif ( root !== this.graveyard ) {\n\t\t\t\treturn root;\n\t\t\t}\n\t\t}\n\n\t\treturn this.graveyard;\n\t}\n\n\t/**\n\t * Returns the default range for this selection. The default range is a collapsed range that starts and ends\n\t * at the beginning of this selection's document {@link #_getDefaultRoot default root}.\n\t *\n\t * @protected\n\t * @returns {module:engine/model/range~Range}\n\t */\n\t_getDefaultRange() {\n\t\tconst defaultRoot = this._getDefaultRoot();\n\t\tconst model = this.model;\n\t\tconst schema = model.schema;\n\n\t\t// Find the first position where the selection can be put.\n\t\tconst position = model.createPositionFromPath( defaultRoot, [ 0 ] );\n\t\tconst nearestRange = schema.getNearestSelectionRange( position );\n\n\t\t// If valid selection range is not found - return range collapsed at the beginning of the root.\n\t\treturn nearestRange || model.createRange( position );\n\t}\n\n\t/**\n\t * Checks whether a given {@link module:engine/model/range~Range range} is a valid range for\n\t * the {@link #selection document's selection}.\n\t *\n\t * @private\n\t * @param {module:engine/model/range~Range} range A range to check.\n\t * @returns {Boolean} `true` if `range` is valid, `false` otherwise.\n\t */\n\t_validateSelectionRange( range ) {\n\t\treturn validateTextNodePosition( range.start ) && validateTextNodePosition( range.end );\n\t}\n\n\t/**\n\t * Performs post-fixer loops. Executes post-fixer callbacks as long as none of them has done any changes to the model.\n\t *\n\t * @private\n\t * @param {module:engine/model/writer~Writer} writer The writer on which post-fixer callbacks will be called.\n\t */\n\t_callPostFixers( writer ) {\n\t\tlet wasFixed = false;\n\n\t\tdo {\n\t\t\tfor ( const callback of this._postFixers ) {\n\t\t\t\t// Ensure selection attributes are up to date before each post-fixer.\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-engine/issues/1673.\n\t\t\t\t//\n\t\t\t\t// It might be good to refresh the selection after each operation but at the moment it leads\n\t\t\t\t// to losing attributes for composition or and spell checking\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-typing/issues/188\n\t\t\t\tthis.selection.refresh();\n\n\t\t\t\twasFixed = callback( writer );\n\n\t\t\t\tif ( wasFixed ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} while ( wasFixed );\n\t}\n\n\t/**\n\t * Fired after each {@link module:engine/model/model~Model#enqueueChange `enqueueChange()` block} or the outermost\n\t * {@link module:engine/model/model~Model#change `change()` block} was executed and the document was changed\n\t * during that block's execution.\n\t *\n\t * The changes which this event will cover include:\n\t *\n\t * * document structure changes,\n\t * * selection changes,\n\t * * marker changes.\n\t *\n\t * If you want to be notified about all these changes, then simply listen to this event like this:\n\t *\n\t *\t\tmodel.document.on( 'change', () => {\n\t *\t\t\tconsole.log( 'The document has changed!' );\n\t *\t\t} );\n\t *\n\t * If, however, you only want to be notified about the data changes, then use the\n\t * {@link module:engine/model/document~Document#event:change:data change:data} event,\n\t * which is fired for document structure changes and marker changes (which affects the data).\n\t *\n\t *\t\tmodel.document.on( 'change:data', () => {\n\t *\t\t\tconsole.log( 'The data has changed!' );\n\t *\t\t} );\n\t *\n\t * @event change\n\t * @param {module:engine/model/batch~Batch} batch The batch that was used in the executed changes block.\n\t */\n\n\t/**\n\t * It is a narrower version of the {@link #event:change} event. It is fired for changes which\n\t * affect the editor data. This is:\n\t *\n\t * * document structure changes,\n\t * * marker changes (which affects the data).\n\t *\n\t * If you want to be notified about the data changes, then listen to this event:\n\t *\n\t *\t\tmodel.document.on( 'change:data', () => {\n\t *\t\t\tconsole.log( 'The data has changed!' );\n\t *\t\t} );\n\t *\n\t * If you would like to listen to all document changes, then check out the\n\t * {@link module:engine/model/document~Document#event:change change} event.\n\t *\n\t * @event change:data\n\t * @param {module:engine/model/batch~Batch} batch The batch that was used in the executed changes block.\n\t */\n\n\t// @if CK_DEBUG_ENGINE // log( version = null ) {\n\t// @if CK_DEBUG_ENGINE // \tversion = version === null ? this.version : version;\n\t// @if CK_DEBUG_ENGINE // \tlogDocument( this, version );\n\t// @if CK_DEBUG_ENGINE // }\n}\n\nmix( Document, EmitterMixin );\n\n// Checks whether given range boundary position is valid for document selection, meaning that is not between\n// unicode surrogate pairs or base character and combining marks.\nfunction validateTextNodePosition( rangeBoundary ) {\n\tconst textNode = rangeBoundary.textNode;\n\n\tif ( textNode ) {\n\t\tconst data = textNode.data;\n\t\tconst offset = rangeBoundary.offset - textNode.startOffset;\n\n\t\treturn !isInsideSurrogatePair( data, offset ) && !isInsideCombinedSymbol( data, offset );\n\t}\n\n\treturn true;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/markercollection\n */\n\nimport LiveRange from './liverange';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * The collection of all {@link module:engine/model/markercollection~Marker markers} attached to the document.\n * It lets you {@link module:engine/model/markercollection~MarkerCollection#get get} markers or track them using\n * {@link module:engine/model/markercollection~MarkerCollection#event:update} event.\n *\n * To create, change or remove makers use {@link module:engine/model/writer~Writer model writers'} methods:\n * {@link module:engine/model/writer~Writer#addMarker} or {@link module:engine/model/writer~Writer#removeMarker}. Since\n * the writer is the only proper way to change the data model it is not possible to change markers directly using this\n * collection. All markers created by the writer will be automatically added to this collection.\n *\n * By default there is one marker collection available as {@link module:engine/model/model~Model#markers model property}.\n *\n * @see module:engine/model/markercollection~Marker\n */\nexport default class MarkerCollection {\n\t/**\n\t * Creates a markers collection.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Stores {@link ~Marker markers} added to the collection.\n\t\t *\n\t\t * @private\n\t\t * @member {Map} #_markers\n\t\t */\n\t\tthis._markers = new Map();\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * Iterates over all {@link ~Marker markers} added to the collection.\n\t *\n\t * @returns {Iterable}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this._markers.values();\n\t}\n\n\t/**\n\t * Checks if marker with given `markerName` is in the collection.\n\t *\n\t * @param {String} markerName Marker name.\n\t * @returns {Boolean} `true` if marker with given `markerName` is in the collection, `false` otherwise.\n\t */\n\thas( markerName ) {\n\t\treturn this._markers.has( markerName );\n\t}\n\n\t/**\n\t * Returns {@link ~Marker marker} with given `markerName`.\n\t *\n\t * @param {String} markerName Name of marker to get.\n\t * @returns {module:engine/model/markercollection~Marker|null} Marker with given name or `null` if such marker was\n\t * not added to the collection.\n\t */\n\tget( markerName ) {\n\t\treturn this._markers.get( markerName ) || null;\n\t}\n\n\t/**\n\t * Creates and adds a {@link ~Marker marker} to the `MarkerCollection` with given name on given\n\t * {@link module:engine/model/range~Range range}.\n\t *\n\t * If `MarkerCollection` already had a marker with given name (or {@link ~Marker marker} was passed), the marker in\n\t * collection is updated and {@link module:engine/model/markercollection~MarkerCollection#event:update} event is fired\n\t * but only if there was a change (marker range or {@link module:engine/model/markercollection~Marker#managedUsingOperations}\n\t * flag has changed.\n\t *\n\t * @protected\n\t * @fires module:engine/model/markercollection~MarkerCollection#event:update\n\t * @param {String|module:engine/model/markercollection~Marker} markerOrName Name of marker to set or marker instance to update.\n\t * @param {module:engine/model/range~Range} range Marker range.\n\t * @param {Boolean} [managedUsingOperations=false] Specifies whether the marker is managed using operations.\n\t * @param {Boolean} [affectsData=false] Specifies whether the marker affects the data produced by the data pipeline\n\t * (is persisted in the editor's data).\n\t * @returns {module:engine/model/markercollection~Marker} `Marker` instance which was added or updated.\n\t */\n\t_set( markerOrName, range, managedUsingOperations = false, affectsData = false ) {\n\t\tconst markerName = markerOrName instanceof Marker ? markerOrName.name : markerOrName;\n\t\tconst oldMarker = this._markers.get( markerName );\n\n\t\tif ( oldMarker ) {\n\t\t\tconst oldRange = oldMarker.getRange();\n\t\t\tlet hasChanged = false;\n\n\t\t\tif ( !oldRange.isEqual( range ) ) {\n\t\t\t\toldMarker._attachLiveRange( LiveRange.fromRange( range ) );\n\t\t\t\thasChanged = true;\n\t\t\t}\n\n\t\t\tif ( managedUsingOperations != oldMarker.managedUsingOperations ) {\n\t\t\t\toldMarker._managedUsingOperations = managedUsingOperations;\n\t\t\t\thasChanged = true;\n\t\t\t}\n\n\t\t\tif ( typeof affectsData === 'boolean' && affectsData != oldMarker.affectsData ) {\n\t\t\t\toldMarker._affectsData = affectsData;\n\t\t\t\thasChanged = true;\n\t\t\t}\n\n\t\t\tif ( hasChanged ) {\n\t\t\t\tthis.fire( 'update:' + markerName, oldMarker, oldRange, range );\n\t\t\t}\n\n\t\t\treturn oldMarker;\n\t\t}\n\n\t\tconst liveRange = LiveRange.fromRange( range );\n\t\tconst marker = new Marker( markerName, liveRange, managedUsingOperations, affectsData );\n\n\t\tthis._markers.set( markerName, marker );\n\t\tthis.fire( 'update:' + markerName, marker, null, range );\n\n\t\treturn marker;\n\t}\n\n\t/**\n\t * Removes given {@link ~Marker marker} or a marker with given name from the `MarkerCollection`.\n\t *\n\t * @protected\n\t * @fires module:engine/model/markercollection~MarkerCollection#event:update\n\t * @param {String} markerOrName Marker or name of a marker to remove.\n\t * @returns {Boolean} `true` if marker was found and removed, `false` otherwise.\n\t */\n\t_remove( markerOrName ) {\n\t\tconst markerName = markerOrName instanceof Marker ? markerOrName.name : markerOrName;\n\t\tconst oldMarker = this._markers.get( markerName );\n\n\t\tif ( oldMarker ) {\n\t\t\tthis._markers.delete( markerName );\n\t\t\tthis.fire( 'update:' + markerName, oldMarker, oldMarker.getRange(), null );\n\n\t\t\tthis._destroyMarker( oldMarker );\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Fires an {@link module:engine/model/markercollection~MarkerCollection#event:update} event for the given {@link ~Marker marker}\n\t * but does not change the marker. Useful to force {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher downcast\n\t * conversion} for the marker.\n\t *\n\t * @protected\n\t * @fires module:engine/model/markercollection~MarkerCollection#event:update\n\t * @param {String} markerOrName Marker or name of a marker to refresh.\n\t */\n\t_refresh( markerOrName ) {\n\t\tconst markerName = markerOrName instanceof Marker ? markerOrName.name : markerOrName;\n\t\tconst marker = this._markers.get( markerName );\n\n\t\tif ( !marker ) {\n\t\t\tthrow new CKEditorError( 'markercollection-refresh-marker-not-exists: Marker with provided name does not exists.', this );\n\t\t}\n\n\t\tconst range = marker.getRange();\n\n\t\tthis.fire( 'update:' + markerName, marker, range, range, marker.managedUsingOperations, marker.affectsData );\n\t}\n\n\t/**\n\t * Returns iterator that iterates over all markers, which ranges contain given {@link module:engine/model/position~Position position}.\n\t *\n\t * @param {module:engine/model/position~Position} position\n\t * @returns {Iterable.<module:engine/model/markercollection~Marker>}\n\t */\n\t* getMarkersAtPosition( position ) {\n\t\tfor ( const marker of this ) {\n\t\t\tif ( marker.getRange().containsPosition( position ) ) {\n\t\t\t\tyield marker;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns iterator that iterates over all markers, which intersects with given {@link module:engine/model/range~Range range}.\n\t *\n\t * @param {module:engine/model/range~Range} range\n\t * @returns {Iterable.<module:engine/model/markercollection~Marker>}\n\t */\n\t* getMarkersIntersectingRange( range ) {\n\t\tfor ( const marker of this ) {\n\t\t\tif ( marker.getRange().getIntersection( range ) !== null ) {\n\t\t\t\tyield marker;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Destroys marker collection and all markers inside it.\n\t */\n\tdestroy() {\n\t\tfor ( const marker of this._markers.values() ) {\n\t\t\tthis._destroyMarker( marker );\n\t\t}\n\n\t\tthis._markers = null;\n\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Iterates over all markers that starts with given `prefix`.\n\t *\n\t *\t\tconst markerFooA = markersCollection.set( 'foo:a', rangeFooA );\n\t *\t\tconst markerFooB = markersCollection.set( 'foo:b', rangeFooB );\n\t *\t\tconst markerBarA = markersCollection.set( 'bar:a', rangeBarA );\n\t *\t\tconst markerFooBarA = markersCollection.set( 'foobar:a', rangeFooBarA );\n\t *\t\tArray.from( markersCollection.getMarkersGroup( 'foo' ) ); // [ markerFooA, markerFooB ]\n\t *\t\tArray.from( markersCollection.getMarkersGroup( 'a' ) ); // []\n\t *\n\t * @param prefix\n\t * @returns {Iterable.<module:engine/model/markercollection~Marker>}\n\t */\n\t* getMarkersGroup( prefix ) {\n\t\tfor ( const marker of this._markers.values() ) {\n\t\t\tif ( marker.name.startsWith( prefix + ':' ) ) {\n\t\t\t\tyield marker;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Destroys the marker.\n\t *\n\t * @private\n\t * @param {module:engine/model/markercollection~Marker} marker Marker to destroy.\n\t */\n\t_destroyMarker( marker ) {\n\t\tmarker.stopListening();\n\t\tmarker._detachLiveRange();\n\t}\n\n\t/**\n\t * Fired whenever marker is added, updated or removed from `MarkerCollection`.\n\t *\n\t * @event update\n\t * @param {module:engine/model/markercollection~Marker} marker Updated Marker.\n\t * @param {module:engine/model/range~Range|null} oldRange Marker range before the update. When is not defined it\n\t * means that marker is just added.\n\t * @param {module:engine/model/range~Range|null} newRange Marker range after update. When is not defined it\n\t * means that marker is just removed.\n\t */\n}\n\nmix( MarkerCollection, EmitterMixin );\n\n/**\n * `Marker` is a continuous parts of model (like a range), is named and represent some kind of information about marked\n * part of model document. In contrary to {@link module:engine/model/node~Node nodes}, which are building blocks of\n * model document tree, markers are not stored directly in document tree but in\n * {@link module:engine/model/model~Model#markers model markers' collection}. Still, they are document data, by giving\n * additional meaning to the part of a model document between marker start and marker end.\n *\n * In this sense, markers are similar to adding and converting attributes on nodes. The difference is that attribute is\n * connected with a given node (e.g. a character is bold no matter if it gets moved or content around it changes).\n * Markers on the other hand are continuous ranges and are characterized by their start and end position. This means that\n * any character in the marker is marked by the marker. For example, if a character is moved outside of marker it stops being\n * \"special\" and the marker is shrunk. Similarly, when a character is moved into the marker from other place in document\n * model, it starts being \"special\" and the marker is enlarged.\n *\n * Another upside of markers is that finding marked part of document is fast and easy. Using attributes to mark some nodes\n * and then trying to find that part of document would require traversing whole document tree. Marker gives instant access\n * to the range which it is marking at the moment.\n *\n * Markers are built from a name and a range.\n *\n * Range of the marker is updated automatically when document changes, using\n * {@link module:engine/model/liverange~LiveRange live range} mechanism.\n *\n * Name is used to group and identify markers. Names have to be unique, but markers can be grouped by\n * using common prefixes, separated with `:`, for example: `user:john` or `search:3`. That's useful in term of creating\n * namespaces for custom elements (e.g. comments, highlights). You can use this prefixes in\n * {@link module:engine/model/markercollection~MarkerCollection#event:update} listeners to listen on changes in a group of markers.\n * For instance: `model.markers.on( 'update:user', callback );` will be called whenever any `user:*` markers changes.\n *\n * There are two types of markers.\n *\n * 1. Markers managed directly, without using operations. They are added directly by {@link module:engine/model/writer~Writer}\n * to the {@link module:engine/model/markercollection~MarkerCollection} without any additional mechanism. They can be used\n * as bookmarks or visual markers. They are great for showing results of the find, or select link when the focus is in the input.\n *\n * 1. Markers managed using operations. These markers are also stored in {@link module:engine/model/markercollection~MarkerCollection}\n * but changes in these markers is managed the same way all other changes in the model structure - using operations.\n * Therefore, they are handled in the undo stack and synchronized between clients if the collaboration plugin is enabled.\n * This type of markers is useful for solutions like spell checking or comments.\n *\n * Both type of them should be added / updated by {@link module:engine/model/writer~Writer#addMarker}\n * and removed by {@link module:engine/model/writer~Writer#removeMarker} methods.\n *\n *\t\tmodel.change( ( writer ) => {\n * \t\t\tconst marker = writer.addMarker( name, { range, usingOperation: true } );\n *\n * \t\t\t// ...\n *\n * \t\t\twriter.removeMarker( marker );\n *\t\t} );\n *\n * See {@link module:engine/model/writer~Writer} to find more examples.\n *\n * Since markers need to track change in the document, for efficiency reasons, it is best to create and keep as little\n * markers as possible and remove them as soon as they are not needed anymore.\n *\n * Markers can be downcasted and upcasted.\n *\n * Markers downcast happens on {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker} and\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:removeMarker} events.\n * Use {@link module:engine/conversion/downcasthelpers downcast converters} or attach a custom converter to mentioned events.\n * For {@link module:engine/controller/datacontroller~DataController data pipeline}, marker should be downcasted to an element.\n * Then, it can be upcasted back to a marker. Again, use {@link module:engine/conversion/upcasthelpers upcast converters} or\n * attach a custom converter to {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element}.\n *\n * `Marker` instances are created and destroyed only by {@link ~MarkerCollection MarkerCollection}.\n */\nclass Marker {\n\t/**\n\t * Creates a marker instance.\n\t *\n\t * @param {String} name Marker name.\n\t * @param {module:engine/model/liverange~LiveRange} liveRange Range marked by the marker.\n\t * @param {Boolean} managedUsingOperations Specifies whether the marker is managed using operations.\n\t * @param {Boolean} affectsData Specifies whether the marker affects the data produced by the data pipeline\n\t * (is persisted in the editor's data).\n\t */\n\tconstructor( name, liveRange, managedUsingOperations, affectsData ) {\n\t\t/**\n\t\t * Marker's name.\n\t\t *\n\t\t * @readonly\n\t\t * @type {String}\n\t\t */\n\t\tthis.name = name;\n\n\t\t/**\n\t\t * Range marked by the marker.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:engine/model/liverange~LiveRange}\n\t\t */\n\t\tthis._liveRange = this._attachLiveRange( liveRange );\n\n\t\t/**\n\t\t * Flag indicates if the marker is managed using operations or not.\n\t\t *\n\t\t * @private\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis._managedUsingOperations = managedUsingOperations;\n\n\t\t/**\n\t\t * Specifies whether the marker affects the data produced by the data pipeline\n\t\t * (is persisted in the editor's data).\n\t\t *\n\t\t * @private\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis._affectsData = affectsData;\n\t}\n\n\t/**\n\t * A value indicating if the marker is managed using operations.\n\t * See {@link ~Marker marker class description} to learn more about marker types.\n\t * See {@link module:engine/model/writer~Writer#addMarker}.\n\t *\n\t * @returns {Boolean}\n\t */\n\tget managedUsingOperations() {\n\t\tif ( !this._liveRange ) {\n\t\t\tthrow new CKEditorError( 'marker-destroyed: Cannot use a destroyed marker instance.', this );\n\t\t}\n\n\t\treturn this._managedUsingOperations;\n\t}\n\n\t/**\n\t * A value indicating if the marker changes the data.\n\t *\n\t * @returns {Boolean}\n\t */\n\tget affectsData() {\n\t\tif ( !this._liveRange ) {\n\t\t\tthrow new CKEditorError( 'marker-destroyed: Cannot use a destroyed marker instance.', this );\n\t\t}\n\n\t\treturn this._affectsData;\n\t}\n\n\t/**\n\t * Returns current marker start position.\n\t *\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tgetStart() {\n\t\tif ( !this._liveRange ) {\n\t\t\tthrow new CKEditorError( 'marker-destroyed: Cannot use a destroyed marker instance.', this );\n\t\t}\n\n\t\treturn this._liveRange.start.clone();\n\t}\n\n\t/**\n\t * Returns current marker end position.\n\t *\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tgetEnd() {\n\t\tif ( !this._liveRange ) {\n\t\t\tthrow new CKEditorError( 'marker-destroyed: Cannot use a destroyed marker instance.', this );\n\t\t}\n\n\t\treturn this._liveRange.end.clone();\n\t}\n\n\t/**\n\t * Returns a range that represents the current state of the marker.\n\t *\n\t * Keep in mind that returned value is a {@link module:engine/model/range~Range Range}, not a\n\t * {@link module:engine/model/liverange~LiveRange LiveRange}. This means that it is up-to-date and relevant only\n\t * until next model document change. Do not store values returned by this method. Instead, store {@link ~Marker#name}\n\t * and get `Marker` instance from {@link module:engine/model/markercollection~MarkerCollection MarkerCollection} every\n\t * time there is a need to read marker properties. This will guarantee that the marker has not been removed and\n\t * that it's data is up-to-date.\n\t *\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tgetRange() {\n\t\tif ( !this._liveRange ) {\n\t\t\tthrow new CKEditorError( 'marker-destroyed: Cannot use a destroyed marker instance.', this );\n\t\t}\n\n\t\treturn this._liveRange.toRange();\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\tmarker.is( 'marker' ); // -> true\n\t *\t\tmarker.is( 'model:marker' ); // -> true\n\t *\n\t *\t\tmarker.is( 'view:element' ); // -> false\n\t *\t\tmarker.is( 'documentSelection' ); // -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type == 'marker' || type == 'model:marker';\n\t}\n\n\t/**\n\t * Binds new live range to the marker and detach the old one if is attached.\n\t *\n\t * @protected\n\t * @param {module:engine/model/liverange~LiveRange} liveRange Live range to attach\n\t * @returns {module:engine/model/liverange~LiveRange} Attached live range.\n\t */\n\t_attachLiveRange( liveRange ) {\n\t\tif ( this._liveRange ) {\n\t\t\tthis._detachLiveRange();\n\t\t}\n\n\t\t// Delegating does not work with namespaces. Alternatively, we could delegate all events (using `*`).\n\t\tliveRange.delegate( 'change:range' ).to( this );\n\t\tliveRange.delegate( 'change:content' ).to( this );\n\n\t\tthis._liveRange = liveRange;\n\n\t\treturn liveRange;\n\t}\n\n\t/**\n\t * Unbinds and destroys currently attached live range.\n\t *\n\t * @protected\n\t */\n\t_detachLiveRange() {\n\t\tthis._liveRange.stopDelegating( 'change:range', this );\n\t\tthis._liveRange.stopDelegating( 'change:content', this );\n\t\tthis._liveRange.detach();\n\t\tthis._liveRange = null;\n\t}\n\n\t/**\n\t * Fired whenever {@link ~Marker#_liveRange marker range} is changed due to changes on {@link module:engine/model/document~Document}.\n\t * This is a delegated {@link module:engine/model/liverange~LiveRange#event:change:range LiveRange change:range event}.\n\t *\n\t * When marker is removed from {@link module:engine/model/markercollection~MarkerCollection MarkerCollection},\n\t * all event listeners listening to it should be removed. It is best to do it on\n\t * {@link module:engine/model/markercollection~MarkerCollection#event:update MarkerCollection update event}.\n\t *\n\t * @see module:engine/model/liverange~LiveRange#event:change:range\n\t * @event change:range\n\t * @param {module:engine/model/range~Range} oldRange\n\t * @param {Object} data\n\t */\n\n\t/**\n\t * Fired whenever change on {@link module:engine/model/document~Document} is done inside {@link ~Marker#_liveRange marker range}.\n\t * This is a delegated {@link module:engine/model/liverange~LiveRange#event:change:content LiveRange change:content event}.\n\t *\n\t * When marker is removed from {@link module:engine/model/markercollection~MarkerCollection MarkerCollection},\n\t * all event listeners listening to it should be removed. It is best to do it on\n\t * {@link module:engine/model/markercollection~MarkerCollection#event:update MarkerCollection update event}.\n\t *\n\t * @see module:engine/model/liverange~LiveRange#event:change:content\n\t * @event change:content\n\t * @param {module:engine/model/range~Range} oldRange\n\t * @param {Object} data\n\t */\n}\n\nmix( Marker, EmitterMixin );\n\n/**\n * Cannot use a {@link module:engine/model/markercollection~MarkerCollection#destroy destroyed marker} instance.\n *\n * @error marker-destroyed\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/nooperation\n */\n\nimport Operation from './operation';\n\n/**\n * Operation which is doing nothing (\"empty operation\", \"do-nothing operation\", \"noop\"). This is an operation,\n * which when executed does not change the tree model. It still has some parameters defined for transformation purposes.\n *\n * In most cases this operation is a result of transforming operations. When transformation returns\n * {@link module:engine/model/operation/nooperation~NoOperation} it means that changes done by the transformed operation\n * have already been applied.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class NoOperation extends Operation {\n\tget type() {\n\t\treturn 'noop';\n\t}\n\n\t/**\n\t * Creates and returns an operation that has the same parameters as this operation.\n\t *\n\t * @returns {module:engine/model/operation/nooperation~NoOperation} Clone of this operation.\n\t */\n\tclone() {\n\t\treturn new NoOperation( this.baseVersion );\n\t}\n\n\t/**\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n\t *\n\t * @returns {module:engine/model/operation/nooperation~NoOperation}\n\t */\n\tgetReversed() {\n\t\treturn new NoOperation( this.baseVersion + 1 );\n\t}\n\n\t_execute() {\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'NoOperation';\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `NoOperation( ${ this.baseVersion } )`;\n\t// @if CK_DEBUG_ENGINE // }\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/operationfactory\n */\n\nimport AttributeOperation from '../operation/attributeoperation';\nimport InsertOperation from '../operation/insertoperation';\nimport MarkerOperation from '../operation/markeroperation';\nimport MoveOperation from '../operation/moveoperation';\nimport NoOperation from '../operation/nooperation';\nimport Operation from '../operation/operation';\nimport RenameOperation from '../operation/renameoperation';\nimport RootAttributeOperation from '../operation/rootattributeoperation';\nimport SplitOperation from '../operation/splitoperation';\nimport MergeOperation from '../operation/mergeoperation';\n\nconst operations = {};\noperations[ AttributeOperation.className ] = AttributeOperation;\noperations[ InsertOperation.className ] = InsertOperation;\noperations[ MarkerOperation.className ] = MarkerOperation;\noperations[ MoveOperation.className ] = MoveOperation;\noperations[ NoOperation.className ] = NoOperation;\noperations[ Operation.className ] = Operation;\noperations[ RenameOperation.className ] = RenameOperation;\noperations[ RootAttributeOperation.className ] = RootAttributeOperation;\noperations[ SplitOperation.className ] = SplitOperation;\noperations[ MergeOperation.className ] = MergeOperation;\n\n/**\n * A factory class for creating operations.\n *\n * @abstract\n */\nexport default class OperationFactory {\n\t/**\n\t * Creates an operation instance from a JSON object (parsed JSON string).\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/operation~Operation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\treturn operations[ json.__className ].fromJSON( json, document );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/liveposition\n */\n\nimport Position from './position';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * `LivePosition` is a type of {@link module:engine/model/position~Position Position}\n * that updates itself as {@link module:engine/model/document~Document document}\n * is changed through operations. It may be used as a bookmark.\n *\n * **Note:** Contrary to {@link module:engine/model/position~Position}, `LivePosition` works only in roots that are\n * {@link module:engine/model/rootelement~RootElement}.\n * If {@link module:engine/model/documentfragment~DocumentFragment} is passed, error will be thrown.\n *\n * **Note:** Be very careful when dealing with `LivePosition`. Each `LivePosition` instance bind events that might\n * have to be unbound.\n * Use {@link module:engine/model/liveposition~LivePosition#detach} whenever you don't need `LivePosition` anymore.\n *\n * @extends module:engine/model/position~Position\n */\nexport default class LivePosition extends Position {\n\t/**\n\t * Creates a live position.\n\t *\n\t * @see module:engine/model/position~Position\n\t * @param {module:engine/model/rootelement~RootElement} root\n\t * @param {Array.<Number>} path\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness]\n\t */\n\tconstructor( root, path, stickiness = 'toNone' ) {\n\t\tsuper( root, path, stickiness );\n\n\t\tif ( !this.root.is( 'rootElement' ) ) {\n\t\t\t/**\n\t\t\t * LivePosition's root has to be an instance of RootElement.\n\t\t\t *\n\t\t\t * @error liveposition-root-not-rootelement\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-liveposition-root-not-rootelement: LivePosition\\'s root has to be an instance of RootElement.',\n\t\t\t\troot\n\t\t\t);\n\t\t}\n\n\t\tbindWithDocument.call( this );\n\t}\n\n\t/**\n\t * Unbinds all events previously bound by `LivePosition`. Use it whenever you don't need `LivePosition` instance\n\t * anymore (i.e. when leaving scope in which it was declared or before re-assigning variable that was\n\t * referring to it).\n\t */\n\tdetach() {\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\tlivePosition.is( 'position' ); // -> true\n\t *\t\tlivePosition.is( 'model:position' ); // -> true\n\t *\t\tlivePosition.is( 'liveposition' ); // -> true\n\t *\t\tlivePosition.is( 'model:livePosition' ); // -> true\n\t *\n\t *\t\tlivePosition.is( 'view:position' ); // -> false\n\t *\t\tlivePosition.is( 'documentSelection' ); // -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type == 'livePosition' || type == 'model:livePosition' || super.is( type );\n\t}\n\n\t/**\n\t * Creates a {@link module:engine/model/position~Position position instance}, which is equal to this live position.\n\t *\n\t * @returns {module:engine/model/position~Position}\n\t */\n\ttoPosition() {\n\t\treturn new Position( this.root, this.path.slice(), this.stickiness );\n\t}\n\n\t/**\n\t * Creates a `LivePosition` instance that is equal to position.\n\t *\n\t * @param {module:engine/model/position~Position} position\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness]\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tstatic fromPosition( position, stickiness ) {\n\t\treturn new this( position.root, position.path.slice(), stickiness ? stickiness : position.stickiness );\n\t}\n\n\t/**\n\t * @static\n\t * @protected\n\t * @method module:engine/model/liveposition~LivePosition._createAfter\n\t * @see module:engine/model/position~Position._createAfter\n\t * @param {module:engine/model/node~Node} node\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone']\n\t * @returns {module:engine/model/liveposition~LivePosition}\n\t */\n\n\t/**\n\t * @static\n\t * @protected\n\t * @method module:engine/model/liveposition~LivePosition._createBefore\n\t * @see module:engine/model/position~Position._createBefore\n\t * @param {module:engine/model/node~Node} node\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone']\n\t * @returns {module:engine/model/liveposition~LivePosition}\n\t */\n\n\t/**\n\t * @static\n\t * @protected\n\t * @method module:engine/model/liveposition~LivePosition._createAt\n\t * @see module:engine/model/position~Position._createAt\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset]\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone']\n\t * @returns {module:engine/model/liveposition~LivePosition}\n\t */\n\n\t/**\n\t * Fired when `LivePosition` instance is changed due to changes on {@link module:engine/model/document~Document}.\n\t *\n\t * @event module:engine/model/liveposition~LivePosition#change\n\t * @param {module:engine/model/position~Position} oldPosition Position equal to this live position before it got changed.\n\t */\n}\n\n// Binds this `LivePosition` to the {@link module:engine/model/document~Document document} that owns\n// this position's {@link module:engine/model/position~Position#root root}.\n//\n// @private\nfunction bindWithDocument() {\n\tthis.listenTo(\n\t\tthis.root.document.model,\n\t\t'applyOperation',\n\t\t( event, args ) => {\n\t\t\tconst operation = args[ 0 ];\n\n\t\t\tif ( !operation.isDocumentOperation ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttransform.call( this, operation );\n\t\t},\n\t\t{ priority: 'low' }\n\t);\n}\n\n// Updates this position accordingly to the updates applied to the model. Bases on change events.\n//\n// @private\n// @param {module:engine/model/operation/operation~Operation} operation Executed operation.\nfunction transform( operation ) {\n\tconst result = this.getTransformedByOperation( operation );\n\n\tif ( !this.isEqual( result ) ) {\n\t\tconst oldPosition = this.toPosition();\n\n\t\tthis.path = result.path;\n\t\tthis.root = result.root;\n\n\t\tthis.fire( 'change', oldPosition );\n\t}\n}\n\nmix( LivePosition, EmitterMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/utils/insertcontent\n */\n\nimport Position from '../position';\nimport LivePosition from '../liveposition';\nimport Element from '../element';\nimport Range from '../range';\nimport DocumentSelection from '../documentselection';\nimport Selection from '../selection';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Inserts content into the editor (specified selection) as one would expect the paste\n * functionality to work.\n *\n * If an instance of {@link module:engine/model/selection~Selection} is passed as `selectable` it will be modified\n * to the insertion selection (equal to a range to be selected after insertion).\n *\n * If `selectable` is not passed, the content will be inserted using the current selection of the model document.\n *\n * **Note:** Use {@link module:engine/model/model~Model#insertContent} instead of this function.\n * This function is only exposed to be reusable in algorithms which change the {@link module:engine/model/model~Model#insertContent}\n * method's behavior.\n *\n * @param {module:engine/model/model~Model} model The model in context of which the insertion\n * should be performed.\n * @param {module:engine/model/documentfragment~DocumentFragment|module:engine/model/item~Item} content The content to insert.\n * @param {module:engine/model/selection~Selectable} [selectable=model.document.selection]\n * Selection into which the content should be inserted.\n * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n * @returns {module:engine/model/range~Range} Range which contains all the performed changes. This is a range that, if removed,\n * would return the model to the state before the insertion. If no changes were preformed by `insertContent`, returns a range collapsed\n * at the insertion position.\n */\nexport default function insertContent( model, content, selectable, placeOrOffset ) {\n\treturn model.change( writer => {\n\t\tlet selection;\n\n\t\tif ( !selectable ) {\n\t\t\tselection = model.document.selection;\n\t\t} else if ( selectable instanceof Selection || selectable instanceof DocumentSelection ) {\n\t\t\tselection = selectable;\n\t\t} else {\n\t\t\tselection = writer.createSelection( selectable, placeOrOffset );\n\t\t}\n\n\t\tconst insertionPosition = selection.getFirstPosition();\n\n\t\tif ( !selection.isCollapsed ) {\n\t\t\tmodel.deleteContent( selection, { doNotAutoparagraph: true } );\n\t\t}\n\n\t\tconst insertion = new Insertion( model, writer, insertionPosition );\n\n\t\tlet nodesToInsert;\n\n\t\tif ( content.is( 'documentFragment' ) ) {\n\t\t\tnodesToInsert = content.getChildren();\n\t\t} else {\n\t\t\tnodesToInsert = [ content ];\n\t\t}\n\n\t\tinsertion.handleNodes( nodesToInsert, {\n\t\t\t// The set of children being inserted is the only set in this context\n\t\t\t// so it's the first and last (it's a hack ;)).\n\t\t\tisFirst: true,\n\t\t\tisLast: true\n\t\t} );\n\n\t\tconst newRange = insertion.getSelectionRange();\n\n\t\t/* istanbul ignore else */\n\t\tif ( newRange ) {\n\t\t\tif ( selection instanceof DocumentSelection ) {\n\t\t\t\twriter.setSelection( newRange );\n\t\t\t} else {\n\t\t\t\tselection.setTo( newRange );\n\t\t\t}\n\t\t} else {\n\t\t\t// We are not testing else because it's a safe check for unpredictable edge cases:\n\t\t\t// an insertion without proper range to select.\n\t\t\t//\n\t\t\t// @if CK_DEBUG // console.warn( 'Cannot determine a proper selection range after insertion.' );\n\t\t}\n\n\t\tconst affectedRange = insertion.getAffectedRange() || model.createRange( insertionPosition );\n\n\t\tinsertion.destroy();\n\n\t\treturn affectedRange;\n\t} );\n}\n\n/**\n * Utility class for performing content insertion.\n *\n * @private\n */\nclass Insertion {\n\tconstructor( model, writer, position ) {\n\t\t/**\n\t\t * The model in context of which the insertion should be performed.\n\t\t *\n\t\t * @member {module:engine/model~Model} #model\n\t\t */\n\t\tthis.model = model;\n\n\t\t/**\n\t\t * Batch to which operations will be added.\n\t\t *\n\t\t * @member {module:engine/controller/writer~Batch} #writer\n\t\t */\n\t\tthis.writer = writer;\n\n\t\t/**\n\t\t * The position at which (or near which) the next node will be inserted.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} #position\n\t\t */\n\t\tthis.position = position;\n\n\t\t/**\n\t\t * Elements with which the inserted elements can be merged.\n\t\t *\n\t\t *\t\t<p>x^</p><p>y</p> + <p>z</p> (can merge to <p>x</p>)\n\t\t *\t\t<p>x</p><p>^y</p> + <p>z</p> (can merge to <p>y</p>)\n\t\t *\t\t<p>x^y</p> + <p>z</p> (can merge to <p>xy</p> which will be split during the action,\n\t\t *\t\t\t\t\t\t\t\tso both its pieces will be added to this set)\n\t\t *\n\t\t *\n\t\t * @member {Set} #canMergeWith\n\t\t */\n\t\tthis.canMergeWith = new Set( [ this.position.parent ] );\n\n\t\t/**\n\t\t * Schema of the model.\n\t\t *\n\t\t * @member {module:engine/model/schema~Schema} #schema\n\t\t */\n\t\tthis.schema = model.schema;\n\n\t\tthis._filterAttributesOf = [];\n\n\t\t/**\n\t\t * Beginning of the affected range. See {@link module:engine/model/utils/insertcontent~Insertion#getAffectedRange}.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/liveposition~LivePosition|null} #_affectedStart\n\t\t */\n\t\tthis._affectedStart = null;\n\n\t\t/**\n\t\t * End of the affected range. See {@link module:engine/model/utils/insertcontent~Insertion#getAffectedRange}.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/liveposition~LivePosition|null} #_affectedEnd\n\t\t */\n\t\tthis._affectedEnd = null;\n\t}\n\n\t/**\n\t * Handles insertion of a set of nodes.\n\t *\n\t * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes to insert.\n\t * @param {Object} parentContext Context in which parent of these nodes was supposed to be inserted.\n\t * If the parent context is passed it means that the parent element was stripped (was not allowed).\n\t */\n\thandleNodes( nodes, parentContext ) {\n\t\tnodes = Array.from( nodes );\n\n\t\tfor ( let i = 0; i < nodes.length; i++ ) {\n\t\t\tconst node = nodes[ i ];\n\n\t\t\tthis._handleNode( node, {\n\t\t\t\tisFirst: i === 0 && parentContext.isFirst,\n\t\t\t\tisLast: ( i === ( nodes.length - 1 ) ) && parentContext.isLast\n\t\t\t} );\n\t\t}\n\n\t\t// TMP this will become a post-fixer.\n\t\tthis.schema.removeDisallowedAttributes( this._filterAttributesOf, this.writer );\n\t\tthis._filterAttributesOf = [];\n\t}\n\n\t/**\n\t * Returns range to be selected after insertion.\n\t * Returns `null` if there is no valid range to select after insertion.\n\t *\n\t * @returns {module:engine/model/range~Range|null}\n\t */\n\tgetSelectionRange() {\n\t\tif ( this.nodeToSelect ) {\n\t\t\treturn Range._createOn( this.nodeToSelect );\n\t\t}\n\n\t\treturn this.model.schema.getNearestSelectionRange( this.position );\n\t}\n\n\t/**\n\t * Returns a range which contains all the performed changes. This is a range that, if removed, would return the model to the state\n\t * before the insertion. Returns `null` if no changes were done.\n\t *\n\t * @returns {module:engine/model/range~Range|null}\n\t */\n\tgetAffectedRange() {\n\t\tif ( !this._affectedStart ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn new Range( this._affectedStart, this._affectedEnd );\n\t}\n\n\t/**\n\t * Destroys `Insertion` instance.\n\t */\n\tdestroy() {\n\t\tif ( this._affectedStart ) {\n\t\t\tthis._affectedStart.detach();\n\t\t}\n\n\t\tif ( this._affectedEnd ) {\n\t\t\tthis._affectedEnd.detach();\n\t\t}\n\t}\n\n\t/**\n\t * Handles insertion of a single node.\n\t *\n\t * @private\n\t * @param {module:engine/model/node~Node} node\n\t * @param {Object} context\n\t * @param {Boolean} context.isFirst Whether the given node is the first one in the content to be inserted.\n\t * @param {Boolean} context.isLast Whether the given node is the last one in the content to be inserted.\n\t */\n\t_handleNode( node, context ) {\n\t\t// Let's handle object in a special way.\n\t\t// * They should never be merged with other elements.\n\t\t// * If they are not allowed in any of the selection ancestors, they could be either autoparagraphed or totally removed.\n\t\tif ( this.schema.isObject( node ) ) {\n\t\t\tthis._handleObject( node, context );\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Try to find a place for the given node.\n\t\t// Split the position.parent's branch up to a point where the node can be inserted.\n\t\t// If it isn't allowed in the whole branch, then of course don't split anything.\n\t\tconst isAllowed = this._checkAndSplitToAllowedPosition( node, context );\n\n\t\tif ( !isAllowed ) {\n\t\t\tthis._handleDisallowedNode( node, context );\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis._insert( node );\n\n\t\t// After the node was inserted we may try to merge it with its siblings.\n\t\t// This should happen only if it was the first and/or last of the nodes (so only with boundary nodes)\n\t\t// and only if the selection was in those elements initially.\n\t\t//\n\t\t// E.g.:\n\t\t// <p>x^</p> + <p>y</p> => <p>x</p><p>y</p> => <p>xy[]</p>\n\t\t// and:\n\t\t// <p>x^y</p> + <p>z</p> => <p>x</p>^<p>y</p> + <p>z</p> => <p>x</p><p>z</p><p>y</p> => <p>xz[]y</p>\n\t\t// but:\n\t\t// <p>x</p><p>^</p><p>z</p> + <p>y</p> => <p>x</p><p>y</p><p>z</p> (no merging)\n\t\t// <p>x</p>[<img>]<p>z</p> + <p>y</p> => <p>x</p><p>y</p><p>z</p> (no merging, note: after running deleteContents\n\t\t//\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t it's exactly the same case as above)\n\t\tthis._mergeSiblingsOf( node, context );\n\t}\n\n\t/**\n\t * @private\n\t * @param {module:engine/model/element~Element} node The object element.\n\t * @param {Object} context\n\t */\n\t_handleObject( node, context ) {\n\t\t// Try finding it a place in the tree.\n\t\tif ( this._checkAndSplitToAllowedPosition( node ) ) {\n\t\t\tthis._insert( node );\n\t\t}\n\t\t// Try autoparagraphing.\n\t\telse {\n\t\t\tthis._tryAutoparagraphing( node, context );\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @param {module:engine/model/node~Node} node The disallowed node which needs to be handled.\n\t * @param {Object} context\n\t */\n\t_handleDisallowedNode( node, context ) {\n\t\t// If the node is an element, try inserting its children (strip the parent).\n\t\tif ( node.is( 'element' ) ) {\n\t\t\tthis.handleNodes( node.getChildren(), context );\n\t\t}\n\t\t// If text is not allowed, try autoparagraphing it.\n\t\telse {\n\t\t\tthis._tryAutoparagraphing( node, context );\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @param {module:engine/model/node~Node} node The node to insert.\n\t */\n\t_insert( node ) {\n\t\t/* istanbul ignore if */\n\t\tif ( !this.schema.checkChild( this.position, node ) ) {\n\t\t\t// Algorithm's correctness check. We should never end up here but it's good to know that we did.\n\t\t\t// Note that it would often be a silent issue if we insert node in a place where it's not allowed.\n\n\t\t\t/**\n\t\t\t * Given node cannot be inserted on the given position.\n\t\t\t *\n\t\t\t * @error insertcontent-wrong-position\n\t\t\t * @param {module:engine/model/node~Node} node Node to insert.\n\t\t\t * @param {module:engine/model/position~Position} position Position to insert the node at.\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'insertcontent-wrong-position: Given node cannot be inserted on the given position.',\n\t\t\t\tthis,\n\t\t\t\t{ node, position: this.position }\n\t\t\t);\n\t\t}\n\n\t\tconst livePos = LivePosition.fromPosition( this.position, 'toNext' );\n\n\t\tthis._setAffectedBoundaries( this.position );\n\t\tthis.writer.insert( node, this.position );\n\n\t\tthis.position = livePos.toPosition();\n\t\tlivePos.detach();\n\n\t\t// The last inserted object should be selected because we can't put a collapsed selection after it.\n\t\tif ( this.schema.isObject( node ) && !this.schema.checkChild( this.position, '$text' ) ) {\n\t\t\tthis.nodeToSelect = node;\n\t\t} else {\n\t\t\tthis.nodeToSelect = null;\n\t\t}\n\n\t\tthis._filterAttributesOf.push( node );\n\t}\n\n\t/**\n\t * Sets `_affectedStart` and `_affectedEnd` to the given `position`. Should be used before a change is done during insertion process to\n\t * mark the affected range.\n\t *\n\t * This method is used before inserting a node or splitting a parent node. `_affectedStart` and `_affectedEnd` are also changed\n\t * during merging, but the logic there is more complicated so it is left out of this function.\n\t *\n\t * @private\n\t * @param {module:engine/model/position~Position} position\n\t */\n\t_setAffectedBoundaries( position ) {\n\t\t// Set affected boundaries stickiness so that those position will \"expand\" when something is inserted in between them:\n\t\t// <paragraph>Foo][bar</paragraph> -> <paragraph>Foo]xx[bar</paragraph>\n\t\t// This is why it cannot be a range but two separate positions.\n\t\tif ( !this._affectedStart ) {\n\t\t\tthis._affectedStart = LivePosition.fromPosition( position, 'toPrevious' );\n\t\t}\n\n\t\t// If `_affectedEnd` is before the new boundary position, expand `_affectedEnd`. This can happen if first inserted node was\n\t\t// inserted into the parent but the next node is moved-out of that parent:\n\t\t// (1) <paragraph>Foo][</paragraph> -> <paragraph>Foo]xx[</paragraph>\n\t\t// (2) <paragraph>Foo]xx[</paragraph> -> <paragraph>Foo]xx</paragraph><widget></widget>[\n\t\tif ( !this._affectedEnd || this._affectedEnd.isBefore( position ) ) {\n\t\t\tif ( this._affectedEnd ) {\n\t\t\t\tthis._affectedEnd.detach();\n\t\t\t}\n\n\t\t\tthis._affectedEnd = LivePosition.fromPosition( position, 'toNext' );\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @param {module:engine/model/node~Node} node The node which could potentially be merged.\n\t * @param {Object} context\n\t */\n\t_mergeSiblingsOf( node, context ) {\n\t\tif ( !( node instanceof Element ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst mergeLeft = this._canMergeLeft( node, context );\n\t\tconst mergeRight = this._canMergeRight( node, context );\n\t\tconst mergePosLeft = LivePosition._createBefore( node );\n\t\tmergePosLeft.stickiness = 'toNext';\n\t\tconst mergePosRight = LivePosition._createAfter( node );\n\t\tmergePosRight.stickiness = 'toNext';\n\n\t\tif ( mergeLeft ) {\n\t\t\tconst livePosition = LivePosition.fromPosition( this.position );\n\t\t\tlivePosition.stickiness = 'toNext';\n\n\t\t\t// If `_affectedStart` is sames as merge position, it means that the element \"marked\" by `_affectedStart` is going to be\n\t\t\t// removed and its contents will be moved. This won't transform `LivePosition` so `_affectedStart` needs to be moved\n\t\t\t// by hand to properly reflect affected range. (Due to `_affectedStart` and `_affectedEnd` stickiness, the \"range\" is\n\t\t\t// shown as `][`).\n\t\t\t//\n\t\t\t// Example - insert `<paragraph>Abc</paragraph><paragraph>Xyz</paragraph>` at the end of `<paragraph>Foo^</paragraph>`:\n\t\t\t//\n\t\t\t// <paragraph>Foo</paragraph><paragraph>Bar</paragraph>   -->\n\t\t\t// <paragraph>Foo</paragraph>]<paragraph>Abc</paragraph><paragraph>Xyz</paragraph>[<paragraph>Bar</paragraph>   -->\n\t\t\t// <paragraph>Foo]Abc</paragraph><paragraph>Xyz</paragraph>[<paragraph>Bar</paragraph>\n\t\t\t//\n\t\t\t// Note, that if we are here then something must have been inserted, so `_affectedStart` and `_affectedEnd` have to be set.\n\t\t\tif ( this._affectedStart.isEqual( mergePosLeft ) ) {\n\t\t\t\tthis._affectedStart.detach();\n\t\t\t\tthis._affectedStart = LivePosition._createAt( mergePosLeft.nodeBefore, 'end', 'toPrevious' );\n\t\t\t}\n\n\t\t\tthis.writer.merge( mergePosLeft );\n\n\t\t\t// If only one element (the merged one) is in the \"affected range\", also move the affected range end appropriately.\n\t\t\t//\n\t\t\t// Example - insert `<paragraph>Abc</paragraph>` at the of `<paragraph>Foo^</paragraph>`:\n\t\t\t//\n\t\t\t// <paragraph>Foo</paragraph><paragraph>Bar</paragraph>   -->\n\t\t\t// <paragraph>Foo</paragraph>]<paragraph>Abc</paragraph>[<paragraph>Bar</paragraph>   -->\n\t\t\t// <paragraph>Foo]Abc</paragraph>[<paragraph>Bar</paragraph>   -->\n\t\t\t// <paragraph>Foo]Abc[</paragraph><paragraph>Bar</paragraph>\n\t\t\tif ( mergePosLeft.isEqual( this._affectedEnd ) && context.isLast ) {\n\t\t\t\tthis._affectedEnd.detach();\n\t\t\t\tthis._affectedEnd = LivePosition._createAt( mergePosLeft.nodeBefore, 'end', 'toNext' );\n\t\t\t}\n\n\t\t\tthis.position = livePosition.toPosition();\n\t\t\tlivePosition.detach();\n\t\t}\n\n\t\tif ( mergeRight ) {\n\t\t\t/* istanbul ignore if */\n\t\t\tif ( !this.position.isEqual( mergePosRight ) ) {\n\t\t\t\t// Algorithm's correctness check. We should never end up here but it's good to know that we did.\n\t\t\t\t// At this point the insertion position should be after the node we'll merge. If it isn't,\n\t\t\t\t// it should need to be secured as in the left merge case.\n\t\t\t\t/**\n\t\t\t\t * An internal error occured during merging insertion content with siblings.\n\t\t\t\t * The insertion position should equal to the merge position.\n\t\t\t\t *\n\t\t\t\t * @error insertcontent-invalid-insertion-position\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'insertcontent-invalid-insertion-position', this );\n\t\t\t}\n\n\t\t\t// Move the position to the previous node, so it isn't moved to the graveyard on merge.\n\t\t\t// <p>x</p>[]<p>y</p> => <p>x[]</p><p>y</p>\n\t\t\tthis.position = Position._createAt( mergePosRight.nodeBefore, 'end' );\n\n\t\t\t// OK:  <p>xx[]</p> + <p>yy</p> => <p>xx[]yy</p> (when sticks to previous)\n\t\t\t// NOK: <p>xx[]</p> + <p>yy</p> => <p>xxyy[]</p> (when sticks to next)\n\t\t\tconst livePosition = LivePosition.fromPosition( this.position, 'toPrevious' );\n\n\t\t\t// See comment above on moving `_affectedStart`.\n\t\t\tif ( this._affectedEnd.isEqual( mergePosRight ) ) {\n\t\t\t\tthis._affectedEnd.detach();\n\t\t\t\tthis._affectedEnd = LivePosition._createAt( mergePosRight.nodeBefore, 'end', 'toNext' );\n\t\t\t}\n\n\t\t\tthis.writer.merge( mergePosRight );\n\n\t\t\t// See comment above on moving `_affectedStart`.\n\t\t\tif ( mergePosRight.getShiftedBy( -1 ).isEqual( this._affectedStart ) && context.isFirst ) {\n\t\t\t\tthis._affectedStart.detach();\n\t\t\t\tthis._affectedStart = LivePosition._createAt( mergePosRight.nodeBefore, 0, 'toPrevious' );\n\t\t\t}\n\n\t\t\tthis.position = livePosition.toPosition();\n\t\t\tlivePosition.detach();\n\t\t}\n\n\t\tif ( mergeLeft || mergeRight ) {\n\t\t\t// After merge elements that were marked by _insert() to be filtered might be gone so\n\t\t\t// we need to mark the new container.\n\t\t\tthis._filterAttributesOf.push( this.position.parent );\n\t\t}\n\n\t\tmergePosLeft.detach();\n\t\tmergePosRight.detach();\n\t}\n\n\t/**\n\t * Checks whether specified node can be merged with previous sibling element.\n\t *\n\t * @private\n\t * @param {module:engine/model/node~Node} node The node which could potentially be merged.\n\t * @param {Object} context\n\t * @returns {Boolean}\n\t */\n\t_canMergeLeft( node, context ) {\n\t\tconst previousSibling = node.previousSibling;\n\n\t\treturn context.isFirst &&\n\t\t\t( previousSibling instanceof Element ) &&\n\t\t\tthis.canMergeWith.has( previousSibling ) &&\n\t\t\tthis.model.schema.checkMerge( previousSibling, node );\n\t}\n\n\t/**\n\t * Checks whether specified node can be merged with next sibling element.\n\t *\n\t * @private\n\t * @param {module:engine/model/node~Node} node The node which could potentially be merged.\n\t * @param {Object} context\n\t * @returns {Boolean}\n\t */\n\t_canMergeRight( node, context ) {\n\t\tconst nextSibling = node.nextSibling;\n\n\t\treturn context.isLast &&\n\t\t\t( nextSibling instanceof Element ) &&\n\t\t\tthis.canMergeWith.has( nextSibling ) &&\n\t\t\tthis.model.schema.checkMerge( node, nextSibling );\n\t}\n\n\t/**\n\t * Tries wrapping the node in a new paragraph and inserting it this way.\n\t *\n\t * @private\n\t * @param {module:engine/model/node~Node} node The node which needs to be autoparagraphed.\n\t * @param {Object} context\n\t */\n\t_tryAutoparagraphing( node, context ) {\n\t\tconst paragraph = this.writer.createElement( 'paragraph' );\n\n\t\t// Do not autoparagraph if the paragraph won't be allowed there,\n\t\t// cause that would lead to an infinite loop. The paragraph would be rejected in\n\t\t// the next _handleNode() call and we'd be here again.\n\t\tif ( this._getAllowedIn( paragraph, this.position.parent ) && this.schema.checkChild( paragraph, node ) ) {\n\t\t\tparagraph._appendChild( node );\n\t\t\tthis._handleNode( paragraph, context );\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @param {module:engine/model/node~Node} node\n\t * @returns {Boolean} Whether an allowed position was found.\n\t * `false` is returned if the node isn't allowed at any position up in the tree, `true` if was.\n\t */\n\t_checkAndSplitToAllowedPosition( node ) {\n\t\tconst allowedIn = this._getAllowedIn( node, this.position.parent );\n\n\t\tif ( !allowedIn ) {\n\t\t\treturn false;\n\t\t}\n\n\t\twhile ( allowedIn != this.position.parent ) {\n\t\t\t// If a parent which we'd need to leave is a limit element, break.\n\t\t\tif ( this.schema.isLimit( this.position.parent ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif ( this.position.isAtStart ) {\n\t\t\t\t// If insertion position is at the beginning of the parent, move it out instead of splitting.\n\t\t\t\t// <p>^Foo</p> -> ^<p>Foo</p>\n\t\t\t\tconst parent = this.position.parent;\n\n\t\t\t\tthis.position = this.writer.createPositionBefore( parent );\n\n\t\t\t\t// Special case – parent is empty (<p>^</p>).\n\t\t\t\t//\n\t\t\t\t// 1. parent.isEmpty\n\t\t\t\t// We can remove the element after moving insertion position out of it.\n\t\t\t\t//\n\t\t\t\t// 2. parent.parent === allowedIn\n\t\t\t\t// However parent should remain in place when allowed element is above limit element in document tree.\n\t\t\t\t// For example there shouldn't be allowed to remove empty paragraph from tableCell, when is pasted\n\t\t\t\t// content allowed in $root.\n\t\t\t\tif ( parent.isEmpty && parent.parent === allowedIn ) {\n\t\t\t\t\tthis.writer.remove( parent );\n\t\t\t\t}\n\t\t\t} else if ( this.position.isAtEnd ) {\n\t\t\t\t// If insertion position is at the end of the parent, move it out instead of splitting.\n\t\t\t\t// <p>Foo^</p> -> <p>Foo</p>^\n\t\t\t\tthis.position = this.writer.createPositionAfter( this.position.parent );\n\t\t\t} else {\n\t\t\t\tconst tempPos = this.writer.createPositionAfter( this.position.parent );\n\n\t\t\t\tthis._setAffectedBoundaries( this.position );\n\t\t\t\tthis.writer.split( this.position );\n\n\t\t\t\tthis.position = tempPos;\n\n\t\t\t\tthis.canMergeWith.add( this.position.nodeAfter );\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Gets the element in which the given node is allowed. It checks the passed element and all its ancestors.\n\t *\n\t * @private\n\t * @param {module:engine/model/node~Node} node The node to check.\n\t * @param {module:engine/model/element~Element} element The element in which the node's correctness should be checked.\n\t * @returns {module:engine/model/element~Element|null}\n\t */\n\t_getAllowedIn( node, element ) {\n\t\tif ( this.schema.checkChild( element, node ) ) {\n\t\t\treturn element;\n\t\t}\n\n\t\tif ( element.parent ) {\n\t\t\treturn this._getAllowedIn( node, element.parent );\n\t\t}\n\n\t\treturn null;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/utils/deletecontent\n */\n\nimport LivePosition from '../liveposition';\nimport Range from '../range';\nimport DocumentSelection from '../documentselection';\n\n/**\n * Deletes content of the selection and merge siblings. The resulting selection is always collapsed.\n *\n * **Note:** Use {@link module:engine/model/model~Model#deleteContent} instead of this function.\n * This function is only exposed to be reusable in algorithms\n * which change the {@link module:engine/model/model~Model#deleteContent}\n * method's behavior.\n *\n * @param {module:engine/model/model~Model} model The model in context of which the insertion\n * should be performed.\n * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n * Selection of which the content should be deleted.\n * @param {Object} [options]\n * @param {Boolean} [options.leaveUnmerged=false] Whether to merge elements after removing the content of the selection.\n *\n * For example `<heading>x[x</heading><paragraph>y]y</paragraph>` will become:\n *\n * * `<heading>x^y</heading>` with the option disabled (`leaveUnmerged == false`)\n * * `<heading>x^</heading><paragraph>y</paragraph>` with enabled (`leaveUnmerged == true`).\n *\n * Note: {@link module:engine/model/schema~Schema#isObject object} and {@link module:engine/model/schema~Schema#isLimit limit}\n * elements will not be merged.\n *\n * @param {Boolean} [options.doNotResetEntireContent=false] Whether to skip replacing the entire content with a\n * paragraph when the entire content was selected.\n *\n * For example `<heading>[x</heading><paragraph>y]</paragraph>` will become:\n *\n * * `<paragraph>^</paragraph>` with the option disabled (`doNotResetEntireContent == false`)\n * * `<heading>^</heading>` with enabled (`doNotResetEntireContent == true`).\n *\n * @param {Boolean} [options.doNotAutoparagraph=false] Whether to create a paragraph if after content deletion selection is moved\n * to a place where text cannot be inserted.\n *\n * For example `<paragraph>x</paragraph>[<image src=\"foo.jpg\"></image>]` will become:\n *\n * * `<paragraph>x</paragraph><paragraph>[]</paragraph>` with the option disabled (`doNotAutoparagraph == false`)\n * * `<paragraph>x[]</paragraph>` with the option enabled (`doNotAutoparagraph == true`).\n *\n * **Note:** if there is no valid position for the selection, the paragraph will always be created:\n *\n * `[<image src=\"foo.jpg\"></image>]` -> `<paragraph>[]</paragraph>`.\n */\nexport default function deleteContent( model, selection, options = {} ) {\n\tif ( selection.isCollapsed ) {\n\t\treturn;\n\t}\n\n\tconst selRange = selection.getFirstRange();\n\n\t// If the selection is already removed, don't do anything.\n\tif ( selRange.root.rootName == '$graveyard' ) {\n\t\treturn;\n\t}\n\n\tconst schema = model.schema;\n\n\tmodel.change( writer => {\n\t\t// 1. Replace the entire content with paragraph.\n\t\t// See: https://github.com/ckeditor/ckeditor5-engine/issues/1012#issuecomment-315017594.\n\t\tif ( !options.doNotResetEntireContent && shouldEntireContentBeReplacedWithParagraph( schema, selection ) ) {\n\t\t\treplaceEntireContentWithParagraph( writer, selection, schema );\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst startPos = selRange.start;\n\t\tconst endPos = LivePosition.fromPosition( selRange.end, 'toNext' );\n\n\t\t// 2. Remove the content if there is any.\n\t\tif ( !selRange.start.isTouching( selRange.end ) ) {\n\t\t\twriter.remove( selRange );\n\t\t}\n\n\t\t// 3. Merge elements in the right branch to the elements in the left branch.\n\t\t// The only reasonable (in terms of data and selection correctness) case in which we need to do that is:\n\t\t//\n\t\t// <heading type=1>Fo[</heading><paragraph>]ar</paragraph> => <heading type=1>Fo^ar</heading>\n\t\t//\n\t\t// However, the algorithm supports also merging deeper structures (up to the depth of the shallower branch),\n\t\t// as it's hard to imagine what should actually be the default behavior. Usually, specific features will\n\t\t// want to override that behavior anyway.\n\t\tif ( !options.leaveUnmerged ) {\n\t\t\tmergeBranches( writer, startPos, endPos );\n\n\t\t\t// TMP this will be replaced with a postfixer.\n\t\t\t// We need to check and strip disallowed attributes in all nested nodes because after merge\n\t\t\t// some attributes could end up in a path where are disallowed.\n\t\t\t//\n\t\t\t// e.g. bold is disallowed for <H1>\n\t\t\t// <h1>Fo{o</h1><p>b}a<b>r</b><p> -> <h1>Fo{}a<b>r</b><h1> -> <h1>Fo{}ar<h1>.\n\t\t\tschema.removeDisallowedAttributes( startPos.parent.getChildren(), writer );\n\t\t}\n\n\t\tcollapseSelectionAt( writer, selection, startPos );\n\n\t\t// 4. Add a paragraph to set selection in it.\n\t\t// Check if a text is allowed in the new container. If not, try to create a new paragraph (if it's allowed here).\n\t\tif ( shouldAutoparagraph( schema, startPos ) ) {\n\t\t\t// If auto-paragraphing is off, find the closest valid selection range and collapse the selection there.\n\t\t\t// If there is no valid selection range, create paragraph anyway and set selection there.\n\t\t\tconst validSelectionRange = schema.getNearestSelectionRange( startPos );\n\n\t\t\tif ( options.doNotAutoparagraph && validSelectionRange ) {\n\t\t\t\tcollapseSelectionAt( writer, selection, validSelectionRange );\n\t\t\t} else {\n\t\t\t\tinsertParagraph( writer, startPos, selection );\n\t\t\t}\n\t\t}\n\n\t\tendPos.detach();\n\t} );\n}\n\n// This function is a result of reaching the Ballmer's peak for just the right amount of time.\n// Even I had troubles documenting it after a while and after reading it again I couldn't believe that it really works.\nfunction mergeBranches( writer, startPos, endPos ) {\n\tconst startParent = startPos.parent;\n\tconst endParent = endPos.parent;\n\n\t// If both positions ended up in the same parent, then there's nothing more to merge:\n\t// <$root><p>x[]</p><p>{}y</p></$root> => <$root><p>xy</p>[]{}</$root>\n\tif ( startParent == endParent ) {\n\t\treturn;\n\t}\n\n\t// If one of the positions is a limit element, then there's nothing to merge because we don't want to cross the limit boundaries.\n\tif ( writer.model.schema.isLimit( startParent ) || writer.model.schema.isLimit( endParent ) ) {\n\t\treturn;\n\t}\n\n\t// Check if operations we'll need to do won't need to cross object or limit boundaries.\n\t// E.g., we can't merge endParent into startParent in this case:\n\t// <limit><startParent>x[]</startParent></limit><endParent>{}</endParent>\n\tif ( !checkCanBeMerged( startPos, endPos, writer.model.schema ) ) {\n\t\treturn;\n\t}\n\n\t// Remember next positions to merge. For example:\n\t// <a><b>x[]</b></a><c><d>{}y</d></c>\n\t// will become:\n\t// <a><b>xy</b>[]</a><c>{}</c>\n\tstartPos = writer.createPositionAfter( startParent );\n\tendPos = writer.createPositionBefore( endParent );\n\n\tif ( !endPos.isEqual( startPos ) ) {\n\t\t// In this case, before we merge, we need to move `endParent` to the `startPos`:\n\t\t// <a><b>x[]</b></a><c><d>{}y</d></c>\n\t\t// becomes:\n\t\t// <a><b>x</b>[]<d>y</d></a><c>{}</c>\n\t\twriter.insert( endParent, startPos );\n\t}\n\n\t// Merge two siblings:\n\t// <a>x</a>[]<b>y</b> -> <a>xy</a> (the usual case)\n\t// <a><b>x</b>[]<d>y</d></a><c></c> -> <a><b>xy</b>[]</a><c></c> (this is the \"move parent\" case shown above)\n\twriter.merge( startPos );\n\n\t// Remove empty end ancestors:\n\t// <a>fo[o</a><b><a><c>bar]</c></a></b>\n\t// becomes:\n\t// <a>fo[]</a><b><a>{}</a></b>\n\t// So we can remove <a> and <b>.\n\twhile ( endPos.parent.isEmpty ) {\n\t\tconst parentToRemove = endPos.parent;\n\n\t\tendPos = writer.createPositionBefore( parentToRemove );\n\n\t\twriter.remove( parentToRemove );\n\t}\n\n\t// Continue merging next level.\n\tmergeBranches( writer, startPos, endPos );\n}\n\nfunction shouldAutoparagraph( schema, position ) {\n\tconst isTextAllowed = schema.checkChild( position, '$text' );\n\tconst isParagraphAllowed = schema.checkChild( position, 'paragraph' );\n\n\treturn !isTextAllowed && isParagraphAllowed;\n}\n\n// Check if parents of two positions can be merged by checking if there are no limit/object\n// boundaries between those two positions.\n//\n// E.g. in <bQ><p>x[]</p></bQ><widget><caption>{}</caption></widget>\n// we'll check <p>, <bQ>, <widget> and <caption>.\n// Usually, widget and caption are marked as objects/limits in the schema, so in this case merging will be blocked.\nfunction checkCanBeMerged( leftPos, rightPos, schema ) {\n\tconst rangeToCheck = new Range( leftPos, rightPos );\n\n\tfor ( const value of rangeToCheck.getWalker() ) {\n\t\tif ( schema.isLimit( value.item ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction insertParagraph( writer, position, selection ) {\n\tconst paragraph = writer.createElement( 'paragraph' );\n\n\twriter.insert( paragraph, position );\n\n\tcollapseSelectionAt( writer, selection, writer.createPositionAt( paragraph, 0 ) );\n}\n\nfunction replaceEntireContentWithParagraph( writer, selection ) {\n\tconst limitElement = writer.model.schema.getLimitElement( selection );\n\n\twriter.remove( writer.createRangeIn( limitElement ) );\n\tinsertParagraph( writer, writer.createPositionAt( limitElement, 0 ), selection );\n}\n\n// We want to replace the entire content with a paragraph when:\n// * the entire content is selected,\n// * selection contains at least two elements,\n// * whether the paragraph is allowed in schema in the common ancestor.\nfunction shouldEntireContentBeReplacedWithParagraph( schema, selection ) {\n\tconst limitElement = schema.getLimitElement( selection );\n\n\tif ( !selection.containsEntireContent( limitElement ) ) {\n\t\treturn false;\n\t}\n\n\tconst range = selection.getFirstRange();\n\n\tif ( range.start.parent == range.end.parent ) {\n\t\treturn false;\n\t}\n\n\treturn schema.checkChild( limitElement, 'paragraph' );\n}\n\n// Helper function that sets the selection. Depending whether given `selection` is a document selection or not,\n// uses a different method to set it.\nfunction collapseSelectionAt( writer, selection, positionOrRange ) {\n\tif ( selection instanceof DocumentSelection ) {\n\t\twriter.setSelection( positionOrRange );\n\t} else {\n\t\tselection.setTo( positionOrRange );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/utils/modifyselection\n */\n\nimport Position from '../position';\nimport TreeWalker from '../treewalker';\nimport Range from '../range';\nimport { isInsideSurrogatePair, isInsideCombinedSymbol } from '@ckeditor/ckeditor5-utils/src/unicode';\nimport DocumentSelection from '../documentselection';\n\nconst wordBoundaryCharacters = ' ,.?!:;\"-()';\n\n/**\n * Modifies the selection. Currently, the supported modifications are:\n *\n * * Extending. The selection focus is moved in the specified `options.direction` with a step specified in `options.unit`.\n * Possible values for `unit` are:\n *  * `'character'` (default) - moves selection by one user-perceived character. In most cases this means moving by one\n *  character in `String` sense. However, unicode also defines \"combing marks\". These are special symbols, that combines\n *  with a symbol before it (\"base character\") to create one user-perceived character. For example, `q̣̇` is a normal\n *  letter `q` with two \"combining marks\": upper dot (`Ux0307`) and lower dot (`Ux0323`). For most actions, i.e. extending\n *  selection by one position, it is correct to include both \"base character\" and all of it's \"combining marks\". That is\n *  why `'character'` value is most natural and common method of modifying selection.\n *  * `'codePoint'` - moves selection by one unicode code point. In contrary to, `'character'` unit, this will insert\n *  selection between \"base character\" and \"combining mark\", because \"combining marks\" have their own unicode code points.\n *  However, for technical reasons, unicode code points with values above `UxFFFF` are represented in native `String` by\n *  two characters, called \"surrogate pairs\". Halves of \"surrogate pairs\" have a meaning only when placed next to each other.\n *  For example `𨭎` is represented in `String` by `\\uD862\\uDF4E`. Both `\\uD862` and `\\uDF4E` do not have any meaning\n *  outside the pair (are rendered as ? when alone). Position between them would be incorrect. In this case, selection\n *  extension will include whole \"surrogate pair\".\n *  * `'word'` - moves selection by a whole word.\n *\n * **Note:** if you extend a forward selection in a backward direction you will in fact shrink it.\n *\n * **Note:** Use {@link module:engine/model/model~Model#modifySelection} instead of this function.\n * This function is only exposed to be reusable in algorithms\n * which change the {@link module:engine/model/model~Model#modifySelection}\n * method's behavior.\n *\n * @param {module:engine/model/model~Model} model The model in context of which\n * the selection modification should be performed.\n * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n * The selection to modify.\n * @param {Object} [options]\n * @param {'forward'|'backward'} [options.direction='forward'] The direction in which the selection should be modified.\n * @param {'character'|'codePoint'|'word'} [options.unit='character'] The unit by which selection should be modified.\n */\nexport default function modifySelection( model, selection, options = {} ) {\n\tconst schema = model.schema;\n\tconst isForward = options.direction != 'backward';\n\tconst unit = options.unit ? options.unit : 'character';\n\n\tconst focus = selection.focus;\n\n\tconst walker = new TreeWalker( {\n\t\tboundaries: getSearchRange( focus, isForward ),\n\t\tsingleCharacters: true,\n\t\tdirection: isForward ? 'forward' : 'backward'\n\t} );\n\n\tconst data = { walker, schema, isForward, unit };\n\n\tlet next;\n\n\twhile ( ( next = walker.next() ) ) {\n\t\tif ( next.done ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst position = tryExtendingTo( data, next.value );\n\n\t\tif ( position ) {\n\t\t\tif ( selection instanceof DocumentSelection ) {\n\t\t\t\tmodel.change( writer => {\n\t\t\t\t\twriter.setSelectionFocus( position );\n\t\t\t\t} );\n\t\t\t} else {\n\t\t\t\tselection.setFocus( position );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\t}\n}\n\n// Checks whether the selection can be extended to the the walker's next value (next position).\n// @param {{ walker, unit, isForward, schema }} data\n// @param {module:engine/view/treewalker~TreeWalkerValue} value\nfunction tryExtendingTo( data, value ) {\n\t// If found text, we can certainly put the focus in it. Let's just find a correct position\n\t// based on the unit.\n\tif ( value.type == 'text' ) {\n\t\tif ( data.unit === 'word' ) {\n\t\t\treturn getCorrectWordBreakPosition( data.walker, data.isForward );\n\t\t}\n\n\t\treturn getCorrectPosition( data.walker, data.unit, data.isForward );\n\t}\n\n\t// Entering an element.\n\tif ( value.type == ( data.isForward ? 'elementStart' : 'elementEnd' ) ) {\n\t\t// If it's an object, we can select it now.\n\t\tif ( data.schema.isObject( value.item ) ) {\n\t\t\treturn Position._createAt( value.item, data.isForward ? 'after' : 'before' );\n\t\t}\n\n\t\t// If text allowed on this position, extend to this place.\n\t\tif ( data.schema.checkChild( value.nextPosition, '$text' ) ) {\n\t\t\treturn value.nextPosition;\n\t\t}\n\t}\n\t// Leaving an element.\n\telse {\n\t\t// If leaving a limit element, stop.\n\t\tif ( data.schema.isLimit( value.item ) ) {\n\t\t\t// NOTE: Fast-forward the walker until the end.\n\t\t\tdata.walker.skip( () => true );\n\n\t\t\treturn;\n\t\t}\n\n\t\t// If text allowed on this position, extend to this place.\n\t\tif ( data.schema.checkChild( value.nextPosition, '$text' ) ) {\n\t\t\treturn value.nextPosition;\n\t\t}\n\t}\n}\n\n// Finds a correct position by walking in a text node and checking whether selection can be extended to given position\n// or should be extended further.\n//\n// @param {module:engine/model/treewalker~TreeWalker} walker\n// @param {String} unit The unit by which selection should be modified.\nfunction getCorrectPosition( walker, unit ) {\n\tconst textNode = walker.position.textNode;\n\n\tif ( textNode ) {\n\t\tconst data = textNode.data;\n\t\tlet offset = walker.position.offset - textNode.startOffset;\n\n\t\twhile ( isInsideSurrogatePair( data, offset ) || ( unit == 'character' && isInsideCombinedSymbol( data, offset ) ) ) {\n\t\t\twalker.next();\n\n\t\t\toffset = walker.position.offset - textNode.startOffset;\n\t\t}\n\t}\n\n\treturn walker.position;\n}\n\n// Finds a correct position of a word break by walking in a text node and checking whether selection can be extended to given position\n// or should be extended further.\n//\n// @param {module:engine/model/treewalker~TreeWalker} walker\n// @param {Boolean} isForward Is the direction in which the selection should be modified is forward.\nfunction getCorrectWordBreakPosition( walker, isForward ) {\n\tlet textNode = walker.position.textNode;\n\n\tif ( textNode ) {\n\t\tlet offset = walker.position.offset - textNode.startOffset;\n\n\t\twhile ( !isAtWordBoundary( textNode.data, offset, isForward ) && !isAtNodeBoundary( textNode, offset, isForward ) ) {\n\t\t\twalker.next();\n\n\t\t\t// Check of adjacent text nodes with different attributes (like BOLD).\n\t\t\t// Example          : 'foofoo []bar<$text bold=\"true\">bar</$text> bazbaz'\n\t\t\t// should expand to : 'foofoo [bar<$text bold=\"true\">bar</$text>] bazbaz'.\n\t\t\tconst nextNode = isForward ? walker.position.nodeAfter : walker.position.nodeBefore;\n\n\t\t\t// Scan only text nodes. Ignore inline elements (like `<softBreak>`).\n\t\t\tif ( nextNode && nextNode.is( 'text' ) ) {\n\t\t\t\t// Check boundary char of an adjacent text node.\n\t\t\t\tconst boundaryChar = nextNode.data.charAt( isForward ? 0 : nextNode.data.length - 1 );\n\n\t\t\t\t// Go to the next node if the character at the boundary of that node belongs to the same word.\n\t\t\t\tif ( !wordBoundaryCharacters.includes( boundaryChar ) ) {\n\t\t\t\t\t// If adjacent text node belongs to the same word go to it & reset values.\n\t\t\t\t\twalker.next();\n\n\t\t\t\t\ttextNode = walker.position.textNode;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toffset = walker.position.offset - textNode.startOffset;\n\t\t}\n\t}\n\n\treturn walker.position;\n}\n\nfunction getSearchRange( start, isForward ) {\n\tconst root = start.root;\n\tconst searchEnd = Position._createAt( root, isForward ? 'end' : 0 );\n\n\tif ( isForward ) {\n\t\treturn new Range( start, searchEnd );\n\t} else {\n\t\treturn new Range( searchEnd, start );\n\t}\n}\n\n// Checks if selection is on word boundary.\n//\n// @param {String} data The text node value to investigate.\n// @param {Number} offset Position offset.\n// @param {Boolean} isForward Is the direction in which the selection should be modified is forward.\nfunction isAtWordBoundary( data, offset, isForward ) {\n\t// The offset to check depends on direction.\n\tconst offsetToCheck = offset + ( isForward ? 0 : -1 );\n\n\treturn wordBoundaryCharacters.includes( data.charAt( offsetToCheck ) );\n}\n\n// Checks if selection is on node boundary.\n//\n// @param {module:engine/model/text~Text} textNode The text node to investigate.\n// @param {Number} offset Position offset.\n// @param {Boolean} isForward Is the direction in which the selection should be modified is forward.\nfunction isAtNodeBoundary( textNode, offset, isForward ) {\n\treturn offset === ( isForward ? textNode.endOffset : 0 );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/utils/getselectedcontent\n */\n\n/**\n * Gets a clone of the selected content.\n *\n * For example, for the following selection:\n *\n * ```html\n * <p>x</p><quote><p>y</p><h>fir[st</h></quote><p>se]cond</p><p>z</p>\n * ```\n *\n * It will return a document fragment with such a content:\n *\n * ```html\n * <quote><h>st</h></quote><p>se</p>\n * ```\n *\n * @param {module:engine/model/model~Model} model The model in context of which\n * the selection modification should be performed.\n * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n * The selection of which content will be returned.\n * @returns {module:engine/model/documentfragment~DocumentFragment}\n */\nexport default function getSelectedContent( model, selection ) {\n\treturn model.change( writer => {\n\t\tconst frag = writer.createDocumentFragment();\n\t\tconst range = selection.getFirstRange();\n\n\t\tif ( !range || range.isCollapsed ) {\n\t\t\treturn frag;\n\t\t}\n\n\t\tconst root = range.start.root;\n\t\tconst commonPath = range.start.getCommonPath( range.end );\n\t\tconst commonParent = root.getNodeByPath( commonPath );\n\n\t\t// ## 1st step\n\t\t//\n\t\t// First, we'll clone a fragment represented by a minimal flat range\n\t\t// containing the original range to be cloned.\n\t\t// E.g. let's consider such a range:\n\t\t//\n\t\t// <p>x</p><quote><p>y</p><h>fir[st</h></quote><p>se]cond</p><p>z</p>\n\t\t//\n\t\t// A minimal flat range containing this one is:\n\t\t//\n\t\t// <p>x</p>[<quote><p>y</p><h>first</h></quote><p>second</p>]<p>z</p>\n\t\t//\n\t\t// We can easily clone this structure, preserving e.g. the <quote> element.\n\t\tlet flatSubtreeRange;\n\n\t\tif ( range.start.parent == range.end.parent ) {\n\t\t\t// The original range is flat, so take it.\n\t\t\tflatSubtreeRange = range;\n\t\t} else {\n\t\t\tflatSubtreeRange = writer.createRange(\n\t\t\t\twriter.createPositionAt( commonParent, range.start.path[ commonPath.length ] ),\n\t\t\t\twriter.createPositionAt( commonParent, range.end.path[ commonPath.length ] + 1 )\n\t\t\t);\n\t\t}\n\n\t\tconst howMany = flatSubtreeRange.end.offset - flatSubtreeRange.start.offset;\n\n\t\t// Clone the whole contents.\n\t\tfor ( const item of flatSubtreeRange.getItems( { shallow: true } ) ) {\n\t\t\tif ( item.is( 'textProxy' ) ) {\n\t\t\t\twriter.appendText( item.data, item.getAttributes(), frag );\n\t\t\t} else {\n\t\t\t\twriter.append( item._clone( true ), frag );\n\t\t\t}\n\t\t}\n\n\t\t// ## 2nd step\n\t\t//\n\t\t// If the original range wasn't flat, then we need to remove the excess nodes from the both ends of the cloned fragment.\n\t\t//\n\t\t// For example, for the range shown in the 1st step comment, we need to remove these pieces:\n\t\t//\n\t\t// <quote>[<p>y</p>]<h>[fir]st</h></quote><p>se[cond]</p>\n\t\t//\n\t\t// So this will be the final copied content:\n\t\t//\n\t\t// <quote><h>st</h></quote><p>se</p>\n\t\t//\n\t\t// In order to do that, we remove content from these two ranges:\n\t\t//\n\t\t// [<quote><p>y</p><h>fir]st</h></quote><p>se[cond</p>]\n\t\tif ( flatSubtreeRange != range ) {\n\t\t\t// Find the position of the original range in the cloned fragment.\n\t\t\tconst newRange = range._getTransformedByMove( flatSubtreeRange.start, writer.createPositionAt( frag, 0 ), howMany )[ 0 ];\n\n\t\t\tconst leftExcessRange = writer.createRange( writer.createPositionAt( frag, 0 ), newRange.start );\n\t\t\tconst rightExcessRange = writer.createRange( newRange.end, writer.createPositionAt( frag, 'end' ) );\n\n\t\t\tremoveRangeContent( rightExcessRange, writer );\n\t\t\tremoveRangeContent( leftExcessRange, writer );\n\t\t}\n\n\t\treturn frag;\n\t} );\n}\n\n// After https://github.com/ckeditor/ckeditor5-engine/issues/690 is fixed,\n// this function will, most likely, be able to rewritten using getMinimalFlatRanges().\nfunction removeRangeContent( range, writer ) {\n\tconst parentsToCheck = [];\n\n\tArray.from( range.getItems( { direction: 'backward' } ) )\n\t\t// We should better store ranges because text proxies will lose integrity\n\t\t// with the text nodes when we'll start removing content.\n\t\t.map( item => writer.createRangeOn( item ) )\n\t\t// Filter only these items which are fully contained in the passed range.\n\t\t//\n\t\t// E.g. for the following range: [<quote><p>y</p><h>fir]st</h>\n\t\t// the walker will return the entire <h> element, when only the \"fir\" item inside it is fully contained.\n\t\t.filter( itemRange => {\n\t\t\t// We should be able to use Range.containsRange, but https://github.com/ckeditor/ckeditor5-engine/issues/691.\n\t\t\tconst contained =\n\t\t\t\t( itemRange.start.isAfter( range.start ) || itemRange.start.isEqual( range.start ) ) &&\n\t\t\t\t( itemRange.end.isBefore( range.end ) || itemRange.end.isEqual( range.end ) );\n\n\t\t\treturn contained;\n\t\t} )\n\t\t.forEach( itemRange => {\n\t\t\tparentsToCheck.push( itemRange.start.parent );\n\n\t\t\twriter.remove( itemRange );\n\t\t} );\n\n\t// Remove ancestors of the removed items if they turned to be empty now\n\t// (their whole content was contained in the range).\n\tparentsToCheck.forEach( parentToCheck => {\n\t\tlet parent = parentToCheck;\n\n\t\twhile ( parent.parent && parent.isEmpty ) {\n\t\t\tconst removeRange = writer.createRangeOn( parent );\n\n\t\t\tparent = parent.parent;\n\n\t\t\twriter.remove( removeRange );\n\t\t}\n\t} );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/utils/selection-post-fixer\n */\n\nimport Range from '../range';\nimport Position from '../position';\n\n/**\n * Injects selection post-fixer to the model.\n *\n * The role of the selection post-fixer is to ensure that the selection is in a correct place\n * after a {@link module:engine/model/model~Model#change `change()`} block was executed.\n *\n * The correct position means that:\n *\n * * All collapsed selection ranges are in a place where the {@link module:engine/model/schema~Schema}\n * allows a `$text`.\n * * None of the selection's non-collapsed ranges crosses a {@link module:engine/model/schema~Schema#isLimit limit element}\n * boundary (a range must be rooted within one limit element).\n * * Only {@link module:engine/model/schema~Schema#isObject object elements} can be selected from the outside\n * (e.g. `[<paragraph>foo</paragraph>]` is invalid). This rule applies independently to both selection ends, so this\n * selection is correct: `<paragraph>f[oo</paragraph><image></image>]`.\n *\n * If the position is not correct, the post-fixer will automatically correct it.\n *\n * ## Fixing a non-collapsed selection\n *\n * See as an example a selection that starts in a P1 element and ends inside the text of a TD element\n * (`[` and `]` are range boundaries and `(l)` denotes an element defined as `isLimit=true`):\n *\n *\t\troot\n *\t\t |- element P1\n *\t\t |   |- \"foo\"                                      root\n *\t\t |- element TABLE (l)                   P1         TABLE             P2\n *\t\t |   |- element TR (l)                 f o[o     TR      TR         b a r\n *\t\t |   |   |- element TD (l)                       TD      TD\n *\t\t |   |       |- \"aaa\"                          a]a a    b b b\n *\t\t |   |- element TR (l)\n *\t\t |   |   |- element TD (l)                           ||\n *\t\t |   |       |- \"bbb\"                                ||\n *\t\t |- element P2                                       VV\n *\t\t |   |- \"bar\"\n *\t\t                                                   root\n *\t\t                                        P1         TABLE]            P2\n *\t\t                                       f o[o     TR      TR         b a r\n *\t\t                                                 TD      TD\n *\t\t                                               a a a    b b b\n *\n * In the example above, the TABLE, TR and TD are defined as `isLimit=true` in the schema. The range which is not contained within\n * a single limit element must be expanded to select the outermost limit element. The range end is inside the text node of the TD element.\n * As the TD element is a child of the TR and TABLE elements, where both are defined as `isLimit=true` in the schema, the range must be\n * expanded to select the whole TABLE element.\n *\n * **Note** If the selection contains multiple ranges, the method returns a minimal set of ranges that are not intersecting after expanding\n * them to select `isLimit=true` elements.\n *\n * @param {module:engine/model/model~Model} model\n */\nexport function injectSelectionPostFixer( model ) {\n\tmodel.document.registerPostFixer( writer => selectionPostFixer( writer, model ) );\n}\n\n// The selection post-fixer.\n//\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:engine/model/model~Model} model\nfunction selectionPostFixer( writer, model ) {\n\tconst selection = model.document.selection;\n\tconst schema = model.schema;\n\n\tconst ranges = [];\n\n\tlet wasFixed = false;\n\n\tfor ( const modelRange of selection.getRanges() ) {\n\t\t// Go through all ranges in selection and try fixing each of them.\n\t\t// Those ranges might overlap but will be corrected later.\n\t\tconst correctedRange = tryFixingRange( modelRange, schema );\n\n\t\tif ( correctedRange ) {\n\t\t\tranges.push( correctedRange );\n\t\t\twasFixed = true;\n\t\t} else {\n\t\t\tranges.push( modelRange );\n\t\t}\n\t}\n\n\t// If any of ranges were corrected update the selection.\n\tif ( wasFixed ) {\n\t\twriter.setSelection( mergeIntersectingRanges( ranges ), { backward: selection.isBackward } );\n\t}\n}\n\n// Tries fixing a range if it's incorrect.\n//\n// @param {module:engine/model/range~Range} range\n// @param {module:engine/model/schema~Schema} schema\n// @returns {module:engine/model/range~Range|null} Returns fixed range or null if range is valid.\nfunction tryFixingRange( range, schema ) {\n\tif ( range.isCollapsed ) {\n\t\treturn tryFixingCollapsedRange( range, schema );\n\t}\n\n\treturn tryFixingNonCollapsedRage( range, schema );\n}\n\n// Tries to fix collapsed ranges.\n//\n// * Fixes situation when a range is in a place where $text is not allowed\n//\n// @param {module:engine/model/range~Range} range Collapsed range to fix.\n// @param {module:engine/model/schema~Schema} schema\n// @returns {module:engine/model/range~Range|null} Returns fixed range or null if range is valid.\nfunction tryFixingCollapsedRange( range, schema ) {\n\tconst originalPosition = range.start;\n\n\tconst nearestSelectionRange = schema.getNearestSelectionRange( originalPosition );\n\n\t// This might be null ie when editor data is empty.\n\t// In such cases there is no need to fix the selection range.\n\tif ( !nearestSelectionRange ) {\n\t\treturn null;\n\t}\n\n\tif ( !nearestSelectionRange.isCollapsed ) {\n\t\treturn nearestSelectionRange;\n\t}\n\n\tconst fixedPosition = nearestSelectionRange.start;\n\n\t// Fixed position is the same as original - no need to return corrected range.\n\tif ( originalPosition.isEqual( fixedPosition ) ) {\n\t\treturn null;\n\t}\n\n\treturn new Range( fixedPosition );\n}\n\n// Tries to fix an expanded range.\n//\n// @param {module:engine/model/range~Range} range Expanded range to fix.\n// @param {module:engine/model/schema~Schema} schema\n// @returns {module:engine/model/range~Range|null} Returns fixed range or null if range is valid.\nfunction tryFixingNonCollapsedRage( range, schema ) {\n\tconst start = range.start;\n\tconst end = range.end;\n\n\tconst isTextAllowedOnStart = schema.checkChild( start, '$text' );\n\tconst isTextAllowedOnEnd = schema.checkChild( end, '$text' );\n\n\tconst startLimitElement = schema.getLimitElement( start );\n\tconst endLimitElement = schema.getLimitElement( end );\n\n\t// Ranges which both end are inside the same limit element (or root) might needs only minor fix.\n\tif ( startLimitElement === endLimitElement ) {\n\t\t// Range is valid when both position allows to place a text:\n\t\t// - <block>f[oobarba]z</block>\n\t\t// This would be \"fixed\" by a next check but as it will be the same it's better to return null so the selection stays the same.\n\t\tif ( isTextAllowedOnStart && isTextAllowedOnEnd ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Range that is on non-limit element (or is partially) must be fixed so it is placed inside the block around $text:\n\t\t// - [<block>foo</block>]    ->    <block>[foo]</block>\n\t\t// - [<block>foo]</block>    ->    <block>[foo]</block>\n\t\t// - <block>f[oo</block>]    ->    <block>f[oo]</block>\n\t\t// - [<block>foo</block><object></object>]    ->    <block>[foo</block><object></object>]\n\t\tif ( checkSelectionOnNonLimitElements( start, end, schema ) ) {\n\t\t\tconst isStartObject = start.nodeAfter && schema.isObject( start.nodeAfter );\n\t\t\tconst fixedStart = isStartObject ? null : schema.getNearestSelectionRange( start, 'forward' );\n\n\t\t\tconst isEndObject = end.nodeBefore && schema.isObject( end.nodeBefore );\n\t\t\tconst fixedEnd = isEndObject ? null : schema.getNearestSelectionRange( end, 'backward' );\n\n\t\t\t// The schema.getNearestSelectionRange might return null - if that happens use original position.\n\t\t\tconst rangeStart = fixedStart ? fixedStart.start : start;\n\t\t\tconst rangeEnd = fixedEnd ? fixedEnd.start : end;\n\n\t\t\treturn new Range( rangeStart, rangeEnd );\n\t\t}\n\t}\n\n\tconst isStartInLimit = startLimitElement && !startLimitElement.is( 'rootElement' );\n\tconst isEndInLimit = endLimitElement && !endLimitElement.is( 'rootElement' );\n\n\t// At this point we eliminated valid positions on text nodes so if one of range positions is placed inside a limit element\n\t// then the range crossed limit element boundaries and needs to be fixed.\n\tif ( isStartInLimit || isEndInLimit ) {\n\t\tconst bothInSameParent = ( start.nodeAfter && end.nodeBefore ) && start.nodeAfter.parent === end.nodeBefore.parent;\n\n\t\tconst expandStart = isStartInLimit && ( !bothInSameParent || !isInObject( start.nodeAfter, schema ) );\n\t\tconst expandEnd = isEndInLimit && ( !bothInSameParent || !isInObject( end.nodeBefore, schema ) );\n\n\t\t// Although we've already found limit element on start/end positions we must find the outer-most limit element.\n\t\t// as limit elements might be nested directly inside (ie table > tableRow > tableCell).\n\t\tlet fixedStart = start;\n\t\tlet fixedEnd = end;\n\n\t\tif ( expandStart ) {\n\t\t\tfixedStart = Position._createBefore( findOutermostLimitAncestor( startLimitElement, schema ) );\n\t\t}\n\n\t\tif ( expandEnd ) {\n\t\t\tfixedEnd = Position._createAfter( findOutermostLimitAncestor( endLimitElement, schema ) );\n\t\t}\n\n\t\treturn new Range( fixedStart, fixedEnd );\n\t}\n\n\t// Range was not fixed at this point so it is valid - ie it was placed around limit element already.\n\treturn null;\n}\n\n// Finds the outer-most ancestor.\n//\n// @param {module:engine/model/node~Node} startingNode\n// @param {module:engine/model/schema~Schema} schema\n// @param {String} expandToDirection Direction of expansion - either 'start' or 'end' of the range.\n// @returns {module:engine/model/node~Node}\nfunction findOutermostLimitAncestor( startingNode, schema ) {\n\tlet isLimitNode = startingNode;\n\tlet parent = isLimitNode;\n\n\t// Find outer most isLimit block as such blocks might be nested (ie. in tables).\n\twhile ( schema.isLimit( parent ) && parent.parent ) {\n\t\tisLimitNode = parent;\n\t\tparent = parent.parent;\n\t}\n\n\treturn isLimitNode;\n}\n\n// Checks whether any of range boundaries is placed around non-limit elements.\n//\n// @param {module:engine/model/position~Position} start\n// @param {module:engine/model/position~Position} end\n// @param {module:engine/model/schema~Schema} schema\n// @returns {Boolean}\nfunction checkSelectionOnNonLimitElements( start, end, schema ) {\n\tconst startIsOnBlock = ( start.nodeAfter && !schema.isLimit( start.nodeAfter ) ) || schema.checkChild( start, '$text' );\n\tconst endIsOnBlock = ( end.nodeBefore && !schema.isLimit( end.nodeBefore ) ) || schema.checkChild( end, '$text' );\n\n\t// We should fix such selection when one of those nodes needs fixing.\n\treturn startIsOnBlock || endIsOnBlock;\n}\n\n// Returns a minimal non-intersecting array of ranges.\n//\n// @param {Array.<module:engine/model/range~Range>} ranges\n// @returns {Array.<module:engine/model/range~Range>}\nfunction mergeIntersectingRanges( ranges ) {\n\tconst nonIntersectingRanges = [];\n\n\t// First range will always be fine.\n\tnonIntersectingRanges.push( ranges.shift() );\n\n\tfor ( const range of ranges ) {\n\t\tconst previousRange = nonIntersectingRanges.pop();\n\n\t\tif ( range.isIntersecting( previousRange ) ) {\n\t\t\t// Get the sum of two ranges.\n\t\t\tconst start = previousRange.start.isAfter( range.start ) ? range.start : previousRange.start;\n\t\t\tconst end = previousRange.end.isAfter( range.end ) ? previousRange.end : range.end;\n\n\t\t\tconst merged = new Range( start, end );\n\t\t\tnonIntersectingRanges.push( merged );\n\t\t} else {\n\t\t\tnonIntersectingRanges.push( previousRange );\n\t\t\tnonIntersectingRanges.push( range );\n\t\t}\n\t}\n\n\treturn nonIntersectingRanges;\n}\n\n// Checks if node exists and if it's an object.\n//\n// @param {module:engine/model/node~Node} node\n// @param {module:engine/model/schema~Schema} schema\n// @returns {Boolean}\nfunction isInObject( node, schema ) {\n\treturn node && schema.isObject( node );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/model\n */\n\nimport Batch from './batch';\nimport Writer from './writer';\nimport Schema from './schema';\nimport Document from './document';\nimport MarkerCollection from './markercollection';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ModelElement from './element';\nimport ModelRange from './range';\nimport ModelPosition from './position';\nimport ModelSelection from './selection';\nimport OperationFactory from './operation/operationfactory';\n\nimport insertContent from './utils/insertcontent';\nimport deleteContent from './utils/deletecontent';\nimport modifySelection from './utils/modifyselection';\nimport getSelectedContent from './utils/getselectedcontent';\nimport { injectSelectionPostFixer } from './utils/selection-post-fixer';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n// @if CK_DEBUG_ENGINE // const { dumpTrees } = require( '../dev-utils/utils' );\n// @if CK_DEBUG_ENGINE // const { OperationReplayer } = require( '../dev-utils/operationreplayer' ).default;\n\n/**\n * Editor's data model. Read about the model in the\n * {@glink framework/guides/architecture/editing-engine engine architecture guide}.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class Model {\n\tconstructor() {\n\t\t/**\n\t\t * Model's marker collection.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/markercollection~MarkerCollection}\n\t\t */\n\t\tthis.markers = new MarkerCollection();\n\n\t\t/**\n\t\t * Model's document.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/document~Document}\n\t\t */\n\t\tthis.document = new Document( this );\n\n\t\t/**\n\t\t * Model's schema.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/schema~Schema}\n\t\t */\n\t\tthis.schema = new Schema();\n\n\t\t/**\n\t\t * All callbacks added by {@link module:engine/model/model~Model#change} or\n\t\t * {@link module:engine/model/model~Model#enqueueChange} methods waiting to be executed.\n\t\t *\n\t\t * @private\n\t\t * @type {Array.<Function>}\n\t\t */\n\t\tthis._pendingChanges = [];\n\n\t\t/**\n\t\t * The last created and currently used writer instance.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/writer~Writer}\n\t\t */\n\t\tthis._currentWriter = null;\n\n\t\t[ 'insertContent', 'deleteContent', 'modifySelection', 'getSelectedContent', 'applyOperation' ]\n\t\t\t.forEach( methodName => this.decorate( methodName ) );\n\n\t\t// Adding operation validation with `highest` priority, so it is called before any other feature would like\n\t\t// to do anything with the operation. If the operation has incorrect parameters it should throw on the earliest occasion.\n\t\tthis.on( 'applyOperation', ( evt, args ) => {\n\t\t\tconst operation = args[ 0 ];\n\n\t\t\toperation._validate();\n\t\t}, { priority: 'highest' } );\n\n\t\t// Register some default abstract entities.\n\t\tthis.schema.register( '$root', {\n\t\t\tisLimit: true\n\t\t} );\n\t\tthis.schema.register( '$block', {\n\t\t\tallowIn: '$root',\n\t\t\tisBlock: true\n\t\t} );\n\t\tthis.schema.register( '$text', {\n\t\t\tallowIn: '$block',\n\t\t\tisInline: true\n\t\t} );\n\t\tthis.schema.register( '$clipboardHolder', {\n\t\t\tallowContentOf: '$root',\n\t\t\tisLimit: true\n\t\t} );\n\t\tthis.schema.extend( '$text', { allowIn: '$clipboardHolder' } );\n\n\t\t// An element needed by the `upcastElementToMarker` converter.\n\t\t// This element temporarily represents a marker boundary during the conversion process and is removed\n\t\t// at the end of the conversion. `UpcastDispatcher` or at least `Conversion` class looks like a\n\t\t// better place for this registration but both know nothing about `Schema`.\n\t\tthis.schema.register( '$marker' );\n\t\tthis.schema.addChildCheck( ( context, childDefinition ) => {\n\t\t\tif ( childDefinition.name === '$marker' ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} );\n\n\t\tinjectSelectionPostFixer( this );\n\n\t\t// @if CK_DEBUG_ENGINE // this.on( 'applyOperation', () => {\n\t\t// @if CK_DEBUG_ENGINE // \tdumpTrees( this.document, this.document.version );\n\t\t// @if CK_DEBUG_ENGINE // }, { priority: 'lowest' } );\n\t}\n\n\t/**\n\t * The `change()` method is the primary way of changing the model. You should use it to modify all document nodes\n\t * (including detached nodes – i.e. nodes not added to the {@link module:engine/model/model~Model#document model document}),\n\t * the {@link module:engine/model/document~Document#selection document's selection}, and\n\t * {@link module:engine/model/model~Model#markers model markers}.\n\t *\n\t *\t\tmodel.change( writer => {\n\t *\t\t\twriter.insertText( 'foo', paragraph, 'end' );\n\t *\t\t} );\n\t *\n\t * All changes inside the change block use the same {@link module:engine/model/batch~Batch} so they are combined\n\t * into a single undo step.\n\t *\n\t *\t\tmodel.change( writer => {\n\t *\t\t\twriter.insertText( 'foo', paragraph, 'end' ); // foo.\n\t *\n\t *\t\t\tmodel.change( writer => {\n\t *\t\t\t\twriter.insertText( 'bar', paragraph, 'end' ); // foobar.\n\t *\t\t\t} );\n\t *\n\t * \t\t\twriter.insertText( 'bom', paragraph, 'end' ); // foobarbom.\n\t *\t\t} );\n\t *\n\t * The callback of the `change()` block is executed synchronously.\n\t *\n\t * You can also return a value from the change block.\n\t *\n\t *\t\tconst img = model.change( writer => {\n\t *\t\t\treturn writer.createElement( 'img' );\n\t *\t\t} );\n\t *\n\t * @see #enqueueChange\n\t * @param {Function} callback Callback function which may modify the model.\n\t * @returns {*} Value returned by the callback.\n\t */\n\tchange( callback ) {\n\t\ttry {\n\t\t\tif ( this._pendingChanges.length === 0 ) {\n\t\t\t\t// If this is the outermost block, create a new batch and start `_runPendingChanges` execution flow.\n\t\t\t\tthis._pendingChanges.push( { batch: new Batch(), callback } );\n\n\t\t\t\treturn this._runPendingChanges()[ 0 ];\n\t\t\t} else {\n\t\t\t\t// If this is not the outermost block, just execute the callback.\n\t\t\t\treturn callback( this._currentWriter );\n\t\t\t}\n\t\t} catch ( err ) {\n\t\t\t// @if CK_DEBUG // throw err;\n\t\t\t/* istanbul ignore next */\n\t\t\tCKEditorError.rethrowUnexpectedError( err, this );\n\t\t}\n\t}\n\n\t/**\n\t * The `enqueueChange()` method performs similar task as the {@link #change `change()` method}, with two major differences.\n\t *\n\t * First, the callback of `enqueueChange()` is executed when all other enqueued changes are done. It might be executed\n\t * immediately if it is not nested in any other change block, but if it is nested in another (enqueue)change block,\n\t * it will be delayed and executed after the outermost block.\n\t *\n\t *\t\tmodel.change( writer => {\n\t *\t\t\tconsole.log( 1 );\n\t *\n\t *\t\t\tmodel.enqueueChange( writer => {\n\t *\t\t\t\tconsole.log( 2 );\n\t *\t\t\t} );\n\t *\n\t * \t\t\tconsole.log( 3 );\n\t *\t\t} ); // Will log: 1, 3, 2.\n\t *\n\t * Second, it lets you define the {@link module:engine/model/batch~Batch} into which you want to add your changes.\n\t * By default, a new batch is created. In the sample above, `change` and `enqueueChange` blocks use a different\n\t * batch (and different {@link module:engine/model/writer~Writer} since each of them operates on the separate batch).\n\t *\n\t * When using the `enqueueChange()` block you can also add some changes to the batch you used before.\n\t *\n\t *\t\tmodel.enqueueChange( batch, writer => {\n\t *\t\t\twriter.insertText( 'foo', paragraph, 'end' );\n\t *\t\t} );\n\t *\n\t * The batch instance can be obtained from {@link module:engine/model/writer~Writer#batch the writer}.\n\t *\n\t * @param {module:engine/model/batch~Batch|'transparent'|'default'} batchOrType Batch or batch type should be used in the callback.\n\t * If not defined, a new batch will be created.\n\t * @param {Function} callback Callback function which may modify the model.\n\t */\n\tenqueueChange( batchOrType, callback ) {\n\t\ttry {\n\t\t\tif ( typeof batchOrType === 'string' ) {\n\t\t\t\tbatchOrType = new Batch( batchOrType );\n\t\t\t} else if ( typeof batchOrType == 'function' ) {\n\t\t\t\tcallback = batchOrType;\n\t\t\t\tbatchOrType = new Batch();\n\t\t\t}\n\n\t\t\tthis._pendingChanges.push( { batch: batchOrType, callback } );\n\n\t\t\tif ( this._pendingChanges.length == 1 ) {\n\t\t\t\tthis._runPendingChanges();\n\t\t\t}\n\t\t} catch ( err ) {\n\t\t\t// @if CK_DEBUG // throw err;\n\t\t\t/* istanbul ignore next */\n\t\t\tCKEditorError.rethrowUnexpectedError( err, this );\n\t\t}\n\t}\n\n\t/**\n\t * {@link module:utils/observablemixin~ObservableMixin#decorate Decorated} function for applying\n\t * {@link module:engine/model/operation/operation~Operation operations} to the model.\n\t *\n\t * This is a low-level way of changing the model. It is exposed for very specific use cases (like the undo feature).\n\t * Normally, to modify the model, you will want to use {@link module:engine/model/writer~Writer `Writer`}.\n\t * See also {@glink framework/guides/architecture/editing-engine#changing-the-model Changing the model} section\n\t * of the {@glink framework/guides/architecture/editing-engine Editing architecture} guide.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} operation The operation to apply.\n\t */\n\tapplyOperation( operation ) {\n\t\t// @if CK_DEBUG_ENGINE // console.log( 'Applying ' + operation );\n\n\t\t// @if CK_DEBUG_ENGINE // if ( !this._operationLogs ) {\n\t\t// @if CK_DEBUG_ENGINE //\tthis._operationLogs = [];\n\t\t// @if CK_DEBUG_ENGINE // }\n\n\t\t// @if CK_DEBUG_ENGINE // this._operationLogs.push( JSON.stringify( operation ) );\n\n\t\t// @if CK_DEBUG_ENGINE //if ( !this._appliedOperations ) {\n\t\t// @if CK_DEBUG_ENGINE //\tthis._appliedOperations = [];\n\t\t// @if CK_DEBUG_ENGINE //}\n\n\t\t// @if CK_DEBUG_ENGINE //this._appliedOperations.push( operation );\n\n\t\toperation._execute();\n\t}\n\n\t// @if CK_DEBUG_ENGINE // getAppliedOperation() {\n\t// @if CK_DEBUG_ENGINE //\tif ( !this._appliedOperations ) {\n\t// @if CK_DEBUG_ENGINE //\t\treturn '';\n\t// @if CK_DEBUG_ENGINE //\t}\n\n\t// @if CK_DEBUG_ENGINE //\treturn this._appliedOperations.map( JSON.stringify ).join( '-------' );\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // createReplayer( stringifiedOperations ) {\n\t// @if CK_DEBUG_ENGINE //\treturn new OperationReplayer( this, '-------', stringifiedOperations );\n\t// @if CK_DEBUG_ENGINE // }\n\n\t/**\n\t * Inserts content at the position in the editor specified by the selection, as one would expect the paste\n\t * functionality to work.\n\t *\n\t * This is a high-level method. It takes the {@link #schema schema} into consideration when inserting\n\t * the content, clears the given selection's content before inserting nodes and moves the selection\n\t * to its target position at the end of the process.\n\t * It can split elements, merge them, wrap bare text nodes with paragraphs, etc. &mdash; just like the\n\t * pasting feature should do.\n\t *\n\t * For lower-level methods see {@link module:engine/model/writer~Writer `Writer`}.\n\t *\n\t * This method, unlike {@link module:engine/model/writer~Writer `Writer`}'s methods, does not have to be used\n\t * inside a {@link #change `change()` block}.\n\t *\n\t * # Conversion and schema\n\t *\n\t * Inserting elements and text nodes into the model is not enough to make CKEditor 5 render that content\n\t * to the user. CKEditor 5 implements a model-view-controller architecture and what `model.insertContent()` does\n\t * is only adding nodes to the model. Additionally, you need to define\n\t * {@glink framework/guides/architecture/editing-engine#conversion converters} between the model and view\n\t * and define those nodes in the {@glink framework/guides/architecture/editing-engine#schema schema}.\n\t *\n\t * So, while this method may seem similar to CKEditor 4 `editor.insertHtml()` (in fact, both methods\n\t * are used for paste-like content insertion), the CKEditor 5 method cannot be use to insert arbitrary HTML\n\t * unless converters are defined for all elements and attributes in that HTML.\n\t *\n\t * # Examples\n\t *\n\t * Using `insertContent()` with a manually created model structure:\n\t *\n\t *\t\t// Let's create a document fragment containing such content as:\n\t *\t\t//\n\t *\t\t// <paragraph>foo</paragraph>\n\t *\t\t// <blockQuote>\n\t *\t\t//    <paragraph>bar</paragraph>\n\t *\t\t// </blockQuote>\n\t *\t\tconst docFrag = editor.model.change( writer => {\n\t *\t\t\tconst p1 = writer.createElement( 'paragraph' );\n\t *\t\t\tconst p2 = writer.createElement( 'paragraph' );\n\t *\t\t\tconst blockQuote = writer.createElement( 'blockQuote' );\n\t *\t\t\tconst docFrag = writer.createDocumentFragment();\n\t *\n\t *\t\t\twriter.append( p1, docFrag );\n\t *\t\t\twriter.append( blockQuote, docFrag );\n\t *\t\t\twriter.append( p2, blockQuote );\n\t *\t\t\twriter.insertText( 'foo', p1 );\n\t *\t\t\twriter.insertText( 'bar', p2 );\n\t *\n\t *\t\t\treturn docFrag;\n\t *\t\t} );\n\t *\n\t *\t\t// insertContent() does not have to be used in a change() block. It can, though,\n\t *\t\t// so this code could be moved to the callback defined above.\n\t *\t\teditor.model.insertContent( docFrag );\n\t *\n\t * Using `insertContent()` with an HTML string converted to a model document fragment (similar to the pasting mechanism):\n\t *\n\t *\t\t// You can create your own HtmlDataProcessor instance or use editor.data.processor\n\t *\t\t// if you have not overridden the default one (which is the HtmlDataProcessor instance).\n\t *\t\tconst htmlDP = new HtmlDataProcessor();\n\t *\n\t *\t\t// Convert an HTML string to a view document fragment:\n\t *\t\tconst viewFragment = htmlDP.toView( htmlString );\n\t *\n\t *\t\t// Convert the view document fragment to a model document fragment\n\t *\t\t// in the context of $root. This conversion takes the schema into\n\t *\t\t// account so if, for example, the view document fragment contained a bare text node,\n\t *\t\t// this text node cannot be a child of $root, so it will be automatically\n\t *\t\t// wrapped with a <paragraph>. You can define the context yourself (in the second parameter),\n\t *\t\t// and e.g. convert the content like it would happen in a <paragraph>.\n\t *\t\t// Note: The clipboard feature uses a custom context called $clipboardHolder\n\t *\t\t// which has a loosened schema.\n\t *\t\tconst modelFragment = editor.data.toModel( viewFragment );\n\t *\n\t *\t\teditor.model.insertContent( modelFragment );\n\t *\n\t * By default this method will use the document selection but it can also be used with a position, range or selection instance.\n\t *\n\t *\t\t// Insert text at the current document selection position.\n\t *\t\teditor.model.change( writer => {\n\t *\t\t\teditor.model.insertContent( writer.createText( 'x' ) );\n\t *\t\t} );\n\t *\n\t *\t\t// Insert text at a given position - the document selection will not be modified.\n\t *\t\teditor.model.change( writer => {\n\t *\t\t\teditor.model.insertContent( writer.createText( 'x' ), doc.getRoot(), 2 );\n\t *\n\t *\t\t\t// Which is a shorthand for:\n\t *\t\t\teditor.model.insertContent( writer.createText( 'x' ), writer.createPositionAt( doc.getRoot(), 2 ) );\n\t *\t\t} );\n\t *\n\t * If an instance of {@link module:engine/model/selection~Selection} is passed as `selectable`\n\t * it will be moved to the target position (where the document selection should be moved after the insertion).\n\t *\n\t *\t\teditor.model.change( writer => {\n\t *\t\t\t// Insert text replacing the given selection instance.\n\t *\t\t\tconst selection = writer.createSelection( paragraph, 'in' );\n\t *\n\t *\t\t\teditor.model.insertContent( writer.createText( 'x' ), selection );\n\t *\n\t *\t\t\t// insertContent() modifies the passed selection instance so it can be used to set the document selection.\n\t *\t\t\t// Note: This is not necessary when you passed the document selection to insertContent().\n\t *\t\t\twriter.setSelection( selection );\n\t *\t\t} );\n\t *\n\t * @fires insertContent\n\t * @param {module:engine/model/documentfragment~DocumentFragment|module:engine/model/item~Item} content The content to insert.\n\t * @param {module:engine/model/selection~Selectable} [selectable=model.document.selection]\n\t * The selection into which the content should be inserted. If not provided the current model document selection will be used.\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] To be used when a model item was passed as `selectable`.\n\t * This param defines a position in relation to that item.\n\t * @returns {module:engine/model/range~Range} Range which contains all the performed changes. This is a range that, if removed,\n\t * would return the model to the state before the insertion. If no changes were preformed by `insertContent`, returns a range collapsed\n\t * at the insertion position.\n\t */\n\tinsertContent( content, selectable, placeOrOffset ) {\n\t\treturn insertContent( this, content, selectable, placeOrOffset );\n\t}\n\n\t/**\n\t * Deletes content of the selection and merge siblings. The resulting selection is always collapsed.\n\t *\n\t * **Note:** For the sake of predictability, the resulting selection should always be collapsed.\n\t * In cases where a feature wants to modify deleting behavior so selection isn't collapsed\n\t * (e.g. a table feature may want to keep row selection after pressing <kbd>Backspace</kbd>),\n\t * then that behavior should be implemented in the view's listener. At the same time, the table feature\n\t * will need to modify this method's behavior too, e.g. to \"delete contents and then collapse\n\t * the selection inside the last selected cell\" or \"delete the row and collapse selection somewhere near\".\n\t * That needs to be done in order to ensure that other features which use `deleteContent()` will work well with tables.\n\t *\n\t * @fires deleteContent\n\t * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n\t * Selection of which the content should be deleted.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.leaveUnmerged=false] Whether to merge elements after removing the content of the selection.\n\t *\n\t * For example `<heading1>x[x</heading1><paragraph>y]y</paragraph>` will become:\n\t *\n\t * * `<heading1>x^y</heading1>` with the option disabled (`leaveUnmerged == false`)\n\t * * `<heading1>x^</heading1><paragraph>y</paragraph>` with enabled (`leaveUnmerged == true`).\n\t *\n\t * Note: {@link module:engine/model/schema~Schema#isObject object} and {@link module:engine/model/schema~Schema#isLimit limit}\n\t * elements will not be merged.\n\t *\n\t * @param {Boolean} [options.doNotResetEntireContent=false] Whether to skip replacing the entire content with a\n\t * paragraph when the entire content was selected.\n\t *\n\t * For example `<heading1>[x</heading1><paragraph>y]</paragraph>` will become:\n\t *\n\t * * `<paragraph>^</paragraph>` with the option disabled (`doNotResetEntireContent == false`)\n\t * * `<heading1>^</heading1>` with enabled (`doNotResetEntireContent == true`)\n\t *\n\t * @param {Boolean} [options.doNotAutoparagraph=false] Whether to create a paragraph if after content deletion selection is moved\n\t * to a place where text cannot be inserted.\n\t *\n\t * For example `<paragraph>x</paragraph>[<image src=\"foo.jpg\"></image>]` will become:\n\t *\n\t * * `<paragraph>x</paragraph><paragraph>[]</paragraph>` with the option disabled (`doNotAutoparagraph == false`)\n\t * * `<paragraph>x[]</paragraph>` with the option enabled (`doNotAutoparagraph == true`).\n\t *\n\t * **Note:** if there is no valid position for the selection, the paragraph will always be created:\n\t *\n\t * `[<image src=\"foo.jpg\"></image>]` -> `<paragraph>[]</paragraph>`.\n\t */\n\tdeleteContent( selection, options ) {\n\t\tdeleteContent( this, selection, options );\n\t}\n\n\t/**\n\t * Modifies the selection. Currently, the supported modifications are:\n\t *\n\t * * Extending. The selection focus is moved in the specified `options.direction` with a step specified in `options.unit`.\n\t * Possible values for `unit` are:\n\t *  * `'character'` (default) - moves selection by one user-perceived character. In most cases this means moving by one\n\t *  character in `String` sense. However, unicode also defines \"combing marks\". These are special symbols, that combines\n\t *  with a symbol before it (\"base character\") to create one user-perceived character. For example, `q̣̇` is a normal\n\t *  letter `q` with two \"combining marks\": upper dot (`Ux0307`) and lower dot (`Ux0323`). For most actions, i.e. extending\n\t *  selection by one position, it is correct to include both \"base character\" and all of it's \"combining marks\". That is\n\t *  why `'character'` value is most natural and common method of modifying selection.\n\t *  * `'codePoint'` - moves selection by one unicode code point. In contrary to, `'character'` unit, this will insert\n\t *  selection between \"base character\" and \"combining mark\", because \"combining marks\" have their own unicode code points.\n\t *  However, for technical reasons, unicode code points with values above `UxFFFF` are represented in native `String` by\n\t *  two characters, called \"surrogate pairs\". Halves of \"surrogate pairs\" have a meaning only when placed next to each other.\n\t *  For example `𨭎` is represented in `String` by `\\uD862\\uDF4E`. Both `\\uD862` and `\\uDF4E` do not have any meaning\n\t *  outside the pair (are rendered as ? when alone). Position between them would be incorrect. In this case, selection\n\t *  extension will include whole \"surrogate pair\".\n\t *  * `'word'` - moves selection by a whole word.\n\t *\n\t * **Note:** if you extend a forward selection in a backward direction you will in fact shrink it.\n\t *\n\t * @fires modifySelection\n\t * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n\t * The selection to modify.\n\t * @param {Object} [options]\n\t * @param {'forward'|'backward'} [options.direction='forward'] The direction in which the selection should be modified.\n\t * @param {'character'|'codePoint'|'word'} [options.unit='character'] The unit by which selection should be modified.\n\t */\n\tmodifySelection( selection, options ) {\n\t\tmodifySelection( this, selection, options );\n\t}\n\n\t/**\n\t * Gets a clone of the selected content.\n\t *\n\t * For example, for the following selection:\n\t *\n\t * ```html\n\t * <paragraph>x</paragraph>\n\t * <blockQuote>\n\t *\t<paragraph>y</paragraph>\n\t *\t<heading1>fir[st</heading1>\n\t * </blockQuote>\n\t * <paragraph>se]cond</paragraph>\n\t * <paragraph>z</paragraph>\n\t * ```\n\t *\n\t * It will return a document fragment with such a content:\n\t *\n\t * ```html\n\t * <blockQuote>\n\t *\t<heading1>st</heading1>\n\t * </blockQuote>\n\t * <paragraph>se</paragraph>\n\t * ```\n\t *\n\t * @fires getSelectedContent\n\t * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n\t * The selection of which content will be returned.\n\t * @returns {module:engine/model/documentfragment~DocumentFragment}\n\t */\n\tgetSelectedContent( selection ) {\n\t\treturn getSelectedContent( this, selection );\n\t}\n\n\t/**\n\t * Checks whether the given {@link module:engine/model/range~Range range} or\n\t * {@link module:engine/model/element~Element element} has any meaningful content.\n\t *\n\t * Meaningful content is:\n\t *\n\t * * any text node (`options.ignoreWhitespaces` allows controlling whether this text node must also contain\n\t * any non-whitespace characters),\n\t * * or any {@link module:engine/model/schema~Schema#isObject object element},\n\t * * or any {@link module:engine/model/markercollection~Marker marker} which\n\t * {@link module:engine/model/markercollection~Marker#_affectsData affects data}.\n\t *\n\t * This means that a range containing an empty `<paragraph></paragraph>` is not considered to have a meaningful content.\n\t * However, a range containing an `<image></image>` (which would normally be marked in the schema as an object element)\n\t * is considered non-empty.\n\t *\n\t * @param {module:engine/model/range~Range|module:engine/model/element~Element} rangeOrElement Range or element to check.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.ignoreWhitespaces] Whether text node with whitespaces only should be considered empty.\n\t * @returns {Boolean}\n\t */\n\thasContent( rangeOrElement, options ) {\n\t\tconst range = rangeOrElement instanceof ModelElement ? ModelRange._createIn( rangeOrElement ) : rangeOrElement;\n\n\t\tif ( range.isCollapsed ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if there are any markers which affects data in this given range.\n\t\tfor ( const intersectingMarker of this.markers.getMarkersIntersectingRange( range ) ) {\n\t\t\tif ( intersectingMarker.affectsData ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tconst { ignoreWhitespaces = false } = options || {};\n\n\t\tfor ( const item of range.getItems() ) {\n\t\t\tif ( item.is( 'textProxy' ) ) {\n\t\t\t\tif ( !ignoreWhitespaces ) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else if ( item.data.search( /\\S/ ) !== -1 ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else if ( this.schema.isObject( item ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Creates a position from the given root and path in that root.\n\t *\n\t * Note: This method is also available as\n\t * {@link module:engine/model/writer~Writer#createPositionFromPath `Writer#createPositionFromPath()`}.\n\t *\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} root Root of the position.\n\t * @param {Array.<Number>} path Position path. See {@link module:engine/model/position~Position#path}.\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness.\n\t * See {@link module:engine/model/position~PositionStickiness}.\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tcreatePositionFromPath( root, path, stickiness ) {\n\t\treturn new ModelPosition( root, path, stickiness );\n\t}\n\n\t/**\n\t * Creates position at the given location. The location can be specified as:\n\t *\n\t * * a {@link module:engine/model/position~Position position},\n\t * * a parent element and offset in that element,\n\t * * a parent element and `'end'` (the position will be set at the end of that element),\n\t * * a {@link module:engine/model/item~Item model item} and `'before'` or `'after'`\n\t * (the position will be set before or after the given model item).\n\t *\n\t * This method is a shortcut to other factory methods such as:\n\t *\n\t * * {@link module:engine/model/model~Model#createPositionBefore `createPositionBefore()`},\n\t * * {@link module:engine/model/model~Model#createPositionAfter `createPositionAfter()`}.\n\t *\n\t * Note: This method is also available as\n\t * {@link module:engine/model/writer~Writer#createPositionAt `Writer#createPositionAt()`},\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/model/item~Item model item}.\n\t */\n\tcreatePositionAt( itemOrPosition, offset ) {\n\t\treturn ModelPosition._createAt( itemOrPosition, offset );\n\t}\n\n\t/**\n\t * Creates a new position after the given {@link module:engine/model/item~Item model item}.\n\t *\n\t * Note: This method is also available as\n\t * {@link module:engine/model/writer~Writer#createPositionAfter `Writer#createPositionAfter()`}.\n\t *\n\t * @param {module:engine/model/item~Item} item Item after which the position should be placed.\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tcreatePositionAfter( item ) {\n\t\treturn ModelPosition._createAfter( item );\n\t}\n\n\t/**\n\t * Creates a new position before the given {@link module:engine/model/item~Item model item}.\n\t *\n\t * Note: This method is also available as\n\t * {@link module:engine/model/writer~Writer#createPositionBefore `Writer#createPositionBefore()`}.\n\t *\n\t * @param {module:engine/model/item~Item} item Item before which the position should be placed.\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tcreatePositionBefore( item ) {\n\t\treturn ModelPosition._createBefore( item );\n\t}\n\n\t/**\n\t * Creates a range spanning from the `start` position to the `end` position.\n\t *\n\t * Note: This method is also available as\n\t * {@link module:engine/model/writer~Writer#createRange `Writer#createRange()`}:\n\t *\n\t *\t\tmodel.change( writer => {\n\t *\t\t\tconst range = writer.createRange( start, end );\n\t *\t\t} );\n\t *\n\t * @param {module:engine/model/position~Position} start Start position.\n\t * @param {module:engine/model/position~Position} [end] End position. If not set, the range will be collapsed\n\t * to the `start` position.\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tcreateRange( start, end ) {\n\t\treturn new ModelRange( start, end );\n\t}\n\n\t/**\n\t * Creates a range inside the given element which starts before the first child of\n\t * that element and ends after the last child of that element.\n\t *\n\t * Note: This method is also available as\n\t * {@link module:engine/model/writer~Writer#createRangeIn `Writer#createRangeIn()`}:\n\t *\n\t *\t\tmodel.change( writer => {\n\t *\t\t\tconst range = writer.createRangeIn( paragraph );\n\t *\t\t} );\n\t *\n\t * @param {module:engine/model/element~Element} element Element which is a parent for the range.\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tcreateRangeIn( element ) {\n\t\treturn ModelRange._createIn( element );\n\t}\n\n\t/**\n\t * Creates a range that starts before the given {@link module:engine/model/item~Item model item} and ends after it.\n\t *\n\t * Note: This method is also available on `writer` instance as\n\t * {@link module:engine/model/writer~Writer#createRangeOn `Writer.createRangeOn()`}:\n\t *\n\t *\t\tmodel.change( writer => {\n\t *\t\t\tconst range = writer.createRangeOn( paragraph );\n\t *\t\t} );\n\t *\n\t * @param {module:engine/model/item~Item} item\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tcreateRangeOn( item ) {\n\t\treturn ModelRange._createOn( item );\n\t}\n\n\t/**\n\t * Creates a new selection instance based on the given {@link module:engine/model/selection~Selectable selectable}\n\t * or creates an empty selection if no arguments were passed.\n\t *\n\t * Note: This method is also available as\n\t * {@link module:engine/model/writer~Writer#createSelection `Writer#createSelection()`}.\n\t *\n\t *\t\t// Creates empty selection without ranges.\n\t *\t\tconst selection = writer.createSelection();\n\t *\n\t *\t\t// Creates selection at the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\tconst selection = writer.createSelection( range );\n\t *\n\t *\t\t// Creates selection at the given ranges\n\t *\t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n\t *\t\tconst selection = writer.createSelection( ranges );\n\t *\n\t *\t\t// Creates selection from the other selection.\n\t *\t\t// Note: It doesn't copies selection attributes.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\tconst selection = writer.createSelection( otherSelection );\n\t *\n\t *\t\t// Creates selection from the given document selection.\n\t *\t\t// Note: It doesn't copies selection attributes.\n\t *\t\tconst documentSelection = model.document.selection;\n\t *\t\tconst selection = writer.createSelection( documentSelection );\n\t *\n\t *\t\t// Creates selection at the given position.\n\t *\t\tconst position = writer.createPositionFromPath( root, path );\n\t *\t\tconst selection = writer.createSelection( position );\n\t *\n\t *\t\t// Creates selection at the given offset in the given element.\n\t *\t\tconst paragraph = writer.createElement( 'paragraph' );\n\t *\t\tconst selection = writer.createSelection( paragraph, offset );\n\t *\n\t *\t\t// Creates a range inside an {@link module:engine/model/element~Element element} which starts before the\n\t *\t\t// first child of that element and ends after the last child of that element.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'in' );\n\t *\n\t *\t\t// Creates a range on an {@link module:engine/model/item~Item item} which starts before the item and ends\n\t *\t\t// just after the item.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'on' );\n\t *\n\t *\t\t// Additional options (`'backward'`) can be specified as the last argument.\n\t *\n\t *\t\t// Creates backward selection.\n\t *\t\tconst selection = writer.createSelection( range, { backward: true } );\n\t *\n\t * @param {module:engine/model/selection~Selectable} selectable\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @returns {module:engine/model/selection~Selection}\n\t */\n\tcreateSelection( selectable, placeOrOffset, options ) {\n\t\treturn new ModelSelection( selectable, placeOrOffset, options );\n\t}\n\n\t/**\n\t * Creates a {@link module:engine/model/batch~Batch} instance.\n\t *\n\t * **Note:** In most cases creating a batch instance is not necessary as they are created when using:\n\t *\n\t * * {@link #change `change()`},\n\t * * {@link #enqueueChange `enqueueChange()`}.\n\t *\n\t * @param {'transparent'|'default'} [type='default'] The type of the batch.\n\t * @returns {module:engine/model/batch~Batch}\n\t */\n\tcreateBatch( type ) {\n\t\treturn new Batch( type );\n\t}\n\n\t/**\n\t * Creates an operation instance from a JSON object (parsed JSON string).\n\t *\n\t * This is an alias for {@link module:engine/model/operation/operationfactory~OperationFactory.fromJSON `OperationFactory.fromJSON()`}.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @returns {module:engine/model/operation/operation~Operation}\n\t */\n\tcreateOperationFromJSON( json ) {\n\t\treturn OperationFactory.fromJSON( json, this.document );\n\t}\n\n\t/**\n\t * Removes all events listeners set by model instance and destroys {@link module:engine/model/document~Document}.\n\t */\n\tdestroy() {\n\t\tthis.document.destroy();\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Common part of {@link module:engine/model/model~Model#change} and {@link module:engine/model/model~Model#enqueueChange}\n\t * which calls callbacks and returns array of values returned by these callbacks.\n\t *\n\t * @private\n\t * @returns {Array.<*>} Array of values returned by callbacks.\n\t */\n\t_runPendingChanges() {\n\t\tconst ret = [];\n\n\t\tthis.fire( '_beforeChanges' );\n\n\t\twhile ( this._pendingChanges.length ) {\n\t\t\t// Create a new writer using batch instance created for this chain of changes.\n\t\t\tconst currentBatch = this._pendingChanges[ 0 ].batch;\n\t\t\tthis._currentWriter = new Writer( this, currentBatch );\n\n\t\t\t// Execute changes callback and gather the returned value.\n\t\t\tconst callbackReturnValue = this._pendingChanges[ 0 ].callback( this._currentWriter );\n\t\t\tret.push( callbackReturnValue );\n\n\t\t\tthis.document._handleChangeBlock( this._currentWriter );\n\n\t\t\tthis._pendingChanges.shift();\n\t\t\tthis._currentWriter = null;\n\t\t}\n\n\t\tthis.fire( '_afterChanges' );\n\n\t\treturn ret;\n\t}\n\n\t/**\n\t * Fired when entering the outermost {@link module:engine/model/model~Model#enqueueChange} or\n\t * {@link module:engine/model/model~Model#change} block.\n\t *\n\t * @protected\n\t * @event _beforeChanges\n\t */\n\n\t/**\n\t * Fired when leaving the outermost {@link module:engine/model/model~Model#enqueueChange} or\n\t * {@link module:engine/model/model~Model#change} block.\n\t *\n\t * @protected\n\t * @event _afterChanges\n\t */\n\n\t/**\n\t * Fired every time any {@link module:engine/model/operation/operation~Operation operation} is applied on the model\n\t * using {@link #applyOperation}.\n\t *\n\t * Note that this event is suitable only for very specific use-cases. Use it if you need to listen to every single operation\n\t * applied on the document. However, in most cases {@link module:engine/model/document~Document#event:change} should\n\t * be used.\n\t *\n\t * A few callbacks are already added to this event by engine internal classes:\n\t *\n\t * * with `highest` priority operation is validated,\n\t * * with `normal` priority operation is executed,\n\t * * with `low` priority the {@link module:engine/model/document~Document} updates its version,\n\t * * with `low` priority {@link module:engine/model/liveposition~LivePosition} and {@link module:engine/model/liverange~LiveRange}\n\t * update themselves.\n\t *\n\t * @event applyOperation\n\t * @param {Array} args Arguments of the `applyOperation` which is an array with a single element - applied\n\t * {@link module:engine/model/operation/operation~Operation operation}.\n\t */\n\n\t/**\n\t * Event fired when {@link #insertContent} method is called.\n\t *\n\t * The {@link #insertContent default action of that method} is implemented as a\n\t * listener to this event so it can be fully customized by the features.\n\t *\n\t * **Note** The `selectable` parameter for the {@link #insertContent} is optional. When `undefined` value is passed the method uses\n\t * `model.document.selection`.\n\t *\n\t * @event insertContent\n\t * @param {Array} args The arguments passed to the original method.\n\t */\n\n\t/**\n\t * Event fired when {@link #deleteContent} method is called.\n\t *\n\t * The {@link #deleteContent default action of that method} is implemented as a\n\t * listener to this event so it can be fully customized by the features.\n\t *\n\t * @event deleteContent\n\t * @param {Array} args The arguments passed to the original method.\n\t */\n\n\t/**\n\t * Event fired when {@link #modifySelection} method is called.\n\t *\n\t * The {@link #modifySelection default action of that method} is implemented as a\n\t * listener to this event so it can be fully customized by the features.\n\t *\n\t * @event modifySelection\n\t * @param {Array} args The arguments passed to the original method.\n\t */\n\n\t/**\n\t * Event fired when {@link #getSelectedContent} method is called.\n\t *\n\t * The {@link #getSelectedContent default action of that method} is implemented as a\n\t * listener to this event so it can be fully customized by the features.\n\t *\n\t * @event getSelectedContent\n\t * @param {Array} args The arguments passed to the original method.\n\t */\n}\n\nmix( Model, ObservableMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/keystrokehandler\n */\n\nimport DomEmitterMixin from './dom/emittermixin';\nimport { getCode, parseKeystroke } from './keyboard';\n\n/**\n * Keystroke handler allows registering callbacks for given keystrokes.\n *\n * The most frequent use of this class is through the {@link module:core/editor/editor~Editor#keystrokes `editor.keystrokes`}\n * property. It allows listening to keystrokes executed in the editing view:\n *\n *\t\teditor.keystrokes.set( 'Ctrl+A', ( keyEvtData, cancel ) => {\n *\t\t\tconsole.log( 'Ctrl+A has been pressed' );\n *\t\t\tcancel();\n *\t\t} );\n *\n * However, this utility class can be used in various part of the UI. For instance, a certain {@link module:ui/view~View}\n * can use it like this:\n *\n *\t\tclass MyView extends View {\n *\t\t\tconstructor() {\n *\t\t\t\tthis.keystrokes = new KeystrokeHandler();\n *\n * \t\t\t\tthis.keystrokes.set( 'tab', handleTabKey );\n *\t\t\t}\n *\n *\t\t\trender() {\n *\t\t\t\tsuper.render();\n *\n *\t\t\t\tthis.keystrokes.listenTo( this.element );\n *\t\t\t}\n *\t\t}\n *\n * That keystroke handler will listen to `keydown` events fired in this view's main element.\n *\n */\nexport default class KeystrokeHandler {\n\t/**\n\t * Creates an instance of the keystroke handler.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Listener used to listen to events for easier keystroke handler destruction.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:utils/dom/emittermixin~Emitter}\n\t\t */\n\t\tthis._listener = Object.create( DomEmitterMixin );\n\t}\n\n\t/**\n\t * Starts listening for `keydown` events from a given emitter.\n\t *\n\t * @param {module:utils/emittermixin~Emitter} emitter\n\t */\n\tlistenTo( emitter ) {\n\t\t// The #_listener works here as a kind of dispatcher. It groups the events coming from the same\n\t\t// keystroke so the listeners can be attached to them with different priorities.\n\t\t//\n\t\t// E.g. all the keystrokes with the `keyCode` of 42 coming from the `emitter` are propagated\n\t\t// as a `_keydown:42` event by the `_listener`. If there's a callback created by the `set`\n\t\t// method for this 42 keystroke, it listens to the `_listener#_keydown:42` event only and interacts\n\t\t// only with other listeners of this particular event, thus making it possible to prioritize\n\t\t// the listeners and safely cancel execution, when needed. Instead of duplicating the Emitter logic,\n\t\t// the KeystrokeHandler re–uses it to do its job.\n\t\tthis._listener.listenTo( emitter, 'keydown', ( evt, keyEvtData ) => {\n\t\t\tthis._listener.fire( '_keydown:' + getCode( keyEvtData ), keyEvtData );\n\t\t} );\n\t}\n\n\t/**\n\t * Registers a handler for the specified keystroke.\n\t *\n\t * @param {String|Array.<String|Number>} keystroke Keystroke defined in a format accepted by\n\t * the {@link module:utils/keyboard~parseKeystroke} function.\n\t * @param {Function} callback A function called with the\n\t * {@link module:engine/view/observer/keyobserver~KeyEventData key event data} object and\n\t * a helper funcion to call both `preventDefault()` and `stopPropagation()` on the underlying event.\n\t * @param {Object} [options={}] Additional options.\n\t * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of the keystroke\n\t * callback. The higher the priority value the sooner the callback will be executed. Keystrokes having the same priority\n\t * are called in the order they were added.\n\t */\n\tset( keystroke, callback, options = {} ) {\n\t\tconst keyCode = parseKeystroke( keystroke );\n\t\tconst priority = options.priority;\n\n\t\t// Execute the passed callback on KeystrokeHandler#_keydown.\n\t\t// TODO: https://github.com/ckeditor/ckeditor5-utils/issues/144\n\t\tthis._listener.listenTo( this._listener, '_keydown:' + keyCode, ( evt, keyEvtData ) => {\n\t\t\tcallback( keyEvtData, () => {\n\t\t\t\t// Stop the event in the DOM: no listener in the web page\n\t\t\t\t// will be triggered by this event.\n\t\t\t\tkeyEvtData.preventDefault();\n\t\t\t\tkeyEvtData.stopPropagation();\n\n\t\t\t\t// Stop the event in the KeystrokeHandler: no more callbacks\n\t\t\t\t// will be executed for this keystroke.\n\t\t\t\tevt.stop();\n\t\t\t} );\n\n\t\t\t// Mark this keystroke as handled by the callback. See: #press.\n\t\t\tevt.return = true;\n\t\t}, { priority } );\n\t}\n\n\t/**\n\t * Triggers a keystroke handler for a specified key combination, if such a keystroke was {@link #set defined}.\n\t *\n\t * @param {module:engine/view/observer/keyobserver~KeyEventData} keyEvtData Key event data.\n\t * @returns {Boolean} Whether the keystroke was handled.\n\t */\n\tpress( keyEvtData ) {\n\t\treturn !!this._listener.fire( '_keydown:' + getCode( keyEvtData ), keyEvtData );\n\t}\n\n\t/**\n\t * Destroys the keystroke handler.\n\t */\n\tdestroy() {\n\t\tthis._listener.stopListening();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/editingkeystrokehandler\n */\n\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\n\n/**\n * A keystroke handler for editor editing. Its instance is available\n * in {@link module:core/editor/editor~Editor#keystrokes} so plugins\n * can register their keystrokes.\n *\n * E.g. an undo plugin would do this:\n *\n *\t\teditor.keystrokes.set( 'Ctrl+Z', 'undo' );\n *\t\teditor.keystrokes.set( 'Ctrl+Shift+Z', 'redo' );\n *\t\teditor.keystrokes.set( 'Ctrl+Y', 'redo' );\n *\n * @extends module:utils/keystrokehandler~KeystrokeHandler\n */\nexport default class EditingKeystrokeHandler extends KeystrokeHandler {\n\t/**\n\t * Creates an instance of the keystroke handler.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor\n\t */\n\tconstructor( editor ) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The editor instance.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/editor/editor~Editor}\n\t\t */\n\t\tthis.editor = editor;\n\t}\n\n\t/**\n\t * Registers a handler for the specified keystroke.\n\t *\n\t * The handler can be specified as a command name or a callback.\n\t *\n\t * @param {String|Array.<String|Number>} keystroke Keystroke defined in a format accepted by\n\t * the {@link module:utils/keyboard~parseKeystroke} function.\n\t * @param {Function|String} callback If a string is passed, then the keystroke will\n\t * {@link module:core/editor/editor~Editor#execute execute a command}.\n\t * If a function, then it will be called with the\n\t * {@link module:engine/view/observer/keyobserver~KeyEventData key event data} object and\n\t * a `cancel()` helper to both `preventDefault()` and `stopPropagation()` of the event.\n\t * @param {Object} [options={}] Additional options.\n\t * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of the keystroke\n\t * callback. The higher the priority value the sooner the callback will be executed. Keystrokes having the same priority\n\t * are called in the order they were added.\n\t */\n\tset( keystroke, callback, options = {} ) {\n\t\tif ( typeof callback == 'string' ) {\n\t\t\tconst commandName = callback;\n\n\t\t\tcallback = ( evtData, cancel ) => {\n\t\t\t\tthis.editor.execute( commandName );\n\t\t\t\tcancel();\n\t\t\t};\n\t\t}\n\n\t\tsuper.set( keystroke, callback, options );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/editor/editor\n */\n\nimport Context from '../context';\nimport Config from '@ckeditor/ckeditor5-utils/src/config';\nimport EditingController from '@ckeditor/ckeditor5-engine/src/controller/editingcontroller';\nimport PluginCollection from '../plugincollection';\nimport CommandCollection from '../commandcollection';\nimport DataController from '@ckeditor/ckeditor5-engine/src/controller/datacontroller';\nimport Conversion from '@ckeditor/ckeditor5-engine/src/conversion/conversion';\nimport Model from '@ckeditor/ckeditor5-engine/src/model/model';\nimport EditingKeystrokeHandler from '../editingkeystrokehandler';\n\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * The class representing a basic, generic editor.\n *\n * Check out the list of its subclasses to learn about specific editor implementations.\n *\n * All editor implementations (like {@link module:editor-classic/classiceditor~ClassicEditor} or\n * {@link module:editor-inline/inlineeditor~InlineEditor}) should extend this class. They can add their\n * own methods and properties.\n *\n * When you are implementing a plugin, this editor represents the API\n * which your plugin can expect to get when using its {@link module:core/plugin~Plugin#editor} property.\n *\n * This API should be sufficient in order to implement the \"editing\" part of your feature\n * (schema definition, conversion, commands, keystrokes, etc.).\n * It does not define the editor UI, which is available only if\n * the specific editor implements also the {@link module:core/editor/editorwithui~EditorWithUI} interface\n * (as most editor implementations do).\n *\n * @abstract\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class Editor {\n\t/**\n\t * Creates a new instance of the editor class.\n\t *\n\t * Usually, not to be used directly. See the static {@link module:core/editor/editor~Editor.create `create()`} method.\n\t *\n\t * @param {Object} [config={}] The editor configuration.\n\t */\n\tconstructor( config = {} ) {\n\t\t/**\n\t\t * The editor context.\n\t\t * When it is not provided through the configuration, the editor creates it.\n\t\t *\n\t\t * @protected\n\t\t * @type {module:core/context~Context}\n\t\t */\n\t\tthis._context = config.context || new Context( { language: config.language } );\n\t\tthis._context._addEditor( this, !config.context );\n\n\t\t// Clone the plugins to make sure that the plugin array will not be shared\n\t\t// between editors and make the watchdog feature work correctly.\n\t\tconst availablePlugins = Array.from( this.constructor.builtinPlugins || [] );\n\n\t\t/**\n\t\t * Stores all configurations specific to this editor instance.\n\t\t *\n\t\t *\t\teditor.config.get( 'image.toolbar' );\n\t\t *\t\t// -> [ 'imageStyle:full', 'imageStyle:side', '|', 'imageTextAlternative' ]\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/config~Config}\n\t\t */\n\t\tthis.config = new Config( config, this.constructor.defaultConfig );\n\t\tthis.config.define( 'plugins', availablePlugins );\n\t\tthis.config.define( this._context._getEditorConfig() );\n\n\t\t/**\n\t\t * The plugins loaded and in use by this editor instance.\n\t\t *\n\t\t *\t\teditor.plugins.get( 'Clipboard' ); // -> An instance of the clipboard plugin.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/plugincollection~PluginCollection}\n\t\t */\n\t\tthis.plugins = new PluginCollection( this, availablePlugins, this._context.plugins );\n\n\t\t/**\n\t\t * @readonly\n\t\t * @type {module:utils/locale~Locale}\n\t\t */\n\t\tthis.locale = this._context.locale;\n\n\t\t/**\n\t\t * Shorthand for {@link module:utils/locale~Locale#t}.\n\t\t *\n\t\t * @see module:utils/locale~Locale#t\n\t\t * @method #t\n\t\t */\n\t\tthis.t = this.locale.t;\n\n\t\t/**\n\t\t * Commands registered to the editor.\n\t\t *\n\t\t * Use the shorthand {@link #execute `editor.execute()`} method to execute commands:\n\t\t *\n\t\t *\t\t// Execute the bold command:\n\t\t *\t\teditor.execute( 'bold' );\n\t\t *\n\t\t *\t\t// Check the state of the bold command:\n\t\t *\t\teditor.commands.get( 'bold' ).value;\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/commandcollection~CommandCollection}\n\t\t */\n\t\tthis.commands = new CommandCollection();\n\n\t\t/**\n\t\t * Indicates the editor life-cycle state.\n\t\t *\n\t\t * The editor is in one of the following states:\n\t\t *\n\t\t * * `initializing` &ndash; During the editor initialization (before\n\t\t * {@link module:core/editor/editor~Editor.create `Editor.create()`}) finished its job.\n\t\t * * `ready` &ndash; After the promise returned by the {@link module:core/editor/editor~Editor.create `Editor.create()`}\n\t\t * method is resolved.\n\t\t * * `destroyed` &ndash; Once the {@link #destroy `editor.destroy()`} method was called.\n\t\t *\n\t\t * @observable\n\t\t * @member {'initializing'|'ready'|'destroyed'} #state\n\t\t */\n\t\tthis.set( 'state', 'initializing' );\n\t\tthis.once( 'ready', () => ( this.state = 'ready' ), { priority: 'high' } );\n\t\tthis.once( 'destroy', () => ( this.state = 'destroyed' ), { priority: 'high' } );\n\n\t\t/**\n\t\t * Defines whether this editor is in read-only mode.\n\t\t *\n\t\t * In read-only mode the editor {@link #commands commands} are disabled so it is not possible\n\t\t * to modify the document by using them. Also, the editable element(s) become non-editable.\n\t\t *\n\t\t * In order to make the editor read-only, you can set this value directly:\n\t\t *\n\t\t *\t\teditor.isReadOnly = true;\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isReadOnly\n\t\t */\n\t\tthis.set( 'isReadOnly', false );\n\n\t\t/**\n\t\t * The editor's model.\n\t\t *\n\t\t * The central point of the editor's abstract data model.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/model~Model}\n\t\t */\n\t\tthis.model = new Model();\n\n\t\t/**\n\t\t * The {@link module:engine/controller/datacontroller~DataController data controller}.\n\t\t * Used e.g. for setting and retrieving the editor data.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/controller/datacontroller~DataController}\n\t\t */\n\t\tthis.data = new DataController( this.model );\n\n\t\t/**\n\t\t * The {@link module:engine/controller/editingcontroller~EditingController editing controller}.\n\t\t * Controls user input and rendering the content for editing.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/controller/editingcontroller~EditingController}\n\t\t */\n\t\tthis.editing = new EditingController( this.model );\n\t\tthis.editing.view.document.bind( 'isReadOnly' ).to( this );\n\n\t\t/**\n\t\t * Conversion manager through which you can register model-to-view and view-to-model converters.\n\t\t *\n\t\t * See the {@link module:engine/conversion/conversion~Conversion} documentation to learn how to add converters.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/conversion/conversion~Conversion}\n\t\t */\n\t\tthis.conversion = new Conversion( [ this.editing.downcastDispatcher, this.data.downcastDispatcher ], this.data.upcastDispatcher );\n\t\tthis.conversion.addAlias( 'dataDowncast', this.data.downcastDispatcher );\n\t\tthis.conversion.addAlias( 'editingDowncast', this.editing.downcastDispatcher );\n\n\t\t/**\n\t\t * An instance of the {@link module:core/editingkeystrokehandler~EditingKeystrokeHandler}.\n\t\t *\n\t\t * It allows setting simple keystrokes:\n\t\t *\n\t\t *\t\t// Execute the bold command on Ctrl+E:\n\t\t *\t\teditor.keystrokes.set( 'Ctrl+E', 'bold' );\n\t\t *\n\t\t *\t\t// Execute your own callback:\n\t\t *\t\teditor.keystrokes.set( 'Ctrl+E', ( data, cancel ) => {\n\t\t *\t\t\tconsole.log( data.keyCode );\n\t\t *\n\t\t *\t\t\t// Prevent the default (native) action and stop the underlying keydown event\n\t\t *\t\t\t// so no other editor feature will interfere.\n\t\t *\t\t\tcancel();\n\t\t *\t\t} );\n\t\t *\n\t\t * Note: Certain typing-oriented keystrokes (like <kbd>Backspace</kbd> or <kbd>Enter</kbd>) are handled\n\t\t * by a low-level mechanism and trying to listen to them via the keystroke handler will not work reliably.\n\t\t * To handle these specific keystrokes, see the events fired by the\n\t\t * {@link module:engine/view/document~Document editing view document} (`editor.editing.view.document`).\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/editingkeystrokehandler~EditingKeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new EditingKeystrokeHandler( this );\n\t\tthis.keystrokes.listenTo( this.editing.view.document );\n\t}\n\n\t/**\n\t * Loads and initializes plugins specified in the configuration.\n\t *\n\t * @returns {Promise.<module:core/plugin~LoadedPlugins>} A promise which resolves\n\t * once the initialization is completed, providing an array of loaded plugins.\n\t */\n\tinitPlugins() {\n\t\tconst config = this.config;\n\t\tconst plugins = config.get( 'plugins' );\n\t\tconst removePlugins = config.get( 'removePlugins' ) || [];\n\t\tconst extraPlugins = config.get( 'extraPlugins' ) || [];\n\n\t\treturn this.plugins.init( plugins.concat( extraPlugins ), removePlugins );\n\t}\n\n\t/**\n\t * Destroys the editor instance, releasing all resources used by it.\n\t *\n\t * **Note** The editor cannot be destroyed during the initialization phase so if it is called\n\t * while the editor {@link #state is being initialized}, it will wait for the editor initialization before destroying it.\n\t *\n\t * @fires destroy\n\t * @returns {Promise} A promise that resolves once the editor instance is fully destroyed.\n\t */\n\tdestroy() {\n\t\tlet readyPromise = Promise.resolve();\n\n\t\tif ( this.state == 'initializing' ) {\n\t\t\treadyPromise = new Promise( resolve => this.once( 'ready', resolve ) );\n\t\t}\n\n\t\treturn readyPromise\n\t\t\t.then( () => {\n\t\t\t\tthis.fire( 'destroy' );\n\t\t\t\tthis.stopListening();\n\t\t\t\tthis.commands.destroy();\n\t\t\t} )\n\t\t\t.then( () => this.plugins.destroy() )\n\t\t\t.then( () => {\n\t\t\t\tthis.model.destroy();\n\t\t\t\tthis.data.destroy();\n\t\t\t\tthis.editing.destroy();\n\t\t\t\tthis.keystrokes.destroy();\n\t\t\t} )\n\t\t\t// Remove the editor from the context.\n\t\t\t// When the context was created by this editor, the context will be destroyed.\n\t\t\t.then( () => this._context._removeEditor( this ) );\n\t}\n\n\t/**\n\t * Executes the specified command with given parameters.\n\t *\n\t * Shorthand for:\n\t *\n\t *\t\teditor.commands.get( commandName ).execute( ... );\n\t *\n\t * @param {String} commandName The name of the command to execute.\n\t * @param {*} [...commandParams] Command parameters.\n\t */\n\texecute( ...args ) {\n\t\ttry {\n\t\t\tthis.commands.execute( ...args );\n\t\t} catch ( err ) {\n\t\t\t// @if CK_DEBUG // throw err;\n\t\t\t/* istanbul ignore next */\n\t\t\tCKEditorError.rethrowUnexpectedError( err, this );\n\t\t}\n\t}\n\n\t/**\n\t * Creates and initializes a new editor instance.\n\t *\n\t * This is an abstract method. Every editor type needs to implement its own initialization logic.\n\t *\n\t * See the `create()` methods of the existing editor types to learn how to use them:\n\t *\n\t * * {@link module:editor-classic/classiceditor~ClassicEditor.create `ClassicEditor.create()`}\n\t * * {@link module:editor-balloon/ballooneditor~BalloonEditor.create `BalloonEditor.create()`}\n\t * * {@link module:editor-decoupled/decouplededitor~DecoupledEditor.create `DecoupledEditor.create()`}\n\t * * {@link module:editor-inline/inlineeditor~InlineEditor.create `InlineEditor.create()`}\n\t *\n\t * @abstract\n\t * @method module:core/editor/editor~Editor.create\n\t */\n}\n\nmix( Editor, ObservableMixin );\n\n/**\n * Fired when the {@link module:engine/controller/datacontroller~DataController#event:ready data} and all additional\n * editor components are ready.\n *\n * Note: This event is most useful for plugin developers. When integrating the editor with your website or\n * application, you do not have to listen to `editor#ready` because when the promise returned by the static\n * {@link module:core/editor/editor~Editor.create `Editor.create()`} event is resolved, the editor is already ready.\n * In fact, since the first moment when the editor instance is available to you is inside `then()`'s callback,\n * you cannot even add a listener to the `editor#ready` event.\n *\n * See also the {@link #state `editor.state`} property.\n *\n * @event ready\n */\n\n/**\n * Fired when this editor instance is destroyed. The editor at this point is not usable and this event should be used to\n * perform the clean-up in any plugin.\n *\n *\n * See also the {@link #state `editor.state`} property.\n *\n * @event destroy\n */\n\n/**\n * This error is thrown when trying to pass a `<textarea>` element to a `create()` function of an editor class.\n *\n * The only editor type which can be initialized on `<textarea>` elements is {@glink builds/guides/overview#classic-editor classic editor}.\n * This editor hides the passed element and inserts its own UI next to it. Other types of editors reuse the passed element as their root\n * editable element and therefore `<textarea>` is not appropriate for them. Use a `<div>` or another text container instead:\n *\n *\t\t<div id=\"editor\">\n *\t\t\t<p>Initial content.</p>\n *\t\t</div>\n *\n * @error editor-wrong-element\n */\n\n/**\n * An array of plugins built into this editor class.\n *\n * It is used in CKEditor 5 builds to provide a list of plugins which are later automatically initialized\n * during the editor initialization.\n *\n * They will be automatically initialized by the editor, unless listed in `config.removePlugins` and\n * unless `config.plugins` is passed.\n *\n *\t\t// Build some plugins into the editor class first.\n *\t\tClassicEditor.builtinPlugins = [ FooPlugin, BarPlugin ];\n *\n *\t\t// Normally, you need to define config.plugins, but since ClassicEditor.builtinPlugins was\n *\t\t// defined, now you can call create() without any configuration.\n *\t\tClassicEditor\n *\t\t\t.create( sourceElement )\n *\t\t\t.then( editor => {\n *\t\t\t\teditor.plugins.get( FooPlugin ); // -> An instance of the Foo plugin.\n *\t\t\t\teditor.plugins.get( BarPlugin ); // -> An instance of the Bar plugin.\n *\t\t\t} );\n *\n *\t\tClassicEditor\n *\t\t\t.create( sourceElement, {\n *\t\t\t\t// Do not initialize these plugins (note: it is defined by a string):\n *\t\t\t\tremovePlugins: [ 'Foo' ]\n *\t\t\t} )\n *\t\t\t.then( editor => {\n *\t\t\t\teditor.plugins.get( FooPlugin ); // -> Undefined.\n *\t\t\t\teditor.config.get( BarPlugin ); // -> An instance of the Bar plugin.\n *\t\t\t} );\n *\n *\t\tClassicEditor\n *\t\t\t.create( sourceElement, {\n *\t\t\t\t// Load only this plugin. It can also be defined by a string if\n *\t\t\t\t// this plugin was built into the editor class.\n *\t\t\t\tplugins: [ FooPlugin ]\n *\t\t\t} )\n *\t\t\t.then( editor => {\n *\t\t\t\teditor.plugins.get( FooPlugin ); // -> An instance of the Foo plugin.\n *\t\t\t\teditor.config.get( BarPlugin ); // -> Undefined.\n *\t\t\t} );\n *\n * See also {@link module:core/editor/editor~Editor.defaultConfig}.\n *\n * @static\n * @member {Array.<Function>} module:core/editor/editor~Editor.builtinPlugins\n */\n\n/**\n * The default configuration which is built into the editor class.\n *\n * It is used in CKEditor 5 builds to provide the default configuration options which are later used during the editor initialization.\n *\n *\t\tClassicEditor.defaultConfig = {\n *\t\t\tfoo: 1,\n *\t\t\tbar: 2\n *\t\t};\n *\n *\t\tClassicEditor\n *\t\t\t.create( sourceElement )\n *\t\t\t.then( editor => {\n *\t\t\t\teditor.config.get( 'foo' ); // -> 1\n *\t\t\t\teditor.config.get( 'bar' ); // -> 2\n *\t\t\t} );\n *\n *\t\t// The default options can be overridden by the configuration passed to create().\n *\t\tClassicEditor\n *\t\t\t.create( sourceElement, { bar: 3 } )\n *\t\t\t.then( editor => {\n *\t\t\t\teditor.config.get( 'foo' ); // -> 1\n *\t\t\t\teditor.config.get( 'bar' ); // -> 3\n *\t\t\t} );\n *\n * See also {@link module:core/editor/editor~Editor.builtinPlugins}.\n *\n * @static\n * @member {Object} module:core/editor/editor~Editor.defaultConfig\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/editor/utils/dataapimixin\n */\n\n/**\n * Implementation of the {@link module:core/editor/utils/dataapimixin~DataApi}.\n *\n * @mixin DataApiMixin\n * @implements module:core/editor/utils/dataapimixin~DataApi\n */\nconst DataApiMixin = {\n\t/**\n\t * @inheritDoc\n\t */\n\tsetData( data ) {\n\t\tthis.data.set( data );\n\t},\n\n\t/**\n\t * @inheritDoc\n\t */\n\tgetData( options ) {\n\t\treturn this.data.get( options );\n\t}\n};\n\nexport default DataApiMixin;\n\n/**\n * Interface defining editor methods for setting and getting data to and from the editor's main root element\n * using the {@link module:core/editor/editor~Editor#data data pipeline}.\n *\n * This interface is not a part of the {@link module:core/editor/editor~Editor} class because one may want to implement\n * an editor with multiple root elements, in which case the methods for setting and getting data will need to be implemented\n * differently.\n *\n * @interface DataApi\n */\n\n/**\n * Sets the data in the editor.\n *\n *\t\teditor.setData( '<p>This is editor!</p>' );\n *\n * By default the editor accepts HTML. This can be controlled by injecting a different data processor.\n * See the {@glink features/markdown Markdown output} guide for more details.\n *\n * Note: Not only is the format of the data configurable, but the type of the `setData()`'s parameter does not\n * have to be a string either. You can e.g. accept an object or a DOM `DocumentFragment` if you consider this\n * the right format for you.\n *\n * @method #setData\n * @param {String} data Input data.\n */\n\n/**\n * Gets the data from the editor.\n *\n *\t\teditor.getData(); // -> '<p>This is editor!</p>'\n *\n * By default the editor outputs HTML. This can be controlled by injecting a different data processor.\n * See the {@glink features/markdown Markdown output} guide for more details.\n *\n * Note: Not only is the format of the data configurable, but the type of the `getData()`'s return value does not\n * have to be a string either. You can e.g. return an object or a DOM `DocumentFragment` if you consider this\n * the right format for you.\n *\n * @method #getData\n * @param {Object} [options]\n * @param {String} [options.rootName='main'] Root name.\n * @param {String} [options.trim='empty'] Whether returned data should be trimmed. This option is set to `'empty'` by default,\n * which means that whenever editor content is considered empty, an empty string is returned. To turn off trimming\n * use `'none'`. In such cases exact content will be returned (for example `'<p>&nbsp;</p>'` for an empty editor).\n * @returns {String} Output data.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport setDataInElement from '@ckeditor/ckeditor5-utils/src/dom/setdatainelement';\n\n/**\n * @module core/editor/utils/elementapimixin\n */\n\n/**\n * Implementation of the {@link module:core/editor/utils/elementapimixin~ElementApi}.\n *\n * @mixin ElementApiMixin\n * @implements module:core/editor/utils/elementapimixin~ElementApi\n */\nconst ElementApiMixin = {\n\t/**\n\t * @inheritDoc\n\t */\n\tupdateSourceElement() {\n\t\tif ( !this.sourceElement ) {\n\t\t\t/**\n\t\t\t * Cannot update the source element of a detached editor.\n\t\t\t *\n\t\t\t * The {@link ~ElementApi#updateSourceElement `updateSourceElement()`} method cannot be called if you did not\n\t\t\t * pass an element to `Editor.create()`.\n\t\t\t *\n\t\t\t * @error editor-missing-sourceelement\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'editor-missing-sourceelement: Cannot update the source element of a detached editor.',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\tsetDataInElement( this.sourceElement, this.data.get() );\n\t}\n};\n\nexport default ElementApiMixin;\n\n/**\n * Interface describing an editor that replaced a DOM element (was \"initialized on an element\").\n *\n * Such an editor should provide a method to\n * {@link module:core/editor/utils/elementapimixin~ElementApi#updateSourceElement update the replaced element with the current data}.\n *\n * @interface ElementApi\n */\n\n/**\n * The element on which the editor has been initialized.\n *\n * @readonly\n * @member {HTMLElement} #sourceElement\n */\n\n/**\n * Updates the {@link #sourceElement editor source element}'s content with the data.\n *\n * @method #updateSourceElement\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/setdatainelement\n */\n\n/* globals HTMLTextAreaElement */\n\n/**\n * Sets data in a given element.\n *\n * @param {HTMLElement} el The element in which the data will be set.\n * @param {String} data The data string.\n */\nexport default function setDataInElement( el, data ) {\n\tif ( el instanceof HTMLTextAreaElement ) {\n\t\tel.value = data;\n\t}\n\n\tel.innerHTML = data;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/dataprocessor/basichtmlwriter\n */\n\n/* globals document */\n\n/**\n * Basic HTML writer. It uses the native `innerHTML` property for basic conversion\n * from a document fragment to an HTML string.\n *\n * @implements module:engine/dataprocessor/htmlwriter~HtmlWriter\n */\nexport default class BasicHtmlWriter {\n\t/**\n\t * Returns an HTML string created from the document fragment.\n\t *\n\t * @param {DocumentFragment} fragment\n\t * @returns {String}\n\t */\n\tgetHtml( fragment ) {\n\t\tconst doc = document.implementation.createHTMLDocument( '' );\n\t\tconst container = doc.createElement( 'div' );\n\t\tcontainer.appendChild( fragment );\n\n\t\treturn container.innerHTML;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/dataprocessor/htmldataprocessor\n */\n\n/* globals document, DOMParser */\n\nimport BasicHtmlWriter from './basichtmlwriter';\nimport DomConverter from '../view/domconverter';\n\n/**\n * The HTML data processor class.\n * This data processor implementation uses HTML as input and output data.\n *\n * @implements module:engine/dataprocessor/dataprocessor~DataProcessor\n */\nexport default class HtmlDataProcessor {\n\t/**\n\t * Creates a new instance of the HTML data processor class.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * A DOM parser instance used to parse an HTML string to an HTML document.\n\t\t *\n\t\t * @private\n\t\t * @member {DOMParser}\n\t\t */\n\t\tthis._domParser = new DOMParser();\n\n\t\t/**\n\t\t * A DOM converter used to convert DOM elements to view elements.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/view/domconverter~DomConverter}\n\t\t */\n\t\tthis._domConverter = new DomConverter( { blockFillerMode: 'nbsp' } );\n\n\t\t/**\n\t\t * A basic HTML writer instance used to convert DOM elements to an HTML string.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/dataprocessor/basichtmlwriter~BasicHtmlWriter}\n\t\t */\n\t\tthis._htmlWriter = new BasicHtmlWriter();\n\t}\n\n\t/**\n\t * Converts a provided {@link module:engine/view/documentfragment~DocumentFragment document fragment}\n\t * to data format &mdash; in this case to an HTML string.\n\t *\n\t * @param {module:engine/view/documentfragment~DocumentFragment} viewFragment\n\t * @returns {String} HTML string.\n\t */\n\ttoData( viewFragment ) {\n\t\t// Convert view DocumentFragment to DOM DocumentFragment.\n\t\tconst domFragment = this._domConverter.viewToDom( viewFragment, document );\n\n\t\t// Convert DOM DocumentFragment to HTML output.\n\t\treturn this._htmlWriter.getHtml( domFragment );\n\t}\n\n\t/**\n\t * Converts the provided HTML string to a view tree.\n\t *\n\t * @param {String} data An HTML string.\n\t * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null} A converted view element.\n\t */\n\ttoView( data ) {\n\t\t// Convert input HTML data to DOM DocumentFragment.\n\t\tconst domFragment = this._toDom( data );\n\n\t\t// Convert DOM DocumentFragment to view DocumentFragment.\n\t\treturn this._domConverter.domToView( domFragment );\n\t}\n\n\t/**\n\t * Converts an HTML string to its DOM representation. Returns a document fragment containing nodes parsed from\n\t * the provided data.\n\t *\n\t * @private\n\t * @param {String} data\n\t * @returns {DocumentFragment}\n\t */\n\t_toDom( data ) {\n\t\tconst document = this._domParser.parseFromString( data, 'text/html' );\n\t\tconst fragment = document.createDocumentFragment();\n\t\tconst nodes = document.body.childNodes;\n\n\t\twhile ( nodes.length > 0 ) {\n\t\t\tfragment.appendChild( nodes[ 0 ] );\n\t\t}\n\n\t\treturn fragment;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/componentfactory\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * A helper class implementing the UI component ({@link module:ui/view~View view}) factory.\n *\n * It allows functions producing specific UI components to be registered under their unique names\n * in the factory. A registered component can be then instantiated by providing its name.\n * Note that names are case insensitive.\n *\n *\t\t// The editor provides localization tools for the factory.\n *\t\tconst factory = new ComponentFactory( editor );\n *\n *\t\tfactory.add( 'foo', locale => new FooView( locale ) );\n *\t\tfactory.add( 'bar', locale => new BarView( locale ) );\n *\n *\t\t// An instance of FooView.\n *\t\tconst fooInstance = factory.create( 'foo' );\n *\n *\t\t// Names are case insensitive so this is also allowed:\n *\t\tconst barInstance = factory.create( 'Bar' );\n *\n * The {@link module:core/editor/editor~Editor#locale editor locale} is passed to the factory\n * function when {@link module:ui/componentfactory~ComponentFactory#create} is called.\n */\nexport default class ComponentFactory {\n\t/**\n\t * Creates an instance of the factory.\n\t *\n\t * @constructor\n\t * @param {module:core/editor/editor~Editor} editor The editor instance.\n\t */\n\tconstructor( editor ) {\n\t\t/**\n\t\t * The editor instance that the factory belongs to.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/editor/editor~Editor}\n\t\t */\n\t\tthis.editor = editor;\n\n\t\t/**\n\t\t * Registered component factories.\n\t\t *\n\t\t * @private\n\t\t * @member {Map}\n\t\t */\n\t\tthis._components = new Map();\n\t}\n\n\t/**\n\t * Returns an iterator of registered component names. Names are returned in lower case.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\t* names() {\n\t\tfor ( const value of this._components.values() ) {\n\t\t\tyield value.originalName;\n\t\t}\n\t}\n\n\t/**\n\t * Registers a component factory function that will be used by the\n\t * {@link #create create} method and called with the\n\t * {@link module:core/editor/editor~Editor#locale editor locale} as an argument,\n\t * allowing localization of the {@link module:ui/view~View view}.\n\t *\n\t * @param {String} name The name of the component.\n\t * @param {Function} callback The callback that returns the component.\n\t */\n\tadd( name, callback ) {\n\t\tif ( this.has( name ) ) {\n\t\t\t/**\n\t\t\t * The item already exists in the component factory.\n\t\t\t *\n\t\t\t * @error componentfactory-item-exists\n\t\t\t * @param {String} name The name of the component.\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'componentfactory-item-exists: The item already exists in the component factory.',\n\t\t\t\tthis,\n\t\t\t\t{ name }\n\t\t\t);\n\t\t}\n\n\t\tthis._components.set( getNormalized( name ), { callback, originalName: name } );\n\t}\n\n\t/**\n\t * Creates an instance of a component registered in the factory under a specific name.\n\t *\n\t * When called, the {@link module:core/editor/editor~Editor#locale editor locale} is passed to\n\t * the previously {@link #add added} factory function, allowing localization of the\n\t * {@link module:ui/view~View view}.\n\t *\n\t * @param {String} name The name of the component.\n\t * @returns {module:ui/view~View} The instantiated component view.\n\t */\n\tcreate( name ) {\n\t\tif ( !this.has( name ) ) {\n\t\t\t/**\n\t\t\t * The required component is not registered in the component factory. Please make sure\n\t\t\t * the provided name is correct and the component has been correctly\n\t\t\t * {@link #add added} to the factory.\n\t\t\t *\n\t\t\t * @error componentfactory-item-missing\n\t\t\t * @param {String} name The name of the missing component.\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'componentfactory-item-missing: The required component is not registered in the factory.',\n\t\t\t\tthis,\n\t\t\t\t{ name }\n\t\t\t);\n\t\t}\n\n\t\treturn this._components.get( getNormalized( name ) ).callback( this.editor.locale );\n\t}\n\n\t/**\n\t * Checks if a component of a given name is registered in the factory.\n\t *\n\t * @param {String} name The name of the component.\n\t * @returns {Boolean}\n\t */\n\thas( name ) {\n\t\treturn this._components.has( getNormalized( name ) );\n\t}\n}\n\n//\n// Ensures that the component name used as the key in the internal map is in lower case.\n//\n// @private\n// @param {String} name\n// @returns {String}\nfunction getNormalized( name ) {\n\treturn String( name ).toLowerCase();\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* global setTimeout, clearTimeout */\n\n/**\n * @module utils/focustracker\n */\n\nimport DomEmitterMixin from './dom/emittermixin';\nimport ObservableMixin from './observablemixin';\nimport CKEditorError from './ckeditorerror';\nimport mix from './mix';\n\n/**\n * Allows observing a group of `HTMLElement`s whether at least one of them is focused.\n *\n * Used by the {@link module:core/editor/editor~Editor} in order to track whether the focus is still within the application,\n * or were used outside of its UI.\n *\n * **Note** `focus` and `blur` listeners use event capturing, so it is only needed to register wrapper `HTMLElement`\n * which contain other `focusable` elements. But note that this wrapper element has to be focusable too\n * (have e.g. `tabindex=\"-1\"`).\n *\n * @mixes module:utils/dom/emittermixin~EmitterMixin\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class FocusTracker {\n\tconstructor() {\n\t\t/**\n\t\t * True when one of the registered elements is focused.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #isFocused\n\t\t */\n\t\tthis.set( 'isFocused', false );\n\n\t\t/**\n\t\t * The currently focused element.\n\t\t *\n\t\t * While {@link #isFocused `isFocused`} remains `true`, the focus can\n\t\t * move between different UI elements. This property tracks those\n\t\t * elements and tells which one is currently focused.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {HTMLElement|null}\n\t\t */\n\t\tthis.set( 'focusedElement', null );\n\n\t\t/**\n\t\t * List of registered elements.\n\t\t *\n\t\t * @private\n\t\t * @member {Set.<HTMLElement>}\n\t\t */\n\t\tthis._elements = new Set();\n\n\t\t/**\n\t\t * Event loop timeout.\n\t\t *\n\t\t * @private\n\t\t * @member {Number}\n\t\t */\n\t\tthis._nextEventLoopTimeout = null;\n\t}\n\n\t/**\n\t * Starts tracking the specified element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tadd( element ) {\n\t\tif ( this._elements.has( element ) ) {\n\t\t\tthrow new CKEditorError( 'focusTracker-add-element-already-exist', this );\n\t\t}\n\n\t\tthis.listenTo( element, 'focus', () => this._focus( element ), { useCapture: true } );\n\t\tthis.listenTo( element, 'blur', () => this._blur(), { useCapture: true } );\n\t\tthis._elements.add( element );\n\t}\n\n\t/**\n\t * Stops tracking the specified element and stops listening on this element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tremove( element ) {\n\t\tif ( element === this.focusedElement ) {\n\t\t\tthis._blur( element );\n\t\t}\n\n\t\tif ( this._elements.has( element ) ) {\n\t\t\tthis.stopListening( element );\n\t\t\tthis._elements.delete( element );\n\t\t}\n\t}\n\n\t/**\n\t * Destroys the focus tracker by:\n\t * - Disabling all event listeners attached to tracked elements.\n\t * - Removing all tracked elements that were previously added.\n\t */\n\tdestroy() {\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Stores currently focused element and set {#isFocused} as `true`.\n\t *\n\t * @private\n\t * @param {HTMLElement} element Element which has been focused.\n\t */\n\t_focus( element ) {\n\t\tclearTimeout( this._nextEventLoopTimeout );\n\n\t\tthis.focusedElement = element;\n\t\tthis.isFocused = true;\n\t}\n\n\t/**\n\t * Clears currently focused element and set {@link #isFocused} as `false`.\n\t * This method uses `setTimeout` to change order of fires `blur` and `focus` events.\n\t *\n\t * @private\n\t * @fires blur\n\t */\n\t_blur() {\n\t\tclearTimeout( this._nextEventLoopTimeout );\n\n\t\tthis._nextEventLoopTimeout = setTimeout( () => {\n\t\t\tthis.focusedElement = null;\n\t\t\tthis.isFocused = false;\n\t\t}, 0 );\n\t}\n\n\t/**\n\t * @event focus\n\t */\n\n\t/**\n\t * @event blur\n\t */\n}\n\nmix( FocusTracker, DomEmitterMixin );\nmix( FocusTracker, ObservableMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/editor/editorui\n */\n\n/* globals console */\n\nimport ComponentFactory from '@ckeditor/ckeditor5-ui/src/componentfactory';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\n\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * A class providing the minimal interface that is required to successfully bootstrap any editor UI.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\nexport default class EditorUI {\n\t/**\n\t * Creates an instance of the editor UI class.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor The editor instance.\n\t */\n\tconstructor( editor ) {\n\t\t/**\n\t\t * The editor that the UI belongs to.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/editor/editor~Editor} #editor\n\t\t */\n\t\tthis.editor = editor;\n\n\t\t/**\n\t\t * An instance of the {@link module:ui/componentfactory~ComponentFactory}, a registry used by plugins\n\t\t * to register factories of specific UI components.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/componentfactory~ComponentFactory} #componentFactory\n\t\t */\n\t\tthis.componentFactory = new ComponentFactory( editor );\n\n\t\t/**\n\t\t * Stores the information about the editor UI focus and propagates it so various plugins and components\n\t\t * are unified as a focus group.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker} #focusTracker\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * Stores all editable elements used by the editor instance.\n\t\t *\n\t\t * @private\n\t\t * @member {Map.<String,HTMLElement>}\n\t\t */\n\t\tthis._editableElementsMap = new Map();\n\n\t\t// Informs UI components that should be refreshed after layout change.\n\t\tthis.listenTo( editor.editing.view.document, 'layoutChanged', () => this.update() );\n\t}\n\n\t/**\n\t * The main (outermost) DOM element of the editor UI.\n\t *\n\t * For example, in {@link module:editor-classic/classiceditor~ClassicEditor} it is a `<div>` which\n\t * wraps the editable element and the toolbar. In {@link module:editor-inline/inlineeditor~InlineEditor}\n\t * it is the editable element itself (as there is no other wrapper). However, in\n\t * {@link module:editor-decoupled/decouplededitor~DecoupledEditor} it is set to `null` because this editor does not\n\t * come with a single \"main\" HTML element (its editable element and toolbar are separate).\n\t *\n\t * This property can be understood as a shorthand for retrieving the element that a specific editor integration\n\t * considers to be its main DOM element.\n\t *\n\t * @readonly\n\t * @member {HTMLElement|null} #element\n\t */\n\tget element() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * Fires the {@link module:core/editor/editorui~EditorUI#event:update `update`} event.\n\t *\n\t * This method should be called when the editor UI (e.g. positions of its balloons) needs to be updated due to\n\t * some environmental change which CKEditor 5 is not aware of (e.g. resize of a container in which it is used).\n\t */\n\tupdate() {\n\t\tthis.fire( 'update' );\n\t}\n\n\t/**\n\t * Destroys the UI.\n\t */\n\tdestroy() {\n\t\tthis.stopListening();\n\n\t\tthis.focusTracker.destroy();\n\n\t\t// Clean–up the references to the CKEditor instance stored in the native editable DOM elements.\n\t\tfor ( const domElement of this._editableElementsMap.values() ) {\n\t\t\tdomElement.ckeditorInstance = null;\n\t\t}\n\n\t\tthis._editableElementsMap = new Map();\n\t}\n\n\t/**\n\t * Store the native DOM editable element used by the editor under\n\t * a unique name.\n\t *\n\t * @param {String} rootName The unique name of the editable element.\n\t * @param {HTMLElement} domElement The native DOM editable element.\n\t */\n\tsetEditableElement( rootName, domElement ) {\n\t\tthis._editableElementsMap.set( rootName, domElement );\n\n\t\t// Put a reference to the CKEditor instance in the editable native DOM element.\n\t\t// It helps 3rd–party software (browser extensions, other libraries) access and recognize\n\t\t// CKEditor 5 instances (editing roots) and use their API (there is no global editor\n\t\t// instance registry).\n\t\tif ( !domElement.ckeditorInstance ) {\n\t\t\tdomElement.ckeditorInstance = this.editor;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the editable editor element with the given name or null if editable does not exist.\n\t *\n\t * @param {String} [rootName=main] The editable name.\n\t * @returns {HTMLElement|undefined}\n\t */\n\tgetEditableElement( rootName = 'main' ) {\n\t\treturn this._editableElementsMap.get( rootName );\n\t}\n\n\t/**\n\t * Returns array of names of all editor editable elements.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\tgetEditableElementsNames() {\n\t\treturn this._editableElementsMap.keys();\n\t}\n\n\t/**\n\t * Stores all editable elements used by the editor instance.\n\t *\n\t * @protected\n\t * @deprecated\n\t * @member {Map.<String,HTMLElement>}\n\t */\n\tget _editableElements() {\n\t\t/**\n\t\t * The {@link module:core/editor/editorui~EditorUI#_editableElements `EditorUI#_editableElements`} property has been\n\t\t * deprecated and will be removed in the near future. Please use {@link #setEditableElement `setEditableElement()`} and\n\t\t * {@link #getEditableElement `getEditableElement()`} methods instead.\n\t\t *\n\t\t * @error editor-ui-deprecated-editable-elements\n\t\t * @param {module:core/editor/editorui~EditorUI} editorUI Editor UI instance the deprecated property belongs to.\n\t\t */\n\t\tconsole.warn(\n\t\t\t'editor-ui-deprecated-editable-elements: ' +\n\t\t\t'The EditorUI#_editableElements property has been deprecated and will be removed in the near future.',\n\t\t\t{ editorUI: this } );\n\n\t\treturn this._editableElementsMap;\n\t}\n\n\t/**\n\t * Fired when the editor UI is ready.\n\t *\n\t * Fired before {@link module:engine/controller/datacontroller~DataController#event:ready}.\n\t *\n\t * @event ready\n\t */\n\n\t/**\n\t * Fired whenever the UI (all related components) should be refreshed.\n\t *\n\t * **Note:**: The event is fired after each {@link module:engine/view/document~Document#event:layoutChanged}.\n\t * It can also be fired manually via the {@link module:core/editor/editorui~EditorUI#update} method.\n\t *\n\t * @event update\n\t */\n}\n\nmix( EditorUI, EmitterMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/placeholder\n */\n\nimport '../../theme/placeholder.css';\n\n// Each document stores information about its placeholder elements and check functions.\nconst documentPlaceholders = new WeakMap();\n\n/**\n * A helper that enables a placeholder on the provided view element (also updates its visibility).\n * The placeholder is a CSS pseudo–element (with a text content) attached to the element.\n *\n * To change the placeholder text, simply call this method again with new options.\n *\n * To disable the placeholder, use {@link module:engine/view/placeholder~disablePlaceholder `disablePlaceholder()`} helper.\n *\n * @param {Object} [options] Configuration options of the placeholder.\n * @param {module:engine/view/view~View} options.view Editing view instance.\n * @param {module:engine/view/element~Element} options.element Element that will gain a placeholder.\n * See `options.isDirectHost` to learn more.\n * @param {String} options.text Placeholder text.\n * @param {Boolean} [options.isDirectHost=true] If set `false`, the placeholder will not be enabled directly\n * in the passed `element` but in one of its children (selected automatically, i.e. a first empty child element).\n * Useful when attaching placeholders to elements that can host other elements (not just text), for instance,\n * editable root elements.\n */\nexport function enablePlaceholder( options ) {\n\tconst { view, element, text, isDirectHost = true } = options;\n\tconst doc = view.document;\n\n\t// Use a single a single post fixer per—document to update all placeholders.\n\tif ( !documentPlaceholders.has( doc ) ) {\n\t\tdocumentPlaceholders.set( doc, new Map() );\n\n\t\t// If a post-fixer callback makes a change, it should return `true` so other post–fixers\n\t\t// can re–evaluate the document again.\n\t\tdoc.registerPostFixer( writer => updateDocumentPlaceholders( doc, writer ) );\n\t}\n\n\t// Store information about the element placeholder under its document.\n\tdocumentPlaceholders.get( doc ).set( element, {\n\t\ttext,\n\t\tisDirectHost\n\t} );\n\n\t// Update the placeholders right away.\n\tview.change( writer => updateDocumentPlaceholders( doc, writer ) );\n}\n\n/**\n * Disables the placeholder functionality from a given element.\n *\n * See {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} to learn more.\n *\n * @param {module:engine/view/view~View} view\n * @param {module:engine/view/element~Element} element\n */\nexport function disablePlaceholder( view, element ) {\n\tconst doc = element.document;\n\n\tview.change( writer => {\n\t\tif ( !documentPlaceholders.has( doc ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst placeholders = documentPlaceholders.get( doc );\n\t\tconst config = placeholders.get( element );\n\n\t\twriter.removeAttribute( 'data-placeholder', config.hostElement );\n\t\thidePlaceholder( writer, config.hostElement );\n\n\t\tplaceholders.delete( element );\n\t} );\n}\n\n/**\n * Shows a placeholder in the provided element by changing related attributes and CSS classes.\n *\n * **Note**: This helper will not update the placeholder visibility nor manage the\n * it in any way in the future. What it does is a one–time state change of an element. Use\n * {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} and\n * {@link module:engine/view/placeholder~disablePlaceholder `disablePlaceholder()`} for full\n * placeholder functionality.\n *\n * **Note**: This helper will blindly show the placeholder directly in the root editable element if\n * one is passed, which could result in a visual clash if the editable element has some children\n * (for instance, an empty paragraph). Use {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`}\n * in that case or make sure the correct element is passed to the helper.\n *\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n * @param {module:engine/view/element~Element} element\n * @returns {Boolean} `true`, if any changes were made to the `element`.\n */\nexport function showPlaceholder( writer, element ) {\n\tif ( !element.hasClass( 'ck-placeholder' ) ) {\n\t\twriter.addClass( 'ck-placeholder', element );\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * Hides a placeholder in the element by changing related attributes and CSS classes.\n *\n * **Note**: This helper will not update the placeholder visibility nor manage the\n * it in any way in the future. What it does is a one–time state change of an element. Use\n * {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} and\n * {@link module:engine/view/placeholder~disablePlaceholder `disablePlaceholder()`} for full\n * placeholder functionality.\n *\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n * @param {module:engine/view/element~Element} element\n * @returns {Boolean} `true`, if any changes were made to the `element`.\n */\nexport function hidePlaceholder( writer, element ) {\n\tif ( element.hasClass( 'ck-placeholder' ) ) {\n\t\twriter.removeClass( 'ck-placeholder', element );\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * Checks if a placeholder should be displayed in the element.\n *\n * **Note**: This helper will blindly check the possibility of showing a placeholder directly in the\n * root editable element if one is passed, which may not be the expected result. If an element can\n * host other elements (not just text), most likely one of its children should be checked instead\n * because it will be the final host for the placeholder. Use\n * {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} in that case or make\n * sure the correct element is passed to the helper.\n *\n * @param {module:engine/view/element~Element} element\n * @returns {Boolean}\n */\nexport function needsPlaceholder( element ) {\n\tconst doc = element.document;\n\n\t// The element was removed from document.\n\tif ( !doc ) {\n\t\treturn false;\n\t}\n\n\t// The element is empty only as long as it contains nothing but uiElements.\n\tconst isEmptyish = !Array.from( element.getChildren() )\n\t\t.some( element => !element.is( 'uiElement' ) );\n\n\t// If the element is empty and the document is blurred.\n\tif ( !doc.isFocused && isEmptyish ) {\n\t\treturn true;\n\t}\n\n\tconst viewSelection = doc.selection;\n\tconst selectionAnchor = viewSelection.anchor;\n\n\t// If document is focused and the element is empty but the selection is not anchored inside it.\n\tif ( isEmptyish && selectionAnchor && selectionAnchor.parent !== element ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n// Updates all placeholders associated with a document in a post–fixer callback.\n//\n// @private\n// @param { module:engine/view/document~Document} doc\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\n// @returns {Boolean} True if any changes were made to the view document.\nfunction updateDocumentPlaceholders( doc, writer ) {\n\tconst placeholders = documentPlaceholders.get( doc );\n\tlet wasViewModified = false;\n\n\tfor ( const [ element, config ] of placeholders ) {\n\t\tif ( updatePlaceholder( writer, element, config ) ) {\n\t\t\twasViewModified = true;\n\t\t}\n\t}\n\n\treturn wasViewModified;\n}\n\n// Updates a single placeholder in a post–fixer callback.\n//\n// @private\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\n// @param {module:engine/view/element~Element} element\n// @param {Object} config Configuration of the placeholder\n// @param {String} config.text\n// @param {Boolean} config.isDirectHost\n// @returns {Boolean} True if any changes were made to the view document.\nfunction updatePlaceholder( writer, element, config ) {\n\tconst { text, isDirectHost } = config;\n\tconst hostElement = isDirectHost ? element : getChildPlaceholderHostSubstitute( element );\n\tlet wasViewModified = false;\n\n\t// When not a direct host, it could happen that there is no child element\n\t// capable of displaying a placeholder.\n\tif ( !hostElement ) {\n\t\treturn false;\n\t}\n\n\t// Cache the host element. It will be necessary for disablePlaceholder() to know\n\t// which element should have class and attribute removed because, depending on\n\t// the config.isDirectHost value, it could be the element or one of its descendants.\n\tconfig.hostElement = hostElement;\n\n\t// This may be necessary when updating the placeholder text to something else.\n\tif ( hostElement.getAttribute( 'data-placeholder' ) !== text ) {\n\t\twriter.setAttribute( 'data-placeholder', text, hostElement );\n\t\twasViewModified = true;\n\t}\n\n\tif ( needsPlaceholder( hostElement ) ) {\n\t\tif ( showPlaceholder( writer, hostElement ) ) {\n\t\t\twasViewModified = true;\n\t\t}\n\t} else if ( hidePlaceholder( writer, hostElement ) ) {\n\t\twasViewModified = true;\n\t}\n\n\treturn wasViewModified;\n}\n\n// Gets a child element capable of displaying a placeholder if a parent element can host more\n// than just text (for instance, when it is a root editable element). The child element\n// can then be used in other placeholder helpers as a substitute of its parent.\n//\n// @private\n// @param {module:engine/view/element~Element} parent\n// @returns {module:engine/view/element~Element|null}\nfunction getChildPlaceholderHostSubstitute( parent ) {\n\tif ( parent.childCount === 1 ) {\n\t\tconst firstChild = parent.getChild( 0 );\n\n\t\tif ( firstChild.is( 'element' ) && !firstChild.is( 'uiElement' ) ) {\n\t\t\treturn firstChild;\n\t\t}\n\t}\n\n\treturn null;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/elementreplacer\n */\n\n/**\n * Utility class allowing to hide existing HTML elements or replace them with given ones in a way that doesn't remove\n * the original elements from the DOM.\n */\nexport default class ElementReplacer {\n\tconstructor() {\n\t\t/**\n\t\t * The elements replaced by {@link #replace} and their replacements.\n\t\t *\n\t\t * @private\n\t\t * @member {Array.<Object>}\n\t\t */\n\t\tthis._replacedElements = [];\n\t}\n\n\t/**\n\t * Hides the `element` and, if specified, inserts the the given element next to it.\n\t *\n\t * The effect of this method can be reverted by {@link #restore}.\n\t *\n\t * @param {HTMLElement} element The element to replace.\n\t * @param {HTMLElement} [newElement] The replacement element. If not passed, then the `element` will just be hidden.\n\t */\n\treplace( element, newElement ) {\n\t\tthis._replacedElements.push( { element, newElement } );\n\n\t\telement.style.display = 'none';\n\n\t\tif ( newElement ) {\n\t\t\telement.parentNode.insertBefore( newElement, element.nextSibling );\n\t\t}\n\t}\n\n\t/**\n\t * Restores what {@link #replace} did.\n\t */\n\trestore() {\n\t\tthis._replacedElements.forEach( ( { element, newElement } ) => {\n\t\t\telement.style.display = '';\n\n\t\t\tif ( newElement ) {\n\t\t\t\tnewElement.remove();\n\t\t\t}\n\t\t} );\n\n\t\tthis._replacedElements = [];\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module editor-classic/classiceditorui\n */\n\nimport EditorUI from '@ckeditor/ckeditor5-core/src/editor/editorui';\nimport enableToolbarKeyboardFocus from '@ckeditor/ckeditor5-ui/src/toolbar/enabletoolbarkeyboardfocus';\nimport normalizeToolbarConfig from '@ckeditor/ckeditor5-ui/src/toolbar/normalizetoolbarconfig';\nimport { enablePlaceholder } from '@ckeditor/ckeditor5-engine/src/view/placeholder';\nimport ElementReplacer from '@ckeditor/ckeditor5-utils/src/elementreplacer';\n\n/**\n * The classic editor UI class.\n *\n * @extends module:core/editor/editorui~EditorUI\n */\nexport default class ClassicEditorUI extends EditorUI {\n\t/**\n\t * Creates an instance of the classic editor UI class.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor The editor instance.\n\t * @param {module:ui/editorui/editoruiview~EditorUIView} view The view of the UI.\n\t */\n\tconstructor( editor, view ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The main (top–most) view of the editor UI.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/editorui/editoruiview~EditorUIView} #view\n\t\t */\n\t\tthis.view = view;\n\n\t\t/**\n\t\t * A normalized `config.toolbar` object.\n\t\t *\n\t\t * @private\n\t\t * @member {Object}\n\t\t */\n\t\tthis._toolbarConfig = normalizeToolbarConfig( editor.config.get( 'toolbar' ) );\n\n\t\t/**\n\t\t * The element replacer instance used to hide the editor's source element.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:utils/elementreplacer~ElementReplacer}\n\t\t */\n\t\tthis._elementReplacer = new ElementReplacer();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget element() {\n\t\treturn this.view.element;\n\t}\n\n\t/**\n\t * Initializes the UI.\n\t *\n\t * @param {HTMLElement|null} replacementElement The DOM element that will be the source for the created editor.\n\t */\n\tinit( replacementElement ) {\n\t\tconst editor = this.editor;\n\t\tconst view = this.view;\n\t\tconst editingView = editor.editing.view;\n\t\tconst editable = view.editable;\n\t\tconst editingRoot = editingView.document.getRoot();\n\n\t\t// The editable UI and editing root should share the same name. Then name is used\n\t\t// to recognize the particular editable, for instance in ARIA attributes.\n\t\teditable.name = editingRoot.rootName;\n\n\t\tview.render();\n\n\t\t// The editable UI element in DOM is available for sure only after the editor UI view has been rendered.\n\t\t// But it can be available earlier if a DOM element has been passed to BalloonEditor.create().\n\t\tconst editableElement = editable.element;\n\n\t\t// Register the editable UI view in the editor. A single editor instance can aggregate multiple\n\t\t// editable areas (roots) but the classic editor has only one.\n\t\tthis.setEditableElement( editable.name, editableElement );\n\n\t\t// Let the global focus tracker know that the editable UI element is focusable and\n\t\t// belongs to the editor. From now on, the focus tracker will sustain the editor focus\n\t\t// as long as the editable is focused (e.g. the user is typing).\n\t\tthis.focusTracker.add( editableElement );\n\n\t\t// Let the editable UI element respond to the changes in the global editor focus\n\t\t// tracker. It has been added to the same tracker a few lines above but, in reality, there are\n\t\t// many focusable areas in the editor, like balloons, toolbars or dropdowns and as long\n\t\t// as they have focus, the editable should act like it is focused too (although technically\n\t\t// it isn't), e.g. by setting the proper CSS class, visually announcing focus to the user.\n\t\t// Doing otherwise will result in editable focus styles disappearing, once e.g. the\n\t\t// toolbar gets focused.\n\t\tview.editable.bind( 'isFocused' ).to( this.focusTracker );\n\n\t\t// Bind the editable UI element to the editing view, making it an end– and entry–point\n\t\t// of the editor's engine. This is where the engine meets the UI.\n\t\teditingView.attachDomRoot( editableElement );\n\n\t\t// If an element containing the initial data of the editor was provided, replace it with\n\t\t// an editor instance's UI in DOM until the editor is destroyed. For instance, a <textarea>\n\t\t// can be such element.\n\t\tif ( replacementElement ) {\n\t\t\tthis._elementReplacer.replace( replacementElement, this.element );\n\t\t}\n\n\t\tthis._initPlaceholder();\n\t\tthis._initToolbar();\n\t\tthis.fire( 'ready' );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tconst view = this.view;\n\t\tconst editingView = this.editor.editing.view;\n\n\t\tthis._elementReplacer.restore();\n\t\teditingView.detachDomRoot( view.editable.name );\n\t\tview.destroy();\n\n\t\tsuper.destroy();\n\t}\n\n\t/**\n\t * Initializes the editor toolbar.\n\t *\n\t * @private\n\t */\n\t_initToolbar() {\n\t\tconst editor = this.editor;\n\t\tconst view = this.view;\n\t\tconst editingView = editor.editing.view;\n\n\t\t// Set–up the sticky panel with toolbar.\n\t\tview.stickyPanel.bind( 'isActive' ).to( this.focusTracker, 'isFocused' );\n\t\tview.stickyPanel.limiterElement = view.element;\n\n\t\tif ( this._toolbarConfig.viewportTopOffset ) {\n\t\t\tview.stickyPanel.viewportTopOffset = this._toolbarConfig.viewportTopOffset;\n\t\t}\n\n\t\tview.toolbar.fillFromConfig( this._toolbarConfig.items, this.componentFactory );\n\n\t\tenableToolbarKeyboardFocus( {\n\t\t\torigin: editingView,\n\t\t\toriginFocusTracker: this.focusTracker,\n\t\t\toriginKeystrokeHandler: editor.keystrokes,\n\t\t\ttoolbar: view.toolbar\n\t\t} );\n\t}\n\n\t/**\n\t * Enable the placeholder text on the editing root, if any was configured.\n\t *\n\t * @private\n\t */\n\t_initPlaceholder() {\n\t\tconst editor = this.editor;\n\t\tconst editingView = editor.editing.view;\n\t\tconst editingRoot = editingView.document.getRoot();\n\t\tconst sourceElement = editor.sourceElement;\n\n\t\tconst placeholderText = editor.config.get( 'placeholder' ) ||\n\t\t\tsourceElement && sourceElement.tagName.toLowerCase() === 'textarea' && sourceElement.getAttribute( 'placeholder' );\n\n\t\tif ( placeholderText ) {\n\t\t\tenablePlaceholder( {\n\t\t\t\tview: editingView,\n\t\t\t\telement: editingRoot,\n\t\t\t\ttext: placeholderText,\n\t\t\t\tisDirectHost: false\n\t\t\t} );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/toolbar/normalizetoolbarconfig\n */\n\n/**\n * Normalizes the toolbar configuration (`config.toolbar`), which:\n *\n * * may be defined as an `Array`:\n *\n * \t\ttoolbar: [ 'heading', 'bold', 'italic', 'link', ... ]\n *\n * * or an `Object`:\n *\n *\t\ttoolbar: {\n *\t\t\titems: [ 'heading', 'bold', 'italic', 'link', ... ],\n *\t\t\t...\n *\t\t}\n *\n * * or may not be defined at all (`undefined`)\n *\n * and returns it in the object form.\n *\n * @param {Array|Object|undefined} config The value of `config.toolbar`.\n * @returns {Object} A normalized toolbar config object.\n */\nexport default function normalizeToolbarConfig( config ) {\n\tif ( Array.isArray( config ) ) {\n\t\treturn {\n\t\t\titems: config\n\t\t};\n\t}\n\n\tif ( !config ) {\n\t\treturn {\n\t\t\titems: []\n\t\t};\n\t}\n\n\treturn Object.assign( {\n\t\titems: []\n\t}, config );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/toolbar/enabletoolbarkeyboardfocus\n */\n\n/**\n * Enables focus/blur toolbar navigation using `Alt+F10` and `Esc` keystrokes.\n *\n * @param {Object} options Options of the utility.\n * @param {*} options.origin A view to which the focus will return when `Esc` is pressed and\n * `options.toolbar` is focused.\n * @param {module:utils/keystrokehandler~KeystrokeHandler} options.originKeystrokeHandler A keystroke\n * handler to register `Alt+F10` keystroke.\n * @param {module:utils/focustracker~FocusTracker} options.originFocusTracker A focus tracker\n * for `options.origin`.\n * @param {module:ui/toolbar/toolbarview~ToolbarView} options.toolbar A toolbar which is to gain\n * focus when `Alt+F10` is pressed.\n * @param {Function} [options.beforeFocus] A callback executed before the `options.toolbar` gains focus\n * upon the `Alt+F10` keystroke.\n * @param {Function} [options.afterBlur] A callback executed after `options.toolbar` loses focus upon\n * `Esc` keystroke but before the focus goes back to `options.origin`.\n */\nexport default function enableToolbarKeyboardFocus( {\n\torigin,\n\toriginKeystrokeHandler,\n\toriginFocusTracker,\n\ttoolbar,\n\tbeforeFocus,\n\tafterBlur\n} ) {\n\t// Because toolbar items can get focus, the overall state of the toolbar must\n\t// also be tracked.\n\toriginFocusTracker.add( toolbar.element );\n\n\t// Focus the toolbar on the keystroke, if not already focused.\n\toriginKeystrokeHandler.set( 'Alt+F10', ( data, cancel ) => {\n\t\tif ( originFocusTracker.isFocused && !toolbar.focusTracker.isFocused ) {\n\t\t\tif ( beforeFocus ) {\n\t\t\t\tbeforeFocus();\n\t\t\t}\n\n\t\t\ttoolbar.focus();\n\n\t\t\tcancel();\n\t\t}\n\t} );\n\n\t// Blur the toolbar and bring the focus back to origin.\n\ttoolbar.keystrokes.set( 'Esc', ( data, cancel ) => {\n\t\tif ( toolbar.focusTracker.isFocused ) {\n\t\t\torigin.focus();\n\n\t\t\tif ( afterBlur ) {\n\t\t\t\tafterBlur();\n\t\t\t}\n\n\t\t\tcancel();\n\t\t}\n\t} );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/viewcollection\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\n\n/**\n * Collects {@link module:ui/view~View} instances.\n *\n *\t\tconst parentView = new ParentView( locale );\n *\t\tconst collection = new ViewCollection( locale );\n *\n *\t\tcollection.setParent( parentView.element );\n *\n *\t\tconst viewA = new ChildView( locale );\n *\t\tconst viewB = new ChildView( locale );\n *\n * View collection renders and manages view {@link module:ui/view~View#element elements}:\n *\n *\t\tcollection.add( viewA );\n *\t\tcollection.add( viewB );\n *\n *\t\tconsole.log( parentView.element.firsChild ); // -> viewA.element\n *\t\tconsole.log( parentView.element.lastChild ); // -> viewB.element\n *\n * It {@link module:ui/viewcollection~ViewCollection#delegate propagates} DOM events too:\n *\n *\t\t// Delegate #click and #keydown events from viewA and viewB to the parentView.\n *\t\tcollection.delegate( 'click' ).to( parentView );\n *\n *\t\tparentView.on( 'click', ( evt ) => {\n *\t\t\tconsole.log( `${ evt.source } has been clicked.` );\n *\t\t} );\n *\n *\t\t// This event will be delegated to the parentView.\n *\t\tviewB.fire( 'click' );\n *\n * **Note**: A view collection can be used directly in the {@link module:ui/template~TemplateDefinition definition}\n * of a {@link module:ui/template~Template template}.\n *\n * @extends module:utils/collection~Collection\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class ViewCollection extends Collection {\n\t/**\n\t * Creates a new instance of the {@link module:ui/viewcollection~ViewCollection}.\n\t *\n\t * @param {module:utils/locale~Locale} [locale] The {@link module:core/editor/editor~Editor editor's locale} instance.\n\t */\n\tconstructor( locale ) {\n\t\tsuper( {\n\t\t\t// An #id Number attribute should be legal and not break the `ViewCollection` instance.\n\t\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/93\n\t\t\tidProperty: 'viewUid'\n\t\t} );\n\n\t\t// Handle {@link module:ui/view~View#element} in DOM when a new view is added to the collection.\n\t\tthis.on( 'add', ( evt, view, index ) => {\n\t\t\tif ( !view.isRendered ) {\n\t\t\t\tview.render();\n\t\t\t}\n\n\t\t\tif ( view.element && this._parentElement ) {\n\t\t\t\tthis._parentElement.insertBefore( view.element, this._parentElement.children[ index ] );\n\t\t\t}\n\t\t} );\n\n\t\t// Handle {@link module:ui/view~View#element} in DOM when a view is removed from the collection.\n\t\tthis.on( 'remove', ( evt, view ) => {\n\t\t\tif ( view.element && this._parentElement ) {\n\t\t\t\tview.element.remove();\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * The {@link module:core/editor/editor~Editor#locale editor's locale} instance.\n\t\t * See the view {@link module:ui/view~View#locale locale} property.\n\t\t *\n\t\t * @member {module:utils/locale~Locale}\n\t\t */\n\t\tthis.locale = locale;\n\n\t\t/**\n\t\t * A parent element within which child views are rendered and managed in DOM.\n\t\t *\n\t\t * @protected\n\t\t * @member {HTMLElement}\n\t\t */\n\t\tthis._parentElement = null;\n\t}\n\n\t/**\n\t * Destroys the view collection along with child views.\n\t * See the view {@link module:ui/view~View#destroy} method.\n\t */\n\tdestroy() {\n\t\tthis.map( view => view.destroy() );\n\t}\n\n\t/**\n\t * Sets the parent HTML element of this collection. When parent is set, {@link #add adding} and\n\t * {@link #remove removing} views in the collection synchronizes their\n\t * {@link module:ui/view~View#element elements} in the parent element.\n\t *\n\t * @param {HTMLElement} element A new parent element.\n\t */\n\tsetParent( elementOrDocFragment ) {\n\t\tthis._parentElement = elementOrDocFragment;\n\t}\n\n\t/**\n\t * Delegates selected events coming from within views in the collection to any\n\t * {@link module:utils/emittermixin~Emitter}.\n\t *\n\t * For the following views and collection:\n\t *\n\t *\t\tconst viewA = new View();\n\t *\t\tconst viewB = new View();\n\t *\t\tconst viewC = new View();\n\t *\n\t *\t\tconst views = parentView.createCollection();\n\t *\n\t *\t\tviews.delegate( 'eventX' ).to( viewB );\n\t *\t\tviews.delegate( 'eventX', 'eventY' ).to( viewC );\n\t *\n\t *\t\tviews.add( viewA );\n\t *\n\t * the `eventX` is delegated (fired by) `viewB` and `viewC` along with `customData`:\n\t *\n\t *\t\tviewA.fire( 'eventX', customData );\n\t *\n\t * and `eventY` is delegated (fired by) `viewC` along with `customData`:\n\t *\n\t *\t\tviewA.fire( 'eventY', customData );\n\t *\n\t * See {@link module:utils/emittermixin~Emitter#delegate}.\n\t *\n\t * @param {...String} events {@link module:ui/view~View} event names to be delegated to another\n\t * {@link module:utils/emittermixin~Emitter}.\n\t * @returns {Object}\n\t * @returns {Function} return.to A function which accepts the destination of\n\t * {@link module:utils/emittermixin~Emitter#delegate delegated} events.\n\t */\n\tdelegate( ...events ) {\n\t\tif ( !events.length || !isStringArray( events ) ) {\n\t\t\t/**\n\t\t\t * All event names must be strings.\n\t\t\t *\n\t\t\t * @error ui-viewcollection-delegate-wrong-events\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'ui-viewcollection-delegate-wrong-events: All event names must be strings.',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\treturn {\n\t\t\t/**\n\t\t\t * Selects destination for {@link module:utils/emittermixin~Emitter#delegate} events.\n\t\t\t *\n\t\t\t * @memberOf module:ui/viewcollection~ViewCollection#delegate\n\t\t\t * @function module:ui/viewcollection~ViewCollection#delegate.to\n\t\t\t * @param {module:utils/emittermixin~Emitter} dest An `Emitter` instance which is\n\t\t\t * the destination for delegated events.\n\t\t\t */\n\t\t\tto: dest => {\n\t\t\t\t// Activate delegating on existing views in this collection.\n\t\t\t\tfor ( const view of this ) {\n\t\t\t\t\tfor ( const evtName of events ) {\n\t\t\t\t\t\tview.delegate( evtName ).to( dest );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Activate delegating on future views in this collection.\n\t\t\t\tthis.on( 'add', ( evt, view ) => {\n\t\t\t\t\tfor ( const evtName of events ) {\n\t\t\t\t\t\tview.delegate( evtName ).to( dest );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\t// Deactivate delegating when view is removed from this collection.\n\t\t\t\tthis.on( 'remove', ( evt, view ) => {\n\t\t\t\t\tfor ( const evtName of events ) {\n\t\t\t\t\t\tview.stopDelegating( evtName, dest );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Removes a child view from the collection. If the {@link #setParent parent element} of the\n\t * collection has been set, the {@link module:ui/view~View#element element} of the view is also removed\n\t * in DOM, reflecting the order of the collection.\n\t *\n\t * See the {@link #add} method.\n\t *\n\t * @method #remove\n\t * @param {module:ui/view~View|Number|String} subject The view to remove, its id or index in the collection.\n\t * @returns {Object} The removed view.\n\t */\n}\n\n// Check if all entries of the array are of `String` type.\n//\n// @private\n// @param {Array} arr An array to be checked.\n// @returns {Boolean}\nfunction isStringArray( arr ) {\n\treturn arr.every( a => typeof a == 'string' );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/template\n */\n\n/* global document */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport View from './view';\nimport ViewCollection from './viewcollection';\nimport isNode from '@ckeditor/ckeditor5-utils/src/dom/isnode';\nimport { isObject, cloneDeepWith } from 'lodash-es';\n\nconst xhtmlNs = 'http://www.w3.org/1999/xhtml';\n\n/**\n * A basic Template class. It renders a DOM HTML element or text from a\n * {@link module:ui/template~TemplateDefinition definition} and supports element attributes, children,\n * bindings to {@link module:utils/observablemixin~Observable observables} and DOM event propagation.\n *\n * A simple template can look like this:\n *\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tattributes: {\n *\t\t\t\tclass: 'foo',\n *\t\t\t\tstyle: {\n *\t\t\t\t\tbackgroundColor: 'yellow'\n *\t\t\t\t}\n *\t\t\t},\n *\t\t\ton: {\n *\t\t\t\tclick: bind.to( 'clicked' )\n *\t\t\t},\n *\t\t\tchildren: [\n *\t\t\t\t'A paragraph.'\n *\t\t\t]\n *\t\t} ).render();\n *\n * and it will render the following HTML element:\n *\n *\t\t<p class=\"foo\" style=\"background-color: yellow;\">A paragraph.</p>\n *\n * Additionally, the `observable` will always fire `clicked` upon clicking `<p>` in the DOM.\n *\n * See {@link module:ui/template~TemplateDefinition} to know more about templates and complex\n * template definitions.\n *\n* @mixes module:utils/emittermixin~EmitterMixin\n */\nexport default class Template {\n\t/**\n\t * Creates an instance of the {@link ~Template} class.\n\t *\n\t * @param {module:ui/template~TemplateDefinition} def The definition of the template.\n\t */\n\tconstructor( def ) {\n\t\tObject.assign( this, normalize( clone( def ) ) );\n\n\t\t/**\n\t\t * Indicates whether this particular Template instance has been\n\t\t * {@link #render rendered}.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis._isRendered = false;\n\n\t\t/**\n\t\t * The tag (`tagName`) of this template, e.g. `div`. It also indicates that the template\n\t\t * renders to an HTML element.\n\t\t *\n\t\t * @member {String} #tag\n\t\t */\n\n\t\t/**\n\t\t * The text of the template. It also indicates that the template renders to a DOM text node.\n\t\t *\n\t\t * @member {Array.<String|module:ui/template~TemplateValueSchema>} #text\n\t\t */\n\n\t\t/**\n\t\t * The attributes of the template, e.g. `{ id: [ 'ck-id' ] }`, corresponding with\n\t\t * the attributes of an HTML element.\n\t\t *\n\t\t * **Note**: This property only makes sense when {@link #tag} is defined.\n\t\t *\n\t\t * @member {Object} #attributes\n\t\t */\n\n\t\t/**\n\t\t * The children of the template. They can be either:\n\t\t * * independent instances of {@link ~Template} (sub–templates),\n\t\t * * native DOM Nodes.\n\t\t *\n\t\t * **Note**: This property only makes sense when {@link #tag} is defined.\n\t\t *\n\t\t * @member {Array.<module:ui/template~Template|Node>} #children\n\t\t */\n\n\t\t/**\n\t\t * The DOM event listeners of the template.\n\t\t *\n\t\t * @member {Object} #eventListeners\n\t\t */\n\n\t\t/**\n\t\t * The data used by the {@link #revert} method to restore a node to its original state.\n\t\t *\n\t\t * See: {@link #apply}.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/template~RenderData}\n\t\t */\n\t\tthis._revertData = null;\n\t}\n\n\t/**\n\t * Renders a DOM Node (an HTML element or text) out of the template.\n\t *\n\t *\t\tconst domNode = new Template( { ... } ).render();\n\t *\n\t * See: {@link #apply}.\n\t *\n\t * @returns {HTMLElement|Text}\n\t */\n\trender() {\n\t\tconst node = this._renderNode( {\n\t\t\tintoFragment: true\n\t\t} );\n\n\t\tthis._isRendered = true;\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * Applies the template to an existing DOM Node, either HTML element or text.\n\t *\n\t * **Note:** No new DOM nodes will be created. Applying extends:\n\t *\n\t * {@link module:ui/template~TemplateDefinition attributes},\n\t * {@link module:ui/template~TemplateDefinition event listeners}, and\n\t * `textContent` of {@link module:ui/template~TemplateDefinition children} only.\n\t *\n\t * **Note:** Existing `class` and `style` attributes are extended when a template\n\t * is applied to an HTML element, while other attributes and `textContent` are overridden.\n\t *\n\t * **Note:** The process of applying a template can be easily reverted using the\n\t * {@link module:ui/template~Template#revert} method.\n\t *\n\t *\t\tconst element = document.createElement( 'div' );\n\t *\t\tconst observable = new Model( { divClass: 'my-div' } );\n\t *\t\tconst emitter = Object.create( EmitterMixin );\n\t *\t\tconst bind = Template.bind( observable, emitter );\n\t *\n\t *\t\tnew Template( {\n\t *\t\t\tattributes: {\n\t *\t\t\t\tid: 'first-div',\n\t *\t\t\t\tclass: bind.to( 'divClass' )\n\t *\t\t\t},\n\t *\t\t\ton: {\n\t *\t\t\t\tclick: bind( 'elementClicked' ) // Will be fired by the observable.\n\t *\t\t\t},\n\t *\t\t\tchildren: [\n\t *\t\t\t\t'Div text.'\n\t *\t\t\t]\n\t *\t\t} ).apply( element );\n\t *\n\t *\t\tconsole.log( element.outerHTML ); // -> '<div id=\"first-div\" class=\"my-div\"></div>'\n\t *\n\t * @see module:ui/template~Template#render\n\t * @see module:ui/template~Template#revert\n\t * @param {Node} node Root node for the template to apply.\n\t */\n\tapply( node ) {\n\t\tthis._revertData = getEmptyRevertData();\n\n\t\tthis._renderNode( {\n\t\t\tnode,\n\t\t\tisApplying: true,\n\t\t\trevertData: this._revertData\n\t\t} );\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * Reverts a template {@link module:ui/template~Template#apply applied} to a DOM node.\n\t *\n\t * @param {Node} node The root node for the template to revert. In most of the cases, it is the\n\t * same node used by {@link module:ui/template~Template#apply}.\n\t */\n\trevert( node ) {\n\t\tif ( !this._revertData ) {\n\t\t\t/**\n\t\t\t * Attempting to revert a template which has not been applied yet.\n\t\t\t *\n\t\t\t * @error ui-template-revert-not-applied\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'ui-template-revert-not-applied: Attempting to revert a template which has not been applied yet.',\n\t\t\t\t[ this, node ]\n\t\t\t);\n\t\t}\n\n\t\tthis._revertTemplateFromNode( node, this._revertData );\n\t}\n\n\t/**\n\t * Returns an iterator which traverses the template in search of {@link module:ui/view~View}\n\t * instances and returns them one by one.\n\t *\n\t *\t\tconst viewFoo = new View();\n\t *\t\tconst viewBar = new View();\n\t *\t\tconst viewBaz = new View();\n\t *\t\tconst template = new Template( {\n\t *\t\t\ttag: 'div',\n\t *\t\t\tchildren: [\n\t *\t\t\t\tviewFoo,\n\t *\t\t\t\t{\n\t *\t\t\t\t\ttag: 'div',\n\t *\t\t\t\t\tchildren: [\n\t *\t\t\t\t\t\tviewBar\n\t *\t\t\t\t\t]\n\t *\t\t\t\t},\n\t *\t\t\t\tviewBaz\n\t *\t\t\t]\n\t *\t\t} );\n\t *\n\t *\t\t// Logs: viewFoo, viewBar, viewBaz\n\t *\t\tfor ( const view of template.getViews() ) {\n\t *\t\t\tconsole.log( view );\n\t *\t\t}\n\t *\n\t * @returns {Iterable.<module:ui/view~View>}\n\t */\n\t* getViews() {\n\t\tfunction* search( def ) {\n\t\t\tif ( def.children ) {\n\t\t\t\tfor ( const child of def.children ) {\n\t\t\t\t\tif ( isView( child ) ) {\n\t\t\t\t\t\tyield child;\n\t\t\t\t\t} else if ( isTemplate( child ) ) {\n\t\t\t\t\t\tyield* search( child );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tyield* search( this );\n\t}\n\n\t/**\n\t * An entry point to the interface which binds DOM nodes to\n\t * {@link module:utils/observablemixin~Observable observables}.\n\t * There are two types of bindings:\n\t *\n\t * * HTML element attributes or text `textContent` synchronized with attributes of an\n\t * {@link module:utils/observablemixin~Observable}. Learn more about {@link module:ui/template~BindChain#to}\n\t * and {@link module:ui/template~BindChain#if}.\n\t *\n\t *\t\tconst bind = Template.bind( observable, emitter );\n\t *\n\t *\t\tnew Template( {\n\t *\t\t\tattributes: {\n\t *\t\t\t\t// Binds the element \"class\" attribute to observable#classAttribute.\n\t *\t\t\t\tclass: bind.to( 'classAttribute' )\n\t *\t\t\t}\n\t *\t\t} ).render();\n\t *\n\t * * DOM events fired on HTML element propagated through\n\t * {@link module:utils/observablemixin~Observable}. Learn more about {@link module:ui/template~BindChain#to}.\n\t *\n\t *\t\tconst bind = Template.bind( observable, emitter );\n\t *\n\t *\t\tnew Template( {\n\t *\t\t\ton: {\n\t *\t\t\t\t// Will be fired by the observable.\n\t *\t\t\t\tclick: bind( 'elementClicked' )\n\t *\t\t\t}\n\t *\t\t} ).render();\n\t *\n\t * Also see {@link module:ui/view~View#bindTemplate}.\n\t *\n\t * @param {module:utils/observablemixin~Observable} observable An observable which provides boundable attributes.\n\t * @param {module:utils/emittermixin~Emitter} emitter An emitter that listens to observable attribute\n\t * changes or DOM Events (depending on the kind of the binding). Usually, a {@link module:ui/view~View} instance.\n\t * @returns {module:ui/template~BindChain}\n\t */\n\tstatic bind( observable, emitter ) {\n\t\treturn {\n\t\t\tto( eventNameOrFunctionOrAttribute, callback ) {\n\t\t\t\treturn new TemplateToBinding( {\n\t\t\t\t\teventNameOrFunction: eventNameOrFunctionOrAttribute,\n\t\t\t\t\tattribute: eventNameOrFunctionOrAttribute,\n\t\t\t\t\tobservable, emitter, callback\n\t\t\t\t} );\n\t\t\t},\n\n\t\t\tif( attribute, valueIfTrue, callback ) {\n\t\t\t\treturn new TemplateIfBinding( {\n\t\t\t\t\tobservable, emitter, attribute, valueIfTrue, callback\n\t\t\t\t} );\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Extends an existing {@link module:ui/template~Template} instance with some additional content\n\t * from another {@link module:ui/template~TemplateDefinition}.\n\t *\n\t *\t\tconst bind = Template.bind( observable, emitter );\n\t *\n\t *\t\tconst template = new Template( {\n\t *\t\t\ttag: 'p',\n\t *\t\t\tattributes: {\n\t *\t\t\t\tclass: 'a',\n\t *\t\t\t\tdata-x: bind.to( 'foo' )\n\t *\t\t\t},\n\t *\t\t\tchildren: [\n\t *\t\t\t\t{\n\t *\t\t\t\t\ttag: 'span',\n\t *\t\t\t\t\tattributes: {\n\t *\t\t\t\t\t\tclass: 'b'\n\t *\t\t\t\t\t},\n\t *\t\t\t\t\tchildren: [\n\t *\t\t\t\t\t\t'Span'\n\t *\t\t\t\t\t]\n\t *\t\t\t\t}\n\t *\t\t\t]\n\t *\t\t } );\n\t *\n\t *\t\t// Instance-level extension.\n\t *\t\tTemplate.extend( template, {\n\t *\t\t\tattributes: {\n\t *\t\t\t\tclass: 'b',\n\t *\t\t\t\tdata-x: bind.to( 'bar' )\n\t *\t\t\t},\n\t *\t\t\tchildren: [\n\t *\t\t\t\t{\n\t *\t\t\t\t\tattributes: {\n\t *\t\t\t\t\t\tclass: 'c'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t}\n\t *\t\t\t]\n\t *\t\t} );\n\t *\n\t *\t\t// Child extension.\n\t *\t\tTemplate.extend( template.children[ 0 ], {\n\t *\t\t\tattributes: {\n\t *\t\t\t\tclass: 'd'\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * the `outerHTML` of `template.render()` is:\n\t *\n\t *\t\t<p class=\"a b\" data-x=\"{ observable.foo } { observable.bar }\">\n\t *\t\t\t<span class=\"b c d\">Span</span>\n\t *\t\t</p>\n\t *\n\t * @param {module:ui/template~Template} template An existing template instance to be extended.\n\t * @param {module:ui/template~TemplateDefinition} def Additional definition to be applied to a template.\n\t */\n\tstatic extend( template, def ) {\n\t\tif ( template._isRendered ) {\n\t\t\t/**\n\t\t\t * Extending a template after rendering may not work as expected. To make sure\n\t\t\t * the {@link module:ui/template~Template.extend extending} works for an element,\n\t\t\t * make sure it happens before {@link #render} is called.\n\t\t\t *\n\t\t\t * @error template-extend-render\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'template-extend-render: Attempting to extend a template which has already been rendered.',\n\t\t\t\t[ this, template ]\n\t\t\t);\n\t\t}\n\n\t\textendTemplate( template, normalize( clone( def ) ) );\n\t}\n\n\t/**\n\t * Renders a DOM Node (either an HTML element or text) out of the template.\n\t *\n\t * @protected\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t */\n\t_renderNode( data ) {\n\t\tlet isInvalid;\n\n\t\tif ( data.node ) {\n\t\t\t// When applying, a definition cannot have \"tag\" and \"text\" at the same time.\n\t\t\tisInvalid = this.tag && this.text;\n\t\t} else {\n\t\t\t// When rendering, a definition must have either \"tag\" or \"text\": XOR( this.tag, this.text ).\n\t\t\tisInvalid = this.tag ? this.text : !this.text;\n\t\t}\n\n\t\tif ( isInvalid ) {\n\t\t\t/**\n\t\t\t * Node definition cannot have the \"tag\" and \"text\" properties at the same time.\n\t\t\t * Node definition must have either \"tag\" or \"text\" when rendering a new Node.\n\t\t\t *\n\t\t\t * @error ui-template-wrong-syntax\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'ui-template-wrong-syntax: Node definition must have either \"tag\" or \"text\" when rendering a new Node.',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\tif ( this.text ) {\n\t\t\treturn this._renderText( data );\n\t\t} else {\n\t\t\treturn this._renderElement( data );\n\t\t}\n\t}\n\n\t/**\n\t * Renders an HTML element out of the template.\n\t *\n\t * @protected\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t */\n\t_renderElement( data ) {\n\t\tlet node = data.node;\n\n\t\tif ( !node ) {\n\t\t\tnode = data.node = document.createElementNS( this.ns || xhtmlNs, this.tag );\n\t\t}\n\n\t\tthis._renderAttributes( data );\n\t\tthis._renderElementChildren( data );\n\t\tthis._setUpListeners( data );\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * Renders a text node out of {@link module:ui/template~Template#text}.\n\t *\n\t * @protected\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t */\n\t_renderText( data ) {\n\t\tlet node = data.node;\n\n\t\t// Save the original textContent to revert it in #revert().\n\t\tif ( node ) {\n\t\t\tdata.revertData.text = node.textContent;\n\t\t} else {\n\t\t\tnode = data.node = document.createTextNode( '' );\n\t\t}\n\n\t\t// Check if this Text Node is bound to Observable. Cases:\n\t\t//\n\t\t//\t\ttext: [ Template.bind( ... ).to( ... ) ]\n\t\t//\n\t\t//\t\ttext: [\n\t\t//\t\t\t'foo',\n\t\t//\t\t\tTemplate.bind( ... ).to( ... ),\n\t\t//\t\t\t...\n\t\t//\t\t]\n\t\t//\n\t\tif ( hasTemplateBinding( this.text ) ) {\n\t\t\tthis._bindToObservable( {\n\t\t\t\tschema: this.text,\n\t\t\t\tupdater: getTextUpdater( node ),\n\t\t\t\tdata\n\t\t\t} );\n\t\t}\n\t\t// Simply set text. Cases:\n\t\t//\n\t\t//\t\ttext: [ 'all', 'are', 'static' ]\n\t\t//\n\t\t//\t\ttext: [ 'foo' ]\n\t\t//\n\t\telse {\n\t\t\tnode.textContent = this.text.join( '' );\n\t\t}\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * Renders HTML element attributes out of {@link module:ui/template~Template#attributes}.\n\t *\n\t * @protected\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t */\n\t_renderAttributes( data ) {\n\t\tlet attrName, attrValue, domAttrValue, attrNs;\n\n\t\tif ( !this.attributes ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst node = data.node;\n\t\tconst revertData = data.revertData;\n\n\t\tfor ( attrName in this.attributes ) {\n\t\t\t// Current attribute value in DOM.\n\t\t\tdomAttrValue = node.getAttribute( attrName );\n\n\t\t\t// The value to be set.\n\t\t\tattrValue = this.attributes[ attrName ];\n\n\t\t\t// Save revert data.\n\t\t\tif ( revertData ) {\n\t\t\t\trevertData.attributes[ attrName ] = domAttrValue;\n\t\t\t}\n\n\t\t\t// Detect custom namespace:\n\t\t\t//\n\t\t\t//\t\tclass: {\n\t\t\t//\t\t\tns: 'abc',\n\t\t\t//\t\t\tvalue: Template.bind( ... ).to( ... )\n\t\t\t//\t\t}\n\t\t\t//\n\t\t\tattrNs = ( isObject( attrValue[ 0 ] ) && attrValue[ 0 ].ns ) ? attrValue[ 0 ].ns : null;\n\n\t\t\t// Activate binding if one is found. Cases:\n\t\t\t//\n\t\t\t//\t\tclass: [\n\t\t\t//\t\t\tTemplate.bind( ... ).to( ... )\n\t\t\t//\t\t]\n\t\t\t//\n\t\t\t//\t\tclass: [\n\t\t\t//\t\t\t'bar',\n\t\t\t//\t\t\tTemplate.bind( ... ).to( ... ),\n\t\t\t//\t\t\t'baz'\n\t\t\t//\t\t]\n\t\t\t//\n\t\t\t//\t\tclass: {\n\t\t\t//\t\t\tns: 'abc',\n\t\t\t//\t\t\tvalue: Template.bind( ... ).to( ... )\n\t\t\t//\t\t}\n\t\t\t//\n\t\t\tif ( hasTemplateBinding( attrValue ) ) {\n\t\t\t\t// Normalize attributes with additional data like namespace:\n\t\t\t\t//\n\t\t\t\t//\t\tclass: {\n\t\t\t\t//\t\t\tns: 'abc',\n\t\t\t\t//\t\t\tvalue: [ ... ]\n\t\t\t\t//\t\t}\n\t\t\t\t//\n\t\t\t\tconst valueToBind = attrNs ? attrValue[ 0 ].value : attrValue;\n\n\t\t\t\t// Extend the original value of attributes like \"style\" and \"class\",\n\t\t\t\t// don't override them.\n\t\t\t\tif ( revertData && shouldExtend( attrName ) ) {\n\t\t\t\t\tvalueToBind.unshift( domAttrValue );\n\t\t\t\t}\n\n\t\t\t\tthis._bindToObservable( {\n\t\t\t\t\tschema: valueToBind,\n\t\t\t\t\tupdater: getAttributeUpdater( node, attrName, attrNs ),\n\t\t\t\t\tdata\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Style attribute could be an Object so it needs to be parsed in a specific way.\n\t\t\t//\n\t\t\t//\t\tstyle: {\n\t\t\t//\t\t\twidth: '100px',\n\t\t\t//\t\t\theight: Template.bind( ... ).to( ... )\n\t\t\t//\t\t}\n\t\t\t//\n\t\t\telse if ( attrName == 'style' && typeof attrValue[ 0 ] !== 'string' ) {\n\t\t\t\tthis._renderStyleAttribute( attrValue[ 0 ], data );\n\t\t\t}\n\n\t\t\t// Otherwise simply set the static attribute:\n\t\t\t//\n\t\t\t//\t\tclass: [ 'foo' ]\n\t\t\t//\n\t\t\t//\t\tclass: [ 'all', 'are', 'static' ]\n\t\t\t//\n\t\t\t//\t\tclass: [\n\t\t\t//\t\t\t{\n\t\t\t//\t\t\t\tns: 'abc',\n\t\t\t//\t\t\t\tvalue: [ 'foo' ]\n\t\t\t//\t\t\t}\n\t\t\t//\t\t]\n\t\t\t//\n\t\t\telse {\n\t\t\t\t// Extend the original value of attributes like \"style\" and \"class\",\n\t\t\t\t// don't override them.\n\t\t\t\tif ( revertData && domAttrValue && shouldExtend( attrName ) ) {\n\t\t\t\t\tattrValue.unshift( domAttrValue );\n\t\t\t\t}\n\n\t\t\t\tattrValue = attrValue\n\t\t\t\t\t// Retrieve \"values\" from:\n\t\t\t\t\t//\n\t\t\t\t\t//\t\tclass: [\n\t\t\t\t\t//\t\t\t{\n\t\t\t\t\t//\t\t\t\tns: 'abc',\n\t\t\t\t\t//\t\t\t\tvalue: [ ... ]\n\t\t\t\t\t//\t\t\t}\n\t\t\t\t\t//\t\t]\n\t\t\t\t\t//\n\t\t\t\t\t.map( val => val ? ( val.value || val ) : val )\n\t\t\t\t\t// Flatten the array.\n\t\t\t\t\t.reduce( ( prev, next ) => prev.concat( next ), [] )\n\t\t\t\t\t// Convert into string.\n\t\t\t\t\t.reduce( arrayValueReducer, '' );\n\n\t\t\t\tif ( !isFalsy( attrValue ) ) {\n\t\t\t\t\tnode.setAttributeNS( attrNs, attrName, attrValue );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Renders the `style` attribute of an HTML element based on\n\t * {@link module:ui/template~Template#attributes}.\n\t *\n\t * A style attribute is an {Object} with static values:\n\t *\n\t *\t\tattributes: {\n\t *\t\t\tstyle: {\n\t *\t\t\t\tcolor: 'red'\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t * or values bound to {@link module:ui/model~Model} properties:\n\t *\n\t *\t\tattributes: {\n\t *\t\t\tstyle: {\n\t *\t\t\t\tcolor: bind.to( ... )\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t * Note: The `style` attribute is rendered without setting the namespace. It does not seem to be\n\t * needed.\n\t *\n\t * @private\n\t * @param {Object} styles Styles located in `attributes.style` of {@link module:ui/template~TemplateDefinition}.\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t */\n\t_renderStyleAttribute( styles, data ) {\n\t\tconst node = data.node;\n\n\t\tfor ( const styleName in styles ) {\n\t\t\tconst styleValue = styles[ styleName ];\n\n\t\t\t// Cases:\n\t\t\t//\n\t\t\t//\t\tstyle: {\n\t\t\t//\t\t\tcolor: bind.to( 'attribute' )\n\t\t\t//\t\t}\n\t\t\t//\n\t\t\tif ( hasTemplateBinding( styleValue ) ) {\n\t\t\t\tthis._bindToObservable( {\n\t\t\t\t\tschema: [ styleValue ],\n\t\t\t\t\tupdater: getStyleUpdater( node, styleName ),\n\t\t\t\t\tdata\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Cases:\n\t\t\t//\n\t\t\t//\t\tstyle: {\n\t\t\t//\t\t\tcolor: 'red'\n\t\t\t//\t\t}\n\t\t\t//\n\t\t\telse {\n\t\t\t\tnode.style[ styleName ] = styleValue;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Recursively renders HTML element's children from {@link module:ui/template~Template#children}.\n\t *\n\t * @protected\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t */\n\t_renderElementChildren( data ) {\n\t\tconst node = data.node;\n\t\tconst container = data.intoFragment ? document.createDocumentFragment() : node;\n\t\tconst isApplying = data.isApplying;\n\t\tlet childIndex = 0;\n\n\t\tfor ( const child of this.children ) {\n\t\t\tif ( isViewCollection( child ) ) {\n\t\t\t\tif ( !isApplying ) {\n\t\t\t\t\tchild.setParent( node );\n\n\t\t\t\t\t// Note: ViewCollection renders its children.\n\t\t\t\t\tfor ( const view of child ) {\n\t\t\t\t\t\tcontainer.appendChild( view.element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if ( isView( child ) ) {\n\t\t\t\tif ( !isApplying ) {\n\t\t\t\t\tif ( !child.isRendered ) {\n\t\t\t\t\t\tchild.render();\n\t\t\t\t\t}\n\n\t\t\t\t\tcontainer.appendChild( child.element );\n\t\t\t\t}\n\t\t\t} else if ( isNode( child ) ) {\n\t\t\t\tcontainer.appendChild( child );\n\t\t\t} else {\n\t\t\t\tif ( isApplying ) {\n\t\t\t\t\tconst revertData = data.revertData;\n\t\t\t\t\tconst childRevertData = getEmptyRevertData();\n\n\t\t\t\t\trevertData.children.push( childRevertData );\n\n\t\t\t\t\tchild._renderNode( {\n\t\t\t\t\t\tnode: container.childNodes[ childIndex++ ],\n\t\t\t\t\t\tisApplying: true,\n\t\t\t\t\t\trevertData: childRevertData\n\t\t\t\t\t} );\n\t\t\t\t} else {\n\t\t\t\t\tcontainer.appendChild( child.render() );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( data.intoFragment ) {\n\t\t\tnode.appendChild( container );\n\t\t}\n\t}\n\n\t/**\n\t * Activates `on` event listeners from the {@link module:ui/template~TemplateDefinition}\n\t * on an HTML element.\n\t *\n\t * @protected\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t */\n\t_setUpListeners( data ) {\n\t\tif ( !this.eventListeners ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor ( const key in this.eventListeners ) {\n\t\t\tconst revertBindings = this.eventListeners[ key ].map( schemaItem => {\n\t\t\t\tconst [ domEvtName, domSelector ] = key.split( '@' );\n\n\t\t\t\treturn schemaItem.activateDomEventListener( domEvtName, domSelector, data );\n\t\t\t} );\n\n\t\t\tif ( data.revertData ) {\n\t\t\t\tdata.revertData.bindings.push( revertBindings );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * For a given {@link module:ui/template~TemplateValueSchema} containing {@link module:ui/template~TemplateBinding}\n\t * activates the binding and sets its initial value.\n\t *\n\t * Note: {@link module:ui/template~TemplateValueSchema} can be for HTML element attributes or\n\t * text node `textContent`.\n\t *\n\t * @protected\n\t * @param {Object} options Binding options.\n\t * @param {module:ui/template~TemplateValueSchema} options.schema\n\t * @param {Function} options.updater A function which updates the DOM (like attribute or text).\n\t * @param {module:ui/template~RenderData} options.data Rendering data.\n\t */\n\t_bindToObservable( { schema, updater, data } ) {\n\t\tconst revertData = data.revertData;\n\n\t\t// Set initial values.\n\t\tsyncValueSchemaValue( schema, updater, data );\n\n\t\tconst revertBindings = schema\n\t\t\t// Filter \"falsy\" (false, undefined, null, '') value schema components out.\n\t\t\t.filter( item => !isFalsy( item ) )\n\t\t\t// Filter inactive bindings from schema, like static strings ('foo'), numbers (42), etc.\n\t\t\t.filter( item => item.observable )\n\t\t\t// Once only the actual binding are left, let the emitter listen to observable change:attribute event.\n\t\t\t// TODO: Reduce the number of listeners attached as many bindings may listen\n\t\t\t// to the same observable attribute.\n\t\t\t.map( templateBinding => templateBinding.activateAttributeListener( schema, updater, data ) );\n\n\t\tif ( revertData ) {\n\t\t\trevertData.bindings.push( revertBindings );\n\t\t}\n\t}\n\n\t/**\n\t * Reverts {@link module:ui/template~RenderData#revertData template data} from a node to\n\t * return it to the original state.\n\t *\n\t * @protected\n\t * @param {HTMLElement|Text} node A node to be reverted.\n\t * @param {Object} revertData An object that stores information about what changes have been made by\n\t * {@link #apply} to the node. See {@link module:ui/template~RenderData#revertData} for more information.\n\t */\n\t_revertTemplateFromNode( node, revertData ) {\n\t\tfor ( const binding of revertData.bindings ) {\n\t\t\t// Each binding may consist of several observable+observable#attribute.\n\t\t\t// like the following has 2:\n\t\t\t//\n\t\t\t//\t\tclass: [\n\t\t\t//\t\t\t'x',\n\t\t\t//\t\t\tbind.to( 'foo' ),\n\t\t\t//\t\t\t'y',\n\t\t\t//\t\t\tbind.to( 'bar' )\n\t\t\t//\t\t]\n\t\t\t//\n\t\t\tfor ( const revertBinding of binding ) {\n\t\t\t\trevertBinding();\n\t\t\t}\n\t\t}\n\n\t\tif ( revertData.text ) {\n\t\t\tnode.textContent = revertData.text;\n\n\t\t\treturn;\n\t\t}\n\n\t\tfor ( const attrName in revertData.attributes ) {\n\t\t\tconst attrValue = revertData.attributes[ attrName ];\n\n\t\t\t// When the attribute has **not** been set before #apply().\n\t\t\tif ( attrValue === null ) {\n\t\t\t\tnode.removeAttribute( attrName );\n\t\t\t} else {\n\t\t\t\tnode.setAttribute( attrName, attrValue );\n\t\t\t}\n\t\t}\n\n\t\tfor ( let i = 0; i < revertData.children.length; ++i ) {\n\t\t\tthis._revertTemplateFromNode( node.childNodes[ i ], revertData.children[ i ] );\n\t\t}\n\t}\n}\n\nmix( Template, EmitterMixin );\n\n/**\n * Describes a binding created by the {@link module:ui/template~Template.bind} interface.\n *\n * @protected\n */\nexport class TemplateBinding {\n\t/**\n\t * Creates an instance of the {@link module:ui/template~TemplateBinding} class.\n\t *\n\t * @param {module:ui/template~TemplateDefinition} def The definition of the binding.\n\t */\n\tconstructor( def ) {\n\t\tObject.assign( this, def );\n\n\t\t/**\n\t\t * An observable instance of the binding. It either:\n\t\t *\n\t\t * * provides the attribute with the value,\n\t\t * * or passes the event when a corresponding DOM event is fired.\n\t\t *\n\t\t * @member {module:utils/observablemixin~ObservableMixin} module:ui/template~TemplateBinding#observable\n\t\t */\n\n\t\t/**\n\t\t * An {@link module:utils/emittermixin~Emitter} used by the binding to:\n\t\t *\n\t\t * * listen to the attribute change in the {@link module:ui/template~TemplateBinding#observable},\n\t\t * * or listen to the event in the DOM.\n\t\t *\n\t\t * @member {module:utils/emittermixin~EmitterMixin} module:ui/template~TemplateBinding#emitter\n\t\t */\n\n\t\t/**\n\t\t * The name of the {@link module:ui/template~TemplateBinding#observable observed attribute}.\n\t\t *\n\t\t * @member {String} module:ui/template~TemplateBinding#attribute\n\t\t */\n\n\t\t/**\n\t\t * A custom function to process the value of the {@link module:ui/template~TemplateBinding#attribute}.\n\t\t *\n\t\t * @member {Function} [module:ui/template~TemplateBinding#callback]\n\t\t */\n\t}\n\n\t/**\n\t * Returns the value of the binding. It is the value of the {@link module:ui/template~TemplateBinding#attribute} in\n\t * {@link module:ui/template~TemplateBinding#observable}. The value may be processed by the\n\t * {@link module:ui/template~TemplateBinding#callback}, if such has been passed to the binding.\n\t *\n\t * @param {Node} [node] A native DOM node, passed to the custom {@link module:ui/template~TemplateBinding#callback}.\n\t * @returns {*} The value of {@link module:ui/template~TemplateBinding#attribute} in\n\t * {@link module:ui/template~TemplateBinding#observable}.\n\t */\n\tgetValue( node ) {\n\t\tconst value = this.observable[ this.attribute ];\n\n\t\treturn this.callback ? this.callback( value, node ) : value;\n\t}\n\n\t/**\n\t * Activates the listener which waits for changes of the {@link module:ui/template~TemplateBinding#attribute} in\n\t * {@link module:ui/template~TemplateBinding#observable}, then updates the DOM with the aggregated\n\t * value of {@link module:ui/template~TemplateValueSchema}.\n\t *\n\t * @param {module:ui/template~TemplateValueSchema} schema A full schema to generate an attribute or text in the DOM.\n\t * @param {Function} updater A DOM updater function used to update the native DOM attribute or text.\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t * @returns {Function} A function to sever the listener binding.\n\t */\n\tactivateAttributeListener( schema, updater, data ) {\n\t\tconst callback = () => syncValueSchemaValue( schema, updater, data );\n\n\t\tthis.emitter.listenTo( this.observable, 'change:' + this.attribute, callback );\n\n\t\t// Allows revert of the listener.\n\t\treturn () => {\n\t\t\tthis.emitter.stopListening( this.observable, 'change:' + this.attribute, callback );\n\t\t};\n\t}\n}\n\n/**\n * Describes either:\n *\n * * a binding to an {@link module:utils/observablemixin~Observable},\n * * or a native DOM event binding.\n *\n * It is created by the {@link module:ui/template~BindChain#to} method.\n *\n * @protected\n */\nexport class TemplateToBinding extends TemplateBinding {\n\t/**\n\t * Activates the listener for the native DOM event, which when fired, is propagated by\n\t * the {@link module:ui/template~TemplateBinding#emitter}.\n\t *\n\t * @param {String} domEvtName The name of the native DOM event.\n\t * @param {String} domSelector The selector in the DOM to filter delegated events.\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t * @returns {Function} A function to sever the listener binding.\n\t */\n\tactivateDomEventListener( domEvtName, domSelector, data ) {\n\t\tconst callback = ( evt, domEvt ) => {\n\t\t\tif ( !domSelector || domEvt.target.matches( domSelector ) ) {\n\t\t\t\tif ( typeof this.eventNameOrFunction == 'function' ) {\n\t\t\t\t\tthis.eventNameOrFunction( domEvt );\n\t\t\t\t} else {\n\t\t\t\t\tthis.observable.fire( this.eventNameOrFunction, domEvt );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.emitter.listenTo( data.node, domEvtName, callback );\n\n\t\t// Allows revert of the listener.\n\t\treturn () => {\n\t\t\tthis.emitter.stopListening( data.node, domEvtName, callback );\n\t\t};\n\t}\n}\n\n/**\n * Describes a binding to {@link module:utils/observablemixin~ObservableMixin} created by the {@link module:ui/template~BindChain#if}\n * method.\n *\n * @protected\n */\nexport class TemplateIfBinding extends TemplateBinding {\n\t/**\n\t * @inheritDoc\n\t */\n\tgetValue( node ) {\n\t\tconst value = super.getValue( node );\n\n\t\treturn isFalsy( value ) ? false : ( this.valueIfTrue || true );\n\t}\n\n\t/**\n\t * The value of the DOM attribute or text to be set if the {@link module:ui/template~TemplateBinding#attribute} in\n\t * {@link module:ui/template~TemplateBinding#observable} is `true`.\n\t *\n\t * @member {String} [module:ui/template~TemplateIfBinding#valueIfTrue]\n\t */\n}\n\n// Checks whether given {@link module:ui/template~TemplateValueSchema} contains a\n// {@link module:ui/template~TemplateBinding}.\n//\n// @param {module:ui/template~TemplateValueSchema} schema\n// @returns {Boolean}\nfunction hasTemplateBinding( schema ) {\n\tif ( !schema ) {\n\t\treturn false;\n\t}\n\n\t// Normalize attributes with additional data like namespace:\n\t//\n\t//\t\tclass: {\n\t//\t\t\tns: 'abc',\n\t//\t\t\tvalue: [ ... ]\n\t//\t\t}\n\t//\n\tif ( schema.value ) {\n\t\tschema = schema.value;\n\t}\n\n\tif ( Array.isArray( schema ) ) {\n\t\treturn schema.some( hasTemplateBinding );\n\t} else if ( schema instanceof TemplateBinding ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n// Assembles the value using {@link module:ui/template~TemplateValueSchema} and stores it in a form of\n// an Array. Each entry of the Array corresponds to one of {@link module:ui/template~TemplateValueSchema}\n// items.\n//\n// @param {module:ui/template~TemplateValueSchema} schema\n// @param {Node} node DOM Node updated when {@link module:utils/observablemixin~ObservableMixin} changes.\n// @returns {Array}\nfunction getValueSchemaValue( schema, node ) {\n\treturn schema.map( schemaItem => {\n\t\t// Process {@link module:ui/template~TemplateBinding} bindings.\n\t\tif ( schemaItem instanceof TemplateBinding ) {\n\t\t\treturn schemaItem.getValue( node );\n\t\t}\n\n\t\t// All static values like strings, numbers, and \"falsy\" values (false, null, undefined, '', etc.) just pass.\n\t\treturn schemaItem;\n\t} );\n}\n\n// A function executed each time the bound Observable attribute changes, which updates the DOM with a value\n// constructed from {@link module:ui/template~TemplateValueSchema}.\n//\n// @param {module:ui/template~TemplateValueSchema} schema\n// @param {Function} updater A function which updates the DOM (like attribute or text).\n// @param {Node} node DOM Node updated when {@link module:utils/observablemixin~ObservableMixin} changes.\nfunction syncValueSchemaValue( schema, updater, { node } ) {\n\tlet value = getValueSchemaValue( schema, node );\n\n\t// Check if schema is a single Template.bind.if, like:\n\t//\n\t//\t\tclass: Template.bind.if( 'foo' )\n\t//\n\tif ( schema.length == 1 && schema[ 0 ] instanceof TemplateIfBinding ) {\n\t\tvalue = value[ 0 ];\n\t} else {\n\t\tvalue = value.reduce( arrayValueReducer, '' );\n\t}\n\n\tif ( isFalsy( value ) ) {\n\t\tupdater.remove();\n\t} else {\n\t\tupdater.set( value );\n\t}\n}\n\n// Returns an object consisting of `set` and `remove` functions, which\n// can be used in the context of DOM Node to set or reset `textContent`.\n// @see module:ui/view~View#_bindToObservable\n//\n// @param {Node} node DOM Node to be modified.\n// @returns {Object}\nfunction getTextUpdater( node ) {\n\treturn {\n\t\tset( value ) {\n\t\t\tnode.textContent = value;\n\t\t},\n\n\t\tremove() {\n\t\t\tnode.textContent = '';\n\t\t}\n\t};\n}\n\n// Returns an object consisting of `set` and `remove` functions, which\n// can be used in the context of DOM Node to set or reset an attribute.\n// @see module:ui/view~View#_bindToObservable\n//\n// @param {Node} node DOM Node to be modified.\n// @param {String} attrName Name of the attribute to be modified.\n// @param {String} [ns=null] Namespace to use.\n// @returns {Object}\nfunction getAttributeUpdater( el, attrName, ns ) {\n\treturn {\n\t\tset( value ) {\n\t\t\tel.setAttributeNS( ns, attrName, value );\n\t\t},\n\n\t\tremove() {\n\t\t\tel.removeAttributeNS( ns, attrName );\n\t\t}\n\t};\n}\n\n// Returns an object consisting of `set` and `remove` functions, which\n// can be used in the context of CSSStyleDeclaration to set or remove a style.\n// @see module:ui/view~View#_bindToObservable\n//\n// @param {Node} node DOM Node to be modified.\n// @param {String} styleName Name of the style to be modified.\n// @returns {Object}\nfunction getStyleUpdater( el, styleName ) {\n\treturn {\n\t\tset( value ) {\n\t\t\tel.style[ styleName ] = value;\n\t\t},\n\n\t\tremove() {\n\t\t\tel.style[ styleName ] = null;\n\t\t}\n\t};\n}\n\n// Clones definition of the template.\n//\n// @param {module:ui/template~TemplateDefinition} def\n// @returns {module:ui/template~TemplateDefinition}\nfunction clone( def ) {\n\tconst clone = cloneDeepWith( def, value => {\n\t\t// Don't clone the `Template.bind`* bindings because of the references to Observable\n\t\t// and DomEmitterMixin instances inside, which would also be traversed and cloned by greedy\n\t\t// cloneDeepWith algorithm. There's no point in cloning Observable/DomEmitterMixins\n\t\t// along with the definition.\n\t\t//\n\t\t// Don't clone Template instances if provided as a child. They're simply #render()ed\n\t\t// and nothing should interfere.\n\t\t//\n\t\t// Also don't clone View instances if provided as a child of the Template. The template\n\t\t// instance will be extracted from the View during the normalization and there's no need\n\t\t// to clone it.\n\t\tif ( value && ( value instanceof TemplateBinding || isTemplate( value ) || isView( value ) || isViewCollection( value ) ) ) {\n\t\t\treturn value;\n\t\t}\n\t} );\n\n\treturn clone;\n}\n\n// Normalizes given {@link module:ui/template~TemplateDefinition}.\n//\n// See:\n//  * {@link normalizeAttributes}\n//  * {@link normalizeListeners}\n//  * {@link normalizePlainTextDefinition}\n//  * {@link normalizeTextDefinition}\n//\n// @param {module:ui/template~TemplateDefinition} def\n// @returns {module:ui/template~TemplateDefinition} Normalized definition.\nfunction normalize( def ) {\n\tif ( typeof def == 'string' ) {\n\t\tdef = normalizePlainTextDefinition( def );\n\t} else if ( def.text ) {\n\t\tnormalizeTextDefinition( def );\n\t}\n\n\tif ( def.on ) {\n\t\tdef.eventListeners = normalizeListeners( def.on );\n\n\t\t// Template mixes EmitterMixin, so delete #on to avoid collision.\n\t\tdelete def.on;\n\t}\n\n\tif ( !def.text ) {\n\t\tif ( def.attributes ) {\n\t\t\tnormalizeAttributes( def.attributes );\n\t\t}\n\n\t\tconst children = [];\n\n\t\tif ( def.children ) {\n\t\t\tif ( isViewCollection( def.children ) ) {\n\t\t\t\tchildren.push( def.children );\n\t\t\t} else {\n\t\t\t\tfor ( const child of def.children ) {\n\t\t\t\t\tif ( isTemplate( child ) || isView( child ) || isNode( child ) ) {\n\t\t\t\t\t\tchildren.push( child );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchildren.push( new Template( child ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdef.children = children;\n\t}\n\n\treturn def;\n}\n\n// Normalizes \"attributes\" section of {@link module:ui/template~TemplateDefinition}.\n//\n//\t\tattributes: {\n//\t\t\ta: 'bar',\n//\t\t\tb: {@link module:ui/template~TemplateBinding},\n//\t\t\tc: {\n//\t\t\t\tvalue: 'bar'\n//\t\t\t}\n//\t\t}\n//\n// becomes\n//\n//\t\tattributes: {\n//\t\t\ta: [ 'bar' ],\n//\t\t\tb: [ {@link module:ui/template~TemplateBinding} ],\n//\t\t\tc: {\n//\t\t\t\tvalue: [ 'bar' ]\n//\t\t\t}\n//\t\t}\n//\n// @param {Object} attributes\nfunction normalizeAttributes( attributes ) {\n\tfor ( const a in attributes ) {\n\t\tif ( attributes[ a ].value ) {\n\t\t\tattributes[ a ].value = [].concat( attributes[ a ].value );\n\t\t}\n\n\t\tarrayify( attributes, a );\n\t}\n}\n\n// Normalizes \"on\" section of {@link module:ui/template~TemplateDefinition}.\n//\n//\t\ton: {\n//\t\t\ta: 'bar',\n//\t\t\tb: {@link module:ui/template~TemplateBinding},\n//\t\t\tc: [ {@link module:ui/template~TemplateBinding}, () => { ... } ]\n//\t\t}\n//\n// becomes\n//\n//\t\ton: {\n//\t\t\ta: [ 'bar' ],\n//\t\t\tb: [ {@link module:ui/template~TemplateBinding} ],\n//\t\t\tc: [ {@link module:ui/template~TemplateBinding}, () => { ... } ]\n//\t\t}\n//\n// @param {Object} listeners\n// @returns {Object} Object containing normalized listeners.\nfunction normalizeListeners( listeners ) {\n\tfor ( const l in listeners ) {\n\t\tarrayify( listeners, l );\n\t}\n\n\treturn listeners;\n}\n\n// Normalizes \"string\" {@link module:ui/template~TemplateDefinition}.\n//\n//\t\t\"foo\"\n//\n// becomes\n//\n//\t\t{ text: [ 'foo' ] },\n//\n// @param {String} def\n// @returns {module:ui/template~TemplateDefinition} Normalized template definition.\nfunction normalizePlainTextDefinition( def ) {\n\treturn {\n\t\ttext: [ def ]\n\t};\n}\n\n// Normalizes text {@link module:ui/template~TemplateDefinition}.\n//\n//\t\tchildren: [\n//\t\t\t{ text: 'def' },\n//\t\t\t{ text: {@link module:ui/template~TemplateBinding} }\n//\t\t]\n//\n// becomes\n//\n//\t\tchildren: [\n//\t\t\t{ text: [ 'def' ] },\n//\t\t\t{ text: [ {@link module:ui/template~TemplateBinding} ] }\n//\t\t]\n//\n// @param {module:ui/template~TemplateDefinition} def\nfunction normalizeTextDefinition( def ) {\n\tif ( !Array.isArray( def.text ) ) {\n\t\tdef.text = [ def.text ];\n\t}\n}\n\n// Wraps an entry in Object in an Array, if not already one.\n//\n//\t\t{\n//\t\t\tx: 'y',\n//\t\t\ta: [ 'b' ]\n//\t\t}\n//\n// becomes\n//\n//\t\t{\n//\t\t\tx: [ 'y' ],\n//\t\t\ta: [ 'b' ]\n//\t\t}\n//\n// @param {Object} obj\n// @param {String} key\nfunction arrayify( obj, key ) {\n\tif ( !Array.isArray( obj[ key ] ) ) {\n\t\tobj[ key ] = [ obj[ key ] ];\n\t}\n}\n\n// A helper which concatenates the value avoiding unwanted\n// leading white spaces.\n//\n// @param {String} prev\n// @param {String} cur\n// @returns {String}\nfunction arrayValueReducer( prev, cur ) {\n\tif ( isFalsy( cur ) ) {\n\t\treturn prev;\n\t} else if ( isFalsy( prev ) ) {\n\t\treturn cur;\n\t} else {\n\t\treturn `${ prev } ${ cur }`;\n\t}\n}\n\n// Extends one object defined in the following format:\n//\n//\t\t{\n//\t\t\tkey1: [Array1],\n//\t\t\tkey2: [Array2],\n//\t\t\t...\n//\t\t\tkeyN: [ArrayN]\n//\t\t}\n//\n// with another object of the same data format.\n//\n// @param {Object} obj Base object.\n// @param {Object} ext Object extending base.\n// @returns {String}\nfunction extendObjectValueArray( obj, ext ) {\n\tfor ( const a in ext ) {\n\t\tif ( obj[ a ] ) {\n\t\t\tobj[ a ].push( ...ext[ a ] );\n\t\t} else {\n\t\t\tobj[ a ] = ext[ a ];\n\t\t}\n\t}\n}\n\n// A helper for {@link module:ui/template~Template#extend}. Recursively extends {@link module:ui/template~Template} instance\n// with content from {@link module:ui/template~TemplateDefinition}. See {@link module:ui/template~Template#extend} to learn more.\n//\n// @param {module:ui/template~Template} def A template instance to be extended.\n// @param {module:ui/template~TemplateDefinition} def A definition which is to extend the template instance.\n// @param {Object} Error context.\nfunction extendTemplate( template, def ) {\n\tif ( def.attributes ) {\n\t\tif ( !template.attributes ) {\n\t\t\ttemplate.attributes = {};\n\t\t}\n\n\t\textendObjectValueArray( template.attributes, def.attributes );\n\t}\n\n\tif ( def.eventListeners ) {\n\t\tif ( !template.eventListeners ) {\n\t\t\ttemplate.eventListeners = {};\n\t\t}\n\n\t\textendObjectValueArray( template.eventListeners, def.eventListeners );\n\t}\n\n\tif ( def.text ) {\n\t\ttemplate.text.push( ...def.text );\n\t}\n\n\tif ( def.children && def.children.length ) {\n\t\tif ( template.children.length != def.children.length ) {\n\t\t\t/**\n\t\t\t * The number of children in extended definition does not match.\n\t\t\t *\n\t\t\t * @error ui-template-extend-children-mismatch\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'ui-template-extend-children-mismatch: The number of children in extended definition does not match.',\n\t\t\t\ttemplate\n\t\t\t);\n\t\t}\n\n\t\tlet childIndex = 0;\n\n\t\tfor ( const childDef of def.children ) {\n\t\t\textendTemplate( template.children[ childIndex++ ], childDef );\n\t\t}\n\t}\n}\n\n// Checks if value is \"falsy\".\n// Note: 0 (Number) is not \"falsy\" in this context.\n//\n// @private\n// @param {*} value Value to be checked.\nfunction isFalsy( value ) {\n\treturn !value && value !== 0;\n}\n\n// Checks if the item is an instance of {@link module:ui/view~View}\n//\n// @private\n// @param {*} value Value to be checked.\nfunction isView( item ) {\n\treturn item instanceof View;\n}\n\n// Checks if the item is an instance of {@link module:ui/template~Template}\n//\n// @private\n// @param {*} value Value to be checked.\nfunction isTemplate( item ) {\n\treturn item instanceof Template;\n}\n\n// Checks if the item is an instance of {@link module:ui/viewcollection~ViewCollection}\n//\n// @private\n// @param {*} value Value to be checked.\nfunction isViewCollection( item ) {\n\treturn item instanceof ViewCollection;\n}\n\n// Creates an empty skeleton for {@link module:ui/template~Template#revert}\n// data.\n//\n// @private\nfunction getEmptyRevertData() {\n\treturn {\n\t\tchildren: [],\n\t\tbindings: [],\n\t\tattributes: {}\n\t};\n}\n\n// Checks whether an attribute should be extended when\n// {@link module:ui/template~Template#apply} is called.\n//\n// @private\n// @param {String} attrName Attribute name to check.\nfunction shouldExtend( attrName ) {\n\treturn attrName == 'class' || attrName == 'style';\n}\n\n/**\n * A definition of the {@link module:ui/template~Template}. It describes what kind of\n * node a template will render (HTML element or text), attributes of an element, DOM event\n * listeners and children.\n *\n * Also see:\n * * {@link module:ui/template~TemplateValueSchema} to learn about HTML element attributes,\n * * {@link module:ui/template~TemplateListenerSchema} to learn about DOM event listeners.\n *\n * A sample definition on an HTML element can look like this:\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tchildren: [\n *\t\t\t\t{\n *\t\t\t\t\ttag: 'span',\n *\t\t\t\t\tattributes: { ... },\n *\t\t\t\t\tchildren: [ ... ],\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\ttext: 'static–text'\n *\t\t\t\t},\n *\t\t\t\t'also-static–text',\n *\t\t\t],\n *\t\t\tattributes: {\n *\t\t\t\tclass: {@link module:ui/template~TemplateValueSchema},\n *\t\t\t\tid: {@link module:ui/template~TemplateValueSchema},\n *\t\t\t\tstyle: {@link module:ui/template~TemplateValueSchema}\n *\n *\t\t\t\t// ...\n *\t\t\t},\n *\t\t\ton: {\n *\t\t\t\t'click': {@link module:ui/template~TemplateListenerSchema}\n *\n *\t\t\t\t// Document.querySelector format is also accepted.\n *\t\t\t\t'keyup@a.some-class': {@link module:ui/template~TemplateListenerSchema}\n *\n *\t\t\t\t// ...\n *\t\t\t}\n *\t\t} );\n *\n * A {@link module:ui/view~View}, another {@link module:ui/template~Template} or a native DOM node\n * can also become a child of a template. When a view is passed, its {@link module:ui/view~View#element} is used:\n *\n *\t\tconst view = new SomeView();\n *\t\tconst childTemplate = new Template( { ... } );\n *\t\tconst childNode = document.createElement( 'b' );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\n *\t\t\tchildren: [\n *\t\t\t\t// view#element will be added as a child of this <p>.\n *\t\t\t\tview,\n *\n * \t\t\t\t// The output of childTemplate.render() will be added here.\n *\t\t\t\tchildTemplate,\n *\n *\t\t\t\t// Native DOM nodes are included directly in the rendered output.\n *\t\t\t\tchildNode\n *\t\t\t]\n *\t\t} );\n *\n * An entire {@link module:ui/viewcollection~ViewCollection} can be used as a child in the definition:\n *\n *\t\tconst collection = new ViewCollection();\n *\t\tcollection.add( someView );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\n *\t\t\tchildren: collection\n *\t\t} );\n *\n * @typedef module:ui/template~TemplateDefinition\n * @type Object\n *\n * @property {String} tag See the template {@link module:ui/template~Template#tag} property.\n *\n * @property {Array.<module:ui/template~TemplateDefinition>} [children]\n * See the template {@link module:ui/template~Template#children} property.\n *\n * @property {Object.<String, module:ui/template~TemplateValueSchema>} [attributes]\n * See the template {@link module:ui/template~Template#attributes} property.\n *\n * @property {String|module:ui/template~TemplateValueSchema|Array.<String|module:ui/template~TemplateValueSchema>} [text]\n * See the template {@link module:ui/template~Template#text} property.\n *\n * @property {Object.<String, module:ui/template~TemplateListenerSchema>} [on]\n * See the template {@link module:ui/template~Template#eventListeners} property.\n */\n\n/**\n * Describes a value of an HTML element attribute or `textContent`. It allows combining multiple\n * data sources like static values and {@link module:utils/observablemixin~Observable} attributes.\n *\n * Also see:\n * * {@link module:ui/template~TemplateDefinition} to learn where to use it,\n * * {@link module:ui/template~Template.bind} to learn how to configure\n * {@link module:utils/observablemixin~Observable} attribute bindings,\n * * {@link module:ui/template~Template#render} to learn how to render a template,\n * * {@link module:ui/template~BindChain#to `to()`} and {@link module:ui/template~BindChain#if `if()`}\n * methods to learn more about bindings.\n *\n * Attribute values can be described in many different ways:\n *\n *\t\t// Bind helper will create bindings to attributes of the observable.\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tattributes: {\n *\t\t\t\t// A plain string schema.\n *\t\t\t\t'class': 'static-text',\n *\n *\t\t\t\t// An object schema, binds to the \"foo\" attribute of the\n *\t\t\t\t// observable and follows its value.\n *\t\t\t\t'class': bind.to( 'foo' ),\n *\n *\t\t\t\t// An array schema, combines the above.\n *\t\t\t\t'class': [\n *\t\t\t\t\t'static-text',\n *\t\t\t\t\tbind.to( 'bar', () => { ... } ),\n *\n * \t\t\t\t\t// Bindings can also be conditional.\n *\t\t\t\t\tbind.if( 'baz', 'class-when-baz-is-true' )\n *\t\t\t\t],\n *\n *\t\t\t\t// An array schema, with a custom namespace, e.g. useful for creating SVGs.\n *\t\t\t\t'class': {\n *\t\t\t\t\tns: 'http://ns.url',\n *\t\t\t\t\tvalue: [\n *\t\t\t\t\t\tbind.if( 'baz', 'value-when-true' ),\n *\t\t\t\t\t\t'static-text'\n *\t\t\t\t\t]\n *\t\t\t\t},\n *\n *\t\t\t\t// An object schema, specific for styles.\n *\t\t\t\tstyle: {\n *\t\t\t\t\tcolor: 'red',\n *\t\t\t\t\tbackgroundColor: bind.to( 'qux', () => { ... } )\n *\t\t\t\t}\n *\t\t\t}\n *\t\t} );\n *\n * Text nodes can also have complex values:\n *\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\t// Will render a \"foo\" text node.\n *\t\tnew Template( {\n *\t\t\ttext: 'foo'\n *\t\t} );\n *\n *\t\t// Will render a \"static text: {observable.foo}\" text node.\n *\t\t// The text of the node will be updated as the \"foo\" attribute changes.\n *\t\tnew Template( {\n *\t\t\ttext: [\n *\t\t\t\t'static text: ',\n *\t\t\t\tbind.to( 'foo', () => { ... } )\n *\t\t\t]\n *\t\t} );\n *\n * @typedef module:ui/template~TemplateValueSchema\n * @type {Object|String|Array}\n */\n\n/**\n * Describes an event listener attached to an HTML element. Such listener can propagate DOM events\n * through an {@link module:utils/observablemixin~Observable} instance, execute custom callbacks\n * or both, if necessary.\n *\n * Also see:\n * * {@link module:ui/template~TemplateDefinition} to learn more about template definitions,\n * * {@link module:ui/template~BindChain#to `to()`} method to learn more about bindings.\n *\n * Check out different ways of attaching event listeners below:\n *\n *\t\t// Bind helper will propagate events through the observable.\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\ton: {\n *\t\t\t\t// An object schema. The observable will fire the \"clicked\" event upon DOM \"click\".\n *\t\t\t\tclick: bind.to( 'clicked' )\n *\n *\t\t\t\t// An object schema. It will work for \"click\" event on \"a.foo\" children only.\n *\t\t\t\t'click@a.foo': bind.to( 'clicked' )\n *\n *\t\t\t\t// An array schema, makes the observable propagate multiple events.\n *\t\t\t\tclick: [\n *\t\t\t\t\tbind.to( 'clicked' ),\n *\t\t\t\t\tbind.to( 'executed' )\n *\t\t\t\t],\n *\n *\t\t\t\t// An array schema with a custom callback.\n *\t\t\t\t'click@a.foo': {\n *\t\t\t\t\tbind.to( 'clicked' ),\n *\t\t\t\t\tbind.to( evt => {\n *\t\t\t\t\t\tconsole.log( `${ evt.target } has been clicked!` );\n *\t\t\t\t\t} }\n *\t\t\t\t}\n *\t\t\t}\n *\t\t} );\n *\n * @typedef module:ui/template~TemplateListenerSchema\n * @type {Object|String|Array}\n */\n\n/**\n * The return value of {@link ~Template.bind `Template.bind()`}. It provides `to()` and `if()`\n * methods to create the {@link module:utils/observablemixin~Observable observable} attribute and event bindings.\n *\n * @interface module:ui/template~BindChain\n */\n\n/**\n * Binds an {@link module:utils/observablemixin~Observable observable} to either:\n *\n * * an HTML element attribute or a text node `textContent`, so it remains in sync with the observable\n * attribute as it changes,\n * * or an HTML element DOM event, so the DOM events are propagated through an observable.\n *\n * Some common use cases of `to()` bindings are presented below:\n *\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tattributes: {\n *\t\t\t\t// class=\"...\" attribute gets bound to `observable#a`\n *\t\t\t\tclass: bind.to( 'a' )\n *\t\t\t},\n *\t\t\tchildren: [\n *\t\t\t\t// <p>...</p> gets bound to observable#b; always `toUpperCase()`.\n *\t\t\t\t{\n *\t\t\t\t\ttext: bind.to( 'b', ( value, node ) => value.toUpperCase() )\n *\t\t\t\t}\n *\t\t\t],\n *\t\t\ton: {\n *\t\t\t\tclick: [\n *\t\t\t\t\t// An observable will fire \"clicked\" upon \"click\" in the DOM.\n *\t\t\t\t\tbind.to( 'clicked' ),\n *\n *\t\t\t\t\t// A custom callback will be executed upon \"click\" in the DOM.\n *\t\t\t\t\tbind.to( () => {\n *\t\t\t\t\t\t...\n *\t\t\t\t\t} )\n *\t\t\t\t]\n *\t\t\t}\n *\t\t} ).render();\n *\n * Learn more about using `to()` in the {@link module:ui/template~TemplateValueSchema} and\n * {@link module:ui/template~TemplateListenerSchema}.\n *\n * @method #to\n * @param {String|Function} eventNameOrFunctionOrAttribute An attribute name of\n * {@link module:utils/observablemixin~Observable} or a DOM event name or an event callback.\n * @param {Function} [callback] Allows for processing of the value. Accepts `Node` and `value` as arguments.\n * @returns {module:ui/template~TemplateBinding}\n */\n\n/**\n * Binds an {@link module:utils/observablemixin~Observable observable} to an HTML element attribute or a text\n * node `textContent` so it remains in sync with the observable attribute as it changes.\n *\n * Unlike {@link module:ui/template~BindChain#to}, it controls the presence of the attribute or `textContent`\n * depending on the \"falseness\" of an {@link module:utils/observablemixin~Observable} attribute.\n *\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'input',\n *\t\t\tattributes: {\n *\t\t\t\t// <input checked> when `observable#a` is not undefined/null/false/''\n *\t\t\t\t// <input> when `observable#a` is undefined/null/false\n *\t\t\t\tchecked: bind.if( 'a' )\n *\t\t\t},\n *\t\t\tchildren: [\n *\t\t\t\t{\n *\t\t\t\t\t// <input>\"b-is-not-set\"</input> when `observable#b` is undefined/null/false/''\n *\t\t\t\t\t// <input></input> when `observable#b` is not \"falsy\"\n *\t\t\t\t\ttext: bind.if( 'b', 'b-is-not-set', ( value, node ) => !value )\n *\t\t\t\t}\n *\t\t\t]\n *\t\t} ).render();\n *\n * Learn more about using `if()` in the {@link module:ui/template~TemplateValueSchema}.\n *\n * @method #if\n * @param {String} attribute An attribute name of {@link module:utils/observablemixin~Observable} used in the binding.\n * @param {String} [valueIfTrue] Value set when the {@link module:utils/observablemixin~Observable} attribute is not\n * undefined/null/false/'' (empty string).\n * @param {Function} [callback] Allows for processing of the value. Accepts `Node` and `value` as arguments.\n * @returns {module:ui/template~TemplateBinding}\n */\n\n/**\n * The {@link module:ui/template~Template#_renderNode} configuration.\n *\n * @private\n * @interface module:ui/template~RenderData\n */\n\n/**\n * Tells {@link module:ui/template~Template#_renderNode} to render\n * children into `DocumentFragment` first and then append the fragment\n * to the parent element. It is a speed optimization.\n *\n * @member {Boolean} #intoFragment\n */\n\n/**\n * A node which is being rendered.\n *\n * @member {HTMLElement|Text} #node\n */\n\n/**\n * Indicates whether the {@module:ui/template~RenderNodeOptions#node} has\n * been provided by {@module:ui/template~Template#apply}.\n *\n * @member {Boolean} #isApplying\n */\n\n/**\n * An object storing the data that helps {@module:ui/template~Template#revert}\n * bringing back an element to its initial state, i.e. before\n * {@module:ui/template~Template#apply} was called.\n *\n * @member {Object} #revertData\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/view\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport ViewCollection from './viewcollection';\nimport Template from './template';\nimport DomEmitterMixin from '@ckeditor/ckeditor5-utils/src/dom/emittermixin';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\n\nimport '../theme/globals/globals.css';\n\n/**\n * The basic view class, which represents an HTML element created out of a\n * {@link module:ui/view~View#template}. Views are building blocks of the user interface and handle\n * interaction\n *\n * Views {@link module:ui/view~View#registerChild aggregate} children in\n * {@link module:ui/view~View#createCollection collections} and manage the life cycle of DOM\n * listeners e.g. by handling rendering and destruction.\n *\n * See the {@link module:ui/template~TemplateDefinition} syntax to learn more about shaping view\n * elements, attributes and listeners.\n *\n *\t\tclass SampleView extends View {\n *\t\t\tconstructor( locale ) {\n *\t\t\t\tsuper( locale );\n *\n *\t\t\t\tconst bind = this.bindTemplate;\n *\n *\t\t\t\t// Views define their interface (state) using observable attributes.\n *\t\t\t\tthis.set( 'elementClass', 'bar' );\n *\n *\t\t\t\tthis.setTemplate( {\n *\t\t\t\t\ttag: 'p',\n *\n *\t\t\t\t\t// The element of the view can be defined with its children.\n *\t\t\t\t\tchildren: [\n *\t\t\t\t\t\t'Hello',\n *\t\t\t\t\t\t{\n *\t\t\t\t\t\t\ttag: 'b',\n *\t\t\t\t\t\t\tchildren: [ 'world!' ]\n *\t\t\t\t\t\t}\n *\t\t\t\t\t],\n *\t\t\t\t\tattributes: {\n *\t\t\t\t\t\tclass: [\n *\t\t\t\t\t\t\t'foo',\n *\n *\t\t\t\t\t\t\t// Observable attributes control the state of the view in DOM.\n *\t\t\t\t\t\t\tbind.to( 'elementClass' )\n *\t\t\t\t\t\t]\n *\t\t\t\t\t},\n *\t\t\t\t\ton: {\n *\t\t\t\t\t\t// Views listen to DOM events and propagate them.\n *\t\t\t\t\t\tclick: bind.to( 'clicked' )\n *\t\t\t\t\t}\n *\t\t\t\t} );\n *\t\t\t}\n *\t\t}\n *\n *\t\tconst view = new SampleView( locale );\n *\n *\t\tview.render();\n *\n *\t\t// Append <p class=\"foo bar\">Hello<b>world</b></p> to the <body>\n *\t\tdocument.body.appendChild( view.element );\n *\n *\t\t// Change the class attribute to <p class=\"foo baz\">Hello<b>world</b></p>\n *\t\tview.elementClass = 'baz';\n *\n *\t\t// Respond to the \"click\" event in DOM by executing a custom action.\n *\t\tview.on( 'clicked', () => {\n *\t\t\tconsole.log( 'The view has been clicked!' );\n *\t\t} );\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class View {\n\t/**\n\t * Creates an instance of the {@link module:ui/view~View} class.\n\t *\n\t * Also see {@link #render}.\n\t *\n\t * @param {module:utils/locale~Locale} [locale] The localization services instance.\n\t */\n\tconstructor( locale ) {\n\t\t/**\n\t\t * An HTML element of the view. `null` until {@link #render rendered}\n\t\t * from the {@link #template}.\n\t\t *\n\t\t *\t\tclass SampleView extends View {\n\t\t *\t\t\tconstructor() {\n\t\t *\t\t\t\tsuper();\n\t\t *\n\t\t *\t\t\t\t// A template instance the #element will be created from.\n\t\t *\t\t\t\tthis.setTemplate( {\n\t\t *\t\t\t\t\ttag: 'p'\n\t\t *\n\t\t *\t\t\t\t\t// ...\n\t\t *\t\t\t\t} );\n\t\t *\t\t\t}\n\t\t *\t\t}\n\t\t *\n\t\t *\t\tconst view = new SampleView();\n\t\t *\n\t\t *\t\t// Renders the #template.\n\t\t *\t\tview.render();\n\t\t *\n\t\t *\t\t// Append the HTML element of the view to <body>.\n\t\t *\t\tdocument.body.appendChild( view.element );\n\t\t *\n\t\t * **Note**: The element of the view can also be assigned directly:\n\t\t *\n\t\t *\t\tview.element = document.querySelector( '#my-container' );\n\t\t *\n\t\t * @member {HTMLElement}\n\t\t */\n\t\tthis.element = null;\n\n\t\t/**\n\t\t * Set `true` when the view has already been {@link module:ui/view~View#render rendered}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} #isRendered\n\t\t */\n\t\tthis.isRendered = false;\n\n\t\t/**\n\t\t * A set of tools to localize the user interface.\n\t\t *\n\t\t * Also see {@link module:core/editor/editor~Editor#locale}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/locale~Locale}\n\t\t */\n\t\tthis.locale = locale;\n\n\t\t/**\n\t\t * Shorthand for {@link module:utils/locale~Locale#t}.\n\t\t *\n\t\t * Note: If {@link #locale} instance hasn't been passed to the view this method may not\n\t\t * be available.\n\t\t *\n\t\t * @see module:utils/locale~Locale#t\n\t\t * @method\n\t\t */\n\t\tthis.t = locale && locale.t;\n\n\t\t/**\n\t\t * Collections registered with {@link #createCollection}.\n\t\t *\n\t\t * @protected\n\t\t * @member {Set.<module:ui/viewcollection~ViewCollection>}\n\t\t */\n\t\tthis._viewCollections = new Collection();\n\n\t\t/**\n\t\t * A collection of view instances, which have been added directly\n\t\t * into the {@link module:ui/template~Template#children}.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis._unboundChildren = this.createCollection();\n\n\t\t// Pass parent locale to its children.\n\t\tthis._viewCollections.on( 'add', ( evt, collection ) => {\n\t\t\tcollection.locale = locale;\n\t\t} );\n\n\t\t/**\n\t\t * Template of this view. It provides the {@link #element} representing\n\t\t * the view in DOM, which is {@link #render rendered}.\n\t\t *\n\t\t * @member {module:ui/template~Template} #template\n\t\t */\n\n\t\t/**\n\t\t * Cached {@link module:ui/template~BindChain bind chain} object created by the\n\t\t * {@link #template}. See {@link #bindTemplate}.\n\t\t *\n\t\t * @private\n\t\t * @member {Object} #_bindTemplate\n\t\t */\n\n\t\tthis.decorate( 'render' );\n\t}\n\n\t/**\n\t * Shorthand for {@link module:ui/template~Template.bind}, a binding\n\t * {@link module:ui/template~BindChain interface} pre–configured for the view instance.\n\t *\n\t * It provides {@link module:ui/template~BindChain#to `to()`} and\n\t * {@link module:ui/template~BindChain#if `if()`} methods that initialize bindings with\n\t * observable attributes and attach DOM listeners.\n\t *\n\t *\t\tclass SampleView extends View {\n\t *\t\t\tconstructor( locale ) {\n\t *\t\t\t\tsuper( locale );\n\t *\n\t *\t\t\t\tconst bind = this.bindTemplate;\n\t *\n\t *\t\t\t\t// These {@link module:utils/observablemixin~Observable observable} attributes will control\n\t *\t\t\t\t// the state of the view in DOM.\n\t *\t\t\t\tthis.set( {\n\t *\t\t\t\t\telementClass: 'foo',\n\t *\t\t\t\t \tisEnabled: true\n\t *\t\t\t\t } );\n\t *\n\t *\t\t\t\tthis.setTemplate( {\n\t *\t\t\t\t\ttag: 'p',\n\t *\n\t *\t\t\t\t\tattributes: {\n\t *\t\t\t\t\t\t// The class HTML attribute will follow elementClass\n\t *\t\t\t\t\t\t// and isEnabled view attributes.\n\t *\t\t\t\t\t\tclass: [\n\t *\t\t\t\t\t\t\tbind.to( 'elementClass' )\n\t *\t\t\t\t\t\t\tbind.if( 'isEnabled', 'present-when-enabled' )\n\t *\t\t\t\t\t\t]\n\t *\t\t\t\t\t},\n\t *\n\t *\t\t\t\t\ton: {\n\t *\t\t\t\t\t\t// The view will fire the \"clicked\" event upon clicking <p> in DOM.\n\t *\t\t\t\t\t\tclick: bind.to( 'clicked' )\n\t *\t\t\t\t\t}\n\t *\t\t\t\t} );\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t * @method #bindTemplate\n\t */\n\tget bindTemplate() {\n\t\tif ( this._bindTemplate ) {\n\t\t\treturn this._bindTemplate;\n\t\t}\n\n\t\treturn ( this._bindTemplate = Template.bind( this, this ) );\n\t}\n\n\t/**\n\t * Creates a new collection of views, which can be used as\n\t * {@link module:ui/template~Template#children} of this view.\n\t *\n\t *\t\tclass SampleView extends View {\n\t *\t\t\tconstructor( locale ) {\n\t *\t\t\t\tsuper( locale );\n\t *\n\t *\t\t\t\tthis.items = this.createCollection();\n \t *\n\t *\t\t\t\tthis.setTemplate( {\n\t *\t\t\t\t\ttag: 'p',\n\t *\n\t *\t\t\t\t\t// `items` collection will render here.\n\t *\t\t\t\t\tchildren: this.items\n\t *\t\t\t\t} );\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t *\t\tconst view = new SampleView( locale );\n\t *\t\tconst child = new ChildView( locale );\n\t *\n\t *\t\tview.render();\n\t *\n\t *\t\t// It will append <p></p> to the <body>.\n\t *\t\tdocument.body.appendChild( view.element );\n\t *\n\t *\t\t// From now on the child is nested under its parent, which is also reflected in DOM.\n\t *\t\t// <p><child#element></p>\n\t *\t\tview.items.add( child );\n\t *\n\t * @returns {module:ui/viewcollection~ViewCollection} A new collection of view instances.\n\t */\n\tcreateCollection() {\n\t\tconst collection = new ViewCollection();\n\n\t\tthis._viewCollections.add( collection );\n\n\t\treturn collection;\n\t}\n\n\t/**\n\t * Registers a new child view under the view instance. Once registered, a child\n\t * view is managed by its parent, including {@link #render rendering}\n\t * and {@link #destroy destruction}.\n\t *\n\t * To revert this, use {@link #deregisterChild}.\n\t *\n\t *\t\tclass SampleView extends View {\n\t *\t\t\tconstructor( locale ) {\n\t *\t\t\t\tsuper( locale );\n\t *\n\t *\t\t\t\tthis.childA = new SomeChildView( locale );\n\t *\t\t\t\tthis.childB = new SomeChildView( locale );\n\t *\n\t *\t\t\t\tthis.setTemplate( { tag: 'p' } );\n\t *\n\t *\t\t\t\t// Register the children.\n\t *\t\t\t\tthis.registerChild( [ this.childA, this.childB ] );\n\t *\t\t\t}\n\t *\n\t *\t\t\trender() {\n\t *\t\t\t\tsuper.render();\n\t *\n\t *\t\t\t\tthis.element.appendChild( this.childA.element );\n\t *\t\t\t\tthis.element.appendChild( this.childB.element );\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t *\t\tconst view = new SampleView( locale );\n\t *\n\t *\t\tview.render();\n\t *\n\t *\t\t// Will append <p><childA#element><b></b><childB#element></p>.\n\t *\t\tdocument.body.appendChild( view.element );\n\t *\n\t * **Note**: There's no need to add child views if they're already referenced in the\n\t * {@link #template}:\n\t *\n\t *\t\tclass SampleView extends View {\n\t *\t\t\tconstructor( locale ) {\n\t *\t\t\t\tsuper( locale );\n\t *\n\t *\t\t\t\tthis.childA = new SomeChildView( locale );\n\t *\t\t\t\tthis.childB = new SomeChildView( locale );\n\t *\n\t *\t\t\t\tthis.setTemplate( {\n\t *\t\t\t\t\ttag: 'p',\n\t *\n \t *\t\t\t\t\t// These children will be added automatically. There's no\n \t *\t\t\t\t\t// need to call {@link #registerChild} for any of them.\n\t *\t\t\t\t\tchildren: [ this.childA, this.childB ]\n\t *\t\t\t\t} );\n\t *\t\t\t}\n\t *\n\t *\t\t\t// ...\n\t *\t\t}\n\t *\n\t * @param {module:ui/view~View|Iterable.<module:ui/view~View>} children Children views to be registered.\n\t */\n\tregisterChild( children ) {\n\t\tif ( !isIterable( children ) ) {\n\t\t\tchildren = [ children ];\n\t\t}\n\n\t\tfor ( const child of children ) {\n\t\t\tthis._unboundChildren.add( child );\n\t\t}\n\t}\n\n\t/**\n\t * The opposite of {@link #registerChild}. Removes a child view from this view instance.\n\t * Once removed, the child is no longer managed by its parent, e.g. it can safely\n\t * become a child of another parent view.\n\t *\n\t * @see #registerChild\n\t * @param {module:ui/view~View|Iterable.<module:ui/view~View>} children Child views to be removed.\n\t */\n\tderegisterChild( children ) {\n\t\tif ( !isIterable( children ) ) {\n\t\t\tchildren = [ children ];\n\t\t}\n\n\t\tfor ( const child of children ) {\n\t\t\tthis._unboundChildren.remove( child );\n\t\t}\n\t}\n\n\t/**\n\t * Sets the {@link #template} of the view with with given definition.\n\t *\n\t * A shorthand for:\n\t *\n\t *\t\tview.setTemplate( definition );\n\t *\n\t * @param {module:ui/template~TemplateDefinition} definition Definition of view's template.\n\t */\n\tsetTemplate( definition ) {\n\t\tthis.template = new Template( definition );\n\t}\n\n\t/**\n\t * {@link module:ui/template~Template.extend Extends} the {@link #template} of the view with\n\t * with given definition.\n\t *\n\t * A shorthand for:\n\t *\n\t *\t\tTemplate.extend( view.template, definition );\n\t *\n\t * **Note**: Is requires the {@link #template} to be already set. See {@link #setTemplate}.\n\t *\n\t * @param {module:ui/template~TemplateDefinition} definition Definition which\n\t * extends the {@link #template}.\n\t */\n\textendTemplate( definition ) {\n\t\tTemplate.extend( this.template, definition );\n\t}\n\n\t/**\n\t * Recursively renders the view.\n\t *\n\t * Once the view is rendered:\n\t * * the {@link #element} becomes an HTML element out of {@link #template},\n\t * * the {@link #isRendered} flag is set `true`.\n\t *\n\t * **Note**: The children of the view:\n\t * * defined directly in the {@link #template}\n\t * * residing in collections created by the {@link #createCollection} method,\n\t * * and added by {@link #registerChild}\n\t * are also rendered in the process.\n\t *\n\t * In general, `render()` method is the right place to keep the code which refers to the\n\t * {@link #element} and should be executed at the very beginning of the view's life cycle.\n\t *\n\t * It is possible to {@link module:ui/template~Template.extend} the {@link #template} before\n\t * the view is rendered. To allow an early customization of the view (e.g. by its parent),\n\t * such references should be done in `render()`.\n\t *\n\t *\t\tclass SampleView extends View {\n\t *\t\t\tconstructor() {\n\t *\t\t\t\tthis.setTemplate( {\n\t *\t\t\t\t\t// ...\n\t *\t\t\t\t} );\n\t *\t\t\t},\n\t *\n\t *\t\t\trender() {\n\t *\t\t\t\t// View#element becomes available.\n\t *\t\t\t\tsuper.render();\n\t *\n\t *\t\t\t\t// The \"scroll\" listener depends on #element.\n\t *\t\t\t\tthis.listenTo( window, 'scroll', () => {\n\t *\t\t\t\t\t// A reference to #element would render the #template and make it non-extendable.\n\t *\t\t\t\t\tif ( window.scrollY > 0 ) {\n\t *\t\t\t\t\t\tthis.element.scrollLeft = 100;\n\t *\t\t\t\t\t} else {\n\t *\t\t\t\t\t\tthis.element.scrollLeft = 0;\n\t *\t\t\t\t\t}\n\t *\t\t\t\t} );\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t *\t\tconst view = new SampleView();\n\t *\n\t *\t\t// Let's customize the view before it gets rendered.\n\t *\t\tview.extendTemplate( {\n\t *\t\t\tattributes: {\n\t *\t\t\t\tclass: [\n\t *\t\t\t\t\t'additional-class'\n\t *\t\t\t\t]\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\t// Late rendering allows customization of the view.\n\t *\t\tview.render();\n\t */\n\trender() {\n\t\tif ( this.isRendered ) {\n\t\t\t/**\n\t\t\t * This View has already been rendered.\n\t\t\t *\n\t\t\t * @error ui-view-render-rendered\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'ui-view-render-already-rendered: This View has already been rendered.',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\t// Render #element of the view.\n\t\tif ( this.template ) {\n\t\t\tthis.element = this.template.render();\n\n\t\t\t// Auto–register view children from #template.\n\t\t\tthis.registerChild( this.template.getViews() );\n\t\t}\n\n\t\tthis.isRendered = true;\n\t}\n\n\t/**\n\t * Recursively destroys the view instance and child views added by {@link #registerChild} and\n\t * residing in collections created by the {@link #createCollection}.\n\t *\n\t * Destruction disables all event listeners:\n\t * * created on the view, e.g. `view.on( 'event', () => {} )`,\n\t * * defined in the {@link #template} for DOM events.\n\t */\n\tdestroy() {\n\t\tthis.stopListening();\n\n\t\tthis._viewCollections.map( c => c.destroy() );\n\n\t\t// Template isn't obligatory for views.\n\t\tif ( this.template && this.template._revertData ) {\n\t\t\tthis.template.revert( this.element );\n\t\t}\n\t}\n\n\t/**\n\t * Event fired by the {@link #render} method. Actual rendering is executed as a listener to\n\t * this event with the default priority.\n\t *\n\t * See {@link module:utils/observablemixin~ObservableMixin#decorate} for more information and samples.\n\t *\n\t * @event render\n\t */\n}\n\nmix( View, DomEmitterMixin );\nmix( View, ObservableMixin );\n","import baseGetTag from './_baseGetTag.js';\nimport isArray from './isArray.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nexport default isString;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/editorui/bodycollection\n */\n\n/* globals document */\n\nimport Template from '../template';\nimport ViewCollection from '../viewcollection';\n\nimport createElement from '@ckeditor/ckeditor5-utils/src/dom/createelement';\n\n/**\n * This is a special {@link module:ui/viewcollection~ViewCollection} dedicated to elements that are detached\n * from the DOM structure of the editor, like panels, icons, etc.\n *\n * The body collection is available in the {@link module:ui/editorui/editoruiview~EditorUIView#body `editor.ui.view.body`} property.\n * Any plugin can add a {@link module:ui/view~View view} to this collection.\n * These views will render in a container placed directly in the `<body>` element.\n * The editor will detach and destroy this collection when the editor will be {@link module:core/editor/editor~Editor#destroy destroyed}.\n *\n * If you need to control the life cycle of the body collection on your own, you can create your own instance of this class.\n *\n * A body collection will render itself automatically in the DOM body element as soon as you call {@link ~BodyCollection#attachToDom}.\n * If you create multiple body collections, this class will create a special wrapper element in the DOM to limit the number of\n * elements created directly in the body and remove it when the last body collection will be\n * {@link ~BodyCollection#detachFromDom detached}.\n *\n * @extends module:ui/viewcollection~ViewCollection\n */\nexport default class BodyCollection extends ViewCollection {\n\t/**\n\t * Attaches the body collection to the DOM body element. You need to execute this method to render the content of\n\t * the body collection.\n\t */\n\tattachToDom() {\n\t\t/**\n\t\t * The element holding elements of the body region.\n\t\t *\n\t\t * @protected\n\t\t * @member {HTMLElement} #_bodyCollectionContainer\n\t\t */\n\t\tthis._bodyCollectionContainer = new Template( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-reset_all',\n\t\t\t\t\t'ck-body',\n\t\t\t\t\t'ck-rounded-corners'\n\t\t\t\t],\n\t\t\t\tdir: this.locale.uiLanguageDirection,\n\t\t\t},\n\t\t\tchildren: this\n\t\t} ).render();\n\n\t\tlet wrapper = document.querySelector( '.ck-body-wrapper' );\n\n\t\tif ( !wrapper ) {\n\t\t\twrapper = createElement( document, 'div', { class: 'ck-body-wrapper' } );\n\t\t\tdocument.body.appendChild( wrapper );\n\t\t}\n\n\t\twrapper.appendChild( this._bodyCollectionContainer );\n\t}\n\n\t/**\n\t * Detaches the collection from the DOM structure. Use this method when you do not need to use the body collection\n\t * anymore to clean-up the DOM structure.\n\t */\n\tdetachFromDom() {\n\t\tsuper.destroy();\n\n\t\tif ( this._bodyCollectionContainer ) {\n\t\t\tthis._bodyCollectionContainer.remove();\n\t\t}\n\n\t\tconst wrapper = document.querySelector( '.ck-body-wrapper' );\n\n\t\tif ( wrapper && wrapper.childElementCount == 0 ) {\n\t\t\twrapper.remove();\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/createelement\n */\n\nimport isIterable from '../isiterable';\nimport { isString } from 'lodash-es';\n\n/**\n * Creates element with attributes and children.\n *\n *\t\tcreateElement( document, 'p' ); // <p>\n *\t\tcreateElement( document, 'p', { class: 'foo' } ); // <p class=\"foo\">\n *\t\tcreateElement( document, 'p', null, 'foo' ); // <p>foo</p>\n *\t\tcreateElement( document, 'p', null, [ 'foo', createElement( document, 'img' ) ] ); // <p>foo<img></p>\n *\n * @param {Document} doc Document used to create element.\n * @param {String} name Name of the element.\n * @param {Object} [attributes] Object keys will become attributes keys and object values will became attributes values.\n * @param {Node|String|Array.<Node|String>} [children] Child or array of children. Strings will be automatically turned\n * into Text nodes.\n * @returns {Element} Created element.\n */\nexport default function createElement( doc, name, attributes = {}, children = [] ) {\n\tconst namespace = attributes && attributes.xmlns;\n\tconst element = namespace ? doc.createElementNS( namespace, name ) : doc.createElement( name );\n\n\tfor ( const key in attributes ) {\n\t\telement.setAttribute( key, attributes[ key ] );\n\t}\n\n\tif ( isString( children ) || !isIterable( children ) ) {\n\t\tchildren = [ children ];\n\t}\n\n\tfor ( let child of children ) {\n\t\tif ( isString( child ) ) {\n\t\t\tchild = doc.createTextNode( child );\n\t\t}\n\n\t\telement.appendChild( child );\n\t}\n\n\treturn element;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/editorui/editoruiview\n */\n\nimport View from '../view';\nimport BodyCollection from './bodycollection';\n\nimport '../../theme/components/editorui/editorui.css';\n\n/**\n * The editor UI view class. Base class for the editor main views.\n *\n * @extends module:ui/view~View\n */\nexport default class EditorUIView extends View {\n\t/**\n\t * Creates an instance of the editor UI view class.\n\t *\n\t * @param {module:utils/locale~Locale} [locale] The locale instance.\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * Collection of the child views, detached from the DOM\n\t\t * structure of the editor, like panels, icons etc.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection} #body\n\t\t */\n\t\tthis.body = new BodyCollection( locale );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tthis.body.attachToDom();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tthis.body.detachFromDom();\n\n\t\treturn super.destroy();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/label/labelview\n */\n\nimport View from '../view';\nimport uid from '@ckeditor/ckeditor5-utils/src/uid';\n\nimport '../../theme/components/label/label.css';\n\n/**\n * The label view class.\n *\n * @extends module:ui/view~View\n */\nexport default class LabelView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * The text of the label.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #text\n\t\t */\n\t\tthis.set( 'text' );\n\n\t\t/**\n\t\t * The `for` attribute of the label (i.e. to pair with an `<input>` element).\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #for\n\t\t */\n\t\tthis.set( 'for' );\n\n\t\t/**\n\t\t * An unique id of the label. It can be used by other UI components to reference\n\t\t * the label, for instance, using the `aria-describedby` DOM attribute.\n\t\t *\n\t\t * @member {String} #id\n\t\t */\n\t\tthis.id = `ck-editor__label_${ uid() }`;\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'label',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-label'\n\t\t\t\t],\n\t\t\t\tid: this.id,\n\t\t\t\tfor: bind.to( 'for' )\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttext: bind.to( 'text' )\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module ui/editorui/boxed/boxededitoruiview\n */\nimport EditorUIView from '../../editorui/editoruiview';\nimport LabelView from '../../label/labelview';\n/**\n * The boxed editor UI view class. This class represents an editor interface\n * consisting of a toolbar and an editable area, enclosed within a box.\n *\n * @extends module:ui/editorui/editoruiview~EditorUIView\n */\nexport default class BoxedEditorUIView extends EditorUIView {\n    /**\n\t * Creates an instance of the boxed editor UI view class.\n\t *\n\t * @param {module:utils/locale~Locale} locale The locale instance..\n\t */\n    constructor(locale) {\n        super(locale);\n        /**\n\t\t * Collection of the child views located in the top (`.ck-editor__top`)\n\t\t * area of the UI.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n        this.top = this.createCollection();\n        /**\n\t\t * Collection of the child views located in the main (`.ck-editor__main`)\n\t\t * area of the UI.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n        this.main = this.createCollection();\n        /**\n\t\t * Voice label of the UI.\n\t\t *\n\t\t * @protected\n\t\t * @readonly\n\t\t * @member {module:ui/view~View} #_voiceLabelView\n\t\t */\n        this._voiceLabelView = this._createVoiceLabel();\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-reset',\n                    'ck-editor',\n                    'ck-rounded-corners'\n                ],\n                role: 'application',\n                dir: locale.uiLanguageDirection,\n                lang: locale.uiLanguage,\n                'aria-labelledby': this._voiceLabelView.id\n            },\n            children: [\n                this._voiceLabelView,\n                {\n                    tag: 'div',\n                    attributes: {\n                        class: [\n                            'ck',\n                            'ck-editor__top',\n                            'ck-reset_all'\n                        ],\n                        role: 'presentation'\n                    },\n                    children: this.top\n                },\n                {\n                    tag: 'div',\n                    attributes: {\n                        class: [\n                            'ck',\n                            'ck-editor__main'\n                        ],\n                        role: 'presentation'\n                    },\n                    children: this.main\n                }\n            ]\n        });\n    }\n    /**\n\t * Creates a voice label view instance.\n\t *\n\t * @private\n\t * @returns {module:ui/label/labelview~LabelView}\n\t */\n    _createVoiceLabel() {\n        const t = this.t;\n        const voiceLabel = new LabelView();\n        voiceLabel.text = t('bf');\n        voiceLabel.extendTemplate({ attributes: { class: 'ck-voice-label' } });\n        return voiceLabel;\n    }\n}","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/editableui/editableuiview\n */\n\nimport View from '../view';\n\n/**\n * The editable UI view class.\n *\n * @extends module:ui/view~View\n */\nexport default class EditableUIView extends View {\n\t/**\n\t * Creates an instance of EditableUIView class.\n\t *\n\t * @param {module:utils/locale~Locale} [locale] The locale instance.\n\t * @param {module:engine/view/view~View} editingView The editing view instance the editable is related to.\n\t * @param {HTMLElement} [editableElement] The editable element. If not specified, this view\n\t * should create it. Otherwise, the existing element should be used.\n\t */\n\tconstructor( locale, editingView, editableElement ) {\n\t\tsuper( locale );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-content',\n\t\t\t\t\t'ck-editor__editable',\n\t\t\t\t\t'ck-rounded-corners'\n\t\t\t\t],\n\t\t\t\tlang: locale.contentLanguage,\n\t\t\t\tdir: locale.contentLanguageDirection\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * The name of the editable UI view.\n\t\t *\n\t\t * @member {String} #name\n\t\t */\n\t\tthis.name = null;\n\n\t\t/**\n\t\t * Controls whether the editable is focused, i.e. the user is typing in it.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isFocused\n\t\t */\n\t\tthis.set( 'isFocused', false );\n\n\t\t/**\n\t\t * The element which is the main editable element (usually the one with `contentEditable=\"true\"`).\n\t\t *\n\t\t * @private\n\t\t * @member {HTMLElement} #_editableElement\n\t\t */\n\t\tthis._editableElement = editableElement;\n\n\t\t/**\n\t\t * Whether an external {@link #_editableElement} was passed into the constructor, which also means\n\t\t * the view will not render its {@link #template}.\n\t\t *\n\t\t * @private\n\t\t * @member {Boolean} #_hasExternalElement\n\t\t */\n\t\tthis._hasExternalElement = !!this._editableElement;\n\n\t\t/**\n\t\t * The editing view instance the editable is related to. Editable uses the editing\n\t\t * view to dynamically modify its certain DOM attributes after {@link #render rendering}.\n\t\t *\n\t\t * **Note**: The DOM attributes are performed by the editing view and not UI\n\t\t * {@link module:ui/view~View#bindTemplate template bindings} because once rendered,\n\t\t * the editable DOM element must remain under the full control of the engine to work properly.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:engine/view/view~View} #isFocused\n\t\t */\n\t\tthis._editingView = editingView;\n\t}\n\n\t/**\n\t * Renders the view by either applying the {@link #template} to the existing\n\t * {@link #_editableElement} or assigning {@link #element} as {@link #_editableElement}.\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tif ( this._hasExternalElement ) {\n\t\t\tthis.template.apply( this.element = this._editableElement );\n\t\t} else {\n\t\t\tthis._editableElement = this.element;\n\t\t}\n\n\t\tthis.on( 'change:isFocused', () => this._updateIsFocusedClasses() );\n\t\tthis._updateIsFocusedClasses();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tif ( this._hasExternalElement ) {\n\t\t\tthis.template.revert( this._editableElement );\n\t\t}\n\n\t\tsuper.destroy();\n\t}\n\n\t/**\n\t * Updates the `ck-focused` and `ck-blurred` CSS classes on the {@link #element} according to\n\t * the {@link #isFocused} property value using the {@link #_editingView editing view} API.\n\t *\n\t * @private\n\t */\n\t_updateIsFocusedClasses() {\n\t\tconst editingView = this._editingView;\n\n\t\tif ( editingView.isRenderingInProgress ) {\n\t\t\tupdateAfterRender( this );\n\t\t} else {\n\t\t\tupdate( this );\n\t\t}\n\n\t\tfunction update( view ) {\n\t\t\teditingView.change( writer => {\n\t\t\t\tconst viewRoot = editingView.document.getRoot( view.name );\n\n\t\t\t\twriter.addClass( view.isFocused ? 'ck-focused' : 'ck-blurred', viewRoot );\n\t\t\t\twriter.removeClass( view.isFocused ? 'ck-blurred' : 'ck-focused', viewRoot );\n\t\t\t} );\n\t\t}\n\n\t\t// In a case of a multi-root editor, a callback will be attached more than once (one callback for each root).\n\t\t// While executing one callback the `isRenderingInProgress` observable is changing what causes executing another\n\t\t// callback and render is called inside the already pending render.\n\t\t// We need to be sure that callback is executed only when the value has changed from `true` to `false`.\n\t\t// See https://github.com/ckeditor/ckeditor5/issues/1676.\n\t\tfunction updateAfterRender( view ) {\n\t\t\teditingView.once( 'change:isRenderingInProgress', ( evt, name, value ) => {\n\t\t\t\tif ( !value ) {\n\t\t\t\t\tupdate( view );\n\t\t\t\t} else {\n\t\t\t\t\tupdateAfterRender( view );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module ui/editableui/inline/inlineeditableuiview\n */\nimport EditableUIView from '../../editableui/editableuiview';\n/**\n * The inline editable UI class implementing an inline {@link module:ui/editableui/editableuiview~EditableUIView}.\n *\n * @extends module:ui/editableui/editableuiview~EditableUIView\n */\nexport default class InlineEditableUIView extends EditableUIView {\n    /**\n\t * Creates an instance of the InlineEditableUIView class.\n\t *\n\t * @param {module:utils/locale~Locale} [locale] The locale instance.\n\t * @param {module:engine/view/view~View} editingView The editing view instance the editable is related to.\n\t * @param {HTMLElement} [editableElement] The editable element. If not specified, the\n\t * {@link module:ui/editableui/editableuiview~EditableUIView}\n\t * will create it. Otherwise, the existing element will be used.\n\t */\n    constructor(locale, editingView, editableElement) {\n        super(locale, editingView, editableElement);\n        this.extendTemplate({\n            attributes: {\n                role: 'textbox',\n                class: 'ck-editor__editable_inline'\n            }\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */\n    render() {\n        super.render();\n        const editingView = this._editingView;\n        const t = this.t;\n        editingView.change(writer => {\n            const viewRoot = editingView.document.getRoot(this.name);\n            writer.setAttribute('aria-label', t('bg', [this.name]), viewRoot);\n        });\n    }\n}","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/tounit\n */\n\n/**\n * Returns a helper function, which adds a desired trailing\n * `unit` to the passed value.\n *\n * @param {String} unit An unit like \"px\" or \"em\".\n * @returns {module:utils/dom/tounit~helper}\n */\nexport default function toUnit( unit ) {\n\t/**\n\t * A function, which adds a pre–defined trailing `unit`\n\t * to the passed `value`.\n\t *\n\t * @function helper\n \t * @param {*} value A value to be given the unit.\n \t * @returns {String} A value with the trailing unit.\n\t */\n\treturn value => value + unit;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/panel/sticky/stickypanelview\n */\n\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\nimport View from '../../view';\nimport Template from '../../template';\nimport toUnit from '@ckeditor/ckeditor5-utils/src/dom/tounit';\n\nimport '../../../theme/components/panel/stickypanel.css';\n\nconst toPx = toUnit( 'px' );\n\n/**\n * The sticky panel view class.\n */\nexport default class StickyPanelView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * Controls whether the sticky panel should be active.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #isActive\n\t\t */\n\t\tthis.set( 'isActive', false );\n\n\t\t/**\n\t\t * Controls whether the sticky panel is in the \"sticky\" state.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #isSticky\n\t\t */\n\t\tthis.set( 'isSticky', false );\n\n\t\t/**\n\t\t * The limiter element for the sticky panel instance. Its bounding rect limits\n\t\t * the \"stickyness\" of the panel, i.e. when the panel reaches the bottom\n\t\t * edge of the limiter, it becomes sticky to that edge and does not float\n\t\t * off the limiter. It is mandatory for the panel to work properly and once\n\t\t * set, it cannot be changed.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {HTMLElement} #limiterElement\n\t\t */\n\t\tthis.set( 'limiterElement', null );\n\n\t\t/**\n\t\t * The offset from the bottom edge of {@link #limiterElement}\n\t\t * which stops the panel from stickying any further to prevent limiter's content\n\t\t * from being completely covered.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @default 50\n\t\t * @member {Number} #limiterBottomOffset\n\t\t */\n\t\tthis.set( 'limiterBottomOffset', 50 );\n\n\t\t/**\n\t\t * The offset from the top edge of the web browser's viewport which makes the\n\t\t * panel become sticky. The default value is `0`, which means the panel becomes\n\t\t * sticky when it's upper edge touches the top of the page viewport.\n\t\t *\n\t\t * This attribute is useful when the web page has UI elements positioned to the top\n\t\t * either using `position: fixed` or `position: sticky`, which would cover the\n\t\t * sticky panel or vice–versa (depending on the `z-index` hierarchy).\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @default 0\n\t\t * @member {Number} #viewportTopOffset\n\t\t */\n\t\tthis.set( 'viewportTopOffset', 0 );\n\n\t\t/**\n\t\t * Controls the `margin-left` CSS style of the panel.\n\t\t *\n\t\t * @protected\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {String} #_marginLeft\n\t\t */\n\t\tthis.set( '_marginLeft', null );\n\n\t\t/**\n\t\t * Set `true` if the sticky panel reached the bottom edge of the\n\t\t * {@link #limiterElement}.\n\t\t *\n\t\t * @protected\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #_isStickyToTheLimiter\n\t\t */\n\t\tthis.set( '_isStickyToTheLimiter', false );\n\n\t\t/**\n\t\t * Set `true` if the sticky panel uses the {@link #viewportTopOffset},\n\t\t * i.e. not {@link #_isStickyToTheLimiter} and the {@link #viewportTopOffset}\n\t\t * is not `0`.\n\t\t *\n\t\t * @protected\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #_hasViewportTopOffset\n\t\t */\n\t\tthis.set( '_hasViewportTopOffset', false );\n\n\t\t/**\n\t\t * Collection of the child views which creates balloon panel contents.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.content = this.createCollection();\n\n\t\t/**\n\t\t * The DOM bounding client rect of the {@link module:ui/view~View#element} of the panel.\n\t\t *\n\t\t * @protected\n\t\t * @member {Object} #_panelRect\n\t\t */\n\n\t\t/**\n\t\t * The DOM bounding client rect of the {@link #limiterElement}\n\t\t * of the panel.\n\t\t *\n\t\t * @protected\n\t\t * @member {Object} #_limiterRect\n\t\t */\n\n\t\t/**\n\t\t * A dummy element which visually fills the space as long as the\n\t\t * actual panel is sticky. It prevents flickering of the UI.\n\t\t *\n\t\t * @protected\n\t\t * @property {HTMLElement}\n\t\t */\n\t\tthis._contentPanelPlaceholder = new Template( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-sticky-panel__placeholder'\n\t\t\t\t],\n\t\t\t\tstyle: {\n\t\t\t\t\tdisplay: bind.to( 'isSticky', isSticky => isSticky ? 'block' : 'none' ),\n\t\t\t\t\theight: bind.to( 'isSticky', isSticky => {\n\t\t\t\t\t\treturn isSticky ? toPx( this._panelRect.height ) : null;\n\t\t\t\t\t} )\n\t\t\t\t}\n\t\t\t}\n\t\t} ).render();\n\n\t\t/**\n\t\t * The panel which accepts children into {@link #content} collection.\n\t\t * Also an element which is positioned when {@link #isSticky}.\n\t\t *\n\t\t * @protected\n\t\t * @property {HTMLElement}\n\t\t */\n\t\tthis._contentPanel = new Template( {\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-sticky-panel__content',\n\t\t\t\t\t// Toggle class of the panel when \"sticky\" state changes in the view.\n\t\t\t\t\tbind.if( 'isSticky', 'ck-sticky-panel__content_sticky' ),\n\t\t\t\t\tbind.if( '_isStickyToTheLimiter', 'ck-sticky-panel__content_sticky_bottom-limit' ),\n\t\t\t\t],\n\t\t\t\tstyle: {\n\t\t\t\t\twidth: bind.to( 'isSticky', isSticky => {\n\t\t\t\t\t\treturn isSticky ? toPx( this._contentPanelPlaceholder.getBoundingClientRect().width ) : null;\n\t\t\t\t\t} ),\n\n\t\t\t\t\ttop: bind.to( '_hasViewportTopOffset', _hasViewportTopOffset => {\n\t\t\t\t\t\treturn _hasViewportTopOffset ? toPx( this.viewportTopOffset ) : null;\n\t\t\t\t\t} ),\n\n\t\t\t\t\tbottom: bind.to( '_isStickyToTheLimiter', _isStickyToTheLimiter => {\n\t\t\t\t\t\treturn _isStickyToTheLimiter ? toPx( this.limiterBottomOffset ) : null;\n\t\t\t\t\t} ),\n\n\t\t\t\t\tmarginLeft: bind.to( '_marginLeft' )\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tchildren: this.content\n\t\t} ).render();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-sticky-panel'\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\tthis._contentPanelPlaceholder,\n\t\t\t\tthis._contentPanel\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\t// Check if the panel should go into the sticky state immediately.\n\t\tthis._checkIfShouldBeSticky();\n\n\t\t// Update sticky state of the panel as the window is being scrolled.\n\t\tthis.listenTo( global.window, 'scroll', () => {\n\t\t\tthis._checkIfShouldBeSticky();\n\t\t} );\n\n\t\t// Synchronize with `model.isActive` because sticking an inactive panel is pointless.\n\t\tthis.listenTo( this, 'change:isActive', () => {\n\t\t\tthis._checkIfShouldBeSticky();\n\t\t} );\n\t}\n\n\t/**\n\t * Analyzes the environment to decide whether the panel should\n\t * be sticky or not.\n\t *\n\t * @protected\n\t */\n\t_checkIfShouldBeSticky() {\n\t\tconst panelRect = this._panelRect = this._contentPanel.getBoundingClientRect();\n\t\tlet limiterRect;\n\n\t\tif ( !this.limiterElement ) {\n\t\t\tthis.isSticky = false;\n\t\t} else {\n\t\t\tlimiterRect = this._limiterRect = this.limiterElement.getBoundingClientRect();\n\n\t\t\t// The panel must be active to become sticky.\n\t\t\tthis.isSticky = this.isActive &&\n\t\t\t\t// The limiter's top edge must be beyond the upper edge of the visible viewport (+the viewportTopOffset).\n\t\t\t\tlimiterRect.top < this.viewportTopOffset &&\n\t\t\t\t// The model#limiterElement's height mustn't be smaller than the panel's height and model#limiterBottomOffset.\n\t\t\t\t// There's no point in entering the sticky mode if the model#limiterElement is very, very small, because\n\t\t\t\t// it would immediately set model#_isStickyToTheLimiter true and, given model#limiterBottomOffset, the panel\n\t\t\t\t// would be positioned before the model#limiterElement.\n\t\t\t\tthis._panelRect.height + this.limiterBottomOffset < limiterRect.height;\n\t\t}\n\n\t\t// Stick the panel to the top edge of the viewport simulating CSS position:sticky.\n\t\t// TODO: Possibly replaced by CSS in the future http://caniuse.com/#feat=css-sticky\n\t\tif ( this.isSticky ) {\n\t\t\tthis._isStickyToTheLimiter =\n\t\t\t\tlimiterRect.bottom < panelRect.height + this.limiterBottomOffset + this.viewportTopOffset;\n\t\t\tthis._hasViewportTopOffset = !this._isStickyToTheLimiter && !!this.viewportTopOffset;\n\t\t\tthis._marginLeft = this._isStickyToTheLimiter ? null : toPx( -global.window.scrollX );\n\t\t}\n\t\t// Detach the panel from the top edge of the viewport.\n\t\telse {\n\t\t\tthis._isStickyToTheLimiter = false;\n\t\t\tthis._hasViewportTopOffset = false;\n\t\t\tthis._marginLeft = null;\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/focuscycler\n */\n\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\n\n/**\n * A utility class that helps cycling over focusable {@link module:ui/view~View views} in a\n * {@link module:ui/viewcollection~ViewCollection} when the focus is tracked by the\n * {@link module:utils/focustracker~FocusTracker} instance. It helps implementing keyboard\n * navigation in HTML forms, toolbars, lists and the like.\n *\n * To work properly it requires:\n * * a collection of focusable (HTML `tabindex` attribute) views that implement the `focus()` method,\n * * an associated focus tracker to determine which view is focused.\n *\n * A simple cycler setup can look like this:\n *\n *\t\tconst focusables = new ViewCollection();\n *\t\tconst focusTracker = new FocusTracker();\n *\n *\t\t// Add focusable views to the focus tracker.\n *\t\tfocusTracker.add( ... );\n *\n * Then, the cycler can be used manually:\n *\n *\t\tconst cycler = new FocusCycler( { focusables, focusTracker } );\n *\n *\t\t// Will focus the first focusable view in #focusables.\n *\t\tcycler.focusFirst();\n *\n *\t\t// Will log the next focusable item in #focusables.\n *\t\tconsole.log( cycler.next );\n *\n * Alternatively, it can work side by side with the {@link module:utils/keystrokehandler~KeystrokeHandler}:\n *\n *\t\tconst keystrokeHandler = new KeystrokeHandler();\n *\n *\t\t// Activate the keystroke handler.\n *\t\tkeystrokeHandler.listenTo( sourceOfEvents );\n *\n *\t\tconst cycler = new FocusCycler( {\n *\t\t\tfocusables, focusTracker, keystrokeHandler,\n *\t\t\tactions: {\n *\t\t\t\t// When arrowup of arrowleft is detected by the #keystrokeHandler,\n *\t\t\t\t// focusPrevious() will be called on the cycler.\n *\t\t\t\tfocusPrevious: [ 'arrowup', 'arrowleft' ],\n *\t\t\t}\n *\t\t} );\n */\nexport default class FocusCycler {\n\t/**\n\t * Creates an instance of the focus cycler utility.\n\t *\n\t * @param {Object} options Configuration options.\n\t * @param {module:utils/collection~Collection|Object} options.focusables\n\t * @param {module:utils/focustracker~FocusTracker} options.focusTracker\n\t * @param {module:utils/keystrokehandler~KeystrokeHandler} [options.keystrokeHandler]\n\t * @param {Object} [options.actions]\n\t */\n\tconstructor( options ) {\n\t\tObject.assign( this, options );\n\n\t\t/**\n\t\t * A {@link module:ui/view~View view} collection that the cycler operates on.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/collection~Collection} #focusables\n\t\t */\n\n\t\t/**\n\t\t * A focus tracker instance that the cycler uses to determine the current focus\n\t\t * state in {@link #focusables}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker} #focusTracker\n\t\t */\n\n\t\t/**\n\t\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}\n\t\t * which can respond to certain keystrokes and cycle the focus.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler} #keystrokeHandler\n\t\t */\n\n\t\t/**\n\t\t * Actions that the cycler can take when a keystroke is pressed. Requires\n\t\t * `options.keystrokeHandler` to be passed and working. When an action is\n\t\t * performed, `preventDefault` and `stopPropagation` will be called on the event\n\t\t * the keystroke fired in the DOM.\n\t\t *\n\t\t *\t\tactions: {\n\t\t *\t\t\t// Will call #focusPrevious() when arrowleft or arrowup is pressed.\n\t\t *\t\t\tfocusPrevious: [ 'arrowleft', 'arrowup' ],\n\t\t *\n\t\t *\t\t\t// Will call #focusNext() when arrowdown is pressed.\n\t\t *\t\t\tfocusNext: 'arrowdown'\n\t\t *\t\t}\n\t\t *\n\t\t * @readonly\n\t\t * @member {Object} #actions\n\t\t */\n\n\t\tif ( options.actions && options.keystrokeHandler ) {\n\t\t\tfor ( const methodName in options.actions ) {\n\t\t\t\tlet actions = options.actions[ methodName ];\n\n\t\t\t\tif ( typeof actions == 'string' ) {\n\t\t\t\t\tactions = [ actions ];\n\t\t\t\t}\n\n\t\t\t\tfor ( const keystroke of actions ) {\n\t\t\t\t\toptions.keystrokeHandler.set( keystroke, ( data, cancel ) => {\n\t\t\t\t\t\tthis[ methodName ]();\n\t\t\t\t\t\tcancel();\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns the first focusable view in {@link #focusables}.\n\t * Returns `null` if there is none.\n\t *\n\t * @readonly\n\t * @member {module:ui/view~View|null} #first\n\t */\n\tget first() {\n\t\treturn this.focusables.find( isFocusable ) || null;\n\t}\n\n\t/**\n\t * Returns the last focusable view in {@link #focusables}.\n\t * Returns `null` if there is none.\n\t *\n\t * @readonly\n\t * @member {module:ui/view~View|null} #last\n\t */\n\tget last() {\n\t\treturn this.focusables.filter( isFocusable ).slice( -1 )[ 0 ] || null;\n\t}\n\n\t/**\n\t * Returns the next focusable view in {@link #focusables} based on {@link #current}.\n\t * Returns `null` if there is none.\n\t *\n\t * @readonly\n\t * @member {module:ui/view~View|null} #next\n\t */\n\tget next() {\n\t\treturn this._getFocusableItem( 1 );\n\t}\n\n\t/**\n\t * Returns the previous focusable view in {@link #focusables} based on {@link #current}.\n\t * Returns `null` if there is none.\n\t *\n\t * @readonly\n\t * @member {module:ui/view~View|null} #previous\n\t */\n\tget previous() {\n\t\treturn this._getFocusableItem( -1 );\n\t}\n\n\t/**\n\t * An index of the view in the {@link #focusables} which is focused according\n\t * to {@link #focusTracker}. Returns `null` when there is no such view.\n\t *\n\t * @readonly\n\t * @member {Number|null} #current\n\t */\n\tget current() {\n\t\tlet index = null;\n\n\t\t// There's no focused view in the focusables.\n\t\tif ( this.focusTracker.focusedElement === null ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tthis.focusables.find( ( view, viewIndex ) => {\n\t\t\tconst focused = view.element === this.focusTracker.focusedElement;\n\n\t\t\tif ( focused ) {\n\t\t\t\tindex = viewIndex;\n\t\t\t}\n\n\t\t\treturn focused;\n\t\t} );\n\n\t\treturn index;\n\t}\n\n\t/**\n\t * Focuses the {@link #first} item in {@link #focusables}.\n\t */\n\tfocusFirst() {\n\t\tthis._focus( this.first );\n\t}\n\n\t/**\n\t * Focuses the {@link #last} item in {@link #focusables}.\n\t */\n\tfocusLast() {\n\t\tthis._focus( this.last );\n\t}\n\n\t/**\n\t * Focuses the {@link #next} item in {@link #focusables}.\n\t */\n\tfocusNext() {\n\t\tthis._focus( this.next );\n\t}\n\n\t/**\n\t * Focuses the {@link #previous} item in {@link #focusables}.\n\t */\n\tfocusPrevious() {\n\t\tthis._focus( this.previous );\n\t}\n\n\t/**\n\t * Focuses the given view if it exists.\n\t *\n\t * @protected\n\t * @param {module:ui/view~View} view\n\t */\n\t_focus( view ) {\n\t\tif ( view ) {\n\t\t\tview.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Returns the next or previous focusable view in {@link #focusables} with respect\n\t * to {@link #current}.\n\t *\n\t * @protected\n\t * @param {Number} step Either `1` for checking forward from {@link #current} or\n\t * `-1` for checking backwards.\n\t * @returns {module:ui/view~View|null}\n\t */\n\t_getFocusableItem( step ) {\n\t\t// Cache for speed.\n\t\tconst current = this.current;\n\t\tconst collectionLength = this.focusables.length;\n\n\t\tif ( !collectionLength ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Start from the beginning if no view is focused.\n\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/206\n\t\tif ( current === null ) {\n\t\t\treturn this[ step === 1 ? 'first' : 'last' ];\n\t\t}\n\n\t\t// Cycle in both directions.\n\t\tlet index = ( current + collectionLength + step ) % collectionLength;\n\n\t\tdo {\n\t\t\tconst view = this.focusables.get( index );\n\n\t\t\t// TODO: Check if view is visible.\n\t\t\tif ( isFocusable( view ) ) {\n\t\t\t\treturn view;\n\t\t\t}\n\n\t\t\t// Cycle in both directions.\n\t\t\tindex = ( index + collectionLength + step ) % collectionLength;\n\t\t} while ( index !== current );\n\n\t\treturn null;\n\t}\n}\n\n// Checks whether a view is focusable.\n//\n// @private\n// @param {module:ui/view~View} view A view to be checked.\n// @returns {Boolean}\nfunction isFocusable( view ) {\n\treturn !!( view.focus && global.window.getComputedStyle( view.element ).display != 'none' );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/toolbar/toolbarseparatorview\n */\n\nimport View from '../view';\n\n/**\n * The toolbar separator view class.\n *\n * @extends module:ui/view~View\n */\nexport default class ToolbarSeparatorView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'span',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-toolbar__separator'\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/resizeobserver\n */\n\n/* globals setTimeout, clearTimeout */\n\nimport mix from '../mix';\nimport global from './global';\nimport Rect from './rect';\nimport DomEmitterMixin from './emittermixin';\n\nconst RESIZE_CHECK_INTERVAL = 100;\n\n/**\n * A helper class which instances allow performing custom actions when native DOM elements are resized.\n *\n *\t\tconst editableElement = editor.editing.view.getDomRoot();\n *\n *\t\tconst observer = new ResizeObserver( editableElement, entry => {\n *\t\t\tconsole.log( 'The editable element has been resized in DOM.' );\n *\t\t\tconsole.log( entry.target ); // -> editableElement\n *\t\t\tconsole.log( entry.contentRect.width ); // -> e.g. '423px'\n *\t\t} );\n *\n * By default, it uses the [native DOM resize observer](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver)\n * under the hood and in browsers that do not support the native API yet, a polyfilled observer is\n * used instead.\n */\nexport default class ResizeObserver {\n\t/**\n\t * Creates an instance of the `ResizeObserver` class.\n\t *\n\t * @param {HTMLElement} element A DOM element that is to be observed for resizing. Note that\n\t * the element must be visible (i.e. not detached from DOM) for the observer to work.\n\t * @param {Function} callback A function called when the observed element was resized. It passes\n\t * the [`ResizeObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry)\n\t * object with information about the resize event.\n\t */\n\tconstructor( element, callback ) {\n\t\t// **Note**: For the maximum performance, this class ensures only a single instance of the native\n\t\t// (or polyfilled) observer is used no matter how many instances of this class were created.\n\t\tif ( !ResizeObserver._observerInstance ) {\n\t\t\tResizeObserver._createObserver();\n\t\t}\n\n\t\t/**\n\t\t * The element observer by this observer.\n\t\t *\n\t\t * @readonly\n\t\t * @private\n\t\t * @member {HTMLElement}\n\t\t */\n\t\tthis._element = element;\n\n\t\t/**\n\t\t * The callback executed each time {@link #_element} is resized.\n\t\t *\n\t\t * @readonly\n\t\t * @private\n\t\t * @member {Function}\n\t\t */\n\t\tthis._callback = callback;\n\n\t\tResizeObserver._addElementCallback( element, callback );\n\t\tResizeObserver._observerInstance.observe( element );\n\t}\n\n\t/**\n\t * Destroys the observer which disables the `callback` passed to the {@link #constructor}.\n\t */\n\tdestroy() {\n\t\tResizeObserver._deleteElementCallback( this._element, this._callback );\n\t}\n\n\t/**\n\t * Registers a new resize callback for the DOM element.\n\t *\n\t * @private\n\t * @static\n\t * @param {HTMLElement} element\n\t * @param {Function} callback\n\t */\n\tstatic _addElementCallback( element, callback ) {\n\t\tif ( !ResizeObserver._elementCallbacks ) {\n\t\t\tResizeObserver._elementCallbacks = new Map();\n\t\t}\n\n\t\tlet callbacks = ResizeObserver._elementCallbacks.get( element );\n\n\t\tif ( !callbacks ) {\n\t\t\tcallbacks = new Set();\n\t\t\tResizeObserver._elementCallbacks.set( element, callbacks );\n\t\t}\n\n\t\tcallbacks.add( callback );\n\t}\n\n\t/**\n\t * Removes a resize callback from the DOM element. If no callbacks are left\n\t * for the element, it removes the element from the native observer.\n\t *\n\t * @private\n\t * @static\n\t * @param {HTMLElement} element\n\t * @param {Function} callback\n\t */\n\tstatic _deleteElementCallback( element, callback ) {\n\t\tconst callbacks = ResizeObserver._getElementCallbacks( element );\n\n\t\t// Remove the element callback. Check if exist first in case someone\n\t\t// called destroy() twice.\n\t\tif ( callbacks ) {\n\t\t\tcallbacks.delete( callback );\n\n\t\t\t// If no callbacks left for the element, also remove the element.\n\t\t\tif ( !callbacks.size ) {\n\t\t\t\tResizeObserver._elementCallbacks.delete( element );\n\t\t\t\tResizeObserver._observerInstance.unobserve( element );\n\t\t\t}\n\t\t}\n\n\t\tif ( ResizeObserver._elementCallbacks && !ResizeObserver._elementCallbacks.size ) {\n\t\t\tResizeObserver._observerInstance = null;\n\t\t\tResizeObserver._elementCallbacks = null;\n\t\t}\n\t}\n\n\t/**\n\t * Returns are registered resize callbacks for the DOM element.\n\t *\n\t * @private\n\t * @static\n\t * @param {HTMLElement} element\n\t * @returns {Set.<HTMLElement>|null}\n\t */\n\tstatic _getElementCallbacks( element ) {\n\t\tif ( !ResizeObserver._elementCallbacks ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn ResizeObserver._elementCallbacks.get( element );\n\t}\n\n\t/**\n\t * Creates the single native observer shared across all `ResizeObserver` instances.\n\t * If the browser does not support the native API, it creates a polyfill.\n\t *\n\t * @private\n\t * @static\n\t */\n\tstatic _createObserver() {\n\t\tlet ObserverConstructor;\n\n\t\t// TODO: One day, the `ResizeObserver` API will be supported in all modern web browsers.\n\t\t// When it happens, this module will no longer make sense and should be removed and\n\t\t// the native implementation should be used across the project to save bytes.\n\t\t// Check out https://caniuse.com/#feat=resizeobserver.\n\t\tif ( typeof global.window.ResizeObserver === 'function' ) {\n\t\t\tObserverConstructor = global.window.ResizeObserver;\n\t\t} else {\n\t\t\tObserverConstructor = ResizeObserverPolyfill;\n\t\t}\n\n\t\tResizeObserver._observerInstance = new ObserverConstructor( entries => {\n\t\t\tfor ( const entry of entries ) {\n\t\t\t\tconst callbacks = ResizeObserver._getElementCallbacks( entry.target );\n\n\t\t\t\tif ( callbacks ) {\n\t\t\t\t\tfor ( const callback of callbacks ) {\n\t\t\t\t\t\tcallback( entry );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n}\n\n/**\n * The single native observer instance (or polyfill in browsers that do not support the API)\n * shared across all {@link module:utils/dom/resizeobserver~ResizeObserver} instances.\n *\n * @static\n * @protected\n * @readonly\n * @property {Object|null} module:utils/dom/resizeobserver~ResizeObserver#_observerInstance\n */\nResizeObserver._observerInstance = null;\n\n/**\n * A mapping of native DOM elements and their callbacks shared across all\n * {@link module:utils/dom/resizeobserver~ResizeObserver} instances.\n *\n * @static\n * @private\n * @readonly\n * @property {Map.<HTMLElement,Set>|null} module:utils/dom/resizeobserver~ResizeObserver#_elementCallbacks\n */\nResizeObserver._elementCallbacks = null;\n\n/**\n * A polyfill class for the native [`ResizeObserver`](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver).\n *\n * @private\n * @mixes module:utils/domemittermixin~DomEmitterMixin\n */\nclass ResizeObserverPolyfill {\n\t/**\n\t * Creates an instance of the {@link module:utils/dom/resizeobserver~ResizeObserverPolyfill} class.\n\t *\n\t * It synchronously reacts to resize of the window to check if observed elements' geometry changed.\n\t *\n\t * Additionally, the polyfilled observer uses a timeout to check if observed elements' geometry has changed\n\t * in some other way (dynamic layouts, scrollbars showing up, etc.), so its response can also be asynchronous.\n\t *\n\t * @param {Function} callback A function called when any observed element was resized. Refer to the\n\t * native [`ResizeObserver`](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver) API to\n\t * learn more.\n\t */\n\tconstructor( callback ) {\n\t\t/**\n\t\t * A function called when any observed {@link #_elements element} was resized.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {Function}\n\t\t */\n\t\tthis._callback = callback;\n\n\t\t/**\n\t\t * DOM elements currently observed by the observer instance.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {Set}\n\t\t */\n\t\tthis._elements = new Set();\n\n\t\t/**\n\t\t * Cached DOM {@link #_elements elements} bounding rects to compare to upon the next check.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {Map.<HTMLElement,module:utils/dom/rect~Rect>}\n\t\t */\n\t\tthis._previousRects = new Map();\n\n\t\t/**\n\t\t * An UID of the current timeout upon which the observed elements rects\n\t\t * will be compared to the {@link #_previousRects previous rects} from the past.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {Map.<HTMLElement,module:utils/dom/rect~Rect>}\n\t\t */\n\t\tthis._periodicCheckTimeout = null;\n\t}\n\n\t/**\n\t * Starts observing a DOM element.\n\t *\n\t * Learn more in the\n\t * [native method documentation](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/observe).\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tobserve( element ) {\n\t\tthis._elements.add( element );\n\n\t\tthis._checkElementRectsAndExecuteCallback();\n\n\t\tif ( this._elements.size === 1 ) {\n\t\t\tthis._startPeriodicCheck();\n\t\t}\n\t}\n\n\t/**\n\t * Stops observing a DOM element.\n\t *\n\t * Learn more in the\n\t * [native method documentation](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/unobserve).\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tunobserve( element ) {\n\t\tthis._elements.delete( element );\n\t\tthis._previousRects.delete( element );\n\n\t\tif ( !this._elements.size ) {\n\t\t\tthis._stopPeriodicCheck();\n\t\t}\n\t}\n\n\t/**\n\t * When called, the observer calls the {@link #_callback resize callback} for all observed\n\t * {@link #_elements elements} but also starts checking periodically for changes in the elements' geometry.\n\t * If some are detected, {@link #_callback resize callback} is called for relevant elements that were resized.\n\t *\n\t * @protected\n\t */\n\t_startPeriodicCheck() {\n\t\tconst periodicCheck = () => {\n\t\t\tthis._checkElementRectsAndExecuteCallback();\n\t\t\tthis._periodicCheckTimeout = setTimeout( periodicCheck, RESIZE_CHECK_INTERVAL );\n\t\t};\n\n\t\tthis.listenTo( global.window, 'resize', () => {\n\t\t\tthis._checkElementRectsAndExecuteCallback();\n\t\t} );\n\n\t\tthis._periodicCheckTimeout = setTimeout( periodicCheck, RESIZE_CHECK_INTERVAL );\n\t}\n\n\t/**\n\t * Stops checking for changes in all observed {@link #_elements elements} geometry.\n\t *\n\t * @protected\n\t */\n\t_stopPeriodicCheck() {\n\t\tclearTimeout( this._periodicCheckTimeout );\n\t\tthis.stopListening();\n\t\tthis._previousRects.clear();\n\t}\n\n\t/**\n\t * Checks if the geometry of any of the {@link #_elements element} has changed. If so, executes\n\t * the {@link #_callback resize callback} with element geometry data.\n\t *\n\t * @protected\n\t */\n\t_checkElementRectsAndExecuteCallback() {\n\t\tconst entries = [];\n\n\t\tfor ( const element of this._elements ) {\n\t\t\tif ( this._hasRectChanged( element ) ) {\n\t\t\t\tentries.push( {\n\t\t\t\t\ttarget: element,\n\t\t\t\t\tcontentRect: this._previousRects.get( element )\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\tif ( entries.length ) {\n\t\t\tthis._callback( entries );\n\t\t}\n\t}\n\n\t/**\n\t * Compares the DOM element geometry to the {@link #_previousRects cached geometry} from the past.\n\t * Returns `true` if geometry has changed or the element is checked for the first time.\n\t *\n\t * @protected\n\t * @param {HTMLElement} element\n\t * @returns {Boolean}\n\t */\n\t_hasRectChanged( element ) {\n\t\tif ( !element.ownerDocument.body.contains( element ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst currentRect = new Rect( element );\n\t\tconst previousRect = this._previousRects.get( element );\n\n\t\t// The first check should always yield true despite no Previous rect to compare to.\n\t\t// The native ResizeObserver does that and... that makes sense. Sort of.\n\t\tconst hasChanged = !previousRect || !previousRect.isEqual( currentRect );\n\n\t\tthis._previousRects.set( element, currentRect );\n\n\t\treturn hasChanged;\n\t}\n}\n\nmix( ResizeObserverPolyfill, DomEmitterMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/dropdown/dropdownpanelview\n */\n\nimport View from '../view';\n\n/**\n * The dropdown panel view class.\n *\n * See {@link module:ui/dropdown/dropdownview~DropdownView} to learn about the common usage.\n *\n * @extends module:ui/view~View\n */\nexport default class DropdownPanelView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * Controls whether the panel is visible.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isVisible\n\t\t */\n\t\tthis.set( 'isVisible', false );\n\n\t\t/**\n\t\t * The position of the panel, relative to the parent.\n\t\t *\n\t\t * This property is reflected in the CSS class set to {@link #element} that controls\n\t\t * the position of the panel.\n\t\t *\n\t\t * @observable\n\t\t * @default 'se'\n\t\t * @member {'se'|'sw'|'ne'|'nw'} #position\n\t\t */\n\t\tthis.set( 'position', 'se' );\n\n\t\t/**\n\t\t * Collection of the child views in this panel.\n\t\t *\n\t\t * A common child type is the {@link module:ui/list/listview~ListView} and {@link module:ui/toolbar/toolbarview~ToolbarView}.\n\t\t * See {@link module:ui/dropdown/utils~addListToDropdown} and\n\t\t * {@link module:ui/dropdown/utils~addToolbarToDropdown} to learn more about child views of dropdowns.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.children = this.createCollection();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-reset',\n\t\t\t\t\t'ck-dropdown__panel',\n\t\t\t\t\tbind.to( 'position', value => `ck-dropdown__panel_${ value }` ),\n\t\t\t\t\tbind.if( 'isVisible', 'ck-dropdown__panel-visible' )\n\t\t\t\t]\n\t\t\t},\n\n\t\t\tchildren: this.children,\n\n\t\t\ton: {\n\t\t\t\t// Drag and drop in the panel should not break the selection in the editor.\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/228\n\t\t\t\tselectstart: bind.to( evt => evt.preventDefault() )\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Focuses the view element or first item in view collection on opening dropdown's panel.\n\t *\n\t * See also {@link module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable}.\n\t */\n\tfocus() {\n\t\tif ( this.children.length ) {\n\t\t\tthis.children.first.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Focuses the view element or last item in view collection on opening dropdown's panel.\n\t *\n\t * See also {@link module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable}.\n\t */\n\tfocusLast() {\n\t\tif ( this.children.length ) {\n\t\t\tconst lastChild = this.children.last;\n\n\t\t\tif ( typeof lastChild.focusLast === 'function' ) {\n\t\t\t\tlastChild.focusLast();\n\t\t\t} else {\n\t\t\t\tlastChild.focus();\n\t\t\t}\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/position\n */\n\nimport global from './global';\nimport Rect from './rect';\nimport getPositionedAncestor from './getpositionedancestor';\nimport getBorderWidths from './getborderwidths';\nimport { isFunction } from 'lodash-es';\n\n/**\n * Calculates the `position: absolute` coordinates of a given element so it can be positioned with respect to the\n * target in the visually most efficient way, taking various restrictions like viewport or limiter geometry\n * into consideration.\n *\n *\t\t// The element which is to be positioned.\n *\t\tconst element = document.body.querySelector( '#toolbar' );\n *\n *\t\t// A target to which the element is positioned relatively.\n *\t\tconst target = document.body.querySelector( '#container' );\n *\n *\t\t// Finding the optimal coordinates for the positioning.\n *\t\tconst { left, top, name } = getOptimalPosition( {\n *\t\t\telement: element,\n *\t\t\ttarget: target,\n *\n * \t\t\t// The algorithm will chose among these positions to meet the requirements such\n * \t\t\t// as \"limiter\" element or \"fitInViewport\", set below. The positions are considered\n * \t\t\t// in the order of the array.\n *\t\t\tpositions: [\n *\t\t\t\t//\n *\t\t\t \t//\t[ Target ]\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\t|     Element     |\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\n *\t\t\t\ttargetRect => ( {\n *\t\t\t\t\ttop: targetRect.bottom,\n *\t\t\t\t\tleft: targetRect.left,\n *\t\t\t\t\tname: 'mySouthEastPosition'\n *\t\t\t\t} ),\n *\n *\t\t\t\t//\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\t|     Element     |\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\t[ Target ]\n *\t\t\t\t//\n *\t\t\t\t( targetRect, elementRect ) => ( {\n *\t\t\t\t\ttop: targetRect.top - elementRect.height,\n *\t\t\t\t\tleft: targetRect.left,\n *\t\t\t\t\tname: 'myNorthEastPosition'\n *\t\t\t\t} )\n *\t\t\t],\n *\n *\t\t\t// Find a position such guarantees the element remains within visible boundaries of <body>.\n *\t\t\tlimiter: document.body,\n *\n *\t\t\t// Find a position such guarantees the element remains within visible boundaries of the browser viewport.\n *\t\t\tfitInViewport: true\n *\t\t} );\n *\n *\t\t// The best position which fits into document.body and the viewport. May be useful\n *\t\t// to set proper class on the `element`.\n *\t\tconsole.log( name ); // -> \"myNorthEastPosition\"\n *\n *\t\t// Using the absolute coordinates which has been found to position the element\n *\t\t// as in the diagram depicting the \"myNorthEastPosition\" position.\n *\t\telement.style.top = top;\n *\t\telement.style.left = left;\n *\n * @param {module:utils/dom/position~Options} options Positioning options object.\n * @returns {module:utils/dom/position~Position}\n */\nexport function getOptimalPosition( { element, target, positions, limiter, fitInViewport } ) {\n\t// If the {@link module:utils/dom/position~Options#target} is a function, use what it returns.\n\t// https://github.com/ckeditor/ckeditor5-utils/issues/157\n\tif ( isFunction( target ) ) {\n\t\ttarget = target();\n\t}\n\n\t// If the {@link module:utils/dom/position~Options#limiter} is a function, use what it returns.\n\t// https://github.com/ckeditor/ckeditor5-ui/issues/260\n\tif ( isFunction( limiter ) ) {\n\t\tlimiter = limiter();\n\t}\n\n\tconst positionedElementAncestor = getPositionedAncestor( element.parentElement );\n\tconst elementRect = new Rect( element );\n\tconst targetRect = new Rect( target );\n\n\tlet bestPosition;\n\tlet name;\n\n\t// If there are no limits, just grab the very first position and be done with that drama.\n\tif ( !limiter && !fitInViewport ) {\n\t\t[ name, bestPosition ] = getPosition( positions[ 0 ], targetRect, elementRect );\n\t} else {\n\t\tconst limiterRect = limiter && new Rect( limiter ).getVisible();\n\t\tconst viewportRect = fitInViewport && new Rect( global.window );\n\n\t\t[ name, bestPosition ] =\n\t\t\tgetBestPosition( positions, targetRect, elementRect, limiterRect, viewportRect ) ||\n\t\t\t// If there's no best position found, i.e. when all intersections have no area because\n\t\t\t// rects have no width or height, then just use the first available position.\n\t\t\tgetPosition( positions[ 0 ], targetRect, elementRect );\n\t}\n\n\tlet { left, top } = getAbsoluteRectCoordinates( bestPosition );\n\n\tif ( positionedElementAncestor ) {\n\t\tconst ancestorPosition = getAbsoluteRectCoordinates( new Rect( positionedElementAncestor ) );\n\t\tconst ancestorBorderWidths = getBorderWidths( positionedElementAncestor );\n\n\t\t// (https://github.com/ckeditor/ckeditor5-ui-default/issues/126)\n\t\t// If there's some positioned ancestor of the panel, then its `Rect` must be taken into\n\t\t// consideration. `Rect` is always relative to the viewport while `position: absolute` works\n\t\t// with respect to that positioned ancestor.\n\t\tleft -= ancestorPosition.left;\n\t\ttop -= ancestorPosition.top;\n\n\t\t// (https://github.com/ckeditor/ckeditor5-utils/issues/139)\n\t\t// If there's some positioned ancestor of the panel, not only its position must be taken into\n\t\t// consideration (see above) but also its internal scrolls. Scroll have an impact here because `Rect`\n\t\t// is relative to the viewport (it doesn't care about scrolling), while `position: absolute`\n\t\t// must compensate that scrolling.\n\t\tleft += positionedElementAncestor.scrollLeft;\n\t\ttop += positionedElementAncestor.scrollTop;\n\n\t\t// (https://github.com/ckeditor/ckeditor5-utils/issues/139)\n\t\t// If there's some positioned ancestor of the panel, then its `Rect` includes its CSS `borderWidth`\n\t\t// while `position: absolute` positioning does not consider it.\n\t\t// E.g. `{ position: absolute, top: 0, left: 0 }` means upper left corner of the element,\n\t\t// not upper-left corner of its border.\n\t\tleft -= ancestorBorderWidths.left;\n\t\ttop -= ancestorBorderWidths.top;\n\t}\n\n\treturn { left, top, name };\n}\n\n// For given position function, returns a corresponding `Rect` instance.\n//\n// @private\n// @param {Function} position A function returning {@link module:utils/dom/position~Position}.\n// @param {utils/dom/rect~Rect} targetRect A rect of the target.\n// @param {utils/dom/rect~Rect} elementRect A rect of positioned element.\n// @returns {Array} An array containing position name and its Rect.\nfunction getPosition( position, targetRect, elementRect ) {\n\tconst { left, top, name } = position( targetRect, elementRect );\n\n\treturn [ name, elementRect.clone().moveTo( left, top ) ];\n}\n\n// For a given array of positioning functions, returns such that provides the best\n// fit of the `elementRect` into the `limiterRect` and `viewportRect`.\n//\n// @private\n// @param {module:utils/dom/position~Options#positions} positions Functions returning\n// {@link module:utils/dom/position~Position} to be checked, in the order of preference.\n// @param {utils/dom/rect~Rect} targetRect A rect of the {@link module:utils/dom/position~Options#target}.\n// @param {utils/dom/rect~Rect} elementRect A rect of positioned {@link module:utils/dom/position~Options#element}.\n// @param {utils/dom/rect~Rect} limiterRect A rect of the {@link module:utils/dom/position~Options#limiter}.\n// @param {utils/dom/rect~Rect} viewportRect A rect of the viewport.\n// @returns {Array} An array containing the name of the position and it's rect.\nfunction getBestPosition( positions, targetRect, elementRect, limiterRect, viewportRect ) {\n\tlet maxLimiterIntersectArea = 0;\n\tlet maxViewportIntersectArea = 0;\n\tlet bestPositionRect;\n\tlet bestPositionName;\n\n\t// This is when element is fully visible.\n\tconst elementRectArea = elementRect.getArea();\n\n\tpositions.some( position => {\n\t\tconst [ positionName, positionRect ] = getPosition( position, targetRect, elementRect );\n\t\tlet limiterIntersectArea;\n\t\tlet viewportIntersectArea;\n\n\t\tif ( limiterRect ) {\n\t\t\tif ( viewportRect ) {\n\t\t\t\t// Consider only the part of the limiter which is visible in the viewport. So the limiter is getting limited.\n\t\t\t\tconst limiterViewportIntersectRect = limiterRect.getIntersection( viewportRect );\n\n\t\t\t\tif ( limiterViewportIntersectRect ) {\n\t\t\t\t\t// If the limiter is within the viewport, then check the intersection between that part of the\n\t\t\t\t\t// limiter and actual position.\n\t\t\t\t\tlimiterIntersectArea = limiterViewportIntersectRect.getIntersectionArea( positionRect );\n\t\t\t\t} else {\n\t\t\t\t\tlimiterIntersectArea = 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlimiterIntersectArea = limiterRect.getIntersectionArea( positionRect );\n\t\t\t}\n\t\t}\n\n\t\tif ( viewportRect ) {\n\t\t\tviewportIntersectArea = viewportRect.getIntersectionArea( positionRect );\n\t\t}\n\n\t\t// The only criterion: intersection with the viewport.\n\t\tif ( viewportRect && !limiterRect ) {\n\t\t\tif ( viewportIntersectArea > maxViewportIntersectArea ) {\n\t\t\t\tsetBestPosition();\n\t\t\t}\n\t\t}\n\t\t// The only criterion: intersection with the limiter.\n\t\telse if ( !viewportRect && limiterRect ) {\n\t\t\tif ( limiterIntersectArea > maxLimiterIntersectArea ) {\n\t\t\t\tsetBestPosition();\n\t\t\t}\n\t\t}\n\t\t// Two criteria: intersection with the viewport and the limiter visible in the viewport.\n\t\telse {\n\t\t\tif ( viewportIntersectArea > maxViewportIntersectArea && limiterIntersectArea >= maxLimiterIntersectArea ) {\n\t\t\t\tsetBestPosition();\n\t\t\t} else if ( viewportIntersectArea >= maxViewportIntersectArea && limiterIntersectArea > maxLimiterIntersectArea ) {\n\t\t\t\tsetBestPosition();\n\t\t\t}\n\t\t}\n\n\t\tfunction setBestPosition() {\n\t\t\tmaxViewportIntersectArea = viewportIntersectArea;\n\t\t\tmaxLimiterIntersectArea = limiterIntersectArea;\n\t\t\tbestPositionRect = positionRect;\n\t\t\tbestPositionName = positionName;\n\t\t}\n\n\t\t// If a such position is found that element is fully container by the limiter then, obviously,\n\t\t// there will be no better one, so finishing.\n\t\treturn limiterIntersectArea === elementRectArea;\n\t} );\n\n\treturn bestPositionRect ? [ bestPositionName, bestPositionRect ] : null;\n}\n\n// DOMRect (also Rect) works in a scroll–independent geometry but `position: absolute` doesn't.\n// This function converts Rect to `position: absolute` coordinates.\n//\n// @private\n// @param {utils/dom/rect~Rect} rect A rect to be converted.\n// @returns {Object} Object containing `left` and `top` properties, in absolute coordinates.\nfunction getAbsoluteRectCoordinates( { left, top } ) {\n\tconst { scrollX, scrollY } = global.window;\n\n\treturn {\n\t\tleft: left + scrollX,\n\t\ttop: top + scrollY,\n\t};\n}\n\n/**\n * The `getOptimalPosition` helper options.\n *\n * @interface module:utils/dom/position~Options\n */\n\n/**\n * Element that is to be positioned.\n *\n * @member {HTMLElement} #element\n */\n\n/**\n * Target with respect to which the `element` is to be positioned.\n *\n * @member {HTMLElement|Range|ClientRect|Rect|Function} #target\n */\n\n/**\n * An array of functions which return {@link module:utils/dom/position~Position} relative\n * to the `target`, in the order of preference.\n *\n * @member {Array.<Function>} #positions\n */\n\n/**\n * When set, the algorithm will chose position which fits the most in the\n * limiter's bounding rect.\n *\n * @member {HTMLElement|Range|ClientRect|Rect|Function} #limiter\n */\n\n/**\n * When set, the algorithm will chose such a position which fits `element`\n * the most inside visible viewport.\n *\n * @member {Boolean} #fitInViewport\n */\n\n/**\n * An object describing a position in `position: absolute` coordinate\n * system, along with position name.\n *\n * @typedef {Object} module:utils/dom/position~Position\n *\n * @property {Number} top Top position offset.\n * @property {Number} left Left position offset.\n * @property {String} name Name of the position.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/getpositionedancestor\n */\n\nimport global from './global';\n\n/**\n * For a given element, returns the nearest ancestor element which CSS position is not \"static\".\n *\n * @param {HTMLElement} element The native DOM element to be checked.\n * @returns {HTMLElement|null}\n */\nexport default function getPositionedAncestor( element ) {\n\twhile ( element && element.tagName.toLowerCase() != 'html' ) {\n\t\tif ( global.window.getComputedStyle( element ).position != 'static' ) {\n\t\t\treturn element;\n\t\t}\n\n\t\telement = element.parentElement;\n\t}\n\n\treturn null;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/dropdown/dropdownview\n */\n\nimport View from '../view';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\n\nimport '../../theme/components/dropdown/dropdown.css';\n\nimport { getOptimalPosition } from '@ckeditor/ckeditor5-utils/src/dom/position';\n\n/**\n * The dropdown view class. It manages the dropdown button and dropdown panel.\n *\n * In most cases, the easiest way to create a dropdown is by using the {@link module:ui/dropdown/utils~createDropdown}\n * util:\n *\n *\t\tconst dropdown = createDropdown( locale );\n *\n *\t\t// Configure dropdown's button properties:\n *\t\tdropdown.buttonView.set( {\n *\t\t\tlabel: 'A dropdown',\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tdropdown.render();\n *\n *\t\tdropdown.panelView.element.textContent = 'Content of the panel';\n *\n *\t\t// Will render a dropdown with a panel containing a \"Content of the panel\" text.\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * If you want to add a richer content to the dropdown panel, you can use the {@link module:ui/dropdown/utils~addListToDropdown}\n * and {@link module:ui/dropdown/utils~addToolbarToDropdown} helpers. See more examples in\n * {@link module:ui/dropdown/utils~createDropdown} documentation.\n *\n * If you want to create a completely custom dropdown, then you can compose it manually:\n *\n *\t\tconst button = new DropdownButtonView( locale );\n *\t\tconst panel = new DropdownPanelView( locale );\n *\t\tconst dropdown = new DropdownView( locale, button, panel );\n *\n *\t\tbutton.set( {\n *\t\t\tlabel: 'A dropdown',\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tdropdown.render();\n *\n *\t\tpanel.element.textContent = 'Content of the panel';\n *\n *\t\t// Will render a dropdown with a panel containing a \"Content of the panel\" text.\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * However, dropdown created this way will contain little behavior. You will need to implement handlers for actions\n * such as {@link module:ui/bindings/clickoutsidehandler~clickOutsideHandler clicking outside an open dropdown}\n * (which should close it) and support for arrow keys inside the panel. Therefore, unless you really know what\n * you do and you really need to do it, it is recommended to use the {@link module:ui/dropdown/utils~createDropdown} helper.\n *\n * @extends module:ui/view~View\n */\nexport default class DropdownView extends View {\n\t/**\n\t * Creates an instance of the dropdown.\n\t *\n\t * Also see {@link #render}.\n\t *\n\t * @param {module:utils/locale~Locale} [locale] The localization services instance.\n\t * @param {module:ui/dropdown/button/dropdownbutton~DropdownButton} buttonView\n\t * @param {module:ui/dropdown/dropdownpanelview~DropdownPanelView} panelView\n\t */\n\tconstructor( locale, buttonView, panelView ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * Button of the dropdown view. Clicking the button opens the {@link #panelView}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/button/buttonview~ButtonView} #buttonView\n\t\t */\n\t\tthis.buttonView = buttonView;\n\n\t\t/**\n\t\t * Panel of the dropdown. It opens when the {@link #buttonView} is\n\t\t * {@link module:ui/button/buttonview~ButtonView#event:execute executed} (i.e. clicked).\n\t\t *\n\t\t * Child views can be added to the panel's `children` collection:\n\t\t *\n\t\t *\t\tdropdown.panelView.children.add( childView );\n\t\t *\n\t\t * See {@link module:ui/dropdown/dropdownpanelview~DropdownPanelView#children} and\n\t\t * {@link module:ui/viewcollection~ViewCollection#add}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/dropdown/dropdownpanelview~DropdownPanelView} #panelView\n\t\t */\n\t\tthis.panelView = panelView;\n\n\t\t/**\n\t\t * Controls whether the dropdown view is open, i.e. shows or hides the {@link #panelView panel}.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isOpen\n\t\t */\n\t\tthis.set( 'isOpen', false );\n\n\t\t/**\n\t\t * Controls whether the dropdown is enabled, i.e. it can be clicked and execute an action.\n\t\t *\n\t\t * See {@link module:ui/button/buttonview~ButtonView#isEnabled}.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isEnabled\n\t\t */\n\t\tthis.set( 'isEnabled', true );\n\n\t\t/**\n\t\t * (Optional) The additional CSS class set on the dropdown {@link #element}.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #class\n\t\t */\n\t\tthis.set( 'class' );\n\n\t\t/**\n\t\t * (Optional) The `id` attribute of the dropdown (i.e. to pair with a `<label>` element).\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #id\n\t\t */\n\t\tthis.set( 'id' );\n\n\t\t/**\n\t\t * The position of the panel, relative to the dropdown.\n\t\t *\n\t\t * **Note**: When `'auto'`, the panel will use one of the remaining positions to stay\n\t\t * in the viewport, visible to the user. The positions correspond directly to\n\t\t * {@link module:ui/dropdown/dropdownview~DropdownView.defaultPanelPositions default panel positions}.\n\t\t *\n\t\t * **Note**: This value has an impact on the\n\t\t * {@link module:ui/dropdown/dropdownpanelview~DropdownPanelView#position} property\n\t\t * each time the panel becomes {@link #isOpen open}.\n\t\t *\n\t\t * @observable\n\t\t * @default 'auto'\n\t\t * @member {'auto'|'se'|'sw'|'ne'|'nw'} #panelPosition\n\t\t */\n\t\tthis.set( 'panelPosition', 'auto' );\n\n\t\t/**\n\t\t * Tracks information about DOM focus in the dropdown.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}. It manages\n\t\t * keystrokes of the dropdown:\n\t\t *\n\t\t * * <kbd>▼</kbd> opens the dropdown,\n\t\t * * <kbd>◀</kbd> and <kbd>Esc</kbd> closes the dropdown.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-dropdown',\n\t\t\t\t\tbind.to( 'class' ),\n\t\t\t\t\tbind.if( 'isEnabled', 'ck-disabled', value => !value )\n\t\t\t\t],\n\t\t\t\tid: bind.to( 'id' ),\n\t\t\t\t'aria-describedby': bind.to( 'ariaDescribedById' )\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\tbuttonView,\n\t\t\t\tpanelView\n\t\t\t]\n\t\t} );\n\n\t\tbuttonView.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-dropdown__button',\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * A child {@link module:ui/list/listview~ListView list view} of the dropdown located\n\t\t * in its {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel}.\n\t\t *\n\t\t * **Note**: Only supported when dropdown has list view added using {@link module:ui/dropdown/utils~addListToDropdown}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/list/listview~ListView} #listView\n\t\t */\n\n\t\t/**\n\t\t * A child toolbar of the dropdown located in the\n\t\t * {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel}.\n\t\t *\n\t\t * **Note**: Only supported when dropdown has list view added using {@link module:ui/dropdown/utils~addToolbarToDropdown}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/toolbar/toolbarview~ToolbarView} #toolbarView\n\t\t */\n\n\t\t/**\n\t\t * Fired when the toolbar button or list item is executed.\n\t\t *\n\t\t * For {@link #listView} It fires when a child of some {@link module:ui/list/listitemview~ListItemView}\n\t\t * fired `execute`.\n\t\t *\n\t\t * For {@link #toolbarView} It fires when one of the buttons has been\n\t\t * {@link module:ui/button/buttonview~ButtonView#event:execute executed}.\n\t\t *\n\t\t * **Note**: Only supported when dropdown has list view added using {@link module:ui/dropdown/utils~addListToDropdown}\n\t\t * or {@link module:ui/dropdown/utils~addToolbarToDropdown}.\n\t\t *\n\t\t * @event execute\n\t\t */\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\t// Toggle the dropdown when its button has been clicked.\n\t\tthis.listenTo( this.buttonView, 'open', () => {\n\t\t\tthis.isOpen = !this.isOpen;\n\t\t} );\n\n\t\t// Toggle the visibility of the panel when the dropdown becomes open.\n\t\tthis.panelView.bind( 'isVisible' ).to( this, 'isOpen' );\n\n\t\t// Let the dropdown control the position of the panel. The position must\n\t\t// be updated every time the dropdown is open.\n\t\tthis.on( 'change:isOpen', () => {\n\t\t\tif ( !this.isOpen ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If \"auto\", find the best position of the panel to fit into the viewport.\n\t\t\t// Otherwise, simply assign the static position.\n\t\t\tif ( this.panelPosition === 'auto' ) {\n\t\t\t\tthis.panelView.position = DropdownView._getOptimalPosition( {\n\t\t\t\t\telement: this.panelView.element,\n\t\t\t\t\ttarget: this.buttonView.element,\n\t\t\t\t\tfitInViewport: true,\n\t\t\t\t\tpositions: this._panelPositions\n\t\t\t\t} ).name;\n\t\t\t} else {\n\t\t\t\tthis.panelView.position = this.panelPosition;\n\t\t\t}\n\t\t} );\n\n\t\t// Listen for keystrokes coming from within #element.\n\t\tthis.keystrokes.listenTo( this.element );\n\n\t\t// Register #element in the focus tracker.\n\t\tthis.focusTracker.add( this.element );\n\n\t\tconst closeDropdown = ( data, cancel ) => {\n\t\t\tif ( this.isOpen ) {\n\t\t\t\tthis.buttonView.focus();\n\t\t\t\tthis.isOpen = false;\n\t\t\t\tcancel();\n\t\t\t}\n\t\t};\n\n\t\t// Open the dropdown panel using the arrow down key, just like with return or space.\n\t\tthis.keystrokes.set( 'arrowdown', ( data, cancel ) => {\n\t\t\t// Don't open if the dropdown is disabled or already open.\n\t\t\tif ( this.buttonView.isEnabled && !this.isOpen ) {\n\t\t\t\tthis.isOpen = true;\n\t\t\t\tcancel();\n\t\t\t}\n\t\t} );\n\n\t\t// Block the right arrow key (until nested dropdowns are implemented).\n\t\tthis.keystrokes.set( 'arrowright', ( data, cancel ) => {\n\t\t\tif ( this.isOpen ) {\n\t\t\t\tcancel();\n\t\t\t}\n\t\t} );\n\n\t\t// Close the dropdown using the arrow left/escape key.\n\t\tthis.keystrokes.set( 'arrowleft', closeDropdown );\n\t\tthis.keystrokes.set( 'esc', closeDropdown );\n\t}\n\n\t/**\n\t * Focuses the {@link #buttonView}.\n\t */\n\tfocus() {\n\t\tthis.buttonView.focus();\n\t}\n\n\t/**\n\t * Returns {@link #panelView panel} positions to be used by the\n\t * {@link module:utils/dom/position~getOptimalPosition `getOptimalPosition()`}\n\t * utility considering the direction of the language the UI of the editor is displayed in.\n\t *\n\t * @type {module:utils/dom/position~Options#positions}\n\t * @private\n\t */\n\tget _panelPositions() {\n\t\tconst { southEast, southWest, northEast, northWest } = DropdownView.defaultPanelPositions;\n\n\t\tif ( this.locale.uiLanguageDirection === 'ltr' ) {\n\t\t\treturn [ southEast, southWest, northEast, northWest ];\n\t\t} else {\n\t\t\treturn [ southWest, southEast, northWest, northEast ];\n\t\t}\n\t}\n}\n\n/**\n * A set of positioning functions used by the dropdown view to determine\n * the optimal position (i.e. fitting into the browser viewport) of its\n * {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel} when\n * {@link module:ui/dropdown/dropdownview~DropdownView#panelPosition} is set to 'auto'`.\n *\n * The available positioning functions are as follow:\n *\n * **South**\n *\n * * `southEast`\n *\n *\t\t[ Button ]\n *\t\t+-----------------+\n *\t\t|      Panel      |\n *\t\t+-----------------+\n *\n * * `southWest`\n *\n *\t\t         [ Button ]\n *\t\t+-----------------+\n *\t\t|      Panel      |\n *\t\t+-----------------+\n *\n * **North**\n *\n * * `northEast`\n *\n *\t\t+-----------------+\n *\t\t|      Panel      |\n *\t\t+-----------------+\n *\t\t[ Button ]\n *\n * * `northWest`\n *\n *\t\t+-----------------+\n *\t\t|      Panel      |\n *\t\t+-----------------+\n *\t\t         [ Button ]\n *\n * Positioning functions are compatible with {@link module:utils/dom/position~Position}.\n *\n * The name that position function returns will be reflected in dropdown panel's class that\n * controls its placement. See {@link module:ui/dropdown/dropdownview~DropdownView#panelPosition}\n * to learn more.\n *\n * @member {Object} module:ui/dropdown/dropdownview~DropdownView.defaultPanelPositions\n */\nDropdownView.defaultPanelPositions = {\n\tsouthEast: buttonRect => {\n\t\treturn {\n\t\t\ttop: buttonRect.bottom,\n\t\t\tleft: buttonRect.left,\n\t\t\tname: 'se'\n\t\t};\n\t},\n\tsouthWest: ( buttonRect, panelRect ) => {\n\t\treturn {\n\t\t\ttop: buttonRect.bottom,\n\t\t\tleft: buttonRect.left - panelRect.width + buttonRect.width,\n\t\t\tname: 'sw'\n\t\t};\n\t},\n\tnorthEast: ( buttonRect, panelRect ) => {\n\t\treturn {\n\t\t\ttop: buttonRect.top - panelRect.height,\n\t\t\tleft: buttonRect.left,\n\t\t\tname: 'ne'\n\t\t};\n\t},\n\tnorthWest: ( buttonRect, panelRect ) => {\n\t\treturn {\n\t\t\ttop: buttonRect.bottom - panelRect.height,\n\t\t\tleft: buttonRect.left - panelRect.width + buttonRect.width,\n\t\t\tname: 'nw'\n\t\t};\n\t}\n};\n\n/**\n * A function used to calculate the optimal position for the dropdown panel.\n *\n * @protected\n * @member {Function} module:ui/dropdown/dropdownview~DropdownView._getOptimalPosition\n */\nDropdownView._getOptimalPosition = getOptimalPosition;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* global DOMParser */\n\n/**\n * @module ui/icon/iconview\n */\n\nimport View from '../view';\n\nimport '../../theme/components/icon/icon.css';\n\n/**\n * The icon view class.\n *\n * @extends module:ui/view~View\n */\nexport default class IconView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * The SVG source of the icon.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #content\n\t\t */\n\t\tthis.set( 'content', '' );\n\n\t\t/**\n\t\t * This attribute specifies the boundaries to which the\n\t\t * icon content should stretch.\n\t\t *\n\t\t * @observable\n\t\t * @default '0 0 20 20'\n\t\t * @member {String} #viewBox\n\t\t */\n\t\tthis.set( 'viewBox', '0 0 20 20' );\n\n\t\t/**\n\t\t * The fill color of the child `path.ck-icon__fill`.\n\t\t *\n\t\t * @observable\n\t\t * @default ''\n\t\t * @member {String} #fillColor\n\t\t */\n\t\tthis.set( 'fillColor', '' );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'svg',\n\t\t\tns: 'http://www.w3.org/2000/svg',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-icon'\n\t\t\t\t],\n\t\t\t\tviewBox: bind.to( 'viewBox' )\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tthis._updateXMLContent();\n\t\tthis._colorFillPaths();\n\n\t\t// This is a hack for lack of innerHTML binding.\n\t\t// See: https://github.com/ckeditor/ckeditor5-ui/issues/99.\n\t\tthis.on( 'change:content', () => {\n\t\t\tthis._updateXMLContent();\n\t\t\tthis._colorFillPaths();\n\t\t} );\n\n\t\tthis.on( 'change:fillColor', () => {\n\t\t\tthis._colorFillPaths();\n\t\t} );\n\t}\n\n\t/**\n\t * Updates the {@link #element} with the value of {@link #content}.\n\t *\n\t * @private\n\t */\n\t_updateXMLContent() {\n\t\tif ( this.content ) {\n\t\t\tconst parsed = new DOMParser().parseFromString( this.content.trim(), 'image/svg+xml' );\n\t\t\tconst svg = parsed.querySelector( 'svg' );\n\t\t\tconst viewBox = svg.getAttribute( 'viewBox' );\n\n\t\t\tif ( viewBox ) {\n\t\t\t\tthis.viewBox = viewBox;\n\t\t\t}\n\n\t\t\tthis.element.innerHTML = '';\n\n\t\t\twhile ( svg.childNodes.length > 0 ) {\n\t\t\t\tthis.element.appendChild( svg.childNodes[ 0 ] );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Fills all child `path.ck-icon__fill` with the `#fillColor`.\n\t *\n\t * @private\n\t */\n\t_colorFillPaths() {\n\t\tif ( this.fillColor ) {\n\t\t\tthis.element.querySelectorAll( '.ck-icon__fill' ).forEach( path => {\n\t\t\t\tpath.style.fill = this.fillColor;\n\t\t\t} );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/tooltip/tooltipview\n */\n\nimport View from '../view';\n\nimport '../../theme/components/tooltip/tooltip.css';\n\n/**\n * The tooltip view class.\n *\n * @extends module:ui/view~View\n */\nexport default class TooltipView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * The text of the tooltip visible to the user.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #text\n\t\t */\n\t\tthis.set( 'text', '' );\n\n\t\t/**\n\t\t * The position of the tooltip (south or north).\n\t\t *\n\t\t *\t\t+-----------+\n\t\t *\t\t|   north   |\n\t\t *\t\t+-----------+\n\t\t *\t\t      V\n\t\t *\t\t  [element]\n\t\t *\n\t\t *\t\t  [element]\n\t\t *\t\t      ^\n\t\t *\t\t+-----------+\n\t\t *\t\t|   south   |\n\t\t *\t\t+-----------+\n\t\t *\n\t\t * @observable\n\t\t * @default 's'\n\t\t * @member {'s'|'n'} #position\n\t\t */\n\t\tthis.set( 'position', 's' );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'span',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-tooltip',\n\t\t\t\t\tbind.to( 'position', position => 'ck-tooltip_' + position ),\n\t\t\t\t\tbind.if( 'text', 'ck-hidden', value => !value.trim() )\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttag: 'span',\n\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t'ck',\n\t\t\t\t\t\t\t'ck-tooltip__text'\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttext: bind.to( 'text' ),\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/button/buttonview\n */\n\nimport View from '../view';\nimport IconView from '../icon/iconview';\nimport TooltipView from '../tooltip/tooltipview';\n\nimport uid from '@ckeditor/ckeditor5-utils/src/uid';\nimport { getEnvKeystrokeText } from '@ckeditor/ckeditor5-utils/src/keyboard';\n\nimport '../../theme/components/button/button.css';\n\n/**\n * The button view class.\n *\n *\t\tconst view = new ButtonView();\n *\n *\t\tview.set( {\n *\t\t\tlabel: 'A button',\n *\t\t\tkeystroke: 'Ctrl+B',\n *\t\t\ttooltip: true,\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tview.render();\n *\n *\t\tdocument.body.append( view.element );\n *\n * @extends module:ui/view~View\n * @implements module:ui/button/button~Button\n */\nexport default class ButtonView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\t\tconst ariaLabelUid = uid();\n\n\t\t// Implement the Button interface.\n\t\tthis.set( 'class' );\n\t\tthis.set( 'labelStyle' );\n\t\tthis.set( 'icon' );\n\t\tthis.set( 'isEnabled', true );\n\t\tthis.set( 'isOn', false );\n\t\tthis.set( 'isVisible', true );\n\t\tthis.set( 'isToggleable', false );\n\t\tthis.set( 'keystroke' );\n\t\tthis.set( 'label' );\n\t\tthis.set( 'tabindex', -1 );\n\t\tthis.set( 'tooltip' );\n\t\tthis.set( 'tooltipPosition', 's' );\n\t\tthis.set( 'type', 'button' );\n\t\tthis.set( 'withText', false );\n\t\tthis.set( 'withKeystroke', false );\n\n\t\t/**\n\t\t * Collection of the child views inside of the button {@link #element}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.children = this.createCollection();\n\n\t\t/**\n\t\t * Tooltip of the button view. It is configurable using the {@link #tooltip tooltip attribute}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/tooltip/tooltipview~TooltipView} #tooltipView\n\t\t */\n\t\tthis.tooltipView = this._createTooltipView();\n\n\t\t/**\n\t\t * Label of the button view. It is configurable using the {@link #label label attribute}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/view~View} #labelView\n\t\t */\n\t\tthis.labelView = this._createLabelView( ariaLabelUid );\n\n\t\t/**\n\t\t * The icon view of the button. Will be added to {@link #children} when the\n\t\t * {@link #icon icon attribute} is defined.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/icon/iconview~IconView} #iconView\n\t\t */\n\t\tthis.iconView = new IconView();\n\n\t\tthis.iconView.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-button__icon'\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * A view displaying the keystroke of the button next to the {@link #labelView label}.\n\t\t * Added to {@link #children} when the {@link #withKeystroke `withKeystroke` attribute}\n\t\t * is defined.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/view/view~View} #keystrokeView\n\t\t */\n\t\tthis.keystrokeView = this._createKeystrokeView();\n\n\t\t/**\n\t\t * Tooltip of the button bound to the template.\n\t\t *\n\t\t * @see #tooltip\n\t\t * @see #_getTooltipString\n\t\t * @private\n\t\t * @observable\n\t\t * @member {Boolean} #_tooltipString\n\t\t */\n\t\tthis.bind( '_tooltipString' ).to(\n\t\t\tthis, 'tooltip',\n\t\t\tthis, 'label',\n\t\t\tthis, 'keystroke',\n\t\t\tthis._getTooltipString.bind( this )\n\t\t);\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'button',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-button',\n\t\t\t\t\tbind.to( 'class' ),\n\t\t\t\t\tbind.if( 'isEnabled', 'ck-disabled', value => !value ),\n\t\t\t\t\tbind.if( 'isVisible', 'ck-hidden', value => !value ),\n\t\t\t\t\tbind.to( 'isOn', value => value ? 'ck-on' : 'ck-off' ),\n\t\t\t\t\tbind.if( 'withText', 'ck-button_with-text' ),\n\t\t\t\t\tbind.if( 'withKeystroke', 'ck-button_with-keystroke' ),\n\t\t\t\t],\n\t\t\t\ttype: bind.to( 'type', value => value ? value : 'button' ),\n\t\t\t\ttabindex: bind.to( 'tabindex' ),\n\t\t\t\t'aria-labelledby': `ck-editor__aria-label_${ ariaLabelUid }`,\n\t\t\t\t'aria-disabled': bind.if( 'isEnabled', true, value => !value ),\n\t\t\t\t'aria-pressed': bind.to( 'isOn', value => this.isToggleable ? String( value ) : false )\n\t\t\t},\n\n\t\t\tchildren: this.children,\n\n\t\t\ton: {\n\t\t\t\tmousedown: bind.to( evt => {\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t} ),\n\n\t\t\t\tclick: bind.to( evt => {\n\t\t\t\t\t// We can't make the button disabled using the disabled attribute, because it won't be focusable.\n\t\t\t\t\t// Though, shouldn't this condition be moved to the button controller?\n\t\t\t\t\tif ( this.isEnabled ) {\n\t\t\t\t\t\tthis.fire( 'execute' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Prevent the default when button is disabled, to block e.g.\n\t\t\t\t\t\t// automatic form submitting. See ckeditor/ckeditor5-link#74.\n\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tif ( this.icon ) {\n\t\t\tthis.iconView.bind( 'content' ).to( this, 'icon' );\n\t\t\tthis.children.add( this.iconView );\n\t\t}\n\n\t\tthis.children.add( this.tooltipView );\n\t\tthis.children.add( this.labelView );\n\n\t\tif ( this.withKeystroke ) {\n\t\t\tthis.children.add( this.keystrokeView );\n\t\t}\n\t}\n\n\t/**\n\t * Focuses the {@link #element} of the button.\n\t */\n\tfocus() {\n\t\tthis.element.focus();\n\t}\n\n\t/**\n\t * Creates a {@link module:ui/tooltip/tooltipview~TooltipView} instance and binds it with button\n\t * attributes.\n\t *\n\t * @private\n\t * @returns {module:ui/tooltip/tooltipview~TooltipView}\n\t */\n\t_createTooltipView() {\n\t\tconst tooltipView = new TooltipView();\n\n\t\ttooltipView.bind( 'text' ).to( this, '_tooltipString' );\n\t\ttooltipView.bind( 'position' ).to( this, 'tooltipPosition' );\n\n\t\treturn tooltipView;\n\t}\n\n\t/**\n\t * Creates a label view instance and binds it with button attributes.\n\t *\n\t * @private\n\t * @param {String} ariaLabelUid The aria label UID.\n\t * @returns {module:ui/view~View}\n\t */\n\t_createLabelView( ariaLabelUid ) {\n\t\tconst labelView = new View();\n\t\tconst bind = this.bindTemplate;\n\n\t\tlabelView.setTemplate( {\n\t\t\ttag: 'span',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-button__label'\n\t\t\t\t],\n\t\t\t\tstyle: bind.to( 'labelStyle' ),\n\t\t\t\tid: `ck-editor__aria-label_${ ariaLabelUid }`,\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttext: this.bindTemplate.to( 'label' )\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\t\treturn labelView;\n\t}\n\n\t/**\n\t * Creates a view that displays a keystroke next to a {@link #labelView label }\n\t * and binds it with button attributes.\n\t *\n\t * @private\n\t * @returns {module:ui/view~View}\n\t */\n\t_createKeystrokeView() {\n\t\tconst keystrokeView = new View();\n\n\t\tkeystrokeView.setTemplate( {\n\t\t\ttag: 'span',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-button__keystroke'\n\t\t\t\t]\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttext: this.bindTemplate.to( 'keystroke', text => getEnvKeystrokeText( text ) )\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\t\treturn keystrokeView;\n\t}\n\n\t/**\n\t * Gets the text for the {@link #tooltipView} from the combination of\n\t * {@link #tooltip}, {@link #label} and {@link #keystroke} attributes.\n\t *\n\t * @private\n\t * @see #tooltip\n\t * @see #_tooltipString\n\t * @param {Boolean|String|Function} tooltip Button tooltip.\n\t * @param {String} label Button label.\n\t * @param {String} keystroke Button keystroke.\n\t * @returns {String}\n\t */\n\t_getTooltipString( tooltip, label, keystroke ) {\n\t\tif ( tooltip ) {\n\t\t\tif ( typeof tooltip == 'string' ) {\n\t\t\t\treturn tooltip;\n\t\t\t} else {\n\t\t\t\tif ( keystroke ) {\n\t\t\t\t\tkeystroke = getEnvKeystrokeText( keystroke );\n\t\t\t\t}\n\n\t\t\t\tif ( tooltip instanceof Function ) {\n\t\t\t\t\treturn tooltip( label, keystroke );\n\t\t\t\t} else {\n\t\t\t\t\treturn `${ label }${ keystroke ? ` (${ keystroke })` : '' }`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn '';\n\t}\n}\n","export default \"<svg viewBox=\\\"0 0 10 10\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M.941 4.523a.75.75 0 111.06-1.06l3.006 3.005 3.005-3.005a.75.75 0 111.06 1.06l-3.549 3.55a.75.75 0 01-1.168-.136L.941 4.523z\\\"/></svg>\"","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/dropdown/button/dropdownbuttonview\n */\n\nimport ButtonView from '../../button/buttonview';\n\nimport dropdownArrowIcon from '../../../theme/icons/dropdown-arrow.svg';\nimport IconView from '../../icon/iconview';\n\n/**\n * The default dropdown button view class.\n *\n *\t\tconst view = new DropdownButtonView();\n *\n *\t\tview.set( {\n *\t\t\tlabel: 'A button',\n *\t\t\tkeystroke: 'Ctrl+B',\n *\t\t\ttooltip: true\n *\t\t} );\n *\n *\t\tview.render();\n *\n *\t\tdocument.body.append( view.element );\n *\n * Also see the {@link module:ui/dropdown/utils~createDropdown `createDropdown()` util}.\n *\n * @implements module:ui/dropdown/button/dropdownbutton~DropdownButton\n * @extends module:ui/button/buttonview~ButtonView\n */\nexport default class DropdownButtonView extends ButtonView {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * An icon that displays arrow to indicate a dropdown button.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/icon/iconview~IconView}\n\t\t */\n\t\tthis.arrowView = this._createArrowView();\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\t'aria-haspopup': true\n\t\t\t}\n\t\t} );\n\n\t\t// The DropdownButton interface expects the open event upon which will open the dropdown.\n\t\tthis.delegate( 'execute' ).to( this, 'open' );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tthis.children.add( this.arrowView );\n\t}\n\n\t/**\n\t * Creates a {@link module:ui/icon/iconview~IconView} instance as {@link #arrowView}.\n\t *\n\t * @private\n\t * @returns {module:ui/icon/iconview~IconView}\n\t */\n\t_createArrowView() {\n\t\tconst arrowView = new IconView();\n\n\t\tarrowView.content = dropdownArrowIcon;\n\n\t\tarrowView.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-dropdown__arrow'\n\t\t\t}\n\t\t} );\n\n\t\treturn arrowView;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/list/listview\n */\n\nimport View from '../view';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport FocusCycler from '../focuscycler';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\n\nimport '../../theme/components/list/list.css';\n\n/**\n * The list view class.\n *\n * @extends module:ui/view~View\n * @implements module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable\n */\nexport default class ListView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\t/**\n\t\t * Collection of the child list views.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.items = this.createCollection();\n\n\t\t/**\n\t\t * Tracks information about DOM focus in the list.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\t/**\n\t\t * Helps cycling over focusable {@link #items} in the list.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/focuscycler~FocusCycler}\n\t\t */\n\t\tthis._focusCycler = new FocusCycler( {\n\t\t\tfocusables: this.items,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate list items backwards using the arrowup key.\n\t\t\t\tfocusPrevious: 'arrowup',\n\n\t\t\t\t// Navigate toolbar items forwards using the arrowdown key.\n\t\t\t\tfocusNext: 'arrowdown',\n\t\t\t}\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'ul',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-reset',\n\t\t\t\t\t'ck-list'\n\t\t\t\t]\n\t\t\t},\n\n\t\t\tchildren: this.items\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\t// Items added before rendering should be known to the #focusTracker.\n\t\tfor ( const item of this.items ) {\n\t\t\tthis.focusTracker.add( item.element );\n\t\t}\n\n\t\tthis.items.on( 'add', ( evt, item ) => {\n\t\t\tthis.focusTracker.add( item.element );\n\t\t} );\n\n\t\tthis.items.on( 'remove', ( evt, item ) => {\n\t\t\tthis.focusTracker.remove( item.element );\n\t\t} );\n\n\t\t// Start listening for the keystrokes coming from #element.\n\t\tthis.keystrokes.listenTo( this.element );\n\t}\n\n\t/**\n\t * Focuses the first focusable in {@link #items}.\n\t */\n\tfocus() {\n\t\tthis._focusCycler.focusFirst();\n\t}\n\n\t/**\n\t * Focuses the last focusable in {@link #items}.\n\t */\n\tfocusLast() {\n\t\tthis._focusCycler.focusLast();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/list/listitemview\n */\n\nimport View from '../view';\n\n/**\n * The list item view class.\n *\n * @extends module:ui/view~View\n */\nexport default class ListItemView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * Collection of the child views inside of the list item {@link #element}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.children = this.createCollection();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'li',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-list__item'\n\t\t\t\t]\n\t\t\t},\n\n\t\t\tchildren: this.children\n\t\t} );\n\t}\n\n\t/**\n\t * Focuses the list item.\n\t */\n\tfocus() {\n\t\tthis.children.first.focus();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/list/listseparatorview\n */\n\nimport View from '../view';\n\n/**\n * The list separator view class.\n *\n * @extends module:ui/view~View\n */\nexport default class ListSeparatorView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'li',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-list__separator'\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/button/switchbuttonview\n */\n\nimport View from '../view';\nimport ButtonView from './buttonview';\n\nimport '../../theme/components/button/switchbutton.css';\n\n/**\n * The switch button view class.\n *\n *\t\tconst view = new SwitchButtonView();\n *\n *\t\tview.set( {\n *\t\t\twithText: true,\n *\t\t\tlabel: 'Switch me!'\n *\t\t} );\n *\n *\t\tview.render();\n *\n *\t\tdocument.body.append( view.element );\n *\n * @extends module:ui/button/buttonview~ButtonView\n */\nexport default class SwitchButtonView extends ButtonView {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tthis.isToggleable = true;\n\n\t\t/**\n\t\t * The toggle switch of the button.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/view~View} #toggleSwitchView\n\t\t */\n\t\tthis.toggleSwitchView = this._createToggleView();\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-switchbutton'\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tthis.children.add( this.toggleSwitchView );\n\t}\n\n\t/**\n\t * Creates a toggle child view.\n\t *\n\t * @private\n\t * @returns {module:ui/view~View}\n\t */\n\t_createToggleView() {\n\t\tconst toggleSwitchView = new View();\n\n\t\ttoggleSwitchView.setTemplate( {\n\t\t\ttag: 'span',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-button__toggle'\n\t\t\t\t],\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttag: 'span',\n\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t'ck',\n\t\t\t\t\t\t\t'ck-button__toggle__inner'\n\t\t\t\t\t\t],\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\t\treturn toggleSwitchView;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/bindings/clickoutsidehandler\n */\n\n/* global document */\n\n/**\n * Handles clicking **outside** of a specified set of elements, then fires an action.\n *\n * **Note**: Actually, the action is executed upon `mousedown`, not `click`. It prevents\n * certain issues when the user keeps holding the mouse button and the UI cannot react\n * properly.\n *\n * @param {Object} options Configuration options.\n * @param {module:utils/dom/emittermixin~Emitter} options.emitter The emitter to which this behavior\n * should be added.\n * @param {Function} options.activator Function returning a `Boolean`, to determine whether the handler is active.\n * @param {Array.<HTMLElement>} options.contextElements HTML elements that determine the scope of the\n * handler. Clicking any of them or their descendants will **not** fire the callback.\n * @param {Function} options.callback An action executed by the handler.\n */\nexport default function clickOutsideHandler( { emitter, activator, callback, contextElements } ) {\n\temitter.listenTo( document, 'mousedown', ( evt, { target } ) => {\n\t\tif ( !activator() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor ( const contextElement of contextElements ) {\n\t\t\tif ( contextElement.contains( target ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tcallback();\n\t} );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module ui/dropdown/utils\n */\nimport DropdownPanelView from './dropdownpanelview';\nimport DropdownView from './dropdownview';\nimport DropdownButtonView from './button/dropdownbuttonview';\nimport ToolbarView from '../toolbar/toolbarview';\nimport ListView from '../list/listview';\nimport ListItemView from '../list/listitemview';\nimport ListSeparatorView from '../list/listseparatorview';\nimport ButtonView from '../button/buttonview';\nimport SwitchButtonView from '../button/switchbuttonview';\nimport clickOutsideHandler from '../bindings/clickoutsidehandler';\nimport '../../theme/components/dropdown/toolbardropdown.css';\nimport '../../theme/components/dropdown/listdropdown.css';\n/**\n * A helper for creating dropdowns. It creates an instance of a {@link module:ui/dropdown/dropdownview~DropdownView dropdown},\n * with a {@link module:ui/dropdown/button/dropdownbutton~DropdownButton button},\n * {@link module:ui/dropdown/dropdownpanelview~DropdownPanelView panel} and all standard dropdown's behaviors.\n *\n * # Creating dropdowns\n *\n * By default, the default {@link module:ui/dropdown/button/dropdownbuttonview~DropdownButtonView} class is used as\n * definition of the button:\n *\n *\t\tconst dropdown = createDropdown( model );\n *\n *\t\t// Configure dropdown's button properties:\n *\t\tdropdown.buttonView.set( {\n *\t\t\tlabel: 'A dropdown',\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tdropdown.render();\n *\n *\t\t// Will render a dropdown labeled \"A dropdown\" with an empty panel.\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * You can also provide other button views (they need to implement the\n * {@link module:ui/dropdown/button/dropdownbutton~DropdownButton} interface). For instance, you can use\n * {@link module:ui/dropdown/button/splitbuttonview~SplitButtonView} to create a dropdown with a split button.\n *\n *\t\tconst dropdown = createDropdown( model, SplitButtonView );\n *\n *\t\t// Configure dropdown's button properties:\n *\t\tdropdown.buttonView.set( {\n *\t\t\tlabel: 'A dropdown',\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tdropdown.buttonView.on( 'execute', () => {\n *\t\t\t// Add the behavior of the \"action part\" of the split button.\n *\t\t\t// Split button consists of the \"action part\" and \"arrow part\".\n *\t\t\t// The arrow opens the dropdown while the action part can have some other behavior.\n * \t\t} );\n *\n *\t\tdropdown.render();\n *\n *\t\t// Will render a dropdown labeled \"A dropdown\" with an empty panel.\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * # Adding content to the dropdown's panel\n *\n * The content of the panel can be inserted directly into the `dropdown.panelView.element`:\n *\n *\t\tdropdown.panelView.element.textContent = 'Content of the panel';\n *\n * However, most of the time you will want to add there either a {@link module:ui/list/listview~ListView list of options}\n * or a list of buttons (i.e. a {@link module:ui/toolbar/toolbarview~ToolbarView toolbar}).\n * To simplify the task, you can use, respectively, {@link module:ui/dropdown/utils~addListToDropdown} or\n * {@link module:ui/dropdown/utils~addToolbarToDropdown} utils.\n *\n * @param {module:utils/locale~Locale} locale The locale instance.\n * @param {Function} ButtonClass The dropdown button view class. Needs to implement the\n * {@link module:ui/dropdown/button/dropdownbutton~DropdownButton} interface.\n * @returns {module:ui/dropdown/dropdownview~DropdownView} The dropdown view instance.\n */\nexport function createDropdown(locale, ButtonClass = DropdownButtonView) {\n    const buttonView = new ButtonClass(locale);\n    const panelView = new DropdownPanelView(locale);\n    const dropdownView = new DropdownView(locale, buttonView, panelView);\n    buttonView.bind('isEnabled').to(dropdownView);\n    if (buttonView instanceof DropdownButtonView) {\n        buttonView.bind('isOn').to(dropdownView, 'isOpen');\n    } else {\n        buttonView.arrowView.bind('isOn').to(dropdownView, 'isOpen');\n    }\n    addDefaultBehavior(dropdownView);\n    return dropdownView;\n}\n/**\n * Adds an instance of {@link module:ui/toolbar/toolbarview~ToolbarView} to a dropdown.\n *\n *\t\tconst buttons = [];\n *\n *\t\t// Either create a new ButtonView instance or create existing.\n *\t\tbuttons.push( new ButtonView() );\n *\t\tbuttons.push( editor.ui.componentFactory.get( 'someButton' ) );\n *\n *\t\tconst dropdown = createDropdown( locale );\n *\n *\t\taddToolbarToDropdown( dropdown, buttons );\n *\n *\t\tdropdown.toolbarView.isVertical = true;\n *\n *\t\t// Will render a vertical button dropdown labeled \"A button dropdown\"\n *\t\t// with a button group in the panel containing two buttons.\n *\t\tdropdown.render()\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * See {@link module:ui/dropdown/utils~createDropdown} and {@link module:ui/toolbar/toolbarview~ToolbarView}.\n *\n * @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView A dropdown instance to which `ToolbarView` will be added.\n * @param {Iterable.<module:ui/button/buttonview~ButtonView>} buttons\n */\nexport function addToolbarToDropdown(dropdownView, buttons) {\n    const locale = dropdownView.locale;\n    const t = locale.t;\n    const toolbarView = dropdownView.toolbarView = new ToolbarView(locale);\n    toolbarView.set('ariaLabel', t('bl'));\n    dropdownView.extendTemplate({ attributes: { class: ['ck-toolbar-dropdown'] } });\n    buttons.map(view => toolbarView.items.add(view));\n    dropdownView.panelView.children.add(toolbarView);\n    toolbarView.items.delegate('execute').to(dropdownView);\n}\n/**\n * Adds an instance of {@link module:ui/list/listview~ListView} to a dropdown.\n *\n *\t\tconst items = new Collection();\n *\n *\t\titems.add( {\n *\t\t\ttype: 'button',\n *\t\t\tmodel: new Model( {\n *\t\t\t\twithText: true,\n *\t\t\t\tlabel: 'First item',\n *\t\t\t\tlabelStyle: 'color: red'\n *\t\t\t} )\n *\t\t} );\n *\n *\t\titems.add( {\n *\t\t\t type: 'button',\n *\t\t\t model: new Model( {\n *\t\t\t\twithText: true,\n *\t\t\t\tlabel: 'Second item',\n *\t\t\t\tlabelStyle: 'color: green',\n *\t\t\t\tclass: 'foo'\n *\t\t\t} )\n *\t\t} );\n *\n *\t\tconst dropdown = createDropdown( locale );\n *\n *\t\taddListToDropdown( dropdown, items );\n *\n *\t\t// Will render a dropdown with a list in the panel containing two items.\n *\t\tdropdown.render()\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * The `items` collection passed to this methods controls the presence and attributes of respective\n * {@link module:ui/list/listitemview~ListItemView list items}.\n *\n *\n * See {@link module:ui/dropdown/utils~createDropdown} and {@link module:list/list~List}.\n *\n * @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView A dropdown instance to which `ListVIew` will be added.\n * @param {Iterable.<module:ui/dropdown/utils~ListDropdownItemDefinition>} items\n * A collection of the list item definitions to populate the list.\n */\nexport function addListToDropdown(dropdownView, items) {\n    const locale = dropdownView.locale;\n    const listView = dropdownView.listView = new ListView(locale);\n    listView.items.bindTo(items).using(({type, model}) => {\n        if (type === 'separator') {\n            return new ListSeparatorView(locale);\n        } else if (type === 'button' || type === 'switchbutton') {\n            const listItemView = new ListItemView(locale);\n            let buttonView;\n            if (type === 'button') {\n                buttonView = new ButtonView(locale);\n            } else {\n                buttonView = new SwitchButtonView(locale);\n            }\n            // Bind all model properties to the button view.\n            buttonView.bind(...Object.keys(model)).to(model);\n            buttonView.delegate('execute').to(listItemView);\n            listItemView.children.add(buttonView);\n            return listItemView;\n        }\n    });\n    dropdownView.panelView.children.add(listView);\n    listView.items.delegate('execute').to(dropdownView);\n}\n// Add a set of default behaviors to dropdown view.\n//\n// @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView\nfunction addDefaultBehavior(dropdownView) {\n    closeDropdownOnBlur(dropdownView);\n    closeDropdownOnExecute(dropdownView);\n    focusDropdownContentsOnArrows(dropdownView);\n}\n// Adds a behavior to a dropdownView that closes opened dropdown when user clicks outside the dropdown.\n//\n// @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView\nfunction closeDropdownOnBlur(dropdownView) {\n    dropdownView.on('render', () => {\n        clickOutsideHandler({\n            emitter: dropdownView,\n            activator: () => dropdownView.isOpen,\n            callback: () => {\n                dropdownView.isOpen = false;\n            },\n            contextElements: [dropdownView.element]\n        });\n    });\n}\n// Adds a behavior to a dropdownView that closes the dropdown view on \"execute\" event.\n//\n// @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView\nfunction closeDropdownOnExecute(dropdownView) {\n    // Close the dropdown when one of the list items has been executed.\n    dropdownView.on('execute', evt => {\n        // Toggling a switch button view should not close the dropdown.\n        if (evt.source instanceof SwitchButtonView) {\n            return;\n        }\n        dropdownView.isOpen = false;\n    });\n}\n// Adds a behavior to a dropdownView that focuses the dropdown's panel view contents on keystrokes.\n//\n// @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView\nfunction focusDropdownContentsOnArrows(dropdownView) {\n    // If the dropdown panel is already open, the arrow down key should focus the first child of the #panelView.\n    dropdownView.keystrokes.set('arrowdown', (data, cancel) => {\n        if (dropdownView.isOpen) {\n            dropdownView.panelView.focus();\n            cancel();\n        }\n    });\n    // If the dropdown panel is already open, the arrow up key should focus the last child of the #panelView.\n    dropdownView.keystrokes.set('arrowup', (data, cancel) => {\n        if (dropdownView.isOpen) {\n            dropdownView.panelView.focusLast();\n            cancel();\n        }\n    });\n}    /**\n * A definition of the list item used by the {@link module:ui/dropdown/utils~addListToDropdown}\n * utility.\n *\n * @typedef {Object} module:ui/dropdown/utils~ListDropdownItemDefinition\n *\n * @property {String} type Either `'separator'`, `'button'` or `'switchbutton'`.\n * @property {module:ui/model~Model} [model] Model of the item (when **not** `'separator'`).\n * Its properties fuel the newly created list item (or its children, depending on the `type`).\n */","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module ui/toolbar/toolbarview\n */\n/* globals console */\nimport View from '../view';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport FocusCycler from '../focuscycler';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\nimport ToolbarSeparatorView from './toolbarseparatorview';\nimport ResizeObserver from '@ckeditor/ckeditor5-utils/src/dom/resizeobserver';\nimport preventDefault from '../bindings/preventdefault.js';\nimport Rect from '@ckeditor/ckeditor5-utils/src/dom/rect';\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\nimport {\n    createDropdown,\n    addToolbarToDropdown\n} from '../dropdown/utils';\nimport { attachLinkToDocumentation } from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport verticalDotsIcon from '@ckeditor/ckeditor5-core/theme/icons/three-vertical-dots.svg';\nimport '../../theme/components/toolbar/toolbar.css';\n/**\n * The toolbar view class.\n *\n * @extends module:ui/view~View\n * @implements module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable\n */\nexport default class ToolbarView extends View {\n    /**\n\t * Creates an instance of the {@link module:ui/toolbar/toolbarview~ToolbarView} class.\n\t *\n\t * Also see {@link #render}.\n\t *\n\t * @param {module:utils/locale~Locale} locale The localization services instance.\n\t * @param {module:ui/toolbar/toolbarview~ToolbarOptions} [options] Configuration options of the toolbar.\n\t */\n    constructor(locale, options) {\n        super(locale);\n        const bind = this.bindTemplate;\n        const t = this.t;\n        /**\n\t\t * A reference to the options object passed to the constructor.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/toolbar/toolbarview~ToolbarOptions}\n\t\t */\n        this.options = options || {};\n        /**\n\t\t * Label used by assistive technologies to describe this toolbar element.\n\t\t *\n\t\t * @default 'Editor toolbar'\n\t\t * @member {String} #ariaLabel\n\t\t */\n        this.set('ariaLabel', t('bp'));\n        /**\n\t\t * A collection of toolbar items (buttons, dropdowns, etc.).\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n        this.items = this.createCollection();\n        /**\n\t\t * Tracks information about the DOM focus in the toolbar.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n        this.focusTracker = new FocusTracker();\n        /**\n\t\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}\n\t\t * to handle keyboard navigation in the toolbar.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n        this.keystrokes = new KeystrokeHandler();\n        /**\n\t\t * An additional CSS class added to the {@link #element}.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #class\n\t\t */\n        this.set('class');\n        /**\n\t\t * When set true, makes the toolbar look compact with {@link #element}.\n\t\t *\n\t\t * @observable\n\t\t * @default false\n\t\t * @member {String} #isCompact\n\t\t */\n        this.set('isCompact', false);\n        /**\n\t\t * A (child) view containing {@link #items toolbar items}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/toolbar/toolbarview~ItemsView}\n\t\t */\n        this.itemsView = new ItemsView(locale);\n        /**\n\t\t * A top–level collection aggregating building blocks of the toolbar.\n\t\t *\n\t\t *\t┌───────────────── ToolbarView ─────────────────┐\n\t\t *\t| ┌──────────────── #children ────────────────┐ |\n\t\t *\t| |   ┌──────────── #itemsView ───────────┐   | |\n\t\t *\t| |   | [ item1 ] [ item2 ] ... [ itemN ] |   | |\n\t\t *\t| |   └──────────────────────────────────-┘   | |\n\t\t *\t| └───────────────────────────────────────────┘ |\n\t\t *\t└───────────────────────────────────────────────┘\n\t\t *\n\t\t * By default, it contains the {@link #itemsView} but it can be extended with additional\n\t\t * UI elements when necessary.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n        this.children = this.createCollection();\n        this.children.add(this.itemsView);\n        /**\n\t\t * A collection of {@link #items} that take part in the focus cycling\n\t\t * (i.e. navigation using the keyboard). Usually, it contains a subset of {@link #items} with\n\t\t * some optional UI elements that also belong to the toolbar and should be focusable\n\t\t * by the user.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n        this.focusables = this.createCollection();\n        /**\n\t\t * Controls the orientation of toolbar items. Only available when\n\t\t * {@link module:ui/toolbar/toolbarview~ToolbarOptions#shouldGroupWhenFull dynamic items grouping}\n\t\t * is **disabled**.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isVertical\n\t\t */\n        /**\n\t\t * Helps cycling over {@link #focusables focusable items} in the toolbar.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/focuscycler~FocusCycler}\n\t\t */\n        this._focusCycler = new FocusCycler({\n            focusables: this.focusables,\n            focusTracker: this.focusTracker,\n            keystrokeHandler: this.keystrokes,\n            actions: {\n                // Navigate toolbar items backwards using the arrow[left,up] keys.\n                focusPrevious: [\n                    'arrowleft',\n                    'arrowup'\n                ],\n                // Navigate toolbar items forwards using the arrow[right,down] keys.\n                focusNext: [\n                    'arrowright',\n                    'arrowdown'\n                ]\n            }\n        });\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-toolbar',\n                    bind.to('class'),\n                    bind.if('isCompact', 'ck-toolbar_compact')\n                ],\n                role: 'toolbar',\n                'aria-label': bind.to('ariaLabel')\n            },\n            children: this.children,\n            on: {\n                // https://github.com/ckeditor/ckeditor5-ui/issues/206\n                mousedown: preventDefault(this)\n            }\n        });\n        /**\n\t\t * An instance of the active toolbar behavior that shapes its look and functionality.\n\t\t *\n\t\t * See {@link module:ui/toolbar/toolbarview~ToolbarBehavior} to learn more.\n\t\t *\n\t\t * @protected\n\t\t * @readonly\n\t\t * @member {module:ui/toolbar/toolbarview~ToolbarBehavior}\n\t\t */\n        this._behavior = this.options.shouldGroupWhenFull ? new DynamicGrouping(this) : new StaticLayout(this);\n    }\n    /**\n\t * @inheritDoc\n\t */\n    render() {\n        super.render();\n        // Children added before rendering should be known to the #focusTracker.\n        for (const item of this.items) {\n            this.focusTracker.add(item.element);\n        }\n        this.items.on('add', (evt, item) => {\n            this.focusTracker.add(item.element);\n        });\n        this.items.on('remove', (evt, item) => {\n            this.focusTracker.remove(item.element);\n        });\n        // Start listening for the keystrokes coming from #element.\n        this.keystrokes.listenTo(this.element);\n        this._behavior.render(this);\n    }\n    /**\n\t * @inheritDoc\n\t */\n    destroy() {\n        this._behavior.destroy();\n        return super.destroy();\n    }\n    /**\n\t * Focuses the first focusable in {@link #focusables}.\n\t */\n    focus() {\n        this._focusCycler.focusFirst();\n    }\n    /**\n\t * Focuses the last focusable in {@link #focusables}.\n\t */\n    focusLast() {\n        this._focusCycler.focusLast();\n    }\n    /**\n\t * A utility that expands the plain toolbar configuration into\n\t * {@link module:ui/toolbar/toolbarview~ToolbarView#items} using a given component factory.\n\t *\n\t * @param {Array.<String>} config The toolbar items configuration.\n\t * @param {module:ui/componentfactory~ComponentFactory} factory A factory producing toolbar items.\n\t */\n    fillFromConfig(config, factory) {\n        config.map(name => {\n            if (name == '|') {\n                this.items.add(new ToolbarSeparatorView());\n            } else if (factory.has(name)) {\n                this.items.add(factory.create(name));\n            } else {\n                /**\n\t\t\t\t * There was a problem processing the configuration of the toolbar. The item with the given\n\t\t\t\t * name does not exist so it was omitted when rendering the toolbar.\n\t\t\t\t *\n\t\t\t\t * This warning usually shows up when the {@link module:core/plugin~Plugin} which is supposed\n\t\t\t\t * to provide a toolbar item has not been loaded or there is a typo in the configuration.\n\t\t\t\t *\n\t\t\t\t * Make sure the plugin responsible for this toolbar item is loaded and the toolbar configuration\n\t\t\t\t * is correct, e.g. {@link module:basic-styles/bold~Bold} is loaded for the `'bold'` toolbar item.\n\t\t\t\t *\n\t\t\t\t * You can use the following snippet to retrieve all available toolbar items:\n\t\t\t\t *\n\t\t\t\t *\t\tArray.from( editor.ui.componentFactory.names() );\n\t\t\t\t *\n\t\t\t\t * @error toolbarview-item-unavailable\n\t\t\t\t * @param {String} name The name of the component.\n\t\t\t\t */\n                console.warn(attachLinkToDocumentation('toolbarview-item-unavailable: The requested toolbar item is unavailable.'), { name });\n            }\n        });\n    }\n}\n/**\n * An inner block of the {@link module:ui/toolbar/toolbarview~ToolbarView} hosting its\n * {@link module:ui/toolbar/toolbarview~ToolbarView#items}.\n *\n * @private\n * @extends module:ui/view~View\n */\nclass ItemsView extends View {\n    /**\n\t * @inheritDoc\n\t */\n    constructor(locale) {\n        super(locale);\n        /**\n\t\t * A collection of items (buttons, dropdowns, etc.).\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n        this.children = this.createCollection();\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-toolbar__items'\n                ]\n            },\n            children: this.children\n        });\n    }\n}\n/**\n * A toolbar behavior that makes it static and unresponsive to the changes of the environment.\n * At the same time, it also makes it possible to display a toolbar with a vertical layout\n * using the {@link module:ui/toolbar/toolbarview~ToolbarView#isVertical} property.\n *\n * @private\n * @implements module:ui/toolbar/toolbarview~ToolbarBehavior\n */\nclass StaticLayout {\n    /**\n\t * Creates an instance of the {@link module:ui/toolbar/toolbarview~StaticLayout} toolbar\n\t * behavior.\n\t *\n\t * @param {module:ui/toolbar/toolbarview~ToolbarView} view An instance of the toolbar that this behavior\n\t * is added to.\n\t */\n    constructor(view) {\n        const bind = view.bindTemplate;\n        // Static toolbar can be vertical when needed.\n        view.set('isVertical', false);\n        // 1:1 pass–through binding, all ToolbarView#items are visible.\n        view.itemsView.children.bindTo(view.items).using(item => item);\n        // 1:1 pass–through binding, all ToolbarView#items are focusable.\n        view.focusables.bindTo(view.items).using(item => item);\n        view.extendTemplate({\n            attributes: {\n                class: [// When vertical, the toolbar has an additional CSS class.\n                    bind.if('isVertical', 'ck-toolbar_vertical')]\n            }\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */\n    render() {\n    }\n    /**\n\t * @inheritDoc\n\t */\n    destroy() {\n    }\n}\n/**\n * A toolbar behavior that makes the items respond to changes in the geometry.\n *\n * In a nutshell, it groups {@link module:ui/toolbar/toolbarview~ToolbarView#items}\n * that do not fit visually into a single row of the toolbar (due to limited space).\n * Items that do not fit are aggregated in a dropdown displayed at the end of the toolbar.\n *\n *\t┌──────────────────────────────────────── ToolbarView ──────────────────────────────────────────┐\n *\t| ┌─────────────────────────────────────── #children ─────────────────────────────────────────┐ |\n *\t| |   ┌─────── #itemsView ────────┐ ┌──────────────────────┐ ┌── #groupedItemsDropdown ───┐   | |\n *\t| |   |       #ungroupedItems     | | ToolbarSeparatorView | |        #groupedItems       |   | |\n *\t| |   └──────────────────────────-┘ └──────────────────────┘ └────────────────────────────┘   | |\n *\t| |                                  \\---------- only when toolbar items overflow --------/    | |\n *\t| └───────────────────────────────────────────────────────────────────────────────────────────┘ |\n *\t└───────────────────────────────────────────────────────────────────────────────────────────────┘\n *\n * @private\n * @implements module:ui/toolbar/toolbarview~ToolbarBehavior\n */\nclass DynamicGrouping {\n    /**\n\t * Creates an instance of the {@link module:ui/toolbar/toolbarview~DynamicGrouping} toolbar\n\t * behavior.\n\t *\n\t * @param {module:ui/toolbar/toolbarview~ToolbarView} view An instance of the toolbar that this behavior\n\t * is added to.\n\t */\n    constructor(view) {\n        /**\n\t\t * A collection of toolbar children.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n        this.viewChildren = view.children;\n        /**\n\t\t * A collection of focusable toolbar elements.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n        this.viewFocusables = view.focusables;\n        /**\n\t\t * A view containing toolbar items.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/toolbar/toolbarview~ItemsView}\n\t\t */\n        this.viewItemsView = view.itemsView;\n        /**\n\t\t * Toolbar focus tracker.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n        this.viewFocusTracker = view.focusTracker;\n        /**\n\t\t * Toolbar locale.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/locale~Locale}\n\t\t */\n        this.viewLocale = view.locale;\n        /**\n\t\t * Toolbar element.\n\t\t *\n\t\t * @readonly\n\t\t * @member {HTMLElement} #viewElement\n\t\t */\n        /**\n\t\t * A subset of toolbar {@link module:ui/toolbar/toolbarview~ToolbarView#items}.\n\t\t * Aggregates items that fit into a single row of the toolbar and were not {@link #groupedItems grouped}\n\t\t * into a {@link #groupedItemsDropdown dropdown}. Items of this collection are displayed in the\n\t\t * {@link module:ui/toolbar/toolbarview~ToolbarView#itemsView}.\n\t\t *\n\t\t * When none of the {@link module:ui/toolbar/toolbarview~ToolbarView#items} were grouped, it\n\t\t * matches the {@link module:ui/toolbar/toolbarview~ToolbarView#items} collection in size and order.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n        this.ungroupedItems = view.createCollection();\n        /**\n\t\t * A subset of toolbar {@link module:ui/toolbar/toolbarview~ToolbarView#items}.\n\t\t * A collection of the toolbar items that do not fit into a single row of the toolbar.\n\t\t * Grouped items are displayed in a dedicated {@link #groupedItemsDropdown dropdown}.\n\t\t *\n\t\t * When none of the {@link module:ui/toolbar/toolbarview~ToolbarView#items} were grouped,\n\t\t * this collection is empty.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n        this.groupedItems = view.createCollection();\n        /**\n\t\t * The dropdown that aggregates {@link #groupedItems grouped items} that do not fit into a single\n\t\t * row of the toolbar. It is displayed on demand as the last of\n\t\t * {@link module:ui/toolbar/toolbarview~ToolbarView#children toolbar children} and offers another\n\t\t * (nested) toolbar which displays items that would normally overflow.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/dropdown/dropdownview~DropdownView}\n\t\t */\n        this.groupedItemsDropdown = this._createGroupedItemsDropdown();\n        /**\n\t\t * An instance of the resize observer that helps dynamically determine the geometry of the toolbar\n\t\t * and manage items that do not fit into a single row.\n\t\t *\n\t\t * **Note:** Created in {@link #_enableGroupingOnResize}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/dom/resizeobserver~ResizeObserver}\n\t\t */\n        this.resizeObserver = null;\n        /**\n\t\t * A cached value of the horizontal padding style used by {@link #_updateGrouping}\n\t\t * to manage the {@link module:ui/toolbar/toolbarview~ToolbarView#items} that do not fit into\n\t\t * a single toolbar line. This value can be reused between updates because it is unlikely that\n\t\t * the padding will change and re–using `Window.getComputedStyle()` is expensive.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number}\n\t\t */\n        this.cachedPadding = null;\n        // Only those items that were not grouped are visible to the user.\n        view.itemsView.children.bindTo(this.ungroupedItems).using(item => item);\n        // Make sure all #items visible in the main space of the toolbar are \"focuscycleable\".\n        this.ungroupedItems.on('add', this._updateFocusCycleableItems.bind(this));\n        this.ungroupedItems.on('remove', this._updateFocusCycleableItems.bind(this));\n        // Make sure the #groupedItemsDropdown is also included in cycling when it appears.\n        view.children.on('add', this._updateFocusCycleableItems.bind(this));\n        view.children.on('remove', this._updateFocusCycleableItems.bind(this));\n        // ToolbarView#items is dynamic. When an item is added, it should be automatically\n        // represented in either grouped or ungrouped items at the right index.\n        // In other words #items == concat( #ungroupedItems, #groupedItems )\n        // (in length and order).\n        view.items.on('add', (evt, item, index) => {\n            if (index > this.ungroupedItems.length) {\n                this.groupedItems.add(item, index - this.ungroupedItems.length);\n            } else {\n                this.ungroupedItems.add(item, index);\n            }\n            // When a new ungrouped item joins in and lands in #ungroupedItems, there's a chance it causes\n            // the toolbar to overflow.\n            this._updateGrouping();\n        });\n        // When an item is removed from ToolbarView#items, it should be automatically\n        // removed from either grouped or ungrouped items.\n        view.items.on('remove', (evt, item, index) => {\n            if (index > this.ungroupedItems.length) {\n                this.groupedItems.remove(item);\n            } else {\n                this.ungroupedItems.remove(item);\n            }\n            // Whether removed from grouped or ungrouped items, there is a chance\n            // some new space is available and we could do some ungrouping.\n            this._updateGrouping();\n        });\n        view.extendTemplate({\n            attributes: {\n                class: [// To group items dynamically, the toolbar needs a dedicated CSS class.\n                    'ck-toolbar_grouping']\n            }\n        });\n    }\n    /**\n\t * Enables dynamic items grouping based on the dimensions of the toolbar.\n\t *\n\t * @param {module:ui/toolbar/toolbarview~ToolbarView} view An instance of the toolbar that this behavior\n\t * is added to.\n\t */\n    render(view) {\n        this.viewElement = view.element;\n        this._enableGroupingOnResize();\n    }\n    /**\n\t * Cleans up the internals used by this behavior.\n\t */\n    destroy() {\n        // The dropdown may not be in ToolbarView#children at the moment of toolbar destruction\n        // so let's make sure it's actually destroyed along with the toolbar.\n        this.groupedItemsDropdown.destroy();\n        this.resizeObserver.destroy();\n    }\n    /**\n\t * When called, it will check if any of the {@link #ungroupedItems} do not fit into a single row of the toolbar,\n\t * and it will move them to the {@link #groupedItems} when it happens.\n\t *\n\t * At the same time, it will also check if there is enough space in the toolbar for the first of the\n\t * {@link #groupedItems} to be returned back to {@link #ungroupedItems} and still fit into a single row\n\t * without the toolbar wrapping.\n\t *\n\t * @protected\n\t */\n    _updateGrouping() {\n        // Do no grouping–related geometry analysis when the toolbar is detached from visible DOM,\n        // for instance before #render(), or after render but without a parent or a parent detached\n        // from DOM. DOMRects won't work anyway and there will be tons of warning in the console and\n        // nothing else.\n        if (!this.viewElement.ownerDocument.body.contains(this.viewElement)) {\n            return;\n        }\n        let wereItemsGrouped;\n        // Group #items as long as some wrap to the next row. This will happen, for instance,\n        // when the toolbar is getting narrow and there is not enough space to display all items in\n        // a single row.\n        while (this._areItemsOverflowing) {\n            this._groupLastItem();\n            wereItemsGrouped = true;\n        }\n        // If none were grouped now but there were some items already grouped before,\n        // then, what the hell, maybe let's see if some of them can be ungrouped. This happens when,\n        // for instance, the toolbar is stretching and there's more space in it than before.\n        if (!wereItemsGrouped && this.groupedItems.length) {\n            // Ungroup items as long as none are overflowing or there are none to ungroup left.\n            while (this.groupedItems.length && !this._areItemsOverflowing) {\n                this._ungroupFirstItem();\n            }\n            // If the ungrouping ended up with some item wrapping to the next row,\n            // put it back to the group toolbar (\"undo the last ungroup\"). We don't know whether\n            // an item will wrap or not until we ungroup it (that's a DOM/CSS thing) so this\n            // clean–up is vital for the algorithm.\n            if (this._areItemsOverflowing) {\n                this._groupLastItem();\n            }\n        }\n    }\n    /**\n\t * Returns `true` when {@link module:ui/toolbar/toolbarview~ToolbarView#element} children visually overflow,\n\t * for instance if the toolbar is narrower than its members. Returns `false` otherwise.\n\t *\n\t * @private\n\t * @type {Boolean}\n\t */\n    get _areItemsOverflowing() {\n        // An empty toolbar cannot overflow.\n        if (!this.ungroupedItems.length) {\n            return false;\n        }\n        const element = this.viewElement;\n        const uiLanguageDirection = this.viewLocale.uiLanguageDirection;\n        const lastChildRect = new Rect(element.lastChild);\n        const toolbarRect = new Rect(element);\n        if (!this.cachedPadding) {\n            const computedStyle = global.window.getComputedStyle(element);\n            const paddingProperty = uiLanguageDirection === 'ltr' ? 'paddingRight' : 'paddingLeft';\n            // parseInt() is essential because of quirky floating point numbers logic and DOM.\n            // If the padding turned out too big because of that, the grouped items dropdown would\n            // always look (from the Rect perspective) like it overflows (while it's not).\n            this.cachedPadding = Number.parseInt(computedStyle[paddingProperty]);\n        }\n        if (uiLanguageDirection === 'ltr') {\n            return lastChildRect.right > toolbarRect.right - this.cachedPadding;\n        } else {\n            return lastChildRect.left < toolbarRect.left + this.cachedPadding;\n        }\n    }\n    /**\n\t * Enables the functionality that prevents {@link #ungroupedItems} from overflowing (wrapping to the next row)\n\t * upon resize when there is little space available. Instead, the toolbar items are moved to the\n\t * {@link #groupedItems} collection and displayed in a dropdown at the end of the row (which has its own nested toolbar).\n\t *\n\t * When called, the toolbar will automatically analyze the location of its {@link #ungroupedItems} and \"group\"\n\t * them in the dropdown if necessary. It will also observe the browser window for size changes in\n\t * the future and respond to them by grouping more items or reverting already grouped back, depending\n\t * on the visual space available.\n\t *\n\t * @private\n\t */\n    _enableGroupingOnResize() {\n        let previousWidth;\n        // TODO: Consider debounce.\n        this.resizeObserver = new ResizeObserver(this.viewElement, entry => {\n            if (!previousWidth || previousWidth !== entry.contentRect.width) {\n                this._updateGrouping();\n                previousWidth = entry.contentRect.width;\n            }\n        });\n        this._updateGrouping();\n    }\n    /**\n\t * When called, it will remove the last item from {@link #ungroupedItems} and move it back\n\t * to the {@link #groupedItems} collection.\n\t *\n\t * The opposite of {@link #_ungroupFirstItem}.\n\t *\n\t * @private\n\t */\n    _groupLastItem() {\n        if (!this.groupedItems.length) {\n            this.viewChildren.add(new ToolbarSeparatorView());\n            this.viewChildren.add(this.groupedItemsDropdown);\n            this.viewFocusTracker.add(this.groupedItemsDropdown.element);\n        }\n        this.groupedItems.add(this.ungroupedItems.remove(this.ungroupedItems.last), 0);\n    }\n    /**\n\t * Moves the very first item belonging to {@link #groupedItems} back\n\t * to the {@link #ungroupedItems} collection.\n\t *\n\t * The opposite of {@link #_groupLastItem}.\n\t *\n\t * @private\n\t */\n    _ungroupFirstItem() {\n        this.ungroupedItems.add(this.groupedItems.remove(this.groupedItems.first));\n        if (!this.groupedItems.length) {\n            this.viewChildren.remove(this.groupedItemsDropdown);\n            this.viewChildren.remove(this.viewChildren.last);\n            this.viewFocusTracker.remove(this.groupedItemsDropdown.element);\n        }\n    }\n    /**\n\t * Creates the {@link #groupedItemsDropdown} that hosts the members of the {@link #groupedItems}\n\t * collection when there is not enough space in the toolbar to display all items in a single row.\n\t *\n\t * @private\n\t * @returns {module:ui/dropdown/dropdownview~DropdownView}\n\t */\n    _createGroupedItemsDropdown() {\n        const locale = this.viewLocale;\n        const t = locale.t;\n        const dropdown = createDropdown(locale);\n        dropdown.class = 'ck-toolbar__grouped-dropdown';\n        // Make sure the dropdown never sticks out to the left/right. It should be under the main toolbar.\n        // (https://github.com/ckeditor/ckeditor5/issues/5608)\n        dropdown.panelPosition = locale.uiLanguageDirection === 'ltr' ? 'sw' : 'se';\n        addToolbarToDropdown(dropdown, []);\n        dropdown.buttonView.set({\n            label: t('bq'),\n            tooltip: true,\n            icon: verticalDotsIcon\n        });\n        // 1:1 pass–through binding.\n        dropdown.toolbarView.items.bindTo(this.groupedItems).using(item => item);\n        return dropdown;\n    }\n    /**\n\t * Updates the {@link module:ui/toolbar/toolbarview~ToolbarView#focusables focus–cycleable items}\n\t * collection so it represents the up–to–date state of the UI from the perspective of the user.\n\t *\n\t * For instance, the {@link #groupedItemsDropdown} can show up and hide but when it is visible,\n\t * it must be subject to focus cycling in the toolbar.\n\t *\n\t * See the {@link module:ui/toolbar/toolbarview~ToolbarView#focusables collection} documentation\n\t * to learn more about the purpose of this method.\n\t *\n\t * @private\n\t */\n    _updateFocusCycleableItems() {\n        this.viewFocusables.clear();\n        this.ungroupedItems.map(item => {\n            this.viewFocusables.add(item);\n        });\n        if (this.groupedItems.length) {\n            this.viewFocusables.add(this.groupedItemsDropdown);\n        }\n    }\n}    /**\n * Options passed to the {@link module:ui/toolbar/toolbarview~ToolbarView#constructor} of the toolbar.\n *\n * @interface module:ui/toolbar/toolbarview~ToolbarOptions\n */\n     /**\n * When set to `true`, the toolbar will automatically group {@link module:ui/toolbar/toolbarview~ToolbarView#items} that\n * would normally wrap to the next line when there is not enough space to display them in a single row, for\n * instance, if the parent container of the toolbar is narrow.\n *\n * @member {Boolean} module:ui/toolbar/toolbarview~ToolbarOptions#shouldGroupWhenFull\n */\n     /**\n * A class interface defining the behavior of the {@link module:ui/toolbar/toolbarview~ToolbarView}.\n *\n * Toolbar behaviors extend its look and functionality and have an impact on the\n * {@link module:ui/toolbar/toolbarview~ToolbarView#element} template or\n * {@link module:ui/toolbar/toolbarview~ToolbarView#render rendering}. They can be enabled\n * conditionally, e.g. depending on the configuration of the toolbar.\n *\n * @private\n * @interface module:ui/toolbar/toolbarview~ToolbarBehavior\n */\n     /**\n * Creates a new toolbar behavior instance.\n *\n * The instance is created in the {@link module:ui/toolbar/toolbarview~ToolbarView#constructor} of the toolbar.\n * This is the right place to extend the {@link module:ui/toolbar/toolbarview~ToolbarView#template} of\n * the toolbar, define extra toolbar properties, etc.\n *\n * @method #constructor\n * @param {module:ui/toolbar/toolbarview~ToolbarView} view An instance of the toolbar that this behavior is added to.\n */\n     /**\n * A method called after the toolbar has been {@link module:ui/toolbar/toolbarview~ToolbarView#render rendered}.\n * It can be used to, for example, customize the behavior of the toolbar when its {@link module:ui/toolbar/toolbarview~ToolbarView#element}\n * is available.\n *\n * @readonly\n * @member {Function} #render\n * @param {module:ui/toolbar/toolbarview~ToolbarView} view An instance of the toolbar being rendered.\n */\n     /**\n * A method called after the toolbar has been {@link module:ui/toolbar/toolbarview~ToolbarView#destroy destroyed}.\n * It allows cleaning up after the toolbar behavior, for instance, this is the right place to detach\n * event listeners, free up references, etc.\n *\n * @readonly\n * @member {Function} #destroy\n */","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/bindings/preventdefault\n */\n\n/**\n * A helper which executes a native `Event.preventDefault()` if the target of an event equals the\n * {@link module:ui/view~View#element element of the view}. It shortens the definition of a\n * {@link module:ui/view~View#template template}.\n *\n *\t\t// In a class extending View.\n *\t\timport preventDefault from '@ckeditor/ckeditor5-ui/src/bindings/preventdefault';\n *\n *\t\t// ...\n *\n *\t\tthis.setTemplate( {\n *\t\t\ttag: 'div',\n *\n *\t\t\ton: {\n *\t\t\t\t// Prevent the default mousedown action on this view.\n *\t\t\t\tmousedown: preventDefault( this )\n *\t\t\t}\n *\t\t} );\n *\n * @param {module:ui/view~View} view View instance that defines the template.\n * @returns {module:ui/template~TemplateToBinding}\n */\nexport default function preventDefault( view ) {\n\treturn view.bindTemplate.to( evt => {\n\t\tif ( evt.target === view.element ) {\n\t\t\tevt.preventDefault();\n\t\t}\n\t} );\n}\n","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle cx=\\\"9.5\\\" cy=\\\"4.5\\\" r=\\\"1.5\\\"/><circle cx=\\\"9.5\\\" cy=\\\"10.5\\\" r=\\\"1.5\\\"/><circle cx=\\\"9.5\\\" cy=\\\"16.5\\\" r=\\\"1.5\\\"/></svg>\"","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module editor-classic/classiceditoruiview\n */\n\nimport BoxedEditorUIView from '@ckeditor/ckeditor5-ui/src/editorui/boxed/boxededitoruiview';\nimport InlineEditableUIView from '@ckeditor/ckeditor5-ui/src/editableui/inline/inlineeditableuiview';\nimport StickyPanelView from '@ckeditor/ckeditor5-ui/src/panel/sticky/stickypanelview';\nimport ToolbarView from '@ckeditor/ckeditor5-ui/src/toolbar/toolbarview';\n\nimport '../theme/classiceditor.css';\n\n/**\n * Classic editor UI view. Uses an inline editable and a sticky toolbar, all\n * enclosed in a boxed UI view.\n *\n * @extends module:ui/editorui/boxed/boxededitoruiview~BoxedEditorUIView\n */\nexport default class ClassicEditorUIView extends BoxedEditorUIView {\n\t/**\n\t * Creates an instance of the classic editor UI view.\n\t *\n\t * @param {module:utils/locale~Locale} locale The {@link module:core/editor/editor~Editor#locale} instance.\n\t * @param {module:engine/view/view~View} editingView The editing view instance this view is related to.\n\t * @param {Object} [options={}] Configuration options fo the view instance.\n\t * @param {Boolean} [options.shouldToolbarGroupWhenFull] When set `true` enables automatic items grouping\n\t * in the main {@link module:editor-classic/classiceditoruiview~ClassicEditorUIView#toolbar toolbar}.\n\t * See {@link module:ui/toolbar/toolbarview~ToolbarOptions#shouldGroupWhenFull} to learn more.\n\t */\n\tconstructor( locale, editingView, options = {} ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * Sticky panel view instance. This is a parent view of a {@link #toolbar}\n\t\t * that makes toolbar sticky.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/panel/sticky/stickypanelview~StickyPanelView}\n\t\t */\n\t\tthis.stickyPanel = new StickyPanelView( locale );\n\n\t\t/**\n\t\t * Toolbar view instance.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/toolbar/toolbarview~ToolbarView}\n\t\t */\n\t\tthis.toolbar = new ToolbarView( locale, {\n\t\t\tshouldGroupWhenFull: options.shouldToolbarGroupWhenFull\n\t\t} );\n\n\t\t/**\n\t\t * Editable UI view.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/editableui/inline/inlineeditableuiview~InlineEditableUIView}\n\t\t */\n\t\tthis.editable = new InlineEditableUIView( locale, editingView );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\t// Set toolbar as a child of a stickyPanel and makes toolbar sticky.\n\t\tthis.stickyPanel.content.add( this.toolbar );\n\n\t\tthis.top.add( this.stickyPanel );\n\t\tthis.main.add( this.editable );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module editor-classic/classiceditor\n */\n\nimport Editor from '@ckeditor/ckeditor5-core/src/editor/editor';\nimport DataApiMixin from '@ckeditor/ckeditor5-core/src/editor/utils/dataapimixin';\nimport ElementApiMixin from '@ckeditor/ckeditor5-core/src/editor/utils/elementapimixin';\nimport attachToForm from '@ckeditor/ckeditor5-core/src/editor/utils/attachtoform';\nimport HtmlDataProcessor from '@ckeditor/ckeditor5-engine/src/dataprocessor/htmldataprocessor';\nimport ClassicEditorUI from './classiceditorui';\nimport ClassicEditorUIView from './classiceditoruiview';\nimport getDataFromElement from '@ckeditor/ckeditor5-utils/src/dom/getdatafromelement';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport { isElement } from 'lodash-es';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * The {@glink builds/guides/overview#classic-editor classic editor} implementation.\n * It uses an inline editable and a sticky toolbar, all enclosed in a boxed UI.\n * See the {@glink examples/builds/classic-editor demo}.\n *\n * In order to create a classic editor instance, use the static\n * {@link module:editor-classic/classiceditor~ClassicEditor.create `ClassicEditor.create()`} method.\n *\n * # Classic editor and classic build\n *\n * The classic editor can be used directly from source (if you installed the\n * [`@ckeditor/ckeditor5-editor-classic`](https://www.npmjs.com/package/@ckeditor/ckeditor5-editor-classic) package)\n * but it is also available in the {@glink builds/guides/overview#classic-editor classic build}.\n *\n * {@glink builds/guides/overview Builds} are ready-to-use editors with plugins bundled in. When using the editor from\n * source you need to take care of loading all plugins by yourself\n * (through the {@link module:core/editor/editorconfig~EditorConfig#plugins `config.plugins`} option).\n * Using the editor from source gives much better flexibility and allows easier customization.\n *\n * Read more about initializing the editor from source or as a build in\n * {@link module:editor-classic/classiceditor~ClassicEditor.create `ClassicEditor.create()`}.\n *\n * @mixes module:core/editor/utils/dataapimixin~DataApiMixin\n * @mixes module:core/editor/utils/elementapimixin~ElementApiMixin\n * @implements module:core/editor/editorwithui~EditorWithUI\n * @extends module:core/editor/editor~Editor\n */\nexport default class ClassicEditor extends Editor {\n\t/**\n\t * Creates an instance of the classic editor.\n\t *\n\t * **Note:** do not use the constructor to create editor instances. Use the static\n\t * {@link module:editor-classic/classiceditor~ClassicEditor.create `ClassicEditor.create()`} method instead.\n\t *\n\t * @protected\n\t * @param {HTMLElement|String} sourceElementOrData The DOM element that will be the source for the created editor\n\t * or the editor's initial data. For more information see\n\t * {@link module:editor-classic/classiceditor~ClassicEditor.create `ClassicEditor.create()`}.\n\t * @param {module:core/editor/editorconfig~EditorConfig} config The editor configuration.\n\t */\n\tconstructor( sourceElementOrData, config ) {\n\t\tsuper( config );\n\n\t\tif ( isElement( sourceElementOrData ) ) {\n\t\t\tthis.sourceElement = sourceElementOrData;\n\t\t}\n\n\t\tthis.data.processor = new HtmlDataProcessor();\n\n\t\tthis.model.document.createRoot();\n\n\t\tconst shouldToolbarGroupWhenFull = !this.config.get( 'toolbar.shouldNotGroupWhenFull' );\n\t\tconst view = new ClassicEditorUIView( this.locale, this.editing.view, {\n\t\t\tshouldToolbarGroupWhenFull\n\t\t} );\n\n\t\tthis.ui = new ClassicEditorUI( this, view );\n\n\t\tattachToForm( this );\n\t}\n\n\t/**\n\t * Destroys the editor instance, releasing all resources used by it.\n\t *\n\t * Updates the editor's source element with the data.\n\t *\n\t * @returns {Promise}\n\t */\n\tdestroy() {\n\t\tif ( this.sourceElement ) {\n\t\t\tthis.updateSourceElement();\n\t\t}\n\n\t\tthis.ui.destroy();\n\n\t\treturn super.destroy();\n\t}\n\n\t/**\n\t * Creates a new classic editor instance.\n\t *\n\t * There are three ways how the editor can be initialized.\n\t *\n\t * # Replacing a DOM element (and loading data from it)\n\t *\n\t * You can initialize the editor using an existing DOM element:\n\t *\n\t *\t\tClassicEditor\n\t *\t\t\t.create( document.querySelector( '#editor' ) )\n\t *\t\t\t.then( editor => {\n\t *\t\t\t\tconsole.log( 'Editor was initialized', editor );\n\t *\t\t\t} )\n\t *\t\t\t.catch( err => {\n\t *\t\t\t\tconsole.error( err.stack );\n\t *\t\t\t} );\n\t *\n\t * The element's content will be used as the editor data and the element will be replaced by the editor UI.\n\t *\n\t * # Creating a detached editor\n\t *\n\t * Alternatively, you can initialize the editor by passing the initial data directly as a string.\n\t * In this case, the editor will render an element that must be inserted into the DOM:\n\t *\n\t *\t\tClassicEditor\n\t *\t\t\t.create( '<p>Hello world!</p>' )\n\t *\t\t\t.then( editor => {\n\t *\t\t\t\tconsole.log( 'Editor was initialized', editor );\n\t *\n\t *\t\t\t\t// Initial data was provided so the editor UI element needs to be added manually to the DOM.\n\t *\t\t\t\tdocument.body.appendChild( editor.ui.element );\n\t *\t\t\t} )\n\t *\t\t\t.catch( err => {\n\t *\t\t\t\tconsole.error( err.stack );\n\t *\t\t\t} );\n\t *\n\t * This lets you dynamically append the editor to your web page whenever it is convenient for you. You may use this method if your\n\t * web page content is generated on the client side and the DOM structure is not ready at the moment when you initialize the editor.\n\t *\n\t * # Replacing a DOM element (and data provided in `config.initialData`)\n\t *\n\t * You can also mix these two ways by providing a DOM element to be used and passing the initial data through the configuration:\n\t *\n\t *\t\tClassicEditor\n\t *\t\t\t.create( document.querySelector( '#editor' ), {\n\t *\t\t\t\tinitialData: '<h2>Initial data</h2><p>Foo bar.</p>'\n\t *\t\t\t} )\n\t *\t\t\t.then( editor => {\n\t *\t\t\t\tconsole.log( 'Editor was initialized', editor );\n\t *\t\t\t} )\n\t *\t\t\t.catch( err => {\n\t *\t\t\t\tconsole.error( err.stack );\n\t *\t\t\t} );\n\t *\n\t * This method can be used to initialize the editor on an existing element with the specified content in case if your integration\n\t * makes it difficult to set the content of the source element.\n\t *\n\t * Note that an error will be thrown if you pass the initial data both as the first parameter and also in the configuration.\n\t *\n\t * # Configuring the editor\n\t *\n\t * See the {@link module:core/editor/editorconfig~EditorConfig editor configuration documentation} to learn more about\n\t * customizing plugins, toolbar and more.\n\t *\n\t * # Using the editor from source\n\t *\n\t * The code samples listed in the previous sections of this documentation assume that you are using an\n\t * {@glink builds/guides/overview editor build} (for example – `@ckeditor/ckeditor5-build-classic`).\n\t *\n\t * If you want to use the classic editor from source (`@ckeditor/ckeditor5-editor-classic/src/classiceditor`),\n\t * you need to define the list of\n\t * {@link module:core/editor/editorconfig~EditorConfig#plugins plugins to be initialized} and\n\t * {@link module:core/editor/editorconfig~EditorConfig#toolbar toolbar items}. Read more about using the editor from\n\t * source in the {@glink builds/guides/integration/advanced-setup \"Advanced setup\" guide}.\n\t *\n\t * @param {HTMLElement|String} sourceElementOrData The DOM element that will be the source for the created editor\n\t * or the editor's initial data.\n\t *\n\t * If a DOM element is passed, its content will be automatically loaded to the editor upon initialization\n\t * and the {@link module:editor-classic/classiceditorui~ClassicEditorUI#element editor element} will replace the passed element\n\t * in the DOM (the original one will be hidden and the editor will be injected next to it).\n\t *\n\t * Moreover, the editor data will be set back to the original element once the editor is destroyed and when a form, in which\n\t * this element is contained, is submitted (if the original element is a `<textarea>`). This ensures seamless integration with native\n\t * web forms.\n\t *\n\t * If the initial data is passed, a detached editor will be created. In this case you need to insert it into the DOM manually.\n\t * It is available under the {@link module:editor-classic/classiceditorui~ClassicEditorUI#element `editor.ui.element`} property.\n\t *\n\t * @param {module:core/editor/editorconfig~EditorConfig} [config] The editor configuration.\n\t * @returns {Promise} A promise resolved once the editor is ready. The promise resolves with the created editor instance.\n\t */\n\tstatic create( sourceElementOrData, config = {} ) {\n\t\treturn new Promise( resolve => {\n\t\t\tconst editor = new this( sourceElementOrData, config );\n\n\t\t\tresolve(\n\t\t\t\teditor.initPlugins()\n\t\t\t\t\t.then( () => editor.ui.init( isElement( sourceElementOrData ) ? sourceElementOrData : null ) )\n\t\t\t\t\t.then( () => {\n\t\t\t\t\t\tif ( !isElement( sourceElementOrData ) && config.initialData ) {\n\t\t\t\t\t\t\t// Documented in core/editor/editorconfig.jdoc.\n\t\t\t\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t\t\t\t'editor-create-initial-data: ' +\n\t\t\t\t\t\t\t\t'The config.initialData option cannot be used together with initial data passed in Editor.create().',\n\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst initialData = config.initialData || getInitialData( sourceElementOrData );\n\n\t\t\t\t\t\treturn editor.data.init( initialData );\n\t\t\t\t\t} )\n\t\t\t\t\t.then( () => editor.fire( 'ready' ) )\n\t\t\t\t\t.then( () => editor )\n\t\t\t);\n\t\t} );\n\t}\n}\n\nmix( ClassicEditor, DataApiMixin );\nmix( ClassicEditor, ElementApiMixin );\n\nfunction getInitialData( sourceElementOrData ) {\n\treturn isElement( sourceElementOrData ) ? getDataFromElement( sourceElementOrData ) : sourceElementOrData;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport { isFunction } from 'lodash-es';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * @module core/editor/utils/attachtoform\n */\n\n/**\n * Checks if the editor is initialized on a `<textarea>` element that belongs to a form. If yes, it updates the editor's element\n * content before submitting the form.\n *\n * This helper requires the {@link module:core/editor/utils/elementapimixin~ElementApi ElementApi interface}.\n *\n * @param {module:core/editor/editor~Editor} editor Editor instance.\n */\nexport default function attachToForm( editor ) {\n\tif ( !isFunction( editor.updateSourceElement ) ) {\n\t\t/**\n\t\t * The editor passed to `attachToForm()` must implement the\n\t\t * {@link module:core/editor/utils/elementapimixin~ElementApi} interface.\n\t\t *\n\t\t * @error attachtoform-missing-elementapi-interface\n\t\t */\n\t\tthrow new CKEditorError(\n\t\t\t'attachtoform-missing-elementapi-interface: Editor passed to attachToForm() must implement ElementApi.',\n\t\t\teditor\n\t\t);\n\t}\n\n\tconst sourceElement = editor.sourceElement;\n\n\t// Only when replacing a textarea which is inside of a form element.\n\tif ( sourceElement && sourceElement.tagName.toLowerCase() === 'textarea' && sourceElement.form ) {\n\t\tlet originalSubmit;\n\t\tconst form = sourceElement.form;\n\t\tconst onSubmit = () => editor.updateSourceElement();\n\n\t\t// Replace the original form#submit() to call a custom submit function first.\n\t\t// Check if #submit is a function because the form might have an input named \"submit\".\n\t\tif ( isFunction( form.submit ) ) {\n\t\t\toriginalSubmit = form.submit;\n\n\t\t\tform.submit = () => {\n\t\t\t\tonSubmit();\n\t\t\t\toriginalSubmit.apply( form );\n\t\t\t};\n\t\t}\n\n\t\t// Update the replaced textarea with data before each form#submit event.\n\t\tform.addEventListener( 'submit', onSubmit );\n\n\t\t// Remove the submit listener and revert the original submit method on\n\t\t// editor#destroy.\n\t\teditor.on( 'destroy', () => {\n\t\t\tform.removeEventListener( 'submit', onSubmit );\n\n\t\t\tif ( originalSubmit ) {\n\t\t\t\tform.submit = originalSubmit;\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals HTMLTextAreaElement */\n\n/**\n * @module utils/dom/getdatafromelement\n */\n\n/**\n * Gets data from a given source element.\n *\n * @param {HTMLElement} el The element from which the data will be retrieved.\n * @returns {String} The data string.\n */\nexport default function getDataFromElement( el ) {\n\tif ( el instanceof HTMLTextAreaElement ) {\n\t\treturn el.value;\n\t}\n\n\treturn el.innerHTML;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/plugin\n */\n\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * The base class for CKEditor plugin classes.\n *\n * @implements module:core/plugin~PluginInterface\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\t/**\n\t\t * The editor instance.\n\t\t *\n\t\t * Note that most editors implement the {@link module:core/editor/editorwithui~EditorWithUI} interface in addition\n\t\t * to the base {@link module:core/editor/editor~Editor} interface. However, editors with an external UI\n\t\t * (i.e. Bootstrap-based) or a headless editor may not implement the {@link module:core/editor/editorwithui~EditorWithUI}\n\t\t * interface.\n\t\t *\n\t\t * Because of above, to make plugins more universal, it is recommended to split features into:\n\t\t *  - The \"editing\" part that only uses the {@link module:core/editor/editor~Editor} interface.\n\t\t *  - The \"UI\" part that uses both the {@link module:core/editor/editor~Editor} interface and\n\t\t *  the {@link module:core/editor/editorwithui~EditorWithUI} interface.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/editor/editor~Editor} #editor\n\t\t */\n\t\tthis.editor = editor;\n\n\t\t/**\n\t\t * Flag indicating whether a plugin is enabled or disabled.\n\t\t * A disabled plugin will not transform text.\n\t\t *\n\t\t * Plugin can be simply disabled like that:\n\t\t *\n\t\t *\t\t// Disable the plugin so that no toolbars are visible.\n\t\t *\t\teditor.plugins.get( 'TextTransformation' ).isEnabled = false;\n\t\t *\n\t\t * You can also use {@link #forceDisabled} method.\n\t\t *\n\t\t * @observable\n\t\t * @readonly\n\t\t * @member {Boolean} #isEnabled\n\t\t */\n\t\tthis.set( 'isEnabled', true );\n\n\t\t/**\n\t\t * Holds identifiers for {@link #forceDisabled} mechanism.\n\t\t *\n\t\t * @type {Set.<String>}\n\t\t * @private\n\t\t */\n\t\tthis._disableStack = new Set();\n\t}\n\n\t/**\n\t * Disables the plugin.\n\t *\n\t * Plugin may be disabled by multiple features or algorithms (at once). When disabling a plugin, unique id should be passed\n\t * (e.g. feature name). The same identifier should be used when {@link #clearForceDisabled enabling back} the plugin.\n\t * The plugin becomes enabled only after all features {@link #clearForceDisabled enabled it back}.\n\t *\n\t * Disabling and enabling a plugin:\n\t *\n\t *\t\tplugin.isEnabled; // -> true\n\t *\t\tplugin.forceDisabled( 'MyFeature' );\n\t *\t\tplugin.isEnabled; // -> false\n\t *\t\tplugin.clearForceDisabled( 'MyFeature' );\n\t *\t\tplugin.isEnabled; // -> true\n\t *\n\t * Plugin disabled by multiple features:\n\t *\n\t *\t\tplugin.forceDisabled( 'MyFeature' );\n\t *\t\tplugin.forceDisabled( 'OtherFeature' );\n\t *\t\tplugin.clearForceDisabled( 'MyFeature' );\n\t *\t\tplugin.isEnabled; // -> false\n\t *\t\tplugin.clearForceDisabled( 'OtherFeature' );\n\t *\t\tplugin.isEnabled; // -> true\n\t *\n\t * Multiple disabling with the same identifier is redundant:\n\t *\n\t *\t\tplugin.forceDisabled( 'MyFeature' );\n\t *\t\tplugin.forceDisabled( 'MyFeature' );\n\t *\t\tplugin.clearForceDisabled( 'MyFeature' );\n\t *\t\tplugin.isEnabled; // -> true\n\t *\n\t * **Note:** some plugins or algorithms may have more complex logic when it comes to enabling or disabling certain plugins,\n\t * so the plugin might be still disabled after {@link #clearForceDisabled} was used.\n\t *\n\t * @param {String} id Unique identifier for disabling. Use the same id when {@link #clearForceDisabled enabling back} the plugin.\n\t */\n\tforceDisabled( id ) {\n\t\tthis._disableStack.add( id );\n\n\t\tif ( this._disableStack.size == 1 ) {\n\t\t\tthis.on( 'set:isEnabled', forceDisable, { priority: 'highest' } );\n\t\t\tthis.isEnabled = false;\n\t\t}\n\t}\n\n\t/**\n\t * Clears forced disable previously set through {@link #forceDisabled}. See {@link #forceDisabled}.\n\t *\n\t * @param {String} id Unique identifier, equal to the one passed in {@link #forceDisabled} call.\n\t */\n\tclearForceDisabled( id ) {\n\t\tthis._disableStack.delete( id );\n\n\t\tif ( this._disableStack.size == 0 ) {\n\t\t\tthis.off( 'set:isEnabled', forceDisable );\n\t\t\tthis.isEnabled = true;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get isContextPlugin() {\n\t\treturn false;\n\t}\n}\n\nmix( Plugin, ObservableMixin );\n\n/**\n * The base interface for CKEditor plugins.\n *\n * In its minimal form a plugin can be a simple function that accepts {@link module:core/editor/editor~Editor the editor}\n * as a parameter:\n *\n *\t\t// A simple plugin that enables a data processor.\n *\t\tfunction MyPlugin( editor ) {\n *\t\t\teditor.data.processor = new MyDataProcessor();\n *\t\t}\n *\n * In most cases however, you will want to inherit from the {@link module:core/plugin~Plugin} class which implements the\n * {@link module:utils/observablemixin~ObservableMixin} and is, therefore, more convenient:\n *\n *\t\tclass MyPlugin extends Plugin {\n *\t\t\tinit() {\n *\t\t\t\t// `listenTo()` and `editor` are available thanks to `Plugin`.\n *\t\t\t\t// By using `listenTo()` you will ensure that the listener is removed when\n *\t\t\t\t// the plugin is destroyed.\n *\t\t\t\tthis.listenTo( this.editor.data, 'ready', () => {\n *\t\t\t\t\t// Do something when the data is ready.\n *\t\t\t\t} );\n *\t\t\t}\n *\t\t}\n *\n * The plugin can also implement methods (e.g. {@link module:core/plugin~PluginInterface#init `init()`} or\n * {@link module:core/plugin~PluginInterface#destroy `destroy()`}) which, when present, will be used to properly\n * initialize and destroy the plugin.\n *\n * **Note:** When defined as a plain function, the plugin acts as a constructor and will be\n * called in parallel with other plugins' {@link module:core/plugin~PluginInterface#constructor constructors}.\n * This means the code of that plugin will be executed **before** {@link module:core/plugin~PluginInterface#init `init()`} and\n * {@link module:core/plugin~PluginInterface#afterInit `afterInit()`} methods of other plugins and, for instance,\n * you cannot use it to extend other plugins' {@glink framework/guides/architecture/editing-engine#schema schema}\n * rules as they are defined later on during the `init()` stage.\n *\n * @interface PluginInterface\n */\n\n/**\n * Creates a new plugin instance. This is the first step of the plugin initialization.\n * See also {@link #init} and {@link #afterInit}.\n *\n * A plugin is always instantiated after its {@link module:core/plugin~PluginInterface.requires dependencies} and the\n * {@link #init} and {@link #afterInit} methods are called in the same order.\n *\n * Usually, you will want to put your plugin's initialization code in the {@link #init} method.\n * The constructor can be understood as \"before init\" and used in special cases, just like\n * {@link #afterInit} serves the special \"after init\" scenarios (e.g.the code which depends on other\n * plugins, but which does not {@link module:core/plugin~PluginInterface.requires explicitly require} them).\n *\n * @method #constructor\n * @param {module:core/editor/editor~Editor} editor\n */\n\n/**\n * An array of plugins required by this plugin.\n *\n * To keep the plugin class definition tight it is recommended to define this property as a static getter:\n *\n *\t\timport Image from './image.js';\n *\n *\t\texport default class ImageCaption {\n *\t\t\tstatic get requires() {\n *\t\t\t\treturn [ Image ];\n *\t\t\t}\n *\t\t}\n *\n * @static\n * @readonly\n * @member {Array.<Function>|undefined} module:core/plugin~PluginInterface.requires\n */\n\n/**\n * An optional name of the plugin. If set, the plugin will be available in\n * {@link module:core/plugincollection~PluginCollection#get} by its\n * name and its constructor. If not, then only by its constructor.\n *\n * The name should reflect the constructor name.\n *\n * To keep the plugin class definition tight, it is recommended to define this property as a static getter:\n *\n *\t\texport default class ImageCaption {\n *\t\t\tstatic get pluginName() {\n *\t\t\t\treturn 'ImageCaption';\n *\t\t\t}\n *\t\t}\n *\n * Note: The native `Function.name` property could not be used to keep the plugin name because\n * it will be mangled during code minification.\n *\n * Naming a plugin is necessary to enable removing it through the\n * {@link module:core/editor/editorconfig~EditorConfig#removePlugins `config.removePlugins`} option.\n *\n * @static\n * @readonly\n * @member {String|undefined} module:core/plugin~PluginInterface.pluginName\n */\n\n/**\n * The second stage (after plugin {@link #constructor}) of the plugin initialization.\n * Unlike the plugin constructor this method can be asynchronous.\n *\n * A plugin's `init()` method is called after its {@link module:core/plugin~PluginInterface.requires dependencies} are initialized,\n * so in the same order as the constructors of these plugins.\n *\n * **Note:** This method is optional. A plugin instance does not need to have it defined.\n *\n * @method #init\n * @returns {null|Promise}\n */\n\n/**\n * The third (and last) stage of the plugin initialization. See also {@link #constructor} and {@link #init}.\n *\n * **Note:** This method is optional. A plugin instance does not need to have it defined.\n *\n * @method #afterInit\n * @returns {null|Promise}\n */\n\n/**\n * Destroys the plugin.\n *\n * **Note:** This method is optional. A plugin instance does not need to have it defined.\n *\n * @method #destroy\n * @returns {null|Promise}\n */\n\n/**\n * A flag which defines if a plugin is allowed or not allowed to be used directly by a {@link module:core/context~Context}.\n *\n * @static\n * @readonly\n * @member {Boolean} module:core/plugin~PluginInterface.isContextPlugin\n */\n\n/**\n * An array of loaded plugins.\n *\n * @typedef {Array.<module:core/plugin~PluginInterface>} module:core/plugin~LoadedPlugins\n */\n\n// Helper function that forces plugin to be disabled.\nfunction forceDisable( evt ) {\n\tevt.return = false;\n\tevt.stop();\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/datatransfer\n */\n\n/**\n * Facade over the native [`DataTransfer`](https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer) object.\n */\nexport default class DataTransfer {\n\tconstructor( nativeDataTransfer ) {\n\t\t/**\n\t\t * The array of files created from the native `DataTransfer#files` or `DataTransfer#items`.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Array.<File>} #files\n\t\t */\n\t\tthis.files = getFiles( nativeDataTransfer );\n\n\t\t/**\n\t\t * The native DataTransfer object.\n\t\t *\n\t\t * @private\n\t\t * @member {DataTransfer} #_native\n\t\t */\n\t\tthis._native = nativeDataTransfer;\n\t}\n\n\t/**\n\t * Returns an array of available native content types.\n\t *\n\t * @returns {Array.<String>}\n\t */\n\tget types() {\n\t\treturn this._native.types;\n\t}\n\n\t/**\n\t * Gets data from the data transfer by its mime type.\n\t *\n\t *\t\tdataTransfer.getData( 'text/plain' );\n\t *\n\t * @param {String} type The mime type. E.g. `text/html` or `text/plain`.\n\t * @returns {String}\n\t */\n\tgetData( type ) {\n\t\treturn this._native.getData( type );\n\t}\n\n\t/**\n\t * Sets data in the data transfer.\n\t *\n\t * @param {String} type The mime type. E.g. `text/html` or `text/plain`.\n\t * @param {String} data\n\t */\n\tsetData( type, data ) {\n\t\tthis._native.setData( type, data );\n\t}\n}\n\nfunction getFiles( nativeDataTransfer ) {\n\t// DataTransfer.files and items are Array-like and might not have an iterable interface.\n\tconst files = nativeDataTransfer.files ? Array.from( nativeDataTransfer.files ) : [];\n\tconst items = nativeDataTransfer.items ? Array.from( nativeDataTransfer.items ) : [];\n\n\tif ( files.length ) {\n\t\treturn files;\n\t}\n\t// Chrome have empty DataTransfer.files, but let get files through the items interface.\n\treturn items\n\t\t.filter( item => item.kind === 'file' )\n\t\t.map( item => item.getAsFile() );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/clipboardobserver\n */\n\nimport DomEventObserver from '@ckeditor/ckeditor5-engine/src/view/observer/domeventobserver';\nimport EventInfo from '@ckeditor/ckeditor5-utils/src/eventinfo';\nimport DataTransfer from './datatransfer';\n\n/**\n * Clipboard events observer.\n *\n * Fires the following events:\n *\n * * {@link module:engine/view/document~Document#event:clipboardInput}\n * * {@link module:engine/view/document~Document#event:dragover}\n * * {@link module:engine/view/document~Document#event:drop}\n * * {@link module:engine/view/document~Document#event:paste}\n * * {@link module:engine/view/document~Document#event:copy}\n * * {@link module:engine/view/document~Document#event:cut}\n *\n * Note that this observer is not available by default (it is not added by the engine).\n * To make it available it needs to be added to {@link module:engine/view/document~Document} by\n * the {@link module:engine/view/view~View#addObserver `View#addObserver()`} method. You can also load the\n * {@link module:clipboard/clipboard~Clipboard} plugin which adds this observer automatically (because it uses it).\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nexport default class ClipboardObserver extends DomEventObserver {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\tconst viewDocument = this.document;\n\n\t\tthis.domEventType = [ 'paste', 'copy', 'cut', 'drop', 'dragover' ];\n\n\t\tthis.listenTo( viewDocument, 'paste', handleInput, { priority: 'low' } );\n\t\tthis.listenTo( viewDocument, 'drop', handleInput, { priority: 'low' } );\n\n\t\tfunction handleInput( evt, data ) {\n\t\t\tdata.preventDefault();\n\n\t\t\tconst targetRanges = data.dropRange ? [ data.dropRange ] : Array.from( viewDocument.selection.getRanges() );\n\n\t\t\tconst eventInfo = new EventInfo( viewDocument, 'clipboardInput' );\n\n\t\t\tviewDocument.fire( eventInfo, {\n\t\t\t\tdataTransfer: data.dataTransfer,\n\t\t\t\ttargetRanges\n\t\t\t} );\n\n\t\t\t// If CKEditor handled the input, do not bubble the original event any further.\n\t\t\t// This helps external integrations recognize that fact and act accordingly.\n\t\t\t// https://github.com/ckeditor/ckeditor5-upload/issues/92\n\t\t\tif ( eventInfo.stop.called ) {\n\t\t\t\tdata.stopPropagation();\n\t\t\t}\n\t\t}\n\t}\n\n\tonDomEvent( domEvent ) {\n\t\tconst evtData = {\n\t\t\tdataTransfer: new DataTransfer( domEvent.clipboardData ? domEvent.clipboardData : domEvent.dataTransfer )\n\t\t};\n\n\t\tif ( domEvent.type == 'drop' ) {\n\t\t\tevtData.dropRange = getDropViewRange( this.view, domEvent );\n\t\t}\n\n\t\tthis.fire( domEvent.type, domEvent, evtData );\n\t}\n}\n\nfunction getDropViewRange( view, domEvent ) {\n\tconst domDoc = domEvent.target.ownerDocument;\n\tconst x = domEvent.clientX;\n\tconst y = domEvent.clientY;\n\tlet domRange;\n\n\t// Webkit & Blink.\n\tif ( domDoc.caretRangeFromPoint && domDoc.caretRangeFromPoint( x, y ) ) {\n\t\tdomRange = domDoc.caretRangeFromPoint( x, y );\n\t}\n\t// FF.\n\telse if ( domEvent.rangeParent ) {\n\t\tdomRange = domDoc.createRange();\n\t\tdomRange.setStart( domEvent.rangeParent, domEvent.rangeOffset );\n\t\tdomRange.collapse( true );\n\t}\n\n\tif ( domRange ) {\n\t\treturn view.domConverter.domRangeToView( domRange );\n\t} else {\n\t\treturn view.document.selection.getFirstRange();\n\t}\n}\n\n/**\n * Fired as a continuation of {@link #event:paste} and {@link #event:drop} events.\n *\n * It is a part of the {@glink framework/guides/deep-dive/clipboard#input-pipeline \"clipboard input pipeline\"}.\n *\n * Fired with a `dataTransfer` which comes from the clipboard and which content should be processed\n * and inserted into the editor.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @see module:clipboard/clipboard~Clipboard\n * @event module:engine/view/document~Document#event:clipboardInput\n * @param {Object} data Event data.\n * @param {module:clipboard/datatransfer~DataTransfer} data.dataTransfer Data transfer instance.\n * @param {Array.<module:engine/view/range~Range>} data.targetRanges Ranges which are the target of the operation\n * (usually – into which the content should be inserted).\n * If clipboard input was triggered by a paste operation, then these are the selection ranges. If by a drop operation,\n * then it's the drop position (which can be different than the selection at the moment of drop).\n */\n\n/**\n * Fired when user drags content over one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:engine/view/document~Document#event:clipboardInput\n * @event module:engine/view/document~Document#event:dragover\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * Fired when user dropped content into one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:engine/view/document~Document#event:clipboardInput\n * @event module:engine/view/document~Document#event:drop\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n * @param {module:engine/view/range~Range} dropRange The position into which the content is dropped.\n */\n\n/**\n * Fired when user pasted content into one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:engine/view/document~Document#event:clipboardInput\n * @event module:engine/view/document~Document#event:paste\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * Fired when user copied content from one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @event module:engine/view/document~Document#event:copy\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * Fired when user cut content from one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @event module:engine/view/document~Document#event:cut\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * The value of the {@link module:engine/view/document~Document#event:paste},\n * {@link module:engine/view/document~Document#event:copy} and {@link module:engine/view/document~Document#event:cut} events.\n *\n * In order to access clipboard data use `dataTransfer` property.\n *\n * @class module:clipboard/clipboardobserver~ClipboardEventData\n * @extends module:engine/view/observer/domeventdata~DomEventData\n */\n\n/**\n * Data transfer instance.\n *\n * @readonly\n * @member {module:clipboard/datatransfer~DataTransfer} module:clipboard/clipboardobserver~ClipboardEventData#dataTransfer\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/utils/viewtoplaintext\n */\n\n// Elements which should not have empty-line padding.\n// Most `view.ContainerElement` want to be separate by new-line, but some are creating one structure\n// together (like `<li>`) so it is better to separate them by only one \"\\n\".\nconst smallPaddingElements = [ 'figcaption', 'li' ];\n\n/**\n * Converts {@link module:engine/view/item~Item view item} and all of its children to plain text.\n *\n * @param {module:engine/view/item~Item} viewItem View item to convert.\n * @returns {String} Plain text representation of `viewItem`.\n */\nexport default function viewToPlainText( viewItem ) {\n\tlet text = '';\n\n\tif ( viewItem.is( 'text' ) || viewItem.is( 'textProxy' ) ) {\n\t\t// If item is `Text` or `TextProxy` simple take its text data.\n\t\ttext = viewItem.data;\n\t} else if ( viewItem.is( 'img' ) && viewItem.hasAttribute( 'alt' ) ) {\n\t\t// Special case for images - use alt attribute if it is provided.\n\t\ttext = viewItem.getAttribute( 'alt' );\n\t} else {\n\t\t// Other elements are document fragments, attribute elements or container elements.\n\t\t// They don't have their own text value, so convert their children.\n\t\tlet prev = null;\n\n\t\tfor ( const child of viewItem.getChildren() ) {\n\t\t\tconst childText = viewToPlainText( child );\n\n\t\t\t// Separate container element children with one or more new-line characters.\n\t\t\tif ( prev && ( prev.is( 'containerElement' ) || child.is( 'containerElement' ) ) ) {\n\t\t\t\tif ( smallPaddingElements.includes( prev.name ) || smallPaddingElements.includes( child.name ) ) {\n\t\t\t\t\ttext += '\\n';\n\t\t\t\t} else {\n\t\t\t\t\ttext += '\\n\\n';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttext += childText;\n\t\t\tprev = child;\n\t\t}\n\t}\n\n\treturn text;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/clipboard\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport ClipboardObserver from './clipboardobserver';\n\nimport plainTextToHtml from './utils/plaintexttohtml';\nimport normalizeClipboardHtml from './utils/normalizeclipboarddata';\nimport viewToPlainText from './utils/viewtoplaintext.js';\n\nimport HtmlDataProcessor from '@ckeditor/ckeditor5-engine/src/dataprocessor/htmldataprocessor';\n\n/**\n * The clipboard feature. It is responsible for intercepting the `paste` and `drop` events and\n * passing the pasted content through the clipboard pipeline in order to insert it into the editor's content.\n * It also handles the `cut` and `copy` events to fill the native clipboard with serialized editor's data.\n *\n * Read more about the clipboard integration in {@glink framework/guides/deep-dive/clipboard \"Clipboard\" deep dive} guide.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Clipboard extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Clipboard';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst modelDocument = editor.model.document;\n\t\tconst view = editor.editing.view;\n\t\tconst viewDocument = view.document;\n\n\t\t/**\n\t\t * Data processor used to convert pasted HTML to a view structure.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/dataprocessor/htmldataprocessor~HtmlDataProcessor} #_htmlDataProcessor\n\t\t */\n\t\tthis._htmlDataProcessor = new HtmlDataProcessor();\n\n\t\tview.addObserver( ClipboardObserver );\n\n\t\t// The clipboard paste pipeline.\n\n\t\t// Pasting and dropping is disabled when editor is read-only.\n\t\t// See: https://github.com/ckeditor/ckeditor5-clipboard/issues/26.\n\t\tthis.listenTo( viewDocument, 'clipboardInput', evt => {\n\t\t\tif ( editor.isReadOnly ) {\n\t\t\t\tevt.stop();\n\t\t\t}\n\t\t}, { priority: 'highest' } );\n\n\t\tthis.listenTo( viewDocument, 'clipboardInput', ( evt, data ) => {\n\t\t\tconst dataTransfer = data.dataTransfer;\n\t\t\tlet content = '';\n\n\t\t\tif ( dataTransfer.getData( 'text/html' ) ) {\n\t\t\t\tcontent = normalizeClipboardHtml( dataTransfer.getData( 'text/html' ) );\n\t\t\t} else if ( dataTransfer.getData( 'text/plain' ) ) {\n\t\t\t\tcontent = plainTextToHtml( dataTransfer.getData( 'text/plain' ) );\n\t\t\t}\n\n\t\t\tcontent = this._htmlDataProcessor.toView( content );\n\n\t\t\tthis.fire( 'inputTransformation', { content, dataTransfer } );\n\n\t\t\tview.scrollToTheSelection();\n\t\t}, { priority: 'low' } );\n\n\t\tthis.listenTo( this, 'inputTransformation', ( evt, data ) => {\n\t\t\tif ( !data.content.isEmpty ) {\n\t\t\t\tconst dataController = this.editor.data;\n\t\t\t\tconst model = this.editor.model;\n\n\t\t\t\t// Convert the pasted content to a model document fragment.\n\t\t\t\t// Conversion is contextual, but in this case we need an \"all allowed\" context and for that\n\t\t\t\t// we use the $clipboardHolder item.\n\t\t\t\tconst modelFragment = dataController.toModel( data.content, '$clipboardHolder' );\n\n\t\t\t\tif ( modelFragment.childCount == 0 ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tmodel.insertContent( modelFragment );\n\t\t\t}\n\t\t}, { priority: 'low' } );\n\n\t\t// The clipboard copy/cut pipeline.\n\n\t\tfunction onCopyCut( evt, data ) {\n\t\t\tconst dataTransfer = data.dataTransfer;\n\n\t\t\tdata.preventDefault();\n\n\t\t\tconst content = editor.data.toView( editor.model.getSelectedContent( modelDocument.selection ) );\n\n\t\t\tviewDocument.fire( 'clipboardOutput', { dataTransfer, content, method: evt.name } );\n\t\t}\n\n\t\tthis.listenTo( viewDocument, 'copy', onCopyCut, { priority: 'low' } );\n\t\tthis.listenTo( viewDocument, 'cut', ( evt, data ) => {\n\t\t\t// Cutting is disabled when editor is read-only.\n\t\t\t// See: https://github.com/ckeditor/ckeditor5-clipboard/issues/26.\n\t\t\tif ( editor.isReadOnly ) {\n\t\t\t\tdata.preventDefault();\n\t\t\t} else {\n\t\t\t\tonCopyCut( evt, data );\n\t\t\t}\n\t\t}, { priority: 'low' } );\n\n\t\tthis.listenTo( viewDocument, 'clipboardOutput', ( evt, data ) => {\n\t\t\tif ( !data.content.isEmpty ) {\n\t\t\t\tdata.dataTransfer.setData( 'text/html', this._htmlDataProcessor.toData( data.content ) );\n\t\t\t\tdata.dataTransfer.setData( 'text/plain', viewToPlainText( data.content ) );\n\t\t\t}\n\n\t\t\tif ( data.method == 'cut' ) {\n\t\t\t\teditor.model.deleteContent( modelDocument.selection );\n\t\t\t}\n\t\t}, { priority: 'low' } );\n\t}\n}\n\n/**\n * Fired with a `content` and `dataTransfer` objects. The `content` which comes from the clipboard (was pasted or dropped)\n * should be processed in order to be inserted into the editor. The `dataTransfer` object is available\n * in case the transformation functions needs access to a raw clipboard data.\n *\n * It is a part of the {@glink framework/guides/deep-dive/clipboard#input-pipeline \"clipboard input pipeline\"}.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @see module:clipboard/clipboard~Clipboard\n * @event module:clipboard/clipboard~Clipboard#event:inputTransformation\n * @param {Object} data Event data.\n * @param {module:engine/view/documentfragment~DocumentFragment} data.content Event data. Content to be inserted into the editor.\n * It can be modified by the event listeners. Read more about the clipboard pipelines in\n * {@glink framework/guides/deep-dive/clipboard \"Clipboard\" deep dive}.\n * @param {module:clipboard/datatransfer~DataTransfer} data.dataTransfer Data transfer instance.\n */\n\n/**\n * Fired on {@link module:engine/view/document~Document#event:copy} and {@link module:engine/view/document~Document#event:cut}\n * with a copy of selected content. The content can be processed before it ends up in the clipboard.\n *\n * It is a part of the {@glink framework/guides/deep-dive/clipboard#output-pipeline \"clipboard output pipeline\"}.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @see module:clipboard/clipboard~Clipboard\n * @event module:engine/view/document~Document#event:clipboardOutput\n * @param {module:clipboard/clipboard~ClipboardOutputEventData} data Event data.\n */\n\n/**\n * The value of the {@link module:engine/view/document~Document#event:clipboardOutput} event.\n *\n * @class module:clipboard/clipboard~ClipboardOutputEventData\n */\n\n/**\n * Data transfer instance.\n *\n * @readonly\n * @member {module:clipboard/datatransfer~DataTransfer} module:clipboard/clipboard~ClipboardOutputEventData#dataTransfer\n */\n\n/**\n * Content to be put into the clipboard. It can be modified by the event listeners.\n * Read more about the clipboard pipelines in {@glink framework/guides/deep-dive/clipboard \"Clipboard\" deep dive}.\n *\n * @member {module:engine/view/documentfragment~DocumentFragment} module:clipboard/clipboard~ClipboardOutputEventData#content\n */\n\n/**\n * Whether the event was triggered by copy or cut operation.\n *\n * @member {'copy'|'cut'} module:clipboard/clipboard~ClipboardOutputEventData#method\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/utils/plaintexttohtml\n */\n\n/**\n * Converts plain text to its HTML-ized version.\n *\n * @param {String} text The plain text to convert.\n * @returns {String} HTML generated from the plain text.\n */\nexport default function plainTextToHtml( text ) {\n\ttext = text\n\t\t// Encode <>.\n\t\t.replace( /</g, '&lt;' )\n\t\t.replace( />/g, '&gt;' )\n\t\t// Creates paragraphs for every line breaks.\n\t\t.replace( /\\n/g, '</p><p>' )\n\t\t// Preserve trailing spaces (only the first and last one – the rest is handled below).\n\t\t.replace( /^\\s/, '&nbsp;' )\n\t\t.replace( /\\s$/, '&nbsp;' )\n\t\t// Preserve other subsequent spaces now.\n\t\t.replace( /\\s\\s/g, ' &nbsp;' );\n\n\tif ( text.indexOf( '</p><p>' ) > -1 ) {\n\t\t// If we created paragraphs above, add the trailing ones.\n\t\ttext = `<p>${ text }</p>`;\n\t}\n\n\t// TODO:\n\t// * What about '\\nfoo' vs ' foo'?\n\n\treturn text;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/utils/normalizeclipboarddata\n */\n\n/**\n * Removes some popular browser quirks out of the clipboard data (HTML).\n *\n * @param {String} data The HTML data to normalize.\n * @returns {String} Normalized HTML.\n */\nexport default function normalizeClipboardData( data ) {\n\treturn data\n\t\t.replace( /<span(?: class=\"Apple-converted-space\"|)>(\\s+)<\\/span>/g, ( fullMatch, spaces ) => {\n\t\t\t// Handle the most popular and problematic case when even a single space becomes an nbsp;.\n\t\t\t// Decode those to normal spaces. Read more in https://github.com/ckeditor/ckeditor5-clipboard/issues/2.\n\t\t\tif ( spaces.length == 1 ) {\n\t\t\t\treturn ' ';\n\t\t\t}\n\n\t\t\treturn spaces;\n\t\t} );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/command\n */\n\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * The base class for CKEditor commands.\n *\n * Commands are the main way to manipulate editor contents and state. They are mostly used by UI elements (or by other\n * commands) to make changes in the model. Commands are available in every part of code that has access to\n * the {@link module:core/editor/editor~Editor editor} instance.\n *\n * Instances of registered commands can be retrieved from {@link module:core/editor/editor~Editor#commands `editor.commands`}.\n * The easiest way to execute a command is through {@link module:core/editor/editor~Editor#execute `editor.execute()`}.\n *\n * By default commands are disabled when the editor is in {@link module:core/editor/editor~Editor#isReadOnly read-only} mode.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class Command {\n\t/**\n\t * Creates a new `Command` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor Editor on which this command will be used.\n\t */\n\tconstructor( editor ) {\n\t\t/**\n\t\t * The editor on which this command will be used.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/editor/editor~Editor}\n\t\t */\n\t\tthis.editor = editor;\n\n\t\t/**\n\t\t * The value of the command. A concrete command class should define what it represents for it.\n\t\t *\n\t\t * For example, the `'bold'` command's value indicates whether the selection starts in a bolded text.\n\t\t * And the value of the `'link'` command may be an object with links details.\n\t\t *\n\t\t * It is possible for a command to have no value (e.g. for stateless actions such as `'imageUpload'`).\n\t\t *\n\t\t * A concrete command class should control this value by overriding the {@link #refresh `refresh()`} method.\n\t\t *\n\t\t * @observable\n\t\t * @readonly\n\t\t * @member #value\n\t\t */\n\t\tthis.set( 'value', undefined );\n\n\t\t/**\n\t\t * Flag indicating whether a command is enabled or disabled.\n\t\t * A disabled command will do nothing when executed.\n\t\t *\n\t\t * A concrete command class should control this value by overriding the {@link #refresh `refresh()`} method.\n\t\t *\n\t\t * It is possible to disable a command from \"outside\". For instance, in your integration you may want to disable\n\t\t * a certain set of commands for the time being. To do that, you can use the fact that `isEnabled` is observable\n\t\t * and it fires the `set:isEnabled` event every time anyone tries to modify its value:\n\t\t *\n\t\t *\t\tfunction disableCommand( cmd ) {\n\t\t *\t\t\tcmd.on( 'set:isEnabled', forceDisable, { priority: 'highest' } );\n\t\t *\n\t\t *\t\t\tcmd.isEnabled = false;\n\t\t *\n\t\t *\t\t\t// Make it possible to enable the command again.\n\t\t *\t\t\treturn () => {\n\t\t *\t\t\t\tcmd.off( 'set:isEnabled', forceDisable );\n\t\t *\t\t\t\tcmd.refresh();\n\t\t *\t\t\t};\n\t\t *\n\t\t *\t\t\tfunction forceDisable( evt ) {\n\t\t *\t\t\t\tevt.return = false;\n\t\t *\t\t\t\tevt.stop();\n\t\t *\t\t\t}\n\t\t *\t\t}\n\t\t *\n\t\t *\t\t// Usage:\n\t\t *\n\t\t *\t\t// Disabling the command.\n\t\t *\t\tconst enableBold = disableCommand( editor.commands.get( 'bold' ) );\n\t\t *\n\t\t *\t\t// Enabling the command again.\n\t\t *\t\tenableBold();\n\t\t *\n\t\t * @observable\n\t\t * @readonly\n\t\t * @member {Boolean} #isEnabled\n\t\t */\n\t\tthis.set( 'isEnabled', false );\n\n\t\t/**\n\t\t * Holds identifiers for {@link #forceDisabled} mechanism.\n\t\t *\n\t\t * @type {Set.<String>}\n\t\t * @private\n\t\t */\n\t\tthis._disableStack = new Set();\n\n\t\tthis.decorate( 'execute' );\n\n\t\t// By default every command is refreshed when changes are applied to the model.\n\t\tthis.listenTo( this.editor.model.document, 'change', () => {\n\t\t\tthis.refresh();\n\t\t} );\n\n\t\tthis.on( 'execute', evt => {\n\t\t\tif ( !this.isEnabled ) {\n\t\t\t\tevt.stop();\n\t\t\t}\n\t\t}, { priority: 'high' } );\n\n\t\t// By default commands are disabled when the editor is in read-only mode.\n\t\tthis.listenTo( editor, 'change:isReadOnly', ( evt, name, value ) => {\n\t\t\tif ( value ) {\n\t\t\t\tthis.forceDisabled( 'readOnlyMode' );\n\t\t\t} else {\n\t\t\t\tthis.clearForceDisabled( 'readOnlyMode' );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Refreshes the command. The command should update its {@link #isEnabled} and {@link #value} properties\n\t * in this method.\n\t *\n\t * This method is automatically called when\n\t * {@link module:engine/model/document~Document#event:change any changes are applied to the document}.\n\t */\n\trefresh() {\n\t\tthis.isEnabled = true;\n\t}\n\n\t/**\n\t * Disables the command.\n\t *\n\t * Command may be disabled by multiple features or algorithms (at once). When disabling a command, unique id should be passed\n\t * (e.g. feature name). The same identifier should be used when {@link #clearForceDisabled enabling back} the command.\n\t * The command becomes enabled only after all features {@link #clearForceDisabled enabled it back}.\n\t *\n\t * Disabling and enabling a command:\n\t *\n\t *\t\tcommand.isEnabled; // -> true\n\t *\t\tcommand.forceDisabled( 'MyFeature' );\n\t *\t\tcommand.isEnabled; // -> false\n\t *\t\tcommand.clearForceDisabled( 'MyFeature' );\n\t *\t\tcommand.isEnabled; // -> true\n\t *\n\t * Command disabled by multiple features:\n\t *\n\t *\t\tcommand.forceDisabled( 'MyFeature' );\n\t *\t\tcommand.forceDisabled( 'OtherFeature' );\n\t *\t\tcommand.clearForceDisabled( 'MyFeature' );\n\t *\t\tcommand.isEnabled; // -> false\n\t *\t\tcommand.clearForceDisabled( 'OtherFeature' );\n\t *\t\tcommand.isEnabled; // -> true\n\t *\n\t * Multiple disabling with the same identifier is redundant:\n\t *\n\t *\t\tcommand.forceDisabled( 'MyFeature' );\n\t *\t\tcommand.forceDisabled( 'MyFeature' );\n\t *\t\tcommand.clearForceDisabled( 'MyFeature' );\n\t *\t\tcommand.isEnabled; // -> true\n\t *\n\t * **Note:** some commands or algorithms may have more complex logic when it comes to enabling or disabling certain commands,\n\t * so the command might be still disabled after {@link #clearForceDisabled} was used.\n\t *\n\t * @param {String} id Unique identifier for disabling. Use the same id when {@link #clearForceDisabled enabling back} the command.\n\t */\n\tforceDisabled( id ) {\n\t\tthis._disableStack.add( id );\n\n\t\tif ( this._disableStack.size == 1 ) {\n\t\t\tthis.on( 'set:isEnabled', forceDisable, { priority: 'highest' } );\n\t\t\tthis.isEnabled = false;\n\t\t}\n\t}\n\n\t/**\n\t * Clears forced disable previously set through {@link #forceDisabled}. See {@link #forceDisabled}.\n\t *\n\t * @param {String} id Unique identifier, equal to the one passed in {@link #forceDisabled} call.\n\t */\n\tclearForceDisabled( id ) {\n\t\tthis._disableStack.delete( id );\n\n\t\tif ( this._disableStack.size == 0 ) {\n\t\t\tthis.off( 'set:isEnabled', forceDisable );\n\t\t\tthis.refresh();\n\t\t}\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * A command may accept parameters. They will be passed from {@link module:core/editor/editor~Editor#execute `editor.execute()`}\n\t * to the command.\n\t *\n\t * The `execute()` method will automatically abort when the command is disabled ({@link #isEnabled} is `false`).\n\t * This behavior is implemented by a high priority listener to the {@link #event:execute} event.\n\t *\n\t * In order to see how to disable a command from \"outside\" see the {@link #isEnabled} documentation.\n\t *\n\t * @fires execute\n\t */\n\texecute() {}\n\n\t/**\n\t * Destroys the command.\n\t */\n\tdestroy() {\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Event fired by the {@link #execute} method. The command action is a listener to this event so it's\n\t * possible to change/cancel the behavior of the command by listening to this event.\n\t *\n\t * See {@link module:utils/observablemixin~ObservableMixin#decorate} for more information and samples.\n\t *\n\t * **Note:** This event is fired even if command is disabled. However, it is automatically blocked\n\t * by a high priority listener in order to prevent command execution.\n\t *\n\t * @event execute\n\t */\n}\n\nmix( Command, ObservableMixin );\n\n// Helper function that forces command to be disabled.\nfunction forceDisable( evt ) {\n\tevt.return = false;\n\tevt.stop();\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module enter/utils\n */\n\n/**\n * Returns attributes that should be preserved on the enter key.\n *\n * Filtering is realized based on `copyOnEnter` attribute property. Read more about attribute properties\n * {@link module:engine/model/schema~Schema#setAttributeProperties here}.\n *\n * @param {module:engine/model/schema~Schema} schema\n * @param {Iterable.<*>} allAttributes attributes to filter.\n * @returns {Iterable.<*>}\n */\nexport function* getCopyOnEnterAttributes( schema, allAttributes ) {\n\tfor ( const attribute of allAttributes ) {\n\t\tif ( attribute && schema.getAttributeProperties( attribute[ 0 ] ).copyOnEnter ) {\n\t\t\tyield attribute;\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module enter/entercommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { getCopyOnEnterAttributes } from './utils';\n\n/**\n * Enter command. It is used by the {@link module:enter/enter~Enter Enter feature} to handle the <kbd>Enter</kbd> key.\n *\n * @extends module:core/command~Command\n */\nexport default class EnterCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\texecute() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\n\t\tmodel.change( writer => {\n\t\t\tenterBlock( this.editor.model, writer, doc.selection, model.schema );\n\t\t\tthis.fire( 'afterExecute', { writer } );\n\t\t} );\n\t}\n}\n\n// Creates a new block in the way that the <kbd>Enter</kbd> key is expected to work.\n//\n// @param {module:engine/model~Model} model\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n// Selection on which the action should be performed.\n// @param {module:engine/model/schema~Schema} schema\nfunction enterBlock( model, writer, selection, schema ) {\n\tconst isSelectionEmpty = selection.isCollapsed;\n\tconst range = selection.getFirstRange();\n\tconst startElement = range.start.parent;\n\tconst endElement = range.end.parent;\n\n\t// Don't touch the roots and other limit elements.\n\tif ( schema.isLimit( startElement ) || schema.isLimit( endElement ) ) {\n\t\t// Delete the selected content but only if inside a single limit element.\n\t\t// Abort, when crossing limit elements boundary (e.g. <limit1>x[x</limit1>donttouchme<limit2>y]y</limit2>).\n\t\t// This is an edge case and it's hard to tell what should actually happen because such a selection\n\t\t// is not entirely valid.\n\t\tif ( !isSelectionEmpty && startElement == endElement ) {\n\t\t\tmodel.deleteContent( selection );\n\t\t}\n\n\t\treturn;\n\t}\n\n\tif ( isSelectionEmpty ) {\n\t\tconst attributesToCopy = getCopyOnEnterAttributes( writer.model.schema, selection.getAttributes() );\n\t\tsplitBlock( writer, range.start );\n\t\twriter.setSelectionAttribute( attributesToCopy );\n\t} else {\n\t\tconst leaveUnmerged = !( range.start.isAtStart && range.end.isAtEnd );\n\t\tconst isContainedWithinOneElement = ( startElement == endElement );\n\n\t\tmodel.deleteContent( selection, { leaveUnmerged } );\n\n\t\tif ( leaveUnmerged ) {\n\t\t\t// Partially selected elements.\n\t\t\t//\n\t\t\t// <h>x[xx]x</h>\t\t-> <h>x^x</h>\t\t\t-> <h>x</h><h>^x</h>\n\t\t\tif ( isContainedWithinOneElement ) {\n\t\t\t\tsplitBlock( writer, selection.focus );\n\t\t\t}\n\t\t\t// Selection over multiple elements.\n\t\t\t//\n\t\t\t// <h>x[x</h><p>y]y<p>\t-> <h>x^</h><p>y</p>\t-> <h>x</h><p>^y</p>\n\t\t\telse {\n\t\t\t\twriter.setSelection( endElement, 0 );\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction splitBlock( writer, splitPos ) {\n\twriter.split( splitPos );\n\twriter.setSelection( splitPos.parent.nextSibling, 0 );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module enter/enterobserver\n */\n\nimport Observer from '@ckeditor/ckeditor5-engine/src/view/observer/observer';\nimport DomEventData from '@ckeditor/ckeditor5-engine/src/view/observer/domeventdata';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\n\n/**\n * Enter observer introduces the {@link module:engine/view/document~Document#event:enter} event.\n *\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class EnterObserver extends Observer {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\tconst doc = this.document;\n\n\t\tdoc.on( 'keydown', ( evt, data ) => {\n\t\t\tif ( this.isEnabled && data.keyCode == keyCodes.enter ) {\n\t\t\t\t// Save the event object to check later if it was stopped or not.\n\t\t\t\tlet event;\n\t\t\t\tdoc.once( 'enter', evt => ( event = evt ), { priority: 'highest' } );\n\n\t\t\t\tdoc.fire( 'enter', new DomEventData( doc, data.domEvent, {\n\t\t\t\t\tisSoft: data.shiftKey\n\t\t\t\t} ) );\n\n\t\t\t\t// Stop `keydown` event if `enter` event was stopped.\n\t\t\t\t// https://github.com/ckeditor/ckeditor5/issues/753\n\t\t\t\tif ( event && event.stop.called ) {\n\t\t\t\t\tevt.stop();\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tobserve() {}\n}\n\n/**\n * Event fired when the user presses the <kbd>Enter</kbd> key.\n *\n * Note: This event is fired by the {@link module:enter/enterobserver~EnterObserver observer}\n * (usually registered by the {@link module:enter/enter~Enter Enter feature} and\n * {@link module:enter/shiftenter~ShiftEnter ShiftEnter feature}).\n *\n * @event module:engine/view/document~Document#event:enter\n * @param {module:engine/view/observer/domeventdata~DomEventData} data\n * @param {Boolean} data.isSoft Whether it's a soft enter (<kbd>Shift</kbd>+<kbd>Enter</kbd>) or hard enter (<kbd>Enter</kbd>).\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module enter/enter\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport EnterCommand from './entercommand';\nimport EnterObserver from './enterobserver';\n\n/**\n * This plugin handles the <kbd>Enter</kbd> key (hard line break) in the editor.\n *\n * See also the {@link module:enter/shiftenter~ShiftEnter} plugin.\n *\n * For more information about this feature see the {@glink api/enter package page}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Enter extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Enter';\n\t}\n\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst view = editor.editing.view;\n\t\tconst viewDocument = view.document;\n\n\t\tview.addObserver( EnterObserver );\n\n\t\teditor.commands.add( 'enter', new EnterCommand( editor ) );\n\n\t\tthis.listenTo( viewDocument, 'enter', ( evt, data ) => {\n\t\t\tdata.preventDefault();\n\n\t\t\t// The soft enter key is handled by the ShiftEnter plugin.\n\t\t\tif ( data.isSoft ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\teditor.execute( 'enter' );\n\t\t\tview.scrollToTheSelection();\n\t\t}, { priority: 'low' } );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module enter/shiftentercommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { getCopyOnEnterAttributes } from './utils';\n\n/**\n * ShiftEnter command. It is used by the {@link module:enter/shiftenter~ShiftEnter ShiftEnter feature} to handle\n * the <kbd>Shift</kbd>+<kbd>Enter</kbd> keystroke.\n *\n * @extends module:core/command~Command\n */\nexport default class ShiftEnterCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\texecute() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\n\t\tmodel.change( writer => {\n\t\t\tsoftBreakAction( model, writer, doc.selection );\n\t\t\tthis.fire( 'afterExecute', { writer } );\n\t\t} );\n\t}\n\n\trefresh() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\n\t\tthis.isEnabled = isEnabled( model.schema, doc.selection );\n\t}\n}\n\n// Checks whether the ShiftEnter command should be enabled in the specified selection.\n//\n// @param {module:engine/model/schema~Schema} schema\n// @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\nfunction isEnabled( schema, selection ) {\n\t// At this moment it is okay to support single range selections only.\n\t// But in the future we may need to change that.\n\tif ( selection.rangeCount > 1 ) {\n\t\treturn false;\n\t}\n\n\tconst anchorPos = selection.anchor;\n\n\t// Check whether the break element can be inserted in the current selection anchor.\n\tif ( !anchorPos || !schema.checkChild( anchorPos, 'softBreak' ) ) {\n\t\treturn false;\n\t}\n\n\tconst range = selection.getFirstRange();\n\tconst startElement = range.start.parent;\n\tconst endElement = range.end.parent;\n\n\t// Do not modify the content if selection is cross-limit elements.\n\tif ( ( isInsideLimitElement( startElement, schema ) || isInsideLimitElement( endElement, schema ) ) && startElement !== endElement ) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\n// Creates a break in the way that the <kbd>Shift</kbd>+<kbd>Enter</kbd> keystroke is expected to work.\n//\n// @param {module:engine/model~Model} model\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n// Selection on which the action should be performed.\nfunction softBreakAction( model, writer, selection ) {\n\tconst isSelectionEmpty = selection.isCollapsed;\n\tconst range = selection.getFirstRange();\n\tconst startElement = range.start.parent;\n\tconst endElement = range.end.parent;\n\tconst isContainedWithinOneElement = ( startElement == endElement );\n\n\tif ( isSelectionEmpty ) {\n\t\tconst attributesToCopy = getCopyOnEnterAttributes( model.schema, selection.getAttributes() );\n\t\tinsertBreak( model, writer, range.end );\n\n\t\twriter.removeSelectionAttribute( selection.getAttributeKeys() );\n\t\twriter.setSelectionAttribute( attributesToCopy );\n\t} else {\n\t\tconst leaveUnmerged = !( range.start.isAtStart && range.end.isAtEnd );\n\t\tmodel.deleteContent( selection, { leaveUnmerged } );\n\n\t\t// Selection within one element:\n\t\t//\n\t\t// <h>x[xx]x</h>\t\t-> <h>x^x</h>\t\t\t-> <h>x<br>^x</h>\n\t\tif ( isContainedWithinOneElement ) {\n\t\t\tinsertBreak( model, writer, selection.focus );\n\t\t}\n\t\t// Selection over multiple elements.\n\t\t//\n\t\t// <h>x[x</h><p>y]y<p>\t-> <h>x^</h><p>y</p>\t-> <h>x</h><p>^y</p>\n\t\t//\n\t\t// We chose not to insert a line break in this case because:\n\t\t//\n\t\t// * it's not a very common scenario,\n\t\t// * it actually surprised me when I saw the \"expected behavior\" in real life.\n\t\t//\n\t\t// It's ok if the user will need to be more specific where they want the <br> to be inserted.\n\t\telse {\n\t\t\t// Move the selection to the 2nd element (last step of the example above).\n\t\t\tif ( leaveUnmerged ) {\n\t\t\t\twriter.setSelection( endElement, 0 );\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction insertBreak( model, writer, position ) {\n\tconst breakLineElement = writer.createElement( 'softBreak' );\n\n\tmodel.insertContent( breakLineElement, position );\n\twriter.setSelection( breakLineElement, 'after' );\n}\n\n// Checks whether the specified `element` is a child of the limit element.\n//\n// Checking whether the `<p>` element is inside a limit element:\n//   - <$root><p>Text.</p></$root> => false\n//   - <$root><limitElement><p>Text</p></limitElement></$root> => true\n//\n// @param {module:engine/model/element~Element} element\n// @param {module:engine/schema~Schema} schema\n// @returns {Boolean}\nfunction isInsideLimitElement( element, schema ) {\n\t// `$root` is a limit element but in this case is an invalid element.\n\tif ( element.is( 'rootElement' ) ) {\n\t\treturn false;\n\t}\n\n\treturn schema.isLimit( element ) || isInsideLimitElement( element.parent, schema );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module enter/shiftenter\n */\n\nimport ShiftEnterCommand from './shiftentercommand';\nimport EnterObserver from './enterobserver';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\n/**\n * This plugin handles the <kbd>Shift</kbd>+<kbd>Enter</kbd> keystroke (soft line break) in the editor.\n *\n * See also the {@link module:enter/enter~Enter} plugin.\n *\n * For more information about this feature see the {@glink api/enter package page}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ShiftEnter extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ShiftEnter';\n\t}\n\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst schema = editor.model.schema;\n\t\tconst conversion = editor.conversion;\n\t\tconst view = editor.editing.view;\n\t\tconst viewDocument = view.document;\n\n\t\t// Configure the schema.\n\t\tschema.register( 'softBreak', {\n\t\t\tallowWhere: '$text',\n\t\t\tisInline: true\n\t\t} );\n\n\t\t// Configure converters.\n\t\tconversion.for( 'upcast' )\n\t\t\t.elementToElement( {\n\t\t\t\tmodel: 'softBreak',\n\t\t\t\tview: 'br'\n\t\t\t} );\n\n\t\tconversion.for( 'downcast' )\n\t\t\t.elementToElement( {\n\t\t\t\tmodel: 'softBreak',\n\t\t\t\tview: ( modelElement, viewWriter ) => viewWriter.createEmptyElement( 'br' )\n\t\t\t} );\n\n\t\tview.addObserver( EnterObserver );\n\n\t\teditor.commands.add( 'shiftEnter', new ShiftEnterCommand( editor ) );\n\n\t\tthis.listenTo( viewDocument, 'enter', ( evt, data ) => {\n\t\t\tdata.preventDefault();\n\n\t\t\t// The hard enter key is handled by the Enter plugin.\n\t\t\tif ( !data.isSoft ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\teditor.execute( 'shiftEnter' );\n\t\t\tview.scrollToTheSelection();\n\t\t}, { priority: 'low' } );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/utils/changebuffer\n */\n\n/**\n * Change buffer allows to group atomic changes (like characters that have been typed) into\n * {@link module:engine/model/batch~Batch batches}.\n *\n * Batches represent single undo steps, hence changes added to one single batch are undone together.\n *\n * The buffer has a configurable limit of atomic changes that it can accommodate. After the limit was\n * exceeded (see {@link ~ChangeBuffer#input}), a new batch is created in {@link ~ChangeBuffer#batch}.\n *\n * To use the change buffer you need to let it know about the number of changes that were added to the batch:\n *\n *\t\tconst buffer = new ChangeBuffer( model, LIMIT );\n *\n *\t\t// Later on in your feature:\n *\t\tbuffer.batch.insert( pos, insertedCharacters );\n *\t\tbuffer.input( insertedCharacters.length );\n *\n */\nexport default class ChangeBuffer {\n\t/**\n\t * Creates a new instance of the change buffer.\n\t *\n\t * @param {module:engine/model/model~Model} model\n\t * @param {Number} [limit=20] The maximum number of atomic changes which can be contained in one batch.\n\t */\n\tconstructor( model, limit = 20 ) {\n\t\t/**\n\t\t * The model instance.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/model~Model} #model\n\t\t */\n\t\tthis.model = model;\n\n\t\t/**\n\t\t * The number of atomic changes in the buffer. Once it exceeds the {@link #limit},\n\t\t * the {@link #batch batch} is set to a new one.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #size\n\t\t */\n\t\tthis.size = 0;\n\n\t\t/**\n\t\t * The maximum number of atomic changes which can be contained in one batch.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #limit\n\t\t */\n\t\tthis.limit = limit;\n\n\t\t/**\n\t\t * Whether the buffer is locked. A locked buffer cannot be reset unless it gets unlocked.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} #isLocked\n\t\t */\n\t\tthis.isLocked = false;\n\n\t\t// The function to be called in order to notify the buffer about batches which appeared in the document.\n\t\t// The callback will check whether it is a new batch and in that case the buffer will be flushed.\n\t\t//\n\t\t// The reason why the buffer needs to be flushed whenever a new batch appears is that the changes added afterwards\n\t\t// should be added to a new batch. For instance, when the  user types, then inserts an image, and then types again,\n\t\t// the characters typed after inserting the image should be added to a different batch than the characters typed before.\n\t\tthis._changeCallback = ( evt, batch ) => {\n\t\t\tif ( batch.type != 'transparent' && batch !== this._batch ) {\n\t\t\t\tthis._reset( true );\n\t\t\t}\n\t\t};\n\n\t\tthis._selectionChangeCallback = () => {\n\t\t\tthis._reset();\n\t\t};\n\n\t\tthis.model.document.on( 'change', this._changeCallback );\n\n\t\tthis.model.document.selection.on( 'change:range', this._selectionChangeCallback );\n\t\tthis.model.document.selection.on( 'change:attribute', this._selectionChangeCallback );\n\n\t\t/**\n\t\t * The current batch instance.\n\t\t *\n\t\t * @private\n\t\t * @member #_batch\n\t\t */\n\n\t\t/**\n\t\t * The callback to document the change event which later needs to be removed.\n\t\t *\n\t\t * @private\n\t\t * @member #_changeCallback\n\t\t */\n\n\t\t/**\n\t\t * The callback to document selection `change:attribute` and `change:range` events which resets the buffer.\n\t\t *\n\t\t * @private\n\t\t * @member #_selectionChangeCallback\n\t\t */\n\t}\n\n\t/**\n\t * The current batch to which a feature should add its operations. Once the {@link #size}\n\t * is reached or exceeds the {@link #limit}, the batch is set to a new instance and the size is reset.\n\t *\n\t * @type {module:engine/model/batch~Batch}\n\t */\n\tget batch() {\n\t\tif ( !this._batch ) {\n\t\t\tthis._batch = this.model.createBatch();\n\t\t}\n\n\t\treturn this._batch;\n\t}\n\n\t/**\n\t * The input number of changes into the buffer. Once the {@link #size} is\n\t * reached or exceeds the {@link #limit}, the batch is set to a new instance and the size is reset.\n\t *\n\t * @param {Number} changeCount The number of atomic changes to input.\n\t */\n\tinput( changeCount ) {\n\t\tthis.size += changeCount;\n\n\t\tif ( this.size >= this.limit ) {\n\t\t\tthis._reset( true );\n\t\t}\n\t}\n\n\t/**\n\t * Locks the buffer.\n\t */\n\tlock() {\n\t\tthis.isLocked = true;\n\t}\n\n\t/**\n\t * Unlocks the buffer.\n\t */\n\tunlock() {\n\t\tthis.isLocked = false;\n\t}\n\n\t/**\n\t * Destroys the buffer.\n\t */\n\tdestroy() {\n\t\tthis.model.document.off( 'change', this._changeCallback );\n\t\tthis.model.document.selection.off( 'change:range', this._selectionChangeCallback );\n\t\tthis.model.document.selection.off( 'change:attribute', this._selectionChangeCallback );\n\t}\n\n\t/**\n\t * Resets the change buffer.\n\t *\n\t * @private\n\t * @param {Boolean} [ignoreLock] Whether internal lock {@link #isLocked} should be ignored.\n\t */\n\t_reset( ignoreLock ) {\n\t\tif ( !this.isLocked || ignoreLock ) {\n\t\t\tthis._batch = null;\n\t\t\tthis.size = 0;\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/inputcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\n\nimport ChangeBuffer from './utils/changebuffer';\n\n/**\n * The input command. Used by the {@link module:typing/input~Input input feature} to handle typing.\n *\n * @extends module:core/command~Command\n */\nexport default class InputCommand extends Command {\n\t/**\n\t * Creates an instance of the command.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor\n\t * @param {Number} undoStepSize The maximum number of atomic changes\n\t * which can be contained in one batch in the command buffer.\n\t */\n\tconstructor( editor, undoStepSize ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * Typing's change buffer used to group subsequent changes into batches.\n\t\t *\n\t\t * @readonly\n\t\t * @private\n\t\t * @member {module:typing/utils/changebuffer~ChangeBuffer} #_buffer\n\t\t */\n\t\tthis._buffer = new ChangeBuffer( editor.model, undoStepSize );\n\n\t\t/**\n\t\t * Stores batches created by the input command. The batches are used to differentiate input batches from other batches using\n\t\t * {@link module:typing/input~Input#isInput} method.\n\t\t *\n\t\t * @type {WeakSet<module:engine/model/batch~Batch>}\n\t\t * @protected\n\t\t */\n\t\tthis._batches = new WeakSet();\n\t}\n\n\t/**\n\t * The current change buffer.\n\t *\n\t * @type {module:typing/utils/changebuffer~ChangeBuffer}\n\t */\n\tget buffer() {\n\t\treturn this._buffer;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\tthis._buffer.destroy();\n\t}\n\n\t/**\n\t * Executes the input command. It replaces the content within the given range with the given text.\n\t * Replacing is a two step process, first the content within the range is removed and then the new text is inserted\n\t * at the beginning of the range (which after the removal is a collapsed range).\n\t *\n\t * @fires execute\n\t * @param {Object} [options] The command options.\n\t * @param {String} [options.text=''] The text to be inserted.\n\t * @param {module:engine/model/range~Range} [options.range] The range in which the text is inserted. Defaults\n\t * to the first range in the current selection.\n\t * @param {module:engine/model/range~Range} [options.resultRange] The range where the selection\n\t * should be placed after the insertion. If not specified, the selection will be placed right after\n\t * the inserted text.\n\t */\n\texecute( options = {} ) {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\t\tconst text = options.text || '';\n\t\tconst textInsertions = text.length;\n\t\tconst range = options.range || doc.selection.getFirstRange();\n\t\tconst resultRange = options.resultRange;\n\n\t\tmodel.enqueueChange( this._buffer.batch, writer => {\n\t\t\tconst isCollapsedRange = range.isCollapsed;\n\n\t\t\tthis._buffer.lock();\n\n\t\t\tmodel.deleteContent( model.createSelection( range ) );\n\n\t\t\tif ( text ) {\n\t\t\t\tmodel.insertContent( writer.createText( text, doc.selection.getAttributes() ), range.start );\n\t\t\t}\n\n\t\t\tif ( resultRange ) {\n\t\t\t\twriter.setSelection( resultRange );\n\t\t\t} else if ( isCollapsedRange ) {\n\t\t\t\t// If range was collapsed just shift the selection by the number of inserted characters.\n\t\t\t\twriter.setSelection( range.start.getShiftedBy( textInsertions ) );\n\t\t\t}\n\n\t\t\tthis._buffer.unlock();\n\n\t\t\tthis._buffer.input( textInsertions );\n\n\t\t\t// Store the batch as an 'input' batch for the Input.isInput( batch ) check.\n\t\t\tthis._batches.add( this._buffer.batch );\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/utils/injectunsafekeystrokeshandling\n */\n\nimport { getCode } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n\n/**\n * Handles keystrokes which are unsafe for typing. This handler's logic is explained\n * in https://github.com/ckeditor/ckeditor5-typing/issues/83#issuecomment-398690251.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n */\nexport default function injectUnsafeKeystrokesHandling( editor ) {\n\tlet latestCompositionSelection = null;\n\n\tconst model = editor.model;\n\tconst view = editor.editing.view;\n\tconst inputCommand = editor.commands.get( 'input' );\n\n\t// For Android, we want to handle keystrokes on `beforeinput` to be sure that code in `DeleteObserver` already had a chance to be fired.\n\tif ( env.isAndroid ) {\n\t\tview.document.on( 'beforeinput', ( evt, evtData ) => handleUnsafeKeystroke( evtData ), { priority: 'lowest' } );\n\t} else {\n\t\tview.document.on( 'keydown', ( evt, evtData ) => handleUnsafeKeystroke( evtData ), { priority: 'lowest' } );\n\t}\n\n\tview.document.on( 'compositionstart', handleCompositionStart, { priority: 'lowest' } );\n\n\tview.document.on( 'compositionend', () => {\n\t\tlatestCompositionSelection = model.createSelection( model.document.selection );\n\t}, { priority: 'lowest' } );\n\n\t// Handles the keydown event. We need to guess whether such keystroke is going to result\n\t// in typing. If so, then before character insertion happens, any selected content needs\n\t// to be deleted. Otherwise the default browser deletion mechanism would be\n\t// triggered, resulting in:\n\t//\n\t// * Hundreds of mutations which could not be handled.\n\t// * But most importantly, loss of control over how the content is being deleted.\n\t//\n\t// The method is used in a low-priority listener, hence allowing other listeners (e.g. delete or enter features)\n\t// to handle the event.\n\t//\n\t// @param {module:engine/view/observer/keyobserver~KeyEventData} evtData\n\tfunction handleUnsafeKeystroke( evtData ) {\n\t\tconst doc = model.document;\n\t\tconst isComposing = view.document.isComposing;\n\t\tconst isSelectionUnchanged = latestCompositionSelection && latestCompositionSelection.isEqual( doc.selection );\n\n\t\t// Reset stored composition selection.\n\t\tlatestCompositionSelection = null;\n\n\t\t// By relying on the state of the input command we allow disabling the entire input easily\n\t\t// by just disabling the input command. We could’ve used here the delete command but that\n\t\t// would mean requiring the delete feature which would block loading one without the other.\n\t\t// We could also check the editor.isReadOnly property, but that wouldn't allow to block\n\t\t// the input without blocking other features.\n\t\tif ( !inputCommand.isEnabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( isSafeKeystroke( evtData ) || doc.selection.isCollapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If during composition, deletion should be prevented as it may remove composed sequence (#83).\n\t\tif ( isComposing && evtData.keyCode === 229 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there is a `keydown` event fired with '229' keycode it might be related\n\t\t// to recent composition. Check if selection is the same as upon ending recent composition,\n\t\t// if so do not remove selected content as it will remove composed sequence (#83).\n\t\tif ( !isComposing && evtData.keyCode === 229 && isSelectionUnchanged ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdeleteSelectionContent();\n\t}\n\n\t// Handles the `compositionstart` event. It is used only in special cases to remove the contents\n\t// of a non-collapsed selection so composition itself does not result in complex mutations.\n\t//\n\t// The special case mentioned above is a situation in which the `keydown` event is fired after\n\t// `compositionstart` event. In such cases {@link #handleKeydown} cannot clear current selection\n\t// contents (because it is too late and will break the composition) so the composition handler takes care of it.\n\tfunction handleCompositionStart() {\n\t\tconst doc = model.document;\n\t\tconst isFlatSelection = doc.selection.rangeCount === 1 ? doc.selection.getFirstRange().isFlat : true;\n\n\t\t// If on `compositionstart` there is a non-collapsed selection which start and end have different parents\n\t\t// it means the `handleKeydown()` method did not remove its contents. It happens usually because\n\t\t// of different order of events (`compositionstart` before `keydown` - in Safari). In such cases\n\t\t// we need to remove selection contents on composition start (#83).\n\t\tif ( doc.selection.isCollapsed || isFlatSelection ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdeleteSelectionContent();\n\t}\n\n\tfunction deleteSelectionContent() {\n\t\tconst buffer = inputCommand.buffer;\n\n\t\tbuffer.lock();\n\n\t\tmodel.enqueueChange( buffer.batch, () => {\n\t\t\tmodel.deleteContent( model.document.selection );\n\t\t} );\n\n\t\tbuffer.unlock();\n\t}\n}\n\nconst safeKeycodes = [\n\tgetCode( 'arrowUp' ),\n\tgetCode( 'arrowRight' ),\n\tgetCode( 'arrowDown' ),\n\tgetCode( 'arrowLeft' ),\n\t9, // Tab\n\t16, // Shift\n\t17, // Ctrl\n\t18, // Alt\n\t19, // Pause\n\t20, // CapsLock\n\t27, // Escape\n\t33, // PageUp\n\t34, // PageDown\n\t35, // Home\n\t36, // End,\n\t45, // Insert,\n\t91, // Windows,\n\t93, // Menu key,\n\t144, // NumLock\n\t145, // ScrollLock,\n\t173, // Mute/Unmute\n\t174, // Volume up\n\t175, // Volume down,\n\t176, // Next song,\n\t177, // Previous song,\n\t178, // Stop,\n\t179, // Play/Pause,\n\t255 // Display brightness (increase and decrease)\n];\n\n// Function keys.\nfor ( let code = 112; code <= 135; code++ ) {\n\tsafeKeycodes.push( code );\n}\n\n// Returns `true` if a keystroke should not cause any content change caused by \"typing\".\n//\n// Note: This implementation is very simple and will need to be refined with time.\n//\n// @private\n// @param {engine.view.observer.keyObserver.KeyEventData} keyData\n// @returns {Boolean}\nfunction isSafeKeystroke( keyData ) {\n\t// Keystrokes which contain Ctrl don't represent typing.\n\tif ( keyData.ctrlKey ) {\n\t\treturn true;\n\t}\n\n\treturn safeKeycodes.includes( keyData.keyCode );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/utils/utils\n */\n\nimport diff from '@ckeditor/ckeditor5-utils/src/diff';\nimport diffToChanges from '@ckeditor/ckeditor5-utils/src/difftochanges';\n\n/**\n * Returns true if container children have mutated or more than a single text node was changed.\n *\n * @private\n * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n * module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n * @returns {Boolean}\n */\nexport function containerChildrenMutated( mutations ) {\n\tif ( mutations.length == 0 ) {\n\t\treturn false;\n\t}\n\n\t// Check if there is any mutation of `children` type or any mutation that changes more than one text node.\n\tfor ( const mutation of mutations ) {\n\t\tif ( mutation.type === 'children' && !getSingleTextNodeChange( mutation ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * Returns change made to a single text node.\n *\n * @private\n * @param {module:engine/view/observer/mutationobserver~MutatedText|\n * module:engine/view/observer/mutationobserver~MutatedChildren} mutation\n * @returns {Object|undefined} Change object (see {@link module:utils/difftochanges~diffToChanges} output)\n * or undefined if more than a single text node was changed.\n */\nexport function getSingleTextNodeChange( mutation ) {\n\t// One new node.\n\tif ( mutation.newChildren.length - mutation.oldChildren.length != 1 ) {\n\t\treturn;\n\t}\n\n\t// Which is text.\n\tconst diffResult = diff( mutation.oldChildren, mutation.newChildren, compareChildNodes );\n\tconst changes = diffToChanges( diffResult, mutation.newChildren );\n\n\t// In case of [ delete, insert, insert ] the previous check will not exit.\n\tif ( changes.length > 1 ) {\n\t\treturn;\n\t}\n\n\tconst change = changes[ 0 ];\n\n\t// Which is text.\n\tif ( !( !!change.values[ 0 ] && change.values[ 0 ].is( 'text' ) ) ) {\n\t\treturn;\n\t}\n\n\treturn change;\n}\n\n/**\n * Checks whether two view nodes are identical, which means they are the same object\n * or contain exactly same data (in case of text nodes).\n *\n * @private\n * @param {module:engine/view/node~Node} oldChild\n * @param {module:engine/view/node~Node} newChild\n * @returns {Boolean}\n */\nexport function compareChildNodes( oldChild, newChild ) {\n\tif ( !!oldChild && oldChild.is( 'text' ) && !!newChild && newChild.is( 'text' ) ) {\n\t\treturn oldChild.data === newChild.data;\n\t} else {\n\t\treturn oldChild === newChild;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/difftochanges\n */\n\n/**\n * Creates a set of changes which need to be applied to the input in order to transform\n * it into the output. This function can be used with strings or arrays.\n *\n *\t\tconst input = Array.from( 'abc' );\n *\t\tconst output = Array.from( 'xaby' );\n *\t\tconst changes = diffToChanges( diff( input, output ), output );\n *\n *\t\tchanges.forEach( change => {\n *\t\t\tif ( change.type == 'insert' ) {\n *\t\t\t\tinput.splice( change.index, 0, ...change.values );\n *\t\t\t} else if ( change.type == 'delete' ) {\n *\t\t\t\tinput.splice( change.index, change.howMany );\n *\t\t\t}\n *\t\t} );\n *\n *\t\tinput.join( '' ) == output.join( '' ); // -> true\n *\n * @param {Array.<'equal'|'insert'|'delete'>} diff Result of {@link module:utils/diff~diff}.\n * @param {String|Array} output The string or array which was passed as diff's output.\n * @returns {Array.<Object>} Set of changes (insert or delete) which need to be applied to the input\n * in order to transform it into the output.\n */\nexport default function diffToChanges( diff, output ) {\n\tconst changes = [];\n\tlet index = 0;\n\tlet lastOperation;\n\n\tdiff.forEach( change => {\n\t\tif ( change == 'equal' ) {\n\t\t\tpushLast();\n\n\t\t\tindex++;\n\t\t} else if ( change == 'insert' ) {\n\t\t\tif ( isContinuationOf( 'insert' ) ) {\n\t\t\t\tlastOperation.values.push( output[ index ] );\n\t\t\t} else {\n\t\t\t\tpushLast();\n\n\t\t\t\tlastOperation = {\n\t\t\t\t\ttype: 'insert',\n\t\t\t\t\tindex,\n\t\t\t\t\tvalues: [ output[ index ] ]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tindex++;\n\t\t} else /* if ( change == 'delete' ) */ {\n\t\t\tif ( isContinuationOf( 'delete' ) ) {\n\t\t\t\tlastOperation.howMany++;\n\t\t\t} else {\n\t\t\t\tpushLast();\n\n\t\t\t\tlastOperation = {\n\t\t\t\t\ttype: 'delete',\n\t\t\t\t\tindex,\n\t\t\t\t\thowMany: 1\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t} );\n\n\tpushLast();\n\n\treturn changes;\n\n\tfunction pushLast() {\n\t\tif ( lastOperation ) {\n\t\t\tchanges.push( lastOperation );\n\t\t\tlastOperation = null;\n\t\t}\n\t}\n\n\tfunction isContinuationOf( expected ) {\n\t\treturn lastOperation && lastOperation.type == expected;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/utils/injecttypingmutationshandling\n */\n\nimport diff from '@ckeditor/ckeditor5-utils/src/diff';\nimport DomConverter from '@ckeditor/ckeditor5-engine/src/view/domconverter';\n\nimport { getSingleTextNodeChange, containerChildrenMutated } from './utils';\n\n/**\n * Handles mutations caused by normal typing.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n */\nexport default function injectTypingMutationsHandling( editor ) {\n\teditor.editing.view.document.on( 'mutations', ( evt, mutations, viewSelection ) => {\n\t\tnew MutationHandler( editor ).handle( mutations, viewSelection );\n\t} );\n}\n\n/**\n * Helper class for translating DOM mutations into model changes.\n *\n * @private\n */\nclass MutationHandler {\n\t/**\n\t * Creates an instance of the mutation handler.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor\n\t */\n\tconstructor( editor ) {\n\t\t/**\n\t\t * Editor instance for which mutations are handled.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/editor/editor~Editor} #editor\n\t\t */\n\t\tthis.editor = editor;\n\n\t\t/**\n\t\t * The editing controller.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/controller/editingcontroller~EditingController} #editing\n\t\t */\n\t\tthis.editing = this.editor.editing;\n\t}\n\n\t/**\n\t * Handles given mutations.\n\t *\n\t * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n\t * module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n\t * @param {module:engine/view/selection~Selection|null} viewSelection\n\t */\n\thandle( mutations, viewSelection ) {\n\t\tif ( containerChildrenMutated( mutations ) ) {\n\t\t\tthis._handleContainerChildrenMutations( mutations, viewSelection );\n\t\t} else {\n\t\t\tfor ( const mutation of mutations ) {\n\t\t\t\t// Fortunately it will never be both.\n\t\t\t\tthis._handleTextMutation( mutation, viewSelection );\n\t\t\t\tthis._handleTextNodeInsertion( mutation );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Handles situations when container's children mutated during input. This can happen when\n\t * the browser is trying to \"fix\" DOM in certain situations. For example, when the user starts to type\n\t * in `<p><a href=\"\"><i>Link{}</i></a></p>`, the browser might change the order of elements\n\t * to `<p><i><a href=\"\">Link</a>x{}</i></p>`. A similar situation happens when the spell checker\n\t * replaces a word wrapped with `<strong>` with a word wrapped with a `<b>` element.\n\t *\n\t * To handle such situations, the common DOM ancestor of all mutations is converted to the model representation\n\t * and then compared with the current model to calculate the proper text change.\n\t *\n\t * Note: Single text node insertion is handled in {@link #_handleTextNodeInsertion} and text node mutation is handled\n\t * in {@link #_handleTextMutation}).\n\t *\n\t * @private\n\t * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n\t * module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n\t * @param {module:engine/view/selection~Selection|null} viewSelection\n\t */\n\t_handleContainerChildrenMutations( mutations, viewSelection ) {\n\t\t// Get common ancestor of all mutations.\n\t\tconst mutationsCommonAncestor = getMutationsContainer( mutations );\n\n\t\t// Quit if there is no common ancestor.\n\t\tif ( !mutationsCommonAncestor ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst domConverter = this.editor.editing.view.domConverter;\n\n\t\t// Get common ancestor in DOM.\n\t\tconst domMutationCommonAncestor = domConverter.mapViewToDom( mutationsCommonAncestor );\n\n\t\t// Create fresh DomConverter so it will not use existing mapping and convert current DOM to model.\n\t\t// This wouldn't be needed if DomConverter would allow to create fresh view without checking any mappings.\n\t\tconst freshDomConverter = new DomConverter();\n\t\tconst modelFromCurrentDom = this.editor.data.toModel(\n\t\t\tfreshDomConverter.domToView( domMutationCommonAncestor )\n\t\t).getChild( 0 );\n\n\t\t// Current model.\n\t\tconst currentModel = this.editor.editing.mapper.toModelElement( mutationsCommonAncestor );\n\n\t\t// If common ancestor is not mapped, do not do anything. It probably is a parent of another view element.\n\t\t// That means that we would need to diff model elements (see `if` below). Better return early instead of\n\t\t// trying to get a reasonable model ancestor. It will fell into the `if` below anyway.\n\t\t// This situation happens for example for lists. If `<ul>` is a common ancestor, `currentModel` is `undefined`\n\t\t// because `<ul>` is not mapped (`<li>`s are).\n\t\t// See https://github.com/ckeditor/ckeditor5/issues/718.\n\t\tif ( !currentModel ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Get children from both ancestors.\n\t\tconst modelFromDomChildren = Array.from( modelFromCurrentDom.getChildren() );\n\t\tconst currentModelChildren = Array.from( currentModel.getChildren() );\n\n\t\t// Remove the last `<softBreak>` from the end of `modelFromDomChildren` if there is no `<softBreak>` in current model.\n\t\t// If the described scenario happened, it means that this is a bogus `<br />` added by a browser.\n\t\tconst lastDomChild = modelFromDomChildren[ modelFromDomChildren.length - 1 ];\n\t\tconst lastCurrentChild = currentModelChildren[ currentModelChildren.length - 1 ];\n\n\t\tif ( lastDomChild && lastDomChild.is( 'softBreak' ) && lastCurrentChild && !lastCurrentChild.is( 'softBreak' ) ) {\n\t\t\tmodelFromDomChildren.pop();\n\t\t}\n\n\t\tconst schema = this.editor.model.schema;\n\n\t\t// Skip situations when common ancestor has any container elements.\n\t\tif ( !isSafeForTextMutation( modelFromDomChildren, schema ) || !isSafeForTextMutation( currentModelChildren, schema ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Replace &nbsp; inserted by the browser with normal space. See comment in `_handleTextMutation`.\n\t\t// Replace non-texts with any character. This is potentially dangerous but passes in manual tests. The thing is\n\t\t// that we need to take care of proper indexes so we cannot simply remove non-text elements from the content.\n\t\t// By inserting a character we keep all the real texts on their indexes.\n\t\tconst newText = modelFromDomChildren.map( item => item.is( 'text' ) ? item.data : '@' ).join( '' ).replace( /\\u00A0/g, ' ' );\n\t\tconst oldText = currentModelChildren.map( item => item.is( 'text' ) ? item.data : '@' ).join( '' ).replace( /\\u00A0/g, ' ' );\n\n\t\t// Do nothing if mutations created same text.\n\t\tif ( oldText === newText ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst diffResult = diff( oldText, newText );\n\n\t\tconst { firstChangeAt, insertions, deletions } = calculateChanges( diffResult );\n\n\t\t// Try setting new model selection according to passed view selection.\n\t\tlet modelSelectionRange = null;\n\n\t\tif ( viewSelection ) {\n\t\t\tmodelSelectionRange = this.editing.mapper.toModelRange( viewSelection.getFirstRange() );\n\t\t}\n\n\t\tconst insertText = newText.substr( firstChangeAt, insertions );\n\t\tconst removeRange = this.editor.model.createRange(\n\t\t\tthis.editor.model.createPositionAt( currentModel, firstChangeAt ),\n\t\t\tthis.editor.model.createPositionAt( currentModel, firstChangeAt + deletions )\n\t\t);\n\n\t\tthis.editor.execute( 'input', {\n\t\t\ttext: insertText,\n\t\t\trange: removeRange,\n\t\t\tresultRange: modelSelectionRange\n\t\t} );\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_handleTextMutation( mutation, viewSelection ) {\n\t\tif ( mutation.type != 'text' ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Replace &nbsp; inserted by the browser with normal space.\n\t\t// We want only normal spaces in the model and in the view. Renderer and DOM Converter will be then responsible\n\t\t// for rendering consecutive spaces using &nbsp;, but the model and the view has to be clear.\n\t\t// Other feature may introduce inserting non-breakable space on specific key stroke (for example shift + space).\n\t\t// However then it will be handled outside of mutations, like enter key is.\n\t\t// The replacing is here because it has to be done before `diff` and `diffToChanges` functions, as they\n\t\t// take `newText` and compare it to (cleaned up) view.\n\t\t// It could also be done in mutation observer too, however if any outside plugin would like to\n\t\t// introduce additional events for mutations, they would get already cleaned up version (this may be good or not).\n\t\tconst newText = mutation.newText.replace( /\\u00A0/g, ' ' );\n\t\t// To have correct `diffResult`, we also compare view node text data with &nbsp; replaced by space.\n\t\tconst oldText = mutation.oldText.replace( /\\u00A0/g, ' ' );\n\n\t\t// Do nothing if mutations created same text.\n\t\tif ( oldText === newText ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst diffResult = diff( oldText, newText );\n\n\t\tconst { firstChangeAt, insertions, deletions } = calculateChanges( diffResult );\n\n\t\t// Try setting new model selection according to passed view selection.\n\t\tlet modelSelectionRange = null;\n\n\t\tif ( viewSelection ) {\n\t\t\tmodelSelectionRange = this.editing.mapper.toModelRange( viewSelection.getFirstRange() );\n\t\t}\n\n\t\t// Get the position in view and model where the changes will happen.\n\t\tconst viewPos = this.editing.view.createPositionAt( mutation.node, firstChangeAt );\n\t\tconst modelPos = this.editing.mapper.toModelPosition( viewPos );\n\t\tconst removeRange = this.editor.model.createRange( modelPos, modelPos.getShiftedBy( deletions ) );\n\t\tconst insertText = newText.substr( firstChangeAt, insertions );\n\n\t\tthis.editor.execute( 'input', {\n\t\t\ttext: insertText,\n\t\t\trange: removeRange,\n\t\t\tresultRange: modelSelectionRange\n\t\t} );\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_handleTextNodeInsertion( mutation ) {\n\t\tif ( mutation.type != 'children' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst change = getSingleTextNodeChange( mutation );\n\t\tconst viewPos = this.editing.view.createPositionAt( mutation.node, change.index );\n\t\tconst modelPos = this.editing.mapper.toModelPosition( viewPos );\n\t\tconst insertedText = change.values[ 0 ].data;\n\n\t\tthis.editor.execute( 'input', {\n\t\t\t// Replace &nbsp; inserted by the browser with normal space.\n\t\t\t// See comment in `_handleTextMutation`.\n\t\t\t// In this case we don't need to do this before `diff` because we diff whole nodes.\n\t\t\t// Just change &nbsp; in case there are some.\n\t\t\ttext: insertedText.replace( /\\u00A0/g, ' ' ),\n\t\t\trange: this.editor.model.createRange( modelPos )\n\t\t} );\n\t}\n}\n\n// Returns first common ancestor of all mutations that is either {@link module:engine/view/containerelement~ContainerElement}\n// or {@link module:engine/view/rootelement~RootElement}.\n//\n// @private\n// @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n// module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n// @returns {module:engine/view/containerelement~ContainerElement|engine/view/rootelement~RootElement|undefined}\nfunction getMutationsContainer( mutations ) {\n\tconst lca = mutations\n\t\t.map( mutation => mutation.node )\n\t\t.reduce( ( commonAncestor, node ) => {\n\t\t\treturn commonAncestor.getCommonAncestor( node, { includeSelf: true } );\n\t\t} );\n\n\tif ( !lca ) {\n\t\treturn;\n\t}\n\n\t// We need to look for container and root elements only, so check all LCA's\n\t// ancestors (starting from itself).\n\treturn lca.getAncestors( { includeSelf: true, parentFirst: true } )\n\t\t.find( element => element.is( 'containerElement' ) || element.is( 'rootElement' ) );\n}\n\n// Returns true if provided array contains content that won't be problematic during diffing and text mutation handling.\n//\n// @param {Array.<module:engine/model/node~Node>} children\n// @param {module:engine/model/schema~Schema} schema\n// @returns {Boolean}\nfunction isSafeForTextMutation( children, schema ) {\n\treturn children.every( child => schema.isInline( child ) );\n}\n\n// Calculates first change index and number of characters that should be inserted and deleted starting from that index.\n//\n// @private\n// @param diffResult\n// @returns {{insertions: number, deletions: number, firstChangeAt: *}}\nfunction calculateChanges( diffResult ) {\n\t// Index where the first change happens. Used to set the position from which nodes will be removed and where will be inserted.\n\tlet firstChangeAt = null;\n\t// Index where the last change happens. Used to properly count how many characters have to be removed and inserted.\n\tlet lastChangeAt = null;\n\n\t// Get `firstChangeAt` and `lastChangeAt`.\n\tfor ( let i = 0; i < diffResult.length; i++ ) {\n\t\tconst change = diffResult[ i ];\n\n\t\tif ( change != 'equal' ) {\n\t\t\tfirstChangeAt = firstChangeAt === null ? i : firstChangeAt;\n\t\t\tlastChangeAt = i;\n\t\t}\n\t}\n\n\t// How many characters, starting from `firstChangeAt`, should be removed.\n\tlet deletions = 0;\n\t// How many characters, starting from `firstChangeAt`, should be inserted.\n\tlet insertions = 0;\n\n\tfor ( let i = firstChangeAt; i <= lastChangeAt; i++ ) {\n\t\t// If there is no change (equal) or delete, the character is existing in `oldText`. We count it for removing.\n\t\tif ( diffResult[ i ] != 'insert' ) {\n\t\t\tdeletions++;\n\t\t}\n\n\t\t// If there is no change (equal) or insert, the character is existing in `newText`. We count it for inserting.\n\t\tif ( diffResult[ i ] != 'delete' ) {\n\t\t\tinsertions++;\n\t\t}\n\t}\n\n\treturn { insertions, deletions, firstChangeAt };\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/input\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport InputCommand from './inputcommand';\n\nimport injectUnsafeKeystrokesHandling from './utils/injectunsafekeystrokeshandling';\nimport injectTypingMutationsHandling from './utils/injecttypingmutationshandling';\n\n/**\n * Handles text input coming from the keyboard or other input methods.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Input extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Input';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\t// TODO The above default configuration value should be defined using editor.config.define() once it's fixed.\n\t\tconst inputCommand = new InputCommand( editor, editor.config.get( 'typing.undoStep' ) || 20 );\n\n\t\teditor.commands.add( 'input', inputCommand );\n\n\t\tinjectUnsafeKeystrokesHandling( editor );\n\t\tinjectTypingMutationsHandling( editor );\n\t}\n\n\t/**\n\t * Checks batch if it is a result of user input - e.g. typing.\n\t *\n\t *\t\tconst input = editor.plugins.get( 'Input' );\n\t *\n\t *\t\teditor.model.document.on( 'change:data', ( evt, batch ) => {\n\t *\t\t\tif ( input.isTyping( batch ) ) {\n\t *\t\t\t\tconsole.log( 'The user typed something...' );\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * **Note:** This method checks if the batch was created using {@link module:typing/inputcommand~InputCommand 'input'}\n\t * command as typing changes coming from user input are inserted to the document using that command.\n\t *\n\t * @param {module:engine/model/batch~Batch} batch A batch to check.\n\t * @returns {Boolean}\n\t */\n\tisInput( batch ) {\n\t\tconst inputCommand = this.editor.commands.get( 'input' );\n\n\t\treturn inputCommand._batches.has( batch );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/deletecommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport count from '@ckeditor/ckeditor5-utils/src/count';\n\nimport ChangeBuffer from './utils/changebuffer';\n\n/**\n * The delete command. Used by the {@link module:typing/delete~Delete delete feature} to handle the <kbd>Delete</kbd> and\n * <kbd>Backspace</kbd> keys.\n *\n * @extends module:core/command~Command\n */\nexport default class DeleteCommand extends Command {\n\t/**\n\t * Creates an instance of the command.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor\n\t * @param {'forward'|'backward'} direction The directionality of the delete describing in what direction it\n\t * should consume the content when the selection is collapsed.\n\t */\n\tconstructor( editor, direction ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The directionality of the delete describing in what direction it should\n\t\t * consume the content when the selection is collapsed.\n\t\t *\n\t\t * @readonly\n\t\t * @member {'forward'|'backward'} #direction\n\t\t */\n\t\tthis.direction = direction;\n\n\t\t/**\n\t\t * Delete's change buffer used to group subsequent changes into batches.\n\t\t *\n\t\t * @readonly\n\t\t * @private\n\t\t * @member {typing.ChangeBuffer} #buffer\n\t\t */\n\t\tthis._buffer = new ChangeBuffer( editor.model, editor.config.get( 'typing.undoStep' ) );\n\t}\n\n\t/**\n\t * The current change buffer.\n\t *\n\t * @type {module:typing/utils/changebuffer~ChangeBuffer}\n\t */\n\tget buffer() {\n\t\treturn this._buffer;\n\t}\n\n\t/**\n\t * Executes the delete command. Depending on whether the selection is collapsed or not, deletes its content\n\t * or a piece of content in the {@link #direction defined direction}.\n\t *\n\t * @fires execute\n\t * @param {Object} [options] The command options.\n\t * @param {'character'} [options.unit='character'] See {@link module:engine/model/utils/modifyselection~modifySelection}'s options.\n\t * @param {Number} [options.sequence=1] A number describing which subsequent delete event it is without the key being released.\n\t * See the {@link module:engine/view/document~Document#event:delete} event data.\n\t * @param {module:engine/model/selection~Selection} [options.selection] Selection to remove. If not set, current model selection\n\t * will be used.\n\t */\n\texecute( options = {} ) {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\n\t\tmodel.enqueueChange( this._buffer.batch, writer => {\n\t\t\tthis._buffer.lock();\n\n\t\t\tconst selection = writer.createSelection( options.selection || doc.selection );\n\n\t\t\t// Do not replace the whole selected content if selection was collapsed.\n\t\t\t// This prevents such situation:\n\t\t\t//\n\t\t\t// <h1></h1><p>[]</p>\t-->  <h1>[</h1><p>]</p> \t\t-->  <p></p>\n\t\t\t// starting content\t\t-->   after `modifySelection`\t-->  after `deleteContent`.\n\t\t\tconst doNotResetEntireContent = selection.isCollapsed;\n\n\t\t\t// Try to extend the selection in the specified direction.\n\t\t\tif ( selection.isCollapsed ) {\n\t\t\t\tmodel.modifySelection( selection, { direction: this.direction, unit: options.unit } );\n\t\t\t}\n\n\t\t\t// Check if deleting in an empty editor. See #61.\n\t\t\tif ( this._shouldEntireContentBeReplacedWithParagraph( options.sequence || 1 ) ) {\n\t\t\t\tthis._replaceEntireContentWithParagraph( writer );\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If selection is still collapsed, then there's nothing to delete.\n\t\t\tif ( selection.isCollapsed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet changeCount = 0;\n\n\t\t\tselection.getFirstRange().getMinimalFlatRanges().forEach( range => {\n\t\t\t\tchangeCount += count(\n\t\t\t\t\trange.getWalker( { singleCharacters: true, ignoreElementEnd: true, shallow: true } )\n\t\t\t\t);\n\t\t\t} );\n\n\t\t\tmodel.deleteContent( selection, { doNotResetEntireContent } );\n\t\t\tthis._buffer.input( changeCount );\n\n\t\t\twriter.setSelection( selection );\n\n\t\t\tthis._buffer.unlock();\n\t\t} );\n\t}\n\n\t/**\n\t * If the user keeps <kbd>Backspace</kbd> or <kbd>Delete</kbd> key pressed, the content of the current\n\t * editable will be cleared. However, this will not yet lead to resetting the remaining block to a paragraph\n\t * (which happens e.g. when the user does <kbd>Ctrl</kbd> + <kbd>A</kbd>, <kbd>Backspace</kbd>).\n\t *\n\t * But, if the user pressed the key in an empty editable for the first time,\n\t * we want to replace the entire content with a paragraph if:\n\t *\n\t * * the current limit element is empty,\n\t * * the paragraph is allowed in the limit element,\n\t * * the limit doesn't already have a paragraph inside.\n\t *\n\t * See https://github.com/ckeditor/ckeditor5-typing/issues/61.\n\t *\n\t * @private\n\t * @param {Number} sequence A number describing which subsequent delete event it is without the key being released.\n\t * @returns {Boolean}\n\t */\n\t_shouldEntireContentBeReplacedWithParagraph( sequence ) {\n\t\t// Does nothing if user pressed and held the \"Backspace\" or \"Delete\" key.\n\t\tif ( sequence > 1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\t\tconst selection = doc.selection;\n\t\tconst limitElement = model.schema.getLimitElement( selection );\n\n\t\t// If a collapsed selection contains the whole content it means that the content is empty\n\t\t// (from the user perspective).\n\t\tconst limitElementIsEmpty = selection.isCollapsed && selection.containsEntireContent( limitElement );\n\n\t\tif ( !limitElementIsEmpty ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( !model.schema.checkChild( limitElement, 'paragraph' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst limitElementFirstChild = limitElement.getChild( 0 );\n\n\t\t// Does nothing if the limit element already contains only a paragraph.\n\t\t// We ignore the case when paragraph might have some inline elements (<p><inlineWidget>[]</inlineWidget></p>)\n\t\t// because we don't support such cases yet and it's unclear whether inlineWidget shouldn't be a limit itself.\n\t\tif ( limitElementFirstChild && limitElementFirstChild.name === 'paragraph' ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * The entire content is replaced with the paragraph. Selection is moved inside the paragraph.\n\t *\n\t * @private\n\t */\n\t_replaceEntireContentWithParagraph( writer ) {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\t\tconst selection = doc.selection;\n\t\tconst limitElement = model.schema.getLimitElement( selection );\n\t\tconst paragraph = writer.createElement( 'paragraph' );\n\n\t\twriter.remove( writer.createRangeIn( limitElement ) );\n\t\twriter.insert( paragraph, limitElement );\n\n\t\twriter.setSelection( paragraph, 0 );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/deleteobserver\n */\n\nimport Observer from '@ckeditor/ckeditor5-engine/src/view/observer/observer';\nimport DomEventData from '@ckeditor/ckeditor5-engine/src/view/observer/domeventdata';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n\n/**\n * Delete observer introduces the {@link module:engine/view/document~Document#event:delete} event.\n *\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class DeleteObserver extends Observer {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\tconst document = view.document;\n\t\tlet sequence = 0;\n\n\t\tdocument.on( 'keyup', ( evt, data ) => {\n\t\t\tif ( data.keyCode == keyCodes.delete || data.keyCode == keyCodes.backspace ) {\n\t\t\t\tsequence = 0;\n\t\t\t}\n\t\t} );\n\n\t\tdocument.on( 'keydown', ( evt, data ) => {\n\t\t\tconst deleteData = {};\n\n\t\t\tif ( data.keyCode == keyCodes.delete ) {\n\t\t\t\tdeleteData.direction = 'forward';\n\t\t\t\tdeleteData.unit = 'character';\n\t\t\t} else if ( data.keyCode == keyCodes.backspace ) {\n\t\t\t\tdeleteData.direction = 'backward';\n\t\t\t\tdeleteData.unit = 'codePoint';\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst hasWordModifier = env.isMac ? data.altKey : data.ctrlKey;\n\t\t\tdeleteData.unit = hasWordModifier ? 'word' : deleteData.unit;\n\t\t\tdeleteData.sequence = ++sequence;\n\n\t\t\tfireViewDeleteEvent( evt, data.domEvent, deleteData );\n\t\t} );\n\n\t\t// `beforeinput` is handled only for Android devices. Desktop Chrome and iOS are skipped because they are working fine now.\n\t\tif ( env.isAndroid ) {\n\t\t\tdocument.on( 'beforeinput', ( evt, data ) => {\n\t\t\t\t// If event type is other than `deleteContentBackward` then this is not deleting.\n\t\t\t\tif ( data.domEvent.inputType != 'deleteContentBackward' ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst deleteData = {\n\t\t\t\t\tunit: 'codepoint',\n\t\t\t\t\tdirection: 'backward',\n\t\t\t\t\tsequence: 1\n\t\t\t\t};\n\n\t\t\t\t// Android IMEs may change the DOM selection on `beforeinput` event so that the selection contains all the text\n\t\t\t\t// that the IME wants to remove. We will pass this information to `delete` event so proper part of the content is removed.\n\t\t\t\t//\n\t\t\t\t// Sometimes it is only expanding by a one character (in case of collapsed selection). In this case we don't need to\n\t\t\t\t// set a different selection to remove, it will work just fine.\n\t\t\t\tconst domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\n\n\t\t\t\tif ( domSelection.anchorNode == domSelection.focusNode && domSelection.anchorOffset + 1 != domSelection.focusOffset ) {\n\t\t\t\t\tdeleteData.selectionToRemove = view.domConverter.domSelectionToView( domSelection );\n\t\t\t\t}\n\n\t\t\t\tfireViewDeleteEvent( evt, data.domEvent, deleteData );\n\t\t\t} );\n\t\t}\n\n\t\tfunction fireViewDeleteEvent( originalEvent, domEvent, deleteData ) {\n\t\t\t// Save the event object to check later if it was stopped or not.\n\t\t\tlet event;\n\t\t\tdocument.once( 'delete', evt => ( event = evt ), { priority: Number.POSITIVE_INFINITY } );\n\n\t\t\tdocument.fire( 'delete', new DomEventData( document, domEvent, deleteData ) );\n\n\t\t\t// Stop the original event if `delete` event was stopped.\n\t\t\t// https://github.com/ckeditor/ckeditor5/issues/753\n\t\t\tif ( event && event.stop.called ) {\n\t\t\t\toriginalEvent.stop();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tobserve() {}\n}\n\n/**\n * Event fired when the user tries to delete content (e.g. presses <kbd>Delete</kbd> or <kbd>Backspace</kbd>).\n *\n * Note: This event is fired by the {@link module:typing/deleteobserver~DeleteObserver observer}\n * (usually registered by the {@link module:typing/delete~Delete delete feature}).\n *\n * @event module:engine/view/document~Document#event:delete\n * @param {module:engine/view/observer/domeventdata~DomEventData} data\n * @param {'forward'|'delete'} data.direction The direction in which the deletion should happen.\n * @param {'character'|'word'} data.unit The \"amount\" of content that should be deleted.\n * @param {Number} data.sequence A number describing which subsequent delete event it is without the key being released.\n * If it's 2 or more it means that the key was pressed and hold.\n * @param {module:engine/view/selection~Selection} [data.selectionToRemove] View selection which content should be removed. If not set,\n * current selection should be used.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/delete\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport DeleteCommand from './deletecommand';\nimport DeleteObserver from './deleteobserver';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n\n/**\n * The delete and backspace feature. Handles the <kbd>Delete</kbd> and <kbd>Backspace</kbd> keys in the editor.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Delete extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Delete';\n\t}\n\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst view = editor.editing.view;\n\t\tconst viewDocument = view.document;\n\n\t\tview.addObserver( DeleteObserver );\n\n\t\teditor.commands.add( 'forwardDelete', new DeleteCommand( editor, 'forward' ) );\n\t\teditor.commands.add( 'delete', new DeleteCommand( editor, 'backward' ) );\n\n\t\tthis.listenTo( viewDocument, 'delete', ( evt, data ) => {\n\t\t\tconst deleteCommandParams = { unit: data.unit, sequence: data.sequence };\n\n\t\t\t// If a specific (view) selection to remove was set, convert it to a model selection and set as a parameter for `DeleteCommand`.\n\t\t\tif ( data.selectionToRemove ) {\n\t\t\t\tconst modelSelection = editor.model.createSelection();\n\t\t\t\tconst ranges = [];\n\n\t\t\t\tfor ( const viewRange of data.selectionToRemove.getRanges() ) {\n\t\t\t\t\tranges.push( editor.editing.mapper.toModelRange( viewRange ) );\n\t\t\t\t}\n\n\t\t\t\tmodelSelection.setTo( ranges );\n\n\t\t\t\tdeleteCommandParams.selection = modelSelection;\n\t\t\t}\n\n\t\t\teditor.execute( data.direction == 'forward' ? 'forwardDelete' : 'delete', deleteCommandParams );\n\n\t\t\tdata.preventDefault();\n\n\t\t\tview.scrollToTheSelection();\n\t\t} );\n\n\t\t// Android IMEs have a quirk - they change DOM selection after the input changes were performed by the browser.\n\t\t// This happens on `keyup` event. Android doesn't know anything about our deletion and selection handling. Even if the selection\n\t\t// was changed during input events, IME remembers the position where the selection \"should\" be placed and moves it there.\n\t\t//\n\t\t// To prevent incorrect selection, we save the selection after deleting here and then re-set it on `keyup`. This has to be done\n\t\t// on DOM selection level, because on `keyup` the model selection is still the same as it was just after deletion, so it\n\t\t// wouldn't be changed and the fix would do nothing.\n\t\t//\n\t\tif ( env.isAndroid ) {\n\t\t\tlet domSelectionAfterDeletion = null;\n\n\t\t\tthis.listenTo( viewDocument, 'delete', ( evt, data ) => {\n\t\t\t\tconst domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\n\n\t\t\t\tdomSelectionAfterDeletion = {\n\t\t\t\t\tanchorNode: domSelection.anchorNode,\n\t\t\t\t\tanchorOffset: domSelection.anchorOffset,\n\t\t\t\t\tfocusNode: domSelection.focusNode,\n\t\t\t\t\tfocusOffset: domSelection.focusOffset\n\t\t\t\t};\n\t\t\t}, { priority: 'lowest' } );\n\n\t\t\tthis.listenTo( viewDocument, 'keyup', ( evt, data ) => {\n\t\t\t\tif ( domSelectionAfterDeletion ) {\n\t\t\t\t\tconst domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\n\n\t\t\t\t\tdomSelection.collapse( domSelectionAfterDeletion.anchorNode, domSelectionAfterDeletion.anchorOffset );\n\t\t\t\t\tdomSelection.extend( domSelectionAfterDeletion.focusNode, domSelectionAfterDeletion.focusOffset );\n\n\t\t\t\t\tdomSelectionAfterDeletion = null;\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/typing\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Input from './input';\nimport Delete from './delete';\n\n/**\n * The typing feature. It handles typing.\n *\n * This is a \"glue\" plugin which loads the {@link module:typing/input~Input} and {@link module:typing/delete~Delete}\n * plugins.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Typing extends Plugin {\n\tstatic get requires() {\n\t\treturn [ Input, Delete ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Typing';\n\t}\n}\n\n/**\n * The configuration of the typing features. Used by the features from the `@ckeditor/ckeditor5-typing` package.\n *\n * Read more in {@link module:typing/typing~TypingConfig}.\n *\n * @member {module:typing/typing~TypingConfig} module:core/editor/editorconfig~EditorConfig#typing\n */\n\n/**\n * The configuration of the typing features. Used by the typing features in `@ckeditor/ckeditor5-typing` package.\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n * \t\t\t\ttyping: ... // Typing feature options.\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface TypingConfig\n */\n\n/**\n * The granularity of undo/redo for typing and deleting. The value `20` means (more or less) that a new undo step\n * is created every 20 characters are inserted or deleted.\n *\n * @member {Number} [module:typing/typing~TypingConfig#undoStep=20]\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport InsertOperation from './insertoperation';\nimport AttributeOperation from './attributeoperation';\nimport RenameOperation from './renameoperation';\nimport MarkerOperation from './markeroperation';\nimport MoveOperation from './moveoperation';\nimport RootAttributeOperation from './rootattributeoperation';\nimport MergeOperation from './mergeoperation';\nimport SplitOperation from './splitoperation';\nimport NoOperation from './nooperation';\nimport Range from '../range';\nimport Position from '../position';\n\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\n\nconst transformations = new Map();\n\n/**\n * @module engine/model/operation/transform\n */\n\n/**\n * Sets a transformation function to be be used to transform instances of class `OperationA` by instances of class `OperationB`.\n *\n * The `transformationFunction` is passed three parameters:\n *\n * * `a` - operation to be transformed, an instance of `OperationA`,\n * * `b` - operation to be transformed by, an instance of `OperationB`,\n * * {@link module:engine/model/operation/transform~TransformationContext `context`} - object with additional information about\n * transformation context.\n *\n * The `transformationFunction` should return transformation result, which is an array with one or multiple\n * {@link module:engine/model/operation/operation~Operation operation} instances.\n *\n * @protected\n * @param {Function} OperationA\n * @param {Function} OperationB\n * @param {Function} transformationFunction Function to use for transforming.\n */\nfunction setTransformation( OperationA, OperationB, transformationFunction ) {\n\tlet aGroup = transformations.get( OperationA );\n\n\tif ( !aGroup ) {\n\t\taGroup = new Map();\n\t\ttransformations.set( OperationA, aGroup );\n\t}\n\n\taGroup.set( OperationB, transformationFunction );\n}\n\n/**\n * Returns a previously set transformation function for transforming an instance of `OperationA` by an instance of `OperationB`.\n *\n * If no transformation was set for given pair of operations, {@link module:engine/model/operation/transform~noUpdateTransformation}\n * is returned. This means that if no transformation was set, the `OperationA` instance will not change when transformed\n * by the `OperationB` instance.\n *\n * @private\n * @param {Function} OperationA\n * @param {Function} OperationB\n * @returns {Function} Function set to transform an instance of `OperationA` by an instance of `OperationB`.\n */\nfunction getTransformation( OperationA, OperationB ) {\n\tconst aGroup = transformations.get( OperationA );\n\n\tif ( aGroup && aGroup.has( OperationB ) ) {\n\t\treturn aGroup.get( OperationB );\n\t}\n\n\treturn noUpdateTransformation;\n}\n\n/**\n * A transformation function that only clones operation to transform, without changing it.\n *\n * @private\n * @param {module:engine/model/operation/operation~Operation} a Operation to transform.\n * @returns {Array.<module:engine/model/operation/operation~Operation>}\n */\nfunction noUpdateTransformation( a ) {\n\treturn [ a ];\n}\n\n/**\n * Transforms operation `a` by operation `b`.\n *\n * @param {module:engine/model/operation/operation~Operation} a Operation to be transformed.\n * @param {module:engine/model/operation/operation~Operation} b Operation to transform by.\n * @param {module:engine/model/operation/transform~TransformationContext} context Transformation context for this transformation.\n * @returns {Array.<module:engine/model/operation/operation~Operation>} Transformation result.\n */\nexport function transform( a, b, context = {} ) {\n\tconst transformationFunction = getTransformation( a.constructor, b.constructor );\n\n\ttry {\n\t\ta = a.clone();\n\n\t\treturn transformationFunction( a, b, context );\n\t} catch ( e ) {\n\t\t// @if CK_DEBUG // console.warn( 'Error during operation transformation!', e.message );\n\t\t// @if CK_DEBUG // console.warn( 'Transformed operation', a );\n\t\t// @if CK_DEBUG // console.warn( 'Operation transformed by', b );\n\t\t// @if CK_DEBUG // console.warn( 'context.aIsStrong', context.aIsStrong );\n\t\t// @if CK_DEBUG // console.warn( 'context.aWasUndone', context.aWasUndone );\n\t\t// @if CK_DEBUG // console.warn( 'context.bWasUndone', context.bWasUndone );\n\t\t// @if CK_DEBUG // console.warn( 'context.abRelation', context.abRelation );\n\t\t// @if CK_DEBUG // console.warn( 'context.baRelation', context.baRelation );\n\n\t\tthrow e;\n\t}\n}\n\n/**\n * Performs a transformation of two sets of operations - `operationsA` and `operationsB`. The transformation is two-way -\n * both transformed `operationsA` and transformed `operationsB` are returned.\n *\n * Note, that the first operation in each set should base on the same document state (\n * {@link module:engine/model/document~Document#version document version}).\n *\n * It is assumed that `operationsA` are \"more important\" during conflict resolution between two operations.\n *\n * New copies of both passed arrays and operations inside them are returned. Passed arguments are not altered.\n *\n * Base versions of the transformed operations sets are updated accordingly. For example, assume that base versions are `4`\n * and there are `3` operations in `operationsA` and `5` operations in `operationsB`. Then:\n *\n * * transformed `operationsA` will start from base version `9` (`4` base version + `5` operations B),\n * * transformed `operationsB` will start from base version `7` (`4` base version + `3` operations A).\n *\n * If no operation was broken into two during transformation, then both sets will end up with an operation that bases on version `11`:\n *\n * * transformed `operationsA` start from `9` and there are `3` of them, so the last will have `baseVersion` equal to `11`,\n * * transformed `operationsB` start from `7` and there are `5` of them, so the last will have `baseVersion` equal to `11`.\n *\n * @param {Array.<module:engine/model/operation/operation~Operation>} operationsA\n * @param {Array.<module:engine/model/operation/operation~Operation>} operationsB\n * @param {Object} options Additional transformation options.\n * @param {module:engine/model/document~Document|null} options.document Document which the operations change.\n * @param {Boolean} [options.useRelations=false] Whether during transformation relations should be used (used during undo for\n * better conflict resolution).\n * @param {Boolean} [options.padWithNoOps=false] Whether additional {@link module:engine/model/operation/nooperation~NoOperation}s\n * should be added to the transformation results to force the same last base version for both transformed sets (in case\n * if some operations got broken into multiple operations during transformation).\n * @returns {Object} Transformation result.\n * @returns {Array.<module:engine/model/operation/operation~Operation>} return.operationsA Transformed `operationsA`.\n * @returns {Array.<module:engine/model/operation/operation~Operation>} return.operationsB Transformed `operationsB`.\n * @returns {Map} return.originalOperations A map that links transformed operations to original operations. The keys are the transformed\n * operations and the values are the original operations from the input (`operationsA` and `operationsB`).\n */\nexport function transformSets( operationsA, operationsB, options ) {\n\t// Create new arrays so the originally passed arguments are not changed.\n\t// No need to clone operations, they are cloned as they are transformed.\n\toperationsA = operationsA.slice();\n\toperationsB = operationsB.slice();\n\n\tconst contextFactory = new ContextFactory( options.document, options.useRelations, options.forceWeakRemove );\n\tcontextFactory.setOriginalOperations( operationsA );\n\tcontextFactory.setOriginalOperations( operationsB );\n\n\tconst originalOperations = contextFactory.originalOperations;\n\n\t// If one of sets is empty there is simply nothing to transform, so return sets as they are.\n\tif ( operationsA.length == 0 || operationsB.length == 0 ) {\n\t\treturn { operationsA, operationsB, originalOperations };\n\t}\n\t//\n\t// Following is a description of transformation process:\n\t//\n\t// There are `operationsA` and `operationsB` to be transformed, both by both.\n\t//\n\t// So, suppose we have sets of two operations each: `operationsA` = `[ a1, a2 ]`, `operationsB` = `[ b1, b2 ]`.\n\t//\n\t// Remember, that we can only transform operations that base on the same context. We assert that `a1` and `b1` base on\n\t// the same context and we transform them. Then, we get `a1'` and `b1'`. `a2` bases on a context with `a1` -- `a2`\n\t// is an operation that followed `a1`. Similarly, `b2` bases on a context with `b1`.\n\t//\n\t// However, since `a1'` is a result of transformation by `b1`, `a1'` now also has a context with `b1`. This means that\n\t// we can safely transform `a1'` by `b2`. As we finish transforming `a1`, we also transformed all `operationsB`.\n\t// All `operationsB` also have context including `a1`. Now, we can properly transform `a2` by those operations.\n\t//\n\t// The transformation process can be visualized on a transformation diagram (\"diamond diagram\"):\n\t//\n\t//          [the initial state]\n\t//         [common for a1 and b1]\n\t//\n\t//                   *\n\t//                  / \\\n\t//                 /   \\\n\t//               b1     a1\n\t//               /       \\\n\t//              /         \\\n\t//             *           *\n\t//            / \\         / \\\n\t//           /   \\       /   \\\n\t//         b2    a1'   b1'    a2\n\t//         /       \\   /       \\\n\t//        /         \\ /         \\\n\t//       *           *           *\n\t//        \\         / \\         /\n\t//         \\       /   \\       /\n\t//        a1''   b2'   a2'   b1''\n\t//           \\   /       \\   /\n\t//            \\ /         \\ /\n\t//             *           *\n\t//              \\         /\n\t//               \\       /\n\t//              a2''   b2''\n\t//                 \\   /\n\t//                  \\ /\n\t//                   *\n\t//\n\t//           [the final state]\n\t//\n\t// The final state can be reached from the initial state by applying `a1`, `a2`, `b1''` and `b2''`, as well as by\n\t// applying `b1`, `b2`, `a1''`, `a2''`. Note how the operations get to a proper common state before each pair is\n\t// transformed.\n\t//\n\t// Another thing to consider is that an operation during transformation can be broken into multiple operations.\n\t// Suppose that `a1` * `b1` = `[ a11', a12' ]` (instead of `a1'` that we considered previously).\n\t//\n\t// In that case, we leave `a12'` for later and we continue transforming `a11'` until it is transformed by all `operationsB`\n\t// (in our case it is just `b2`). At this point, `b1` is transformed by \"whole\" `a1`, while `b2` is only transformed\n\t// by `a11'`. Similarly, `a12'` is only transformed by `b1`. This leads to a conclusion that we need to start transforming `a12'`\n\t// from the moment just after it was broken. So, `a12'` is transformed by `b2`. Now, \"the whole\" `a1` is transformed\n\t// by `operationsB`, while all `operationsB` are transformed by \"the whole\" `a1`. This means that we can continue with\n\t// following `operationsA` (in our case it is just `a2`).\n\t//\n\t// Of course, also `operationsB` can be broken. However, since we focus on transforming operation `a` to the end,\n\t// the only thing to do is to store both pieces of operation `b`, so that the next transformed operation `a` will\n\t// be transformed by both of them.\n\t//\n\t//                       *\n\t//                      / \\\n\t//                     /   \\\n\t//                    /     \\\n\t//                  b1       a1\n\t//                  /         \\\n\t//                 /           \\\n\t//                /             \\\n\t//               *               *\n\t//              / \\             / \\\n\t//             /  a11'         /   \\\n\t//            /     \\         /     \\\n\t//          b2       *      b1'      a2\n\t//          /       / \\     /         \\\n\t//         /       /  a12' /           \\\n\t//        /       /     \\ /             \\\n\t//       *       b2'     *               *\n\t//        \\     /       / \\             /\n\t//       a11'' /     b21'' \\           /\n\t//          \\ /       /     \\         /\n\t//           *       *      a2'     b1''\n\t//            \\     / \\       \\     /\n\t//          a12'' b22''\\       \\   /\n\t//              \\ /     \\       \\ /\n\t//               *      a2''     *\n\t//                \\       \\     /\n\t//                 \\       \\  b21'''\n\t//                  \\       \\ /\n\t//                a2'''      *\n\t//                    \\     /\n\t//                     \\  b22'''\n\t//                      \\ /\n\t//                       *\n\t//\n\t// Note, how `a1` is broken and transformed into `a11'` and `a12'`, while `b2'` got broken and transformed into `b21''` and `b22''`.\n\t//\n\t// Having all that on mind, here is an outline for the transformation process algorithm:\n\t//\n\t// 1. We have `operationsA` and `operationsB` array, which we dynamically update as the transformation process goes.\n\t//\n\t// 2. We take next (or first) operation from `operationsA` and check from which operation `b` we need to start transforming it.\n\t// All original `operationsA` are set to be transformed starting from the first operation `b`.\n\t//\n\t// 3. We take operations from `operationsB`, one by one, starting from the correct one, and transform operation `a`\n\t// by operation `b` (and vice versa). We update `operationsA` and `operationsB` by replacing the original operations\n\t// with the transformation results.\n\t//\n\t// 4. If operation is broken into multiple operations, we save all the new operations in the place of the\n\t// original operation.\n\t//\n\t// 5. Additionally, if operation `a` was broken, for the \"new\" operation, we remember from which operation `b` it should\n\t// be transformed by.\n\t//\n\t// 6. We continue transforming \"current\" operation `a` until it is transformed by all `operationsB`. Then, go to 2.\n\t// unless the last operation `a` was transformed.\n\t//\n\t// The actual implementation of the above algorithm is slightly different, as only one loop (while) is used.\n\t// The difference is that we have \"current\" `a` operation to transform and we store the index of the next `b` operation\n\t// to transform by. Each loop operates on two indexes then: index pointing to currently processed `a` operation and\n\t// index pointing to next `b` operation. Each loop is just one `a * b` + `b * a` transformation. After each loop\n\t// operation `b` index is updated. If all `b` operations were visited for the current `a` operation, we change\n\t// current `a` operation index to the next one.\n\t//\n\n\t// For each operation `a`, keeps information what is the index in `operationsB` from which the transformation should start.\n\tconst nextTransformIndex = new WeakMap();\n\n\t// For all the original `operationsA`, set that they should be transformed starting from the first of `operationsB`.\n\tfor ( const op of operationsA ) {\n\t\tnextTransformIndex.set( op, 0 );\n\t}\n\n\t// Additional data that is used for some postprocessing after the main transformation process is done.\n\tconst data = {\n\t\tnextBaseVersionA: operationsA[ operationsA.length - 1 ].baseVersion + 1,\n\t\tnextBaseVersionB: operationsB[ operationsB.length - 1 ].baseVersion + 1,\n\t\toriginalOperationsACount: operationsA.length,\n\t\toriginalOperationsBCount: operationsB.length\n\t};\n\n\t// Index of currently transformed operation `a`.\n\tlet i = 0;\n\n\t// While not all `operationsA` are transformed...\n\twhile ( i < operationsA.length ) {\n\t\t// Get \"current\" operation `a`.\n\t\tconst opA = operationsA[ i ];\n\n\t\t// For the \"current\" operation `a`, get the index of the next operation `b` to transform by.\n\t\tconst indexB = nextTransformIndex.get( opA );\n\n\t\t// If operation `a` was already transformed by every operation `b`, change \"current\" operation `a` to the next one.\n\t\tif ( indexB == operationsB.length ) {\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst opB = operationsB[ indexB ];\n\n\t\t// Transform `a` by `b` and `b` by `a`.\n\t\tconst newOpsA = transform( opA, opB, contextFactory.getContext( opA, opB, true ) );\n\t\tconst newOpsB = transform( opB, opA, contextFactory.getContext( opB, opA, false ) );\n\t\t// As a result we get one or more `newOpsA` and one or more `newOpsB` operations.\n\n\t\t// Update contextual information about operations.\n\t\tcontextFactory.updateRelation( opA, opB );\n\n\t\tcontextFactory.setOriginalOperations( newOpsA, opA );\n\t\tcontextFactory.setOriginalOperations( newOpsB, opB );\n\n\t\t// For new `a` operations, update their index of the next operation `b` to transform them by.\n\t\t//\n\t\t// This is needed even if there was only one result (`a` was not broken) because that information is used\n\t\t// at the beginning of this loop every time.\n\t\tfor ( const newOpA of newOpsA ) {\n\t\t\t// Acknowledge, that operation `b` also might be broken into multiple operations.\n\t\t\t//\n\t\t\t// This is why we raise `indexB` not just by 1. If `newOpsB` are multiple operations, they will be\n\t\t\t// spliced in the place of `opB`. So we need to change `transformBy` accordingly, so that an operation won't\n\t\t\t// be transformed by the same operation (part of it) again.\n\t\t\tnextTransformIndex.set( newOpA, indexB + newOpsB.length );\n\t\t}\n\n\t\t// Update `operationsA` and `operationsB` with the transformed versions.\n\t\toperationsA.splice( i, 1, ...newOpsA );\n\t\toperationsB.splice( indexB, 1, ...newOpsB );\n\t}\n\n\tif ( options.padWithNoOps ) {\n\t\t// If no-operations padding is enabled, count how many extra `a` and `b` operations were generated.\n\t\tconst brokenOperationsACount = operationsA.length - data.originalOperationsACount;\n\t\tconst brokenOperationsBCount = operationsB.length - data.originalOperationsBCount;\n\n\t\t// Then, if that number is not the same, pad `operationsA` or `operationsB` with correct number of no-ops so\n\t\t// that the base versions are equalled.\n\t\t//\n\t\t// Note that only one array will be updated, as only one of those subtractions can be greater than zero.\n\t\tpadWithNoOps( operationsA, brokenOperationsBCount - brokenOperationsACount );\n\t\tpadWithNoOps( operationsB, brokenOperationsACount - brokenOperationsBCount );\n\t}\n\n\t// Finally, update base versions of transformed operations.\n\tupdateBaseVersions( operationsA, data.nextBaseVersionB );\n\tupdateBaseVersions( operationsB, data.nextBaseVersionA );\n\n\treturn { operationsA, operationsB, originalOperations };\n}\n\n// Gathers additional data about operations processed during transformation. Can be used to obtain contextual information\n// about two operations that are about to be transformed. This contextual information can be used for better conflict resolution.\nclass ContextFactory {\n\t// Creates `ContextFactory` instance.\n\t//\n\t// @param {module:engine/model/document~Document} document Document which the operations change.\n\t// @param {Boolean} useRelations Whether during transformation relations should be used (used during undo for\n\t// better conflict resolution).\n\t// @param {Boolean} [forceWeakRemove=false] If set to `false`, remove operation will be always stronger than move operation,\n\t// so the removed nodes won't end up back in the document root. When set to `true`, context data will be used.\n\tconstructor( document, useRelations, forceWeakRemove = false ) {\n\t\t// For each operation that is created during transformation process, we keep a reference to the original operation\n\t\t// which it comes from. The original operation works as a kind of \"identifier\". Every contextual information\n\t\t// gathered during transformation that we want to save for given operation, is actually saved for the original operation.\n\t\t// This way no matter if operation `a` is cloned, then transformed, even breaks, we still have access to the previously\n\t\t// gathered data through original operation reference.\n\t\tthis.originalOperations = new Map();\n\n\t\t// `model.History` instance which information about undone operations will be taken from.\n\t\tthis._history = document.history;\n\n\t\t// Whether additional context should be used.\n\t\tthis._useRelations = useRelations;\n\n\t\tthis._forceWeakRemove = !!forceWeakRemove;\n\n\t\t// Relations is a double-map structure (maps in map) where for two operations we store how those operations were related\n\t\t// to each other. Those relations are evaluated during transformation process. For every transformated pair of operations\n\t\t// we keep relations between them.\n\t\tthis._relations = new Map();\n\t}\n\n\t// Sets \"original operation\" for given operations.\n\t//\n\t// During transformation process, operations are cloned, then changed, then processed again, sometimes broken into two\n\t// or multiple operations. When gathering additional data it is important that all operations can be somehow linked\n\t// so a cloned and transformed \"version\" still kept track of the data assigned earlier to it.\n\t//\n\t// The original operation object will be used as such an universal linking id. Throughout the transformation process\n\t// all cloned operations will refer to \"the original operation\" when storing and reading additional data.\n\t//\n\t// If `takeFrom` is not set, each operation from `operations` array will be assigned itself as \"the original operation\".\n\t// This should be used as an initialization step.\n\t//\n\t// If `takeFrom` is set, each operation from `operations` will be assigned the same original operation as assigned\n\t// for `takeFrom` operation. This should be used to update original operations. It should be used in a way that\n\t// `operations` are the result of `takeFrom` transformation to ensure proper \"original operation propagation\".\n\t//\n\t// @param {Array.<module:engine/model/operation/operation~Operation>} operations\n\t// @param {module:engine/model/operation/operation~Operation|null} [takeFrom=null]\n\tsetOriginalOperations( operations, takeFrom = null ) {\n\t\tconst originalOperation = takeFrom ? this.originalOperations.get( takeFrom ) : null;\n\n\t\tfor ( const operation of operations ) {\n\t\t\tthis.originalOperations.set( operation, originalOperation || operation );\n\t\t}\n\t}\n\n\t// Saves a relation between operations `opA` and `opB`.\n\t//\n\t// Relations are then later used to help solve conflicts when operations are transformed.\n\t//\n\t// @param {module:engine/model/operation/operation~Operation} opA\n\t// @param {module:engine/model/operation/operation~Operation} opB\n\tupdateRelation( opA, opB ) {\n\t\t// The use of relations is described in a bigger detail in transformation functions.\n\t\t//\n\t\t// In brief, this function, for specified pairs of operation types, checks how positions defined in those operations relate.\n\t\t// Then those relations are saved. For example, for two move operations, it is saved if one of those operations target\n\t\t// position is before the other operation source position. This kind of information gives contextual information when\n\t\t// transformation is used during undo. Similar checks are done for other pairs of operations.\n\t\t//\n\t\tswitch ( opA.constructor ) {\n\t\t\tcase MoveOperation: {\n\t\t\t\tswitch ( opB.constructor ) {\n\t\t\t\t\tcase MergeOperation: {\n\t\t\t\t\t\tif ( opA.targetPosition.isEqual( opB.sourcePosition ) || opB.movedRange.containsPosition( opA.targetPosition ) ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'insertAtSource' );\n\t\t\t\t\t\t} else if ( opA.targetPosition.isEqual( opB.deletionPosition ) ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'insertBetween' );\n\t\t\t\t\t\t} else if ( opA.targetPosition.isAfter( opB.sourcePosition ) ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'moveTargetAfter' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase MoveOperation: {\n\t\t\t\t\t\tif ( opA.targetPosition.isEqual( opB.sourcePosition ) || opA.targetPosition.isBefore( opB.sourcePosition ) ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'insertBefore' );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'insertAfter' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase SplitOperation: {\n\t\t\t\tswitch ( opB.constructor ) {\n\t\t\t\t\tcase MergeOperation: {\n\t\t\t\t\t\tif ( opA.splitPosition.isBefore( opB.sourcePosition ) ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'splitBefore' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase MoveOperation: {\n\t\t\t\t\t\tif ( opA.splitPosition.isEqual( opB.sourcePosition ) || opA.splitPosition.isBefore( opB.sourcePosition ) ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'splitBefore' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase MergeOperation: {\n\t\t\t\tswitch ( opB.constructor ) {\n\t\t\t\t\tcase MergeOperation: {\n\t\t\t\t\t\tif ( !opA.targetPosition.isEqual( opB.sourcePosition ) ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'mergeTargetNotMoved' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( opA.sourcePosition.isEqual( opB.targetPosition ) ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'mergeSourceNotMoved' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( opA.sourcePosition.isEqual( opB.sourcePosition ) ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'mergeSameElement' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase SplitOperation: {\n\t\t\t\t\t\tif ( opA.sourcePosition.isEqual( opB.splitPosition ) ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, 'splitAtSource' );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase MarkerOperation: {\n\t\t\t\tconst markerRange = opA.newRange;\n\n\t\t\t\tif ( !markerRange ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tswitch ( opB.constructor ) {\n\t\t\t\t\tcase MoveOperation: {\n\t\t\t\t\t\tconst movedRange = Range._createFromPositionAndShift( opB.sourcePosition, opB.howMany );\n\n\t\t\t\t\t\tconst affectedLeft = movedRange.containsPosition( markerRange.start ) ||\n\t\t\t\t\t\t\tmovedRange.start.isEqual( markerRange.start );\n\n\t\t\t\t\t\tconst affectedRight = movedRange.containsPosition( markerRange.end ) ||\n\t\t\t\t\t\t\tmovedRange.end.isEqual( markerRange.end );\n\n\t\t\t\t\t\tif ( ( affectedLeft || affectedRight ) && !movedRange.containsRange( markerRange ) ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, {\n\t\t\t\t\t\t\t\tside: affectedLeft ? 'left' : 'right',\n\t\t\t\t\t\t\t\tpath: affectedLeft ? markerRange.start.path.slice() : markerRange.end.path.slice()\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcase MergeOperation: {\n\t\t\t\t\t\tconst wasInLeftElement = markerRange.start.isEqual( opB.targetPosition );\n\t\t\t\t\t\tconst wasStartBeforeMergedElement = markerRange.start.isEqual( opB.deletionPosition );\n\t\t\t\t\t\tconst wasEndBeforeMergedElement = markerRange.end.isEqual( opB.deletionPosition );\n\t\t\t\t\t\tconst wasInRightElement = markerRange.end.isEqual( opB.sourcePosition );\n\n\t\t\t\t\t\tif ( wasInLeftElement || wasStartBeforeMergedElement || wasEndBeforeMergedElement || wasInRightElement ) {\n\t\t\t\t\t\t\tthis._setRelation( opA, opB, {\n\t\t\t\t\t\t\t\twasInLeftElement,\n\t\t\t\t\t\t\t\twasStartBeforeMergedElement,\n\t\t\t\t\t\t\t\twasEndBeforeMergedElement,\n\t\t\t\t\t\t\t\twasInRightElement\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Evaluates and returns contextual information about two given operations `opA` and `opB` which are about to be transformed.\n\t//\n\t// @param {module:engine/model/operation/operation~Operation} opA\n\t// @param {module:engine/model/operation/operation~Operation} opB\n\t// @returns {module:engine/model/operation/transform~TransformationContext}\n\tgetContext( opA, opB, aIsStrong ) {\n\t\treturn {\n\t\t\taIsStrong,\n\t\t\taWasUndone: this._wasUndone( opA ),\n\t\t\tbWasUndone: this._wasUndone( opB ),\n\t\t\tabRelation: this._useRelations ? this._getRelation( opA, opB ) : null,\n\t\t\tbaRelation: this._useRelations ? this._getRelation( opB, opA ) : null,\n\t\t\tforceWeakRemove: this._forceWeakRemove\n\t\t};\n\t}\n\n\t// Returns whether given operation `op` has already been undone.\n\t//\n\t// Information whether an operation was undone gives more context when making a decision when two operations are in conflict.\n\t//\n\t// @param {module:engine/model/operation/operation~Operation} op\n\t// @returns {Boolean}\n\t_wasUndone( op ) {\n\t\t// For `op`, get its original operation. After all, if `op` is a clone (or even transformed clone) of another\n\t\t// operation, literally `op` couldn't be undone. It was just generated. If anything, it was the operation it origins\n\t\t// from which was undone. So get that original operation.\n\t\tconst originalOp = this.originalOperations.get( op );\n\n\t\t// And check with the document if the original operation was undone.\n\t\treturn originalOp.wasUndone || this._history.isUndoneOperation( originalOp );\n\t}\n\n\t// Returns a relation between `opA` and an operation which is undone by `opB`. This can be `String` value if a relation\n\t// was set earlier or `null` if there was no relation between those operations.\n\t//\n\t// This is a little tricky to understand, so let's compare it to `ContextFactory#_wasUndone`.\n\t//\n\t// When `wasUndone( opB )` is used, we check if the `opB` has already been undone. It is obvious, that the\n\t// undoing operation must happen after the undone operation. So, essentially, we have `opB`, we take document history,\n\t// we look forward in the future and ask if in that future `opB` was undone.\n\t//\n\t// Relations is a backward process to `wasUndone()`.\n\t//\n\t// Long story short - using relations is asking what happened in the past. Looking back. This time we have an undoing\n\t// operation `opB` which has undone some other operation. When there is a transformation `opA` x `opB` and there is\n\t// a conflict to solve and `opB` is an undoing operation, we can look back in the history and see what was a relation\n\t// between `opA` and the operation which `opB` undone. Basing on that relation from the past, we can now make\n\t// a better decision when resolving a conflict between two operations, because we know more about the context of\n\t// those two operations.\n\t//\n\t// This is why this function does not return a relation directly between `opA` and `opB` because we need to look\n\t// back to search for a meaningful contextual information.\n\t//\n\t// @param {module:engine/model/operation/operation~Operation} opA\n\t// @param {module:engine/model/operation/operation~Operation} opB\n\t// @returns {String|null}\n\t_getRelation( opA, opB ) {\n\t\t// Get the original operation. Similarly as in `wasUndone()` it is used as an universal identifier for stored data.\n\t\tconst origB = this.originalOperations.get( opB );\n\t\tconst undoneB = this._history.getUndoneOperation( origB );\n\n\t\t// If `opB` is not undoing any operation, there is no relation.\n\t\tif ( !undoneB ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst origA = this.originalOperations.get( opA );\n\t\tconst relationsA = this._relations.get( origA );\n\n\t\t// Get all relations for `opA`, and check if there is a relation with `opB`-undone-counterpart. If so, return it.\n\t\tif ( relationsA ) {\n\t\t\treturn relationsA.get( undoneB ) || null;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t// Helper function for `ContextFactory#updateRelations`.\n\t//\n\t// @private\n\t// @param {module:engine/model/operation/operation~Operation} opA\n\t// @param {module:engine/model/operation/operation~Operation} opB\n\t// @param {String} relation\n\t_setRelation( opA, opB, relation ) {\n\t\t// As always, setting is for original operations, not the clones/transformed operations.\n\t\tconst origA = this.originalOperations.get( opA );\n\t\tconst origB = this.originalOperations.get( opB );\n\n\t\tlet relationsA = this._relations.get( origA );\n\n\t\tif ( !relationsA ) {\n\t\t\trelationsA = new Map();\n\t\t\tthis._relations.set( origA, relationsA );\n\t\t}\n\n\t\trelationsA.set( origB, relation );\n\t}\n}\n\n/**\n * Holds additional contextual information about a transformed pair of operations (`a` and `b`). Those information\n * can be used for better conflict resolving.\n *\n * @typedef {Object} module:engine/model/operation/transform~TransformationContext\n *\n * @property {Boolean} aIsStrong Whether `a` is strong operation in this transformation, or weak.\n * @property {Boolean} aWasUndone Whether `a` operation was undone.\n * @property {Boolean} bWasUndone Whether `b` operation was undone.\n * @property {String|null} abRelation The relation between `a` operation and an operation undone by `b` operation.\n * @property {String|null} baRelation The relation between `b` operation and an operation undone by `a` operation.\n */\n\n/**\n * An utility function that updates {@link module:engine/model/operation/operation~Operation#baseVersion base versions}\n * of passed operations.\n *\n * The function simply sets `baseVersion` as a base version of the first passed operation and then increments it for\n * each following operation in `operations`.\n *\n * @private\n * @param {Array.<module:engine/model/operation/operation~Operation>} operations Operations to update.\n * @param {Number} baseVersion Base version to set for the first operation in `operations`.\n */\nfunction updateBaseVersions( operations, baseVersion ) {\n\tfor ( const operation of operations ) {\n\t\toperation.baseVersion = baseVersion++;\n\t}\n}\n\n/**\n * Adds `howMany` instances of {@link module:engine/model/operation/nooperation~NoOperation} to `operations` set.\n *\n * @private\n * @param {Array.<module:engine/model/operation/operation~Operation>} operations\n * @param {Number} howMany\n */\nfunction padWithNoOps( operations, howMany ) {\n\tfor ( let i = 0; i < howMany; i++ ) {\n\t\toperations.push( new NoOperation( 0 ) );\n\t}\n}\n\n// -----------------------\n\nsetTransformation( AttributeOperation, AttributeOperation, ( a, b, context ) => {\n\tif ( a.key === b.key ) {\n\t\t// If operations attributes are in conflict, check if their ranges intersect and manage them properly.\n\n\t\t// First, we want to apply change to the part of a range that has not been changed by the other operation.\n\t\tconst operations = a.range.getDifference( b.range ).map( range => {\n\t\t\treturn new AttributeOperation( range, a.key, a.oldValue, a.newValue, 0 );\n\t\t} );\n\n\t\t// Then we take care of the common part of ranges.\n\t\tconst common = a.range.getIntersection( b.range );\n\n\t\tif ( common ) {\n\t\t\t// If this operation is more important, we also want to apply change to the part of the\n\t\t\t// original range that has already been changed by the other operation. Since that range\n\t\t\t// got changed we also have to update `oldValue`.\n\t\t\tif ( context.aIsStrong ) {\n\t\t\t\toperations.push( new AttributeOperation( common, b.key, b.newValue, a.newValue, 0 ) );\n\t\t\t}\n\t\t}\n\n\t\tif ( operations.length == 0 ) {\n\t\t\treturn [ new NoOperation( 0 ) ];\n\t\t}\n\n\t\treturn operations;\n\t} else {\n\t\t// If operations don't conflict, simply return an array containing just a clone of this operation.\n\t\treturn [ a ];\n\t}\n} );\n\nsetTransformation( AttributeOperation, InsertOperation, ( a, b ) => {\n\t// Case 1:\n\t//\n\t// The attribute operation range includes the position where nodes were inserted.\n\t// There are two possible scenarios: the inserted nodes were text and they should receive attributes or\n\t// the inserted nodes were elements and they should not receive attributes.\n\t//\n\tif ( a.range.start.hasSameParentAs( b.position ) && a.range.containsPosition( b.position ) ) {\n\t\t// If new nodes should not receive attributes, two separated ranges will be returned.\n\t\t// Otherwise, one expanded range will be returned.\n\t\tconst range = a.range._getTransformedByInsertion( b.position, b.howMany, !b.shouldReceiveAttributes );\n\t\tconst result = range.map( r => {\n\t\t\treturn new AttributeOperation( r, a.key, a.oldValue, a.newValue, a.baseVersion );\n\t\t} );\n\n\t\tif ( b.shouldReceiveAttributes ) {\n\t\t\t// `AttributeOperation#range` includes some newly inserted text.\n\t\t\t// The operation should also change the attribute of that text. An example:\n\t\t\t//\n\t\t\t// Bold should be applied on the following range:\n\t\t\t// <p>Fo[zb]ar</p>\n\t\t\t//\n\t\t\t// In meantime, new text is typed:\n\t\t\t// <p>Fozxxbar</p>\n\t\t\t//\n\t\t\t// Bold should be applied also on the new text:\n\t\t\t// <p>Fo[zxxb]ar</p>\n\t\t\t// <p>Fo<$text bold=\"true\">zxxb</$text>ar</p>\n\t\t\t//\n\t\t\t// There is a special case to consider here to consider.\n\t\t\t//\n\t\t\t// Consider setting an attribute with multiple possible values, for example `highlight`. The inserted text might\n\t\t\t// have already an attribute value applied and the `oldValue` property of the attribute operation might be wrong:\n\t\t\t//\n\t\t\t// Attribute `highlight=\"yellow\"` should be applied on the following range:\n\t\t\t// <p>Fo[zb]ar<p>\n\t\t\t//\n\t\t\t// In meantime, character `x` with `highlight=\"red\"` is typed:\n\t\t\t// <p>Fo[z<$text highlight=\"red\">x</$text>b]ar</p>\n\t\t\t//\n\t\t\t// In this case we cannot simply apply operation changing the attribute value from `null` to `\"yellow\"` for the whole range\n\t\t\t// because that would lead to an exception (`oldValue` is incorrect for `x`).\n\t\t\t//\n\t\t\t// We also cannot break the original range as this would mess up a scenario when there are multiple following\n\t\t\t// insert operations, because then only the first inserted character is included in those ranges:\n\t\t\t// <p>Fo[z][x][b]ar</p>   -->   <p>Fo[z][x]x[b]ar</p>   -->   <p>Fo[z][x]xx[b]ar</p>\n\t\t\t//\n\t\t\t// So, the attribute range needs be expanded, no matter what attributes are set on the inserted nodes:\n\t\t\t//\n\t\t\t// <p>Fo[z<$text highlight=\"red\">x</$text>b]ar</p>      <--- Change from `null` to `yellow`, throwing an exception.\n\t\t\t//\n\t\t\t// But before that operation would be applied, we will add an additional attribute operation that will change\n\t\t\t// attributes on the inserted nodes in a way which would make the original operation correct:\n\t\t\t//\n\t\t\t// <p>Fo[z{<$text highlight=\"red\">}x</$text>b]ar</p>    <--- Change range `{}` from `red` to `null`.\n\t\t\t// <p>Fo[zxb]ar</p>                                     <--- Now change from `null` to `yellow` is completely fine.\n\t\t\t//\n\n\t\t\t// Generate complementary attribute operation. Be sure to add it before the original operation.\n\t\t\tconst op = _getComplementaryAttributeOperations( b, a.key, a.oldValue );\n\n\t\t\tif ( op ) {\n\t\t\t\tresult.unshift( op );\n\t\t\t}\n\t\t}\n\n\t\t// If nodes should not receive new attribute, we are done here.\n\t\treturn result;\n\t}\n\n\t// If insert operation is not expanding the attribute operation range, simply transform the range.\n\ta.range = a.range._getTransformedByInsertion( b.position, b.howMany, false )[ 0 ];\n\n\treturn [ a ];\n} );\n\n/**\n * Helper function for `AttributeOperation` x `InsertOperation` (and reverse) transformation.\n *\n * For given `insertOperation` it checks the inserted node if it has an attribute `key` set to a value different\n * than `newValue`. If so, it generates an `AttributeOperation` which changes the value of `key` attribute to `newValue`.\n *\n * @private\n * @param {module:engine/model/operation/insertoperation~InsertOperation} insertOperation\n * @param {String} key\n * @param {*} newValue\n * @returns {module:engine/model/operation/attributeoperation~AttributeOperation|null}\n */\nfunction _getComplementaryAttributeOperations( insertOperation, key, newValue ) {\n\tconst nodes = insertOperation.nodes;\n\n\t// At the beginning we store the attribute value from the first node.\n\tconst insertValue = nodes.getNode( 0 ).getAttribute( key );\n\n\tif ( insertValue == newValue ) {\n\t\treturn null;\n\t}\n\n\tconst range = new Range( insertOperation.position, insertOperation.position.getShiftedBy( insertOperation.howMany ) );\n\n\treturn new AttributeOperation( range, key, insertValue, newValue, 0 );\n}\n\nsetTransformation( AttributeOperation, MergeOperation, ( a, b ) => {\n\tconst ranges = [];\n\n\t// Case 1:\n\t//\n\t// Attribute change on the merged element. In this case, the merged element was moved to the graveyard.\n\t// An additional attribute operation that will change the (re)moved element needs to be generated.\n\t//\n\tif ( a.range.start.hasSameParentAs( b.deletionPosition ) ) {\n\t\tif ( a.range.containsPosition( b.deletionPosition ) || a.range.start.isEqual( b.deletionPosition ) ) {\n\t\t\tranges.push( Range._createFromPositionAndShift( b.graveyardPosition, 1 ) );\n\t\t}\n\t}\n\n\tconst range = a.range._getTransformedByMergeOperation( b );\n\n\t// Do not add empty (collapsed) ranges to the result. `range` may be collapsed if it contained only the merged element.\n\tif ( !range.isCollapsed ) {\n\t\tranges.push( range );\n\t}\n\n\t// Create `AttributeOperation`s out of the ranges.\n\treturn ranges.map( range => {\n\t\treturn new AttributeOperation( range, a.key, a.oldValue, a.newValue, a.baseVersion );\n\t} );\n} );\n\nsetTransformation( AttributeOperation, MoveOperation, ( a, b ) => {\n\tconst ranges = _breakRangeByMoveOperation( a.range, b );\n\n\t// Create `AttributeOperation`s out of the ranges.\n\treturn ranges.map( range => new AttributeOperation( range, a.key, a.oldValue, a.newValue, a.baseVersion ) );\n} );\n\n// Helper function for `AttributeOperation` x `MoveOperation` transformation.\n//\n// Takes the passed `range` and transforms it by move operation `moveOp` in a specific way. Only top-level nodes of `range`\n// are considered to be in the range. If move operation moves nodes deep from inside of the range, those nodes won't\n// be included in the result. In other words, top-level nodes of the ranges from the result are exactly the same as\n// top-level nodes of the original `range`.\n//\n// This is important for `AttributeOperation` because, for its range, it changes only the top-level nodes. So we need to\n// track only how those nodes have been affected by `MoveOperation`.\n//\n// @private\n// @param {module:engine/model/range~Range} range\n// @param {module:engine/model/operation/moveoperation~MoveOperation} moveOp\n// @returns {Array.<module:engine/model/range~Range>}\nfunction _breakRangeByMoveOperation( range, moveOp ) {\n\tconst moveRange = Range._createFromPositionAndShift( moveOp.sourcePosition, moveOp.howMany );\n\n\t// We are transforming `range` (original range) by `moveRange` (range moved by move operation). As usual when it comes to\n\t// transforming a ranges, we may have a common part of the ranges and we may have a difference part (zero to two ranges).\n\tlet common = null;\n\tlet difference = [];\n\n\t// Let's compare the ranges.\n\tif ( moveRange.containsRange( range, true ) ) {\n\t\t// If the whole original range is moved, treat it whole as a common part. There's also no difference part.\n\t\tcommon = range;\n\t} else if ( range.start.hasSameParentAs( moveRange.start ) ) {\n\t\t// If the ranges are \"on the same level\" (in the same parent) then move operation may move exactly those nodes\n\t\t// that are changed by the attribute operation. In this case we get common part and difference part in the usual way.\n\t\tdifference = range.getDifference( moveRange );\n\t\tcommon = range.getIntersection( moveRange );\n\t} else {\n\t\t// In any other situation we assume that original range is different than move range, that is that move operation\n\t\t// moves other nodes that attribute operation change. Even if the moved range is deep inside in the original range.\n\t\t//\n\t\t// Note that this is different than in `.getIntersection` (we would get a common part in that case) and different\n\t\t// than `.getDifference` (we would get two ranges).\n\t\tdifference = [ range ];\n\t}\n\n\tconst result = [];\n\n\t// The default behaviour of `_getTransformedByMove` might get wrong results for difference part, though, so\n\t// we do it by hand.\n\tfor ( let diff of difference ) {\n\t\t// First, transform the range by removing moved nodes. Since this is a difference, this is safe, `null` won't be returned\n\t\t// as the range is different than the moved range.\n\t\tdiff = diff._getTransformedByDeletion( moveOp.sourcePosition, moveOp.howMany );\n\n\t\t// Transform also `targetPosition`.\n\t\tconst targetPosition = moveOp.getMovedRangeStart();\n\n\t\t// Spread the range only if moved nodes are inserted only between the top-level nodes of the `diff` range.\n\t\tconst spread = diff.start.hasSameParentAs( targetPosition );\n\n\t\t// Transform by insertion of moved nodes.\n\t\tdiff = diff._getTransformedByInsertion( targetPosition, moveOp.howMany, spread );\n\n\t\tresult.push( ...diff );\n\t}\n\n\t// Common part can be simply transformed by the move operation. This is because move operation will not target to\n\t// that common part (the operation would have to target inside its own moved range).\n\tif ( common ) {\n\t\tresult.push(\n\t\t\tcommon._getTransformedByMove( moveOp.sourcePosition, moveOp.targetPosition, moveOp.howMany, false )[ 0 ]\n\t\t);\n\t}\n\n\treturn result;\n}\n\nsetTransformation( AttributeOperation, SplitOperation, ( a, b ) => {\n\t// Case 1:\n\t//\n\t// Split node is the last node in `AttributeOperation#range`.\n\t// `AttributeOperation#range` needs to be expanded to include the new (split) node.\n\t//\n\t// Attribute `type` to be changed to `numbered` but the `listItem` is split.\n\t// <listItem type=\"bulleted\">foobar</listItem>\n\t//\n\t// After split:\n\t// <listItem type=\"bulleted\">foo</listItem><listItem type=\"bulleted\">bar</listItem>\n\t//\n\t// After attribute change:\n\t// <listItem type=\"numbered\">foo</listItem><listItem type=\"numbered\">foo</listItem>\n\t//\n\tif ( a.range.end.isEqual( b.insertionPosition ) ) {\n\t\tif ( !b.graveyardPosition ) {\n\t\t\ta.range.end.offset++;\n\t\t}\n\n\t\treturn [ a ];\n\t}\n\n\t// Case 2:\n\t//\n\t// Split position is inside `AttributeOperation#range`, at the same level, so the nodes to change are\n\t// not going to make a flat range.\n\t//\n\t// Content with range-to-change and split position:\n\t// <p>Fo[zb^a]r</p>\n\t//\n\t// After split:\n\t// <p>Fozb</p><p>ar</p>\n\t//\n\t// Make two separate ranges containing all nodes to change:\n\t// <p>Fo[zb]</p><p>[a]r</p>\n\t//\n\tif ( a.range.start.hasSameParentAs( b.splitPosition ) && a.range.containsPosition( b.splitPosition ) ) {\n\t\tconst secondPart = a.clone();\n\n\t\tsecondPart.range = new Range(\n\t\t\tb.moveTargetPosition.clone(),\n\t\t\ta.range.end._getCombined( b.splitPosition, b.moveTargetPosition )\n\t\t);\n\n\t\ta.range.end = b.splitPosition.clone();\n\t\ta.range.end.stickiness = 'toPrevious';\n\n\t\treturn [ a, secondPart ];\n\t}\n\n\t// The default case.\n\t//\n\ta.range = a.range._getTransformedBySplitOperation( b );\n\n\treturn [ a ];\n} );\n\nsetTransformation( InsertOperation, AttributeOperation, ( a, b ) => {\n\tconst result = [ a ];\n\n\t// Case 1:\n\t//\n\t// The attribute operation range includes the position where nodes were inserted.\n\t// There are two possible scenarios: the inserted nodes were text and they should receive attributes or\n\t// the inserted nodes were elements and they should not receive attributes.\n\t//\n\t// This is a mirror scenario to the one described in `AttributeOperation` x `InsertOperation` transformation,\n\t// although this case is a little less complicated. In this case we simply need to change attributes of the\n\t// inserted nodes and that's it.\n\t//\n\tif ( a.shouldReceiveAttributes && a.position.hasSameParentAs( b.range.start ) && b.range.containsPosition( a.position ) ) {\n\t\tconst op = _getComplementaryAttributeOperations( a, b.key, b.newValue );\n\n\t\tif ( op ) {\n\t\t\tresult.push( op );\n\t\t}\n\t}\n\n\t// The default case is: do nothing.\n\t// `AttributeOperation` does not change the model tree structure so `InsertOperation` does not need to be changed.\n\t//\n\treturn result;\n} );\n\nsetTransformation( InsertOperation, InsertOperation, ( a, b, context ) => {\n\t// Case 1:\n\t//\n\t// Two insert operations insert nodes at the same position. Since they are the same, it needs to be decided\n\t// what will be the order of inserted nodes. However, there is no additional information to help in that\n\t// decision. Also, when `b` will be transformed by `a`, the same order must be maintained.\n\t//\n\t// To achieve that, we will check if the operation is strong.\n\t// If it is, it won't get transformed. If it is not, it will be moved.\n\t//\n\tif ( a.position.isEqual( b.position ) && context.aIsStrong ) {\n\t\treturn [ a ];\n\t}\n\n\t// The default case.\n\t//\n\ta.position = a.position._getTransformedByInsertOperation( b );\n\n\treturn [ a ];\n} );\n\nsetTransformation( InsertOperation, MoveOperation, ( a, b ) => {\n\t// The default case.\n\t//\n\ta.position = a.position._getTransformedByMoveOperation( b );\n\n\treturn [ a ];\n} );\n\nsetTransformation( InsertOperation, SplitOperation, ( a, b ) => {\n\t// The default case.\n\t//\n\ta.position = a.position._getTransformedBySplitOperation( b );\n\n\treturn [ a ];\n} );\n\nsetTransformation( InsertOperation, MergeOperation, ( a, b ) => {\n\ta.position = a.position._getTransformedByMergeOperation( b );\n\n\treturn [ a ];\n} );\n\n// -----------------------\n\nsetTransformation( MarkerOperation, InsertOperation, ( a, b ) => {\n\tif ( a.oldRange ) {\n\t\ta.oldRange = a.oldRange._getTransformedByInsertOperation( b )[ 0 ];\n\t}\n\n\tif ( a.newRange ) {\n\t\ta.newRange = a.newRange._getTransformedByInsertOperation( b )[ 0 ];\n\t}\n\n\treturn [ a ];\n} );\n\nsetTransformation( MarkerOperation, MarkerOperation, ( a, b, context ) => {\n\tif ( a.name == b.name ) {\n\t\tif ( context.aIsStrong ) {\n\t\t\ta.oldRange = b.newRange ? b.newRange.clone() : null;\n\t\t} else {\n\t\t\treturn [ new NoOperation( 0 ) ];\n\t\t}\n\t}\n\n\treturn [ a ];\n} );\n\nsetTransformation( MarkerOperation, MergeOperation, ( a, b ) => {\n\tif ( a.oldRange ) {\n\t\ta.oldRange = a.oldRange._getTransformedByMergeOperation( b );\n\t}\n\n\tif ( a.newRange ) {\n\t\ta.newRange = a.newRange._getTransformedByMergeOperation( b );\n\t}\n\n\treturn [ a ];\n} );\n\nsetTransformation( MarkerOperation, MoveOperation, ( a, b, context ) => {\n\tif ( a.oldRange ) {\n\t\ta.oldRange = Range._createFromRanges( a.oldRange._getTransformedByMoveOperation( b ) );\n\t}\n\n\tif ( a.newRange ) {\n\t\tif ( context.abRelation ) {\n\t\t\tconst aNewRange = Range._createFromRanges( a.newRange._getTransformedByMoveOperation( b ) );\n\n\t\t\tif ( context.abRelation.side == 'left' && b.targetPosition.isEqual( a.newRange.start ) ) {\n\t\t\t\ta.newRange.start.path = context.abRelation.path;\n\t\t\t\ta.newRange.end = aNewRange.end;\n\n\t\t\t\treturn [ a ];\n\t\t\t} else if ( context.abRelation.side == 'right' && b.targetPosition.isEqual( a.newRange.end ) ) {\n\t\t\t\ta.newRange.start = aNewRange.start;\n\t\t\t\ta.newRange.end.path = context.abRelation.path;\n\n\t\t\t\treturn [ a ];\n\t\t\t}\n\t\t}\n\n\t\ta.newRange = Range._createFromRanges( a.newRange._getTransformedByMoveOperation( b ) );\n\t}\n\n\treturn [ a ];\n} );\n\nsetTransformation( MarkerOperation, SplitOperation, ( a, b, context ) => {\n\tif ( a.oldRange ) {\n\t\ta.oldRange = a.oldRange._getTransformedBySplitOperation( b );\n\t}\n\n\tif ( a.newRange ) {\n\t\tif ( context.abRelation ) {\n\t\t\tconst aNewRange = a.newRange._getTransformedBySplitOperation( b );\n\n\t\t\tif ( a.newRange.start.isEqual( b.splitPosition ) && context.abRelation.wasStartBeforeMergedElement ) {\n\t\t\t\ta.newRange.start = Position._createAt( b.insertionPosition );\n\t\t\t} else if ( a.newRange.start.isEqual( b.splitPosition ) && !context.abRelation.wasInLeftElement ) {\n\t\t\t\ta.newRange.start = Position._createAt( b.moveTargetPosition );\n\t\t\t}\n\n\t\t\tif ( a.newRange.end.isEqual( b.splitPosition ) && context.abRelation.wasInRightElement ) {\n\t\t\t\ta.newRange.end = Position._createAt( b.moveTargetPosition );\n\t\t\t} else if ( a.newRange.end.isEqual( b.splitPosition ) && context.abRelation.wasEndBeforeMergedElement ) {\n\t\t\t\ta.newRange.end = Position._createAt( b.insertionPosition );\n\t\t\t} else {\n\t\t\t\ta.newRange.end = aNewRange.end;\n\t\t\t}\n\n\t\t\treturn [ a ];\n\t\t}\n\n\t\ta.newRange = a.newRange._getTransformedBySplitOperation( b );\n\t}\n\n\treturn [ a ];\n} );\n\n// -----------------------\n\nsetTransformation( MergeOperation, InsertOperation, ( a, b ) => {\n\tif ( a.sourcePosition.hasSameParentAs( b.position ) ) {\n\t\ta.howMany += b.howMany;\n\t}\n\n\ta.sourcePosition = a.sourcePosition._getTransformedByInsertOperation( b );\n\ta.targetPosition = a.targetPosition._getTransformedByInsertOperation( b );\n\n\treturn [ a ];\n} );\n\nsetTransformation( MergeOperation, MergeOperation, ( a, b, context ) => {\n\t// Case 1:\n\t//\n\t// Same merge operations.\n\t//\n\t// Both operations have same source and target positions. So the element already got merged and there is\n\t// theoretically nothing to do.\n\t//\n\tif ( a.sourcePosition.isEqual( b.sourcePosition ) && a.targetPosition.isEqual( b.targetPosition ) ) {\n\t\t// There are two ways that we can provide a do-nothing operation.\n\t\t//\n\t\t// First is simply a NoOperation instance. We will use it if `b` operation was not undone.\n\t\t//\n\t\t// Second is a merge operation that has the source operation in the merged element - in the graveyard -\n\t\t// same target position and `howMany` equal to `0`. So it is basically merging an empty element from graveyard\n\t\t// which is almost the same as NoOperation.\n\t\t//\n\t\t// This way the merge operation can be later transformed by split operation\n\t\t// to provide correct undo. This will be used if `b` operation was undone (only then it is correct).\n\t\t//\n\t\tif ( !context.bWasUndone ) {\n\t\t\treturn [ new NoOperation( 0 ) ];\n\t\t} else {\n\t\t\tconst path = b.graveyardPosition.path.slice();\n\t\t\tpath.push( 0 );\n\n\t\t\ta.sourcePosition = new Position( b.graveyardPosition.root, path );\n\t\t\ta.howMany = 0;\n\n\t\t\treturn [ a ];\n\t\t}\n\t}\n\n\t// Case 2:\n\t//\n\t// Same merge source position but different target position.\n\t//\n\t// This can happen during collaboration. For example, if one client merged a paragraph to the previous paragraph\n\t// and the other person removed that paragraph and merged the same paragraph to something before:\n\t//\n\t// Client A:\n\t// <p>Foo</p><p>Bar</p><p>[]Xyz</p>\n\t// <p>Foo</p><p>BarXyz</p>\n\t//\n\t// Client B:\n\t// <p>Foo</p>[<p>Bar</p>]<p>Xyz</p>\n\t// <p>Foo</p><p>[]Xyz</p>\n\t// <p>FooXyz</p>\n\t//\n\t// In this case we need to decide where finally \"Xyz\" will land:\n\t//\n\t// <p>FooXyz</p>               graveyard: <p>Bar</p>\n\t// <p>Foo</p>                  graveyard: <p>BarXyz</p>\n\t//\n\t// Let's move it in a way so that a merge operation that does not target to graveyard is more important so that\n\t// nodes does not end up in the graveyard. It makes sense. Both for Client A and for Client B \"Xyz\" finally did not\n\t// end up in the graveyard (see above).\n\t//\n\t// If neither or both operations point to graveyard, then let `aIsStrong` decide.\n\t//\n\tif (\n\t\ta.sourcePosition.isEqual( b.sourcePosition ) && !a.targetPosition.isEqual( b.targetPosition ) &&\n\t\t!context.bWasUndone && context.abRelation != 'splitAtSource'\n\t) {\n\t\tconst aToGraveyard = a.targetPosition.root.rootName == '$graveyard';\n\t\tconst bToGraveyard = b.targetPosition.root.rootName == '$graveyard';\n\n\t\t// If `aIsWeak` it means that `a` points to graveyard while `b` doesn't. Don't move nodes then.\n\t\tconst aIsWeak = aToGraveyard && !bToGraveyard;\n\n\t\t// If `bIsWeak` it means that `b` points to graveyard while `a` doesn't. Force moving nodes then.\n\t\tconst bIsWeak = bToGraveyard && !aToGraveyard;\n\n\t\t// Force move if `b` is weak or neither operation is weak but `a` is stronger through `context.aIsStrong`.\n\t\tconst forceMove = bIsWeak || ( !aIsWeak && context.aIsStrong );\n\n\t\tif ( forceMove ) {\n\t\t\tconst sourcePosition = b.targetPosition._getTransformedByMergeOperation( b );\n\t\t\tconst targetPosition = a.targetPosition._getTransformedByMergeOperation( b );\n\n\t\t\treturn [ new MoveOperation( sourcePosition, a.howMany, targetPosition, 0 ) ];\n\t\t} else {\n\t\t\treturn [ new NoOperation( 0 ) ];\n\t\t}\n\t}\n\n\t// The default case.\n\t//\n\tif ( a.sourcePosition.hasSameParentAs( b.targetPosition ) ) {\n\t\ta.howMany += b.howMany;\n\t}\n\n\ta.sourcePosition = a.sourcePosition._getTransformedByMergeOperation( b );\n\ta.targetPosition = a.targetPosition._getTransformedByMergeOperation( b );\n\n\t// Handle positions in graveyard.\n\t// If graveyard positions are same and `a` operation is strong - do not transform.\n\tif ( !a.graveyardPosition.isEqual( b.graveyardPosition ) || !context.aIsStrong ) {\n\t\ta.graveyardPosition = a.graveyardPosition._getTransformedByMergeOperation( b );\n\t}\n\n\treturn [ a ];\n} );\n\nsetTransformation( MergeOperation, MoveOperation, ( a, b, context ) => {\n\t// Case 1:\n\t//\n\t// The element to merge got removed.\n\t//\n\t// Merge operation does support merging elements which are not siblings. So it would not be a problem\n\t// from technical point of view. However, if the element was removed, the intention of the user deleting it\n\t// was to have it all deleted, together with its children. From user experience point of view, moving back the\n\t// removed nodes might be unexpected. This means that in this scenario we will block the merging.\n\t//\n\t// The exception of this rule would be if the remove operation was later undone.\n\t//\n\tconst removedRange = Range._createFromPositionAndShift( b.sourcePosition, b.howMany );\n\n\tif ( b.type == 'remove' && !context.bWasUndone && !context.forceWeakRemove ) {\n\t\tif ( a.deletionPosition.hasSameParentAs( b.sourcePosition ) && removedRange.containsPosition( a.sourcePosition ) ) {\n\t\t\treturn [ new NoOperation( 0 ) ];\n\t\t}\n\t}\n\n\t// The default case.\n\t//\n\tif ( a.sourcePosition.hasSameParentAs( b.targetPosition ) ) {\n\t\ta.howMany += b.howMany;\n\t}\n\n\tif ( a.sourcePosition.hasSameParentAs( b.sourcePosition ) ) {\n\t\ta.howMany -= b.howMany;\n\t}\n\n\ta.sourcePosition = a.sourcePosition._getTransformedByMoveOperation( b );\n\ta.targetPosition = a.targetPosition._getTransformedByMoveOperation( b );\n\n\t// `MergeOperation` graveyard position is like `MoveOperation` target position. It is a position where element(s) will\n\t// be moved. Like in other similar cases, we need to consider the scenario when those positions are same.\n\t// Here, we will treat `MergeOperation` like it is always strong (see `InsertOperation` x `InsertOperation` for comparison).\n\t// This means that we won't transform graveyard position if it is equal to move operation target position.\n\tif ( !a.graveyardPosition.isEqual( b.targetPosition ) ) {\n\t\ta.graveyardPosition = a.graveyardPosition._getTransformedByMoveOperation( b );\n\t}\n\n\treturn [ a ];\n} );\n\nsetTransformation( MergeOperation, SplitOperation, ( a, b, context ) => {\n\tif ( b.graveyardPosition ) {\n\t\t// If `b` operation defines graveyard position, a node from graveyard will be moved. This means that we need to\n\t\t// transform `a.graveyardPosition` accordingly.\n\t\ta.graveyardPosition = a.graveyardPosition._getTransformedByDeletion( b.graveyardPosition, 1 );\n\n\t\t// This is a scenario foreseen in `MergeOperation` x `MergeOperation`, with two identical merge operations.\n\t\t//\n\t\t// So, there was `MergeOperation` x `MergeOperation` transformation earlier. Now, `a` is a merge operation which\n\t\t// source position is in graveyard. Interestingly, split operation wants to use the node to be merged by `a`. This\n\t\t// means that `b` is undoing that merge operation from earlier, which caused `a` to be in graveyard.\n\t\t//\n\t\t// If that's the case, at this point, we will only \"fix\" `a.howMany`. It was earlier set to `0` in\n\t\t// `MergeOperation` x `MergeOperation` transformation. Later transformations in this function will change other\n\t\t// properties.\n\t\t//\n\t\tif ( a.deletionPosition.isEqual( b.graveyardPosition ) ) {\n\t\t\ta.howMany = b.howMany;\n\t\t}\n\t}\n\n\t// Case 1:\n\t//\n\t// Merge operation moves nodes to the place where split happens.\n\t// This is a classic situation when there are two paragraphs, and there is a split (enter) after the first\n\t// paragraph and there is a merge (delete) at the beginning of the second paragraph:\n\t//\n\t// <p>Foo{}</p><p>[]Bar</p>.\n\t//\n\t// Split is after `Foo`, while merge is from `Bar` to the end of `Foo`.\n\t//\n\t// State after split:\n\t// <p>Foo</p><p></p><p>Bar</p>\n\t//\n\t// Now, `Bar` should be merged to the new paragraph:\n\t// <p>Foo</p><p>Bar</p>\n\t//\n\t// Instead of merging it to the original paragraph:\n\t// <p>FooBar</p><p></p>\n\t//\n\t// This means that `targetPosition` needs to be transformed. This is the default case though.\n\t// For example, if the split would be after `F`, `targetPosition` should also be transformed.\n\t//\n\t// There are three exceptions, though, when we want to keep `targetPosition` as it was.\n\t//\n\t// First exception is when the merge target position is inside an element (not at the end, as usual). This\n\t// happens when the merge operation earlier was transformed by \"the same\" merge operation. If merge operation\n\t// targets inside the element we want to keep the original target position (and not transform it) because\n\t// we have additional context telling us that we want to merge to the original element. We can check if the\n\t// merge operation points inside element by checking what is `SplitOperation#howMany`. Since merge target position\n\t// is same as split position, if `howMany` is non-zero, it means that the merge target position is inside an element.\n\t//\n\t// Second exception is when the element to merge is in the graveyard and split operation uses it. In that case\n\t// if target position would be transformed, the merge operation would target at the source position:\n\t//\n\t// root: <p>Foo</p>\t\t\t\tgraveyard: <p></p>\n\t//\n\t// SplitOperation: root [ 0, 3 ] using graveyard [ 0 ] (howMany = 0)\n\t// MergeOperation: graveyard [ 0, 0 ] -> root [ 0, 3 ] (howMany = 0)\n\t//\n\t// Since split operation moves the graveyard node back to the root, the merge operation source position changes.\n\t// We would like to merge from the empty <p> to the \"Foo\" <p>:\n\t//\n\t// root: <p>Foo</p><p></p>\t\t\tgraveyard:\n\t//\n\t// MergeOperation#sourcePosition = root [ 1, 0 ]\n\t//\n\t// If `targetPosition` is transformed, it would become root [ 1, 0 ] as well. It has to be kept as it was.\n\t//\n\t// Third exception is connected with relations. If this happens during undo and we have explicit information\n\t// that target position has not been affected by the operation which is undone by this split then this split should\n\t// not move the target position either.\n\t//\n\tif ( a.targetPosition.isEqual( b.splitPosition ) ) {\n\t\tconst mergeInside = b.howMany != 0;\n\t\tconst mergeSplittingElement = b.graveyardPosition && a.deletionPosition.isEqual( b.graveyardPosition );\n\n\t\tif ( mergeInside || mergeSplittingElement || context.abRelation == 'mergeTargetNotMoved' ) {\n\t\t\ta.sourcePosition = a.sourcePosition._getTransformedBySplitOperation( b );\n\n\t\t\treturn [ a ];\n\t\t}\n\t}\n\n\t// Case 2:\n\t//\n\t// Merge source is at the same position as split position. This sometimes happen, mostly during undo.\n\t// The decision here is mostly to choose whether merge source position should stay where it is (so it will be at the end of the\n\t// split element) or should be move to the beginning of the new element.\n\t//\n\tif ( a.sourcePosition.isEqual( b.splitPosition ) ) {\n\t\t// Use context to check if `SplitOperation` is not undoing a merge operation, that didn't change the `a` operation.\n\t\t// This scenario happens the undone merge operation moved nodes at the source position of `a` operation.\n\t\t// In that case `a` operation source position should stay where it is.\n\t\tif ( context.abRelation == 'mergeSourceNotMoved' ) {\n\t\t\ta.howMany = 0;\n\t\t\ta.targetPosition = a.targetPosition._getTransformedBySplitOperation( b );\n\n\t\t\treturn [ a ];\n\t\t}\n\n\t\t// This merge operation might have been earlier transformed by a merge operation which both merged the same element.\n\t\t// See that case in `MergeOperation` x `MergeOperation` transformation. In that scenario, if the merge operation has been undone,\n\t\t// the special case is not applied.\n\t\t//\n\t\t// Now, the merge operation is transformed by the split which has undone that previous merge operation.\n\t\t// So now we are fixing situation which was skipped in `MergeOperation` x `MergeOperation` case.\n\t\t//\n\t\tif ( context.abRelation == 'mergeSameElement' || a.sourcePosition.offset > 0 ) {\n\t\t\ta.sourcePosition = b.moveTargetPosition.clone();\n\t\t\ta.targetPosition = a.targetPosition._getTransformedBySplitOperation( b );\n\n\t\t\treturn [ a ];\n\t\t}\n\t}\n\n\t// The default case.\n\t//\n\tif ( a.sourcePosition.hasSameParentAs( b.splitPosition ) ) {\n\t\ta.howMany = b.splitPosition.offset;\n\t}\n\n\ta.sourcePosition = a.sourcePosition._getTransformedBySplitOperation( b );\n\ta.targetPosition = a.targetPosition._getTransformedBySplitOperation( b );\n\n\treturn [ a ];\n} );\n\n// -----------------------\n\nsetTransformation( MoveOperation, InsertOperation, ( a, b ) => {\n\tconst moveRange = Range._createFromPositionAndShift( a.sourcePosition, a.howMany );\n\tconst transformed = moveRange._getTransformedByInsertOperation( b, false )[ 0 ];\n\n\ta.sourcePosition = transformed.start;\n\ta.howMany = transformed.end.offset - transformed.start.offset;\n\n\t// See `InsertOperation` x `MoveOperation` transformation for details on this case.\n\t//\n\t// In summary, both operations point to the same place, so the order of nodes needs to be decided.\n\t// `MoveOperation` is considered weaker, so it is always transformed, unless there was a certain relation\n\t// between operations.\n\t//\n\tif ( !a.targetPosition.isEqual( b.position ) ) {\n\t\ta.targetPosition = a.targetPosition._getTransformedByInsertOperation( b );\n\t}\n\n\treturn [ a ];\n} );\n\nsetTransformation( MoveOperation, MoveOperation, ( a, b, context ) => {\n\t//\n\t// Setting and evaluating some variables that will be used in special cases and default algorithm.\n\t//\n\t// Create ranges from `MoveOperations` properties.\n\tconst rangeA = Range._createFromPositionAndShift( a.sourcePosition, a.howMany );\n\tconst rangeB = Range._createFromPositionAndShift( b.sourcePosition, b.howMany );\n\n\t// Assign `context.aIsStrong` to a different variable, because the value may change during execution of\n\t// this algorithm and we do not want to override original `context.aIsStrong` that will be used in later transformations.\n\tlet aIsStrong = context.aIsStrong;\n\n\t// This will be used to decide the order of nodes if both operations target at the same position.\n\t// By default, use strong/weak operation mechanism.\n\tlet insertBefore = !context.aIsStrong;\n\n\t// If the relation is set, then use it to decide nodes order.\n\tif ( context.abRelation == 'insertBefore' || context.baRelation == 'insertAfter' ) {\n\t\tinsertBefore = true;\n\t} else if ( context.abRelation == 'insertAfter' || context.baRelation == 'insertBefore' ) {\n\t\tinsertBefore = false;\n\t}\n\n\t// `a.targetPosition` could be affected by the `b` operation. We will transform it.\n\tlet newTargetPosition;\n\n\tif ( a.targetPosition.isEqual( b.targetPosition ) && insertBefore ) {\n\t\tnewTargetPosition = a.targetPosition._getTransformedByDeletion(\n\t\t\tb.sourcePosition,\n\t\t\tb.howMany\n\t\t);\n\t} else {\n\t\tnewTargetPosition = a.targetPosition._getTransformedByMove(\n\t\t\tb.sourcePosition,\n\t\t\tb.targetPosition,\n\t\t\tb.howMany\n\t\t);\n\t}\n\n\t//\n\t// Special case #1 + mirror.\n\t//\n\t// Special case when both move operations' target positions are inside nodes that are\n\t// being moved by the other move operation. So in other words, we move ranges into inside of each other.\n\t// This case can't be solved reasonably (on the other hand, it should not happen often).\n\tif ( _moveTargetIntoMovedRange( a, b ) && _moveTargetIntoMovedRange( b, a ) ) {\n\t\t// Instead of transforming operation, we return a reverse of the operation that we transform by.\n\t\t// So when the results of this \"transformation\" will be applied, `b` MoveOperation will get reversed.\n\t\treturn [ b.getReversed() ];\n\t}\n\t//\n\t// End of special case #1.\n\t//\n\n\t//\n\t// Special case #2.\n\t//\n\t// Check if `b` operation targets inside `rangeA`.\n\tconst bTargetsToA = rangeA.containsPosition( b.targetPosition );\n\n\t// If `b` targets to `rangeA` and `rangeA` contains `rangeB`, `b` operation has no influence on `a` operation.\n\t// You might say that operation `b` is captured inside operation `a`.\n\tif ( bTargetsToA && rangeA.containsRange( rangeB, true ) ) {\n\t\t// There is a mini-special case here, where `rangeB` is on other level than `rangeA`. That's why\n\t\t// we need to transform `a` operation anyway.\n\t\trangeA.start = rangeA.start._getTransformedByMove( b.sourcePosition, b.targetPosition, b.howMany );\n\t\trangeA.end = rangeA.end._getTransformedByMove( b.sourcePosition, b.targetPosition, b.howMany );\n\n\t\treturn _makeMoveOperationsFromRanges( [ rangeA ], newTargetPosition );\n\t}\n\n\t//\n\t// Special case #2 mirror.\n\t//\n\tconst aTargetsToB = rangeB.containsPosition( a.targetPosition );\n\n\tif ( aTargetsToB && rangeB.containsRange( rangeA, true ) ) {\n\t\t// `a` operation is \"moved together\" with `b` operation.\n\t\t// Here, just move `rangeA` \"inside\" `rangeB`.\n\t\trangeA.start = rangeA.start._getCombined( b.sourcePosition, b.getMovedRangeStart() );\n\t\trangeA.end = rangeA.end._getCombined( b.sourcePosition, b.getMovedRangeStart() );\n\n\t\treturn _makeMoveOperationsFromRanges( [ rangeA ], newTargetPosition );\n\t}\n\t//\n\t// End of special case #2.\n\t//\n\n\t//\n\t// Special case #3 + mirror.\n\t//\n\t// `rangeA` has a node which is an ancestor of `rangeB`. In other words, `rangeB` is inside `rangeA`\n\t// but not on the same tree level. In such case ranges have common part but we have to treat it\n\t// differently, because in such case those ranges are not really conflicting and should be treated like\n\t// two separate ranges. Also we have to discard two difference parts.\n\tconst aCompB = compareArrays( a.sourcePosition.getParentPath(), b.sourcePosition.getParentPath() );\n\n\tif ( aCompB == 'prefix' || aCompB == 'extension' ) {\n\t\t// Transform `rangeA` by `b` operation and make operation out of it, and that's all.\n\t\t// Note that this is a simplified version of default case, but here we treat the common part (whole `rangeA`)\n\t\t// like a one difference part.\n\t\trangeA.start = rangeA.start._getTransformedByMove( b.sourcePosition, b.targetPosition, b.howMany );\n\t\trangeA.end = rangeA.end._getTransformedByMove( b.sourcePosition, b.targetPosition, b.howMany );\n\n\t\treturn _makeMoveOperationsFromRanges( [ rangeA ], newTargetPosition );\n\t}\n\t//\n\t// End of special case #3.\n\t//\n\n\t//\n\t// Default case - ranges are on the same level or are not connected with each other.\n\t//\n\t// Modifier for default case.\n\t// Modifies `aIsStrong` flag in certain conditions.\n\t//\n\t// If only one of operations is a remove operation, we force remove operation to be the \"stronger\" one\n\t// to provide more expected results.\n\tif ( a.type == 'remove' && b.type != 'remove' && !context.aWasUndone && !context.forceWeakRemove ) {\n\t\taIsStrong = true;\n\t} else if ( a.type != 'remove' && b.type == 'remove' && !context.bWasUndone && !context.forceWeakRemove ) {\n\t\taIsStrong = false;\n\t}\n\n\t// Handle operation's source ranges - check how `rangeA` is affected by `b` operation.\n\t// This will aggregate transformed ranges.\n\tconst ranges = [];\n\n\t// Get the \"difference part\" of `a` operation source range.\n\t// This is an array with one or two ranges. Two ranges if `rangeB` is inside `rangeA`.\n\tconst difference = rangeA.getDifference( rangeB );\n\n\tfor ( const range of difference ) {\n\t\t// Transform those ranges by `b` operation. For example if `b` moved range from before those ranges, fix those ranges.\n\t\trange.start = range.start._getTransformedByDeletion( b.sourcePosition, b.howMany );\n\t\trange.end = range.end._getTransformedByDeletion( b.sourcePosition, b.howMany );\n\n\t\t// If `b` operation targets into `rangeA` on the same level, spread `rangeA` into two ranges.\n\t\tconst shouldSpread = compareArrays( range.start.getParentPath(), b.getMovedRangeStart().getParentPath() ) == 'same';\n\t\tconst newRanges = range._getTransformedByInsertion( b.getMovedRangeStart(), b.howMany, shouldSpread );\n\n\t\tranges.push( ...newRanges );\n\t}\n\n\t// Then, we have to manage the \"common part\" of both move ranges.\n\tconst common = rangeA.getIntersection( rangeB );\n\n\tif ( common !== null && aIsStrong ) {\n\t\t// Calculate the new position of that part of original range.\n\t\tcommon.start = common.start._getCombined( b.sourcePosition, b.getMovedRangeStart() );\n\t\tcommon.end = common.end._getCombined( b.sourcePosition, b.getMovedRangeStart() );\n\n\t\t// Take care of proper range order.\n\t\t//\n\t\t// Put `common` at appropriate place. Keep in mind that we are interested in original order.\n\t\t// Basically there are only three cases: there is zero, one or two difference ranges.\n\t\t//\n\t\t// If there is zero difference ranges, just push `common` in the array.\n\t\tif ( ranges.length === 0 ) {\n\t\t\tranges.push( common );\n\t\t}\n\t\t// If there is one difference range, we need to check whether common part was before it or after it.\n\t\telse if ( ranges.length == 1 ) {\n\t\t\tif ( rangeB.start.isBefore( rangeA.start ) || rangeB.start.isEqual( rangeA.start ) ) {\n\t\t\t\tranges.unshift( common );\n\t\t\t} else {\n\t\t\t\tranges.push( common );\n\t\t\t}\n\t\t}\n\t\t// If there are more ranges (which means two), put common part between them. This is the only scenario\n\t\t// where there could be two difference ranges so we don't have to make any comparisons.\n\t\telse {\n\t\t\tranges.splice( 1, 0, common );\n\t\t}\n\t}\n\n\tif ( ranges.length === 0 ) {\n\t\t// If there are no \"source ranges\", nothing should be changed.\n\t\t// Note that this can happen only if `aIsStrong == false` and `rangeA.isEqual( rangeB )`.\n\t\treturn [ new NoOperation( a.baseVersion ) ];\n\t}\n\n\treturn _makeMoveOperationsFromRanges( ranges, newTargetPosition );\n} );\n\nsetTransformation( MoveOperation, SplitOperation, ( a, b, context ) => {\n\tlet newTargetPosition = a.targetPosition.clone();\n\n\t// Do not transform if target position is same as split insertion position and this split comes from undo.\n\t// This should be done on relations but it is too much work for now as it would require relations working in collaboration.\n\t// We need to make a decision how we will resolve such conflict and this is less harmful way.\n\tif ( !a.targetPosition.isEqual( b.insertionPosition ) || !b.graveyardPosition || context.abRelation == 'moveTargetAfter' ) {\n\t\tnewTargetPosition = a.targetPosition._getTransformedBySplitOperation( b );\n\t}\n\n\t// Case 1:\n\t//\n\t// Last element in the moved range got split.\n\t//\n\t// In this case the default range transformation will not work correctly as the element created by\n\t// split operation would be outside the range. The range to move needs to be fixed manually.\n\t//\n\tconst moveRange = Range._createFromPositionAndShift( a.sourcePosition, a.howMany );\n\n\tif ( moveRange.end.isEqual( b.insertionPosition ) ) {\n\t\t// Do it only if this is a \"natural\" split, not a one that comes from undo.\n\t\t// If this is undo split, only `targetPosition` needs to be changed (if the move is a remove).\n\t\tif ( !b.graveyardPosition ) {\n\t\t\ta.howMany++;\n\t\t}\n\n\t\ta.targetPosition = newTargetPosition;\n\n\t\treturn [ a ];\n\t}\n\n\t// Case 2:\n\t//\n\t// Split happened between the moved nodes. In this case two ranges to move need to be generated.\n\t//\n\t// Characters `ozba` are moved to the end of paragraph `Xyz` but split happened.\n\t// <p>F[oz|ba]r</p><p>Xyz</p>\n\t//\n\t// After split:\n\t// <p>F[oz</p><p>ba]r</p><p>Xyz</p>\n\t//\n\t// Correct ranges:\n\t// <p>F[oz]</p><p>[ba]r</p><p>Xyz</p>\n\t//\n\t// After move:\n\t// <p>F</p><p>r</p><p>Xyzozba</p>\n\t//\n\tif ( moveRange.start.hasSameParentAs( b.splitPosition ) && moveRange.containsPosition( b.splitPosition ) ) {\n\t\tlet rightRange = new Range( b.splitPosition, moveRange.end );\n\t\trightRange = rightRange._getTransformedBySplitOperation( b );\n\n\t\tconst ranges = [\n\t\t\tnew Range( moveRange.start, b.splitPosition ),\n\t\t\trightRange\n\t\t];\n\n\t\treturn _makeMoveOperationsFromRanges( ranges, newTargetPosition );\n\t}\n\n\t// Case 3:\n\t//\n\t// Move operation targets at the split position. We need to decide if the nodes should be inserted\n\t// at the end of the split element or at the beginning of the new element.\n\t//\n\tif ( a.targetPosition.isEqual( b.splitPosition ) && context.abRelation == 'insertAtSource' ) {\n\t\tnewTargetPosition = b.moveTargetPosition;\n\t}\n\n\t// Case 4:\n\t//\n\t// Move operation targets just after the split element. We need to decide if the nodes should be inserted\n\t// between two parts of split element, or after the new element.\n\t//\n\t// Split at `|`, while move operation moves `<p>Xyz</p>` and targets at `^`:\n\t// <p>Foo|bar</p>^<p>baz</p>\n\t// <p>Foo</p>^<p>bar</p><p>baz</p> or <p>Foo</p><p>bar</p>^<p>baz</p>?\n\t//\n\t// If there is no contextual information between operations (for example, they come from collaborative\n\t// editing), we don't want to put some unrelated content (move) between parts of related content (split parts).\n\t// However, if the split is from undo, in the past, the moved content might be targeting between the\n\t// split parts, meaning that was exactly user's intention:\n\t//\n\t// <p>Foo</p>^<p>bar</p>\t\t<--- original situation, in \"past\".\n\t// <p>Foobar</p>^\t\t\t\t<--- after merge target position is transformed.\n\t// <p>Foo|bar</p>^\t\t\t\t<--- then the merge is undone, and split happens, which leads us to current situation.\n\t//\n\t// In this case it is pretty clear that the intention was to put new paragraph between those nodes,\n\t// so we need to transform accordingly. We can detect this scenario thanks to relations.\n\t//\n\tif ( a.targetPosition.isEqual( b.insertionPosition ) && context.abRelation == 'insertBetween' ) {\n\t\tnewTargetPosition = a.targetPosition;\n\t}\n\n\t// The default case.\n\t//\n\tconst transformed = moveRange._getTransformedBySplitOperation( b );\n\tconst ranges = [ transformed ];\n\n\t// Case 5:\n\t//\n\t// Moved range contains graveyard element used by split operation. Add extra move operation to the result.\n\t//\n\tif ( b.graveyardPosition ) {\n\t\tconst movesGraveyardElement = moveRange.start.isEqual( b.graveyardPosition ) || moveRange.containsPosition( b.graveyardPosition );\n\n\t\tif ( a.howMany > 1 && movesGraveyardElement && !context.aWasUndone ) {\n\t\t\tranges.push( Range._createFromPositionAndShift( b.insertionPosition, 1 ) );\n\t\t}\n\t}\n\n\treturn _makeMoveOperationsFromRanges( ranges, newTargetPosition );\n} );\n\nsetTransformation( MoveOperation, MergeOperation, ( a, b, context ) => {\n\tconst movedRange = Range._createFromPositionAndShift( a.sourcePosition, a.howMany );\n\n\tif ( b.deletionPosition.hasSameParentAs( a.sourcePosition ) && movedRange.containsPosition( b.sourcePosition ) ) {\n\t\tif ( a.type == 'remove' && !context.forceWeakRemove ) {\n\t\t\t// Case 1:\n\t\t\t//\n\t\t\t// The element to remove got merged.\n\t\t\t//\n\t\t\t// Merge operation does support merging elements which are not siblings. So it would not be a problem\n\t\t\t// from technical point of view. However, if the element was removed, the intention of the user\n\t\t\t// deleting it was to have it all deleted. From user experience point of view, moving back the\n\t\t\t// removed nodes might be unexpected. This means that in this scenario we will reverse merging and remove the element.\n\t\t\t//\n\t\t\tif ( !context.aWasUndone ) {\n\t\t\t\tconst results = [];\n\n\t\t\t\tlet gyMoveSource = b.graveyardPosition.clone();\n\t\t\t\tlet splitNodesMoveSource = b.targetPosition._getTransformedByMergeOperation( b );\n\n\t\t\t\tif ( a.howMany > 1 ) {\n\t\t\t\t\tresults.push( new MoveOperation( a.sourcePosition, a.howMany - 1, a.targetPosition, 0 ) );\n\n\t\t\t\t\tgyMoveSource = gyMoveSource._getTransformedByMove( a.sourcePosition, a.targetPosition, a.howMany - 1 );\n\t\t\t\t\tsplitNodesMoveSource = splitNodesMoveSource._getTransformedByMove( a.sourcePosition, a.targetPosition, a.howMany - 1 );\n\t\t\t\t}\n\n\t\t\t\tconst gyMoveTarget = b.deletionPosition._getCombined( a.sourcePosition, a.targetPosition );\n\t\t\t\tconst gyMove = new MoveOperation( gyMoveSource, 1, gyMoveTarget, 0 );\n\n\t\t\t\tconst splitNodesMoveTargetPath = gyMove.getMovedRangeStart().path.slice();\n\t\t\t\tsplitNodesMoveTargetPath.push( 0 );\n\n\t\t\t\tconst splitNodesMoveTarget = new Position( gyMove.targetPosition.root, splitNodesMoveTargetPath );\n\t\t\t\tsplitNodesMoveSource = splitNodesMoveSource._getTransformedByMove( gyMoveSource, gyMoveTarget, 1 );\n\t\t\t\tconst splitNodesMove = new MoveOperation( splitNodesMoveSource, b.howMany, splitNodesMoveTarget, 0 );\n\n\t\t\t\tresults.push( gyMove );\n\t\t\t\tresults.push( splitNodesMove );\n\n\t\t\t\treturn results;\n\t\t\t}\n\t\t} else {\n\t\t\t// Case 2:\n\t\t\t//\n\t\t\t// The element to move got merged and it was the only element to move.\n\t\t\t// In this case just don't do anything, leave the node in the graveyard. Without special case\n\t\t\t// it would be a move operation that moves 0 nodes, so maybe it is better just to return no-op.\n\t\t\t//\n\t\t\tif ( a.howMany == 1 ) {\n\t\t\t\tif ( !context.bWasUndone ) {\n\t\t\t\t\treturn [ new NoOperation( 0 ) ];\n\t\t\t\t} else {\n\t\t\t\t\ta.sourcePosition = b.graveyardPosition.clone();\n\t\t\t\t\ta.targetPosition = a.targetPosition._getTransformedByMergeOperation( b );\n\n\t\t\t\t\treturn [ a ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// The default case.\n\t//\n\tconst moveRange = Range._createFromPositionAndShift( a.sourcePosition, a.howMany );\n\tconst transformed = moveRange._getTransformedByMergeOperation( b );\n\n\ta.sourcePosition = transformed.start;\n\ta.howMany = transformed.end.offset - transformed.start.offset;\n\ta.targetPosition = a.targetPosition._getTransformedByMergeOperation( b );\n\n\treturn [ a ];\n} );\n\n// -----------------------\n\nsetTransformation( RenameOperation, InsertOperation, ( a, b ) => {\n\ta.position = a.position._getTransformedByInsertOperation( b );\n\n\treturn [ a ];\n} );\n\nsetTransformation( RenameOperation, MergeOperation, ( a, b ) => {\n\t// Case 1:\n\t//\n\t// Element to rename got merged, so it was moved to `b.graveyardPosition`.\n\t//\n\tif ( a.position.isEqual( b.deletionPosition ) ) {\n\t\ta.position = b.graveyardPosition.clone();\n\t\ta.position.stickiness = 'toNext';\n\n\t\treturn [ a ];\n\t}\n\n\ta.position = a.position._getTransformedByMergeOperation( b );\n\n\treturn [ a ];\n} );\n\nsetTransformation( RenameOperation, MoveOperation, ( a, b ) => {\n\ta.position = a.position._getTransformedByMoveOperation( b );\n\n\treturn [ a ];\n} );\n\nsetTransformation( RenameOperation, RenameOperation, ( a, b, context ) => {\n\tif ( a.position.isEqual( b.position ) ) {\n\t\tif ( context.aIsStrong ) {\n\t\t\ta.oldName = b.newName;\n\t\t} else {\n\t\t\treturn [ new NoOperation( 0 ) ];\n\t\t}\n\t}\n\n\treturn [ a ];\n} );\n\nsetTransformation( RenameOperation, SplitOperation, ( a, b ) => {\n\t// Case 1:\n\t//\n\t// The element to rename has been split. In this case, the new element should be also renamed.\n\t//\n\t// User decides to change the paragraph to a list item:\n\t// <paragraph>Foobar</paragraph>\n\t//\n\t// However, in meantime, split happens:\n\t// <paragraph>Foo</paragraph><paragraph>bar</paragraph>\n\t//\n\t// As a result, rename both elements:\n\t// <listItem>Foo</listItem><listItem>bar</listItem>\n\t//\n\tconst renamePath = a.position.path;\n\tconst splitPath = b.splitPosition.getParentPath();\n\n\tif ( compareArrays( renamePath, splitPath ) == 'same' && !b.graveyardPosition ) {\n\t\tconst extraRename = new RenameOperation( a.position.getShiftedBy( 1 ), a.oldName, a.newName, 0 );\n\n\t\treturn [ a, extraRename ];\n\t}\n\n\t// The default case.\n\t//\n\ta.position = a.position._getTransformedBySplitOperation( b );\n\n\treturn [ a ];\n} );\n\n// -----------------------\n\nsetTransformation( RootAttributeOperation, RootAttributeOperation, ( a, b, context ) => {\n\tif ( a.root === b.root && a.key === b.key ) {\n\t\tif ( !context.aIsStrong || a.newValue === b.newValue ) {\n\t\t\treturn [ new NoOperation( 0 ) ];\n\t\t} else {\n\t\t\ta.oldValue = b.newValue;\n\t\t}\n\t}\n\n\treturn [ a ];\n} );\n\n// -----------------------\n\nsetTransformation( SplitOperation, InsertOperation, ( a, b ) => {\n\t// The default case.\n\t//\n\tif ( a.splitPosition.hasSameParentAs( b.position ) && a.splitPosition.offset < b.position.offset ) {\n\t\ta.howMany += b.howMany;\n\t}\n\n\ta.splitPosition = a.splitPosition._getTransformedByInsertOperation( b );\n\ta.insertionPosition = SplitOperation.getInsertionPosition( a.splitPosition );\n\n\treturn [ a ];\n} );\n\nsetTransformation( SplitOperation, MergeOperation, ( a, b, context ) => {\n\t// Case 1:\n\t//\n\t// Split element got merged. If two different elements were merged, clients will have different content.\n\t//\n\t// Example. Merge at `{}`, split at `[]`:\n\t// <heading>Foo</heading>{}<paragraph>B[]ar</paragraph>\n\t//\n\t// On merge side it will look like this:\n\t// <heading>FooB[]ar</heading>\n\t// <heading>FooB</heading><heading>ar</heading>\n\t//\n\t// On split side it will look like this:\n\t// <heading>Foo</heading>{}<paragraph>B</paragraph><paragraph>ar</paragraph>\n\t// <heading>FooB</heading><paragraph>ar</paragraph>\n\t//\n\t// Clearly, the second element is different for both clients.\n\t//\n\t// We could use the removed merge element from graveyard as a split element but then clients would have a different\n\t// model state (in graveyard), because the split side client would still have an element in graveyard (removed by merge).\n\t//\n\t// To overcome this, in `SplitOperation` x `MergeOperation` transformation we will add additional `SplitOperation`\n\t// in the graveyard, which will actually clone the merged-and-deleted element. Then, that cloned element will be\n\t// used for splitting. Example below.\n\t//\n\t// Original state:\n\t// <heading>Foo</heading>{}<paragraph>B[]ar</paragraph>\n\t//\n\t// Merge side client:\n\t//\n\t// After merge:\n\t// <heading>FooB[]ar</heading>                                 graveyard: <paragraph></paragraph>\n\t//\n\t// Extra split:\n\t// <heading>FooB[]ar</heading>                                 graveyard: <paragraph></paragraph><paragraph></paragraph>\n\t//\n\t// Use the \"cloned\" element from graveyard:\n\t// <heading>FooB</heading><paragraph>ar</paragraph>            graveyard: <paragraph></paragraph>\n\t//\n\t// Split side client:\n\t//\n\t// After split:\n\t// <heading>Foo</heading>{}<paragraph>B</paragraph><paragraph>ar</paragraph>\n\t//\n\t// After merge:\n\t// <heading>FooB</heading><paragraph>ar</paragraph>            graveyard: <paragraph></paragraph>\n\t//\n\t// This special case scenario only applies if the original split operation clones the split element.\n\t// If the original split operation has `graveyardPosition` set, it all doesn't have sense because split operation\n\t// knows exactly which element it should use. So there would be no original problem with different contents.\n\t//\n\t// Additionally, the special case applies only if the merge wasn't already undone.\n\t//\n\tif ( !a.graveyardPosition && !context.bWasUndone && a.splitPosition.hasSameParentAs( b.sourcePosition ) ) {\n\t\tconst splitPath = b.graveyardPosition.path.slice();\n\t\tsplitPath.push( 0 );\n\n\t\tconst splitPosition = new Position( b.graveyardPosition.root, splitPath );\n\t\tconst insertionPosition = SplitOperation.getInsertionPosition( new Position( b.graveyardPosition.root, splitPath ) );\n\n\t\tconst additionalSplit = new SplitOperation( splitPosition, 0, null, 0 );\n\t\tadditionalSplit.insertionPosition = insertionPosition;\n\n\t\ta.splitPosition = a.splitPosition._getTransformedByMergeOperation( b );\n\t\ta.insertionPosition = SplitOperation.getInsertionPosition( a.splitPosition );\n\t\ta.graveyardPosition = additionalSplit.insertionPosition.clone();\n\t\ta.graveyardPosition.stickiness = 'toNext';\n\n\t\treturn [ additionalSplit, a ];\n\t}\n\n\t// The default case.\n\t//\n\tif ( a.splitPosition.hasSameParentAs( b.deletionPosition ) && !a.splitPosition.isAfter( b.deletionPosition ) ) {\n\t\ta.howMany--;\n\t}\n\n\tif ( a.splitPosition.hasSameParentAs( b.targetPosition ) ) {\n\t\ta.howMany += b.howMany;\n\t}\n\n\ta.splitPosition = a.splitPosition._getTransformedByMergeOperation( b );\n\ta.insertionPosition = SplitOperation.getInsertionPosition( a.splitPosition );\n\n\tif ( a.graveyardPosition ) {\n\t\ta.graveyardPosition = a.graveyardPosition._getTransformedByMergeOperation( b );\n\t}\n\n\treturn [ a ];\n} );\n\nsetTransformation( SplitOperation, MoveOperation, ( a, b, context ) => {\n\tconst rangeToMove = Range._createFromPositionAndShift( b.sourcePosition, b.howMany );\n\n\tif ( a.graveyardPosition ) {\n\t\t// Case 1:\n\t\t//\n\t\t// Split operation graveyard node was moved. In this case move operation is stronger. Since graveyard element\n\t\t// is already moved to the correct position, we need to only move the nodes after the split position.\n\t\t// This will be done by `MoveOperation` instead of `SplitOperation`.\n\t\t//\n\t\tconst gyElementMoved = rangeToMove.start.isEqual( a.graveyardPosition ) || rangeToMove.containsPosition( a.graveyardPosition );\n\n\t\tif ( !context.bWasUndone && gyElementMoved ) {\n\t\t\tconst sourcePosition = a.splitPosition._getTransformedByMoveOperation( b );\n\n\t\t\tconst newParentPosition = a.graveyardPosition._getTransformedByMoveOperation( b );\n\t\t\tconst newTargetPath = newParentPosition.path.slice();\n\t\t\tnewTargetPath.push( 0 );\n\n\t\t\tconst newTargetPosition = new Position( newParentPosition.root, newTargetPath );\n\t\t\tconst moveOp = new MoveOperation( sourcePosition, a.howMany, newTargetPosition, 0 );\n\n\t\t\treturn [ moveOp ];\n\t\t}\n\n\t\ta.graveyardPosition = a.graveyardPosition._getTransformedByMoveOperation( b );\n\t}\n\n\t// Case 2:\n\t//\n\t// If the split position is inside the moved range, we need to shift the split position to a proper place.\n\t// The position cannot be moved together with moved range because that would result in splitting of an incorrect element.\n\t//\n\t// Characters `bc` should be moved to the second paragraph while split position is between them:\n\t// <paragraph>A[b|c]d</paragraph><paragraph>Xyz</paragraph>\n\t//\n\t// After move, new split position is incorrect:\n\t// <paragraph>Ad</paragraph><paragraph>Xb|cyz</paragraph>\n\t//\n\t// Correct split position:\n\t// <paragraph>A|d</paragraph><paragraph>Xbcyz</paragraph>\n\t//\n\t// After split:\n\t// <paragraph>A</paragraph><paragraph>d</paragraph><paragraph>Xbcyz</paragraph>\n\t//\n\tif ( a.splitPosition.hasSameParentAs( b.sourcePosition ) && rangeToMove.containsPosition( a.splitPosition ) ) {\n\t\tconst howManyRemoved = b.howMany - ( a.splitPosition.offset - b.sourcePosition.offset );\n\t\ta.howMany -= howManyRemoved;\n\n\t\tif ( a.splitPosition.hasSameParentAs( b.targetPosition ) && a.splitPosition.offset < b.targetPosition.offset ) {\n\t\t\ta.howMany += b.howMany;\n\t\t}\n\n\t\ta.splitPosition = b.sourcePosition.clone();\n\t\ta.insertionPosition = SplitOperation.getInsertionPosition( a.splitPosition );\n\n\t\treturn [ a ];\n\t}\n\n\t// Case 3:\n\t//\n\t// Split is at a position where nodes were moved.\n\t//\n\t// This is a scenario described in `MoveOperation` x `SplitOperation` transformation but from the\n\t// \"split operation point of view\".\n\t//\n\tconst splitAtTarget = a.splitPosition.isEqual( b.targetPosition );\n\n\tif ( splitAtTarget && ( context.baRelation == 'insertAtSource' || context.abRelation == 'splitBefore' ) ) {\n\t\ta.howMany += b.howMany;\n\t\ta.splitPosition = a.splitPosition._getTransformedByDeletion( b.sourcePosition, b.howMany );\n\t\ta.insertionPosition = SplitOperation.getInsertionPosition( a.splitPosition );\n\n\t\treturn [ a ];\n\t}\n\n\t// The default case.\n\t// Don't change `howMany` if move operation does not really move anything.\n\t//\n\tif ( !b.sourcePosition.isEqual( b.targetPosition ) ) {\n\t\tif ( a.splitPosition.hasSameParentAs( b.sourcePosition ) && a.splitPosition.offset <= b.sourcePosition.offset ) {\n\t\t\ta.howMany -= b.howMany;\n\t\t}\n\n\t\tif ( a.splitPosition.hasSameParentAs( b.targetPosition ) && a.splitPosition.offset < b.targetPosition.offset ) {\n\t\t\ta.howMany += b.howMany;\n\t\t}\n\t}\n\n\t// Change position stickiness to force a correct transformation.\n\ta.splitPosition.stickiness = 'toNone';\n\ta.splitPosition = a.splitPosition._getTransformedByMoveOperation( b );\n\ta.splitPosition.stickiness = 'toNext';\n\n\tif ( a.graveyardPosition ) {\n\t\ta.insertionPosition = a.insertionPosition._getTransformedByMoveOperation( b );\n\t} else {\n\t\ta.insertionPosition = SplitOperation.getInsertionPosition( a.splitPosition );\n\t}\n\n\treturn [ a ];\n} );\n\nsetTransformation( SplitOperation, SplitOperation, ( a, b, context ) => {\n\t// Case 1:\n\t//\n\t// Split at the same position.\n\t//\n\t// If there already was a split at the same position as in `a` operation, it means that the intention\n\t// conveyed by `a` operation has already been fulfilled and `a` should not do anything (to avoid double split).\n\t//\n\t// However, there is a difference if these are new splits or splits created by undo. These have different\n\t// intentions. Also splits moving back different elements from graveyard have different intentions. They\n\t// are just different operations.\n\t//\n\t// So we cancel split operation only if it was really identical.\n\t//\n\t// Also, there is additional case, where split operations aren't identical and should not be cancelled, however the\n\t// default transformation is incorrect too.\n\t//\n\tif ( a.splitPosition.isEqual( b.splitPosition ) ) {\n\t\tif ( !a.graveyardPosition && !b.graveyardPosition ) {\n\t\t\treturn [ new NoOperation( 0 ) ];\n\t\t}\n\n\t\tif ( a.graveyardPosition && b.graveyardPosition && a.graveyardPosition.isEqual( b.graveyardPosition ) ) {\n\t\t\treturn [ new NoOperation( 0 ) ];\n\t\t}\n\n\t\t// Use context to know that the `a.splitPosition` should stay where it is.\n\t\t// This happens during undo when first a merge operation moved nodes to `a.splitPosition` and now `b` operation undoes that merge.\n\t\tif ( context.abRelation == 'splitBefore' ) {\n\t\t\t// Since split is at the same position, there are no nodes left to split.\n\t\t\ta.howMany = 0;\n\n\t\t\t// Note: there was `if ( a.graveyardPosition )` here but it was uncovered in tests and I couldn't find any scenarios for now.\n\t\t\t// That would have to be a `SplitOperation` that didn't come from undo but is transformed by operations that were undone.\n\t\t\t// It could happen if `context` is enabled in collaboration.\n\t\t\ta.graveyardPosition = a.graveyardPosition._getTransformedBySplitOperation( b );\n\n\t\t\treturn [ a ];\n\t\t}\n\t}\n\n\t// Case 2:\n\t//\n\t// Same node is using to split different elements. This happens in undo when previously same element was merged to\n\t// two different elements. This is described in `MergeOperation` x `MergeOperation` transformation.\n\t//\n\t// In this case we will follow the same logic. We will assume that `insertionPosition` is same for both\n\t// split operations. This might not always be true but in the real cases that were experienced it was. After all,\n\t// if these splits are reverses of merge operations that were merging the same element, then the `insertionPosition`\n\t// should be same for both of those splits.\n\t//\n\t// Again, we will decide which operation is stronger by checking if split happens in graveyard or in non-graveyard root.\n\t//\n\tif ( a.graveyardPosition && b.graveyardPosition && a.graveyardPosition.isEqual( b.graveyardPosition ) ) {\n\t\tconst aInGraveyard = a.splitPosition.root.rootName == '$graveyard';\n\t\tconst bInGraveyard = b.splitPosition.root.rootName == '$graveyard';\n\n\t\t// If `aIsWeak` it means that `a` points to graveyard while `b` doesn't. Don't move nodes then.\n\t\tconst aIsWeak = aInGraveyard && !bInGraveyard;\n\n\t\t// If `bIsWeak` it means that `b` points to graveyard while `a` doesn't. Force moving nodes then.\n\t\tconst bIsWeak = bInGraveyard && !aInGraveyard;\n\n\t\t// Force move if `b` is weak or neither operation is weak but `a` is stronger through `context.aIsStrong`.\n\t\tconst forceMove = bIsWeak || ( !aIsWeak && context.aIsStrong );\n\n\t\tif ( forceMove ) {\n\t\t\tconst result = [];\n\n\t\t\t// First we need to move any nodes split by `b` back to where they were.\n\t\t\t// Do it only if `b` actually moved something.\n\t\t\tif ( b.howMany ) {\n\t\t\t\tresult.push( new MoveOperation( b.moveTargetPosition, b.howMany, b.splitPosition, 0 ) );\n\t\t\t}\n\n\t\t\t// Then we need to move nodes from `a` split position to their new element.\n\t\t\t// Do it only if `a` actually should move something.\n\t\t\tif ( a.howMany ) {\n\t\t\t\tresult.push( new MoveOperation( a.splitPosition, a.howMany, a.moveTargetPosition, 0 ) );\n\t\t\t}\n\n\t\t\treturn result;\n\t\t} else {\n\t\t\treturn [ new NoOperation( 0 ) ];\n\t\t}\n\t}\n\n\tif ( a.graveyardPosition ) {\n\t\ta.graveyardPosition = a.graveyardPosition._getTransformedBySplitOperation( b );\n\t}\n\n\t// Case 3:\n\t//\n\t// Position where operation `b` inserted a new node after split is the same as the operation `a` split position.\n\t// As in similar cases, there is ambiguity if the split should be before the new node (created by `b`) or after.\n\t//\n\tif ( a.splitPosition.isEqual( b.insertionPosition ) && context.abRelation == 'splitBefore' ) {\n\t\ta.howMany++;\n\n\t\treturn [ a ];\n\t}\n\n\t// Case 4:\n\t//\n\t// This is a mirror to the case 2. above.\n\t//\n\tif ( b.splitPosition.isEqual( a.insertionPosition ) && context.baRelation == 'splitBefore' ) {\n\t\tconst newPositionPath = b.insertionPosition.path.slice();\n\t\tnewPositionPath.push( 0 );\n\n\t\tconst newPosition = new Position( b.insertionPosition.root, newPositionPath );\n\t\tconst moveOp = new MoveOperation( a.insertionPosition, 1, newPosition, 0 );\n\n\t\treturn [ a, moveOp ];\n\t}\n\n\t// The default case.\n\t//\n\tif ( a.splitPosition.hasSameParentAs( b.splitPosition ) && a.splitPosition.offset < b.splitPosition.offset ) {\n\t\ta.howMany -= b.howMany;\n\t}\n\n\ta.splitPosition = a.splitPosition._getTransformedBySplitOperation( b );\n\ta.insertionPosition = SplitOperation.getInsertionPosition( a.splitPosition );\n\n\treturn [ a ];\n} );\n\n// Checks whether `MoveOperation` `targetPosition` is inside a node from the moved range of the other `MoveOperation`.\n//\n// @private\n// @param {module:engine/model/operation/moveoperation~MoveOperation} a\n// @param {module:engine/model/operation/moveoperation~MoveOperation} b\n// @returns {Boolean}\nfunction _moveTargetIntoMovedRange( a, b ) {\n\treturn a.targetPosition._getTransformedByDeletion( b.sourcePosition, b.howMany ) === null;\n}\n\n// Helper function for `MoveOperation` x `MoveOperation` transformation. Converts given ranges and target position to\n// move operations and returns them.\n//\n// Ranges and target position will be transformed on-the-fly when generating operations.\n//\n// Given `ranges` should be in the order of how they were in the original transformed operation.\n//\n// Given `targetPosition` is the target position of the first range from `ranges`.\n//\n// @private\n// @param {Array.<module:engine/model/range~Range>} ranges\n// @param {module:engine/model/position~Position} targetPosition\n// @returns {Array.<module:engine/model/operation/moveoperation~MoveOperation>}\nfunction _makeMoveOperationsFromRanges( ranges, targetPosition ) {\n\t// At this moment we have some ranges and a target position, to which those ranges should be moved.\n\t// Order in `ranges` array is the go-to order of after transformation.\n\t//\n\t// We are almost done. We have `ranges` and `targetPosition` to make operations from.\n\t// Unfortunately, those operations may affect each other. Precisely, first operation after move\n\t// may affect source range and target position of second and third operation. Same with second\n\t// operation affecting third.\n\t//\n\t// We need to fix those source ranges and target positions once again, before converting `ranges` to operations.\n\tconst operations = [];\n\n\t// Keep in mind that nothing will be transformed if there is just one range in `ranges`.\n\tfor ( let i = 0; i < ranges.length; i++ ) {\n\t\t// Create new operation out of a range and target position.\n\t\tconst range = ranges[ i ];\n\t\tconst op = new MoveOperation(\n\t\t\trange.start,\n\t\t\trange.end.offset - range.start.offset,\n\t\t\ttargetPosition,\n\t\t\t0\n\t\t);\n\n\t\toperations.push( op );\n\n\t\t// Transform other ranges by the generated operation.\n\t\tfor ( let j = i + 1; j < ranges.length; j++ ) {\n\t\t\t// All ranges in `ranges` array should be:\n\t\t\t//\n\t\t\t// * non-intersecting (these are part of original operation source range), and\n\t\t\t// * `targetPosition` does not target into them (opposite would mean that transformed operation targets \"inside itself\").\n\t\t\t//\n\t\t\t// This means that the transformation will be \"clean\" and always return one result.\n\t\t\tranges[ j ] = ranges[ j ]._getTransformedByMove( op.sourcePosition, op.targetPosition, op.howMany )[ 0 ];\n\t\t}\n\n\t\ttargetPosition = targetPosition._getTransformedByMove( op.sourcePosition, op.targetPosition, op.howMany );\n\t}\n\n\treturn operations;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module undo/basecommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { transformSets } from '@ckeditor/ckeditor5-engine/src/model/operation/transform';\n\n/**\n * Base class for undo feature commands: {@link module:undo/undocommand~UndoCommand} and {@link module:undo/redocommand~RedoCommand}.\n *\n * @protected\n * @extends module:core/command~Command\n */\nexport default class BaseCommand extends Command {\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * Stack of items stored by the command. These are pairs of:\n\t\t *\n\t\t * * {@link module:engine/model/batch~Batch batch} saved by the command,\n\t\t * * {@link module:engine/model/selection~Selection selection} state at the moment of saving the batch.\n\t\t *\n\t\t * @protected\n\t\t * @member {Array} #_stack\n\t\t */\n\t\tthis._stack = [];\n\n\t\t/**\n\t\t * Stores all batches that were created by this command.\n\t\t *\n\t\t * @protected\n\t\t * @member {WeakSet.<module:engine/model/batch~Batch>} #_createdBatches\n\t\t */\n\t\tthis._createdBatches = new WeakSet();\n\n\t\t// Refresh state, so the command is inactive right after initialization.\n\t\tthis.refresh();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tthis.isEnabled = this._stack.length > 0;\n\t}\n\n\t/**\n\t * Stores a batch in the command, together with the selection state of the {@link module:engine/model/document~Document document}\n\t * created by the editor which this command is registered to.\n\t *\n\t * @param {module:engine/model/batch~Batch} batch The batch to add.\n\t */\n\taddBatch( batch ) {\n\t\tconst docSelection = this.editor.model.document.selection;\n\n\t\tconst selection = {\n\t\t\tranges: docSelection.hasOwnRange ? Array.from( docSelection.getRanges() ) : [],\n\t\t\tisBackward: docSelection.isBackward\n\t\t};\n\n\t\tthis._stack.push( { batch, selection } );\n\t\tthis.refresh();\n\t}\n\n\t/**\n\t * Removes all items from the stack.\n\t */\n\tclearStack() {\n\t\tthis._stack = [];\n\t\tthis.refresh();\n\t}\n\n\t/**\n\t * Restores the {@link module:engine/model/document~Document#selection document selection} state after a batch was undone.\n\t *\n\t * @protected\n\t * @param {Array.<module:engine/model/range~Range>} ranges Ranges to be restored.\n\t * @param {Boolean} isBackward A flag describing whether the restored range was selected forward or backward.\n\t * @param {Array.<module:engine/model/operation/operation~Operation>} operations Operations which has been applied\n\t * since selection has been stored.\n\t */\n\t_restoreSelection( ranges, isBackward, operations ) {\n\t\tconst model = this.editor.model;\n\t\tconst document = model.document;\n\n\t\t// This will keep the transformed selection ranges.\n\t\tconst selectionRanges = [];\n\n\t\t// Transform all ranges from the restored selection.\n\t\tfor ( const range of ranges ) {\n\t\t\tconst transformed = transformSelectionRange( range, operations );\n\n\t\t\t// For each `range` from `ranges`, we take only one transformed range.\n\t\t\t// This is because we want to prevent situation where single-range selection\n\t\t\t// got transformed to multi-range selection. We will take the first range that\n\t\t\t// is not in the graveyard.\n\t\t\tconst newRange = transformed.find(\n\t\t\t\trange => range.start.root != document.graveyard\n\t\t\t);\n\n\t\t\t// `transformedRange` might be `undefined` if transformed range ended up in graveyard.\n\t\t\tif ( newRange ) {\n\t\t\t\tselectionRanges.push( newRange );\n\t\t\t}\n\t\t}\n\n\t\t// `selectionRanges` may be empty if all ranges ended up in graveyard. If that is the case, do not restore selection.\n\t\tif ( selectionRanges.length ) {\n\t\t\tmodel.change( writer => {\n\t\t\t\twriter.setSelection( selectionRanges, { backward: isBackward } );\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Undoes a batch by reversing that batch, transforming reversed batch and finally applying it.\n\t * This is a helper method for {@link #execute}.\n\t *\n\t * @protected\n\t * @param {module:engine/model/batch~Batch} batchToUndo The batch to be undone.\n\t * @param {module:engine/model/batch~Batch} undoingBatch The batch that will contain undoing changes.\n\t */\n\t_undo( batchToUndo, undoingBatch ) {\n\t\tconst model = this.editor.model;\n\t\tconst document = model.document;\n\n\t\t// All changes done by the command execution will be saved as one batch.\n\t\tthis._createdBatches.add( undoingBatch );\n\n\t\tconst operationsToUndo = batchToUndo.operations.slice().filter( operation => operation.isDocumentOperation );\n\t\toperationsToUndo.reverse();\n\n\t\t// We will process each operation from `batchToUndo`, in reverse order. If there were operations A, B and C in undone batch,\n\t\t// we need to revert them in reverse order, so first C' (reversed C), then B', then A'.\n\t\tfor ( const operationToUndo of operationsToUndo ) {\n\t\t\tconst nextBaseVersion = operationToUndo.baseVersion + 1;\n\t\t\tconst historyOperations = Array.from( document.history.getOperations( nextBaseVersion ) );\n\n\t\t\tconst transformedSets = transformSets(\n\t\t\t\t[ operationToUndo.getReversed() ],\n\t\t\t\thistoryOperations,\n\t\t\t\t{\n\t\t\t\t\tuseRelations: true,\n\t\t\t\t\tdocument: this.editor.model.document,\n\t\t\t\t\tpadWithNoOps: false,\n\t\t\t\t\tforceWeakRemove: true\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst reversedOperations = transformedSets.operationsA;\n\n\t\t\t// After reversed operation has been transformed by all history operations, apply it.\n\t\t\tfor ( const operation of reversedOperations ) {\n\t\t\t\t// Before applying, add the operation to the `undoingBatch`.\n\t\t\t\tundoingBatch.addOperation( operation );\n\t\t\t\tmodel.applyOperation( operation );\n\n\t\t\t\tdocument.history.setOperationAsUndone( operationToUndo, operation );\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Transforms given range `range` by given `operations`.\n// Returns an array containing one or more ranges, which are result of the transformation.\nfunction transformSelectionRange( range, operations ) {\n\tconst transformed = range.getTransformedByOperations( operations );\n\n\t// After `range` got transformed, we have an array of ranges. Some of those\n\t// ranges may be \"touching\" -- they can be next to each other and could be merged.\n\t// First, we have to sort those ranges to assure that they are in order.\n\ttransformed.sort( ( a, b ) => a.start.isBefore( b.start ) ? -1 : 1 );\n\n\t// Then, we check if two consecutive ranges are touching.\n\tfor ( let i = 1; i < transformed.length; i++ ) {\n\t\tconst a = transformed[ i - 1 ];\n\t\tconst b = transformed[ i ];\n\n\t\tif ( a.end.isTouching( b.start ) ) {\n\t\t\t// And join them together if they are.\n\t\t\ta.end = b.end;\n\t\t\ttransformed.splice( i, 1 );\n\t\t\ti--;\n\t\t}\n\t}\n\n\treturn transformed;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module undo/undocommand\n */\n\nimport BaseCommand from './basecommand';\n\n/**\n * The undo command stores {@link module:engine/model/batch~Batch batches} applied to the\n * {@link module:engine/model/document~Document document} and is able to undo a batch by reversing it and transforming by\n * batches from {@link module:engine/model/document~Document#history history} that happened after the reversed batch.\n *\n * The undo command also takes care of restoring the {@link module:engine/model/document~Document#selection document selection}.\n *\n * @extends module:undo/basecommand~BaseCommand\n */\nexport default class UndoCommand extends BaseCommand {\n\t/**\n\t * Executes the command. This method reverts a {@link module:engine/model/batch~Batch batch} added to the command's stack, transforms\n\t * and applies the reverted version on the {@link module:engine/model/document~Document document} and removes the batch from the stack.\n\t * Then, it restores the {@link module:engine/model/document~Document#selection document selection}.\n\t *\n\t * @fires execute\n\t * @fires revert\n\t * @param {module:engine/model/batch~Batch} [batch] A batch that should be undone. If not set, the last added batch will be undone.\n\t */\n\texecute( batch = null ) {\n\t\t// If batch is not given, set `batchIndex` to the last index in command stack.\n\t\tconst batchIndex = batch ? this._stack.findIndex( a => a.batch == batch ) : this._stack.length - 1;\n\n\t\tconst item = this._stack.splice( batchIndex, 1 )[ 0 ];\n\t\tconst undoingBatch = this.editor.model.createBatch( 'transparent' );\n\n\t\t// All changes has to be done in one `enqueueChange` callback so other listeners will not\n\t\t// step between consecutive operations, or won't do changes to the document before selection is properly restored.\n\t\tthis.editor.model.enqueueChange( undoingBatch, () => {\n\t\t\tthis._undo( item.batch, undoingBatch );\n\n\t\t\tconst operations = this.editor.model.document.history.getOperations( item.batch.baseVersion );\n\t\t\tthis._restoreSelection( item.selection.ranges, item.selection.isBackward, operations );\n\n\t\t\tthis.fire( 'revert', item.batch, undoingBatch );\n\t\t} );\n\n\t\tthis.refresh();\n\t}\n}\n\n/**\n * Fired when execution of the command reverts some batch.\n *\n * @event revert\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module undo/redocommand\n */\n\nimport BaseCommand from './basecommand';\n\n/**\n * The redo command stores {@link module:engine/model/batch~Batch batches} that were used to undo a batch by\n * {@link module:undo/undocommand~UndoCommand}. It is able to redo a previously undone batch by reversing the undoing\n * batches created by `UndoCommand`. The reversed batch is transformed by all the batches from\n * {@link module:engine/model/document~Document#history history} that happened after the reversed undo batch.\n *\n * The redo command also takes care of restoring the {@link module:engine/model/document~Document#selection document selection}.\n *\n * @extends module:undo/basecommand~BaseCommand\n */\nexport default class RedoCommand extends BaseCommand {\n\t/**\n\t * Executes the command. This method reverts the last {@link module:engine/model/batch~Batch batch} added to\n\t * the command's stack, applies the reverted and transformed version on the\n\t * {@link module:engine/model/document~Document document} and removes the batch from the stack.\n\t * Then, it restores the {@link module:engine/model/document~Document#selection document selection}.\n\t *\n\t * @fires execute\n\t */\n\texecute() {\n\t\tconst item = this._stack.pop();\n\t\tconst redoingBatch = this.editor.model.createBatch( 'transparent' );\n\n\t\t// All changes have to be done in one `enqueueChange` callback so other listeners will not step between consecutive\n\t\t// operations, or won't do changes to the document before selection is properly restored.\n\t\tthis.editor.model.enqueueChange( redoingBatch, () => {\n\t\t\tconst lastOperation = item.batch.operations[ item.batch.operations.length - 1 ];\n\t\t\tconst nextBaseVersion = lastOperation.baseVersion + 1;\n\t\t\tconst operations = this.editor.model.document.history.getOperations( nextBaseVersion );\n\n\t\t\tthis._restoreSelection( item.selection.ranges, item.selection.isBackward, operations );\n\t\t\tthis._undo( item.batch, redoingBatch );\n\t\t} );\n\n\t\tthis.refresh();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module undo/undoediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport UndoCommand from './undocommand';\nimport RedoCommand from './redocommand';\n\n/**\n * The undo engine feature.\n *\n * It introduces the `'undo'` and `'redo'` commands to the editor.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class UndoEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'UndoEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The command that manages undo {@link module:engine/model/batch~Batch batches} stack (history).\n\t\t * Created and registered during the {@link #init feature initialization}.\n\t\t *\n\t\t * @private\n\t\t * @member {module:undo/undocommand~UndoCommand} #_undoCommand\n\t\t */\n\n\t\t/**\n\t\t * The command that manages redo {@link module:engine/model/batch~Batch batches} stack (history).\n\t\t * Created and registered during the {@link #init feature initialization}.\n\t\t *\n\t\t * @private\n\t\t * @member {module:undo/undocommand~UndoCommand} #_redoCommand\n\t\t */\n\n\t\t/**\n\t\t * Keeps track of which batches were registered in undo.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakSet.<module:engine/model/batch~Batch>}\n\t\t */\n\t\tthis._batchRegistry = new WeakSet();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\t// Create commands.\n\t\tthis._undoCommand = new UndoCommand( editor );\n\t\tthis._redoCommand = new RedoCommand( editor );\n\n\t\t// Register command to the editor.\n\t\teditor.commands.add( 'undo', this._undoCommand );\n\t\teditor.commands.add( 'redo', this._redoCommand );\n\n\t\tthis.listenTo( editor.model, 'applyOperation', ( evt, args ) => {\n\t\t\tconst operation = args[ 0 ];\n\n\t\t\t// Do not register batch if the operation is not a document operation.\n\t\t\t// This prevents from creating empty undo steps, where all operations where non-document operations.\n\t\t\t// Non-document operations creates and alters content in detached tree fragments (for example, document fragments).\n\t\t\t// Most of time this is preparing data before it is inserted into actual tree (for example during copy & paste).\n\t\t\t// Such operations should not be reversed.\n\t\t\tif ( !operation.isDocumentOperation ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst batch = operation.batch;\n\n\t\t\tconst isRedoBatch = this._redoCommand._createdBatches.has( batch );\n\t\t\tconst isUndoBatch = this._undoCommand._createdBatches.has( batch );\n\t\t\tconst isRegisteredBatch = this._batchRegistry.has( batch );\n\n\t\t\t// If changes are not a part of a batch or this is not a new batch, omit those changes.\n\t\t\tif ( isRegisteredBatch || ( batch.type == 'transparent' && !isRedoBatch && !isUndoBatch ) ) {\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tif ( isRedoBatch ) {\n\t\t\t\t\t// If this batch comes from `redoCommand`, add it to `undoCommand` stack.\n\t\t\t\t\tthis._undoCommand.addBatch( batch );\n\t\t\t\t} else if ( !isUndoBatch ) {\n\t\t\t\t\t// A default batch - these are new changes in the document, not introduced by undo feature.\n\t\t\t\t\t// Add them to `undoCommand` stack and clear `redoCommand` stack.\n\t\t\t\t\tthis._undoCommand.addBatch( batch );\n\t\t\t\t\tthis._redoCommand.clearStack();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add the batch to the registry so it will not be processed again.\n\t\t\tthis._batchRegistry.add( batch );\n\t\t}, { priority: 'highest' } );\n\n\t\tthis.listenTo( this._undoCommand, 'revert', ( evt, undoneBatch, undoingBatch ) => {\n\t\t\tthis._redoCommand.addBatch( undoingBatch );\n\t\t} );\n\n\t\teditor.keystrokes.set( 'CTRL+Z', 'undo' );\n\t\teditor.keystrokes.set( 'CTRL+Y', 'redo' );\n\t\teditor.keystrokes.set( 'CTRL+SHIFT+Z', 'redo' );\n\t}\n}\n","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M5.042 9.367l2.189 1.837a.75.75 0 01-.965 1.149l-3.788-3.18a.747.747 0 01-.21-.284.75.75 0 01.17-.945L6.23 4.762a.75.75 0 11.964 1.15L4.863 7.866h8.917A.75.75 0 0114 7.9a4 4 0 11-1.477 7.718l.344-1.489a2.5 2.5 0 101.094-4.73l.008-.032H5.042z\\\"/></svg>\"","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M14.958 9.367l-2.189 1.837a.75.75 0 00.965 1.149l3.788-3.18a.747.747 0 00.21-.284.75.75 0 00-.17-.945L13.77 4.762a.75.75 0 10-.964 1.15l2.331 1.955H6.22A.75.75 0 006 7.9a4 4 0 101.477 7.718l-.344-1.489A2.5 2.5 0 116.039 9.4l-.008-.032h8.927z\\\"/></svg>\"","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module undo/undoui\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport undoIcon from '../theme/icons/undo.svg';\nimport redoIcon from '../theme/icons/redo.svg';\n/**\n * The undo UI feature. It introduces the `'undo'` and `'redo'` buttons to the editor.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class UndoUI extends Plugin {\n    /**\n\t * @inheritDoc\n\t */\n    init() {\n        const editor = this.editor;\n        const locale = editor.locale;\n        const t = editor.t;\n        const localizedUndoIcon = locale.uiLanguageDirection == 'ltr' ? undoIcon : redoIcon;\n        const localizedRedoIcon = locale.uiLanguageDirection == 'ltr' ? redoIcon : undoIcon;\n        this._addButton('undo', t('br'), 'CTRL+Z', localizedUndoIcon);\n        this._addButton('redo', t('bs'), 'CTRL+Y', localizedRedoIcon);\n    }\n    /**\n\t * Creates a button for the specified command.\n\t *\n\t * @private\n\t * @param {String} name Command name.\n\t * @param {String} label Button label.\n\t * @param {String} keystroke Command keystroke.\n\t * @param {String} Icon Source of the icon.\n\t */\n    _addButton(name, label, keystroke, Icon) {\n        const editor = this.editor;\n        editor.ui.componentFactory.add(name, locale => {\n            const command = editor.commands.get(name);\n            const view = new ButtonView(locale);\n            view.set({\n                label,\n                icon: Icon,\n                keystroke,\n                tooltip: true\n            });\n            view.bind('isEnabled').to(command, 'isEnabled');\n            this.listenTo(view, 'execute', () => {\n                editor.execute(name);\n                editor.editing.view.focus();\n            });\n            return view;\n        });\n    }\n}","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module undo/undo\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport UndoEditing from './undoediting';\nimport UndoUI from './undoui';\n\n/**\n * The undo feature.\n *\n * This is a \"glue\" plugin which loads the {@link module:undo/undoediting~UndoEditing undo editing feature}\n * and {@link module:undo/undoui~UndoUI undo UI feature}.\n *\n * Below is the explanation of the undo mechanism working together with {@link module:engine/model/history~History History}:\n *\n * Whenever a {@link module:engine/model/operation/operation~Operation operation} is applied to the\n * {@link module:engine/model/document~Document document}, it is saved to `History` as is.\n * The {@link module:engine/model/batch~Batch batch} that owns that operation is also saved, in\n * {@link module:undo/undocommand~UndoCommand}, together with the selection that was present in the document before the\n * operation was applied. A batch is saved instead of the operation because changes are undone batch-by-batch, not operation-by-operation\n * and a batch is seen as one undo step.\n *\n * After some changes happen to the document, the `History` and `UndoCommand` stack can be represented as follows:\n *\n *\t\t    History                            Undo stack\n *\t\t==============             ==================================\n *\t\t[operation A1]                         [batch A]\n *\t\t[operation B1]                         [batch B]\n *\t\t[operation B2]                         [batch C]\n *\t\t[operation C1]\n *\t\t[operation C2]\n *\t\t[operation B3]\n *\t\t[operation C3]\n *\n * Where operations starting with the same letter are from same batch.\n *\n * Undoing a batch means that a set of operations which will reverse the effects of that batch needs to be generated.\n * For example, if a batch added several letters, undoing the batch should remove them. It is important to apply undoing\n * operations in the reversed order, so if a batch has operation `X`, `Y`, `Z`, reversed operations `Zr`, `Yr` and `Xr`\n * need to be applied. Otherwise reversed operation `Xr` would operate on a wrong document state, because operation `X`\n * does not know that operations `Y` and `Z` happened.\n *\n * After operations from an undone batch got {@link module:engine/model/operation/operation~Operation#getReversed reversed},\n * one needs to make sure if they are ready to be applied. In the scenario above, operation `C3` is the last operation and `C3r`\n * bases on up-to-date document state, so it can be applied to the document.\n *\n *\t\t     History                             Undo stack\n *\t\t=================             ==================================\n *\t\t[ operation A1  ]                      [  batch A  ]\n *\t\t[ operation B1  ]                      [  batch B  ]\n *\t\t[ operation B2  ]             [   processing undoing batch C   ]\n *\t\t[ operation C1  ]\n *\t\t[ operation C2  ]\n *\t\t[ operation B3  ]\n *\t\t[ operation C3  ]\n *\t\t[ operation C3r ]\n *\n * Next is operation `C2`, reversed to `C2r`. `C2r` bases on `C2`, so it bases on the wrong document state. It needs to be\n * transformed by operations from history that happened after it, so it \"knows\" about them. Let us assume that `C2' = C2r * B3 * C3 * C3r`,\n * where `*` means \"transformed by\". Rest of operations from that batch are processed in the same fashion.\n *\n *\t\t     History                             Undo stack                                      Redo stack\n *\t\t=================             ==================================             ==================================\n *\t\t[ operation A1  ]                      [  batch A  ]                                    [ batch Cr ]\n *\t\t[ operation B1  ]                      [  batch B  ]\n *\t\t[ operation B2  ]\n *\t\t[ operation C1  ]\n *\t\t[ operation C2  ]\n *\t\t[ operation B3  ]\n *\t\t[ operation C3  ]\n *\t\t[ operation C3r ]\n *\t\t[ operation C2' ]\n *\t\t[ operation C1' ]\n *\n * Selective undo works on the same basis, however, instead of undoing the last batch in the undo stack, any batch can be undone.\n * The same algorithm applies: operations from a batch (i.e. `A1`) are reversed and then transformed by operations stored in history.\n *\n * Redo also is very similar to undo. It has its own stack that is filled with undoing (reversed batches). Operations from\n * batch that is re-done are reversed-back, transformed in proper order and applied to the document.\n *\n *\t\t     History                             Undo stack                                      Redo stack\n *\t\t=================             ==================================             ==================================\n *\t\t[ operation A1  ]                      [  batch A  ]\n *\t\t[ operation B1  ]                      [  batch B  ]\n *\t\t[ operation B2  ]                      [ batch Crr ]\n *\t\t[ operation C1  ]\n *\t\t[ operation C2  ]\n *\t\t[ operation B3  ]\n *\t\t[ operation C3  ]\n *\t\t[ operation C3r ]\n *\t\t[ operation C2' ]\n *\t\t[ operation C1' ]\n *\t\t[ operation C1'r]\n *\t\t[ operation C2'r]\n *\t\t[ operation C3rr]\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Undo extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ UndoEditing, UndoUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Undo';\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/contextplugin\n */\n\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * The base class for {@link module:core/context~Context} plugin classes.\n *\n * A context plugin can either be initialized for an {@link module:core/editor/editor~Editor editor} or for\n * a {@link module:core/context~Context context}. In other words, it can either\n * work within one editor instance or with one or more editor instances that use a single context.\n * It is the context plugin's role to implement handling for both modes.\n *\n * There are a few rules for interaction between the editor plugins and context plugins:\n *\n * * A context plugin can require another context plugin.\n * * An {@link module:core/plugin~Plugin editor plugin} can require a context plugin.\n * * A context plugin MUST NOT require an {@link module:core/plugin~Plugin editor plugin}.\n *\n * @implements module:core/plugin~PluginInterface\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class ContextPlugin {\n\t/**\n\t * Creates a new plugin instance.\n\t *\n\t * @param {module:core/context~Context|module:core/editor/editor~Editor} context\n\t */\n\tconstructor( context ) {\n\t\t/**\n\t\t * The context instance.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:core/context~Context|module:core/editor/editor~Editor}\n\t\t */\n\t\tthis.context = context;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get isContextPlugin() {\n\t\treturn true;\n\t}\n}\n\nmix( ContextPlugin, ObservableMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/pendingactions\n */\n\nimport ContextPlugin from './contextplugin';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * The list of pending editor actions.\n *\n * This plugin should be used to synchronise plugins that execute long-lasting actions\n * (e.g. file upload) with the editor integration. It gives the developer who integrates the editor\n * an easy way to check if there are any actions pending whenever such information is needed.\n * All plugins that register a pending action also provide a message about the action that is ongoing\n * which can be displayed to the user. This lets them decide if they want to interrupt the action or wait.\n *\n * Adding and updating a pending action:\n *\n * \t\tconst pendingActions = editor.plugins.get( 'PendingActions' );\n * \t\tconst action = pendingActions.add( 'Upload in progress: 0%.' );\n *\n *\t\t// You can update the message:\n * \t\taction.message = 'Upload in progress: 10%.';\n *\n * Removing a pending action:\n *\n * \t\tconst pendingActions = editor.plugins.get( 'PendingActions' );\n * \t\tconst action = pendingActions.add( 'Unsaved changes.' );\n *\n * \t\tpendingActions.remove( action );\n *\n * Getting pending actions:\n *\n * \t\tconst pendingActions = editor.plugins.get( 'PendingActions' );\n *\n * \t\tconst action1 = pendingActions.add( 'Action 1' );\n * \t\tconst action2 = pendingActions.add( 'Action 2' );\n *\n * \t\tpendingActions.first; // Returns action1\n * \t\tArray.from( pendingActions ); // Returns [ action1, action2 ]\n *\n * This plugin is used by features like {@link module:upload/filerepository~FileRepository} to register their ongoing actions\n * and by features like {@link module:autosave/autosave~Autosave} to detect whether there are any ongoing actions.\n * Read more about saving the data in the {@glink builds/guides/integration/saving-data Saving and getting data} guide.\n *\n * @extends module:core/contextplugin~ContextPlugin\n */\nexport default class PendingActions extends ContextPlugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'PendingActions';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\t/**\n\t\t * Defines whether there is any registered pending action.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #hasAny\n\t\t */\n\t\tthis.set( 'hasAny', false );\n\n\t\t/**\n\t\t * A list of pending actions.\n\t\t *\n\t\t * @private\n\t\t * @type {module:utils/collection~Collection}\n\t\t */\n\t\tthis._actions = new Collection( { idProperty: '_id' } );\n\t\tthis._actions.delegate( 'add', 'remove' ).to( this );\n\t}\n\n\t/**\n\t * Adds an action to the list of pending actions.\n\t *\n\t * This method returns an action object with an observable message property.\n\t * The action object can be later used in the {@link #remove} method. It also allows you to change the message.\n\t *\n\t * @param {String} message The action message.\n\t * @returns {Object} An observable object that represents a pending action.\n\t */\n\tadd( message ) {\n\t\tif ( typeof message !== 'string' ) {\n\t\t\t/**\n\t\t\t * The message must be a string.\n\t\t\t *\n\t\t\t * @error pendingactions-add-invalid-message\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'pendingactions-add-invalid-message: The message must be a string.', this );\n\t\t}\n\n\t\tconst action = Object.create( ObservableMixin );\n\n\t\taction.set( 'message', message );\n\t\tthis._actions.add( action );\n\t\tthis.hasAny = true;\n\n\t\treturn action;\n\t}\n\n\t/**\n\t * Removes an action from the list of pending actions.\n\t *\n\t * @param {Object} action An action object.\n\t */\n\tremove( action ) {\n\t\tthis._actions.remove( action );\n\t\tthis.hasAny = !!this._actions.length;\n\t}\n\n\t/**\n\t * Returns the first action from the list or null when list is empty\n\t *\n\t * returns {Object|null} The pending action object.\n\t */\n\tget first() {\n\t\treturn this._actions.get( 0 );\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * @returns {Iterable.<*>}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this._actions[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Fired when an action is added to the list.\n\t *\n\t * @event add\n\t * @param {Object} action The added action.\n\t */\n\n\t/**\n\t * Fired when an action is removed from the list.\n\t *\n\t * @event remove\n\t * @param {Object} action The removed action.\n\t */\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module upload/filereader\n */\n\n/* globals window */\n\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * Wrapper over the native `FileReader`.\n */\nexport default class FileReader {\n\t/**\n\t * Creates an instance of the FileReader.\n\t */\n\tconstructor() {\n\t\tconst reader = new window.FileReader();\n\n\t\t/**\n\t\t * Instance of native FileReader.\n\t\t *\n\t\t * @private\n\t\t * @member {FileReader} #_reader\n\t\t */\n\t\tthis._reader = reader;\n\n\t\tthis._data = undefined;\n\n\t\t/**\n\t\t * Number of bytes loaded.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Number} #loaded\n\t\t */\n\t\tthis.set( 'loaded', 0 );\n\n\t\treader.onprogress = evt => {\n\t\t\tthis.loaded = evt.loaded;\n\t\t};\n\t}\n\n\t/**\n\t * Returns error that occurred during file reading.\n\t *\n\t * @returns {Error}\n\t */\n\tget error() {\n\t\treturn this._reader.error;\n\t}\n\n\t/**\n\t * Holds the data of an already loaded file. The file must be first loaded\n\t * by using {@link module:upload/filereader~FileReader#read `read()`}.\n\t *\n\t * @type {File|undefined}\n\t */\n\tget data() {\n\t\treturn this._data;\n\t}\n\n\t/**\n\t * Reads the provided file.\n\t *\n\t * @param {File} file Native File object.\n\t * @returns {Promise.<String>} Returns a promise that will be resolved with file's content.\n\t * The promise will be rejected in case of an error or when the reading process is aborted.\n\t */\n\tread( file ) {\n\t\tconst reader = this._reader;\n\t\tthis.total = file.size;\n\n\t\treturn new Promise( ( resolve, reject ) => {\n\t\t\treader.onload = () => {\n\t\t\t\tconst result = reader.result;\n\n\t\t\t\tthis._data = result;\n\n\t\t\t\tresolve( result );\n\t\t\t};\n\n\t\t\treader.onerror = () => {\n\t\t\t\treject( 'error' );\n\t\t\t};\n\n\t\t\treader.onabort = () => {\n\t\t\t\treject( 'aborted' );\n\t\t\t};\n\n\t\t\tthis._reader.readAsDataURL( file );\n\t\t} );\n\t}\n\n\t/**\n\t * Aborts file reader.\n\t */\n\tabort() {\n\t\tthis._reader.abort();\n\t}\n}\n\nmix( FileReader, ObservableMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module upload/filerepository\n */\n/* globals console */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport PendingActions from '@ckeditor/ckeditor5-core/src/pendingactions';\nimport CKEditorError, { attachLinkToDocumentation } from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport FileReader from './filereader.js';\nimport uid from '@ckeditor/ckeditor5-utils/src/uid.js';\n/**\n * File repository plugin. A central point for managing file upload.\n *\n * To use it, first you need an upload adapter. Upload adapter's job is to handle communication with the server\n * (sending the file and handling server's response). You can use one of the existing plugins introducing upload adapters\n * (e.g. {@link module:easy-image/cloudservicesuploadadapter~CloudServicesUploadAdapter} or\n * {@link module:adapter-ckfinder/uploadadapter~CKFinderUploadAdapter}) or write your own one – see\n * the {@glink framework/guides/deep-dive/upload-adapter \"Custom image upload adapter\" deep dive guide}.\n *\n * Then, you can use {@link module:upload/filerepository~FileRepository#createLoader `createLoader()`} and the returned\n * {@link module:upload/filerepository~FileLoader} instance to load and upload files.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class FileRepository extends Plugin {\n    /**\n\t * @inheritDoc\n\t */\n    static get pluginName() {\n        return 'FileRepository';\n    }\n    /**\n\t * @inheritDoc\n\t */\n    static get requires() {\n        return [PendingActions];\n    }\n    /**\n\t * @inheritDoc\n\t */\n    init() {\n        /**\n\t\t * Collection of loaders associated with this repository.\n\t\t *\n\t\t * @member {module:utils/collection~Collection} #loaders\n\t\t */\n        this.loaders = new Collection();\n        // Keeps upload in a sync with pending actions.\n        this.loaders.on('add', () => this._updatePendingAction());\n        this.loaders.on('remove', () => this._updatePendingAction());\n        /**\n\t\t * Loaders mappings used to retrieve loaders references.\n\t\t *\n\t\t * @private\n\t\t * @member {Map<File|Promise, FileLoader>} #_loadersMap\n\t\t */\n        this._loadersMap = new Map();\n        /**\n\t\t * Reference to a pending action registered in a {@link module:core/pendingactions~PendingActions} plugin\n\t\t * while upload is in progress. When there is no upload then value is `null`.\n\t\t *\n\t\t * @private\n\t\t * @member {Object} #_pendingAction\n\t\t */\n        this._pendingAction = null;\n        /**\n\t\t * A factory function which should be defined before using `FileRepository`.\n\t\t *\n\t\t * It should return a new instance of {@link module:upload/filerepository~UploadAdapter} that will be used to upload files.\n\t\t * {@link module:upload/filerepository~FileLoader} instance associated with the adapter\n\t\t * will be passed to that function.\n\t\t *\n\t\t * For more information and example see {@link module:upload/filerepository~UploadAdapter}.\n\t\t *\n\t\t * @member {Function} #createUploadAdapter\n\t\t */\n        /**\n\t\t * Number of bytes uploaded.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Number} #uploaded\n\t\t */\n        this.set('uploaded', 0);\n        /**\n\t\t * Number of total bytes to upload.\n\t\t *\n\t\t * It might be different than the file size because of headers and additional data.\n\t\t * It contains `null` if value is not available yet, so it's better to use {@link #uploadedPercent} to monitor\n\t\t * the progress.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Number|null} #uploadTotal\n\t\t */\n        this.set('uploadTotal', null);\n        /**\n\t\t * Upload progress in percents.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Number} #uploadedPercent\n\t\t */\n        this.bind('uploadedPercent').to(this, 'uploaded', this, 'uploadTotal', (uploaded, total) => {\n            return total ? uploaded / total * 100 : 0;\n        });\n    }\n    /**\n\t * Returns the loader associated with specified file or promise.\n\t *\n\t * To get loader by id use `fileRepository.loaders.get( id )`.\n\t *\n\t * @param {File|Promise.<File>} fileOrPromise Native file or promise handle.\n\t * @returns {module:upload/filerepository~FileLoader|null}\n\t */\n    getLoader(fileOrPromise) {\n        return this._loadersMap.get(fileOrPromise) || null;\n    }\n    /**\n\t * Creates a loader instance for the given file.\n\t *\n\t * Requires {@link #createUploadAdapter} factory to be defined.\n\t *\n\t * @param {File|Promise.<File>} fileOrPromise Native File object or native Promise object which resolves to a File.\n\t * @returns {module:upload/filerepository~FileLoader|null}\n\t */\n    createLoader(fileOrPromise) {\n        if (!this.createUploadAdapter) {\n            /**\n\t\t\t * You need to enable an upload adapter in order to be able to upload files.\n\t\t\t *\n\t\t\t * This warning shows up when {@link module:upload/filerepository~FileRepository} is being used\n\t\t\t * without {@link #createUploadAdapter definining an upload adapter}.\n\t\t\t *\n\t\t\t * **If you see this warning when using one of the {@glink builds/index CKEditor 5 Builds}**\n\t\t\t * it means that you did not configure any of the upload adapters available by default in those builds.\n\t\t\t *\n\t\t\t * See the {@glink features/image-upload/image-upload comprehensive \"Image upload overview\"} to learn which upload\n\t\t\t * adapters are available in the builds and how to configure them.\n\t\t\t *\n\t\t\t * **If you see this warning when using a custom build** there is a chance that you enabled\n\t\t\t * a feature like {@link module:image/imageupload~ImageUpload},\n\t\t\t * or {@link module:image/imageupload/imageuploadui~ImageUploadUI} but you did not enable any upload adapter.\n\t\t\t * You can choose one of the existing upload adapters listed in the\n\t\t\t * {@glink features/image-upload/image-upload \"Image upload overview\"}.\n\t\t\t *\n\t\t\t * You can also implement your {@glink framework/guides/deep-dive/upload-adapter own image upload adapter}.\n\t\t\t *\n\t\t\t * @error filerepository-no-upload-adapter\n\t\t\t */\n            console.warn(attachLinkToDocumentation('filerepository-no-upload-adapter: Upload adapter is not defined.'));\n            return null;\n        }\n        const loader = new FileLoader(Promise.resolve(fileOrPromise), this.createUploadAdapter);\n        this.loaders.add(loader);\n        this._loadersMap.set(fileOrPromise, loader);\n        // Store also file => loader mapping so loader can be retrieved by file instance returned upon Promise resolution.\n        if (fileOrPromise instanceof Promise) {\n            loader.file.then(file => {\n                this._loadersMap.set(file, loader);\n            })    // Every then() must have a catch().\n                  // File loader state (and rejections) are handled in read() and upload().\n                  // Also, see the \"does not swallow the file promise rejection\" test.\n.catch(() => {\n            });\n        }\n        loader.on('change:uploaded', () => {\n            let aggregatedUploaded = 0;\n            for (const loader of this.loaders) {\n                aggregatedUploaded += loader.uploaded;\n            }\n            this.uploaded = aggregatedUploaded;\n        });\n        loader.on('change:uploadTotal', () => {\n            let aggregatedTotal = 0;\n            for (const loader of this.loaders) {\n                if (loader.uploadTotal) {\n                    aggregatedTotal += loader.uploadTotal;\n                }\n            }\n            this.uploadTotal = aggregatedTotal;\n        });\n        return loader;\n    }\n    /**\n\t * Destroys the given loader.\n\t *\n\t * @param {File|Promise|module:upload/filerepository~FileLoader} fileOrPromiseOrLoader File or Promise associated\n\t * with that loader or loader itself.\n\t */\n    destroyLoader(fileOrPromiseOrLoader) {\n        const loader = fileOrPromiseOrLoader instanceof FileLoader ? fileOrPromiseOrLoader : this.getLoader(fileOrPromiseOrLoader);\n        loader._destroy();\n        this.loaders.remove(loader);\n        this._loadersMap.forEach((value, key) => {\n            if (value === loader) {\n                this._loadersMap.delete(key);\n            }\n        });\n    }\n    /**\n\t * Registers or deregisters pending action bound with upload progress.\n\t *\n\t * @private\n\t */\n    _updatePendingAction() {\n        const pendingActions = this.editor.plugins.get(PendingActions);\n        if (this.loaders.length) {\n            if (!this._pendingAction) {\n                const t = this.editor.t;\n                const getMessage = value => `${ t('ap') } ${ parseInt(value) }%.`;\n                this._pendingAction = pendingActions.add(getMessage(this.uploadedPercent));\n                this._pendingAction.bind('message').to(this, 'uploadedPercent', getMessage);\n            }\n        } else {\n            pendingActions.remove(this._pendingAction);\n            this._pendingAction = null;\n        }\n    }\n}\nmix(FileRepository, ObservableMixin);\n/**\n * File loader class.\n *\n * It is used to control the process of reading the file and uploading it using the specified upload adapter.\n */\nclass FileLoader {\n    /**\n\t * Creates a new instance of `FileLoader`.\n\t *\n\t * @param {Promise.<File>} filePromise A promise which resolves to a file instance.\n\t * @param {Function} uploadAdapterCreator The function which returns {@link module:upload/filerepository~UploadAdapter} instance.\n\t */\n    constructor(filePromise, uploadAdapterCreator) {\n        /**\n\t\t * Unique id of FileLoader instance.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number}\n\t\t */\n        this.id = uid();\n        /**\n\t\t * Additional wrapper over the initial file promise passed to this loader.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:upload/filerepository~FilePromiseWrapper}\n\t\t */\n        this._filePromiseWrapper = this._createFilePromiseWrapper(filePromise);\n        /**\n\t\t * Adapter instance associated with this file loader.\n\t\t *\n\t\t * @private\n\t\t * @member {module:upload/filerepository~UploadAdapter}\n\t\t */\n        this._adapter = uploadAdapterCreator(this);\n        /**\n\t\t * FileReader used by FileLoader.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:upload/filereader~FileReader}\n\t\t */\n        this._reader = new FileReader();\n        /**\n\t\t * Current status of FileLoader. It can be one of the following:\n\t\t *\n\t\t * * 'idle',\n\t\t * * 'reading',\n\t\t * * 'uploading',\n\t\t * * 'aborted',\n\t\t * * 'error'.\n\t\t *\n\t\t * When reading status can change in a following way:\n\t\t *\n\t\t * `idle` -> `reading` -> `idle`\n\t\t * `idle` -> `reading -> `aborted`\n\t\t * `idle` -> `reading -> `error`\n\t\t *\n\t\t * When uploading status can change in a following way:\n\t\t *\n\t\t * `idle` -> `uploading` -> `idle`\n\t\t * `idle` -> `uploading` -> `aborted`\n\t\t * `idle` -> `uploading` -> `error`\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {String} #status\n\t\t */\n        this.set('status', 'idle');\n        /**\n\t\t * Number of bytes uploaded.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Number} #uploaded\n\t\t */\n        this.set('uploaded', 0);\n        /**\n\t\t * Number of total bytes to upload.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Number|null} #uploadTotal\n\t\t */\n        this.set('uploadTotal', null);\n        /**\n\t\t * Upload progress in percents.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Number} #uploadedPercent\n\t\t */\n        this.bind('uploadedPercent').to(this, 'uploaded', this, 'uploadTotal', (uploaded, total) => {\n            return total ? uploaded / total * 100 : 0;\n        });\n        /**\n\t\t * Response of the upload.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Object|null} #uploadResponse\n\t\t */\n        this.set('uploadResponse', null);\n    }\n    /**\n\t * A `Promise` which resolves to a `File` instance associated with this file loader.\n\t *\n\t * @type {Promise.<File|null>}\n\t */\n    get file() {\n        if (!this._filePromiseWrapper) {\n            // Loader was destroyed, return promise which resolves to null.\n            return Promise.resolve(null);\n        } else {\n            // The `this._filePromiseWrapper.promise` is chained and not simply returned to handle a case when:\n            //\n            //\t\t* The `loader.file.then( ... )` is called by external code (returned promise is pending).\n            //\t\t* Then `loader._destroy()` is called (call is synchronous) which destroys the `loader`.\n            //\t\t* Promise returned by the first `loader.file.then( ... )` call is resolved.\n            //\n            // Returning `this._filePromiseWrapper.promise` will still resolve to a `File` instance so there\n            // is an additional check needed in the chain to see if `loader` was destroyed in the meantime.\n            return this._filePromiseWrapper.promise.then(file => this._filePromiseWrapper ? file : null);\n        }\n    }\n    /**\n\t * Returns the file data. To read its data, you need for first load the file\n\t * by using the {@link module:upload/filerepository~FileLoader#read `read()`} method.\n\t *\n\t * @type {File|undefined}\n\t */\n    get data() {\n        return this._reader.data;\n    }\n    /**\n\t * Reads file using {@link module:upload/filereader~FileReader}.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `filerepository-read-wrong-status` when status\n\t * is different than `idle`.\n\t *\n\t * Example usage:\n\t *\n\t *\tfileLoader.read()\n\t *\t\t.then( data => { ... } )\n\t *\t\t.catch( err => {\n\t *\t\t\tif ( err === 'aborted' ) {\n\t *\t\t\t\tconsole.log( 'Reading aborted.' );\n\t *\t\t\t} else {\n\t *\t\t\t\tconsole.log( 'Reading error.', err );\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * @returns {Promise.<String>} Returns promise that will be resolved with read data. Promise will be rejected if error\n\t * occurs or if read process is aborted.\n\t */\n    read() {\n        if (this.status != 'idle') {\n            throw new CKEditorError('filerepository-read-wrong-status: You cannot call read if the status is different than idle.', this);\n        }\n        this.status = 'reading';\n        return this.file.then(file => this._reader.read(file)).then(data => {\n            this.status = 'idle';\n            return data;\n        }).catch(err => {\n            if (err === 'aborted') {\n                this.status = 'aborted';\n                throw 'aborted';\n            }\n            this.status = 'error';\n            throw this._reader.error ? this._reader.error : err;\n        });\n    }\n    /**\n\t * Reads file using the provided {@link module:upload/filerepository~UploadAdapter}.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `filerepository-upload-wrong-status` when status\n\t * is different than `idle`.\n\t * Example usage:\n\t *\n\t *\tfileLoader.upload()\n\t *\t\t.then( data => { ... } )\n\t *\t\t.catch( e => {\n\t *\t\t\tif ( e === 'aborted' ) {\n\t *\t\t\t\tconsole.log( 'Uploading aborted.' );\n\t *\t\t\t} else {\n\t *\t\t\t\tconsole.log( 'Uploading error.', e );\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * @returns {Promise.<Object>} Returns promise that will be resolved with response data. Promise will be rejected if error\n\t * occurs or if read process is aborted.\n\t */\n    upload() {\n        if (this.status != 'idle') {\n            throw new CKEditorError('filerepository-upload-wrong-status: You cannot call upload if the status is different than idle.', this);\n        }\n        this.status = 'uploading';\n        return this.file.then(() => this._adapter.upload()).then(data => {\n            this.uploadResponse = data;\n            this.status = 'idle';\n            return data;\n        }).catch(err => {\n            if (this.status === 'aborted') {\n                throw 'aborted';\n            }\n            this.status = 'error';\n            throw err;\n        });\n    }\n    /**\n\t * Aborts loading process.\n\t */\n    abort() {\n        const status = this.status;\n        this.status = 'aborted';\n        if (!this._filePromiseWrapper.isFulfilled) {\n            // Edge case: file loader is aborted before read() is called\n            // so it might happen that no one handled the rejection of this promise.\n            // See https://github.com/ckeditor/ckeditor5-upload/pull/100\n            this._filePromiseWrapper.promise.catch(() => {\n            });\n            this._filePromiseWrapper.rejecter('aborted');\n        } else if (status == 'reading') {\n            this._reader.abort();\n        } else if (status == 'uploading' && this._adapter.abort) {\n            this._adapter.abort();\n        }\n        this._destroy();\n    }\n    /**\n\t * Performs cleanup.\n\t *\n\t * @private\n\t */\n    _destroy() {\n        this._filePromiseWrapper = undefined;\n        this._reader = undefined;\n        this._adapter = undefined;\n        this.uploadResponse = undefined;\n    }\n    /**\n\t * Wraps a given file promise into another promise giving additional\n\t * control (resolving, rejecting, checking if fulfilled) over it.\n\t *\n\t * @private\n\t * @param filePromise The initial file promise to be wrapped.\n\t * @returns {module:upload/filerepository~FilePromiseWrapper}\n\t */\n    _createFilePromiseWrapper(filePromise) {\n        const wrapper = {};\n        wrapper.promise = new Promise((resolve, reject) => {\n            wrapper.rejecter = reject;\n            wrapper.isFulfilled = false;\n            filePromise.then(file => {\n                wrapper.isFulfilled = true;\n                resolve(file);\n            }).catch(err => {\n                wrapper.isFulfilled = true;\n                reject(err);\n            });\n        });\n        return wrapper;\n    }\n}\nmix(FileLoader, ObservableMixin);    /**\n * Upload adapter interface used by the {@link module:upload/filerepository~FileRepository file repository}\n * to handle file upload. An upload adapter is a bridge between the editor and server that handles file uploads.\n * It should contain a logic necessary to initiate an upload process and monitor its progress.\n *\n * Learn how to develop your own upload adapter for CKEditor 5 in the\n * {@glink framework/guides/deep-dive/upload-adapter \"Custom upload adapter\" guide}.\n *\n * @interface UploadAdapter\n */\n                                     /**\n * Executes the upload process.\n * This method should return a promise that will resolve when data will be uploaded to server. Promise should be\n * resolved with an object containing information about uploaded file:\n *\n *\t\t{\n *\t\t\tdefault: 'http://server/default-size.image.png'\n *\t\t}\n *\n * Additionally, other image sizes can be provided:\n *\n *\t\t{\n *\t\t\tdefault: 'http://server/default-size.image.png',\n *\t\t\t'160': 'http://server/size-160.image.png',\n *\t\t\t'500': 'http://server/size-500.image.png',\n *\t\t\t'1000': 'http://server/size-1000.image.png',\n *\t\t\t'1052': 'http://server/default-size.image.png'\n *\t\t}\n *\n * NOTE: When returning multiple images, the widest returned one should equal the default one. It is essential to\n * correctly set `width` attribute of the image. See this discussion:\n * https://github.com/ckeditor/ckeditor5-easy-image/issues/4 for more information.\n *\n * Take a look at {@link module:upload/filerepository~UploadAdapter example Adapter implementation} and\n * {@link module:upload/filerepository~FileRepository#createUploadAdapter createUploadAdapter method}.\n *\n * @method module:upload/filerepository~UploadAdapter#upload\n * @returns {Promise.<Object>} Promise that should be resolved when data is uploaded.\n */\n                                     /**\n * Aborts the upload process.\n * After aborting it should reject promise returned from {@link #upload upload()}.\n *\n * Take a look at {@link module:upload/filerepository~UploadAdapter example Adapter implementation} and\n * {@link module:upload/filerepository~FileRepository#createUploadAdapter createUploadAdapter method}.\n *\n * @method module:upload/filerepository~UploadAdapter#abort\n */\n                                     /**\n * Object returned by {@link module:upload/filerepository~FileLoader#_createFilePromiseWrapper} method\n * to add more control over the initial file promise passed to {@link module:upload/filerepository~FileLoader}.\n *\n * @protected\n * @typedef {Object} module:upload/filerepository~FilePromiseWrapper\n * @property {Promise.<File>} promise Wrapper promise which can be chained for further processing.\n * @property {Function} rejecter Rejects the promise when called.\n * @property {Boolean} isFulfilled Whether original promise is already fulfilled.\n */","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals window, document */\n\n/**\n * @module adapter-ckfinder/utils\n */\n\nconst TOKEN_COOKIE_NAME = 'ckCsrfToken';\nconst TOKEN_LENGTH = 40;\nconst tokenCharset = 'abcdefghijklmnopqrstuvwxyz0123456789';\n\n/**\n * Returns the CSRF token value. The value is a hash stored in `document.cookie`\n * under the `ckCsrfToken` key. The CSRF token can be used to secure the communication\n * between the web browser and the CKFinder server.\n *\n * @returns {String}\n */\nexport function getCsrfToken() {\n\tlet token = getCookie( TOKEN_COOKIE_NAME );\n\n\tif ( !token || token.length != TOKEN_LENGTH ) {\n\t\ttoken = generateToken( TOKEN_LENGTH );\n\t\tsetCookie( TOKEN_COOKIE_NAME, token );\n\t}\n\n\treturn token;\n}\n\n/**\n * Returns the value of the cookie with a given name or `null` if the cookie is not found.\n *\n * @param {String} name\n * @returns {String|null}\n */\nexport function getCookie( name ) {\n\tname = name.toLowerCase();\n\tconst parts = document.cookie.split( ';' );\n\n\tfor ( const part of parts ) {\n\t\tconst pair = part.split( '=' );\n\t\tconst key = decodeURIComponent( pair[ 0 ].trim().toLowerCase() );\n\n\t\tif ( key === name ) {\n\t\t\treturn decodeURIComponent( pair[ 1 ] );\n\t\t}\n\t}\n\n\treturn null;\n}\n\n/**\n * Sets the value of the cookie with a given name.\n *\n * @param {String} name\n * @param {String} value\n */\nexport function setCookie( name, value ) {\n\tdocument.cookie = encodeURIComponent( name ) + '=' + encodeURIComponent( value ) + ';path=/';\n}\n\n// Generates the CSRF token with the given length.\n//\n// @private\n// @param {Number} length\n// @returns {string}\nfunction generateToken( length ) {\n\tlet result = '';\n\tconst randValues = new Uint8Array( length );\n\n\twindow.crypto.getRandomValues( randValues );\n\n\tfor ( let j = 0; j < randValues.length; j++ ) {\n\t\tconst character = tokenCharset.charAt( randValues[ j ] % tokenCharset.length );\n\t\tresult += Math.random() > 0.5 ? character.toUpperCase() : character;\n\t}\n\n\treturn result;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/* globals XMLHttpRequest, FormData */\n/**\n * @module adapter-ckfinder/uploadadapter\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport FileRepository from '@ckeditor/ckeditor5-upload/src/filerepository';\nimport { getCsrfToken } from './utils';\n/**\n * A plugin that enables file uploads in CKEditor 5 using the CKFinder server–side connector.\n *\n * See the {@glink features/image-upload/ckfinder \"CKFinder file manager integration\" guide} to learn how to configure\n * and use this feature as well as find out more about the full integration with the file manager\n * provided by the {@link module:ckfinder/ckfinder~CKFinder} plugin.\n *\n * Check out the {@glink features/image-upload/image-upload comprehensive \"Image upload overview\"} to learn about\n * other ways to upload images into CKEditor 5.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class CKFinderUploadAdapter extends Plugin {\n    /**\n\t * @inheritDoc\n\t */\n    static get requires() {\n        return [FileRepository];\n    }\n    /**\n\t * @inheritDoc\n\t */\n    static get pluginName() {\n        return 'CKFinderUploadAdapter';\n    }\n    /**\n\t * @inheritDoc\n\t */\n    init() {\n        const url = this.editor.config.get('ckfinder.uploadUrl');\n        if (!url) {\n            return;\n        }\n        // Register CKFinderAdapter\n        this.editor.plugins.get(FileRepository).createUploadAdapter = loader => new UploadAdapter(loader, url, this.editor.t);\n    }\n}\n/**\n * Upload adapter for CKFinder.\n *\n * @private\n * @implements module:upload/filerepository~UploadAdapter\n */\nclass UploadAdapter {\n    /**\n\t * Creates a new adapter instance.\n\t *\n\t * @param {module:upload/filerepository~FileLoader} loader\n\t * @param {String} url\n\t * @param {module:utils/locale~Locale#t} t\n\t */\n    constructor(loader, url, t) {\n        /**\n\t\t * FileLoader instance to use during the upload.\n\t\t *\n\t\t * @member {module:upload/filerepository~FileLoader} #loader\n\t\t */\n        this.loader = loader;\n        /**\n\t\t * Upload URL.\n\t\t *\n\t\t * @member {String} #url\n\t\t */\n        this.url = url;\n        /**\n\t\t * Locale translation method.\n\t\t *\n\t\t * @member {module:utils/locale~Locale#t} #t\n\t\t */\n        this.t = t;\n    }\n    /**\n\t * Starts the upload process.\n\t *\n\t * @see module:upload/filerepository~UploadAdapter#upload\n\t * @returns {Promise.<Object>}\n\t */\n    upload() {\n        return this.loader.file.then(file => {\n            return new Promise((resolve, reject) => {\n                this._initRequest();\n                this._initListeners(resolve, reject, file);\n                this._sendRequest(file);\n            });\n        });\n    }\n    /**\n\t * Aborts the upload process.\n\t *\n\t * @see module:upload/filerepository~UploadAdapter#abort\n\t */\n    abort() {\n        if (this.xhr) {\n            this.xhr.abort();\n        }\n    }\n    /**\n\t * Initializes the XMLHttpRequest object.\n\t *\n\t * @private\n\t */\n    _initRequest() {\n        const xhr = this.xhr = new XMLHttpRequest();\n        xhr.open('POST', this.url, true);\n        xhr.responseType = 'json';\n    }\n    /**\n\t * Initializes XMLHttpRequest listeners.\n\t *\n\t * @private\n\t * @param {Function} resolve Callback function to be called when the request is successful.\n\t * @param {Function} reject Callback function to be called when the request cannot be completed.\n\t * @param {File} file File instance to be uploaded.\n\t */\n    _initListeners(resolve, reject, file) {\n        const xhr = this.xhr;\n        const loader = this.loader;\n        const t = this.t;\n        const genericError = t('a') + ` ${ file.name }.`;\n        xhr.addEventListener('error', () => reject(genericError));\n        xhr.addEventListener('abort', () => reject());\n        xhr.addEventListener('load', () => {\n            const response = xhr.response;\n            if (!response || !response.uploaded) {\n                return reject(response && response.error && response.error.message ? response.error.message : genericError);\n            }\n            resolve({ default: response.url });\n        });\n        // Upload progress when it's supported.\n        /* istanbul ignore else */\n        if (xhr.upload) {\n            xhr.upload.addEventListener('progress', evt => {\n                if (evt.lengthComputable) {\n                    loader.uploadTotal = evt.total;\n                    loader.uploaded = evt.loaded;\n                }\n            });\n        }\n    }\n    /**\n\t * Prepares the data and sends the request.\n\t *\n\t * @private\n\t * @param {File} file File instance to be uploaded.\n\t */\n    _sendRequest(file) {\n        // Prepare form data.\n        const data = new FormData();\n        data.append('upload', file);\n        data.append('ckCsrfToken', getCsrfToken());\n        // Send request.\n        this.xhr.send(data);\n    }\n}","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module autoformat/blockautoformatediting\n */\n\nimport LiveRange from '@ckeditor/ckeditor5-engine/src/model/liverange';\n\n/**\n * The block autoformatting engine. It allows to format various block patterns. For example,\n * it can be configured to turn a paragraph starting with `*` and followed by a space into a list item.\n *\n * The autoformatting operation is integrated with the undo manager,\n * so the autoformatting step can be undone if the user's intention was not to format the text.\n *\n * See the constructors documentation to learn how to create custom inline autoformatters. You can also use\n * the {@link module:autoformat/autoformat~Autoformat} feature which enables a set of default autoformatters\n * (lists, headings, bold and italic).\n */\nexport default class BlockAutoformatEditing {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'BlockAutoformatEditing';\n\t}\n\n\t/**\n\t * Creates a listener triggered on `change` event in the document.\n\t * Calls the callback when inserted text matches the regular expression or the command name\n\t * if provided instead of the callback.\n\t *\n\t * Examples of usage:\n\t *\n\t * To convert a paragraph to heading 1 when `- ` is typed, using just the command name:\n\t *\n\t *\t\tnew BlockAutoformatEditing( editor, /^\\- $/, 'heading1' );\n\t *\n\t * To convert a paragraph to heading 1 when `- ` is typed, using just the callback:\n\t *\n\t *\t\tnew BlockAutoformatEditing( editor, /^\\- $/, ( context ) => {\n\t *\t\t\tconst { match } = context;\n\t *\t\t\tconst headingLevel = match[ 1 ].length;\n\t *\n\t *\t\t\teditor.execute( 'heading', {\n\t *\t\t\t\tformatId: `heading${ headingLevel }`\n\t *\t\t\t} );\n\t * \t\t} );\n\t *\n\t * @param {module:core/editor/editor~Editor} editor The editor instance.\n\t * @param {RegExp} pattern The regular expression to execute on just inserted text.\n\t * @param {Function|String} callbackOrCommand The callback to execute or the command to run when the text is matched.\n\t * In case of providing the callback, it receives the following parameter:\n\t * * {Object} match RegExp.exec() result of matching the pattern to inserted text.\n\t */\n\tconstructor( editor, pattern, callbackOrCommand ) {\n\t\tlet callback;\n\t\tlet command = null;\n\n\t\tif ( typeof callbackOrCommand == 'function' ) {\n\t\t\tcallback = callbackOrCommand;\n\t\t} else {\n\t\t\t// We assume that the actual command name was provided.\n\t\t\tcommand = editor.commands.get( callbackOrCommand );\n\n\t\t\tcallback = () => {\n\t\t\t\teditor.execute( callbackOrCommand );\n\t\t\t};\n\t\t}\n\n\t\teditor.model.document.on( 'change', ( evt, batch ) => {\n\t\t\tif ( command && !command.isEnabled ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( batch.type == 'transparent' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst changes = Array.from( editor.model.document.differ.getChanges() );\n\t\t\tconst entry = changes[ 0 ];\n\n\t\t\t// Typing is represented by only a single change.\n\t\t\tif ( changes.length != 1 || entry.type !== 'insert' || entry.name != '$text' || entry.length != 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst blockToFormat = entry.position.parent;\n\n\t\t\t// Block formatting should trigger only if the entire content of a paragraph is a single text node... (see ckeditor5#5671).\n\t\t\tif ( !blockToFormat.is( 'paragraph' ) || blockToFormat.childCount !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst match = pattern.exec( blockToFormat.getChild( 0 ).data );\n\n\t\t\t// ...and this text node's data match the pattern.\n\t\t\tif ( !match ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Use enqueueChange to create new batch to separate typing batch from the auto-format changes.\n\t\t\teditor.model.enqueueChange( writer => {\n\t\t\t\t// Matched range.\n\t\t\t\tconst start = writer.createPositionAt( blockToFormat, 0 );\n\t\t\t\tconst end = writer.createPositionAt( blockToFormat, match[ 0 ].length );\n\t\t\t\tconst range = new LiveRange( start, end );\n\n\t\t\t\tconst wasChanged = callback( { match } );\n\n\t\t\t\t// Remove matched text.\n\t\t\t\tif ( wasChanged !== false ) {\n\t\t\t\t\twriter.remove( range );\n\t\t\t\t}\n\n\t\t\t\trange.detach();\n\t\t\t} );\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module autoformat/inlineautoformatediting\n */\n\nimport getLastTextLine from '@ckeditor/ckeditor5-typing/src/utils/getlasttextline';\n\n/**\n * The inline autoformatting engine. It allows to format various inline patterns. For example,\n * it can be configured to make \"foo\" bold when typed `**foo**` (the `**` markers will be removed).\n *\n * The autoformatting operation is integrated with the undo manager,\n * so the autoformatting step can be undone if the user's intention was not to format the text.\n *\n * See the constructors documentation to learn how to create custom inline autoformatters. You can also use\n * the {@link module:autoformat/autoformat~Autoformat} feature which enables a set of default autoformatters\n * (lists, headings, bold and italic).\n */\nexport default class InlineAutoformatEditing {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'InlineAutoformatEditing';\n\t}\n\n\t/**\n\t * Enables autoformatting mechanism for a given {@link module:core/editor/editor~Editor}.\n\t *\n\t * It formats the matched text by applying the given model attribute or by running the provided formatting callback.\n\t * On every change applied to the model the autoformatting engine checks the text on the left of the selection\n\t * and executes the provided action if the text matches given criteria (regular expression or callback).\n\t *\n\t * @param {module:core/editor/editor~Editor} editor The editor instance.\n\t * @param {Function|RegExp} testRegexpOrCallback The regular expression or callback to execute on text.\n\t * Provided regular expression *must* have three capture groups. The first and the third capture group\n\t * should match opening and closing delimiters. The second capture group should match the text to format.\n\t *\n\t *\t\t// Matches the `**bold text**` pattern.\n\t *\t\t// There are three capturing groups:\n\t *\t\t// - The first to match the starting `**` delimiter.\n\t *\t\t// - The second to match the text to format.\n\t *\t\t// - The third to match the ending `**` delimiter.\n\t *\t\tnew InlineAutoformatEditing( editor, /(\\*\\*)([^\\*]+?)(\\*\\*)$/g, 'bold' );\n\t *\n\t * When a function is provided instead of the regular expression, it will be executed with the text to match as a parameter.\n\t * The function should return proper \"ranges\" to delete and format.\n\t *\n\t *\t\t{\n\t *\t\t\tremove: [\n\t *\t\t\t\t[ 0, 1 ],\t// Remove the first letter from the given text.\n\t *\t\t\t\t[ 5, 6 ]\t// Remove the 6th letter from the given text.\n\t *\t\t\t],\n\t *\t\t\tformat: [\n\t *\t\t\t\t[ 1, 5 ]\t// Format all letters from 2nd to 5th.\n\t *\t\t\t]\n\t *\t\t}\n\t *\n\t * @param {Function|String} attributeOrCallback The name of attribute to apply on matching text or a callback for manual\n\t * formatting. If callback is passed it should return `false` if changes should not be applied (e.g. if a command is disabled).\n\t *\n\t *\t\t// Use attribute name:\n\t *\t\tnew InlineAutoformatEditing( editor, /(\\*\\*)([^\\*]+?)(\\*\\*)$/g, 'bold' );\n\t *\n\t *\t\t// Use formatting callback:\n\t *\t\tnew InlineAutoformatEditing( editor, /(\\*\\*)([^\\*]+?)(\\*\\*)$/g, ( writer, rangesToFormat ) => {\n\t *\t\t\tconst command = editor.commands.get( 'bold' );\n\t *\n\t *\t\t\tif ( !command.isEnabled ) {\n\t *\t\t\t\treturn false;\n\t *\t\t\t}\n\t *\n\t *\t\t\tconst validRanges = editor.model.schema.getValidRanges( rangesToFormat, 'bold' );\n\t *\n\t *\t\t\tfor ( let range of validRanges ) {\n\t *\t\t\t\twriter.setAttribute( 'bold', true, range );\n\t *\t\t\t}\n\t *\t\t} );\n\t */\n\tconstructor( editor, testRegexpOrCallback, attributeOrCallback ) {\n\t\tlet regExp;\n\t\tlet attributeKey;\n\t\tlet testCallback;\n\t\tlet formatCallback;\n\n\t\tif ( testRegexpOrCallback instanceof RegExp ) {\n\t\t\tregExp = testRegexpOrCallback;\n\t\t} else {\n\t\t\ttestCallback = testRegexpOrCallback;\n\t\t}\n\n\t\tif ( typeof attributeOrCallback == 'string' ) {\n\t\t\tattributeKey = attributeOrCallback;\n\t\t} else {\n\t\t\tformatCallback = attributeOrCallback;\n\t\t}\n\n\t\t// A test callback run on changed text.\n\t\ttestCallback = testCallback || ( text => {\n\t\t\tlet result;\n\t\t\tconst remove = [];\n\t\t\tconst format = [];\n\n\t\t\twhile ( ( result = regExp.exec( text ) ) !== null ) {\n\t\t\t\t// There should be full match and 3 capture groups.\n\t\t\t\tif ( result && result.length < 4 ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlet {\n\t\t\t\t\tindex,\n\t\t\t\t\t'1': leftDel,\n\t\t\t\t\t'2': content,\n\t\t\t\t\t'3': rightDel\n\t\t\t\t} = result;\n\n\t\t\t\t// Real matched string - there might be some non-capturing groups so we need to recalculate starting index.\n\t\t\t\tconst found = leftDel + content + rightDel;\n\t\t\t\tindex += result[ 0 ].length - found.length;\n\n\t\t\t\t// Start and End offsets of delimiters to remove.\n\t\t\t\tconst delStart = [\n\t\t\t\t\tindex,\n\t\t\t\t\tindex + leftDel.length\n\t\t\t\t];\n\t\t\t\tconst delEnd = [\n\t\t\t\t\tindex + leftDel.length + content.length,\n\t\t\t\t\tindex + leftDel.length + content.length + rightDel.length\n\t\t\t\t];\n\n\t\t\t\tremove.push( delStart );\n\t\t\t\tremove.push( delEnd );\n\n\t\t\t\tformat.push( [ index + leftDel.length, index + leftDel.length + content.length ] );\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tremove,\n\t\t\t\tformat\n\t\t\t};\n\t\t} );\n\n\t\t// A format callback run on matched text.\n\t\tformatCallback = formatCallback || ( ( writer, rangesToFormat ) => {\n\t\t\tconst validRanges = editor.model.schema.getValidRanges( rangesToFormat, attributeKey );\n\n\t\t\tfor ( const range of validRanges ) {\n\t\t\t\twriter.setAttribute( attributeKey, true, range );\n\t\t\t}\n\n\t\t\t// After applying attribute to the text, remove given attribute from the selection.\n\t\t\t// This way user is able to type a text without attribute used by auto formatter.\n\t\t\twriter.removeSelectionAttribute( attributeKey );\n\t\t} );\n\n\t\teditor.model.document.on( 'change', ( evt, batch ) => {\n\t\t\tif ( batch.type == 'transparent' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst model = editor.model;\n\t\t\tconst selection = model.document.selection;\n\n\t\t\t// Do nothing if selection is not collapsed.\n\t\t\tif ( !selection.isCollapsed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst changes = Array.from( model.document.differ.getChanges() );\n\t\t\tconst entry = changes[ 0 ];\n\n\t\t\t// Typing is represented by only a single change.\n\t\t\tif ( changes.length != 1 || entry.type !== 'insert' || entry.name != '$text' || entry.length != 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst focus = selection.focus;\n\t\t\tconst block = focus.parent;\n\t\t\tconst { text, range } = getLastTextLine( model.createRange( model.createPositionAt( block, 0 ), focus ), model );\n\t\t\tconst testOutput = testCallback( text );\n\t\t\tconst rangesToFormat = testOutputToRanges( range.start, testOutput.format, model );\n\t\t\tconst rangesToRemove = testOutputToRanges( range.start, testOutput.remove, model );\n\n\t\t\tif ( !( rangesToFormat.length && rangesToRemove.length ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Use enqueueChange to create new batch to separate typing batch from the auto-format changes.\n\t\t\tmodel.enqueueChange( writer => {\n\t\t\t\t// Apply format.\n\t\t\t\tconst hasChanged = formatCallback( writer, rangesToFormat );\n\n\t\t\t\t// Strict check on `false` to have backward compatibility (when callbacks were returning `undefined`).\n\t\t\t\tif ( hasChanged === false ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Remove delimiters - use reversed order to not mix the offsets while removing.\n\t\t\t\tfor ( const range of rangesToRemove.reverse() ) {\n\t\t\t\t\twriter.remove( range );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n}\n\n// Converts output of the test function provided to the InlineAutoformatEditing and converts it to the model ranges\n// inside provided block.\n//\n// @private\n// @param {module:engine/model/position~Position} start\n// @param {Array.<Array>} arrays\n// @param {module:engine/model/model~Model} model\nfunction testOutputToRanges( start, arrays, model ) {\n\treturn arrays\n\t\t.filter( array => ( array[ 0 ] !== undefined && array[ 1 ] !== undefined ) )\n\t\t.map( array => {\n\t\t\treturn model.createRange( start.getShiftedBy( array[ 0 ] ), start.getShiftedBy( array[ 1 ] ) );\n\t\t} );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/utils/getlasttextline\n */\n\n/**\n * Returns the last text line from the given range.\n *\n * \"The last text line\" is understood as text (from one or more text nodes) which is limited either by a parent block\n * or by inline elements (e.g. `<softBreak>`).\n *\n *\t\tconst rangeToCheck = model.createRange(\n *\t\t\tmodel.createPositionAt( paragraph, 0 ),\n *\t\t\tmodel.createPositionAt( paragraph, 'end' )\n *\t\t);\n *\n *\t\tconst { text, range } = getLastTextLine( rangeToCheck, model );\n *\n * For model below, the returned `text` will be \"Foo bar baz\" and `range` will be set on whole `<paragraph>` content:\n *\n *\t\t<paragraph>Foo bar baz<paragraph>\n *\n * However, in below case, `text` will be set to \"baz\" and `range` will be set only on \"baz\".\n *\n *\t\t<paragraph>Foo<softBreak></softBreak>bar<softBreak></softBreak>baz<paragraph>\n *\n * @protected\n * @param {module:engine/model/range~Range} range\n * @param {module:engine/model/model~Model} model\n * @returns {module:typing/utils/getlasttextline~LastTextLineData}\n */\nexport default function getLastTextLine( range, model ) {\n\tlet start = range.start;\n\n\tconst text = Array.from( range.getItems() ).reduce( ( rangeText, node ) => {\n\t\t// Trim text to a last occurrence of an inline element and update range start.\n\t\tif ( !( node.is( 'text' ) || node.is( 'textProxy' ) ) ) {\n\t\t\tstart = model.createPositionAfter( node );\n\n\t\t\treturn '';\n\t\t}\n\n\t\treturn rangeText + node.data;\n\t}, '' );\n\n\treturn { text, range: model.createRange( start, range.end ) };\n}\n\n/**\n * The value returned by {@link module:typing/utils/getlasttextline~getLastTextLine}.\n *\n * @typedef {Object} module:typing/utils/getlasttextline~LastTextLineData\n *\n * @property {String} text The text from the text nodes in the last text line.\n * @property {module:engine/model/range~Range} range The range set on the text nodes in the last text line.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module autoformat/autoformat\n */\n\nimport BlockAutoformatEditing from './blockautoformatediting';\nimport InlineAutoformatEditing from './inlineautoformatediting';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\n/**\n * Enables a set of predefined autoformatting actions.\n *\n * For a detailed overview, check the {@glink features/autoformat Autoformatting feature documentation}\n * and the {@glink api/autoformat package page}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Autoformat extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Autoformat';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tafterInit() {\n\t\tthis._addListAutoformats();\n\t\tthis._addBasicStylesAutoformats();\n\t\tthis._addHeadingAutoformats();\n\t\tthis._addBlockQuoteAutoformats();\n\t\tthis._addCodeBlockAutoformats();\n\t}\n\n\t/**\n\t * Adds autoformatting related to the {@link module:list/list~List}.\n\t *\n\t * When typed:\n\t * - `* ` or `- ` &ndash; A paragraph will be changed to a bulleted list.\n\t * - `1. ` or `1) ` &ndash; A paragraph will be changed to a numbered list (\"1\" can be any digit or a list of digits).\n\t *\n\t * @private\n\t */\n\t_addListAutoformats() {\n\t\tconst commands = this.editor.commands;\n\n\t\tif ( commands.get( 'bulletedList' ) ) {\n\t\t\t// eslint-disable-next-line no-new\n\t\t\tnew BlockAutoformatEditing( this.editor, /^[*-]\\s$/, 'bulletedList' );\n\t\t}\n\n\t\tif ( commands.get( 'numberedList' ) ) {\n\t\t\t// eslint-disable-next-line no-new\n\t\t\tnew BlockAutoformatEditing( this.editor, /^1[.|)]\\s$/, 'numberedList' );\n\t\t}\n\t}\n\n\t/**\n\t * Adds autoformatting related to the {@link module:basic-styles/bold~Bold},\n\t * {@link module:basic-styles/italic~Italic} and {@link module:basic-styles/code~Code}.\n\t *\n\t * When typed:\n\t * - `**foobar**` &ndash; `**` characters are removed and `foobar` is set to bold,\n\t * - `__foobar__` &ndash; `__` characters are removed and `foobar` is set to bold,\n\t * - `*foobar*` &ndash; `*` characters are removed and `foobar` is set to italic,\n\t * - `_foobar_` &ndash; `_` characters are removed and `foobar` is set to italic,\n\t * - ``` `foobar` &ndash; ``` ` ``` characters are removed and `foobar` is set to code.\n\t *\n\t * @private\n\t */\n\t_addBasicStylesAutoformats() {\n\t\tconst commands = this.editor.commands;\n\n\t\tif ( commands.get( 'bold' ) ) {\n\t\t\t/* eslint-disable no-new */\n\t\t\tconst boldCallback = getCallbackFunctionForInlineAutoformat( this.editor, 'bold' );\n\n\t\t\tnew InlineAutoformatEditing( this.editor, /(\\*\\*)([^*]+)(\\*\\*)$/g, boldCallback );\n\t\t\tnew InlineAutoformatEditing( this.editor, /(__)([^_]+)(__)$/g, boldCallback );\n\t\t\t/* eslint-enable no-new */\n\t\t}\n\n\t\tif ( commands.get( 'italic' ) ) {\n\t\t\t/* eslint-disable no-new */\n\t\t\tconst italicCallback = getCallbackFunctionForInlineAutoformat( this.editor, 'italic' );\n\n\t\t\t// The italic autoformatter cannot be triggered by the bold markers, so we need to check the\n\t\t\t// text before the pattern (e.g. `(?:^|[^\\*])`).\n\t\t\tnew InlineAutoformatEditing( this.editor, /(?:^|[^*])(\\*)([^*_]+)(\\*)$/g, italicCallback );\n\t\t\tnew InlineAutoformatEditing( this.editor, /(?:^|[^_])(_)([^_]+)(_)$/g, italicCallback );\n\t\t\t/* eslint-enable no-new */\n\t\t}\n\n\t\tif ( commands.get( 'code' ) ) {\n\t\t\t/* eslint-disable no-new */\n\t\t\tconst codeCallback = getCallbackFunctionForInlineAutoformat( this.editor, 'code' );\n\n\t\t\tnew InlineAutoformatEditing( this.editor, /(`)([^`]+)(`)$/g, codeCallback );\n\t\t\t/* eslint-enable no-new */\n\t\t}\n\t}\n\n\t/**\n\t * Adds autoformatting related to {@link module:heading/heading~Heading}.\n\t *\n\t * It is using a number at the end of the command name to associate it with the proper trigger:\n\t *\n\t * * `heading` with value `heading1` will be executed when typing `#`,\n\t * * `heading` with value `heading2` will be executed when typing `##`,\n\t * * ... up to `heading6` and `######`.\n\t *\n\t * @private\n\t */\n\t_addHeadingAutoformats() {\n\t\tconst command = this.editor.commands.get( 'heading' );\n\n\t\tif ( command ) {\n\t\t\tcommand.modelElements\n\t\t\t\t.filter( name => name.match( /^heading[1-6]$/ ) )\n\t\t\t\t.forEach( commandValue => {\n\t\t\t\t\tconst level = commandValue[ 7 ];\n\t\t\t\t\tconst pattern = new RegExp( `^(#{${ level }})\\\\s$` );\n\n\t\t\t\t\t// eslint-disable-next-line no-new\n\t\t\t\t\tnew BlockAutoformatEditing( this.editor, pattern, () => {\n\t\t\t\t\t\tif ( !command.isEnabled ) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.editor.execute( 'heading', { value: commandValue } );\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Adds autoformatting related to {@link module:block-quote/blockquote~BlockQuote}.\n\t *\n\t * When typed:\n\t * * `> ` &ndash; A paragraph will be changed to a block quote.\n\t *\n\t * @private\n\t */\n\t_addBlockQuoteAutoformats() {\n\t\tif ( this.editor.commands.get( 'blockQuote' ) ) {\n\t\t\t// eslint-disable-next-line no-new\n\t\t\tnew BlockAutoformatEditing( this.editor, /^>\\s$/, 'blockQuote' );\n\t\t}\n\t}\n\n\t/**\n\t * Adds autoformatting related to {@link module:code-block/codeblock~CodeBlock}.\n\t *\n\t * When typed:\n\t * - `` ``` `` &ndash; A paragraph will be changed to a code block.\n\t *\n\t * @private\n\t */\n\t_addCodeBlockAutoformats() {\n\t\tif ( this.editor.commands.get( 'codeBlock' ) ) {\n\t\t\t// eslint-disable-next-line no-new\n\t\t\tnew BlockAutoformatEditing( this.editor, /^```$/, 'codeBlock' );\n\t\t}\n\t}\n}\n\n// Helper function for getting `InlineAutoformatEditing` callbacks that checks if command is enabled.\n//\n// @param {module:core/editor/editor~Editor} editor\n// @param {String} attributeKey\n// @returns {Function}\nfunction getCallbackFunctionForInlineAutoformat( editor, attributeKey ) {\n\treturn ( writer, rangesToFormat ) => {\n\t\tconst command = editor.commands.get( attributeKey );\n\n\t\tif ( !command.isEnabled ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst validRanges = editor.model.schema.getValidRanges( rangesToFormat, attributeKey );\n\n\t\tfor ( const range of validRanges ) {\n\t\t\twriter.setAttribute( attributeKey, true, range );\n\t\t}\n\n\t\t// After applying attribute to the text, remove given attribute from the selection.\n\t\t// This way user is able to type a text without attribute used by auto formatter.\n\t\twriter.removeSelectionAttribute( attributeKey );\n\t};\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module basic-styles/attributecommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\n\n/**\n * An extension of the base {@link module:core/command~Command} class, which provides utilities for a command\n * that toggles a single attribute on a text or an element.\n *\n * `AttributeCommand` uses {@link module:engine/model/document~Document#selection}\n * to decide which nodes (if any) should be changed, and applies or removes the attribute from them.\n *\n * The command checks the {@link module:engine/model/model~Model#schema} to decide if it can be enabled\n * for the current selection and to which nodes the attribute can be applied.\n *\n * @extends module:core/command~Command\n */\nexport default class AttributeCommand extends Command {\n\t/**\n\t * @param {module:core/editor/editor~Editor} editor\n\t * @param {String} attributeKey Attribute that will be set by the command.\n\t */\n\tconstructor( editor, attributeKey ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The attribute that will be set by the command.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.attributeKey = attributeKey;\n\n\t\t/**\n\t\t * Flag indicating whether the command is active. The command is active when the\n\t\t * {@link module:engine/model/selection~Selection#hasAttribute selection has the attribute} which means that:\n\t\t *\n\t\t * * If the selection is not empty &ndash; That the attribute is set on the first node in the selection that allows this attribute.\n\t\t * * If the selection is empty &ndash; That the selection has the attribute itself (which means that newly typed\n\t\t * text will have this attribute, too).\n\t\t *\n\t\t * @observable\n\t\t * @readonly\n\t\t * @member {Boolean} #value\n\t\t */\n\t}\n\n\t/**\n\t * Updates the command's {@link #value} and {@link #isEnabled} based on the current selection.\n\t */\n\trefresh() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\n\t\tthis.value = this._getValueFromFirstAllowedNode();\n\t\tthis.isEnabled = model.schema.checkAttributeInSelection( doc.selection, this.attributeKey );\n\t}\n\n\t/**\n\t * Executes the command &mdash; applies the attribute to the selection or removes it from the selection.\n\t *\n\t * If the command is active (`value == true`), it will remove attributes. Otherwise, it will set attributes.\n\t *\n\t * The execution result differs, depending on the {@link module:engine/model/document~Document#selection}:\n\t *\n\t * * If the selection is on a range, the command applies the attribute to all nodes in that range\n\t * (if they are allowed to have this attribute by the {@link module:engine/model/schema~Schema schema}).\n\t * * If the selection is collapsed in a non-empty node, the command applies the attribute to the\n\t * {@link module:engine/model/document~Document#selection} itself (note that typed characters copy attributes from the selection).\n\t * * If the selection is collapsed in an empty node, the command applies the attribute to the parent node of the selection (note\n\t * that the selection inherits all attributes from a node if it is in an empty node).\n\t *\n\t * @fires execute\n\t * @param {Object} [options] Command options.\n\t * @param {Boolean} [options.forceValue] If set, it will force the command behavior. If `true`, the command will apply the attribute,\n\t * otherwise the command will remove the attribute.\n\t * If not set, the command will look for its current value to decide what it should do.\n\t */\n\texecute( options = {} ) {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\t\tconst selection = doc.selection;\n\t\tconst value = ( options.forceValue === undefined ) ? !this.value : options.forceValue;\n\n\t\tmodel.change( writer => {\n\t\t\tif ( selection.isCollapsed ) {\n\t\t\t\tif ( value ) {\n\t\t\t\t\twriter.setSelectionAttribute( this.attributeKey, true );\n\t\t\t\t} else {\n\t\t\t\t\twriter.removeSelectionAttribute( this.attributeKey );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst ranges = model.schema.getValidRanges( selection.getRanges(), this.attributeKey );\n\n\t\t\t\tfor ( const range of ranges ) {\n\t\t\t\t\tif ( value ) {\n\t\t\t\t\t\twriter.setAttribute( this.attributeKey, value, range );\n\t\t\t\t\t} else {\n\t\t\t\t\t\twriter.removeAttribute( this.attributeKey, range );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Checks the attribute value of the first node in the selection that allows the attribute.\n\t * For the collapsed selection returns the selection attribute.\n\t *\n\t * @private\n\t * @returns {Boolean} The attribute value.\n\t */\n\t_getValueFromFirstAllowedNode() {\n\t\tconst model = this.editor.model;\n\t\tconst schema = model.schema;\n\t\tconst selection = model.document.selection;\n\n\t\tif ( selection.isCollapsed ) {\n\t\t\treturn selection.hasAttribute( this.attributeKey );\n\t\t}\n\n\t\tfor ( const range of selection.getRanges() ) {\n\t\t\tfor ( const item of range.getItems() ) {\n\t\t\t\tif ( schema.checkAttribute( item, this.attributeKey ) ) {\n\t\t\t\t\treturn item.hasAttribute( this.attributeKey );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module basic-styles/bold/boldediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport AttributeCommand from '../attributecommand';\n\nconst BOLD = 'bold';\n\n/**\n * The bold editing feature.\n *\n * It registers the `'bold'` command and introduces the `bold` attribute in the model which renders to the view\n * as a `<strong>` element.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class BoldEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'BoldEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\t// Allow bold attribute on text nodes.\n\t\teditor.model.schema.extend( '$text', { allowAttributes: BOLD } );\n\t\teditor.model.schema.setAttributeProperties( BOLD, {\n\t\t\tisFormatting: true,\n\t\t\tcopyOnEnter: true\n\t\t} );\n\n\t\t// Build converter from model to view for data and editing pipelines.\n\t\teditor.conversion.attributeToElement( {\n\t\t\tmodel: BOLD,\n\t\t\tview: 'strong',\n\t\t\tupcastAlso: [\n\t\t\t\t'b',\n\t\t\t\tviewElement => {\n\t\t\t\t\tconst fontWeight = viewElement.getStyle( 'font-weight' );\n\n\t\t\t\t\tif ( !fontWeight ) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Value of the `font-weight` attribute can be defined as a string or a number.\n\t\t\t\t\tif ( fontWeight == 'bold' || Number( fontWeight ) >= 600 ) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tname: true,\n\t\t\t\t\t\t\tstyles: [ 'font-weight' ]\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\t\t// Create bold command.\n\t\teditor.commands.add( BOLD, new AttributeCommand( editor, BOLD ) );\n\n\t\t// Set the Ctrl+B keystroke.\n\t\teditor.keystrokes.set( 'CTRL+B', BOLD );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module basic-styles/bold/boldui\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport boldIcon from '../../theme/icons/bold.svg';\nconst BOLD = 'bold';\n/**\n * The bold UI feature. It introduces the Bold button.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class BoldUI extends Plugin {\n    /**\n\t * @inheritDoc\n\t */\n    init() {\n        const editor = this.editor;\n        const t = editor.t;\n        // Add bold button to feature components.\n        editor.ui.componentFactory.add(BOLD, locale => {\n            const command = editor.commands.get(BOLD);\n            const view = new ButtonView(locale);\n            view.set({\n                label: t('d'),\n                icon: boldIcon,\n                keystroke: 'CTRL+B',\n                tooltip: true,\n                isToggleable: true\n            });\n            view.bind('isOn', 'isEnabled').to(command, 'value', 'isEnabled');\n            // Execute command.\n            this.listenTo(view, 'execute', () => {\n                editor.execute(BOLD);\n                editor.editing.view.focus();\n            });\n            return view;\n        });\n    }\n}","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M10.187 17H5.773c-.637 0-1.092-.138-1.364-.415-.273-.277-.409-.718-.409-1.323V4.738c0-.617.14-1.062.419-1.332.279-.27.73-.406 1.354-.406h4.68c.69 0 1.288.041 1.793.124.506.083.96.242 1.36.478.341.197.644.447.906.75a3.262 3.262 0 01.808 2.162c0 1.401-.722 2.426-2.167 3.075C15.05 10.175 16 11.315 16 13.01a3.756 3.756 0 01-2.296 3.504 6.1 6.1 0 01-1.517.377c-.571.073-1.238.11-2 .11zm-.217-6.217H7v4.087h3.069c1.977 0 2.965-.69 2.965-2.072 0-.707-.256-1.22-.768-1.537-.512-.319-1.277-.478-2.296-.478zM7 5.13v3.619h2.606c.729 0 1.292-.067 1.69-.2a1.6 1.6 0 00.91-.765c.165-.267.247-.566.247-.897 0-.707-.26-1.176-.778-1.409-.519-.232-1.31-.348-2.375-.348H7z\\\"/></svg>\"","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module basic-styles/italic/italicediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport AttributeCommand from '../attributecommand';\n\nconst ITALIC = 'italic';\n\n/**\n * The italic editing feature.\n *\n * It registers the `'italic'` command, the <kbd>Ctrl+I</kbd> keystroke and introduces the `italic` attribute in the model\n * which renders to the view as an `<i>` element.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ItalicEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ItalicEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\t// Allow italic attribute on text nodes.\n\t\teditor.model.schema.extend( '$text', { allowAttributes: ITALIC } );\n\t\teditor.model.schema.setAttributeProperties( ITALIC, {\n\t\t\tisFormatting: true,\n\t\t\tcopyOnEnter: true\n\t\t} );\n\n\t\teditor.conversion.attributeToElement( {\n\t\t\tmodel: ITALIC,\n\t\t\tview: 'i',\n\t\t\tupcastAlso: [\n\t\t\t\t'em',\n\t\t\t\t{\n\t\t\t\t\tstyles: {\n\t\t\t\t\t\t'font-style': 'italic'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\t\t// Create italic command.\n\t\teditor.commands.add( ITALIC, new AttributeCommand( editor, ITALIC ) );\n\n\t\t// Set the Ctrl+I keystroke.\n\t\teditor.keystrokes.set( 'CTRL+I', ITALIC );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module basic-styles/italic/italicui\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport italicIcon from '../../theme/icons/italic.svg';\nconst ITALIC = 'italic';\n/**\n * The italic UI feature. It introduces the Italic button.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ItalicUI extends Plugin {\n    /**\n\t * @inheritDoc\n\t */\n    init() {\n        const editor = this.editor;\n        const t = editor.t;\n        // Add bold button to feature components.\n        editor.ui.componentFactory.add(ITALIC, locale => {\n            const command = editor.commands.get(ITALIC);\n            const view = new ButtonView(locale);\n            view.set({\n                label: t('e'),\n                icon: italicIcon,\n                keystroke: 'CTRL+I',\n                tooltip: true,\n                isToggleable: true\n            });\n            view.bind('isOn', 'isEnabled').to(command, 'value', 'isEnabled');\n            // Execute command.\n            this.listenTo(view, 'execute', () => {\n                editor.execute(ITALIC);\n                editor.editing.view.focus();\n            });\n            return view;\n        });\n    }\n}","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M9.586 14.633l.021.004c-.036.335.095.655.393.962.082.083.173.15.274.201h1.474a.6.6 0 110 1.2H5.304a.6.6 0 010-1.2h1.15c.474-.07.809-.182 1.005-.334.157-.122.291-.32.404-.597l2.416-9.55a1.053 1.053 0 00-.281-.823 1.12 1.12 0 00-.442-.296H8.15a.6.6 0 010-1.2h6.443a.6.6 0 110 1.2h-1.195c-.376.056-.65.155-.823.296-.215.175-.423.439-.623.79l-2.366 9.347z\\\"/></svg>\"","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/first\n */\n\n/**\n * Returns first item of the given `iterable`.\n *\n * @param {Iterable.<*>} iterable\n * @returns {*}\n */\nexport default function first( iterable ) {\n\tconst iteratorItem = iterable.next();\n\n\tif ( iteratorItem.done ) {\n\t\treturn null;\n\t}\n\n\treturn iteratorItem.value;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module code-block/utils\n */\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n/**\n * Returns code block languages as defined in `config.codeBlock.languages` but processed:\n *\n * * To consider the editor localization, i.e. to display {@link module:code-block/codeblock~CodeBlockLanguageDefinition}\n * in the correct language. There is no way to use {@link module:utils/locale~Locale#t} when the user\n * configuration is defined because the editor does not exist yet.\n * * To make sure each definition has a CSS class associated with it even if not specified\n * in the original configuration.\n *\n * @param {module:core/editor/editor~Editor} editor\n * @returns {Array.<module:code-block/codeblock~CodeBlockLanguageDefinition>}.\n */\nexport function getNormalizedAndLocalizedLanguageDefinitions(editor) {\n    const t = editor.t;\n    const languageDefs = editor.config.get('codeBlock.languages');\n    for (const def of languageDefs) {\n        if (def.label === 'Plain text') {\n            def.label = t('aq');\n        }\n        if (def.class === undefined) {\n            def.class = `language-${ def.language }`;\n        }\n    }\n    return languageDefs;\n}\n/**\n * Returns an object associating certain language definition properties with others. For instance:\n *\n * For:\n *\n *\t\tconst definitions = {\n *\t\t\t{ language: 'php', class: 'language-php', label: 'PHP' },\n *\t\t\t{ language: 'javascript', class: 'js', label: 'JavaScript' },\n *\t\t};\n *\n *\t\tgetPropertyAssociation( definitions, 'class', 'language' );\n *\n * returns:\n *\n *\t\t{\n *\t\t\t'language-php': 'php'\n *\t\t\t'js': 'javascript'\n *\t\t}\n *\n * and\n *\n *\t\tgetPropertyAssociation( definitions, 'language', 'label' );\n *\n * returns:\n *\n *\t\t{\n *\t\t\t'php': 'PHP'\n *\t\t\t'javascript': 'JavaScript'\n *\t\t}\n *\n * @param {Array.<module:code-block/codeblock~CodeBlockLanguageDefinition>}\n * @param {String} key\n * @param {String} value\n * @param {Object.<String,String>}\n */\nexport function getPropertyAssociation(languageDefs, key, value) {\n    const association = {};\n    for (const def of languageDefs) {\n        if (key === 'class') {\n            // Only the first class is considered.\n            association[def[key].split(' ').shift()] = def[value];\n        } else {\n            association[def[key]] = def[value];\n        }\n    }\n    return association;\n}\n/**\n * For a given model text node, it returns white spaces that precede other characters in that node.\n * This corresponds to the indentation part of the code block line.\n *\n * @param {module:engine/model/text~Text} codeLineNodes\n * @returns {String}\n */\nexport function getLeadingWhiteSpaces(textNode) {\n    return textNode.data.match(/^(\\s*)/)[0];\n}\n/**\n * For a plain text containing the code (snippet), it returns a document fragment containing\n * model text nodes separated by soft breaks (in place of new line characters \"\\n\"), for instance:\n *\n * Input:\n *\n *\t\t\"foo()\\n\n *\t\tbar()\"\n *\n * Output:\n *\n *\t\t<DocumentFragment>\n *\t\t\t\"foo()\"\n *\t\t\t<softBreak></softBreak>\n *\t\t\t\"bar()\"\n *\t\t</DocumentFragment>\n *\n * @param {module:engine/model/writer~Writer} writer\n * @param {String} text The raw code text to be converted.\n */\nexport function rawSnippetTextToModelDocumentFragment(writer, text) {\n    const fragment = writer.createDocumentFragment();\n    const textLines = text.split('\\n').map(data => writer.createText(data));\n    const lastLine = textLines[textLines.length - 1];\n    for (const node of textLines) {\n        writer.append(node, fragment);\n        if (node !== lastLine) {\n            writer.appendElement('softBreak', fragment);\n        }\n    }\n    return fragment;\n}\n/**\n * Returns an array of all model positions within the selection that represent code block lines.\n *\n * If the selection is collapsed, it returns the exact selection anchor position:\n *\n *\t\t<codeBlock>[]foo</codeBlock>        ->     <codeBlock>^foo</codeBlock>\n *\t\t<codeBlock>foo[]bar</codeBlock>     ->     <codeBlock>foo^bar</codeBlock>\n *\n * Otherwise, it returns positions **before** each text node belonging to all code blocks contained by the selection:\n *\n *\t\t<codeBlock>                                <codeBlock>\n *\t\t    foo[bar                                   ^foobar\n *\t\t    <softBreak></softBreak>         ->        <softBreak></softBreak>\n *\t\t    baz]qux                                   ^bazqux\n *\t\t</codeBlock>                               </codeBlock>\n *\n * It also works across other non–code blocks:\n *\n *\t\t<codeBlock>                                <codeBlock>\n *\t\t    foo[bar                                   ^foobar\n *\t\t</codeBlock>                               </codeBlock>\n *\t\t<paragraph>text</paragraph>         ->     <paragraph>text</paragraph>\n *\t\t<codeBlock>                                <codeBlock>\n *\t\t    baz]qux                                   ^bazqux\n *\t\t</codeBlock>                               </codeBlock>\n *\n * **Note:** The positions are in reverse order so they do not get outdated when iterating over them and\n * the writer inserts or removes things at the same time.\n *\n * **Note:** The position is situated after the leading white spaces in the text node.\n *\n * @param {module:engine/model/model~Model} model\n * @returns {Array.<module:engine/model/position~Position>}\n */\nexport function getIndentOutdentPositions(model) {\n    const selection = model.document.selection;\n    const positions = [];\n    // When the selection is collapsed, there's only one position we can indent or outdent.\n    if (selection.isCollapsed) {\n        positions.push(selection.anchor);\n    }    // When the selection is NOT collapsed, collect all positions starting before text nodes\n         // (code lines) in any <codeBlock> within the selection.\n    else {\n        // Walk backward so positions we're about to collect here do not get outdated when\n        // inserting or deleting using the writer.\n        const walker = selection.getFirstRange().getWalker({\n            ignoreElementEnd: true,\n            direction: 'backward'\n        });\n        for (const {item} of walker) {\n            if (item.is('textProxy') && item.parent.is('codeBlock')) {\n                const leadingWhiteSpaces = getLeadingWhiteSpaces(item.textNode);\n                const {parent, startOffset} = item.textNode;\n                // Make sure the position is after all leading whitespaces in the text node.\n                const position = model.createPositionAt(parent, startOffset + leadingWhiteSpaces.length);\n                positions.push(position);\n            }\n        }\n    }\n    return positions;\n}\n/**\n * Checks if any of the blocks within the model selection is a code block.\n *\n * @param {module:engine/model/selection~Selection} selection\n * @returns {Boolean}\n */\nexport function isModelSelectionInCodeBlock(selection) {\n    const firstBlock = first(selection.getSelectedBlocks());\n    return firstBlock && firstBlock.is('codeBlock');\n}","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module code-block/codeblockcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport first from '@ckeditor/ckeditor5-utils/src/first';\nimport { getNormalizedAndLocalizedLanguageDefinitions } from './utils';\n\n/**\n * The code block command plugin.\n *\n * @extends module:core/command~Command\n */\nexport default class CodeBlockCommand extends Command {\n\t/**\n\t * Whether the selection starts in a code block.\n\t *\n\t * @observable\n\t * @readonly\n\t * @member {Boolean} #value\n\t */\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tthis.value = this._getValue();\n\t\tthis.isEnabled = this._checkEnabled();\n\t}\n\n\t/**\n\t * Executes the command. When the command {@link #value is on}, all topmost code blocks within\n\t * the selection will be removed. If it is off, all selected blocks will be flattened and\n\t * wrapped by a code block.\n\t *\n\t * @fires execute\n\t * @param {Object} [options] Command options.\n\t * @param {Boolean} [options.forceValue] If set, it will force the command behavior. If `true`, the command will apply a code block,\n\t * otherwise the command will remove the code block. If not set, the command will act basing on its current value.\n\t */\n\texecute( options = {} ) {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\t\tconst selection = model.document.selection;\n\t\tconst normalizedLanguagesDefs = getNormalizedAndLocalizedLanguageDefinitions( editor );\n\t\tconst firstLanguageInConfig = normalizedLanguagesDefs[ 0 ];\n\n\t\tconst blocks = Array.from( selection.getSelectedBlocks() );\n\t\tconst value = ( options.forceValue === undefined ) ? !this.value : options.forceValue;\n\t\tconst language = options.language || firstLanguageInConfig.language;\n\n\t\tmodel.change( writer => {\n\t\t\tif ( value ) {\n\t\t\t\tthis._applyCodeBlock( writer, blocks, language );\n\t\t\t} else {\n\t\t\t\tthis._removeCodeBlock( writer, blocks );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Checks the command's {@link #value}.\n\t *\n\t * @private\n\t * @returns {Boolean} The current value.\n\t */\n\t_getValue() {\n\t\tconst selection = this.editor.model.document.selection;\n\t\tconst firstBlock = first( selection.getSelectedBlocks() );\n\t\tconst isCodeBlock = !!( firstBlock && firstBlock.is( 'codeBlock' ) );\n\n\t\treturn isCodeBlock ? firstBlock.getAttribute( 'language' ) : false;\n\t}\n\n\t/**\n\t * Checks whether the command can be enabled in the current context.\n\t *\n\t * @private\n\t * @returns {Boolean} Whether the command should be enabled.\n\t */\n\t_checkEnabled() {\n\t\tif ( this.value ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst selection = this.editor.model.document.selection;\n\t\tconst schema = this.editor.model.schema;\n\n\t\tconst firstBlock = first( selection.getSelectedBlocks() );\n\n\t\tif ( !firstBlock ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn canBeCodeBlock( schema, firstBlock );\n\t}\n\n\t/**\n\t * @private\n\t * @param {module:engine/model/writer~Writer} writer\n\t * @param {Array.<module:engine/model/element~Element>} blocks\n\t * @param {String} [language]\n\t */\n\t_applyCodeBlock( writer, blocks, language ) {\n\t\tconst schema = this.editor.model.schema;\n\t\tconst allowedBlocks = blocks.filter( block => canBeCodeBlock( schema, block ) );\n\n\t\tfor ( const block of allowedBlocks ) {\n\t\t\twriter.rename( block, 'codeBlock' );\n\t\t\twriter.setAttribute( 'language', language, block );\n\t\t\tschema.removeDisallowedAttributes( [ block ], writer );\n\t\t}\n\n\t\tallowedBlocks.reverse().forEach( ( currentBlock, i ) => {\n\t\t\tconst nextBlock = allowedBlocks[ i + 1 ];\n\n\t\t\tif ( currentBlock.previousSibling === nextBlock ) {\n\t\t\t\twriter.appendElement( 'softBreak', nextBlock );\n\t\t\t\twriter.merge( writer.createPositionBefore( currentBlock ) );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @private\n\t * @param {module:engine/model/writer~Writer} writer\n\t * @param {Array.<module:engine/model/element~Element>} blocks\n\t */\n\t_removeCodeBlock( writer, blocks ) {\n\t\tconst codeBlocks = blocks.filter( block => block.is( 'codeBlock' ) );\n\n\t\tfor ( const block of codeBlocks ) {\n\t\t\tconst range = writer.createRangeOn( block );\n\n\t\t\tfor ( const item of Array.from( range.getItems() ).reverse() ) {\n\t\t\t\tif ( item.is( 'softBreak' ) && item.parent.is( 'codeBlock' ) ) {\n\t\t\t\t\tconst { position } = writer.split( writer.createPositionBefore( item ) );\n\n\t\t\t\t\twriter.rename( position.nodeAfter, 'paragraph' );\n\t\t\t\t\twriter.removeAttribute( 'language', position.nodeAfter );\n\t\t\t\t\twriter.remove( item );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twriter.rename( block, 'paragraph' );\n\t\t\twriter.removeAttribute( 'language', block );\n\t\t}\n\t}\n}\n\nfunction canBeCodeBlock( schema, element ) {\n\tif ( element.is( 'rootElement' ) || schema.isLimit( element ) ) {\n\t\treturn false;\n\t}\n\n\treturn schema.checkChild( element.parent, 'codeBlock' );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module code-block/indentcodeblockcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport {\n\tgetIndentOutdentPositions,\n\tisModelSelectionInCodeBlock\n} from './utils';\n\n/**\n * The code block indentation increase command plugin.\n *\n * @extends module:core/command~Command\n */\nexport default class IndentCodeBlockCommand extends Command {\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * A sequence of characters added to the line when the command is executed.\n\t\t *\n\t\t * @readonly\n\t\t * @private\n\t\t * @member {String}\n\t\t */\n\t\tthis._indentSequence = editor.config.get( 'codeBlock.indentSequence' );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tthis.isEnabled = this._checkEnabled();\n\t}\n\n\t/**\n\t * Executes the command. When the command {@link #isEnabled is enabled}, the indentation of the\n\t * code lines in the selection will be increased.\n\t *\n\t * @fires execute\n\t */\n\texecute() {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\n\t\tmodel.change( writer => {\n\t\t\tconst positions = getIndentOutdentPositions( model );\n\n\t\t\t// Indent all positions, for instance assuming the indent sequence is 4x space (\"    \"):\n\t\t\t//\n\t\t\t//\t\t<codeBlock>^foo</codeBlock>        ->       <codeBlock>    foo</codeBlock>\n\t\t\t//\n\t\t\t//\t\t<codeBlock>foo^bar</codeBlock>     ->       <codeBlock>foo    bar</codeBlock>\n\t\t\t//\n\t\t\t// Also, when there is more than one position:\n\t\t\t//\n\t\t\t//\t\t<codeBlock>\n\t\t\t//\t\t\t^foobar\n\t\t\t//\t\t\t<softBreak></softBreak>\n\t\t\t//\t\t\t^bazqux\n\t\t\t//\t\t</codeBlock>\n\t\t\t//\n\t\t\t//\t\t->\n\t\t\t//\n\t\t\t//\t\t<codeBlock>\n\t\t\t//\t\t\t    foobar\n\t\t\t//\t\t\t<softBreak></softBreak>\n\t\t\t//\t\t\t    bazqux\n\t\t\t//\t\t</codeBlock>\n\t\t\t//\n\t\t\tfor ( const position of positions ) {\n\t\t\t\twriter.insertText( this._indentSequence, position );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Checks whether the command can be enabled in the current context.\n\t *\n\t * @private\n\t * @returns {Boolean} Whether the command should be enabled.\n\t */\n\t_checkEnabled() {\n\t\tif ( !this._indentSequence ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Indent (forward) command is always enabled when there's any code block in the selection\n\t\t// because you can always indent code lines.\n\t\treturn isModelSelectionInCodeBlock( this.editor.model.document.selection );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module code-block/outdentcodeblockcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport {\n\tgetLeadingWhiteSpaces,\n\tgetIndentOutdentPositions,\n\tisModelSelectionInCodeBlock\n} from './utils';\n\n/**\n * The code block indentation decrease command plugin.\n *\n * @extends module:core/command~Command\n */\nexport default class OutdentCodeBlockCommand extends Command {\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * A sequence of characters removed from the line when the command is executed.\n\t\t *\n\t\t * @readonly\n\t\t * @private\n\t\t * @member {String}\n\t\t */\n\t\tthis._indentSequence = editor.config.get( 'codeBlock.indentSequence' );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tthis.isEnabled = this._checkEnabled();\n\t}\n\n\t/**\n\t * Executes the command. When the command {@link #isEnabled is enabled}, the indentation of the\n\t * code lines in the selection will be decreased.\n\t *\n\t * @fires execute\n\t */\n\texecute() {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\n\t\tmodel.change( writer => {\n\t\t\tconst positions = getIndentOutdentPositions( model );\n\n\t\t\t// Outdent all positions, for instance assuming the indent sequence is 4x space (\"    \"):\n\t\t\t//\n\t\t\t//\t\t<codeBlock>^foo</codeBlock>         ->       <codeBlock>foo</codeBlock>\n\t\t\t//\n\t\t\t//\t\t<codeBlock>    ^bar</codeBlock>     ->       <codeBlock>bar</codeBlock>\n\t\t\t//\n\t\t\t// Also, when there is more than one position:\n\t\t\t//\n\t\t\t//\t\t<codeBlock>\n\t\t\t//\t\t\t    ^foobar\n\t\t\t//\t\t\t<softBreak></softBreak>\n\t\t\t//\t\t\t    ^bazqux\n\t\t\t//\t\t</codeBlock>\n\t\t\t//\n\t\t\t//\t\t->\n\t\t\t//\n\t\t\t//\t\t<codeBlock>\n\t\t\t//\t\t\tfoobar\n\t\t\t//\t\t\t<softBreak></softBreak>\n\t\t\t//\t\t\tbazqux\n\t\t\t//\t\t</codeBlock>\n\t\t\tfor ( const position of positions ) {\n\t\t\t\tconst range = getLastOutdentableSequenceRange( this.editor.model, position, this._indentSequence );\n\n\t\t\t\tif ( range ) {\n\t\t\t\t\twriter.remove( range );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Checks whether the command can be enabled in the current context.\n\t *\n\t * @private\n\t * @returns {Boolean} Whether the command should be enabled.\n\t */\n\t_checkEnabled() {\n\t\tif ( !this._indentSequence ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst model = this.editor.model;\n\n\t\tif ( !isModelSelectionInCodeBlock( model.document.selection ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Outdent command can execute only when there is an indent character sequence\n\t\t// in some of the lines.\n\t\treturn getIndentOutdentPositions( model ).some( position => {\n\t\t\treturn getLastOutdentableSequenceRange( model, position, this._indentSequence );\n\t\t} );\n\t}\n}\n\n// For a position coming from `getIndentOutdentPositions()`, it returns the range representing\n// the last occurrence of the indent sequence among the leading whitespaces of the code line the\n// position represents.\n//\n// For instance, assuming the indent sequence is 4x space (\"    \"):\n//\n//\t\t<codeBlock>foo^</codeBlock>                                 ->          null\n//\t\t<codeBlock>foo^<softBreak></softBreak>bar</codeBlock>       ->          null\n//\t\t<codeBlock>  ^foo</codeBlock>                               ->          null\n//\t\t<codeBlock>        ^foo</codeBlock>                         ->          <codeBlock>    [    ]foo</codeBlock>\n//\t\t<codeBlock>    ^foo    bar</codeBlock>                      ->          <codeBlock>[    ]foo    bar</codeBlock>\n//\n// @param {<module:engine/model/model~Model>} model\n// @param {<module:engine/model/position~Position>} position\n// @param {String} sequence\n// @returns {<module:engine/model/range~Range>|null}\nfunction getLastOutdentableSequenceRange( model, position, sequence ) {\n\t// Positions start before each text node (code line). Get the node corresponding to the position.\n\tconst nodeAtPosition = getCodeLineTextNodeAtPosition( position );\n\n\tif ( !nodeAtPosition ) {\n\t\treturn null;\n\t}\n\n\tconst leadingWhiteSpaces = getLeadingWhiteSpaces( nodeAtPosition );\n\tconst lastIndexOfSequence = leadingWhiteSpaces.lastIndexOf( sequence );\n\n\t// For instance, assuming the indent sequence is 4x space (\"    \"):\n\t//\n\t//\t\t<codeBlock>    \t^foo</codeBlock>           ->             null\n\t//\n\tif ( lastIndexOfSequence + sequence.length !== leadingWhiteSpaces.length ) {\n\t\treturn null;\n\t}\n\n\t// For instance, assuming the indent sequence is 4x space (\"    \"):\n\t//\n\t//\t\t<codeBlock>  ^foo</codeBlock>           ->             null\n\t//\n\tif ( lastIndexOfSequence === -1 ) {\n\t\treturn null;\n\t}\n\n\tconst { parent, startOffset } = nodeAtPosition;\n\n\t// Create a range that contains the **last** indent sequence among the leading whitespaces\n\t// of the line.\n\t//\n\t// For instance, assuming the indent sequence is 4x space (\"    \"):\n\t//\n\t//\t\t<codeBlock>        ^foo</codeBlock>      ->     <codeBlock>    [    ]foo</codeBlock>\n\t//\n\treturn model.createRange(\n\t\tmodel.createPositionAt( parent, startOffset + lastIndexOfSequence ),\n\t\tmodel.createPositionAt( parent, startOffset + lastIndexOfSequence + sequence.length )\n\t);\n}\n\nfunction getCodeLineTextNodeAtPosition( position ) {\n\t// Positions start before each text node (code line). Get the node corresponding to the position.\n\tlet nodeAtPosition = position.parent.getChild( position.index );\n\n\t// <codeBlock>foo^</codeBlock>\n\t// <codeBlock>foo^<softBreak></softBreak>bar</codeBlock>\n\tif ( !nodeAtPosition || nodeAtPosition.is( 'softBreak' ) ) {\n\t\tnodeAtPosition = position.nodeBefore;\n\t}\n\n\t// <codeBlock>^</codeBlock>\n\t// <codeBlock>foo^<softBreak></softBreak>bar</codeBlock>\n\tif ( !nodeAtPosition || nodeAtPosition.is( 'softBreak' ) ) {\n\t\treturn null;\n\t}\n\n\treturn nodeAtPosition;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module code-block/converters\n */\n\nimport {\n\trawSnippetTextToModelDocumentFragment,\n\tgetPropertyAssociation\n} from './utils';\n\n/**\n * A model-to-view (both editing and data) converter for the `codeBlock` element.\n *\n * Sample input:\n *\n *\t\t<codeBlock language=\"javascript\">foo();<softBreak></softBreak>bar();</codeBlock>\n *\n * Sample output (editing):\n *\n *\t\t<pre data-language=\"JavaScript\"><code class=\"language-javascript\">foo();<br />bar();</code></pre>\n *\n * Sample output (data, see {@link module:code-block/converters~modelToDataViewSoftBreakInsertion}):\n *\n *\t\t<pre><code class=\"language-javascript\">foo();\\nbar();</code></pre>\n *\n * @param {module:engine/model/model~Model} model\n * @param {Array.<module:code-block/codeblock~CodeBlockLanguageDefinition>} languageDefs The normalized language\n * configuration passed to the feature.\n * @param {Boolean} [useLabels=false] When `true`, the `<pre>` element will get a `data-language` attribute with a\n * human–readable label of the language. Used only in the editing.\n * @returns {Function} Returns a conversion callback.\n */\nexport function modelToViewCodeBlockInsertion( model, languageDefs, useLabels = false ) {\n\t// Language CSS classes:\n\t//\n\t//\t\t{\n\t//\t\t\tphp: 'language-php',\n\t//\t\t\tpython: 'language-python',\n\t//\t\t\tjavascript: 'js',\n\t//\t\t\t...\n\t//\t\t}\n\tconst languagesToClasses = getPropertyAssociation( languageDefs, 'language', 'class' );\n\n\t// Language labels:\n\t//\n\t//\t\t{\n\t//\t\t\tphp: 'PHP',\n\t//\t\t\tpython: 'Python',\n\t//\t\t\tjavascript: 'JavaScript',\n\t//\t\t\t...\n\t//\t\t}\n\tconst languagesToLabels = getPropertyAssociation( languageDefs, 'language', 'label' );\n\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst { writer, mapper, consumable } = conversionApi;\n\n\t\tif ( !consumable.consume( data.item, 'insert' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst codeBlockLanguage = data.item.getAttribute( 'language' );\n\t\tconst targetViewPosition = mapper.toViewPosition( model.createPositionBefore( data.item ) );\n\t\tconst preAttributes = {};\n\n\t\t// Attributes added only in the editing view.\n\t\tif ( useLabels ) {\n\t\t\tpreAttributes[ 'data-language' ] = languagesToLabels[ codeBlockLanguage ];\n\t\t\tpreAttributes.spellcheck = 'false';\n\t\t}\n\n\t\tconst pre = writer.createContainerElement( 'pre', preAttributes );\n\t\tconst code = writer.createContainerElement( 'code', {\n\t\t\tclass: languagesToClasses[ codeBlockLanguage ] || null\n\t\t} );\n\n\t\twriter.insert( writer.createPositionAt( pre, 0 ), code );\n\t\twriter.insert( targetViewPosition, pre );\n\t\tmapper.bindElements( data.item, code );\n\t};\n}\n\n/**\n * A model-to-data view converter for the new line (`softBreak`) separator.\n *\n * Sample input:\n *\n *\t\t<codeBlock ...>foo();<softBreak></softBreak>bar();</codeBlock>\n *\n * Sample output:\n *\n *\t\t<pre><code ...>foo();\\nbar();</code></pre>\n *\n * @param {module:engine/model/model~Model} model\n * @returns {Function} Returns a conversion callback.\n */\nexport function modelToDataViewSoftBreakInsertion( model ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\tif ( data.item.parent.name !== 'codeBlock' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { writer, mapper, consumable } = conversionApi;\n\n\t\tif ( !consumable.consume( data.item, 'insert' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst position = mapper.toViewPosition( model.createPositionBefore( data.item ) );\n\n\t\twriter.insert( position, writer.createText( '\\n' ) );\n\t};\n}\n\n/**\n * A view-to-model converter for `<pre>` with the `<code>` HTML.\n *\n * Sample input:\n *\n *\t\t<pre><code class=\"language-javascript\">foo();\\nbar();</code></pre>\n *\n * Sample output:\n *\n *\t\t<codeBlock language=\"javascript\">foo();<softBreak></softBreak>bar();</codeBlock>\n *\n * @param {module:engine/controller/datacontroller~DataController} dataController\n * @param {Array.<module:code-block/codeblock~CodeBlockLanguageDefinition>} languageDefs The normalized language\n * configuration passed to the feature.\n * @returns {Function} Returns a conversion callback.\n */\nexport function dataViewToModelCodeBlockInsertion( dataController, languageDefs ) {\n\t// Language names associated with CSS classes:\n\t//\n\t//\t\t{\n\t//\t\t\t'language-php': 'php',\n\t//\t\t\t'language-python': 'python',\n\t//\t\t\tjs: 'javascript',\n\t//\t\t\t...\n\t//\t\t}\n\tconst classesToLanguages = getPropertyAssociation( languageDefs, 'class', 'language' );\n\tconst defaultLanguageName = languageDefs[ 0 ].language;\n\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst viewItem = data.viewItem;\n\t\tconst viewChild = viewItem.getChild( 0 );\n\n\t\tif ( !viewChild || !viewChild.is( 'code' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { consumable, writer } = conversionApi;\n\n\t\tif ( !consumable.test( viewItem, { name: true } ) || !consumable.test( viewChild, { name: true } ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst codeBlock = writer.createElement( 'codeBlock' );\n\t\tconst viewChildClasses = [ ...viewChild.getClassNames() ];\n\n\t\t// As we're to associate each class with a model language, a lack of class (empty class) can be\n\t\t// also associated with a language if the language definition was configured so. Pushing an empty\n\t\t// string to make sure the association will work.\n\t\tif ( !viewChildClasses.length ) {\n\t\t\tviewChildClasses.push( '' );\n\t\t}\n\n\t\t// Figure out if any of the <code> element's class names is a valid programming\n\t\t// language class. If so, use it on the model element (becomes the language of the entire block).\n\t\tfor ( const className of viewChildClasses ) {\n\t\t\tconst language = classesToLanguages[ className ];\n\n\t\t\tif ( language ) {\n\t\t\t\twriter.setAttribute( 'language', language, codeBlock );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// If no language value was set, use the default language from the config.\n\t\tif ( !codeBlock.hasAttribute( 'language' ) ) {\n\t\t\twriter.setAttribute( 'language', defaultLanguageName, codeBlock );\n\t\t}\n\n\t\tconst stringifiedElement = dataController.processor.toData( viewChild );\n\t\tconst textData = extractDataFromCodeElement( stringifiedElement );\n\t\tconst fragment = rawSnippetTextToModelDocumentFragment( writer, textData );\n\n\t\twriter.append( fragment, codeBlock );\n\n\t\t// Let's see if the codeBlock can be inserted the current modelCursor.\n\t\tconst splitResult = conversionApi.splitToAllowedParent( codeBlock, data.modelCursor );\n\n\t\t// When there is no split result it means that we can't insert element to model tree,\n\t\t// so let's skip it.\n\t\tif ( !splitResult ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Insert element on allowed position.\n\t\twriter.insert( codeBlock, splitResult.position );\n\n\t\tconsumable.consume( viewItem, { name: true } );\n\t\tconsumable.consume( viewChild, { name: true } );\n\n\t\tconst parts = conversionApi.getSplitParts( codeBlock );\n\n\t\t// Set conversion result range.\n\t\tdata.modelRange = writer.createRange(\n\t\t\tconversionApi.writer.createPositionBefore( codeBlock ),\n\t\t\tconversionApi.writer.createPositionAfter( parts[ parts.length - 1 ] )\n\t\t);\n\n\t\t// If we had to split parent to insert our element then we want to continue conversion inside\n\t\t// the split parent.\n\t\t//\n\t\t// before split:\n\t\t//\n\t\t//\t\t<allowed><notAllowed>[]</notAllowed></allowed>\n\t\t//\n\t\t// after split:\n\t\t//\n\t\t//\t\t<allowed>\n\t\t//\t\t\t<notAllowed></notAllowed>\n\t\t//\t\t\t<converted></converted>\n\t\t//\t\t\t<notAllowed>[]</notAllowed>\n\t\t//\t\t</allowed>\n\t\tif ( splitResult.cursorParent ) {\n\t\t\tdata.modelCursor = writer.createPositionAt( splitResult.cursorParent, 0 );\n\t\t} else {\n\t\t\t// Otherwise just continue after the inserted element.\n\t\t\tdata.modelCursor = data.modelRange.end;\n\t\t}\n\t};\n}\n\n// Returns content of `<pre></pre>` with unescaped html inside.\n//\n// @param {String} stringifiedElement\nfunction extractDataFromCodeElement( stringifiedElement ) {\n\tconst data = new RegExp( /^<code[^>]*>([\\S\\s]*)<\\/code>$/ ).exec( stringifiedElement )[ 1 ];\n\n\treturn data\n\t\t.replace( /&lt;/g, '<' )\n\t\t.replace( /&gt;/g, '>' );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module code-block/codeblockediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ShiftEnter from '@ckeditor/ckeditor5-enter/src/shiftenter';\nimport CodeBlockCommand from './codeblockcommand';\nimport IndentCodeBlockCommand from './indentcodeblockcommand';\nimport OutdentCodeBlockCommand from './outdentcodeblockcommand';\nimport {\n\tgetNormalizedAndLocalizedLanguageDefinitions,\n\tgetLeadingWhiteSpaces,\n\trawSnippetTextToModelDocumentFragment\n} from './utils';\nimport {\n\tmodelToViewCodeBlockInsertion,\n\tmodelToDataViewSoftBreakInsertion,\n\tdataViewToModelCodeBlockInsertion\n} from './converters';\n\nconst DEFAULT_ELEMENT = 'paragraph';\n\n/**\n * The editing part of the code block feature.\n *\n * Introduces the `'codeBlock'` command and the `'codeBlock'` model element.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class CodeBlockEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'CodeBlockEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ShiftEnter ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\teditor.config.define( 'codeBlock', {\n\t\t\tlanguages: [\n\t\t\t\t{ language: 'plaintext', label: 'Plain text' },\n\t\t\t\t{ language: 'c', label: 'C' },\n\t\t\t\t{ language: 'cs', label: 'C#' },\n\t\t\t\t{ language: 'cpp', label: 'C++' },\n\t\t\t\t{ language: 'css', label: 'CSS' },\n\t\t\t\t{ language: 'diff', label: 'Diff' },\n\t\t\t\t{ language: 'xml', label: 'HTML/XML' },\n\t\t\t\t{ language: 'java', label: 'Java' },\n\t\t\t\t{ language: 'javascript', label: 'JavaScript' },\n\t\t\t\t{ language: 'php', label: 'PHP' },\n\t\t\t\t{ language: 'python', label: 'Python' },\n\t\t\t\t{ language: 'ruby', label: 'Ruby' },\n\t\t\t\t{ language: 'typescript', label: 'TypeScript' },\n\t\t\t],\n\n\t\t\t// A single tab.\n\t\t\tindentSequence: '\\t'\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst schema = editor.model.schema;\n\t\tconst model = editor.model;\n\n\t\tconst normalizedLanguagesDefs = getNormalizedAndLocalizedLanguageDefinitions( editor );\n\n\t\t// The main command.\n\t\teditor.commands.add( 'codeBlock', new CodeBlockCommand( editor ) );\n\n\t\t// Commands that change the indentation.\n\t\teditor.commands.add( 'indentCodeBlock', new IndentCodeBlockCommand( editor ) );\n\t\teditor.commands.add( 'outdentCodeBlock', new OutdentCodeBlockCommand( editor ) );\n\n\t\tconst getCommandExecuter = commandName => {\n\t\t\treturn ( data, cancel ) => {\n\t\t\t\tconst command = this.editor.commands.get( commandName );\n\n\t\t\t\tif ( command.isEnabled ) {\n\t\t\t\t\tthis.editor.execute( commandName );\n\t\t\t\t\tcancel();\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\n\t\teditor.keystrokes.set( 'Tab', getCommandExecuter( 'indentCodeBlock' ) );\n\t\teditor.keystrokes.set( 'Shift+Tab', getCommandExecuter( 'outdentCodeBlock' ) );\n\n\t\tschema.register( 'codeBlock', {\n\t\t\tallowWhere: '$block',\n\t\t\tisBlock: true,\n\t\t\tallowAttributes: [ 'language' ]\n\t\t} );\n\n\t\tschema.extend( '$text', {\n\t\t\tallowIn: 'codeBlock'\n\t\t} );\n\n\t\t// Disallow all attributes on $text inside `codeBlock`.\n\t\tschema.addAttributeCheck( context => {\n\t\t\tif ( context.endsWith( 'codeBlock $text' ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} );\n\n\t\t// Conversion.\n\t\teditor.editing.downcastDispatcher.on( 'insert:codeBlock', modelToViewCodeBlockInsertion( model, normalizedLanguagesDefs, true ) );\n\t\teditor.data.downcastDispatcher.on( 'insert:codeBlock', modelToViewCodeBlockInsertion( model, normalizedLanguagesDefs ) );\n\t\teditor.data.downcastDispatcher.on( 'insert:softBreak', modelToDataViewSoftBreakInsertion( model ), { priority: 'high' } );\n\t\teditor.data.upcastDispatcher.on( 'element:pre', dataViewToModelCodeBlockInsertion( editor.data, normalizedLanguagesDefs ) );\n\n\t\t// Intercept the clipboard input (paste) when the selection is anchored in the code block and force the clipboard\n\t\t// data to be pasted as a single plain text. Otherwise, the code lines will split the code block and\n\t\t// \"spill out\" as separate paragraphs.\n\t\tthis.listenTo( editor.editing.view.document, 'clipboardInput', ( evt, data ) => {\n\t\t\tconst modelSelection = model.document.selection;\n\n\t\t\tif ( !modelSelection.anchor.parent.is( 'codeBlock' ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst text = data.dataTransfer.getData( 'text/plain' );\n\n\t\t\tmodel.change( writer => {\n\t\t\t\tmodel.insertContent( rawSnippetTextToModelDocumentFragment( writer, text ), modelSelection );\n\t\t\t\tevt.stop();\n\t\t\t} );\n\t\t} );\n\n\t\t// Make sure multi–line selection is always wrapped in a code block when `getSelectedContent()`\n\t\t// is used (e.g. clipboard copy). Otherwise, only the raw text will be copied to the clipboard and,\n\t\t// upon next paste, this bare text will not be inserted as a code block, which is not the best UX.\n\t\t// Similarly, when the selection in a single line, the selected content should be an inline code\n\t\t// so it can be pasted later on and retain it's preformatted nature.\n\t\tthis.listenTo( model, 'getSelectedContent', ( evt, [ selection ] ) => {\n\t\t\tconst anchor = selection.anchor;\n\n\t\t\tif ( selection.isCollapsed || !anchor.parent.is( 'codeBlock' ) || !anchor.hasSameParentAs( selection.focus ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmodel.change( writer => {\n\t\t\t\tconst docFragment = evt.return;\n\n\t\t\t\t// fo[o<softBreak></softBreak>b]ar  ->   <codeBlock language=\"...\">[o<softBreak></softBreak>b]<codeBlock>\n\t\t\t\tif ( docFragment.childCount > 1 || selection.containsEntireContent( anchor.parent ) ) {\n\t\t\t\t\tconst codeBlock = writer.createElement( 'codeBlock', anchor.parent.getAttributes() );\n\t\t\t\t\twriter.append( docFragment, codeBlock );\n\n\t\t\t\t\tconst newDocumentFragment = writer.createDocumentFragment();\n\t\t\t\t\twriter.append( codeBlock, newDocumentFragment );\n\n\t\t\t\t\tevt.return = newDocumentFragment;\n\t\t\t\t}\n\n\t\t\t\t// \"f[oo]\"                          ->   <$text code=\"true\">oo</text>\n\t\t\t\telse {\n\t\t\t\t\tconst textNode = docFragment.getChild( 0 );\n\n\t\t\t\t\tif ( schema.checkAttribute( textNode, 'code' ) ) {\n\t\t\t\t\t\twriter.setAttribute( 'code', true, textNode );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tafterInit() {\n\t\tconst editor = this.editor;\n\t\tconst commands = editor.commands;\n\t\tconst indent = commands.get( 'indent' );\n\t\tconst outdent = commands.get( 'outdent' );\n\n\t\tif ( indent ) {\n\t\t\tindent.registerChildCommand( commands.get( 'indentCodeBlock' ) );\n\t\t}\n\n\t\tif ( outdent ) {\n\t\t\toutdent.registerChildCommand( commands.get( 'outdentCodeBlock' ) );\n\t\t}\n\n\t\t// Customize the response to the <kbd>Enter</kbd> and <kbd>Shift</kbd>+<kbd>Enter</kbd>\n\t\t// key press when the selection is in the code block. Upon enter key press we can either\n\t\t// leave the block if it's \"two enters\" in a row or create a new code block line, preserving\n\t\t// previous line's indentation.\n\t\tthis.listenTo( editor.editing.view.document, 'enter', ( evt, data ) => {\n\t\t\tconst positionParent = editor.model.document.selection.getLastPosition().parent;\n\n\t\t\tif ( !positionParent.is( 'codeBlock' ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tleaveBlockStartOnEnter( editor, data.isSoft ) ||\n\t\t\tleaveBlockEndOnEnter( editor, data.isSoft ) ||\n\t\t\tbreakLineOnEnter( editor );\n\n\t\t\tdata.preventDefault();\n\t\t\tevt.stop();\n\t\t} );\n\t}\n}\n\n// Normally, when the Enter (or Shift+Enter) key is pressed, a soft line break is to be added to the\n// code block. Let's try to follow the indentation of the previous line when possible, for instance:\n//\n//\t\t// Before pressing enter (or shift enter)\n//\t\t<codeBlock>\n//\t\t\"    foo()\"[]                   // Indent of 4 spaces.\n//\t\t</codeBlock>\n//\n//\t\t// After pressing:\n//\t\t<codeBlock>\n//\t\t\"    foo()\"                 // Indent of 4 spaces.\n//\t\t<softBreak></softBreak>     // A new soft break created by pressing enter.\n//\t\t\"    \"[]                    // Retain the indent of 4 spaces.\n//\t\t</codeBlock>\n//\n// @param {module:core/editor/editor~Editor} editor\nfunction breakLineOnEnter( editor ) {\n\tconst model = editor.model;\n\tconst modelDoc = model.document;\n\tconst lastSelectionPosition = modelDoc.selection.getLastPosition();\n\tconst node = lastSelectionPosition.nodeBefore || lastSelectionPosition.textNode;\n\tlet leadingWhiteSpaces;\n\n\t// Figure out the indentation (white space chars) at the beginning of the line.\n\tif ( node && node.is( 'text' ) ) {\n\t\tleadingWhiteSpaces = getLeadingWhiteSpaces( node );\n\t}\n\n\t// Keeping everything in a change block for a single undo step.\n\teditor.model.change( writer => {\n\t\teditor.execute( 'shiftEnter' );\n\n\t\t// If the line before being broken in two had some indentation, let's retain it\n\t\t// in the new line.\n\t\tif ( leadingWhiteSpaces ) {\n\t\t\twriter.insertText( leadingWhiteSpaces, modelDoc.selection.anchor );\n\t\t}\n\t} );\n}\n\n// Leave the code block when Enter (but NOT Shift+Enter) has been pressed twice at the beginning\n// of the code block:\n//\n//\t\t// Before:\n//\t\t<codeBlock>[]<softBreak></softBreak>foo</codeBlock>\n//\n//\t\t// After pressing:\n//\t\t<paragraph>[]</paragraph><codeBlock>foo</codeBlock>\n//\n// @param {module:core/editor/editor~Editor} editor\n// @param {Boolean} isSoftEnter When `true`, enter was pressed along with <kbd>Shift</kbd>.\n// @returns {Boolean} `true` when selection left the block. `false` if stayed.\nfunction leaveBlockStartOnEnter( editor, isSoftEnter ) {\n\tconst model = editor.model;\n\tconst modelDoc = model.document;\n\tconst view = editor.editing.view;\n\tconst lastSelectionPosition = modelDoc.selection.getLastPosition();\n\tconst nodeAfter = lastSelectionPosition.nodeAfter;\n\n\tif ( isSoftEnter || !modelDoc.selection.isCollapsed || !lastSelectionPosition.isAtStart ) {\n\t\treturn false;\n\t}\n\n\tif ( !nodeAfter || !nodeAfter.is( 'softBreak' ) ) {\n\t\treturn false;\n\t}\n\n\t// We're doing everything in a single change block to have a single undo step.\n\teditor.model.change( writer => {\n\t\t// \"Clone\" the <codeBlock> in the standard way.\n\t\teditor.execute( 'enter' );\n\n\t\t// The cloned block exists now before the original code block.\n\t\tconst newBlock = modelDoc.selection.anchor.parent.previousSibling;\n\n\t\t// Make the cloned <codeBlock> a regular <paragraph> (with clean attributes, so no language).\n\t\twriter.rename( newBlock, DEFAULT_ELEMENT );\n\t\twriter.setSelection( newBlock, 'in' );\n\t\teditor.model.schema.removeDisallowedAttributes( [ newBlock ], writer );\n\n\t\t// Remove the <softBreak> that originally followed the selection position.\n\t\twriter.remove( nodeAfter );\n\t} );\n\n\t// Eye candy.\n\tview.scrollToTheSelection();\n\n\treturn true;\n}\n\n// Leave the code block when Enter (but NOT Shift+Enter) has been pressed twice at the end\n// of the code block:\n//\n//\t\t// Before:\n//\t\t<codeBlock>foo[]</codeBlock>\n//\n//\t\t// After first press:\n//\t\t<codeBlock>foo<softBreak></softBreak>[]</codeBlock>\n//\n//\t\t// After second press:\n//\t\t<codeBlock>foo</codeBlock><paragraph>[]</paragraph>\n//\n// @param {module:core/editor/editor~Editor} editor\n// @param {Boolean} isSoftEnter When `true`, enter was pressed along with <kbd>Shift</kbd>.\n// @returns {Boolean} `true` when selection left the block. `false` if stayed.\nfunction leaveBlockEndOnEnter( editor, isSoftEnter ) {\n\tconst model = editor.model;\n\tconst modelDoc = model.document;\n\tconst view = editor.editing.view;\n\tconst lastSelectionPosition = modelDoc.selection.getLastPosition();\n\tconst nodeBefore = lastSelectionPosition.nodeBefore;\n\n\tlet emptyLineRangeToRemoveOnEnter;\n\n\tif ( isSoftEnter || !modelDoc.selection.isCollapsed || !lastSelectionPosition.isAtEnd || !nodeBefore ) {\n\t\treturn false;\n\t}\n\n\t// When the position is directly preceded by a soft break\n\t//\n\t//\t\t<codeBlock>foo<softBreak></softBreak>[]</codeBlock>\n\t//\n\t// it creates the following range that will be cleaned up before leaving:\n\t//\n\t//\t\t<codeBlock>foo[<softBreak></softBreak>]</codeBlock>\n\t//\n\tif ( nodeBefore.is( 'softBreak' ) ) {\n\t\temptyLineRangeToRemoveOnEnter = model.createRangeOn( nodeBefore );\n\t}\n\n\t// When there's some text before the position made purely of white–space characters\n\t//\n\t//\t\t<codeBlock>foo<softBreak></softBreak>    []</codeBlock>\n\t//\n\t// but NOT when it's the first one of the kind\n\t//\n\t//\t\t<codeBlock>    []</codeBlock>\n\t//\n\t// it creates the following range to clean up before leaving:\n\t//\n\t//\t\t<codeBlock>foo[<softBreak></softBreak>    ]</codeBlock>\n\t//\n\telse if (\n\t\tnodeBefore.is( 'text' ) &&\n\t\t!nodeBefore.data.match( /\\S/ ) &&\n\t\tnodeBefore.previousSibling &&\n\t\tnodeBefore.previousSibling.is( 'softBreak' )\n\t) {\n\t\temptyLineRangeToRemoveOnEnter = model.createRange(\n\t\t\tmodel.createPositionBefore( nodeBefore.previousSibling ), model.createPositionAfter( nodeBefore )\n\t\t);\n\t}\n\n\t// Not leaving the block in the following cases:\n\t//\n\t//\t\t<codeBlock>    []</codeBlock>\n\t//\t\t<codeBlock>  a []</codeBlock>\n\t//\t\t<codeBlock>foo<softBreak></softBreak>bar[]</codeBlock>\n\t//\t\t<codeBlock>foo<softBreak></softBreak> a []</codeBlock>\n\t//\n\telse {\n\t\treturn false;\n\t}\n\n\t// We're doing everything in a single change block to have a single undo step.\n\teditor.model.change( writer => {\n\t\t// Remove the last <softBreak> and all white space characters that followed it.\n\t\twriter.remove( emptyLineRangeToRemoveOnEnter );\n\n\t\t// \"Clone\" the <codeBlock> in the standard way.\n\t\teditor.execute( 'enter' );\n\n\t\tconst newBlock = modelDoc.selection.anchor.parent;\n\n\t\t// Make the cloned <codeBlock> a regular <paragraph> (with clean attributes, so no language).\n\t\twriter.rename( newBlock, DEFAULT_ELEMENT );\n\t\teditor.model.schema.removeDisallowedAttributes( [ newBlock ], writer );\n\t} );\n\n\t// Eye candy.\n\tview.scrollToTheSelection();\n\n\treturn true;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/model\n */\n\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport { extend } from 'lodash-es';\n\n/**\n * The base MVC model class.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class Model {\n\t/**\n\t * Creates a new Model instance.\n\t *\n\t * @param {Object} [attributes] The model state attributes to be defined during the instance creation.\n\t * @param {Object} [properties] The (out of state) properties to be appended to the instance during creation.\n\t */\n\tconstructor( attributes, properties ) {\n\t\t// Extend this instance with the additional (out of state) properties.\n\t\tif ( properties ) {\n\t\t\textend( this, properties );\n\t\t}\n\n\t\t// Initialize the attributes.\n\t\tif ( attributes ) {\n\t\t\tthis.set( attributes );\n\t\t}\n\t}\n}\n\nmix( Model, ObservableMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/dropdown/button/splitbuttonview\n */\n\nimport View from '../../view';\nimport ButtonView from '../../button/buttonview';\n\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\n\nimport dropdownArrowIcon from '../../../theme/icons/dropdown-arrow.svg';\n\nimport '../../../theme/components/dropdown/splitbutton.css';\n\n/**\n * The split button view class.\n *\n *\t\tconst view = new SplitButtonView();\n *\n *\t\tview.set( {\n *\t\t\tlabel: 'A button',\n *\t\t\tkeystroke: 'Ctrl+B',\n *\t\t\ttooltip: true\n *\t\t} );\n *\n *\t\tview.render();\n *\n *\t\tdocument.body.append( view.element );\n *\n * Also see the {@link module:ui/dropdown/utils~createDropdown `createDropdown()` util}.\n *\n * @implements module:ui/dropdown/button/dropdownbutton~DropdownButton\n * @extends module:ui/view~View\n */\nexport default class SplitButtonView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t// Implement the Button interface.\n\t\tthis.set( 'icon' );\n\t\tthis.set( 'isEnabled', true );\n\t\tthis.set( 'isOn', false );\n\t\tthis.set( 'isToggleable', false );\n\t\tthis.set( 'isVisible', true );\n\t\tthis.set( 'keystroke' );\n\t\tthis.set( 'label' );\n\t\tthis.set( 'tabindex', -1 );\n\t\tthis.set( 'tooltip' );\n\t\tthis.set( 'tooltipPosition', 's' );\n\t\tthis.set( 'type', 'button' );\n\t\tthis.set( 'withText', false );\n\n\t\t/**\n\t\t * Collection of the child views inside of the split button {@link #element}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.children = this.createCollection();\n\n\t\t/**\n\t\t * A main button of split button.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/button/buttonview~ButtonView}\n\t\t */\n\t\tthis.actionView = this._createActionView();\n\n\t\t/**\n\t\t * A secondary button of split button that opens dropdown.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/button/buttonview~ButtonView}\n\t\t */\n\t\tthis.arrowView = this._createArrowView();\n\n\t\t/**\n\t\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}. It manages\n\t\t * keystrokes of the split button:\n\t\t *\n\t\t * * <kbd>▶</kbd> moves focus to arrow view when action view is focused,\n\t\t * * <kbd>◀</kbd> moves focus to action view when arrow view is focused.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\t/**\n\t\t * Tracks information about DOM focus in the dropdown.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-splitbutton',\n\t\t\t\t\tbind.if( 'isVisible', 'ck-hidden', value => !value ),\n\t\t\t\t\tthis.arrowView.bindTemplate.if( 'isOn', 'ck-splitbutton_open' )\n\t\t\t\t]\n\t\t\t},\n\n\t\t\tchildren: this.children\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tthis.children.add( this.actionView );\n\t\tthis.children.add( this.arrowView );\n\n\t\tthis.focusTracker.add( this.actionView.element );\n\t\tthis.focusTracker.add( this.arrowView.element );\n\n\t\tthis.keystrokes.listenTo( this.element );\n\n\t\t// Overrides toolbar focus cycling behavior.\n\t\tthis.keystrokes.set( 'arrowright', ( evt, cancel ) => {\n\t\t\tif ( this.focusTracker.focusedElement === this.actionView.element ) {\n\t\t\t\tthis.arrowView.focus();\n\n\t\t\t\tcancel();\n\t\t\t}\n\t\t} );\n\n\t\t// Overrides toolbar focus cycling behavior.\n\t\tthis.keystrokes.set( 'arrowleft', ( evt, cancel ) => {\n\t\t\tif ( this.focusTracker.focusedElement === this.arrowView.element ) {\n\t\t\t\tthis.actionView.focus();\n\n\t\t\t\tcancel();\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Focuses the {@link #actionView#element} of the action part of split button.\n\t */\n\tfocus() {\n\t\tthis.actionView.focus();\n\t}\n\n\t/**\n\t * Creates a {@link module:ui/button/buttonview~ButtonView} instance as {@link #actionView} and binds it with main split button\n\t * attributes.\n\t *\n\t * @private\n\t * @returns {module:ui/button/buttonview~ButtonView}\n\t */\n\t_createActionView() {\n\t\tconst actionView = new ButtonView();\n\n\t\tactionView.bind(\n\t\t\t'icon',\n\t\t\t'isEnabled',\n\t\t\t'isOn',\n\t\t\t'isToggleable',\n\t\t\t'keystroke',\n\t\t\t'label',\n\t\t\t'tabindex',\n\t\t\t'tooltip',\n\t\t\t'tooltipPosition',\n\t\t\t'type',\n\t\t\t'withText'\n\t\t).to( this );\n\n\t\tactionView.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-splitbutton__action'\n\t\t\t}\n\t\t} );\n\n\t\tactionView.delegate( 'execute' ).to( this );\n\n\t\treturn actionView;\n\t}\n\n\t/**\n\t * Creates a {@link module:ui/button/buttonview~ButtonView} instance as {@link #arrowView} and binds it with main split button\n\t * attributes.\n\t *\n\t * @private\n\t * @returns {module:ui/button/buttonview~ButtonView}\n\t */\n\t_createArrowView() {\n\t\tconst arrowView = new ButtonView();\n\t\tconst bind = arrowView.bindTemplate;\n\n\t\tarrowView.icon = dropdownArrowIcon;\n\n\t\tarrowView.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-splitbutton__arrow',\n\t\t\t\t'aria-haspopup': true,\n\t\t\t\t'aria-expanded': bind.to( 'isOn', value => String( value ) )\n\t\t\t}\n\t\t} );\n\n\t\tarrowView.bind( 'isEnabled' ).to( this );\n\n\t\tarrowView.delegate( 'execute' ).to( this, 'open' );\n\n\t\treturn arrowView;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module code-block/codeblockui\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport Model from '@ckeditor/ckeditor5-ui/src/model';\nimport SplitButtonView from '@ckeditor/ckeditor5-ui/src/dropdown/button/splitbuttonview';\nimport {\n    createDropdown,\n    addListToDropdown\n} from '@ckeditor/ckeditor5-ui/src/dropdown/utils';\nimport { getNormalizedAndLocalizedLanguageDefinitions } from './utils';\nimport codeBlockIcon from '../theme/icons/codeblock.svg';\nimport '../theme/codeblock.css';\n/**\n * The code block UI plugin.\n *\n * Introduces the `'codeBlock'` dropdown.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class CodeBlockUI extends Plugin {\n    /**\n\t * @inheritDoc\n\t */\n    init() {\n        const editor = this.editor;\n        const t = editor.t;\n        const componentFactory = editor.ui.componentFactory;\n        const normalizedLanguageDefs = getNormalizedAndLocalizedLanguageDefinitions(editor);\n        const defaultLanguageDefinition = normalizedLanguageDefs[0];\n        componentFactory.add('codeBlock', locale => {\n            const command = editor.commands.get('codeBlock');\n            const dropdownView = createDropdown(locale, SplitButtonView);\n            const splitButtonView = dropdownView.buttonView;\n            splitButtonView.set({\n                label: t('f'),\n                tooltip: true,\n                icon: codeBlockIcon,\n                isToggleable: true\n            });\n            splitButtonView.bind('isOn').to(command, 'value', value => !!value);\n            splitButtonView.on('execute', () => {\n                editor.execute('codeBlock', { language: defaultLanguageDefinition.language });\n                editor.editing.view.focus();\n            });\n            dropdownView.on('execute', evt => {\n                editor.execute('codeBlock', {\n                    language: evt.source._codeBlockLanguage,\n                    forceValue: true\n                });\n                editor.editing.view.focus();\n            });\n            dropdownView.class = 'ck-code-block-dropdown';\n            dropdownView.bind('isEnabled').to(command);\n            addListToDropdown(dropdownView, this._getLanguageListItemDefinitions(normalizedLanguageDefs));\n            return dropdownView;\n        });\n    }\n    /**\n\t * A helper returning a collection of the `codeBlock` dropdown items representing languages\n\t * available for the user to choose from.\n\t *\n\t * @private\n\t * @param {Array.<module:code-block/codeblock~CodeBlockLanguageDefinition>} normalizedLanguageDefs\n\t * @returns {Iterable.<module:ui/dropdown/utils~ListDropdownItemDefinition>}\n\t */\n    _getLanguageListItemDefinitions(normalizedLanguageDefs) {\n        const editor = this.editor;\n        const command = editor.commands.get('codeBlock');\n        const itemDefinitions = new Collection();\n        for (const languageDef of normalizedLanguageDefs) {\n            const definition = {\n                type: 'button',\n                model: new Model({\n                    _codeBlockLanguage: languageDef.language,\n                    label: languageDef.label,\n                    withText: true\n                })\n            };\n            definition.model.bind('isOn').to(command, 'value', value => {\n                return value === definition.model._codeBlockLanguage;\n            });\n            itemDefinitions.add(definition);\n        }\n        return itemDefinitions;\n    }\n}","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M12.87 12.61a.75.75 0 01-.089.976l-.085.07-3.154 2.254 3.412 2.414a.75.75 0 01.237.95l-.057.095a.75.75 0 01-.95.237l-.096-.058-4.272-3.022-.003-1.223 4.01-2.867a.75.75 0 011.047.174zm2.795-.231l.095.057 4.011 2.867-.003 1.223-4.272 3.022-.095.058a.75.75 0 01-.88-.151l-.07-.086-.058-.095a.75.75 0 01.15-.88l.087-.07 3.412-2.414-3.154-2.253-.085-.071a.75.75 0 01.862-1.207zM16 0a2 2 0 012 2v9.354l-.663-.492-.837-.001V2a.5.5 0 00-.5-.5H2a.5.5 0 00-.5.5v15a.5.5 0 00.5.5h3.118L7.156 19H2a2 2 0 01-2-2V2a2 2 0 012-2h14zM5.009 15l.003 1H3v-1h2.009zm2.188-2l-1.471 1H5v-1h2.197zM10 11v.095L8.668 12H7v-1h3zm4-2v1H7V9h7zm0-2v1H7V7h7zm-4-2v1H5V5h5zM6 3v1H3V3h3z\\\"/></svg>\"","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module block-quote/blockquotecommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\n\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n\n/**\n * The block quote command plugin.\n *\n * @extends module:core/command~Command\n */\nexport default class BlockQuoteCommand extends Command {\n\t/**\n\t * Whether the selection starts in a block quote.\n\t *\n\t * @observable\n\t * @readonly\n\t * @member {Boolean} #value\n\t */\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tthis.value = this._getValue();\n\t\tthis.isEnabled = this._checkEnabled();\n\t}\n\n\t/**\n\t * Executes the command. When the command {@link #value is on}, all top-most block quotes within\n\t * the selection will be removed. If it is off, all selected blocks will be wrapped with\n\t * a block quote.\n\t *\n\t * @fires execute\n\t * @param {Object} [options] Command options.\n\t * @param {Boolean} [options.forceValue] If set, it will force the command behavior. If `true`, the command will apply a block quote,\n\t * otherwise the command will remove the block quote. If not set, the command will act basing on its current value.\n\t */\n\texecute( options = {} ) {\n\t\tconst model = this.editor.model;\n\t\tconst schema = model.schema;\n\t\tconst selection = model.document.selection;\n\n\t\tconst blocks = Array.from( selection.getSelectedBlocks() );\n\n\t\tconst value = ( options.forceValue === undefined ) ? !this.value : options.forceValue;\n\n\t\tmodel.change( writer => {\n\t\t\tif ( !value ) {\n\t\t\t\tthis._removeQuote( writer, blocks.filter( findQuote ) );\n\t\t\t} else {\n\t\t\t\tconst blocksToQuote = blocks.filter( block => {\n\t\t\t\t\t// Already quoted blocks needs to be considered while quoting too\n\t\t\t\t\t// in order to reuse their <bQ> elements.\n\t\t\t\t\treturn findQuote( block ) || checkCanBeQuoted( schema, block );\n\t\t\t\t} );\n\n\t\t\t\tthis._applyQuote( writer, blocksToQuote );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Checks the command's {@link #value}.\n\t *\n\t * @private\n\t * @returns {Boolean} The current value.\n\t */\n\t_getValue() {\n\t\tconst selection = this.editor.model.document.selection;\n\n\t\tconst firstBlock = first( selection.getSelectedBlocks() );\n\n\t\t// In the current implementation, the block quote must be an immediate parent of a block element.\n\t\treturn !!( firstBlock && findQuote( firstBlock ) );\n\t}\n\n\t/**\n\t * Checks whether the command can be enabled in the current context.\n\t *\n\t * @private\n\t * @returns {Boolean} Whether the command should be enabled.\n\t */\n\t_checkEnabled() {\n\t\tif ( this.value ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst selection = this.editor.model.document.selection;\n\t\tconst schema = this.editor.model.schema;\n\n\t\tconst firstBlock = first( selection.getSelectedBlocks() );\n\n\t\tif ( !firstBlock ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn checkCanBeQuoted( schema, firstBlock );\n\t}\n\n\t/**\n\t * Removes the quote from given blocks.\n\t *\n\t * If blocks which are supposed to be \"unquoted\" are in the middle of a quote,\n\t * start it or end it, then the quote will be split (if needed) and the blocks\n\t * will be moved out of it, so other quoted blocks remained quoted.\n\t *\n\t * @private\n\t * @param {module:engine/model/writer~Writer} writer\n\t * @param {Array.<module:engine/model/element~Element>} blocks\n\t */\n\t_removeQuote( writer, blocks ) {\n\t\t// Unquote all groups of block. Iterate in the reverse order to not break following ranges.\n\t\tgetRangesOfBlockGroups( writer, blocks ).reverse().forEach( groupRange => {\n\t\t\tif ( groupRange.start.isAtStart && groupRange.end.isAtEnd ) {\n\t\t\t\twriter.unwrap( groupRange.start.parent );\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// The group of blocks are at the beginning of an <bQ> so let's move them left (out of the <bQ>).\n\t\t\tif ( groupRange.start.isAtStart ) {\n\t\t\t\tconst positionBefore = writer.createPositionBefore( groupRange.start.parent );\n\n\t\t\t\twriter.move( groupRange, positionBefore );\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// The blocks are in the middle of an <bQ> so we need to split the <bQ> after the last block\n\t\t\t// so we move the items there.\n\t\t\tif ( !groupRange.end.isAtEnd ) {\n\t\t\t\twriter.split( groupRange.end );\n\t\t\t}\n\n\t\t\t// Now we are sure that groupRange.end.isAtEnd is true, so let's move the blocks right.\n\n\t\t\tconst positionAfter = writer.createPositionAfter( groupRange.end.parent );\n\n\t\t\twriter.move( groupRange, positionAfter );\n\t\t} );\n\t}\n\n\t/**\n\t * Applies the quote to given blocks.\n\t *\n\t * @private\n\t * @param {module:engine/model/writer~Writer} writer\n\t * @param {Array.<module:engine/model/element~Element>} blocks\n\t */\n\t_applyQuote( writer, blocks ) {\n\t\tconst quotesToMerge = [];\n\n\t\t// Quote all groups of block. Iterate in the reverse order to not break following ranges.\n\t\tgetRangesOfBlockGroups( writer, blocks ).reverse().forEach( groupRange => {\n\t\t\tlet quote = findQuote( groupRange.start );\n\n\t\t\tif ( !quote ) {\n\t\t\t\tquote = writer.createElement( 'blockQuote' );\n\n\t\t\t\twriter.wrap( groupRange, quote );\n\t\t\t}\n\n\t\t\tquotesToMerge.push( quote );\n\t\t} );\n\n\t\t// Merge subsequent <bQ> elements. Reverse the order again because this time we want to go through\n\t\t// the <bQ> elements in the source order (due to how merge works – it moves the right element's content\n\t\t// to the first element and removes the right one. Since we may need to merge a couple of subsequent `<bQ>` elements\n\t\t// we want to keep the reference to the first (furthest left) one.\n\t\tquotesToMerge.reverse().reduce( ( currentQuote, nextQuote ) => {\n\t\t\tif ( currentQuote.nextSibling == nextQuote ) {\n\t\t\t\twriter.merge( writer.createPositionAfter( currentQuote ) );\n\n\t\t\t\treturn currentQuote;\n\t\t\t}\n\n\t\t\treturn nextQuote;\n\t\t} );\n\t}\n}\n\nfunction findQuote( elementOrPosition ) {\n\treturn elementOrPosition.parent.name == 'blockQuote' ? elementOrPosition.parent : null;\n}\n\n// Returns a minimal array of ranges containing groups of subsequent blocks.\n//\n// content:         abcdefgh\n// blocks:          [ a, b, d, f, g, h ]\n// output ranges:   [ab]c[d]e[fgh]\n//\n// @param {Array.<module:engine/model/element~Element>} blocks\n// @returns {Array.<module:engine/model/range~Range>}\nfunction getRangesOfBlockGroups( writer, blocks ) {\n\tlet startPosition;\n\tlet i = 0;\n\tconst ranges = [];\n\n\twhile ( i < blocks.length ) {\n\t\tconst block = blocks[ i ];\n\t\tconst nextBlock = blocks[ i + 1 ];\n\n\t\tif ( !startPosition ) {\n\t\t\tstartPosition = writer.createPositionBefore( block );\n\t\t}\n\n\t\tif ( !nextBlock || block.nextSibling != nextBlock ) {\n\t\t\tranges.push( writer.createRange( startPosition, writer.createPositionAfter( block ) ) );\n\t\t\tstartPosition = null;\n\t\t}\n\n\t\ti++;\n\t}\n\n\treturn ranges;\n}\n\n// Checks whether <bQ> can wrap the block.\nfunction checkCanBeQuoted( schema, block ) {\n\t// TMP will be replaced with schema.checkWrap().\n\tconst isBQAllowed = schema.checkChild( block.parent, 'blockQuote' );\n\tconst isBlockAllowedInBQ = schema.checkChild( [ '$root', 'blockQuote' ], block );\n\n\treturn isBQAllowed && isBlockAllowedInBQ;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module block-quote/blockquoteediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport BlockQuoteCommand from './blockquotecommand';\n\n/**\n * The block quote editing.\n *\n * Introduces the `'blockQuote'` command and the `'blockQuote'` model element.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class BlockQuoteEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'BlockQuoteEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst schema = editor.model.schema;\n\n\t\teditor.commands.add( 'blockQuote', new BlockQuoteCommand( editor ) );\n\n\t\tschema.register( 'blockQuote', {\n\t\t\tallowWhere: '$block',\n\t\t\tallowContentOf: '$root'\n\t\t} );\n\n\t\t// Disallow blockQuote in blockQuote.\n\t\tschema.addChildCheck( ( ctx, childDef ) => {\n\t\t\tif ( ctx.endsWith( 'blockQuote' ) && childDef.name == 'blockQuote' ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} );\n\n\t\teditor.conversion.elementToElement( { model: 'blockQuote', view: 'blockquote' } );\n\n\t\t// Postfixer which cleans incorrect model states connected with block quotes.\n\t\teditor.model.document.registerPostFixer( writer => {\n\t\t\tconst changes = editor.model.document.differ.getChanges();\n\n\t\t\tfor ( const entry of changes ) {\n\t\t\t\tif ( entry.type == 'insert' ) {\n\t\t\t\t\tconst element = entry.position.nodeAfter;\n\n\t\t\t\t\tif ( !element ) {\n\t\t\t\t\t\t// We are inside a text node.\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( element.is( 'blockQuote' ) && element.isEmpty ) {\n\t\t\t\t\t\t// Added an empty blockQuote - remove it.\n\t\t\t\t\t\twriter.remove( element );\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else if ( element.is( 'blockQuote' ) && !schema.checkChild( entry.position, element ) ) {\n\t\t\t\t\t\t// Added a blockQuote in incorrect place - most likely inside another blockQuote. Unwrap it\n\t\t\t\t\t\t// so the content inside is not lost.\n\t\t\t\t\t\twriter.unwrap( element );\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else if ( element.is( 'element' ) ) {\n\t\t\t\t\t\t// Just added an element. Check its children to see if there are no nested blockQuotes somewhere inside.\n\t\t\t\t\t\tconst range = writer.createRangeIn( element );\n\n\t\t\t\t\t\tfor ( const child of range.getItems() ) {\n\t\t\t\t\t\t\tif ( child.is( 'blockQuote' ) && !schema.checkChild( writer.createPositionBefore( child ), child ) ) {\n\t\t\t\t\t\t\t\twriter.unwrap( child );\n\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if ( entry.type == 'remove' ) {\n\t\t\t\t\tconst parent = entry.position.parent;\n\n\t\t\t\t\tif ( parent.is( 'blockQuote' ) && parent.isEmpty ) {\n\t\t\t\t\t\t// Something got removed and now blockQuote is empty. Remove the blockQuote as well.\n\t\t\t\t\t\twriter.remove( parent );\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tafterInit() {\n\t\tconst editor = this.editor;\n\t\tconst command = editor.commands.get( 'blockQuote' );\n\n\t\t// Overwrite default Enter key behavior.\n\t\t// If Enter key is pressed with selection collapsed in empty block inside a quote, break the quote.\n\t\t// This listener is added in afterInit in order to register it after list's feature listener.\n\t\t// We can't use a priority for this, because 'low' is already used by the enter feature, unless\n\t\t// we'd use numeric priority in this case.\n\t\tthis.listenTo( this.editor.editing.view.document, 'enter', ( evt, data ) => {\n\t\t\tconst doc = this.editor.model.document;\n\t\t\tconst positionParent = doc.selection.getLastPosition().parent;\n\n\t\t\tif ( doc.selection.isCollapsed && positionParent.isEmpty && command.value ) {\n\t\t\t\tthis.editor.execute( 'blockQuote' );\n\t\t\t\tthis.editor.editing.view.scrollToTheSelection();\n\n\t\t\t\tdata.preventDefault();\n\t\t\t\tevt.stop();\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module block-quote/blockquoteui\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport quoteIcon from '@ckeditor/ckeditor5-core/theme/icons/quote.svg';\nimport '../theme/blockquote.css';\n/**\n * The block quote UI plugin.\n *\n * It introduces the `'blockQuote'` button.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class BlockQuoteUI extends Plugin {\n    /**\n\t * @inheritDoc\n\t */\n    init() {\n        const editor = this.editor;\n        const t = editor.t;\n        editor.ui.componentFactory.add('blockQuote', locale => {\n            const command = editor.commands.get('blockQuote');\n            const buttonView = new ButtonView(locale);\n            buttonView.set({\n                label: t('g'),\n                icon: quoteIcon,\n                tooltip: true,\n                isToggleable: true\n            });\n            // Bind button model to command.\n            buttonView.bind('isOn', 'isEnabled').to(command, 'value', 'isEnabled');\n            // Execute command.\n            this.listenTo(buttonView, 'execute', () => {\n                editor.execute('blockQuote');\n                editor.editing.view.focus();\n            });\n            return buttonView;\n        });\n    }\n}","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M3 10.423a6.5 6.5 0 016.056-6.408l.038.67C6.448 5.423 5.354 7.663 5.22 10H9c.552 0 .5.432.5.986v4.511c0 .554-.448.503-1 .503h-5c-.552 0-.5-.449-.5-1.003v-4.574zm8 0a6.5 6.5 0 016.056-6.408l.038.67c-2.646.739-3.74 2.979-3.873 5.315H17c.552 0 .5.432.5.986v4.511c0 .554-.448.503-1 .503h-5c-.552 0-.5-.449-.5-1.003v-4.574z\\\"/></svg>\"","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module ckfinder/ckfinderui\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport browseFilesIcon from '../theme/icons/browse-files.svg';\n/**\n * The CKFinder UI plugin. It introduces the `'ckfinder'` toolbar button.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class CKFinderUI extends Plugin {\n    /**\n\t * @inheritDoc\n\t */\n    static get pluginName() {\n        return 'CKFinderUI';\n    }\n    /**\n\t * @inheritDoc\n\t */\n    init() {\n        const editor = this.editor;\n        const componentFactory = editor.ui.componentFactory;\n        const t = editor.t;\n        componentFactory.add('ckfinder', locale => {\n            const command = editor.commands.get('ckfinder');\n            const button = new ButtonView(locale);\n            button.set({\n                label: t('h'),\n                icon: browseFilesIcon,\n                tooltip: true\n            });\n            button.bind('isEnabled').to(command);\n            button.on('execute', () => {\n                editor.execute('ckfinder');\n                editor.editing.view.focus();\n            });\n            return button;\n        });\n    }\n}","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M11.627 16.5zm5.873-.196zm0-7.001V8h-13v8.5h4.341c.191.54.457 1.044.785 1.5H2a1.5 1.5 0 01-1.5-1.5v-13A1.5 1.5 0 012 2h4.5a1.5 1.5 0 011.06.44L9.122 4H16a1.5 1.5 0 011.5 1.5v1A1.5 1.5 0 0119 8v2.531a6.027 6.027 0 00-1.5-1.228zM16 6.5v-1H8.5l-2-2H2v13h1V8a1.5 1.5 0 011.5-1.5H16z\\\"/><path d=\\\"M14.5 19.5a5 5 0 110-10 5 5 0 010 10zM15 14v-2h-1v2h-2v1h2v2h1v-2h2v-1h-2z\\\"/></svg>\"","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/image/imageloadobserver\n */\n\nimport Observer from '@ckeditor/ckeditor5-engine/src/view/observer/observer';\n\n/**\n * Observes all new images added to the {@link module:engine/view/document~Document},\n * fires {@link module:engine/view/document~Document#event:imageLoaded} and\n * {@link module:engine/view/document~Document#event:layoutChanged} event every time when the new image\n * has been loaded.\n *\n * **Note:** This event is not fired for images that has been added to the document and rendered as `complete` (already loaded).\n *\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class ImageLoadObserver extends Observer {\n\t/**\n\t * @inheritDoc\n\t */\n\tobserve( domRoot ) {\n\t\tthis.listenTo( domRoot, 'load', ( event, domEvent ) => {\n\t\t\tconst domElement = domEvent.target;\n\n\t\t\tif ( domElement.tagName == 'IMG' ) {\n\t\t\t\tthis._fireEvents( domEvent );\n\t\t\t}\n\t\t\t// Use capture phase for better performance (#4504).\n\t\t}, { useCapture: true } );\n\t}\n\n\t/**\n\t * Fires {@link module:engine/view/document~Document#event:layoutChanged} and\n\t * {@link module:engine/view/document~Document#event:imageLoaded}\n\t * if observer {@link #isEnabled is enabled}.\n\t *\n\t * @protected\n\t * @param {Event} domEvent The DOM event.\n\t */\n\t_fireEvents( domEvent ) {\n\t\tif ( this.isEnabled ) {\n\t\t\tthis.document.fire( 'layoutChanged' );\n\t\t\tthis.document.fire( 'imageLoaded', domEvent );\n\t\t}\n\t}\n}\n\n/**\n * Fired when an <img/> DOM element has been loaded in the DOM root.\n *\n * Introduced by {@link module:image/image/imageloadobserver~ImageLoadObserver}.\n *\n * @see module:image/image/imageloadobserver~ImageLoadObserver\n * @event module:engine/view/document~Document#event:imageLoaded\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/image/converters\n */\n\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n\n/**\n * Returns a function that converts the image view representation:\n *\n *\t\t<figure class=\"image\"><img src=\"...\" alt=\"...\"></img></figure>\n *\n * to the model representation:\n *\n *\t\t<image src=\"...\" alt=\"...\"></image>\n *\n * The entire content of the `<figure>` element except the first `<img>` is being converted as children\n * of the `<image>` model element.\n *\n * @returns {Function}\n */\nexport function viewFigureToModel() {\n\treturn dispatcher => {\n\t\tdispatcher.on( 'element:figure', converter );\n\t};\n\n\tfunction converter( evt, data, conversionApi ) {\n\t\t// Do not convert if this is not an \"image figure\".\n\t\tif ( !conversionApi.consumable.test( data.viewItem, { name: true, classes: 'image' } ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Find an image element inside the figure element.\n\t\tconst viewImage = Array.from( data.viewItem.getChildren() ).find( viewChild => viewChild.is( 'img' ) );\n\n\t\t// Do not convert if image element is absent, is missing src attribute or was already converted.\n\t\tif ( !viewImage || !viewImage.hasAttribute( 'src' ) || !conversionApi.consumable.test( viewImage, { name: true } ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Convert view image to model image.\n\t\tconst conversionResult = conversionApi.convertItem( viewImage, data.modelCursor );\n\n\t\t// Get image element from conversion result.\n\t\tconst modelImage = first( conversionResult.modelRange.getItems() );\n\n\t\t// When image wasn't successfully converted then finish conversion.\n\t\tif ( !modelImage ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Convert rest of the figure element's children as an image children.\n\t\tconversionApi.convertChildren( data.viewItem, conversionApi.writer.createPositionAt( modelImage, 0 ) );\n\n\t\t// Set image range as conversion result.\n\t\tdata.modelRange = conversionResult.modelRange;\n\n\t\t// Continue conversion where image conversion ends.\n\t\tdata.modelCursor = conversionResult.modelCursor;\n\t}\n}\n\n/**\n * Converter used to convert the `srcset` model image attribute to the `srcset`, `sizes` and `width` attributes in the view.\n *\n * @returns {Function}\n */\nexport function srcsetAttributeConverter() {\n\treturn dispatcher => {\n\t\tdispatcher.on( 'attribute:srcset:image', converter );\n\t};\n\n\tfunction converter( evt, data, conversionApi ) {\n\t\tif ( !conversionApi.consumable.consume( data.item, evt.name ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst writer = conversionApi.writer;\n\t\tconst figure = conversionApi.mapper.toViewElement( data.item );\n\t\tconst img = figure.getChild( 0 );\n\n\t\tif ( data.attributeNewValue === null ) {\n\t\t\tconst srcset = data.attributeOldValue;\n\n\t\t\tif ( srcset.data ) {\n\t\t\t\twriter.removeAttribute( 'srcset', img );\n\t\t\t\twriter.removeAttribute( 'sizes', img );\n\n\t\t\t\tif ( srcset.width ) {\n\t\t\t\t\twriter.removeAttribute( 'width', img );\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst srcset = data.attributeNewValue;\n\n\t\t\tif ( srcset.data ) {\n\t\t\t\twriter.setAttribute( 'srcset', srcset.data, img );\n\t\t\t\t// Always outputting `100vw`. See https://github.com/ckeditor/ckeditor5-image/issues/2.\n\t\t\t\twriter.setAttribute( 'sizes', '100vw', img );\n\n\t\t\t\tif ( srcset.width ) {\n\t\t\t\t\twriter.setAttribute( 'width', srcset.width, img );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function modelToViewAttributeConverter( attributeKey ) {\n\treturn dispatcher => {\n\t\tdispatcher.on( `attribute:${ attributeKey }:image`, converter );\n\t};\n\n\tfunction converter( evt, data, conversionApi ) {\n\t\tif ( !conversionApi.consumable.consume( data.item, evt.name ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewWriter = conversionApi.writer;\n\t\tconst figure = conversionApi.mapper.toViewElement( data.item );\n\t\tconst img = figure.getChild( 0 );\n\n\t\tif ( data.attributeNewValue !== null ) {\n\t\t\tviewWriter.setAttribute( data.attributeKey, data.attributeNewValue, img );\n\t\t} else {\n\t\t\tviewWriter.removeAttribute( data.attributeKey, img );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module widget/highlightstack\n */\n\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * Class used to handle correct order of highlights on elements.\n *\n * When different highlights are applied to same element correct order should be preserved:\n *\n * * highlight with highest priority should be applied,\n * * if two highlights have same priority - sort by CSS class provided in\n * {@link module:engine/conversion/downcasthelpers~HighlightDescriptor}.\n *\n * This way, highlight will be applied with the same rules it is applied on texts.\n */\nexport default class HighlightStack {\n\t/**\n\t * Creates class instance.\n\t */\n\tconstructor() {\n\t\tthis._stack = [];\n\t}\n\n\t/**\n\t * Adds highlight descriptor to the stack.\n\t *\n\t * @fires change:top\n\t * @param {module:engine/conversion/downcasthelpers~HighlightDescriptor} descriptor\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n\t */\n\tadd( descriptor, writer ) {\n\t\tconst stack = this._stack;\n\n\t\t// Save top descriptor and insert new one. If top is changed - fire event.\n\t\tconst oldTop = stack[ 0 ];\n\t\tthis._insertDescriptor( descriptor );\n\t\tconst newTop = stack[ 0 ];\n\n\t\t// When new object is at the top and stores different information.\n\t\tif ( oldTop !== newTop && !compareDescriptors( oldTop, newTop ) ) {\n\t\t\tthis.fire( 'change:top', {\n\t\t\t\toldDescriptor: oldTop,\n\t\t\t\tnewDescriptor: newTop,\n\t\t\t\twriter\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Removes highlight descriptor from the stack.\n\t *\n\t * @fires change:top\n\t * @param {String} id Id of the descriptor to remove.\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n\t */\n\tremove( id, writer ) {\n\t\tconst stack = this._stack;\n\n\t\tconst oldTop = stack[ 0 ];\n\t\tthis._removeDescriptor( id );\n\t\tconst newTop = stack[ 0 ];\n\n\t\t// When new object is at the top and stores different information.\n\t\tif ( oldTop !== newTop && !compareDescriptors( oldTop, newTop ) ) {\n\t\t\tthis.fire( 'change:top', {\n\t\t\t\toldDescriptor: oldTop,\n\t\t\t\tnewDescriptor: newTop,\n\t\t\t\twriter\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Inserts given descriptor in correct place in the stack. It also takes care about updating information when\n\t * descriptor with same id is already present.\n\t *\n\t * @private\n\t * @param {module:engine/conversion/downcasthelpers~HighlightDescriptor} descriptor\n\t */\n\t_insertDescriptor( descriptor ) {\n\t\tconst stack = this._stack;\n\t\tconst index = stack.findIndex( item => item.id === descriptor.id );\n\n\t\t// Inserting exact same descriptor - do nothing.\n\t\tif ( compareDescriptors( descriptor, stack[ index ] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If descriptor with same id but with different information is on the stack - remove it.\n\t\tif ( index > -1 ) {\n\t\t\tstack.splice( index, 1 );\n\t\t}\n\n\t\t// Find correct place to insert descriptor in the stack.\n\t\t// It have different information (for example priority) so it must be re-inserted in correct place.\n\t\tlet i = 0;\n\n\t\twhile ( stack[ i ] && shouldABeBeforeB( stack[ i ], descriptor ) ) {\n\t\t\ti++;\n\t\t}\n\n\t\tstack.splice( i, 0, descriptor );\n\t}\n\n\t/**\n\t * Removes descriptor with given id from the stack.\n\t *\n\t * @private\n\t * @param {String} id Descriptor's id.\n\t */\n\t_removeDescriptor( id ) {\n\t\tconst stack = this._stack;\n\t\tconst index = stack.findIndex( item => item.id === id );\n\n\t\t// If descriptor with same id is on the list - remove it.\n\t\tif ( index > -1 ) {\n\t\t\tstack.splice( index, 1 );\n\t\t}\n\t}\n}\n\nmix( HighlightStack, EmitterMixin );\n\n// Compares two descriptors by checking their priority and class list.\n//\n// @param {module:engine/conversion/downcasthelpers~HighlightDescriptor} a\n// @param {module:engine/conversion/downcasthelpers~HighlightDescriptor} b\n// @returns {Boolean} Returns true if both descriptors are defined and have same priority and classes.\nfunction compareDescriptors( a, b ) {\n\treturn a && b && a.priority == b.priority && classesToString( a.classes ) == classesToString( b.classes );\n}\n\n// Checks whenever first descriptor should be placed in the stack before second one.\n//\n// @param {module:engine/conversion/downcasthelpers~HighlightDescriptor} a\n// @param {module:engine/conversion/downcasthelpers~HighlightDescriptor} b\n// @returns {Boolean}\nfunction shouldABeBeforeB( a, b ) {\n\tif ( a.priority > b.priority ) {\n\t\treturn true;\n\t} else if ( a.priority < b.priority ) {\n\t\treturn false;\n\t}\n\n\t// When priorities are equal and names are different - use classes to compare.\n\treturn classesToString( a.classes ) > classesToString( b.classes );\n}\n\n// Converts CSS classes passed with {@link module:engine/conversion/downcasthelpers~HighlightDescriptor} to\n// sorted string.\n//\n// @param {String|Array<String>} descriptor\n// @returns {String}\nfunction classesToString( classes ) {\n\treturn Array.isArray( classes ) ? classes.sort().join( ',' ) : classes;\n}\n\n/**\n * Fired when top element on {@link module:widget/highlightstack~HighlightStack} has been changed\n *\n * @event change:top\n * @param {Object} data Additional information about the change.\n * @param {module:engine/conversion/downcasthelpers~HighlightDescriptor} [data.newDescriptor] New highlight\n * descriptor. It will be `undefined` when last descriptor is removed from the stack.\n * @param {module:engine/conversion/downcasthelpers~HighlightDescriptor} [data.oldDescriptor] Old highlight\n * descriptor. It will be `undefined` when first descriptor is added to the stack.\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that can be used to modify element.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module widget/utils\n */\n\nimport HighlightStack from './highlightstack';\nimport IconView from '@ckeditor/ckeditor5-ui/src/icon/iconview';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n\nimport dragHandleIcon from '../theme/icons/drag-handle.svg';\n\n/**\n * CSS class added to each widget element.\n *\n * @const {String}\n */\nexport const WIDGET_CLASS_NAME = 'ck-widget';\n\n/**\n * CSS class added to currently selected widget element.\n *\n * @const {String}\n */\nexport const WIDGET_SELECTED_CLASS_NAME = 'ck-widget_selected';\n\n/**\n * Returns `true` if given {@link module:engine/view/node~Node} is an {@link module:engine/view/element~Element} and a widget.\n *\n * @param {module:engine/view/node~Node} node\n * @returns {Boolean}\n */\nexport function isWidget( node ) {\n\tif ( !node.is( 'element' ) ) {\n\t\treturn false;\n\t}\n\n\treturn !!node.getCustomProperty( 'widget' );\n}\n\n/* eslint-disable max-len */\n/**\n * Converts the given {@link module:engine/view/element~Element} to a widget in the following way:\n *\n * * sets the `contenteditable` attribute to `\"true\"`,\n * * adds the `ck-widget` CSS class,\n * * adds a custom {@link module:engine/view/element~Element#getFillerOffset `getFillerOffset()`} method returning `null`,\n * * adds a custom property allowing to recognize widget elements by using {@link ~isWidget `isWidget()`},\n * * implements the {@link ~setHighlightHandling view highlight on widgets}.\n *\n * This function needs to be used in conjunction with\n * {@link module:engine/conversion/downcasthelpers~DowncastHelpers downcast conversion helpers}\n * like {@link module:engine/conversion/downcasthelpers~DowncastHelpers#elementToElement `elementToElement()`}.\n * Moreover, typically you will want to use `toWidget()` only for `editingDowncast`, while keeping the `dataDowncast` clean.\n *\n * For example, in order to convert a `<widget>` model element to `<div class=\"widget\">` in the view, you can define\n * such converters:\n *\n *\t\teditor.conversion.for( 'editingDowncast' )\n *\t\t\t.elementToElement( {\n *\t\t\t\tmodel: 'widget',\n *\t\t\t\tview: ( modelItem, writer ) => {\n *\t\t\t\t\tconst div = writer.createContainerElement( 'div', { class: 'widget' } );\n *\n *\t\t\t\t\treturn toWidget( div, writer, { label: 'some widget' } );\n *\t\t\t\t}\n *\t\t\t} );\n *\n *\t\teditor.conversion.for( 'dataDowncast' )\n *\t\t\t.elementToElement( {\n *\t\t\t\tmodel: 'widget',\n *\t\t\t\tview: ( modelItem, writer ) => {\n *\t\t\t\t\treturn writer.createContainerElement( 'div', { class: 'widget' } );\n *\t\t\t\t}\n *\t\t\t} );\n *\n * See the full source code of the widget (with a nested editable) schema definition and converters in\n * [this sample](https://github.com/ckeditor/ckeditor5-widget/blob/master/tests/manual/widget-with-nestededitable.js).\n *\n * @param {module:engine/view/element~Element} element\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n * @param {Object} [options={}]\n * @param {String|Function} [options.label] Element's label provided to the {@link ~setLabel} function. It can be passed as\n * a plain string or a function returning a string. It represents the widget for assistive technologies (like screen readers).\n * @param {Boolean} [options.hasSelectionHandle=false] If `true`, the widget will have a selection handle added.\n * @returns {module:engine/view/element~Element} Returns the same element.\n */\n/* eslint-enable max-len */\nexport function toWidget( element, writer, options = {} ) {\n\t// The selection on Edge behaves better when the whole editor contents is in a single contenteditable element.\n\t// https://github.com/ckeditor/ckeditor5/issues/1079\n\tif ( !env.isEdge ) {\n\t\twriter.setAttribute( 'contenteditable', 'false', element );\n\t}\n\n\twriter.addClass( WIDGET_CLASS_NAME, element );\n\twriter.setCustomProperty( 'widget', true, element );\n\telement.getFillerOffset = getFillerOffset;\n\n\tif ( options.label ) {\n\t\tsetLabel( element, options.label, writer );\n\t}\n\n\tif ( options.hasSelectionHandle ) {\n\t\taddSelectionHandle( element, writer );\n\t}\n\n\tsetHighlightHandling(\n\t\telement,\n\t\twriter,\n\t\t( element, descriptor, writer ) => writer.addClass( normalizeToArray( descriptor.classes ), element ),\n\t\t( element, descriptor, writer ) => writer.removeClass( normalizeToArray( descriptor.classes ), element )\n\t);\n\n\treturn element;\n\n\t// Normalizes CSS class in descriptor that can be provided in form of an array or a string.\n\tfunction normalizeToArray( classes ) {\n\t\treturn Array.isArray( classes ) ? classes : [ classes ];\n\t}\n}\n\n/**\n * Sets highlight handling methods. Uses {@link module:widget/highlightstack~HighlightStack} to\n * properly determine which highlight descriptor should be used at given time.\n *\n * @param {module:engine/view/element~Element} element\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n * @param {Function} add\n * @param {Function} remove\n */\nexport function setHighlightHandling( element, writer, add, remove ) {\n\tconst stack = new HighlightStack();\n\n\tstack.on( 'change:top', ( evt, data ) => {\n\t\tif ( data.oldDescriptor ) {\n\t\t\tremove( element, data.oldDescriptor, data.writer );\n\t\t}\n\n\t\tif ( data.newDescriptor ) {\n\t\t\tadd( element, data.newDescriptor, data.writer );\n\t\t}\n\t} );\n\n\twriter.setCustomProperty( 'addHighlight', ( element, descriptor, writer ) => stack.add( descriptor, writer ), element );\n\twriter.setCustomProperty( 'removeHighlight', ( element, id, writer ) => stack.remove( id, writer ), element );\n}\n\n/**\n * Sets label for given element.\n * It can be passed as a plain string or a function returning a string. Function will be called each time label is retrieved by\n * {@link ~getLabel `getLabel()`}.\n *\n * @param {module:engine/view/element~Element} element\n * @param {String|Function} labelOrCreator\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n */\nexport function setLabel( element, labelOrCreator, writer ) {\n\twriter.setCustomProperty( 'widgetLabel', labelOrCreator, element );\n}\n\n/**\n * Returns the label of the provided element.\n *\n * @param {module:engine/view/element~Element} element\n * @returns {String}\n */\nexport function getLabel( element ) {\n\tconst labelCreator = element.getCustomProperty( 'widgetLabel' );\n\n\tif ( !labelCreator ) {\n\t\treturn '';\n\t}\n\n\treturn typeof labelCreator == 'function' ? labelCreator() : labelCreator;\n}\n\n/**\n * Adds functionality to the provided {@link module:engine/view/editableelement~EditableElement} to act as a widget's editable:\n *\n * * sets the `contenteditable` attribute to `true` when {@link module:engine/view/editableelement~EditableElement#isReadOnly} is `false`,\n * otherwise sets it to `false`,\n * * adds the `ck-editor__editable` and `ck-editor__nested-editable` CSS classes,\n * * adds the `ck-editor__nested-editable_focused` CSS class when the editable is focused and removes it when it is blurred.\n *\n * Similarly to {@link ~toWidget `toWidget()`} this function should be used in `dataDowncast` only and it is usually\n * used together with {@link module:engine/conversion/downcasthelpers~DowncastHelpers#elementToElement `elementToElement()`}.\n *\n * For example, in order to convert a `<nested>` model element to `<div class=\"nested\">` in the view, you can define\n * such converters:\n *\n *\t\teditor.conversion.for( 'editingDowncast' )\n *\t\t\t.elementToElement( {\n *\t\t\t\tmodel: 'nested',\n *\t\t\t\tview: ( modelItem, writer ) => {\n *\t\t\t\t\tconst div = writer.createEditableElement( 'div', { class: 'nested' } );\n *\n *\t\t\t\t\treturn toWidgetEditable( nested, writer );\n *\t\t\t\t}\n *\t\t\t} );\n *\n *\t\teditor.conversion.for( 'dataDowncast' )\n *\t\t\t.elementToElement( {\n *\t\t\t\tmodel: 'nested',\n *\t\t\t\tview: ( modelItem, writer ) => {\n *\t\t\t\t\treturn writer.createContainerElement( 'div', { class: 'nested' } );\n *\t\t\t\t}\n *\t\t\t} );\n *\n * See the full source code of the widget (with nested editable) schema definition and converters in\n * [this sample](https://github.com/ckeditor/ckeditor5-widget/blob/master/tests/manual/widget-with-nestededitable.js).\n *\n * @param {module:engine/view/editableelement~EditableElement} editable\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n * @returns {module:engine/view/editableelement~EditableElement} Returns the same element that was provided in the `editable` parameter\n */\nexport function toWidgetEditable( editable, writer ) {\n\twriter.addClass( [ 'ck-editor__editable', 'ck-editor__nested-editable' ], editable );\n\n\t// The selection on Edge behaves better when the whole editor contents is in a single contentedible element.\n\t// https://github.com/ckeditor/ckeditor5/issues/1079\n\tif ( !env.isEdge ) {\n\t\t// Set initial contenteditable value.\n\t\twriter.setAttribute( 'contenteditable', editable.isReadOnly ? 'false' : 'true', editable );\n\n\t\t// Bind the contenteditable property to element#isReadOnly.\n\t\teditable.on( 'change:isReadOnly', ( evt, property, is ) => {\n\t\t\twriter.setAttribute( 'contenteditable', is ? 'false' : 'true', editable );\n\t\t} );\n\t}\n\n\teditable.on( 'change:isFocused', ( evt, property, is ) => {\n\t\tif ( is ) {\n\t\t\twriter.addClass( 'ck-editor__nested-editable_focused', editable );\n\t\t} else {\n\t\t\twriter.removeClass( 'ck-editor__nested-editable_focused', editable );\n\t\t}\n\t} );\n\n\treturn editable;\n}\n\n/**\n * Returns a model position which is optimal (in terms of UX) for inserting a widget block.\n *\n * For instance, if a selection is in the middle of a paragraph, the position before this paragraph\n * will be returned so that it is not split. If the selection is at the end of a paragraph,\n * the position after this paragraph will be returned.\n *\n * Note: If the selection is placed in an empty block, that block will be returned. If that position\n * is then passed to {@link module:engine/model/model~Model#insertContent},\n * the block will be fully replaced by the image.\n *\n * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n * The selection based on which the insertion position should be calculated.\n * @param {module:engine/model/model~Model} model Model instance.\n * @returns {module:engine/model/position~Position} The optimal position.\n */\nexport function findOptimalInsertionPosition( selection, model ) {\n\tconst selectedElement = selection.getSelectedElement();\n\n\tif ( selectedElement && model.schema.isBlock( selectedElement ) ) {\n\t\treturn model.createPositionAfter( selectedElement );\n\t}\n\n\tconst firstBlock = selection.getSelectedBlocks().next().value;\n\n\tif ( firstBlock ) {\n\t\t// If inserting into an empty block – return position in that block. It will get\n\t\t// replaced with the image by insertContent(). #42.\n\t\tif ( firstBlock.isEmpty ) {\n\t\t\treturn model.createPositionAt( firstBlock, 0 );\n\t\t}\n\n\t\tconst positionAfter = model.createPositionAfter( firstBlock );\n\n\t\t// If selection is at the end of the block - return position after the block.\n\t\tif ( selection.focus.isTouching( positionAfter ) ) {\n\t\t\treturn positionAfter;\n\t\t}\n\n\t\t// Otherwise return position before the block.\n\t\treturn model.createPositionBefore( firstBlock );\n\t}\n\n\treturn selection.focus;\n}\n\n/**\n * A util to be used in order to map view positions to correct model positions when implementing a widget\n * which renders non-empty view element for an empty model element.\n *\n * For example:\n *\n *\t\t// Model:\n *\t\t<placeholder type=\"name\"></placeholder>\n *\n *\t\t// View:\n *\t\t<span class=\"placeholder\">name</span>\n *\n * In such case, view positions inside `<span>` cannot be correct mapped to the model (because the model element is empty).\n * To handle mapping positions inside `<span class=\"placeholder\">` to the model use this util as follows:\n *\n *\t\teditor.editing.mapper.on(\n *\t\t\t'viewToModelPosition',\n *\t\t\tviewToModelPositionOutsideModelElement( model, viewElement => viewElement.hasClass( 'placeholder' ) )\n *\t\t);\n *\n * The callback will try to map the view offset of selection to an expected model position.\n *\n * 1. When the position is at the end (or in the middle) of the inline widget:\n *\n *\t\t// View:\n *\t\t<p>foo <span class=\"placeholder\">name|</span> bar</p>\n *\n *\t\t// Model:\n *\t\t<paragraph>foo <placeholder type=\"name\"></placeholder>| bar</paragraph>\n *\n * 2. When the position is at the beginning of the inline widget:\n *\n *\t\t// View:\n *\t\t<p>foo <span class=\"placeholder\">|name</span> bar</p>\n *\n *\t\t// Model:\n *\t\t<paragraph>foo |<placeholder type=\"name\"></placeholder> bar</paragraph>\n *\n * @param {module:engine/model/model~Model} model Model instance on which the callback operates.\n * @param {Function} viewElementMatcher Function that is passed a view element and should return `true` if the custom mapping\n * should be applied to the given view element.\n * @return {Function}\n */\nexport function viewToModelPositionOutsideModelElement( model, viewElementMatcher ) {\n\treturn ( evt, data ) => {\n\t\tconst { mapper, viewPosition } = data;\n\n\t\tconst viewParent = mapper.findMappedViewAncestor( viewPosition );\n\n\t\tif ( !viewElementMatcher( viewParent ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst modelParent = mapper.toModelElement( viewParent );\n\n\t\tdata.modelPosition = model.createPositionAt( modelParent, viewPosition.isAtStart ? 'before' : 'after' );\n\t};\n}\n\n// Default filler offset function applied to all widget elements.\n//\n// @returns {null}\nfunction getFillerOffset() {\n\treturn null;\n}\n\n// Adds a drag handle to the widget.\n//\n// @param {module:engine/view/containerelement~ContainerElement}\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\nfunction addSelectionHandle( widgetElement, writer ) {\n\tconst selectionHandle = writer.createUIElement( 'div', { class: 'ck ck-widget__selection-handle' }, function( domDocument ) {\n\t\tconst domElement = this.toDomElement( domDocument );\n\n\t\t// Use the IconView from the ui library.\n\t\tconst icon = new IconView();\n\t\ticon.set( 'content', dragHandleIcon );\n\n\t\t// Render the icon view right away to append its #element to the selectionHandle DOM element.\n\t\ticon.render();\n\n\t\tdomElement.appendChild( icon.element );\n\n\t\treturn domElement;\n\t} );\n\n\t// Append the selection handle into the widget wrapper.\n\twriter.insert( writer.createPositionAt( widgetElement, 0 ), selectionHandle );\n\twriter.addClass( [ 'ck-widget_with-selection-handle' ], widgetElement );\n}\n","export default \"<svg viewBox=\\\"0 0 16 16\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M4 0v1H1v3H0V.5A.5.5 0 01.5 0H4zm8 0h3.5a.5.5 0 01.5.5V4h-1V1h-3V0zM4 16H.5a.5.5 0 01-.5-.5V12h1v3h3v1zm8 0v-1h3v-3h1v3.5a.5.5 0 01-.5.5H12z\\\"/><path fill-opacity=\\\".256\\\" d=\\\"M1 1h14v14H1z\\\"/><g class=\\\"ck-icon__selected-indicator\\\"><path d=\\\"M7 0h2v1H7V0zM0 7h1v2H0V7zm15 0h1v2h-1V7zm-8 8h2v1H7v-1z\\\"/><path fill-opacity=\\\".254\\\" d=\\\"M1 1h14v14H1z\\\"/></g></svg>\"","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/image/utils\n */\n\nimport { findOptimalInsertionPosition, isWidget, toWidget } from '@ckeditor/ckeditor5-widget/src/utils';\n\n/**\n * Converts a given {@link module:engine/view/element~Element} to an image widget:\n * * Adds a {@link module:engine/view/element~Element#_setCustomProperty custom property} allowing to recognize the image widget element.\n * * Calls the {@link module:widget/utils~toWidget} function with the proper element's label creator.\n *\n * @param {module:engine/view/element~Element} viewElement\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer An instance of the view writer.\n * @param {String} label The element's label. It will be concatenated with the image `alt` attribute if one is present.\n * @returns {module:engine/view/element~Element}\n */\nexport function toImageWidget( viewElement, writer, label ) {\n\twriter.setCustomProperty( 'image', true, viewElement );\n\n\treturn toWidget( viewElement, writer, { label: labelCreator } );\n\n\tfunction labelCreator() {\n\t\tconst imgElement = viewElement.getChild( 0 );\n\t\tconst altText = imgElement.getAttribute( 'alt' );\n\n\t\treturn altText ? `${ altText } ${ label }` : label;\n\t}\n}\n\n/**\n * Checks if a given view element is an image widget.\n *\n * @param {module:engine/view/element~Element} viewElement\n * @returns {Boolean}\n */\nexport function isImageWidget( viewElement ) {\n\treturn !!viewElement.getCustomProperty( 'image' ) && isWidget( viewElement );\n}\n\n/**\n * Returns an image widget editing view element if one is selected.\n *\n * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} selection\n * @returns {module:engine/view/element~Element|null}\n */\nexport function getSelectedImageWidget( selection ) {\n\tconst viewElement = selection.getSelectedElement();\n\n\tif ( viewElement && isImageWidget( viewElement ) ) {\n\t\treturn viewElement;\n\t}\n\n\treturn null;\n}\n\n/**\n * Checks if the provided model element is an `image`.\n *\n * @param {module:engine/model/element~Element} modelElement\n * @returns {Boolean}\n */\nexport function isImage( modelElement ) {\n\treturn !!modelElement && modelElement.is( 'image' );\n}\n\n/**\n * Handles inserting single file. This method unifies image insertion using {@link module:widget/utils~findOptimalInsertionPosition} method.\n *\n *\t\tmodel.change( writer => {\n *\t\t\tinsertImage( writer, model, { src: 'path/to/image.jpg' } );\n *\t\t} );\n *\n * @param {module:engine/model/writer~Writer} writer\n * @param {module:engine/model/model~Model} model\n * @param {Object} [attributes={}] Attributes of inserted image\n */\nexport function insertImage( writer, model, attributes = {} ) {\n\tconst imageElement = writer.createElement( 'image', attributes );\n\n\tconst insertAtSelection = findOptimalInsertionPosition( model.document.selection, model );\n\n\tmodel.insertContent( imageElement, insertAtSelection );\n\n\t// Inserting an image might've failed due to schema regulations.\n\tif ( imageElement.parent ) {\n\t\twriter.setSelection( imageElement, 'on' );\n\t}\n}\n\n/**\n * Checks if image can be inserted at current model selection.\n *\n * @param {module:engine/model/model~Model} model\n * @returns {Boolean}\n */\nexport function isImageAllowed( model ) {\n\tconst schema = model.schema;\n\tconst selection = model.document.selection;\n\n\treturn isImageAllowedInParent( selection, schema, model ) &&\n\t\t!checkSelectionOnObject( selection, schema ) &&\n\t\tisInOtherImage( selection );\n}\n\n// Checks if image is allowed by schema in optimal insertion parent.\n//\n// @returns {Boolean}\nfunction isImageAllowedInParent( selection, schema, model ) {\n\tconst parent = getInsertImageParent( selection, model );\n\n\treturn schema.checkChild( parent, 'image' );\n}\n\n// Check if selection is on object.\n//\n// @returns {Boolean}\nfunction checkSelectionOnObject( selection, schema ) {\n\tconst selectedElement = selection.getSelectedElement();\n\n\treturn selectedElement && schema.isObject( selectedElement );\n}\n\n// Checks if selection is placed in other image (ie. in caption).\nfunction isInOtherImage( selection ) {\n\treturn [ ...selection.focus.getAncestors() ].every( ancestor => !ancestor.is( 'image' ) );\n}\n\n// Returns a node that will be used to insert image with `model.insertContent` to check if image can be placed there.\nfunction getInsertImageParent( selection, model ) {\n\tconst insertAt = findOptimalInsertionPosition( selection, model );\n\n\tconst parent = insertAt.parent;\n\n\tif ( parent.isEmpty && !parent.is( '$root' ) ) {\n\t\treturn parent.parent;\n\t}\n\n\treturn parent;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { insertImage, isImageAllowed } from './utils';\n\n/**\n * @module image/image/imageinsertcommand\n */\n\n/**\n * Insert image command.\n *\n * The command is registered by the {@link module:image/image/imageediting~ImageEditing} plugin as `'imageInsert'`.\n *\n * In order to insert an image at the current selection position\n * (according to the {@link module:widget/utils~findOptimalInsertionPosition} algorithm),\n * execute the command and specify the image source:\n *\n *\t\teditor.execute( 'imageInsert', { source: 'http://url.to.the/image' } );\n *\n * It is also possible to insert multiple images at once:\n *\n *\t\teditor.execute( 'imageInsert', {\n *\t\t\tsource:  [\n *\t\t\t\t'path/to/image.jpg',\n *\t\t\t\t'path/to/other-image.jpg'\n *\t\t\t]\n *\t\t} );\n *\n * @extends module:core/command~Command\n */\nexport default class ImageInsertCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tthis.isEnabled = isImageAllowed( this.editor.model );\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * @fires execute\n\t * @param {Object} options Options for the executed command.\n\t * @param {String|Array.<String>} options.source The image source or an array of image sources to insert.\n\t */\n\texecute( options ) {\n\t\tconst model = this.editor.model;\n\n\t\tmodel.change( writer => {\n\t\t\tconst sources = Array.isArray( options.source ) ? options.source : [ options.source ];\n\n\t\t\tfor ( const src of sources ) {\n\t\t\t\tinsertImage( writer, model, { src } );\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module image/image/imageediting\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ImageLoadObserver from './imageloadobserver';\nimport {\n    viewFigureToModel,\n    modelToViewAttributeConverter,\n    srcsetAttributeConverter\n} from './converters';\nimport { toImageWidget } from './utils';\nimport ImageInsertCommand from './imageinsertcommand';\n/**\n * The image engine plugin.\n *\n * It registers:\n *\n * * `<image>` as a block element in the document schema, and allows `alt`, `src` and `srcset` attributes.\n * * converters for editing and data pipelines.\n * * `'imageInsert'` command.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageEditing extends Plugin {\n    /**\n\t * @inheritDoc\n\t */\n    static get pluginName() {\n        return 'ImageEditing';\n    }\n    /**\n\t * @inheritDoc\n\t */\n    init() {\n        const editor = this.editor;\n        const schema = editor.model.schema;\n        const t = editor.t;\n        const conversion = editor.conversion;\n        // See https://github.com/ckeditor/ckeditor5-image/issues/142.\n        editor.editing.view.addObserver(ImageLoadObserver);\n        // Configure schema.\n        schema.register('image', {\n            isObject: true,\n            isBlock: true,\n            allowWhere: '$block',\n            allowAttributes: [\n                'alt',\n                'src',\n                'srcset'\n            ]\n        });\n        conversion.for('dataDowncast').elementToElement({\n            model: 'image',\n            view: (modelElement, viewWriter) => createImageViewElement(viewWriter)\n        });\n        conversion.for('editingDowncast').elementToElement({\n            model: 'image',\n            view: (modelElement, viewWriter) => toImageWidget(createImageViewElement(viewWriter), viewWriter, t('k'))\n        });\n        conversion.for('downcast').add(modelToViewAttributeConverter('src')).add(modelToViewAttributeConverter('alt')).add(srcsetAttributeConverter());\n        conversion.for('upcast').elementToElement({\n            view: {\n                name: 'img',\n                attributes: { src: true }\n            },\n            model: (viewImage, modelWriter) => modelWriter.createElement('image', { src: viewImage.getAttribute('src') })\n        }).attributeToAttribute({\n            view: {\n                name: 'img',\n                key: 'alt'\n            },\n            model: 'alt'\n        }).attributeToAttribute({\n            view: {\n                name: 'img',\n                key: 'srcset'\n            },\n            model: {\n                key: 'srcset',\n                value: viewImage => {\n                    const value = { data: viewImage.getAttribute('srcset') };\n                    if (viewImage.hasAttribute('width')) {\n                        value.width = viewImage.getAttribute('width');\n                    }\n                    return value;\n                }\n            }\n        }).add(viewFigureToModel());\n        // Register imageUpload command.\n        editor.commands.add('imageInsert', new ImageInsertCommand(editor));\n    }\n}\n// Creates a view element representing the image.\n//\n//\t\t<figure class=\"image\"><img></img></figure>\n//\n// Note that `alt` and `src` attributes are converted separately, so they are not included.\n//\n// @private\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\n// @returns {module:engine/view/containerelement~ContainerElement}\nexport function createImageViewElement(writer) {\n    const emptyElement = writer.createEmptyElement('img');\n    const figure = writer.createContainerElement('figure', { class: 'image' });\n    writer.insert(writer.createPositionAt(figure, 0), emptyElement);\n    return figure;\n}","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module link/findlinkrange\n */\n\n/**\n * Returns a range containing the entire link in which the given `position` is placed.\n *\n * It can be used e.g. to get the entire range on which the `linkHref` attribute needs to be changed when having a\n * selection inside a link.\n *\n * @param {module:engine/model/position~Position} position The start position.\n * @param {String} value The `linkHref` attribute value.\n * @returns {module:engine/model/range~Range} The link range.\n */\nexport default function findLinkRange( position, value, model ) {\n\treturn model.createRange( _findBound( position, value, true, model ), _findBound( position, value, false, model ) );\n}\n\n// Walks forward or backward (depends on the `lookBack` flag), node by node, as long as they have the same `linkHref` attribute value\n// and returns a position just before or after (depends on the `lookBack` flag) the last matched node.\n//\n// @param {module:engine/model/position~Position} position The start position.\n// @param {String} value The `linkHref` attribute value.\n// @param {Boolean} lookBack Whether the walk direction is forward (`false`) or backward (`true`).\n// @returns {module:engine/model/position~Position} The position just before the last matched node.\nfunction _findBound( position, value, lookBack, model ) {\n\t// Get node before or after position (depends on `lookBack` flag).\n\t// When position is inside text node then start searching from text node.\n\tlet node = position.textNode || ( lookBack ? position.nodeBefore : position.nodeAfter );\n\n\tlet lastNode = null;\n\n\twhile ( node && node.getAttribute( 'linkHref' ) == value ) {\n\t\tlastNode = node;\n\t\tnode = lookBack ? node.previousSibling : node.nextSibling;\n\t}\n\n\treturn lastNode ? model.createPositionAt( lastNode, lookBack ? 'before' : 'after' ) : position;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module link/linkcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport findLinkRange from './findlinkrange';\nimport toMap from '@ckeditor/ckeditor5-utils/src/tomap';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\n\n/**\n * The link command. It is used by the {@link module:link/link~Link link feature}.\n *\n * @extends module:core/command~Command\n */\nexport default class LinkCommand extends Command {\n\t/**\n\t * The value of the `'linkHref'` attribute if the start of the selection is located in a node with this attribute.\n\t *\n\t * @observable\n\t * @readonly\n\t * @member {Object|undefined} #value\n\t */\n\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * A collection of {@link module:link/utils~ManualDecorator manual decorators}\n\t\t * corresponding to the {@link module:link/link~LinkConfig#decorators decorator configuration}.\n\t\t *\n\t\t * You can consider it a model with states of manual decorators added to the currently selected link.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:utils/collection~Collection}\n\t\t */\n\t\tthis.manualDecorators = new Collection();\n\t}\n\n\t/**\n\t * Synchronizes the state of {@link #manualDecorators} with the currently present elements in the model.\n\t */\n\trestoreManualDecoratorStates() {\n\t\tfor ( const manualDecorator of this.manualDecorators ) {\n\t\t\tmanualDecorator.value = this._getDecoratorStateFromModel( manualDecorator.id );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\n\t\tthis.value = doc.selection.getAttribute( 'linkHref' );\n\n\t\tfor ( const manualDecorator of this.manualDecorators ) {\n\t\t\tmanualDecorator.value = this._getDecoratorStateFromModel( manualDecorator.id );\n\t\t}\n\n\t\tthis.isEnabled = model.schema.checkAttributeInSelection( doc.selection, 'linkHref' );\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * When the selection is non-collapsed, the `linkHref` attribute will be applied to nodes inside the selection, but only to\n\t * those nodes where the `linkHref` attribute is allowed (disallowed nodes will be omitted).\n\t *\n\t * When the selection is collapsed and is not inside the text with the `linkHref` attribute, a\n\t * new {@link module:engine/model/text~Text text node} with the `linkHref` attribute will be inserted in place of the caret, but\n\t * only if such element is allowed in this place. The `_data` of the inserted text will equal the `href` parameter.\n\t * The selection will be updated to wrap the just inserted text node.\n\t *\n\t * When the selection is collapsed and inside the text with the `linkHref` attribute, the attribute value will be updated.\n\t *\n\t * # Decorators and model attribute management\n\t *\n\t * There is an optional argument to this command that applies or removes model\n\t * {@glink framework/guides/architecture/editing-engine#text-attributes text attributes} brought by\n\t * {@link module:link/utils~ManualDecorator manual link decorators}.\n\t *\n\t * Text attribute names in the model correspond to the entries in the {@link module:link/link~LinkConfig#decorators configuration}.\n\t * For every decorator configured, a model text attribute exists with the \"link\" prefix. For example, a `'linkMyDecorator'` attribute\n\t * corresponds to `'myDecorator'` in the configuration.\n\t *\n\t * To learn more about link decorators, check out the {@link module:link/link~LinkConfig#decorators `config.link.decorators`}\n\t * documentation.\n\t *\n\t * Here is how to manage decorator attributes with the link command:\n\t *\n\t *\t\tconst linkCommand = editor.commands.get( 'link' );\n\t *\n\t *\t\t// Adding a new decorator attribute.\n\t *\t\tlinkCommand.execute( 'http://example.com', {\n\t *\t\t\tlinkIsExternal: true\n\t *\t\t} );\n\t *\n\t *\t\t// Removing a decorator attribute from the selection.\n\t *\t\tlinkCommand.execute( 'http://example.com', {\n\t *\t\t\tlinkIsExternal: false\n\t *\t\t} );\n\t *\n\t *\t\t// Adding multiple decorator attributes at the same time.\n\t *\t\tlinkCommand.execute( 'http://example.com', {\n\t *\t\t\tlinkIsExternal: true,\n\t *\t\t\tlinkIsDownloadable: true,\n\t *\t\t} );\n\t *\n\t *\t\t// Removing and adding decorator attributes at the same time.\n\t *\t\tlinkCommand.execute( 'http://example.com', {\n\t *\t\t\tlinkIsExternal: false,\n\t *\t\t\tlinkFoo: true,\n\t *\t\t\tlinkIsDownloadable: false,\n\t *\t\t} );\n\t *\n\t * **Note**: If the decorator attribute name is not specified, its state remains untouched.\n\t *\n\t * **Note**: {@link module:link/unlinkcommand~UnlinkCommand#execute `UnlinkCommand#execute()`} removes all\n\t * decorator attributes.\n\t *\n\t * @fires execute\n\t * @param {String} href Link destination.\n\t * @param {Object} [manualDecoratorIds={}] The information about manual decorator attributes to be applied or removed upon execution.\n\t */\n\texecute( href, manualDecoratorIds = {} ) {\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\t\t// Stores information about manual decorators to turn them on/off when command is applied.\n\t\tconst truthyManualDecorators = [];\n\t\tconst falsyManualDecorators = [];\n\n\t\tfor ( const name in manualDecoratorIds ) {\n\t\t\tif ( manualDecoratorIds[ name ] ) {\n\t\t\t\ttruthyManualDecorators.push( name );\n\t\t\t} else {\n\t\t\t\tfalsyManualDecorators.push( name );\n\t\t\t}\n\t\t}\n\n\t\tmodel.change( writer => {\n\t\t\t// If selection is collapsed then update selected link or insert new one at the place of caret.\n\t\t\tif ( selection.isCollapsed ) {\n\t\t\t\tconst position = selection.getFirstPosition();\n\n\t\t\t\t// When selection is inside text with `linkHref` attribute.\n\t\t\t\tif ( selection.hasAttribute( 'linkHref' ) ) {\n\t\t\t\t\t// Then update `linkHref` value.\n\t\t\t\t\tconst linkRange = findLinkRange( position, selection.getAttribute( 'linkHref' ), model );\n\n\t\t\t\t\twriter.setAttribute( 'linkHref', href, linkRange );\n\n\t\t\t\t\ttruthyManualDecorators.forEach( item => {\n\t\t\t\t\t\twriter.setAttribute( item, true, linkRange );\n\t\t\t\t\t} );\n\n\t\t\t\t\tfalsyManualDecorators.forEach( item => {\n\t\t\t\t\t\twriter.removeAttribute( item, linkRange );\n\t\t\t\t\t} );\n\n\t\t\t\t\t// Create new range wrapping changed link.\n\t\t\t\t\twriter.setSelection( linkRange );\n\t\t\t\t}\n\t\t\t\t// If not then insert text node with `linkHref` attribute in place of caret.\n\t\t\t\t// However, since selection in collapsed, attribute value will be used as data for text node.\n\t\t\t\t// So, if `href` is empty, do not create text node.\n\t\t\t\telse if ( href !== '' ) {\n\t\t\t\t\tconst attributes = toMap( selection.getAttributes() );\n\n\t\t\t\t\tattributes.set( 'linkHref', href );\n\n\t\t\t\t\ttruthyManualDecorators.forEach( item => {\n\t\t\t\t\t\tattributes.set( item, true );\n\t\t\t\t\t} );\n\n\t\t\t\t\tconst node = writer.createText( href, attributes );\n\n\t\t\t\t\tmodel.insertContent( node, position );\n\n\t\t\t\t\t// Create new range wrapping created node.\n\t\t\t\t\twriter.setSelection( writer.createRangeOn( node ) );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// If selection has non-collapsed ranges, we change attribute on nodes inside those ranges\n\t\t\t\t// omitting nodes where `linkHref` attribute is disallowed.\n\t\t\t\tconst ranges = model.schema.getValidRanges( selection.getRanges(), 'linkHref' );\n\n\t\t\t\tfor ( const range of ranges ) {\n\t\t\t\t\twriter.setAttribute( 'linkHref', href, range );\n\n\t\t\t\t\ttruthyManualDecorators.forEach( item => {\n\t\t\t\t\t\twriter.setAttribute( item, true, range );\n\t\t\t\t\t} );\n\n\t\t\t\t\tfalsyManualDecorators.forEach( item => {\n\t\t\t\t\t\twriter.removeAttribute( item, range );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Provides information whether a decorator with a given name is present in the currently processed selection.\n\t *\n\t * @private\n\t * @param {String} decoratorName The name of the manual decorator used in the model\n\t * @returns {Boolean} The information whether a given decorator is currently present in the selection.\n\t */\n\t_getDecoratorStateFromModel( decoratorName ) {\n\t\tconst doc = this.editor.model.document;\n\t\treturn doc.selection.getAttribute( decoratorName ) || false;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module link/unlinkcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport findLinkRange from './findlinkrange';\n\n/**\n * The unlink command. It is used by the {@link module:link/link~Link link plugin}.\n *\n * @extends module:core/command~Command\n */\nexport default class UnlinkCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tthis.isEnabled = this.editor.model.document.selection.hasAttribute( 'linkHref' );\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * When the selection is collapsed, it removes the `linkHref` attribute from each node with the same `linkHref` attribute value.\n\t * When the selection is non-collapsed, it removes the `linkHref` attribute from each node in selected ranges.\n\t *\n\t * # Decorators\n\t *\n\t * If {@link module:link/link~LinkConfig#decorators `config.link.decorators`} is specified,\n\t * all configured decorators are removed together with the `linkHref` attribute.\n\t *\n\t * @fires execute\n\t */\n\texecute() {\n\t\tconst editor = this.editor;\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\t\tconst linkCommand = editor.commands.get( 'link' );\n\n\t\tmodel.change( writer => {\n\t\t\t// Get ranges to unlink.\n\t\t\tconst rangesToUnlink = selection.isCollapsed ?\n\t\t\t\t[ findLinkRange( selection.getFirstPosition(), selection.getAttribute( 'linkHref' ), model ) ] : selection.getRanges();\n\n\t\t\t// Remove `linkHref` attribute from specified ranges.\n\t\t\tfor ( const range of rangesToUnlink ) {\n\t\t\t\twriter.removeAttribute( 'linkHref', range );\n\t\t\t\t// If there are registered custom attributes, then remove them during unlink.\n\t\t\t\tif ( linkCommand ) {\n\t\t\t\t\tfor ( const manualDecorator of linkCommand.manualDecorators ) {\n\t\t\t\t\t\twriter.removeAttribute( manualDecorator.id, range );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n}\n","import baseSlice from './_baseSlice.js';\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nexport default castSlice;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nexport default hasUnicode;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nexport default asciiToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nexport default unicodeToArray;\n","import asciiToArray from './_asciiToArray.js';\nimport hasUnicode from './_hasUnicode.js';\nimport unicodeToArray from './_unicodeToArray.js';\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nexport default stringToArray;\n","import castSlice from './_castSlice.js';\nimport hasUnicode from './_hasUnicode.js';\nimport stringToArray from './_stringToArray.js';\nimport toString from './toString.js';\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nexport default createCaseFirst;\n","import createCaseFirst from './_createCaseFirst.js';\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nexport default upperFirst;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module link/utils\n */\nimport { upperFirst } from 'lodash-es';\nconst ATTRIBUTE_WHITESPACES = /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205f\\u3000]/g;\n// eslint-disable-line no-control-regex\nconst SAFE_URL = /^(?:(?:https?|ftps?|mailto):|[^a-z]|[a-z+.-]+(?:[^a-z+.:-]|$))/i;\n/**\n * Returns `true` if a given view node is the link element.\n *\n * @param {module:engine/view/node~Node} node\n * @returns {Boolean}\n */\nexport function isLinkElement(node) {\n    return node.is('attributeElement') && !!node.getCustomProperty('link');\n}\n/**\n * Creates link {@link module:engine/view/attributeelement~AttributeElement} with the provided `href` attribute.\n *\n * @param {String} href\n * @returns {module:engine/view/attributeelement~AttributeElement}\n */\nexport function createLinkElement(href, writer) {\n    // Priority 5 - https://github.com/ckeditor/ckeditor5-link/issues/121.\n    const linkElement = writer.createAttributeElement('a', { href }, { priority: 5 });\n    writer.setCustomProperty('link', true, linkElement);\n    return linkElement;\n}\n/**\n * Returns a safe URL based on a given value.\n *\n * A URL is considered safe if it is safe for the user (does not contain any malicious code).\n *\n * If a URL is considered unsafe, a simple `\"#\"` is returned.\n *\n * @protected\n * @param {*} url\n * @returns {String} Safe URL.\n */\nexport function ensureSafeUrl(url) {\n    url = String(url);\n    return isSafeUrl(url) ? url : '#';\n}\n// Checks whether the given URL is safe for the user (does not contain any malicious code).\n//\n// @param {String} url URL to check.\nfunction isSafeUrl(url) {\n    const normalizedUrl = url.replace(ATTRIBUTE_WHITESPACES, '');\n    return normalizedUrl.match(SAFE_URL);\n}\n/**\n * Returns the {@link module:link/link~LinkConfig#decorators `config.link.decorators`} configuration processed\n * to respect the locale of the editor, i.e. to display the {@link module:link/link~LinkDecoratorManualDefinition label}\n * in the correct language.\n *\n * **Note**: Only the few most commonly used labels are translated automatically. Other labels should be manually\n * translated in the {@link module:link/link~LinkConfig#decorators `config.link.decorators`} configuration.\n *\n * @param {module:utils/locale~Locale#t} t shorthand for {@link module:utils/locale~Locale#t Locale#t}\n * @param {Array.<module:link/link~LinkDecoratorDefinition>} The decorator reference\n * where the label values should be localized.\n * @returns {Array.<module:link/link~LinkDecoratorDefinition>}\n */\nexport function getLocalizedDecorators(t, decorators) {\n    const localizedDecoratorsLabels = {\n        'Open in a new tab': t('bd'),\n        'Downloadable': t('be')\n    };\n    decorators.forEach(decorator => {\n        if (decorator.label && localizedDecoratorsLabels[decorator.label]) {\n            decorator.label = localizedDecoratorsLabels[decorator.label];\n        }\n        return decorator;\n    });\n    return decorators;\n}\n/**\n * Converts an object with defined decorators to a normalized array of decorators. The `id` key is added for each decorator and\n * is used as the attribute's name in the model.\n *\n * @param {Object.<String, module:link/link~LinkDecoratorDefinition>} decorators\n * @returns {Array.<module:link/link~LinkDecoratorDefinition>}\n */\nexport function normalizeDecorators(decorators) {\n    const retArray = [];\n    if (decorators) {\n        for (const [key, value] of Object.entries(decorators)) {\n            const decorator = Object.assign({}, value, { id: `link${ upperFirst(key) }` });\n            retArray.push(decorator);\n        }\n    }\n    return retArray;\n}","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module link/utils\n */\n\n/**\n * Helper class that ties together all {@link module:link/link~LinkDecoratorAutomaticDefinition} and provides\n * a {@link module:engine/conversion/downcasthelpers~DowncastHelpers#attributeToElement downcast dispatcher} for them.\n */\nexport default class AutomaticDecorators {\n\tconstructor() {\n\t\t/**\n\t\t * Stores the definition of {@link module:link/link~LinkDecoratorAutomaticDefinition automatic decorators}.\n\t\t * This data is used as a source for a downcast dispatcher to create a proper conversion to output data.\n\t\t *\n\t\t * @private\n\t\t * @type {Set}\n\t\t */\n\t\tthis._definitions = new Set();\n\t}\n\n\t/**\n\t * Gives information about the number of decorators stored in the {@link module:link/utils~AutomaticDecorators} instance.\n\t *\n\t * @readonly\n\t * @protected\n\t * @type {Number}\n\t */\n\tget length() {\n\t\treturn this._definitions.size;\n\t}\n\n\t/**\n\t * Adds automatic decorator objects or an array with them to be used during downcasting.\n\t *\n\t * @param {module:link/link~LinkDecoratorAutomaticDefinition|Array.<module:link/link~LinkDecoratorAutomaticDefinition>} item\n\t * A configuration object of automatic rules for decorating links. It might also be an array of such objects.\n\t */\n\tadd( item ) {\n\t\tif ( Array.isArray( item ) ) {\n\t\t\titem.forEach( item => this._definitions.add( item ) );\n\t\t} else {\n\t\t\tthis._definitions.add( item );\n\t\t}\n\t}\n\n\t/**\n\t * Provides the conversion helper used in the {@link module:engine/conversion/downcasthelpers~DowncastHelpers#add} method.\n\t *\n\t * @returns {Function} A dispatcher function used as conversion helper\n\t * in {@link module:engine/conversion/downcasthelpers~DowncastHelpers#add}.\n\t */\n\tgetDispatcher() {\n\t\treturn dispatcher => {\n\t\t\tdispatcher.on( 'attribute:linkHref', ( evt, data, conversionApi ) => {\n\t\t\t\t// There is only test as this behavior decorates links and\n\t\t\t\t// it is run before dispatcher which actually consumes this node.\n\t\t\t\t// This allows on writing own dispatcher with highest priority,\n\t\t\t\t// which blocks both native converter and this additional decoration.\n\t\t\t\tif ( !conversionApi.consumable.test( data.item, 'attribute:linkHref' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst viewWriter = conversionApi.writer;\n\t\t\t\tconst viewSelection = viewWriter.document.selection;\n\n\t\t\t\tfor ( const item of this._definitions ) {\n\t\t\t\t\tconst viewElement = viewWriter.createAttributeElement( 'a', item.attributes, {\n\t\t\t\t\t\tpriority: 5\n\t\t\t\t\t} );\n\t\t\t\t\tviewWriter.setCustomProperty( 'link', true, viewElement );\n\t\t\t\t\tif ( item.callback( data.attributeNewValue ) ) {\n\t\t\t\t\t\tif ( data.item.is( 'selection' ) ) {\n\t\t\t\t\t\t\tviewWriter.wrap( viewSelection.getFirstRange(), viewElement );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tviewWriter.wrap( conversionApi.mapper.toViewRange( data.range ), viewElement );\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tviewWriter.unwrap( conversionApi.mapper.toViewRange( data.range ), viewElement );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, { priority: 'high' } );\n\t\t};\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module link/utils\n */\n\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * Helper class that stores manual decorators with observable {@link module:link/utils~ManualDecorator#value}\n * to support integration with the UI state. An instance of this class is a model with the state of individual manual decorators.\n * These decorators are kept as collections in {@link module:link/linkcommand~LinkCommand#manualDecorators}.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class ManualDecorator {\n\t/**\n\t * Creates a new instance of {@link module:link/utils~ManualDecorator}.\n\t *\n\t * @param {Object} config\n\t * @param {String} config.id The name of the attribute used in the model that represents a given manual decorator.\n\t * For example: `'linkIsExternal'`.\n\t * @param {String} config.label The label used in the user interface to toggle the manual decorator.\n\t * @param {Object} config.attributes A set of attributes added to output data when the decorator is active for a specific link.\n\t * Attributes should keep the format of attributes defined in {@link module:engine/view/elementdefinition~ElementDefinition}.\n\t */\n\tconstructor( { id, label, attributes } ) {\n\t\t/**\n\t\t * An ID of a manual decorator which is the name of the attribute in the model, for example: 'linkManualDecorator0'.\n\t\t *\n\t\t * @type {String}\n\t\t */\n\t\tthis.id = id;\n\n\t\t/**\n\t\t * The value of the current manual decorator. It reflects its state from the UI.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} module:link/utils~ManualDecorator#value\n\t\t */\n\t\tthis.set( 'value' );\n\n\t\t/**\n\t\t * The label used in the user interface to toggle the manual decorator.\n\t\t *\n\t\t * @type {String}\n\t\t */\n\t\tthis.label = label;\n\n\t\t/**\n\t\t * A set of attributes added to downcasted data when the decorator is activated for a specific link.\n\t\t * Attributes should be added in a form of attributes defined in {@link module:engine/view/elementdefinition~ElementDefinition}.\n\t\t *\n\t\t * @type {Object}\n\t\t */\n\t\tthis.attributes = attributes;\n\t}\n}\n\nmix( ManualDecorator, ObservableMixin );\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/utils/bindtwostepcarettoattribute\n */\n\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport priorities from '@ckeditor/ckeditor5-utils/src/priorities';\n\n/**\n * This helper enables the two-step caret (phantom) movement behavior for the given {@link module:engine/model/model~Model}\n * attribute on arrow right (<kbd>→</kbd>) and left (<kbd>←</kbd>) key press.\n *\n * Thanks to this (phantom) caret movement the user is able to type before/after as well as at the\n * beginning/end of an attribute.\n *\n * **Note:** This helper support right–to–left (Arabic, Hebrew, etc.) content by mirroring its behavior\n * but for the sake of simplicity examples showcase only left–to–right use–cases.\n *\n * # Forward movement\n *\n * ## \"Entering\" an attribute:\n *\n * When this behavior is enabled for the `a` attribute and the selection is right before it\n * (at the attribute boundary), pressing the right arrow key will not move the selection but update its\n * attributes accordingly:\n *\n * * When enabled:\n *\n *   \t\tfoo{}<$text a=\"true\">bar</$text>\n *\n *    <kbd>→</kbd>\n *\n *   \t\tfoo<$text a=\"true\">{}bar</$text>\n *\n * * When disabled:\n *\n *   \t\tfoo{}<$text a=\"true\">bar</$text>\n *\n *   <kbd>→</kbd>\n *\n *   \t\tfoo<$text a=\"true\">b{}ar</$text>\n *\n *\n * ## \"Leaving\" an attribute:\n *\n * * When enabled:\n *\n *   \t\t<$text a=\"true\">bar{}</$text>baz\n *\n *    <kbd>→</kbd>\n *\n *   \t\t<$text a=\"true\">bar</$text>{}baz\n *\n * * When disabled:\n *\n *   \t\t<$text a=\"true\">bar{}</$text>baz\n *\n *   <kbd>→</kbd>\n *\n *   \t\t<$text a=\"true\">bar</$text>b{}az\n *\n * # Backward movement\n *\n * * When enabled:\n *\n *   \t\t<$text a=\"true\">bar</$text>{}baz\n *\n *    <kbd>←</kbd>\n *\n *   \t\t<$text a=\"true\">bar{}</$text>baz\n *\n * * When disabled:\n *\n *   \t\t<$text a=\"true\">bar</$text>{}baz\n *\n *   <kbd>←</kbd>\n *\n *   \t\t<$text a=\"true\">ba{}r</$text>b{}az\n *\n * @param {Object} options Helper options.\n * @param {module:engine/view/view~View} options.view View controller instance.\n * @param {module:engine/model/model~Model} options.model Data model instance.\n * @param {module:utils/dom/emittermixin~Emitter} options.emitter The emitter to which this behavior should be added\n * (e.g. a plugin instance).\n * @param {String} options.attribute Attribute for which this behavior will be added.\n * @param {module:utils/locale~Locale} options.locale The {@link module:core/editor/editor~Editor#locale} instance.\n */\nexport default function bindTwoStepCaretToAttribute( { view, model, emitter, attribute, locale } ) {\n\tconst twoStepCaretHandler = new TwoStepCaretHandler( model, emitter, attribute );\n\tconst modelSelection = model.document.selection;\n\n\t// Listen to keyboard events and handle the caret movement according to the 2-step caret logic.\n\t//\n\t// Note: This listener has the \"high+1\" priority:\n\t// * \"high\" because of the filler logic implemented in the renderer which also engages on #keydown.\n\t// When the gravity is overridden the attributes of the (model) selection attributes are reset.\n\t// It may end up with the filler kicking in and breaking the selection.\n\t// * \"+1\" because we would like to avoid collisions with other features (like Widgets), which\n\t// take over the keydown events with the \"high\" priority. Two-step caret movement takes precedence\n\t// over Widgets in that matter.\n\t//\n\t// Find out more in https://github.com/ckeditor/ckeditor5-engine/issues/1301.\n\temitter.listenTo( view.document, 'keydown', ( evt, data ) => {\n\t\t// This implementation works only for collapsed selection.\n\t\tif ( !modelSelection.isCollapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// When user tries to expand the selection or jump over the whole word or to the beginning/end then\n\t\t// two-steps movement is not necessary.\n\t\tif ( data.shiftKey || data.altKey || data.ctrlKey ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst arrowRightPressed = data.keyCode == keyCodes.arrowright;\n\t\tconst arrowLeftPressed = data.keyCode == keyCodes.arrowleft;\n\n\t\t// When neither left or right arrow has been pressed then do noting.\n\t\tif ( !arrowRightPressed && !arrowLeftPressed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst position = modelSelection.getFirstPosition();\n\t\tconst contentDirection = locale.contentLanguageDirection;\n\t\tlet isMovementHandled;\n\n\t\tif ( ( contentDirection === 'ltr' && arrowRightPressed ) || ( contentDirection === 'rtl' && arrowLeftPressed ) ) {\n\t\t\tisMovementHandled = twoStepCaretHandler.handleForwardMovement( position, data );\n\t\t} else {\n\t\t\tisMovementHandled = twoStepCaretHandler.handleBackwardMovement( position, data );\n\t\t}\n\n\t\t// Stop the keydown event if the two-step caret movement handled it. Avoid collisions\n\t\t// with other features which may also take over the caret movement (e.g. Widget).\n\t\tif ( isMovementHandled ) {\n\t\t\tevt.stop();\n\t\t}\n\t}, { priority: priorities.get( 'high' ) + 1 } );\n}\n\n/**\n * This is a protected helper–class for {@link module:engine/utils/bindtwostepcarettoattribute}.\n * It handles the state of the 2-step caret movement for a single {@link module:engine/model/model~Model}\n * attribute upon the `keypress` in the {@link module:engine/view/view~View}.\n *\n * @protected\n */\nexport class TwoStepCaretHandler {\n\t/*\n\t * Creates two step handler instance.\n\t *\n\t * @param {module:engine/model/model~Model} model Data model instance.\n\t * @param {module:utils/dom/emittermixin~Emitter} emitter The emitter to which this behavior should be added\n\t * (e.g. a plugin instance).\n\t * @param {String} attribute Attribute for which the behavior will be added.\n\t */\n\tconstructor( model, emitter, attribute ) {\n\t\t/**\n\t\t * The model instance this class instance operates on.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/model~Model#schema}\n\t\t */\n\t\tthis.model = model;\n\n\t\t/**\n\t\t * The Attribute this class instance operates on.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.attribute = attribute;\n\n\t\t/**\n\t\t * A reference to the document selection.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/selection~Selection}\n\t\t */\n\t\tthis._modelSelection = model.document.selection;\n\n\t\t/**\n\t\t * The current UID of the overridden gravity, as returned by\n\t\t * {@link module:engine/model/writer~Writer#overrideSelectionGravity}.\n\t\t *\n\t\t * @private\n\t\t * @member {String}\n\t\t */\n\t\tthis._overrideUid = null;\n\n\t\t/**\n\t\t * A flag indicating that the automatic gravity restoration for this attribute\n\t\t * should not happen upon the next\n\t\t * {@link module:engine/model/selection~Selection#event:change:range} event.\n\t\t *\n\t\t * @private\n\t\t * @member {String}\n\t\t */\n\t\tthis._isNextGravityRestorationSkipped = false;\n\n\t\t// The automatic gravity restoration logic.\n\t\temitter.listenTo( this._modelSelection, 'change:range', ( evt, data ) => {\n\t\t\t// Skipping the automatic restoration is needed if the selection should change\n\t\t\t// but the gravity must remain overridden afterwards. See the #handleBackwardMovement\n\t\t\t// to learn more.\n\t\t\tif ( this._isNextGravityRestorationSkipped ) {\n\t\t\t\tthis._isNextGravityRestorationSkipped = false;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Skip automatic restore when the gravity is not overridden — simply, there's nothing to restore\n\t\t\t// at this moment.\n\t\t\tif ( !this._isGravityOverridden ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Skip automatic restore when the change is indirect AND the selection is at the attribute boundary.\n\t\t\t// It means that e.g. if the change was external (collaboration) and the user had their\n\t\t\t// selection around the link, its gravity should remain intact in this change:range event.\n\t\t\tif ( !data.directChange && isAtBoundary( this._modelSelection.getFirstPosition(), attribute ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._restoreGravity();\n\t\t} );\n\t}\n\n\t/**\n\t * Updates the document selection and the view according to the two–step caret movement state\n\t * when moving **forwards**. Executed upon `keypress` in the {@link module:engine/view/view~View}.\n\t *\n\t * @param {module:engine/model/position~Position} position The model position at the moment of the key press.\n\t * @param {module:engine/view/observer/domeventdata~DomEventData} data Data of the key press.\n\t * @returns {Boolean} `true` when the handler prevented caret movement\n\t */\n\thandleForwardMovement( position, data ) {\n\t\tconst attribute = this.attribute;\n\n\t\t// DON'T ENGAGE 2-SCM if gravity is already overridden. It means that we just entered\n\t\t//\n\t\t// \t\t<paragraph>foo<$text attribute>{}bar</$text>baz</paragraph>\n\t\t//\n\t\t// or left the attribute\n\t\t//\n\t\t// \t\t<paragraph>foo<$text attribute>bar</$text>{}baz</paragraph>\n\t\t//\n\t\t// and the gravity will be restored automatically.\n\t\tif ( this._isGravityOverridden ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// DON'T ENGAGE 2-SCM when the selection is at the beginning of the block AND already has the\n\t\t// attribute:\n\t\t// * when the selection was initially set there using the mouse,\n\t\t// * when the editor has just started\n\t\t//\n\t\t//\t\t<paragraph><$text attribute>{}bar</$text>baz</paragraph>\n\t\t//\n\t\tif ( position.isAtStart && this._hasSelectionAttribute ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// ENGAGE 2-SCM when about to leave one attribute value and enter another:\n\t\t//\n\t\t// \t\t<paragraph><$text attribute=\"1\">foo{}</$text><$text attribute=\"2\">bar</$text></paragraph>\n\t\t//\n\t\t// but DON'T when already in between of them (no attribute selection):\n\t\t//\n\t\t// \t\t<paragraph><$text attribute=\"1\">foo</$text>{}<$text attribute=\"2\">bar</$text></paragraph>\n\t\t//\n\t\tif ( isBetweenDifferentValues( position, attribute ) && this._hasSelectionAttribute ) {\n\t\t\tthis._preventCaretMovement( data );\n\t\t\tthis._removeSelectionAttribute();\n\n\t\t\treturn true;\n\t\t}\n\n\t\t// ENGAGE 2-SCM when entering an attribute:\n\t\t//\n\t\t// \t\t<paragraph>foo{}<$text attribute>bar</$text>baz</paragraph>\n\t\t//\n\t\tif ( isAtStartBoundary( position, attribute ) ) {\n\t\t\tthis._preventCaretMovement( data );\n\t\t\tthis._overrideGravity();\n\n\t\t\treturn true;\n\t\t}\n\n\t\t// ENGAGE 2-SCM when leaving an attribute:\n\t\t//\n\t\t//\t\t<paragraph>foo<$text attribute>bar{}</$text>baz</paragraph>\n\t\t//\n\t\tif ( isAtEndBoundary( position, attribute ) && this._hasSelectionAttribute ) {\n\t\t\tthis._preventCaretMovement( data );\n\t\t\tthis._overrideGravity();\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the document selection and the view according to the two–step caret movement state\n\t * when moving **backwards**. Executed upon `keypress` in the {@link module:engine/view/view~View}.\n\t *\n\t * @param {module:engine/model/position~Position} position The model position at the moment of the key press.\n\t * @param {module:engine/view/observer/domeventdata~DomEventData} data Data of the key press.\n\t * @returns {Boolean} `true` when the handler prevented caret movement\n\t */\n\thandleBackwardMovement( position, data ) {\n\t\tconst attribute = this.attribute;\n\n\t\t// When the gravity is already overridden...\n\t\tif ( this._isGravityOverridden ) {\n\t\t\t// ENGAGE 2-SCM & REMOVE SELECTION ATTRIBUTE\n\t\t\t// when about to leave one attribute value and enter another:\n\t\t\t//\n\t\t\t// \t\t<paragraph><$text attribute=\"1\">foo</$text><$text attribute=\"2\">{}bar</$text></paragraph>\n\t\t\t//\n\t\t\t// but DON'T when already in between of them (no attribute selection):\n\t\t\t//\n\t\t\t// \t\t<paragraph><$text attribute=\"1\">foo</$text>{}<$text attribute=\"2\">bar</$text></paragraph>\n\t\t\t//\n\t\t\tif ( isBetweenDifferentValues( position, attribute ) && this._hasSelectionAttribute ) {\n\t\t\t\tthis._preventCaretMovement( data );\n\t\t\t\tthis._restoreGravity();\n\t\t\t\tthis._removeSelectionAttribute();\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// ENGAGE 2-SCM when at any boundary of the attribute:\n\t\t\t//\n\t\t\t// \t\t<paragraph>foo<$text attribute>bar</$text>{}baz</paragraph>\n\t\t\t// \t\t<paragraph>foo<$text attribute>{}bar</$text>baz</paragraph>\n\t\t\t//\n\t\t\telse {\n\t\t\t\tthis._preventCaretMovement( data );\n\t\t\t\tthis._restoreGravity();\n\n\t\t\t\t// REMOVE SELECTION ATRIBUTE at the beginning of the block.\n\t\t\t\t// It's like restoring gravity but towards a non-existent content when\n\t\t\t\t// the gravity is overridden:\n\t\t\t\t//\n\t\t\t\t// \t\t<paragraph><$text attribute>{}bar</$text></paragraph>\n\t\t\t\t//\n\t\t\t\t// becomes:\n\t\t\t\t//\n\t\t\t\t// \t\t<paragraph>{}<$text attribute>bar</$text></paragraph>\n\t\t\t\t//\n\t\t\t\tif ( position.isAtStart ) {\n\t\t\t\t\tthis._removeSelectionAttribute();\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else {\n\t\t\t// ENGAGE 2-SCM when between two different attribute values but selection has no attribute:\n\t\t\t//\n\t\t\t// \t\t<paragraph><$text attribute=\"1\">foo</$text>{}<$text attribute=\"2\">bar</$text></paragraph>\n\t\t\t//\n\t\t\tif ( isBetweenDifferentValues( position, attribute ) && !this._hasSelectionAttribute ) {\n\t\t\t\tthis._preventCaretMovement( data );\n\t\t\t\tthis._setSelectionAttributeFromTheNodeBefore( position );\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// End of block boundary cases:\n\t\t\t//\n\t\t\t// \t\t<paragraph><$text attribute>bar{}</$text></paragraph>\n\t\t\t// \t\t<paragraph><$text attribute>bar</$text>{}</paragraph>\n\t\t\t//\n\t\t\tif ( position.isAtEnd && isAtEndBoundary( position, attribute ) ) {\n\t\t\t\t// DON'T ENGAGE 2-SCM if the selection has the attribute already.\n\t\t\t\t// This is a common selection if set using the mouse.\n\t\t\t\t//\n\t\t\t\t// \t\t<paragraph><$text attribute>bar{}</$text></paragraph>\n\t\t\t\t//\n\t\t\t\tif ( this._hasSelectionAttribute ) {\n\t\t\t\t\t// DON'T ENGAGE 2-SCM if the attribute at the end of the block which has length == 1.\n\t\t\t\t\t// Make sure the selection will not the attribute after it moves backwards.\n\t\t\t\t\t//\n\t\t\t\t\t// \t\t<paragraph>foo<$text attribute>b{}</$text></paragraph>\n\t\t\t\t\t//\n\t\t\t\t\tif ( isStepAfterTheAttributeBoundary( position, attribute ) ) {\n\t\t\t\t\t\t// Skip the automatic gravity restore upon the next selection#change:range event.\n\t\t\t\t\t\t// If not skipped, it would automatically restore the gravity, which should remain\n\t\t\t\t\t\t// overridden.\n\t\t\t\t\t\tthis._skipNextAutomaticGravityRestoration();\n\t\t\t\t\t\tthis._overrideGravity();\n\n\t\t\t\t\t\t// Don't return \"true\" here because we didn't call _preventCaretMovement.\n\t\t\t\t\t\t// Returning here will destabilize the filler logic, which also listens to\n\t\t\t\t\t\t// keydown (and the event would be stopped).\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// ENGAGE 2-SCM if the selection has no attribute. This may happen when the user\n\t\t\t\t// left the attribute using a FORWARD 2-SCM.\n\t\t\t\t//\n\t\t\t\t// \t\t<paragraph><$text attribute>bar</$text>{}</paragraph>\n\t\t\t\t//\n\t\t\t\telse {\n\t\t\t\t\tthis._preventCaretMovement( data );\n\t\t\t\t\tthis._setSelectionAttributeFromTheNodeBefore( position );\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// REMOVE SELECTION ATRIBUTE when restoring gravity towards a non-existent content at the\n\t\t\t// beginning of the block.\n\t\t\t//\n\t\t\t// \t\t<paragraph>{}<$text attribute>bar</$text></paragraph>\n\t\t\t//\n\t\t\tif ( position.isAtStart ) {\n\t\t\t\tif ( this._hasSelectionAttribute ) {\n\t\t\t\t\tthis._removeSelectionAttribute();\n\t\t\t\t\tthis._preventCaretMovement( data );\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// DON'T ENGAGE 2-SCM when about to enter of leave an attribute.\n\t\t\t// We need to check if the caret is a one position before the attribute boundary:\n\t\t\t//\n\t\t\t// \t\t<paragraph>foo<$text attribute>b{}ar</$text>baz</paragraph>\n\t\t\t// \t\t<paragraph>foo<$text attribute>bar</$text>b{}az</paragraph>\n\t\t\t//\n\t\t\tif ( isStepAfterTheAttributeBoundary( position, attribute ) ) {\n\t\t\t\t// Skip the automatic gravity restore upon the next selection#change:range event.\n\t\t\t\t// If not skipped, it would automatically restore the gravity, which should remain\n\t\t\t\t// overridden.\n\t\t\t\tthis._skipNextAutomaticGravityRestoration();\n\t\t\t\tthis._overrideGravity();\n\n\t\t\t\t// Don't return \"true\" here because we didn't call _preventCaretMovement.\n\t\t\t\t// Returning here will destabilize the filler logic, which also listens to\n\t\t\t\t// keydown (and the event would be stopped).\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * `true` when the gravity is overridden for the {@link #attribute}.\n\t *\n\t * @readonly\n\t * @private\n\t * @type {Boolean}\n\t */\n\tget _isGravityOverridden() {\n\t\treturn !!this._overrideUid;\n\t}\n\n\t/**\n\t * `true` when the {@link module:engine/model/selection~Selection} has the {@link #attribute}.\n\t *\n\t * @readonly\n\t * @private\n\t * @type {Boolean}\n\t */\n\tget _hasSelectionAttribute() {\n\t\treturn this._modelSelection.hasAttribute( this.attribute );\n\t}\n\n\t/**\n\t * Overrides the gravity using the {@link module:engine/model/writer~Writer model writer}\n\t * and stores the information about this fact in the {@link #_overrideUid}.\n\t *\n\t * A shorthand for {@link module:engine/model/writer~Writer#overrideSelectionGravity}.\n\t *\n\t * @private\n\t */\n\t_overrideGravity() {\n\t\tthis._overrideUid = this.model.change( writer => writer.overrideSelectionGravity() );\n\t}\n\n\t/**\n\t * Restores the gravity using the {@link module:engine/model/writer~Writer model writer}.\n\t *\n\t * A shorthand for {@link module:engine/model/writer~Writer#restoreSelectionGravity}.\n\t *\n\t * @private\n\t */\n\t_restoreGravity() {\n\t\tthis.model.change( writer => {\n\t\t\twriter.restoreSelectionGravity( this._overrideUid );\n\t\t\tthis._overrideUid = null;\n\t\t} );\n\t}\n\n\t/**\n\t * Prevents the caret movement in the view by calling `preventDefault` on the event data.\n\t *\n\t * @private\n\t */\n\t_preventCaretMovement( data ) {\n\t\tdata.preventDefault();\n\t}\n\n\t/**\n\t * Removes the {@link #attribute} from the selection using using the\n\t * {@link module:engine/model/writer~Writer model writer}.\n\t *\n\t * @private\n\t */\n\t_removeSelectionAttribute() {\n\t\tthis.model.change( writer => {\n\t\t\twriter.removeSelectionAttribute( this.attribute );\n\t\t} );\n\t}\n\n\t/**\n\t * Applies the {@link #attribute} to the current selection using using the\n\t * value from the node before the current position. Uses\n\t * the {@link module:engine/model/writer~Writer model writer}.\n\t *\n\t * @private\n\t * @param {module:engine/model/position~Position} position\n\t */\n\t_setSelectionAttributeFromTheNodeBefore( position ) {\n\t\tconst attribute = this.attribute;\n\n\t\tthis.model.change( writer => {\n\t\t\twriter.setSelectionAttribute( this.attribute, position.nodeBefore.getAttribute( attribute ) );\n\t\t} );\n\t}\n\n\t/**\n\t * Skips the next automatic selection gravity restoration upon the\n\t * {@link module:engine/model/selection~Selection#event:change:range} event.\n\t *\n\t * See {@link #_isNextGravityRestorationSkipped}.\n\t *\n\t * @private\n\t */\n\t_skipNextAutomaticGravityRestoration() {\n\t\tthis._isNextGravityRestorationSkipped = true;\n\t}\n}\n\n// @param {module:engine/model/position~Position} position\n// @param {String} attribute\n// @returns {Boolean} `true` when position between the nodes sticks to the bound of text with given attribute.\nfunction isAtBoundary( position, attribute ) {\n\treturn isAtStartBoundary( position, attribute ) || isAtEndBoundary( position, attribute );\n}\n\n// @param {module:engine/model/position~Position} position\n// @param {String} attribute\nfunction isAtStartBoundary( position, attribute ) {\n\tconst { nodeBefore, nodeAfter } = position;\n\tconst isAttrBefore = nodeBefore ? nodeBefore.hasAttribute( attribute ) : false;\n\tconst isAttrAfter = nodeAfter ? nodeAfter.hasAttribute( attribute ) : false;\n\n\treturn isAttrAfter && ( !isAttrBefore || nodeBefore.getAttribute( attribute ) !== nodeAfter.getAttribute( attribute ) );\n}\n\n// @param {module:engine/model/position~Position} position\n// @param {String} attribute\nfunction isAtEndBoundary( position, attribute ) {\n\tconst { nodeBefore, nodeAfter } = position;\n\tconst isAttrBefore = nodeBefore ? nodeBefore.hasAttribute( attribute ) : false;\n\tconst isAttrAfter = nodeAfter ? nodeAfter.hasAttribute( attribute ) : false;\n\n\treturn isAttrBefore && ( !isAttrAfter || nodeBefore.getAttribute( attribute ) !== nodeAfter.getAttribute( attribute ) );\n}\n\n// @param {module:engine/model/position~Position} position\n// @param {String} attribute\nfunction isBetweenDifferentValues( position, attribute ) {\n\tconst { nodeBefore, nodeAfter } = position;\n\tconst isAttrBefore = nodeBefore ? nodeBefore.hasAttribute( attribute ) : false;\n\tconst isAttrAfter = nodeAfter ? nodeAfter.hasAttribute( attribute ) : false;\n\n\tif ( !isAttrAfter || !isAttrBefore ) {\n\t\treturn;\n\t}\n\n\treturn nodeAfter.getAttribute( attribute ) !== nodeBefore.getAttribute( attribute );\n}\n\n// @param {module:engine/model/position~Position} position\n// @param {String} attribute\nfunction isStepAfterTheAttributeBoundary( position, attribute ) {\n\treturn isAtBoundary( position.getShiftedBy( -1 ), attribute );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module link/linkediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport LinkCommand from './linkcommand';\nimport UnlinkCommand from './unlinkcommand';\nimport { createLinkElement, ensureSafeUrl, getLocalizedDecorators, normalizeDecorators } from './utils';\nimport AutomaticDecorators from './utils/automaticdecorators';\nimport ManualDecorator from './utils/manualdecorator';\nimport bindTwoStepCaretToAttribute from '@ckeditor/ckeditor5-engine/src/utils/bindtwostepcarettoattribute';\nimport findLinkRange from './findlinkrange';\nimport '../theme/link.css';\n\nconst HIGHLIGHT_CLASS = 'ck-link_selected';\nconst DECORATOR_AUTOMATIC = 'automatic';\nconst DECORATOR_MANUAL = 'manual';\nconst EXTERNAL_LINKS_REGEXP = /^(https?:)?\\/\\//;\n\n/**\n * The link engine feature.\n *\n * It introduces the `linkHref=\"url\"` attribute in the model which renders to the view as a `<a href=\"url\">` element\n * as well as `'link'` and `'unlink'` commands.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class LinkEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'LinkEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\teditor.config.define( 'link', {\n\t\t\taddTargetToExternalLinks: false\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst locale = editor.locale;\n\n\t\t// Allow link attribute on all inline nodes.\n\t\teditor.model.schema.extend( '$text', { allowAttributes: 'linkHref' } );\n\n\t\teditor.conversion.for( 'dataDowncast' )\n\t\t\t.attributeToElement( { model: 'linkHref', view: createLinkElement } );\n\n\t\teditor.conversion.for( 'editingDowncast' )\n\t\t\t.attributeToElement( { model: 'linkHref', view: ( href, writer ) => {\n\t\t\t\treturn createLinkElement( ensureSafeUrl( href ), writer );\n\t\t\t} } );\n\n\t\teditor.conversion.for( 'upcast' )\n\t\t\t.elementToAttribute( {\n\t\t\t\tview: {\n\t\t\t\t\tname: 'a',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\thref: true\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tmodel: {\n\t\t\t\t\tkey: 'linkHref',\n\t\t\t\t\tvalue: viewElement => viewElement.getAttribute( 'href' )\n\t\t\t\t}\n\t\t\t} );\n\n\t\t// Create linking commands.\n\t\teditor.commands.add( 'link', new LinkCommand( editor ) );\n\t\teditor.commands.add( 'unlink', new UnlinkCommand( editor ) );\n\n\t\tconst linkDecorators = getLocalizedDecorators( editor.t, normalizeDecorators( editor.config.get( 'link.decorators' ) ) );\n\n\t\tthis._enableAutomaticDecorators( linkDecorators.filter( item => item.mode === DECORATOR_AUTOMATIC ) );\n\t\tthis._enableManualDecorators( linkDecorators.filter( item => item.mode === DECORATOR_MANUAL ) );\n\n\t\t// Enable two-step caret movement for `linkHref` attribute.\n\t\tbindTwoStepCaretToAttribute( {\n\t\t\tview: editor.editing.view,\n\t\t\tmodel: editor.model,\n\t\t\temitter: this,\n\t\t\tattribute: 'linkHref',\n\t\t\tlocale\n\t\t} );\n\n\t\t// Setup highlight over selected link.\n\t\tthis._setupLinkHighlight();\n\t}\n\n\t/**\n\t * Processes an array of configured {@link module:link/link~LinkDecoratorAutomaticDefinition automatic decorators}\n\t * and registers a {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher downcast dispatcher}\n\t * for each one of them. Downcast dispatchers are obtained using the\n\t * {@link module:link/utils~AutomaticDecorators#getDispatcher} method.\n\t *\n\t * **Note**: This method also activates the automatic external link decorator if enabled with\n\t * {@link module:link/link~LinkConfig#addTargetToExternalLinks `config.link.addTargetToExternalLinks`}.\n\t *\n\t * @private\n\t * @param {Array.<module:link/link~LinkDecoratorAutomaticDefinition>} automaticDecoratorDefinitions\n\t */\n\t_enableAutomaticDecorators( automaticDecoratorDefinitions ) {\n\t\tconst editor = this.editor;\n\t\tconst automaticDecorators = new AutomaticDecorators();\n\n\t\t// Adds a default decorator for external links.\n\t\tif ( editor.config.get( 'link.addTargetToExternalLinks' ) ) {\n\t\t\tautomaticDecorators.add( {\n\t\t\t\tid: 'linkIsExternal',\n\t\t\t\tmode: DECORATOR_AUTOMATIC,\n\t\t\t\tcallback: url => EXTERNAL_LINKS_REGEXP.test( url ),\n\t\t\t\tattributes: {\n\t\t\t\t\ttarget: '_blank',\n\t\t\t\t\trel: 'noopener noreferrer'\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\tautomaticDecorators.add( automaticDecoratorDefinitions );\n\n\t\tif ( automaticDecorators.length ) {\n\t\t\teditor.conversion.for( 'downcast' ).add( automaticDecorators.getDispatcher() );\n\t\t}\n\t}\n\n\t/**\n\t * Processes an array of configured {@link module:link/link~LinkDecoratorManualDefinition manual decorators},\n\t * transforms them into {@link module:link/utils~ManualDecorator} instances and stores them in the\n\t * {@link module:link/linkcommand~LinkCommand#manualDecorators} collection (a model for manual decorators state).\n\t *\n\t * Also registers an {@link module:engine/conversion/downcasthelpers~DowncastHelpers#attributeToElement attribute-to-element}\n\t * converter for each manual decorator and extends the {@link module:engine/model/schema~Schema model's schema}\n\t * with adequate model attributes.\n\t *\n\t * @private\n\t * @param {Array.<module:link/link~LinkDecoratorManualDefinition>} manualDecoratorDefinitions\n\t */\n\t_enableManualDecorators( manualDecoratorDefinitions ) {\n\t\tif ( !manualDecoratorDefinitions.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editor = this.editor;\n\t\tconst command = editor.commands.get( 'link' );\n\t\tconst manualDecorators = command.manualDecorators;\n\n\t\tmanualDecoratorDefinitions.forEach( decorator => {\n\t\t\teditor.model.schema.extend( '$text', { allowAttributes: decorator.id } );\n\n\t\t\t// Keeps reference to manual decorator to decode its name to attributes during downcast.\n\t\t\tmanualDecorators.add( new ManualDecorator( decorator ) );\n\n\t\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n\t\t\t\tmodel: decorator.id,\n\t\t\t\tview: ( manualDecoratorName, writer ) => {\n\t\t\t\t\tif ( manualDecoratorName ) {\n\t\t\t\t\t\tconst attributes = manualDecorators.get( decorator.id ).attributes;\n\t\t\t\t\t\tconst element = writer.createAttributeElement( 'a', attributes, { priority: 5 } );\n\t\t\t\t\t\twriter.setCustomProperty( 'link', true, element );\n\n\t\t\t\t\t\treturn element;\n\t\t\t\t\t}\n\t\t\t\t} } );\n\n\t\t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\n\t\t\t\tview: {\n\t\t\t\t\tname: 'a',\n\t\t\t\t\tattributes: manualDecorators.get( decorator.id ).attributes\n\t\t\t\t},\n\t\t\t\tmodel: {\n\t\t\t\t\tkey: decorator.id\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t/**\n\t * Adds a visual highlight style to a link in which the selection is anchored.\n\t * Together with two-step caret movement, they indicate that the user is typing inside the link.\n\t *\n\t * Highlight is turned on by adding the `.ck-link_selected` class to the link in the view:\n\t *\n\t * * The class is removed before the conversion has started, as callbacks added with the `'highest'` priority\n\t * to {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher} events.\n\t * * The class is added in the view post fixer, after other changes in the model tree were converted to the view.\n\t *\n\t * This way, adding and removing the highlight does not interfere with conversion.\n\t *\n\t * @private\n\t */\n\t_setupLinkHighlight() {\n\t\tconst editor = this.editor;\n\t\tconst view = editor.editing.view;\n\t\tconst highlightedLinks = new Set();\n\n\t\t// Adding the class.\n\t\tview.document.registerPostFixer( writer => {\n\t\t\tconst selection = editor.model.document.selection;\n\t\t\tlet changed = false;\n\n\t\t\tif ( selection.hasAttribute( 'linkHref' ) ) {\n\t\t\t\tconst modelRange = findLinkRange( selection.getFirstPosition(), selection.getAttribute( 'linkHref' ), editor.model );\n\t\t\t\tconst viewRange = editor.editing.mapper.toViewRange( modelRange );\n\n\t\t\t\t// There might be multiple `a` elements in the `viewRange`, for example, when the `a` element is\n\t\t\t\t// broken by a UIElement.\n\t\t\t\tfor ( const item of viewRange.getItems() ) {\n\t\t\t\t\tif ( item.is( 'a' ) && !item.hasClass( HIGHLIGHT_CLASS ) ) {\n\t\t\t\t\t\twriter.addClass( HIGHLIGHT_CLASS, item );\n\t\t\t\t\t\thighlightedLinks.add( item );\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn changed;\n\t\t} );\n\n\t\t// Removing the class.\n\t\teditor.conversion.for( 'editingDowncast' ).add( dispatcher => {\n\t\t\t// Make sure the highlight is removed on every possible event, before conversion is started.\n\t\t\tdispatcher.on( 'insert', removeHighlight, { priority: 'highest' } );\n\t\t\tdispatcher.on( 'remove', removeHighlight, { priority: 'highest' } );\n\t\t\tdispatcher.on( 'attribute', removeHighlight, { priority: 'highest' } );\n\t\t\tdispatcher.on( 'selection', removeHighlight, { priority: 'highest' } );\n\n\t\t\tfunction removeHighlight() {\n\t\t\t\tview.change( writer => {\n\t\t\t\t\tfor ( const item of highlightedLinks.values() ) {\n\t\t\t\t\t\twriter.removeClass( HIGHLIGHT_CLASS, item );\n\t\t\t\t\t\thighlightedLinks.delete( item );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/notification/notification\n */\n\n/* globals window */\n\nimport ContextPlugin from '@ckeditor/ckeditor5-core/src/contextplugin';\n\n/**\n * The Notification plugin.\n *\n * This plugin sends a few types of notifications: `success`, `info` and `warning`. The notifications need to be\n * handled and displayed by a plugin responsible for showing the UI of the notifications. Using this plugin for dispatching\n * notifications makes it possible to switch the notifications UI.\n *\n * Note that every unhandled and not stopped `warning` notification will be displayed as a system alert.\n * See {@link module:ui/notification/notification~Notification#showWarning}.\n *\n * @extends module:core/contextplugin~ContextPlugin\n */\nexport default class Notification extends ContextPlugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Notification';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\t// Each unhandled and not stopped `show:warning` event is displayed as a system alert.\n\t\tthis.on( 'show:warning', ( evt, data ) => {\n\t\t\twindow.alert( data.message ); // eslint-disable-line no-alert\n\t\t}, { priority: 'lowest' } );\n\t}\n\n\t/**\n\t * Shows a success notification.\n\t *\n\t * By default, it fires the {@link #event:show:success `show:success` event} with the given `data`. The event namespace can be extended\n\t * using the `data.namespace` option. For example:\n\t *\n\t * \t\tshowSuccess( 'Image is uploaded.', {\n\t * \t\t\tnamespace: 'upload:image'\n\t * \t\t} );\n\t *\n\t * will fire the `show:success:upload:image` event.\n\t *\n\t * You can provide the title of the notification:\n\t *\n\t *\t\tshowSuccess( 'Image is uploaded.', {\n\t *\t\t\ttitle: 'Image upload success'\n\t *\t\t} );\n\t *\n\t * @param {String} message The content of the notification.\n\t * @param {Object} [data={}] Additional data.\n\t * @param {String} [data.namespace] Additional event namespace.\n\t * @param {String} [data.title] The title of the notification.\n\t */\n\tshowSuccess( message, data = {} ) {\n\t\tthis._showNotification( {\n\t\t\tmessage,\n\t\t\ttype: 'success',\n\t\t\tnamespace: data.namespace,\n\t\t\ttitle: data.title\n\t\t} );\n\t}\n\n\t/**\n\t * Shows an information notification.\n\t *\n\t * By default, it fires the {@link #event:show:info `show:info` event} with the given `data`. The event namespace can be extended\n\t * using the `data.namespace` option. For example:\n\t *\n\t * \t\tshowInfo( 'Editor is offline.', {\n\t * \t\t\tnamespace: 'editor:status'\n\t * \t\t} );\n\t *\n\t * will fire the `show:info:editor:status` event.\n\t *\n\t * You can provide the title of the notification:\n\t *\n\t *\t\tshowInfo( 'Editor is offline.', {\n\t *\t\t\ttitle: 'Network information'\n\t *\t\t} );\n\t *\n\t * @param {String} message The content of the notification.\n\t * @param {Object} [data={}] Additional data.\n\t * @param {String} [data.namespace] Additional event namespace.\n\t * @param {String} [data.title] The title of the notification.\n\t */\n\tshowInfo( message, data = {} ) {\n\t\tthis._showNotification( {\n\t\t\tmessage,\n\t\t\ttype: 'info',\n\t\t\tnamespace: data.namespace,\n\t\t\ttitle: data.title\n\t\t} );\n\t}\n\n\t/**\n\t * Shows a warning notification.\n\t *\n\t * By default, it fires the {@link #event:show:warning `show:warning` event}\n\t * with the given `data`. The event namespace can be extended using the `data.namespace` option. For example:\n\t *\n\t * \t\tshowWarning( 'Image upload error.', {\n\t * \t\t\tnamespace: 'upload:image'\n\t * \t\t} );\n\t *\n\t * will fire the `show:warning:upload:image` event.\n\t *\n\t * You can provide the title of the notification:\n\t *\n\t *\t\tshowWarning( 'Image upload error.', {\n\t *\t\t\ttitle: 'Upload failed'\n\t *\t\t} );\n\t *\n\t * Note that each unhandled and not stopped `warning` notification will be displayed as a system alert.\n\t * The plugin responsible for displaying warnings should `stop()` the event to prevent displaying it as an alert:\n\t *\n\t * \t\tnotifications.on( 'show:warning', ( evt, data ) => {\n\t * \t\t\t// Do something with the data.\n\t *\n\t * \t\t\t// Stop this event to prevent displaying it as an alert.\n\t * \t\t\tevt.stop();\n\t * \t\t} );\n\t *\n\t * You can attach many listeners to the same event and `stop()` this event in a listener with a low priority:\n\t *\n\t * \t\tnotifications.on( 'show:warning', ( evt, data ) => {\n\t * \t\t\t// Show the warning in the UI, but do not stop it.\n\t * \t\t} );\n\t *\n\t * \t\tnotifications.on( 'show:warning', ( evt, data ) => {\n\t * \t\t\t// Log the warning to some error tracker.\n\t *\n\t * \t\t\t// Stop this event to prevent displaying it as an alert.\n\t * \t\t\tevt.stop();\n\t * \t\t}, { priority: 'low' } );\n\t *\n\t * @param {String} message The content of the notification.\n\t * @param {Object} [data={}] Additional data.\n\t * @param {String} [data.namespace] Additional event namespace.\n\t * @param {String} [data.title] The title of the notification.\n\t */\n\tshowWarning( message, data = {} ) {\n\t\tthis._showNotification( {\n\t\t\tmessage,\n\t\t\ttype: 'warning',\n\t\t\tnamespace: data.namespace,\n\t\t\ttitle: data.title\n\t\t} );\n\t}\n\n\t/**\n\t * Fires the `show` event with the specified type, namespace and message.\n\t *\n\t * @private\n\t * @param {Object} data The message data.\n\t * @param {String} data.message The content of the notification.\n\t * @param {'success'|'info'|'warning'} data.type The type of the message.\n\t * @param {String} [data.namespace] Additional event namespace.\n\t * @param {String} [data.title=''] The title of the notification.\n\t */\n\t_showNotification( data ) {\n\t\tconst event = `show:${ data.type }` + ( data.namespace ? `:${ data.namespace }` : '' );\n\n\t\tthis.fire( event, {\n\t\t\tmessage: data.message,\n\t\t\ttype: data.type,\n\t\t\ttitle: data.title || ''\n\t\t} );\n\t}\n\n\t/**\n\t * Fired when one of the `showSuccess()`, `showInfo()`, `showWarning()` methods is called.\n\t *\n\t * @event show\n\t * @param {Object} data The notification data.\n\t * @param {String} data.message The content of the notification.\n\t * @param {String} data.title The title of the notification.\n\t * @param {'success'|'info'|'warning'} data.type The type of the notification.\n\t */\n\n\t/**\n\t * Fired when the `showSuccess()` method is called.\n\t *\n\t * @event show:success\n\t * @param {Object} data The notification data.\n\t * @param {String} data.message The content of the notification.\n\t * @param {String} data.title The title of the notification.\n\t * @param {'success'} data.type The type of the notification.\n\t */\n\n\t/**\n\t * Fired when the `showInfo()` method is called.\n\t *\n\t * @event show:info\n\t * @param {Object} data The notification data.\n\t * @param {String} data.message The content of the notification.\n\t * @param {String} data.title The title of the notification.\n\t * @param {'info'} data.type The type of the notification.\n\t */\n\n\t/**\n\t * Fired when the `showWarning()` method is called.\n\t *\n\t * When this event is not handled or stopped by `event.stop()`, the `data.message` of this event will\n\t * be automatically displayed as a system alert.\n\t *\n\t * @event show:warning\n\t * @param {Object} data The notification data.\n\t * @param {String} data.message The content of the notification.\n\t * @param {String} data.title The title of the notification.\n\t * @param {'warning'} data.type The type of the notification.\n\t */\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/* global window */\n/**\n * @module ckfinder/ckfindercommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * The CKFinder command. It is used by the {@link module:ckfinder/ckfinderediting~CKFinderEditing CKFinder editing feature}\n * to open the CKFinder file manager to insert an image or a link to a file into the editor content.\n *\n *\t\teditor.execute( 'ckfinder' );\n *\n * **Note:** This command uses other features to perform tasks:\n * - To insert images the {@link module:image/image/imageinsertcommand~ImageInsertCommand 'imageInsert'} command\n * from the {@link module:image/image~Image Image feature}.\n * - To insert links to files the {@link module:link/linkcommand~LinkCommand 'link'} command\n * from the {@link module:link/link~Link Link feature}.\n *\n * @extends module:core/command~Command\n */\nexport default class CKFinderCommand extends Command {\n    /**\n\t * @inheritDoc\n\t */\n    constructor(editor) {\n        super(editor);\n        // Remove default document listener to lower its priority.\n        this.stopListening(this.editor.model.document, 'change');\n        // Lower this command listener priority to be sure that refresh() will be called after link & image refresh.\n        this.listenTo(this.editor.model.document, 'change', () => this.refresh(), { priority: 'low' });\n    }\n    /**\n\t * @inheritDoc\n\t */\n    refresh() {\n        const imageCommand = this.editor.commands.get('imageInsert');\n        const linkCommand = this.editor.commands.get('link');\n        // The CKFinder command is enabled when one of image or link command is enabled.\n        this.isEnabled = imageCommand.isEnabled || linkCommand.isEnabled;\n    }\n    /**\n\t * @inheritDoc\n\t */\n    execute() {\n        const editor = this.editor;\n        const openerMethod = this.editor.config.get('ckfinder.openerMethod') || 'modal';\n        if (openerMethod != 'popup' && openerMethod != 'modal') {\n            throw new CKEditorError('ckfinder-unknown-openerMethod: The openerMethod config option must by \"popup\" or \"modal\".', editor);\n        }\n        const options = this.editor.config.get('ckfinder.options') || {};\n        options.chooseFiles = true;\n        // Cache the user-defined onInit method\n        const originalOnInit = options.onInit;\n        // Pass the lang code to the CKFinder if not defined by user.\n        if (!options.language) {\n            options.language = editor.locale.uiLanguage;\n        }\n        // The onInit method allows to extend CKFinder's behavior. It is used to attach event listeners to file choosing related events.\n        options.onInit = finder => {\n            // Call original options.onInit if it was defined by user.\n            if (originalOnInit) {\n                originalOnInit(finder);\n            }\n            finder.on('files:choose', evt => {\n                const files = evt.data.files.toArray();\n                // Insert links\n                const links = files.filter(file => !file.isImage());\n                const images = files.filter(file => file.isImage());\n                for (const linkFile of links) {\n                    editor.execute('link', linkFile.getUrl());\n                }\n                const imagesUrls = [];\n                for (const image of images) {\n                    const url = image.getUrl();\n                    imagesUrls.push(url ? url : finder.request('file:getProxyUrl', { file: image }));\n                }\n                if (imagesUrls.length) {\n                    insertImages(editor, imagesUrls);\n                }\n            });\n            finder.on('file:choose:resizedImage', evt => {\n                const resizedUrl = evt.data.resizedUrl;\n                if (!resizedUrl) {\n                    const notification = editor.plugins.get('Notification');\n                    const t = editor.locale.t;\n                    notification.showWarning(t('ar'), {\n                        title: t('as'),\n                        namespace: 'ckfinder'\n                    });\n                    return;\n                }\n                insertImages(editor, [resizedUrl]);\n            });\n        };\n        window.CKFinder[openerMethod](options);\n    }\n}\nfunction insertImages(editor, urls) {\n    const imageCommand = editor.commands.get('imageInsert');\n    // Check if inserting an image is actually possible - it might be possible to only insert a link.\n    if (!imageCommand.isEnabled) {\n        const notification = editor.plugins.get('Notification');\n        const t = editor.locale.t;\n        notification.showWarning(t('at'), {\n            title: t('au'),\n            namespace: 'ckfinder'\n        });\n        return;\n    }\n    editor.execute('imageInsert', { source: urls });\n}","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ckfinder/ckfinderediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ImageEditing from '@ckeditor/ckeditor5-image/src/image/imageediting';\nimport LinkEditing from '@ckeditor/ckeditor5-link/src/linkediting';\nimport Notification from '@ckeditor/ckeditor5-ui/src/notification/notification';\n\nimport CKFinderCommand from './ckfindercommand';\n\n/**\n * The CKFinder editing feature. It introduces the {@link module:ckfinder/ckfindercommand~CKFinderCommand CKFinder command}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class CKFinderEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'CKFinderEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ Notification, ImageEditing, LinkEditing ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\teditor.commands.add( 'ckfinder', new CKFinderCommand( editor ) );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module cloud-services-core/uploadgateway/fileuploader\n */\n\n/* globals XMLHttpRequest, FormData, Blob, atob */\n\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\nconst BASE64_HEADER_REG_EXP = /^data:(\\S*?);base64,/;\n\n/**\n * FileUploader class used to upload single file.\n */\nexport default class FileUploader {\n\t/**\n\t * Creates `FileUploader` instance.\n\t *\n\t * @param {Blob|String} fileOrData A blob object or a data string encoded with Base64.\n\t * @param {module:cloud-services-core/token~Token} token Token used for authentication.\n\t * @param {String} apiAddress API address.\n\t */\n\tconstructor( fileOrData, token, apiAddress ) {\n\t\tif ( !fileOrData ) {\n\t\t\t/**\n\t\t\t * File must be provided as the first argument.\n\t\t\t *\n\t\t\t * @error fileuploader-missing-file\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'fileuploader-missing-file: File must be provided as the first argument', null );\n\t\t}\n\n\t\tif ( !token ) {\n\t\t\t/**\n\t\t\t * Token must be provided as the second argument.\n\t\t\t *\n\t\t\t * @error fileuploader-missing-token\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'fileuploader-missing-token: Token must be provided as the second argument.', null );\n\t\t}\n\n\t\tif ( !apiAddress ) {\n\t\t\t/**\n\t\t\t * Api address must be provided as the third argument.\n\t\t\t *\n\t\t\t * @error fileuploader-missing-api-address\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'fileuploader-missing-api-address: Api address must be provided as the third argument.', null );\n\t\t}\n\n\t\t/**\n\t\t * A file that is being uploaded.\n\t\t *\n\t\t * @type {Blob}\n\t\t */\n\t\tthis.file = _isBase64( fileOrData ) ? _base64ToBlob( fileOrData ) : fileOrData;\n\n\t\t/**\n\t\t * CKEditor Cloud Services access token.\n\t\t *\n\t\t * @type {module:cloud-services-core/token~Token}\n\t\t * @private\n\t\t */\n\t\tthis._token = token;\n\n\t\t/**\n\t\t * CKEditor Cloud Services API address.\n\t\t *\n\t\t * @type {String}\n\t\t * @private\n\t\t */\n\t\tthis._apiAddress = apiAddress;\n\t}\n\n\t/**\n\t * Registers callback on `progress` event.\n\t *\n\t * @chainable\n\t * @param {Function} callback\n\t * @returns {module:cloud-services-core/uploadgateway/fileuploader~FileUploader}\n\t */\n\tonProgress( callback ) {\n\t\tthis.on( 'progress', ( event, data ) => callback( data ) );\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Registers callback on `error` event. Event is called once when error occurs.\n\t *\n\t * @chainable\n\t * @param {Function} callback\n\t * @returns {module:cloud-services-core/uploadgateway/fileuploader~FileUploader}\n\t */\n\tonError( callback ) {\n\t\tthis.once( 'error', ( event, data ) => callback( data ) );\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Aborts upload process.\n\t */\n\tabort() {\n\t\tthis.xhr.abort();\n\t}\n\n\t/**\n\t * Sends XHR request to API.\n\t *\n\t * @chainable\n\t * @returns {Promise.<Object>}\n\t */\n\tsend() {\n\t\tthis._prepareRequest();\n\t\tthis._attachXHRListeners();\n\n\t\treturn this._sendRequest();\n\t}\n\n\t/**\n\t * Prepares XHR request.\n\t *\n\t * @private\n\t */\n\t_prepareRequest() {\n\t\tconst xhr = new XMLHttpRequest();\n\n\t\txhr.open( 'POST', this._apiAddress );\n\t\txhr.setRequestHeader( 'Authorization', this._token.value );\n\t\txhr.responseType = 'json';\n\n\t\tthis.xhr = xhr;\n\t}\n\n\t/**\n\t * Attaches listeners to the XHR.\n\t *\n\t * @private\n\t */\n\t_attachXHRListeners() {\n\t\tconst that = this;\n\t\tconst xhr = this.xhr;\n\n\t\txhr.addEventListener( 'error', onError( 'Network Error' ) );\n\t\txhr.addEventListener( 'abort', onError( 'Abort' ) );\n\n\t\t/* istanbul ignore else */\n\t\tif ( xhr.upload ) {\n\t\t\txhr.upload.addEventListener( 'progress', event => {\n\t\t\t\tif ( event.lengthComputable ) {\n\t\t\t\t\tthis.fire( 'progress', {\n\t\t\t\t\t\ttotal: event.total,\n\t\t\t\t\t\tuploaded: event.loaded\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\txhr.addEventListener( 'load', () => {\n\t\t\tconst statusCode = xhr.status;\n\t\t\tconst xhrResponse = xhr.response;\n\n\t\t\tif ( statusCode < 200 || statusCode > 299 ) {\n\t\t\t\treturn this.fire( 'error', xhrResponse.message || xhrResponse.error );\n\t\t\t}\n\t\t} );\n\n\t\tfunction onError( message ) {\n\t\t\treturn () => that.fire( 'error', message );\n\t\t}\n\t}\n\n\t/**\n\t * Sends XHR request.\n\t *\n\t * @private\n\t */\n\t_sendRequest() {\n\t\tconst formData = new FormData();\n\t\tconst xhr = this.xhr;\n\n\t\tformData.append( 'file', this.file );\n\n\t\treturn new Promise( ( resolve, reject ) => {\n\t\t\txhr.addEventListener( 'load', () => {\n\t\t\t\tconst statusCode = xhr.status;\n\t\t\t\tconst xhrResponse = xhr.response;\n\n\t\t\t\tif ( statusCode < 200 || statusCode > 299 ) {\n\t\t\t\t\tif ( xhrResponse.message ) {\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * Uploading file failed.\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * @error fileuploader-uploading-data-failed\n\t\t\t\t\t\t */\n\t\t\t\t\t\treturn reject( new CKEditorError(\n\t\t\t\t\t\t\t'fileuploader-uploading-data-failed: Uploading file failed.',\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t{ message: xhrResponse.message }\n\t\t\t\t\t\t) );\n\t\t\t\t\t}\n\n\t\t\t\t\treturn reject( xhrResponse.error );\n\t\t\t\t}\n\n\t\t\t\treturn resolve( xhrResponse );\n\t\t\t} );\n\n\t\t\txhr.addEventListener( 'error', () => reject( new Error( 'Network Error' ) ) );\n\t\t\txhr.addEventListener( 'abort', () => reject( new Error( 'Abort' ) ) );\n\n\t\t\txhr.send( formData );\n\t\t} );\n\t}\n\n\t/**\n\t * Fired when error occurs.\n\t *\n\t * @event error\n\t * @param {String} error Error message\n\t */\n\n\t/**\n\t * Fired on upload progress.\n\t *\n\t * @event progress\n\t * @param {Object} status Total and uploaded status\n\t */\n}\n\nmix( FileUploader, EmitterMixin );\n\n/**\n * Transforms Base64 string data into file.\n *\n * @param {String} base64 String data.\n * @param {Number} [sliceSize=512]\n * @returns {Blob}\n * @private\n */\nfunction _base64ToBlob( base64, sliceSize = 512 ) {\n\ttry {\n\t\tconst contentType = base64.match( BASE64_HEADER_REG_EXP )[ 1 ];\n\t\tconst base64Data = atob( base64.replace( BASE64_HEADER_REG_EXP, '' ) );\n\n\t\tconst byteArrays = [];\n\n\t\tfor ( let offset = 0; offset < base64Data.length; offset += sliceSize ) {\n\t\t\tconst slice = base64Data.slice( offset, offset + sliceSize );\n\t\t\tconst byteNumbers = new Array( slice.length );\n\n\t\t\tfor ( let i = 0; i < slice.length; i++ ) {\n\t\t\t\tbyteNumbers[ i ] = slice.charCodeAt( i );\n\t\t\t}\n\n\t\t\tbyteArrays.push( new Uint8Array( byteNumbers ) );\n\t\t}\n\n\t\treturn new Blob( byteArrays, { type: contentType } );\n\t} catch ( error ) {\n\t\t/**\n\t\t * Problem with decoding Base64 image data.\n\t\t *\n\t\t * @error fileuploader-decoding-image-data-error\n\t\t */\n\t\tthrow new CKEditorError( 'fileuploader-decoding-image-data-error: Problem with decoding Base64 image data.', null );\n\t}\n}\n\n/**\n * Checks that string is Base64.\n *\n * @param {String} string\n * @returns {Boolean}\n * @private\n */\nfunction _isBase64( string ) {\n\tif ( typeof string !== 'string' ) {\n\t\treturn false;\n\t}\n\n\tconst match = string.match( BASE64_HEADER_REG_EXP );\n\treturn !!( match && match.length );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module cloud-services-core/token\n */\n\n/* globals XMLHttpRequest, setInterval, clearInterval */\n\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\nconst DEFAULT_OPTIONS = { refreshInterval: 3600000, autoRefresh: true };\n\n/**\n * Class representing the token used for communication with CKEditor Cloud Services.\n * Value of the token is retrieving from the specified URL and is refreshed every 1 hour by default.\n *\n * @mixes ObservableMixin\n */\nclass Token {\n\t/**\n\t * Creates `Token` instance.\n\t * Method `init` should be called after using the constructor or use `create` method instead.\n\t *\n\t * @param {String|Function} tokenUrlOrRefreshToken Endpoint address to download the token or a callback that provides the token. If the\n\t * value is a function it has to match the {@link module:cloud-services-core/token~refreshToken} interface.\n\t * @param {Object} options\n\t * @param {String} [options.initValue] Initial value of the token.\n\t * @param {Number} [options.refreshInterval=3600000] Delay between refreshes. Default 1 hour.\n\t * @param {Boolean} [options.autoRefresh=true] Specifies whether to start the refresh automatically.\n\t */\n\tconstructor( tokenUrlOrRefreshToken, options = DEFAULT_OPTIONS ) {\n\t\tif ( !tokenUrlOrRefreshToken ) {\n\t\t\t/**\n\t\t\t * A `tokenUrl` must be provided as the first constructor argument.\n\t\t\t *\n\t\t\t * @error token-missing-token-url\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'token-missing-token-url: A `tokenUrl` must be provided as the first constructor argument.',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * Value of the token.\n\t\t * The value of the token is null if `initValue` is not provided or `init` method was not called.\n\t\t * `create` method creates token with initialized value from url.\n\t\t *\n\t\t * @name value\n\t\t * @member {String} #value\n\t\t * @observable\n\t\t * @readonly\n\t\t */\n\t\tthis.set( 'value', options.initValue );\n\n\t\t/**\n\t\t * Base refreshing function.\n\t\t *\n\t\t * @private\n\t\t * @member {String|Function} #_refresh\n\t\t */\n\t\tif ( typeof tokenUrlOrRefreshToken === 'function' ) {\n\t\t\tthis._refresh = tokenUrlOrRefreshToken;\n\t\t} else {\n\t\t\tthis._refresh = () => defaultRefreshToken( tokenUrlOrRefreshToken );\n\t\t}\n\n\t\t/**\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._options = Object.assign( {}, DEFAULT_OPTIONS, options );\n\t}\n\n\t/**\n\t * Initializes the token.\n\t *\n\t * @returns {Promise.<module:cloud-services-core/token~Token>}\n\t */\n\tinit() {\n\t\treturn new Promise( ( resolve, reject ) => {\n\t\t\tif ( this._options.autoRefresh ) {\n\t\t\t\tthis._startRefreshing();\n\t\t\t}\n\n\t\t\tif ( !this.value ) {\n\t\t\t\tthis._refreshToken()\n\t\t\t\t\t.then( resolve )\n\t\t\t\t\t.catch( reject );\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresolve( this );\n\t\t} );\n\t}\n\n\t/**\n\t * Refresh token method. Useful in a method form as it can be override in tests.\n\t *\n\t * @protected\n\t */\n\t_refreshToken() {\n\t\treturn this._refresh()\n\t\t\t.then( value => this.set( 'value', value ) )\n\t\t\t.then( () => this );\n\t}\n\n\t/**\n\t * Destroys token instance. Stops refreshing.\n\t */\n\tdestroy() {\n\t\tthis._stopRefreshing();\n\t}\n\n\t/**\n\t * Starts value refreshing every `refreshInterval` time.\n\t *\n\t * @protected\n\t */\n\t_startRefreshing() {\n\t\tthis._refreshInterval = setInterval( () => this._refreshToken(), this._options.refreshInterval );\n\t}\n\n\t/**\n\t * Stops value refreshing.\n\t *\n\t * @protected\n\t */\n\t_stopRefreshing() {\n\t\tclearInterval( this._refreshInterval );\n\t}\n\n\t/**\n\t * Creates a initialized {@link module:cloud-services-core/token~Token} instance.\n\t *\n\t * @param {String|Function} tokenUrlOrRefreshToken Endpoint address to download the token or a callback that provides the token. If the\n\t * value is a function it has to match the {@link module:cloud-services-core/token~refreshToken} interface.\n\t * @param {Object} options\n\t * @param {String} [options.initValue] Initial value of the token.\n\t * @param {Number} [options.refreshInterval=3600000] Delay between refreshes. Default 1 hour.\n\t * @param {Boolean} [options.autoRefresh=true] Specifies whether to start the refresh automatically.\n\t * @returns {Promise.<module:cloud-services-core/token~Token>}\n\t */\n\tstatic create( tokenUrlOrRefreshToken, options = DEFAULT_OPTIONS ) {\n\t\tconst token = new Token( tokenUrlOrRefreshToken, options );\n\n\t\treturn token.init();\n\t}\n}\n\nmix( Token, ObservableMixin );\n\n/**\n * This function is called in a defined interval by the {@link ~Token} class.\n * It should return a promise, which resolves with the new token value.\n * If any error occurs it should return a rejected promise with an error message.\n *\n * @function refreshToken\n * @returns {Promise.<String>}\n */\n\n/**\n * @private\n * @param {String} tokenUrl\n */\nfunction defaultRefreshToken( tokenUrl ) {\n\treturn new Promise( ( resolve, reject ) => {\n\t\tconst xhr = new XMLHttpRequest();\n\n\t\txhr.open( 'GET', tokenUrl );\n\n\t\txhr.addEventListener( 'load', () => {\n\t\t\tconst statusCode = xhr.status;\n\t\t\tconst xhrResponse = xhr.response;\n\n\t\t\tif ( statusCode < 200 || statusCode > 299 ) {\n\t\t\t\t/**\n\t\t\t\t * Cannot download new token from the provided url.\n\t\t\t\t *\n\t\t\t\t * @error token-cannot-download-new-token\n\t\t\t\t */\n\t\t\t\treturn reject(\n\t\t\t\t\tnew CKEditorError( 'token-cannot-download-new-token: Cannot download new token from the provided url.', null )\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn resolve( xhrResponse );\n\t\t} );\n\n\t\txhr.addEventListener( 'error', () => reject( new Error( 'Network Error' ) ) );\n\t\txhr.addEventListener( 'abort', () => reject( new Error( 'Abort' ) ) );\n\n\t\txhr.send();\n\t} );\n}\n\nexport default Token;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module cloud-services/cloudservices\n */\n\nimport ContextPlugin from '@ckeditor/ckeditor5-core/src/contextplugin';\nimport Token from '@ckeditor/ckeditor-cloud-services-core/src/token/token';\n\n/**\n * Plugin introducing integration between CKEditor 5 and CKEditor Cloud Services .\n *\n * It initializes the token provider based on\n * the {@link module:cloud-services/cloudservices~CloudServicesConfig `config.cloudService`}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class CloudServices extends ContextPlugin {\n\t/**\n\t * @inheritdoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'CloudServices';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst config = this.context.config;\n\n\t\tconst options = config.get( 'cloudServices' ) || {};\n\n\t\tfor ( const optionName in options ) {\n\t\t\tthis[ optionName ] = options[ optionName ];\n\t\t}\n\n\t\t/**\n\t\t * The authentication token URL for CKEditor Cloud Services or a callback to the token value promise. See the\n\t\t * {@link module:cloud-services/cloudservices~CloudServicesConfig#tokenUrl} for more details.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String|Function|undefined} #tokenUrl\n\t\t */\n\n\t\t/**\n\t\t * The URL to which the files should be uploaded.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String} #uploadUrl\n\t\t */\n\n\t\t/**\n\t\t * Other plugins use this token for the authorization process. It handles token requesting and refreshing.\n\t\t * Its value is `null` when {@link module:cloud-services/cloudservices~CloudServicesConfig#tokenUrl} is not provided.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Object|null} #token\n\t\t */\n\n\t\tif ( !this.tokenUrl ) {\n\t\t\tthis.token = null;\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.token = new CloudServices.Token( this.tokenUrl );\n\n\t\treturn this.token.init();\n\t}\n}\n\nCloudServices.Token = Token;\n\n/**\n * The configuration of CKEditor Cloud Services. Introduced by the {@link module:cloud-services/cloudservices~CloudServices} plugin.\n *\n * Read more in {@link module:cloud-services/cloudservices~CloudServicesConfig}.\n *\n * @member {module:cloud-services/cloudservices~CloudServicesConfig} module:core/editor/editorconfig~EditorConfig#cloudServices\n */\n\n/**\n * The configuration for all plugins using CKEditor Cloud Services.\n *\n *\t\tClassicEditor\n *\t\t\t.create( document.querySelector( '#editor' ), {\n *\t\t\t\tcloudServices: {\n *\t\t\t\t\ttokenUrl: 'https://example.com/cs-token-endpoint',\n *\t\t\t\t\tuploadUrl: 'https://your-organization-id.cke-cs.com/easyimage/upload/'\n *\t\t\t\t}\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface CloudServicesConfig\n */\n\n/**\n * A token URL or a token request function.\n *\n * As a string, it should be a URL to the security token endpoint in your application. The role of this endpoint is to securely authorize\n * the end users of your application to use [CKEditor Cloud Services](https://ckeditor.com/ckeditor-cloud-services) only\n * if they should have access e.g. to upload files with {@glink @cs guides/easy-image/quick-start Easy Image} or to use the\n * {@glink @cs guides/collaboration/quick-start Collaboration} service.\n *\n *\t\tClassicEditor\n *\t\t\t.create( document.querySelector( '#editor' ), {\n *\t\t\t\tcloudServices: {\n *\t\t\t\t\ttokenUrl: 'https://example.com/cs-token-endpoint',\n *\t\t\t\t\t...\n *\t\t\t\t}\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * As a function, it should provide a promise to the token value, so you can highly customize the token and provide your token URL endpoint.\n * By using this approach you can set your own headers for the request.\n *\n * \t\tClassicEditor\n *\t\t\t.create( document.querySelector( '#editor' ), {\n *\t\t\t\tcloudServices: {\n *\t\t\t\t\ttokenUrl: () => new Promise( ( resolve, reject ) => {\n *\t\t\t\t\t\tconst xhr = new XMLHttpRequest();\n *\n *\t\t\t\t\t\txhr.open( 'GET', 'https://example.com/cs-token-endpoint' );\n *\n *\t\t\t\t\t\txhr.addEventListener( 'load', () => {\n *\t\t\t\t\t\t\tconst statusCode = xhr.status;\n *\t\t\t\t\t\t\tconst xhrResponse = xhr.response;\n *\n *\t\t\t\t\t\t\tif ( statusCode < 200 || statusCode > 299 ) {\n *\t\t\t\t\t\t\t\treturn reject( new Error( 'Cannot download new token!' ) );\n *\t\t\t\t\t\t\t}\n *\n *\t\t\t\t\t\t\treturn resolve( xhrResponse );\n *\t\t\t\t\t\t} );\n *\n *\t\t\t\t\t\txhr.addEventListener( 'error', () => reject( new Error( 'Network Error' ) ) );\n *\t\t\t\t\t\txhr.addEventListener( 'abort', () => reject( new Error( 'Abort' ) ) );\n *\n *\t\t\t\t\t\txhr.setRequestHeader( customHeader, customValue );\n *\n *\t\t\t\t\t\txhr.send();\n *\t\t\t\t\t} ),\n *\t\t\t\t\t...\n *\t\t\t\t}\n *\t\t\t} )\n *\n * You can find more information about token endpoints in the\n * {@glink @cs guides/easy-image/quick-start#create-token-endpoint Cloud Services - Quick start}\n * and {@glink @cs guides/security/token-endpoint Cloud Services - Token endpoint} documentation.\n *\n * Without a properly working token endpoint (token URL) CKEditor plugins will not be able to connect to CKEditor Cloud Services.\n *\n * @member {String|Function} module:cloud-services/cloudservices~CloudServicesConfig#tokenUrl\n */\n\n/**\n * The endpoint URL for [CKEditor Cloud Services](https://ckeditor.com/ckeditor-cloud-services) uploads.\n * This option must be set for Easy Image to work correctly.\n *\n * The upload URL is unique for each customer and can be found in the\n * [CKEditor Ecosystem customer dashboard](https://dashboard.ckeditor.com) after subscribing to the Easy Image service.\n * To learn how to start using Easy Image, check the {@glink @cs guides/easy-image/quick-start Easy Image - Quick start} documentation.\n *\n * Note: Make sure to also set the {@link module:cloud-services/cloudservices~CloudServicesConfig#tokenUrl} configuration option.\n *\n * @member {String} module:cloud-services/cloudservices~CloudServicesConfig#uploadUrl\n */\n\n/**\n * The URL for web socket communication, used by the `RealTimeCollaborativeEditing` plugin. Every customer (organization in the CKEditor\n * Ecosystem dashboard) has their own, unique URLs to communicate with CKEditor Cloud Services. The URL can be found in the\n * CKEditor Ecosystem customer dashboard.\n *\n * Note: Unlike most plugins, `RealTimeCollaborativeEditing` is not included in any CKEditor 5 build and needs to be installed manually.\n * Check [Collaboration overview](https://ckeditor.com/docs/ckeditor5/latest/features/collaboration/overview.html) for more details.\n *\n * @member {String} module:cloud-services/cloudservices~CloudServicesConfig#webSocketUrl\n */\n\n/**\n * An optional parameter used for integration with CKEditor Cloud Services when uploading the editor build to cloud services.\n *\n * Whenever the editor build or the configuration changes, this parameter should be set to a new, unique value to differentiate\n * the new bundle (build + configuration) from the old ones.\n *\n * @member {String} module:cloud-services/cloudservices~CloudServicesConfig#bundleVersion\n */\n\n/**\n * The document ID used by the `RealTimeCollaborativeEditing` plugin. All editor instances created with the same document ID will\n * collaborate. It means that each document needs a different document ID if you do not want to start collaboration between these\n * documents. The ID is usually a primary key of the document in the database but you are free to provide whatever identifier fits your\n * scenario.\n *\n * Note: Unlike most plugins, `RealTimeCollaborativeEditing` is not included in any CKEditor 5 build and needs to be installed manually.\n * Check [Collaboration overview](https://ckeditor.com/docs/ckeditor5/latest/features/collaboration/overview.html) for more details.\n *\n * @member {String} module:cloud-services/cloudservices~CloudServicesConfig#documentId\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n* @module easy-image/cloudservicesuploadadapter\n*/\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport FileRepository from '@ckeditor/ckeditor5-upload/src/filerepository';\nimport UploadGateway from '@ckeditor/ckeditor-cloud-services-core/src/uploadgateway/uploadgateway';\nimport CloudServices from '@ckeditor/ckeditor5-cloud-services/src/cloudservices';\n\n/**\n * A plugin that enables upload to [CKEditor Cloud Services](https://ckeditor.com/ckeditor-cloud-services/).\n *\n * It is mainly used by the {@link module:easy-image/easyimage~EasyImage} feature.\n *\n * After enabling this adapter you need to configure the CKEditor Cloud Services integration through\n * {@link module:cloud-services/cloudservices~CloudServicesConfig `config.cloudServices`}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class CloudServicesUploadAdapter extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ FileRepository, CloudServices ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\tconst cloudServices = editor.plugins.get( CloudServices );\n\n\t\tconst token = cloudServices.token;\n\t\tconst uploadUrl = cloudServices.uploadUrl;\n\n\t\tif ( !token ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._uploadGateway = new CloudServicesUploadAdapter._UploadGateway( token, uploadUrl );\n\n\t\teditor.plugins.get( FileRepository ).createUploadAdapter = loader => {\n\t\t\treturn new Adapter( this._uploadGateway, loader );\n\t\t};\n\t}\n}\n\n/**\n * @private\n */\nclass Adapter {\n\tconstructor( uploadGateway, loader ) {\n\t\tthis.uploadGateway = uploadGateway;\n\n\t\tthis.loader = loader;\n\t}\n\n\tupload() {\n\t\treturn this.loader.file.then( file => {\n\t\t\tthis.fileUploader = this.uploadGateway.upload( file );\n\n\t\t\tthis.fileUploader.on( 'progress', ( evt, data ) => {\n\t\t\t\tthis.loader.uploadTotal = data.total;\n\t\t\t\tthis.loader.uploaded = data.uploaded;\n\t\t\t} );\n\n\t\t\treturn this.fileUploader.send();\n\t\t} );\n\t}\n\n\tabort() {\n\t\tthis.fileUploader.abort();\n\t}\n}\n\n// Store the API in static property to easily overwrite it in tests.\n// Too bad dependency injection does not work in Webpack + ES 6 (const) + Babel.\nCloudServicesUploadAdapter._UploadGateway = UploadGateway;\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module cloud-services-core/uploadgateway/uploadgateway\n */\n\nimport FileUploader from './fileuploader';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * UploadGateway abstracts file uploads to CKEditor Cloud Services.\n */\nexport default class UploadGateway {\n\t/**\n\t * Creates `UploadGateway` instance.\n\t *\n\t * @param {module:cloud-services-core/token~Token} token Token used for authentication.\n\t * @param {String} apiAddress API address.\n\t */\n\tconstructor( token, apiAddress ) {\n\t\tif ( !token ) {\n\t\t\t/**\n\t\t\t * Token must be provided.\n\t\t\t *\n\t\t\t * @error uploadgateway-missing-token\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'uploadgateway-missing-token: Token must be provided.', null );\n\t\t}\n\n\t\tif ( !apiAddress ) {\n\t\t\t/**\n\t\t\t * Api address must be provided.\n\t\t\t *\n\t\t\t * @error uploadgateway-missing-api-address\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'uploadgateway-missing-api-address: Api address must be provided.', null );\n\t\t}\n\n\t\t/**\n\t\t * CKEditor Cloud Services access token.\n\t\t *\n\t\t * @type {module:cloud-services-core/token~Token}\n\t\t * @private\n\t\t */\n\t\tthis._token = token;\n\n\t\t/**\n\t\t * CKEditor Cloud Services API address.\n\t\t *\n\t\t * @type {String}\n\t\t * @private\n\t\t */\n\t\tthis._apiAddress = apiAddress;\n\t}\n\n\t/**\n\t * Creates a {@link module:cloud-services-core/uploadgateway/fileuploader~FileUploader} instance that wraps\n\t * file upload process. The file is being sent at a time when the\n\t * {@link module:cloud-services-core/uploadgateway/fileuploader~FileUploader#send} method is called.\n\t *\n\t *     const token = await Token.create( 'https://token-endpoint' );\n\t *     new UploadGateway( token, 'https://example.org' )\n\t *        .upload( 'FILE' )\n\t *        .onProgress( ( data ) => console.log( data ) )\n\t *        .send()\n\t *        .then( ( response ) => console.log( response ) );\n\t *\n\t * @param {Blob|String} fileOrData A blob object or a data string encoded with Base64.\n\t * @returns {module:cloud-services-core/uploadgateway/fileuploader~FileUploader} Returns `FileUploader` instance.\n\t */\n\tupload( fileOrData ) {\n\t\treturn new FileUploader( fileOrData, this._token, this._apiAddress );\n\t}\n}\n\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/mouseobserver\n */\n\nimport DomEventObserver from './domeventobserver';\n\n/**\n * Mouse events observer.\n *\n * Note that this observer is not available by default. To make it available it needs to be added to\n * {@link module:engine/view/view~View} by {@link module:engine/view/view~View#addObserver} method.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nexport default class MouseObserver extends DomEventObserver {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\tthis.domEventType = 'mousedown';\n\t}\n\n\tonDomEvent( domEvent ) {\n\t\tthis.fire( domEvent.type, domEvent );\n\t}\n}\n\n/**\n * Fired when mouse button is pressed down on one of the editables.\n *\n * Introduced by {@link module:engine/view/observer/mouseobserver~MouseObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:engine/view/observer/mouseobserver~MouseObserver}\n * needs to be added to {@link module:engine/view/view~View} by a {@link module:engine/view/view~View#addObserver} method.\n *\n * @see module:engine/view/observer/mouseobserver~MouseObserver\n * @event module:engine/view/document~Document#event:mousedown\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module widget/widget\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport MouseObserver from '@ckeditor/ckeditor5-engine/src/view/observer/mouseobserver';\nimport { getLabel, isWidget, WIDGET_SELECTED_CLASS_NAME } from './utils';\nimport { getCode, keyCodes, parseKeystroke } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n\nimport '../theme/widget.css';\n\nconst selectAllKeystrokeCode = parseKeystroke( 'Ctrl+A' );\n\n/**\n * The widget plugin. It enables base support for widgets.\n *\n * See {@glink api/widget package page} for more details and documentation.\n *\n * This plugin enables multiple behaviors required by widgets:\n *\n * * The model to view selection converter for the editing pipeline (it handles widget custom selection rendering).\n * If a converted selection wraps around a widget element, that selection is marked as\n * {@link module:engine/view/selection~Selection#isFake fake}. Additionally, the `ck-widget_selected` CSS class\n * is added to indicate that widget has been selected.\n * * The mouse and keyboard events handling on and around widget elements.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Widget extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Widget';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst view = this.editor.editing.view;\n\t\tconst viewDocument = view.document;\n\n\t\t/**\n\t\t * Holds previously selected widgets.\n\t\t *\n\t\t * @private\n\t\t * @type {Set.<module:engine/view/element~Element>}\n\t\t */\n\t\tthis._previouslySelected = new Set();\n\n\t\t// Model to view selection converter.\n\t\t// Converts selection placed over widget element to fake selection\n\t\tthis.editor.editing.downcastDispatcher.on( 'selection', ( evt, data, conversionApi ) => {\n\t\t\t// Remove selected class from previously selected widgets.\n\t\t\tthis._clearPreviouslySelectedWidgets( conversionApi.writer );\n\n\t\t\tconst viewWriter = conversionApi.writer;\n\t\t\tconst viewSelection = viewWriter.document.selection;\n\t\t\tconst selectedElement = viewSelection.getSelectedElement();\n\t\t\tlet lastMarked = null;\n\n\t\t\tfor ( const range of viewSelection.getRanges() ) {\n\t\t\t\tfor ( const value of range ) {\n\t\t\t\t\tconst node = value.item;\n\n\t\t\t\t\t// Do not mark nested widgets in selected one. See: #57.\n\t\t\t\t\tif ( isWidget( node ) && !isChild( node, lastMarked ) ) {\n\t\t\t\t\t\tviewWriter.addClass( WIDGET_SELECTED_CLASS_NAME, node );\n\n\t\t\t\t\t\tthis._previouslySelected.add( node );\n\t\t\t\t\t\tlastMarked = node;\n\n\t\t\t\t\t\t// Check if widget is a single element selected.\n\t\t\t\t\t\tif ( node == selectedElement ) {\n\t\t\t\t\t\t\tviewWriter.setSelection( viewSelection.getRanges(), { fake: true, label: getLabel( selectedElement ) } );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, { priority: 'low' } );\n\n\t\t// If mouse down is pressed on widget - create selection over whole widget.\n\t\tview.addObserver( MouseObserver );\n\t\tthis.listenTo( viewDocument, 'mousedown', ( ...args ) => this._onMousedown( ...args ) );\n\n\t\t// Handle custom keydown behaviour.\n\t\tthis.listenTo( viewDocument, 'keydown', ( ...args ) => this._onKeydown( ...args ), { priority: 'high' } );\n\n\t\t// Handle custom delete behaviour.\n\t\tthis.listenTo( viewDocument, 'delete', ( evt, data ) => {\n\t\t\tif ( this._handleDelete( data.direction == 'forward' ) ) {\n\t\t\t\tdata.preventDefault();\n\t\t\t\tevt.stop();\n\t\t\t}\n\t\t}, { priority: 'high' } );\n\t}\n\n\t/**\n\t * Handles {@link module:engine/view/document~Document#event:mousedown mousedown} events on widget elements.\n\t *\n\t * @private\n\t * @param {module:utils/eventinfo~EventInfo} eventInfo\n\t * @param {module:engine/view/observer/domeventdata~DomEventData} domEventData\n\t */\n\t_onMousedown( eventInfo, domEventData ) {\n\t\tconst editor = this.editor;\n\t\tconst view = editor.editing.view;\n\t\tconst viewDocument = view.document;\n\t\tlet element = domEventData.target;\n\n\t\t// Do nothing for single or double click inside nested editable.\n\t\tif ( isInsideNestedEditable( element ) ) {\n\t\t\t// But at least triple click inside nested editable causes broken selection in Safari.\n\t\t\t// For such event, we select the entire nested editable element.\n\t\t\t// See: https://github.com/ckeditor/ckeditor5/issues/1463.\n\t\t\tif ( env.isSafari && domEventData.domEvent.detail >= 3 ) {\n\t\t\t\tconst mapper = editor.editing.mapper;\n\t\t\t\tconst modelElement = mapper.toModelElement( element );\n\n\t\t\t\tthis.editor.model.change( writer => {\n\t\t\t\t\tdomEventData.preventDefault();\n\t\t\t\t\twriter.setSelection( modelElement, 'in' );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// If target is not a widget element - check if one of the ancestors is.\n\t\tif ( !isWidget( element ) ) {\n\t\t\telement = element.findAncestor( isWidget );\n\n\t\t\tif ( !element ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tdomEventData.preventDefault();\n\n\t\t// Focus editor if is not focused already.\n\t\tif ( !viewDocument.isFocused ) {\n\t\t\tview.focus();\n\t\t}\n\n\t\t// Create model selection over widget.\n\t\tconst modelElement = editor.editing.mapper.toModelElement( element );\n\n\t\tthis._setSelectionOverElement( modelElement );\n\t}\n\n\t/**\n\t * Handles {@link module:engine/view/document~Document#event:keydown keydown} events.\n\t *\n\t * @private\n\t * @param {module:utils/eventinfo~EventInfo} eventInfo\n\t * @param {module:engine/view/observer/domeventdata~DomEventData} domEventData\n\t */\n\t_onKeydown( eventInfo, domEventData ) {\n\t\tconst keyCode = domEventData.keyCode;\n\t\tconst isLtrContent = this.editor.locale.contentLanguageDirection === 'ltr';\n\t\tconst isForward = keyCode == keyCodes.arrowdown || keyCode == keyCodes[ isLtrContent ? 'arrowright' : 'arrowleft' ];\n\t\tlet wasHandled = false;\n\n\t\t// Checks if the keys were handled and then prevents the default event behaviour and stops\n\t\t// the propagation.\n\t\tif ( isArrowKeyCode( keyCode ) ) {\n\t\t\twasHandled = this._handleArrowKeys( isForward );\n\t\t} else if ( isSelectAllKeyCode( domEventData ) ) {\n\t\t\twasHandled = this._selectAllNestedEditableContent() || this._selectAllContent();\n\t\t} else if ( keyCode === keyCodes.enter ) {\n\t\t\twasHandled = this._handleEnterKey( domEventData.shiftKey );\n\t\t}\n\n\t\tif ( wasHandled ) {\n\t\t\tdomEventData.preventDefault();\n\t\t\teventInfo.stop();\n\t\t}\n\t}\n\n\t/**\n\t * Handles delete keys: backspace and delete.\n\t *\n\t * @private\n\t * @param {Boolean} isForward Set to true if delete was performed in forward direction.\n\t * @returns {Boolean|undefined} Returns `true` if keys were handled correctly.\n\t */\n\t_handleDelete( isForward ) {\n\t\t// Do nothing when the read only mode is enabled.\n\t\tif ( this.editor.isReadOnly ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst modelDocument = this.editor.model.document;\n\t\tconst modelSelection = modelDocument.selection;\n\n\t\t// Do nothing on non-collapsed selection.\n\t\tif ( !modelSelection.isCollapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst objectElement = this._getObjectElementNextToSelection( isForward );\n\n\t\tif ( objectElement ) {\n\t\t\tthis.editor.model.change( writer => {\n\t\t\t\tlet previousNode = modelSelection.anchor.parent;\n\n\t\t\t\t// Remove previous element if empty.\n\t\t\t\twhile ( previousNode.isEmpty ) {\n\t\t\t\t\tconst nodeToRemove = previousNode;\n\t\t\t\t\tpreviousNode = nodeToRemove.parent;\n\n\t\t\t\t\twriter.remove( nodeToRemove );\n\t\t\t\t}\n\n\t\t\t\tthis._setSelectionOverElement( objectElement );\n\t\t\t} );\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * Handles arrow keys.\n\t *\n\t * @private\n\t * @param {Boolean} isForward Set to true if arrow key should be handled in forward direction.\n\t * @returns {Boolean|undefined} Returns `true` if keys were handled correctly.\n\t */\n\t_handleArrowKeys( isForward ) {\n\t\tconst model = this.editor.model;\n\t\tconst schema = model.schema;\n\t\tconst modelDocument = model.document;\n\t\tconst modelSelection = modelDocument.selection;\n\t\tconst objectElement = modelSelection.getSelectedElement();\n\n\t\t// If object element is selected.\n\t\tif ( objectElement && schema.isObject( objectElement ) ) {\n\t\t\tconst position = isForward ? modelSelection.getLastPosition() : modelSelection.getFirstPosition();\n\t\t\tconst newRange = schema.getNearestSelectionRange( position, isForward ? 'forward' : 'backward' );\n\n\t\t\tif ( newRange ) {\n\t\t\t\tmodel.change( writer => {\n\t\t\t\t\twriter.setSelection( newRange );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\t// If selection is next to object element.\n\t\t// Return if not collapsed.\n\t\tif ( !modelSelection.isCollapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst objectElement2 = this._getObjectElementNextToSelection( isForward );\n\n\t\tif ( !!objectElement2 && schema.isObject( objectElement2 ) ) {\n\t\t\tthis._setSelectionOverElement( objectElement2 );\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * Handles the enter key, giving users and access to positions in the editable directly before\n\t * (<kbd>Shift</kbd>+<kbd>Enter</kbd>) or after (<kbd>Enter</kbd>) the selected widget.\n\t * It improves the UX, mainly when the widget is the first or last child of the root editable\n\t * and there's no other way to type after or before it.\n\t *\n\t * @private\n\t * @param {Boolean} isBackwards Set to true if the new paragraph is to be inserted before\n\t * the selected widget (<kbd>Shift</kbd>+<kbd>Enter</kbd>).\n\t * @returns {Boolean|undefined} Returns `true` if keys were handled correctly.\n\t */\n\t_handleEnterKey( isBackwards ) {\n\t\tconst model = this.editor.model;\n\t\tconst modelSelection = model.document.selection;\n\t\tconst selectedElement = modelSelection.getSelectedElement();\n\n\t\tif ( shouldInsertParagraph( selectedElement, model.schema ) ) {\n\t\t\tmodel.change( writer => {\n\t\t\t\tlet position = writer.createPositionAt( selectedElement, isBackwards ? 'before' : 'after' );\n\t\t\t\tconst paragraph = writer.createElement( 'paragraph' );\n\n\t\t\t\t// Split the parent when inside a block element.\n\t\t\t\t// https://github.com/ckeditor/ckeditor5/issues/1529\n\t\t\t\tif ( model.schema.isBlock( selectedElement.parent ) ) {\n\t\t\t\t\tconst paragraphLimit = model.schema.findAllowedParent( position, paragraph );\n\n\t\t\t\t\tposition = writer.split( position, paragraphLimit ).position;\n\t\t\t\t}\n\n\t\t\t\twriter.insert( paragraph, position );\n\t\t\t\twriter.setSelection( paragraph, 'in' );\n\t\t\t} );\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * Extends the {@link module:engine/model/selection~Selection document's selection} to span the entire\n\t * content of the nested editable if already anchored in one.\n\t *\n\t * See: {@link module:engine/model/schema~Schema#getLimitElement}.\n\t *\n\t * @private\n\t */\n\t_selectAllNestedEditableContent() {\n\t\tconst model = this.editor.model;\n\t\tconst documentSelection = model.document.selection;\n\t\tconst limitElement = model.schema.getLimitElement( documentSelection );\n\n\t\tif ( documentSelection.getFirstRange().root == limitElement ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tmodel.change( writer => {\n\t\t\twriter.setSelection( writer.createRangeIn( limitElement ) );\n\t\t} );\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Handles <kbd>CTRL + A</kbd> when widget is selected.\n\t *\n\t * @private\n\t * @returns {Boolean} Returns true if widget was selected and selecting all was handled by this method.\n\t */\n\t_selectAllContent() {\n\t\tconst model = this.editor.model;\n\t\tconst editing = this.editor.editing;\n\t\tconst view = editing.view;\n\t\tconst viewDocument = view.document;\n\t\tconst viewSelection = viewDocument.selection;\n\n\t\tconst selectedElement = viewSelection.getSelectedElement();\n\n\t\t// Only widget is selected.\n\t\t// https://github.com/ckeditor/ckeditor5-widget/issues/23\n\t\tif ( selectedElement && isWidget( selectedElement ) ) {\n\t\t\tconst widgetParent = editing.mapper.toModelElement( selectedElement.parent );\n\n\t\t\tmodel.change( writer => {\n\t\t\t\twriter.setSelection( writer.createRangeIn( widgetParent ) );\n\t\t\t} );\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Sets {@link module:engine/model/selection~Selection document's selection} over given element.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} element\n\t */\n\t_setSelectionOverElement( element ) {\n\t\tthis.editor.model.change( writer => {\n\t\t\twriter.setSelection( writer.createRangeOn( element ) );\n\t\t} );\n\t}\n\n\t/**\n\t * Checks if {@link module:engine/model/element~Element element} placed next to the current\n\t * {@link module:engine/model/selection~Selection model selection} exists and is marked in\n\t * {@link module:engine/model/schema~Schema schema} as `object`.\n\t *\n\t * @private\n\t * @param {Boolean} forward Direction of checking.\n\t * @returns {module:engine/model/element~Element|null}\n\t */\n\t_getObjectElementNextToSelection( forward ) {\n\t\tconst model = this.editor.model;\n\t\tconst schema = model.schema;\n\t\tconst modelSelection = model.document.selection;\n\n\t\t// Clone current selection to use it as a probe. We must leave default selection as it is so it can return\n\t\t// to its current state after undo.\n\t\tconst probe = model.createSelection( modelSelection );\n\t\tmodel.modifySelection( probe, { direction: forward ? 'forward' : 'backward' } );\n\t\tconst objectElement = forward ? probe.focus.nodeBefore : probe.focus.nodeAfter;\n\n\t\tif ( !!objectElement && schema.isObject( objectElement ) ) {\n\t\t\treturn objectElement;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Removes CSS class from previously selected widgets.\n\t *\n\t * @private\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n\t */\n\t_clearPreviouslySelectedWidgets( writer ) {\n\t\tfor ( const widget of this._previouslySelected ) {\n\t\t\twriter.removeClass( WIDGET_SELECTED_CLASS_NAME, widget );\n\t\t}\n\n\t\tthis._previouslySelected.clear();\n\t}\n}\n\n// Returns 'true' if provided key code represents one of the arrow keys.\n//\n// @param {Number} keyCode\n// @returns {Boolean}\nfunction isArrowKeyCode( keyCode ) {\n\treturn keyCode == keyCodes.arrowright ||\n\t\tkeyCode == keyCodes.arrowleft ||\n\t\tkeyCode == keyCodes.arrowup ||\n\t\tkeyCode == keyCodes.arrowdown;\n}\n\n// Returns 'true' if provided (DOM) key event data corresponds with the Ctrl+A keystroke.\n//\n// @param {module:engine/view/observer/keyobserver~KeyEventData} domEventData\n// @returns {Boolean}\nfunction isSelectAllKeyCode( domEventData ) {\n\treturn getCode( domEventData ) == selectAllKeystrokeCode;\n}\n\n// Returns `true` when element is a nested editable or is placed inside one.\n//\n// @param {module:engine/view/element~Element}\n// @returns {Boolean}\nfunction isInsideNestedEditable( element ) {\n\twhile ( element ) {\n\t\tif ( element.is( 'editableElement' ) && !element.is( 'rootElement' ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Click on nested widget should select it.\n\t\tif ( isWidget( element ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\telement = element.parent;\n\t}\n\n\treturn false;\n}\n\n// Checks whether the specified `element` is a child of the `parent` element.\n//\n// @param {module:engine/view/element~Element} element An element to check.\n// @param {module:engine/view/element~Element|null} parent A parent for the element.\n// @returns {Boolean}\nfunction isChild( element, parent ) {\n\tif ( !parent ) {\n\t\treturn false;\n\t}\n\n\treturn Array.from( element.getAncestors() ).includes( parent );\n}\n\n// Checks if enter key should insert paragraph. This should be done only on elements of type object (excluding inline objects).\n//\n// @param {module:engine/model/element~Element} element And element to check.\n// @param {module:engine/model/schema~Schema} schema\nfunction shouldInsertParagraph( element, schema ) {\n\treturn element && schema.isObject( element ) && !schema.isInline( element );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imagetextalternative/imagetextalternativecommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { isImage } from '../image/utils';\n\n/**\n * The image text alternative command. It is used to change the `alt` attribute of `<image>` elements.\n *\n * @extends module:core/command~Command\n */\nexport default class ImageTextAlternativeCommand extends Command {\n\t/**\n\t * The command value: `false` if there is no `alt` attribute, otherwise the value of the `alt` attribute.\n\t *\n\t * @readonly\n\t * @observable\n\t * @member {String|Boolean} #value\n\t */\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst element = this.editor.model.document.selection.getSelectedElement();\n\n\t\tthis.isEnabled = isImage( element );\n\n\t\tif ( isImage( element ) && element.hasAttribute( 'alt' ) ) {\n\t\t\tthis.value = element.getAttribute( 'alt' );\n\t\t} else {\n\t\t\tthis.value = false;\n\t\t}\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * @fires execute\n\t * @param {Object} options\n\t * @param {String} options.newValue The new value of the `alt` attribute to set.\n\t */\n\texecute( options ) {\n\t\tconst model = this.editor.model;\n\t\tconst imageElement = model.document.selection.getSelectedElement();\n\n\t\tmodel.change( writer => {\n\t\t\twriter.setAttribute( 'alt', options.newValue, imageElement );\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imagetextalternative/imagetextalternativeediting\n */\n\nimport ImageTextAlternativeCommand from './imagetextalternativecommand';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\n/**\n * The image text alternative editing plugin.\n *\n * Registers the `'imageTextAlternative'` command.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageTextAlternativeEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ImageTextAlternativeEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tthis.editor.commands.add( 'imageTextAlternative', new ImageTextAlternativeCommand( this.editor ) );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/labeledinput/labeledinputview\n */\n\nimport View from '../view';\nimport uid from '@ckeditor/ckeditor5-utils/src/uid';\nimport LabelView from '../label/labelview';\nimport '../../theme/components/labeledinput/labeledinput.css';\n\n/**\n * The labeled input view class.\n *\n * @extends module:ui/view~View\n */\nexport default class LabeledInputView extends View {\n\t/**\n\t * Creates an instance of the labeled input view class.\n\t *\n\t * @param {module:utils/locale~Locale} locale The locale instance.\n\t * @param {Function} InputView Constructor of the input view.\n\t */\n\tconstructor( locale, InputView ) {\n\t\tsuper( locale );\n\n\t\tconst inputUid = `ck-input-${ uid() }`;\n\t\tconst statusUid = `ck-status-${ uid() }`;\n\n\t\t/**\n\t\t * The text of the label.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #label\n\t\t */\n\t\tthis.set( 'label' );\n\n\t\t/**\n\t\t * The value of the input.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #value\n\t\t */\n\t\tthis.set( 'value' );\n\n\t\t/**\n\t\t * Controls whether the component is in read-only mode.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isReadOnly\n\t\t */\n\t\tthis.set( 'isReadOnly', false );\n\n\t\t/**\n\t\t * The validation error text. When set, it will be displayed\n\t\t * next to the {@link #inputView} as a typical validation error message.\n\t\t * Set it to `null` to hide the message.\n\t\t *\n\t\t * **Note:** Setting this property to anything but `null` will automatically\n\t\t * make the {@link module:ui/inputtext/inputtextview~InputTextView#hasError `hasError`}\n\t\t * of the {@link #inputView} `true`.\n\t\t *\n\t\t * **Note:** Typing in the {@link #inputView} which fires the\n\t\t * {@link module:ui/inputtext/inputtextview~InputTextView#event:input `input` event}\n\t\t * resets this property back to `null`, indicating that the input field can be re–validated.\n\t\t *\n\t\t * @observable\n\t\t * @member {String|null} #errorText\n\t\t */\n\t\tthis.set( 'errorText', null );\n\n\t\t/**\n\t\t * The additional information text displayed next to the {@link #inputView} which can\n\t\t * be used to inform the user about the purpose of the input, provide help or hints.\n\t\t *\n\t\t * Set it to `null` to hide the message.\n\t\t *\n\t\t * **Note:** This text will be displayed in the same place as {@link #errorText} but the\n\t\t * latter always takes precedence: if the {@link #errorText} is set, it replaces\n\t\t * {@link #errorText} for as long as the value of the input is invalid.\n\t\t *\n\t\t * @observable\n\t\t * @member {String|null} #infoText\n\t\t */\n\t\tthis.set( 'infoText', null );\n\n\t\t/**\n\t\t * The label view.\n\t\t *\n\t\t * @member {module:ui/label/labelview~LabelView} #labelView\n\t\t */\n\t\tthis.labelView = this._createLabelView( inputUid );\n\n\t\t/**\n\t\t * The input view.\n\t\t *\n\t\t * @member {module:ui/inputtext/inputtextview~InputTextView} #inputView\n\t\t */\n\t\tthis.inputView = this._createInputView( InputView, inputUid, statusUid );\n\n\t\t/**\n\t\t * The status view for the {@link #inputView}. It displays {@link #errorText} and\n\t\t * {@link #infoText}.\n\t\t *\n\t\t * @member {module:ui/view~View} #statusView\n\t\t */\n\t\tthis.statusView = this._createStatusView( statusUid );\n\n\t\t/**\n\t\t * The combined status text made of {@link #errorText} and {@link #infoText}.\n\t\t * Note that when present, {@link #errorText} always takes precedence in the\n\t\t * status.\n\t\t *\n\t\t * @see #errorText\n\t\t * @see #infoText\n\t\t * @see #statusView\n\t\t * @private\n\t\t * @observable\n\t\t * @member {String|null} #_statusText\n\t\t */\n\t\tthis.bind( '_statusText' ).to(\n\t\t\tthis, 'errorText',\n\t\t\tthis, 'infoText',\n\t\t\t( errorText, infoText ) => errorText || infoText\n\t\t);\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-labeled-input',\n\t\t\t\t\tbind.if( 'isReadOnly', 'ck-disabled' )\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\tthis.labelView,\n\t\t\t\tthis.inputView,\n\t\t\t\tthis.statusView\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * Creates label view class instance and bind with view.\n\t *\n\t * @private\n\t * @param {String} id Unique id to set as labelView#for attribute.\n\t * @returns {module:ui/label/labelview~LabelView}\n\t */\n\t_createLabelView( id ) {\n\t\tconst labelView = new LabelView( this.locale );\n\n\t\tlabelView.for = id;\n\t\tlabelView.bind( 'text' ).to( this, 'label' );\n\n\t\treturn labelView;\n\t}\n\n\t/**\n\t * Creates input view class instance and bind with view.\n\t *\n\t * @private\n\t * @param {Function} InputView Input view constructor.\n\t * @param {String} inputUid Unique id to set as inputView#id attribute.\n\t * @param {String} statusUid Unique id of the status for the input's `aria-describedby` attribute.\n\t * @returns {module:ui/inputtext/inputtextview~InputTextView}\n\t */\n\t_createInputView( InputView, inputUid, statusUid ) {\n\t\tconst inputView = new InputView( this.locale, statusUid );\n\n\t\tinputView.id = inputUid;\n\t\tinputView.ariaDescribedById = statusUid;\n\t\tinputView.bind( 'value' ).to( this );\n\t\tinputView.bind( 'isReadOnly' ).to( this );\n\t\tinputView.bind( 'hasError' ).to( this, 'errorText', value => !!value );\n\n\t\tinputView.on( 'input', () => {\n\t\t\t// UX: Make the error text disappear and disable the error indicator as the user\n\t\t\t// starts fixing the errors.\n\t\t\tthis.errorText = null;\n\t\t} );\n\n\t\treturn inputView;\n\t}\n\n\t/**\n\t * Creates the status view instance. It displays {@link #errorText} and {@link #infoText}\n\t * next to the {@link #inputView}. See {@link #_statusText}.\n\t *\n\t * @private\n\t * @param {String} statusUid Unique id of the status, shared with the input's `aria-describedby` attribute.\n\t * @returns {module:ui/view~View}\n\t */\n\t_createStatusView( statusUid ) {\n\t\tconst statusView = new View( this.locale );\n\t\tconst bind = this.bindTemplate;\n\n\t\tstatusView.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-labeled-input__status',\n\t\t\t\t\tbind.if( 'errorText', 'ck-labeled-input__status_error' ),\n\t\t\t\t\tbind.if( '_statusText', 'ck-hidden', value => !value )\n\t\t\t\t],\n\t\t\t\tid: statusUid,\n\t\t\t\trole: bind.if( 'errorText', 'alert' )\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttext: bind.to( '_statusText' )\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\t\treturn statusView;\n\t}\n\n\t/**\n\t * Moves the focus to the input and selects the value.\n\t */\n\tselect() {\n\t\tthis.inputView.select();\n\t}\n\n\t/**\n\t * Focuses the input.\n\t */\n\tfocus() {\n\t\tthis.inputView.focus();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/inputtext/inputtextview\n */\n\nimport View from '../view';\nimport '../../theme/components/inputtext/inputtext.css';\n\n/**\n * The text input view class.\n *\n * @extends module:ui/view~View\n */\nexport default class InputTextView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * The value of the input.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #value\n\t\t */\n\t\tthis.set( 'value' );\n\n\t\t/**\n\t\t * The `id` attribute of the input (i.e. to pair with a `<label>` element).\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #id\n\t\t */\n\t\tthis.set( 'id' );\n\n\t\t/**\n\t\t * The `placeholder` attribute of the input.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #placeholder\n\t\t */\n\t\tthis.set( 'placeholder' );\n\n\t\t/**\n\t\t * Controls whether the input view is in read-only mode.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isReadOnly\n\t\t */\n\t\tthis.set( 'isReadOnly', false );\n\n\t\t/**\n\t\t * Set to `true` when the field has some error. Usually controlled via\n\t\t * {@link module:ui/labeledinput/labeledinputview~LabeledInputView#errorText}.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #hasError\n\t\t */\n\t\tthis.set( 'hasError', false );\n\n\t\t/**\n\t\t * The `id` of the element describing this field, e.g. when it has\n\t\t * some error, it helps screen readers read the error text.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #ariaDescribedById\n\t\t */\n\t\tthis.set( 'ariaDescribedById' );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'input',\n\t\t\tattributes: {\n\t\t\t\ttype: 'text',\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-input',\n\t\t\t\t\t'ck-input-text',\n\t\t\t\t\tbind.if( 'hasError', 'ck-error' )\n\t\t\t\t],\n\t\t\t\tid: bind.to( 'id' ),\n\t\t\t\tplaceholder: bind.to( 'placeholder' ),\n\t\t\t\treadonly: bind.to( 'isReadOnly' ),\n\t\t\t\t'aria-invalid': bind.if( 'hasError', true ),\n\t\t\t\t'aria-describedby': bind.to( 'ariaDescribedById' )\n\t\t\t},\n\t\t\ton: {\n\t\t\t\tinput: bind.to( 'input' )\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * Fired when the user types in the input. Corresponds to the native\n\t\t * DOM `input` event.\n\t\t *\n\t\t * @event input\n\t\t */\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tconst setValue = value => {\n\t\t\tthis.element.value = ( !value && value !== 0 ) ? '' : value;\n\t\t};\n\n\t\tsetValue( this.value );\n\n\t\t// Bind `this.value` to the DOM element's value.\n\t\t// We cannot use `value` DOM attribute because removing it on Edge does not clear the DOM element's value property.\n\t\tthis.on( 'change:value', ( evt, name, value ) => {\n\t\t\tsetValue( value );\n\t\t} );\n\t}\n\n\t/**\n\t * Moves the focus to the input and selects the value.\n\t */\n\tselect() {\n\t\tthis.element.select();\n\t}\n\n\t/**\n\t * Focuses the input.\n\t */\n\tfocus() {\n\t\tthis.element.focus();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/bindings/submithandler\n */\n\n/**\n * A handler useful for {@link module:ui/view~View views} working as HTML forms. It intercepts a native DOM\n * `submit` event, prevents the default web browser behavior (navigation and page reload) and\n * fires the `submit` event on a view instead. Such a custom event can be then used by any\n * {@link module:utils/dom/emittermixin~Emitter emitter}, e.g. to serialize the form data.\n *\n *\t\timport submitHandler from '@ckeditor/ckeditor5-ui/src/bindings/submithandler';\n *\n *\t\t// ...\n *\n *\t\tclass AnyFormView extends View {\n *\t\t\tconstructor() {\n *\t\t\t\tsuper();\n *\n *\t\t\t\t// ...\n *\n *\t\t\t\tsubmitHandler( {\n *\t\t\t\t\tview: this\n *\t\t\t\t} );\n *\t\t\t}\n *\t\t}\n *\n *\t\t// ...\n *\n *\t\tconst view = new AnyFormView();\n *\n *\t\t// A sample listener attached by an emitter working with the view.\n *\t\tthis.listenTo( view, 'submit', () => {\n *\t\t\tsaveTheFormData();\n *\t\t\thideTheForm();\n *\t\t} );\n *\n * @param {Object} [options] Configuration options.\n * @param {module:ui/view~View} options.view The view which DOM `submit` events should be handled.\n */\nexport default function submitHandler( { view } ) {\n\tview.listenTo( view.element, 'submit', ( evt, domEvt ) => {\n\t\tdomEvt.preventDefault();\n\t\tview.fire( 'submit' );\n\t}, { useCapture: true } );\n}\n","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M6.972 16.615a.997.997 0 01-.744-.292l-4.596-4.596a1 1 0 111.414-1.414l3.926 3.926 9.937-9.937a1 1 0 011.414 1.415L7.717 16.323a.997.997 0 01-.745.292z\\\"/></svg>\"","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M11.591 10.177l4.243 4.242a1 1 0 01-1.415 1.415l-4.242-4.243-4.243 4.243a1 1 0 01-1.414-1.415l4.243-4.242L4.52 5.934A1 1 0 015.934 4.52l4.243 4.243 4.242-4.243a1 1 0 111.415 1.414l-4.243 4.243z\\\"/></svg>\"","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module image/imagetextalternative/ui/textalternativeformview\n */\nimport View from '@ckeditor/ckeditor5-ui/src/view';\nimport ViewCollection from '@ckeditor/ckeditor5-ui/src/viewcollection';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport LabeledInputView from '@ckeditor/ckeditor5-ui/src/labeledinput/labeledinputview';\nimport InputTextView from '@ckeditor/ckeditor5-ui/src/inputtext/inputtextview';\nimport submitHandler from '@ckeditor/ckeditor5-ui/src/bindings/submithandler';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport FocusCycler from '@ckeditor/ckeditor5-ui/src/focuscycler';\nimport checkIcon from '@ckeditor/ckeditor5-core/theme/icons/check.svg';\nimport cancelIcon from '@ckeditor/ckeditor5-core/theme/icons/cancel.svg';\nimport '../../../theme/textalternativeform.css';\n/**\n * The TextAlternativeFormView class.\n *\n * @extends module:ui/view~View\n */\nexport default class TextAlternativeFormView extends View {\n    /**\n\t * @inheritDoc\n\t */\n    constructor(locale) {\n        super(locale);\n        const t = this.locale.t;\n        /**\n\t\t * Tracks information about the DOM focus in the form.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n        this.focusTracker = new FocusTracker();\n        /**\n\t\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n        this.keystrokes = new KeystrokeHandler();\n        /**\n\t\t * A textarea with a label.\n\t\t *\n\t\t * @member {module:ui/labeledinput/labeledinputview~LabeledInputView} #labeledTextarea\n\t\t */\n        this.labeledInput = this._createLabeledInputView();\n        /**\n\t\t * A button used to submit the form.\n\t\t *\n\t\t * @member {module:ui/button/buttonview~ButtonView} #saveButtonView\n\t\t */\n        this.saveButtonView = this._createButton(t('bm'), checkIcon, 'ck-button-save');\n        this.saveButtonView.type = 'submit';\n        /**\n\t\t * A button used to cancel the form.\n\t\t *\n\t\t * @member {module:ui/button/buttonview~ButtonView} #cancelButtonView\n\t\t */\n        this.cancelButtonView = this._createButton(t('bn'), cancelIcon, 'ck-button-cancel', 'cancel');\n        /**\n\t\t * A collection of views which can be focused in the form.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n        this._focusables = new ViewCollection();\n        /**\n\t\t * Helps cycling over {@link #_focusables} in the form.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/focuscycler~FocusCycler}\n\t\t */\n        this._focusCycler = new FocusCycler({\n            focusables: this._focusables,\n            focusTracker: this.focusTracker,\n            keystrokeHandler: this.keystrokes,\n            actions: {\n                // Navigate form fields backwards using the Shift + Tab keystroke.\n                focusPrevious: 'shift + tab',\n                // Navigate form fields forwards using the Tab key.\n                focusNext: 'tab'\n            }\n        });\n        this.setTemplate({\n            tag: 'form',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-text-alternative-form'\n                ],\n                // https://github.com/ckeditor/ckeditor5-image/issues/40\n                tabindex: '-1'\n            },\n            children: [\n                this.labeledInput,\n                this.saveButtonView,\n                this.cancelButtonView\n            ]\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */\n    render() {\n        super.render();\n        this.keystrokes.listenTo(this.element);\n        submitHandler({ view: this });\n        [\n            this.labeledInput,\n            this.saveButtonView,\n            this.cancelButtonView\n        ].forEach(v => {\n            // Register the view as focusable.\n            this._focusables.add(v);\n            // Register the view in the focus tracker.\n            this.focusTracker.add(v.element);\n        });\n    }\n    /**\n\t * Creates the button view.\n\t *\n\t * @private\n\t * @param {String} label The button label\n\t * @param {String} icon The button's icon.\n\t * @param {String} className The additional button CSS class name.\n\t * @param {String} [eventName] The event name that the ButtonView#execute event will be delegated to.\n\t * @returns {module:ui/button/buttonview~ButtonView} The button view instance.\n\t */\n    _createButton(label, icon, className, eventName) {\n        const button = new ButtonView(this.locale);\n        button.set({\n            label,\n            icon,\n            tooltip: true\n        });\n        button.extendTemplate({ attributes: { class: className } });\n        if (eventName) {\n            button.delegate('execute').to(this, eventName);\n        }\n        return button;\n    }\n    /**\n\t * Creates an input with a label.\n\t *\n\t * @private\n\t * @returns {module:ui/labeledinput/labeledinputview~LabeledInputView}\n\t */\n    _createLabeledInputView() {\n        const t = this.locale.t;\n        const labeledInput = new LabeledInputView(this.locale, InputTextView);\n        labeledInput.label = t('bw');\n        labeledInput.inputView.placeholder = t('bw');\n        return labeledInput;\n    }\n}","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/panel/balloon/balloonpanelview\n */\n\nimport View from '../../view';\nimport { getOptimalPosition } from '@ckeditor/ckeditor5-utils/src/dom/position';\nimport isRange from '@ckeditor/ckeditor5-utils/src/dom/isrange';\nimport toUnit from '@ckeditor/ckeditor5-utils/src/dom/tounit';\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\nimport { isElement } from 'lodash-es';\n\nimport '../../../theme/components/panel/balloonpanel.css';\n\nconst toPx = toUnit( 'px' );\nconst defaultLimiterElement = global.document.body;\n\n/**\n * The balloon panel view class.\n *\n * A floating container which can\n * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#pin pin} to any\n * {@link module:utils/dom/position~Options#target target} in the DOM and remain in that position\n * e.g. when the web page is scrolled.\n *\n * The balloon panel can be used to display contextual, non-blocking UI like forms, toolbars and\n * the like in its {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#content} view\n * collection.\n *\n * There is a number of {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}\n * that the balloon can use, automatically switching from one to another when the viewport space becomes\n * scarce to keep the balloon visible to the user as long as it is possible. The balloon will also\n * accept any custom position set provided by the user compatible with the\n * {@link module:utils/dom/position~Options options}.\n *\n *\t\tconst panel = new BalloonPanelView( locale );\n *\t\tconst childView = new ChildView();\n *\t\tconst positions = BalloonPanelView.defaultPositions;\n *\n *\t\tpanel.render();\n *\n *\t\t// Add a child view to the panel's content collection.\n *\t\tpanel.content.add( childView );\n *\n *\t\t// Start pinning the panel to an element with the \"target\" id DOM.\n *\t\t// The balloon will remain pinned until unpin() is called.\n *\t\tpanel.pin( {\n *\t\t\ttarget: document.querySelector( '#target' ),\n *\t\t\tpositions: [\n *\t\t\t\tpositions.northArrowSouth,\n *\t\t\t\tpositions.southArrowNorth\n *\t\t\t]\n *\t\t} );\n *\n * @extends module:ui/view~View\n */\nexport default class BalloonPanelView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * The absolute top position of the balloon panel in pixels.\n\t\t *\n\t\t * @observable\n\t\t * @default 0\n\t\t * @member {Number} #top\n\t\t */\n\t\tthis.set( 'top', 0 );\n\n\t\t/**\n\t\t * The absolute left position of the balloon panel in pixels.\n\t\t *\n\t\t * @observable\n\t\t * @default 0\n\t\t * @member {Number} #left\n\t\t */\n\t\tthis.set( 'left', 0 );\n\n\t\t/**\n\t\t * The balloon panel's current position. The position name is reflected in the CSS class set\n\t\t * to the balloon, i.e. `.ck-balloon-panel_arrow_nw` for the \"arrow_nw\" position. The class\n\t\t * controls the minor aspects of the balloon's visual appearance like the placement\n\t\t * of an {@link #withArrow arrow}. To support a new position, an additional CSS must be created.\n\t\t *\n\t\t * Default position names correspond with\n\t\t * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n\t\t *\n\t\t * See the {@link #attachTo} and {@link #pin} methods to learn about custom balloon positions.\n\t\t *\n\t\t * @observable\n\t\t * @default 'arrow_nw'\n\t\t * @member {'arrow_nw'|'arrow_ne'|'arrow_sw'|'arrow_se'} #position\n\t\t */\n\t\tthis.set( 'position', 'arrow_nw' );\n\n\t\t/**\n\t\t * Controls whether the balloon panel is visible or not.\n\t\t *\n\t\t * @observable\n\t\t * @default false\n\t\t * @member {Boolean} #isVisible\n\t\t */\n\t\tthis.set( 'isVisible', false );\n\n\t\t/**\n\t\t * Controls whether the balloon panel has an arrow. The presence of the arrow\n\t\t * is reflected in the `ck-balloon-panel_with-arrow` CSS class.\n\t\t *\n\t\t * @observable\n\t\t * @default true\n\t\t * @member {Boolean} #withArrow\n\t\t */\n\t\tthis.set( 'withArrow', true );\n\n\t\t/**\n\t\t * An additional CSS class added to the {@link #element}.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #class\n\t\t */\n\t\tthis.set( 'class' );\n\n\t\t/**\n\t\t * A callback that starts pinning the panel when {@link #isVisible} gets\n\t\t * `true`. Used by {@link #pin}.\n\t\t *\n\t\t * @private\n\t\t * @member {Function} #_pinWhenIsVisibleCallback\n\t\t */\n\n\t\t/**\n\t\t * A collection of the child views that creates the balloon panel contents.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.content = this.createCollection();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-balloon-panel',\n\t\t\t\t\tbind.to( 'position', value => `ck-balloon-panel_${ value }` ),\n\t\t\t\t\tbind.if( 'isVisible', 'ck-balloon-panel_visible' ),\n\t\t\t\t\tbind.if( 'withArrow', 'ck-balloon-panel_with-arrow' ),\n\t\t\t\t\tbind.to( 'class' )\n\t\t\t\t],\n\n\t\t\t\tstyle: {\n\t\t\t\t\ttop: bind.to( 'top', toPx ),\n\t\t\t\t\tleft: bind.to( 'left', toPx )\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tchildren: this.content\n\t\t} );\n\t}\n\n\t/**\n\t * Shows the panel.\n\t *\n\t * See {@link #isVisible}.\n\t */\n\tshow() {\n\t\tthis.isVisible = true;\n\t}\n\n\t/**\n\t * Hides the panel.\n\t *\n\t * See {@link #isVisible}.\n\t */\n\thide() {\n\t\tthis.isVisible = false;\n\t}\n\n\t/**\n\t * Attaches the panel to a specified {@link module:utils/dom/position~Options#target} with a\n\t * smart positioning heuristics that chooses from available positions to make sure the panel\n\t * is visible to the user i.e. within the limits of the viewport.\n\t *\n\t * This method accepts configuration {@link module:utils/dom/position~Options options}\n\t * to set the `target`, optional `limiter` and `positions` the balloon should choose from.\n\t *\n\t *\t\tconst panel = new BalloonPanelView( locale );\n\t *\t\tconst positions = BalloonPanelView.defaultPositions;\n\t *\n\t *\t\tpanel.render();\n\t *\n\t *\t\t// Attach the panel to an element with the \"target\" id DOM.\n\t *\t\tpanel.attachTo( {\n\t *\t\t\ttarget: document.querySelector( '#target' ),\n\t *\t\t\tpositions: [\n\t *\t\t\t\tpositions.northArrowSouth,\n\t *\t\t\t\tpositions.southArrowNorth\n\t *\t\t\t]\n\t *\t\t} );\n\t *\n\t * **Note**: Attaching the panel will also automatically {@link #show} it.\n\t *\n\t * **Note**: An attached panel will not follow its target when the window is scrolled or resized.\n\t * See the {@link #pin} method for a more permanent positioning strategy.\n\t *\n\t * @param {module:utils/dom/position~Options} options Positioning options compatible with\n\t * {@link module:utils/dom/position~getOptimalPosition}. Default `positions` array is\n\t * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n\t */\n\tattachTo( options ) {\n\t\tthis.show();\n\n\t\tconst defaultPositions = BalloonPanelView.defaultPositions;\n\t\tconst positionOptions = Object.assign( {}, {\n\t\t\telement: this.element,\n\t\t\tpositions: [\n\t\t\t\tdefaultPositions.southArrowNorth,\n\t\t\t\tdefaultPositions.southArrowNorthWest,\n\t\t\t\tdefaultPositions.southArrowNorthEast,\n\t\t\t\tdefaultPositions.northArrowSouth,\n\t\t\t\tdefaultPositions.northArrowSouthWest,\n\t\t\t\tdefaultPositions.northArrowSouthEast\n\t\t\t],\n\t\t\tlimiter: defaultLimiterElement,\n\t\t\tfitInViewport: true\n\t\t}, options );\n\n\t\tconst optimalPosition = BalloonPanelView._getOptimalPosition( positionOptions );\n\n\t\t// Usually browsers make some problems with super accurate values like 104.345px\n\t\t// so it is better to use int values.\n\t\tconst left = parseInt( optimalPosition.left );\n\t\tconst top = parseInt( optimalPosition.top );\n\t\tconst position = optimalPosition.name;\n\n\t\tObject.assign( this, { top, left, position } );\n\t}\n\n\t/**\n\t * Works the same way as the {@link #attachTo} method except that the position of the panel is\n\t * continuously updated when:\n\t *\n\t * * any ancestor of the {@link module:utils/dom/position~Options#target}\n\t * or {@link module:utils/dom/position~Options#limiter} is scrolled,\n\t * * the browser window gets resized or scrolled.\n\t *\n\t * Thanks to that, the panel always sticks to the {@link module:utils/dom/position~Options#target}\n\t * and is immune to the changing environment.\n\t *\n\t *\t\tconst panel = new BalloonPanelView( locale );\n\t *\t\tconst positions = BalloonPanelView.defaultPositions;\n\t *\n\t *\t\tpanel.render();\n\t *\n\t *\t\t// Pin the panel to an element with the \"target\" id DOM.\n\t *\t\tpanel.pin( {\n\t *\t\t\ttarget: document.querySelector( '#target' ),\n\t *\t\t\tpositions: [\n\t *\t\t\t\tpositions.northArrowSouth,\n\t *\t\t\t\tpositions.southArrowNorth\n\t *\t\t\t]\n\t *\t\t} );\n\t *\n\t * To leave the pinned state, use the {@link #unpin} method.\n\t *\n\t * **Note**: Pinning the panel will also automatically {@link #show} it.\n\t *\n\t * @param {module:utils/dom/position~Options} options Positioning options compatible with\n\t * {@link module:utils/dom/position~getOptimalPosition}. Default `positions` array is\n\t * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n\t */\n\tpin( options ) {\n\t\tthis.unpin();\n\n\t\tthis._pinWhenIsVisibleCallback = () => {\n\t\t\tif ( this.isVisible ) {\n\t\t\t\tthis._startPinning( options );\n\t\t\t} else {\n\t\t\t\tthis._stopPinning();\n\t\t\t}\n\t\t};\n\n\t\tthis._startPinning( options );\n\n\t\t// Control the state of the listeners depending on whether the panel is visible\n\t\t// or not.\n\t\t// TODO: Use on() (https://github.com/ckeditor/ckeditor5-utils/issues/144).\n\t\tthis.listenTo( this, 'change:isVisible', this._pinWhenIsVisibleCallback );\n\t}\n\n\t/**\n\t * Stops pinning the panel, as set up by {@link #pin}.\n\t */\n\tunpin() {\n\t\tif ( this._pinWhenIsVisibleCallback ) {\n\t\t\t// Deactivate listeners attached by pin().\n\t\t\tthis._stopPinning();\n\n\t\t\t// Deactivate the panel pin() control logic.\n\t\t\t// TODO: Use off() (https://github.com/ckeditor/ckeditor5-utils/issues/144).\n\t\t\tthis.stopListening( this, 'change:isVisible', this._pinWhenIsVisibleCallback );\n\n\t\t\tthis._pinWhenIsVisibleCallback = null;\n\n\t\t\tthis.hide();\n\t\t}\n\t}\n\n\t/**\n\t * Starts managing the pinned state of the panel. See {@link #pin}.\n\t *\n\t * @private\n\t * @param {module:utils/dom/position~Options} options Positioning options compatible with\n\t * {@link module:utils/dom/position~getOptimalPosition}.\n\t */\n\t_startPinning( options ) {\n\t\tthis.attachTo( options );\n\n\t\tconst targetElement = getDomElement( options.target );\n\t\tconst limiterElement = options.limiter ? getDomElement( options.limiter ) : defaultLimiterElement;\n\n\t\t// Then we need to listen on scroll event of eny element in the document.\n\t\tthis.listenTo( global.document, 'scroll', ( evt, domEvt ) => {\n\t\t\tconst scrollTarget = domEvt.target;\n\n\t\t\t// The position needs to be updated if the positioning target is within the scrolled element.\n\t\t\tconst isWithinScrollTarget = targetElement && scrollTarget.contains( targetElement );\n\n\t\t\t// The position needs to be updated if the positioning limiter is within the scrolled element.\n\t\t\tconst isLimiterWithinScrollTarget = limiterElement && scrollTarget.contains( limiterElement );\n\n\t\t\t// The positioning target and/or limiter can be a Rect, object etc..\n\t\t\t// There's no way to optimize the listener then.\n\t\t\tif ( isWithinScrollTarget || isLimiterWithinScrollTarget || !targetElement || !limiterElement ) {\n\t\t\t\tthis.attachTo( options );\n\t\t\t}\n\t\t}, { useCapture: true } );\n\n\t\t// We need to listen on window resize event and update position.\n\t\tthis.listenTo( global.window, 'resize', () => {\n\t\t\tthis.attachTo( options );\n\t\t} );\n\t}\n\n\t/**\n\t * Stops managing the pinned state of the panel. See {@link #pin}.\n\t *\n\t * @private\n\t */\n\t_stopPinning() {\n\t\tthis.stopListening( global.document, 'scroll' );\n\t\tthis.stopListening( global.window, 'resize' );\n\t}\n}\n\n// Returns the DOM element for given object or null, if there is none,\n// e.g. when the passed object is a Rect instance or so.\n//\n// @private\n// @param {*} object\n// @returns {HTMLElement|null}\nfunction getDomElement( object ) {\n\tif ( isElement( object ) ) {\n\t\treturn object;\n\t}\n\n\tif ( isRange( object ) ) {\n\t\treturn object.commonAncestorContainer;\n\t}\n\n\tif ( typeof object == 'function' ) {\n\t\treturn getDomElement( object() );\n\t}\n\n\treturn null;\n}\n\n/**\n * A horizontal offset of the arrow tip from the edge of the balloon. Controlled by CSS.\n *\n *\t\t +-----|---------...\n *\t\t |     |\n *\t\t |     |\n *\t\t |     |\n *\t\t |     |\n *\t\t +--+  |  +------...\n *\t\t     \\ | /\n *\t\t      \\|/\n *\t    >|-----|<---------------- horizontal offset\n *\n * @default 30\n * @member {Number} module:ui/panel/balloon/balloonpanelview~BalloonPanelView.arrowHorizontalOffset\n */\nBalloonPanelView.arrowHorizontalOffset = 25;\n\n/**\n * A vertical offset of the arrow from the edge of the balloon. Controlled by CSS.\n *\n *\t\t +-------------...\n *\t\t |\n *\t\t |\n *\t\t |                      /-- vertical offset\n *\t\t |                     V\n *\t\t +--+    +-----...    ---------\n *\t\t     \\  /              |\n *\t\t      \\/               |\n *\t\t-------------------------------\n *\t\t                       ^\n *\n * @default 15\n * @member {Number} module:ui/panel/balloon/balloonpanelview~BalloonPanelView.arrowVerticalOffset\n */\nBalloonPanelView.arrowVerticalOffset = 10;\n\n/**\n * Function used to calculate the optimal position for the balloon.\n *\n * @protected\n * @member {Function} module:ui/panel/balloon/balloonpanelview~BalloonPanelView._getOptimalPosition\n */\nBalloonPanelView._getOptimalPosition = getOptimalPosition;\n\n/**\n * A default set of positioning functions used by the balloon panel view\n * when attaching using the {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#attachTo} method.\n *\n * The available positioning functions are as follows:\n *\n * **North**\n *\n * * `northArrowSouth`\n *\n * \t\t+-----------------+\n * \t\t|     Balloon     |\n * \t\t+-----------------+\n * \t\t         V\n * \t\t    [ Target ]\n *\n * * `northArrowSouthEast`\n *\n * \t\t+-----------------+\n * \t\t|     Balloon     |\n * \t\t+-----------------+\n * \t\t               V\n * \t\t          [ Target ]\n *\n * * `northArrowSouthWest`\n *\n * \t\t  +-----------------+\n * \t\t  |     Balloon     |\n * \t\t  +-----------------+\n * \t\t     V\n * \t\t[ Target ]\n *\n * **North west**\n *\n * * `northWestArrowSouth`\n *\n * \t\t+-----------------+\n * \t\t|     Balloon     |\n * \t\t+-----------------+\n * \t\t         V\n * \t\t         [ Target ]\n *\n * * `northWestArrowSouthWest`\n *\n * \t\t+-----------------+\n * \t\t|     Balloon     |\n * \t\t+-----------------+\n * \t\t   V\n * \t\t   [ Target ]\n *\n * * `northWestArrowSouthEast`\n *\n * \t\t+-----------------+\n * \t\t|     Balloon     |\n * \t\t+-----------------+\n * \t\t               V\n * \t\t               [ Target ]\n *\n * **North east**\n *\n * * `northEastArrowSouth`\n *\n * \t\t+-----------------+\n * \t\t|     Balloon     |\n * \t\t+-----------------+\n * \t\t         V\n * \t\t[ Target ]\n *\n * * `northEastArrowSouthEast`\n *\n * \t\t+-----------------+\n * \t\t|     Balloon     |\n * \t\t+-----------------+\n * \t\t               V\n * \t\t      [ Target ]\n *\n * * `northEastArrowSouthWest`\n *\n * \t\t      +-----------------+\n * \t\t      |     Balloon     |\n * \t\t      +-----------------+\n * \t\t         V\n * \t\t[ Target ]\n *\n * **South**\n *\n * * `southArrowNorth`\n *\n *\t\t    [ Target ]\n *\t\t         ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southArrowNorthEast`\n *\n *\t\t          [ Target ]\n *\t\t               ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southArrowNorthWest`\n *\n *\t\t[ Target ]\n *\t\t     ^\n *\t\t   +-----------------+\n *\t\t   |     Balloon     |\n *\t\t   +-----------------+\n *\n * **South west**\n *\n * * `southWestArrowNorth`\n *\n *\t\t         [ Target ]\n *\t\t         ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southWestArrowNorthWest`\n *\n *\t\t  [ Target ]\n *\t\t  ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southWestArrowNorthEast`\n *\n *\t\t               [ Target ]\n *\t\t               ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * **South east**\n *\n * * `southEastArrowNorth`\n *\n *\t\t[ Target ]\n *\t\t         ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southEastArrowNorthEast`\n *\n *\t\t       [ Target ]\n *\t\t                ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southEastArrowNorthWest`\n *\n *\t\t[ Target ]\n *\t\t         ^\n *\t\t       +-----------------+\n *\t\t       |     Balloon     |\n *\t\t       +-----------------+\n *\n * See {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#attachTo}.\n *\n * Positioning functions must be compatible with {@link module:utils/dom/position~Position}.\n *\n * The name that the position function returns will be reflected in the balloon panel's class that\n * controls the placement of the \"arrow\". See {@link #position} to learn more.\n *\n * @member {Object} module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions\n */\nBalloonPanelView.defaultPositions = {\n\t// ------- North\n\n\tnorthArrowSouth: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width / 2,\n\t\tname: 'arrow_s'\n\t} ),\n\n\tnorthArrowSouthEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_se'\n\t} ),\n\n\tnorthArrowSouthWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_sw'\n\t} ),\n\n\t// ------- North west\n\n\tnorthWestArrowSouth: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - balloonRect.width / 2,\n\t\tname: 'arrow_s'\n\t} ),\n\n\tnorthWestArrowSouthWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_sw'\n\t} ),\n\n\tnorthWestArrowSouthEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_se'\n\t} ),\n\n\t// ------- North east\n\n\tnorthEastArrowSouth: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - balloonRect.width / 2,\n\t\tname: 'arrow_s'\n\t} ),\n\n\tnorthEastArrowSouthEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_se'\n\t} ),\n\n\tnorthEastArrowSouthWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_sw'\n\t} ),\n\n\t// ------- South\n\n\tsouthArrowNorth: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width / 2,\n\t\tname: 'arrow_n'\n\t} ),\n\n\tsouthArrowNorthEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_ne'\n\t} ),\n\n\tsouthArrowNorthWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_nw'\n\t} ),\n\n\t// ------- South west\n\n\tsouthWestArrowNorth: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - balloonRect.width / 2,\n\t\tname: 'arrow_n'\n\t} ),\n\n\tsouthWestArrowNorthWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_nw'\n\t} ),\n\n\tsouthWestArrowNorthEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_ne'\n\t} ),\n\n\t// ------- South east\n\n\tsouthEastArrowNorth: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - balloonRect.width / 2,\n\t\tname: 'arrow_n'\n\t} ),\n\n\tsouthEastArrowNorthEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_ne'\n\t} ),\n\n\tsouthEastArrowNorthWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_nw'\n\t} ),\n};\n\n// Returns the top coordinate for positions starting with `north*`.\n//\n// @private\n// @param {utils/dom/rect~Rect} targetRect A rect of the target.\n// @param {utils/dom/rect~Rect} elementRect A rect of the balloon.\n// @returns {Number}\nfunction getNorthTop( targetRect, balloonRect ) {\n\treturn targetRect.top - balloonRect.height - BalloonPanelView.arrowVerticalOffset;\n}\n\n// Returns the top coordinate for positions starting with `south*`.\n//\n// @private\n// @param {utils/dom/rect~Rect} targetRect A rect of the target.\n// @param {utils/dom/rect~Rect} elementRect A rect of the balloon.\n// @returns {Number}\nfunction getSouthTop( targetRect ) {\n\treturn targetRect.bottom + BalloonPanelView.arrowVerticalOffset;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module ui/panel/balloon/contextualballoon\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport BalloonPanelView from './balloonpanelview';\nimport View from '../../view';\nimport ButtonView from '../../button/buttonview';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport toUnit from '@ckeditor/ckeditor5-utils/src/dom/tounit';\nimport Rect from '@ckeditor/ckeditor5-utils/src/dom/rect';\nimport prevIcon from '../../../theme/icons/previous-arrow.svg';\nimport nextIcon from '../../../theme/icons/next-arrow.svg';\nimport '../../../theme/components/panel/balloonrotator.css';\nimport '../../../theme/components/panel/fakepanel.css';\nconst toPx = toUnit('px');\n/**\n * Provides the common contextual balloon for the editor.\n *\n * The role of this plugin is to unify the contextual balloons logic, simplify views management and help\n * avoid the unnecessary complexity of handling multiple {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView}\n * instances in the editor.\n *\n * This plugin allows for creating single or multiple panel stacks.\n *\n * Each stack may have multiple views, with the one on the top being visible. When the visible view is removed from the stack,\n * the previous view becomes visible.\n *\n * It might be useful to implement nested navigation in a balloon. For instance, a toolbar view may contain a link button.\n * When you click it, a link view (which lets you set the URL) is created and put on top of the toolbar view, so the link panel\n * is displayed. When you finish editing the link and close (remove) the link view, the toolbar view is visible again.\n *\n * However, there are cases when there are multiple independent balloons to be displayed, for instance, if the selection\n * is inside two inline comments at the same time. For such cases, you can create two independent panel stacks.\n * The contextual balloon plugin will create a navigation bar to let the users switch between these panel stacks using the \"Next\"\n * and \"Previous\" buttons.\n *\n * If there are no views in the current stack, the balloon panel will try to switch to the next stack. If there are no\n * panels in any stack, the balloon panel will be hidden.\n *\n * **Note**: To force the balloon panel to show only one view, even if there are other stacks, use the `singleViewMode=true` option\n * when {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon#add adding} a view to a panel.\n *\n * From the implementation point of view, the contextual ballon plugin is reusing a single\n * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView} instance to display multiple contextual balloon\n * panels in the editor. It also creates a special {@link module:ui/panel/balloon/contextualballoon~RotatorView rotator view},\n * used to manage multiple panel stacks. Rotator view is a child of the balloon panel view and the parent of the specific\n * view you want to display. If there is more than one panel stack to be displayed, the rotator view will add a\n * navigation bar. If there is only one stack, the rotator view is transparent (it does not add any UI elements).\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ContextualBalloon extends Plugin {\n    /**\n\t * @inheritDoc\n\t */\n    static get pluginName() {\n        return 'ContextualBalloon';\n    }\n    /**\n\t * @inheritDoc\n\t */\n    constructor(editor) {\n        super(editor);\n        /**\n\t\t * The {@link module:utils/dom/position~Options#limiter position limiter}\n\t\t * for the {@link #view balloon}, used when no `limiter` has been passed into {@link #add}\n\t\t * or {@link #updatePosition}.\n\t\t *\n\t\t * By default, a function that obtains the farthest DOM\n\t\t * {@link module:engine/view/rooteditableelement~RootEditableElement}\n\t\t * of the {@link module:engine/view/document~Document#selection}.\n\t\t *\n\t\t * @member {module:utils/dom/position~Options#limiter} #positionLimiter\n\t\t */\n        this.positionLimiter = () => {\n            const view = this.editor.editing.view;\n            const viewDocument = view.document;\n            const editableElement = viewDocument.selection.editableElement;\n            if (editableElement) {\n                return view.domConverter.mapViewToDom(editableElement.root);\n            }\n            return null;\n        };\n        /**\n\t\t * The currently visible view or `null` when there are no views in any stack.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {module:ui/view~View|null} #visibleView\n\t\t */\n        this.set('visibleView', null);\n        /**\n\t\t * The common balloon panel view.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/panel/balloon/balloonpanelview~BalloonPanelView} #view\n\t\t */\n        this.view = new BalloonPanelView(editor.locale);\n        editor.ui.view.body.add(this.view);\n        editor.ui.focusTracker.add(this.view.element);\n        /**\n\t\t * The map of views and their stacks.\n\t\t *\n\t\t * @private\n\t\t * @type {Map.<module:ui/view~View,Set>}\n\t\t */\n        this._viewToStack = new Map();\n        /**\n\t\t * The map of IDs and stacks.\n\t\t *\n\t\t * @private\n\t\t * @type {Map.<String,Set>}\n\t\t */\n        this._idToStack = new Map();\n        /**\n\t\t * A total number of all stacks in the balloon.\n\t\t *\n\t\t * @private\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Number} #_numberOfStacks\n\t\t */\n        this.set('_numberOfStacks', 0);\n        /**\n\t\t * A flag that controls the single view mode.\n\t\t *\n\t\t * @private\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #_singleViewMode\n\t\t */\n        this.set('_singleViewMode', false);\n        /**\n\t\t * Rotator view embedded in the contextual balloon.\n\t\t * Displays the currently visible view in the balloon and provides navigation for switching stacks.\n\t\t *\n\t\t * @private\n\t\t * @type {module:ui/panel/balloon/contextualballoon~RotatorView}\n\t\t */\n        this._rotatorView = this._createRotatorView();\n        /**\n\t\t * Displays fake panels under the balloon panel view when multiple stacks are added to the balloon.\n\t\t *\n\t\t * @private\n\t\t * @type {module:ui/view~View}\n\t\t */\n        this._fakePanelsView = this._createFakePanelsView();\n    }\n    /**\n\t * Returns `true` when the given view is in one of the stacks. Otherwise returns `false`.\n\t *\n\t * @param {module:ui/view~View} view\n\t * @returns {Boolean}\n\t */\n    hasView(view) {\n        return Array.from(this._viewToStack.keys()).includes(view);\n    }\n    /**\n\t * Adds a new view to the stack and makes it visible if the current stack is visible\n\t * or it is the first view in the balloon.\n\t *\n\t * @param {Object} data The configuration of the view.\n\t * @param {String} [data.stackId='main'] The ID of the stack that the view is added to.\n\t * @param {module:ui/view~View} [data.view] The content of the balloon.\n\t * @param {module:utils/dom/position~Options} [data.position] Positioning options.\n\t * @param {String} [data.balloonClassName] An additional CSS class added to the {@link #view balloon} when visible.\n\t * @param {Boolean} [data.withArrow=true] Whether the {@link #view balloon} should be rendered with an arrow.\n\t * @param {Boolean} [data.singleViewMode=false] Whether the view should be the only visible view even if other stacks were added.\n\t */\n    add(data) {\n        if (this.hasView(data.view)) {\n            /**\n\t\t\t * Trying to add configuration of the same view more than once.\n\t\t\t *\n\t\t\t * @error contextualballoon-add-view-exist\n\t\t\t */\n            throw new CKEditorError('contextualballoon-add-view-exist: Cannot add configuration of the same view twice.', [\n                this,\n                data\n            ]);\n        }\n        const stackId = data.stackId || 'main';\n        // If new stack is added, creates it and show view from this stack.\n        if (!this._idToStack.has(stackId)) {\n            this._idToStack.set(stackId, new Map([[\n                    data.view,\n                    data\n                ]]));\n            this._viewToStack.set(data.view, this._idToStack.get(stackId));\n            this._numberOfStacks = this._idToStack.size;\n            if (!this._visibleStack || data.singleViewMode) {\n                this.showStack(stackId);\n            }\n            return;\n        }\n        const stack = this._idToStack.get(stackId);\n        if (data.singleViewMode) {\n            this.showStack(stackId);\n        }\n        // Add new view to the stack.\n        stack.set(data.view, data);\n        this._viewToStack.set(data.view, stack);\n        // And display it if is added to the currently visible stack.\n        if (stack === this._visibleStack) {\n            this._showView(data);\n        }\n    }\n    /**\n\t * Removes the given view from the stack. If the removed view was visible,\n\t * the view preceding it in the stack will become visible instead.\n\t * When there is no view in the stack, the next stack will be displayed.\n\t * When there are no more stacks, the balloon will hide.\n\t *\n\t * @param {module:ui/view~View} view A view to be removed from the balloon.\n\t */\n    remove(view) {\n        if (!this.hasView(view)) {\n            /**\n\t\t\t * Trying to remove the configuration of the view not defined in the stack.\n\t\t\t *\n\t\t\t * @error contextualballoon-remove-view-not-exist\n\t\t\t */\n            throw new CKEditorError('contextualballoon-remove-view-not-exist: Cannot remove the configuration of a non-existent view.', [\n                this,\n                view\n            ]);\n        }\n        const stack = this._viewToStack.get(view);\n        if (this._singleViewMode && this.visibleView === view) {\n            this._singleViewMode = false;\n        }\n        // When visible view will be removed we need to show a preceding view or next stack\n        // if a view is the only view in the stack.\n        if (this.visibleView === view) {\n            if (stack.size === 1) {\n                if (this._idToStack.size > 1) {\n                    this._showNextStack();\n                } else {\n                    this.view.hide();\n                    this.visibleView = null;\n                    this._rotatorView.hideView();\n                }\n            } else {\n                this._showView(Array.from(stack.values())[stack.size - 2]);\n            }\n        }\n        if (stack.size === 1) {\n            this._idToStack.delete(this._getStackId(stack));\n            this._numberOfStacks = this._idToStack.size;\n        } else {\n            stack.delete(view);\n        }\n        this._viewToStack.delete(view);\n    }\n    /**\n\t * Updates the position of the balloon using the position data of the first visible view in the stack.\n\t * When new position data is given, the position data of the currently visible view will be updated.\n\t *\n\t * @param {module:utils/dom/position~Options} [position] position options.\n\t */\n    updatePosition(position) {\n        if (position) {\n            this._visibleStack.get(this.visibleView).position = position;\n        }\n        this.view.pin(this._getBalloonPosition());\n        this._fakePanelsView.updatePosition();\n    }\n    /**\n\t * Shows the last view from the stack of a given ID.\n\t *\n\t * @param {String} id\n\t */\n    showStack(id) {\n        this.visibleStack = id;\n        const stack = this._idToStack.get(id);\n        if (!stack) {\n            /**\n\t\t\t * Trying to show a stack that does not exist.\n\t\t\t *\n\t\t\t * @error contextualballoon-showstack-stack-not-exist\n\t\t\t */\n            throw new CKEditorError('contextualballoon-showstack-stack-not-exist: Cannot show a stack that does not exist.', this);\n        }\n        if (this._visibleStack === stack) {\n            return;\n        }\n        this._showView(Array.from(stack.values()).pop());\n    }\n    /**\n\t * Returns the stack of the currently visible view.\n\t *\n\t * @private\n\t * @type {Set}\n\t */\n    get _visibleStack() {\n        return this._viewToStack.get(this.visibleView);\n    }\n    /**\n\t * Returns the ID of the given stack.\n\t *\n\t * @private\n\t * @param {Set} stack\n\t * @returns {String}\n\t */\n    _getStackId(stack) {\n        const entry = Array.from(this._idToStack.entries()).find(entry => entry[1] === stack);\n        return entry[0];\n    }\n    /**\n\t * Shows the last view from the next stack.\n\t *\n\t * @private\n\t */\n    _showNextStack() {\n        const stacks = Array.from(this._idToStack.values());\n        let nextIndex = stacks.indexOf(this._visibleStack) + 1;\n        if (!stacks[nextIndex]) {\n            nextIndex = 0;\n        }\n        this.showStack(this._getStackId(stacks[nextIndex]));\n    }\n    /**\n\t * Shows the last view from the previous stack.\n\t *\n\t * @private\n\t */\n    _showPrevStack() {\n        const stacks = Array.from(this._idToStack.values());\n        let nextIndex = stacks.indexOf(this._visibleStack) - 1;\n        if (!stacks[nextIndex]) {\n            nextIndex = stacks.length - 1;\n        }\n        this.showStack(this._getStackId(stacks[nextIndex]));\n    }\n    /**\n\t * Creates a rotator view.\n\t *\n\t * @private\n\t * @returns {module:ui/panel/balloon/contextualballoon~RotatorView}\n\t */\n    _createRotatorView() {\n        const view = new RotatorView(this.editor.locale);\n        const t = this.editor.locale.t;\n        this.view.content.add(view);\n        // Hide navigation when there is only a one stack & not in single view mode.\n        view.bind('isNavigationVisible').to(this, '_numberOfStacks', this, '_singleViewMode', (value, isSingleViewMode) => {\n            return !isSingleViewMode && value > 1;\n        });\n        // Update balloon position after toggling navigation.\n        view.on('change:isNavigationVisible', () => this.updatePosition(), { priority: 'low' });\n        // Update stacks counter value.\n        view.bind('counter').to(this, 'visibleView', this, '_numberOfStacks', (visibleView, numberOfStacks) => {\n            if (numberOfStacks < 2) {\n                return '';\n            }\n            const current = Array.from(this._idToStack.values()).indexOf(this._visibleStack) + 1;\n            return t('bt', [\n                current,\n                numberOfStacks\n            ]);\n        });\n        view.buttonNextView.on('execute', () => {\n            // When current view has a focus then move focus to the editable before removing it,\n            // otherwise editor will lost focus.\n            if (view.focusTracker.isFocused) {\n                this.editor.editing.view.focus();\n            }\n            this._showNextStack();\n        });\n        view.buttonPrevView.on('execute', () => {\n            // When current view has a focus then move focus to the editable before removing it,\n            // otherwise editor will lost focus.\n            if (view.focusTracker.isFocused) {\n                this.editor.editing.view.focus();\n            }\n            this._showPrevStack();\n        });\n        return view;\n    }\n    /**\n\t * @returns {module:ui/view~View}\n\t */\n    _createFakePanelsView() {\n        const view = new FakePanelsView(this.editor.locale, this.view);\n        view.bind('numberOfPanels').to(this, '_numberOfStacks', this, '_singleViewMode', (number, isSingleViewMode) => {\n            const showPanels = !isSingleViewMode && number >= 2;\n            return showPanels ? Math.min(number - 1, 2) : 0;\n        });\n        view.listenTo(this.view, 'change:top', () => view.updatePosition());\n        view.listenTo(this.view, 'change:left', () => view.updatePosition());\n        this.editor.ui.view.body.add(view);\n        return view;\n    }\n    /**\n\t * Sets the view as the content of the balloon and attaches the balloon using position\n\t * options of the first view.\n\t *\n\t * @private\n\t * @param {Object} data Configuration.\n\t * @param {module:ui/view~View} [data.view] The view to show in the balloon.\n\t * @param {String} [data.balloonClassName=''] Additional class name which will be added to the {@link #view balloon}.\n\t * @param {Boolean} [data.withArrow=true] Whether the {@link #view balloon} should be rendered with an arrow.\n\t */\n    _showView({view, balloonClassName = '', withArrow = true, singleViewMode = false}) {\n        this.view.class = balloonClassName;\n        this.view.withArrow = withArrow;\n        this._rotatorView.showView(view);\n        this.visibleView = view;\n        this.view.pin(this._getBalloonPosition());\n        this._fakePanelsView.updatePosition();\n        if (singleViewMode) {\n            this._singleViewMode = true;\n        }\n    }\n    /**\n\t * Returns position options of the last view in the stack.\n\t * This keeps the balloon in the same position when the view is changed.\n\t *\n\t * @private\n\t * @returns {module:utils/dom/position~Options}\n\t */\n    _getBalloonPosition() {\n        let position = Array.from(this._visibleStack.values()).pop().position;\n        // Use the default limiter if none has been specified.\n        if (position && !position.limiter) {\n            // Don't modify the original options object.\n            position = Object.assign({}, position, { limiter: this.positionLimiter });\n        }\n        return position;\n    }\n}\n/**\n * Rotator view is a helper class for the {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon ContextualBalloon}.\n * It is used for displaying the last view from the current stack and providing navigation buttons for switching stacks.\n * See the {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon ContextualBalloon} documentation to learn more.\n *\n * @extends module:ui/view~View\n */\nclass RotatorView extends View {\n    /**\n\t * @inheritDoc\n\t */\n    constructor(locale) {\n        super(locale);\n        const t = locale.t;\n        const bind = this.bindTemplate;\n        /**\n\t\t * Defines whether navigation is visible or not.\n\t\t *\n\t\t * @member {Boolean} #isNavigationVisible\n\t\t */\n        this.set('isNavigationVisible', true);\n        /**\n\t\t * Used for checking if a view is focused or not.\n\t\t *\n\t\t * @type {module:utils/focustracker~FocusTracker}\n\t\t */\n        this.focusTracker = new FocusTracker();\n        /**\n\t\t * Navigation button for switching the stack to the previous one.\n\t\t *\n\t\t * @type {module:ui/button/buttonview~ButtonView}\n\t\t */\n        this.buttonPrevView = this._createButtonView(t('bu'), prevIcon);\n        /**\n\t\t * Navigation button for switching the stack to the next one.\n\t\t *\n\t\t * @type {module:ui/button/buttonview~ButtonView}\n\t\t */\n        this.buttonNextView = this._createButtonView(t('bv'), nextIcon);\n        /**\n\t\t * A collection of the child views that creates the rotator content.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:ui/viewcollection~ViewCollection}\n\t\t */\n        this.content = this.createCollection();\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-balloon-rotator'\n                ],\n                'z-index': '-1'\n            },\n            children: [\n                {\n                    tag: 'div',\n                    attributes: {\n                        class: [\n                            'ck-balloon-rotator__navigation',\n                            bind.to('isNavigationVisible', value => value ? '' : 'ck-hidden')\n                        ]\n                    },\n                    children: [\n                        this.buttonPrevView,\n                        {\n                            tag: 'span',\n                            attributes: { class: ['ck-balloon-rotator__counter'] },\n                            children: [{ text: bind.to('counter') }]\n                        },\n                        this.buttonNextView\n                    ]\n                },\n                {\n                    tag: 'div',\n                    attributes: { class: 'ck-balloon-rotator__content' },\n                    children: this.content\n                }\n            ]\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */\n    render() {\n        super.render();\n        this.focusTracker.add(this.element);\n    }\n    /**\n\t * Shows a given view.\n\t *\n\t * @param {module:ui/view~View} view The view to show.\n\t */\n    showView(view) {\n        this.hideView();\n        this.content.add(view);\n    }\n    /**\n\t * Hides the currently displayed view.\n\t */\n    hideView() {\n        this.content.clear();\n    }\n    /**\n\t * Creates a navigation button view.\n\t *\n\t * @private\n\t * @param {String} label The button label.\n\t * @param {String} icon The button icon.\n\t * @returns {module:ui/button/buttonview~ButtonView}\n\t */\n    _createButtonView(label, icon) {\n        const view = new ButtonView(this.locale);\n        view.set({\n            label,\n            icon,\n            tooltip: true\n        });\n        return view;\n    }\n}\n// Displays additional layers under the balloon when multiple stacks are added to the balloon.\n//\n// @private\n// @extends module:ui/view~View\nclass FakePanelsView extends View {\n    // @inheritDoc\n    constructor(locale, balloonPanelView) {\n        super(locale);\n        const bind = this.bindTemplate;\n        // Fake panels top offset.\n        //\n        // @observable\n        // @member {Number} #top\n        this.set('top', 0);\n        // Fake panels left offset.\n        //\n        // @observable\n        // @member {Number} #left\n        this.set('left', 0);\n        // Fake panels height.\n        //\n        // @observable\n        // @member {Number} #height\n        this.set('height', 0);\n        // Fake panels width.\n        //\n        // @observable\n        // @member {Number} #width\n        this.set('width', 0);\n        // Number of rendered fake panels.\n        //\n        // @observable\n        // @member {Number} #numberOfPanels\n        this.set('numberOfPanels', 0);\n        // Collection of the child views which creates fake panel content.\n        //\n        // @readonly\n        // @type {module:ui/viewcollection~ViewCollection}\n        this.content = this.createCollection();\n        // Context.\n        //\n        // @private\n        // @type {module:ui/panel/balloon/balloonpanelview~BalloonPanelView}\n        this._balloonPanelView = balloonPanelView;\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck-fake-panel',\n                    bind.to('numberOfPanels', number => number ? '' : 'ck-hidden')\n                ],\n                style: {\n                    top: bind.to('top', toPx),\n                    left: bind.to('left', toPx),\n                    width: bind.to('width', toPx),\n                    height: bind.to('height', toPx)\n                }\n            },\n            children: this.content\n        });\n        this.on('change:numberOfPanels', (evt, name, next, prev) => {\n            if (next > prev) {\n                this._addPanels(next - prev);\n            } else {\n                this._removePanels(prev - next);\n            }\n            this.updatePosition();\n        });\n    }\n    // @private\n    // @param {Number} number\n    _addPanels(number) {\n        while (number--) {\n            const view = new View();\n            view.setTemplate({ tag: 'div' });\n            this.content.add(view);\n            this.registerChild(view);\n        }\n    }\n    // @private\n    // @param {Number} number\n    _removePanels(number) {\n        while (number--) {\n            const view = this.content.last;\n            this.content.remove(view);\n            this.deregisterChild(view);\n            view.destroy();\n        }\n    }\n    // Updates coordinates of fake panels.\n    updatePosition() {\n        if (this.numberOfPanels) {\n            const {top, left} = this._balloonPanelView;\n            const {width, height} = new Rect(this._balloonPanelView.element);\n            Object.assign(this, {\n                top,\n                left,\n                width,\n                height\n            });\n        }\n    }\n}","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M11.463 5.187a.888.888 0 111.254 1.255L9.16 10l3.557 3.557a.888.888 0 11-1.254 1.255L7.26 10.61a.888.888 0 01.16-1.382l4.043-4.042z\\\"/></svg>\"","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M8.537 14.813a.888.888 0 11-1.254-1.255L10.84 10 7.283 6.442a.888.888 0 111.254-1.255L12.74 9.39a.888.888 0 01-.16 1.382l-4.043 4.042z\\\"/></svg>\"","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/image/ui/utils\n */\n\nimport BalloonPanelView from '@ckeditor/ckeditor5-ui/src/panel/balloon/balloonpanelview';\nimport { getSelectedImageWidget } from '../utils';\n\n/**\n * A helper utility that positions the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon} instance\n * with respect to the image in the editor content, if one is selected.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n */\nexport function repositionContextualBalloon( editor ) {\n\tconst balloon = editor.plugins.get( 'ContextualBalloon' );\n\n\tif ( getSelectedImageWidget( editor.editing.view.document.selection ) ) {\n\t\tconst position = getBalloonPositionData( editor );\n\n\t\tballoon.updatePosition( position );\n\t}\n}\n\n/**\n * Returns the positioning options that control the geometry of the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon} with respect\n * to the selected element in the editor content.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n * @returns {module:utils/dom/position~Options}\n */\nexport function getBalloonPositionData( editor ) {\n\tconst editingView = editor.editing.view;\n\tconst defaultPositions = BalloonPanelView.defaultPositions;\n\n\treturn {\n\t\ttarget: editingView.domConverter.viewToDom( editingView.document.selection.getSelectedElement() ),\n\t\tpositions: [\n\t\t\tdefaultPositions.northArrowSouth,\n\t\t\tdefaultPositions.northArrowSouthWest,\n\t\t\tdefaultPositions.northArrowSouthEast,\n\t\t\tdefaultPositions.southArrowNorth,\n\t\t\tdefaultPositions.southArrowNorthWest,\n\t\t\tdefaultPositions.southArrowNorthEast\n\t\t]\n\t};\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module image/imagetextalternative/imagetextalternativeui\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport clickOutsideHandler from '@ckeditor/ckeditor5-ui/src/bindings/clickoutsidehandler';\nimport TextAlternativeFormView from './ui/textalternativeformview';\nimport ContextualBalloon from '@ckeditor/ckeditor5-ui/src/panel/balloon/contextualballoon';\nimport textAlternativeIcon from '@ckeditor/ckeditor5-core/theme/icons/low-vision.svg';\nimport {\n    repositionContextualBalloon,\n    getBalloonPositionData\n} from '../image/ui/utils';\nimport { getSelectedImageWidget } from '../image/utils';\n/**\n * The image text alternative UI plugin.\n *\n * The plugin uses the {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageTextAlternativeUI extends Plugin {\n    /**\n\t * @inheritDoc\n\t */\n    static get requires() {\n        return [ContextualBalloon];\n    }\n    /**\n\t * @inheritDoc\n\t */\n    static get pluginName() {\n        return 'ImageTextAlternativeUI';\n    }\n    /**\n\t * @inheritDoc\n\t */\n    init() {\n        this._createButton();\n        this._createForm();\n    }\n    /**\n\t * @inheritDoc\n\t */\n    destroy() {\n        super.destroy();\n        // Destroy created UI components as they are not automatically destroyed (see ckeditor5#1341).\n        this._form.destroy();\n    }\n    /**\n\t * Creates a button showing the balloon panel for changing the image text alternative and\n\t * registers it in the editor {@link module:ui/componentfactory~ComponentFactory ComponentFactory}.\n\t *\n\t * @private\n\t */\n    _createButton() {\n        const editor = this.editor;\n        const t = editor.t;\n        editor.ui.componentFactory.add('imageTextAlternative', locale => {\n            const command = editor.commands.get('imageTextAlternative');\n            const view = new ButtonView(locale);\n            view.set({\n                label: t('bc'),\n                icon: textAlternativeIcon,\n                tooltip: true\n            });\n            view.bind('isEnabled').to(command, 'isEnabled');\n            this.listenTo(view, 'execute', () => {\n                this._showForm();\n            });\n            return view;\n        });\n    }\n    /**\n\t * Creates the {@link module:image/imagetextalternative/ui/textalternativeformview~TextAlternativeFormView}\n\t * form.\n\t *\n\t * @private\n\t */\n    _createForm() {\n        const editor = this.editor;\n        const view = editor.editing.view;\n        const viewDocument = view.document;\n        /**\n\t\t * The contextual balloon plugin instance.\n\t\t *\n\t\t * @private\n\t\t * @member {module:ui/panel/balloon/contextualballoon~ContextualBalloon}\n\t\t */\n        this._balloon = this.editor.plugins.get('ContextualBalloon');\n        /**\n\t\t * A form containing a textarea and buttons, used to change the `alt` text value.\n\t\t *\n\t\t * @member {module:image/imagetextalternative/ui/textalternativeformview~TextAlternativeFormView}\n\t\t */\n        this._form = new TextAlternativeFormView(editor.locale);\n        // Render the form so its #element is available for clickOutsideHandler.\n        this._form.render();\n        this.listenTo(this._form, 'submit', () => {\n            editor.execute('imageTextAlternative', { newValue: this._form.labeledInput.inputView.element.value });\n            this._hideForm(true);\n        });\n        this.listenTo(this._form, 'cancel', () => {\n            this._hideForm(true);\n        });\n        // Close the form on Esc key press.\n        this._form.keystrokes.set('Esc', (data, cancel) => {\n            this._hideForm(true);\n            cancel();\n        });\n        // Reposition the balloon or hide the form if an image widget is no longer selected.\n        this.listenTo(editor.ui, 'update', () => {\n            if (!getSelectedImageWidget(viewDocument.selection)) {\n                this._hideForm(true);\n            } else if (this._isVisible) {\n                repositionContextualBalloon(editor);\n            }\n        });\n        // Close on click outside of balloon panel element.\n        clickOutsideHandler({\n            emitter: this._form,\n            activator: () => this._isVisible,\n            contextElements: [this._balloon.view.element],\n            callback: () => this._hideForm()\n        });\n    }\n    /**\n\t * Shows the {@link #_form} in the {@link #_balloon}.\n\t *\n\t * @private\n\t */\n    _showForm() {\n        if (this._isVisible) {\n            return;\n        }\n        const editor = this.editor;\n        const command = editor.commands.get('imageTextAlternative');\n        const labeledInput = this._form.labeledInput;\n        if (!this._isInBalloon) {\n            this._balloon.add({\n                view: this._form,\n                position: getBalloonPositionData(editor)\n            });\n        }\n        // Make sure that each time the panel shows up, the field remains in sync with the value of\n        // the command. If the user typed in the input, then canceled the balloon (`labeledInput#value`\n        // stays unaltered) and re-opened it without changing the value of the command, they would see the\n        // old value instead of the actual value of the command.\n        // https://github.com/ckeditor/ckeditor5-image/issues/114\n        labeledInput.value = labeledInput.inputView.element.value = command.value || '';\n        this._form.labeledInput.select();\n    }\n    /**\n\t * Removes the {@link #_form} from the {@link #_balloon}.\n\t *\n\t * @param {Boolean} [focusEditable=false] Controls whether the editing view is focused afterwards.\n\t * @private\n\t */\n    _hideForm(focusEditable) {\n        if (!this._isInBalloon) {\n            return;\n        }\n        // Blur the input element before removing it from DOM to prevent issues in some browsers.\n        // See https://github.com/ckeditor/ckeditor5/issues/1501.\n        if (this._form.focusTracker.isFocused) {\n            this._form.saveButtonView.focus();\n        }\n        this._balloon.remove(this._form);\n        if (focusEditable) {\n            this.editor.editing.view.focus();\n        }\n    }\n    /**\n\t * Returns `true` when the {@link #_form} is the visible view in the {@link #_balloon}.\n\t *\n\t * @private\n\t * @type {Boolean}\n\t */\n    get _isVisible() {\n        return this._balloon.visibleView === this._form;\n    }\n    /**\n\t * Returns `true` when the {@link #_form} is in the {@link #_balloon}.\n\t *\n\t * @private\n\t * @type {Boolean}\n\t */\n    get _isInBalloon() {\n        return this._balloon.hasView(this._form);\n    }\n}","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M5.085 6.22L2.943 4.078a.75.75 0 111.06-1.06l2.592 2.59A11.094 11.094 0 0110 5.068c4.738 0 8.578 3.101 8.578 5.083 0 1.197-1.401 2.803-3.555 3.887l1.714 1.713a.75.75 0 01-.09 1.138.488.488 0 01-.15.084.75.75 0 01-.821-.16L6.17 7.304c-.258.11-.51.233-.757.365l6.239 6.24-.006.005.78.78c-.388.094-.78.166-1.174.215l-1.11-1.11h.011L4.55 8.197a7.2 7.2 0 00-.665.514l-.112.098 4.897 4.897-.005.006 1.276 1.276a10.164 10.164 0 01-1.477-.117l-.479-.479-.009.009-4.863-4.863-.022.031a2.563 2.563 0 00-.124.2c-.043.077-.08.158-.108.241a.534.534 0 00-.028.133.29.29 0 00.008.072.927.927 0 00.082.226c.067.133.145.26.234.379l3.242 3.365.025.01.59.623c-3.265-.918-5.59-3.155-5.59-4.668 0-1.194 1.448-2.838 3.663-3.93zm7.07.531a4.632 4.632 0 011.108 5.992l.345.344.046-.018a9.313 9.313 0 002-1.112c.256-.187.5-.392.727-.613.137-.134.27-.277.392-.431.072-.091.141-.185.203-.286.057-.093.107-.19.148-.292a.72.72 0 00.036-.12.29.29 0 00.008-.072.492.492 0 00-.028-.133.999.999 0 00-.036-.096 2.165 2.165 0 00-.071-.145 2.917 2.917 0 00-.125-.2 3.592 3.592 0 00-.263-.335 5.444 5.444 0 00-.53-.523 7.955 7.955 0 00-1.054-.768 9.766 9.766 0 00-1.879-.891c-.337-.118-.68-.219-1.027-.301zm-2.85.21l-.069.002a.508.508 0 00-.254.097.496.496 0 00-.104.679.498.498 0 00.326.199l.045.005c.091.003.181.003.272.012a2.45 2.45 0 012.017 1.513c.024.061.043.125.069.185a.494.494 0 00.45.287h.008a.496.496 0 00.35-.158.482.482 0 00.13-.335.638.638 0 00-.048-.219 3.379 3.379 0 00-.36-.723 3.438 3.438 0 00-2.791-1.543l-.028-.001h-.013z\\\"/></svg>\"","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imagetextalternative\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ImageTextAlternativeEditing from './imagetextalternative/imagetextalternativeediting';\nimport ImageTextAlternativeUI from './imagetextalternative/imagetextalternativeui';\n\n/**\n * The image text alternative plugin.\n *\n * For a detailed overview, check the {@glink features/image#image-styles image styles} documentation.\n *\n * This is a \"glue\" plugin which loads the\n *  {@link module:image/imagetextalternative/imagetextalternativeediting~ImageTextAlternativeEditing}\n * and {@link module:image/imagetextalternative/imagetextalternativeui~ImageTextAlternativeUI} plugins.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageTextAlternative extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ImageTextAlternativeEditing, ImageTextAlternativeUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ImageTextAlternative';\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/image\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ImageEditing from '../src/image/imageediting';\nimport Widget from '@ckeditor/ckeditor5-widget/src/widget';\nimport ImageTextAlternative from './imagetextalternative';\n\nimport '../theme/image.css';\n\n/**\n * The image plugin.\n *\n * For a detailed overview, check the {@glink features/image image feature} documentation.\n *\n * This is a \"glue\" plugin which loads the following plugins:\n *\n * * {@link module:image/image/imageediting~ImageEditing},\n * * {@link module:image/imagetextalternative~ImageTextAlternative}.\n *\n * Usually, it is used in conjuction with other plugins from this package. See the {@glink api/image package page}\n * for more information.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Image extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ImageEditing, Widget, ImageTextAlternative ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Image';\n\t}\n}\n\n/**\n * The configuration of the image features. Used by the image features in the `@ckeditor/ckeditor5-image` package.\n *\n * Read more in {@link module:image/image~ImageConfig}.\n *\n * @member {module:image/image~ImageConfig} module:core/editor/editorconfig~EditorConfig#image\n */\n\n/**\n * The configuration of the image features. Used by the image features in the `@ckeditor/ckeditor5-image` package.\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n * \t\t\t\timage: ... // Image feature options.\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface ImageConfig\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module upload/ui/filedialogbuttonview\n */\n\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport View from '@ckeditor/ckeditor5-ui/src/view';\n\n/**\n * The file dialog button view.\n *\n * This component provides a button that opens the native file selection dialog.\n * It can be used to implement the UI of a file upload feature.\n *\n *\t\tconst view = new FileDialogButtonView( locale );\n *\n *\t\tview.set( {\n *\t\t\tacceptedType: 'image/*',\n *\t\t\tallowMultipleFiles: true\n *\t\t} );\n *\n *\t\tview.buttonView.set( {\n *\t\t\tlabel: t( 'Insert image' ),\n *\t\t\ticon: imageIcon,\n *\t\t\ttooltip: true\n *\t\t} );\n *\n *\t\tview.on( 'done', ( evt, files ) => {\n *\t\t\tfor ( const file of Array.from( files ) ) {\n *\t\t\t\tconsole.log( 'Selected file', file );\n *\t\t\t}\n *\t\t} );\n *\n * @extends module:ui/view~View\n */\nexport default class FileDialogButtonView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * The button view of the component.\n\t\t *\n\t\t * @member {module:ui/button/buttonview~ButtonView}\n\t\t */\n\t\tthis.buttonView = new ButtonView( locale );\n\n\t\t/**\n\t\t * A hidden `<input>` view used to execute file dialog.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:upload/ui/filedialogbuttonview~FileInputView}\n\t\t */\n\t\tthis._fileInputView = new FileInputView( locale );\n\n\t\t/**\n\t\t * Accepted file types. Can be provided in form of file extensions, media type or one of:\n\t\t * * `audio/*`,\n\t\t * * `video/*`,\n\t\t * * `image/*`.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #acceptedType\n\t\t */\n\t\tthis._fileInputView.bind( 'acceptedType' ).to( this );\n\n\t\t/**\n\t\t * Indicates if multiple files can be selected. Defaults to `true`.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #allowMultipleFiles\n\t\t */\n\t\tthis._fileInputView.bind( 'allowMultipleFiles' ).to( this );\n\n\t\t/**\n\t\t * Fired when file dialog is closed with file selected.\n\t\t *\n\t\t *\t\tview.on( 'done', ( evt, files ) => {\n\t\t *\t\t\tfor ( const file of files ) {\n\t\t *\t\t\t\tconsole.log( 'Selected file', file );\n\t\t *\t\t\t}\n\t\t *\t\t}\n\t\t *\n\t\t * @event done\n\t\t * @param {Array.<File>} files Array of selected files.\n\t\t */\n\t\tthis._fileInputView.delegate( 'done' ).to( this );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'span',\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-file-dialog-button',\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\tthis.buttonView,\n\t\t\t\tthis._fileInputView\n\t\t\t]\n\t\t} );\n\n\t\tthis.buttonView.on( 'execute', () => {\n\t\t\tthis._fileInputView.open();\n\t\t} );\n\t}\n\n\t/**\n\t * Focuses the {@link #buttonView}.\n\t */\n\tfocus() {\n\t\tthis.buttonView.focus();\n\t}\n}\n\n/**\n * The hidden file input view class.\n *\n * @private\n * @extends module:ui/view~View\n */\nclass FileInputView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * Accepted file types. Can be provided in form of file extensions, media type or one of:\n\t\t * * `audio/*`,\n\t\t * * `video/*`,\n\t\t * * `image/*`.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #acceptedType\n\t\t */\n\t\tthis.set( 'acceptedType' );\n\n\t\t/**\n\t\t * Indicates if multiple files can be selected. Defaults to `false`.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #allowMultipleFiles\n\t\t */\n\t\tthis.set( 'allowMultipleFiles', false );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'input',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-hidden'\n\t\t\t\t],\n\t\t\t\ttype: 'file',\n\t\t\t\ttabindex: '-1',\n\t\t\t\taccept: bind.to( 'acceptedType' ),\n\t\t\t\tmultiple: bind.to( 'allowMultipleFiles' )\n\t\t\t},\n\n\t\t\ton: {\n\t\t\t\t// Removing from code coverage since we cannot programmatically set input element files.\n\t\t\t\tchange: bind.to( /* istanbul ignore next */ () => {\n\t\t\t\t\tif ( this.element && this.element.files && this.element.files.length ) {\n\t\t\t\t\t\tthis.fire( 'done', this.element.files );\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.element.value = '';\n\t\t\t\t} )\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Opens file dialog.\n\t */\n\topen() {\n\t\tthis.element.click();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imageupload/utils\n */\n\n/* global fetch, File */\n\n/**\n * Creates a regular expression used to test for image files.\n *\n *\t\tconst imageType = createImageTypeRegExp( [ 'png', 'jpeg', 'svg+xml', 'vnd.microsoft.icon' ] );\n *\n *\t\tconsole.log( 'is supported image', imageType.test( file.type ) );\n *\n * @param {Array.<String>} types\n * @returns {RegExp}\n */\nexport function createImageTypeRegExp( types ) {\n\t// Sanitize the MIME type name which may include: \"+\", \"-\" or \".\".\n\tconst regExpSafeNames = types.map( type => type.replace( '+', '\\\\+' ) );\n\n\treturn new RegExp( `^image\\\\/(${ regExpSafeNames.join( '|' ) })$` );\n}\n\n/**\n * Creates a promise that fetches the image local source (Base64 or blob) and resolves with a `File` object.\n *\n * @param {module:engine/view/element~Element} image Image whose source to fetch.\n * @returns {Promise.<File>} A promise which resolves when an image source is fetched and converted to a `File` instance.\n * It resolves with a `File` object. If there were any errors during file processing, the promise will be rejected.\n */\nexport function fetchLocalImage( image ) {\n\treturn new Promise( ( resolve, reject ) => {\n\t\tconst imageSrc = image.getAttribute( 'src' );\n\n\t\t// Fetch works asynchronously and so does not block browser UI when processing data.\n\t\tfetch( imageSrc )\n\t\t\t.then( resource => resource.blob() )\n\t\t\t.then( blob => {\n\t\t\t\tconst mimeType = getImageMimeType( blob, imageSrc );\n\t\t\t\tconst ext = mimeType.replace( 'image/', '' );\n\t\t\t\tconst filename = `image.${ ext }`;\n\t\t\t\tconst file = createFileFromBlob( blob, filename, mimeType );\n\n\t\t\t\tfile ? resolve( file ) : reject();\n\t\t\t} )\n\t\t\t.catch( reject );\n\t} );\n}\n\n/**\n * Checks whether a given node is an image element with a local source (Base64 or blob).\n *\n * @param {module:engine/view/node~Node} node The node to check.\n * @returns {Boolean}\n */\nexport function isLocalImage( node ) {\n\tif ( !node.is( 'element', 'img' ) || !node.getAttribute( 'src' ) ) {\n\t\treturn false;\n\t}\n\n\treturn node.getAttribute( 'src' ).match( /^data:image\\/\\w+;base64,/g ) ||\n\t\tnode.getAttribute( 'src' ).match( /^blob:/g );\n}\n\n// Extracts an image type based on its blob representation or its source.\n//\n// @param {String} src Image `src` attribute value.\n// @param {Blob} blob Image blob representation.\n// @returns {String}\nfunction getImageMimeType( blob, src ) {\n\tif ( blob.type ) {\n\t\treturn blob.type;\n\t} else if ( src.match( /data:(image\\/\\w+);base64/ ) ) {\n\t\treturn src.match( /data:(image\\/\\w+);base64/ )[ 1 ].toLowerCase();\n\t} else {\n\t\t// Fallback to 'jpeg' as common extension.\n\t\treturn 'image/jpeg';\n\t}\n}\n\n// Creates a `File` instance from the given `Blob` instance using the specified file name.\n//\n// @param {Blob} blob The `Blob` instance from which the file will be created.\n// @param {String} filename The file name used during the file creation.\n// @param {String} mimeType The file MIME type.\n// @returns {File|null} The `File` instance created from the given blob or `null` if `File API` is not available.\nfunction createFileFromBlob( blob, filename, mimeType ) {\n\ttry {\n\t\treturn new File( [ blob ], filename, { type: mimeType } );\n\t} catch ( err ) {\n\t\t// Edge does not support `File` constructor ATM, see https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/9551546/.\n\t\t// However, the `File` function is present (so cannot be checked with `!window.File` or `typeof File === 'function'`), but\n\t\t// calling it with `new File( ... )` throws an error. This try-catch prevents that. Also when the function will\n\t\t// be implemented correctly in Edge the code will start working without any changes (see #247).\n\t\treturn null;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module image/imageupload/imageuploadui\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport FileDialogButtonView from '@ckeditor/ckeditor5-upload/src/ui/filedialogbuttonview';\nimport imageIcon from '@ckeditor/ckeditor5-core/theme/icons/image.svg';\nimport { createImageTypeRegExp } from './utils';\n/**\n * The image upload button plugin.\n *\n * For a detailed overview, check the {@glink features/image-upload/image-upload Image upload feature} documentation.\n *\n * Adds the `'imageUpload'` button to the {@link module:ui/componentfactory~ComponentFactory UI component factory}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageUploadUI extends Plugin {\n    /**\n\t * @inheritDoc\n\t */\n    init() {\n        const editor = this.editor;\n        const t = editor.t;\n        // Setup `imageUpload` button.\n        editor.ui.componentFactory.add('imageUpload', locale => {\n            const view = new FileDialogButtonView(locale);\n            const command = editor.commands.get('imageUpload');\n            const imageTypes = editor.config.get('image.upload.types');\n            const imageTypesRegExp = createImageTypeRegExp(imageTypes);\n            view.set({\n                acceptedType: imageTypes.map(type => `image/${ type }`).join(','),\n                allowMultipleFiles: true\n            });\n            view.buttonView.set({\n                label: t('q'),\n                icon: imageIcon,\n                tooltip: true\n            });\n            view.buttonView.bind('isEnabled').to(command);\n            view.on('done', (evt, files) => {\n                const imagesToUpload = Array.from(files).filter(file => imageTypesRegExp.test(file.type));\n                if (imagesToUpload.length) {\n                    editor.execute('imageUpload', { file: imagesToUpload });\n                }\n            });\n            return view;\n        });\n    }\n}","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M6.91 10.54c.26-.23.64-.21.88.03l3.36 3.14 2.23-2.06a.64.64 0 01.87 0l2.52 2.97V4.5H3.2v10.12l3.71-4.08zm10.27-7.51c.6 0 1.09.47 1.09 1.05v11.84c0 .59-.49 1.06-1.09 1.06H2.79c-.6 0-1.09-.47-1.09-1.06V4.08c0-.58.49-1.05 1.1-1.05h14.38zm-5.22 5.56a1.96 1.96 0 113.4-1.96 1.96 1.96 0 01-3.4 1.96z\\\"/></svg>\"","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imageupload/imageuploadprogress\n */\n\n/* globals setTimeout */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport FileRepository from '@ckeditor/ckeditor5-upload/src/filerepository';\nimport uploadingPlaceholder from '../../theme/icons/image_placeholder.svg';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n\nimport '../../theme/imageuploadprogress.css';\nimport '../../theme/imageuploadicon.css';\nimport '../../theme/imageuploadloader.css';\n\n/**\n * The image upload progress plugin.\n * It shows a placeholder when the image is read from the disk and a progress bar while the image is uploading.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageUploadProgress extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The image placeholder that is displayed before real image data can be accessed.\n\t\t *\n\t\t * @protected\n\t\t * @member {String} #placeholder\n\t\t */\n\t\tthis.placeholder = 'data:image/svg+xml;utf8,' + encodeURIComponent( uploadingPlaceholder );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\t// Upload status change - update image's view according to that status.\n\t\teditor.editing.downcastDispatcher.on( 'attribute:uploadStatus:image', ( ...args ) => this.uploadStatusChange( ...args ) );\n\t}\n\n\t/**\n\t * This method is called each time the image `uploadStatus` attribute is changed.\n\t *\n\t * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n\t * @param {Object} data Additional information about the change.\n\t * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi\n\t */\n\tuploadStatusChange( evt, data, conversionApi ) {\n\t\tconst editor = this.editor;\n\t\tconst modelImage = data.item;\n\t\tconst uploadId = modelImage.getAttribute( 'uploadId' );\n\n\t\tif ( !conversionApi.consumable.consume( data.item, evt.name ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst fileRepository = editor.plugins.get( FileRepository );\n\t\tconst status = uploadId ? data.attributeNewValue : null;\n\t\tconst placeholder = this.placeholder;\n\t\tconst viewFigure = editor.editing.mapper.toViewElement( modelImage );\n\t\tconst viewWriter = conversionApi.writer;\n\n\t\tif ( status == 'reading' ) {\n\t\t\t// Start \"appearing\" effect and show placeholder with infinite progress bar on the top\n\t\t\t// while image is read from disk.\n\t\t\t_startAppearEffect( viewFigure, viewWriter );\n\t\t\t_showPlaceholder( placeholder, viewFigure, viewWriter );\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Show progress bar on the top of the image when image is uploading.\n\t\tif ( status == 'uploading' ) {\n\t\t\tconst loader = fileRepository.loaders.get( uploadId );\n\n\t\t\t// Start appear effect if needed - see https://github.com/ckeditor/ckeditor5-image/issues/191.\n\t\t\t_startAppearEffect( viewFigure, viewWriter );\n\n\t\t\tif ( !loader ) {\n\t\t\t\t// There is no loader associated with uploadId - this means that image came from external changes.\n\t\t\t\t// In such cases we still want to show the placeholder until image is fully uploaded.\n\t\t\t\t// Show placeholder if needed - see https://github.com/ckeditor/ckeditor5-image/issues/191.\n\t\t\t\t_showPlaceholder( placeholder, viewFigure, viewWriter );\n\t\t\t} else {\n\t\t\t\t// Hide placeholder and initialize progress bar showing upload progress.\n\t\t\t\t_hidePlaceholder( viewFigure, viewWriter );\n\t\t\t\t_showProgressBar( viewFigure, viewWriter, loader, editor.editing.view );\n\t\t\t\t_displayLocalImage( viewFigure, viewWriter, loader );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Because in Edge there is no way to show fancy animation of completeIcon we need to skip it.\n\t\tif ( status == 'complete' && fileRepository.loaders.get( uploadId ) && !env.isEdge ) {\n\t\t\t_showCompleteIcon( viewFigure, viewWriter, editor.editing.view );\n\t\t}\n\n\t\t// Clean up.\n\t\t_hideProgressBar( viewFigure, viewWriter );\n\t\t_hidePlaceholder( viewFigure, viewWriter );\n\t\t_stopAppearEffect( viewFigure, viewWriter );\n\t}\n}\n\n// Adds ck-appear class to the image figure if one is not already applied.\n//\n// @param {module:engine/view/containerelement~ContainerElement} viewFigure\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\nfunction _startAppearEffect( viewFigure, writer ) {\n\tif ( !viewFigure.hasClass( 'ck-appear' ) ) {\n\t\twriter.addClass( 'ck-appear', viewFigure );\n\t}\n}\n\n// Removes ck-appear class to the image figure if one is not already removed.\n//\n// @param {module:engine/view/containerelement~ContainerElement} viewFigure\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\nfunction _stopAppearEffect( viewFigure, writer ) {\n\twriter.removeClass( 'ck-appear', viewFigure );\n}\n\n// Shows placeholder together with infinite progress bar on given image figure.\n//\n// @param {String} Data-uri with a svg placeholder.\n// @param {module:engine/view/containerelement~ContainerElement} viewFigure\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\nfunction _showPlaceholder( placeholder, viewFigure, writer ) {\n\tif ( !viewFigure.hasClass( 'ck-image-upload-placeholder' ) ) {\n\t\twriter.addClass( 'ck-image-upload-placeholder', viewFigure );\n\t}\n\n\tconst viewImg = viewFigure.getChild( 0 );\n\n\tif ( viewImg.getAttribute( 'src' ) !== placeholder ) {\n\t\twriter.setAttribute( 'src', placeholder, viewImg );\n\t}\n\n\tif ( !_getUIElement( viewFigure, 'placeholder' ) ) {\n\t\twriter.insert( writer.createPositionAfter( viewImg ), _createPlaceholder( writer ) );\n\t}\n}\n\n// Removes placeholder together with infinite progress bar on given image figure.\n//\n// @param {module:engine/view/containerelement~ContainerElement} viewFigure\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\nfunction _hidePlaceholder( viewFigure, writer ) {\n\tif ( viewFigure.hasClass( 'ck-image-upload-placeholder' ) ) {\n\t\twriter.removeClass( 'ck-image-upload-placeholder', viewFigure );\n\t}\n\n\t_removeUIElement( viewFigure, writer, 'placeholder' );\n}\n\n// Shows progress bar displaying upload progress.\n// Attaches it to the file loader to update when upload percentace is changed.\n//\n// @param {module:engine/view/containerelement~ContainerElement} viewFigure\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\n// @param {module:upload/filerepository~FileLoader} loader\n// @param {module:engine/view/view~View} view\nfunction _showProgressBar( viewFigure, writer, loader, view ) {\n\tconst progressBar = _createProgressBar( writer );\n\twriter.insert( writer.createPositionAt( viewFigure, 'end' ), progressBar );\n\n\t// Update progress bar width when uploadedPercent is changed.\n\tloader.on( 'change:uploadedPercent', ( evt, name, value ) => {\n\t\tview.change( writer => {\n\t\t\twriter.setStyle( 'width', value + '%', progressBar );\n\t\t} );\n\t} );\n}\n\n// Hides upload progress bar.\n//\n// @param {module:engine/view/containerelement~ContainerElement} viewFigure\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\nfunction _hideProgressBar( viewFigure, writer ) {\n\t_removeUIElement( viewFigure, writer, 'progressBar' );\n}\n\n// Shows complete icon and hides after a certain amount of time.\n//\n// @param {module:engine/view/containerelement~ContainerElement} viewFigure\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\n// @param {module:engine/view/view~View} view\nfunction _showCompleteIcon( viewFigure, writer, view ) {\n\tconst completeIcon = writer.createUIElement( 'div', { class: 'ck-image-upload-complete-icon' } );\n\n\twriter.insert( writer.createPositionAt( viewFigure, 'end' ), completeIcon );\n\n\tsetTimeout( () => {\n\t\tview.change( writer => writer.remove( writer.createRangeOn( completeIcon ) ) );\n\t}, 3000 );\n}\n\n// Create progress bar element using {@link module:engine/view/uielement~UIElement}.\n//\n// @private\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\n// @returns {module:engine/view/uielement~UIElement}\nfunction _createProgressBar( writer ) {\n\tconst progressBar = writer.createUIElement( 'div', { class: 'ck-progress-bar' } );\n\n\twriter.setCustomProperty( 'progressBar', true, progressBar );\n\n\treturn progressBar;\n}\n\n// Create placeholder element using {@link module:engine/view/uielement~UIElement}.\n//\n// @private\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\n// @returns {module:engine/view/uielement~UIElement}\nfunction _createPlaceholder( writer ) {\n\tconst placeholder = writer.createUIElement( 'div', { class: 'ck-upload-placeholder-loader' } );\n\n\twriter.setCustomProperty( 'placeholder', true, placeholder );\n\n\treturn placeholder;\n}\n\n// Returns {@link module:engine/view/uielement~UIElement} of given unique property from image figure element.\n// Returns `undefined` if element is not found.\n//\n// @private\n// @param {module:engine/view/element~Element} imageFigure\n// @param {String} uniqueProperty\n// @returns {module:engine/view/uielement~UIElement|undefined}\nfunction _getUIElement( imageFigure, uniqueProperty ) {\n\tfor ( const child of imageFigure.getChildren() ) {\n\t\tif ( child.getCustomProperty( uniqueProperty ) ) {\n\t\t\treturn child;\n\t\t}\n\t}\n}\n\n// Removes {@link module:engine/view/uielement~UIElement} of given unique property from image figure element.\n//\n// @private\n// @param {module:engine/view/element~Element} imageFigure\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\n// @param {String} uniqueProperty\nfunction _removeUIElement( viewFigure, writer, uniqueProperty ) {\n\tconst element = _getUIElement( viewFigure, uniqueProperty );\n\n\tif ( element ) {\n\t\twriter.remove( writer.createRangeOn( element ) );\n\t}\n}\n\n// Displays local data from file loader.\n//\n// @param {module:engine/view/element~Element} imageFigure\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\n// @param {module:upload/filerepository~FileLoader} loader\nfunction _displayLocalImage( viewFigure, writer, loader ) {\n\tif ( loader.data ) {\n\t\tconst viewImg = viewFigure.getChild( 0 );\n\n\t\twriter.setAttribute( 'src', loader.data, viewImg );\n\t}\n}\n","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 700 250\\\"><rect rx=\\\"4\\\"/></svg>\"","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module module:engine/view/upcastwriter\n */\n\nimport DocumentFragment from './documentfragment';\nimport Element from './element';\nimport Text from './text';\nimport { isPlainObject } from 'lodash-es';\nimport Position from './position';\nimport Range from './range';\nimport Selection from './selection';\n\n/**\n * View upcast writer. It provides a set of methods used to manipulate non-semantic view trees.\n *\n * It should be used only while working on a non-semantic view\n * (e.g. a view created from HTML string on paste).\n * To manipulate a view which was or is being downcasted from the the model use the\n * {@link module:engine/view/downcastwriter~DowncastWriter downcast writer}.\n *\n * Read more about changing the view in the {@glink framework/guides/architecture/editing-engine#changing-the-view Changing the view}\n * section of the {@glink framework/guides/architecture/editing-engine Editing engine architecture} guide.\n *\n * Unlike `DowncastWriter`, which is available in the {@link module:engine/view/view~View#change `View#change()`} block,\n * `UpcastWriter` can be created wherever you need it:\n *\n *\t\tconst writer = new UpcastWriter();\n *\t\tconst text = writer.createText( 'foo!' );\n *\n *\t\twriter.appendChild( text, someViewElement );\n */\nexport default class UpcastWriter {\n\t/**\n\t * Creates a new {@link module:engine/view/documentfragment~DocumentFragment} instance.\n\t *\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n\t * A list of nodes to be inserted into the created document fragment.\n\t * @returns {module:engine/view/documentfragment~DocumentFragment} The created document fragment.\n\t */\n\tcreateDocumentFragment( children ) {\n\t\treturn new DocumentFragment( children );\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/view/element~Element} instance.\n\t *\n\t * Attributes can be passed in various formats:\n\t *\n\t *\t\tupcastWriter.createElement( 'div', { class: 'editor', contentEditable: 'true' } ); // object\n\t *\t\tupcastWriter.createElement( 'div', [ [ 'class', 'editor' ], [ 'contentEditable', 'true' ] ] ); // map-like iterator\n\t *\t\tupcastWriter.createElement( 'div', mapOfAttributes ); // map\n\t *\n\t * @param {String} name Node name.\n\t * @param {Object|Iterable} [attrs] Collection of attributes.\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n\t * A list of nodes to be inserted into created element.\n\t * @returns {module:engine/view/element~Element} Created element.\n\t */\n\tcreateElement( name, attrs, children ) {\n\t\treturn new Element( name, attrs, children );\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/view/text~Text} instance.\n\t *\n\t * @param {String} data The text's data.\n\t * @returns {module:engine/view/text~Text} The created text node.\n\t */\n\tcreateText( data ) {\n\t\treturn new Text( data );\n\t}\n\n\t/**\n\t * Clones the provided element.\n\t *\n\t * @see module:engine/view/element~Element#_clone\n\t * @param {module:engine/view/element~Element} element Element to be cloned.\n\t * @param {Boolean} [deep=false] If set to `true` clones element and all its children recursively. When set to `false`,\n\t * element will be cloned without any children.\n\t * @returns {module:engine/view/element~Element} Clone of this element.\n\t */\n\tclone( element, deep = false ) {\n\t\treturn element._clone( deep );\n\t}\n\n\t/**\n\t * Appends a child node or a list of child nodes at the end of this node\n\t * and sets the parent of these nodes to this element.\n\t *\n\t * @see module:engine/view/element~Element#_appendChild\n\t * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n\t * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} element Element\n\t * to which items will be appended.\n\t * @fires module:engine/view/node~Node#event:change\n\t * @returns {Number} Number of appended nodes.\n\t */\n\tappendChild( items, element ) {\n\t\treturn element._appendChild( items );\n\t}\n\n\t/**\n\t * Inserts a child node or a list of child nodes on the given index and sets the parent of these nodes to\n\t * this element.\n\t *\n\t * @see module:engine/view/element~Element#_insertChild\n\t * @param {Number} index Offset at which nodes should be inserted.\n\t * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n\t * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} element Element\n\t * to which items will be inserted.\n\t * @fires module:engine/view/node~Node#event:change\n\t * @returns {Number} Number of inserted nodes.\n\t */\n\tinsertChild( index, items, element ) {\n\t\treturn element._insertChild( index, items );\n\t}\n\n\t/**\n\t * Removes the given number of child nodes starting at the given index and set the parent of these nodes to `null`.\n\t *\n\t * @see module:engine/view/element~Element#_removeChildren\n\t * @param {Number} index Offset from which nodes will be removed.\n\t * @param {Number} howMany Number of nodes to remove.\n\t * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} element Element\n\t * which children will be removed.\n\t * @fires module:engine/view/node~Node#event:change\n\t * @returns {Array.<module:engine/view/node~Node>} The array containing removed nodes.\n\t */\n\tremoveChildren( index, howMany, element ) {\n\t\treturn element._removeChildren( index, howMany );\n\t}\n\n\t/**\n\t * Removes given element from the view structure. Will not have effect on detached elements.\n\t *\n\t * @param {module:engine/view/element~Element} element Element which will be removed.\n\t * @returns {Array.<module:engine/view/node~Node>} The array containing removed nodes.\n\t */\n\tremove( element ) {\n\t\tconst parent = element.parent;\n\n\t\tif ( parent ) {\n\t\t\treturn this.removeChildren( parent.getChildIndex( element ), 1, parent );\n\t\t}\n\n\t\treturn [];\n\t}\n\n\t/**\n\t * Replaces given element with the new one in the view structure. Will not have effect on detached elements.\n\t *\n\t * @param {module:engine/view/element~Element} oldElement Element which will be replaced.\n\t * @param {module:engine/view/element~Element} newElement Element which will be inserted in the place of the old element.\n\t * @returns {Boolean} Whether old element was successfully replaced.\n\t */\n\treplace( oldElement, newElement ) {\n\t\tconst parent = oldElement.parent;\n\n\t\tif ( parent ) {\n\t\t\tconst index = parent.getChildIndex( oldElement );\n\n\t\t\tthis.removeChildren( index, 1, parent );\n\t\t\tthis.insertChild( index, newElement, parent );\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Removes given element from view structure and places its children in its position.\n\t * It does nothing if element has no parent.\n\t *\n\t * @param {module:engine/view/element~Element} element Element to unwrap.\n\t */\n\tunwrapElement( element ) {\n\t\tconst parent = element.parent;\n\n\t\tif ( parent ) {\n\t\t\tconst index = parent.getChildIndex( element );\n\n\t\t\tthis.remove( element );\n\t\t\tthis.insertChild( index, element.getChildren(), parent );\n\t\t}\n\t}\n\n\t/**\n\t * Renames element by creating a copy of a given element but with its name changed and then moving contents of the\n\t * old element to the new one.\n\t *\n\t * Since this function creates a new element and removes the given one, the new element is returned to keep reference.\n\t *\n\t * @param {String} newName New element name.\n\t * @param {module:engine/view/element~Element} element Element to be renamed.\n\t * @returns {module:engine/view/element~Element|null} New element or null if the old element\n\t * was not replaced (happens for detached elements).\n\t */\n\trename( newName, element ) {\n\t\tconst newElement = new Element( newName, element.getAttributes(), element.getChildren() );\n\n\t\treturn this.replace( element, newElement ) ? newElement : null;\n\t}\n\n\t/**\n\t * Adds or overwrites element's attribute with a specified key and value.\n\t *\n\t *\t\twriter.setAttribute( linkElement, 'href', 'http://ckeditor.com' );\n\t *\n\t * @see module:engine/view/element~Element#_setAttribute\n\t * @param {String} key Attribute key.\n\t * @param {String} value Attribute value.\n\t * @param {module:engine/view/element~Element} element Element for which attribute will be set.\n\t */\n\tsetAttribute( key, value, element ) {\n\t\telement._setAttribute( key, value );\n\t}\n\n\t/**\n\t * Removes attribute from the element.\n\t *\n\t *\t\twriter.removeAttribute( linkElement, 'href' );\n\t *\n\t * @see module:engine/view/element~Element#_removeAttribute\n\t * @param {String} key Attribute key.\n\t * @param {module:engine/view/element~Element} element Element from which attribute will be removed.\n\t */\n\tremoveAttribute( key, element ) {\n\t\telement._removeAttribute( key );\n\t}\n\n\t/**\n\t * Adds specified class to the element.\n\t *\n\t *\t\twriter.addClass( linkElement, 'foo' );\n\t *\t\twriter.addClass( linkElement, [ 'foo', 'bar' ] );\n\t *\n\t * @see module:engine/view/element~Element#_addClass\n\t * @param {Array.<String>|String} className Single class name or array of class names which will be added.\n\t * @param {module:engine/view/element~Element} element Element for which class will be added.\n\t */\n\taddClass( className, element ) {\n\t\telement._addClass( className );\n\t}\n\n\t/**\n\t * Removes specified class from the element.\n\t *\n\t *\t\twriter.removeClass( linkElement, 'foo' );\n\t *\t\twriter.removeClass( linkElement, [ 'foo', 'bar' ] );\n\t *\n\t * @see module:engine/view/element~Element#_removeClass\n\t * @param {Array.<String>|String} className Single class name or array of class names which will be removed.\n\t * @param {module:engine/view/element~Element} element Element from which class will be removed.\n\t */\n\tremoveClass( className, element ) {\n\t\telement._removeClass( className );\n\t}\n\n\t/**\n\t * Adds style to the element.\n\t *\n\t *\t\twriter.setStyle( element, 'color', 'red' );\n\t *\t\twriter.setStyle( element, {\n\t *\t\t\tcolor: 'red',\n\t *\t\t\tposition: 'fixed'\n\t *\t\t} );\n\t *\n\t * **Note**: This method can work with normalized style names if\n\t * {@link module:engine/view/document~Document#addStyleProcessorRules a particular style processor rule is enabled}.\n\t * See {@link module:engine/view/stylesmap~StylesMap#set `StylesMap#set()`} for details.\n\t *\n\t * @see module:engine/view/element~Element#_setStyle\n\t * @param {String|Object} property Property name or object with key - value pairs.\n\t * @param {String} [value] Value to set. This parameter is ignored if object is provided as the first parameter.\n\t * @param {module:engine/view/element~Element} element Element for which style will be added.\n\t */\n\tsetStyle( property, value, element ) {\n\t\tif ( isPlainObject( property ) && element === undefined ) {\n\t\t\telement = value;\n\t\t}\n\t\telement._setStyle( property, value );\n\t}\n\n\t/**\n\t * Removes specified style from the element.\n\t *\n\t *\t\twriter.removeStyle( element, 'color' );  // Removes 'color' style.\n\t *\t\twriter.removeStyle( element, [ 'color', 'border-top' ] ); // Removes both 'color' and 'border-top' styles.\n\t *\n\t * **Note**: This method can work with normalized style names if\n\t * {@link module:engine/view/document~Document#addStyleProcessorRules a particular style processor rule is enabled}.\n\t * See {@link module:engine/view/stylesmap~StylesMap#remove `StylesMap#remove()`} for details.\n\t *\n\t * @see module:engine/view/element~Element#_removeStyle\n\t * @param {Array.<String>|String} property Style property name or names to be removed.\n\t * @param {module:engine/view/element~Element} element Element from which style will be removed.\n\t */\n\tremoveStyle( property, element ) {\n\t\telement._removeStyle( property );\n\t}\n\n\t/**\n\t * Sets a custom property on element. Unlike attributes, custom properties are not rendered to the DOM,\n\t * so they can be used to add special data to elements.\n\t *\n\t * @see module:engine/view/element~Element#_setCustomProperty\n\t * @param {String|Symbol} key Custom property name/key.\n\t * @param {*} value Custom property value to be stored.\n\t * @param {module:engine/view/element~Element} element Element for which custom property will be set.\n\t */\n\tsetCustomProperty( key, value, element ) {\n\t\telement._setCustomProperty( key, value );\n\t}\n\n\t/**\n\t * Removes a custom property stored under the given key.\n\t *\n\t * @see module:engine/view/element~Element#_removeCustomProperty\n\t * @param {String|Symbol} key Name/key of the custom property to be removed.\n\t * @param {module:engine/view/element~Element} element Element from which the custom property will be removed.\n\t * @returns {Boolean} Returns true if property was removed.\n\t */\n\tremoveCustomProperty( key, element ) {\n\t\treturn element._removeCustomProperty( key );\n\t}\n\n\t/**\n\t * Creates position at the given location. The location can be specified as:\n\t *\n\t * * a {@link module:engine/view/position~Position position},\n\t * * parent element and offset (offset defaults to `0`),\n\t * * parent element and `'end'` (sets position at the end of that element),\n\t * * {@link module:engine/view/item~Item view item} and `'before'` or `'after'` (sets position before or after given view item).\n\t *\n\t * This method is a shortcut to other constructors such as:\n\t *\n\t * * {@link #createPositionBefore},\n\t * * {@link #createPositionAfter},\n\t *\n\t * @param {module:engine/view/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\n\t */\n\tcreatePositionAt( itemOrPosition, offset ) {\n\t\treturn Position._createAt( itemOrPosition, offset );\n\t}\n\n\t/**\n\t * Creates a new position after given view item.\n\t *\n\t * @param {module:engine/view/item~Item} item View item after which the position should be located.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tcreatePositionAfter( item ) {\n\t\treturn Position._createAfter( item );\n\t}\n\n\t/**\n\t * Creates a new position before given view item.\n\t *\n\t * @param {module:engine/view/item~Item} item View item before which the position should be located.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tcreatePositionBefore( item ) {\n\t\treturn Position._createBefore( item );\n\t}\n\n\t/**\n\t * Creates a range spanning from `start` position to `end` position.\n\t *\n\t * **Note:** This factory method creates it's own {@link module:engine/view/position~Position} instances basing on passed values.\n\t *\n\t * @param {module:engine/view/position~Position} start Start position.\n\t * @param {module:engine/view/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tcreateRange( start, end ) {\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Creates a range that starts before given {@link module:engine/view/item~Item view item} and ends after it.\n\t *\n\t * @param {module:engine/view/item~Item} item\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tcreateRangeOn( item ) {\n\t\treturn Range._createOn( item );\n\t}\n\n\t/**\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n\t * that element and ends after the last child of that element.\n\t *\n\t * @param {module:engine/view/element~Element} element Element which is a parent for the range.\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tcreateRangeIn( element ) {\n\t\treturn Range._createIn( element );\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/view/selection~Selection} instance.\n\t *\n\t * \t\t// Creates empty selection without ranges.\n\t *\t\tconst selection = writer.createSelection();\n\t *\n\t *\t\t// Creates selection at the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\tconst selection = writer.createSelection( range );\n\t *\n\t *\t\t// Creates selection at the given ranges\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n\t *\t\tconst selection = writer.createSelection( ranges );\n\t *\n\t *\t\t// Creates selection from the other selection.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\tconst selection = writer.createSelection( otherSelection );\n\t *\n\t *\t\t// Creates selection from the document selection.\n\t *\t\tconst selection = writer.createSelection( editor.editing.view.document.selection );\n\t *\n\t * \t\t// Creates selection at the given position.\n\t *\t\tconst position = writer.createPositionFromPath( root, path );\n\t *\t\tconst selection = writer.createSelection( position );\n\t *\n\t *\t\t// Creates collapsed selection at the position of given item and offset.\n\t *\t\tconst paragraph = writer.createContainerElement( 'paragraph' );\n\t *\t\tconst selection = writer.createSelection( paragraph, offset );\n\t *\n\t *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\n\t *\t\t// first child of that element and ends after the last child of that element.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'in' );\n\t *\n\t *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\n\t *\t\t// just after the item.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'on' );\n\t *\n\t * `Selection`'s constructor allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n\t *\n\t *\t\t// Creates backward selection.\n\t *\t\tconst selection = writer.createSelection( range, { backward: true } );\n\t *\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n\t * represented in other way, for example by applying proper CSS class.\n\t *\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n\t * (and be  properly handled by screen readers).\n\t *\n\t *\t\t// Creates fake selection with label.\n\t *\t\tconst selection = writer.createSelection( range, { fake: true, label: 'foo' } );\n\t *\n\t * @param {module:engine/view/selection~Selectable} [selectable=null]\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n\t * @param {String} [options.label] Label for the fake selection.\n\t * @returns {module:engine/view/selection~Selection}\n\t */\n\tcreateSelection( selectable, placeOrOffset, options ) {\n\t\treturn new Selection( selectable, placeOrOffset, options );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport FileRepository from '@ckeditor/ckeditor5-upload/src/filerepository';\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { insertImage, isImageAllowed } from '../image/utils';\n\n/**\n * @module image/imageupload/imageuploadcommand\n */\n\n/**\n * The image upload command.\n *\n * The command is registered by the {@link module:image/imageupload/imageuploadediting~ImageUploadEditing} plugin as `'imageUpload'`.\n *\n * In order to upload an image at the current selection position\n * (according to the {@link module:widget/utils~findOptimalInsertionPosition} algorithm),\n * execute the command and pass the native image file instance:\n *\n *\t\tthis.listenTo( editor.editing.view.document, 'clipboardInput', ( evt, data ) => {\n *\t\t\t// Assuming that only images were pasted:\n *\t\t\tconst images = Array.from( data.dataTransfer.files );\n *\n *\t\t\t// Upload the first image:\n *\t\t\teditor.execute( 'imageUpload', { file: images[ 0 ] } );\n *\t\t} );\n *\n * It is also possible to insert multiple images at once:\n *\n *\t\teditor.execute( 'imageUpload', {\n *\t\t\tfile: [\n *\t\t\t\tfile1,\n *\t\t\t\tfile2\n *\t\t\t]\n *\t\t} );\n *\n * @extends module:core/command~Command\n */\nexport default class ImageUploadCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tthis.isEnabled = isImageAllowed( this.editor.model );\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * @fires execute\n\t * @param {Object} options Options for the executed command.\n\t * @param {File|Array.<File>} options.file The image file or an array of image files to upload.\n\t */\n\texecute( options ) {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\n\t\tconst fileRepository = editor.plugins.get( FileRepository );\n\n\t\tmodel.change( writer => {\n\t\t\tconst filesToUpload = Array.isArray( options.file ) ? options.file : [ options.file ];\n\n\t\t\tfor ( const file of filesToUpload ) {\n\t\t\t\tuploadImage( writer, model, fileRepository, file );\n\t\t\t}\n\t\t} );\n\t}\n}\n\n// Handles uploading single file.\n//\n// @param {module:engine/model/writer~writer} writer\n// @param {module:engine/model/model~Model} model\n// @param {File} file\nfunction uploadImage( writer, model, fileRepository, file ) {\n\tconst loader = fileRepository.createLoader( file );\n\n\t// Do not throw when upload adapter is not set. FileRepository will log an error anyway.\n\tif ( !loader ) {\n\t\treturn;\n\t}\n\n\tinsertImage( writer, model, { uploadId: loader.id } );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module image/imageupload/imageuploadediting\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport FileRepository from '@ckeditor/ckeditor5-upload/src/filerepository';\nimport Notification from '@ckeditor/ckeditor5-ui/src/notification/notification';\nimport Clipboard from '@ckeditor/ckeditor5-clipboard/src/clipboard';\nimport UpcastWriter from '@ckeditor/ckeditor5-engine/src/view/upcastwriter';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\nimport ImageUploadCommand from '../../src/imageupload/imageuploadcommand';\nimport {\n    fetchLocalImage,\n    isLocalImage\n} from '../../src/imageupload/utils';\nimport { createImageTypeRegExp } from './utils';\n/**\n * The editing part of the image upload feature. It registers the `'imageUpload'` command.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageUploadEditing extends Plugin {\n    /**\n\t * @inheritDoc\n\t */\n    static get requires() {\n        return [\n            FileRepository,\n            Notification,\n            Clipboard\n        ];\n    }\n    static get pluginName() {\n        return 'ImageUploadEditing';\n    }\n    /**\n\t * @inheritDoc\n\t */\n    constructor(editor) {\n        super(editor);\n        editor.config.define('image', {\n            upload: {\n                types: [\n                    'jpeg',\n                    'png',\n                    'gif',\n                    'bmp',\n                    'webp',\n                    'tiff'\n                ]\n            }\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */\n    init() {\n        const editor = this.editor;\n        const doc = editor.model.document;\n        const schema = editor.model.schema;\n        const conversion = editor.conversion;\n        const fileRepository = editor.plugins.get(FileRepository);\n        const imageTypes = createImageTypeRegExp(editor.config.get('image.upload.types'));\n        // Setup schema to allow uploadId and uploadStatus for images.\n        schema.extend('image', {\n            allowAttributes: [\n                'uploadId',\n                'uploadStatus'\n            ]\n        });\n        // Register imageUpload command.\n        editor.commands.add('imageUpload', new ImageUploadCommand(editor));\n        // Register upcast converter for uploadId.\n        conversion.for('upcast').attributeToAttribute({\n            view: {\n                name: 'img',\n                key: 'uploadId'\n            },\n            model: 'uploadId'\n        });\n        // Handle pasted images.\n        // For every image file, a new file loader is created and a placeholder image is\n        // inserted into the content. Then, those images are uploaded once they appear in the model\n        // (see Document#change listener below).\n        this.listenTo(editor.editing.view.document, 'clipboardInput', (evt, data) => {\n            // Skip if non empty HTML data is included.\n            // https://github.com/ckeditor/ckeditor5-upload/issues/68\n            if (isHtmlIncluded(data.dataTransfer)) {\n                return;\n            }\n            const images = Array.from(data.dataTransfer.files).filter(file => {\n                // See https://github.com/ckeditor/ckeditor5-image/pull/254.\n                if (!file) {\n                    return false;\n                }\n                return imageTypes.test(file.type);\n            });\n            const ranges = data.targetRanges.map(viewRange => editor.editing.mapper.toModelRange(viewRange));\n            editor.model.change(writer => {\n                // Set selection to paste target.\n                writer.setSelection(ranges);\n                if (images.length) {\n                    evt.stop();\n                    // Upload images after the selection has changed in order to ensure the command's state is refreshed.\n                    editor.model.enqueueChange('default', () => {\n                        editor.execute('imageUpload', { file: images });\n                    });\n                }\n            });\n        });\n        // Handle HTML pasted with images with base64 or blob sources.\n        // For every image file, a new file loader is created and a placeholder image is\n        // inserted into the content. Then, those images are uploaded once they appear in the model\n        // (see Document#change listener below).\n        this.listenTo(editor.plugins.get(Clipboard), 'inputTransformation', (evt, data) => {\n            const fetchableImages = Array.from(editor.editing.view.createRangeIn(data.content)).filter(value => isLocalImage(value.item) && !value.item.getAttribute('uploadProcessed')).map(value => {\n                return {\n                    promise: fetchLocalImage(value.item),\n                    imageElement: value.item\n                };\n            });\n            if (!fetchableImages.length) {\n                return;\n            }\n            const writer = new UpcastWriter();\n            for (const fetchableImage of fetchableImages) {\n                // Set attribute marking that the image was processed already.\n                writer.setAttribute('uploadProcessed', true, fetchableImage.imageElement);\n                const loader = fileRepository.createLoader(fetchableImage.promise);\n                if (loader) {\n                    writer.setAttribute('src', '', fetchableImage.imageElement);\n                    writer.setAttribute('uploadId', loader.id, fetchableImage.imageElement);\n                }\n            }\n        });\n        // Prevents from the browser redirecting to the dropped image.\n        editor.editing.view.document.on('dragover', (evt, data) => {\n            data.preventDefault();\n        });\n        // Upload placeholder images that appeared in the model.\n        doc.on('change', () => {\n            const changes = doc.differ.getChanges({ includeChangesInGraveyard: true });\n            for (const entry of changes) {\n                if (entry.type == 'insert' && entry.name != '$text') {\n                    const item = entry.position.nodeAfter;\n                    const isInGraveyard = entry.position.root.rootName == '$graveyard';\n                    for (const image of getImagesFromChangeItem(editor, item)) {\n                        // Check if the image element still has upload id.\n                        const uploadId = image.getAttribute('uploadId');\n                        if (!uploadId) {\n                            continue;\n                        }\n                        // Check if the image is loaded on this client.\n                        const loader = fileRepository.loaders.get(uploadId);\n                        if (!loader) {\n                            continue;\n                        }\n                        if (isInGraveyard) {\n                            // If the image was inserted to the graveyard - abort the loading process.\n                            loader.abort();\n                        } else if (loader.status == 'idle') {\n                            // If the image was inserted into content and has not been loaded yet, start loading it.\n                            this._readAndUpload(loader, image);\n                        }\n                    }\n                }\n            }\n        });\n    }\n    /**\n\t * Reads and uploads an image.\n\t *\n\t * The image is read from the disk and as a Base64-encoded string it is set temporarily to\n\t * `image[src]`. When the image is successfully uploaded, the temporary data is replaced with the target\n\t * image's URL (the URL to the uploaded image on the server).\n\t *\n\t * @protected\n\t * @param {module:upload/filerepository~FileLoader} loader\n\t * @param {module:engine/model/element~Element} imageElement\n\t * @returns {Promise}\n\t */\n    _readAndUpload(loader, imageElement) {\n        const editor = this.editor;\n        const model = editor.model;\n        const t = editor.locale.t;\n        const fileRepository = editor.plugins.get(FileRepository);\n        const notification = editor.plugins.get(Notification);\n        model.enqueueChange('transparent', writer => {\n            writer.setAttribute('uploadStatus', 'reading', imageElement);\n        });\n        return loader.read().then(() => {\n            const promise = loader.upload();\n            // Force re–paint in Safari. Without it, the image will display with a wrong size.\n            // https://github.com/ckeditor/ckeditor5/issues/1975\n            /* istanbul ignore next */\n            if (env.isSafari) {\n                const viewFigure = editor.editing.mapper.toViewElement(imageElement);\n                const viewImg = viewFigure.getChild(0);\n                editor.editing.view.once('render', () => {\n                    // Early returns just to be safe. There might be some code ran\n                    // in between the outer scope and this callback.\n                    if (!viewImg.parent) {\n                        return;\n                    }\n                    const domFigure = editor.editing.view.domConverter.mapViewToDom(viewImg.parent);\n                    if (!domFigure) {\n                        return;\n                    }\n                    const originalDisplay = domFigure.style.display;\n                    domFigure.style.display = 'none';\n                    // Make sure this line will never be removed during minification for having \"no effect\".\n                    domFigure._ckHack = domFigure.offsetHeight;\n                    domFigure.style.display = originalDisplay;\n                });\n            }\n            model.enqueueChange('transparent', writer => {\n                writer.setAttribute('uploadStatus', 'uploading', imageElement);\n            });\n            return promise;\n        }).then(data => {\n            model.enqueueChange('transparent', writer => {\n                writer.setAttributes({\n                    uploadStatus: 'complete',\n                    src: data.default\n                }, imageElement);\n                this._parseAndSetSrcsetAttributeOnImage(data, imageElement, writer);\n            });\n            clean();\n        }).catch(error => {\n            // If status is not 'error' nor 'aborted' - throw error because it means that something else went wrong,\n            // it might be generic error and it would be real pain to find what is going on.\n            if (loader.status !== 'error' && loader.status !== 'aborted') {\n                throw error;\n            }\n            // Might be 'aborted'.\n            if (loader.status == 'error' && error) {\n                notification.showWarning(error, {\n                    title: t('am'),\n                    namespace: 'upload'\n                });\n            }\n            clean();\n            // Permanently remove image from insertion batch.\n            model.enqueueChange('transparent', writer => {\n                writer.remove(imageElement);\n            });\n        });\n        function clean() {\n            model.enqueueChange('transparent', writer => {\n                writer.removeAttribute('uploadId', imageElement);\n                writer.removeAttribute('uploadStatus', imageElement);\n            });\n            fileRepository.destroyLoader(loader);\n        }\n    }\n    /**\n\t * Creates the `srcset` attribute based on a given file upload response and sets it as an attribute to a specific image element.\n\t *\n\t * @protected\n\t * @param {Object} data Data object from which `srcset` will be created.\n\t * @param {module:engine/model/element~Element} image The image element on which the `srcset` attribute will be set.\n\t * @param {module:engine/model/writer~Writer} writer\n\t */\n    _parseAndSetSrcsetAttributeOnImage(data, image, writer) {\n        // Srcset attribute for responsive images support.\n        let maxWidth = 0;\n        const srcsetAttribute = Object.keys(data)    // Filter out keys that are not integers.\n.filter(key => {\n            const width = parseInt(key, 10);\n            if (!isNaN(width)) {\n                maxWidth = Math.max(maxWidth, width);\n                return true;\n            }\n        })    // Convert each key to srcset entry.\n.map(key => `${ data[key] } ${ key }w`)    // Join all entries.\n.join(', ');\n        if (srcsetAttribute != '') {\n            writer.setAttribute('srcset', {\n                data: srcsetAttribute,\n                width: maxWidth\n            }, image);\n        }\n    }\n}\n// Returns `true` if non-empty `text/html` is included in the data transfer.\n//\n// @param {module:clipboard/datatransfer~DataTransfer} dataTransfer\n// @returns {Boolean}\nexport function isHtmlIncluded(dataTransfer) {\n    return Array.from(dataTransfer.types).includes('text/html') && dataTransfer.getData('text/html') !== '';\n}\nfunction getImagesFromChangeItem(editor, item) {\n    return Array.from(editor.model.createRangeOn(item)).filter(value => value.item.is('image')).map(value => value.item);\n}","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imageupload\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ImageUploadUI from './imageupload/imageuploadui';\nimport ImageUploadProgress from './imageupload/imageuploadprogress';\nimport ImageUploadEditing from './imageupload/imageuploadediting';\n\n/**\n * The image upload plugin.\n *\n * For a detailed overview, check the {@glink features/image-upload/image-upload image upload feature} documentation.\n *\n * This plugin does not do anything directly, but it loads a set of specific plugins to enable image uploading:\n *\n * * {@link module:image/imageupload/imageuploadediting~ImageUploadEditing},\n * * {@link module:image/imageupload/imageuploadui~ImageUploadUI},\n * * {@link module:image/imageupload/imageuploadprogress~ImageUploadProgress}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageUpload extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ImageUpload';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ImageUploadEditing, ImageUploadUI, ImageUploadProgress ];\n\t}\n}\n\n/**\n * Image upload configuration.\n *\n * @member {module:image/imageupload~ImageUploadConfig} module:image/image~ImageConfig#upload\n */\n\n/**\n * The configuration of the image upload feature. Used by the image upload feature in the `@ckeditor/ckeditor5-image` package.\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n * \t\t\t\timage: {\n * \t\t\t\t\tupload:  ... // Image upload feature options.\n * \t\t\t\t}\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface module:image/imageupload~ImageUploadConfig\n */\n\n/**\n * The list of accepted image types.\n *\n * The accepted types of images can be customized to allow only certain types of images:\n *\n *\t\t// Allow only JPEG and PNG images:\n *\t\tconst imageUploadConfig = {\n *\t\t\ttypes: [ 'png', 'jpeg' ]\n *\t\t};\n *\n * The type string should match [one of the sub-types](https://www.iana.org/assignments/media-types/media-types.xhtml#image)\n * of the image MIME type. E.g. for the `image/jpeg` MIME type, add `'jpeg'` to your image upload configuration.\n *\n * **Note:** This setting only restricts some image types to be selected and uploaded through the CKEditor UI and commands. Image type\n * recognition and filtering should also be implemented on the server which accepts image uploads.\n *\n * @member {Array.<String>} module:image/imageupload~ImageUploadConfig#types\n * @default [ 'jpeg', 'png', 'gif', 'bmp', 'webp', 'tiff' ]\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module paragraph/paragraphcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n\n/**\n * The paragraph command.\n *\n * @extends module:core/command~Command\n */\nexport default class ParagraphCommand extends Command {\n\t/**\n\t * The value of the command. Indicates whether the selection start is placed in a paragraph.\n\t *\n\t * @readonly\n\t * @observable\n\t * @member {Boolean} #value\n\t */\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst model = this.editor.model;\n\t\tconst document = model.document;\n\t\tconst block = first( document.selection.getSelectedBlocks() );\n\n\t\tthis.value = !!block && block.is( 'paragraph' );\n\t\tthis.isEnabled = !!block && checkCanBecomeParagraph( block, model.schema );\n\t}\n\n\t/**\n\t * Executes the command. All the blocks (see {@link module:engine/model/schema~Schema}) in the selection\n\t * will be turned to paragraphs.\n\t *\n\t * @fires execute\n\t * @param {Object} [options] Options for the executed command.\n\t * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} [options.selection]\n\t * The selection that the command should be applied to.\n\t * By default, if not provided, the command is applied to the {@link module:engine/model/document~Document#selection}.\n\t */\n\texecute( options = {} ) {\n\t\tconst model = this.editor.model;\n\t\tconst document = model.document;\n\n\t\tmodel.change( writer => {\n\t\t\tconst blocks = ( options.selection || document.selection ).getSelectedBlocks();\n\n\t\t\tfor ( const block of blocks ) {\n\t\t\t\tif ( !block.is( 'paragraph' ) && checkCanBecomeParagraph( block, model.schema ) ) {\n\t\t\t\t\twriter.rename( block, 'paragraph' );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n}\n\n// Checks whether the given block can be replaced by a paragraph.\n//\n// @private\n// @param {module:engine/model/element~Element} block A block to be tested.\n// @param {module:engine/model/schema~Schema} schema The schema of the document.\n// @returns {Boolean}\nfunction checkCanBecomeParagraph( block, schema ) {\n\treturn schema.checkChild( block.parent, 'paragraph' ) && !schema.isObject( block );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module paragraph/paragraph\n */\n\nimport ParagraphCommand from './paragraphcommand';\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\n/**\n * The paragraph feature for the editor.\n *\n * It introduces the `<paragraph>` element in the model which renders as a `<p>` element in the DOM and data.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Paragraph extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Paragraph';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\t\tconst data = editor.data;\n\n\t\teditor.commands.add( 'paragraph', new ParagraphCommand( editor ) );\n\n\t\t// Schema.\n\t\tmodel.schema.register( 'paragraph', { inheritAllFrom: '$block' } );\n\n\t\teditor.conversion.elementToElement( { model: 'paragraph', view: 'p' } );\n\n\t\t// Content autoparagraphing. --------------------------------------------------\n\n\t\t// Handles element which has not been converted by any plugin and checks if it would be converted if\n\t\t// we wrap it in a paragraph or change it to a paragraph.\n\t\teditor.conversion.for( 'upcast' ).elementToElement( {\n\t\t\tmodel: ( viewElement, modelWriter ) => {\n\t\t\t\tif ( !Paragraph.paragraphLikeElements.has( viewElement.name ) ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t// Do not auto-paragraph empty elements.\n\t\t\t\tif ( viewElement.isEmpty ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn modelWriter.createElement( 'paragraph' );\n\t\t\t},\n\t\t\tconverterPriority: 'low'\n\t\t} );\n\n\t\tdata.upcastDispatcher.on( 'element', ( evt, data, conversionApi ) => {\n\t\t\t// Do not try auto-paragraphing if the element was already converted.\n\t\t\tif ( !conversionApi.consumable.test( data.viewItem, { name: data.viewItem.name } ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If the element is not paragraph-like try wrapping it in a paragraph.\n\t\t\tif ( isParagraphable( data.viewItem, data.modelCursor, conversionApi.schema ) ) {\n\t\t\t\tObject.assign( data, wrapInParagraph( data.viewItem, data.modelCursor, conversionApi ) );\n\t\t\t}\n\t\t}, { priority: 'low' } );\n\n\t\t// Handles not converted text nodes and checks if would be converted if we wraps then by a paragraph.\n\t\tdata.upcastDispatcher.on( 'text', ( evt, data, conversionApi ) => {\n\t\t\t// When node is already converted then do nothing.\n\t\t\tif ( data.modelRange ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( isParagraphable( data.viewItem, data.modelCursor, conversionApi.schema ) ) {\n\t\t\t\tObject.assign( data, wrapInParagraph( data.viewItem, data.modelCursor, conversionApi ) );\n\t\t\t}\n\t\t}, { priority: 'lowest' } );\n\n\t\t// Empty roots autoparagraphing. -----------------------------------------------\n\n\t\t// Post-fixer which takes care of adding empty paragraph elements to empty roots.\n\t\t// Besides fixing content on #changesDone we also need to handle editor.data#ready event because\n\t\t// if initial data is empty or setData() wasn't even called there will be no #change fired.\n\t\tmodel.document.registerPostFixer( writer => this._autoparagraphEmptyRoots( writer ) );\n\n\t\teditor.data.on( 'ready', () => {\n\t\t\tmodel.enqueueChange( 'transparent', writer => this._autoparagraphEmptyRoots( writer ) );\n\t\t}, { priority: 'lowest' } );\n\t}\n\n\t/**\n\t * Fixes all empty roots.\n\t *\n\t * @private\n\t * @returns {Boolean} `true` if any change has been applied, `false` otherwise.\n\t */\n\t_autoparagraphEmptyRoots( writer ) {\n\t\tconst model = this.editor.model;\n\n\t\tfor ( const rootName of model.document.getRootNames() ) {\n\t\t\tconst root = model.document.getRoot( rootName );\n\n\t\t\tif ( root.isEmpty && root.rootName != '$graveyard' ) {\n\t\t\t\t// If paragraph element is allowed in the root, create paragraph element.\n\t\t\t\tif ( model.schema.checkChild( root, 'paragraph' ) ) {\n\t\t\t\t\twriter.insertElement( 'paragraph', root );\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A list of element names which should be treated by the autoparagraphing algorithms as\n * paragraph-like. This means that e.g. the following content:\n *\n *\t\t<h1>Foo</h1>\n *\t\t<table>\n *\t\t\t<tr>\n *\t\t\t\t<td>X</td>\n *\t\t\t\t<td>\n *\t\t\t\t\t<ul>\n *\t\t\t\t\t\t<li>Y</li>\n *\t\t\t\t\t\t<li>Z</li>\n *\t\t\t\t\t</ul>\n *\t\t\t\t</td>\n *\t\t\t</tr>\n *\t\t</table>\n *\n * contains five paragraph-like elements: `<h1>`, two `<td>`s and two `<li>`s.\n * Hence, if none of the features is going to convert those elements the above content will be automatically handled\n * by the paragraph feature and converted to:\n *\n *\t\t<p>Foo</p>\n *\t\t<p>X</p>\n *\t\t<p>Y</p>\n *\t\t<p>Z</p>\n *\n * Note: The `<td>` containing two `<li>` elements was ignored as the innermost paragraph-like elements\n * have a priority upon conversion.\n *\n * @member {Set.<String>} module:paragraph/paragraph~Paragraph.paragraphLikeElements\n */\nParagraph.paragraphLikeElements = new Set( [\n\t'blockquote',\n\t'dd',\n\t'div',\n\t'dt',\n\t'h1',\n\t'h2',\n\t'h3',\n\t'h4',\n\t'h5',\n\t'h6',\n\t'li',\n\t'p',\n\t'td'\n] );\n\nfunction wrapInParagraph( input, position, conversionApi ) {\n\tconst paragraph = conversionApi.writer.createElement( 'paragraph' );\n\n\tconversionApi.writer.insert( paragraph, position );\n\treturn conversionApi.convertItem( input, conversionApi.writer.createPositionAt( paragraph, 0 ) );\n}\n\nfunction isParagraphable( node, position, schema ) {\n\tconst context = schema.createContext( position );\n\n\t// When paragraph is allowed in this context...\n\tif ( !schema.checkChild( context, 'paragraph' ) ) {\n\t\treturn false;\n\t}\n\n\t// And a node would be allowed in this paragraph...\n\tif ( !schema.checkChild( context.push( 'paragraph' ), node ) ) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module heading/headingcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n\n/**\n * The heading command. It is used by the {@link module:heading/heading~Heading heading feature} to apply headings.\n *\n * @extends module:core/command~Command\n */\nexport default class HeadingCommand extends Command {\n\t/**\n\t * Creates an instance of the command.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor Editor instance.\n\t * @param {Array.<String>} modelElements Names of the element which this command can apply in the model.\n\t */\n\tconstructor( editor, modelElements ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * If the selection starts in a heading (which {@link #modelElements is supported by this command})\n\t\t * the value is set to the name of that heading model element.\n\t\t * It is  set to `false` otherwise.\n\t\t *\n\t\t * @observable\n\t\t * @readonly\n\t\t * @member {Boolean|String} #value\n\t\t */\n\n\t\t/**\n\t\t * Set of defined model's elements names that this command support.\n\t\t * See {@link module:heading/heading~HeadingOption}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Array.<String>}\n\t\t */\n\t\tthis.modelElements = modelElements;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst block = first( this.editor.model.document.selection.getSelectedBlocks() );\n\n\t\tthis.value = !!block && this.modelElements.includes( block.name ) && block.name;\n\t\tthis.isEnabled = !!block && this.modelElements.some( heading => checkCanBecomeHeading( block, heading, this.editor.model.schema ) );\n\t}\n\n\t/**\n\t * Executes the command. Applies the heading to the selected blocks or, if the first selected\n\t * block is a heading already, turns selected headings (of this level only) to paragraphs.\n\t *\n\t * @param {Object} options\n\t * @param {String} options.value Name of the element which this command will apply in the model.\n\t * @fires execute\n\t */\n\texecute( options ) {\n\t\tconst model = this.editor.model;\n\t\tconst document = model.document;\n\n\t\tconst modelElement = options.value;\n\n\t\tmodel.change( writer => {\n\t\t\tconst blocks = Array.from( document.selection.getSelectedBlocks() )\n\t\t\t\t.filter( block => {\n\t\t\t\t\treturn checkCanBecomeHeading( block, modelElement, model.schema );\n\t\t\t\t} );\n\n\t\t\tfor ( const block of blocks ) {\n\t\t\t\tif ( !block.is( modelElement ) ) {\n\t\t\t\t\twriter.rename( block, modelElement );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n}\n\n// Checks whether the given block can be replaced by a specific heading.\n//\n// @private\n// @param {module:engine/model/element~Element} block A block to be tested.\n// @param {module:heading/headingcommand~HeadingCommand#modelElement} heading Command element name in the model.\n// @param {module:engine/model/schema~Schema} schema The schema of the document.\n// @returns {Boolean}\nfunction checkCanBecomeHeading( block, heading, schema ) {\n\treturn schema.checkChild( block.parent, heading ) && !schema.isObject( block );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module heading/headingediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\nimport HeadingCommand from './headingcommand';\n\nimport priorities from '@ckeditor/ckeditor5-utils/src/priorities';\n\nconst defaultModelElement = 'paragraph';\n\n/**\n * The headings engine feature. It handles switching between block formats &ndash; headings and paragraph.\n * This class represents the engine part of the heading feature. See also {@link module:heading/heading~Heading}.\n * It introduces `heading1`-`headingN` commands which allow to convert paragraphs into headings.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class HeadingEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'HeadingEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\teditor.config.define( 'heading', {\n\t\t\toptions: [\n\t\t\t\t{ model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },\n\t\t\t\t{ model: 'heading1', view: 'h2', title: 'Heading 1', class: 'ck-heading_heading1' },\n\t\t\t\t{ model: 'heading2', view: 'h3', title: 'Heading 2', class: 'ck-heading_heading2' },\n\t\t\t\t{ model: 'heading3', view: 'h4', title: 'Heading 3', class: 'ck-heading_heading3' }\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ Paragraph ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst options = editor.config.get( 'heading.options' );\n\n\t\tconst modelElements = [];\n\n\t\tfor ( const option of options ) {\n\t\t\t// Skip paragraph - it is defined in required Paragraph feature.\n\t\t\tif ( option.model !== defaultModelElement ) {\n\t\t\t\t// Schema.\n\t\t\t\teditor.model.schema.register( option.model, {\n\t\t\t\t\tinheritAllFrom: '$block'\n\t\t\t\t} );\n\n\t\t\t\teditor.conversion.elementToElement( option );\n\n\t\t\t\tmodelElements.push( option.model );\n\t\t\t}\n\t\t}\n\n\t\tthis._addDefaultH1Conversion( editor );\n\n\t\t// Register the heading command for this option.\n\t\teditor.commands.add( 'heading', new HeadingCommand( editor, modelElements ) );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tafterInit() {\n\t\t// If the enter command is added to the editor, alter its behavior.\n\t\t// Enter at the end of a heading element should create a paragraph.\n\t\tconst editor = this.editor;\n\t\tconst enterCommand = editor.commands.get( 'enter' );\n\t\tconst options = editor.config.get( 'heading.options' );\n\n\t\tif ( enterCommand ) {\n\t\t\tthis.listenTo( enterCommand, 'afterExecute', ( evt, data ) => {\n\t\t\t\tconst positionParent = editor.model.document.selection.getFirstPosition().parent;\n\t\t\t\tconst isHeading = options.some( option => positionParent.is( option.model ) );\n\n\t\t\t\tif ( isHeading && !positionParent.is( defaultModelElement ) && positionParent.childCount === 0 ) {\n\t\t\t\t\tdata.writer.rename( positionParent, defaultModelElement );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Adds default conversion for `h1` -> `heading1` with a low priority.\n\t *\n\t * @private\n\t * @param {module:core/editor/editor~Editor} editor Editor instance on which to add the `h1` conversion.\n\t */\n\t_addDefaultH1Conversion( editor ) {\n\t\teditor.conversion.for( 'upcast' ).elementToElement( {\n\t\t\tmodel: 'heading1',\n\t\t\tview: 'h1',\n\t\t\t// With a `low` priority, `paragraph` plugin autoparagraphing mechanism is executed. Make sure\n\t\t\t// this listener is called before it. If not, `h1` will be transformed into a paragraph.\n\t\t\tconverterPriority: priorities.get( 'low' ) + 1\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module heading/headingui\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Model from '@ckeditor/ckeditor5-ui/src/model';\nimport {\n    createDropdown,\n    addListToDropdown\n} from '@ckeditor/ckeditor5-ui/src/dropdown/utils';\nimport { getLocalizedOptions } from './utils';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport '../theme/heading.css';\n/**\n * The headings UI feature. It introduces the `headings` dropdown.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class HeadingUI extends Plugin {\n    /**\n\t * @inheritDoc\n\t */\n    init() {\n        const editor = this.editor;\n        const t = editor.t;\n        const options = getLocalizedOptions(editor);\n        const defaultTitle = t('i');\n        const dropdownTooltip = t('j');\n        // Register UI component.\n        editor.ui.componentFactory.add('heading', locale => {\n            const titles = {};\n            const itemDefinitions = new Collection();\n            const headingCommand = editor.commands.get('heading');\n            const paragraphCommand = editor.commands.get('paragraph');\n            const commands = [headingCommand];\n            for (const option of options) {\n                const def = {\n                    type: 'button',\n                    model: new Model({\n                        label: option.title,\n                        class: option.class,\n                        withText: true\n                    })\n                };\n                if (option.model === 'paragraph') {\n                    def.model.bind('isOn').to(paragraphCommand, 'value');\n                    def.model.set('commandName', 'paragraph');\n                    commands.push(paragraphCommand);\n                } else {\n                    def.model.bind('isOn').to(headingCommand, 'value', value => value === option.model);\n                    def.model.set({\n                        commandName: 'heading',\n                        commandValue: option.model\n                    });\n                }\n                // Add the option to the collection.\n                itemDefinitions.add(def);\n                titles[option.model] = option.title;\n            }\n            const dropdownView = createDropdown(locale);\n            addListToDropdown(dropdownView, itemDefinitions);\n            dropdownView.buttonView.set({\n                isOn: false,\n                withText: true,\n                tooltip: dropdownTooltip\n            });\n            dropdownView.extendTemplate({ attributes: { class: ['ck-heading-dropdown'] } });\n            dropdownView.bind('isEnabled').toMany(commands, 'isEnabled', (...areEnabled) => {\n                return areEnabled.some(isEnabled => isEnabled);\n            });\n            dropdownView.buttonView.bind('label').to(headingCommand, 'value', paragraphCommand, 'value', (value, para) => {\n                const whichModel = value || para && 'paragraph';\n                // If none of the commands is active, display default title.\n                return titles[whichModel] ? titles[whichModel] : defaultTitle;\n            });\n            // Execute command when an item from the dropdown is selected.\n            this.listenTo(dropdownView, 'execute', evt => {\n                editor.execute(evt.source.commandName, evt.source.commandValue ? { value: evt.source.commandValue } : undefined);\n                editor.editing.view.focus();\n            });\n            return dropdownView;\n        });\n    }\n}","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module heading/utils\n */\n/**\n * Returns heading options as defined in `config.heading.options` but processed to consider\n * the editor localization, i.e. to display {@link module:heading/heading~HeadingOption}\n * in the correct language.\n *\n * Note: The reason behind this method is that there is no way to use {@link module:utils/locale~Locale#t}\n * when the user configuration is defined because the editor does not exist yet.\n *\n * @param {module:core/editor/editor~Editor} editor\n * @returns {Array.<module:heading/heading~HeadingOption>}.\n */\nexport function getLocalizedOptions(editor) {\n    const t = editor.t;\n    const localizedTitles = {\n        Paragraph: t('av'),\n        'Heading 1': t('aw'),\n        'Heading 2': t('ax'),\n        'Heading 3': t('ay'),\n        'Heading 4': t('az'),\n        'Heading 5': t('ba'),\n        'Heading 6': t('bb')\n    };\n    return editor.config.get('heading.options').map(option => {\n        const title = localizedTitles[option.title];\n        if (title && title != option.title) {\n            option.title = title;\n        }\n        return option;\n    });\n}","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imagecaption/utils\n */\n\nimport { enablePlaceholder } from '@ckeditor/ckeditor5-engine/src/view/placeholder';\nimport { toWidgetEditable } from '@ckeditor/ckeditor5-widget/src/utils';\n\n/**\n * Returns a function that creates a caption editable element for the given {@link module:engine/view/document~Document}.\n *\n * @param {module:engine/view/view~View} view\n * @param {String} placeholderText The text to be displayed when the caption is empty.\n * @returns {Function}\n */\nexport function captionElementCreator( view, placeholderText ) {\n\treturn writer => {\n\t\tconst editable = writer.createEditableElement( 'figcaption' );\n\t\twriter.setCustomProperty( 'imageCaption', true, editable );\n\n\t\tenablePlaceholder( {\n\t\t\tview,\n\t\t\telement: editable,\n\t\t\ttext: placeholderText\n\t\t} );\n\n\t\treturn toWidgetEditable( editable, writer );\n\t};\n}\n\n/**\n * Returns `true` if a given view element is the image caption editable.\n *\n * @param {module:engine/view/element~Element} viewElement\n * @returns {Boolean}\n */\nexport function isCaption( viewElement ) {\n\treturn !!viewElement.getCustomProperty( 'imageCaption' );\n}\n\n/**\n * Returns the caption model element from a given image element. Returns `null` if no caption is found.\n *\n * @param {module:engine/model/element~Element} imageModelElement\n * @returns {module:engine/model/element~Element|null}\n */\nexport function getCaptionFromImage( imageModelElement ) {\n\tfor ( const node of imageModelElement.getChildren() ) {\n\t\tif ( !!node && node.is( 'caption' ) ) {\n\t\t\treturn node;\n\t\t}\n\t}\n\n\treturn null;\n}\n\n/**\n * {@link module:engine/view/matcher~Matcher} pattern. Checks if a given element is a `<figcaption>` element that is placed\n * inside the image `<figure>` element.\n *\n * @param {module:engine/view/element~Element} element\n * @returns {Object|null} Returns the object accepted by {@link module:engine/view/matcher~Matcher} or `null` if the element\n * cannot be matched.\n */\nexport function matchImageCaption( element ) {\n\tconst parent = element.parent;\n\n\t// Convert only captions for images.\n\tif ( element.name == 'figcaption' && parent && parent.name == 'figure' && parent.hasClass( 'image' ) ) {\n\t\treturn { name: true };\n\t}\n\n\treturn null;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module image/imagecaption/imagecaptionediting\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport { isImage } from '../image/utils';\nimport {\n    captionElementCreator,\n    getCaptionFromImage,\n    matchImageCaption\n} from './utils';\n/**\n * The image caption engine plugin.\n *\n * It registers proper converters. It takes care of adding a caption element if the image without it is inserted\n * to the model document.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageCaptionEditing extends Plugin {\n    /**\n\t * @inheritDoc\n\t */\n    static get pluginName() {\n        return 'ImageCaptionEditing';\n    }\n    /**\n\t * @inheritDoc\n\t */\n    init() {\n        const editor = this.editor;\n        const view = editor.editing.view;\n        const schema = editor.model.schema;\n        const data = editor.data;\n        const editing = editor.editing;\n        const t = editor.t;\n        /**\n\t\t * The last selected caption editable.\n\t\t * It is used for hiding the editable when it is empty and the image widget is no longer selected.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/view/editableelement~EditableElement} #_lastSelectedCaption\n\t\t */\n        // Schema configuration.\n        schema.register('caption', {\n            allowIn: 'image',\n            allowContentOf: '$block',\n            isLimit: true\n        });\n        // Add caption element to each image inserted without it.\n        editor.model.document.registerPostFixer(writer => this._insertMissingModelCaptionElement(writer));\n        // View to model converter for the data pipeline.\n        editor.conversion.for('upcast').elementToElement({\n            view: matchImageCaption,\n            model: 'caption'\n        });\n        // Model to view converter for the data pipeline.\n        const createCaptionForData = writer => writer.createContainerElement('figcaption');\n        data.downcastDispatcher.on('insert:caption', captionModelToView(createCaptionForData, false));\n        // Model to view converter for the editing pipeline.\n        const createCaptionForEditing = captionElementCreator(view, t('al'));\n        editing.downcastDispatcher.on('insert:caption', captionModelToView(createCaptionForEditing));\n        // Always show caption in view when something is inserted in model.\n        editing.downcastDispatcher.on('insert', this._fixCaptionVisibility(data => data.item), { priority: 'high' });\n        // Hide caption when everything is removed from it.\n        editing.downcastDispatcher.on('remove', this._fixCaptionVisibility(data => data.position.parent), { priority: 'high' });\n        // Update caption visibility on view in post fixer.\n        view.document.registerPostFixer(writer => this._updateCaptionVisibility(writer));\n    }\n    /**\n\t * Updates the view before each rendering, making sure that empty captions (so unnecessary ones) are hidden\n\t * and then visible when the image is selected.\n\t *\n\t * @private\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} viewWriter\n\t * @returns {Boolean} Returns `true` when the view is updated.\n\t */\n    _updateCaptionVisibility(viewWriter) {\n        const mapper = this.editor.editing.mapper;\n        const lastCaption = this._lastSelectedCaption;\n        let viewCaption;\n        // If whole image is selected.\n        const modelSelection = this.editor.model.document.selection;\n        const selectedElement = modelSelection.getSelectedElement();\n        if (selectedElement && selectedElement.is('image')) {\n            const modelCaption = getCaptionFromImage(selectedElement);\n            viewCaption = mapper.toViewElement(modelCaption);\n        }\n        // If selection is placed inside caption.\n        const position = modelSelection.getFirstPosition();\n        const modelCaption = getParentCaption(position.parent);\n        if (modelCaption) {\n            viewCaption = mapper.toViewElement(modelCaption);\n        }\n        // Is currently any caption selected?\n        if (viewCaption) {\n            // Was any caption selected before?\n            if (lastCaption) {\n                // Same caption as before?\n                if (lastCaption === viewCaption) {\n                    return showCaption(viewCaption, viewWriter);\n                } else {\n                    hideCaptionIfEmpty(lastCaption, viewWriter);\n                    this._lastSelectedCaption = viewCaption;\n                    return showCaption(viewCaption, viewWriter);\n                }\n            } else {\n                this._lastSelectedCaption = viewCaption;\n                return showCaption(viewCaption, viewWriter);\n            }\n        } else {\n            // Was any caption selected before?\n            if (lastCaption) {\n                const viewModified = hideCaptionIfEmpty(lastCaption, viewWriter);\n                this._lastSelectedCaption = null;\n                return viewModified;\n            } else {\n                return false;\n            }\n        }\n    }\n    /**\n\t * Returns a converter that fixes caption visibility during the model-to-view conversion.\n\t * Checks if the changed node is placed inside the caption element and fixes its visibility in the view.\n\t *\n\t * @private\n\t * @param {Function} nodeFinder\n\t * @returns {Function}\n\t */\n    _fixCaptionVisibility(nodeFinder) {\n        return (evt, data, conversionApi) => {\n            const node = nodeFinder(data);\n            const modelCaption = getParentCaption(node);\n            const mapper = this.editor.editing.mapper;\n            const viewWriter = conversionApi.writer;\n            if (modelCaption) {\n                const viewCaption = mapper.toViewElement(modelCaption);\n                if (viewCaption) {\n                    if (modelCaption.childCount) {\n                        viewWriter.removeClass('ck-hidden', viewCaption);\n                    } else {\n                        viewWriter.addClass('ck-hidden', viewCaption);\n                    }\n                }\n            }\n        };\n    }\n    /**\n\t * Checks whether the data inserted to the model document have an image element that has no caption element inside it.\n\t * If there is none, it adds it to the image element.\n\t *\n\t * @private\n\t * @param {module:engine/model/writer~Writer} writer The writer to make changes with.\n\t * @returns {Boolean} `true` if any change was applied, `false` otherwise.\n\t */\n    _insertMissingModelCaptionElement(writer) {\n        const model = this.editor.model;\n        const changes = model.document.differ.getChanges();\n        const imagesWithoutCaption = [];\n        for (const entry of changes) {\n            if (entry.type == 'insert' && entry.name != '$text') {\n                const item = entry.position.nodeAfter;\n                if (item.is('image') && !getCaptionFromImage(item)) {\n                    imagesWithoutCaption.push(item);\n                }\n                // Check elements with children for nested images.\n                if (!item.is('image') && item.childCount) {\n                    for (const nestedItem of model.createRangeIn(item).getItems()) {\n                        if (nestedItem.is('image') && !getCaptionFromImage(nestedItem)) {\n                            imagesWithoutCaption.push(nestedItem);\n                        }\n                    }\n                }\n            }\n        }\n        for (const image of imagesWithoutCaption) {\n            writer.appendElement('caption', image);\n        }\n        return !!imagesWithoutCaption.length;\n    }\n}\n// Creates a converter that converts image caption model element to view element.\n//\n// @private\n// @param {Function} elementCreator\n// @param {Boolean} [hide=true] When set to `false` view element will not be inserted when it's empty.\n// @returns {Function}\nfunction captionModelToView(elementCreator, hide = true) {\n    return (evt, data, conversionApi) => {\n        const captionElement = data.item;\n        // Return if element shouldn't be present when empty.\n        if (!captionElement.childCount && !hide) {\n            return;\n        }\n        if (isImage(captionElement.parent)) {\n            if (!conversionApi.consumable.consume(data.item, 'insert')) {\n                return;\n            }\n            const viewImage = conversionApi.mapper.toViewElement(data.range.start.parent);\n            const viewCaption = elementCreator(conversionApi.writer);\n            const viewWriter = conversionApi.writer;\n            // Hide if empty.\n            if (!captionElement.childCount) {\n                viewWriter.addClass('ck-hidden', viewCaption);\n            }\n            insertViewCaptionAndBind(viewCaption, data.item, viewImage, conversionApi);\n        }\n    };\n}\n// Inserts `viewCaption` at the end of `viewImage` and binds it to `modelCaption`.\n//\n// @private\n// @param {module:engine/view/containerelement~ContainerElement} viewCaption\n// @param {module:engine/model/element~Element} modelCaption\n// @param {module:engine/view/containerelement~ContainerElement} viewImage\n// @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi\nfunction insertViewCaptionAndBind(viewCaption, modelCaption, viewImage, conversionApi) {\n    const viewPosition = conversionApi.writer.createPositionAt(viewImage, 'end');\n    conversionApi.writer.insert(viewPosition, viewCaption);\n    conversionApi.mapper.bindElements(modelCaption, viewCaption);\n}\n// Checks if the provided node or one of its ancestors is a caption element, and returns it.\n//\n// @private\n// @param {module:engine/model/node~Node} node\n// @returns {module:engine/model/element~Element|null}\nfunction getParentCaption(node) {\n    const ancestors = node.getAncestors({ includeSelf: true });\n    const caption = ancestors.find(ancestor => ancestor.name == 'caption');\n    if (caption && caption.parent && caption.parent.name == 'image') {\n        return caption;\n    }\n    return null;\n}\n// Hides a given caption in the view if it is empty.\n//\n// @private\n// @param {module:engine/view/containerelement~ContainerElement} caption\n// @param {module:engine/view/downcastwriter~DowncastWriter} viewWriter\n// @returns {Boolean} Returns `true` if the view was modified.\nfunction hideCaptionIfEmpty(caption, viewWriter) {\n    if (!caption.childCount && !caption.hasClass('ck-hidden')) {\n        viewWriter.addClass('ck-hidden', caption);\n        return true;\n    }\n    return false;\n}\n// Shows the caption.\n//\n// @private\n// @param {module:engine/view/containerelement~ContainerElement} caption\n// @param {module:engine/view/downcastwriter~DowncastWriter} viewWriter\n// @returns {Boolean} Returns `true` if the view was modified.\nfunction showCaption(caption, viewWriter) {\n    if (caption.hasClass('ck-hidden')) {\n        viewWriter.removeClass('ck-hidden', caption);\n        return true;\n    }\n    return false;\n}","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imagestyle/imagestylecommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { isImage } from '../image/utils';\n\n/**\n * The image style command. It is used to apply different image styles.\n *\n * @extends module:core/command~Command\n */\nexport default class ImageStyleCommand extends Command {\n\t/**\n\t * Creates an instance of the image style command. Each command instance is handling one style.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor The editor instance.\n\t * @param {Array.<module:image/imagestyle/imagestyleediting~ImageStyleFormat>} styles The styles that this command supports.\n\t */\n\tconstructor( editor, styles ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The name of the default style, if it is present. If there is no default style, it defaults to `false`.\n\t\t *\n\t\t * @readonly\n\t\t * @type {Boolean|String}\n\t\t */\n\t\tthis.defaultStyle = false;\n\n\t\t/**\n\t\t * A style handled by this command.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Array.<module:image/imagestyle/imagestyleediting~ImageStyleFormat>} #styles\n\t\t */\n\t\tthis.styles = styles.reduce( ( styles, style ) => {\n\t\t\tstyles[ style.name ] = style;\n\n\t\t\tif ( style.isDefault ) {\n\t\t\t\tthis.defaultStyle = style.name;\n\t\t\t}\n\n\t\t\treturn styles;\n\t\t}, {} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst element = this.editor.model.document.selection.getSelectedElement();\n\n\t\tthis.isEnabled = isImage( element );\n\n\t\tif ( !element ) {\n\t\t\tthis.value = false;\n\t\t} else if ( element.hasAttribute( 'imageStyle' ) ) {\n\t\t\tconst attributeValue = element.getAttribute( 'imageStyle' );\n\t\t\tthis.value = this.styles[ attributeValue ] ? attributeValue : false;\n\t\t} else {\n\t\t\tthis.value = this.defaultStyle;\n\t\t}\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t *\t\teditor.execute( 'imageStyle', { value: 'side' } );\n\t *\n\t * @param {Object} options\n\t * @param {String} options.value The name of the style (based on the\n\t * {@link module:image/image~ImageConfig#styles `image.styles`} configuration option).\n\t * @fires execute\n\t */\n\texecute( options ) {\n\t\tconst styleName = options.value;\n\n\t\tconst model = this.editor.model;\n\t\tconst imageElement = model.document.selection.getSelectedElement();\n\n\t\tmodel.change( writer => {\n\t\t\t// Default style means that there is no `imageStyle` attribute in the model.\n\t\t\t// https://github.com/ckeditor/ckeditor5-image/issues/147\n\t\t\tif ( this.styles[ styleName ].isDefault ) {\n\t\t\t\twriter.removeAttribute( 'imageStyle', imageElement );\n\t\t\t} else {\n\t\t\t\twriter.setAttribute( 'imageStyle', styleName, imageElement );\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n\n/**\n * @module image/imagestyle/converters\n */\n\n/**\n * Returns a converter for the `imageStyle` attribute. It can be used for adding, changing and removing the attribute.\n *\n * @param {Object} styles An object containing available styles. See {@link module:image/imagestyle/imagestyleediting~ImageStyleFormat}\n * for more details.\n * @returns {Function} A model-to-view attribute converter.\n */\nexport function modelToViewStyleAttribute( styles ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\tif ( !conversionApi.consumable.consume( data.item, evt.name ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Check if there is class name associated with given value.\n\t\tconst newStyle = getStyleByName( data.attributeNewValue, styles );\n\t\tconst oldStyle = getStyleByName( data.attributeOldValue, styles );\n\n\t\tconst viewElement = conversionApi.mapper.toViewElement( data.item );\n\t\tconst viewWriter = conversionApi.writer;\n\n\t\tif ( oldStyle ) {\n\t\t\tviewWriter.removeClass( oldStyle.className, viewElement );\n\t\t}\n\n\t\tif ( newStyle ) {\n\t\t\tviewWriter.addClass( newStyle.className, viewElement );\n\t\t}\n\t};\n}\n\n/**\n * Returns a view-to-model converter converting image CSS classes to a proper value in the model.\n *\n * @param {Array.<module:image/imagestyle/imagestyleediting~ImageStyleFormat>} styles The styles for which the converter is created.\n * @returns {Function} A view-to-model converter.\n */\nexport function viewToModelStyleAttribute( styles ) {\n\t// Convert only non–default styles.\n\tconst filteredStyles = styles.filter( style => !style.isDefault );\n\n\treturn ( evt, data, conversionApi ) => {\n\t\tif ( !data.modelRange ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewFigureElement = data.viewItem;\n\t\tconst modelImageElement = first( data.modelRange.getItems() );\n\n\t\t// Check if `imageStyle` attribute is allowed for current element.\n\t\tif ( !conversionApi.schema.checkAttribute( modelImageElement, 'imageStyle' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Convert style one by one.\n\t\tfor ( const style of filteredStyles ) {\n\t\t\t// Try to consume class corresponding with style.\n\t\t\tif ( conversionApi.consumable.consume( viewFigureElement, { classes: style.className } ) ) {\n\t\t\t\t// And convert this style to model attribute.\n\t\t\t\tconversionApi.writer.setAttribute( 'imageStyle', style.name, modelImageElement );\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Returns the style with a given `name` from an array of styles.\n//\n// @param {String} name\n// @param {Array.<module:image/imagestyle/imagestyleediting~ImageStyleFormat> } styles\n// @returns {module:image/imagestyle/imagestyleediting~ImageStyleFormat|undefined}\nfunction getStyleByName( name, styles ) {\n\tfor ( const style of styles ) {\n\t\tif ( style.name === name ) {\n\t\t\treturn style;\n\t\t}\n\t}\n}\n","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M2 4.5V3h16v1.5zm2.5 3V12h11V7.5h-11zM4.061 6H15.94c.586 0 1.061.407 1.061.91v5.68c0 .503-.475.91-1.061.91H4.06c-.585 0-1.06-.407-1.06-.91V6.91C3 6.406 3.475 6 4.061 6zM2 16.5V15h16v1.5z\\\"/></svg>\"","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" clip-rule=\\\"evenodd\\\" stroke-linejoin=\\\"round\\\" stroke-miterlimit=\\\"1.414\\\"><path d=\\\"M18 4.5V3H2v1.5h16zm0 3V6h-5.674v1.5H18zm0 3V9h-5.674v1.5H18zm0 3V12h-5.674v1.5H18zm-8.5-6V12h-6V7.5h6zm.818-1.5H2.682C2.305 6 2 6.407 2 6.91v5.68c0 .503.305.91.682.91h7.636c.377 0 .682-.407.682-.91V6.91c0-.503-.305-.91-.682-.91zM18 16.5V15H2v1.5h16z\\\"/></svg>\"","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M2 4.5V3h16v1.5zm4.5 3V12h7V7.5h-7zM5.758 6h8.484c.419 0 .758.407.758.91v5.681c0 .502-.34.909-.758.909H5.758c-.419 0-.758-.407-.758-.91V6.91c0-.503.34-.91.758-.91zM2 16.5V15h16v1.5z\\\"/></svg>\"","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M2 4.5V3h16v1.5zm0 3V6h5.674v1.5zm0 3V9h5.674v1.5zm0 3V12h5.674v1.5zm8.5-6V12h6V7.5h-6zM9.682 6h7.636c.377 0 .682.407.682.91v5.68c0 .503-.305.91-.682.91H9.682c-.377 0-.682-.407-.682-.91V6.91c0-.503.305-.91.682-.91zM2 16.5V15h16v1.5z\\\"/></svg>\"","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imagestyle/utils\n */\n\n/* globals console */\n\nimport fullWidthIcon from '@ckeditor/ckeditor5-core/theme/icons/object-full-width.svg';\nimport leftIcon from '@ckeditor/ckeditor5-core/theme/icons/object-left.svg';\nimport centerIcon from '@ckeditor/ckeditor5-core/theme/icons/object-center.svg';\nimport rightIcon from '@ckeditor/ckeditor5-core/theme/icons/object-right.svg';\nimport { attachLinkToDocumentation } from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Default image styles provided by the plugin that can be referred in the\n * {@link module:image/image~ImageConfig#styles} configuration.\n *\n * Among them, 2 default semantic content styles are available:\n *\n * * `full` is a full–width image without any CSS class,\n * * `side` is a side image styled with the `image-style-side` CSS class.\n *\n * There are also 3 styles focused on formatting:\n *\n * * `alignLeft` aligns the image to the left using the `image-style-align-left` class,\n * * `alignCenter` centers the image using the `image-style-align-center` class,\n * * `alignRight` aligns the image to the right using the `image-style-align-right` class,\n *\n * @member {Object.<String,Object>}\n */\nconst defaultStyles = {\n\t// This option is equal to the situation when no style is applied.\n\tfull: {\n\t\tname: 'full',\n\t\ttitle: 'Full size image',\n\t\ticon: fullWidthIcon,\n\t\tisDefault: true\n\t},\n\n\t// This represents a side image.\n\tside: {\n\t\tname: 'side',\n\t\ttitle: 'Side image',\n\t\ticon: rightIcon,\n\t\tclassName: 'image-style-side'\n\t},\n\n\t// This style represents an image aligned to the left.\n\talignLeft: {\n\t\tname: 'alignLeft',\n\t\ttitle: 'Left aligned image',\n\t\ticon: leftIcon,\n\t\tclassName: 'image-style-align-left'\n\t},\n\n\t// This style represents a centered image.\n\talignCenter: {\n\t\tname: 'alignCenter',\n\t\ttitle: 'Centered image',\n\t\ticon: centerIcon,\n\t\tclassName: 'image-style-align-center'\n\t},\n\n\t// This style represents an image aligned to the right.\n\talignRight: {\n\t\tname: 'alignRight',\n\t\ttitle: 'Right aligned image',\n\t\ticon: rightIcon,\n\t\tclassName: 'image-style-align-right'\n\t}\n};\n\n/**\n * Default image style icons provided by the plugin that can be referred in the\n * {@link module:image/image~ImageConfig#styles} configuration.\n *\n * There are 4 icons available: `'full'`, `'left'`, `'center'` and `'right'`.\n *\n * @member {Object.<String, String>}\n */\nconst defaultIcons = {\n\tfull: fullWidthIcon,\n\tleft: leftIcon,\n\tright: rightIcon,\n\tcenter: centerIcon\n};\n\n/**\n * Returns a {@link module:image/image~ImageConfig#styles} array with items normalized in the\n * {@link module:image/imagestyle/imagestyleediting~ImageStyleFormat} format and a complete `icon` markup for each style.\n *\n * @returns {Array.<module:image/imagestyle/imagestyleediting~ImageStyleFormat>}\n */\nexport function normalizeImageStyles( configuredStyles = [] ) {\n\treturn configuredStyles.map( _normalizeStyle );\n}\n\n// Normalizes an image style provided in the {@link module:image/image~ImageConfig#styles}\n// and returns it in a {@link module:image/imagestyle/imagestyleediting~ImageStyleFormat}.\n//\n// @param {Object} style\n// @returns {@link module:image/imagestyle/imagestyleediting~ImageStyleFormat}\nfunction _normalizeStyle( style ) {\n\t// Just the name of the style has been passed.\n\tif ( typeof style == 'string' ) {\n\t\tconst styleName = style;\n\n\t\t// If it's one of the defaults, just use it.\n\t\tif ( defaultStyles[ styleName ] ) {\n\t\t\t// Clone the style to avoid overriding defaults.\n\t\t\tstyle = Object.assign( {}, defaultStyles[ styleName ] );\n\t\t}\n\t\t// If it's just a name but none of the defaults, warn because probably it's a mistake.\n\t\telse {\n\t\t\tconsole.warn(\n\t\t\t\tattachLinkToDocumentation( 'image-style-not-found: There is no such image style of given name.' ),\n\t\t\t\t{ name: styleName }\n\t\t\t);\n\n\t\t\t// Normalize the style anyway to prevent errors.\n\t\t\tstyle = {\n\t\t\t\tname: styleName\n\t\t\t};\n\t\t}\n\t}\n\t// If an object style has been passed and if the name matches one of the defaults,\n\t// extend it with defaults – the user wants to customize a default style.\n\t// Note: Don't override the user–defined style object, clone it instead.\n\telse if ( defaultStyles[ style.name ] ) {\n\t\tconst defaultStyle = defaultStyles[ style.name ];\n\t\tconst extendedStyle = Object.assign( {}, style );\n\n\t\tfor ( const prop in defaultStyle ) {\n\t\t\tif ( !style.hasOwnProperty( prop ) ) {\n\t\t\t\textendedStyle[ prop ] = defaultStyle[ prop ];\n\t\t\t}\n\t\t}\n\n\t\tstyle = extendedStyle;\n\t}\n\n\t// If an icon is defined as a string and correspond with a name\n\t// in default icons, use the default icon provided by the plugin.\n\tif ( typeof style.icon == 'string' && defaultIcons[ style.icon ] ) {\n\t\tstyle.icon = defaultIcons[ style.icon ];\n\t}\n\n\treturn style;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imagestyle/imagestyleediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ImageStyleCommand from './imagestylecommand';\nimport { viewToModelStyleAttribute, modelToViewStyleAttribute } from './converters';\nimport { normalizeImageStyles } from './utils';\n\n/**\n * The image style engine plugin. It sets the default configuration, creates converters and registers\n * {@link module:image/imagestyle/imagestylecommand~ImageStyleCommand ImageStyleCommand}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageStyleEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ImageStyleEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst schema = editor.model.schema;\n\t\tconst data = editor.data;\n\t\tconst editing = editor.editing;\n\n\t\t// Define default configuration.\n\t\teditor.config.define( 'image.styles', [ 'full', 'side' ] );\n\n\t\t// Get configuration.\n\t\tconst styles = normalizeImageStyles( editor.config.get( 'image.styles' ) );\n\n\t\t// Allow imageStyle attribute in image.\n\t\t// We could call it 'style' but https://github.com/ckeditor/ckeditor5-engine/issues/559.\n\t\tschema.extend( 'image', { allowAttributes: 'imageStyle' } );\n\n\t\t// Converters for imageStyle attribute from model to view.\n\t\tconst modelToViewConverter = modelToViewStyleAttribute( styles );\n\t\tediting.downcastDispatcher.on( 'attribute:imageStyle:image', modelToViewConverter );\n\t\tdata.downcastDispatcher.on( 'attribute:imageStyle:image', modelToViewConverter );\n\n\t\t// Converter for figure element from view to model.\n\t\tdata.upcastDispatcher.on( 'element:figure', viewToModelStyleAttribute( styles ), { priority: 'low' } );\n\n\t\t// Register imageStyle command.\n\t\teditor.commands.add( 'imageStyle', new ImageStyleCommand( editor, styles ) );\n\t}\n}\n\n/**\n * The image style format descriptor.\n *\n *\t\timport fullSizeIcon from 'path/to/icon.svg';\n *\n *\t\tconst imageStyleFormat = {\n *\t\t\tname: 'fullSize',\n *\t\t\ticon: fullSizeIcon,\n *\t\t\ttitle: 'Full size image',\n *\t\t\tclassName: 'image-full-size'\n *\t\t}\n *\n * @typedef {Object} module:image/imagestyle/imagestyleediting~ImageStyleFormat\n *\n * @property {String} name The unique name of the style. It will be used to:\n *\n * * Store the chosen style in the model by setting the `imageStyle` attribute of the `<image>` element.\n * * As a value of the {@link module:image/imagestyle/imagestylecommand~ImageStyleCommand#execute `imageStyle` command},\n * * when registering a button for each of the styles (`'imageStyle:{name}'`) in the\n * {@link module:ui/componentfactory~ComponentFactory UI components factory} (this functionality is provided by the\n * {@link module:image/imagestyle/imagestyleui~ImageStyleUI} plugin).\n *\n * @property {Boolean} [isDefault] When set, the style will be used as the default one.\n * A default style does not apply any CSS class to the view element.\n *\n * @property {String} icon One of the following to be used when creating the style's button:\n *\n * * An SVG icon source (as an XML string).\n * * One of {@link module:image/imagestyle/utils~defaultIcons} to use a default icon provided by the plugin.\n *\n * @property {String} title The style's title.\n *\n * @property {String} className The CSS class used to represent the style in the view.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module image/imagestyle/imagestyleui\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport { normalizeImageStyles } from './utils';\nimport '../../theme/imagestyle.css';\n/**\n * The image style UI plugin.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageStyleUI extends Plugin {\n    /**\n\t * @inheritDoc\n\t */\n    static get pluginName() {\n        return 'ImageStyleUI';\n    }\n    /**\n\t * Returns the default localized style titles provided by the plugin.\n\t *\n\t * The following localized titles corresponding with\n\t * {@link module:image/imagestyle/utils~defaultStyles} are available:\n\t *\n\t * * `'Full size image'`,\n\t * * `'Side image'`,\n\t * * `'Left aligned image'`,\n\t * * `'Centered image'`,\n\t * * `'Right aligned image'`\n\t *\n\t * @returns {Object.<String,String>}\n\t */\n    get localizedDefaultStylesTitles() {\n        const t = this.editor.t;\n        return {\n            'Full size image': t('l'),\n            'Side image': t('m'),\n            'Left aligned image': t('n'),\n            'Centered image': t('o'),\n            'Right aligned image': t('p')\n        };\n    }\n    /**\n\t * @inheritDoc\n\t */\n    init() {\n        const editor = this.editor;\n        const configuredStyles = editor.config.get('image.styles');\n        const translatedStyles = translateStyles(normalizeImageStyles(configuredStyles), this.localizedDefaultStylesTitles);\n        for (const style of translatedStyles) {\n            this._createButton(style);\n        }\n    }\n    /**\n\t * Creates a button for each style and stores it in the editor {@link module:ui/componentfactory~ComponentFactory ComponentFactory}.\n\t *\n\t * @private\n\t * @param {module:image/imagestyle/imagestyleediting~ImageStyleFormat} style\n\t */\n    _createButton(style) {\n        const editor = this.editor;\n        const componentName = `imageStyle:${ style.name }`;\n        editor.ui.componentFactory.add(componentName, locale => {\n            const command = editor.commands.get('imageStyle');\n            const view = new ButtonView(locale);\n            view.set({\n                label: style.title,\n                icon: style.icon,\n                tooltip: true,\n                isToggleable: true\n            });\n            view.bind('isEnabled').to(command, 'isEnabled');\n            view.bind('isOn').to(command, 'value', value => value === style.name);\n            this.listenTo(view, 'execute', () => {\n                editor.execute('imageStyle', { value: style.name });\n                editor.editing.view.focus();\n            });\n            return view;\n        });\n    }\n}\n/**\n * Returns the translated `title` from the passed styles array.\n *\n * @param {Array.<module:image/imagestyle/imagestyleediting~ImageStyleFormat>} styles\n * @param titles\n * @returns {Array.<module:image/imagestyle/imagestyleediting~ImageStyleFormat>}\n */\nfunction translateStyles(styles, titles) {\n    for (const style of styles) {\n        // Localize the titles of the styles, if a title corresponds with\n        // a localized default provided by the plugin.\n        if (titles[style.title]) {\n            style.title = titles[style.title];\n        }\n    }\n    return styles;\n}","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module widget/widgettoolbarrepository\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ContextualBalloon from '@ckeditor/ckeditor5-ui/src/panel/balloon/contextualballoon';\nimport ToolbarView from '@ckeditor/ckeditor5-ui/src/toolbar/toolbarview';\nimport BalloonPanelView from '@ckeditor/ckeditor5-ui/src/panel/balloon/balloonpanelview';\nimport { isWidget } from './utils';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Widget toolbar repository plugin. A central point for registering widget toolbars. This plugin handles the whole\n * toolbar rendering process and exposes a concise API.\n *\n * To add a toolbar for your widget use the {@link ~WidgetToolbarRepository#register `WidgetToolbarRepository#register()`} method.\n *\n * The following example comes from the {@link module:image/imagetoolbar~ImageToolbar} plugin:\n *\n * \t\tclass ImageToolbar extends Plugin {\n *\t\t\tstatic get requires() {\n *\t\t\t\treturn [ WidgetToolbarRepository ];\n *\t\t\t}\n *\n *\t\t\tafterInit() {\n *\t\t\t\tconst editor = this.editor;\n *\t\t\t\tconst widgetToolbarRepository = editor.plugins.get( WidgetToolbarRepository );\n *\n *\t\t\t\twidgetToolbarRepository.register( 'image', {\n *\t\t\t\t\titems: editor.config.get( 'image.toolbar' ),\n *\t\t\t\t\tgetRelatedElement: getSelectedImageWidget\n *\t\t\t\t} );\n *\t\t\t}\n *\t\t}\n */\nexport default class WidgetToolbarRepository extends Plugin {\n    /**\n\t * @inheritDoc\n\t */\n    static get requires() {\n        return [ContextualBalloon];\n    }\n    /**\n\t * @inheritDoc\n\t */\n    static get pluginName() {\n        return 'WidgetToolbarRepository';\n    }\n    /**\n\t * @inheritDoc\n\t */\n    init() {\n        const editor = this.editor;\n        // Disables the default balloon toolbar for all widgets.\n        if (editor.plugins.has('BalloonToolbar')) {\n            const balloonToolbar = editor.plugins.get('BalloonToolbar');\n            this.listenTo(balloonToolbar, 'show', evt => {\n                if (isWidgetSelected(editor.editing.view.document.selection)) {\n                    evt.stop();\n                }\n            }, { priority: 'high' });\n        }\n        /**\n\t\t * A map of toolbar definitions.\n\t\t *\n\t\t * @protected\n\t\t * @member {Map.<String,module:widget/widgettoolbarrepository~WidgetRepositoryToolbarDefinition>} #_toolbarDefinitions\n\t\t */\n        this._toolbarDefinitions = new Map();\n        /**\n\t\t * @private\n\t\t */\n        this._balloon = this.editor.plugins.get('ContextualBalloon');\n        this.on('change:isEnabled', () => {\n            this._updateToolbarsVisibility();\n        });\n        this.listenTo(editor.ui, 'update', () => {\n            this._updateToolbarsVisibility();\n        });\n        // UI#update is not fired after focus is back in editor, we need to check if balloon panel should be visible.\n        this.listenTo(editor.ui.focusTracker, 'change:isFocused', () => {\n            this._updateToolbarsVisibility();\n        }, { priority: 'low' });\n    }\n    destroy() {\n        super.destroy();\n        for (const toolbarConfig of this._toolbarDefinitions.values()) {\n            toolbarConfig.view.destroy();\n        }\n    }\n    /**\n\t * Registers toolbar in the WidgetToolbarRepository. It renders it in the `ContextualBalloon` based on the value of the invoked\n\t * `getRelatedElement` function. Toolbar items are gathered from `items` array.\n\t * The balloon's CSS class is by default `ck-toolbar-container` and may be override with the `balloonClassName` option.\n\t *\n\t * Note: This method should be called in the {@link module:core/plugin~PluginInterface#afterInit `Plugin#afterInit()`}\n\t * callback (or later) to make sure that the given toolbar items were already registered by other plugins.\n\t *\n\t * @param {String} toolbarId An id for the toolbar. Used to\n\t * @param {Object} options\n\t * @param {String} [options.ariaLabel] Label used by assistive technologies to describe this toolbar element.\n\t * @param {Array.<String>} options.items Array of toolbar items.\n\t * @param {Function} options.getRelatedElement Callback which returns an element the toolbar should be attached to.\n\t * @param {String} [options.balloonClassName='ck-toolbar-container'] CSS class for the widget balloon.\n\t */\n    register(toolbarId, {ariaLabel, items, getRelatedElement, balloonClassName = 'ck-toolbar-container'}) {\n        const editor = this.editor;\n        const t = editor.t;\n        const toolbarView = new ToolbarView(editor.locale);\n        toolbarView.ariaLabel = ariaLabel || t('ao');\n        if (this._toolbarDefinitions.has(toolbarId)) {\n            /**\n\t\t\t * Toolbar with the given id was already added.\n\t\t\t *\n\t\t\t * @error widget-toolbar-duplicated\n\t\t\t * @param toolbarId Toolbar id.\n\t\t\t */\n            throw new CKEditorError('widget-toolbar-duplicated: Toolbar with the given id was already added.', this, { toolbarId });\n        }\n        toolbarView.fillFromConfig(items, editor.ui.componentFactory);\n        this._toolbarDefinitions.set(toolbarId, {\n            view: toolbarView,\n            getRelatedElement,\n            balloonClassName\n        });\n    }\n    /**\n\t * Iterates over stored toolbars and makes them visible or hidden.\n\t *\n\t * @private\n\t */\n    _updateToolbarsVisibility() {\n        let maxRelatedElementDepth = 0;\n        let deepestRelatedElement = null;\n        let deepestToolbarDefinition = null;\n        for (const definition of this._toolbarDefinitions.values()) {\n            const relatedElement = definition.getRelatedElement(this.editor.editing.view.document.selection);\n            if (!this.isEnabled || !relatedElement) {\n                if (this._isToolbarInBalloon(definition)) {\n                    this._hideToolbar(definition);\n                }\n            } else if (!this.editor.ui.focusTracker.isFocused) {\n                if (this._isToolbarVisible(definition)) {\n                    this._hideToolbar(definition);\n                }\n            } else {\n                const relatedElementDepth = relatedElement.getAncestors().length;\n                // Many toolbars can express willingness to be displayed but they do not know about\n                // each other. Figure out which toolbar is deepest in the view tree to decide which\n                // should be displayed. For instance, if a selected image is inside a table cell, display\n                // the ImageToolbar rather than the TableToolbar (#60).\n                if (relatedElementDepth > maxRelatedElementDepth) {\n                    maxRelatedElementDepth = relatedElementDepth;\n                    deepestRelatedElement = relatedElement;\n                    deepestToolbarDefinition = definition;\n                }\n            }\n        }\n        if (deepestToolbarDefinition) {\n            this._showToolbar(deepestToolbarDefinition, deepestRelatedElement);\n        }\n    }\n    /**\n\t * Hides the given toolbar.\n\t *\n\t * @private\n\t * @param {module:widget/widgettoolbarrepository~WidgetRepositoryToolbarDefinition} toolbarDefinition\n\t */\n    _hideToolbar(toolbarDefinition) {\n        this._balloon.remove(toolbarDefinition.view);\n        this.stopListening(this._balloon, 'change:visibleView');\n    }\n    /**\n\t * Shows up the toolbar if the toolbar is not visible.\n\t * Otherwise, repositions the toolbar's balloon when toolbar's view is the most top view in balloon stack.\n\t *\n\t * It might happen here that the toolbar's view is under another view. Then do nothing as the other toolbar view\n\t * should be still visible after the {@link module:core/editor/editorui~EditorUI#event:update}.\n\t *\n\t * @private\n\t * @param {module:widget/widgettoolbarrepository~WidgetRepositoryToolbarDefinition} toolbarDefinition\n\t * @param {module:engine/view/element~Element} relatedElement\n\t */\n    _showToolbar(toolbarDefinition, relatedElement) {\n        if (this._isToolbarVisible(toolbarDefinition)) {\n            repositionContextualBalloon(this.editor, relatedElement);\n        } else if (!this._isToolbarInBalloon(toolbarDefinition)) {\n            this._balloon.add({\n                view: toolbarDefinition.view,\n                position: getBalloonPositionData(this.editor, relatedElement),\n                balloonClassName: toolbarDefinition.balloonClassName\n            });\n            // Update toolbar position each time stack with toolbar view is switched to visible.\n            // This is in a case target element has changed when toolbar was in invisible stack\n            // e.g. target image was wrapped by a block quote.\n            // See https://github.com/ckeditor/ckeditor5-widget/issues/92.\n            this.listenTo(this._balloon, 'change:visibleView', () => {\n                for (const definition of this._toolbarDefinitions.values()) {\n                    if (this._isToolbarVisible(definition)) {\n                        const relatedElement = definition.getRelatedElement(this.editor.editing.view.document.selection);\n                        repositionContextualBalloon(this.editor, relatedElement);\n                    }\n                }\n            });\n        }\n    }\n    /**\n\t * @private\n\t * @param {Object} toolbar\n\t * @returns {Boolean}\n\t */\n    _isToolbarVisible(toolbar) {\n        return this._balloon.visibleView === toolbar.view;\n    }\n    /**\n\t * @private\n\t * @param {Object} toolbar\n\t * @returns {Boolean}\n\t */\n    _isToolbarInBalloon(toolbar) {\n        return this._balloon.hasView(toolbar.view);\n    }\n}\nfunction repositionContextualBalloon(editor, relatedElement) {\n    const balloon = editor.plugins.get('ContextualBalloon');\n    const position = getBalloonPositionData(editor, relatedElement);\n    balloon.updatePosition(position);\n}\nfunction getBalloonPositionData(editor, relatedElement) {\n    const editingView = editor.editing.view;\n    const defaultPositions = BalloonPanelView.defaultPositions;\n    return {\n        target: editingView.domConverter.mapViewToDom(relatedElement),\n        positions: [\n            defaultPositions.northArrowSouth,\n            defaultPositions.northArrowSouthWest,\n            defaultPositions.northArrowSouthEast,\n            defaultPositions.southArrowNorth,\n            defaultPositions.southArrowNorthWest,\n            defaultPositions.southArrowNorthEast\n        ]\n    };\n}\nfunction isWidgetSelected(selection) {\n    const viewElement = selection.getSelectedElement();\n    return !!(viewElement && isWidget(viewElement));\n}    /**\n * The toolbar definition object used by the toolbar repository to manage toolbars.\n * It contains information necessary to display the toolbar in the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon} and\n * update it during its life (display) cycle.\n *\n * @typedef {Object} module:widget/widgettoolbarrepository~WidgetRepositoryToolbarDefinition\n *\n * @property {module:ui/view~View} view The UI view of the toolbar.\n * @property {Function} getRelatedElement A function that returns an engine {@link module:engine/view/view~View}\n * element the toolbar is to be attached to. For instance, an image widget or a table widget (or `null` when\n * there is no such element). The function accepts an instance of {@link module:engine/view/selection~Selection}.\n * @property {String} balloonClassName CSS class for the widget balloon when a toolbar is displayed.\n */","\n/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/clickobserver\n */\n\nimport DomEventObserver from './domeventobserver';\n\n/**\n * {@link module:engine/view/document~Document#event:click Click} event observer.\n *\n * Note that this observer is not available by default. To make it available it needs to be added to\n * {@link module:engine/view/view~View view controller}\n * by a {@link module:engine/view/view~View#addObserver} method.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nexport default class ClickObserver extends DomEventObserver {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\tthis.domEventType = 'click';\n\t}\n\n\tonDomEvent( domEvent ) {\n\t\tthis.fire( domEvent.type, domEvent );\n\t}\n}\n\n/**\n * Fired when one of the editables has been clicked.\n *\n * Introduced by {@link module:engine/view/observer/clickobserver~ClickObserver}.\n *\n * Note that this event is not available by default. To make it available\n * {@link module:engine/view/observer/clickobserver~ClickObserver} needs to be added\n * to {@link module:engine/view/view~View} by a {@link module:engine/view/view~View#addObserver} method.\n *\n * @see module:engine/view/observer/clickobserver~ClickObserver\n * @event module:engine/view/document~Document#event:click\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module link/ui/linkformview\n */\nimport View from '@ckeditor/ckeditor5-ui/src/view';\nimport ViewCollection from '@ckeditor/ckeditor5-ui/src/viewcollection';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport SwitchButtonView from '@ckeditor/ckeditor5-ui/src/button/switchbuttonview';\nimport LabeledInputView from '@ckeditor/ckeditor5-ui/src/labeledinput/labeledinputview';\nimport InputTextView from '@ckeditor/ckeditor5-ui/src/inputtext/inputtextview';\nimport submitHandler from '@ckeditor/ckeditor5-ui/src/bindings/submithandler';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport FocusCycler from '@ckeditor/ckeditor5-ui/src/focuscycler';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\nimport checkIcon from '@ckeditor/ckeditor5-core/theme/icons/check.svg';\nimport cancelIcon from '@ckeditor/ckeditor5-core/theme/icons/cancel.svg';\nimport '../../theme/linkform.css';\n/**\n * The link form view controller class.\n *\n * See {@link module:link/ui/linkformview~LinkFormView}.\n *\n * @extends module:ui/view~View\n */\nexport default class LinkFormView extends View {\n    /**\n\t * Creates an instance of the {@link module:link/ui/linkformview~LinkFormView} class.\n\t *\n\t * Also see {@link #render}.\n\t *\n\t * @param {module:utils/locale~Locale} [locale] The localization services instance.\n\t * @param {module:utils/collection~Collection} [manualDecorators] Reference to manual decorators in\n\t * {@link module:link/linkcommand~LinkCommand#manualDecorators}.\n\t */\n    constructor(locale, manualDecorators = []) {\n        super(locale);\n        const t = locale.t;\n        /**\n\t\t * Tracks information about DOM focus in the form.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n        this.focusTracker = new FocusTracker();\n        /**\n\t\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n        this.keystrokes = new KeystrokeHandler();\n        /**\n\t\t * The URL input view.\n\t\t *\n\t\t * @member {module:ui/labeledinput/labeledinputview~LabeledInputView}\n\t\t */\n        this.urlInputView = this._createUrlInput();\n        /**\n\t\t * The Save button view.\n\t\t *\n\t\t * @member {module:ui/button/buttonview~ButtonView}\n\t\t */\n        this.saveButtonView = this._createButton(t('bm'), checkIcon, 'ck-button-save');\n        this.saveButtonView.type = 'submit';\n        /**\n\t\t * The Cancel button view.\n\t\t *\n\t\t * @member {module:ui/button/buttonview~ButtonView}\n\t\t */\n        this.cancelButtonView = this._createButton(t('bn'), cancelIcon, 'ck-button-cancel', 'cancel');\n        /**\n\t\t * A collection of {@link module:ui/button/switchbuttonview~SwitchButtonView},\n\t\t * which corresponds to {@link module:link/linkcommand~LinkCommand#manualDecorators manual decorators}\n\t\t * configured in the editor.\n\t\t *\n\t\t * @private\n\t\t * @readonly\n\t\t * @type {module:ui/viewcollection~ViewCollection}\n\t\t */\n        this._manualDecoratorSwitches = this._createManualDecoratorSwitches(manualDecorators);\n        /**\n\t\t * A collection of child views in the form.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:ui/viewcollection~ViewCollection}\n\t\t */\n        this.children = this._createFormChildren(manualDecorators);\n        /**\n\t\t * A collection of views that can be focused in the form.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n        this._focusables = new ViewCollection();\n        /**\n\t\t * Helps cycling over {@link #_focusables} in the form.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/focuscycler~FocusCycler}\n\t\t */\n        this._focusCycler = new FocusCycler({\n            focusables: this._focusables,\n            focusTracker: this.focusTracker,\n            keystrokeHandler: this.keystrokes,\n            actions: {\n                // Navigate form fields backwards using the Shift + Tab keystroke.\n                focusPrevious: 'shift + tab',\n                // Navigate form fields forwards using the Tab key.\n                focusNext: 'tab'\n            }\n        });\n        const classList = [\n            'ck',\n            'ck-link-form'\n        ];\n        if (manualDecorators.length) {\n            classList.push('ck-link-form_layout-vertical');\n        }\n        this.setTemplate({\n            tag: 'form',\n            attributes: {\n                class: classList,\n                // https://github.com/ckeditor/ckeditor5-link/issues/90\n                tabindex: '-1'\n            },\n            children: this.children\n        });\n    }\n    /**\n\t * Obtains the state of the {@link module:ui/button/switchbuttonview~SwitchButtonView switch buttons} representing\n\t * {@link module:link/linkcommand~LinkCommand#manualDecorators manual link decorators}\n\t * in the {@link module:link/ui/linkformview~LinkFormView}.\n\t *\n\t * @returns {Object.<String,Boolean>} Key-value pairs, where the key is the name of the decorator and the value is\n\t * its state.\n\t */\n    getDecoratorSwitchesState() {\n        return Array.from(this._manualDecoratorSwitches).reduce((accumulator, switchButton) => {\n            accumulator[switchButton.name] = switchButton.isOn;\n            return accumulator;\n        }, {});\n    }\n    /**\n\t * @inheritDoc\n\t */\n    render() {\n        super.render();\n        submitHandler({ view: this });\n        const childViews = [\n            this.urlInputView,\n            ...this._manualDecoratorSwitches,\n            this.saveButtonView,\n            this.cancelButtonView\n        ];\n        childViews.forEach(v => {\n            // Register the view as focusable.\n            this._focusables.add(v);\n            // Register the view in the focus tracker.\n            this.focusTracker.add(v.element);\n        });\n        // Start listening for the keystrokes coming from #element.\n        this.keystrokes.listenTo(this.element);\n    }\n    /**\n\t * Focuses the fist {@link #_focusables} in the form.\n\t */\n    focus() {\n        this._focusCycler.focusFirst();\n    }\n    /**\n\t * Creates a labeled input view.\n\t *\n\t * @private\n\t * @returns {module:ui/labeledinput/labeledinputview~LabeledInputView} Labeled input view instance.\n\t */\n    _createUrlInput() {\n        const t = this.locale.t;\n        const labeledInput = new LabeledInputView(this.locale, InputTextView);\n        labeledInput.label = t('bo');\n        labeledInput.inputView.placeholder = 'https://example.com';\n        return labeledInput;\n    }\n    /**\n\t * Creates a button view.\n\t *\n\t * @private\n\t * @param {String} label The button label.\n\t * @param {String} icon The button icon.\n\t * @param {String} className The additional button CSS class name.\n\t * @param {String} [eventName] An event name that the `ButtonView#execute` event will be delegated to.\n\t * @returns {module:ui/button/buttonview~ButtonView} The button view instance.\n\t */\n    _createButton(label, icon, className, eventName) {\n        const button = new ButtonView(this.locale);\n        button.set({\n            label,\n            icon,\n            tooltip: true\n        });\n        button.extendTemplate({ attributes: { class: className } });\n        if (eventName) {\n            button.delegate('execute').to(this, eventName);\n        }\n        return button;\n    }\n    /**\n\t * Populates {@link module:ui/viewcollection~ViewCollection} of {@link module:ui/button/switchbuttonview~SwitchButtonView}\n\t * made based on {@link module:link/linkcommand~LinkCommand#manualDecorators}.\n\t *\n\t * @private\n\t * @param {module:utils/collection~Collection} manualDecorators A reference to the\n\t * collection of manual decorators stored in the link command.\n\t * @returns {module:ui/viewcollection~ViewCollection} of switch buttons.\n\t */\n    _createManualDecoratorSwitches(manualDecorators) {\n        const switches = this.createCollection();\n        for (const manualDecorator of manualDecorators) {\n            const switchButton = new SwitchButtonView(this.locale);\n            switchButton.set({\n                name: manualDecorator.id,\n                label: manualDecorator.label,\n                withText: true\n            });\n            switchButton.bind('isOn').to(manualDecorator, 'value');\n            switchButton.on('execute', () => {\n                manualDecorator.set('value', !switchButton.isOn);\n            });\n            switches.add(switchButton);\n        }\n        return switches;\n    }\n    /**\n\t * Populates the {@link #children} collection of the form.\n\t *\n\t * If {@link module:link/linkcommand~LinkCommand#manualDecorators manual decorators} are configured in the editor, it creates an\n\t * additional `View` wrapping all {@link #_manualDecoratorSwitches} switch buttons corresponding\n\t * to these decorators.\n\t *\n\t * @private\n\t * @param {module:utils/collection~Collection} manualDecorators A reference to\n\t * the collection of manual decorators stored in the link command.\n\t * @returns {module:ui/viewcollection~ViewCollection} The children of link form view.\n\t */\n    _createFormChildren(manualDecorators) {\n        const children = this.createCollection();\n        children.add(this.urlInputView);\n        if (manualDecorators.length) {\n            const additionalButtonsView = new View();\n            additionalButtonsView.setTemplate({\n                tag: 'ul',\n                children: this._manualDecoratorSwitches.map(switchButton => ({\n                    tag: 'li',\n                    children: [switchButton],\n                    attributes: {\n                        class: [\n                            'ck',\n                            'ck-list__item'\n                        ]\n                    }\n                })),\n                attributes: {\n                    class: [\n                        'ck',\n                        'ck-reset',\n                        'ck-list'\n                    ]\n                }\n            });\n            children.add(additionalButtonsView);\n        }\n        children.add(this.saveButtonView);\n        children.add(this.cancelButtonView);\n        return children;\n    }\n}    /**\n * Fired when the form view is submitted (when one of the children triggered the submit event),\n * for example with a click on {@link #saveButtonView}.\n *\n * @event submit\n */\n     /**\n * Fired when the form view is canceled, for example with a click on {@link #cancelButtonView}.\n *\n * @event cancel\n */","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module link/ui/linkactionsview\n */\nimport View from '@ckeditor/ckeditor5-ui/src/view';\nimport ViewCollection from '@ckeditor/ckeditor5-ui/src/viewcollection';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport FocusCycler from '@ckeditor/ckeditor5-ui/src/focuscycler';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\nimport { ensureSafeUrl } from '../utils';\nimport unlinkIcon from '../../theme/icons/unlink.svg';\nimport pencilIcon from '@ckeditor/ckeditor5-core/theme/icons/pencil.svg';\nimport '../../theme/linkactions.css';\n/**\n * The link actions view class. This view displays the link preview, allows\n * unlinking or editing the link.\n *\n * @extends module:ui/view~View\n */\nexport default class LinkActionsView extends View {\n    /**\n\t * @inheritDoc\n\t */\n    constructor(locale) {\n        super(locale);\n        const t = locale.t;\n        /**\n\t\t * Tracks information about DOM focus in the actions.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n        this.focusTracker = new FocusTracker();\n        /**\n\t\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n        this.keystrokes = new KeystrokeHandler();\n        /**\n\t\t * The href preview view.\n\t\t *\n\t\t * @member {module:ui/view~View}\n\t\t */\n        this.previewButtonView = this._createPreviewButton();\n        /**\n\t\t * The unlink button view.\n\t\t *\n\t\t * @member {module:ui/button/buttonview~ButtonView}\n\t\t */\n        this.unlinkButtonView = this._createButton(t('bh'), unlinkIcon, 'unlink');\n        /**\n\t\t * The edit link button view.\n\t\t *\n\t\t * @member {module:ui/button/buttonview~ButtonView}\n\t\t */\n        this.editButtonView = this._createButton(t('bi'), pencilIcon, 'edit');\n        /**\n\t\t * The value of the \"href\" attribute of the link to use in the {@link #previewButtonView}.\n\t\t *\n\t\t * @observable\n\t\t * @member {String}\n\t\t */\n        this.set('href');\n        /**\n\t\t * A collection of views that can be focused in the view.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n        this._focusables = new ViewCollection();\n        /**\n\t\t * Helps cycling over {@link #_focusables} in the view.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/focuscycler~FocusCycler}\n\t\t */\n        this._focusCycler = new FocusCycler({\n            focusables: this._focusables,\n            focusTracker: this.focusTracker,\n            keystrokeHandler: this.keystrokes,\n            actions: {\n                // Navigate fields backwards using the Shift + Tab keystroke.\n                focusPrevious: 'shift + tab',\n                // Navigate fields forwards using the Tab key.\n                focusNext: 'tab'\n            }\n        });\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-link-actions'\n                ],\n                // https://github.com/ckeditor/ckeditor5-link/issues/90\n                tabindex: '-1'\n            },\n            children: [\n                this.previewButtonView,\n                this.editButtonView,\n                this.unlinkButtonView\n            ]\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */\n    render() {\n        super.render();\n        const childViews = [\n            this.previewButtonView,\n            this.editButtonView,\n            this.unlinkButtonView\n        ];\n        childViews.forEach(v => {\n            // Register the view as focusable.\n            this._focusables.add(v);\n            // Register the view in the focus tracker.\n            this.focusTracker.add(v.element);\n        });\n        // Start listening for the keystrokes coming from #element.\n        this.keystrokes.listenTo(this.element);\n    }\n    /**\n\t * Focuses the fist {@link #_focusables} in the actions.\n\t */\n    focus() {\n        this._focusCycler.focusFirst();\n    }\n    /**\n\t * Creates a button view.\n\t *\n\t * @private\n\t * @param {String} label The button label.\n\t * @param {String} icon The button icon.\n\t * @param {String} [eventName] An event name that the `ButtonView#execute` event will be delegated to.\n\t * @returns {module:ui/button/buttonview~ButtonView} The button view instance.\n\t */\n    _createButton(label, icon, eventName) {\n        const button = new ButtonView(this.locale);\n        button.set({\n            label,\n            icon,\n            tooltip: true\n        });\n        button.delegate('execute').to(this, eventName);\n        return button;\n    }\n    /**\n\t * Creates a link href preview button.\n\t *\n\t * @private\n\t * @returns {module:ui/button/buttonview~ButtonView} The button view instance.\n\t */\n    _createPreviewButton() {\n        const button = new ButtonView(this.locale);\n        const bind = this.bindTemplate;\n        const t = this.t;\n        button.set({\n            withText: true,\n            tooltip: t('bj')\n        });\n        button.extendTemplate({\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-link-actions__preview'\n                ],\n                href: bind.to('href', href => href && ensureSafeUrl(href)),\n                target: '_blank',\n                rel: 'noopener noreferrer'\n            }\n        });\n        button.bind('label').to(this, 'href', href => {\n            return href || t('bk');\n        });\n        button.bind('isEnabled').to(this, 'href', href => !!href);\n        button.template.tag = 'a';\n        button.template.eventListeners = {};\n        return button;\n    }\n}    /**\n * Fired when the {@link #editButtonView} is clicked.\n *\n * @event edit\n */\n     /**\n * Fired when the {@link #unlinkButtonView} is clicked.\n *\n * @event unlink\n */","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M11.077 15l.991-1.416a.75.75 0 111.229.86l-1.148 1.64a.748.748 0 01-.217.206 5.251 5.251 0 01-8.503-5.955.741.741 0 01.12-.274l1.147-1.639a.75.75 0 111.228.86L4.933 10.7l.006.003a3.75 3.75 0 006.132 4.294l.006.004zm5.494-5.335a.748.748 0 01-.12.274l-1.147 1.639a.75.75 0 11-1.228-.86l.86-1.23a3.75 3.75 0 00-6.144-4.301l-.86 1.229a.75.75 0 01-1.229-.86l1.148-1.64a.748.748 0 01.217-.206 5.251 5.251 0 018.503 5.955zm-4.563-2.532a.75.75 0 01.184 1.045l-3.155 4.505a.75.75 0 11-1.229-.86l3.155-4.506a.75.75 0 011.045-.184zm4.919 10.562l-1.414 1.414a.75.75 0 11-1.06-1.06l1.414-1.415-1.415-1.414a.75.75 0 011.061-1.06l1.414 1.414 1.414-1.415a.75.75 0 011.061 1.061l-1.414 1.414 1.414 1.415a.75.75 0 01-1.06 1.06l-1.415-1.414z\\\"/></svg>\"","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M7.3 17.37l-.061.088a1.518 1.518 0 01-.934.535l-4.178.663-.806-4.153a1.495 1.495 0 01.187-1.058l.056-.086L8.77 2.639c.958-1.351 2.803-1.076 4.296-.03 1.497 1.047 2.387 2.693 1.433 4.055L7.3 17.37zM9.14 4.728l-5.545 8.346 3.277 2.294 5.544-8.346L9.14 4.728zM6.07 16.512l-3.276-2.295.53 2.73 2.746-.435zM9.994 3.506L13.271 5.8c.316-.452-.16-1.333-1.065-1.966-.905-.634-1.895-.78-2.212-.328zM8 18.5L9.375 17H19v1.5H8z\\\"/></svg>\"","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module link/linkui\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ClickObserver from '@ckeditor/ckeditor5-engine/src/view/observer/clickobserver';\nimport { isLinkElement } from './utils';\nimport ContextualBalloon from '@ckeditor/ckeditor5-ui/src/panel/balloon/contextualballoon';\nimport clickOutsideHandler from '@ckeditor/ckeditor5-ui/src/bindings/clickoutsidehandler';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport LinkFormView from './ui/linkformview';\nimport LinkActionsView from './ui/linkactionsview';\nimport linkIcon from '../theme/icons/link.svg';\nconst linkKeystroke = 'Ctrl+K';\n/**\n * The link UI plugin. It introduces the `'link'` and `'unlink'` buttons and support for the <kbd>Ctrl+K</kbd> keystroke.\n *\n * It uses the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon plugin}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class LinkUI extends Plugin {\n    /**\n\t * @inheritDoc\n\t */\n    static get requires() {\n        return [ContextualBalloon];\n    }\n    /**\n\t * @inheritDoc\n\t */\n    static get pluginName() {\n        return 'LinkUI';\n    }\n    /**\n\t * @inheritDoc\n\t */\n    init() {\n        const editor = this.editor;\n        editor.editing.view.addObserver(ClickObserver);\n        /**\n\t\t * The actions view displayed inside of the balloon.\n\t\t *\n\t\t * @member {module:link/ui/linkactionsview~LinkActionsView}\n\t\t */\n        this.actionsView = this._createActionsView();\n        /**\n\t\t * The form view displayed inside the balloon.\n\t\t *\n\t\t * @member {module:link/ui/linkformview~LinkFormView}\n\t\t */\n        this.formView = this._createFormView();\n        /**\n\t\t * The contextual balloon plugin instance.\n\t\t *\n\t\t * @private\n\t\t * @member {module:ui/panel/balloon/contextualballoon~ContextualBalloon}\n\t\t */\n        this._balloon = editor.plugins.get(ContextualBalloon);\n        // Create toolbar buttons.\n        this._createToolbarLinkButton();\n        // Attach lifecycle actions to the the balloon.\n        this._enableUserBalloonInteractions();\n    }\n    /**\n\t * @inheritDoc\n\t */\n    destroy() {\n        super.destroy();\n        // Destroy created UI components as they are not automatically destroyed (see ckeditor5#1341).\n        this.formView.destroy();\n    }\n    /**\n\t * Creates the {@link module:link/ui/linkactionsview~LinkActionsView} instance.\n\t *\n\t * @private\n\t * @returns {module:link/ui/linkactionsview~LinkActionsView} The link actions view instance.\n\t */\n    _createActionsView() {\n        const editor = this.editor;\n        const actionsView = new LinkActionsView(editor.locale);\n        const linkCommand = editor.commands.get('link');\n        const unlinkCommand = editor.commands.get('unlink');\n        actionsView.bind('href').to(linkCommand, 'value');\n        actionsView.editButtonView.bind('isEnabled').to(linkCommand);\n        actionsView.unlinkButtonView.bind('isEnabled').to(unlinkCommand);\n        // Execute unlink command after clicking on the \"Edit\" button.\n        this.listenTo(actionsView, 'edit', () => {\n            this._addFormView();\n        });\n        // Execute unlink command after clicking on the \"Unlink\" button.\n        this.listenTo(actionsView, 'unlink', () => {\n            editor.execute('unlink');\n            this._hideUI();\n        });\n        // Close the panel on esc key press when the **actions have focus**.\n        actionsView.keystrokes.set('Esc', (data, cancel) => {\n            this._hideUI();\n            cancel();\n        });\n        // Open the form view on Ctrl+K when the **actions have focus**..\n        actionsView.keystrokes.set(linkKeystroke, (data, cancel) => {\n            this._addFormView();\n            cancel();\n        });\n        return actionsView;\n    }\n    /**\n\t * Creates the {@link module:link/ui/linkformview~LinkFormView} instance.\n\t *\n\t * @private\n\t * @returns {module:link/ui/linkformview~LinkFormView} The link form view instance.\n\t */\n    _createFormView() {\n        const editor = this.editor;\n        const linkCommand = editor.commands.get('link');\n        const formView = new LinkFormView(editor.locale, linkCommand.manualDecorators);\n        formView.urlInputView.bind('value').to(linkCommand, 'value');\n        // Form elements should be read-only when corresponding commands are disabled.\n        formView.urlInputView.bind('isReadOnly').to(linkCommand, 'isEnabled', value => !value);\n        formView.saveButtonView.bind('isEnabled').to(linkCommand);\n        // Execute link command after clicking the \"Save\" button.\n        this.listenTo(formView, 'submit', () => {\n            editor.execute('link', formView.urlInputView.inputView.element.value, formView.getDecoratorSwitchesState());\n            this._closeFormView();\n        });\n        // Hide the panel after clicking the \"Cancel\" button.\n        this.listenTo(formView, 'cancel', () => {\n            this._closeFormView();\n        });\n        // Close the panel on esc key press when the **form has focus**.\n        formView.keystrokes.set('Esc', (data, cancel) => {\n            this._closeFormView();\n            cancel();\n        });\n        return formView;\n    }\n    /**\n\t * Creates a toolbar Link button. Clicking this button will show\n\t * a {@link #_balloon} attached to the selection.\n\t *\n\t * @private\n\t */\n    _createToolbarLinkButton() {\n        const editor = this.editor;\n        const linkCommand = editor.commands.get('link');\n        const t = editor.t;\n        // Handle the `Ctrl+K` keystroke and show the panel.\n        editor.keystrokes.set(linkKeystroke, (keyEvtData, cancel) => {\n            // Prevent focusing the search bar in FF and opening new tab in Edge. #153, #154.\n            cancel();\n            this._showUI(true);\n        });\n        editor.ui.componentFactory.add('link', locale => {\n            const button = new ButtonView(locale);\n            button.isEnabled = true;\n            button.label = t('an');\n            button.icon = linkIcon;\n            button.keystroke = linkKeystroke;\n            button.tooltip = true;\n            button.isToggleable = true;\n            // Bind button to the command.\n            button.bind('isEnabled').to(linkCommand, 'isEnabled');\n            button.bind('isOn').to(linkCommand, 'value', value => !!value);\n            // Show the panel on button click.\n            this.listenTo(button, 'execute', () => this._showUI(true));\n            return button;\n        });\n    }\n    /**\n\t * Attaches actions that control whether the balloon panel containing the\n\t * {@link #formView} is visible or not.\n\t *\n\t * @private\n\t */\n    _enableUserBalloonInteractions() {\n        const viewDocument = this.editor.editing.view.document;\n        // Handle click on view document and show panel when selection is placed inside the link element.\n        // Keep panel open until selection will be inside the same link element.\n        this.listenTo(viewDocument, 'click', () => {\n            const parentLink = this._getSelectedLinkElement();\n            if (parentLink) {\n                // Then show panel but keep focus inside editor editable.\n                this._showUI();\n            }\n        });\n        // Focus the form if the balloon is visible and the Tab key has been pressed.\n        this.editor.keystrokes.set('Tab', (data, cancel) => {\n            if (this._areActionsVisible && !this.actionsView.focusTracker.isFocused) {\n                this.actionsView.focus();\n                cancel();\n            }\n        }, {\n            // Use the high priority because the link UI navigation is more important\n            // than other feature's actions, e.g. list indentation.\n            // https://github.com/ckeditor/ckeditor5-link/issues/146\n            priority: 'high'\n        });\n        // Close the panel on the Esc key press when the editable has focus and the balloon is visible.\n        this.editor.keystrokes.set('Esc', (data, cancel) => {\n            if (this._isUIVisible) {\n                this._hideUI();\n                cancel();\n            }\n        });\n        // Close on click outside of balloon panel element.\n        clickOutsideHandler({\n            emitter: this.formView,\n            activator: () => this._isUIInPanel,\n            contextElements: [this._balloon.view.element],\n            callback: () => this._hideUI()\n        });\n    }\n    /**\n\t * Adds the {@link #actionsView} to the {@link #_balloon}.\n\t *\n\t * @protected\n\t */\n    _addActionsView() {\n        if (this._areActionsInPanel) {\n            return;\n        }\n        this._balloon.add({\n            view: this.actionsView,\n            position: this._getBalloonPositionData()\n        });\n    }\n    /**\n\t * Adds the {@link #formView} to the {@link #_balloon}.\n\t *\n\t * @protected\n\t */\n    _addFormView() {\n        if (this._isFormInPanel) {\n            return;\n        }\n        const editor = this.editor;\n        const linkCommand = editor.commands.get('link');\n        this._balloon.add({\n            view: this.formView,\n            position: this._getBalloonPositionData()\n        });\n        // Select input when form view is currently visible.\n        if (this._balloon.visibleView === this.formView) {\n            this.formView.urlInputView.select();\n        }\n        // Make sure that each time the panel shows up, the URL field remains in sync with the value of\n        // the command. If the user typed in the input, then canceled the balloon (`urlInputView#value` stays\n        // unaltered) and re-opened it without changing the value of the link command (e.g. because they\n        // clicked the same link), they would see the old value instead of the actual value of the command.\n        // https://github.com/ckeditor/ckeditor5-link/issues/78\n        // https://github.com/ckeditor/ckeditor5-link/issues/123\n        this.formView.urlInputView.inputView.element.value = linkCommand.value || '';\n    }\n    /**\n\t * Closes the form view. Decides whether the balloon should be hidden completely or if the action view should be shown. This is\n\t * decided upon the link command value (which has a value if the document selection is in the link).\n\t *\n\t * Additionally, if any {@link module:link/link~LinkConfig#decorators} are defined in the editor configuration, the state of\n\t * switch buttons responsible for manual decorator handling is restored.\n\t *\n\t * @private\n\t */\n    _closeFormView() {\n        const linkCommand = this.editor.commands.get('link');\n        // Restore manual decorator states to represent the current model state. This case is important to reset the switch buttons\n        // when the user cancels the editing form.\n        linkCommand.restoreManualDecoratorStates();\n        if (linkCommand.value !== undefined) {\n            this._removeFormView();\n        } else {\n            this._hideUI();\n        }\n    }\n    /**\n\t * Removes the {@link #formView} from the {@link #_balloon}.\n\t *\n\t * @protected\n\t */\n    _removeFormView() {\n        if (this._isFormInPanel) {\n            // Blur the input element before removing it from DOM to prevent issues in some browsers.\n            // See https://github.com/ckeditor/ckeditor5/issues/1501.\n            this.formView.saveButtonView.focus();\n            this._balloon.remove(this.formView);\n            // Because the form has an input which has focus, the focus must be brought back\n            // to the editor. Otherwise, it would be lost.\n            this.editor.editing.view.focus();\n        }\n    }\n    /**\n\t * Shows the correct UI type. It is either {@link #formView} or {@link #actionsView}.\n\t *\n\t * @param {Boolean} forceVisible\n\t * @private\n\t */\n    _showUI(forceVisible = false) {\n        // When there's no link under the selection, go straight to the editing UI.\n        if (!this._getSelectedLinkElement()) {\n            this._addActionsView();\n            // Be sure panel with link is visible.\n            if (forceVisible) {\n                this._balloon.showStack('main');\n            }\n            this._addFormView();\n        }    // If there's a link under the selection...\n        else {\n            // Go to the editing UI if actions are already visible.\n            if (this._areActionsVisible) {\n                this._addFormView();\n            }    // Otherwise display just the actions UI.\n            else {\n                this._addActionsView();\n            }\n            // Be sure panel with link is visible.\n            if (forceVisible) {\n                this._balloon.showStack('main');\n            }\n        }\n        // Begin responding to ui#update once the UI is added.\n        this._startUpdatingUI();\n    }\n    /**\n\t * Removes the {@link #formView} from the {@link #_balloon}.\n\t *\n\t * See {@link #_addFormView}, {@link #_addActionsView}.\n\t *\n\t * @protected\n\t */\n    _hideUI() {\n        if (!this._isUIInPanel) {\n            return;\n        }\n        const editor = this.editor;\n        this.stopListening(editor.ui, 'update');\n        this.stopListening(this._balloon, 'change:visibleView');\n        // Make sure the focus always gets back to the editable _before_ removing the focused form view.\n        // Doing otherwise causes issues in some browsers. See https://github.com/ckeditor/ckeditor5-link/issues/193.\n        editor.editing.view.focus();\n        // Remove form first because it's on top of the stack.\n        this._removeFormView();\n        // Then remove the actions view because it's beneath the form.\n        this._balloon.remove(this.actionsView);\n    }\n    /**\n\t * Makes the UI react to the {@link module:core/editor/editorui~EditorUI#event:update} event to\n\t * reposition itself when the editor UI should be refreshed.\n\t *\n\t * See: {@link #_hideUI} to learn when the UI stops reacting to the `update` event.\n\t *\n\t * @protected\n\t */\n    _startUpdatingUI() {\n        const editor = this.editor;\n        const viewDocument = editor.editing.view.document;\n        let prevSelectedLink = this._getSelectedLinkElement();\n        let prevSelectionParent = getSelectionParent();\n        const update = () => {\n            const selectedLink = this._getSelectedLinkElement();\n            const selectionParent = getSelectionParent();\n            // Hide the panel if:\n            //\n            // * the selection went out of the EXISTING link element. E.g. user moved the caret out\n            //   of the link,\n            // * the selection went to a different parent when creating a NEW link. E.g. someone\n            //   else modified the document.\n            // * the selection has expanded (e.g. displaying link actions then pressing SHIFT+Right arrow).\n            //\n            // Note: #_getSelectedLinkElement will return a link for a non-collapsed selection only\n            // when fully selected.\n            if (prevSelectedLink && !selectedLink || !prevSelectedLink && selectionParent !== prevSelectionParent) {\n                this._hideUI();\n            }    // Update the position of the panel when:\n                 //  * link panel is in the visible stack\n                 //  * the selection remains in the original link element,\n                 //  * there was no link element in the first place, i.e. creating a new link\n            else if (this._isUIVisible) {\n                // If still in a link element, simply update the position of the balloon.\n                // If there was no link (e.g. inserting one), the balloon must be moved\n                // to the new position in the editing view (a new native DOM range).\n                this._balloon.updatePosition(this._getBalloonPositionData());\n            }\n            prevSelectedLink = selectedLink;\n            prevSelectionParent = selectionParent;\n        };\n        function getSelectionParent() {\n            return viewDocument.selection.focus.getAncestors().reverse().find(node => node.is('element'));\n        }\n        this.listenTo(editor.ui, 'update', update);\n        this.listenTo(this._balloon, 'change:visibleView', update);\n    }\n    /**\n\t * Returns `true` when {@link #formView} is in the {@link #_balloon}.\n\t *\n\t * @readonly\n\t * @protected\n\t * @type {Boolean}\n\t */\n    get _isFormInPanel() {\n        return this._balloon.hasView(this.formView);\n    }\n    /**\n\t * Returns `true` when {@link #actionsView} is in the {@link #_balloon}.\n\t *\n\t * @readonly\n\t * @protected\n\t * @type {Boolean}\n\t */\n    get _areActionsInPanel() {\n        return this._balloon.hasView(this.actionsView);\n    }\n    /**\n\t * Returns `true` when {@link #actionsView} is in the {@link #_balloon} and it is\n\t * currently visible.\n\t *\n\t * @readonly\n\t * @protected\n\t * @type {Boolean}\n\t */\n    get _areActionsVisible() {\n        return this._balloon.visibleView === this.actionsView;\n    }\n    /**\n\t * Returns `true` when {@link #actionsView} or {@link #formView} is in the {@link #_balloon}.\n\t *\n\t * @readonly\n\t * @protected\n\t * @type {Boolean}\n\t */\n    get _isUIInPanel() {\n        return this._isFormInPanel || this._areActionsInPanel;\n    }\n    /**\n\t * Returns `true` when {@link #actionsView} or {@link #formView} is in the {@link #_balloon} and it is\n\t * currently visible.\n\t *\n\t * @readonly\n\t * @protected\n\t * @type {Boolean}\n\t */\n    get _isUIVisible() {\n        const visibleView = this._balloon.visibleView;\n        return visibleView == this.formView || this._areActionsVisible;\n    }\n    /**\n\t * Returns positioning options for the {@link #_balloon}. They control the way the balloon is attached\n\t * to the target element or selection.\n\t *\n\t * If the selection is collapsed and inside a link element, the panel will be attached to the\n\t * entire link element. Otherwise, it will be attached to the selection.\n\t *\n\t * @private\n\t * @returns {module:utils/dom/position~Options}\n\t */\n    _getBalloonPositionData() {\n        const view = this.editor.editing.view;\n        const viewDocument = view.document;\n        const targetLink = this._getSelectedLinkElement();\n        const target = targetLink ? // When selection is inside link element, then attach panel to this element.\n        view.domConverter.mapViewToDom(targetLink) : // Otherwise attach panel to the selection.\n        view.domConverter.viewRangeToDom(viewDocument.selection.getFirstRange());\n        return { target };\n    }\n    /**\n\t * Returns the link {@link module:engine/view/attributeelement~AttributeElement} under\n\t * the {@link module:engine/view/document~Document editing view's} selection or `null`\n\t * if there is none.\n\t *\n\t * **Note**: For a non–collapsed selection, the link element is only returned when **fully**\n\t * selected and the **only** element within the selection boundaries.\n\t *\n\t * @private\n\t * @returns {module:engine/view/attributeelement~AttributeElement|null}\n\t */\n    _getSelectedLinkElement() {\n        const view = this.editor.editing.view;\n        const selection = view.document.selection;\n        if (selection.isCollapsed) {\n            return findLinkElementAncestor(selection.getFirstPosition());\n        } else {\n            // The range for fully selected link is usually anchored in adjacent text nodes.\n            // Trim it to get closer to the actual link element.\n            const range = selection.getFirstRange().getTrimmed();\n            const startLink = findLinkElementAncestor(range.start);\n            const endLink = findLinkElementAncestor(range.end);\n            if (!startLink || startLink != endLink) {\n                return null;\n            }\n            // Check if the link element is fully selected.\n            if (view.createRangeIn(startLink).getTrimmed().isEqual(range)) {\n                return startLink;\n            } else {\n                return null;\n            }\n        }\n    }\n}\n// Returns a link element if there's one among the ancestors of the provided `Position`.\n//\n// @private\n// @param {module:engine/view/position~Position} View position to analyze.\n// @returns {module:engine/view/attributeelement~AttributeElement|null} Link element at the position or null.\nfunction findLinkElementAncestor(position) {\n    return position.getAncestors().find(ancestor => isLinkElement(ancestor));\n}","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M11.077 15l.991-1.416a.75.75 0 111.229.86l-1.148 1.64a.748.748 0 01-.217.206 5.251 5.251 0 01-8.503-5.955.741.741 0 01.12-.274l1.147-1.639a.75.75 0 111.228.86L4.933 10.7l.006.003a3.75 3.75 0 006.132 4.294l.006.004zm5.494-5.335a.748.748 0 01-.12.274l-1.147 1.639a.75.75 0 11-1.228-.86l.86-1.23a3.75 3.75 0 00-6.144-4.301l-.86 1.229a.75.75 0 01-1.229-.86l1.148-1.64a.748.748 0 01.217-.206 5.251 5.251 0 018.503 5.955zm-4.563-2.532a.75.75 0 01.184 1.045l-3.155 4.505a.75.75 0 11-1.229-.86l3.155-4.506a.75.75 0 011.045-.184z\\\"/></svg>\"","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module list/listcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n\n/**\n * The list command. It is used by the {@link module:list/list~List list feature}.\n *\n * @extends module:core/command~Command\n */\nexport default class ListCommand extends Command {\n\t/**\n\t * Creates an instance of the command.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor The editor instance.\n\t * @param {'numbered'|'bulleted'} type List type that will be handled by this command.\n\t */\n\tconstructor( editor, type ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The type of the list created by the command.\n\t\t *\n\t\t * @readonly\n\t\t * @member {'numbered'|'bulleted'|'todo'}\n\t\t */\n\t\tthis.type = type;\n\n\t\t/**\n\t\t * A flag indicating whether the command is active, which means that the selection starts in a list of the same type.\n\t\t *\n\t\t * @observable\n\t\t * @readonly\n\t\t * @member {Boolean} #value\n\t\t */\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tthis.value = this._getValue();\n\t\tthis.isEnabled = this._checkEnabled();\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * @protected\n\t */\n\texecute() {\n\t\tconst model = this.editor.model;\n\t\tconst document = model.document;\n\t\tconst blocks = Array.from( document.selection.getSelectedBlocks() )\n\t\t\t.filter( block => checkCanBecomeListItem( block, model.schema ) );\n\n\t\t// Whether we are turning off some items.\n\t\tconst turnOff = this.value === true;\n\t\t// If we are turning off items, we are going to rename them to paragraphs.\n\n\t\tmodel.change( writer => {\n\t\t\t// If part of a list got turned off, we need to handle (outdent) all of sub-items of the last turned-off item.\n\t\t\t// To be sure that model is all the time in a good state, we first fix items below turned-off item.\n\t\t\tif ( turnOff ) {\n\t\t\t\t// Start from the model item that is just after the last turned-off item.\n\t\t\t\tlet next = blocks[ blocks.length - 1 ].nextSibling;\n\t\t\t\tlet currentIndent = Number.POSITIVE_INFINITY;\n\t\t\t\tlet changes = [];\n\n\t\t\t\t// Correct indent of all items after the last turned off item.\n\t\t\t\t// Rules that should be followed:\n\t\t\t\t// 1. All direct sub-items of turned-off item should become indent 0, because the first item after it\n\t\t\t\t//    will be the first item of a new list. Other items are at the same level, so should have same 0 index.\n\t\t\t\t// 2. All items with indent lower than indent of turned-off item should become indent 0, because they\n\t\t\t\t//    should not end up as a child of any of list items that they were not children of before.\n\t\t\t\t// 3. All other items should have their indent changed relatively to it's parent.\n\t\t\t\t//\n\t\t\t\t// For example:\n\t\t\t\t// 1  * --------\n\t\t\t\t// 2     * --------\n\t\t\t\t// 3        * --------\t\t\t<-- this is turned off.\n\t\t\t\t// 4           * --------\t\t<-- this has to become indent = 0, because it will be first item on a new list.\n\t\t\t\t// 5              * --------\t<-- this should be still be a child of item above, so indent = 1.\n\t\t\t\t// 6        * --------\t\t\t<-- this has to become indent = 0, because it should not be a child of any of items above.\n\t\t\t\t// 7           * --------\t\t<-- this should be still be a child of item above, so indent = 1.\n\t\t\t\t// 8     * --------\t\t\t\t<-- this has to become indent = 0.\n\t\t\t\t// 9        * --------\t\t\t<-- this should still be a child of item above, so indent = 1.\n\t\t\t\t// 10          * --------\t\t<-- this should still be a child of item above, so indent = 2.\n\t\t\t\t// 11          * --------\t\t<-- this should still be at the same level as item above, so indent = 2.\n\t\t\t\t// 12 * --------\t\t\t\t<-- this and all below are left unchanged.\n\t\t\t\t// 13    * --------\n\t\t\t\t// 14       * --------\n\t\t\t\t//\n\t\t\t\t// After turning off 3 the list becomes:\n\t\t\t\t//\n\t\t\t\t// 1  * --------\n\t\t\t\t// 2     * --------\n\t\t\t\t//\n\t\t\t\t// 3  --------\n\t\t\t\t//\n\t\t\t\t// 4  * --------\n\t\t\t\t// 5     * --------\n\t\t\t\t// 6  * --------\n\t\t\t\t// 7     * --------\n\t\t\t\t// 8  * --------\n\t\t\t\t// 9     * --------\n\t\t\t\t// 10       * --------\n\t\t\t\t// 11       * --------\n\t\t\t\t// 12 * --------\n\t\t\t\t// 13    * --------\n\t\t\t\t// 14       * --------\n\t\t\t\t//\n\t\t\t\t// Thanks to this algorithm no lists are mismatched and no items get unexpected children/parent, while\n\t\t\t\t// those parent-child connection which are possible to maintain are still maintained. It's worth noting\n\t\t\t\t// that this is the same effect that we would be get by multiple use of outdent command. However doing\n\t\t\t\t// it like this is much more efficient because it's less operation (less memory usage, easier OT) and\n\t\t\t\t// less conversion (faster).\n\t\t\t\twhile ( next && next.name == 'listItem' && next.getAttribute( 'listIndent' ) !== 0 ) {\n\t\t\t\t\t// Check each next list item, as long as its indent is bigger than 0.\n\t\t\t\t\t// If the indent is 0 we are not going to change anything anyway.\n\t\t\t\t\tconst indent = next.getAttribute( 'listIndent' );\n\n\t\t\t\t\t// We check if that's item indent is lower as current relative indent.\n\t\t\t\t\tif ( indent < currentIndent ) {\n\t\t\t\t\t\t// If it is, current relative indent becomes that indent.\n\t\t\t\t\t\tcurrentIndent = indent;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fix indent relatively to current relative indent.\n\t\t\t\t\t// Note, that if we just changed the current relative indent, the newIndent will be equal to 0.\n\t\t\t\t\tconst newIndent = indent - currentIndent;\n\n\t\t\t\t\t// Save the entry in changes array. We do not apply it at the moment, because we will need to\n\t\t\t\t\t// reverse the changes so the last item is changed first.\n\t\t\t\t\t// This is to keep model in correct state all the time.\n\t\t\t\t\tchanges.push( { element: next, listIndent: newIndent } );\n\n\t\t\t\t\t// Find next item.\n\t\t\t\t\tnext = next.nextSibling;\n\t\t\t\t}\n\n\t\t\t\tchanges = changes.reverse();\n\n\t\t\t\tfor ( const item of changes ) {\n\t\t\t\t\twriter.setAttribute( 'listIndent', item.listIndent, item.element );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we are turning on, we might change some items that are already `listItem`s but with different type.\n\t\t\t// Changing one nested list item to other type should also trigger changing all its siblings so the\n\t\t\t// whole nested list is of the same type.\n\t\t\t// Example (assume changing to numbered list):\n\t\t\t// * ------\t\t\t\t<-- do not fix, top level item\n\t\t\t//   * ------\t\t\t<-- fix, because latter list item of this item's list is changed\n\t\t\t//      * ------\t\t<-- do not fix, item is not affected (different list)\n\t\t\t//   * ------\t\t\t<-- fix, because latter list item of this item's list is changed\n\t\t\t//      * ------\t\t<-- fix, because latter list item of this item's list is changed\n\t\t\t//      * ---[--\t\t<-- already in selection\n\t\t\t//   * ------\t\t\t<-- already in selection\n\t\t\t//   * ------\t\t\t<-- already in selection\n\t\t\t// * ------\t\t\t\t<-- already in selection, but does not cause other list items to change because is top-level\n\t\t\t//   * ---]--\t\t\t<-- already in selection\n\t\t\t//   * ------\t\t\t<-- fix, because preceding list item of this item's list is changed\n\t\t\t//      * ------\t\t<-- do not fix, item is not affected (different list)\n\t\t\t// * ------\t\t\t\t<-- do not fix, top level item\n\t\t\tif ( !turnOff ) {\n\t\t\t\t// Find lowest indent among selected items. This will be indicator what is the indent of\n\t\t\t\t// top-most list affected by the command.\n\t\t\t\tlet lowestIndent = Number.POSITIVE_INFINITY;\n\n\t\t\t\tfor ( const item of blocks ) {\n\t\t\t\t\tif ( item.is( 'listItem' ) && item.getAttribute( 'listIndent' ) < lowestIndent ) {\n\t\t\t\t\t\tlowestIndent = item.getAttribute( 'listIndent' );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Do not execute the fix for top-level lists.\n\t\t\t\tlowestIndent = lowestIndent === 0 ? 1 : lowestIndent;\n\n\t\t\t\t// Fix types of list items that are \"before\" the selected blocks.\n\t\t\t\t_fixType( blocks, true, lowestIndent );\n\n\t\t\t\t// Fix types of list items that are \"after\" the selected blocks.\n\t\t\t\t_fixType( blocks, false, lowestIndent );\n\t\t\t}\n\n\t\t\t// Phew! Now it will be easier :).\n\t\t\t// For each block element that was in the selection, we will either: turn it to list item,\n\t\t\t// turn it to paragraph, or change it's type. Or leave it as it is.\n\t\t\t// Do it in reverse as there might be multiple blocks (same as with changing indents).\n\t\t\tfor ( const element of blocks.reverse() ) {\n\t\t\t\tif ( turnOff && element.name == 'listItem' ) {\n\t\t\t\t\t// We are turning off and the element is a `listItem` - it should be converted to `paragraph`.\n\t\t\t\t\t// List item specific attributes are removed by post fixer.\n\t\t\t\t\twriter.rename( element, 'paragraph' );\n\t\t\t\t} else if ( !turnOff && element.name != 'listItem' ) {\n\t\t\t\t\t// We are turning on and the element is not a `listItem` - it should be converted to `listItem`.\n\t\t\t\t\t// The order of operations is important to keep model in correct state.\n\t\t\t\t\twriter.setAttributes( { listType: this.type, listIndent: 0 }, element );\n\t\t\t\t\twriter.rename( element, 'listItem' );\n\t\t\t\t} else if ( !turnOff && element.name == 'listItem' && element.getAttribute( 'listType' ) != this.type ) {\n\t\t\t\t\t// We are turning on and the element is a `listItem` but has different type - change it's type and\n\t\t\t\t\t// type of it's all siblings that have same indent.\n\t\t\t\t\twriter.setAttribute( 'listType', this.type, element );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Checks the command's {@link #value}.\n\t *\n\t * @private\n\t * @returns {Boolean} The current value.\n\t */\n\t_getValue() {\n\t\t// Check whether closest `listItem` ancestor of the position has a correct type.\n\t\tconst listItem = first( this.editor.model.document.selection.getSelectedBlocks() );\n\n\t\treturn !!listItem && listItem.is( 'listItem' ) && listItem.getAttribute( 'listType' ) == this.type;\n\t}\n\n\t/**\n\t * Checks whether the command can be enabled in the current context.\n\t *\n\t * @private\n\t * @returns {Boolean} Whether the command should be enabled.\n\t */\n\t_checkEnabled() {\n\t\t// If command value is true it means that we are in list item, so the command should be enabled.\n\t\tif ( this.value ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst selection = this.editor.model.document.selection;\n\t\tconst schema = this.editor.model.schema;\n\n\t\tconst firstBlock = first( selection.getSelectedBlocks() );\n\n\t\tif ( !firstBlock ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Otherwise, check if list item can be inserted at the position start.\n\t\treturn checkCanBecomeListItem( firstBlock, schema );\n\t}\n}\n\n// Helper function used when one or more list item have their type changed. Fixes type of other list items\n// that are affected by the change (are in same lists) but are not directly in selection. The function got extracted\n// not to duplicated code, as same fix has to be performed before and after selection.\n//\n// @param {Array.<module:engine/model/node~Node>} blocks Blocks that are in selection.\n// @param {Boolean} isBackward Specified whether fix will be applied for blocks before first selected block (`true`)\n// or blocks after last selected block (`false`).\n// @param {Number} lowestIndent Lowest indent among selected blocks.\nfunction _fixType( blocks, isBackward, lowestIndent ) {\n\t// We need to check previous sibling of first changed item and next siblings of last changed item.\n\tconst startingItem = isBackward ? blocks[ 0 ] : blocks[ blocks.length - 1 ];\n\n\tif ( startingItem.is( 'listItem' ) ) {\n\t\tlet item = startingItem[ isBackward ? 'previousSibling' : 'nextSibling' ];\n\t\t// During processing items, keeps the lowest indent of already processed items.\n\t\t// This saves us from changing too many items.\n\t\t// Following example is for going forward as it is easier to read, however same applies to going backward.\n\t\t// * ------\n\t\t//   * ------\n\t\t//     * --[---\n\t\t//   * ------\t\t<-- `lowestIndent` should be 1\n\t\t//     * --]---\t\t<-- `startingItem`, `currentIndent` = 2, `lowestIndent` == 1\n\t\t//     * ------\t\t<-- should be fixed, `indent` == 2 == `currentIndent`\n\t\t//   * ------\t\t<-- should be fixed, set `currentIndent` to 1, `indent` == 1 == `currentIndent`\n\t\t//     * ------\t\t<-- should not be fixed, item is in different list, `indent` = 2, `indent` != `currentIndent`\n\t\t//   * ------\t\t<-- should be fixed, `indent` == 1 == `currentIndent`\n\t\t// * ------\t\t\t<-- break loop (`indent` < `lowestIndent`)\n\t\tlet currentIndent = startingItem.getAttribute( 'listIndent' );\n\n\t\t// Look back until a list item with indent lower than reference `lowestIndent`.\n\t\t// That would be the parent of nested sublist which contains item having `lowestIndent`.\n\t\twhile ( item && item.is( 'listItem' ) && item.getAttribute( 'listIndent' ) >= lowestIndent ) {\n\t\t\tif ( currentIndent > item.getAttribute( 'listIndent' ) ) {\n\t\t\t\tcurrentIndent = item.getAttribute( 'listIndent' );\n\t\t\t}\n\n\t\t\t// Found an item that is in the same nested sublist.\n\t\t\tif ( item.getAttribute( 'listIndent' ) == currentIndent ) {\n\t\t\t\t// Just add the item to selected blocks like it was selected by the user.\n\t\t\t\tblocks[ isBackward ? 'unshift' : 'push' ]( item );\n\t\t\t}\n\n\t\t\titem = item[ isBackward ? 'previousSibling' : 'nextSibling' ];\n\t\t}\n\t}\n}\n\n// Checks whether the given block can be replaced by a listItem.\n//\n// @private\n// @param {module:engine/model/element~Element} block A block to be tested.\n// @param {module:engine/model/schema~Schema} schema The schema of the document.\n// @returns {Boolean}\nfunction checkCanBecomeListItem( block, schema ) {\n\treturn schema.checkChild( block.parent, 'listItem' ) && !schema.isObject( block );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module list/indentcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n\n/**\n * The list indent command. It is used by the {@link module:list/list~List list feature}.\n *\n * @extends module:core/command~Command\n */\nexport default class IndentCommand extends Command {\n\t/**\n\t * Creates an instance of the command.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor The editor instance.\n\t * @param {'forward'|'backward'} indentDirection The direction of indent. If it is equal to `backward`, the command\n\t * will outdent a list item.\n\t */\n\tconstructor( editor, indentDirection ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * Determines by how much the command will change the list item's indent attribute.\n\t\t *\n\t\t * @readonly\n\t\t * @private\n\t\t * @member {Number}\n\t\t */\n\t\tthis._indentBy = indentDirection == 'forward' ? 1 : -1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tthis.isEnabled = this._checkEnabled();\n\t}\n\n\t/**\n\t * Indents or outdents (depending on the {@link #constructor}'s `indentDirection` parameter) selected list items.\n\t *\n\t * @fires execute\n\t */\n\texecute() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\t\tlet itemsToChange = Array.from( doc.selection.getSelectedBlocks() );\n\n\t\tmodel.change( writer => {\n\t\t\tconst lastItem = itemsToChange[ itemsToChange.length - 1 ];\n\n\t\t\t// Indenting a list item should also indent all the items that are already sub-items of indented item.\n\t\t\tlet next = lastItem.nextSibling;\n\n\t\t\t// Check all items after last indented item, as long as their indent is bigger than indent of that item.\n\t\t\twhile ( next && next.name == 'listItem' && next.getAttribute( 'listIndent' ) > lastItem.getAttribute( 'listIndent' ) ) {\n\t\t\t\titemsToChange.push( next );\n\n\t\t\t\tnext = next.nextSibling;\n\t\t\t}\n\n\t\t\t// We need to be sure to keep model in correct state after each small change, because converters\n\t\t\t// bases on that state and assumes that model is correct.\n\t\t\t// Because of that, if the command outdents items, we will outdent them starting from the last item, as\n\t\t\t// it is safer.\n\t\t\tif ( this._indentBy < 0 ) {\n\t\t\t\titemsToChange = itemsToChange.reverse();\n\t\t\t}\n\n\t\t\tfor ( const item of itemsToChange ) {\n\t\t\t\tconst indent = item.getAttribute( 'listIndent' ) + this._indentBy;\n\n\t\t\t\t// If indent is lower than 0, it means that the item got outdented when it was not indented.\n\t\t\t\t// This means that we need to convert that list item to paragraph.\n\t\t\t\tif ( indent < 0 ) {\n\t\t\t\t\t// To keep the model as correct as possible, first rename listItem, then remove attributes,\n\t\t\t\t\t// as listItem without attributes is very incorrect and will cause problems in converters.\n\t\t\t\t\t// No need to remove attributes, will be removed by post fixer.\n\t\t\t\t\twriter.rename( item, 'paragraph' );\n\t\t\t\t}\n\t\t\t\t// If indent is >= 0, change the attribute value.\n\t\t\t\telse {\n\t\t\t\t\twriter.setAttribute( 'listIndent', indent, item );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Checks whether the command can be enabled in the current context.\n\t *\n\t * @private\n\t * @returns {Boolean} Whether the command should be enabled.\n\t */\n\t_checkEnabled() {\n\t\t// Check whether any of position's ancestor is a list item.\n\t\tconst listItem = first( this.editor.model.document.selection.getSelectedBlocks() );\n\n\t\t// If selection is not in a list item, the command is disabled.\n\t\tif ( !listItem || !listItem.is( 'listItem' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( this._indentBy > 0 ) {\n\t\t\t// Cannot indent first item in it's list. Check if before `listItem` is a list item that is in same list.\n\t\t\t// To be in the same list, the item has to have same attributes and cannot be \"split\" by an item with lower indent.\n\t\t\tconst indent = listItem.getAttribute( 'listIndent' );\n\t\t\tconst type = listItem.getAttribute( 'listType' );\n\n\t\t\tlet prev = listItem.previousSibling;\n\n\t\t\twhile ( prev && prev.is( 'listItem' ) && prev.getAttribute( 'listIndent' ) >= indent ) {\n\t\t\t\tif ( prev.getAttribute( 'listIndent' ) == indent ) {\n\t\t\t\t\t// The item is on the same level.\n\t\t\t\t\t// If it has same type, it means that we found a preceding sibling from the same list.\n\t\t\t\t\t// If it does not have same type, it means that `listItem` is on different list (this can happen only\n\t\t\t\t\t// on top level lists, though).\n\t\t\t\t\treturn prev.getAttribute( 'listType' ) == type;\n\t\t\t\t}\n\n\t\t\t\tprev = prev.previousSibling;\n\t\t\t}\n\n\t\t\t// Could not find similar list item, this means that `listItem` is first in its list.\n\t\t\treturn false;\n\t\t}\n\n\t\t// If we are outdenting it is enough to be in list item. Every list item can always be outdented.\n\t\treturn true;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module list/utils\n */\n\nimport { getFillerOffset } from '@ckeditor/ckeditor5-engine/src/view/containerelement';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\n\n/**\n * Creates a list item {@link module:engine/view/containerelement~ContainerElement}.\n *\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer The writer instance.\n * @returns {module:engine/view/containerelement~ContainerElement}\n */\nexport function createViewListItemElement( writer ) {\n\tconst viewItem = writer.createContainerElement( 'li' );\n\n\tviewItem.getFillerOffset = getListItemFillerOffset;\n\n\treturn viewItem;\n}\n\n/**\n * Helper function that creates a `<ul><li></li></ul>` or (`<ol>`) structure out of the given `modelItem` model `listItem` element.\n * Then, it binds the created view list item (<li>) with the model `listItem` element.\n * The function then returns the created view list item (<li>).\n *\n * @param {module:engine/model/item~Item} modelItem Model list item.\n * @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion interface.\n * @returns {module:engine/view/containerelement~ContainerElement} View list element.\n */\nexport function generateLiInUl( modelItem, conversionApi ) {\n\tconst mapper = conversionApi.mapper;\n\tconst viewWriter = conversionApi.writer;\n\tconst listType = modelItem.getAttribute( 'listType' ) == 'numbered' ? 'ol' : 'ul';\n\tconst viewItem = createViewListItemElement( viewWriter );\n\n\tconst viewList = viewWriter.createContainerElement( listType, null );\n\n\tviewWriter.insert( viewWriter.createPositionAt( viewList, 0 ), viewItem );\n\n\tmapper.bindElements( modelItem, viewItem );\n\n\treturn viewItem;\n}\n\n/**\n * Helper function that inserts a view list at a correct place and merges it with its siblings.\n * It takes a model list item element (`modelItem`) and a corresponding view list item element (`injectedItem`). The view list item\n * should be in a view list element (`<ul>` or `<ol>`) and should be its only child.\n * See comments below to better understand the algorithm.\n *\n * @param {module:engine/view/item~Item} modelItem Model list item.\n * @param {module:engine/view/containerelement~ContainerElement} injectedItem\n * @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion interface.\n * @param {module:engine/model/model~Model} model The model instance.\n */\nexport function injectViewList( modelItem, injectedItem, conversionApi, model ) {\n\tconst injectedList = injectedItem.parent;\n\tconst mapper = conversionApi.mapper;\n\tconst viewWriter = conversionApi.writer;\n\n\t// The position where the view list will be inserted.\n\tlet insertPosition = mapper.toViewPosition( model.createPositionBefore( modelItem ) );\n\n\t// 1. Find the previous list item that has the same or smaller indent. Basically we are looking for the first model item\n\t// that is a \"parent\" or \"sibling\" of the injected model item.\n\t// If there is no such list item, it means that the injected list item is the first item in \"its list\".\n\tconst refItem = getSiblingListItem( modelItem.previousSibling, {\n\t\tsameIndent: true,\n\t\tsmallerIndent: true,\n\t\tlistIndent: modelItem.getAttribute( 'listIndent' )\n\t} );\n\tconst prevItem = modelItem.previousSibling;\n\n\tif ( refItem && refItem.getAttribute( 'listIndent' ) == modelItem.getAttribute( 'listIndent' ) ) {\n\t\t// There is a list item with the same indent - we found the same-level sibling.\n\t\t// Break the list after it. The inserted view item will be added in the broken space.\n\t\tconst viewItem = mapper.toViewElement( refItem );\n\t\tinsertPosition = viewWriter.breakContainer( viewWriter.createPositionAfter( viewItem ) );\n\t} else {\n\t\t// There is no list item with the same indent. Check the previous model item.\n\t\tif ( prevItem && prevItem.name == 'listItem' ) {\n\t\t\t// If it is a list item, it has to have a lower indent.\n\t\t\t// It means that the inserted item should be added to it as its nested item.\n\t\t\tinsertPosition = mapper.toViewPosition( model.createPositionAt( prevItem, 'end' ) );\n\t\t} else {\n\t\t\t// The previous item is not a list item (or does not exist at all).\n\t\t\t// Just map the position and insert the view item at the mapped position.\n\t\t\tinsertPosition = mapper.toViewPosition( model.createPositionBefore( modelItem ) );\n\t\t}\n\t}\n\n\tinsertPosition = positionAfterUiElements( insertPosition );\n\n\t// Insert the view item.\n\tviewWriter.insert( insertPosition, injectedList );\n\n\t// 2. Handle possible children of the injected model item.\n\tif ( prevItem && prevItem.name == 'listItem' ) {\n\t\tconst prevView = mapper.toViewElement( prevItem );\n\n\t\tconst walkerBoundaries = viewWriter.createRange( viewWriter.createPositionAt( prevView, 0 ), insertPosition );\n\t\tconst walker = walkerBoundaries.getWalker( { ignoreElementEnd: true } );\n\n\t\tfor ( const value of walker ) {\n\t\t\tif ( value.item.is( 'li' ) ) {\n\t\t\t\tconst breakPosition = viewWriter.breakContainer( viewWriter.createPositionBefore( value.item ) );\n\t\t\t\tconst viewList = value.item.parent;\n\n\t\t\t\tconst targetPosition = viewWriter.createPositionAt( injectedItem, 'end' );\n\t\t\t\tmergeViewLists( viewWriter, targetPosition.nodeBefore, targetPosition.nodeAfter );\n\t\t\t\tviewWriter.move( viewWriter.createRangeOn( viewList ), targetPosition );\n\n\t\t\t\twalker.position = breakPosition;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconst nextViewList = injectedList.nextSibling;\n\n\t\tif ( nextViewList && ( nextViewList.is( 'ul' ) || nextViewList.is( 'ol' ) ) ) {\n\t\t\tlet lastSubChild = null;\n\n\t\t\tfor ( const child of nextViewList.getChildren() ) {\n\t\t\t\tconst modelChild = mapper.toModelElement( child );\n\n\t\t\t\tif ( modelChild && modelChild.getAttribute( 'listIndent' ) > modelItem.getAttribute( 'listIndent' ) ) {\n\t\t\t\t\tlastSubChild = child;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( lastSubChild ) {\n\t\t\t\tviewWriter.breakContainer( viewWriter.createPositionAfter( lastSubChild ) );\n\t\t\t\tviewWriter.move( viewWriter.createRangeOn( lastSubChild.parent ), viewWriter.createPositionAt( injectedItem, 'end' ) );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Merge the inserted view list with its possible neighbor lists.\n\tmergeViewLists( viewWriter, injectedList, injectedList.nextSibling );\n\tmergeViewLists( viewWriter, injectedList.previousSibling, injectedList );\n}\n\n/**\n * Helper function that takes two parameters that are expected to be view list elements, and merges them.\n * The merge happens only if both parameters are list elements of the same type (the same element name and the same class attributes).\n *\n * @param {module:engine/view/downcastwriter~DowncastWriter} viewWriter The writer instance.\n * @param {module:engine/view/item~Item} firstList The first element to compare.\n * @param {module:engine/view/item~Item} secondList The second element to compare.\n * @returns {module:engine/view/position~Position|null} The position after merge or `null` when there was no merge.\n */\nexport function mergeViewLists( viewWriter, firstList, secondList ) {\n\t// Check if two lists are going to be merged.\n\tif ( !firstList || !secondList || ( firstList.name != 'ul' && firstList.name != 'ol' ) ) {\n\t\treturn null;\n\t}\n\n\t// Both parameters are list elements, so compare types now.\n\tif ( firstList.name != secondList.name || firstList.getAttribute( 'class' ) !== secondList.getAttribute( 'class' ) ) {\n\t\treturn null;\n\t}\n\n\treturn viewWriter.mergeContainers( viewWriter.createPositionAfter( firstList ) );\n}\n\n/**\n * Helper function that for a given `view.Position`, returns a `view.Position` that is after all `view.UIElement`s that\n * are after the given position.\n *\n * For example:\n * `<container:p>foo^<ui:span></ui:span><ui:span></ui:span>bar</container:p>`\n * For position ^, the position before \"bar\" will be returned.\n *\n * @param {module:engine/view/position~Position} viewPosition\n * @returns {module:engine/view/position~Position}\n */\nexport function positionAfterUiElements( viewPosition ) {\n\treturn viewPosition.getLastMatchingPosition( value => value.item.is( 'uiElement' ) );\n}\n\n/**\n * Helper function that searches for a previous list item sibling of a given model item that meets the given criteria\n * passed by the options object.\n *\n * @param {module:engine/model/item~Item} modelItem\n * @param {Object} options Search criteria.\n * @param {Boolean} [options.sameIndent=false] Whether the sought sibling should have the same indentation.\n * @param {Boolean} [options.smallerIndent=false] Whether the sought sibling should have a smaller indentation.\n * @param {Number} [options.listIndent] The reference indentation.\n * @returns {module:engine/model/item~Item|null}\n */\nexport function getSiblingListItem( modelItem, options ) {\n\tconst sameIndent = !!options.sameIndent;\n\tconst smallerIndent = !!options.smallerIndent;\n\tconst indent = options.listIndent;\n\n\tlet item = modelItem;\n\n\twhile ( item && item.name == 'listItem' ) {\n\t\tconst itemIndent = item.getAttribute( 'listIndent' );\n\n\t\tif ( ( sameIndent && indent == itemIndent ) || ( smallerIndent && indent > itemIndent ) ) {\n\t\t\treturn item;\n\t\t}\n\n\t\titem = item.previousSibling;\n\t}\n\n\treturn null;\n}\n\n/**\n * Helper method for creating a UI button and linking it with an appropriate command.\n *\n * @private\n * @param {module:core/editor/editor~Editor} editor The editor instance to which the UI component will be added.\n * @param {String} commandName The name of the command.\n * @param {Object} label The button label.\n * @param {String} icon The source of the icon.\n */\nexport function createUIComponent( editor, commandName, label, icon ) {\n\teditor.ui.componentFactory.add( commandName, locale => {\n\t\tconst command = editor.commands.get( commandName );\n\t\tconst buttonView = new ButtonView( locale );\n\n\t\tbuttonView.set( {\n\t\t\tlabel,\n\t\t\ticon,\n\t\t\ttooltip: true,\n\t\t\tisToggleable: true\n\t\t} );\n\n\t\t// Bind button model to command.\n\t\tbuttonView.bind( 'isOn', 'isEnabled' ).to( command, 'value', 'isEnabled' );\n\n\t\t// Execute command.\n\t\tbuttonView.on( 'execute', () => {\n\t\t\teditor.execute( commandName );\n\t\t\teditor.editing.view.focus();\n\t\t} );\n\n\t\treturn buttonView;\n\t} );\n}\n\n// Implementation of getFillerOffset for view list item element.\n//\n// @returns {Number|null} Block filler offset or `null` if block filler is not needed.\nfunction getListItemFillerOffset() {\n\tconst hasOnlyLists = !this.isEmpty && ( this.getChild( 0 ).name == 'ul' || this.getChild( 0 ).name == 'ol' );\n\n\tif ( this.isEmpty || hasOnlyLists ) {\n\t\treturn 0;\n\t}\n\n\treturn getFillerOffset.call( this );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module list/converters\n */\n\nimport {\n\tgenerateLiInUl,\n\tinjectViewList,\n\tmergeViewLists,\n\tgetSiblingListItem,\n\tpositionAfterUiElements\n} from './utils';\nimport TreeWalker from '@ckeditor/ckeditor5-engine/src/model/treewalker';\n\n/**\n * A model-to-view converter for the `listItem` model element insertion.\n *\n * It creates a `<ul><li></li><ul>` (or `<ol>`) view structure out of a `listItem` model element, inserts it at the correct\n * position, and merges the list with surrounding lists (if available).\n *\n * @see module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:insert\n * @param {module:engine/model/model~Model} model Model instance.\n * @returns {Function} Returns a conversion callback.\n */\nexport function modelViewInsertion( model ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst consumable = conversionApi.consumable;\n\n\t\tif ( !consumable.test( data.item, 'insert' ) ||\n\t\t\t!consumable.test( data.item, 'attribute:listType' ) ||\n\t\t\t!consumable.test( data.item, 'attribute:listIndent' )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconsumable.consume( data.item, 'insert' );\n\t\tconsumable.consume( data.item, 'attribute:listType' );\n\t\tconsumable.consume( data.item, 'attribute:listIndent' );\n\n\t\tconst modelItem = data.item;\n\t\tconst viewItem = generateLiInUl( modelItem, conversionApi );\n\n\t\tinjectViewList( modelItem, viewItem, conversionApi, model );\n\t};\n}\n\n/**\n * A model-to-view converter for the `listItem` model element removal.\n *\n * @see module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:remove\n * @param {module:engine/model/model~Model} model Model instance.\n * @returns {Function} Returns a conversion callback.\n */\nexport function modelViewRemove( model ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\tconst viewStart = conversionApi.mapper.toViewPosition( data.position ).getLastMatchingPosition( value => !value.item.is( 'li' ) );\n\t\tconst viewItem = viewStart.nodeAfter;\n\t\tconst viewWriter = conversionApi.writer;\n\n\t\t// 1. Break the container after and before the list item.\n\t\t// This will create a view list with one view list item - the one to remove.\n\t\tviewWriter.breakContainer( viewWriter.createPositionBefore( viewItem ) );\n\t\tviewWriter.breakContainer( viewWriter.createPositionAfter( viewItem ) );\n\n\t\t// 2. Remove the list with the item to remove.\n\t\tconst viewList = viewItem.parent;\n\t\tconst viewListPrev = viewList.previousSibling;\n\t\tconst removeRange = viewWriter.createRangeOn( viewList );\n\t\tconst removed = viewWriter.remove( removeRange );\n\n\t\t// 3. Merge the whole created by breaking and removing the list.\n\t\tif ( viewListPrev && viewListPrev.nextSibling ) {\n\t\t\tmergeViewLists( viewWriter, viewListPrev, viewListPrev.nextSibling );\n\t\t}\n\n\t\t// 4. Bring back nested list that was in the removed <li>.\n\t\tconst modelItem = conversionApi.mapper.toModelElement( viewItem );\n\n\t\thoistNestedLists( modelItem.getAttribute( 'listIndent' ) + 1, data.position, removeRange.start, viewItem, conversionApi, model );\n\n\t\t// 5. Unbind removed view item and all children.\n\t\tfor ( const child of viewWriter.createRangeIn( removed ).getItems() ) {\n\t\t\tconversionApi.mapper.unbindViewElement( child );\n\t\t}\n\n\t\tevt.stop();\n\t};\n}\n\n/**\n * A model-to-view converter for the `type` attribute change on the `listItem` model element.\n *\n * This change means that the `<li>` element parent changes from `<ul>` to `<ol>` (or vice versa). This is accomplished\n * by breaking view elements and changing their name. The next {@link module:list/converters~modelViewMergeAfterChangeType}\n * converter will attempt to merge split nodes.\n *\n * Splitting this conversion into 2 steps makes it possible to add an additional conversion in the middle.\n * Check {@link module:list/todolistconverters~modelViewChangeType} to see an example of it.\n *\n * @see module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data Additional information about the change.\n * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface.\n */\nexport function modelViewChangeType( evt, data, conversionApi ) {\n\tif ( !conversionApi.consumable.consume( data.item, 'attribute:listType' ) ) {\n\t\treturn;\n\t}\n\n\tconst viewItem = conversionApi.mapper.toViewElement( data.item );\n\tconst viewWriter = conversionApi.writer;\n\n\t// Break the container after and before the list item.\n\t// This will create a view list with one view list item -- the one that changed type.\n\tviewWriter.breakContainer( viewWriter.createPositionBefore( viewItem ) );\n\tviewWriter.breakContainer( viewWriter.createPositionAfter( viewItem ) );\n\n\t// Change name of the view list that holds the changed view item.\n\t// We cannot just change name property, because that would not render properly.\n\tconst viewList = viewItem.parent;\n\tconst listName = data.attributeNewValue == 'numbered' ? 'ol' : 'ul';\n\n\tviewWriter.rename( listName, viewList );\n}\n\n/**\n * A model-to-view converter that attempts to merge nodes split by {@link module:list/converters~modelViewChangeType}.\n *\n * @see module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data Additional information about the change.\n * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface.\n */\nexport function modelViewMergeAfterChangeType( evt, data, conversionApi ) {\n\tconst viewItem = conversionApi.mapper.toViewElement( data.item );\n\tconst viewList = viewItem.parent;\n\tconst viewWriter = conversionApi.writer;\n\n\t// Merge the changed view list with other lists, if possible.\n\tmergeViewLists( viewWriter, viewList, viewList.nextSibling );\n\tmergeViewLists( viewWriter, viewList.previousSibling, viewList );\n\n\t// Consumable insertion of children inside the item. They are already handled by re-building the item in view.\n\tfor ( const child of data.item.getChildren() ) {\n\t\tconversionApi.consumable.consume( child, 'insert' );\n\t}\n}\n\n/**\n * A model-to-view converter for the `listIndent` attribute change on the `listItem` model element.\n *\n * @see module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute\n * @param {module:engine/model/model~Model} model Model instance.\n * @returns {Function} Returns a conversion callback.\n */\nexport function modelViewChangeIndent( model ) {\n\treturn ( evt, data, conversionApi ) => {\n\t\tif ( !conversionApi.consumable.consume( data.item, 'attribute:listIndent' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewItem = conversionApi.mapper.toViewElement( data.item );\n\t\tconst viewWriter = conversionApi.writer;\n\n\t\t// 1. Break the container after and before the list item.\n\t\t// This will create a view list with one view list item -- the one that changed type.\n\t\tviewWriter.breakContainer( viewWriter.createPositionBefore( viewItem ) );\n\t\tviewWriter.breakContainer( viewWriter.createPositionAfter( viewItem ) );\n\n\t\t// 2. Extract view list with changed view list item and merge \"hole\" possibly created by breaking and removing elements.\n\t\tconst viewList = viewItem.parent;\n\t\tconst viewListPrev = viewList.previousSibling;\n\t\tconst removeRange = viewWriter.createRangeOn( viewList );\n\t\tviewWriter.remove( removeRange );\n\n\t\tif ( viewListPrev && viewListPrev.nextSibling ) {\n\t\t\tmergeViewLists( viewWriter, viewListPrev, viewListPrev.nextSibling );\n\t\t}\n\n\t\t// 3. Bring back nested list that was in the removed <li>.\n\t\thoistNestedLists( data.attributeOldValue + 1, data.range.start, removeRange.start, viewItem, conversionApi, model );\n\n\t\t// 4. Inject view list like it is newly inserted.\n\t\tinjectViewList( data.item, viewItem, conversionApi, model );\n\n\t\t// 5. Consume insertion of children inside the item. They are already handled by re-building the item in view.\n\t\tfor ( const child of data.item.getChildren() ) {\n\t\t\tconversionApi.consumable.consume( child, 'insert' );\n\t\t}\n\t};\n}\n\n/**\n * A special model-to-view converter introduced by the {@link module:list/list~List list feature}. This converter is fired for\n * insert change of every model item, and should be fired before the actual converter. The converter checks whether the inserted\n * model item is a non-`listItem` element. If it is, and it is inserted inside a view list, the converter breaks the\n * list so the model element is inserted to the view parent element corresponding to its model parent element.\n *\n * The converter prevents such situations:\n *\n *\t\t// Model:                        // View:\n *\t\t<listItem>foo</listItem>         <ul>\n *\t\t<listItem>bar</listItem>             <li>foo</li>\n *\t\t                                     <li>bar</li>\n *\t\t                                 </ul>\n *\n *\t\t// After change:                 // Correct view guaranteed by this converter:\n *\t\t<listItem>foo</listItem>         <ul><li>foo</li></ul><p>xxx</p><ul><li>bar</li></ul>\n *\t\t<paragraph>xxx</paragraph>       // Instead of this wrong view state:\n *\t\t<listItem>bar</listItem>         <ul><li>foo</li><p>xxx</p><li>bar</li></ul>\n *\n * @see module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:insert\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data Additional information about the change.\n * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface.\n */\nexport function modelViewSplitOnInsert( evt, data, conversionApi ) {\n\tif ( data.item.name != 'listItem' ) {\n\t\tlet viewPosition = conversionApi.mapper.toViewPosition( data.range.start );\n\n\t\tconst viewWriter = conversionApi.writer;\n\t\tconst lists = [];\n\n\t\t// Break multiple ULs/OLs if there are.\n\t\t//\n\t\t// Imagine following list:\n\t\t//\n\t\t// 1 --------\n\t\t//   1.1 --------\n\t\t//     1.1.1 --------\n\t\t//     1.1.2 --------\n\t\t//     1.1.3 --------\n\t\t//       1.1.3.1 --------\n\t\t//   1.2 --------\n\t\t//     1.2.1 --------\n\t\t// 2 --------\n\t\t//\n\t\t// Insert paragraph after item 1.1.1:\n\t\t//\n\t\t// 1 --------\n\t\t//   1.1 --------\n\t\t//     1.1.1 --------\n\t\t//\n\t\t// Lorem ipsum.\n\t\t//\n\t\t//     1.1.2 --------\n\t\t//     1.1.3 --------\n\t\t//       1.1.3.1 --------\n\t\t//   1.2 --------\n\t\t//     1.2.1 --------\n\t\t// 2 --------\n\t\t//\n\t\t// In this case 1.1.2 has to become beginning of a new list.\n\t\t// We need to break list before 1.1.2 (obvious), then we need to break list also before 1.2.\n\t\t// Then we need to move those broken pieces one after another and merge:\n\t\t//\n\t\t// 1 --------\n\t\t//   1.1 --------\n\t\t//     1.1.1 --------\n\t\t//\n\t\t// Lorem ipsum.\n\t\t//\n\t\t// 1.1.2 --------\n\t\t//   1.1.3 --------\n\t\t//     1.1.3.1 --------\n\t\t// 1.2 --------\n\t\t//   1.2.1 --------\n\t\t// 2 --------\n\t\t//\n\t\twhile ( viewPosition.parent.name == 'ul' || viewPosition.parent.name == 'ol' ) {\n\t\t\tviewPosition = viewWriter.breakContainer( viewPosition );\n\n\t\t\tif ( viewPosition.parent.name != 'li' ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Remove lists that are after inserted element.\n\t\t\t// They will be brought back later, below the inserted element.\n\t\t\tconst removeStart = viewPosition;\n\t\t\tconst removeEnd = viewWriter.createPositionAt( viewPosition.parent, 'end' );\n\n\t\t\t// Don't remove if there is nothing to remove.\n\t\t\tif ( !removeStart.isEqual( removeEnd ) ) {\n\t\t\t\tconst removed = viewWriter.remove( viewWriter.createRange( removeStart, removeEnd ) );\n\t\t\t\tlists.push( removed );\n\t\t\t}\n\n\t\t\tviewPosition = viewWriter.createPositionAfter( viewPosition.parent );\n\t\t}\n\n\t\t// Bring back removed lists.\n\t\tif ( lists.length > 0 ) {\n\t\t\tfor ( let i = 0; i < lists.length; i++ ) {\n\t\t\t\tconst previousList = viewPosition.nodeBefore;\n\t\t\t\tconst insertedRange = viewWriter.insert( viewPosition, lists[ i ] );\n\t\t\t\tviewPosition = insertedRange.end;\n\n\t\t\t\t// Don't merge first list! We want a split in that place (this is why this converter is introduced).\n\t\t\t\tif ( i > 0 ) {\n\t\t\t\t\tconst mergePos = mergeViewLists( viewWriter, previousList, previousList.nextSibling );\n\n\t\t\t\t\t// If `mergePos` is in `previousList` it means that the lists got merged.\n\t\t\t\t\t// In this case, we need to fix insert position.\n\t\t\t\t\tif ( mergePos && mergePos.parent == previousList ) {\n\t\t\t\t\t\tviewPosition.offset--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Merge last inserted list with element after it.\n\t\t\tmergeViewLists( viewWriter, viewPosition.nodeBefore, viewPosition.nodeAfter );\n\t\t}\n\t}\n}\n\n/**\n * A special model-to-view converter introduced by the {@link module:list/list~List list feature}. This converter takes care of\n * merging view lists after something is removed or moved from near them.\n *\n * Example:\n *\n *\t\t// Model:                        // View:\n *\t\t<listItem>foo</listItem>         <ul><li>foo</li></ul>\n *\t\t<paragraph>xxx</paragraph>       <p>xxx</p>\n *\t\t<listItem>bar</listItem>         <ul><li>bar</li></ul>\n *\n *\t\t// After change:                 // Correct view guaranteed by this converter:\n *\t\t<listItem>foo</listItem>         <ul>\n *\t\t<listItem>bar</listItem>             <li>foo</li>\n *\t\t                                     <li>bar</li>\n *\t\t                                 </ul>\n *\n * @see module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:remove\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data Additional information about the change.\n * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface.\n */\nexport function modelViewMergeAfter( evt, data, conversionApi ) {\n\tconst viewPosition = conversionApi.mapper.toViewPosition( data.position );\n\tconst viewItemPrev = viewPosition.nodeBefore;\n\tconst viewItemNext = viewPosition.nodeAfter;\n\n\t// Merge lists if something (remove, move) was done from inside of list.\n\t// Merging will be done only if both items are view lists of the same type.\n\t// The check is done inside the helper function.\n\tmergeViewLists( conversionApi.writer, viewItemPrev, viewItemNext );\n}\n\n/**\n * A view-to-model converter that converts the `<li>` view elements into the `listItem` model elements.\n *\n * To set correct values of the `listType` and `listIndent` attributes the converter:\n * * checks `<li>`'s parent,\n * * stores and increases the `conversionApi.store.indent` value when `<li>`'s sub-items are converted.\n *\n * @see module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data An object containing conversion input and a placeholder for conversion output and possibly other values.\n * @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion interface to be used by the callback.\n */\nexport function viewModelConverter( evt, data, conversionApi ) {\n\tif ( conversionApi.consumable.consume( data.viewItem, { name: true } ) ) {\n\t\tconst writer = conversionApi.writer;\n\n\t\t// 1. Create `listItem` model element.\n\t\tconst listItem = writer.createElement( 'listItem' );\n\n\t\t// 2. Handle `listItem` model element attributes.\n\t\tconst indent = getIndent( data.viewItem );\n\n\t\twriter.setAttribute( 'listIndent', indent, listItem );\n\n\t\t// Set 'bulleted' as default. If this item is pasted into a context,\n\t\tconst type = data.viewItem.parent && data.viewItem.parent.name == 'ol' ? 'numbered' : 'bulleted';\n\t\twriter.setAttribute( 'listType', type, listItem );\n\n\t\t// Try to find allowed parent for list item.\n\t\tconst splitResult = conversionApi.splitToAllowedParent( listItem, data.modelCursor );\n\n\t\t// When there is no allowed parent it means that list item cannot be converted at current model position\n\t\t// and in any of position ancestors.\n\t\tif ( !splitResult ) {\n\t\t\treturn;\n\t\t}\n\n\t\twriter.insert( listItem, splitResult.position );\n\n\t\tconst nextPosition = viewToModelListItemChildrenConverter( listItem, data.viewItem.getChildren(), conversionApi );\n\n\t\t// Result range starts before the first item and ends after the last.\n\t\tdata.modelRange = writer.createRange( data.modelCursor, nextPosition );\n\n\t\t// When `data.modelCursor` parent had to be split to insert list item...\n\t\tif ( splitResult.cursorParent ) {\n\t\t\t// Continue conversion in the split element.\n\t\t\tdata.modelCursor = writer.createPositionAt( splitResult.cursorParent, 0 );\n\t\t} else {\n\t\t\t// Otherwise continue conversion after the last list item.\n\t\t\tdata.modelCursor = data.modelRange.end;\n\t\t}\n\t}\n}\n\n/**\n * A view-to-model converter for the `<ul>` and `<ol>` view elements that cleans the input view of garbage.\n * This is mostly to clean whitespaces from between the `<li>` view elements inside the view list element, however, also\n * incorrect data can be cleared if the view was incorrect.\n *\n * @see module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data An object containing conversion input and a placeholder for conversion output and possibly other values.\n * @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion interface to be used by the callback.\n */\nexport function cleanList( evt, data, conversionApi ) {\n\tif ( conversionApi.consumable.test( data.viewItem, { name: true } ) ) {\n\t\t// Caching children because when we start removing them iterating fails.\n\t\tconst children = Array.from( data.viewItem.getChildren() );\n\n\t\tfor ( const child of children ) {\n\t\t\tconst isWrongElement = !( child.is( 'li' ) || isList( child ) );\n\n\t\t\tif ( isWrongElement ) {\n\t\t\t\tchild._remove();\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A view-to-model converter for the `<li>` elements that cleans whitespace formatting from the input view.\n *\n * @see module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data An object containing conversion input and a placeholder for conversion output and possibly other values.\n * @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion interface to be used by the callback.\n */\nexport function cleanListItem( evt, data, conversionApi ) {\n\tif ( conversionApi.consumable.test( data.viewItem, { name: true } ) ) {\n\t\tif ( data.viewItem.childCount === 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst children = [ ...data.viewItem.getChildren() ];\n\n\t\tlet foundList = false;\n\t\tlet firstNode = true;\n\n\t\tfor ( const child of children ) {\n\t\t\tif ( foundList && !isList( child ) ) {\n\t\t\t\tchild._remove();\n\t\t\t}\n\n\t\t\tif ( child.is( 'text' ) ) {\n\t\t\t\t// If this is the first node and it's a text node, left-trim it.\n\t\t\t\tif ( firstNode ) {\n\t\t\t\t\tchild._data = child.data.replace( /^\\s+/, '' );\n\t\t\t\t}\n\n\t\t\t\t// If this is the last text node before <ul> or <ol>, right-trim it.\n\t\t\t\tif ( !child.nextSibling || isList( child.nextSibling ) ) {\n\t\t\t\t\tchild._data = child.data.replace( /\\s+$/, '' );\n\t\t\t\t}\n\t\t\t} else if ( isList( child ) ) {\n\t\t\t\t// If this is a <ul> or <ol>, do not process it, just mark that we already visited list element.\n\t\t\t\tfoundList = true;\n\t\t\t}\n\n\t\t\tfirstNode = false;\n\t\t}\n\t}\n}\n\n/**\n * Returns a callback for model position to view position mapping for {@link module:engine/conversion/mapper~Mapper}. The callback fixes\n * positions between the `listItem` elements that would be incorrectly mapped because of how list items are represented in the model\n * and in the view.\n *\n * @see module:engine/conversion/mapper~Mapper#event:modelToViewPosition\n * @param {module:engine/view/view~View} view A view instance.\n * @returns {Function}\n */\nexport function modelToViewPosition( view ) {\n\treturn ( evt, data ) => {\n\t\tif ( data.isPhantom ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst modelItem = data.modelPosition.nodeBefore;\n\n\t\tif ( modelItem && modelItem.is( 'listItem' ) ) {\n\t\t\tconst viewItem = data.mapper.toViewElement( modelItem );\n\t\t\tconst topmostViewList = viewItem.getAncestors().find( isList );\n\t\t\tconst walker = view.createPositionAt( viewItem, 0 ).getWalker();\n\n\t\t\tfor ( const value of walker ) {\n\t\t\t\tif ( value.type == 'elementStart' && value.item.is( 'li' ) ) {\n\t\t\t\t\tdata.viewPosition = value.previousPosition;\n\n\t\t\t\t\tbreak;\n\t\t\t\t} else if ( value.type == 'elementEnd' && value.item == topmostViewList ) {\n\t\t\t\t\tdata.viewPosition = value.nextPosition;\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * The callback for view position to model position mapping for {@link module:engine/conversion/mapper~Mapper}. The callback fixes\n * positions between the `<li>` elements that would be incorrectly mapped because of how list items are represented in the model\n * and in the view.\n *\n * @see module:engine/conversion/mapper~Mapper#event:viewToModelPosition\n * @param {module:engine/model/model~Model} model Model instance.\n * @returns {Function} Returns a conversion callback.\n */\nexport function viewToModelPosition( model ) {\n\treturn ( evt, data ) => {\n\t\tconst viewPos = data.viewPosition;\n\t\tconst viewParent = viewPos.parent;\n\t\tconst mapper = data.mapper;\n\n\t\tif ( viewParent.name == 'ul' || viewParent.name == 'ol' ) {\n\t\t\t// Position is directly in <ul> or <ol>.\n\t\t\tif ( !viewPos.isAtEnd ) {\n\t\t\t\t// If position is not at the end, it must be before <li>.\n\t\t\t\t// Get that <li>, map it to `listItem` and set model position before that `listItem`.\n\t\t\t\tconst modelNode = mapper.toModelElement( viewPos.nodeAfter );\n\n\t\t\t\tdata.modelPosition = model.createPositionBefore( modelNode );\n\t\t\t} else {\n\t\t\t\t// Position is at the end of <ul> or <ol>, so there is no <li> after it to be mapped.\n\t\t\t\t// There is <li> before the position, but we cannot just map it to `listItem` and set model position after it,\n\t\t\t\t// because that <li> may contain nested items.\n\t\t\t\t// We will check \"model length\" of that <li>, in other words - how many `listItem`s are in that <li>.\n\t\t\t\tconst modelNode = mapper.toModelElement( viewPos.nodeBefore );\n\t\t\t\tconst modelLength = mapper.getModelLength( viewPos.nodeBefore );\n\n\t\t\t\t// Then we get model position before mapped `listItem` and shift it accordingly.\n\t\t\t\tdata.modelPosition = model.createPositionBefore( modelNode ).getShiftedBy( modelLength );\n\t\t\t}\n\n\t\t\tevt.stop();\n\t\t} else if (\n\t\t\tviewParent.name == 'li' &&\n\t\t\tviewPos.nodeBefore &&\n\t\t\t( viewPos.nodeBefore.name == 'ul' || viewPos.nodeBefore.name == 'ol' )\n\t\t) {\n\t\t\t// In most cases when view position is in <li> it is in text and this is a correct position.\n\t\t\t// However, if position is after <ul> or <ol> we have to fix it -- because in model <ul>/<ol> are not in the `listItem`.\n\t\t\tconst modelNode = mapper.toModelElement( viewParent );\n\n\t\t\t// Check all <ul>s and <ol>s that are in the <li> but before mapped position.\n\t\t\t// Get model length of those elements and then add it to the offset of `listItem` mapped to the original <li>.\n\t\t\tlet modelLength = 1; // Starts from 1 because the original <li> has to be counted in too.\n\t\t\tlet viewList = viewPos.nodeBefore;\n\n\t\t\twhile ( viewList && isList( viewList ) ) {\n\t\t\t\tmodelLength += mapper.getModelLength( viewList );\n\n\t\t\t\tviewList = viewList.previousSibling;\n\t\t\t}\n\n\t\t\tdata.modelPosition = model.createPositionBefore( modelNode ).getShiftedBy( modelLength );\n\n\t\t\tevt.stop();\n\t\t}\n\t};\n}\n\n/**\n * Post-fixer that reacts to changes on document and fixes incorrect model states.\n *\n * In the example below, there is a correct list structure.\n * Then the middle element is removed so the list structure will become incorrect:\n *\n *\t\t<listItem listType=\"bulleted\" listIndent=0>Item 1</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=1>Item 2</listItem>   <--- this is removed.\n *\t\t<listItem listType=\"bulleted\" listIndent=2>Item 3</listItem>\n *\n * The list structure after the middle element is removed:\n *\n * \t\t<listItem listType=\"bulleted\" listIndent=0>Item 1</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=2>Item 3</listItem>\n *\n * Should become:\n *\n *\t\t<listItem listType=\"bulleted\" listIndent=0>Item 1</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=1>Item 3</listItem>   <--- note that indent got post-fixed.\n *\n * @param {module:engine/model/model~Model} model The data model.\n * @param {module:engine/model/writer~Writer} writer The writer to do changes with.\n * @returns {Boolean} `true` if any change has been applied, `false` otherwise.\n */\nexport function modelChangePostFixer( model, writer ) {\n\tconst changes = model.document.differ.getChanges();\n\tconst itemToListHead = new Map();\n\n\tlet applied = false;\n\n\tfor ( const entry of changes ) {\n\t\tif ( entry.type == 'insert' && entry.name == 'listItem' ) {\n\t\t\t_addListToFix( entry.position );\n\t\t} else if ( entry.type == 'insert' && entry.name != 'listItem' ) {\n\t\t\tif ( entry.name != '$text' ) {\n\t\t\t\t// In case of renamed element.\n\t\t\t\tconst item = entry.position.nodeAfter;\n\n\t\t\t\tif ( item.hasAttribute( 'listIndent' ) ) {\n\t\t\t\t\twriter.removeAttribute( 'listIndent', item );\n\n\t\t\t\t\tapplied = true;\n\t\t\t\t}\n\n\t\t\t\tif ( item.hasAttribute( 'listType' ) ) {\n\t\t\t\t\twriter.removeAttribute( 'listType', item );\n\n\t\t\t\t\tapplied = true;\n\t\t\t\t}\n\n\t\t\t\tfor ( const innerItem of Array.from( model.createRangeIn( item ) ).filter( e => e.item.is( 'listItem' ) ) ) {\n\t\t\t\t\t_addListToFix( innerItem.previousPosition );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst posAfter = entry.position.getShiftedBy( entry.length );\n\n\t\t\t_addListToFix( posAfter );\n\t\t} else if ( entry.type == 'remove' && entry.name == 'listItem' ) {\n\t\t\t_addListToFix( entry.position );\n\t\t} else if ( entry.type == 'attribute' && entry.attributeKey == 'listIndent' ) {\n\t\t\t_addListToFix( entry.range.start );\n\t\t} else if ( entry.type == 'attribute' && entry.attributeKey == 'listType' ) {\n\t\t\t_addListToFix( entry.range.start );\n\t\t}\n\t}\n\n\tfor ( const listHead of itemToListHead.values() ) {\n\t\t_fixListIndents( listHead );\n\t\t_fixListTypes( listHead );\n\t}\n\n\treturn applied;\n\n\tfunction _addListToFix( position ) {\n\t\tconst prev = position.nodeBefore;\n\n\t\tif ( !prev || !prev.is( 'listItem' ) ) {\n\t\t\tconst item = position.nodeAfter;\n\n\t\t\tif ( item && item.is( 'listItem' ) ) {\n\t\t\t\titemToListHead.set( item, item );\n\t\t\t}\n\t\t} else {\n\t\t\tlet listHead = prev;\n\n\t\t\tif ( itemToListHead.has( listHead ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\twhile ( listHead.previousSibling && listHead.previousSibling.is( 'listItem' ) ) {\n\t\t\t\tlistHead = listHead.previousSibling;\n\n\t\t\t\tif ( itemToListHead.has( listHead ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\titemToListHead.set( position.nodeBefore, listHead );\n\t\t}\n\t}\n\n\tfunction _fixListIndents( item ) {\n\t\tlet maxIndent = 0;\n\t\tlet fixBy = null;\n\n\t\twhile ( item && item.is( 'listItem' ) ) {\n\t\t\tconst itemIndent = item.getAttribute( 'listIndent' );\n\n\t\t\tif ( itemIndent > maxIndent ) {\n\t\t\t\tlet newIndent;\n\n\t\t\t\tif ( fixBy === null ) {\n\t\t\t\t\tfixBy = itemIndent - maxIndent;\n\t\t\t\t\tnewIndent = maxIndent;\n\t\t\t\t} else {\n\t\t\t\t\tif ( fixBy > itemIndent ) {\n\t\t\t\t\t\tfixBy = itemIndent;\n\t\t\t\t\t}\n\n\t\t\t\t\tnewIndent = itemIndent - fixBy;\n\t\t\t\t}\n\n\t\t\t\twriter.setAttribute( 'listIndent', newIndent, item );\n\n\t\t\t\tapplied = true;\n\t\t\t} else {\n\t\t\t\tfixBy = null;\n\t\t\t\tmaxIndent = item.getAttribute( 'listIndent' ) + 1;\n\t\t\t}\n\n\t\t\titem = item.nextSibling;\n\t\t}\n\t}\n\n\tfunction _fixListTypes( item ) {\n\t\tlet typesStack = [];\n\t\tlet prev = null;\n\n\t\twhile ( item && item.is( 'listItem' ) ) {\n\t\t\tconst itemIndent = item.getAttribute( 'listIndent' );\n\n\t\t\tif ( prev && prev.getAttribute( 'listIndent' ) > itemIndent ) {\n\t\t\t\ttypesStack = typesStack.slice( 0, itemIndent + 1 );\n\t\t\t}\n\n\t\t\tif ( itemIndent != 0 ) {\n\t\t\t\tif ( typesStack[ itemIndent ] ) {\n\t\t\t\t\tconst type = typesStack[ itemIndent ];\n\n\t\t\t\t\tif ( item.getAttribute( 'listType' ) != type ) {\n\t\t\t\t\t\twriter.setAttribute( 'listType', type, item );\n\n\t\t\t\t\t\tapplied = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttypesStack[ itemIndent ] = item.getAttribute( 'listType' );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprev = item;\n\t\t\titem = item.nextSibling;\n\t\t}\n\t}\n}\n\n/**\n * A fixer for pasted content that includes list items.\n *\n * It fixes indentation of pasted list items so the pasted items match correctly to the context they are pasted into.\n *\n * Example:\n *\n *\t\t<listItem listType=\"bulleted\" listIndent=0>A</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=1>B^</listItem>\n *\t\t// At ^ paste:  <listItem listType=\"bulleted\" listIndent=4>X</listItem>\n *\t\t//              <listItem listType=\"bulleted\" listIndent=5>Y</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=2>C</listItem>\n *\n * Should become:\n *\n *\t\t<listItem listType=\"bulleted\" listIndent=0>A</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=1>BX</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=2>Y/listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=2>C</listItem>\n *\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Array} args Arguments of {@link module:engine/model/model~Model#insertContent}.\n */\nexport function modelIndentPasteFixer( evt, [ content, selectable ] ) {\n\t// Check whether inserted content starts from a `listItem`. If it does not, it means that there are some other\n\t// elements before it and there is no need to fix indents, because even if we insert that content into a list,\n\t// that list will be broken.\n\t// Note: we also need to handle singular elements because inserting item with indent 0 into 0,1,[],2\n\t// would create incorrect model.\n\tlet item = content.is( 'documentFragment' ) ? content.getChild( 0 ) : content;\n\n\tlet selection;\n\n\tif ( !selectable ) {\n\t\tselection = this.document.selection;\n\t} else {\n\t\tselection = this.createSelection( selectable );\n\t}\n\n\tif ( item && item.is( 'listItem' ) ) {\n\t\t// Get a reference list item. Inserted list items will be fixed according to that item.\n\t\tconst pos = selection.getFirstPosition();\n\t\tlet refItem = null;\n\n\t\tif ( pos.parent.is( 'listItem' ) ) {\n\t\t\trefItem = pos.parent;\n\t\t} else if ( pos.nodeBefore && pos.nodeBefore.is( 'listItem' ) ) {\n\t\t\trefItem = pos.nodeBefore;\n\t\t}\n\n\t\t// If there is `refItem` it means that we do insert list items into an existing list.\n\t\tif ( refItem ) {\n\t\t\t// First list item in `data` has indent equal to 0 (it is a first list item). It should have indent equal\n\t\t\t// to the indent of reference item. We have to fix the first item and all of it's children and following siblings.\n\t\t\t// Indent of all those items has to be adjusted to reference item.\n\t\t\tconst indentChange = refItem.getAttribute( 'listIndent' );\n\n\t\t\t// Fix only if there is anything to fix.\n\t\t\tif ( indentChange > 0 ) {\n\t\t\t\t// Adjust indent of all \"first\" list items in inserted data.\n\t\t\t\twhile ( item && item.is( 'listItem' ) ) {\n\t\t\t\t\titem._setAttribute( 'listIndent', item.getAttribute( 'listIndent' ) + indentChange );\n\n\t\t\t\t\titem = item.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Helper function that converts children of a given `<li>` view element into corresponding model elements.\n// The function maintains proper order of elements if model `listItem` is split during the conversion\n// due to block children conversion.\n//\n// @param {module:engine/model/element~Element} listItemModel List item model element to which converted children will be inserted.\n// @param {Iterable.<module:engine/view/node~Node>} viewChildren View elements which will be converted.\n// @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion interface to be used by the callback.\n// @returns {module:engine/model/position~Position} Position on which next elements should be inserted after children conversion.\nfunction viewToModelListItemChildrenConverter( listItemModel, viewChildren, conversionApi ) {\n\tconst { writer, schema } = conversionApi;\n\n\t// A position after the last inserted `listItem`.\n\tlet nextPosition = writer.createPositionAfter( listItemModel );\n\n\t// Check all children of the converted `<li>`. At this point we assume there are no \"whitespace\" view text nodes\n\t// in view list, between view list items. This should be handled by `<ul>` and `<ol>` converters.\n\tfor ( const child of viewChildren ) {\n\t\tif ( child.name == 'ul' || child.name == 'ol' ) {\n\t\t\t// If the children is a list, we will insert its conversion result after currently handled `listItem`.\n\t\t\t// Then, next insertion position will be set after all the new list items (and maybe other elements if\n\t\t\t// something split list item).\n\t\t\t//\n\t\t\t// If this is a list, we expect that some `listItem`s and possibly other blocks will be inserted, however `.modelCursor`\n\t\t\t// should be set after last `listItem` (or block). This is why it feels safe to use it as `nextPosition`\n\t\t\tnextPosition = conversionApi.convertItem( child, nextPosition ).modelCursor;\n\t\t} else {\n\t\t\t// If this is not a list, try inserting content at the end of the currently handled `listItem`.\n\t\t\tconst result = conversionApi.convertItem( child, writer.createPositionAt( listItemModel, 'end' ) );\n\n\t\t\t// It may end up that the current `listItem` becomes split (if that content cannot be inside `listItem`). For example:\n\t\t\t//\n\t\t\t// <li><p>Foo</p></li>\n\t\t\t//\n\t\t\t// will be converted to:\n\t\t\t//\n\t\t\t// <listItem></listItem><paragraph>Foo</paragraph><listItem></listItem>\n\t\t\t//\n\t\t\tconst convertedChild = result.modelRange.start.nodeAfter;\n\t\t\tconst wasSplit = convertedChild && convertedChild.is( 'element' ) && !schema.checkChild( listItemModel, convertedChild.name );\n\n\t\t\tif ( wasSplit ) {\n\t\t\t\t// As `lastListItem` got split, we need to update it to the second part of the split `listItem` element.\n\t\t\t\t//\n\t\t\t\t// `modelCursor` should be set to a position where the conversion should continue. There are multiple possible scenarios\n\t\t\t\t// that may happen. Usually, `modelCursor` (marked as `#` below) would point to the second list item after conversion:\n\t\t\t\t//\n\t\t\t\t//\t\t`<li><p>Foo</p></li>` -> `<listItem></listItem><paragraph>Foo</paragraph><listItem>#</listItem>`\n\t\t\t\t//\n\t\t\t\t// However, in some cases, like auto-paragraphing, the position is placed at the end of the block element:\n\t\t\t\t//\n\t\t\t\t//\t\t`<li><div>Foo</div></li>` -> `<listItem></listItem><paragraph>Foo#</paragraph><listItem></listItem>`\n\t\t\t\t//\n\t\t\t\t// or after an element if another element broken auto-paragraphed element:\n\t\t\t\t//\n\t\t\t\t//\t\t`<li><div><h2>Foo</h2></div></li>` -> `<listItem></listItem><heading1>Foo</heading1>#<listItem></listItem>`\n\t\t\t\t//\n\t\t\t\t// We need to check for such cases and use proper list item and position based on it.\n\t\t\t\t//\n\t\t\t\tif ( result.modelCursor.parent.is( 'listItem' ) ) {\n\t\t\t\t\t// (1).\n\t\t\t\t\tlistItemModel = result.modelCursor.parent;\n\t\t\t\t} else {\n\t\t\t\t\t// (2), (3).\n\t\t\t\t\tlistItemModel = findNextListItem( result.modelCursor );\n\t\t\t\t}\n\n\t\t\t\tnextPosition = writer.createPositionAfter( listItemModel );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn nextPosition;\n}\n\n// Helper function that seeks for a next list item starting from given `startPosition`.\nfunction findNextListItem( startPosition ) {\n\tconst treeWalker = new TreeWalker( { startPosition } );\n\n\tlet value;\n\n\tdo {\n\t\tvalue = treeWalker.next();\n\t} while ( !value.value.item.is( 'listItem' ) );\n\n\treturn value.value.item;\n}\n\n// Helper function that takes all children of given `viewRemovedItem` and moves them in a correct place, according\n// to other given parameters.\nfunction hoistNestedLists( nextIndent, modelRemoveStartPosition, viewRemoveStartPosition, viewRemovedItem, conversionApi, model ) {\n\t// Find correct previous model list item element.\n\t// The element has to have either same or smaller indent than given reference indent.\n\t// This will be the model element which will get nested items (if it has smaller indent) or sibling items (if it has same indent).\n\t// Keep in mind that such element might not be found, if removed item was the first item.\n\tconst prevModelItem = getSiblingListItem( modelRemoveStartPosition.nodeBefore, {\n\t\tsameIndent: true,\n\t\tsmallerIndent: true,\n\t\tlistIndent: nextIndent,\n\t\tfoo: 'b'\n\t} );\n\n\tconst mapper = conversionApi.mapper;\n\tconst viewWriter = conversionApi.writer;\n\n\t// Indent of found element or `null` if the element has not been found.\n\tconst prevIndent = prevModelItem ? prevModelItem.getAttribute( 'listIndent' ) : null;\n\n\tlet insertPosition;\n\n\tif ( !prevModelItem ) {\n\t\t// If element has not been found, simply insert lists at the position where the removed item was:\n\t\t//\n\t\t// Lorem ipsum.\n\t\t// 1 --------           <--- this is removed, no previous list item, put nested items in place of removed item.\n\t\t//   1.1 --------       <--- this is reference indent.\n\t\t//     1.1.1 --------\n\t\t//     1.1.2 --------\n\t\t//   1.2 --------\n\t\t//\n\t\t// Becomes:\n\t\t//\n\t\t// Lorem ipsum.\n\t\t// 1.1 --------\n\t\t//   1.1.1 --------\n\t\t//   1.1.2 --------\n\t\t// 1.2 --------\n\t\tinsertPosition = viewRemoveStartPosition;\n\t} else if ( prevIndent == nextIndent ) {\n\t\t// If element has been found and has same indent as reference indent it means that nested items should\n\t\t// become siblings of found element:\n\t\t//\n\t\t// 1 --------\n\t\t//   1.1 --------\n\t\t//   1.2 --------       <--- this is `prevModelItem`.\n\t\t// 2 --------           <--- this is removed, previous list item has indent same as reference indent.\n\t\t//   2.1 --------       <--- this is reference indent, this and 2.2 should become siblings of 1.2.\n\t\t//   2.2 --------\n\t\t//\n\t\t// Becomes:\n\t\t//\n\t\t// 1 --------\n\t\t//   1.1 --------\n\t\t//   1.2 --------\n\t\t//   2.1 --------\n\t\t//   2.2 --------\n\t\tconst prevViewList = mapper.toViewElement( prevModelItem ).parent;\n\t\tinsertPosition = viewWriter.createPositionAfter( prevViewList );\n\t} else {\n\t\t// If element has been found and has smaller indent as reference indent it means that nested items\n\t\t// should become nested items of found item:\n\t\t//\n\t\t// 1 --------           <--- this is `prevModelItem`.\n\t\t//   1.1 --------       <--- this is removed, previous list item has indent smaller than reference indent.\n\t\t//     1.1.1 --------   <--- this is reference indent, this and 1.1.1 should become nested items of 1.\n\t\t//     1.1.2 --------\n\t\t//   1.2 --------\n\t\t//\n\t\t// Becomes:\n\t\t//\n\t\t// 1 --------\n\t\t//   1.1.1 --------\n\t\t//   1.1.2 --------\n\t\t//   1.2 --------\n\t\t//\n\t\t// Note: in this case 1.1.1 have indent 2 while 1 have indent 0. In model that should not be possible,\n\t\t// because following item may have indent bigger only by one. But this is fixed by postfixer.\n\t\tconst modelPosition = model.createPositionAt( prevModelItem, 'end' );\n\t\tinsertPosition = mapper.toViewPosition( modelPosition );\n\t}\n\n\tinsertPosition = positionAfterUiElements( insertPosition );\n\n\t// Handle multiple lists. This happens if list item has nested numbered and bulleted lists. Following lists\n\t// are inserted after the first list (no need to recalculate insertion position for them).\n\tfor ( const child of [ ...viewRemovedItem.getChildren() ] ) {\n\t\tif ( isList( child ) ) {\n\t\t\tinsertPosition = viewWriter.move( viewWriter.createRangeOn( child ), insertPosition ).end;\n\n\t\t\tmergeViewLists( viewWriter, child, child.nextSibling );\n\t\t\tmergeViewLists( viewWriter, child.previousSibling, child );\n\t\t}\n\t}\n}\n\n// Checks if view element is a list type (ul or ol).\n//\n// @param {module:engine/view/element~Element} viewElement\n// @returns {Boolean}\nfunction isList( viewElement ) {\n\treturn viewElement.is( 'ol' ) || viewElement.is( 'ul' );\n}\n\n// Calculates the indent value for a list item. Handles HTML compliant and non-compliant lists.\n//\n// Also, fixes non HTML compliant lists indents:\n//\n//\t\tbefore:                                     fixed list:\n//\t\tOL                                          OL\n//\t\t|-> LI (parent LIs: 0)                      |-> LI     (indent: 0)\n//\t\t    |-> OL                                  |-> OL\n//\t\t        |-> OL                                  |\n//\t\t        |   |-> OL                              |\n//\t\t        |       |-> OL                          |\n//\t\t        |           |-> LI (parent LIs: 1)      |-> LI (indent: 1)\n//\t\t        |-> LI (parent LIs: 1)                  |-> LI (indent: 1)\n//\n//\t\tbefore:                                     fixed list:\n//\t\tOL                                          OL\n//\t\t|-> OL                                      |\n//\t\t    |-> OL                                  |\n//\t\t         |-> OL                             |\n//\t\t             |-> LI (parent LIs: 0)         |-> LI        (indent: 0)\n//\n//\t\tbefore:                                     fixed list:\n//\t\tOL                                          OL\n//\t\t|-> LI (parent LIs: 0)                      |-> LI         (indent: 0)\n//\t\t|-> OL                                          |-> OL\n//\t\t    |-> LI (parent LIs: 0)                          |-> LI (indent: 1)\n//\n// @param {module:engine/view/element~Element} listItem\n// @param {Object} conversionStore\n// @returns {Number}\nfunction getIndent( listItem ) {\n\tlet indent = 0;\n\n\tlet parent = listItem.parent;\n\n\twhile ( parent ) {\n\t\t// Each LI in the tree will result in an increased indent for HTML compliant lists.\n\t\tif ( parent.is( 'li' ) ) {\n\t\t\tindent++;\n\t\t} else {\n\t\t\t// If however the list is nested in other list we should check previous sibling of any of the list elements...\n\t\t\tconst previousSibling = parent.previousSibling;\n\n\t\t\t// ...because the we might need increase its indent:\n\t\t\t//\t\tbefore:                           fixed list:\n\t\t\t//\t\tOL                                OL\n\t\t\t//\t\t|-> LI (parent LIs: 0)            |-> LI         (indent: 0)\n\t\t\t//\t\t|-> OL                                |-> OL\n\t\t\t//\t\t    |-> LI (parent LIs: 0)                |-> LI (indent: 1)\n\t\t\tif ( previousSibling && previousSibling.is( 'li' ) ) {\n\t\t\t\tindent++;\n\t\t\t}\n\t\t}\n\n\t\tparent = parent.parent;\n\t}\n\n\treturn indent;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module list/listediting\n */\n\nimport ListCommand from './listcommand';\nimport IndentCommand from './indentcommand';\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\n\nimport {\n\tcleanList,\n\tcleanListItem,\n\tmodelViewInsertion,\n\tmodelViewChangeType,\n\tmodelViewMergeAfterChangeType,\n\tmodelViewMergeAfter,\n\tmodelViewRemove,\n\tmodelViewSplitOnInsert,\n\tmodelViewChangeIndent,\n\tmodelChangePostFixer,\n\tmodelIndentPasteFixer,\n\tviewModelConverter,\n\tmodelToViewPosition,\n\tviewToModelPosition\n} from './converters';\n\n/**\n * The engine of the list feature. It handles creating, editing and removing lists and list items.\n *\n * It registers the `'numberedList'`, `'bulletedList'`, `'indentList'` and `'outdentList'` commands.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ListEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ListEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ Paragraph ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\t// Schema.\n\t\t// Note: in case `$block` will ever be allowed in `listItem`, keep in mind that this feature\n\t\t// uses `Selection#getSelectedBlocks()` without any additional processing to obtain all selected list items.\n\t\t// If there are blocks allowed inside list item, algorithms using `getSelectedBlocks()` will have to be modified.\n\t\teditor.model.schema.register( 'listItem', {\n\t\t\tinheritAllFrom: '$block',\n\t\t\tallowAttributes: [ 'listType', 'listIndent' ]\n\t\t} );\n\n\t\t// Converters.\n\t\tconst data = editor.data;\n\t\tconst editing = editor.editing;\n\n\t\teditor.model.document.registerPostFixer( writer => modelChangePostFixer( editor.model, writer ) );\n\n\t\tediting.mapper.registerViewToModelLength( 'li', getViewListItemLength );\n\t\tdata.mapper.registerViewToModelLength( 'li', getViewListItemLength );\n\n\t\tediting.mapper.on( 'modelToViewPosition', modelToViewPosition( editing.view ) );\n\t\tediting.mapper.on( 'viewToModelPosition', viewToModelPosition( editor.model ) );\n\t\tdata.mapper.on( 'modelToViewPosition', modelToViewPosition( editing.view ) );\n\n\t\teditor.conversion.for( 'editingDowncast' )\n\t\t\t.add( dispatcher => {\n\t\t\t\tdispatcher.on( 'insert', modelViewSplitOnInsert, { priority: 'high' } );\n\t\t\t\tdispatcher.on( 'insert:listItem', modelViewInsertion( editor.model ) );\n\t\t\t\tdispatcher.on( 'attribute:listType:listItem', modelViewChangeType, { priority: 'high' } );\n\t\t\t\tdispatcher.on( 'attribute:listType:listItem', modelViewMergeAfterChangeType, { priority: 'low' } );\n\t\t\t\tdispatcher.on( 'attribute:listIndent:listItem', modelViewChangeIndent( editor.model ) );\n\t\t\t\tdispatcher.on( 'remove:listItem', modelViewRemove( editor.model ) );\n\t\t\t\tdispatcher.on( 'remove', modelViewMergeAfter, { priority: 'low' } );\n\t\t\t} );\n\n\t\teditor.conversion.for( 'dataDowncast' )\n\t\t\t.add( dispatcher => {\n\t\t\t\tdispatcher.on( 'insert', modelViewSplitOnInsert, { priority: 'high' } );\n\t\t\t\tdispatcher.on( 'insert:listItem', modelViewInsertion( editor.model ) );\n\t\t\t} );\n\n\t\teditor.conversion.for( 'upcast' )\n\t\t\t.add( dispatcher => {\n\t\t\t\tdispatcher.on( 'element:ul', cleanList, { priority: 'high' } );\n\t\t\t\tdispatcher.on( 'element:ol', cleanList, { priority: 'high' } );\n\t\t\t\tdispatcher.on( 'element:li', cleanListItem, { priority: 'high' } );\n\t\t\t\tdispatcher.on( 'element:li', viewModelConverter );\n\t\t\t} );\n\n\t\t// Fix indentation of pasted items.\n\t\teditor.model.on( 'insertContent', modelIndentPasteFixer, { priority: 'high' } );\n\n\t\t// Register commands for numbered and bulleted list.\n\t\teditor.commands.add( 'numberedList', new ListCommand( editor, 'numbered' ) );\n\t\teditor.commands.add( 'bulletedList', new ListCommand( editor, 'bulleted' ) );\n\n\t\t// Register commands for indenting.\n\t\teditor.commands.add( 'indentList', new IndentCommand( editor, 'forward' ) );\n\t\teditor.commands.add( 'outdentList', new IndentCommand( editor, 'backward' ) );\n\n\t\tconst viewDocument = editing.view.document;\n\n\t\t// Overwrite default Enter key behavior.\n\t\t// If Enter key is pressed with selection collapsed in empty list item, outdent it instead of breaking it.\n\t\tthis.listenTo( viewDocument, 'enter', ( evt, data ) => {\n\t\t\tconst doc = this.editor.model.document;\n\t\t\tconst positionParent = doc.selection.getLastPosition().parent;\n\n\t\t\tif ( doc.selection.isCollapsed && positionParent.name == 'listItem' && positionParent.isEmpty ) {\n\t\t\t\tthis.editor.execute( 'outdentList' );\n\n\t\t\t\tdata.preventDefault();\n\t\t\t\tevt.stop();\n\t\t\t}\n\t\t} );\n\n\t\t// Overwrite default Backspace key behavior.\n\t\t// If Backspace key is pressed with selection collapsed on first position in first list item, outdent it. #83\n\t\tthis.listenTo( viewDocument, 'delete', ( evt, data ) => {\n\t\t\t// Check conditions from those that require less computations like those immediately available.\n\t\t\tif ( data.direction !== 'backward' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selection = this.editor.model.document.selection;\n\n\t\t\tif ( !selection.isCollapsed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst firstPosition = selection.getFirstPosition();\n\n\t\t\tif ( !firstPosition.isAtStart ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst positionParent = firstPosition.parent;\n\n\t\t\tif ( positionParent.name !== 'listItem' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst previousIsAListItem = positionParent.previousSibling && positionParent.previousSibling.name === 'listItem';\n\n\t\t\tif ( previousIsAListItem ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.editor.execute( 'outdentList' );\n\n\t\t\tdata.preventDefault();\n\t\t\tevt.stop();\n\t\t}, { priority: 'high' } );\n\n\t\tconst getCommandExecuter = commandName => {\n\t\t\treturn ( data, cancel ) => {\n\t\t\t\tconst command = this.editor.commands.get( commandName );\n\n\t\t\t\tif ( command.isEnabled ) {\n\t\t\t\t\tthis.editor.execute( commandName );\n\t\t\t\t\tcancel();\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\n\t\teditor.keystrokes.set( 'Tab', getCommandExecuter( 'indentList' ) );\n\t\teditor.keystrokes.set( 'Shift+Tab', getCommandExecuter( 'outdentList' ) );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tafterInit() {\n\t\tconst commands = this.editor.commands;\n\n\t\tconst indent = commands.get( 'indent' );\n\t\tconst outdent = commands.get( 'outdent' );\n\n\t\tif ( indent ) {\n\t\t\tindent.registerChildCommand( commands.get( 'indentList' ) );\n\t\t}\n\n\t\tif ( outdent ) {\n\t\t\toutdent.registerChildCommand( commands.get( 'outdentList' ) );\n\t\t}\n\t}\n}\n\nfunction getViewListItemLength( element ) {\n\tlet length = 1;\n\n\tfor ( const child of element.getChildren() ) {\n\t\tif ( child.name == 'ul' || child.name == 'ol' ) {\n\t\t\tfor ( const item of child.getChildren() ) {\n\t\t\t\tlength += getViewListItemLength( item );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn length;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module list/listui\n */\nimport { createUIComponent } from './utils';\nimport numberedListIcon from '../theme/icons/numberedlist.svg';\nimport bulletedListIcon from '../theme/icons/bulletedlist.svg';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n/**\n * The list UI feature. It introduces the `'numberedList'` and `'bulletedList'` buttons that\n * allow to convert paragraphs to and from list items and indent or outdent them.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ListUI extends Plugin {\n    /**\n\t * @inheritDoc\n\t */\n    init() {\n        const t = this.editor.t;\n        // Create two buttons and link them with numberedList and bulletedList commands.\n        createUIComponent(this.editor, 'numberedList', t('r'), numberedListIcon);\n        createUIComponent(this.editor, 'bulletedList', t('s'), bulletedListIcon);\n    }\n}","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M7 5.75c0 .414.336.75.75.75h9.5a.75.75 0 100-1.5h-9.5a.75.75 0 00-.75.75zM3.5 3v5H2V3.7H1v-1h2.5V3zM.343 17.857l2.59-3.257H2.92a.6.6 0 10-1.04 0H.302a2 2 0 113.995 0h-.001c-.048.405-.16.734-.333.988-.175.254-.59.692-1.244 1.312H4.3v1h-4l.043-.043zM7 14.75a.75.75 0 01.75-.75h9.5a.75.75 0 110 1.5h-9.5a.75.75 0 01-.75-.75z\\\"/></svg>\"","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M7 5.75c0 .414.336.75.75.75h9.5a.75.75 0 100-1.5h-9.5a.75.75 0 00-.75.75zm-6 0C1 4.784 1.777 4 2.75 4c.966 0 1.75.777 1.75 1.75 0 .966-.777 1.75-1.75 1.75C1.784 7.5 1 6.723 1 5.75zm6 9c0 .414.336.75.75.75h9.5a.75.75 0 100-1.5h-9.5a.75.75 0 00-.75.75zm-6 0c0-.966.777-1.75 1.75-1.75.966 0 1.75.777 1.75 1.75 0 .966-.777 1.75-1.75 1.75-.966 0-1.75-.777-1.75-1.75z\\\"/></svg>\"","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module paste-from-office/filters/list\n */\n\nimport Element from '@ckeditor/ckeditor5-engine/src/view/element';\nimport Matcher from '@ckeditor/ckeditor5-engine/src/view/matcher';\nimport UpcastWriter from '@ckeditor/ckeditor5-engine/src/view/upcastwriter';\n\n/**\n * Transforms Word specific list-like elements to the semantic HTML lists.\n *\n * Lists in Word are represented by block elements with special attributes like:\n *\n *\t\t<p class=MsoListParagraphCxSpFirst style='mso-list:l1 level1 lfo1'>...</p> // Paragraph based list.\n *\t\t<h1 style='mso-list:l0 level1 lfo1'>...</h1> // Heading 1 based list.\n *\n * @param {module:engine/view/documentfragment~DocumentFragment} documentFragment The view structure which to transform.\n * @param {String} stylesString Styles from which list-like elements styling will be extracted.\n */\nexport function transformListItemLikeElementsIntoLists( documentFragment, stylesString ) {\n\tif ( !documentFragment.childCount ) {\n\t\treturn;\n\t}\n\n\tconst writer = new UpcastWriter();\n\tconst itemLikeElements = findAllItemLikeElements( documentFragment, writer );\n\n\tif ( !itemLikeElements.length ) {\n\t\treturn;\n\t}\n\n\tlet currentList = null;\n\n\titemLikeElements.forEach( ( itemLikeElement, i ) => {\n\t\tif ( !currentList || isNewListNeeded( itemLikeElements[ i - 1 ], itemLikeElement ) ) {\n\t\t\tconst listStyle = detectListStyle( itemLikeElement, stylesString );\n\n\t\t\tcurrentList = insertNewEmptyList( listStyle, itemLikeElement.element, writer );\n\t\t}\n\n\t\tconst listItem = transformElementIntoListItem( itemLikeElement.element, writer );\n\n\t\twriter.appendChild( listItem, currentList );\n\t} );\n}\n\n/**\n * Removes paragraph wrapping content inside a list item.\n *\n * @param {module:engine/view/documentfragment~DocumentFragment} documentFragment\n * @param {module:engine/view/upcastwriter~UpcastWriter} writer\n */\nexport function unwrapParagraphInListItem( documentFragment, writer ) {\n\tfor ( const value of writer.createRangeIn( documentFragment ) ) {\n\t\tconst element = value.item;\n\n\t\tif ( element.is( 'li' ) ) {\n\t\t\t// Google Docs allows on single paragraph inside LI.\n\t\t\tconst firstChild = element.getChild( 0 );\n\n\t\t\tif ( firstChild.is( 'p' ) ) {\n\t\t\t\twriter.unwrapElement( firstChild );\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Finds all list-like elements in a given document fragment.\n//\n// @param {module:engine/view/documentfragment~DocumentFragment} documentFragment Document fragment\n// in which to look for list-like nodes.\n// @param {module:engine/view/upcastwriter~UpcastWriter} writer\n// @returns {Array.<Object>} Array of found list-like items. Each item is an object containing:\n//\n//\t\t* {module:engine/src/view/element~Element} element List-like element.\n//\t\t* {Number} id List item id parsed from `mso-list` style (see `getListItemData()` function).\n//\t\t* {Number} order List item creation order parsed from `mso-list` style (see `getListItemData()` function).\n//\t\t* {Number} indent List item indentation level parsed from `mso-list` style (see `getListItemData()` function).\nfunction findAllItemLikeElements( documentFragment, writer ) {\n\tconst range = writer.createRangeIn( documentFragment );\n\n\t// Matcher for finding list-like elements.\n\tconst itemLikeElementsMatcher = new Matcher( {\n\t\tname: /^p|h\\d+$/,\n\t\tstyles: {\n\t\t\t'mso-list': /.*/\n\t\t}\n\t} );\n\n\tconst itemLikeElements = [];\n\n\tfor ( const value of range ) {\n\t\tif ( value.type === 'elementStart' && itemLikeElementsMatcher.match( value.item ) ) {\n\t\t\tconst itemData = getListItemData( value.item );\n\n\t\t\titemLikeElements.push( {\n\t\t\t\telement: value.item,\n\t\t\t\tid: itemData.id,\n\t\t\t\torder: itemData.order,\n\t\t\t\tindent: itemData.indent\n\t\t\t} );\n\t\t}\n\t}\n\n\treturn itemLikeElements;\n}\n\n// Extracts list item style from the provided CSS.\n//\n// List item style is extracted from CSS stylesheet. Each list with its specific style attribute\n// value (`mso-list:l1 level1 lfo1`) has its dedicated properties in a CSS stylesheet defined with a selector like:\n//\n// \t\t@list l1:level1 { ... }\n//\n// It contains `mso-level-number-format` property which defines list numbering/bullet style. If this property\n// is not defined it means default `decimal` numbering.\n//\n// Here CSS string representation is used as `mso-level-number-format` property is an invalid CSS property\n// and will be removed during CSS parsing.\n//\n// @param {Object} listLikeItem List-like item for which list style will be searched for. Usually\n// a result of `findAllItemLikeElements()` function.\n// @param {String} stylesString CSS stylesheet.\n// @returns {Object} result\n// @returns {String} result.type List type, could be `ul` or `ol`.\n// @returns {String} result.style List style, for example: `decimal`, `lower-roman`, etc. It is extracted\n// directly from Word stylesheet without further processing and may be not compatible\n// with CSS `list-style-type` property accepted values.\nfunction detectListStyle( listLikeItem, stylesString ) {\n\tconst listStyleRegexp = new RegExp( `@list l${ listLikeItem.id }:level${ listLikeItem.indent }\\\\s*({[^}]*)`, 'gi' );\n\tconst listStyleTypeRegex = /mso-level-number-format:([^;]*);/gi;\n\n\tconst listStyleMatch = listStyleRegexp.exec( stylesString );\n\n\tlet listStyleType = 'decimal'; // Decimal is default one.\n\tif ( listStyleMatch && listStyleMatch[ 1 ] ) {\n\t\tconst listStyleTypeMatch = listStyleTypeRegex.exec( listStyleMatch[ 1 ] );\n\n\t\tif ( listStyleTypeMatch && listStyleTypeMatch[ 1 ] ) {\n\t\t\tlistStyleType = listStyleTypeMatch[ 1 ].trim();\n\t\t}\n\t}\n\n\treturn {\n\t\ttype: listStyleType !== 'bullet' && listStyleType !== 'image' ? 'ol' : 'ul',\n\t\tstyle: listStyleType\n\t};\n}\n\n// Creates empty list of a given type and inserts it after a specified element.\n//\n// @param {Object} listStyle List style object which determines the type of newly created list.\n// Usually a result of `detectListStyle()` function.\n// @param {module:engine/view/element~Element} element Element before which list is inserted.\n// @param {module:engine/view/upcastwriter~UpcastWriter} writer\n// @returns {module:engine/view/element~Element} Newly created list element.\nfunction insertNewEmptyList( listStyle, element, writer ) {\n\tconst list = new Element( listStyle.type );\n\tconst position = element.parent.getChildIndex( element );\n\n\twriter.insertChild( position, list, element.parent );\n\n\treturn list;\n}\n\n// Transforms given element into a semantic list item. As the function operates on a provided\n// {module:engine/src/view/element~Element element} it will modify the view structure to which this element belongs.\n//\n// @param {module:engine/view/element~Element} element Element which will be transformed into list item.\n// @param {module:engine/view/upcastwriter~UpcastWriter} writer\n// @returns {module:engine/view/element~Element} New element to which the given one was transformed. It is\n// inserted in place of the old element (the reference to the old element is lost due to renaming).\nfunction transformElementIntoListItem( element, writer ) {\n\tremoveBulletElement( element, writer );\n\n\treturn writer.rename( 'li', element );\n}\n\n// Extracts list item information from Word specific list-like element style:\n//\n//\t\t`style=\"mso-list:l1 level1 lfo1\"`\n//\n// where:\n//\n//\t\t* `l1` is a list id (however it does not mean this is a continuous list - see #43),\n//\t\t* `level1` is a list item indentation level,\n//\t\t* `lfo1` is a list insertion order in a document.\n//\n// @param {module:engine/view/element~Element} element Element from which style data is extracted.\n// @returns {Object} result\n// @returns {Number} result.id Parent list id.\n// @returns {Number} result.order List item creation order.\n// @returns {Number} result.indent List item indentation level.\nfunction getListItemData( element ) {\n\tconst data = {};\n\tconst listStyle = element.getStyle( 'mso-list' );\n\n\tif ( listStyle ) {\n\t\tconst idMatch = listStyle.match( /(^|\\s+)l(\\d+)/i );\n\t\tconst orderMatch = listStyle.match( /\\s*lfo(\\d+)/i );\n\t\tconst indentMatch = listStyle.match( /\\s*level(\\d+)/i );\n\n\t\tif ( idMatch && orderMatch && indentMatch ) {\n\t\t\tdata.id = idMatch[ 2 ];\n\t\t\tdata.order = orderMatch[ 1 ];\n\t\t\tdata.indent = indentMatch[ 1 ];\n\t\t}\n\t}\n\n\treturn data;\n}\n\n// Removes span with a numbering/bullet from a given element.\n//\n// @param {module:engine/view/element~Element} element\n// @param {module:engine/view/upcastwriter~UpcastWriter} writer\nfunction removeBulletElement( element, writer ) {\n\t// Matcher for finding `span` elements holding lists numbering/bullets.\n\tconst bulletMatcher = new Matcher( {\n\t\tname: 'span',\n\t\tstyles: {\n\t\t\t'mso-list': 'Ignore'\n\t\t}\n\t} );\n\n\tconst range = writer.createRangeIn( element );\n\n\tfor ( const value of range ) {\n\t\tif ( value.type === 'elementStart' && bulletMatcher.match( value.item ) ) {\n\t\t\twriter.remove( value.item );\n\t\t}\n\t}\n}\n\n// Whether previous and current item belongs to the same list. It is determined based on `item.id`\n// (extracted from `mso-list` style, see #getListItemData) and previous sibling of the current item.\n//\n// @param {Object} previousItem\n// @param {Object} currentItem\n// @returns {Boolean}\nfunction isNewListNeeded( previousItem, currentItem ) {\n\tif ( previousItem.id !== currentItem.id ) {\n\t\treturn true;\n\t}\n\n\tconst previousSibling = currentItem.element.previousSibling;\n\n\tif ( !previousSibling ) {\n\t\treturn true;\n\t}\n\n\t// Even with the same id the list does not have to be continuous (#43).\n\treturn !isList( previousSibling );\n}\n\nfunction isList( element ) {\n\treturn element.is( 'ol' ) || element.is( 'ul' );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module paste-from-office/normalizers/googledocsnormalizer\n */\n\nimport removeBoldWrapper from '../filters/removeboldwrapper';\nimport { unwrapParagraphInListItem } from '../filters/list';\nimport UpcastWriter from '@ckeditor/ckeditor5-engine/src/view/upcastwriter';\n\nconst googleDocsMatch = /id=(\"|')docs-internal-guid-[-0-9a-f]+(\"|')/i;\n\n/**\n * Normalizer for the content pasted from Google Docs.\n *\n * @implements module:paste-from-office/normalizer~Normalizer\n */\nexport default class GoogleDocsNormalizer {\n\t/**\n\t * @inheritDoc\n\t */\n\tisActive( htmlString ) {\n\t\treturn googleDocsMatch.test( htmlString );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\texecute( data ) {\n\t\tconst writer = new UpcastWriter();\n\n\t\tremoveBoldWrapper( data.content, writer );\n\t\tunwrapParagraphInListItem( data.content, writer );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module paste-from-office/filters/removeboldwrapper\n */\n\n/**\n * Removes `<b>` tag wrapper added by Google Docs to a copied content.\n *\n * @param {module:engine/view/documentfragment~DocumentFragment} documentFragment element `data.content` obtained from clipboard\n * @param {module:engine/view/upcastwriter~UpcastWriter} writer\n */\nexport default function removeBoldWrapper( documentFragment, writer ) {\n\tfor ( const child of documentFragment.getChildren() ) {\n\t\tif ( child.is( 'b' ) && child.getStyle( 'font-weight' ) === 'normal' ) {\n\t\t\tconst childIndex = documentFragment.getChildIndex( child );\n\n\t\t\twriter.remove( child );\n\t\t\twriter.insertChild( childIndex, child.getChildren(), documentFragment );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module paste-from-office/filters/space\n */\n\n/**\n * Replaces last space preceding elements closing tag with `&nbsp;`. Such operation prevents spaces from being removed\n * during further DOM/View processing (see especially {@link module:engine/view/domconverter~DomConverter#_processDataFromDomText}).\n * This method also takes into account Word specific `<o:p></o:p>` empty tags.\n * Additionally multiline sequences of spaces and new lines between tags are removed (see #39 and #40).\n *\n * @param {String} htmlString HTML string in which spacing should be normalized.\n * @returns {String} Input HTML with spaces normalized.\n */\nexport function normalizeSpacing( htmlString ) {\n\t// Run normalizeSafariSpaceSpans() two times to cover nested spans.\n\treturn normalizeSafariSpaceSpans( normalizeSafariSpaceSpans( htmlString ) )\n\t\t// Remove all \\r\\n from \"spacerun spans\" so the last replace line doesn't strip all whitespaces.\n\t\t.replace( /(<span\\s+style=['\"]mso-spacerun:yes['\"]>[\\s]*?)[\\r\\n]+(\\s*<\\/span>)/g, '$1$2' )\n\t\t.replace( /<span\\s+style=['\"]mso-spacerun:yes['\"]><\\/span>/g, '' )\n\t\t.replace( / <\\//g, '\\u00A0</' )\n\t\t.replace( / <o:p><\\/o:p>/g, '\\u00A0<o:p></o:p>' )\n\t\t// Remove <o:p> block filler from empty paragraph. Safari uses \\u00A0 instead of &nbsp;.\n\t\t.replace( /<o:p>(&nbsp;|\\u00A0)<\\/o:p>/g, '' )\n\t\t// Remove all whitespaces when they contain any \\r or \\n.\n\t\t.replace( />(\\s*[\\r\\n]\\s*)</g, '><' );\n}\n\n/**\n * Normalizes spacing in special Word `spacerun spans` (`<span style='mso-spacerun:yes'>\\s+</span>`) by replacing\n * all spaces with `&nbsp; ` pairs. This prevents spaces from being removed during further DOM/View processing\n * (see especially {@link module:engine/view/domconverter~DomConverter#_processDataFromDomText}).\n *\n * @param {Document} htmlDocument Native `Document` object in which spacing should be normalized.\n */\nexport function normalizeSpacerunSpans( htmlDocument ) {\n\thtmlDocument.querySelectorAll( 'span[style*=spacerun]' ).forEach( el => {\n\t\t// Use `el.childNodes[ 0 ].data.length` instead of `el.innerText.length`. For `el.innerText.length` which\n\t\t// contains spaces mixed with `&nbsp;` Edge browser returns incorrect length.\n\t\tconst innerTextLength = ( el.childNodes &&\n\t\t\tel.childNodes[ 0 ] &&\n\t\t\tel.childNodes[ 0 ].data &&\n\t\t\tel.childNodes[ 0 ].data.length ) || 0;\n\n\t\tel.innerHTML = Array( innerTextLength + 1 ).join( '\\u00A0 ' ).substr( 0, innerTextLength );\n\t} );\n}\n\n// Normalizes specific spacing generated by Safari when content pasted from Word (`<span class=\"Apple-converted-space\"> </span>`)\n// by replacing all spaces sequences longer than 1 space with `&nbsp; ` pairs. This prevents spaces from being removed during\n// further DOM/View processing (see especially {@link module:engine/view/domconverter~DomConverter#_processDataFromDomText}).\n//\n// This function is similar to {@link module:clipboard/utils/normalizeclipboarddata normalizeClipboardData util} but uses\n// regular spaces / &nbsp; sequence for replacement.\n//\n// @param {String} htmlString HTML string in which spacing should be normalized\n// @returns {String} Input HTML with spaces normalized.\nfunction normalizeSafariSpaceSpans( htmlString ) {\n\treturn htmlString.replace( /<span(?: class=\"Apple-converted-space\"|)>(\\s+)<\\/span>/g, ( fullMatch, spaces ) => {\n\t\treturn spaces.length === 1 ? ' ' : Array( spaces.length + 1 ).join( '\\u00A0 ' ).substr( 0, spaces.length );\n\t} );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module paste-from-office/filters/parse\n */\n\n/* globals DOMParser */\n\nimport DomConverter from '@ckeditor/ckeditor5-engine/src/view/domconverter';\n\nimport { normalizeSpacing, normalizeSpacerunSpans } from './space';\n\n/**\n * Parses provided HTML extracting contents of `<body>` and `<style>` tags.\n *\n * @param {String} htmlString HTML string to be parsed.\n * @returns {Object} result\n * @returns {module:engine/view/documentfragment~DocumentFragment} result.body Parsed body\n * content as a traversable structure.\n * @returns {String} result.bodyString Entire body content as a string.\n * @returns {Array.<CSSStyleSheet>} result.styles Array of native `CSSStyleSheet` objects, each representing\n * separate `style` tag from the source HTML.\n * @returns {String} result.stylesString All `style` tags contents combined in the order of occurrence into one string.\n */\nexport function parseHtml( htmlString ) {\n\tconst domParser = new DOMParser();\n\n\t// Remove Word specific \"if comments\" so content inside is not omitted by the parser.\n\thtmlString = htmlString.replace( /<!--\\[if gte vml 1]>/g, '' );\n\n\tconst normalizedHtml = normalizeSpacing( cleanContentAfterBody( htmlString ) );\n\n\t// Parse htmlString as native Document object.\n\tconst htmlDocument = domParser.parseFromString( normalizedHtml, 'text/html' );\n\n\tnormalizeSpacerunSpans( htmlDocument );\n\n\t// Get `innerHTML` first as transforming to View modifies the source document.\n\tconst bodyString = htmlDocument.body.innerHTML;\n\n\t// Transform document.body to View.\n\tconst bodyView = documentToView( htmlDocument );\n\n\t// Extract stylesheets.\n\tconst stylesObject = extractStyles( htmlDocument );\n\n\treturn {\n\t\tbody: bodyView,\n\t\tbodyString,\n\t\tstyles: stylesObject.styles,\n\t\tstylesString: stylesObject.stylesString\n\t};\n}\n\n// Transforms native `Document` object into {@link module:engine/view/documentfragment~DocumentFragment}.\n//\n// @param {Document} htmlDocument Native `Document` object to be transformed.\n// @returns {module:engine/view/documentfragment~DocumentFragment}\nfunction documentToView( htmlDocument ) {\n\tconst domConverter = new DomConverter( { blockFillerMode: 'nbsp' } );\n\tconst fragment = htmlDocument.createDocumentFragment();\n\tconst nodes = htmlDocument.body.childNodes;\n\n\twhile ( nodes.length > 0 ) {\n\t\tfragment.appendChild( nodes[ 0 ] );\n\t}\n\n\treturn domConverter.domToView( fragment );\n}\n\n// Extracts both `CSSStyleSheet` and string representation from all `style` elements available in a provided `htmlDocument`.\n//\n// @param {Document} htmlDocument Native `Document` object from which styles will be extracted.\n// @returns {Object} result\n// @returns {Array.<CSSStyleSheet>} result.styles Array of native `CSSStyleSheet` object, each representing\n// separate `style` tag from the source object.\n// @returns {String} result.stylesString All `style` tags contents combined in the order of occurrence as one string.\nfunction extractStyles( htmlDocument ) {\n\tconst styles = [];\n\tconst stylesString = [];\n\tconst styleTags = Array.from( htmlDocument.getElementsByTagName( 'style' ) );\n\n\tfor ( const style of styleTags ) {\n\t\tif ( style.sheet && style.sheet.cssRules && style.sheet.cssRules.length ) {\n\t\t\tstyles.push( style.sheet );\n\t\t\tstylesString.push( style.innerHTML );\n\t\t}\n\t}\n\n\treturn {\n\t\tstyles,\n\t\tstylesString: stylesString.join( ' ' )\n\t};\n}\n\n// Removes leftover content from between closing </body> and closing </html> tag:\n//\n// \t\t<html><body><p>Foo Bar</p></body><span>Fo</span></html> -> <html><body><p>Foo Bar</p></body></html>\n//\n// This function is used as specific browsers (Edge) add some random content after `body` tag when pasting from Word.\n// @param {String} htmlString The HTML string to be cleaned.\n// @returns {String} The HTML string with leftover content removed.\nfunction cleanContentAfterBody( htmlString ) {\n\tconst regexp = /<\\/body>(.*?)(<\\/html>|$)/;\n\tconst match = htmlString.match( regexp );\n\n\tif ( match && match[ 1 ] ) {\n\t\thtmlString = htmlString.slice( 0, match.index ) + htmlString.slice( match.index ).replace( match[ 1 ], '' );\n\t}\n\n\treturn htmlString;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module paste-from-office/filters/image\n */\n\n/* globals btoa */\n\nimport ViewMatcher from '@ckeditor/ckeditor5-engine/src/view/matcher';\nimport UpcastWriter from '@ckeditor/ckeditor5-engine/src/view/upcastwriter';\n\n/**\n * Replaces source attribute of all `<img>` elements representing regular\n * images (not the Word shapes) with inlined base64 image representation extracted from RTF or Blob data.\n *\n * @param {module:engine/view/documentfragment~DocumentFragment} documentFragment Document fragment on which transform images.\n * @param {String} rtfData The RTF data from which images representation will be used.\n */\nexport function replaceImagesSourceWithBase64( documentFragment, rtfData ) {\n\tif ( !documentFragment.childCount ) {\n\t\treturn;\n\t}\n\n\tconst upcastWriter = new UpcastWriter();\n\tconst shapesIds = findAllShapesIds( documentFragment, upcastWriter );\n\n\tremoveAllImgElementsRepresentingShapes( shapesIds, documentFragment, upcastWriter );\n\tremoveAllShapeElements( documentFragment, upcastWriter );\n\n\tconst images = findAllImageElementsWithLocalSource( documentFragment, upcastWriter );\n\n\tif ( images.length ) {\n\t\treplaceImagesFileSourceWithInlineRepresentation( images, extractImageDataFromRtf( rtfData ), upcastWriter );\n\t}\n}\n\n/**\n * Converts given HEX string to base64 representation.\n *\n * @protected\n * @param {String} hexString The HEX string to be converted.\n * @returns {String} Base64 representation of a given HEX string.\n */\nexport function _convertHexToBase64( hexString ) {\n\treturn btoa( hexString.match( /\\w{2}/g ).map( char => {\n\t\treturn String.fromCharCode( parseInt( char, 16 ) );\n\t} ).join( '' ) );\n}\n\n// Finds all shapes (`<v:*>...</v:*>`) ids. Shapes can represent images (canvas)\n// or Word shapes (which does not have RTF or Blob representation).\n//\n// @param {module:engine/view/documentfragment~DocumentFragment} documentFragment Document fragment\n// from which to extract shape ids.\n// @param {module:engine/view/upcastwriter~UpcastWriter} writer\n// @returns {Array.<String>} Array of shape ids.\nfunction findAllShapesIds( documentFragment, writer ) {\n\tconst range = writer.createRangeIn( documentFragment );\n\n\tconst shapeElementsMatcher = new ViewMatcher( {\n\t\tname: /v:(.+)/\n\t} );\n\n\tconst shapesIds = [];\n\n\tfor ( const value of range ) {\n\t\tconst el = value.item;\n\t\tconst prevSiblingName = el.previousSibling && el.previousSibling.name || null;\n\n\t\t// If shape element have 'o:gfxdata' attribute and is not directly before `<v:shapetype>` element it means it represent Word shape.\n\t\tif ( shapeElementsMatcher.match( el ) && el.getAttribute( 'o:gfxdata' ) && prevSiblingName !== 'v:shapetype' ) {\n\t\t\tshapesIds.push( value.item.getAttribute( 'id' ) );\n\t\t}\n\t}\n\n\treturn shapesIds;\n}\n\n// Removes all `<img>` elements which represents Word shapes and not regular images.\n//\n// @param {Array.<String>} shapesIds Shape ids which will be checked against `<img>` elements.\n// @param {module:engine/view/documentfragment~DocumentFragment} documentFragment Document fragment from which to remove `<img>` elements.\n// @param {module:engine/view/upcastwriter~UpcastWriter} writer\nfunction removeAllImgElementsRepresentingShapes( shapesIds, documentFragment, writer ) {\n\tconst range = writer.createRangeIn( documentFragment );\n\n\tconst imageElementsMatcher = new ViewMatcher( {\n\t\tname: 'img'\n\t} );\n\n\tconst imgs = [];\n\n\tfor ( const value of range ) {\n\t\tif ( imageElementsMatcher.match( value.item ) ) {\n\t\t\tconst el = value.item;\n\t\t\tconst shapes = el.getAttribute( 'v:shapes' ) ? el.getAttribute( 'v:shapes' ).split( ' ' ) : [];\n\n\t\t\tif ( shapes.length && shapes.every( shape => shapesIds.indexOf( shape ) > -1 ) ) {\n\t\t\t\timgs.push( el );\n\t\t\t// Shapes may also have empty source while content is paste in some browsers (Safari).\n\t\t\t} else if ( !el.getAttribute( 'src' ) ) {\n\t\t\t\timgs.push( el );\n\t\t\t}\n\t\t}\n\t}\n\n\tfor ( const img of imgs ) {\n\t\twriter.remove( img );\n\t}\n}\n\n// Removes all shape elements (`<v:*>...</v:*>`) so they do not pollute the output structure.\n//\n// @param {module:engine/view/documentfragment~DocumentFragment} documentFragment Document fragment from which to remove shape elements.\n// @param {module:engine/view/upcastwriter~UpcastWriter} writer\nfunction removeAllShapeElements( documentFragment, writer ) {\n\tconst range = writer.createRangeIn( documentFragment );\n\n\tconst shapeElementsMatcher = new ViewMatcher( {\n\t\tname: /v:(.+)/\n\t} );\n\n\tconst shapes = [];\n\n\tfor ( const value of range ) {\n\t\tif ( shapeElementsMatcher.match( value.item ) ) {\n\t\t\tshapes.push( value.item );\n\t\t}\n\t}\n\n\tfor ( const shape of shapes ) {\n\t\twriter.remove( shape );\n\t}\n}\n\n// Finds all `<img>` elements in a given document fragment which have source pointing to local `file://` resource.\n//\n// @param {module:engine/view/documentfragment~DocumentFragment} documentFragment Document fragment in which to look for `<img>` elements.\n// @param {module:engine/view/upcastwriter~UpcastWriter} writer\n// @returns {Object} result All found images grouped by source type.\n// @returns {Array.<module:engine/view/element~Element>} result.file Array of found `<img>` elements with `file://` source.\n// @returns {Array.<module:engine/view/element~Element>} result.blob Array of found `<img>` elements with `blob:` source.\nfunction findAllImageElementsWithLocalSource( documentFragment, writer ) {\n\tconst range = writer.createRangeIn( documentFragment );\n\n\tconst imageElementsMatcher = new ViewMatcher( {\n\t\tname: 'img'\n\t} );\n\n\tconst imgs = [];\n\n\tfor ( const value of range ) {\n\t\tif ( imageElementsMatcher.match( value.item ) ) {\n\t\t\tif ( value.item.getAttribute( 'src' ).startsWith( 'file://' ) ) {\n\t\t\t\timgs.push( value.item );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn imgs;\n}\n\n// Extracts all images HEX representations from a given RTF data.\n//\n// @param {String} rtfData The RTF data from which to extract images HEX representation.\n// @returns {Array.<Object>} Array of found HEX representations. Each array item is an object containing:\n//\n// \t\t* {String} hex Image representation in HEX format.\n// \t\t* {string} type Type of image, `image/png` or `image/jpeg`.\nfunction extractImageDataFromRtf( rtfData ) {\n\tif ( !rtfData ) {\n\t\treturn [];\n\t}\n\n\tconst regexPictureHeader = /{\\\\pict[\\s\\S]+?\\\\bliptag-?\\d+(\\\\blipupi-?\\d+)?({\\\\\\*\\\\blipuid\\s?[\\da-fA-F]+)?[\\s}]*?/;\n\tconst regexPicture = new RegExp( '(?:(' + regexPictureHeader.source + '))([\\\\da-fA-F\\\\s]+)\\\\}', 'g' );\n\tconst images = rtfData.match( regexPicture );\n\tconst result = [];\n\n\tif ( images ) {\n\t\tfor ( const image of images ) {\n\t\t\tlet imageType = false;\n\n\t\t\tif ( image.includes( '\\\\pngblip' ) ) {\n\t\t\t\timageType = 'image/png';\n\t\t\t} else if ( image.includes( '\\\\jpegblip' ) ) {\n\t\t\t\timageType = 'image/jpeg';\n\t\t\t}\n\n\t\t\tif ( imageType ) {\n\t\t\t\tresult.push( {\n\t\t\t\t\thex: image.replace( regexPictureHeader, '' ).replace( /[^\\da-fA-F]/g, '' ),\n\t\t\t\t\ttype: imageType\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\n// Replaces `src` attribute value of all given images with the corresponding base64 image representation.\n//\n// @param {Array.<module:engine/view/element~Element>} imageElements Array of image elements which will have its source replaced.\n// @param {Array.<Object>} imagesHexSources Array of images hex sources (usually the result of `extractImageDataFromRtf()` function).\n// The array should be the same length as `imageElements` parameter.\n// @param {module:engine/view/upcastwriter~UpcastWriter} writer\nfunction replaceImagesFileSourceWithInlineRepresentation( imageElements, imagesHexSources, writer ) {\n\t// Assume there is an equal amount of image elements and images HEX sources so they can be matched accordingly based on existing order.\n\tif ( imageElements.length === imagesHexSources.length ) {\n\t\tfor ( let i = 0; i < imageElements.length; i++ ) {\n\t\t\tconst newSrc = `data:${ imagesHexSources[ i ].type };base64,${ _convertHexToBase64( imagesHexSources[ i ].hex ) }`;\n\t\t\twriter.setAttribute( 'src', newSrc, imageElements[ i ] );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module paste-from-office/normalizers/mswordnormalizer\n */\n\nimport { parseHtml } from '../filters/parse';\nimport { transformListItemLikeElementsIntoLists } from '../filters/list';\nimport { replaceImagesSourceWithBase64 } from '../filters/image';\n\nconst msWordMatch1 = /<meta\\s*name=\"?generator\"?\\s*content=\"?microsoft\\s*word\\s*\\d+\"?\\/?>/i;\nconst msWordMatch2 = /xmlns:o=\"urn:schemas-microsoft-com/i;\n\n/**\n * Normalizer for the content pasted from Microsoft Word.\n *\n * @implements module:paste-from-office/normalizer~Normalizer\n */\nexport default class MSWordNormalizer {\n\t/**\n\t * @inheritDoc\n\t */\n\tisActive( htmlString ) {\n\t\treturn msWordMatch1.test( htmlString ) || msWordMatch2.test( htmlString );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\texecute( data ) {\n\t\tconst { body, stylesString } = parseHtml( data.dataTransfer.getData( 'text/html' ) );\n\n\t\ttransformListItemLikeElementsIntoLists( body, stylesString );\n\t\treplaceImagesSourceWithBase64( body, data.dataTransfer.getData( 'text/rtf' ) );\n\n\t\tdata.content = body;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * Original marked.js library renderer with fixes:\n * - No formatting for output HTML string &mdash; all newlines between tags are removed to create clean output.\n * - Changed long string concatenations to ES5 template strings.\n * - Changed code style.\n *\n * @see {@link https://github.com/chjj/marked#renderer} Methods description.\n * @param options\n * @constructor\n */\nfunction Renderer( options ) {\n\tthis.options = options || {};\n}\n\nRenderer.prototype.code = function( code, lang, escaped ) {\n\tif ( this.options.highlight ) {\n\t\tconst out = this.options.highlight( code, lang );\n\n\t\tif ( out !== null && out !== code ) {\n\t\t\tescaped = true;\n\t\t\tcode = out;\n\t\t}\n\t}\n\n\tif ( !lang ) {\n\t\treturn `<pre><code>${ escaped ? code : escape( code, true ) }</code></pre>`;\n\t}\n\n\tconst cssClass = this.options.langPrefix + escape( lang, true );\n\n\treturn `<pre><code class=\"${ cssClass }\">${ escaped ? code : escape( code, true ) }</code></pre>`;\n};\n\nRenderer.prototype.blockquote = function( quote ) {\n\treturn `<blockquote>${ quote }</blockquote>`;\n};\n\nRenderer.prototype.html = function( html ) {\n\treturn html;\n};\n\nRenderer.prototype.heading = function( text, level, raw ) {\n\treturn `<h${ level }>${ text }</h${ level }>`;\n};\n\nRenderer.prototype.hr = function() {\n\treturn this.options.xhtml ? '<hr/>' : '<hr>';\n};\n\nRenderer.prototype.list = function( body, ordered ) {\n\tconst type = ordered ? 'ol' : 'ul';\n\n\treturn `<${ type }>${ body }</${ type }>`;\n};\n\nRenderer.prototype.listitem = function( text ) {\n\treturn `<li>${ text }</li>`;\n};\n\nRenderer.prototype.paragraph = function( text ) {\n\treturn `<p>${ text }</p>`;\n};\n\nRenderer.prototype.table = function( header, body ) {\n\treturn `<table><thead>${ header }</thead><tbody>${ body }</tbody></table>`;\n};\n\nRenderer.prototype.tablerow = function( content ) {\n\treturn '<tr>' + content + '</tr>';\n};\n\nRenderer.prototype.tablecell = function( content, flags ) {\n\tconst type = flags.header ? 'th' : 'td';\n\tconst tag = flags.align ? `<${ type } align=\"${ flags.align }\">` : `<${ type }>`;\n\n\treturn tag + content + `</${ type }>`;\n};\n\n// span level renderer\nRenderer.prototype.strong = function( text ) {\n\treturn `<strong>${ text }</strong>`;\n};\n\nRenderer.prototype.em = function( text ) {\n\treturn `<em>${ text }</em>`;\n};\n\nRenderer.prototype.codespan = function( text ) {\n\treturn `<code>${ text.trim() }</code>`;\n};\n\nRenderer.prototype.br = function() {\n\treturn this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function( text ) {\n\treturn `<del>${ text }</del>`;\n};\n\nRenderer.prototype.link = function( href, title, text ) {\n\tif ( this.options.sanitize ) {\n\t\tlet prot;\n\n\t\ttry {\n\t\t\tprot = decodeURIComponent( unescape( href ) )\n\t\t\t\t.replace( /[^\\w:]/g, '' )\n\t\t\t\t.toLowerCase();\n\t\t} catch ( e ) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif ( prot.indexOf( 'javascript:' ) === 0 || prot.indexOf( 'vbscript:' ) === 0 ) { // jshint ignore:line\n\t\t\treturn '';\n\t\t}\n\t}\n\n\tlet out = '<a href=\"' + href + '\"';\n\n\tif ( title ) {\n\t\tout += ' title=\"' + title + '\"';\n\t}\n\tout += '>' + text + '</a>';\n\n\treturn out;\n};\n\nRenderer.prototype.image = function( href, title, text ) {\n\tlet out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n\tif ( title ) {\n\t\tout += ' title=\"' + title + '\"';\n\t}\n\tout += this.options.xhtml ? '/>' : '>';\n\n\treturn out;\n};\n\nRenderer.prototype.text = function( text ) {\n\treturn text;\n};\n\nexport default Renderer;\n\nfunction escape( html, encode ) {\n\treturn html\n\t\t.replace( !encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;' )\n\t\t.replace( /</g, '&lt;' )\n\t\t.replace( />/g, '&gt;' )\n\t\t.replace( /\"/g, '&quot;' )\n\t\t.replace( /'/g, '&#39;' );\n}\n\nfunction unescape( html ) {\n\t// explicitly match decimal, hex, and named HTML entities\n\treturn html.replace( /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/g, function( _, n ) {\n\t\tn = n.toLowerCase();\n\n\t\tif ( n === 'colon' ) {\n\t\t\treturn ':';\n\t\t}\n\n\t\tif ( n.charAt( 0 ) === '#' ) {\n\t\t\treturn n.charAt( 1 ) === 'x' ?\n\t\t\t\tString.fromCharCode( parseInt( n.substring( 2 ), 16 ) ) :\n\t\t\t\tString.fromCharCode( +n.substring( 1 ) ); // jscs:ignore\n\t\t}\n\n\t\treturn '';\n\t} );\n}\n","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n// Exports an array with custom converters used by to-markdown library.\nexport default [\n\t// Converting code blocks with class name matching output from marked library.\n\t{\n\t\tfilter: ( node ) =>  {\n\t\t\tconst regexp = /lang-(.+)/;\n\n\t\t\treturn node.nodeName === 'PRE' &&\n\t\t\t\tnode.firstChild &&\n\t\t\t\tnode.firstChild.nodeName === 'CODE' &&\n\t\t\t\tregexp.test( node.firstChild.className );\n\t\t},\n\t\treplacement: ( content, node ) => {\n\t\t\tconst regexp = /lang-(.+)/;\n\t\t\tconst lang = regexp.exec( node.firstChild.className )[ 1 ];\n\n\t\t\treturn '\\n\\n``` ' + lang + '\\n' + node.firstChild.textContent + '\\n```\\n\\n';\n\t\t}\n\t},\n\t// Converting empty links.\n\t{\n\t\tfilter: ( node ) => {\n\t\t\treturn node.nodeName === 'A' && !node.getAttribute( 'href' );\n\t\t},\n\n\t\treplacement: ( content, node ) => {\n\t\t\tconst title = node.title ? `\"${node.title}\"` : '';\n\n\t\t\treturn `[${ content }](${ title })`;\n\t\t}\n\t},\n\t// Headers - fixing newline at the beginning.\n\t{\n\t\tfilter: [ 'h1', 'h2', 'h3', 'h4', 'h5', 'h6' ],\n\t\treplacement: ( content, node ) => {\n\t\t\tconst hLevel = node.nodeName.charAt( 1 );\n\t\t\tlet hPrefix = '';\n\n\t\t\tfor ( let i = 0; i < hLevel; i++ ) {\n\t\t\t\thPrefix += '#';\n\t\t\t}\n\n\t\t\treturn hPrefix + ' ' + content + '\\n';\n\t\t}\n\t},\n\t// Inline code - fixing backticks inside code blocks.\n\t{\n\t\tfilter: ( node ) => {\n\t\t\tconst hasSiblings = node.previousSibling || node.nextSibling;\n\t\t\tconst isCodeBlock = node.parentNode.nodeName === 'PRE' && !hasSiblings;\n\n\t\t\treturn node.nodeName === 'CODE' && !isCodeBlock;\n\t\t},\n\t\treplacement: ( content ) => {\n\t\t\t// If content starts or ends with backtick - use double backtick.\n\t\t\tif ( content.indexOf( '`' ) > -1 ) {\n\t\t\t\treturn '`` ' + content + ' ``';\n\t\t\t}\n\n\t\t\treturn '`' + content + '`';\n\t\t}\n\t}\n];\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module markdown-gfm/gfmdataprocessor\n */\n\nimport marked from './lib/marked/marked';\nimport toMarkdown from './lib/to-markdown/to-markdown';\nimport HtmlDataProcessor from '@ckeditor/ckeditor5-engine/src/dataprocessor/htmldataprocessor';\nimport GFMRenderer from './lib/marked/renderer';\nimport converters from './lib/to-markdown/converters';\n\n/**\n * This data processor implementation uses GitHub Flavored Markdown as input/output data.\n *\n * See the {@glink features/markdown Markdown output} guide to learn more on how to enable it.\n *\n * @implements module:engine/dataprocessor/dataprocessor~DataProcessor\n */\nexport default class GFMDataProcessor {\n\tconstructor() {\n\t\t/**\n\t\t * HTML data processor used to process HTML produced by the Markdown-to-HTML converter and the other way.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/dataprocessor/htmldataprocessor~HtmlDataProcessor}\n\t\t */\n\t\tthis._htmlDP = new HtmlDataProcessor();\n\t}\n\n\t/**\n\t * Converts the provided Markdown string to view tree.\n\t *\n\t * @param {String} data A Markdown string.\n\t * @returns {module:engine/view/documentfragment~DocumentFragment} The converted view element.\n\t */\n\ttoView( data ) {\n\t\tconst html = marked.parse( data, {\n\t\t\tgfm: true,\n\t\t\tbreaks: true,\n\t\t\ttables: true,\n\t\t\txhtml: true,\n\t\t\trenderer: new GFMRenderer()\n\t\t} );\n\n\t\treturn this._htmlDP.toView( html );\n\t}\n\n\t/**\n\t * Converts the provided {@link module:engine/view/documentfragment~DocumentFragment} to data format &mdash; in this\n\t * case to a Markdown string.\n\t *\n\t * @param {module:engine/view/documentfragment~DocumentFragment} viewFragment\n\t * @returns {String} Markdown string.\n\t */\n\ttoData( viewFragment ) {\n\t\tconst html = this._htmlDP.toData( viewFragment );\n\n\t\treturn toMarkdown( html, { gfm: true, converters } );\n\t}\n}\n\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/commands/utils\n */\n\nimport { isObject } from 'lodash-es';\n\n/**\n * Returns the parent element of the given name. Returns undefined if the position is not inside the desired parent.\n *\n * @param {String} parentName The name of the parent element to find.\n * @param {module:engine/model/position~Position|module:engine/model/position~Position} position The position to start searching.\n * @returns {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment}\n */\nexport function findAncestor( parentName, position ) {\n\tlet parent = position.parent;\n\n\twhile ( parent ) {\n\t\tif ( parent.name === parentName ) {\n\t\t\treturn parent;\n\t\t}\n\n\t\tparent = parent.parent;\n\t}\n}\n\n/**\n * A common method to update the numeric value. If a value is the default one, it will be unset.\n *\n * @param {String} key An attribute key.\n * @param {*} value The new attribute value.\n * @param {module:engine/model/item~Item} item A model item on which the attribute will be set.\n * @param {module:engine/model/writer~Writer} writer\n * @param {*} defaultValue The default attribute value. If a value is lower or equal, it will be unset.\n */\nexport function updateNumericAttribute( key, value, item, writer, defaultValue = 1 ) {\n\tif ( value > defaultValue ) {\n\t\twriter.setAttribute( key, value, item );\n\t} else {\n\t\twriter.removeAttribute( key, item );\n\t}\n}\n\n/**\n * A common method to create an empty table cell. It creates a proper model structure as a table cell must have at least one block inside.\n *\n * @param {module:engine/model/writer~Writer} writer The model writer.\n * @param {module:engine/model/position~Position} insertPosition The position at which the table cell should be inserted.\n * @param {Object} attributes The element attributes.\n */\nexport function createEmptyTableCell( writer, insertPosition, attributes = {} ) {\n\tconst tableCell = writer.createElement( 'tableCell', attributes );\n\twriter.insertElement( 'paragraph', tableCell );\n\twriter.insert( tableCell, insertPosition );\n}\n\n/**\n * Returns a string if all four values of box sides are equal.\n *\n * If a string is passed, it is treated as a single value (pass-through).\n *\n *\t\t// Returns 'foo':\n *\t\tgetSingleValue( { top: 'foo', right: 'foo', bottom: 'foo', left: 'foo' } );\n *\t\tgetSingleValue( 'foo' );\n *\n *\t\t// Returns undefined:\n *\t\tgetSingleValue( { top: 'foo', right: 'foo', bottom: 'bar', left: 'foo' } );\n *\t\tgetSingleValue( { top: 'foo', right: 'foo' } );\n *\n * @param objectOrString\n * @returns {module:engine/view/stylesmap~BoxSides|String}\n */\nexport function getSingleValue( objectOrString ) {\n\tif ( !objectOrString || !isObject( objectOrString ) ) {\n\t\treturn objectOrString;\n\t}\n\n\tconst { top, right, bottom, left } = objectOrString;\n\n\tif ( top == right && right == bottom && bottom == left ) {\n\t\treturn top;\n\t}\n}\n\n/**\n * Adds a unit to a value if the value is a number or a string representing a number.\n *\n * **Note**: It does nothing to non-numeric values.\n *\n *\t\tgetSingleValue( 25, 'px' );\t\t// '25px'\n *\t\tgetSingleValue( 25, 'em' );\t\t// '25em'\n *\t\tgetSingleValue( '25em', 'px' );\t// '25em'\n *\t\tgetSingleValue( 'foo', 'px' );\t// 'foo'\n *\n * @param {*} value\n * @param {String} defaultUnit A default unit added to a numeric value.\n * @returns {String|*}\n */\nexport function addDefaultUnitToNumericValue( value, defaultUnit ) {\n\tconst numericValue = parseFloat( value );\n\n\tif ( Number.isNaN( numericValue ) ) {\n\t\treturn value;\n\t}\n\n\tif ( String( numericValue ) !== String( value ) ) {\n\t\treturn value;\n\t}\n\n\treturn `${ numericValue }${ defaultUnit }`;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/converters/upcasttable\n */\n\nimport { createEmptyTableCell } from '../commands/utils';\n\n/**\n * View table element to model table element conversion helper.\n *\n * This conversion helper converts the table element as well as table rows.\n *\n * @returns {Function} Conversion helper.\n */\nexport default function upcastTable() {\n\treturn dispatcher => {\n\t\tdispatcher.on( 'element:table', ( evt, data, conversionApi ) => {\n\t\t\tconst viewTable = data.viewItem;\n\n\t\t\t// When element was already consumed then skip it.\n\t\t\tif ( !conversionApi.consumable.test( viewTable, { name: true } ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { rows, headingRows, headingColumns } = scanTable( viewTable );\n\n\t\t\t// Only set attributes if values is greater then 0.\n\t\t\tconst attributes = {};\n\n\t\t\tif ( headingColumns ) {\n\t\t\t\tattributes.headingColumns = headingColumns;\n\t\t\t}\n\n\t\t\tif ( headingRows ) {\n\t\t\t\tattributes.headingRows = headingRows;\n\t\t\t}\n\n\t\t\tconst table = conversionApi.writer.createElement( 'table', attributes );\n\n\t\t\t// Insert element on allowed position.\n\t\t\tconst splitResult = conversionApi.splitToAllowedParent( table, data.modelCursor );\n\n\t\t\t// When there is no split result it means that we can't insert element to model tree, so let's skip it.\n\t\t\tif ( !splitResult ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconversionApi.writer.insert( table, splitResult.position );\n\t\t\tconversionApi.consumable.consume( viewTable, { name: true } );\n\n\t\t\tif ( rows.length ) {\n\t\t\t\t// Upcast table rows in proper order (heading rows first).\n\t\t\t\trows.forEach( row => conversionApi.convertItem( row, conversionApi.writer.createPositionAt( table, 'end' ) ) );\n\t\t\t} else {\n\t\t\t\t// Create one row and one table cell for empty table.\n\t\t\t\tconst row = conversionApi.writer.createElement( 'tableRow' );\n\t\t\t\tconversionApi.writer.insert( row, conversionApi.writer.createPositionAt( table, 'end' ) );\n\n\t\t\t\tcreateEmptyTableCell( conversionApi.writer, conversionApi.writer.createPositionAt( row, 'end' ) );\n\t\t\t}\n\n\t\t\t// Set conversion result range.\n\t\t\tdata.modelRange = conversionApi.writer.createRange(\n\t\t\t\t// Range should start before inserted element\n\t\t\t\tconversionApi.writer.createPositionBefore( table ),\n\t\t\t\t// Should end after but we need to take into consideration that children could split our\n\t\t\t\t// element, so we need to move range after parent of the last converted child.\n\t\t\t\t// before: <allowed>[]</allowed>\n\t\t\t\t// after: <allowed>[<converted><child></child></converted><child></child><converted>]</converted></allowed>\n\t\t\t\tconversionApi.writer.createPositionAfter( table )\n\t\t\t);\n\n\t\t\t// Now we need to check where the modelCursor should be.\n\t\t\t// If we had to split parent to insert our element then we want to continue conversion inside split parent.\n\t\t\t//\n\t\t\t// before: <allowed><notAllowed>[]</notAllowed></allowed>\n\t\t\t// after:  <allowed><notAllowed></notAllowed><converted></converted><notAllowed>[]</notAllowed></allowed>\n\t\t\tif ( splitResult.cursorParent ) {\n\t\t\t\tdata.modelCursor = conversionApi.writer.createPositionAt( splitResult.cursorParent, 0 );\n\n\t\t\t\t// Otherwise just continue after inserted element.\n\t\t\t} else {\n\t\t\t\tdata.modelCursor = data.modelRange.end;\n\t\t\t}\n\t\t} );\n\t};\n}\n\nexport function upcastTableCell( elementName ) {\n\treturn dispatcher => {\n\t\tdispatcher.on( `element:${ elementName }`, ( evt, data, conversionApi ) => {\n\t\t\tconst viewTableCell = data.viewItem;\n\n\t\t\t// When element was already consumed then skip it.\n\t\t\tif ( !conversionApi.consumable.test( viewTableCell, { name: true } ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst tableCell = conversionApi.writer.createElement( 'tableCell' );\n\n\t\t\t// Insert element on allowed position.\n\t\t\tconst splitResult = conversionApi.splitToAllowedParent( tableCell, data.modelCursor );\n\n\t\t\t// When there is no split result it means that we can't insert element to model tree, so let's skip it.\n\t\t\tif ( !splitResult ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconversionApi.writer.insert( tableCell, splitResult.position );\n\t\t\tconversionApi.consumable.consume( viewTableCell, { name: true } );\n\n\t\t\tconst modelCursor = conversionApi.writer.createPositionAt( tableCell, 0 );\n\t\t\tconversionApi.convertChildren( viewTableCell, modelCursor );\n\n\t\t\t// Ensure a paragraph in the model for empty table cells.\n\t\t\tif ( !tableCell.childCount ) {\n\t\t\t\tconversionApi.writer.insertElement( 'paragraph', modelCursor );\n\t\t\t}\n\n\t\t\t// Set conversion result range.\n\t\t\tdata.modelRange = conversionApi.writer.createRange(\n\t\t\t\t// Range should start before inserted element\n\t\t\t\tconversionApi.writer.createPositionBefore( tableCell ),\n\t\t\t\t// Should end after but we need to take into consideration that children could split our\n\t\t\t\t// element, so we need to move range after parent of the last converted child.\n\t\t\t\t// before: <allowed>[]</allowed>\n\t\t\t\t// after: <allowed>[<converted><child></child></converted><child></child><converted>]</converted></allowed>\n\t\t\t\tconversionApi.writer.createPositionAfter( tableCell )\n\t\t\t);\n\n\t\t\t// Continue after inserted element.\n\t\t\tdata.modelCursor = data.modelRange.end;\n\t\t} );\n\t};\n}\n\n// Scans table rows and extracts required metadata from the table:\n//\n// headingRows    - The number of rows that go as table headers.\n// headingColumns - The maximum number of row headings.\n// rows           - Sorted `<tr>` elements as they should go into the model - ie. if `<thead>` is inserted after `<tbody>` in the view.\n//\n// @param {module:engine/view/element~Element} viewTable\n// @returns {{headingRows, headingColumns, rows}}\nfunction scanTable( viewTable ) {\n\tconst tableMeta = {\n\t\theadingRows: 0,\n\t\theadingColumns: 0\n\t};\n\n\t// The `<tbody>` and `<thead>` sections in the DOM do not have to be in order `<thead>` -> `<tbody>` and there might be more than one\n\t// of them.\n\t// As the model does not have these sections, rows from different sections must be sorted.\n\t// For example, below is a valid HTML table:\n\t//\n\t//\t\t<table>\n\t//\t\t\t<tbody><tr><td>2</td></tr></tbody>\n\t//\t\t\t<thead><tr><td>1</td></tr></thead>\n\t//\t\t\t<tbody><tr><td>3</td></tr></tbody>\n\t//\t\t</table>\n\t//\n\t// But browsers will render rows in order as: 1 as heading and 2 and 3 as the body.\n\tconst headRows = [];\n\tconst bodyRows = [];\n\n\t// Currently the editor does not support more then one <thead> section.\n\t// Only the first <thead> from the view will be used as heading rows and others will be converted to body rows.\n\tlet firstTheadElement;\n\n\tfor ( const tableChild of Array.from( viewTable.getChildren() ) ) {\n\t\t// Only <thead>, <tbody> & <tfoot> from allowed table children can have <tr>s.\n\t\t// The else is for future purposes (mainly <caption>).\n\t\tif ( tableChild.name === 'tbody' || tableChild.name === 'thead' || tableChild.name === 'tfoot' ) {\n\t\t\t// Save the first <thead> in the table as table header - all other ones will be converted to table body rows.\n\t\t\tif ( tableChild.name === 'thead' && !firstTheadElement ) {\n\t\t\t\tfirstTheadElement = tableChild;\n\t\t\t}\n\n\t\t\t// There might be some extra empty text nodes between the `tr`s.\n\t\t\t// Make sure further code operates on `tr`s only. (#145)\n\t\t\tconst trs = Array.from( tableChild.getChildren() ).filter( el => el.is( 'element', 'tr' ) );\n\n\t\t\tfor ( const tr of trs ) {\n\t\t\t\t// This <tr> is a child of a first <thead> element.\n\t\t\t\tif ( tr.parent.name === 'thead' && tr.parent === firstTheadElement ) {\n\t\t\t\t\ttableMeta.headingRows++;\n\t\t\t\t\theadRows.push( tr );\n\t\t\t\t} else {\n\t\t\t\t\tbodyRows.push( tr );\n\t\t\t\t\t// For other rows check how many column headings this row has.\n\n\t\t\t\t\tconst headingCols = scanRowForHeadingColumns( tr, tableMeta, firstTheadElement );\n\n\t\t\t\t\tif ( headingCols > tableMeta.headingColumns ) {\n\t\t\t\t\t\ttableMeta.headingColumns = headingCols;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\ttableMeta.rows = [ ...headRows, ...bodyRows ];\n\n\treturn tableMeta;\n}\n\n// Scans a `<tr>` element and its children for metadata:\n// - For heading row:\n//     - Adds this row to either the heading or the body rows.\n//     - Updates the number of heading rows.\n// - For body rows:\n//     - Calculates the number of column headings.\n//\n// @param {module:engine/view/element~Element} tr\n// @returns {Number}\nfunction scanRowForHeadingColumns( tr ) {\n\tlet headingColumns = 0;\n\tlet index = 0;\n\n\t// Filter out empty text nodes from tr children.\n\tconst children = Array.from( tr.getChildren() )\n\t\t.filter( child => child.name === 'th' || child.name === 'td' );\n\n\t// Count starting adjacent <th> elements of a <tr>.\n\twhile ( index < children.length && children[ index ].name === 'th' ) {\n\t\tconst th = children[ index ];\n\n\t\t// Adjust columns calculation by the number of spanned columns.\n\t\tconst colspan = parseInt( th.getAttribute( 'colspan' ) || 1 );\n\n\t\theadingColumns = headingColumns + colspan;\n\t\tindex++;\n\t}\n\n\treturn headingColumns;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tablewalker\n */\n\n/**\n * The table iterator class. It allows to iterate over table cells. For each cell the iterator yields\n * {@link module:table/tablewalker~TableWalkerValue} with proper table cell attributes.\n */\nexport default class TableWalker {\n\t/**\n\t * Creates an instance of the table walker.\n\t *\n\t * The table walker iterates internally by traversing the table from row index = 0 and column index = 0.\n\t * It walks row by row and column by column in order to output values defined in the constructor.\n\t * By default it will output only the locations that are occupied by a cell. To include also spanned rows and columns,\n\t * pass the `includeSpanned` option to the constructor.\n\t *\n\t * The most important values of the iterator are column and row indexes of a cell.\n\t *\n\t * See {@link module:table/tablewalker~TableWalkerValue} what values are returned by the table walker.\n\t *\n\t * To iterate over a given row:\n\t *\n\t *\t\tconst tableWalker = new TableWalker( table, { startRow: 1, endRow: 2 } );\n\t *\n\t *\t\tfor ( const cellInfo of tableWalker ) {\n\t *\t\t\tconsole.log( 'A cell at row ' + cellInfo.row + ' and column ' + cellInfo.column );\n\t *\t\t}\n\t *\n\t * For instance the code above for the following table:\n\t *\n\t *\t\t+----+----+----+----+----+----+\n\t *\t\t| 00      | 02 | 03 | 04 | 05 |\n\t *\t\t|         +----+----+----+----+\n\t *\t\t|         | 12      | 14 | 15 |\n\t *\t\t|         +----+----+----+    +\n\t *\t\t|         | 22           |    |\n\t *\t\t|----+----+----+----+----+    +\n\t *\t\t| 30 | 31 | 32 | 33 | 34 |    |\n\t *\t\t+----+----+----+----+----+----+\n\t *\n\t * will log in the console:\n\t *\n\t *\t\t'A cell at row 1 and column 2'\n\t *\t\t'A cell at row 1 and column 4'\n\t *\t\t'A cell at row 1 and column 5'\n\t *\t\t'A cell at row 2 and column 2'\n\t *\n\t * To also iterate over spanned cells:\n\t *\n\t *\t\tconst tableWalker = new TableWalker( table, { startRow: 1, endRow: 1, includeSpanned: true } );\n\t *\n\t *\t\tfor ( const value of tableWalker ) {\n\t *\t\t\tconsole.log( 'Cell at ' + value.row + ' x ' + value.column + ' : ' + ( value.isSpanned ? 'is spanned' : 'has data' ) );\n\t *\t\t}\n\t *\n\t * will log in the console for the table from the previous example:\n\t *\n\t *\t\t'Cell at 1 x 0 : is spanned'\n\t *\t\t'Cell at 1 x 1 : is spanned'\n\t *\t\t'Cell at 1 x 2 : has data'\n\t *\t\t'Cell at 1 x 3 : is spanned'\n\t *\t\t'Cell at 1 x 4 : has data'\n\t *\t\t'Cell at 1 x 5 : has data'\n\t *\n\t * @constructor\n\t * @param {module:engine/model/element~Element} table A table over which the walker iterates.\n\t * @param {Object} [options={}] An object with configuration.\n\t * @param {Number} [options.column] A column index for which this iterator will output cells.\n\t * @param {Number} [options.startRow=0] A row index from which this iterator should start.\n\t * @param {Number} [options.endRow] A row index at which this iterator should end.\n\t * @param {Boolean} [options.includeSpanned=false] Also return values for spanned cells.\n\t */\n\tconstructor( table, options = {} ) {\n\t\t/**\n\t\t * The walker's table element.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/element~Element}\n\t\t */\n\t\tthis.table = table;\n\n\t\t/**\n\t\t * A row index from which this iterator will start.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number}\n\t\t */\n\t\tthis.startRow = options.startRow || 0;\n\n\t\t/**\n\t\t * A row index at which this iterator will end.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number}\n\t\t */\n\t\tthis.endRow = typeof options.endRow == 'number' ? options.endRow : undefined;\n\n\t\t/**\n\t\t * Enables output of spanned cells that are normally not yielded.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis.includeSpanned = !!options.includeSpanned;\n\n\t\t/**\n\t\t * If set, the table walker will only output cells of a given column or cells that overlap it.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number}\n\t\t */\n\t\tthis.column = typeof options.column == 'number' ? options.column : undefined;\n\n\t\t/**\n\t\t * Row indexes to skip from the iteration.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Set<Number>}\n\t\t * @private\n\t\t */\n\t\tthis._skipRows = new Set();\n\n\t\t/**\n\t\t * The current row index.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number}\n\t\t * @private\n\t\t */\n\t\tthis._row = 0;\n\n\t\t/**\n\t\t * The current column index.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number}\n\t\t * @private\n\t\t */\n\t\tthis._column = 0;\n\n\t\t/**\n\t\t * The cell index in a parent row. For spanned cells when {@link #includeSpanned} is set to `true`,\n\t\t * this represents the index of the next table cell.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number}\n\t\t * @private\n\t\t */\n\t\tthis._cellIndex = 0;\n\n\t\t/**\n\t\t * Holds a map of spanned cells in a table.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Map<Number, Map.<Number, module:engine/model/element~Element>>}\n\t\t * @private\n\t\t */\n\t\tthis._spannedCells = new Map();\n\n\t\tthis._nextCellAtColumn = -1;\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * @returns {Iterable.<module:table/tablewalker~TableWalkerValue>}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Gets the next table walker's value.\n\t *\n\t * @returns {module:table/tablewalker~TableWalkerValue} The next table walker's value.\n\t */\n\tnext() {\n\t\tconst row = this.table.getChild( this._row );\n\n\t\t// Iterator is done when there's no row (table ended) or the row is after `endRow` limit.\n\t\tif ( !row || this._isOverEndRow() ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\tlet cell, skipCurrentValue, outValue;\n\n\t\tif ( this._isSpanned( this._row, this._column ) ) {\n\t\t\tcell = this._getSpanned( this._row, this._column );\n\n\t\t\tskipCurrentValue = !this.includeSpanned || this._shouldSkipRow() || this._shouldSkipColumn();\n\t\t\toutValue = this._formatOutValue( cell, this._column, true );\n\t\t} else {\n\t\t\tcell = row.getChild( this._cellIndex );\n\n\t\t\tif ( !cell ) {\n\t\t\t\t// If there are no more cells left in row advance to the next row.\n\t\t\t\tthis._row++;\n\t\t\t\tthis._column = 0;\n\t\t\t\tthis._cellIndex = 0;\n\t\t\t\tthis._nextCellAtColumn = -1;\n\n\t\t\t\treturn this.next();\n\t\t\t}\n\n\t\t\tconst colspan = parseInt( cell.getAttribute( 'colspan' ) || 1 );\n\t\t\tconst rowspan = parseInt( cell.getAttribute( 'rowspan' ) || 1 );\n\n\t\t\t// Record this cell spans if it's not 1x1 cell.\n\t\t\tif ( colspan > 1 || rowspan > 1 ) {\n\t\t\t\tthis._recordSpans( this._row, this._column, rowspan, colspan, cell );\n\t\t\t}\n\n\t\t\tthis._nextCellAtColumn = this._column + colspan;\n\n\t\t\tskipCurrentValue = this._shouldSkipRow() || this._shouldSkipColumn();\n\t\t\toutValue = this._formatOutValue( cell, this._column, false, rowspan, colspan );\n\t\t}\n\n\t\t// Advance to the next column before returning value.\n\t\tthis._column++;\n\n\t\tif ( this._column == this._nextCellAtColumn ) {\n\t\t\tthis._cellIndex++;\n\t\t}\n\n\t\t// The current value will be returned only if current row and column are not skipped.\n\t\treturn skipCurrentValue ? this.next() : outValue;\n\t}\n\n\t/**\n\t * Marks a row to skip in the next iteration. It will also skip cells from the current row if there are any cells from the current row\n\t * to output.\n\t *\n\t * @param {Number} row The row index to skip.\n\t */\n\tskipRow( row ) {\n\t\tthis._skipRows.add( row );\n\t}\n\n\t/**\n\t * Checks if the current row is over {@link #endRow}.\n\t *\n\t * @private\n\t * @returns {Boolean}\n\t */\n\t_isOverEndRow() {\n\t\t// If {@link #endRow) is defined skip all rows above it.\n\t\treturn this.endRow !== undefined && this._row > this.endRow;\n\t}\n\n\t/**\n\t * A common method for formatting the iterator's output value.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} cell The table cell to output.\n\t * @param {Number} column The column index (use the cached value).\n\t * @param {Boolean} isSpanned Whether the value is returned for a spanned cell location or an actual cell.\n\t * @param {Number} rowspan The rowspan of the current cell.\n\t * @param {Number} colspan The colspan of the current cell.\n\t * @returns {{done: Boolean, value: {cell: *, row: Number, column: *, rowspan: *, colspan: *, cellIndex: Number}}}\n\t */\n\t_formatOutValue( cell, column, isSpanned, rowspan = 1, colspan = 1 ) {\n\t\treturn {\n\t\t\tdone: false,\n\t\t\tvalue: {\n\t\t\t\tcell,\n\t\t\t\trow: this._row,\n\t\t\t\tcolumn,\n\t\t\t\tisSpanned,\n\t\t\t\trowspan,\n\t\t\t\tcolspan,\n\t\t\t\tcellIndex: this._cellIndex\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Checks if the current row should be skipped.\n\t *\n\t * @private\n\t * @returns {Boolean}\n\t */\n\t_shouldSkipRow() {\n\t\tconst rowIsBelowStartRow = this._row < this.startRow;\n\t\tconst rowIsMarkedAsSkipped = this._skipRows.has( this._row );\n\n\t\treturn rowIsBelowStartRow || rowIsMarkedAsSkipped;\n\t}\n\n\t/**\n\t * Checks if the current column should be skipped.\n\t *\n\t * @private\n\t * @returns {Boolean}\n\t */\n\t_shouldSkipColumn() {\n\t\tif ( this.column === undefined ) {\n\t\t\t// The {@link #column} is not defined so output all columns.\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.column != this._column;\n\t}\n\n\t/**\n\t * Checks if the current cell location (row x column) is spanned by another cell.\n\t *\n\t * @private\n\t * @param {Number} row The row index of a cell location to check.\n\t * @param {Number} column The column index of a cell location to check.\n\t * @returns {Boolean}\n\t */\n\t_isSpanned( row, column ) {\n\t\tif ( !this._spannedCells.has( row ) ) {\n\t\t\t// No spans for given row.\n\t\t\treturn false;\n\t\t}\n\n\t\tconst rowSpans = this._spannedCells.get( row );\n\n\t\t// If spans for given rows has entry for column it means that this location if spanned by other cell.\n\t\treturn rowSpans.has( column );\n\t}\n\n\t/**\n\t * Returns the cell element that is spanned over the `row` x `column` location.\n\t *\n\t * @private\n\t * @param {Number} row The row index of the cell location.\n\t * @param {Number} column The column index of the cell location.\n\t * @returns {module:engine/model/element~Element}\n\t */\n\t_getSpanned( row, column ) {\n\t\treturn this._spannedCells.get( row ).get( column );\n\t}\n\n\t/**\n\t * Updates spanned cells map relative to the current cell location and its span dimensions.\n\t *\n\t * @private\n\t * @param {Number} row The row index of a cell.\n\t * @param {Number} column The column index of a cell.\n\t * @param {Number} rowspan Cell height.\n\t * @param {Number} colspan Cell width.\n\t * @param {module:engine/model/element~Element} cell A cell that is spanned.\n\t */\n\t_recordSpans( row, column, rowspan, colspan, cell ) {\n\t\t// This will update all cell locations after current column - ie a cell has colspan set.\n\t\tfor ( let columnToUpdate = column + 1; columnToUpdate <= column + colspan - 1; columnToUpdate++ ) {\n\t\t\tthis._markSpannedCell( row, columnToUpdate, cell );\n\t\t}\n\n\t\t// This will update all rows below current up to row's height.\n\t\tfor ( let rowToUpdate = row + 1; rowToUpdate < row + rowspan; rowToUpdate++ ) {\n\t\t\tfor ( let columnToUpdate = column; columnToUpdate <= column + colspan - 1; columnToUpdate++ ) {\n\t\t\t\tthis._markSpannedCell( rowToUpdate, columnToUpdate, cell );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Marks the cell location as spanned by another cell.\n\t *\n\t * @private\n\t * @param {Number} row The row index of the cell location.\n\t * @param {Number} column The column index of the cell location.\n\t * @param {module:engine/model/element~Element} cell A cell that is spanned.\n\t */\n\t_markSpannedCell( row, column, cell ) {\n\t\tif ( !this._spannedCells.has( row ) ) {\n\t\t\tthis._spannedCells.set( row, new Map() );\n\t\t}\n\n\t\tconst rowSpans = this._spannedCells.get( row );\n\n\t\trowSpans.set( column, cell );\n\t}\n}\n\n/**\n * An object returned by {@link module:table/tablewalker~TableWalker} when traversing table cells.\n *\n * @typedef {Object} module:table/tablewalker~TableWalkerValue\n * @property {module:engine/model/element~Element} cell The current table cell.\n * @property {Number} row The row index of a cell.\n * @property {Number} column The column index of a cell. Column index is adjusted to widths and heights of previous cells.\n * @param {Boolean} isSpanned Whether the value is returned for a spanned cell location or an actual cell.\n * @property {Number} colspan The `colspan` attribute of a cell. If the model attribute is not present, it is set to `1`. For spanned\n * table locations, it is set to `1`.\n * @property {Number} rowspan The `rowspan` attribute of a cell. If the model attribute is not present, it is set to `1`. For spanned\n * table locations, it is set to `1`.\n * @property {Number} cellIndex The index of the current cell in the parent row.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/utils\n */\n\nimport { isWidget, toWidget } from '@ckeditor/ckeditor5-widget/src/utils';\nimport { findAncestor } from './commands/utils';\n\n/**\n * Converts a given {@link module:engine/view/element~Element} to a table widget:\n * * Adds a {@link module:engine/view/element~Element#_setCustomProperty custom property} allowing to recognize the table widget element.\n * * Calls the {@link module:widget/utils~toWidget} function with the proper element's label creator.\n *\n * @param {module:engine/view/element~Element} viewElement\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer An instance of the view writer.\n * @param {String} label The element's label. It will be concatenated with the table `alt` attribute if one is present.\n * @returns {module:engine/view/element~Element}\n */\nexport function toTableWidget( viewElement, writer ) {\n\twriter.setCustomProperty( 'table', true, viewElement );\n\n\treturn toWidget( viewElement, writer, { hasSelectionHandle: true } );\n}\n\n/**\n * Checks if a given view element is a table widget.\n *\n * @param {module:engine/view/element~Element} viewElement\n * @returns {Boolean}\n */\nexport function isTableWidget( viewElement ) {\n\treturn !!viewElement.getCustomProperty( 'table' ) && isWidget( viewElement );\n}\n\n/**\n * Returns a table widget editing view element if one is selected.\n *\n * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} selection\n * @returns {module:engine/view/element~Element|null}\n */\nexport function getSelectedTableWidget( selection ) {\n\tconst viewElement = selection.getSelectedElement();\n\n\tif ( viewElement && isTableWidget( viewElement ) ) {\n\t\treturn viewElement;\n\t}\n\n\treturn null;\n}\n\n/**\n * Returns a table widget editing view element if one is among the selection's ancestors.\n *\n * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} selection\n * @returns {module:engine/view/element~Element|null}\n */\nexport function getTableWidgetAncestor( selection ) {\n\tconst parentTable = findAncestor( 'table', selection.getFirstPosition() );\n\n\tif ( parentTable && isTableWidget( parentTable.parent ) ) {\n\t\treturn parentTable.parent;\n\t}\n\n\treturn null;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/converters/downcast\n */\n\nimport TableWalker from './../tablewalker';\nimport { toWidgetEditable } from '@ckeditor/ckeditor5-widget/src/utils';\nimport { toTableWidget } from '../utils';\n\n/**\n * Model table element to view table element conversion helper.\n *\n * This conversion helper creates the whole table element with child elements.\n *\n * @param {Object} options\n * @param {Boolean} options.asWidget If set to `true`, the downcast conversion will produce a widget.\n * @returns {Function} Conversion helper.\n */\nexport function downcastInsertTable( options = {} ) {\n\treturn dispatcher => dispatcher.on( 'insert:table', ( evt, data, conversionApi ) => {\n\t\tconst table = data.item;\n\n\t\tif ( !conversionApi.consumable.consume( table, 'insert' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Consume attributes if present to not fire attribute change downcast\n\t\tconversionApi.consumable.consume( table, 'attribute:headingRows:table' );\n\t\tconversionApi.consumable.consume( table, 'attribute:headingColumns:table' );\n\n\t\tconst asWidget = options && options.asWidget;\n\n\t\tconst figureElement = conversionApi.writer.createContainerElement( 'figure', { class: 'table' } );\n\t\tconst tableElement = conversionApi.writer.createContainerElement( 'table' );\n\t\tconversionApi.writer.insert( conversionApi.writer.createPositionAt( figureElement, 0 ), tableElement );\n\n\t\tlet tableWidget;\n\n\t\tif ( asWidget ) {\n\t\t\ttableWidget = toTableWidget( figureElement, conversionApi.writer );\n\t\t}\n\n\t\tconst tableWalker = new TableWalker( table );\n\n\t\tconst tableAttributes = {\n\t\t\theadingRows: table.getAttribute( 'headingRows' ) || 0,\n\t\t\theadingColumns: table.getAttribute( 'headingColumns' ) || 0\n\t\t};\n\n\t\t// Cache for created table rows.\n\t\tconst viewRows = new Map();\n\n\t\tfor ( const tableWalkerValue of tableWalker ) {\n\t\t\tconst { row, cell } = tableWalkerValue;\n\n\t\t\tconst tableSection = getOrCreateTableSection( getSectionName( row, tableAttributes ), tableElement, conversionApi );\n\t\t\tconst tableRow = table.getChild( row );\n\n\t\t\tconst trElement = viewRows.get( row ) || createTr( tableRow, row, tableSection, conversionApi );\n\t\t\tviewRows.set( row, trElement );\n\n\t\t\t// Consume table cell - it will be always consumed as we convert whole table at once.\n\t\t\tconversionApi.consumable.consume( cell, 'insert' );\n\n\t\t\tconst insertPosition = conversionApi.writer.createPositionAt( trElement, 'end' );\n\n\t\t\tcreateViewTableCellElement( tableWalkerValue, tableAttributes, insertPosition, conversionApi, options );\n\t\t}\n\n\t\tconst viewPosition = conversionApi.mapper.toViewPosition( data.range.start );\n\n\t\tconversionApi.mapper.bindElements( table, asWidget ? tableWidget : figureElement );\n\t\tconversionApi.writer.insert( viewPosition, asWidget ? tableWidget : figureElement );\n\t} );\n}\n\n/**\n * Model row element to view `<tr>` element conversion helper.\n *\n * This conversion helper creates the whole `<tr>` element with child elements.\n *\n * @returns {Function} Conversion helper.\n */\nexport function downcastInsertRow( options = {} ) {\n\treturn dispatcher => dispatcher.on( 'insert:tableRow', ( evt, data, conversionApi ) => {\n\t\tconst tableRow = data.item;\n\n\t\tif ( !conversionApi.consumable.consume( tableRow, 'insert' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst table = tableRow.parent;\n\n\t\tconst figureElement = conversionApi.mapper.toViewElement( table );\n\t\tconst tableElement = getViewTable( figureElement );\n\n\t\tconst row = table.getChildIndex( tableRow );\n\n\t\tconst tableWalker = new TableWalker( table, { startRow: row, endRow: row } );\n\n\t\tconst tableAttributes = {\n\t\t\theadingRows: table.getAttribute( 'headingRows' ) || 0,\n\t\t\theadingColumns: table.getAttribute( 'headingColumns' ) || 0\n\t\t};\n\n\t\t// Cache for created table rows.\n\t\tconst viewRows = new Map();\n\n\t\tfor ( const tableWalkerValue of tableWalker ) {\n\t\t\tconst tableSection = getOrCreateTableSection( getSectionName( row, tableAttributes ), tableElement, conversionApi );\n\n\t\t\tconst trElement = viewRows.get( row ) || createTr( tableRow, row, tableSection, conversionApi );\n\t\t\tviewRows.set( row, trElement );\n\n\t\t\t// Consume table cell - it will be always consumed as we convert whole row at once.\n\t\t\tconversionApi.consumable.consume( tableWalkerValue.cell, 'insert' );\n\n\t\t\tconst insertPosition = conversionApi.writer.createPositionAt( trElement, 'end' );\n\n\t\t\tcreateViewTableCellElement( tableWalkerValue, tableAttributes, insertPosition, conversionApi, options );\n\t\t}\n\t} );\n}\n\n/**\n * Model table cell element to view `<td>` or `<th>` element conversion helper.\n *\n * This conversion helper will create proper `<th>` elements for table cells that are in the heading section (heading row or column)\n * and `<td>` otherwise.\n *\n * @returns {Function} Conversion helper.\n */\nexport function downcastInsertCell( options = {} ) {\n\treturn dispatcher => dispatcher.on( 'insert:tableCell', ( evt, data, conversionApi ) => {\n\t\tconst tableCell = data.item;\n\n\t\tif ( !conversionApi.consumable.consume( tableCell, 'insert' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst tableRow = tableCell.parent;\n\t\tconst table = tableRow.parent;\n\t\tconst rowIndex = table.getChildIndex( tableRow );\n\n\t\tconst tableWalker = new TableWalker( table, { startRow: rowIndex, endRow: rowIndex } );\n\n\t\tconst tableAttributes = {\n\t\t\theadingRows: table.getAttribute( 'headingRows' ) || 0,\n\t\t\theadingColumns: table.getAttribute( 'headingColumns' ) || 0\n\t\t};\n\n\t\t// We need to iterate over a table in order to get proper row & column values from a walker\n\t\tfor ( const tableWalkerValue of tableWalker ) {\n\t\t\tif ( tableWalkerValue.cell === tableCell ) {\n\t\t\t\tconst trElement = conversionApi.mapper.toViewElement( tableRow );\n\t\t\t\tconst insertPosition = conversionApi.writer.createPositionAt( trElement, tableRow.getChildIndex( tableCell ) );\n\n\t\t\t\tcreateViewTableCellElement( tableWalkerValue, tableAttributes, insertPosition, conversionApi, options );\n\n\t\t\t\t// No need to iterate further.\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t} );\n}\n\n/**\n * Conversion helper that acts on heading row table attribute change.\n *\n * This converter will:\n *\n * * Rename `<td>` to `<th>` elements or vice versa depending on headings.\n * * Create `<thead>` or `<tbody>` elements if needed.\n * * Remove empty `<thead>` or `<tbody>` if needed.\n *\n * @returns {Function} Conversion helper.\n */\nexport function downcastTableHeadingRowsChange( options = {} ) {\n\tconst asWidget = !!options.asWidget;\n\n\treturn dispatcher => dispatcher.on( 'attribute:headingRows:table', ( evt, data, conversionApi ) => {\n\t\tconst table = data.item;\n\n\t\tif ( !conversionApi.consumable.consume( data.item, evt.name ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst figureElement = conversionApi.mapper.toViewElement( table );\n\t\tconst viewTable = getViewTable( figureElement );\n\n\t\tconst oldRows = data.attributeOldValue;\n\t\tconst newRows = data.attributeNewValue;\n\n\t\t// The head section has grown so move rows from <tbody> to <thead>.\n\t\tif ( newRows > oldRows ) {\n\t\t\t// Filter out only those rows that are in wrong section.\n\t\t\tconst rowsToMove = Array.from( table.getChildren() ).filter( ( { index } ) => isBetween( index, oldRows - 1, newRows ) );\n\n\t\t\tconst viewTableHead = getOrCreateTableSection( 'thead', viewTable, conversionApi );\n\t\t\tmoveViewRowsToTableSection( rowsToMove, viewTableHead, conversionApi, 'end' );\n\n\t\t\t// Rename all table cells from moved rows to 'th' as they lands in <thead>.\n\t\t\tfor ( const tableRow of rowsToMove ) {\n\t\t\t\tfor ( const tableCell of tableRow.getChildren() ) {\n\t\t\t\t\trenameViewTableCell( tableCell, 'th', conversionApi, asWidget );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Cleanup: this will remove any empty section from the view which may happen when moving all rows from a table section.\n\t\t\tremoveTableSectionIfEmpty( 'tbody', viewTable, conversionApi );\n\t\t}\n\t\t// The head section has shrunk so move rows from <thead> to <tbody>.\n\t\telse {\n\t\t\t// Filter out only those rows that are in wrong section.\n\t\t\tconst rowsToMove = Array.from( table.getChildren() )\n\t\t\t\t.filter( ( { index } ) => isBetween( index, newRows - 1, oldRows ) )\n\t\t\t\t.reverse(); // The rows will be moved from <thead> to <tbody> in reverse order at the beginning of a <tbody>.\n\n\t\t\tconst viewTableBody = getOrCreateTableSection( 'tbody', viewTable, conversionApi );\n\t\t\tmoveViewRowsToTableSection( rowsToMove, viewTableBody, conversionApi, 0 );\n\n\t\t\t// Check if cells moved from <thead> to <tbody> requires renaming to <td> as this depends on current heading columns attribute.\n\t\t\tconst tableWalker = new TableWalker( table, { startRow: newRows ? newRows - 1 : newRows, endRow: oldRows - 1 } );\n\n\t\t\tconst tableAttributes = {\n\t\t\t\theadingRows: table.getAttribute( 'headingRows' ) || 0,\n\t\t\t\theadingColumns: table.getAttribute( 'headingColumns' ) || 0\n\t\t\t};\n\n\t\t\tfor ( const tableWalkerValue of tableWalker ) {\n\t\t\t\trenameViewTableCellIfRequired( tableWalkerValue, tableAttributes, conversionApi, asWidget );\n\t\t\t}\n\n\t\t\t// Cleanup: this will remove any empty section from the view which may happen when moving all rows from a table section.\n\t\t\tremoveTableSectionIfEmpty( 'thead', viewTable, conversionApi );\n\t\t}\n\n\t\tfunction isBetween( index, lower, upper ) {\n\t\t\treturn index > lower && index < upper;\n\t\t}\n\t} );\n}\n\n/**\n * Conversion helper that acts on heading column table attribute change.\n *\n * Depending on changed attributes this converter will rename `<td` to `<th>` elements or vice versa depending on the cell column index.\n *\n * @returns {Function} Conversion helper.\n */\nexport function downcastTableHeadingColumnsChange( options = {} ) {\n\tconst asWidget = !!options.asWidget;\n\n\treturn dispatcher => dispatcher.on( 'attribute:headingColumns:table', ( evt, data, conversionApi ) => {\n\t\tconst table = data.item;\n\n\t\tif ( !conversionApi.consumable.consume( data.item, evt.name ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst tableAttributes = {\n\t\t\theadingRows: table.getAttribute( 'headingRows' ) || 0,\n\t\t\theadingColumns: table.getAttribute( 'headingColumns' ) || 0\n\t\t};\n\n\t\tconst oldColumns = data.attributeOldValue;\n\t\tconst newColumns = data.attributeNewValue;\n\n\t\tconst lastColumnToCheck = ( oldColumns > newColumns ? oldColumns : newColumns ) - 1;\n\n\t\tfor ( const tableWalkerValue of new TableWalker( table ) ) {\n\t\t\t// Skip cells that were not in heading section before and after the change.\n\t\t\tif ( tableWalkerValue.column > lastColumnToCheck ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\trenameViewTableCellIfRequired( tableWalkerValue, tableAttributes, conversionApi, asWidget );\n\t\t}\n\t} );\n}\n\n/**\n * Conversion helper that acts on a removed row.\n *\n * @returns {Function} Conversion helper.\n */\nexport function downcastRemoveRow() {\n\treturn dispatcher => dispatcher.on( 'remove:tableRow', ( evt, data, conversionApi ) => {\n\t\t// Prevent default remove converter.\n\t\tevt.stop();\n\t\tconst viewWriter = conversionApi.writer;\n\t\tconst mapper = conversionApi.mapper;\n\n\t\tconst viewStart = mapper.toViewPosition( data.position ).getLastMatchingPosition( value => !value.item.is( 'tr' ) );\n\t\tconst viewItem = viewStart.nodeAfter;\n\t\tconst tableSection = viewItem.parent;\n\n\t\t// Remove associated <tr> from the view.\n\t\tconst removeRange = viewWriter.createRangeOn( viewItem );\n\t\tconst removed = viewWriter.remove( removeRange );\n\n\t\tfor ( const child of viewWriter.createRangeIn( removed ).getItems() ) {\n\t\t\tmapper.unbindViewElement( child );\n\t\t}\n\n\t\t// Check if table section has any children left - if not remove it from the view.\n\t\tif ( !tableSection.childCount ) {\n\t\t\t// No need to unbind anything as table section is not represented in the model.\n\t\t\tviewWriter.remove( viewWriter.createRangeOn( tableSection ) );\n\t\t}\n\t}, { priority: 'higher' } );\n}\n\n// Renames an existing table cell in the view to a given element name.\n//\n// **Note** This method will not do anything if a view table cell has not been converted yet.\n//\n// @param {module:engine/model/element~Element} tableCell\n// @param {String} desiredCellElementName\n// @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi\n// @param {Boolean} asWidget\nfunction renameViewTableCell( tableCell, desiredCellElementName, conversionApi, asWidget ) {\n\tconst viewWriter = conversionApi.writer;\n\tconst viewCell = conversionApi.mapper.toViewElement( tableCell );\n\n\t// View cell might be not yet converted - skip it as it will be properly created by cell converter later on.\n\tif ( !viewCell ) {\n\t\treturn;\n\t}\n\n\tlet renamedCell;\n\n\tif ( asWidget ) {\n\t\tconst editable = viewWriter.createEditableElement( desiredCellElementName, viewCell.getAttributes() );\n\t\trenamedCell = toWidgetEditable( editable, viewWriter );\n\n\t\tviewWriter.insert( viewWriter.createPositionAfter( viewCell ), renamedCell );\n\t\tviewWriter.move( viewWriter.createRangeIn( viewCell ), viewWriter.createPositionAt( renamedCell, 0 ) );\n\t\tviewWriter.remove( viewWriter.createRangeOn( viewCell ) );\n\t} else {\n\t\trenamedCell = viewWriter.rename( desiredCellElementName, viewCell );\n\t}\n\n\tconversionApi.mapper.unbindViewElement( viewCell );\n\tconversionApi.mapper.bindElements( tableCell, renamedCell );\n}\n\n// Renames a table cell element in the view according to its location in the table.\n//\n// @param {module:table/tablewalker~TableWalkerValue} tableWalkerValue\n// @param {{headingColumns, headingRows}} tableAttributes\n// @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi\n// @param {Boolean} asWidget\nfunction renameViewTableCellIfRequired( tableWalkerValue, tableAttributes, conversionApi, asWidget ) {\n\tconst { cell } = tableWalkerValue;\n\n\t// Check whether current columnIndex is overlapped by table cells from previous rows.\n\tconst desiredCellElementName = getCellElementName( tableWalkerValue, tableAttributes );\n\n\tconst viewCell = conversionApi.mapper.toViewElement( cell );\n\n\t// If in single change we're converting attribute changes and inserting cell the table cell might not be inserted into view\n\t// because of child conversion is done after parent.\n\tif ( viewCell && viewCell.name !== desiredCellElementName ) {\n\t\trenameViewTableCell( cell, desiredCellElementName, conversionApi, asWidget );\n\t}\n}\n\n// Creates a table cell element in the view.\n//\n// @param {module:table/tablewalker~TableWalkerValue} tableWalkerValue\n// @param {module:engine/view/position~Position} insertPosition\n// @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi\nfunction createViewTableCellElement( tableWalkerValue, tableAttributes, insertPosition, conversionApi, options ) {\n\tconst asWidget = options && options.asWidget;\n\tconst cellElementName = getCellElementName( tableWalkerValue, tableAttributes );\n\n\tconst cellElement = asWidget ?\n\t\ttoWidgetEditable( conversionApi.writer.createEditableElement( cellElementName ), conversionApi.writer ) :\n\t\tconversionApi.writer.createContainerElement( cellElementName );\n\n\tconst tableCell = tableWalkerValue.cell;\n\n\tconst firstChild = tableCell.getChild( 0 );\n\tconst isSingleParagraph = tableCell.childCount === 1 && firstChild.name === 'paragraph';\n\n\tconversionApi.writer.insert( insertPosition, cellElement );\n\n\tif ( isSingleParagraph && !hasAnyAttribute( firstChild ) ) {\n\t\tconst innerParagraph = tableCell.getChild( 0 );\n\t\tconst paragraphInsertPosition = conversionApi.writer.createPositionAt( cellElement, 'end' );\n\n\t\tconversionApi.consumable.consume( innerParagraph, 'insert' );\n\n\t\tif ( options.asWidget ) {\n\t\t\t// Use display:inline-block to force Chrome/Safari to limit text mutations to this element.\n\t\t\t// See #6062.\n\t\t\tconst fakeParagraph = conversionApi.writer.createContainerElement( 'span', { style: 'display:inline-block' } );\n\n\t\t\tconversionApi.mapper.bindElements( innerParagraph, fakeParagraph );\n\t\t\tconversionApi.writer.insert( paragraphInsertPosition, fakeParagraph );\n\n\t\t\tconversionApi.mapper.bindElements( tableCell, cellElement );\n\t\t} else {\n\t\t\tconversionApi.mapper.bindElements( tableCell, cellElement );\n\t\t\tconversionApi.mapper.bindElements( innerParagraph, cellElement );\n\t\t}\n\t} else {\n\t\tconversionApi.mapper.bindElements( tableCell, cellElement );\n\t}\n}\n\n// Creates a `<tr>` view element.\n//\n// @param {module:engine/view/element~Element} tableRow\n// @param {Number} rowIndex\n// @param {module:engine/view/element~Element} tableSection\n// @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi\n// @returns {module:engine/view/element~Element}\nfunction createTr( tableRow, rowIndex, tableSection, conversionApi ) {\n\t// Will always consume since we're converting <tableRow> element from a parent <table>.\n\tconversionApi.consumable.consume( tableRow, 'insert' );\n\n\tconst trElement = conversionApi.writer.createContainerElement( 'tr' );\n\tconversionApi.mapper.bindElements( tableRow, trElement );\n\n\tconst headingRows = tableRow.parent.getAttribute( 'headingRows' ) || 0;\n\tconst offset = headingRows > 0 && rowIndex >= headingRows ? rowIndex - headingRows : rowIndex;\n\n\tconst position = conversionApi.writer.createPositionAt( tableSection, offset );\n\tconversionApi.writer.insert( position, trElement );\n\n\treturn trElement;\n}\n\n// Returns `th` for heading cells and `td` for other cells for the current table walker value.\n//\n// @param {module:table/tablewalker~TableWalkerValue} tableWalkerValue\n// @param {{headingColumns, headingRows}} tableAttributes\n// @returns {String}\nfunction getCellElementName( tableWalkerValue, tableAttributes ) {\n\tconst { row, column } = tableWalkerValue;\n\tconst { headingColumns, headingRows } = tableAttributes;\n\n\t// Column heading are all tableCells in the first `columnHeading` rows.\n\tconst isColumnHeading = headingRows && headingRows > row;\n\n\t// So a whole row gets <th> element.\n\tif ( isColumnHeading ) {\n\t\treturn 'th';\n\t}\n\n\t// Row heading are tableCells which columnIndex is lower then headingColumns.\n\tconst isRowHeading = headingColumns && headingColumns > column;\n\n\treturn isRowHeading ? 'th' : 'td';\n}\n\n// Returns the table section name for the current table walker value.\n//\n// @param {Number} row\n// @param {{headingColumns, headingRows}} tableAttributes\n// @returns {String}\nfunction getSectionName( row, tableAttributes ) {\n\treturn row < tableAttributes.headingRows ? 'thead' : 'tbody';\n}\n\n// Creates or returns an existing `<tbody>` or `<thead>` element with caching.\n//\n// @param {String} sectionName\n// @param {module:engine/view/element~Element} viewTable\n// @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi\n// @param {Object} cachedTableSection An object that stores cached elements.\n// @returns {module:engine/view/containerelement~ContainerElement}\nfunction getOrCreateTableSection( sectionName, viewTable, conversionApi ) {\n\tconst viewTableSection = getExistingTableSectionElement( sectionName, viewTable );\n\n\treturn viewTableSection ? viewTableSection : createTableSection( sectionName, viewTable, conversionApi );\n}\n\n// Finds an existing `<tbody>` or `<thead>` element or returns undefined.\n//\n// @param {String} sectionName\n// @param {module:engine/view/element~Element} tableElement\n// @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi\nfunction getExistingTableSectionElement( sectionName, tableElement ) {\n\tfor ( const tableSection of tableElement.getChildren() ) {\n\t\tif ( tableSection.name == sectionName ) {\n\t\t\treturn tableSection;\n\t\t}\n\t}\n}\n\n// Creates a table section at the end of the table.\n//\n// @param {String} sectionName\n// @param {module:engine/view/element~Element} tableElement\n// @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi\n// @returns {module:engine/view/containerelement~ContainerElement}\nfunction createTableSection( sectionName, tableElement, conversionApi ) {\n\tconst tableChildElement = conversionApi.writer.createContainerElement( sectionName );\n\n\tconst insertPosition = conversionApi.writer.createPositionAt( tableElement, sectionName == 'tbody' ? 'end' : 0 );\n\n\tconversionApi.writer.insert( insertPosition, tableChildElement );\n\n\treturn tableChildElement;\n}\n\n// Removes an existing `<tbody>` or `<thead>` element if it is empty.\n//\n// @param {String} sectionName\n// @param {module:engine/view/element~Element} tableElement\n// @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi\nfunction removeTableSectionIfEmpty( sectionName, tableElement, conversionApi ) {\n\tconst tableSection = getExistingTableSectionElement( sectionName, tableElement );\n\n\tif ( tableSection && tableSection.childCount === 0 ) {\n\t\tconversionApi.writer.remove( conversionApi.writer.createRangeOn( tableSection ) );\n\t}\n}\n\n// Moves view table rows associated with passed model rows to the provided table section element.\n//\n// **Note**: This method will skip not converted table rows.\n//\n// @param {Array.<module:engine/model/element~Element>} rowsToMove\n// @param {module:engine/view/element~Element} viewTableSection\n// @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi\n// @param {Number|'end'|'before'|'after'} offset Offset or one of the flags.\nfunction moveViewRowsToTableSection( rowsToMove, viewTableSection, conversionApi, offset ) {\n\tfor ( const tableRow of rowsToMove ) {\n\t\tconst viewTableRow = conversionApi.mapper.toViewElement( tableRow );\n\n\t\t// View table row might be not yet converted - skip it as it will be properly created by cell converter later on.\n\t\tif ( viewTableRow ) {\n\t\t\tconversionApi.writer.move(\n\t\t\t\tconversionApi.writer.createRangeOn( viewTableRow ),\n\t\t\t\tconversionApi.writer.createPositionAt( viewTableSection, offset )\n\t\t\t);\n\t\t}\n\t}\n}\n\n// Finds a '<table>' element inside the `<figure>` widget.\n//\n// @param {module:engine/view/element~Element} viewFigure\nfunction getViewTable( viewFigure ) {\n\tfor ( const child of viewFigure.getChildren() ) {\n\t\tif ( child.name === 'table' ) {\n\t\t\treturn child;\n\t\t}\n\t}\n}\n\n// Checks if an element has any attributes set.\n//\n// @param {module:engine/model/element~Element element\n// @returns {Boolean}\nfunction hasAnyAttribute( element ) {\n\treturn !![ ...element.getAttributeKeys() ].length;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/commands/inserttablecommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { findOptimalInsertionPosition } from '@ckeditor/ckeditor5-widget/src/utils';\n\n/**\n * The insert table command.\n *\n * The command is registered by {@link module:table/tableediting~TableEditing} as the `'insertTable'` editor command.\n *\n * To insert a table at the current selection, execute the command and specify the dimensions:\n *\n *\t\teditor.execute( 'insertTable', { rows: 20, columns: 5 } );\n *\n * @extends module:core/command~Command\n */\nexport default class InsertTableCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\t\tconst schema = model.schema;\n\n\t\tconst validParent = getInsertTableParent( selection.getFirstPosition() );\n\n\t\tthis.isEnabled = schema.checkChild( validParent, 'table' );\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * Inserts a table with the given number of rows and columns into the editor.\n\t *\n\t * @param {Object} options\n\t * @param {Number} [options.rows=2] The number of rows to create in the inserted table.\n\t * @param {Number} [options.columns=2] The number of columns to create in the inserted table.\n\t * @fires execute\n\t */\n\texecute( options = {} ) {\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\t\tconst tableUtils = this.editor.plugins.get( 'TableUtils' );\n\n\t\tconst rows = parseInt( options.rows ) || 2;\n\t\tconst columns = parseInt( options.columns ) || 2;\n\n\t\tconst insertPosition = findOptimalInsertionPosition( selection, model );\n\n\t\tmodel.change( writer => {\n\t\t\tconst table = tableUtils.createTable( writer, rows, columns );\n\n\t\t\tmodel.insertContent( table, insertPosition );\n\n\t\t\twriter.setSelection( writer.createPositionAt( table.getNodeByPath( [ 0, 0, 0 ] ), 0 ) );\n\t\t} );\n\t}\n}\n\n// Returns valid parent to insert table\n//\n// @param {module:engine/model/position} position\nfunction getInsertTableParent( position ) {\n\tconst parent = position.parent;\n\n\treturn parent === parent.root ? parent : parent.parent;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/commands/insertrowcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { findAncestor } from './utils';\n\n/**\n * The insert row command.\n *\n * The command is registered by {@link module:table/tableediting~TableEditing} as the `'insertTableRowBelow'` and\n * `'insertTableRowAbove'` editor commands.\n *\n * To insert a row below the selected cell, execute the following command:\n *\n *\t\teditor.execute( 'insertTableRowBelow' );\n *\n * To insert a row above the selected cell, execute the following command:\n *\n *\t\teditor.execute( 'insertTableRowAbove' );\n *\n * @extends module:core/command~Command\n */\nexport default class InsertRowCommand extends Command {\n\t/**\n\t * Creates a new `InsertRowCommand` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor The editor on which this command will be used.\n\t * @param {Object} options\n\t * @param {String} [options.order=\"below\"] The order of insertion relative to the row in which the caret is located.\n\t * Possible values: `\"above\"` and `\"below\"`.\n\t */\n\tconstructor( editor, options = {} ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The order of insertion relative to the row in which the caret is located.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String} module:table/commands/insertrowcommand~InsertRowCommand#order\n\t\t */\n\t\tthis.order = options.order || 'below';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst selection = this.editor.model.document.selection;\n\n\t\tconst tableParent = findAncestor( 'table', selection.getFirstPosition() );\n\n\t\tthis.isEnabled = !!tableParent;\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * Depending on the command's {@link #order} value, it inserts a row `'below'` or `'above'` the row in which selection is set.\n\t *\n\t * @fires execute\n\t */\n\texecute() {\n\t\tconst editor = this.editor;\n\t\tconst selection = editor.model.document.selection;\n\t\tconst tableUtils = editor.plugins.get( 'TableUtils' );\n\n\t\tconst tableCell = findAncestor( 'tableCell', selection.getFirstPosition() );\n\t\tconst tableRow = tableCell.parent;\n\t\tconst table = tableRow.parent;\n\n\t\tconst row = table.getChildIndex( tableRow );\n\t\tconst insertAt = this.order === 'below' ? row + 1 : row;\n\n\t\ttableUtils.insertRows( table, { rows: 1, at: insertAt } );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/commands/insertcolumncommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { findAncestor } from './utils';\n\n/**\n * The insert column command.\n *\n * The command is registered by {@link module:table/tableediting~TableEditing} as the `'insertTableColumnLeft'` and\n * `'insertTableColumnRight'` editor commands.\n *\n * To insert a column to the left of the selected cell, execute the following command:\n *\n *\t\teditor.execute( 'insertTableColumnLeft' );\n *\n * To insert a column to the right of the selected cell, execute the following command:\n *\n *\t\teditor.execute( 'insertTableColumnRight' );\n *\n * @extends module:core/command~Command\n */\nexport default class InsertColumnCommand extends Command {\n\t/**\n\t * Creates a new `InsertColumnCommand` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor An editor on which this command will be used.\n\t * @param {Object} options\n\t * @param {String} [options.order=\"right\"] The order of insertion relative to the column in which the caret is located.\n\t * Possible values: `\"left\"` and `\"right\"`.\n\t */\n\tconstructor( editor, options = {} ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The order of insertion relative to the column in which the caret is located.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String} module:table/commands/insertcolumncommand~InsertColumnCommand#order\n\t\t */\n\t\tthis.order = options.order || 'right';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst selection = this.editor.model.document.selection;\n\n\t\tconst tableParent = findAncestor( 'table', selection.getFirstPosition() );\n\n\t\tthis.isEnabled = !!tableParent;\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * Depending on the command's {@link #order} value, it inserts a column to the `'left'` or `'right'` of the column\n\t * in which the selection is set.\n\t *\n\t * @fires execute\n\t */\n\texecute() {\n\t\tconst editor = this.editor;\n\t\tconst selection = editor.model.document.selection;\n\t\tconst tableUtils = editor.plugins.get( 'TableUtils' );\n\n\t\tconst firstPosition = selection.getFirstPosition();\n\n\t\tconst tableCell = findAncestor( 'tableCell', firstPosition );\n\t\tconst table = tableCell.parent.parent;\n\n\t\tconst { column } = tableUtils.getCellLocation( tableCell );\n\t\tconst insertAt = this.order === 'right' ? column + 1 : column;\n\n\t\ttableUtils.insertColumns( table, { columns: 1, at: insertAt } );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/commands/splitcellcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { findAncestor } from './utils';\n\n/**\n * The split cell command.\n *\n * The command is registered by {@link module:table/tableediting~TableEditing} as the `'splitTableCellVertically'`\n * and `'splitTableCellHorizontally'`  editor commands.\n *\n * You can split any cell vertically or horizontally by executing this command. For example, to split the selected table cell vertically:\n *\n *\t\teditor.execute( 'splitTableCellVertically' );\n *\n * @extends module:core/command~Command\n */\nexport default class SplitCellCommand extends Command {\n\t/**\n\t * Creates a new `SplitCellCommand` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor The editor on which this command will be used.\n\t * @param {Object} options\n\t * @param {String} options.direction Indicates whether the command should split cells `'horizontally'` or `'vertically'`.\n\t */\n\tconstructor( editor, options = {} ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The direction that indicates which cell will be split.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String} #direction\n\t\t */\n\t\tthis.direction = options.direction || 'horizontally';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\n\t\tconst tableCell = findAncestor( 'tableCell', doc.selection.getFirstPosition() );\n\n\t\tthis.isEnabled = !!tableCell;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\texecute() {\n\t\tconst model = this.editor.model;\n\t\tconst document = model.document;\n\t\tconst selection = document.selection;\n\n\t\tconst firstPosition = selection.getFirstPosition();\n\t\tconst tableCell = findAncestor( 'tableCell', firstPosition );\n\n\t\tconst isHorizontally = this.direction === 'horizontally';\n\n\t\tconst tableUtils = this.editor.plugins.get( 'TableUtils' );\n\n\t\tif ( isHorizontally ) {\n\t\t\ttableUtils.splitCellHorizontally( tableCell, 2 );\n\t\t} else {\n\t\t\ttableUtils.splitCellVertically( tableCell, 2 );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/commands/mergecellcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport TableWalker from '../tablewalker';\nimport { findAncestor, updateNumericAttribute } from './utils';\n\n/**\n * The merge cell command.\n *\n * The command is registered by {@link module:table/tableediting~TableEditing} as the `'mergeTableCellRight'`, `'mergeTableCellLeft'`,\n * `'mergeTableCellUp'` and `'mergeTableCellDown'` editor commands.\n *\n * To merge a table cell at the current selection with another cell, execute the command corresponding with the preferred direction.\n *\n * For example, to merge with a cell to the right:\n *\n *\t\teditor.execute( 'mergeTableCellRight' );\n *\n * **Note**: If a table cell has a different [`rowspan`](https://www.w3.org/TR/html50/tabular-data.html#attr-tdth-rowspan)\n * (for `'mergeTableCellRight'` and `'mergeTableCellLeft'`) or [`colspan`](https://www.w3.org/TR/html50/tabular-data.html#attr-tdth-colspan)\n * (for `'mergeTableCellUp'` and `'mergeTableCellDown'`), the command will be disabled.\n *\n * @extends module:core/command~Command\n */\nexport default class MergeCellCommand extends Command {\n\t/**\n\t * Creates a new `MergeCellCommand` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor The editor on which this command will be used.\n\t * @param {Object} options\n\t * @param {String} options.direction Indicates which cell to merge with the currently selected one.\n\t * Possible values are: `'left'`, `'right'`, `'up'` and `'down'`.\n\t */\n\tconstructor( editor, options ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The direction that indicates which cell will be merged with the currently selected one.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String} #direction\n\t\t */\n\t\tthis.direction = options.direction;\n\n\t\t/**\n\t\t * Whether the merge is horizontal (left/right) or vertical (up/down).\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} #isHorizontal\n\t\t */\n\t\tthis.isHorizontal = this.direction == 'right' || this.direction == 'left';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst cellToMerge = this._getMergeableCell();\n\n\t\tthis.value = cellToMerge;\n\t\tthis.isEnabled = !!cellToMerge;\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * Depending on the command's {@link #direction} value, it will merge the cell that is to the `'left'`, `'right'`, `'up'` or `'down'`.\n\t *\n\t * @fires execute\n\t */\n\texecute() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\t\tconst tableCell = findAncestor( 'tableCell', doc.selection.getFirstPosition() );\n\t\tconst cellToMerge = this.value;\n\t\tconst direction = this.direction;\n\n\t\tmodel.change( writer => {\n\t\t\tconst isMergeNext = direction == 'right' || direction == 'down';\n\n\t\t\t// The merge mechanism is always the same so sort cells to be merged.\n\t\t\tconst cellToExpand = isMergeNext ? tableCell : cellToMerge;\n\t\t\tconst cellToRemove = isMergeNext ? cellToMerge : tableCell;\n\n\t\t\t// Cache the parent of cell to remove for later check.\n\t\t\tconst removedTableCellRow = cellToRemove.parent;\n\n\t\t\tmergeTableCells( cellToRemove, cellToExpand, writer );\n\n\t\t\tconst spanAttribute = this.isHorizontal ? 'colspan' : 'rowspan';\n\t\t\tconst cellSpan = parseInt( tableCell.getAttribute( spanAttribute ) || 1 );\n\t\t\tconst cellToMergeSpan = parseInt( cellToMerge.getAttribute( spanAttribute ) || 1 );\n\n\t\t\t// Update table cell span attribute and merge set selection on merged contents.\n\t\t\twriter.setAttribute( spanAttribute, cellSpan + cellToMergeSpan, cellToExpand );\n\t\t\twriter.setSelection( writer.createRangeIn( cellToExpand ) );\n\n\t\t\t// Remove empty row after merging.\n\t\t\tif ( !removedTableCellRow.childCount ) {\n\t\t\t\tremoveEmptyRow( removedTableCellRow, writer );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Returns a cell that can be merged with the current cell depending on the command's direction.\n\t *\n\t * @returns {module:engine/model/element~Element|undefined}\n\t * @private\n\t */\n\t_getMergeableCell() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\t\tconst tableCell = findAncestor( 'tableCell', doc.selection.getFirstPosition() );\n\n\t\tif ( !tableCell ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst tableUtils = this.editor.plugins.get( 'TableUtils' );\n\n\t\t// First get the cell on proper direction.\n\t\tconst cellToMerge = this.isHorizontal ?\n\t\t\tgetHorizontalCell( tableCell, this.direction, tableUtils ) :\n\t\t\tgetVerticalCell( tableCell, this.direction );\n\n\t\tif ( !cellToMerge ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If found check if the span perpendicular to merge direction is equal on both cells.\n\t\tconst spanAttribute = this.isHorizontal ? 'rowspan' : 'colspan';\n\t\tconst span = parseInt( tableCell.getAttribute( spanAttribute ) || 1 );\n\n\t\tconst cellToMergeSpan = parseInt( cellToMerge.getAttribute( spanAttribute ) || 1 );\n\n\t\tif ( cellToMergeSpan === span ) {\n\t\t\treturn cellToMerge;\n\t\t}\n\t}\n}\n\n// Returns the cell that can be merged horizontally.\n//\n// @param {module:engine/model/element~Element} tableCell\n// @param {String} direction\n// @returns {module:engine/model/node~Node|null}\nfunction getHorizontalCell( tableCell, direction, tableUtils ) {\n\tconst tableRow = tableCell.parent;\n\tconst table = tableRow.parent;\n\tconst horizontalCell = direction == 'right' ? tableCell.nextSibling : tableCell.previousSibling;\n\tconst headingColumns = table.getAttribute( 'headingColumns' ) || 0;\n\n\tif ( !horizontalCell ) {\n\t\treturn;\n\t}\n\n\t// Sort cells:\n\tconst cellOnLeft = direction == 'right' ? tableCell : horizontalCell;\n\tconst cellOnRight = direction == 'right' ? horizontalCell : tableCell;\n\n\t// Get their column indexes:\n\tconst { column: leftCellColumn } = tableUtils.getCellLocation( cellOnLeft );\n\tconst { column: rightCellColumn } = tableUtils.getCellLocation( cellOnRight );\n\n\tconst leftCellSpan = parseInt( cellOnLeft.getAttribute( 'colspan' ) || 1 );\n\tconst rightCellSpan = parseInt( cellOnRight.getAttribute( 'colspan' ) || 1 );\n\n\t// We cannot merge cells if the result will extend over heading section.\n\tconst isMergeWithBodyCell = direction == 'right' && ( rightCellColumn + rightCellSpan > headingColumns );\n\tconst isMergeWithHeadCell = direction == 'left' && ( leftCellColumn + leftCellSpan > headingColumns - 1 );\n\n\tif ( headingColumns && ( isMergeWithBodyCell || isMergeWithHeadCell ) ) {\n\t\treturn;\n\t}\n\n\t// The cell on the right must have index that is distant to the cell on the left by the left cell's width (colspan).\n\tconst cellsAreTouching = leftCellColumn + leftCellSpan === rightCellColumn;\n\n\t// If the right cell's column index is different it means that there are rowspanned cells between them.\n\treturn cellsAreTouching ? horizontalCell : undefined;\n}\n\n// Returns the cell that can be merged vertically.\n//\n// @param {module:engine/model/element~Element} tableCell\n// @param {String} direction\n// @returns {module:engine/model/node~Node|null}\nfunction getVerticalCell( tableCell, direction ) {\n\tconst tableRow = tableCell.parent;\n\tconst table = tableRow.parent;\n\n\tconst rowIndex = table.getChildIndex( tableRow );\n\n\t// Don't search for mergeable cell if direction points out of the table.\n\tif ( ( direction == 'down' && rowIndex === table.childCount - 1 ) || ( direction == 'up' && rowIndex === 0 ) ) {\n\t\treturn;\n\t}\n\n\tconst rowspan = parseInt( tableCell.getAttribute( 'rowspan' ) || 1 );\n\tconst headingRows = table.getAttribute( 'headingRows' ) || 0;\n\n\tconst isMergeWithBodyCell = direction == 'down' && ( rowIndex + rowspan ) === headingRows;\n\tconst isMergeWithHeadCell = direction == 'up' && rowIndex === headingRows;\n\n\t// Don't search for mergeable cell if direction points out of the current table section.\n\tif ( headingRows && ( isMergeWithBodyCell || isMergeWithHeadCell ) ) {\n\t\treturn;\n\t}\n\n\tconst currentCellRowSpan = parseInt( tableCell.getAttribute( 'rowspan' ) || 1 );\n\tconst rowOfCellToMerge = direction == 'down' ? rowIndex + currentCellRowSpan : rowIndex;\n\n\tconst tableMap = [ ...new TableWalker( table, { endRow: rowOfCellToMerge } ) ];\n\n\tconst currentCellData = tableMap.find( value => value.cell === tableCell );\n\tconst mergeColumn = currentCellData.column;\n\n\tconst cellToMergeData = tableMap.find( ( { row, rowspan, column } ) => {\n\t\tif ( column !== mergeColumn ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( direction == 'down' ) {\n\t\t\t// If merging a cell below the mergeRow is already calculated.\n\t\t\treturn row === rowOfCellToMerge;\n\t\t} else {\n\t\t\t// If merging a cell above calculate if it spans to mergeRow.\n\t\t\treturn rowOfCellToMerge === row + rowspan;\n\t\t}\n\t} );\n\n\treturn cellToMergeData && cellToMergeData.cell;\n}\n\n// Properly removes an empty row from a table. It will update the `rowspan` attribute of cells that overlap the removed row.\n//\n// @param {module:engine/model/element~Element} removedTableCellRow\n// @param {module:engine/model/writer~Writer} writer\nfunction removeEmptyRow( removedTableCellRow, writer ) {\n\tconst table = removedTableCellRow.parent;\n\n\tconst removedRowIndex = table.getChildIndex( removedTableCellRow );\n\n\tfor ( const { cell, row, rowspan } of new TableWalker( table, { endRow: removedRowIndex } ) ) {\n\t\tconst overlapsRemovedRow = row + rowspan - 1 >= removedRowIndex;\n\n\t\tif ( overlapsRemovedRow ) {\n\t\t\tupdateNumericAttribute( 'rowspan', rowspan - 1, cell, writer );\n\t\t}\n\t}\n\n\twriter.remove( removedTableCellRow );\n}\n\n// Merges two table cells. It will ensure that after merging cells with an empty paragraph, the resulting table cell will only have one\n// paragraph. If one of the merged table cell is empty, the merged table cell will have the contents of the non-empty table cell.\n// If both are empty, the merged table cell will have only one empty paragraph.\n//\n// @param {module:engine/model/element~Element} cellToRemove\n// @param {module:engine/model/element~Element} cellToExpand\n// @param {module:engine/model/writer~Writer} writer\nfunction mergeTableCells( cellToRemove, cellToExpand, writer ) {\n\tif ( !isEmpty( cellToRemove ) ) {\n\t\tif ( isEmpty( cellToExpand ) ) {\n\t\t\twriter.remove( writer.createRangeIn( cellToExpand ) );\n\t\t}\n\n\t\twriter.move( writer.createRangeIn( cellToRemove ), writer.createPositionAt( cellToExpand, 'end' ) );\n\t}\n\n\t// Remove merged table cell.\n\twriter.remove( cellToRemove );\n}\n\n// Checks if the passed table cell contains an empty paragraph.\n//\n// @param {module:engine/model/element~Element} tableCell\n// @returns {Boolean}\nfunction isEmpty( tableCell ) {\n\treturn tableCell.childCount == 1 && tableCell.getChild( 0 ).is( 'paragraph' ) && tableCell.getChild( 0 ).isEmpty;\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/commands/removerowcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\n\nimport TableWalker from '../tablewalker';\nimport { findAncestor, updateNumericAttribute } from './utils';\n\n/**\n * The remove row command.\n *\n * The command is registered by {@link module:table/tableediting~TableEditing} as the `'removeTableRow'` editor command.\n *\n * To remove the row containing the selected cell, execute the command:\n *\n *\t\teditor.execute( 'removeTableRow' );\n *\n * @extends module:core/command~Command\n */\nexport default class RemoveRowCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\n\t\tconst tableCell = findAncestor( 'tableCell', doc.selection.getFirstPosition() );\n\n\t\tthis.isEnabled = !!tableCell && tableCell.parent.parent.childCount > 1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\texecute() {\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\n\t\tconst firstPosition = selection.getFirstPosition();\n\t\tconst tableCell = findAncestor( 'tableCell', firstPosition );\n\t\tconst tableRow = tableCell.parent;\n\t\tconst table = tableRow.parent;\n\n\t\tconst currentRow = table.getChildIndex( tableRow );\n\t\tconst headingRows = table.getAttribute( 'headingRows' ) || 0;\n\n\t\tmodel.change( writer => {\n\t\t\tif ( headingRows && currentRow <= headingRows ) {\n\t\t\t\tupdateNumericAttribute( 'headingRows', headingRows - 1, table, writer, 0 );\n\t\t\t}\n\n\t\t\tconst tableMap = [ ...new TableWalker( table, { endRow: currentRow } ) ];\n\n\t\t\tconst cellsToMove = new Map();\n\n\t\t\t// Get cells from removed row that are spanned over multiple rows.\n\t\t\ttableMap\n\t\t\t\t.filter( ( { row, rowspan } ) => row === currentRow && rowspan > 1 )\n\t\t\t\t.forEach( ( { column, cell, rowspan } ) => cellsToMove.set( column, { cell, rowspanToSet: rowspan - 1 } ) );\n\n\t\t\t// Reduce rowspan on cells that are above removed row and overlaps removed row.\n\t\t\ttableMap\n\t\t\t\t.filter( ( { row, rowspan } ) => row <= currentRow - 1 && row + rowspan > currentRow )\n\t\t\t\t.forEach( ( { cell, rowspan } ) => updateNumericAttribute( 'rowspan', rowspan - 1, cell, writer ) );\n\n\t\t\t// Move cells to another row.\n\t\t\tconst targetRow = currentRow + 1;\n\t\t\tconst tableWalker = new TableWalker( table, { includeSpanned: true, startRow: targetRow, endRow: targetRow } );\n\n\t\t\tlet previousCell;\n\n\t\t\tfor ( const { row, column, cell } of [ ...tableWalker ] ) {\n\t\t\t\tif ( cellsToMove.has( column ) ) {\n\t\t\t\t\tconst { cell: cellToMove, rowspanToSet } = cellsToMove.get( column );\n\t\t\t\t\tconst targetPosition = previousCell ?\n\t\t\t\t\t\twriter.createPositionAfter( previousCell ) :\n\t\t\t\t\t\twriter.createPositionAt( table.getChild( row ), 0 );\n\n\t\t\t\t\twriter.move( writer.createRangeOn( cellToMove ), targetPosition );\n\t\t\t\t\tupdateNumericAttribute( 'rowspan', rowspanToSet, cellToMove, writer );\n\n\t\t\t\t\tpreviousCell = cellToMove;\n\t\t\t\t} else {\n\t\t\t\t\tpreviousCell = cell;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twriter.remove( tableRow );\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/commands/removecolumncommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\n\nimport TableWalker from '../tablewalker';\nimport { findAncestor, updateNumericAttribute } from './utils';\n\n/**\n * The remove column command.\n *\n * The command is registered by {@link module:table/tableediting~TableEditing} as the `'removeTableColumn'` editor command.\n *\n * To remove the column containing the selected cell, execute the command:\n *\n *\t\teditor.execute( 'removeTableColumn' );\n *\n * @extends module:core/command~Command\n */\nexport default class RemoveColumnCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst editor = this.editor;\n\t\tconst selection = editor.model.document.selection;\n\t\tconst tableUtils = editor.plugins.get( 'TableUtils' );\n\n\t\tconst tableCell = findAncestor( 'tableCell', selection.getFirstPosition() );\n\n\t\tthis.isEnabled = !!tableCell && tableUtils.getColumns( tableCell.parent.parent ) > 1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\texecute() {\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\n\t\tconst firstPosition = selection.getFirstPosition();\n\n\t\tconst tableCell = findAncestor( 'tableCell', firstPosition );\n\t\tconst tableRow = tableCell.parent;\n\t\tconst table = tableRow.parent;\n\n\t\tconst headingColumns = table.getAttribute( 'headingColumns' ) || 0;\n\t\tconst row = table.getChildIndex( tableRow );\n\n\t\t// Cache the table before removing or updating colspans.\n\t\tconst tableMap = [ ...new TableWalker( table ) ];\n\n\t\t// Get column index of removed column.\n\t\tconst cellData = tableMap.find( value => value.cell === tableCell );\n\t\tconst removedColumn = cellData.column;\n\n\t\tmodel.change( writer => {\n\t\t\t// Update heading columns attribute if removing a row from head section.\n\t\t\tif ( headingColumns && row <= headingColumns ) {\n\t\t\t\twriter.setAttribute( 'headingColumns', headingColumns - 1, table );\n\t\t\t}\n\n\t\t\tfor ( const { cell, column, colspan } of tableMap ) {\n\t\t\t\t// If colspaned cell overlaps removed column decrease it's span.\n\t\t\t\tif ( column <= removedColumn && colspan > 1 && column + colspan > removedColumn ) {\n\t\t\t\t\tupdateNumericAttribute( 'colspan', colspan - 1, cell, writer );\n\t\t\t\t} else if ( column === removedColumn ) {\n\t\t\t\t\t// The cell in removed column has colspan of 1.\n\t\t\t\t\twriter.remove( cell );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/commands/setheaderrowcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\n\nimport { createEmptyTableCell, findAncestor, updateNumericAttribute } from './utils';\nimport TableWalker from '../tablewalker';\n\n/**\n * The header row command.\n *\n * The command is registered by {@link module:table/tableediting~TableEditing} as the `'setTableColumnHeader'` editor command.\n *\n * You can make the row containing the selected cell a [header](https://www.w3.org/TR/html50/tabular-data.html#the-th-element) by executing:\n *\n *\t\teditor.execute( 'setTableRowHeader' );\n *\n * **Note:** All preceding rows will also become headers. If the current row is already a header, executing this command\n * will make it a regular row back again (including the following rows).\n *\n * @extends module:core/command~Command\n */\nexport default class SetHeaderRowCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\t\tconst selection = doc.selection;\n\n\t\tconst position = selection.getFirstPosition();\n\t\tconst tableCell = findAncestor( 'tableCell', position );\n\t\tconst isInTable = !!tableCell;\n\n\t\tthis.isEnabled = isInTable;\n\n\t\t/**\n\t\t * Flag indicating whether the command is active. The command is active when the\n\t\t * {@link module:engine/model/selection~Selection} is in a header row.\n\t\t *\n\t\t * @observable\n\t\t * @readonly\n\t\t * @member {Boolean} #value\n\t\t */\n\t\tthis.value = isInTable && this._isInHeading( tableCell, tableCell.parent.parent );\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * When the selection is in a non-header row, the command will set the `headingRows` table attribute to cover that row.\n\t *\n\t * When the selection is already in a header row, it will set `headingRows` so the heading section will end before that row.\n\t *\n\t * @fires execute\n\t * @param {Object} options\n\t * @param {Boolean} [options.forceValue] If set, the command will set (`true`) or unset (`false`) the header rows according to\n\t * the `forceValue` parameter instead of the current model state.\n\t */\n\texecute( options = {} ) {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\t\tconst selection = doc.selection;\n\n\t\tconst position = selection.getFirstPosition();\n\t\tconst tableCell = findAncestor( 'tableCell', position );\n\t\tconst tableRow = tableCell.parent;\n\t\tconst table = tableRow.parent;\n\n\t\tconst currentHeadingRows = table.getAttribute( 'headingRows' ) || 0;\n\t\tconst selectionRow = tableRow.index;\n\n\t\tif ( options.forceValue === this.value ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst headingRowsToSet = this.value ? selectionRow : selectionRow + 1;\n\n\t\tmodel.change( writer => {\n\t\t\tif ( headingRowsToSet ) {\n\t\t\t\t// Changing heading rows requires to check if any of a heading cell is overlapping vertically the table head.\n\t\t\t\t// Any table cell that has a rowspan attribute > 1 will not exceed the table head so we need to fix it in rows below.\n\t\t\t\tconst cellsToSplit = getOverlappingCells( table, headingRowsToSet, currentHeadingRows );\n\n\t\t\t\tfor ( const cell of cellsToSplit ) {\n\t\t\t\t\tsplitHorizontally( cell, headingRowsToSet, writer );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tupdateNumericAttribute( 'headingRows', headingRowsToSet, table, writer, 0 );\n\t\t} );\n\t}\n\n\t/**\n\t * Checks if a table cell is in the heading section.\n\t *\n\t * @param {module:engine/model/element~Element} tableCell\n\t * @param {module:engine/model/element~Element} table\n\t * @returns {Boolean}\n\t * @private\n\t */\n\t_isInHeading( tableCell, table ) {\n\t\tconst headingRows = parseInt( table.getAttribute( 'headingRows' ) || 0 );\n\n\t\treturn !!headingRows && tableCell.parent.index < headingRows;\n\t}\n}\n\n// Returns cells that span beyond the new heading section.\n//\n// @param {module:engine/model/element~Element} table The table to check.\n// @param {Number} headingRowsToSet New heading rows attribute.\n// @param {Number} currentHeadingRows Current heading rows attribute.\n// @returns {Array.<module:engine/model/element~Element>}\nfunction getOverlappingCells( table, headingRowsToSet, currentHeadingRows ) {\n\tconst cellsToSplit = [];\n\n\tconst startAnalysisRow = headingRowsToSet > currentHeadingRows ? currentHeadingRows : 0;\n\t// We're analyzing only when headingRowsToSet > 0.\n\tconst endAnalysisRow = headingRowsToSet - 1;\n\n\tconst tableWalker = new TableWalker( table, { startRow: startAnalysisRow, endRow: endAnalysisRow } );\n\n\tfor ( const { row, rowspan, cell } of tableWalker ) {\n\t\tif ( rowspan > 1 && row + rowspan > headingRowsToSet ) {\n\t\t\tcellsToSplit.push( cell );\n\t\t}\n\t}\n\n\treturn cellsToSplit;\n}\n\n// Splits the table cell horizontally.\n//\n// @param {module:engine/model/element~Element} tableCell\n// @param {Number} headingRows\n// @param {module:engine/model/writer~Writer} writer\nfunction splitHorizontally( tableCell, headingRows, writer ) {\n\tconst tableRow = tableCell.parent;\n\tconst table = tableRow.parent;\n\tconst rowIndex = tableRow.index;\n\n\tconst rowspan = parseInt( tableCell.getAttribute( 'rowspan' ) );\n\tconst newRowspan = headingRows - rowIndex;\n\n\tconst attributes = {};\n\n\tconst spanToSet = rowspan - newRowspan;\n\n\tif ( spanToSet > 1 ) {\n\t\tattributes.rowspan = spanToSet;\n\t}\n\n\tconst colspan = parseInt( tableCell.getAttribute( 'colspan' ) || 1 );\n\n\tif ( colspan > 1 ) {\n\t\tattributes.colspan = colspan;\n\t}\n\n\tconst startRow = table.getChildIndex( tableRow );\n\tconst endRow = startRow + newRowspan;\n\tconst tableMap = [ ...new TableWalker( table, { startRow, endRow, includeSpanned: true } ) ];\n\n\tlet columnIndex;\n\n\tfor ( const { row, column, cell, cellIndex } of tableMap ) {\n\t\tif ( cell === tableCell && columnIndex === undefined ) {\n\t\t\tcolumnIndex = column;\n\t\t}\n\n\t\tif ( columnIndex !== undefined && columnIndex === column && row === endRow ) {\n\t\t\tconst tableRow = table.getChild( row );\n\t\t\tconst tableCellPosition = writer.createPositionAt( tableRow, cellIndex );\n\n\t\t\tcreateEmptyTableCell( writer, tableCellPosition, attributes );\n\t\t}\n\t}\n\n\t// Update the rowspan attribute after updating table.\n\tupdateNumericAttribute( 'rowspan', newRowspan, tableCell, writer );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/commands/setheadercolumncommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\n\nimport { findAncestor, updateNumericAttribute } from './utils';\n\n/**\n * The header column command.\n *\n * The command is registered by {@link module:table/tableediting~TableEditing} as the `'setTableColumnHeader'` editor command.\n *\n * You can make the column containing the selected cell a [header](https://www.w3.org/TR/html50/tabular-data.html#the-th-element)\n * by executing:\n *\n *\t\teditor.execute( 'setTableColumnHeader' );\n *\n * **Note:** All preceding columns will also become headers. If the current column is already a header, executing this command\n * will make it a regular column back again (including the following columns).\n *\n * @extends module:core/command~Command\n */\nexport default class SetHeaderColumnCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\t\tconst selection = doc.selection;\n\n\t\tconst position = selection.getFirstPosition();\n\t\tconst tableCell = findAncestor( 'tableCell', position );\n\n\t\tconst isInTable = !!tableCell;\n\n\t\tthis.isEnabled = isInTable;\n\n\t\t/**\n\t\t * Flag indicating whether the command is active. The command is active when the\n\t\t * {@link module:engine/model/selection~Selection} is in a header column.\n\t\t *\n\t\t * @observable\n\t\t * @readonly\n\t\t * @member {Boolean} #value\n\t\t */\n\t\tthis.value = isInTable && this._isInHeading( tableCell, tableCell.parent.parent );\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * When the selection is in a non-header column, the command will set the `headingColumns` table attribute to cover that column.\n\t *\n\t * When the selection is already in a header column, it will set `headingColumns` so the heading section will end before that column.\n\t *\n\t * @fires execute\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.forceValue] If set, the command will set (`true`) or unset (`false`) the header columns according to\n\t * the `forceValue` parameter instead of the current model state.\n\t */\n\texecute( options = {} ) {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\t\tconst selection = doc.selection;\n\t\tconst tableUtils = this.editor.plugins.get( 'TableUtils' );\n\n\t\tconst position = selection.getFirstPosition();\n\t\tconst tableCell = findAncestor( 'tableCell', position );\n\t\tconst tableRow = tableCell.parent;\n\t\tconst table = tableRow.parent;\n\n\t\tconst { column: selectionColumn } = tableUtils.getCellLocation( tableCell );\n\n\t\tif ( options.forceValue === this.value ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst headingColumnsToSet = this.value ? selectionColumn : selectionColumn + 1;\n\n\t\tmodel.change( writer => {\n\t\t\tupdateNumericAttribute( 'headingColumns', headingColumnsToSet, table, writer, 0 );\n\t\t} );\n\t}\n\n\t/**\n\t * Checks if a table cell is in the heading section.\n\t *\n\t * @param {module:engine/model/element~Element} tableCell\n\t * @param {module:engine/model/element~Element} table\n\t * @returns {Boolean}\n\t * @private\n\t */\n\t_isInHeading( tableCell, table ) {\n\t\tconst headingColumns = parseInt( table.getAttribute( 'headingColumns' ) || 0 );\n\n\t\tconst tableUtils = this.editor.plugins.get( 'TableUtils' );\n\n\t\tconst { column } = tableUtils.getCellLocation( tableCell );\n\n\t\treturn !!headingColumns && column < headingColumns;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tableutils\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport TableWalker from './tablewalker';\nimport { createEmptyTableCell, updateNumericAttribute } from './commands/utils';\n\n/**\n * The table utilities plugin.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class TableUtils extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'TableUtils';\n\t}\n\n\t/**\n\t * Returns the table cell location as an object with table row and table column indexes.\n\t *\n\t * For instance, in the table below:\n\t *\n\t *\t\t    0   1   2   3\n\t *\t\t  +---+---+---+---+\n\t *\t\t0 | a     | b | c |\n\t *\t\t  +       +   +---+\n\t *\t\t1 |       |   | d |\n\t *\t\t  +---+---+   +---+\n\t *\t\t2 | e     |   | f |\n\t *\t\t  +---+---+---+---+\n\t *\n\t * the method will return:\n\t *\n\t *\t\tconst cellA = table.getNodeByPath( [ 0, 0 ] );\n\t *\t\teditor.plugins.get( 'TableUtils' ).getCellLocation( cellA );\n\t *\t\t// will return { row: 0, column: 0 }\n\t *\n\t *\t\tconst cellD = table.getNodeByPath( [ 1, 0 ] );\n\t *\t\teditor.plugins.get( 'TableUtils' ).getCellLocation( cellD );\n\t *\t\t// will return { row: 1, column: 3 }\n\t *\n\t * @param {module:engine/model/element~Element} tableCell\n\t * @returns {Object} Returns a `{row, column}` object.\n\t */\n\tgetCellLocation( tableCell ) {\n\t\tconst tableRow = tableCell.parent;\n\t\tconst table = tableRow.parent;\n\n\t\tconst rowIndex = table.getChildIndex( tableRow );\n\n\t\tconst tableWalker = new TableWalker( table, { startRow: rowIndex, endRow: rowIndex } );\n\n\t\tfor ( const { cell, row, column } of tableWalker ) {\n\t\t\tif ( cell === tableCell ) {\n\t\t\t\treturn { row, column };\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates an empty table with a proper structure. The table needs to be inserted into the model,\n\t * for example, by using the {@link module:engine/model/model~Model#insertContent} function.\n\t *\n\t *\t\tmodel.change( ( writer ) => {\n\t *\t\t\t// Create a table of 2 rows and 7 columns:\n\t *\t\t\tconst table = tableUtils.createTable( writer, 2, 7);\n\t *\n\t *\t\t\t// Insert a table to the model at the best position taking the current selection:\n\t *\t\t\tmodel.insertContent( table );\n\t *\t\t}\n\t *\n\t * @param {module:engine/model/writer~Writer} writer The model writer.\n\t * @param {Number} rows The number of rows to create.\n\t * @param {Number} columns The number of columns to create.\n\t * @returns {module:engine/model/element~Element} The created table element.\n\t */\n\tcreateTable( writer, rows, columns ) {\n\t\tconst table = writer.createElement( 'table' );\n\n\t\tcreateEmptyRows( writer, table, 0, rows, columns );\n\n\t\treturn table;\n\t}\n\n\t/**\n\t * Inserts rows into a table.\n\t *\n\t *\t\teditor.plugins.get( 'TableUtils' ).insertRows( table, { at: 1, rows: 2 } );\n\t *\n\t * Assuming the table on the left, the above code will transform it to the table on the right:\n\t *\n\t *\t\trow index\n\t *\t\t  0 +---+---+---+       `at` = 1,      +---+---+---+ 0\n\t *\t\t    | a | b | c |       `rows` = 2,    | a | b | c |\n\t *\t\t  1 +   +---+---+   <-- insert here    +   +---+---+ 1\n\t *\t\t    |   | d | e |                      |   |   |   |\n\t *\t\t  2 +   +---+---+       will give:     +   +---+---+ 2\n\t *\t\t    |   | f | g |                      |   |   |   |\n\t *\t\t  3 +---+---+---+                      +   +---+---+ 3\n\t *\t\t                                       |   | d | e |\n\t *\t\t                                       +---+---+---+ 4\n\t *\t\t                                       +   + f | g |\n\t *\t\t                                       +---+---+---+ 5\n\t *\n\t * @param {module:engine/model/element~Element} table The table model element where the rows will be inserted.\n\t * @param {Object} options\n\t * @param {Number} [options.at=0] The row index at which the rows will be inserted.\n\t * @param {Number} [options.rows=1] The number of rows to insert.\n\t */\n\tinsertRows( table, options = {} ) {\n\t\tconst model = this.editor.model;\n\n\t\tconst insertAt = options.at || 0;\n\t\tconst rowsToInsert = options.rows || 1;\n\n\t\tmodel.change( writer => {\n\t\t\tconst headingRows = table.getAttribute( 'headingRows' ) || 0;\n\n\t\t\t// Inserting rows inside heading section requires to update `headingRows` attribute as the heading section will grow.\n\t\t\tif ( headingRows > insertAt ) {\n\t\t\t\twriter.setAttribute( 'headingRows', headingRows + rowsToInsert, table );\n\t\t\t}\n\n\t\t\t// Inserting at the end and at the beginning of a table doesn't require to calculate anything special.\n\t\t\tif ( insertAt === 0 || insertAt === table.childCount ) {\n\t\t\t\tcreateEmptyRows( writer, table, insertAt, rowsToInsert, this.getColumns( table ) );\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Iterate over all rows above inserted rows in order to check for rowspanned cells.\n\t\t\tconst tableIterator = new TableWalker( table, { endRow: insertAt } );\n\n\t\t\t// Will hold number of cells needed to insert in created rows.\n\t\t\t// The number might be different then table cell width when there are rowspanned cells.\n\t\t\tlet cellsToInsert = 0;\n\n\t\t\tfor ( const { row, rowspan, colspan, cell } of tableIterator ) {\n\t\t\t\tconst isBeforeInsertedRow = row < insertAt;\n\t\t\t\tconst overlapsInsertedRow = row + rowspan > insertAt;\n\n\t\t\t\tif ( isBeforeInsertedRow && overlapsInsertedRow ) {\n\t\t\t\t\t// This cell overlaps inserted rows so we need to expand it further.\n\t\t\t\t\twriter.setAttribute( 'rowspan', rowspan + rowsToInsert, cell );\n\t\t\t\t}\n\n\t\t\t\t// Calculate how many cells to insert based on the width of cells in a row at insert position.\n\t\t\t\t// It might be lower then table width as some cells might overlaps inserted row.\n\t\t\t\t// In the table above the cell 'a' overlaps inserted row so only two empty cells are need to be created.\n\t\t\t\tif ( row === insertAt ) {\n\t\t\t\t\tcellsToInsert += colspan;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcreateEmptyRows( writer, table, insertAt, rowsToInsert, cellsToInsert );\n\t\t} );\n\t}\n\n\t/**\n\t * Inserts columns into a table.\n\t *\n\t *\t\teditor.plugins.get( 'TableUtils' ).insertColumns( table, { at: 1, columns: 2 } );\n\t *\n\t * Assuming the table on the left, the above code will transform it to the table on the right:\n\t *\n\t *\t\t0   1   2   3                   0   1   2   3   4   5\n\t *\t\t+---+---+---+                   +---+---+---+---+---+\n\t *\t\t| a     | b |                   | a             | b |\n\t *\t\t+       +---+                   +               +---+\n\t *\t\t|       | c |                   |               | c |\n\t *\t\t+---+---+---+     will give:    +---+---+---+---+---+\n\t *\t\t| d | e | f |                   | d |   |   | e | f |\n\t *\t\t+---+   +---+                   +---+---+---+   +---+\n\t *\t\t| g |   | h |                   | g |   |   |   | h |\n\t *\t\t+---+---+---+                   +---+---+---+---+---+\n\t *\t\t| i         |                   | i                 |\n\t *\t\t+---+---+---+                   +---+---+---+---+---+\n\t *\t\t    ^---- insert here, `at` = 1, `columns` = 2\n\t *\n\t * @param {module:engine/model/element~Element} table The table model element where the columns will be inserted.\n\t * @param {Object} options\n\t * @param {Number} [options.at=0] The column index at which the columns will be inserted.\n\t * @param {Number} [options.columns=1] The number of columns to insert.\n\t */\n\tinsertColumns( table, options = {} ) {\n\t\tconst model = this.editor.model;\n\n\t\tconst insertAt = options.at || 0;\n\t\tconst columnsToInsert = options.columns || 1;\n\n\t\tmodel.change( writer => {\n\t\t\tconst headingColumns = table.getAttribute( 'headingColumns' );\n\n\t\t\t// Inserting columns inside heading section requires to update `headingColumns` attribute as the heading section will grow.\n\t\t\tif ( insertAt < headingColumns ) {\n\t\t\t\twriter.setAttribute( 'headingColumns', headingColumns + columnsToInsert, table );\n\t\t\t}\n\n\t\t\tconst tableColumns = this.getColumns( table );\n\n\t\t\t// Inserting at the end and at the beginning of a table doesn't require to calculate anything special.\n\t\t\tif ( insertAt === 0 || tableColumns === insertAt ) {\n\t\t\t\tfor ( const tableRow of table.getChildren() ) {\n\t\t\t\t\tcreateCells( columnsToInsert, writer, writer.createPositionAt( tableRow, insertAt ? 'end' : 0 ) );\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst tableWalker = new TableWalker( table, { column: insertAt, includeSpanned: true } );\n\n\t\t\tfor ( const { row, cell, cellIndex } of tableWalker ) {\n\t\t\t\t// When iterating over column the table walker outputs either:\n\t\t\t\t// - cells at given column index (cell \"e\" from method docs),\n\t\t\t\t// - spanned columns (spanned cell from row between cells \"g\" and \"h\" - spanned by \"e\", only if `includeSpanned: true`),\n\t\t\t\t// - or a cell from the same row which spans over this column (cell \"a\").\n\n\t\t\t\tconst rowspan = parseInt( cell.getAttribute( 'rowspan' ) || 1 );\n\t\t\t\tconst colspan = parseInt( cell.getAttribute( 'colspan' ) || 1 );\n\n\t\t\t\tif ( cell.index !== insertAt && colspan > 1 ) {\n\t\t\t\t\t// If column is different than `insertAt`, it is a cell that spans over an inserted column (cell \"a\" & \"i\").\n\t\t\t\t\t// For such cells expand them by a number of columns inserted.\n\t\t\t\t\twriter.setAttribute( 'colspan', colspan + columnsToInsert, cell );\n\n\t\t\t\t\t// The `includeSpanned` option will output the \"empty\"/spanned column so skip this row already.\n\t\t\t\t\ttableWalker.skipRow( row );\n\n\t\t\t\t\t// This cell will overlap cells in rows below so skip them also (because of `includeSpanned` option) - (cell \"a\")\n\t\t\t\t\tif ( rowspan > 1 ) {\n\t\t\t\t\t\tfor ( let i = row + 1; i < row + rowspan; i++ ) {\n\t\t\t\t\t\t\ttableWalker.skipRow( i );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// It's either cell at this column index or spanned cell by a rowspanned cell from row above.\n\t\t\t\t\t// In table above it's cell \"e\" and a spanned position from row below (empty cell between cells \"g\" and \"h\")\n\t\t\t\t\tconst insertPosition = writer.createPositionAt( table.getChild( row ), cellIndex );\n\n\t\t\t\t\tcreateCells( columnsToInsert, writer, insertPosition );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Divides a table cell vertically into several ones.\n\t *\n\t * The cell will be visually split into more cells by updating colspans of other cells in a column\n\t * and inserting cells (columns) after that cell.\n\t *\n\t * In the table below, if cell \"a\" is split into 3 cells:\n\t *\n\t *\t\t+---+---+---+\n\t *\t\t| a | b | c |\n\t *\t\t+---+---+---+\n\t *\t\t| d | e | f |\n\t *\t\t+---+---+---+\n\t *\n\t * it will result in the table below:\n\t *\n\t *\t\t+---+---+---+---+---+\n\t *\t\t| a |   |   | b | c |\n\t *\t\t+---+---+---+---+---+\n\t *\t\t| d         | e | f |\n\t *\t\t+---+---+---+---+---+\n\t *\n\t * So cell \"d\" will get its `colspan` updated to `3` and 2 cells will be added (2 columns will be created).\n\t *\n\t * Splitting a cell that already has a `colspan` attribute set will distribute the cell `colspan` evenly and the remainder\n\t * will be left to the original cell:\n\t *\n\t *\t\t+---+---+---+\n\t *\t\t| a         |\n\t *\t\t+---+---+---+\n\t *\t\t| b | c | d |\n\t *\t\t+---+---+---+\n\t *\n\t * Splitting cell \"a\" with `colspan=3` into 2 cells will create 1 cell with a `colspan=a` and cell \"a\" that will have `colspan=2`:\n\t *\n\t *\t\t+---+---+---+\n\t *\t\t| a     |   |\n\t *\t\t+---+---+---+\n\t *\t\t| b | c | d |\n\t *\t\t+---+---+---+\n\t *\n\t * @param {module:engine/model/element~Element} tableCell\n\t * @param {Number} numberOfCells\n\t */\n\tsplitCellVertically( tableCell, numberOfCells = 2 ) {\n\t\tconst model = this.editor.model;\n\t\tconst tableRow = tableCell.parent;\n\t\tconst table = tableRow.parent;\n\n\t\tconst rowspan = parseInt( tableCell.getAttribute( 'rowspan' ) || 1 );\n\t\tconst colspan = parseInt( tableCell.getAttribute( 'colspan' ) || 1 );\n\n\t\tmodel.change( writer => {\n\t\t\t// First check - the cell spans over multiple rows so before doing anything else just split this cell.\n\t\t\tif ( colspan > 1 ) {\n\t\t\t\t// Get spans of new (inserted) cells and span to update of split cell.\n\t\t\t\tconst { newCellsSpan, updatedSpan } = breakSpanEvenly( colspan, numberOfCells );\n\n\t\t\t\tupdateNumericAttribute( 'colspan', updatedSpan, tableCell, writer );\n\n\t\t\t\t// Each inserted cell will have the same attributes:\n\t\t\t\tconst newCellsAttributes = {};\n\n\t\t\t\t// Do not store default value in the model.\n\t\t\t\tif ( newCellsSpan > 1 ) {\n\t\t\t\t\tnewCellsAttributes.colspan = newCellsSpan;\n\t\t\t\t}\n\n\t\t\t\t// Copy rowspan of split cell.\n\t\t\t\tif ( rowspan > 1 ) {\n\t\t\t\t\tnewCellsAttributes.rowspan = rowspan;\n\t\t\t\t}\n\n\t\t\t\tconst cellsToInsert = colspan > numberOfCells ? numberOfCells - 1 : colspan - 1;\n\t\t\t\tcreateCells( cellsToInsert, writer, writer.createPositionAfter( tableCell ), newCellsAttributes );\n\t\t\t}\n\n\t\t\t// Second check - the cell has colspan of 1 or we need to create more cells then the currently one spans over.\n\t\t\tif ( colspan < numberOfCells ) {\n\t\t\t\tconst cellsToInsert = numberOfCells - colspan;\n\n\t\t\t\t// First step: expand cells on the same column as split cell.\n\t\t\t\tconst tableMap = [ ...new TableWalker( table ) ];\n\n\t\t\t\t// Get the column index of split cell.\n\t\t\t\tconst { column: splitCellColumn } = tableMap.find( ( { cell } ) => cell === tableCell );\n\n\t\t\t\t// Find cells which needs to be expanded vertically - those on the same column or those that spans over split cell's column.\n\t\t\t\tconst cellsToUpdate = tableMap.filter( ( { cell, colspan, column } ) => {\n\t\t\t\t\tconst isOnSameColumn = cell !== tableCell && column === splitCellColumn;\n\t\t\t\t\tconst spansOverColumn = ( column < splitCellColumn && column + colspan > splitCellColumn );\n\n\t\t\t\t\treturn isOnSameColumn || spansOverColumn;\n\t\t\t\t} );\n\n\t\t\t\t// Expand cells vertically.\n\t\t\t\tfor ( const { cell, colspan } of cellsToUpdate ) {\n\t\t\t\t\twriter.setAttribute( 'colspan', colspan + cellsToInsert, cell );\n\t\t\t\t}\n\n\t\t\t\t// Second step: create columns after split cell.\n\n\t\t\t\t// Each inserted cell will have the same attributes:\n\t\t\t\tconst newCellsAttributes = {};\n\n\t\t\t\t// Do not store default value in the model.\n\n\t\t\t\t// Copy rowspan of split cell.\n\t\t\t\tif ( rowspan > 1 ) {\n\t\t\t\t\tnewCellsAttributes.rowspan = rowspan;\n\t\t\t\t}\n\n\t\t\t\tcreateCells( cellsToInsert, writer, writer.createPositionAfter( tableCell ), newCellsAttributes );\n\n\t\t\t\tconst headingColumns = table.getAttribute( 'headingColumns' ) || 0;\n\n\t\t\t\t// Update heading section if split cell is in heading section.\n\t\t\t\tif ( headingColumns > splitCellColumn ) {\n\t\t\t\t\tupdateNumericAttribute( 'headingColumns', headingColumns + cellsToInsert, table, writer );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Divides a table cell horizontally into several ones.\n\t *\n\t * The cell will be visually split into more cells by updating rowspans of other cells in the row and inserting rows with a single cell\n\t * below.\n\t *\n\t * If in the table below cell \"b\" is split into 3 cells:\n\t *\n\t *\t\t+---+---+---+\n\t *\t\t| a | b | c |\n\t *\t\t+---+---+---+\n\t *\t\t| d | e | f |\n\t *\t\t+---+---+---+\n\t *\n\t * It will result in the table below:\n\t *\n\t *\t\t+---+---+---+\n\t *\t\t| a | b | c |\n\t *\t\t+   +---+   +\n\t *\t\t|   |   |   |\n\t *\t\t+   +---+   +\n\t *\t\t|   |   |   |\n\t *\t\t+---+---+---+\n\t *\t\t| d | e | f |\n\t *\t\t+---+---+---+\n\t *\n\t * So cells \"a\" and \"b\" will get their `rowspan` updated to `3` and 2 rows with a single cell will be added.\n\t *\n\t * Splitting a cell that already has a `rowspan` attribute set will distribute the cell `rowspan` evenly and the remainder\n\t * will be left to the original cell:\n\t *\n\t *\t\t+---+---+---+\n\t *\t\t| a | b | c |\n\t *\t\t+   +---+---+\n\t *\t\t|   | d | e |\n\t *\t\t+   +---+---+\n\t *\t\t|   | f | g |\n\t *\t\t+   +---+---+\n\t *\t\t|   | h | i |\n\t *\t\t+---+---+---+\n\t *\n\t * Splitting cell \"a\" with `rowspan=4` into 3 cells will create 2 cells with a `rowspan=1` and cell \"a\" will have `rowspan=2`:\n\t *\n\t *\t\t+---+---+---+\n\t *\t\t| a | b | c |\n\t *\t\t+   +---+---+\n\t *\t\t|   | d | e |\n\t *\t\t+---+---+---+\n\t *\t\t|   | f | g |\n\t *\t\t+---+---+---+\n\t *\t\t|   | h | i |\n\t *\t\t+---+---+---+\n\t *\n\t * @param {module:engine/model/element~Element} tableCell\n\t * @param {Number} numberOfCells\n\t */\n\tsplitCellHorizontally( tableCell, numberOfCells = 2 ) {\n\t\tconst model = this.editor.model;\n\n\t\tconst tableRow = tableCell.parent;\n\t\tconst table = tableRow.parent;\n\t\tconst splitCellRow = table.getChildIndex( tableRow );\n\n\t\tconst rowspan = parseInt( tableCell.getAttribute( 'rowspan' ) || 1 );\n\t\tconst colspan = parseInt( tableCell.getAttribute( 'colspan' ) || 1 );\n\n\t\tmodel.change( writer => {\n\t\t\t// First check - the cell spans over multiple rows so before doing anything else just split this cell.\n\t\t\tif ( rowspan > 1 ) {\n\t\t\t\t// Cache table map before updating table.\n\t\t\t\tconst tableMap = [ ...new TableWalker( table, {\n\t\t\t\t\tstartRow: splitCellRow,\n\t\t\t\t\tendRow: splitCellRow + rowspan - 1,\n\t\t\t\t\tincludeSpanned: true\n\t\t\t\t} ) ];\n\n\t\t\t\t// Get spans of new (inserted) cells and span to update of split cell.\n\t\t\t\tconst { newCellsSpan, updatedSpan } = breakSpanEvenly( rowspan, numberOfCells );\n\n\t\t\t\tupdateNumericAttribute( 'rowspan', updatedSpan, tableCell, writer );\n\n\t\t\t\tconst { column: cellColumn } = tableMap.find( ( { cell } ) => cell === tableCell );\n\n\t\t\t\t// Each inserted cell will have the same attributes:\n\t\t\t\tconst newCellsAttributes = {};\n\n\t\t\t\t// Do not store default value in the model.\n\t\t\t\tif ( newCellsSpan > 1 ) {\n\t\t\t\t\tnewCellsAttributes.rowspan = newCellsSpan;\n\t\t\t\t}\n\n\t\t\t\t// Copy colspan of split cell.\n\t\t\t\tif ( colspan > 1 ) {\n\t\t\t\t\tnewCellsAttributes.colspan = colspan;\n\t\t\t\t}\n\n\t\t\t\tfor ( const { column, row, cellIndex } of tableMap ) {\n\t\t\t\t\t// As both newly created cells and the split cell might have rowspan,\n\t\t\t\t\t// the insertion of new cells must go to appropriate rows:\n\t\t\t\t\t//\n\t\t\t\t\t// 1. It's a row after split cell + it's height.\n\t\t\t\t\tconst isAfterSplitCell = row >= splitCellRow + updatedSpan;\n\t\t\t\t\t// 2. Is on the same column.\n\t\t\t\t\tconst isOnSameColumn = column === cellColumn;\n\t\t\t\t\t// 3. And it's row index is after previous cell height.\n\t\t\t\t\tconst isInEvenlySplitRow = ( row + splitCellRow + updatedSpan ) % newCellsSpan === 0;\n\n\t\t\t\t\tif ( isAfterSplitCell && isOnSameColumn && isInEvenlySplitRow ) {\n\t\t\t\t\t\tconst position = writer.createPositionAt( table.getChild( row ), cellIndex );\n\n\t\t\t\t\t\tcreateCells( 1, writer, position, newCellsAttributes );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Second check - the cell has rowspan of 1 or we need to create more cells than the current cell spans over.\n\t\t\tif ( rowspan < numberOfCells ) {\n\t\t\t\t// We already split the cell in check one so here we split to the remaining number of cells only.\n\t\t\t\tconst cellsToInsert = numberOfCells - rowspan;\n\n\t\t\t\t// This check is needed since we need to check if there are any cells from previous rows than spans over this cell's row.\n\t\t\t\tconst tableMap = [ ...new TableWalker( table, { startRow: 0, endRow: splitCellRow } ) ];\n\n\t\t\t\t// First step: expand cells.\n\t\t\t\tfor ( const { cell, rowspan, row } of tableMap ) {\n\t\t\t\t\t// Expand rowspan of cells that are either:\n\t\t\t\t\t// - on the same row as current cell,\n\t\t\t\t\t// - or are below split cell row and overlaps that row.\n\t\t\t\t\tif ( cell !== tableCell && row + rowspan > splitCellRow ) {\n\t\t\t\t\t\tconst rowspanToSet = rowspan + cellsToInsert;\n\n\t\t\t\t\t\twriter.setAttribute( 'rowspan', rowspanToSet, cell );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Second step: create rows with single cell below split cell.\n\t\t\t\tconst newCellsAttributes = {};\n\n\t\t\t\t// Copy colspan of split cell.\n\t\t\t\tif ( colspan > 1 ) {\n\t\t\t\t\tnewCellsAttributes.colspan = colspan;\n\t\t\t\t}\n\n\t\t\t\tcreateEmptyRows( writer, table, splitCellRow + 1, cellsToInsert, 1, newCellsAttributes );\n\n\t\t\t\t// Update heading section if split cell is in heading section.\n\t\t\t\tconst headingRows = table.getAttribute( 'headingRows' ) || 0;\n\n\t\t\t\tif ( headingRows > splitCellRow ) {\n\t\t\t\t\tupdateNumericAttribute( 'headingRows', headingRows + cellsToInsert, table, writer );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Returns the number of columns for a given table.\n\t *\n\t *\t\teditor.plugins.get( 'TableUtils' ).getColumns( table );\n\t *\n\t * @param {module:engine/model/element~Element} table The table to analyze.\n\t * @returns {Number}\n\t */\n\tgetColumns( table ) {\n\t\t// Analyze first row only as all the rows should have the same width.\n\t\tconst row = table.getChild( 0 );\n\n\t\treturn [ ...row.getChildren() ].reduce( ( columns, row ) => {\n\t\t\tconst columnWidth = parseInt( row.getAttribute( 'colspan' ) || 1 );\n\n\t\t\treturn columns + columnWidth;\n\t\t}, 0 );\n\t}\n}\n\n// Creates empty rows at the given index in an existing table.\n//\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:engine/model/element~Element} table\n// @param {Number} insertAt The row index of row insertion.\n// @param {Number} rows The number of rows to create.\n// @param {Number} tableCellToInsert The number of cells to insert in each row.\nfunction createEmptyRows( writer, table, insertAt, rows, tableCellToInsert, attributes = {} ) {\n\tfor ( let i = 0; i < rows; i++ ) {\n\t\tconst tableRow = writer.createElement( 'tableRow' );\n\n\t\twriter.insert( tableRow, table, insertAt );\n\n\t\tcreateCells( tableCellToInsert, writer, writer.createPositionAt( tableRow, 'end' ), attributes );\n\t}\n}\n\n// Creates cells at a given position.\n//\n// @param {Number} columns The number of columns to create\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:engine/model/position~Position} insertPosition\nfunction createCells( cells, writer, insertPosition, attributes = {} ) {\n\tfor ( let i = 0; i < cells; i++ ) {\n\t\tcreateEmptyTableCell( writer, insertPosition, attributes );\n\t}\n}\n\n// Evenly distributes the span of a cell to a number of provided cells.\n// The resulting spans will always be integer values.\n//\n// For instance breaking a span of 7 into 3 cells will return:\n//\n//\t\t{ newCellsSpan: 2, updatedSpan: 3 }\n//\n// as two cells will have a span of 2 and the remainder will go the first cell so its span will change to 3.\n//\n// @param {Number} span The span value do break.\n// @param {Number} numberOfCells The number of resulting spans.\n// @returns {{newCellsSpan: Number, updatedSpan: Number}}\nfunction breakSpanEvenly( span, numberOfCells ) {\n\tif ( span < numberOfCells ) {\n\t\treturn { newCellsSpan: 1, updatedSpan: 1 };\n\t}\n\n\tconst newCellsSpan = Math.floor( span / numberOfCells );\n\tconst updatedSpan = ( span - newCellsSpan * numberOfCells ) + newCellsSpan;\n\n\treturn { newCellsSpan, updatedSpan };\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/converters/table-layout-post-fixer\n */\n\nimport { createEmptyTableCell, findAncestor, updateNumericAttribute } from './../commands/utils';\nimport TableWalker from './../tablewalker';\n\n/**\n * Injects a table layout post-fixer into the model.\n *\n * The role of the table layout post-fixer is to ensure that the table rows have the correct structure\n * after a {@link module:engine/model/model~Model#change `change()`} block was executed.\n *\n * The correct structure means that:\n *\n * * All table rows have the same size.\n * * None of the table cells extend vertically beyond their section (either header or body).\n * * A table cell has always at least one element as a child.\n *\n * If the table structure is not correct, the post-fixer will automatically correct it in two steps:\n *\n * 1. It will clip table cells that extend beyond their section.\n * 2. It will add empty table cells to the rows that are narrower than the widest table row.\n *\n * ## Clipping overlapping table cells\n *\n * Such situation may occur when pasting a table (or a part of a table) to the editor from external sources.\n *\n * For example, see the following table which has a cell (FOO) with the rowspan attribute (2):\n *\n *\t\t<table headingRows=\"1\">\n *\t\t\t<tableRow>\n *\t\t\t\t<tableCell rowspan=\"2\"><paragraph>FOO</paragraph></tableCell>\n *\t\t\t\t<tableCell colspan=\"2\"><paragraph>BAR</paragraph></tableCell>\n *\t\t\t</tableRow>\n *\t\t\t<tableRow>\n *\t\t\t\t<tableCell><paragraph>BAZ</paragraph></tableCell>\n *\t\t\t\t<tableCell><paragraph>XYZ</paragraph></tableCell>\n *\t\t\t</tableRow>\n *\t\t</table>\n *\n * It will be rendered in the view as:\n *\n *\t\t<table>\n *\t\t\t<thead>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td rowspan=\"2\">FOO</td>\n *\t\t\t\t\t<td colspan=\"2\">BAR</td>\n *\t\t\t\t</tr>\n *\t\t\t</thead>\n *\t\t\t<tbody>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td>BAZ</td>\n *\t\t\t\t\t<td>XYZ</td>\n *\t\t\t\t</tr>\n *\t\t\t</tbody>\n *\t\t</table>\n *\n * In the above example the table will be rendered as a table with two rows: one in the header and second one in the body.\n * The table cell (FOO) cannot span over multiple rows as it would extend from the header to the body section.\n * The `rowspan` attribute must be changed to (1). The value (1) is the default value of the `rowspan` attribute\n * so the `rowspan` attribute will be removed from the model.\n *\n * The table cell with BAZ in the content will be in the first column of the table.\n *\n * ## Adding missing table cells\n *\n * The table post-fixer will insert empty table cells to equalize table row sizes (the number of columns).\n * The size of a table row is calculated by counting column spans of table cells, both horizontal (from the same row) and\n * vertical (from the rows above).\n *\n * In the above example, the table row in the body section of the table is narrower then the row from the header: it has two cells\n * with the default colspan (1). The header row has one cell with colspan (1) and the second with colspan (2).\n * The table cell (FOO) does not extend beyond the head section (and as such will be fixed in the first step of this post-fixer).\n * The post-fixer will add a missing table cell to the row in the body section of the table.\n *\n * The table from the above example will be fixed and rendered to the view as below:\n *\n *\t\t<table>\n *\t\t\t<thead>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td rowspan=\"2\">FOO</td>\n *\t\t\t\t\t<td colspan=\"2\">BAR</td>\n *\t\t\t\t</tr>\n *\t\t\t</thead>\n *\t\t\t<tbody>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td>BAZ</td>\n *\t\t\t\t\t<td>XYZ</td>\n *\t\t\t\t</tr>\n *\t\t\t</tbody>\n *\t\t</table>\n *\n * ## Collaboration and undo - Expectations vs post-fixer results\n *\n * The table post-fixer only ensures proper structure without a deeper analysis of the nature of the change. As such, it might lead\n * to a structure which was not intended by the user. In particular, it will also fix undo steps (in conjunction with collaboration)\n * in which the editor content might not return to the original state.\n *\n * This will usually happen when one or more users change the size of the table.\n *\n * As an example see the table below:\n *\n *\t\t<table>\n *\t\t\t<tbody>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td>11</td>\n *\t\t\t\t\t<td>12</td>\n *\t\t\t\t</tr>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td>21</td>\n *\t\t\t\t\t<td>22</td>\n *\t\t\t\t</tr>\n *\t\t\t</tbody>\n *\t\t</table>\n *\n * and the user actions:\n *\n * 1. Both users have a table with two rows and two columns.\n * 2. User A adds a column at the end of the table. This will insert empty table cells to two rows.\n * 3. User B adds a row at the end of the table. This will insert a row with two empty table cells.\n * 4. Both users will have a table as below:\n *\n *\n *\t\t<table>\n *\t\t\t<tbody>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td>11</td>\n *\t\t\t\t\t<td>12</td>\n *\t\t\t\t\t<td>(empty, inserted by A)</td>\n *\t\t\t\t</tr>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td>21</td>\n *\t\t\t\t\t<td>22</td>\n *\t\t\t\t\t<td>(empty, inserted by A)</td>\n *\t\t\t\t</tr>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td>(empty, inserted by B)</td>\n *\t\t\t\t\t<td>(empty, inserted by B)</td>\n *\t\t\t\t</tr>\n *\t\t\t</tbody>\n *\t\t</table>\n *\n * The last row is shorter then others so the table post-fixer will add an empty row to the last row:\n *\n *\t\t<table>\n *\t\t\t<tbody>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td>11</td>\n *\t\t\t\t\t<td>12</td>\n *\t\t\t\t\t<td>(empty, inserted by A)</td>\n *\t\t\t\t</tr>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td>21</td>\n *\t\t\t\t\t<td>22</td>\n *\t\t\t\t\t<td>(empty, inserted by A)</td>\n *\t\t\t\t</tr>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td>(empty, inserted by B)</td>\n *\t\t\t\t\t<td>(empty, inserted by B)</td>\n *\t\t\t\t\t<td>(empty, inserted by the post-fixer)</td>\n *\t\t\t\t</tr>\n *\t\t\t</tbody>\n *\t\t</table>\n *\n * Unfortunately undo does not know the nature of the changes and depending on which user applies the post-fixer changes, undoing them\n * might lead to a broken table. If User B undoes inserting the column to the table, the undo engine will undo only the operations of\n * inserting empty cells to rows from the initial table state (row 1 and 2) but the cell in the post-fixed row will remain:\n *\n *\t\t<table>\n *\t\t\t<tbody>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td>11</td>\n *\t\t\t\t\t<td>12</td>\n *\t\t\t\t</tr>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td>21</td>\n *\t\t\t\t\t<td>22</td>\n *\t\t\t\t</tr>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td>(empty, inserted by B)</td>\n *\t\t\t\t\t<td>(empty, inserted by B)</td>\n *\t\t\t\t\t<td>(empty, inserted by a post-fixer)</td>\n *\t\t\t\t</tr>\n *\t\t\t</tbody>\n *\t\t</table>\n *\n * After undo, the table post-fixer will detect that two rows are shorter than others and will fix the table to:\n *\n *\t\t<table>\n *\t\t\t<tbody>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td>11</td>\n *\t\t\t\t\t<td>12</td>\n *\t\t\t\t\t<td>(empty, inserted by a post-fixer after undo)</td>\n *\t\t\t\t</tr>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td>21</td>\n *\t\t\t\t\t<td>22</td>\n *\t\t\t\t\t<td>(empty, inserted by a post-fixer after undo)</td>\n *\t\t\t\t</tr>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td>(empty, inserted by B)</td>\n *\t\t\t\t\t<td>(empty, inserted by B)</td>\n *\t\t\t\t\t<td>(empty, inserted by a post-fixer)</td>\n *\t\t\t\t</tr>\n *\t\t\t</tbody>\n *\t\t</table>\n * @param {module:engine/model/model~Model} model\n */\nexport default function injectTableLayoutPostFixer( model ) {\n\tmodel.document.registerPostFixer( writer => tableLayoutPostFixer( writer, model ) );\n}\n\n// The table layout post-fixer.\n//\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:engine/model/model~Model} model\nfunction tableLayoutPostFixer( writer, model ) {\n\tconst changes = model.document.differ.getChanges();\n\n\tlet wasFixed = false;\n\n\t// Do not analyze the same table more then once - may happen for multiple changes in the same table.\n\tconst analyzedTables = new Set();\n\n\tfor ( const entry of changes ) {\n\t\tlet table;\n\n\t\tif ( entry.name == 'table' && entry.type == 'insert' ) {\n\t\t\ttable = entry.position.nodeAfter;\n\t\t}\n\n\t\t// Fix table on adding/removing table cells and rows.\n\t\tif ( entry.name == 'tableRow' || entry.name == 'tableCell' ) {\n\t\t\ttable = findAncestor( 'table', entry.position );\n\t\t}\n\n\t\t// Fix table on any table's attribute change - including attributes of table cells.\n\t\tif ( isTableAttributeEntry( entry ) ) {\n\t\t\ttable = findAncestor( 'table', entry.range.start );\n\t\t}\n\n\t\tif ( table && !analyzedTables.has( table ) ) {\n\t\t\t// Step 1: correct rowspans of table cells if necessary.\n\t\t\t// The wasFixed flag should be true if any of tables in batch was fixed - might be more then one.\n\t\t\twasFixed = fixTableCellsRowspan( table, writer ) || wasFixed;\n\t\t\t// Step 2: fix table rows sizes.\n\t\t\twasFixed = fixTableRowsSizes( table, writer ) || wasFixed;\n\n\t\t\tanalyzedTables.add( table );\n\t\t}\n\t}\n\n\treturn wasFixed;\n}\n\n// Fixes the invalid value of the `rowspan` attribute because a table cell cannot vertically extend beyond the table section it belongs to.\n//\n// @param {module:engine/model/element~Element} table\n// @param {module:engine/model/writer~Writer} writer\n// @returns {Boolean} Returns `true` if the table was fixed.\nfunction fixTableCellsRowspan( table, writer ) {\n\tlet wasFixed = false;\n\n\tconst cellsToTrim = findCellsToTrim( table );\n\n\tif ( cellsToTrim.length ) {\n\t\twasFixed = true;\n\n\t\tfor ( const data of cellsToTrim ) {\n\t\t\tupdateNumericAttribute( 'rowspan', data.rowspan, data.cell, writer, 1 );\n\t\t}\n\t}\n\n\treturn wasFixed;\n}\n\n// Makes all table rows in a table the same size.\n//\n// @param {module:engine/model/element~Element} table\n// @param {module:engine/model/writer~Writer} writer\n// @returns {Boolean} Returns `true` if the table was fixed.\nfunction fixTableRowsSizes( table, writer ) {\n\tlet wasFixed = false;\n\n\tconst rowsLengths = getRowsLengths( table );\n\tconst tableSize = rowsLengths[ 0 ];\n\n\tconst isValid = Object.values( rowsLengths ).every( length => length === tableSize );\n\n\tif ( !isValid ) {\n\t\tconst maxColumns = Object.values( rowsLengths ).reduce( ( prev, current ) => current > prev ? current : prev, 0 );\n\n\t\tfor ( const [ rowIndex, size ] of Object.entries( rowsLengths ) ) {\n\t\t\tconst columnsToInsert = maxColumns - size;\n\n\t\t\tif ( columnsToInsert ) {\n\t\t\t\tfor ( let i = 0; i < columnsToInsert; i++ ) {\n\t\t\t\t\tcreateEmptyTableCell( writer, writer.createPositionAt( table.getChild( rowIndex ), 'end' ) );\n\t\t\t\t}\n\n\t\t\t\twasFixed = true;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn wasFixed;\n}\n\n// Searches for table cells that extend beyond the table section to which they belong to. It will return an array of objects\n// that stores table cells to be trimmed and the correct value of the `rowspan` attribute to set.\n//\n// @param {module:engine/model/element~Element} table\n// @returns {Array.<{{cell, rowspan}}>}\nfunction findCellsToTrim( table ) {\n\tconst headingRows = parseInt( table.getAttribute( 'headingRows' ) || 0 );\n\tconst maxRows = table.childCount;\n\n\tconst cellsToTrim = [];\n\n\tfor ( const { row, rowspan, cell } of new TableWalker( table ) ) {\n\t\t// Skip cells that do not expand over its row.\n\t\tif ( rowspan < 2 ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst isInHeader = row < headingRows;\n\n\t\t// Row limit is either end of header section or whole table as table body is after the header.\n\t\tconst rowLimit = isInHeader ? headingRows : maxRows;\n\n\t\t// If table cell expands over its limit reduce it height to proper value.\n\t\tif ( row + rowspan > rowLimit ) {\n\t\t\tconst newRowspan = rowLimit - row;\n\n\t\t\tcellsToTrim.push( { cell, rowspan: newRowspan } );\n\t\t}\n\t}\n\n\treturn cellsToTrim;\n}\n\n// Returns an object with lengths of rows assigned to the corresponding row index.\n//\n// @param {module:engine/model/element~Element} table\n// @returns {Object}\nfunction getRowsLengths( table ) {\n\tconst lengths = {};\n\n\tfor ( const { row } of new TableWalker( table, { includeSpanned: true } ) ) {\n\t\tif ( !lengths[ row ] ) {\n\t\t\tlengths[ row ] = 0;\n\t\t}\n\n\t\tlengths[ row ] += 1;\n\t}\n\n\treturn lengths;\n}\n\n// Checks if the differ entry for an attribute change is one of the table's attributes.\n//\n// @param entry\n// @returns {Boolean}\nfunction isTableAttributeEntry( entry ) {\n\tconst isAttributeType = entry.type === 'attribute';\n\tconst key = entry.attributeKey;\n\n\treturn isAttributeType && ( key === 'headingRows' || key === 'colspan' || key === 'rowspan' );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/converters/table-cell-paragraph-post-fixer\n */\n\n/**\n * Injects a table cell post-fixer into the model which inserts a `paragraph` element into empty table cells.\n *\n * A table cell must contain at least one block element as a child. An empty table cell will have an empty `paragraph` as a child.\n *\n *\t\t<table>\n *\t\t\t<tableRow>\n *\t\t\t\t<tableCell></tableCell>\n *\t\t\t</tableRow>\n *\t\t</table>\n *\n * Will be fixed to:\n *\n *\t\t<table>\n *\t\t\t<tableRow>\n *\t\t\t\t<tableCell><paragraph></paragraph></tableCell>\n *\t\t\t</tableRow>\n *\t\t</table>\n *\n * @param {module:engine/model/model~Model} model\n */\nexport default function injectTableCellParagraphPostFixer( model ) {\n\tmodel.document.registerPostFixer( writer => tableCellContentsPostFixer( writer, model ) );\n}\n\n// The table cell contents post-fixer.\n//\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:engine/model/model~Model} model\nfunction tableCellContentsPostFixer( writer, model ) {\n\tconst changes = model.document.differ.getChanges();\n\n\tlet wasFixed = false;\n\n\tfor ( const entry of changes ) {\n\t\tif ( entry.type == 'insert' && entry.name == 'table' ) {\n\t\t\twasFixed = fixTable( entry.position.nodeAfter, writer ) || wasFixed;\n\t\t}\n\n\t\tif ( entry.type == 'insert' && entry.name == 'tableRow' ) {\n\t\t\twasFixed = fixTableRow( entry.position.nodeAfter, writer ) || wasFixed;\n\t\t}\n\n\t\tif ( entry.type == 'insert' && entry.name == 'tableCell' ) {\n\t\t\twasFixed = fixTableCellContent( entry.position.nodeAfter, writer ) || wasFixed;\n\t\t}\n\n\t\tif ( checkTableCellChange( entry ) ) {\n\t\t\twasFixed = fixTableCellContent( entry.position.parent, writer ) || wasFixed;\n\t\t}\n\t}\n\n\treturn wasFixed;\n}\n\n// Fixes all table cells in a table.\n//\n// @param {module:engine/model/element~Element} table\n// @param {module:engine/model/writer~Writer} writer\nfunction fixTable( table, writer ) {\n\tlet wasFixed = false;\n\n\tfor ( const row of table.getChildren() ) {\n\t\twasFixed = fixTableRow( row, writer ) || wasFixed;\n\t}\n\n\treturn wasFixed;\n}\n\n// Fixes all table cells in a table row.\n//\n// @param {module:engine/model/element~Element} tableRow\n// @param {module:engine/model/writer~Writer} writer\nfunction fixTableRow( tableRow, writer ) {\n\tlet wasFixed = false;\n\n\tfor ( const tableCell of tableRow.getChildren() ) {\n\t\twasFixed = fixTableCellContent( tableCell, writer ) || wasFixed;\n\t}\n\n\treturn wasFixed;\n}\n\n// Fixes all table cell content by:\n// - Adding a paragraph to a table cell without any child.\n// - Wrapping direct $text in a `<paragraph>`.\n//\n// @param {module:engine/model/element~Element} table\n// @param {module:engine/model/writer~Writer} writer\n// @returns {Boolean}\nfunction fixTableCellContent( tableCell, writer ) {\n\t// Insert paragraph to an empty table cell.\n\tif ( tableCell.childCount == 0 ) {\n\t\twriter.insertElement( 'paragraph', tableCell );\n\n\t\treturn true;\n\t}\n\n\t// Check table cell children for directly placed text nodes.\n\t// Temporary solution. See https://github.com/ckeditor/ckeditor5/issues/1464.\n\tconst textNodes = Array.from( tableCell.getChildren() ).filter( child => child.is( 'text' ) );\n\n\tfor ( const child of textNodes ) {\n\t\twriter.wrap( writer.createRangeOn( child ), 'paragraph' );\n\t}\n\n\t// Return true when there were text nodes to fix.\n\treturn !!textNodes.length;\n}\n\n// Checks if a differ change should fix the table cell. This happens on:\n// - Removing content from the table cell (i.e. `tableCell` can be left empty).\n// - Adding a text node directly into a table cell.\n//\n// @param {Object} differ change entry\n// @returns {Boolean}\nfunction checkTableCellChange( entry ) {\n\tif ( !entry.position || !entry.position.parent.is( 'tableCell' ) ) {\n\t\treturn false;\n\t}\n\n\treturn entry.type == 'insert' && entry.name == '$text' || entry.type == 'remove';\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/converters/table-cell-refresh-post-fixer\n */\n\n/**\n * Injects a table cell post-fixer into the model which marks the table cell in the differ to have it re-rendered.\n *\n * Model `paragraph` inside a table cell can be rendered as `<span>` or `<p>`. It is rendered as `<span>` if this is the only block\n * element in that table cell and it does not have any attributes. It is rendered as `<p>` otherwise.\n *\n * When table cell content changes, for example a second `paragraph` element is added, we need to ensure that the first `paragraph` is\n * re-rendered so it changes from `<span>` to `<p>`. The easiest way to do it is to re-render the entire table cell.\n *\n * @param {module:engine/model/model~Model} model\n */\nexport default function injectTableCellRefreshPostFixer( model ) {\n\tmodel.document.registerPostFixer( () => tableCellRefreshPostFixer( model ) );\n}\n\nfunction tableCellRefreshPostFixer( model ) {\n\tconst differ = model.document.differ;\n\n\t// Stores cells to be refreshed so the table cell will be refreshed once for multiple changes.\n\tconst cellsToRefresh = new Set();\n\n\tfor ( const change of differ.getChanges() ) {\n\t\tconst parent = change.type == 'insert' || change.type == 'remove' ? change.position.parent : change.range.start.parent;\n\n\t\tif ( parent.is( 'tableCell' ) && checkRefresh( parent, change.type ) ) {\n\t\t\tcellsToRefresh.add( parent );\n\t\t}\n\t}\n\n\tif ( cellsToRefresh.size ) {\n\t\tfor ( const tableCell of cellsToRefresh.values() ) {\n\t\t\tdiffer.refreshItem( tableCell );\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n// Checks if the model table cell requires refreshing to be re-rendered to a proper state in the view.\n//\n// This method detects changes that will require renaming `<span>` to `<p>` (or vice versa) in the view.\n//\n// This method is a simple heuristic that checks only a single change and will sometimes give a false positive result when multiple changes\n// will result in a state that does not require renaming in the view (but will be seen as requiring a refresh).\n//\n// For instance: A `<span>` should be renamed to `<p>` when adding an attribute to a `<paragraph>`.\n// But adding one attribute and removing another one will result in a false positive: the check for an added attribute will see one\n// attribute on a paragraph and will falsely qualify such change as adding an attribute to a paragraph without any attribute.\n//\n// @param {module:engine/model/element~Element} tableCell The table cell to check.\n// @param {String} type Type of change.\nfunction checkRefresh( tableCell, type ) {\n\tconst hasInnerParagraph = Array.from( tableCell.getChildren() ).some( child => child.is( 'paragraph' ) );\n\n\t// If there is no paragraph in table cell then the view doesn't require refreshing.\n\t//\n\t// Why? What we really want to achieve is to make all the old paragraphs (which weren't added in this batch) to be\n\t// converted once again, so that the paragraph-in-table-cell converter can correctly create a `<p>` or a `<span>` element.\n\t// If there are no paragraphs in the table cell, we don't care.\n\tif ( !hasInnerParagraph ) {\n\t\treturn false;\n\t}\n\n\t// For attribute change we only refresh if there is a single paragraph as in this case we may want to change existing `<span>` to `<p>`.\n\tif ( type == 'attribute' ) {\n\t\tconst attributesCount = Array.from( tableCell.getChild( 0 ).getAttributeKeys() ).length;\n\n\t\treturn tableCell.childCount === 1 && attributesCount < 2;\n\t}\n\n\t// For other changes (insert, remove) the `<span>` to `<p>` change is needed when:\n\t//\n\t// - another element is added to a single paragraph (childCount becomes >= 2)\n\t// - another element is removed and a single paragraph is left (childCount == 1)\n\treturn tableCell.childCount <= ( type == 'insert' ? 2 : 1 );\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tableediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport upcastTable, { upcastTableCell } from './converters/upcasttable';\nimport {\n\tdowncastInsertCell,\n\tdowncastInsertRow,\n\tdowncastInsertTable,\n\tdowncastRemoveRow,\n\tdowncastTableHeadingColumnsChange,\n\tdowncastTableHeadingRowsChange\n} from './converters/downcast';\n\nimport InsertTableCommand from './commands/inserttablecommand';\nimport InsertRowCommand from './commands/insertrowcommand';\nimport InsertColumnCommand from './commands/insertcolumncommand';\nimport SplitCellCommand from './commands/splitcellcommand';\nimport MergeCellCommand from './commands/mergecellcommand';\nimport RemoveRowCommand from './commands/removerowcommand';\nimport RemoveColumnCommand from './commands/removecolumncommand';\nimport SetHeaderRowCommand from './commands/setheaderrowcommand';\nimport SetHeaderColumnCommand from './commands/setheadercolumncommand';\nimport { findAncestor } from './commands/utils';\nimport TableUtils from '../src/tableutils';\n\nimport injectTableLayoutPostFixer from './converters/table-layout-post-fixer';\nimport injectTableCellParagraphPostFixer from './converters/table-cell-paragraph-post-fixer';\nimport injectTableCellRefreshPostFixer from './converters/table-cell-refresh-post-fixer';\n\nimport '../theme/tableediting.css';\n\n/**\n * The table editing feature.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class TableEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'TableEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\t\tconst schema = model.schema;\n\t\tconst conversion = editor.conversion;\n\n\t\tschema.register( 'table', {\n\t\t\tallowWhere: '$block',\n\t\t\tallowAttributes: [ 'headingRows', 'headingColumns' ],\n\t\t\tisLimit: true,\n\t\t\tisObject: true,\n\t\t\tisBlock: true\n\t\t} );\n\n\t\tschema.register( 'tableRow', {\n\t\t\tallowIn: 'table',\n\t\t\tisLimit: true\n\t\t} );\n\n\t\tschema.register( 'tableCell', {\n\t\t\tallowIn: 'tableRow',\n\t\t\tallowAttributes: [ 'colspan', 'rowspan' ],\n\t\t\tisLimit: true\n\t\t} );\n\n\t\t// Allow all $block content inside table cell.\n\t\tschema.extend( '$block', { allowIn: 'tableCell' } );\n\n\t\t// Disallow table in table.\n\t\tschema.addChildCheck( ( context, childDefinition ) => {\n\t\t\tif ( childDefinition.name == 'table' && Array.from( context.getNames() ).includes( 'table' ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} );\n\n\t\t// Table conversion.\n\t\tconversion.for( 'upcast' ).add( upcastTable() );\n\n\t\tconversion.for( 'editingDowncast' ).add( downcastInsertTable( { asWidget: true } ) );\n\t\tconversion.for( 'dataDowncast' ).add( downcastInsertTable() );\n\n\t\t// Table row conversion.\n\t\tconversion.for( 'upcast' ).elementToElement( { model: 'tableRow', view: 'tr' } );\n\n\t\tconversion.for( 'editingDowncast' ).add( downcastInsertRow( { asWidget: true } ) );\n\t\tconversion.for( 'dataDowncast' ).add( downcastInsertRow() );\n\t\tconversion.for( 'downcast' ).add( downcastRemoveRow() );\n\n\t\t// Table cell conversion.\n\t\tconversion.for( 'upcast' ).add( upcastTableCell( 'td' ) );\n\t\tconversion.for( 'upcast' ).add( upcastTableCell( 'th' ) );\n\n\t\tconversion.for( 'editingDowncast' ).add( downcastInsertCell( { asWidget: true } ) );\n\t\tconversion.for( 'dataDowncast' ).add( downcastInsertCell() );\n\n\t\t// Table attributes conversion.\n\t\tconversion.attributeToAttribute( { model: 'colspan', view: 'colspan' } );\n\t\tconversion.attributeToAttribute( { model: 'rowspan', view: 'rowspan' } );\n\n\t\t// Table heading rows and columns conversion.\n\t\tconversion.for( 'editingDowncast' ).add( downcastTableHeadingColumnsChange( { asWidget: true } ) );\n\t\tconversion.for( 'dataDowncast' ).add( downcastTableHeadingColumnsChange() );\n\t\tconversion.for( 'editingDowncast' ).add( downcastTableHeadingRowsChange( { asWidget: true } ) );\n\t\tconversion.for( 'dataDowncast' ).add( downcastTableHeadingRowsChange() );\n\n\t\t// Define all the commands.\n\t\teditor.commands.add( 'insertTable', new InsertTableCommand( editor ) );\n\t\teditor.commands.add( 'insertTableRowAbove', new InsertRowCommand( editor, { order: 'above' } ) );\n\t\teditor.commands.add( 'insertTableRowBelow', new InsertRowCommand( editor, { order: 'below' } ) );\n\t\teditor.commands.add( 'insertTableColumnLeft', new InsertColumnCommand( editor, { order: 'left' } ) );\n\t\teditor.commands.add( 'insertTableColumnRight', new InsertColumnCommand( editor, { order: 'right' } ) );\n\n\t\teditor.commands.add( 'removeTableRow', new RemoveRowCommand( editor ) );\n\t\teditor.commands.add( 'removeTableColumn', new RemoveColumnCommand( editor ) );\n\n\t\teditor.commands.add( 'splitTableCellVertically', new SplitCellCommand( editor, { direction: 'vertically' } ) );\n\t\teditor.commands.add( 'splitTableCellHorizontally', new SplitCellCommand( editor, { direction: 'horizontally' } ) );\n\n\t\teditor.commands.add( 'mergeTableCellRight', new MergeCellCommand( editor, { direction: 'right' } ) );\n\t\teditor.commands.add( 'mergeTableCellLeft', new MergeCellCommand( editor, { direction: 'left' } ) );\n\t\teditor.commands.add( 'mergeTableCellDown', new MergeCellCommand( editor, { direction: 'down' } ) );\n\t\teditor.commands.add( 'mergeTableCellUp', new MergeCellCommand( editor, { direction: 'up' } ) );\n\n\t\teditor.commands.add( 'setTableColumnHeader', new SetHeaderColumnCommand( editor ) );\n\t\teditor.commands.add( 'setTableRowHeader', new SetHeaderRowCommand( editor ) );\n\n\t\tinjectTableLayoutPostFixer( model );\n\t\tinjectTableCellRefreshPostFixer( model );\n\t\tinjectTableCellParagraphPostFixer( model );\n\n\t\t// Handle Tab key navigation.\n\t\tthis.editor.keystrokes.set( 'Tab', ( ...args ) => this._handleTabOnSelectedTable( ...args ), { priority: 'low' } );\n\t\tthis.editor.keystrokes.set( 'Tab', this._getTabHandler( true ), { priority: 'low' } );\n\t\tthis.editor.keystrokes.set( 'Shift+Tab', this._getTabHandler( false ), { priority: 'low' } );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ TableUtils ];\n\t}\n\n\t/**\n\t * Handles {@link module:engine/view/document~Document#event:keydown keydown} events for the <kbd>Tab</kbd> key executed\n\t * when the table widget is selected.\n\t *\n\t * @private\n\t * @param {module:utils/eventinfo~EventInfo} eventInfo\n\t * @param {module:engine/view/observer/domeventdata~DomEventData} domEventData\n\t */\n\t_handleTabOnSelectedTable( domEventData, cancel ) {\n\t\tconst editor = this.editor;\n\t\tconst selection = editor.model.document.selection;\n\n\t\tif ( !selection.isCollapsed && selection.rangeCount === 1 && selection.getFirstRange().isFlat ) {\n\t\t\tconst selectedElement = selection.getSelectedElement();\n\n\t\t\tif ( !selectedElement || !selectedElement.is( 'table' ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcancel();\n\n\t\t\teditor.model.change( writer => {\n\t\t\t\twriter.setSelection( writer.createRangeIn( selectedElement.getChild( 0 ).getChild( 0 ) ) );\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Returns a handler for {@link module:engine/view/document~Document#event:keydown keydown} events for the <kbd>Tab</kbd> key executed\n\t * inside table cell.\n\t *\n\t * @private\n\t * @param {Boolean} isForward Whether this handler will move the selection to the next or the previous cell.\n\t */\n\t_getTabHandler( isForward ) {\n\t\tconst editor = this.editor;\n\n\t\treturn ( domEventData, cancel ) => {\n\t\t\tconst selection = editor.model.document.selection;\n\n\t\t\tconst firstPosition = selection.getFirstPosition();\n\n\t\t\tconst tableCell = findAncestor( 'tableCell', firstPosition );\n\n\t\t\tif ( !tableCell ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcancel();\n\n\t\t\tconst tableRow = tableCell.parent;\n\t\t\tconst table = tableRow.parent;\n\n\t\t\tconst currentRowIndex = table.getChildIndex( tableRow );\n\t\t\tconst currentCellIndex = tableRow.getChildIndex( tableCell );\n\n\t\t\tconst isFirstCellInRow = currentCellIndex === 0;\n\n\t\t\tif ( !isForward && isFirstCellInRow && currentRowIndex === 0 ) {\n\t\t\t\t// It's the first cell of the table - don't do anything (stay in the current position).\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst isLastCellInRow = currentCellIndex === tableRow.childCount - 1;\n\t\t\tconst isLastRow = currentRowIndex === table.childCount - 1;\n\n\t\t\tif ( isForward && isLastRow && isLastCellInRow ) {\n\t\t\t\teditor.execute( 'insertTableRowBelow' );\n\n\t\t\t\t// Check if the command actually added a row. If `insertTableRowBelow` execution didn't add a row (because it was disabled\n\t\t\t\t// or it got overwritten) do not change the selection.\n\t\t\t\tif ( currentRowIndex === table.childCount - 1 ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet cellToFocus;\n\n\t\t\t// Move to first cell in next row.\n\t\t\tif ( isForward && isLastCellInRow ) {\n\t\t\t\tconst nextRow = table.getChild( currentRowIndex + 1 );\n\n\t\t\t\tcellToFocus = nextRow.getChild( 0 );\n\t\t\t}\n\t\t\t// Move to last cell in a previous row.\n\t\t\telse if ( !isForward && isFirstCellInRow ) {\n\t\t\t\tconst previousRow = table.getChild( currentRowIndex - 1 );\n\n\t\t\t\tcellToFocus = previousRow.getChild( previousRow.childCount - 1 );\n\t\t\t}\n\t\t\t// Move to next/previous cell.\n\t\t\telse {\n\t\t\t\tcellToFocus = tableRow.getChild( currentCellIndex + ( isForward ? 1 : -1 ) );\n\t\t\t}\n\n\t\t\teditor.model.change( writer => {\n\t\t\t\twriter.setSelection( writer.createRangeIn( cellToFocus ) );\n\t\t\t} );\n\t\t};\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/ui/inserttableview\n */\n\nimport View from '@ckeditor/ckeditor5-ui/src/view';\n\nimport './../../theme/inserttable.css';\n\n/**\n * The table size view.\n *\n * It renders a 10x10 grid to choose the inserted table size.\n *\n * @extends module:ui/view~View\n * @implements module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable\n */\nexport default class InsertTableView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * A collection of table size box items.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.items = this.createCollection();\n\n\t\t/**\n\t\t * The currently selected number of rows of the new table.\n\t\t *\n\t\t * @observable\n\t\t * @member {Number} #rows\n\t\t */\n\t\tthis.set( 'rows', 0 );\n\n\t\t/**\n\t\t * The currently selected number of columns of the new table.\n\t\t *\n\t\t * @observable\n\t\t * @member {Number} #columns\n\t\t */\n\t\tthis.set( 'columns', 0 );\n\n\t\t/**\n\t\t * The label text displayed under the boxes.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #label\n\t\t */\n\t\tthis.bind( 'label' )\n\t\t\t.to( this, 'columns', this, 'rows', ( columns, rows ) => `${ rows } × ${ columns }` );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [ 'ck' ]\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [ 'ck-insert-table-dropdown__grid' ]\n\t\t\t\t\t},\n\t\t\t\t\tchildren: this.items\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [ 'ck-insert-table-dropdown__label' ]\n\t\t\t\t\t},\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttext: bind.to( 'label' )\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\n\t\t\ton: {\n\t\t\t\tmousedown: bind.to( evt => {\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t} ),\n\n\t\t\t\tclick: bind.to( () => {\n\t\t\t\t\tthis.fire( 'execute' );\n\t\t\t\t} )\n\t\t\t}\n\t\t} );\n\n\t\t// Add grid boxes to table selection view.\n\t\tfor ( let index = 0; index < 100; index++ ) {\n\t\t\tconst boxView = new TableSizeGridBoxView();\n\n\t\t\t// Listen to box view 'over' event which indicates that mouse is over this box.\n\t\t\tboxView.on( 'over', () => {\n\t\t\t\t// Translate box index to the row & column index.\n\t\t\t\tconst row = Math.floor( index / 10 );\n\t\t\t\tconst column = index % 10;\n\n\t\t\t\t// As row & column indexes are zero-based transform it to number of selected rows & columns.\n\t\t\t\tthis.set( 'rows', row + 1 );\n\t\t\t\tthis.set( 'columns', column + 1 );\n\t\t\t} );\n\n\t\t\tthis.items.add( boxView );\n\t\t}\n\n\t\tthis.on( 'change:columns', () => {\n\t\t\tthis._highlightGridBoxes();\n\t\t} );\n\n\t\tthis.on( 'change:rows', () => {\n\t\t\tthis._highlightGridBoxes();\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tfocus() {\n\t\t// The dropdown panel expects DropdownPanelFocusable interface on views passed to dropdown panel. See #30.\n\t\t// The method should be implemented while working on keyboard support for this view. See #22.\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tfocusLast() {\n\t\t// The dropdown panel expects DropdownPanelFocusable interface on views passed to dropdown panel. See #30.\n\t\t// The method should be implemented while working on keyboard support for this view. See #22.\n\t}\n\n\t/**\n\t * Highlights grid boxes depending on rows and columns selected.\n\t *\n\t * @private\n\t */\n\t_highlightGridBoxes() {\n\t\tconst rows = this.rows;\n\t\tconst columns = this.columns;\n\n\t\tthis.items.map( ( boxView, index ) => {\n\t\t\t// Translate box index to the row & column index.\n\t\t\tconst itemRow = Math.floor( index / 10 );\n\t\t\tconst itemColumn = index % 10;\n\n\t\t\t// Grid box is highlighted when its row & column index belongs to selected number of rows & columns.\n\t\t\tconst isOn = itemRow < rows && itemColumn < columns;\n\n\t\t\tboxView.set( 'isOn', isOn );\n\t\t} );\n\t}\n}\n\n/**\n * A single grid box view element.\n *\n * This class is used to render the table size selection grid in {@link module:table/ui/inserttableview~InsertTableView}.\n *\n * @private\n */\nclass TableSizeGridBoxView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * Controls whether the grid box view is \"on\".\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isOn\n\t\t */\n\t\tthis.set( 'isOn', false );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-insert-table-dropdown-grid-box',\n\t\t\t\t\tbind.if( 'isOn', 'ck-on' )\n\t\t\t\t]\n\t\t\t},\n\t\t\ton: {\n\t\t\t\tmouseover: bind.to( 'over' )\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module table/tableui\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport {\n    addListToDropdown,\n    createDropdown\n} from '@ckeditor/ckeditor5-ui/src/dropdown/utils';\nimport Model from '@ckeditor/ckeditor5-ui/src/model';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport InsertTableView from './ui/inserttableview';\nimport tableIcon from './../theme/icons/table.svg';\nimport tableColumnIcon from './../theme/icons/table-column.svg';\nimport tableRowIcon from './../theme/icons/table-row.svg';\nimport tableMergeCellIcon from './../theme/icons/table-merge-cell.svg';\n/**\n * The table UI plugin. It introduces:\n *\n * * The `'insertTable'` dropdown,\n * * The `'tableColumn'` dropdown,\n * * The `'tableRow'` dropdown,\n * * The `'mergeTableCells'` dropdown.\n *\n * The `'tableColumn'`, `'tableRow'` and `'mergeTableCells'` dropdowns work best with {@link module:table/tabletoolbar~TableToolbar}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class TableUI extends Plugin {\n    /**\n\t * @inheritDoc\n\t */\n    init() {\n        const editor = this.editor;\n        const t = this.editor.t;\n        const contentLanguageDirection = editor.locale.contentLanguageDirection;\n        const isContentLtr = contentLanguageDirection === 'ltr';\n        editor.ui.componentFactory.add('insertTable', locale => {\n            const command = editor.commands.get('insertTable');\n            const dropdownView = createDropdown(locale);\n            dropdownView.bind('isEnabled').to(command);\n            // Decorate dropdown's button.\n            dropdownView.buttonView.set({\n                icon: tableIcon,\n                label: t('t'),\n                tooltip: true\n            });\n            let insertTableView;\n            dropdownView.on('change:isOpen', () => {\n                if (insertTableView) {\n                    return;\n                }\n                // Prepare custom view for dropdown's panel.\n                insertTableView = new InsertTableView(locale);\n                dropdownView.panelView.children.add(insertTableView);\n                insertTableView.delegate('execute').to(dropdownView);\n                dropdownView.buttonView.on('open', () => {\n                    // Reset the chooser before showing it to the user.\n                    insertTableView.rows = 0;\n                    insertTableView.columns = 0;\n                });\n                dropdownView.on('execute', () => {\n                    editor.execute('insertTable', {\n                        rows: insertTableView.rows,\n                        columns: insertTableView.columns\n                    });\n                    editor.editing.view.focus();\n                });\n            });\n            return dropdownView;\n        });\n        editor.ui.componentFactory.add('tableColumn', locale => {\n            const options = [\n                {\n                    type: 'switchbutton',\n                    model: {\n                        commandName: 'setTableColumnHeader',\n                        label: t('u'),\n                        bindIsOn: true\n                    }\n                },\n                { type: 'separator' },\n                {\n                    type: 'button',\n                    model: {\n                        commandName: isContentLtr ? 'insertTableColumnLeft' : 'insertTableColumnRight',\n                        label: t('v')\n                    }\n                },\n                {\n                    type: 'button',\n                    model: {\n                        commandName: isContentLtr ? 'insertTableColumnRight' : 'insertTableColumnLeft',\n                        label: t('w')\n                    }\n                },\n                {\n                    type: 'button',\n                    model: {\n                        commandName: 'removeTableColumn',\n                        label: t('x')\n                    }\n                }\n            ];\n            return this._prepareDropdown(t('y'), tableColumnIcon, options, locale);\n        });\n        editor.ui.componentFactory.add('tableRow', locale => {\n            const options = [\n                {\n                    type: 'switchbutton',\n                    model: {\n                        commandName: 'setTableRowHeader',\n                        label: t('z'),\n                        bindIsOn: true\n                    }\n                },\n                { type: 'separator' },\n                {\n                    type: 'button',\n                    model: {\n                        commandName: 'insertTableRowBelow',\n                        label: t('aa')\n                    }\n                },\n                {\n                    type: 'button',\n                    model: {\n                        commandName: 'insertTableRowAbove',\n                        label: t('ab')\n                    }\n                },\n                {\n                    type: 'button',\n                    model: {\n                        commandName: 'removeTableRow',\n                        label: t('ac')\n                    }\n                }\n            ];\n            return this._prepareDropdown(t('ad'), tableRowIcon, options, locale);\n        });\n        editor.ui.componentFactory.add('mergeTableCells', locale => {\n            const options = [\n                {\n                    type: 'button',\n                    model: {\n                        commandName: 'mergeTableCellUp',\n                        label: t('ae')\n                    }\n                },\n                {\n                    type: 'button',\n                    model: {\n                        commandName: isContentLtr ? 'mergeTableCellRight' : 'mergeTableCellLeft',\n                        label: t('af')\n                    }\n                },\n                {\n                    type: 'button',\n                    model: {\n                        commandName: 'mergeTableCellDown',\n                        label: t('ag')\n                    }\n                },\n                {\n                    type: 'button',\n                    model: {\n                        commandName: isContentLtr ? 'mergeTableCellLeft' : 'mergeTableCellRight',\n                        label: t('ah')\n                    }\n                },\n                { type: 'separator' },\n                {\n                    type: 'button',\n                    model: {\n                        commandName: 'splitTableCellVertically',\n                        label: t('ai')\n                    }\n                },\n                {\n                    type: 'button',\n                    model: {\n                        commandName: 'splitTableCellHorizontally',\n                        label: t('aj')\n                    }\n                }\n            ];\n            return this._prepareDropdown(t('ak'), tableMergeCellIcon, options, locale);\n        });\n    }\n    /**\n\t * Creates a dropdown view from a set of options.\n\t *\n\t * @private\n\t * @param {String} label The dropdown button label.\n\t * @param {String} icon An icon for the dropdown button.\n\t * @param {Array.<module:ui/dropdown/utils~ListDropdownItemDefinition>} options The list of options for the dropdown.\n\t * @param {module:utils/locale~Locale} locale\n\t * @returns {module:ui/dropdown/dropdownview~DropdownView}\n\t */\n    _prepareDropdown(label, icon, options, locale) {\n        const editor = this.editor;\n        const dropdownView = createDropdown(locale);\n        const commands = [];\n        // Prepare dropdown list items for list dropdown.\n        const itemDefinitions = new Collection();\n        for (const option of options) {\n            addListOption(option, editor, commands, itemDefinitions);\n        }\n        addListToDropdown(dropdownView, itemDefinitions, editor.ui.componentFactory);\n        // Decorate dropdown's button.\n        dropdownView.buttonView.set({\n            label,\n            icon,\n            tooltip: true\n        });\n        // Make dropdown button disabled when all options are disabled.\n        dropdownView.bind('isEnabled').toMany(commands, 'isEnabled', (...areEnabled) => {\n            return areEnabled.some(isEnabled => isEnabled);\n        });\n        this.listenTo(dropdownView, 'execute', evt => {\n            editor.execute(evt.source.commandName);\n            editor.editing.view.focus();\n        });\n        return dropdownView;\n    }\n}\n// Adds an option to a list view.\n//\n// @param {module:table/tableui~DropdownOption} option A configuration option.\n// @param {module:core/editor/editor~Editor} editor\n// @param {Array.<module:core/command~Command>} commands The list of commands to update.\n// @param {Iterable.<module:ui/dropdown/utils~ListDropdownItemDefinition>} itemDefinitions\n// A collection of dropdown items to update with the given option.\nfunction addListOption(option, editor, commands, itemDefinitions) {\n    const model = option.model = new Model(option.model);\n    const {commandName, bindIsOn} = option.model;\n    if (option.type === 'button' || option.type === 'switchbutton') {\n        const command = editor.commands.get(commandName);\n        commands.push(command);\n        model.set({ commandName });\n        model.bind('isEnabled').to(command);\n        if (bindIsOn) {\n            model.bind('isOn').to(command, 'value');\n        }\n    }\n    model.set({ withText: true });\n    itemDefinitions.add(option);\n}","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M3 6v3h4V6H3zm0 4v3h4v-3H3zm0 4v3h4v-3H3zm5 3h4v-3H8v3zm5 0h4v-3h-4v3zm4-4v-3h-4v3h4zm0-4V6h-4v3h4zm1.5 8a1.5 1.5 0 01-1.5 1.5H3A1.5 1.5 0 011.5 17V4c.222-.863 1.068-1.5 2-1.5h13c.932 0 1.778.637 2 1.5v13zM12 13v-3H8v3h4zm0-4V6H8v3h4z\\\"/></svg>\"","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M2.5 1h15A1.5 1.5 0 0119 2.5v15a1.5 1.5 0 01-1.5 1.5h-15A1.5 1.5 0 011 17.5v-15A1.5 1.5 0 012.5 1zM2 2v16h16V2H2z\\\" opacity=\\\".6\\\"/><path d=\\\"M18 7v1H2V7h16zm0 5v1H2v-1h16z\\\" opacity=\\\".6\\\"/><path d=\\\"M14 1v18a1 1 0 01-1 1H7a1 1 0 01-1-1V1a1 1 0 011-1h6a1 1 0 011 1zm-2 1H8v4h4V2zm0 6H8v4h4V8zm0 6H8v4h4v-4z\\\"/></svg>\"","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M2.5 1h15A1.5 1.5 0 0119 2.5v15a1.5 1.5 0 01-1.5 1.5h-15A1.5 1.5 0 011 17.5v-15A1.5 1.5 0 012.5 1zM2 2v16h16V2H2z\\\" opacity=\\\".6\\\"/><path d=\\\"M7 2h1v16H7V2zm5 0h1v16h-1V2z\\\" opacity=\\\".6\\\"/><path d=\\\"M1 6h18a1 1 0 011 1v6a1 1 0 01-1 1H1a1 1 0 01-1-1V7a1 1 0 011-1zm1 2v4h4V8H2zm6 0v4h4V8H8zm6 0v4h4V8h-4z\\\"/></svg>\"","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M2.5 1h15A1.5 1.5 0 0119 2.5v15a1.5 1.5 0 01-1.5 1.5h-15A1.5 1.5 0 011 17.5v-15A1.5 1.5 0 012.5 1zM2 2v16h16V2H2z\\\" opacity=\\\".6\\\"/><path d=\\\"M7 2h1v16H7V2zm5 0h1v7h-1V2zm6 5v1H2V7h16zM8 12v1H2v-1h6z\\\" opacity=\\\".6\\\"/><path d=\\\"M7 7h12a1 1 0 011 1v11a1 1 0 01-1 1H7a1 1 0 01-1-1V8a1 1 0 011-1zm1 2v9h10V9H8z\\\"/></svg>\"","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @license Copyright (c) 2019, JDinABox All rights reserved.\n */\n// The editor creator to use.\nimport ClassicEditorBase from '@ckeditor/ckeditor5-editor-classic/src/classiceditor';\n\nimport Essentials from '@ckeditor/ckeditor5-essentials/src/essentials';\nimport UploadAdapter from '@ckeditor/ckeditor5-adapter-ckfinder/src/uploadadapter';\nimport Autoformat from '@ckeditor/ckeditor5-autoformat/src/autoformat';\nimport Bold from '@ckeditor/ckeditor5-basic-styles/src/bold';\nimport Italic from '@ckeditor/ckeditor5-basic-styles/src/italic';\nimport CodeBlock from '@ckeditor/ckeditor5-code-block/src/codeblock';\nimport BlockQuote from '@ckeditor/ckeditor5-block-quote/src/blockquote';\nimport CKFinder from '@ckeditor/ckeditor5-ckfinder/src/ckfinder';\nimport EasyImage from '@ckeditor/ckeditor5-easy-image/src/easyimage';\nimport Heading from '@ckeditor/ckeditor5-heading/src/heading';\nimport Image from '@ckeditor/ckeditor5-image/src/image';\nimport ImageCaption from '@ckeditor/ckeditor5-image/src/imagecaption';\nimport ImageStyle from '@ckeditor/ckeditor5-image/src/imagestyle';\nimport ImageToolbar from '@ckeditor/ckeditor5-image/src/imagetoolbar';\nimport ImageUpload from '@ckeditor/ckeditor5-image/src/imageupload';\nimport Link from '@ckeditor/ckeditor5-link/src/link';\nimport List from '@ckeditor/ckeditor5-list/src/list';\nimport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\nimport PasteFromOffice from '@ckeditor/ckeditor5-paste-from-office/src/pastefromoffice';\nimport GFMDataProcessor from '@ckeditor/ckeditor5-markdown-gfm/src/gfmdataprocessor';\nimport Table from '@ckeditor/ckeditor5-table/src/table';\nimport TableToolbar from '@ckeditor/ckeditor5-table/src/tabletoolbar';\n\nfunction Markdown( editor ) {\n\teditor.data.processor = new GFMDataProcessor();\n}\n\nexport default class MarkdownEditor extends ClassicEditorBase { }\n\n// Plugins to include in the build.\nMarkdownEditor.builtinPlugins = [\n\tEssentials,\n\tMarkdown,\n\tUploadAdapter,\n\tAutoformat,\n\tBold,\n\tItalic,\n\tCodeBlock,\n\tBlockQuote,\n\tCKFinder,\n\tEasyImage,\n\tHeading,\n\tImage,\n\tImageCaption,\n\tImageStyle,\n\tImageToolbar,\n\tImageUpload,\n\tLink,\n\tList,\n\t// MediaEmbed,\n\tParagraph,\n\tPasteFromOffice,\n\tTable,\n\tTableToolbar\n];\n\n// Editor configuration.\nMarkdownEditor.defaultConfig = {\n\ttoolbar: {\n\t\titems: [\n\t\t\t'heading',\n\t\t\t'|',\n\t\t\t'bold',\n\t\t\t'italic',\n\t\t\t'link',\n\t\t\t'codeBlock',\n\t\t\t'|',\n\t\t\t'bulletedList',\n\t\t\t'numberedList',\n\t\t\t'|',\n\t\t\t'imageUpload',\n\t\t\t'blockQuote',\n\t\t\t'insertTable',\n\t\t\t'|',\n\t\t\t'undo',\n\t\t\t'redo'\n\t\t]\n\t},\n\timage: {\n\t\ttoolbar: [\n\t\t\t'imageStyle:full',\n\t\t\t'imageStyle:side',\n\t\t\t'|',\n\t\t\t'imageTextAlternative'\n\t\t]\n\t},\n\ttable: {\n\t\tcontentToolbar: [\n\t\t\t'tableColumn',\n\t\t\t'tableRow',\n\t\t\t'mergeTableCells'\n\t\t]\n\t},\n\t// This value must be kept in sync with the language defined in webpack.config.js.\n\tlanguage: 'en'\n};\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module essentials/essentials\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport Clipboard from '@ckeditor/ckeditor5-clipboard/src/clipboard';\nimport Enter from '@ckeditor/ckeditor5-enter/src/enter';\nimport ShiftEnter from '@ckeditor/ckeditor5-enter/src/shiftenter';\nimport Typing from '@ckeditor/ckeditor5-typing/src/typing';\nimport Undo from '@ckeditor/ckeditor5-undo/src/undo';\n\n/**\n * A plugin including all essential editing features. It represents a set of features that enables similar functionalities\n * to a `<textarea>` element.\n *\n * It includes:\n *\n * * {@link module:clipboard/clipboard~Clipboard},\n * * {@link module:enter/enter~Enter},\n * * {@link module:enter/shiftenter~ShiftEnter},\n * * {@link module:typing/typing~Typing},\n * * {@link module:undo/undo~Undo}.\n *\n * This plugin set does not define any block-level containers (such as {@link module:paragraph/paragraph~Paragraph}).\n * If your editor is supposed to handle block content, make sure to include it.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Essentials extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ Clipboard, Enter, ShiftEnter, Typing, Undo ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Essentials';\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module basic-styles/bold\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport BoldEditing from './bold/boldediting';\nimport BoldUI from './bold/boldui';\n\n/**\n * The bold feature.\n *\n * For a detailed overview check the {@glink features/basic-styles Basic styles feature documentation}\n * and the {@glink api/basic-styles package page}.\n *\n * This is a \"glue\" plugin which loads the {@link module:basic-styles/bold/boldediting~BoldEditing bold editing feature}\n * and {@link module:basic-styles/bold/boldui~BoldUI bold UI feature}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Bold extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ BoldEditing, BoldUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Bold';\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module basic-styles/italic\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ItalicEditing from './italic/italicediting';\nimport ItalicUI from './italic/italicui';\n\n/**\n * The italic feature.\n *\n * For a detailed overview check the {@glink features/basic-styles Basic styles feature documentation}\n * and the {@glink api/basic-styles package page}.\n *\n * This is a \"glue\" plugin which loads the {@link module:basic-styles/italic/italicediting~ItalicEditing} and\n * {@link module:basic-styles/italic/italicui~ItalicUI} plugins.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Italic extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ItalicEditing, ItalicUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Italic';\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module code-block/codeblock\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport CodeBlockEditing from './codeblockediting';\nimport CodeBlockUI from './codeblockui';\n\n/**\n * The code block plugin.\n *\n * For more information about this feature check the {@glink api/code-block package page} and the\n * {@glink features/code-blocks code block feature guide}.\n *\n * This is a \"glue\" plugin that loads the {@link module:code-block/codeblockediting~CodeBlockEditing code block editing feature}\n * and the {@link module:code-block/codeblockui~CodeBlockUI code block UI feature}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class CodeBlock extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ CodeBlockEditing, CodeBlockUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'CodeBlock';\n\t}\n}\n\n/**\n * The configuration of the {@link module:code-block/codeblock~CodeBlock} feature.\n *\n * Read more in {@link module:code-block/codeblock~CodeBlockConfig}.\n *\n * @member {module:code-block/codeblock~CodeBlockConfig} module:core/editor/editorconfig~EditorConfig#codeBlock\n */\n\n/**\n * The configuration of the {@link module:code-block/codeblock~CodeBlock code block feature}.\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n *\t\t\t\tcodeBlock:  ... // The code block feature configuration.\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface CodeBlockConfig\n */\n\n/**\n * The code block language descriptor. See {@link module:code-block/codeblock~CodeBlockConfig#languages} to learn more.\n *\n *\t\t{\n *\t\t\t language: 'javascript',\n *\t\t\t label: 'JavaScript'\n *\t\t}\n *\n * @typedef {Object} module:code-block/codeblock~CodeBlockLanguageDefinition\n * @property {String} language The name of the language that will be stored in the model attribute. Also, when `class`\n * is not specified, it will be used to create the CSS class associated with the language (prefixed by \"language-\").\n * @property {String} label The human–readable label associated with the language and displayed in the UI.\n * @property {String} [class] The CSS class associated with the language. When not specified the `language`\n * property is used to create a class prefixed by \"language-\".\n */\n\n/**\n * The list of code languages available in the user interface to choose for a particular code block.\n *\n * The language of the code block is represented as a CSS class (by default prefixed by \"language-\") set on the\n * `<code>` element, both when editing and in the editor data. The CSS class associated with the language\n * can be used by third–party code syntax highlighters to detect and apply the correct highlighting.\n *\n * For instance, this language configuration:\n *\n *\t\tClassicEditor\n *\t\t\t.create( document.querySelector( '#editor' ), {\n *\t\t\t\tcodeBlock: {\n *\t\t\t\t\tlanguages: [\n *\t\t\t\t\t\t// ...\n *\t\t\t\t\t\t{ language: 'javascript', label: 'JavaScript' },\n *\t\t\t\t\t\t// ...\n *\t\t\t\t\t]\n *\t\t\t\t}\n *\t\t} )\n *\t\t.then( ... )\n *\t\t.catch( ... );\n *\n * will result in the following structure of JavaScript code blocks in the editor editing and data:\n *\n *\t\t<pre><code class=\"language-javascript\">window.alert( 'Hello world!' )</code></pre>\n *\n * You can customize the CSS class by specifying an optional `class` property in the language definition.\n * You can set **multiple classes** but **only the first one** will be used as defining language class:\n *\n *\t\tClassicEditor\n *\t\t\t.create( document.querySelector( '#editor' ), {\n *\t\t\t\tcodeBlock: {\n *\t\t\t\t\tlanguages: [\n *\t\t\t\t\t\t// Do not render the CSS class for the plain text code blocks.\n *\t\t\t\t\t\t{ language: 'plaintext', label: 'Plain text', class: '' },\n *\n *\t\t\t\t\t\t// Use the \"php-code\" class for PHP code blocks.\n *\t\t\t\t\t\t{ language: 'php', label: 'PHP', class: 'php-code' },\n *\n *\t\t\t\t\t\t// Use the \"js\" class for JavaScript code blocks.\n *\t\t\t\t\t\t// Note that only the first (\"js\") class will determine the language of the block when loading data.\n *\t\t\t\t\t\t{ language: 'javascript', label: 'JavaScript', class: 'js javascript js-code' },\n *\n *\t\t\t\t\t\t// Python code blocks will have the default \"language-python\" CSS class.\n *\t\t\t\t\t\t{ language: 'python', label: 'Python' }\n *\t\t\t\t\t]\n *\t\t\t\t}\n *\t\t} )\n *\t\t.then( ... )\n *\t\t.catch( ... );\n *\n * The default value of the language configuration is as follows:\n *\n *\t\tlanguages: [\n *\t\t\t{ language: 'plaintext', label: 'Plain text' }, // The default language.\n *\t\t\t{ language: 'c', label: 'C' },\n *\t\t\t{ language: 'cs', label: 'C#' },\n *\t\t\t{ language: 'cpp', label: 'C++' },\n *\t\t\t{ language: 'css', label: 'CSS' },\n *\t\t\t{ language: 'diff', label: 'Diff' },\n *\t\t\t{ language: 'xml', label: 'HTML/XML' },\n *\t\t\t{ language: 'java', label: 'Java' },\n *\t\t\t{ language: 'javascript', label: 'JavaScript' },\n *\t\t\t{ language: 'php', label: 'PHP' },\n *\t\t\t{ language: 'python', label: 'Python' },\n *\t\t\t{ language: 'ruby', label: 'Ruby' },\n *\t\t\t{ language: 'typescript', label: 'TypeScript' },\n *\t\t]\n *\n * **Note**: The first language defined in the configuration is considered the default one. This means it will be\n * applied to code blocks loaded from the data that have no CSS `class` specified (or no matching `class` in the configuration).\n * It will also be used when creating new code blocks using the main UI button. By default it is \"Plain text\".\n *\n * @member {Array.<module:code-block/codeblock~CodeBlockLanguageDefinition>} module:code-block/codeblock~CodeBlockConfig#languages\n */\n\n/**\n * A sequence of characters inserted or removed from the code block lines when its indentation\n * is changed by the user, for instance, using <kbd>Tab</kbd> and <kbd>Shift</kbd>+<kbd>Tab</kbd> keys.\n *\n * The default value is a single tab character (\"\t\", `\\u0009` in Unicode).\n *\n * This configuration is used by `indentCodeBlock` and `outdentCodeBlock` commands (instances of\n * {@link module:code-block/indentcodeblockcommand~IndentCodeBlockCommand}).\n *\n * **Note**: Setting this configuration to `false` will disable the code block indentation commands\n * and associated keystrokes.\n *\n * @member {String} module:code-block/codeblock~CodeBlockConfig#indentSequence\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module block-quote/blockquote\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport BlockQuoteEditing from './blockquoteediting';\nimport BlockQuoteUI from './blockquoteui';\n\n/**\n * The block quote plugin.\n *\n * For more information about this feature check the {@glink api/block-quote package page}.\n *\n * This is a \"glue\" plugin which loads the {@link module:block-quote/blockquoteediting~BlockQuoteEditing block quote editing feature}\n * and {@link module:block-quote/blockquoteui~BlockQuoteUI block quote UI feature}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class BlockQuote extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ BlockQuoteEditing, BlockQuoteUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'BlockQuote';\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ckfinder/ckfinder\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport CKFinderUI from './ckfinderui';\nimport CKFinderEditing from './ckfinderediting';\nimport CKFinderUploadAdapter from '@ckeditor/ckeditor5-adapter-ckfinder/src/uploadadapter';\n\n/**\n * The CKFinder feature, a bridge between the CKEditor 5 WYSIWYG editor and the\n * [CKFinder](https://ckeditor.com/ckfinder) file manager and uploader.\n *\n * This is a \"glue\" plugin which enables:\n *\n * * {@link module:ckfinder/ckfinderediting~CKFinderEditing},\n * * {@link module:ckfinder/ckfinderui~CKFinderUI},\n * * {@link module:adapter-ckfinder/uploadadapter~CKFinderUploadAdapter}.\n *\n * See the {@glink features/image-upload/ckfinder \"CKFinder integration\" guide} to learn how to configure\n * and use this feature.\n *\n * Check out the {@glink features/image-upload/image-upload comprehensive \"Image upload\" guide} to learn about\n * other ways to upload images into CKEditor 5.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class CKFinder extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'CKFinder';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ CKFinderEditing, CKFinderUI, CKFinderUploadAdapter ];\n\t}\n}\n\n/**\n * The configuration of the {@link module:ckfinder/ckfinder~CKFinder CKFinder feature}.\n *\n * Read more in {@link module:ckfinder/ckfinder~CKFinderConfig}.\n *\n * @member {module:ckfinder/ckfinder~CKFinderConfig} module:core/editor/editorconfig~EditorConfig#ckfinder\n */\n\n/**\n * The configuration of the {@link module:ckfinder/ckfinder~CKFinder CKFinder feature}\n * and its {@link module:adapter-ckfinder/uploadadapter~CKFinderUploadAdapter upload adapter}.\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n *\t\t\t\tckfinder: {\n *\t\t\t\t\toptions: {\n *\t\t\t\t\t\tresourceType: 'Images'\n *\t\t\t\t\t}\n *\t\t\t\t}\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface CKFinderConfig\n */\n\n/**\n * The configuration options passed to the CKFinder file manager instance.\n *\n * Check the file manager [documentation](https://ckeditor.com/docs/ckfinder/ckfinder3/#!/api/CKFinder.Config-cfg-language)\n * for the complete list of options.\n *\n * @member {Object} module:ckfinder/ckfinder~CKFinderConfig#options\n */\n\n/**\n * The type of the CKFinder opener method.\n *\n * Supported types are:\n *\n * * `'modal'` &ndash; Opens CKFinder in a modal,\n * * `'popup'` &ndash; Opens CKFinder in a new \"pop-up\" window.\n *\n * Defaults to `'modal'`.\n *\n * @member {String} module:ckfinder/ckfinder~CKFinderConfig#openerMethod\n */\n\n/**\n * The path (URL) to the connector which handles the file upload in CKFinder file manager.\n * When specified, it enables the automatic upload of resources such as images inserted into the content.\n *\n * For instance, to use CKFinder's\n * [quick upload](https://ckeditor.com/docs/ckfinder/ckfinder3-php/commands.html#command_quick_upload)\n * command, your can use the following (or similar) path:\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n *\t\t\t\tckfinder: {\n *\t\t\t\t\tuploadUrl: '/ckfinder/core/connector/php/connector.php?command=QuickUpload&type=Files&responseType=json'\n *\t\t\t\t}\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * Used by the {@link module:adapter-ckfinder/uploadadapter~CKFinderUploadAdapter upload adapter}.\n *\n * @member {String} module:ckfinder/ckfinder~CKFinderConfig#uploadUrl\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module easy-image/easyimage\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport CloudServicesUploadAdapter from './cloudservicesuploadadapter';\nimport Image from '@ckeditor/ckeditor5-image/src/image';\nimport ImageUpload from '@ckeditor/ckeditor5-image/src/imageupload';\n\n/**\n * The Easy Image feature, which makes the image upload in CKEditor 5 possible with virtually zero\n * server setup. A part of the [CKEditor Cloud Services](https://ckeditor.com/ckeditor-cloud-services/)\n * family.\n *\n * This is a \"glue\" plugin which enables:\n *\n * * {@link module:image/image~Image},\n * * {@link module:image/imageupload~ImageUpload},\n * * {@link module:easy-image/cloudservicesuploadadapter~CloudServicesUploadAdapter}.\n *\n * See the {@glink features/image-upload/easy-image \"Easy Image integration\" guide} to learn how to configure\n * and use this feature.\n *\n * Check out the {@glink features/image-upload/image-upload comprehensive \"Image upload\" guide} to learn about\n * other ways to upload images into CKEditor 5.\n *\n * **Note**: After enabling the Easy Image plugin you need to configure the\n * [CKEditor Cloud Services](https://ckeditor.com/ckeditor-cloud-services/)\n * integration through {@link module:cloud-services/cloudservices~CloudServicesConfig `config.cloudServices`}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class EasyImage extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [\n\t\t\tCloudServicesUploadAdapter,\n\t\t\tImage,\n\t\t\tImageUpload\n\t\t];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'EasyImage';\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module heading/heading\n */\n\nimport HeadingEditing from './headingediting';\nimport HeadingUI from './headingui';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport '../theme/heading.css';\n\n/**\n * The headings feature.\n *\n * For a detailed overview, check the {@glink features/headings Headings feature documentation}\n * and the {@glink api/heading package page}.\n *\n * This is a \"glue\" plugin which loads the {@link module:heading/headingediting~HeadingEditing heading editing feature}\n * and {@link module:heading/headingui~HeadingUI heading UI feature}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Heading extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ HeadingEditing, HeadingUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Heading';\n\t}\n}\n\n/**\n * The configuration of the heading feature. Introduced by the {@link module:heading/headingediting~HeadingEditing} feature.\n *\n * Read more in {@link module:heading/heading~HeadingConfig}.\n *\n * @member {module:heading/heading~HeadingConfig} module:core/editor/editorconfig~EditorConfig#heading\n */\n\n/**\n * The configuration of the heading feature.\n * The option is used by the {@link module:heading/headingediting~HeadingEditing} feature.\n *\n *\t\tClassicEditor\n *\t\t\t.create( {\n * \t\t\t\theading: ... // Heading feature config.\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface HeadingConfig\n */\n\n/**\n * The available heading options.\n *\n * The default value is:\n *\n *\t\tconst headingConfig = {\n *\t\t\toptions: [\n *\t\t\t\t{ model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },\n *\t\t\t\t{ model: 'heading1', view: 'h2', title: 'Heading 1', class: 'ck-heading_heading1' },\n *\t\t\t\t{ model: 'heading2', view: 'h3', title: 'Heading 2', class: 'ck-heading_heading2' },\n *\t\t\t\t{ model: 'heading3', view: 'h4', title: 'Heading 3', class: 'ck-heading_heading3' }\n *\t\t\t]\n *\t\t};\n *\n * It defines 3 levels of headings. In the editor model they will use `heading1`, `heading2`, and `heading3` elements.\n * Their respective view elements (so the elements output by the editor) will be: `h2`, `h3`, and `h4`. This means that\n * if you choose \"Heading 1\" in the headings dropdown the editor will turn the current block to `<heading1>` in the model\n * which will result in rendering (and outputting to data) the `<h2>` element.\n *\n * The `title` and `class` properties will be used by the `headings` dropdown to render available options.\n * Usually, the first option in the headings dropdown is the \"Paragraph\" option, hence it's also defined on the list.\n * However, you don't need to define its view representation because it's handled by\n * the {@link module:paragraph/paragraph~Paragraph} feature (which is required by\n * the {@link module:heading/headingediting~HeadingEditing} feature).\n *\n * You can **read more** about configuring heading levels and **see more examples** in\n * the {@glink features/headings Headings} guide.\n *\n * Note: In the model you should always start from `heading1`, regardless of how the headings are represented in the view.\n * That's assumption is used by features like {@link module:autoformat/autoformat~Autoformat} to know which element\n * they should use when applying the first level heading.\n *\n * The defined headings are also available as values passed to the `'heading'` command under their model names.\n * For example, the below code will apply `<heading1>` to the current selection:\n *\n *\t\teditor.execute( 'heading', { value: 'heading1' } );\n *\n * @member {Array.<module:heading/heading~HeadingOption>} module:heading/heading~HeadingConfig#options\n */\n\n/**\n * Heading option descriptor.\n *\n * @typedef {Object} module:heading/heading~HeadingOption\n * @property {String} model Name of the model element to convert.\n * @property {module:engine/view/elementdefinition~ElementDefinition} view Definition of a view element to convert from/to.\n * @property {String} title The user-readable title of the option.\n * @property {String} class The class which will be added to the dropdown item representing this option.\n * @property {String} [icon] Icon used by {@link module:heading/headingbuttonsui~HeadingButtonsUI}. It can be omitted when using\n * the default configuration.\n * @extends module:engine/conversion/conversion~ConverterDefinition\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imagecaption\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ImageCaptionEditing from './imagecaption/imagecaptionediting';\n\nimport '../theme/imagecaption.css';\n\n/**\n * The image caption plugin.\n *\n * For a detailed overview, check the {@glink features/image#image-captions image caption} documentation.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageCaption extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ImageCaptionEditing ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ImageCaption';\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imagestyle\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ImageStyleEditing from './imagestyle/imagestyleediting';\nimport ImageStyleUI from './imagestyle/imagestyleui';\n\n/**\n * The image style plugin.\n *\n * For a detailed overview, check the {@glink features/image#image-styles image styles} documentation.\n *\n * This is a \"glue\" plugin which loads the {@link module:image/imagestyle/imagestyleediting~ImageStyleEditing}\n * and {@link module:image/imagestyle/imagestyleui~ImageStyleUI} plugins.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageStyle extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ImageStyleEditing, ImageStyleUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ImageStyle';\n\t}\n}\n\n/**\n * Available image styles.\n *\n * The default value is:\n *\n *\t\tconst imageConfig = {\n *\t\t\tstyles: [ 'full', 'side' ]\n *\t\t};\n *\n * which configures two default styles:\n *\n *  * the \"full\" style which does not apply any class, e.g. for images styled to span 100% width of the content,\n *  * the \"side\" style with the `.image-style-side` CSS class.\n *\n * See {@link module:image/imagestyle/utils~defaultStyles} to learn more about default\n * styles provided by the image feature.\n *\n * The {@link module:image/imagestyle/utils~defaultStyles default styles} can be customized,\n * e.g. to change the icon, title or CSS class of the style. The feature also provides several\n * {@link module:image/imagestyle/utils~defaultIcons default icons} to choose from.\n *\n *\t\timport customIcon from 'custom-icon.svg';\n *\n *\t\t// ...\n *\n *\t\tconst imageConfig = {\n *\t\t\tstyles: [\n *\t\t\t\t// This will only customize the icon of the \"full\" style.\n *\t\t\t\t// Note: 'right' is one of default icons provided by the feature.\n *\t\t\t\t{ name: 'full', icon: 'right' },\n *\n *\t\t\t\t// This will customize the icon, title and CSS class of the default \"side\" style.\n *\t\t\t\t{ name: 'side', icon: customIcon, title: 'My side style', className: 'custom-side-image' }\n *\t\t\t]\n *\t\t};\n *\n * If none of the default styles is good enough, it is possible to define independent custom styles, too:\n *\n *\t\timport fullSizeIcon from '@ckeditor/ckeditor5-core/theme/icons/object-center.svg';\n *\t\timport sideIcon from '@ckeditor/ckeditor5-core/theme/icons/object-right.svg';\n *\n *\t\t// ...\n *\n *\t\tconst imageConfig = {\n *\t\t\tstyles: [\n *\t\t\t\t// A completely custom full size style with no class, used as a default.\n *\t\t\t\t{ name: 'fullSize', title: 'Full size', icon: fullSizeIcon, isDefault: true },\n *\n *\t\t\t\t{ name: 'side', title: 'To the side', icon: sideIcon, className: 'side-image' }\n *\t\t\t]\n *\t\t};\n *\n * Note: Setting `title` to one of {@link module:image/imagestyle/imagestyleui~ImageStyleUI#localizedDefaultStylesTitles}\n * will automatically translate it to the language of the editor.\n *\n * Read more about styling images in the {@glink features/image#image-styles Image styles guide}.\n *\n * The feature creates commands based on defined styles, so you can change the style of a selected image by executing\n * the following command:\n *\n *\t\teditor.execute( 'imageStyle' { value: 'side' } );\n *\n * The feature also creates buttons that execute the commands. So, assuming that you use the\n * default image styles setting, you can {@link module:image/image~ImageConfig#toolbar configure the image toolbar}\n * (or any other toolbar) to contain these options:\n *\n *\t\tconst imageConfig = {\n *\t\t\ttoolbar: [ 'imageStyle:full', 'imageStyle:side' ]\n *\t\t};\n *\n * @member {Array.<module:image/imagestyle/imagestyleediting~ImageStyleFormat>} module:image/image~ImageConfig#styles\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module image/imagetoolbar\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport { getSelectedImageWidget } from './image/utils';\nimport WidgetToolbarRepository from '@ckeditor/ckeditor5-widget/src/widgettoolbarrepository';\n/**\n * The image toolbar plugin. It creates and manages the image toolbar (the toolbar displayed when an image is selected).\n *\n * For a detailed overview, check the {@glink features/image#image-contextual-toolbar image contextual toolbar} documentation.\n *\n * Instances of toolbar components (e.g. buttons) are created using the editor's\n * {@link module:ui/componentfactory~ComponentFactory component factory}\n * based on the {@link module:image/image~ImageConfig#toolbar `image.toolbar` configuration option}.\n *\n * The toolbar uses the {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageToolbar extends Plugin {\n    /**\n\t * @inheritDoc\n\t */\n    static get requires() {\n        return [WidgetToolbarRepository];\n    }\n    /**\n\t * @inheritDoc\n\t */\n    static get pluginName() {\n        return 'ImageToolbar';\n    }\n    /**\n\t * @inheritDoc\n\t */\n    afterInit() {\n        const editor = this.editor;\n        const t = editor.t;\n        const widgetToolbarRepository = editor.plugins.get(WidgetToolbarRepository);\n        widgetToolbarRepository.register('image', {\n            ariaLabel: t('b'),\n            items: editor.config.get('image.toolbar') || [],\n            getRelatedElement: getSelectedImageWidget\n        });\n    }\n}    /**\n * Items to be placed in the image toolbar.\n * This option is used by the {@link module:image/imagetoolbar~ImageToolbar} feature.\n *\n * Assuming that you use the following features:\n *\n * * {@link module:image/imagestyle~ImageStyle} (with a default configuration),\n * * {@link module:image/imagetextalternative~ImageTextAlternative},\n *\n * three toolbar items will be available in {@link module:ui/componentfactory~ComponentFactory}:\n * `'imageStyle:full'`, `'imageStyle:side'`, and `'imageTextAlternative'` so you can configure the toolbar like this:\n *\n *\t\tconst imageConfig = {\n *\t\t\ttoolbar: [ 'imageStyle:full', 'imageStyle:side', '|', 'imageTextAlternative' ]\n *\t\t};\n *\n * Of course, the same buttons can also be used in the\n * {@link module:core/editor/editorconfig~EditorConfig#toolbar main editor toolbar}.\n *\n * Read more about configuring toolbar in {@link module:core/editor/editorconfig~EditorConfig#toolbar}.\n *\n * @member {Array.<String>} module:image/image~ImageConfig#toolbar\n */","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module link/link\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport LinkEditing from './linkediting';\nimport LinkUI from './linkui';\n\n/**\n * The link plugin.\n *\n * This is a \"glue\" plugin that loads the {@link module:link/linkediting~LinkEditing link editing feature}\n * and {@link module:link/linkui~LinkUI link UI feature}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Link extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ LinkEditing, LinkUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Link';\n\t}\n}\n\n/**\n * The configuration of the {@link module:link/link~Link} feature.\n *\n * Read more in {@link module:link/link~LinkConfig}.\n *\n * @member {module:link/link~LinkConfig} module:core/editor/editorconfig~EditorConfig#link\n */\n\n/**\n * The configuration of the {@link module:link/link~Link link feature}.\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n * \t\t\t\tlink:  ... // Link feature configuration.\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n * @interface LinkConfig\n */\n\n/**\n * When set to `true`, the `target=\"blank\"` and `rel=\"noopener noreferrer\"` attributes are automatically added to all external links\n * in the editor. \"External links\" are all links in the editor content starting with `http`, `https`, or `//`.\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n *\t\t\t\tlink: {\n *\t\t\t\t\taddTargetToExternalLinks: true\n *\t\t\t\t}\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * Internally, this option activates a predefined {@link module:link/link~LinkConfig#decorators automatic link decorator}\n * that extends all external links with the `target` and `rel` attributes.\n *\n * **Note**: To control the `target` and `rel` attributes of specific links in the edited content, a dedicated\n * {@link module:link/link~LinkDecoratorManualDefinition manual} decorator must be defined in the\n * {@link module:link/link~LinkConfig#decorators `config.link.decorators`} array. In such scenario,\n * the `config.link.addTargetToExternalLinks` option should remain `undefined` or `false` to not interfere with the manual decorator.\n *\n * It is possible to add other {@link module:link/link~LinkDecoratorAutomaticDefinition automatic}\n * or {@link module:link/link~LinkDecoratorManualDefinition manual} link decorators when this option is active.\n *\n * More information about decorators can be found in the {@link module:link/link~LinkConfig#decorators decorators configuration}\n * reference.\n *\n * @default false\n * @member {Boolean} module:link/link~LinkConfig#addTargetToExternalLinks\n */\n\n/**\n * Decorators provide an easy way to configure and manage additional link attributes in the editor content. There are\n * two types of link decorators:\n *\n * * {@link module:link/link~LinkDecoratorAutomaticDefinition Automatic} &ndash; They match links against pre–defined rules and\n * manage their attributes based on the results.\n * * {@link module:link/link~LinkDecoratorManualDefinition Manual} &ndash; They allow users to control link attributes individually,\n *  using the editor UI.\n *\n * Link decorators are defined as objects with key-value pairs, where the key is the name provided for a given decorator and the\n * value is the decorator definition.\n *\n * The name of the decorator also corresponds to the {@glink framework/guides/architecture/editing-engine#text-attributes text attribute}\n * in the model. For instance, the `isExternal` decorator below is represented as a `linkIsExternal` attribute in the model.\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n *\t\t\t\tlink: {\n *\t\t\t\t\tdecorators: {\n *\t\t\t\t\t\tisExternal: {\n *\t\t\t\t\t\t\tmode: 'automatic',\n *\t\t\t\t\t\t\tcallback: url => url.startsWith( 'http://' ),\n *\t\t\t\t\t\t\tattributes: {\n *\t\t\t\t\t\t\t\ttarget: '_blank',\n *\t\t\t\t\t\t\t\trel: 'noopener noreferrer'\n *\t\t\t\t\t\t\t}\n *\t\t\t\t\t\t},\n *\t\t\t\t\t\tisDownloadable: {\n *\t\t\t\t\t\t\tmode: 'manual',\n *\t\t\t\t\t\t\tlabel: 'Downloadable',\n *\t\t\t\t\t\t\tattributes: {\n *\t\t\t\t\t\t\t\tdownload: 'file.png',\n *\t\t\t\t\t\t\t}\n *\t\t\t\t\t\t},\n *\t\t\t\t\t\t// ...\n *\t\t\t\t\t}\n *\t\t\t\t}\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * To learn more about the configuration syntax, check out the {@link module:link/link~LinkDecoratorAutomaticDefinition automatic}\n * and {@link module:link/link~LinkDecoratorManualDefinition manual} decorator option reference.\n *\n * **Warning:** Currently, link decorators work independently of one another and no conflict resolution mechanism exists.\n * For example, configuring the `target` attribute using both an automatic and a manual decorator at the same time could end up with\n * quirky results. The same applies if multiple manual or automatic decorators were defined for the same attribute.\n *\n * **Note**: Since the `target` attribute management for external links is a common use case, there is a predefined automatic decorator\n * dedicated for that purpose which can be enabled by turning a single option on. Check out the\n * {@link module:link/link~LinkConfig#addTargetToExternalLinks `config.link.addTargetToExternalLinks`}\n * configuration description to learn more.\n *\n * See also the {@glink features/link#custom-link-attributes-decorators link feature guide} for more information.\n *\n * @member {Object.<String, module:link/link~LinkDecoratorDefinition>} module:link/link~LinkConfig#decorators\n */\n\n/**\n * Represents a link decorator definition ({@link module:link/link~LinkDecoratorManualDefinition `'manual'`}\n * or {@link module:link/link~LinkDecoratorAutomaticDefinition `'automatic'`}).\n *\n * @interface LinkDecoratorDefinition\n */\n\n/**\n * Link decorator type.\n *\n * Check out the {@glink features/link#custom-link-attributes-decorators link feature guide} for more information.\n *\n * @member {'manual'|'automatic'} module:link/link~LinkDecoratorDefinition#mode\n */\n\n/**\n * Describes an automatic {@link module:link/link~LinkConfig#decorators link decorator}. This decorator type matches\n * all links in the editor content against a function that decides whether the link should receive a pre–defined set of attributes.\n *\n * It takes an object with key-value pairs of attributes and a callback function that must return a Boolean value based on the link's\n * `href` (URL). When the callback returns `true`, attributes are applied to the link.\n *\n * For example, to add the `target=\"_blank\"` attribute to all links in the editor starting with `http://`, the\n * configuration could look like this:\n *\n *\t\t{\n *\t\t\tmode: 'automatic',\n *\t\t\tcallback: url => url.startsWith( 'http://' ),\n *\t\t\tattributes: {\n *\t\t\t\ttarget: '_blank'\n *\t\t\t}\n *\t\t}\n *\n * **Note**: Since the `target` attribute management for external links is a common use case, there is a predefined automatic decorator\n * dedicated for that purpose that can be enabled by turning a single option on. Check out the\n * {@link module:link/link~LinkConfig#addTargetToExternalLinks `config.link.addTargetToExternalLinks`}\n * configuration description to learn more.\n *\n * @typedef {Object} module:link/link~LinkDecoratorAutomaticDefinition\n * @property {'automatic'} mode Link decorator type. It is `'automatic'` for all automatic decorators.\n * @property {Function} callback Takes a `url` as a parameter and returns `true` if the `attributes` should be applied to the link.\n * @property {Object} attributes Key-value pairs used as link attributes added to the output during the\n * {@glink framework/guides/architecture/editing-engine#conversion downcasting}.\n * Attributes should follow the {@link module:engine/view/elementdefinition~ElementDefinition} syntax.\n */\n\n/**\n * Describes a manual {@link module:link/link~LinkConfig#decorators link decorator}. This decorator type is represented in\n * the link feature's {@link module:link/linkui user interface} as a switch that the user can use to control the presence\n * of a predefined set of attributes.\n *\n * For instance, to allow the users to manually control the presence of the `target=\"_blank\"` and\n * `rel=\"noopener noreferrer\"` attributes on specific links, the decorator could look as follows:\n *\n *\t\t{\n *\t\t\tmode: 'manual',\n *\t\t\tlabel: 'Open in a new tab',\n *\t\t\tattributes: {\n *\t\t\t\ttarget: '_blank',\n *\t\t\t\trel: 'noopener noreferrer'\n *\t\t\t}\n *\t\t}\n *\n * @typedef {Object} module:link/link~LinkDecoratorManualDefinition\n * @property {'manual'} mode Link decorator type. It is `'manual'` for all manual decorators.\n * @property {String} label The label of the UI button that the user can use to control the presence of link attributes.\n * @property {Object} attributes Key-value pairs used as link attributes added to the output during the\n * {@glink framework/guides/architecture/editing-engine#conversion downcasting}.\n * Attributes should follow the {@link module:engine/view/elementdefinition~ElementDefinition} syntax.\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module list/list\n */\n\nimport ListEditing from './listediting';\nimport ListUI from './listui';\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\n/**\n * The list feature.\n *\n * This is a \"glue\" plugin that loads the {@link module:list/listediting~ListEditing list editing feature}\n * and {@link module:list/listui~ListUI list UI feature}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class List extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ListEditing, ListUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'List';\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module paste-from-office/pastefromoffice\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport GoogleDocsNormalizer from './normalizers/googledocsnormalizer';\nimport MSWordNormalizer from './normalizers/mswordnormalizer';\nimport Clipboard from '@ckeditor/ckeditor5-clipboard/src/clipboard';\n\n/**\n * The Paste from Office plugin.\n *\n * This plugin handles content pasted from Office apps and transforms it (if necessary)\n * to a valid structure which can then be understood by the editor features.\n *\n * Transformation is made by a set of predefined {@link module:paste-from-office/normalizer~Normalizer normalizers}.\n * This plugin includes following normalizers:\n *   * {@link module:paste-from-office/normalizers/mswordnormalizer~MSWordNormalizer Microsoft Word normalizer}\n *   * {@link module:paste-from-office/normalizers/googledocsnormalizer~GoogleDocsNormalizer Google Docs normalizer}\n *\n * For more information about this feature check the {@glink api/paste-from-office package page}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class PasteFromOffice extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'PasteFromOffice';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ Clipboard ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst normalizers = [];\n\n\t\tnormalizers.push( new MSWordNormalizer() );\n\t\tnormalizers.push( new GoogleDocsNormalizer() );\n\n\t\teditor.plugins.get( 'Clipboard' ).on(\n\t\t\t'inputTransformation',\n\t\t\t( evt, data ) => {\n\t\t\t\tif ( data.isTransformedWithPasteFromOffice ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst htmlString = data.dataTransfer.getData( 'text/html' );\n\t\t\t\tconst activeNormalizer = normalizers.find( normalizer => normalizer.isActive( htmlString ) );\n\n\t\t\t\tif ( activeNormalizer ) {\n\t\t\t\t\tactiveNormalizer.execute( data );\n\n\t\t\t\t\tdata.isTransformedWithPasteFromOffice = true;\n\t\t\t\t}\n\t\t\t},\n\t\t\t{ priority: 'high' }\n\t\t);\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/table\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport TableEditing from './tableediting';\nimport TableUI from './tableui';\nimport Widget from '@ckeditor/ckeditor5-widget/src/widget';\n\nimport '../theme/table.css';\n\n/**\n * The table plugin.\n *\n * For a detailed overview, check the {@glink features/table Table feature documentation}.\n *\n * This is a \"glue\" plugin that loads the {@link module:table/tableediting~TableEditing table editing feature}\n * and {@link module:table/tableui~TableUI table UI feature}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Table extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ TableEditing, TableUI, Widget ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Table';\n\t}\n}\n\n/**\n * The configuration of the table feature. Used by the table feature in the `@ckeditor/ckeditor5-table` package.\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n * \t\t\t\ttable: ... // Table feature options.\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface TableConfig\n */\n\n/**\n * The configuration of the {@link module:table/table~Table} feature.\n *\n * Read more in {@link module:table/table~TableConfig}.\n *\n * @member {module:table/table~TableConfig} module:core/editor/editorconfig~EditorConfig#table\n */\n\n/**\n * An array of color definitions (either strings or objects).\n *\n *\t\tconst colors = [\n *\t\t\t{\n *\t\t\t\tcolor: 'hsl(0, 0%, 60%)',\n *\t\t\t\tlabel: 'Grey'\n *\t\t\t},\n *\t\t\t'hsl(0, 0%, 80%)',\n *\t\t\t{\n *\t\t\t\tcolor: 'hsl(0, 0%, 90%)',\n *\t\t\t\tlabel: 'Light grey'\n *\t\t\t},\n *\t\t\t{\n *\t\t\t\tcolor: 'hsl(0, 0%, 100%)',\n *\t\t\t\tlabel: 'White',\n *\t\t\t\thasBorder: true\n *\t\t\t},\n *\t\t\t'#FF0000'\n *\t\t]\n *\n * Usually used as a configuration parameter, for instance in\n * {@link module:table/table~TableConfig#tableProperties `config.table.tableProperties`}\n * or {@link module:table/table~TableConfig#tableCellProperties `config.table.tableCellProperties`}.\n *\n * @typedef {Array.<String|Object>} module:table/table~TableColorConfig\n */\n","/**\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module table/tabletoolbar\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport {\n    getSelectedTableWidget,\n    getTableWidgetAncestor\n} from './utils';\nimport WidgetToolbarRepository from '@ckeditor/ckeditor5-widget/src/widgettoolbarrepository';\n/**\n * The table toolbar class. It creates toolbars for the table feature and its content (for now only for the table cell content).\n *\n * The table toolbar shows up when a table widget is selected. Its components (e.g. buttons) are created based on the\n * {@link module:table/table~TableConfig#tableToolbar `table.tableToolbar` configuration option}.\n *\n * Table content toolbar shows up when the selection is inside the content of a table. It creates its component based on the\n * {@link module:table/table~TableConfig#contentToolbar `table.contentToolbar` configuration option}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class TableToolbar extends Plugin {\n    /**\n\t * @inheritDoc\n\t */\n    static get requires() {\n        return [WidgetToolbarRepository];\n    }\n    /**\n\t * @inheritDoc\n\t */\n    static get pluginName() {\n        return 'TableToolbar';\n    }\n    /**\n\t * @inheritDoc\n\t */\n    afterInit() {\n        const editor = this.editor;\n        const t = editor.t;\n        const widgetToolbarRepository = editor.plugins.get(WidgetToolbarRepository);\n        const tableContentToolbarItems = editor.config.get('table.contentToolbar');\n        const tableToolbarItems = editor.config.get('table.tableToolbar');\n        if (tableContentToolbarItems) {\n            widgetToolbarRepository.register('tableContent', {\n                ariaLabel: t('c'),\n                items: tableContentToolbarItems,\n                getRelatedElement: getTableWidgetAncestor\n            });\n        }\n        if (tableToolbarItems) {\n            widgetToolbarRepository.register('table', {\n                ariaLabel: t('c'),\n                items: tableToolbarItems,\n                getRelatedElement: getSelectedTableWidget\n            });\n        }\n    }\n}    /**\n * Items to be placed in the table content toolbar.\n * The {@link module:table/tabletoolbar~TableToolbar} plugin is required to make this toolbar work.\n *\n * Assuming that you use the {@link module:table/tableui~TableUI} feature, the following toolbar items will be available\n * in {@link module:ui/componentfactory~ComponentFactory}:\n *\n * * `'tableRow'`,\n * * `'tableColumn'`,\n * * `'mergeTableCells'`.\n *\n * You can thus configure the toolbar like this:\n *\n *\t\tconst tableConfig = {\n *\t\t\tcontentToolbar: [ 'tableRow', 'tableColumn', 'mergeTableCells' ]\n *\t\t};\n *\n * Of course, the same buttons can also be used in the\n * {@link module:core/editor/editorconfig~EditorConfig#toolbar main editor toolbar}.\n *\n * Read more about configuring the toolbar in {@link module:core/editor/editorconfig~EditorConfig#toolbar}.\n *\n * @member {Array.<String>} module:table/table~TableConfig#contentToolbar\n */\n     /**\n * Items to be placed in the table toolbar.\n * The {@link module:table/tabletoolbar~TableToolbar} plugin is required to make this toolbar work.\n *\n * You can thus configure the toolbar like this:\n *\n *\t\tconst tableConfig = {\n *\t\t\ttableToolbar: [ 'blockQuote' ]\n *\t\t};\n *\n * Of course, the same buttons can also be used in the\n * {@link module:core/editor/editorconfig~EditorConfig#toolbar main editor toolbar}.\n *\n * Read more about configuring the toolbar in {@link module:core/editor/editorconfig~EditorConfig#toolbar}.\n *\n * @member {Array.<String>} module:table/table~TableConfig#tableToolbar\n */"],"sourceRoot":""}