{"version":3,"sources":["webpack:///../ckeditor5-engine/src/view/writer.js","webpack:///../ckeditor5-utils/src/uid.js","webpack:///../ckeditor5-utils/src/lib/lodash/rest.js","webpack:///../ckeditor5-engine/src/model/position.js","webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap ecb096a2104482aaa84d","webpack:///../ckeditor5-utils/src/ckeditorerror.js","webpack:///../ckeditor5-core/src/plugin.js","webpack:///../ckeditor5-engine/src/model/range.js","webpack:///../ckeditor5-utils/src/mix.js","webpack:///../ckeditor5-engine/src/model/element.js","webpack:///../ckeditor5-ui/src/template.js","webpack:///../ckeditor5-utils/src/emittermixin.js","webpack:///../ckeditor5-ui/src/view.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseIteratee.js","webpack:///../ckeditor5-core/src/command/command.js","webpack:///../ckeditor5-utils/src/lib/lodash/isArray.js","webpack:///../ckeditor5-utils/src/lib/lodash/isArrayLikeObject.js","webpack:///../ckeditor5-utils/src/lib/lodash/isObject.js","webpack:///../ckeditor5-utils/src/lib/lodash/toInteger.js","webpack:///../ckeditor5-engine/src/model/batch.js","webpack:///../ckeditor5-engine/src/model/delta/deltafactory.js","webpack:///../ckeditor5-utils/src/lib/lodash/last.js","webpack:///../ckeditor5-engine/src/model/delta/delta.js","webpack:///../ckeditor5-engine/src/model/writer.js","webpack:///../ckeditor5-ui/src/button/buttonview.js","webpack:///../ckeditor5-utils/src/keyboard.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseFlatten.js","webpack:///../ckeditor5-engine/src/model/text.js","webpack:///../ckeditor5-engine/src/view/element.js","webpack:///../ckeditor5-engine/src/view/position.js","webpack:///../ckeditor5-utils/src/lib/lodash/_arrayMap.js","webpack:////Users/pomek/Projects/ckeditor/ckeditor5/~/css-loader/lib/css-base.js","webpack:///../ckeditor5-engine/src/model/operation/moveoperation.js","webpack:///../ckeditor5-engine/src/view/text.js","webpack:///../ckeditor5-utils/src/lib/lodash/_root.js","webpack:///../ckeditor5-utils/src/observablemixin.js","webpack:////Users/pomek/Projects/ckeditor/ckeditor5/~/style-loader/addStyles.js","webpack:///../ckeditor5-engine/src/conversion/buildviewconverter.js","webpack:///../ckeditor5-engine/src/model/documentfragment.js","webpack:///../ckeditor5-engine/src/model/operation/operation.js","webpack:///../ckeditor5-engine/src/model/treewalker.js","webpack:///../ckeditor5-engine/src/view/range.js","webpack:///../ckeditor5-image/src/image/utils.js","webpack:///../ckeditor5-utils/src/dom/global.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseSlice.js","webpack:///../ckeditor5-utils/src/lib/lodash/_isIndex.js","webpack:///../ckeditor5-utils/src/log.js","webpack:///../ckeditor5-engine/src/conversion/buildmodelconverter.js","webpack:///../ckeditor5-engine/src/model/operation/insertoperation.js","webpack:///../ckeditor5-engine/src/model/operation/removeoperation.js","webpack:///../ckeditor5-engine/src/view/containerelement.js","webpack:///../ckeditor5-utils/src/isiterable.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseUniq.js","webpack:///../ckeditor5-utils/src/lib/lodash/extend.js","webpack:///../ckeditor5-utils/src/lib/lodash/isObjectLike.js","webpack:///../ckeditor5-utils/src/lib/lodash/isSymbol.js","webpack:///../ckeditor5-engine/src/view/observer/observer.js","webpack:///../ckeditor5-engine/src/view/treewalker.js","webpack:///../ckeditor5-utils/src/lib/lodash/_getNative.js","webpack:///../ckeditor5-utils/src/lib/lodash/_isKey.js","webpack:///../ckeditor5-utils/src/lib/lodash/_toKey.js","webpack:///../ckeditor5-utils/src/lib/lodash/eq.js","webpack:///../ckeditor5-engine/src/model/node.js","webpack:///../ckeditor5-engine/src/model/selection.js","webpack:///../ckeditor5-engine/src/model/textproxy.js","webpack:///../ckeditor5-engine/src/view/filler.js","webpack:///../ckeditor5-engine/src/view/observer/domeventobserver.js","webpack:///../ckeditor5-engine/src/view/selection.js","webpack:///../ckeditor5-utils/src/comparearrays.js","webpack:///../ckeditor5-utils/src/first.js","webpack:///../ckeditor5-utils/src/focustracker.js","webpack:///../ckeditor5-utils/src/keystrokehandler.js","webpack:///../ckeditor5-utils/src/lib/lodash/_assignValue.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseDifference.js","webpack:///../ckeditor5-utils/src/lib/lodash/keys.js","webpack:///../ckeditor5-engine/src/model/nodelist.js","webpack:///../ckeditor5-engine/src/model/operation/attributeoperation.js","webpack:///../ckeditor5-engine/src/model/operation/nooperation.js","webpack:///../ckeditor5-engine/src/view/editableelement.js","webpack:///../ckeditor5-engine/src/view/node.js","webpack:///../ckeditor5-paragraph/src/paragraph.js","webpack:///../ckeditor5-utils/src/collection.js","webpack:///../ckeditor5-utils/src/dom/emittermixin.js","webpack:///../ckeditor5-utils/src/lib/lodash/_ListCache.js","webpack:///../ckeditor5-utils/src/lib/lodash/_SetCache.js","webpack:///../ckeditor5-utils/src/lib/lodash/_arrayFilter.js","webpack:///../ckeditor5-utils/src/lib/lodash/_arrayPush.js","webpack:///../ckeditor5-utils/src/lib/lodash/_assocIndexOf.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseSortedIndex.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseWhile.js","webpack:///../ckeditor5-utils/src/lib/lodash/_castPath.js","webpack:///../ckeditor5-utils/src/lib/lodash/_getMapData.js","webpack:///../ckeditor5-utils/src/lib/lodash/_isHostObject.js","webpack:///../ckeditor5-utils/src/lib/lodash/_isIterateeCall.js","webpack:///../ckeditor5-utils/src/lib/lodash/_isPrototype.js","webpack:///../ckeditor5-utils/src/lib/lodash/_nativeCreate.js","webpack:///../ckeditor5-utils/src/lib/lodash/_setToArray.js","webpack:///../ckeditor5-utils/src/lib/lodash/clone.js","webpack:///../ckeditor5-utils/src/lib/lodash/isArrayLike.js","webpack:///../ckeditor5-utils/src/lib/lodash/isLength.js","webpack:///../ckeditor5-utils/src/lib/lodash/isPlainObject.js","webpack:///../ckeditor5-utils/src/lib/lodash/unzip.js","webpack:///(webpack)/buildin/module.js","webpack:///../ckeditor5-core/src/command/helpers/getschemavalidranges.js","webpack:///../ckeditor5-engine/src/conversion/model-to-view-converters.js","webpack:///../ckeditor5-engine/src/model/delta/insertdelta.js","webpack:///../ckeditor5-engine/src/model/delta/mergedelta.js","webpack:///../ckeditor5-engine/src/model/delta/movedelta.js","webpack:///../ckeditor5-engine/src/model/delta/removedelta.js","webpack:///../ckeditor5-engine/src/model/delta/splitdelta.js","webpack:///../ckeditor5-engine/src/model/delta/transform.js","webpack:///../ckeditor5-engine/src/model/delta/unwrapdelta.js","webpack:///../ckeditor5-engine/src/model/delta/wrapdelta.js","webpack:///../ckeditor5-engine/src/model/liverange.js","webpack:///../ckeditor5-engine/src/model/operation/markeroperation.js","webpack:///../ckeditor5-engine/src/model/operation/reinsertoperation.js","webpack:///../ckeditor5-engine/src/model/operation/renameoperation.js","webpack:///../ckeditor5-engine/src/model/operation/rootattributeoperation.js","webpack:///../ckeditor5-engine/src/view/attributeelement.js","webpack:///../ckeditor5-engine/src/view/documentfragment.js","webpack:///../ckeditor5-engine/src/view/observer/domeventdata.js","webpack:///../ckeditor5-ui/src/focuscycler.js","webpack:///../ckeditor5-ui/src/viewcollection.js","webpack:///../ckeditor5-utils/src/lib/lodash/_MapCache.js","webpack:///../ckeditor5-utils/src/lib/lodash/_Stack.js","webpack:///../ckeditor5-utils/src/lib/lodash/_Symbol.js","webpack:///../ckeditor5-utils/src/lib/lodash/_arrayIncludes.js","webpack:///../ckeditor5-utils/src/lib/lodash/_arrayIncludesWith.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseGet.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseIndexOf.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseIntersection.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseIsEqual.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseProperty.js","webpack:///../ckeditor5-utils/src/lib/lodash/_basePullAll.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseSortedIndexBy.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseUnary.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseXor.js","webpack:///../ckeditor5-utils/src/lib/lodash/_cacheHas.js","webpack:///../ckeditor5-utils/src/lib/lodash/_castArrayLikeObject.js","webpack:///../ckeditor5-utils/src/lib/lodash/_cloneArrayBuffer.js","webpack:///../ckeditor5-utils/src/lib/lodash/_copyObject.js","webpack:///../ckeditor5-utils/src/lib/lodash/_getPrototype.js","webpack:///../ckeditor5-utils/src/lib/lodash/_getTag.js","webpack:///../ckeditor5-utils/src/lib/lodash/_mapToArray.js","webpack:///../ckeditor5-utils/src/lib/lodash/debounce.js","webpack:///../ckeditor5-utils/src/lib/lodash/drop.js","webpack:///../ckeditor5-utils/src/lib/lodash/dropRight.js","webpack:///../ckeditor5-utils/src/lib/lodash/head.js","webpack:///../ckeditor5-utils/src/lib/lodash/isArguments.js","webpack:///../ckeditor5-utils/src/lib/lodash/isFunction.js","webpack:///../ckeditor5-utils/src/lib/lodash/isString.js","webpack:///../ckeditor5-utils/src/lib/lodash/pullAll.js","webpack:///../ckeditor5-utils/src/lib/lodash/unzipWith.js","webpack:///../ckeditor5-utils/src/tomap.js","webpack:///../ckeditor5-widget/src/utils.js","webpack:///(webpack)/buildin/global.js","webpack:///../ckeditor5-core/src/command/helpers/isattributeallowedinselection.js","webpack:///../ckeditor5-core/src/command/toggleattributecommand.js","webpack:///../ckeditor5-engine/src/conversion/mapper.js","webpack:///../ckeditor5-engine/src/conversion/model-selection-to-view-converters.js","webpack:///../ckeditor5-engine/src/conversion/modelconversiondispatcher.js","webpack:///../ckeditor5-engine/src/dataprocessor/htmldataprocessor.js","webpack:///../ckeditor5-engine/src/model/delta/attributedelta.js","webpack:///../ckeditor5-engine/src/model/delta/renamedelta.js","webpack:///../ckeditor5-engine/src/model/delta/weakinsertdelta.js","webpack:///../ckeditor5-engine/src/model/liveposition.js","webpack:///../ckeditor5-engine/src/view/domconverter.js","webpack:///../ckeditor5-engine/src/view/emptyelement.js","webpack:///../ckeditor5-engine/src/view/matcher.js","webpack:///../ckeditor5-engine/src/view/observer/mutationobserver.js","webpack:///../ckeditor5-engine/src/view/rooteditableelement.js","webpack:///../ckeditor5-engine/src/view/uielement.js","webpack:///../ckeditor5-image/src/image/imageengine.js","webpack:///../ckeditor5-image/src/image/ui/imageballoonpanelview.js","webpack:///../ckeditor5-image/src/imagetoolbar.js","webpack:///../ckeditor5-link/src/findlinkrange.js","webpack:///../ckeditor5-link/src/linkelement.js","webpack:///../ckeditor5-typing/src/changebuffer.js","webpack:///../ckeditor5-ui/src/bindings/clickoutsidehandler.js","webpack:///../ckeditor5-ui/src/bindings/preventdefault.js","webpack:///../ckeditor5-ui/src/bindings/submithandler.js","webpack:///../ckeditor5-ui/src/inputtext/inputtextview.js","webpack:///../ckeditor5-ui/src/labeledinput/labeledinputview.js","webpack:///../ckeditor5-ui/src/panel/balloon/balloonpanelview.js","webpack:///../ckeditor5-ui/src/toolbar/toolbarview.js","webpack:///../ckeditor5-undo/src/basecommand.js","webpack:///../ckeditor5-utils/src/count.js","webpack:///../ckeditor5-utils/src/diff.js","webpack:///../ckeditor5-utils/src/dom/getancestors.js","webpack:///../ckeditor5-utils/src/dom/isrange.js","webpack:///../ckeditor5-utils/src/dom/tounit.js","webpack:///../ckeditor5-utils/src/lib/lodash/_Map.js","webpack:///../ckeditor5-utils/src/lib/lodash/_Set.js","webpack:///../ckeditor5-utils/src/lib/lodash/_Uint8Array.js","webpack:///../ckeditor5-utils/src/lib/lodash/_apply.js","webpack:///../ckeditor5-utils/src/lib/lodash/_arrayReduce.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseClone.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseFindIndex.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseHas.js","webpack:///../ckeditor5-utils/src/lib/lodash/_basePullAt.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseSortedUniq.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseTimes.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseZipObject.js","webpack:///../ckeditor5-utils/src/lib/lodash/_copyArray.js","webpack:///../ckeditor5-utils/src/lib/lodash/_equalArrays.js","webpack:///../ckeditor5-utils/src/lib/lodash/_getSymbols.js","webpack:///../ckeditor5-utils/src/lib/lodash/_indexKeys.js","webpack:///../ckeditor5-utils/src/lib/lodash/_indexOfNaN.js","webpack:///../ckeditor5-utils/src/lib/lodash/_isStrictComparable.js","webpack:///../ckeditor5-utils/src/lib/lodash/_matchesStrictComparable.js","webpack:///../ckeditor5-utils/src/lib/lodash/_toSource.js","webpack:///../ckeditor5-utils/src/lib/lodash/chunk.js","webpack:///../ckeditor5-utils/src/lib/lodash/compact.js","webpack:///../ckeditor5-utils/src/lib/lodash/concat.js","webpack:///../ckeditor5-utils/src/lib/lodash/difference.js","webpack:///../ckeditor5-utils/src/lib/lodash/differenceBy.js","webpack:///../ckeditor5-utils/src/lib/lodash/differenceWith.js","webpack:///../ckeditor5-utils/src/lib/lodash/dropRightWhile.js","webpack:///../ckeditor5-utils/src/lib/lodash/dropWhile.js","webpack:///../ckeditor5-utils/src/lib/lodash/fill.js","webpack:///../ckeditor5-utils/src/lib/lodash/findIndex.js","webpack:///../ckeditor5-utils/src/lib/lodash/findLastIndex.js","webpack:///../ckeditor5-utils/src/lib/lodash/first.js","webpack:///../ckeditor5-utils/src/lib/lodash/flatten.js","webpack:///../ckeditor5-utils/src/lib/lodash/flattenDeep.js","webpack:///../ckeditor5-utils/src/lib/lodash/flattenDepth.js","webpack:///../ckeditor5-utils/src/lib/lodash/fromPairs.js","webpack:///../ckeditor5-utils/src/lib/lodash/get.js","webpack:///../ckeditor5-utils/src/lib/lodash/identity.js","webpack:///../ckeditor5-utils/src/lib/lodash/indexOf.js","webpack:///../ckeditor5-utils/src/lib/lodash/initial.js","webpack:///../ckeditor5-utils/src/lib/lodash/intersection.js","webpack:///../ckeditor5-utils/src/lib/lodash/intersectionBy.js","webpack:///../ckeditor5-utils/src/lib/lodash/intersectionWith.js","webpack:///../ckeditor5-utils/src/lib/lodash/isElement.js","webpack:///../ckeditor5-utils/src/lib/lodash/isNative.js","webpack:///../ckeditor5-utils/src/lib/lodash/join.js","webpack:///../ckeditor5-utils/src/lib/lodash/lastIndexOf.js","webpack:///../ckeditor5-utils/src/lib/lodash/nth.js","webpack:///../ckeditor5-utils/src/lib/lodash/pull.js","webpack:///../ckeditor5-utils/src/lib/lodash/pullAllBy.js","webpack:///../ckeditor5-utils/src/lib/lodash/pullAllWith.js","webpack:///../ckeditor5-utils/src/lib/lodash/pullAt.js","webpack:///../ckeditor5-utils/src/lib/lodash/remove.js","webpack:///../ckeditor5-utils/src/lib/lodash/reverse.js","webpack:///../ckeditor5-utils/src/lib/lodash/slice.js","webpack:///../ckeditor5-utils/src/lib/lodash/sortedIndex.js","webpack:///../ckeditor5-utils/src/lib/lodash/sortedIndexBy.js","webpack:///../ckeditor5-utils/src/lib/lodash/sortedIndexOf.js","webpack:///../ckeditor5-utils/src/lib/lodash/sortedLastIndex.js","webpack:///../ckeditor5-utils/src/lib/lodash/sortedLastIndexBy.js","webpack:///../ckeditor5-utils/src/lib/lodash/sortedLastIndexOf.js","webpack:///../ckeditor5-utils/src/lib/lodash/sortedUniq.js","webpack:///../ckeditor5-utils/src/lib/lodash/sortedUniqBy.js","webpack:///../ckeditor5-utils/src/lib/lodash/tail.js","webpack:///../ckeditor5-utils/src/lib/lodash/take.js","webpack:///../ckeditor5-utils/src/lib/lodash/takeRight.js","webpack:///../ckeditor5-utils/src/lib/lodash/takeRightWhile.js","webpack:///../ckeditor5-utils/src/lib/lodash/takeWhile.js","webpack:///../ckeditor5-utils/src/lib/lodash/toNumber.js","webpack:///../ckeditor5-utils/src/lib/lodash/union.js","webpack:///../ckeditor5-utils/src/lib/lodash/unionBy.js","webpack:///../ckeditor5-utils/src/lib/lodash/unionWith.js","webpack:///../ckeditor5-utils/src/lib/lodash/uniq.js","webpack:///../ckeditor5-utils/src/lib/lodash/uniqBy.js","webpack:///../ckeditor5-utils/src/lib/lodash/uniqWith.js","webpack:///../ckeditor5-utils/src/lib/lodash/without.js","webpack:///../ckeditor5-utils/src/lib/lodash/xor.js","webpack:///../ckeditor5-utils/src/lib/lodash/xorBy.js","webpack:///../ckeditor5-utils/src/lib/lodash/xorWith.js","webpack:///../ckeditor5-utils/src/lib/lodash/zip.js","webpack:///../ckeditor5-utils/src/lib/lodash/zipObject.js","webpack:///../ckeditor5-utils/src/lib/lodash/zipObjectDeep.js","webpack:///../ckeditor5-utils/src/lib/lodash/zipWith.js","webpack:///../ckeditor5-utils/src/objecttomap.js","webpack:///../ckeditor5-utils/src/unicode.js","webpack:////Users/pomek/Projects/ckeditor/ckeditor5/~/regenerator-runtime/runtime.js","webpack:///./ckeditor.js","webpack:////Users/pomek/Projects/ckeditor/ckeditor5/~/style-loader/fixUrls.js","webpack:///../ckeditor5-autoformat/src/autoformat.js","webpack:///../ckeditor5-autoformat/src/blockautoformatengine.js","webpack:///../ckeditor5-autoformat/src/inlineautoformatengine.js","webpack:///../ckeditor5-basic-styles/src/bold.js","webpack:///../ckeditor5-basic-styles/src/boldengine.js","webpack:///../ckeditor5-basic-styles/src/italic.js","webpack:///../ckeditor5-basic-styles/src/italicengine.js","webpack:///../ckeditor5-block-quote/src/blockquote.js","webpack:///../ckeditor5-block-quote/src/blockquotecommand.js","webpack:///../ckeditor5-block-quote/src/blockquoteengine.js","webpack:///../ckeditor5-clipboard/src/clipboard.js","webpack:///../ckeditor5-clipboard/src/clipboardobserver.js","webpack:///../ckeditor5-clipboard/src/datatransfer.js","webpack:///../ckeditor5-clipboard/src/utils/normalizeclipboarddata.js","webpack:///../ckeditor5-clipboard/src/utils/plaintexttohtml.js","webpack:///../ckeditor5-clipboard/src/utils/viewtoplaintext.js","webpack:///../ckeditor5-core/src/editingkeystrokehandler.js","webpack:///../ckeditor5-core/src/editor/editor.js","webpack:///../ckeditor5-core/src/editor/standardeditor.js","webpack:///../ckeditor5-core/src/plugincollection.js","webpack:///../ckeditor5-editor-classic/src/classic.js","webpack:///../ckeditor5-editor-classic/src/classiceditorui.js","webpack:///../ckeditor5-editor-classic/src/classiceditoruiview.js","webpack:///../ckeditor5-engine/src/controller/datacontroller.js","webpack:///../ckeditor5-engine/src/controller/deletecontent.js","webpack:///../ckeditor5-engine/src/controller/editingcontroller.js","webpack:///../ckeditor5-engine/src/controller/getselectedcontent.js","webpack:///../ckeditor5-engine/src/controller/insertcontent.js","webpack:///../ckeditor5-engine/src/controller/modifyselection.js","webpack:///../ckeditor5-engine/src/conversion/modelconsumable.js","webpack:///../ckeditor5-engine/src/conversion/view-selection-to-model-converters.js","webpack:///../ckeditor5-engine/src/conversion/view-to-model-converters.js","webpack:///../ckeditor5-engine/src/conversion/viewconsumable.js","webpack:///../ckeditor5-engine/src/conversion/viewconversiondispatcher.js","webpack:///../ckeditor5-engine/src/dataprocessor/basichtmlwriter.js","webpack:///../ckeditor5-engine/src/model/delta/basic-deltas.js","webpack:///../ckeditor5-engine/src/model/delta/basic-transformations.js","webpack:///../ckeditor5-engine/src/model/delta/markerdelta.js","webpack:///../ckeditor5-engine/src/model/document.js","webpack:///../ckeditor5-engine/src/model/history.js","webpack:///../ckeditor5-engine/src/model/liveselection.js","webpack:///../ckeditor5-engine/src/model/markercollection.js","webpack:///../ckeditor5-engine/src/model/operation/operationfactory.js","webpack:///../ckeditor5-engine/src/model/operation/transform.js","webpack:///../ckeditor5-engine/src/model/rootelement.js","webpack:///../ckeditor5-engine/src/model/schema.js","webpack:///../ckeditor5-engine/src/view/document.js","webpack:///../ckeditor5-engine/src/view/observer/clickobserver.js","webpack:///../ckeditor5-engine/src/view/observer/fakeselectionobserver.js","webpack:///../ckeditor5-engine/src/view/observer/focusobserver.js","webpack:///../ckeditor5-engine/src/view/observer/keyobserver.js","webpack:///../ckeditor5-engine/src/view/observer/mouseobserver.js","webpack:///../ckeditor5-engine/src/view/observer/selectionobserver.js","webpack:///../ckeditor5-engine/src/view/placeholder.js","webpack:///../ckeditor5-engine/src/view/renderer.js","webpack:///../ckeditor5-engine/src/view/textproxy.js","webpack:///../ckeditor5-enter/src/enter.js","webpack:///../ckeditor5-enter/src/entercommand.js","webpack:///../ckeditor5-enter/src/enterobserver.js","webpack:///../ckeditor5-heading/src/heading.js","webpack:///../ckeditor5-heading/src/headingcommand.js","webpack:///../ckeditor5-heading/src/headingengine.js","webpack:///../ckeditor5-image/src/image.js","webpack:///../ckeditor5-image/src/image/converters.js","webpack:///../ckeditor5-image/src/imagecaption.js","webpack:///../ckeditor5-image/src/imagecaption/imagecaptionengine.js","webpack:///../ckeditor5-image/src/imagecaption/utils.js","webpack:///../ckeditor5-image/src/imagestyle.js","webpack:///../ckeditor5-image/src/imagestyle/converters.js","webpack:///../ckeditor5-image/src/imagestyle/imagestylecommand.js","webpack:///../ckeditor5-image/src/imagestyle/imagestyleengine.js","webpack:///../ckeditor5-image/src/imagetextalternative.js","webpack:///../ckeditor5-image/src/imagetextalternative/imagetextalternativecommand.js","webpack:///../ckeditor5-image/src/imagetextalternative/imagetextalternativeengine.js","webpack:///../ckeditor5-image/src/imagetextalternative/ui/textalternativeformview.js","webpack:///../ckeditor5-link/src/link.js","webpack:///../ckeditor5-link/src/linkcommand.js","webpack:///../ckeditor5-link/src/linkengine.js","webpack:///../ckeditor5-link/src/ui/linkformview.js","webpack:///../ckeditor5-link/src/unlinkcommand.js","webpack:///../ckeditor5-list/src/converters.js","webpack:///../ckeditor5-list/src/indentcommand.js","webpack:///../ckeditor5-list/src/list.js","webpack:///../ckeditor5-list/src/listcommand.js","webpack:///../ckeditor5-list/src/listengine.js","webpack:///../ckeditor5-list/src/viewlistitemelement.js","webpack:///../ckeditor5-paragraph/src/paragraphcommand.js","webpack:///../ckeditor5-presets/src/essentials.js","webpack:///../ckeditor5-typing/src/delete.js","webpack:///../ckeditor5-typing/src/deletecommand.js","webpack:///../ckeditor5-typing/src/deleteobserver.js","webpack:///../ckeditor5-typing/src/input.js","webpack:///../ckeditor5-typing/src/inputcommand.js","webpack:///../ckeditor5-typing/src/typing.js","webpack:///../ckeditor5-ui/src/bindings/escpresshandler.js","webpack:///../ckeditor5-ui/src/componentfactory.js","webpack:///../ckeditor5-ui/src/dropdown/createdropdown.js","webpack:///../ckeditor5-ui/src/dropdown/dropdownpanelview.js","webpack:///../ckeditor5-ui/src/dropdown/dropdownview.js","webpack:///../ckeditor5-ui/src/dropdown/list/createlistdropdown.js","webpack:///../ckeditor5-ui/src/editableui/editableuiview.js","webpack:///../ckeditor5-ui/src/editableui/inline/inlineeditableuiview.js","webpack:///../ckeditor5-ui/src/editorui/boxed/boxededitoruiview.js","webpack:///../ckeditor5-ui/src/editorui/editoruiview.js","webpack:///../ckeditor5-ui/src/icon/iconview.js","webpack:///../ckeditor5-ui/src/label/labelview.js","webpack:///../ckeditor5-ui/src/list/listitemview.js","webpack:///../ckeditor5-ui/src/list/listview.js","webpack:///../ckeditor5-ui/src/model.js","webpack:///../ckeditor5-ui/src/panel/balloon/contextualballoon.js","webpack:///../ckeditor5-ui/src/toolbar/enabletoolbarkeyboardfocus.js","webpack:///../ckeditor5-ui/src/toolbar/sticky/stickytoolbarview.js","webpack:///../ckeditor5-ui/src/toolbar/toolbarseparatorview.js","webpack:///../ckeditor5-undo/src/redocommand.js","webpack:///../ckeditor5-undo/src/undo.js","webpack:///../ckeditor5-undo/src/undocommand.js","webpack:///../ckeditor5-undo/src/undoengine.js","webpack:///../ckeditor5-utils/src/config.js","webpack:///../ckeditor5-utils/src/difftochanges.js","webpack:///../ckeditor5-utils/src/dom/getcommonancestor.js","webpack:///../ckeditor5-utils/src/dom/getdatafromelement.js","webpack:///../ckeditor5-utils/src/dom/getpositionedancestor.js","webpack:///../ckeditor5-utils/src/dom/indexof.js","webpack:///../ckeditor5-utils/src/dom/insertat.js","webpack:///../ckeditor5-utils/src/dom/position.js","webpack:///../ckeditor5-utils/src/dom/rect.js","webpack:///../ckeditor5-utils/src/dom/remove.js","webpack:///../ckeditor5-utils/src/dom/setdatainelement.js","webpack:///../ckeditor5-utils/src/elementreplacer.js","webpack:///../ckeditor5-utils/src/env.js","webpack:///../ckeditor5-utils/src/eventinfo.js","webpack:///../ckeditor5-utils/src/lib/lodash/_DataView.js","webpack:///../ckeditor5-utils/src/lib/lodash/_Hash.js","webpack:///../ckeditor5-utils/src/lib/lodash/_Promise.js","webpack:///../ckeditor5-utils/src/lib/lodash/_Reflect.js","webpack:///../ckeditor5-utils/src/lib/lodash/_WeakMap.js","webpack:///../ckeditor5-utils/src/lib/lodash/_addMapEntry.js","webpack:///../ckeditor5-utils/src/lib/lodash/_addSetEntry.js","webpack:///../ckeditor5-utils/src/lib/lodash/_arrayEach.js","webpack:///../ckeditor5-utils/src/lib/lodash/_arraySome.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseAssign.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseAt.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseClamp.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseCreate.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseFill.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseGetAllKeys.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseHasIn.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseIndexOfWith.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseIsEqualDeep.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseIsMatch.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseKeys.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseKeysIn.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseMatches.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseMatchesProperty.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseNth.js","webpack:///../ckeditor5-utils/src/lib/lodash/_basePropertyDeep.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseSet.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseToPairs.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseToString.js","webpack:///../ckeditor5-utils/src/lib/lodash/_checkGlobal.js","webpack:///../ckeditor5-utils/src/lib/lodash/_cloneBuffer.js","webpack:///../ckeditor5-utils/src/lib/lodash/_cloneDataView.js","webpack:///../ckeditor5-utils/src/lib/lodash/_cloneMap.js","webpack:///../ckeditor5-utils/src/lib/lodash/_cloneRegExp.js","webpack:///../ckeditor5-utils/src/lib/lodash/_cloneSet.js","webpack:///../ckeditor5-utils/src/lib/lodash/_cloneSymbol.js","webpack:///../ckeditor5-utils/src/lib/lodash/_cloneTypedArray.js","webpack:///../ckeditor5-utils/src/lib/lodash/_compareAscending.js","webpack:///../ckeditor5-utils/src/lib/lodash/_copySymbols.js","webpack:///../ckeditor5-utils/src/lib/lodash/_createAssigner.js","webpack:///../ckeditor5-utils/src/lib/lodash/_createSet.js","webpack:///../ckeditor5-utils/src/lib/lodash/_createToPairs.js","webpack:///../ckeditor5-utils/src/lib/lodash/_equalByTag.js","webpack:///../ckeditor5-utils/src/lib/lodash/_equalObjects.js","webpack:///../ckeditor5-utils/src/lib/lodash/_getAllKeys.js","webpack:///../ckeditor5-utils/src/lib/lodash/_getLength.js","webpack:///../ckeditor5-utils/src/lib/lodash/_getMatchData.js","webpack:///../ckeditor5-utils/src/lib/lodash/_hasPath.js","webpack:///../ckeditor5-utils/src/lib/lodash/_hashClear.js","webpack:///../ckeditor5-utils/src/lib/lodash/_hashDelete.js","webpack:///../ckeditor5-utils/src/lib/lodash/_hashGet.js","webpack:///../ckeditor5-utils/src/lib/lodash/_hashHas.js","webpack:///../ckeditor5-utils/src/lib/lodash/_hashSet.js","webpack:///../ckeditor5-utils/src/lib/lodash/_initCloneArray.js","webpack:///../ckeditor5-utils/src/lib/lodash/_initCloneByTag.js","webpack:///../ckeditor5-utils/src/lib/lodash/_initCloneObject.js","webpack:///../ckeditor5-utils/src/lib/lodash/_isFlattenable.js","webpack:///../ckeditor5-utils/src/lib/lodash/_isKeyable.js","webpack:///../ckeditor5-utils/src/lib/lodash/_iteratorToArray.js","webpack:///../ckeditor5-utils/src/lib/lodash/_listCacheClear.js","webpack:///../ckeditor5-utils/src/lib/lodash/_listCacheDelete.js","webpack:///../ckeditor5-utils/src/lib/lodash/_listCacheGet.js","webpack:///../ckeditor5-utils/src/lib/lodash/_listCacheHas.js","webpack:///../ckeditor5-utils/src/lib/lodash/_listCacheSet.js","webpack:///../ckeditor5-utils/src/lib/lodash/_mapCacheClear.js","webpack:///../ckeditor5-utils/src/lib/lodash/_mapCacheDelete.js","webpack:///../ckeditor5-utils/src/lib/lodash/_mapCacheGet.js","webpack:///../ckeditor5-utils/src/lib/lodash/_mapCacheHas.js","webpack:///../ckeditor5-utils/src/lib/lodash/_mapCacheSet.js","webpack:///../ckeditor5-utils/src/lib/lodash/_parent.js","webpack:///../ckeditor5-utils/src/lib/lodash/_setCacheAdd.js","webpack:///../ckeditor5-utils/src/lib/lodash/_setCacheHas.js","webpack:///../ckeditor5-utils/src/lib/lodash/_setToPairs.js","webpack:///../ckeditor5-utils/src/lib/lodash/_stackClear.js","webpack:///../ckeditor5-utils/src/lib/lodash/_stackDelete.js","webpack:///../ckeditor5-utils/src/lib/lodash/_stackGet.js","webpack:///../ckeditor5-utils/src/lib/lodash/_stackHas.js","webpack:///../ckeditor5-utils/src/lib/lodash/_stackSet.js","webpack:///../ckeditor5-utils/src/lib/lodash/_stringToPath.js","webpack:///../ckeditor5-utils/src/lib/lodash/array.default.js","webpack:///../ckeditor5-utils/src/lib/lodash/array.js","webpack:///../ckeditor5-utils/src/lib/lodash/assignIn.js","webpack:///../ckeditor5-utils/src/lib/lodash/cloneDeepWith.js","webpack:///../ckeditor5-utils/src/lib/lodash/constant.js","webpack:///../ckeditor5-utils/src/lib/lodash/hasIn.js","webpack:///../ckeditor5-utils/src/lib/lodash/isBuffer.js","webpack:///../ckeditor5-utils/src/lib/lodash/isEqual.js","webpack:///../ckeditor5-utils/src/lib/lodash/isTypedArray.js","webpack:///../ckeditor5-utils/src/lib/lodash/keysIn.js","webpack:///../ckeditor5-utils/src/lib/lodash/memoize.js","webpack:///../ckeditor5-utils/src/lib/lodash/noop.js","webpack:///../ckeditor5-utils/src/lib/lodash/now.js","webpack:///../ckeditor5-utils/src/lib/lodash/property.js","webpack:///../ckeditor5-utils/src/lib/lodash/throttle.js","webpack:///../ckeditor5-utils/src/lib/lodash/toFinite.js","webpack:///../ckeditor5-utils/src/lib/lodash/toLength.js","webpack:///../ckeditor5-utils/src/lib/lodash/toPairs.js","webpack:///../ckeditor5-utils/src/lib/lodash/toString.js","webpack:///../ckeditor5-utils/src/locale.js","webpack:///../ckeditor5-utils/src/mapsequal.js","webpack:///../ckeditor5-utils/src/priorities.js","webpack:///../ckeditor5-utils/src/spy.js","webpack:///../ckeditor5-utils/src/translation-service.js","webpack:///../ckeditor5-widget/src/widget.js","webpack:///../ckeditor5-block-quote/theme/theme.scss","webpack:///../ckeditor5-editor-classic/theme/theme.scss","webpack:///../ckeditor5-engine/theme/placeholder.scss","webpack:///../ckeditor5-heading/theme/theme.scss","webpack:///../ckeditor5-image/theme/imagecaption/theme.scss","webpack:///../ckeditor5-image/theme/imagetextalternative/theme.scss","webpack:///../ckeditor5-image/theme/theme.scss","webpack:///../ckeditor5-link/theme/theme.scss","webpack:///../ckeditor5-widget/theme/theme.scss","webpack:///../ckeditor5-basic-styles/theme/icons/bold.svg","webpack:///../ckeditor5-basic-styles/theme/icons/italic.svg","webpack:///../ckeditor5-core/theme/icons/low-vision.svg","webpack:///../ckeditor5-core/theme/icons/object-center.svg","webpack:///../ckeditor5-core/theme/icons/object-right.svg","webpack:///../ckeditor5-core/theme/icons/quote.svg","webpack:///../ckeditor5-link/theme/icons/link.svg","webpack:///../ckeditor5-link/theme/icons/unlink.svg","webpack:///../ckeditor5-list/theme/icons/bulletedlist.svg","webpack:///../ckeditor5-list/theme/icons/numberedlist.svg","webpack:///../ckeditor5-undo/theme/icons/redo.svg","webpack:///../ckeditor5-undo/theme/icons/undo.svg","webpack:///../ckeditor5-block-quote/theme/theme.scss?6f1f","webpack:///../ckeditor5-editor-classic/theme/theme.scss?044c","webpack:///../ckeditor5-engine/theme/placeholder.scss?7c03","webpack:///../ckeditor5-heading/theme/theme.scss?ae38","webpack:///../ckeditor5-image/theme/imagecaption/theme.scss?5d0d","webpack:///../ckeditor5-image/theme/imagetextalternative/theme.scss?34a9","webpack:///../ckeditor5-image/theme/theme.scss?1607","webpack:///../ckeditor5-link/theme/theme.scss?6cb5","webpack:///../ckeditor5-widget/theme/theme.scss?e2b9"],"names":[],"mappings":"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EA,eACA,SAEA,iBACA,OACA,cACA,oBACA,sBACA,KAAE,QACF,WACA,wBACA,wCACA,wCACA,yBACA,6BACA,mBACA,eACA,GACA,KACA,4BACA,KAEA,QACA,iBACA,eACA,GACA,EAGA,YAEA,cACA,MACA,sDACA,UACA,WACA,EACA,KAEA,IACA,EAWA,mBACA,cAEA,SACA,oCACE,OACF,+BACA,OACA,iCACA,MACA,0BAEA,kBAEA,EACA,EAEA,eACA,SACA,QAEA,SACA,0BAGA,KACA,gCACE,MACF,QACA,4BAEA,kDACA,GACA,EAEA,iBACA,SACA,QAOA,8CAEA,4BACA,SAGA,IAEA,OAAuD,6GAGvD,0BAA6B,MAE7B,iBAEA,gCAEA,GACA,uBACA,GA7RA,GACA,mBACA,IACA,oBACA,8CACA,YACA,CACA,CACA,YAMA,gDACA,IACA,gBACA,IACA,wBACA,OACA,4CAEA,MACA,EACA,CAAE,aACF,+BACA,EACA,KACA,OACA,EACA,cAEA,uBACA,+BACA,iDAGA,kEACA,yCAIA,uDAGA,qDAGA,oDAEA,kBACA,cAEA,cACA,QACA,QAAgB,MAAmB,WACnC,SACA,SACA,MACA,cACA,EACA,MACA,SACA,OACA,EACA,WAAgB,QAAsB,OACtC,WACA,cACA,WAAkB,YAA2B,OAC7C,YACA,gBACA,GAEA,CACA,GA2IA,gBACA,IAEA,0BACA,aACA,yBACA,KACA,CAAC,kLChND,CA4eoD,mBACnD,IAAK,cAAY,GAAa,oBAC7B,WAAoB,gDAAW,SAC9B,QAAgB,EAAM,EAAW,EACjC,WAH4B,oEAK7B,CACA,MAED,IAAM,GAAO,MAAM,KAAM,EACzB,sBAAK,KAAM,EAEX,QAAM,GACL,MAAM,EAAS,MACf,mBACA,SAAQ,EAGT,SAAK,EAAc,OAAO,MACzB,MAAS,aAAc,EAAU,IAAK,EAEvC,MAED,mSA9gBA,MAmhBwB,kBACvB,OAAO,IACP,E,EAjhBD,iBACA,cACA,cACA,eACA,cACA,kBAuEM,YAIL,aAAc,QAOb,QAQA,qBACA,QAED,wCAOsB,+CAAd,IAAc,eACrB,eAAK,aAEL,EACA,IAED,4BASa,WACZ,OAAO,MAAK,KAAM,CAAE,KACpB,GAED,8BAUe,WAAoB,8DAClC,KAEA,KAAa,OAAR,MACJ,OADuB,OACd,GAET,KACA,eAAQ,UAAW,GAGpB,MAAM,GAAU,cAEhB,eAAK,MAAM,KACV,SACA,EACA,oBACA,kBAGD,IACA,IAED,qBAcM,WACA,OAAG,gBACP,YAAU,cAGX,SAAK,MAAM,KACV,SACA,EACA,oBAGD,OACA,IAED,0BA6BW,WACV,IAAM,GAAW,KAAK,MAAO,KAAK,MAAM,OACxC,YAAS,QAET,EACA,IAED,6BAsBc,WACb,IAAM,GAAW,KAAK,MAAO,KAAK,MAAM,OACxC,YAAS,SAET,EACA,IAED,0BAcW,WACV,MAsDmB,aAtDQ,WAC1B,OAAgC,kBAG/B,IAAM,GAAW,EAAK,QAAQ,SAAU,EAGxC,OAAK,GAIL,MAVkD,gBAWlD,YAAqB,sDAAW,WAE/B,MAAM,GAAe,YAAmB,UAAW,EAAS,EAAK,OAAU,cAG3E,GAAK,GAKL,OAAM,IAAO,MAAM,KAAM,GAEzB,oBAAK,GAAC,EAAc,OAAO,MAAO,CAAE,KAAM,GAAa,KAAM,WAAY,GAAM,OAAQ,EAKlF,WAAC,EAAW,QAAS,EAAK,MAAO,EAAK,SAAW,GAMtD,UAAK,QAAQ,KAGb,OAAM,IAAgB,EAAc,gBAAiB,EAAK,MAAO,EACjE,GAAM,GAAiB,UAAc,SAAU,GAC/C,iBAAY,OAAQ,GAGpB,MAAK,QAGL,QAAK,OAGL,GACA,OAjDiD,kFAkDlD,EACD,CAED,EACA,SAED,4BAiB2B,aAC1B,MAiDmB,aAjDQ,WAC1B,OAAgC,kBAG/B,IAAM,GAAW,EAAK,QAAQ,SAAU,EAGxC,OAAK,GAIL,MAVkD,iBAWlD,YAAqB,oDAAW,cAE/B,OAAK,CAAC,EAAW,QAAS,EAAK,MAAO,EAAK,SAAW,GAMjD,QAAC,EACL,WAAK,OAAS,EAAc,gBAAiB,EAAK,MAAO,EAI1D,OAAI,QAEJ,QAAK,YACJ,cAOC,KACA,QAAO,EAAQ,EAAQ,EAAK,MAAM,aAAc,EAKlD,0BAba,EAAc,EAE1B,OAAK,CACJ,GAGD,SAOe,EAAK,OAAQ,GAAW,EAGxC,GACA,gBA5CiD,yEA6ClD,EACD,CAED,EACA,MAED,yBAiCU,WACT,MA2CmB,aA3CQ,WAC1B,OAAoB,gBAGnB,IAAM,GAAW,EAAK,QAAQ,SAAU,EAGxC,OAAK,GAIL,MAGA,QAAK,YACJ,UAAe,EAAS,EAGxB,OAAe,cAAkB,UAAW,CAAE,YAAa,EAAK,MAAM,aAIvE,eAA0B,SAArB,IAAa,MACjB,QADsC,QAAO,GAAa,aAAc,kBAClE,eAKP,uFA3BmC,gBA4BnC,YAAqB,oDAAW,cAE/B,OAAK,CAAC,EAAW,QAAS,EAAK,MAAO,EAAK,SAAW,GAItD,UAAK,OAGL,EACA,gBAtCkC,uEAuCnC,EACD,CAED,EACA,SAED,6BAOgC,aAC/B,IADiD,gBAEjD,WAAoB,KAAK,uDAAQ,SAGhC,MAAM,EAAqB,EAAK,QAChC,iBAAM,EAAY,EAAqB,WAAa,EACpD,UAAM,EAAgB,EAEtB,GAAM,GAA6B,IAAlB,KAAK,SAAoB,EAAkB,EAE5D,SATgC,yBAUhC,YAA0B,KAAK,gEAAe,YAC7C,SAAW,GAAI,EAAW,EAAe,CAAE,SAC3C,cAZ+B,4EAahC,CAfgD,gFAgBjD,OAIF,kLC7eA,CA8QoB,aAEnB,OACC,QADI,QAAO,GACJ,CAAE,cAGL,KAAC,cACL,OAAQ,CAIT,IAAO,MAAM,KAAM,GACjB,IAAK,WACL,OAAsB,QAAf,QAAO,GAAmB,cAAU,GAC3C,CACF,G,mSAlSD,gBACA,cACA,eACA,kBAUqB,YAOpB,CAAa,aAAW,QAQvB,QAAK,QAAU,GAQf,UAAK,UAAY,MAEjB,QACC,QAAK,eAAgB,EAEtB,EAED,kBAKE,OAAO,yBACR,OAAO,MACP,aAED,QAkDA,WAQI,WACH,OACA,kBADO,GAGR,yBAMU,WACT,OAAO,MAAK,UAAU,QACtB,EAED,sCAMC,OAAO,MAAK,UAAW,OACvB,WAED,8BAMe,WACd,OAAO,MAAK,UAAU,aACtB,EAED,oCAQqB,WACpB,OAAO,MAAK,UAAU,mBACtB,EAED,kCAMC,CACA,QAED,8BAmBe,WACd,OAAO,MAAK,UAAU,cACtB,EAED,+BAKgB,WACf,MAAK,eAAgB,KAAK,WAC1B,EAED,+BAOuB,aACtB,GAAQ,EAAW,MADW,gBAG9B,WAAoB,gDAAQ,SAC3B,QAAK,OACL,aAL6B,oEAO9B,MAAK,UAAU,YAAa,EAC5B,EAED,+BAQgB,WAAqB,8DACpC,EAAM,EAAQ,KAAK,UAAU,YAAa,EAAO,GADb,eAGpC,WAAoB,gDAAQ,SAC3B,QAAK,OACL,aALmC,oEAOpC,OACA,EAED,iCAOC,IAAa,MADL,eAGR,WAAoB,KAAK,wDAAY,SACpC,QAAK,KAAM,EACX,kBALO,oEAOR,OACA,EAED,mCA5LC,OAAO,MAAK,UACZ,MAED,kCAOC,OAAO,MAAK,UACZ,SAED,gCAOC,OACA,EADO,QAAK,UAGb,6BAOC,OACA,KAED,+BAOC,OACA,gCA0JgB,WAChB,IAAiB,MADM,eAGvB,WAAqB,gDAAO,SAC3B,MAAK,EAEJ,OAAS,KAAM,UAAQ,SAGvB,MAAS,KAAM,UAAK,SAErB,YAXsB,oEAavB,OAAO,IAAI,GACX,QAMF,cArQqB,6HCXrB,mSAFA,mEAOqB,YAKpB,CAAa,aAAc,QAS1B,QAAK,YA8CL,CAED,2CAOC,IAAM,GAAO,cAEb,kBAAK,YAAc,KAAK,YAGxB,gBAAO,GAEP,MACA,CAED,UASA,iBAOiB,WAChB,OAAO,IAAI,MAAM,EACjB,8CAZA,OACA,sDAtFmB,gLCDrB,CA4UwE,qBACvE,OACC,CACA,cACC,MACA,OACA,mBACA,eACA,SAGF,GAkCD,mSA/XA,gBACA,eACA,cACA,cACA,iBAKqB,YAmBpB,aAA4B,2EAC3B,GAAK,CAAC,EAAQ,YAAc,CAAC,EAM5B,mBAAM,eAGP,uGAAM,GAAY,EAAQ,WAE1B,aAAkB,SAAb,KACJ,UAD8B,SACxB,eACL,wFACA,CAAE,UAUJ,SAAK,UAaL,OAAK,WAAa,EAAQ,YAW1B,UACM,SADD,EACJ,cAAgB,UAAS,mBAAoB,EAExC,eAAW,UAAS,mBAAoB,KAAK,WAA8B,UAAlB,OAAK,UAA0B,MAU9F,eAAK,iBAAmB,CAAC,CAAC,EAS1B,sBAAK,QAAU,CAAC,CAAC,EAWjB,aAAK,iBAAmB,CAAC,CAAC,EAQ1B,sBAAK,qBAAuB,KAAK,WAAa,KAAK,WAAW,MAAM,OAQpE,UAAK,mBAAqB,KAAK,WAAa,KAAK,WAAW,IAAI,OAShE,UAAK,eAAiB,KAAK,SAC3B,MAED,kBAGE,OAAO,yBACR,OACA,KAED,qBAYM,WACL,IAAI,GAAM,EAAO,EAEjB,IACC,GAAe,KACf,WAAoB,KAAK,qBAEL,KAAK,OAJvB,IAIQ,KAJR,IAKF,KALD,OAKU,CAAC,GAAQ,EAEd,IACJ,SAAK,SACL,OAAK,eAEN,EAED,+BAOC,OACC,SADI,OAAK,UACF,KAEP,QAAO,KAER,WAED,gCASC,IAAM,GAAmB,KACzB,SAAM,EAAW,UAAS,mBAAoB,KAC9C,UAAM,EAAS,KAGf,kBAAuB,IAAlB,KAAO,QAAmB,EAAS,SAAW,EAClD,gBAAO,CAIR,YAAK,IAAW,KAAK,oBAAsB,EAAS,QAAU,KAAK,WAAW,IAC7E,aAAO,CAGR,YAAM,GAAO,EAAS,SAAW,EAAS,SAAW,EAErD,aAAK,eACC,cAAC,MAEL,UAMD,YANU,KAAK,KACd,QAAK,eAEL,QAGI,SAEL,EAAO,EAAmB,eAAgB,EAAM,EAAkB,EAClE,GAAM,GAAK,eAAL,QACN,IAEA,MAAK,KACJ,mBACA,MACA,IAAI,GAAS,EAEb,UAAK,KAAK,oBAAsB,GAAU,KAAK,WAAW,IAAI,OAC7D,MAAS,KAAK,WAAW,IAG1B,UAAkB,EAAS,EAC3B,MAED,IAAM,GAAmB,EAAS,OAAS,EAC3C,YAAM,EAAO,cAAe,EAAM,EAElC,YAAS,QACT,OAAK,SAEL,EAAO,EAAmB,OAAQ,EAAM,EAAkB,EAC1D,EAEA,UAAS,KACT,QACA,cAAK,SACL,OAAK,eAAiB,EAEtB,OAAK,KACJ,iBAAO,KAEP,QAAO,EAAmB,aAAc,EAAQ,EAGlD,EAED,oCASC,IAAM,GAAmB,KACzB,SAAM,EAAW,UAAS,mBAAoB,KAC9C,UAAM,EAAS,KAGf,kBAAuB,IAAlB,KAAO,QACX,CAD8B,KAAS,aAChC,CAIR,YAAK,GAAU,KAAK,sBAAwB,EAAS,QAAU,KAAK,WAAW,MAC9E,aAAO,CAIR,YAAM,GAAO,EAAS,SAAW,EAAS,SAAW,EAErD,cAAK,eACJ,iBAEK,SAAC,KACL,cAUK,SAEL,EAAO,EAAmB,eAAgB,EAAM,EAAkB,EAEnE,OAdU,KAAK,KAAM,EACpB,gBAAK,SACL,OAAK,eAEL,EAAK,KACJ,iBAAO,KAEP,YAAO,EAAmB,aAAc,EAAM,EAG/C,IAIK,GAAK,eAAL,QACN,IAEA,MAAK,KACJ,mBACA,MACA,IAAI,GAAS,EAEb,YAAK,KAAK,sBAAwB,GAAU,KAAK,WAAW,MAAM,OACjE,MAAS,KAAK,WAAW,MAG1B,UAAkB,EAAS,OAC3B,CAED,IAAM,GAAmB,EAAS,OAAS,EAC3C,YAAM,EAAO,cAAe,EAAM,EAAmB,EAErD,YAAS,QACT,OAAK,SAEL,EAAO,EAAmB,OAAQ,EAAM,EAAkB,EAC1D,EAEA,UAAS,KACT,WAAK,SACL,OAAK,eAAiB,EAEtB,OAAO,EAAmB,eAAgB,EAAQ,EAAkB,EAErE,sBAtUmB,gLCNrB,CAwZ4B,aAC3B,OAAK,GAAM,KAAK,GAAI,qBAAwB,EAAM,KAAK,GAKvD,Y,mSAjaD,gBACA,kBAKqB,YASpB,CAAa,aAAoB,0EAMhC,QAAK,MAAQ,UAAS,mBAOtB,QAAK,IAAM,EAAM,UAAS,mBAAoB,GAAQ,UAAS,mBAC/D,EAED,kBAWI,OAAO,0JACH,cAAgB,CAAE,WAAY,KAAwB,yEAG9D,SA4BA,8BAiBC,IAAI,GAAQ,KAAK,MAAM,wBAAyB,EAAmB,CAAE,UACrE,aAAI,EAAM,KAAK,IAAI,wBAGnB,SAAK,GAAM,OAAO,GAAI,SAAY,EACjC,cAAQ,UAAS,aAAc,EAGhC,SAAK,EAAI,OAAO,GAAI,SAAY,EAC/B,YAAM,UAAS,YAAa,EAG7B,SAAO,GAAI,GAAO,EAClB,EAED,qCAiBC,IAAI,GAAQ,KAAK,MAAM,wBACvB,GAAI,EAAM,KAAK,IAAI,wBAAyB,EAAmB,CAAE,UACjE,aAAM,EAAiB,EACvB,UAAM,EAAgB,EAGtB,iBAAK,IAAkB,EAAe,GACrC,YAAQ,cAAc,EAGvB,IAAK,GAAiB,EAAc,GACnC,YAAM,cAAc,EAAe,EAAc,KAGlD,SAAO,GAAI,GAAO,EAClB,EAED,wBAMS,WACR,OAAO,OAAQ,GAAgB,KAAK,MAAM,QAAS,EAAW,QAAW,KAAK,IAAI,QAAS,EAC3F,IAED,iCAOkB,WACjB,OAAO,GAAS,QAAS,KAAK,QAAW,EAAS,SAAU,KAC5D,IAED,8BAOe,WACd,OAAO,MAAK,iBAAkB,EAAW,QAAW,KAAK,iBAAkB,EAC3E,IAED,8BA4Be,WACd,IAEA,YAAK,MAAK,eAGT,IAAK,KAAK,iBAAkB,EAG3B,UAAO,KAAM,GAAI,GAAO,KAAK,MAAO,EAGrC,QAAK,KAAK,iBAAkB,EAG3B,QAAO,KAAM,GAAI,GAAO,EAAW,IAAK,KAIzC,SAAO,KAAM,EAAM,gBAGpB,OACA,CAED,gCAqBiB,WAChB,IAAK,KAAK,eAAgB,GAGzB,IAAI,GAAmB,KACvB,MAAI,EAAiB,KAErB,UAAK,MAAK,iBAAkB,EAG3B,WAAmB,EAGpB,OAAK,KAAK,iBAAkB,EAG3B,SAAiB,EAGlB,KAAO,GAAI,GAAO,EAClB,EAGD,OACA,KAED,oCAS0B,2DACzB,eAAQ,WAER,KAAO,cACP,EAED,iEAcY,uDAAU,gGACrB,KAAQ,WACR,OAEM,oB,EAAa,cAAgB,iCAEd,mEAAT,O,qBACL,EAAM,+UAId,sEAagB,uDAAU,gGACzB,YAAQ,WAEF,K,EAAa,cAAgB,YAE7B,EAAW,8CAEI,mEAAT,O,qBACL,EAAM,uVAId,gCAMgB,WACf,OAAO,MAAK,MAAM,SAAU,EAAW,MAAS,KAAK,IAAI,QAAS,EAClE,MAED,oCAvSC,OAAO,MAAK,MAAM,QAAS,KAC3B,IAED,+BAOC,OAAO,MAAK,MAAM,SAAW,KAAK,IAClC,MAED,6BAMC,OAAO,MAAK,MACZ,kDA4R0E,iBAC1E,OAAO,IAAI,MACV,cAAc,EAAc,GAC5B,cAAc,EAEf,GAED,gCAMwB,WACvB,OAAO,IAAI,MAAM,EAAM,MAAO,EAC9B,IAED,2CAQ6C,aAC5C,IAAM,GACN,EAAM,EAAM,EAAS,aAErB,SAAe,EAAR,GAAY,GAAI,MAAM,EAAO,GAAQ,GAAI,MAAM,EACtD,EAED,yBAOiB,WAChB,OAAO,MAAK,4BAA6B,EAAS,EAAG,EAAS,EAC9D,WAED,yBAMiB,WAChB,OAAO,MAAK,2BAA4B,UAAS,aAAc,GAC/D,QAGF,cApZqB,mFCQL,cAA4B,aAC3C,UAAY,kBAEZ,MAAO,eAAU,EAAa,CAE9B,MAAS,UACR,IAAM,GAAa,EAAY,SAC/B,GAAM,EAAU,EAAW,aAE3B,aAAO,GAAc,MAAa,EAClC,CACD,GAED,IAMgB,cAAe,WAC9B,OAAO,CAAC,CAAC,EAAY,kBAAmB,IAAiB,eACzD,EAED,IAOgB,QAAS,WACxB,OAAO,yBACP,OAD+C,IAAa,I,EA7C7D,QACA,8DAEA,KAAM,EAAc,OAEpB,6ECHA,qBAce,CAAE,OAAF,OAAU,SAAV,4ECzBf,aA8Be,QArBkB,eAC/B,IAAI,GAAQ,CAAC,EACT,EAAS,EAEb,OACE,CADE,OACM,CAAC,EAAQ,EAAS,EAAK,EAEjC,KAAM,EAAM,EAAS,EACrB,EACE,CADE,QAGJ,KAAS,EAAQ,EAAM,EAAM,EAAM,IACnC,OAEA,SAAI,GAAS,MACb,GAAS,IACP,KAAO,GAAS,EAAM,EAExB,SACD,sEC5BD,WACI,GAGA,GAEJ,qBAee,QAPS,aACtB,UAA0B,IAAjB,IAXX,iBAYE,EAAO,CAAC,CAAC,IACU,QAAhB,QAAO,IAAqB,EAAS,KAAK,KAClC,CAAC,CAAT,IAA2B,CAAb,IAAQ,GAAU,EACpC,qECwBK,aA8BS,QAnBd,CAXW,MAWK,aACf,SAAQ,MAAO,EACf,EAYD,EAzBW,KAyBI,aACd,SAAQ,KAAM,EACd,EA3BU,iLCdZ,mSAxBA,MA4YwB,kBACvB,OAAO,IACP,EAED,EA5YA,QAYA,SAEA,kBACA,eACA,gBAEA,iBAyDM,YAIL,aAAc,QAOb,QAQA,qBAAK,MACL,IAED,wCAOsB,+CAAd,IAAc,eACrB,eAAK,aAEL,EACA,IAED,4BAOa,WACZ,aAAK,MACJ,MACA,eACA,WAGD,MACA,IAED,8BAOe,WACd,aAAK,MACJ,MACA,gBACA,WAGD,MACA,IAED,2BAOY,WACX,aAAK,MACJ,MACA,cACA,WAGD,MACA,IAED,6BAiBc,WACb,aAAK,MAAM,SAEX,EACA,IAED,0BAkCW,WACV,IAAM,GAAmC,IAAxB,QAAK,MAAM,SAAoB,SAAW,KAAK,MAAM,SADlD,eAGpB,WAA0B,KAAK,2DAAe,SAC7C,MAEC,SAFI,OAAK,MAAM,QAEa,QAAlB,QAAO,GAAsB,cAA0B,GAEjE,IAAW,GAAI,UAAY,KAAK,MAAM,KAAM,oBAAe,GAAW,CAAE,SAClE,KAEN,WAFW,OAAK,MAAM,QAEM,QAAlB,QAAO,GAAsB,cAA0B,GAEjE,IAAW,GAAI,gBAAkB,KAAK,MAAM,IAAK,eAAU,GAAW,CAAE,SACxE,MAAW,GAAI,mBAAqB,KAAK,MAAM,IAAK,eAAU,GAAW,CAAE,SAC3E,MAAW,GAAI,mBAAqB,KAAK,MAAM,IAAK,iBAAY,GAAW,CAAE,SAE7E,MAAW,GAAI,sBAAwB,KAAK,MAAM,IAAK,gCAA2B,GAAW,CAAE,SAE/F,QAA4B,QAAlB,QAAO,GAAsB,cAA0B,GAEjE,IAAW,GAAI,aAAe,KAAK,MAAM,KAAM,gBAAW,GAAW,CAAE,SACvE,MAAW,GAAI,gBAAkB,KAAK,MAAM,KAAM,kBAAa,GAAW,CAAE,SAE5E,MAAW,GAAI,mBAAqB,KAAK,MAAM,KAAM,6BAAwB,GAAW,CAAE,SAE3F,aA1BmB,oEA2BpB,CAED,wBAyCS,WAAU,oBAClB,WAA0B,KAAK,gEAAe,QAC7C,MAMC,QANI,OAAK,MAAM,UAMT,eAKP,2GAAM,GAAmC,IAAxB,QAAK,MAAM,SAAoB,SAAW,KAAK,MAEhE,WAA4B,QAAlB,QAAO,GAAsB,cAAmB,GAE1D,IAAW,GAAI,aAAe,KAAK,MAAM,KAAM,sBAAiB,GAAW,CAAE,SAC7E,MAAW,GAAI,gBAAkB,KAAK,MAAM,KAAM,sBAAiB,GAAW,CAAE,SAChF,GAnBiB,8EAoBlB,CAED,4BA+B2B,aAC1B,IAMC,WANI,OAAK,MAAM,UAMT,OAIP,iIAEK,GAIE,EAGN,QAHW,QAAO,GAKjB,EAAmB,UAClB,OAAO,CAAE,IAAK,EAAc,MAC5B,EAGD,EAA6B,WAC5B,OAAO,CAAE,IAAK,EAAc,MAC5B,EAIF,EACA,YAlCiC,gBAoClC,WAA0B,KAAK,8DAAe,SAC7C,MAAM,EAAU,CAAE,SAAU,KAAK,MAAM,UAEvC,YAAW,GAAI,gBAAkB,KAAK,MAAM,IAAK,mBAAc,GAC/D,KAAW,GAAI,mBAAqB,KAAK,MAAM,IAAK,mBAAc,GAClE,KAAW,GAAI,mBAAqB,KAAK,MAAM,IAAK,sBAAiB,GACrE,EA1CiC,8EA2ClC,OAGF,4wBC3XA,mSARA,gBACA,cACA,eACA,eACA,OACA,gBACA,iBAOqB,cAQU,iBAAc,QAG3C,kEAMA,aAAK,SAAW,UAAS,mBAQzB,KAAK,MAAQ,cAAc,qBAAgB,IAC3C,CAED,YApBA,aA2BA,wBAKC,IAAM,GAAQ,cAAc,YAAK,KAAK,QAAQ,IAAK,kBAAQ,GAAY,SAEvE,UAAO,IAAI,GAAiB,KAAK,SAAU,EAAO,KAClD,YAED,sCAKC,OAAO,eAAqB,KAAK,SAAU,KAAK,MAAM,UAAW,KAAK,YACtE,EAED,mCAQC,IAAM,GAAgB,KACtB,WAAK,MAAQ,cAAc,YAAK,IAAgB,IAAK,kBAAQ,GAAY,SAEzE,OAAM,GAAQ,aAAQ,KAAK,SAE3B,SAAO,CAAE,MACT,EAED,6BArCC,OACA,kBA2CD,iBAOuB,aACtB,IAAiB,MADgB,eAGjC,WAAqB,EAAK,qDAAQ,UACjC,MAAK,GAEJ,OAAS,KAAM,UAAQ,SAGvB,OAAS,KAAM,UAAK,SAErB,cAXgC,qEAajC,OAAO,IAAI,GAAiB,UAAS,SAAU,EAAK,SAAU,GAAY,EAAU,EACpF,8CAxBA,OACA,qEA1EmB,kpBCRrB,iiBALA,cACA,cACA,cACA,mBAKqB,cAUY,iBAAc,QAC7C,MAAM,GAAY,EAAS,KAAK,SAChC,UAAM,EAAoB,cAAc,EAAW,CAAE,EAAU,UAI/D,+DAFO,EAAU,EAAS,EAmB1B,aAA2B,uBAC3B,CAED,YA1BA,aAqDA,8BAKC,OAAO,eAAuB,KAAK,eAAgB,KAAK,QAAS,KAAK,eAAgB,KAAK,YAC3F,EAED,gCAKC,IAAM,GAAkB,GAAI,GAAiB,KAAK,eAAgB,KAAK,QAAS,KAChF,sBAAgB,eAAiB,UAAS,mBAAoB,KAE9D,gBACA,CAED,mCAKC,IAAK,KAAK,oBACT,IAAM,GAAY,KAAK,eACvB,KAAM,EAAgB,cAEtB,sBAAU,eAAgB,KAAK,qBAK/B,GAAK,KAAK,eAAe,MAAQ,GAAa,KAAK,eAAe,KAAM,IAAO,KAC9E,2BAAK,eAAe,KAErB,IAGD,0FACA,KAED,6BAjEC,OACA,QAED,6CAOC,OAAO,MAAK,eAAe,KAC3B,EAED,MAM0B,WACzB,MAAK,eAAe,KAAM,GAC1B,WAmDD,iBAOuB,aACtB,IAAM,GAAiB,UAAS,SAAU,EAAK,eAE/C,GAAM,EAAW,GAAI,GAAiB,EAAgB,EAAK,QAAS,EAEpE,sBAAS,eAAiB,UAAS,SAAU,EAAK,eAClD,KAAS,oBAAsB,EAE/B,oBACA,mCAnBA,OACA,qEA9GmB,+lBCNrB,CAoES,YACR,OAA2B,EAApB,QAAK,WAAmB,EAC/B,I,iiBAxED,iEAqCqB,cAMM,iBAAW,QAGpC,kEAFO,EAAM,EAQb,aAAK,gBAAkB,EACvB,CAED,YAZA,wBAeI,WAAoB,8DAClB,WACJ,GAEiB,kBAAR,KAA8B,GAAQ,KAAK,uFAAoB,EAEzE,GAJgB,kBAAR,sFAEP,YAOH,mBAhCqB,iFC/BG,QAAY,WACnC,OAAO,CAAC,EAAG,GAAS,EAAO,OAC3B,U,kFCTG,kDARJ,gBACA,gBACA,gBACA,gBACA,gBACA,oBAkEe,QApDoB,eACjC,IAAI,GAAQ,CAAC,EACT,IADJ,QAEI,EAAS,EAAM,OACJ,KACF,KACT,EAEJ,KACE,EACA,SACD,YACI,IAAc,GArBrB,IAsBI,IAAI,GAAM,EAAW,KAAO,cAC5B,MACE,QAAO,cAET,GACA,SACA,UAAO,MACR,OAEC,QAAkB,KAEpB,EACA,WAAS,IAAQ,GACf,IAAI,GAAQ,EAAM,GACd,EAAW,EAAW,EAAS,GAEnC,OAAS,GAAwB,CAAV,KAAe,EACtC,EAAI,GAAY,IAAa,EAC3B,QAAI,GAAY,EAChB,OACE,QAAI,EAAK,KACP,UAGJ,OACE,KAAK,KAEP,KAAO,KACR,EACQ,KAAC,GAAS,EAAM,EACvB,KAAI,IACF,KAAK,KAEP,KAAO,KAEV,GACD,OACD,+NCrEQ,sSCAT,IA4Be,QAJO,WACpB,OAAO,CAAC,CAAC,GACV,QADmB,sBAAO,mTCzB3B,4DAGI,KAGA,EAAc,OAOlB,UAAI,EAAiB,EAErB,WAuBe,QALG,WAChB,OAAuB,QAAhB,sBAAO,sBACX,cAAa,IAAU,EAAe,KAC1C,IA9BD,iMCMA,mSAHA,gBACA,iBASqB,YAMpB,CAAa,aAAW,QAOvB,QAAK,SAQL,OACA,YAED,2CAWC,MACA,YAED,kCAOC,MACA,YAED,kCAIC,MACA,eACA,eAED,oBAxDoB,EAiErB,cAAK,I,uLCrEL,mSANA,gBACA,eACA,gBACA,eACA,iBAKqB,YAmBpB,aAA4B,2EAC3B,GAAK,CAAC,EAAQ,YAAc,CAAC,EAM5B,mBAAM,eAGP,sGAAK,EAAQ,WAAkC,SAArB,IAAQ,WACjC,UAD2D,IAAQ,eAC7D,eACL,uFACA,CAAE,UAAW,EAef,iBAAK,WAAa,EAAQ,YAS1B,UACM,SADD,EACJ,cAAgB,UAAS,mBAAoB,EAExC,eAAW,UAAS,mBAAoB,EAAQ,WAAiC,UAArB,IAAQ,UAA0B,MASpG,eAAK,UAAY,EAAQ,WASzB,eAAK,iBAAmB,CAAC,CAAC,EAS1B,sBAAK,QAAU,CAAC,CAAC,EAUjB,aAAK,iBAAmB,CAAC,CAAC,EAQ1B,sBAAK,qBAAuB,KAAK,WAAa,KAAK,WAAW,MAAM,OAQpE,UAAK,mBAAqB,KAAK,WAAa,KAAK,WAAW,IAAI,OAChE,IAED,kBAGE,OAAO,yBACR,OACA,KAED,qBAYM,WACL,IAAI,GAAM,EAEV,IACC,GAAe,KAAK,eAEA,KAAK,OAHvB,IAGQ,KAHR,IAIF,KAJD,OAIU,CAAC,GAAQ,EAEd,IACJ,SAAK,SAEN,EAED,+BAOC,OACC,SADI,OAAK,UACF,KAEP,QAAO,KAER,WAED,gCASC,IAAI,GAAW,UAAS,mBAAoB,KAC5C,UAAM,EAAmB,KACzB,SAAM,EAAS,EAGf,UAAuB,IAAlB,KAAO,QAAmB,EAAS,SAAW,EAClD,iBAAO,CAIR,YAAK,IAAW,KAAK,oBAAsB,EAAS,QAAU,KAAK,WAAW,IAC7E,aAAO,CAIR,YAGA,MAAK,eAAL,QACC,IAAK,EAEJ,oBAAK,SAAW,UAAS,YAEzB,GAAO,KAGR,UAAO,EAAO,KAAM,EACpB,OACA,QAAO,EAAO,SAAU,EAGzB,WAAK,eACC,cAAC,MACL,UAKD,WALY,cAAc,EAEzB,QAGI,SAEL,EAAO,KAAK,mBAAoB,eAAgB,EAAM,EAAkB,EACxE,GAAM,GAAK,eAAL,QACN,IAAK,KACJ,0BAAW,cAAc,EACzB,QAAK,SAEL,EAAO,KAEP,WAAI,GAAkB,EAAK,KAC3B,OAAI,EAGJ,QAAK,IAAQ,KACZ,sBAAkB,KAAK,WAAW,IAClC,SAAO,cAAe,EAAM,EAC5B,KAAW,UAAS,YAGpB,MAGD,cAAK,SAEL,EAAO,KAAK,mBAAoB,OAAQ,EAAM,EAAkB,EAEjE,EAxBM,CAwBA,GAAoB,QAAf,QAAO,GAClB,IAEA,MAAK,KACJ,mBACA,MAEA,IAAM,GAAY,IAAW,KAAK,mBAAqB,KAAK,WAAW,IAAI,OAAS,EAAO,KAE3F,SAAa,EAAY,EACzB,MAED,IAAM,GAAY,cAAe,EAAQ,EAAS,OAElD,YAAS,QACT,OAAK,SAEL,EAAO,KAAK,mBAAoB,OAAQ,EAAW,EAAkB,EACrE,EAEA,UAAW,UAAS,YACpB,QAAK,SAEL,EAAK,KACJ,iBAAO,KAEP,QAAO,KAAK,mBAAoB,aAAc,EAAQ,EAGxD,EAED,oCASC,IAAI,GAAW,UAAS,mBAAoB,KAC5C,UAAM,EAAmB,KACzB,SAAM,EAAS,EAGf,UAAuB,IAAlB,KAAO,QACX,CAD8B,KAAS,aAChC,CAIR,YAAK,GAAU,KAAK,sBAAwB,EAAS,QAAU,KAAK,WAAW,MAC9E,aAAO,CAIR,YAGA,MAAK,eAAL,QACC,IAAK,EAEJ,sBAAK,SAAW,UAAS,aAEzB,GAAO,KAGR,cAAO,EAAO,KAAM,EAAS,OAC7B,EACA,QAAO,EAAO,SAAU,EAAS,OAGlC,MAAK,eACC,cAAC,MACL,WAUA,cAAK,SAEL,EAAO,KAAK,mBAAoB,eAAgB,EAAM,EAAkB,EAEzE,OAdY,cAAc,EAAM,EAC/B,iBAAK,SAEL,EAAK,KACJ,iBAAO,KAEP,YAAO,KAAK,mBAAoB,aAAc,EAAM,EAGrD,IAKK,GAAK,eAAL,QACN,IAAK,KACJ,0BAAW,cAAc,EAAM,EAAK,KACpC,aAAK,SAEL,EAAO,KAEP,eAAI,GAAkB,EAAK,KAC3B,OAAI,EAGJ,KAAK,GAAQ,KAAK,qBACjB,IAAM,GAAS,KAAK,WAAW,MAE/B,SAAO,cAAe,EAAM,EAAQ,EAAK,KAAK,OAC9C,KAAkB,EAAK,KACvB,SAAW,UAAS,aACpB,EAEA,QAGD,qBAAK,SAEL,EAAO,KAAK,mBAAoB,OAAQ,EAAM,EAAkB,EAEjE,EA1BM,CA0BA,GAAoB,QAAf,QAAO,GAClB,IAEA,MAAK,CAAC,KAAK,iBAEV,IAAM,GAAc,IAAW,KAAK,qBAAuB,KAAK,WAAW,MAAM,OAEjF,IAAa,EAAS,OACtB,CACA,QAGD,IAAS,QAET,KAAM,GAAY,cAAe,EAAQ,EAAS,OAElD,eAAK,SAEL,EAAO,KAAK,mBAAoB,OAAQ,EAAW,EAAkB,EACrE,EAEA,UAAW,UAAS,aACpB,QAAK,SAEL,EAAO,KAAK,mBAAoB,eAAgB,EAAQ,EAAkB,EAE3E,EAED,mCAWgE,mBAK/D,OAAK,gBAEJ,UAAK,EAAK,aAAe,EAAK,KAAK,QAAU,EAAK,SAAS,KAC1D,SAAoC,SAA/B,OAAK,WAA6B,KAAK,YAAc,KAAK,WAAW,IAAI,QAAS,KACtF,YAImB,UAAS,YAAa,EAK3C,aATiB,UAAS,YAAa,EAErC,eAAK,SAEL,IAMD,CADI,KAAK,eAC4B,UAAhC,OAAK,WAA8B,KAAK,YAAc,KAAK,WAAW,MAAM,QAAS,KACzF,YAImB,UAAS,aAAc,EAK7C,aATkB,UAAS,aAAc,EAEtC,eAAK,SAEL,KAMF,CACA,cACC,MACA,OACA,mBACA,eACA,SAGF,SAqCF,cAhdqB,iFClBrB,+DAEA,OAae,QALY,aACzB,IAAI,GAAQ,EACZ,SAAO,cAAS,GACjB,0FCTD,gQAJA,cACA,kBAGI,EAAe,mDACf,EAEJ,UAqBe,QAbO,aACpB,IAAI,cACF,GAEF,YAAI,sBAAc,iBAClB,SAAY,QAAR,KAA4B,QAAR,KAA4B,SAAR,KAC/B,IAAT,KAAiB,cAGrB,IAAO,EAAc,KAAK,IAAU,CAAC,EAAa,KAAK,IAC1C,IAAV,KAAkB,IAAS,QAC/B,mFC1BD,8DAGI,OAiBW,QARA,WACb,IAAoB,QAAhB,QAAO,IAAqB,cAC9B,SAEF,MAAI,GAAU,EACd,SAAkB,GAAV,KAAkB,EAAI,GAAW,EAd5B,EAEf,GAYuD,KACtD,qEClBD,aAoCe,QAJI,aACjB,OAAO,KAAU,GAAU,IAAU,GAAS,IAC/C,ySCtBD,mSAHA,iBACA,iBA8BqB,YASpB,CAAa,aAAQ,QASpB,QAAK,OAQL,UAAK,OAAS,cACd,EAED,kBAgJA,wBAMC,OAAO,IAAI,GAAM,KACjB,OAED,kCAiBC,QACA,MAAI,EAEJ,KAAQ,EACP,UAAK,QAAS,EACd,eAAO,EAGR,aACA,EAED,uCASqE,kEAA7C,CAAe,eACtC,gBACA,KAAI,EAAS,EAAQ,YAAc,KAAO,KAE1C,OACC,KAAW,EAAQ,YAAc,OAAS,WAC1C,KAAS,EAGV,aACA,EAED,iCAIC,MAAK,OAAO,eAAgB,KAC5B,MAED,6BAMc,WACb,OAAO,MAAK,OAAO,IACnB,EAED,6BAMc,WACb,OAAO,MAAK,OAAO,IACnB,EAED,wCASC,OAAO,MAAK,OACZ,SAED,2CAMC,OAAO,MAAK,OACZ,MAED,6BAMmB,aAClB,MAAK,OAAO,IAAK,EACjB,EAED,gCAKiB,WAChB,MAAK,OAAS,cACd,EAED,gCAMiB,WAChB,OAAO,MAAK,OAAO,OACnB,EAED,0CAIC,MAAK,OACL,OAED,iCAMC,IAEA,YAAK,MAAK,OACT,SAAK,uBAAkB,KAGxB,UACA,CAED,8BAnSC,IAEA,MAAK,CAAC,KACL,aAGD,SAMC,IANI,IAAE,EAAM,KAAK,OAAO,cAAe,YAMjC,eAGP,wFACA,EAED,oCAWC,IAEA,MAAK,CAAC,KACL,aAGD,SAMC,IANI,IAAE,EAAM,KAAK,OAAO,oBAAqB,YAMvC,eAGP,wFACA,EAED,mCAUC,OACA,EAED,kCASM,OAAC,MACL,OAGM,KAAK,YAAc,KAC1B,WADA,IAGD,oCAOC,IAAM,GAAQ,KAEd,YAAmB,KAAV,MAAkB,KAAK,OAAO,SAAU,EAAQ,IACzD,IAED,wCAOC,IAAM,GAAQ,KAEd,YAAmB,KAAV,MAAkB,KAAK,OAAO,SAAU,EAAQ,IACzD,IAED,6BAQC,QAAI,GAEJ,KAAQ,EACP,UAAO,EAGR,aACA,EAED,iCASC,OAAK,MAAK,MACT,KAID,KAAO,KAAK,KAAK,UACjB,wBA3KmB,gLCtBrB,CA+rB6C,eAC5C,QAAK,EAAQ,IAIb,OAAQ,IAIR,GAAO,EAAQ,SAAS,OAAO,YAAa,EAAQ,KAAM,WAAc,EACxE,OAGD,CACmC,eAClC,IAAM,GAAY,EAAS,OAAO,aAAc,CAAe,eAC/D,iBAAM,EAAQ,EAAU,KAAM,kBAAW,GAA2B,EAAS,EAI7E,YAAU,QAAS,kBAAW,GAAQ,IAAK,EAE3C,GACA,C,+sBA/tBD,eACA,cACA,cACA,cACA,cACA,cACA,gBACA,mBAOqB,YAQpB,CAAqB,eAAiB,QAOrC,QAQA,2BAQA,gBAAK,OAAS,GAEd,KACC,QAAK,UAAW,EAEjB,EAED,kBA6EA,gBAOS,WACR,IAAK,KAAK,YAAc,EACvB,WACA,SAAM,GACN,CADW,QAAK,WAIjB,YAAK,CAAC,KAAK,OAAO,QAAS,EAAe,SAAY,CAAC,KAAK,MAAM,QAAS,EAC1E,OACA,YATwB,gBAWzB,WAAyB,KAAK,yDAAU,UACvC,MAAY,MAD2B,yBAGvC,YAA0B,EAAe,2DAAU,eAClD,MAAK,GAAU,QAAS,IACvB,CACA,MACA,KACD,WARsC,4EAUvC,IAAK,CACJ,GAED,QAxBwB,gFA0BzB,CACA,QAED,gMAMsB,KAAK,0EAAd,O,qBACL,UAAM,gBAAiB,yVAI/B,yCAWC,IAAI,GAAQ,KADG,eAGf,WAAqB,KAAK,uDAAU,UACnC,OAAK,CAAC,GAAS,GAAM,MAAM,SAAU,EACpC,YAED,aAPc,qEASf,OAAO,GAAQ,UAAM,gBAAiB,GACtC,IAED,uCAWC,IAAI,GAAO,KADG,eAGd,WAAqB,KAAK,uDAAU,UACnC,OAAK,CAAC,GAAQ,GAAM,IAAI,QAAS,EAChC,UAED,aAPa,qEASd,OAAO,GAAO,UAAM,gBAAiB,GACrC,IAED,2CAUC,IAAM,GAAQ,KAEd,sBAAO,GAAQ,UAAS,mBAAoB,EAAM,OAClD,IAED,0CAUC,IAAM,GAAY,KAElB,qBAAO,GAAY,UAAS,mBAAoB,EAAU,KAC1D,IAED,yBAgBU,WAA4B,4DACrC,QAAK,WACL,QAAK,mBAAqB,CAAC,CAE3B,OAAK,KAAM,eAAgB,CAC3B,iBAED,0CAMC,CACC,CADI,MAAK,QAAQ,cAEjB,wBAAK,KAAM,eAAgB,CAE5B,kBAED,0BAWW,WAAoC,mEAC9C,KAAY,MAAM,KAGlB,MAAM,GAAc,EAAU,KAAM,YACnC,IAAK,EAAG,gBACP,cAAM,eAGP,oGAAO,GAAK,QAAQ,MAAO,YAC1B,OAAO,CAAC,GAAS,QACjB,GACD,EAGD,MAAK,EAAU,SAAW,KAAK,QAAkB,QAIjD,QAAK,sBAnByC,iBAqB9C,YAAqB,oDAAY,WAChC,WAAK,WACL,aAvB6C,yEAyB9C,MAAK,mBAAqB,CAAC,CAE3B,OAAK,KAAM,eAAgB,CAC3B,kBAED,sBAKO,WACN,MAAK,UAAW,EAAe,YAAa,EAC5C,WAED,yBAU0B,aACzB,IAAM,GAAM,UAAS,SAAU,EAC/B,GAAM,EAAQ,cAAW,EAEzB,QAAK,UAAW,CAChB,GAED,0CAQC,IAAM,GAAgB,KAEtB,mBACC,IADI,WACC,UAAW,CAAE,cAAW,EAE9B,IAED,wCAQC,IAAM,GAAc,KAEpB,kBACC,IADI,WACC,UAAW,CAAE,cAAW,EAE9B,IAED,yBAU0B,aACzB,IAMC,IANI,QAAK,YAMH,eAKP,0GAAM,GAAW,UAAS,SAAU,EAEpC,MAIA,MAJK,IAAS,YAAa,KAAK,WAI1B,GAAS,KAEf,OAAK,KAAK,QACT,aAGD,YACC,QADI,IAAS,YAAa,QACrB,SAAU,cAAW,EAE1B,YAAK,SAAU,cAAW,EAE3B,IAED,6BAMc,WACb,OAAO,MAAK,OAAO,IACnB,EAED,wCASC,OAAO,MAAK,OACZ,SAED,2CAMC,OAAO,MAAK,OACZ,MAED,6BAMc,WACb,OAAO,MAAK,OAAO,IACnB,EAED,0CASC,IAAwB,CAAnB,MAAK,OAAO,KAChB,IAAM,GAAgB,MAAM,KAAM,KAAK,OACvC,aAAK,OAEL,aAAK,KAAM,mBAAoB,CAAE,cAAF,EAC/B,iBACD,CAED,gCASiB,WAChB,CAAK,KAAK,aACT,UAAK,OAAO,OAEZ,QAAK,KAAM,mBAAoB,CAAE,cAAe,CAAE,GAEnD,kBAED,6BAUmB,aAClB,CAAK,KAAK,aAAc,KACvB,SAAK,OAAO,IAAK,EAEjB,QAAK,KAAM,mBAAoB,CAAE,cAAe,CAAE,GAEnD,kBAED,gCASiB,WAChB,MAAQ,cAER,GAAK,CAAC,cAAW,EAAO,KAAK,QAE5B,IAAM,GAAU,GAAI,KAAK,MAAM,KAAM,EAAM,QAAS,OAAQ,MAAM,KAAM,KAAK,OAAO,UAF7C,eAIvC,WAA8B,qDAAQ,2CAErC,GAAK,KAAK,OAAO,IAAK,MACrB,MAAQ,OAET,GATsC,gFAWvC,MAAK,OAEL,OAAK,KAAM,mBAAoB,CAAE,cAAe,MAAM,KAAM,GAC5D,iBACD,CAED,6CAQC,IACC,CADI,QAAK,iBAIV,SAAM,GAAQ,KACd,gBAAM,EAAiB,EAAM,MAC7B,UAAM,EAAgB,EAAM,IAE5B,iBAAS,yBAAqC,GAAkB,EAAkB,EAClF,IAED,iMAsBO,G,EAAU,GAAI,wCAEC,KAAK,8EAAd,I,KACL,M,GAAa,EAAgB,GAAM,MAAO,IAE3C,uCACE,+CAGc,GAAM,kFAAf,I,cACQ,YAAd,KAAM,MAAwB,EAA2B,GAAM,KAAM,wCACnE,GAAM,kSAIR,O,GAAW,EAAgB,GAAM,IAAK,IAEvC,uCACE,oXAKT,SAcA,mBAOY,WACX,IAAK,EAAG,eACP,cAAM,eAGP,mGAAK,YACL,QAAK,QAAQ,KAAM,UAAM,gBACzB,GAED,4BAMa,WACZ,KAAM,GAAI,GAAI,EAAG,EAAI,KAAK,QAAQ,OACjC,OAAK,EAAM,eAAgB,KAAK,QAQ/B,SAAM,eACL,6GACA,CAAE,WAAY,EAAO,kBAAmB,KAAK,QAIhD,IAED,oCAMC,MAAK,QACL,KAED,2CAOC,MACC,CADO,MAAK,QAAQ,aAGrB,WAeD,+BAxnBC,IAA2B,CAAtB,MAAK,QAAQ,OACjB,IAAM,GAAQ,KAAK,QAAS,KAAK,QAAQ,OAEzC,SAAO,MAAK,mBAAqB,EAAM,IAAM,EAC7C,KAED,OACA,KAED,8BAUC,IAA2B,CAAtB,MAAK,QAAQ,OACjB,IAAM,GAAQ,KAAK,QAAS,KAAK,QAAQ,OAEzC,SAAO,MAAK,mBAAqB,EAAM,MAAQ,EAC/C,GAED,OACA,KAED,oCAQC,IAAM,GAAS,KAAK,QAEpB,aACC,EADI,MACG,KAAK,QAAS,GAItB,WAED,mCAMC,OAAO,MAAK,QACZ,MAED,mCAOC,OAAO,CAAC,KAAK,aAAe,KAC5B,wDAye2B,WAC3B,IAAM,GAAY,GAClB,eAAU,MAEV,GACA,qBA/lBmB,EAsrBrB,cAAK,IAGL,oICrsBA,mSAFA,kEA+BqB,YAWpB,CAAqC,iBAAS,WAO7C,QAAK,SAEL,EAAoB,CAAf,IAAoB,EAAe,EAMvC,gBAAM,eAGP,iFAAc,CAAT,IAAc,EAAe,EAAS,EAM1C,gBAAM,eASP,uEAAK,KAAO,EAAS,KAAK,UAAW,EAAc,EAQnD,QAAK,aACL,CAED,kBA+EA,WAQI,WACH,OACA,WADO,GAGR,kCAOC,IAAM,GAAO,KAAK,SAElB,gBACC,EADI,GAAK,WACH,EAAK,OAAS,IAAO,KAG5B,cACA,CAED,uCASqE,kEAA7C,CAAe,eACtC,gBACA,KAAI,EAAS,EAAQ,YAAc,KAAO,KAE1C,OACC,KAAW,EAAQ,YAAc,OAAS,WAC1C,KAAS,EAGV,aACA,EAED,6BAMc,WACb,OAAO,MAAK,SAAS,aACrB,EAED,6BAMc,WACb,OAAO,MAAK,SAAS,aACrB,EAED,wCASC,OAAO,MAAK,SACZ,eAED,2CAMC,OAAO,MAAK,SACZ,sDA/JA,OAAqC,KAA9B,QAAK,SAAS,YACrB,KAD4C,KAAK,SAAS,YAAc,KAAK,YAG9E,mCAQC,OAAO,MAAK,KACZ,MAED,kCAQC,OAA4B,KAArB,QAAK,YACZ,KADmC,KAAK,YAAc,KAAK,UAG5D,kCAYC,OAAO,MAAK,aAAe,KAAK,SAChC,UAED,+BAOC,OAAO,MAAK,SACZ,MAED,6BAOC,OAAO,MAAK,SACZ,IAED,iCAQC,OAAO,MAAK,SACZ,4BApImB,gCC6Ca,aACjC,OAAS,aAAmB,OAAY,EAAQ,KAAK,OAAQ,EAAG,KAChE,CAED,CAkEoC,eACnC,IAAK,EAAK,SAAW,WAAS,UAC7B,IAAM,GAAe,EAAK,UAAU,cAAc,YAElD,kBAAgC,CAA3B,IAAa,YAAmB,EAAa,WAAY,GAAI,UACjE,IAAM,GAAY,EAAa,WAAY,GAC3C,eAAM,EAAY,EAAa,WAAY,GAE3C,YAAK,EAAkB,IAAe,GACrC,KAAa,SAAU,EAExB,EACD,CACD,C,4HAnFe,qBAaA,eAAgB,WAC/B,OAAO,GAAQ,KAAK,QAAU,GAAwB,EACtD,EAED,IAUgB,qBAAsB,WACrC,OAAK,GACJ,GAAO,EAAQ,KAAK,MAEpB,GAAO,EAER,IAED,IAagB,cAAwB,aACvC,IAAI,GAAsB,EAAqB,IAE1C,SACJ,OAAsB,EAAa,OACnC,YAAqB,IAAK,EAG3B,IAAO,EAAQ,YACf,EAED,IAMgB,qBAAsB,WACrC,GAAS,GAAI,UACb,EAED,EApFA,IAAM,QA1BC,IAAM,cAAY,WACxB,IAAM,GAAW,EAAY,cAC7B,eAAS,QAET,aACA,CASM,EAAM,gBAAc,kBAAe,GAAY,eAAgB,OAK/D,EAAM,yBAKN,EAAI,kBAAgB,GAEjB,EAAI,EAAG,EAAI,EACpB,uBAGD,SA+CA,GAAM,GAAuB,GAE7B,ypBC/GA,mSAHA,gBACA,mBA0BqB,cAqBP,aAAW,QAGvB,kEAMA,aAAkB,cAClB,CAED,YAZA,6BAeS,WAAa,OACrB,KAAM,EAAoC,QAA5B,QAAO,MAAK,aAA2B,CAAE,KAAK,cAAiB,KAE7E,eAAM,QAAS,WACd,GAAK,SAAU,EAAY,EAAmB,aAC7C,CAAK,EACJ,aAAK,WAEN,EAJD,EAIG,CAAE,WAAY,EACjB,YACD,EAED,qBAS2B,eAC1B,CAAK,KACJ,gBAAK,SAAS,KAAM,EAAW,cAAkB,KAAK,SAAU,EAEjE,gCA7DmB,gLCpBrB,mSAPA,eACA,eACA,eACA,cACA,cACA,kBAkBqB,YAQpB,CAAqB,eAAiB,QAOrC,QAQA,gBAQA,2BAQA,gBAAK,oBAEL,GACC,QAAK,UAAW,EAEjB,EAED,4CAasC,uHACrC,WAAK,QACL,OAAK,oBAAsB,EAAQ,EAAQ,OAAS,GAEpD,QAAK,KACL,SAED,QAiGA,iBAeiB,aAChB,IAAK,EAAG,eACP,cAAM,eAGP,qDAAK,WACL,QAAK,mBAAqB,CAAC,CAC3B,OAAK,KACL,SAED,4LAMsB,KAAK,yEAAd,O,oBACL,UAAM,gBAAiB,4UAI/B,yCASC,IAAI,GAAQ,KADG,eAGf,WAAqB,KAAK,sDAAU,SACnC,OAAK,CAAC,GAAS,EAAM,MAAM,SAAU,EACpC,YAED,WAPc,oEASf,OAAO,GAAQ,UAAM,gBAAiB,GACtC,IAED,uCAQC,IAAI,GAAO,KADG,eAGd,WAAqB,KAAK,sDAAU,SACnC,OAAK,CAAC,GAAQ,EAAM,IAAI,QAAS,EAChC,UAED,WAPa,oEASd,OAAO,GAAO,UAAM,gBAAiB,GACrC,IAED,2CAQC,IAAM,GAAa,KAEnB,sBAAO,GAAa,UAAS,mBAAoB,EAAW,OAC5D,IAED,0CAQC,IAAM,GAAY,KAElB,qBAAO,GAAY,UAAS,mBAAoB,EAAU,KAC1D,IAED,wBAOS,WACR,IAAK,KAAK,QAAU,EACnB,OAGD,YAAK,KAAK,QAAU,KAAK,oBAAsB,EAC9C,mBAGD,YAAK,KAAK,YAAc,EACvB,WACA,SAAM,GACN,CADW,QAAK,WAIjB,YAAK,CAAC,KAAK,OAAO,QAAS,EAAe,SAAY,CAAC,KAAK,MAAM,QAAS,EAC1E,OACA,YAjBwB,gBAmBzB,WAAyB,KAAK,yDAAU,SACvC,MAAY,KAD2B,sBAGvC,WAA0B,EAAe,uDAAU,aAClD,MAAK,EAAU,QAAS,IACvB,CACA,KACA,KACD,WARsC,qEAUvC,IAAK,CACJ,EAED,QAhCwB,gFAkCzB,CACA,QAED,0CAMC,CAAK,KAAK,QACT,cACA,gBAAK,KAEN,UAED,0BAUsB,aACrB,MAAe,cADuB,gBAGtC,WAAqB,qDAAY,QAChC,MAAK,EAAG,eACP,cAAM,eAGP,qDAAK,WACL,EATqC,8EAWtC,MAAK,mBAAqB,CAAC,CAC3B,OAAK,KACL,SAED,sBAKO,WACN,MAAK,QAAU,EACf,aAAK,oBAAsB,EAE3B,yBAAK,UAAW,EAAe,YAAa,EAC5C,WAED,yBAU0B,aACzB,IAAM,GAAM,UAAS,SAAU,EAC/B,GAAM,EAAQ,cAAW,EAEzB,QAAK,UAAW,CAChB,GAED,0CAQC,IAAM,GAAgB,KAEtB,mBACC,IADI,WACC,UAAW,CAAE,cAAW,EAE9B,IAED,wCAQC,IAAM,GAAc,KAEpB,kBACC,IADI,WACC,UAAW,CAAE,cAAW,EAE9B,IAED,yBAU0B,aACzB,IAMC,IANI,QAAK,YAMH,eAGP,yGAAM,GAAW,UAAS,SAAU,EAEpC,MAIA,MAJK,IAAS,YAAa,KAAK,WAI1B,GAAS,KAEf,YAAK,QAEL,MACC,QADI,IAAS,YAAa,QACrB,SAAU,cAAW,EAE1B,YAAK,SAAU,cAAW,EAE3B,IAED,6CAQC,IACC,CADI,QAAK,iBAIV,SAAM,GAAQ,KACd,gBAAM,EAAiB,EAAM,MAC7B,UAAM,EAAgB,EAAM,IAE5B,iBAAS,yBAAqC,GAAkB,EAAkB,EAClF,IAED,QAcA,mBASY,WAAQ,oBACnB,WAA2B,KAAK,sDAAU,YACzC,MAAK,EAAM,eAQV,QAAM,eACL,4GACA,CAAE,WAAY,EAAO,kBAGvB,YAfkB,oEAiBnB,MAAK,QAAQ,KAAM,UAAM,gBACzB,kCA5aA,OAAO,MACP,OAED,2CAOC,OAAO,MACP,mBAED,+BAUC,IAAK,CAAC,KAAK,QACV,aAED,SAAM,GAAQ,KAAK,QAAS,KAAK,QAAQ,OACzC,GAAM,EAAS,KAAK,mBAAqB,EAAM,IAAM,EAErD,YAAO,WAAS,mBAChB,EAED,8BAOC,IAAK,CAAC,KAAK,QACV,aAED,SAAM,GAAQ,KAAK,QAAS,KAAK,QAAQ,OACzC,GAAM,EAAQ,KAAK,mBAAqB,EAAM,MAAQ,EAEtD,UAAO,WAAS,mBAChB,EAED,oCAOC,OAA2B,EAApB,QAAK,YAAoB,KAAK,QAAS,GAC9C,WAED,mCAMC,OAAO,MAAK,QACZ,MAED,mCAMC,OAAO,CAAC,KAAK,aAAe,KAC5B,kBAED,wCAOC,OAAK,MACJ,OAAO,KAAK,OAGb,gBACA,0CAkT2B,WAC3B,IAAM,GAAY,GAClB,YAAU,MAEV,GACA,qBAxdmB,EAwfrB,cAAK,IAQL,wFCvgBwB,QAAkB,aACzC,KAEM,GAFA,GAAc,SAAK,EAAE,OAAQ,EAEnC,QAAU,EAAI,EAAG,EAAI,EACpB,OAAK,EAAG,IAAO,EAEd,SAKF,SAAK,GAAE,QAAU,EAEhB,OACM,OAAK,EAAE,OAAS,EAEtB,OAGA,SAED,WAED,iFCjCwB,QAAO,WAC9B,IAAM,GAAe,EAErB,aAAK,GACJ,KAGD,KAAO,EACP,K,gLCPD,mSALA,gBACA,eACA,cACA,iBAeqB,YACpB,aAAc,QAQb,QAAK,IAQL,qBAAK,eAQL,UAAK,UAAY,GAQjB,UAAK,sBACL,IAED,8BAKK,WAAU,OACd,QAAK,KAAK,UAAU,IACnB,QAAM,eAGP,+CAAK,SAAU,EAAS,QAAS,iBAAM,GAAK,OAAQ,EAApD,EAA+D,CAC/D,qBAAK,SAAU,EAAS,OAAQ,iBAAM,GAAK,OAA3C,EAAoD,CACpD,qBAAK,UAAU,IACf,EAED,uBAKQ,WACP,CAAK,IAAY,KAChB,qBAAK,MAGN,GAAK,KAAK,UAAU,IACnB,UAAK,cACL,QAAK,UAAU,OAEhB,GAED,uBAMQ,WACP,cAAc,KAEd,4BAAK,eACL,OACA,YAED,gCAOQ,OACP,kBAAc,KAEd,4BAAK,sBAAwB,WAAY,UACxC,GAAK,eACL,OACA,YAH4B,EAI7B,EAMD,oBApGoB,EAyGrB,cAAK,aACL,cAAK,I,oIC3HL,mSAHA,gEACA,WAgBqB,YAIpB,aAAc,QAOb,QAAK,UAAY,OAAO,SAQxB,cAAK,YAAc,GACnB,IAED,mCAKU,WAAU,OACnB,UAAK,UAAU,SAAU,EAAS,UAAkB,aACnD,GAAK,MACL,EACD,EAED,oBASgB,aACf,IAAM,GAAU,qBAChB,GAAM,EAAY,KAAK,YAAY,IAEnC,GACC,IAAU,KAEV,QAAK,YAAY,IAAK,EAAS,CAEhC,GAED,sBAMO,WACN,IAAM,GAAU,cAChB,GAAM,EAAY,KAAK,YAAY,IAEnC,MAAK,CACJ,EACA,YANoB,gBAQrB,WAAwB,gDAAY,SACnC,QAAU,EAAc,UACvB,GACA,mBACA,iBACD,WAboB,oEAerB,CACA,QAED,kCAIC,MAAK,YAAc,GACnB,UAAK,UACL,mCAnFmB,iFC1BrB,8DAGA,KAAI,EAAc,OAGlB,UAAI,EAAiB,EAErB,iBAkBe,QARmB,eAChC,IAAI,GAAW,EACf,GAAM,EAAe,KAAK,EAAQ,IAAQ,cAAG,EAAU,EAAnD,GACwB,YAAE,IAC5B,QAAO,GAEV,oFChBG,kDARJ,gBACA,gBACA,gBACA,eACA,gBACA,qBA6De,QA7CkC,iBAC/C,IAAI,GAAQ,CAAC,EACT,IADJ,QAEe,KACX,EAAS,EAAM,OACN,KACT,EAAe,EAEnB,UAAI,CACF,QAEF,GACE,MAAS,cAAS,EAAQ,cAE5B,KACE,OACA,QAEG,MAAI,EACP,QA9BJ,UA+BI,QACA,OAAS,cAEX,IACA,WAAS,IAAQ,GACf,IAAI,GAAQ,EAAM,GACd,EAAW,EAAW,EAAS,GAEnC,OAAS,GAAwB,CAAV,KAAe,EACtC,EAAI,GAAY,IAAa,EAC3B,QAAI,GACJ,EACE,QAAI,EAAO,KACT,UAGJ,SAAO,KACR,EACQ,KAAC,GAAS,EAAQ,EACzB,MAAO,KAEV,EACD,OACD,oFCzDD,kDAPA,iBACA,gBACA,gBACA,eACA,eACA,oBAkDe,QApBD,WACZ,IAAI,GAAU,cACd,MAAI,EAAE,GAAW,cACf,UAAO,cAET,MAAI,GAAU,cACV,GACA,EAAoB,MACpB,EAAS,EAEb,WAAK,GAAI,KACP,GAAI,eAAQ,EACR,IANY,CAAC,CAAC,CAMZ,GAAuB,QAAP,KAAmB,cAAQ,EAC7C,KAAE,GACJ,aADe,OACR,KAGX,SACD,mF1EtCuB,kBACvB,KAEM,GAFF,GAEJ,IAAU,EAAI,EAAO,CAAJ,GAChB,kBAA4C,KAAxB,EAAE,EAAI,KAAK,WAAuB,SAAU,IAAK,UAGtE,SACA,E,wS2EXD,mSAHA,gBACA,iBAOqB,YAMpB,CAAa,aAAQ,QAOpB,QAEA,UACC,QAAK,YAAa,EAEnB,EAED,kBAKE,OAAO,yBACR,OAAO,MAAK,OAAQ,OACpB,WAED,QAoBA,gBAMS,WACR,OAAO,MAAK,OAAQ,IACpB,IAED,6BAMc,WACb,IAAM,GAAQ,KAAK,OAAO,QAE1B,SAAgB,CAAC,CAAV,IAAc,KACrB,CAED,mCAOoB,WACnB,IAAM,GAAQ,KAAK,aAEnB,SAAiB,KAAV,KAAiB,KAAO,KAAK,OAAO,MAAO,EAAG,GAAQ,OAAe,aAAP,OAAiB,GAAM,EAAK,UAAlE,EAC/B,EAED,8BASe,WACd,IAAK,GAAS,KAAK,OAClB,aAAO,MAGR,aAAM,GAAO,KAAK,OAElB,MAAK,CAMJ,OAAM,eAGP,2FAAO,MAAK,mBACZ,EAED,8BASe,WACd,IAAI,GAAc,EADK,eAGvB,WAAoB,KAAK,0DAAS,QACjC,MAAK,GAAU,GAAe,EAAS,EAAc,EACpD,iBAAO,MAAK,aAGb,MAAe,EACf,UATsB,8EAWvB,IAAK,GAMJ,OAAM,eAGP,6FAAO,MACP,MAED,4BAMoB,aAAQ,eAC3B,EAD2B,KAE3B,WAAoB,gDAAQ,YAC3B,MAAK,EAAG,eAMP,cAAM,eAEP,yGAX0B,oEAa3B,SAAK,QAAO,gBAAQ,EAAO,YAC3B,IAED,4BAOa,WAA0B,8DACtC,QAAO,MAAK,OAAO,OAAQ,EAC3B,EAED,iCAOC,OAAO,MAAK,OAAO,IAAK,kBAAQ,GAAK,QACrC,iCArJA,OAAO,MAAK,OACZ,MAED,kCAOC,OAAO,MAAK,OAAO,OAAe,aAAP,OAAiB,GAAM,EAAK,UAAhD,EACP,sBA/CmB,kpBCFrB,mSANA,gBACA,cACA,cACA,eACA,mBASqB,cAmByB,qBAAc,QAG1D,kEAMA,aAAK,MAAQ,UAAM,gBAQnB,KAAK,IAQL,IAAK,SAAwB,WAAY,KAQzC,IAAK,SAAwB,WAAY,KAAO,EAChD,CAED,YApCA,aAiDA,wBAKC,OAAO,IAAI,GAAoB,KAAK,MAAO,KAAK,IAAK,KAAK,SAAU,KAAK,SAAU,KACnF,YAED,sCAKC,OAAO,IAAI,GAAoB,KAAK,MAAO,KAAK,IAAK,KAAK,SAAU,KAAK,SAAU,KAAK,YACxF,EAED,mCAIC,IADU,gBAEV,WAAoB,KAAK,MAAM,8DAAa,QAC3C,MAAuB,IAAlB,QAAK,UAAqB,CAAC,cAAS,EAAK,aAAc,KAAK,KAAO,KASvE,eAAM,OAEL,mIACA,CAAE,KAAF,EAAQ,IAAK,KAAK,IAAK,MAAO,KAIhC,cAAuB,IAAlB,QAAK,UAAuC,IAAlB,QAAK,UAAqB,EAAK,aAAc,KAQ3E,UAAM,eACL,qFACA,CAAE,KAAM,EAAM,IAAK,KAQrB,SAAK,cAAS,KAAK,SAAU,KAC5B,UAED,MAED,UA1CU,oEA2CV,kBAAO,aAAc,KAAK,MAAO,KAAK,IAAK,KAE3C,UAAO,CAAE,MAAO,KAAK,MAAO,IAAK,KAAK,IAAK,SAAU,KAAK,SAAU,SAAU,KAC9E,SAED,6BA5EC,OACC,KADI,QAAK,SAEH,eACN,IADW,QAAK,SAGhB,kBAED,2BA4ED,iBAOuB,aACtB,OAAO,IAAI,GAAoB,UAAM,SAAU,EAAK,MAAO,GAAY,EAAK,IAAK,EAAK,SAAU,EAAK,SAAU,EAC/G,8CAZA,OACA,wEA5ImB,+lBCXrB,mSAFA,mEAYqB,0IACpB,wBAKC,OAAO,IAAI,GAAa,KACxB,YAED,sCAKC,OAAO,IAAI,GAAa,KAAK,YAC7B,EAED,mCAKC,CAED,oCAIC,OACA,iEA7BmB,kpBCPrB,mSALA,gBACA,cACA,cACA,kBAEM,EAAiB,OAEvB,YAOqB,cAIM,iBAAW,QAGpC,kEAFO,EAAM,EAQb,aAAK,IAYL,mBAAK,IAEL,gBAQA,aA/BD,sCAkCC,OAAO,MAAK,kBACZ,E,MAEa,WAAW,OACxB,QAAK,KAAK,kBAMT,QAAM,eAGP,iFAAK,kBAAmB,EAExB,QAAK,KAAM,aAAc,GACxB,EACA,YACA,kBAAa,IAAa,EAAS,UAAU,iBAA7C,CAKD,QAAK,SAAU,EAAU,SAAU,UAClC,GAAK,UAAY,EAAS,WAAa,EAAS,UAAU,iBAC1D,CAFD,EAEG,CAAE,SACL,qCAhEmB,EAmErB,cAAK,I,uLC7EL,mSAJA,eACA,cACA,iBAOqB,YAMpB,aAAc,QAOb,QAAK,OACL,IAED,kBAqFA,+BASqE,kEAA7C,CAAe,eACtC,gBACA,KAAI,EAAS,EAAQ,YAAc,KAAO,KAE1C,OACC,KAAW,EAAQ,YAAc,OAAS,WAC1C,KAAS,EAGV,aACA,EAED,iCAIC,MAAK,OAAO,eAAgB,KAC5B,MAED,4BAKmB,aAClB,MAAK,KAAM,UAAY,EAEvB,GAAK,KACJ,aAAK,OAAO,YAAa,EAE1B,EAgBD,8BAlIC,IAEA,MAAK,CAAC,KACL,aAID,SAAoD,CAMnD,CANI,GAAE,EAAM,KAAK,OAAO,cAAe,YAMjC,eAGP,uFACA,EAED,oCAOC,IAAM,GAAQ,KAEd,YAAmB,KAAV,MAAkB,KAAK,OAAO,SAAU,EAAQ,IACzD,IAED,wCAOC,IAAM,GAAQ,KAEd,YAAmB,KAAV,MAAkB,KAAK,OAAO,SAAU,EAAQ,IACzD,IAED,6BAOC,QAAI,GAEJ,KAAQ,EACP,UAAO,EAGR,aACA,EAED,iCASC,OAAK,MAAK,iBACT,GAAO,KAAK,OAEZ,SAED,UAyGF,cA5MqB,EAgNrB,cAAK,I,oOhFvMC,CA0D2B,cAChC,OAAK,iBACJ,QAAO,EAEP,IAAO,EAER,GAED,CAyBgC,cAC/B,IAAM,IAAU,GAEhB,UAAK,CAAG,GAAQ,GAMf,yBAAM,gBAGP,4GAAK,CAAC,GAML,YAAM,gBAGP,4DAAK,GACJ,gBAAO,WAAS,aAChB,IAAM,GAAK,CAAC,GAAS,QACrB,IAAM,IAAa,GAEnB,YAAQ,UAAS,YAAa,IAE9B,OAAM,IAAc,eAAW,GAAU,UAAS,SAAU,GAC5D,QAAM,GAAiB,cAAc,GAErC,KAAM,GACN,GAED,OAAO,WAAS,YAChB,GAED,CA2BiC,cAChC,IAAM,IAAiB,GACvB,OAAM,GAAiB,GAGvB,UAAK,GAAe,GACnB,cAID,OAAK,GAAe,GAAI,qBAAsD,CAA9B,MAAe,WAC9D,IAAM,IAAS,GACf,OAAM,GAAS,GACf,gBAEA,SAAO,EAAiB,cAAc,GACtC,IAED,IAAM,IAAa,GAAe,SAAU,GAC5C,GAAM,GAAY,GAAe,SAGjC,OAAK,CAAC,IAAc,CACnB,SAID,OAAK,GAAW,GAAI,SAAY,GAAU,GACzC,cAAO,GAAgB,GAExB,IACK,GAAK,GAAW,GAAI,qBAAwB,GAAU,GAAI,qBAAwB,GAAW,UAAW,IAE5G,IAAM,IAAQ,GACd,qBAAW,eAAgB,GAC3B,kBAIA,SAAO,EAAiB,cAAc,GACtC,IAED,OACA,GAED,CAmBiC,cAChC,IAAM,IAAO,GACb,WAAM,GAAO,GAEb,aAAK,CAAC,IAAQ,CAAC,IAAQ,CAAC,GAAK,GAAI,qBAAwB,CAAC,GAAK,GAM9D,yBAAM,QAIP,uHAAM,IAAY,GAAK,SAAU,GAAK,WACtC,GAAM,GAAc,yBAA4B,UAAS,SAAU,GAAW,OAAU,UAAS,SAAU,GAE3G,gBAAM,WAAM,SAAU,IAAQ,UAAS,SAAU,GACjD,UAAQ,WAAM,SAEd,KACA,EAED,CAU4C,cAC3C,IACA,OAAM,GAAS,eAAgB,CAAE,WAEjC,KAAI,GAAQ,GAAM,MAJiC,kBAMnD,YAAqB,sDAAS,YAC7B,MAAK,GAAM,KAAK,GACf,sBAAK,CAAC,GAAM,QAAS,GACpB,sBAAO,KAAM,eAAW,GAAO,GAGhC,sBAAQ,GAET,uBAdkD,4EAgBnD,WAAO,KAAM,eAAW,GAAO,GAE/B,MACA,EAED,CAoBkC,iBACjC,IAAQ,eAAY,gBAAe,KAAU,CAG7C,MAEA,OAAM,IAAY,EAElB,OAAK,CAMJ,QAAM,gBAGP,6CAAM,IAAoB,EAE1B,OAAM,GAAS,GAAU,eAAgB,GAAkB,OAC3D,IAAM,GAAc,GAAkB,aACtC,IAAM,GAAQ,EAGd,OACC,CADI,YACG,gBAAW,GAGb,IAAC,GAAM,QACX,QAGD,YAAM,IAAM,EAEZ,UAAO,gBAAW,GAEnB,GAED,CAYwB,cACvB,MAGA,IAAK,GACJ,kBAAO,QAGR,eAC6C,EAA8B,OAA5D,MAAP,MAAwB,MAChC,IAAM,GAAkB,GAExB,OAAM,GAAQ,GAAS,OAAS,GAGhC,OAAM,GAAU,GAAgB,eAAgB,GAAW,OAG3D,IAAM,GAAgB,EACtB,cAAM,MACN,MAAM,IAAM,UAAS,mBAGrB,IAAO,eACP,GAED,CAW8B,iBAC7B,GAIA,OAAM,IAAS,GAAM,UACpB,WACA,WAGD,sBAVuC,kBAWvC,YAAuB,yDAAS,WAC/B,MAAM,GAAO,GACb,KAAI,OAGJ,MAAK,GAAK,GAAI,YAAe,GAAQ,UAEpC,OAAgB,WAAM,SAEtB,QAAM,IAAK,CAAC,GAAQ,aAAa,QAAS,GAAM,SAAa,GAAK,GAAI,SAAY,GAAK,GAAI,cAE3F,IAAM,IAAgB,GAAK,eAAe,KAAM,YAC/C,OAAO,IAAS,GAAI,YAAe,GAAQ,UAC3C,GAGD,GACC,QAAgB,WAAM,SAEvB,IAGD,CAEC,KAAK,GAAc,IAAI,QAAS,GAC/B,UAAc,IAAM,GAGrB,KAAK,GAAc,MAAM,SAAU,GAClC,YAAc,MAAQ,GAIvB,SAED,IA9CsC,uFA+CvC,CAED,CAamC,iBAClC,IAEA,OAAK,GAAe,QAAS,GAAY,KACxC,IAAiB,EAEjB,UAAM,IAAS,GACf,OAAM,GAAc,GAEpB,cAAc,EAEd,UAAQ,EAER,OAAe,QAAY,GAAO,WAClC,EACA,SAAQ,EAGT,UAAO,GAAQ,GACf,GAED,CAa6B,iBAC5B,IAAK,EAAG,iBAMP,cAAM,gBAGP,2CAGA,IAAK,GACJ,kBAID,OAAK,GAAM,IAAI,QAAS,GAAM,MAAM,aAAc,IACjD,IAAM,IAAO,GAAM,MAEnB,aAAK,0BAAoC,EAAsB,GAC9D,UAED,GAGD,IAAK,EAAyB,KAAW,EAAsB,GAAW,GAAM,MAAM,QACrF,IAAM,IAAS,GAAM,MAAM,OAC3B,OAAM,GAAQ,GAAM,MAAM,OAE1B,YAAO,YAAM,4BAA6B,GAAQ,GAAO,GAAQ,GACjE,EAED,QAC6C,EAA8B,OAA5D,MAAP,MAAwB,MAChC,IAAM,GAAkB,GAGxB,OAAM,GAAiB,EAAgB,GAAiB,GAAW,OAAQ,GAAS,OAGpF,IAAM,GAAW,EAAc,GAAiB,GAAe,MAAM,OAAQ,GAAe,IAAI,OAGhG,IAAM,GAAQ,EAAiB,GAG1B,OAAC,GAAM,QAAS,GACpB,WAAS,IAEV,YAAM,IAAM,EAAiB,GAE7B,WAAO,gBAAW,GAClB,GAED,CAWwC,iBACvC,IAAK,EAAG,iBAMP,cAAM,gBAIP,yCAAK,GAAU,UAAW,GACzB,cAAO,GAAwB,UAAS,mBAIzC,KAAK,GAAS,OAAO,GACpB,aAAW,EAIZ,QAAM,IAAe,OACrB,WAAa,qCACA,UAAY,WAAM,QAG/B,KAAS,OAAO,eAAgB,GAAS,OAGzC,OAAM,IAAY,eAAW,GAAU,GAAS,aAGhD,MAAM,GAGN,OAAM,IAAc,cAAc,GAAa,OAAQ,GACvD,UAGA,YAAM,IAAa,GACnB,WAAM,GAAY,GAElB,gBAAK,2BAA8B,iBAClC,QAAO,EAAgB,GAIxB,IAAO,EACP,GAED,CAU+B,iBAC9B,IAAK,EAAG,iBAMP,cAAM,gBAGP,6CAGA,IAAK,GACJ,kBAMD,OAAK,GAAM,IAAI,QAAS,GAAM,MAAM,aAAc,IACjD,IAAM,IAAO,GAAM,MAGnB,aAAK,CAAC,GAAU,UAAW,KAAU,iBAAhC,SAAoE,EAAwB,GAChG,UAED,GAED,QAC6C,EAA8B,OAA5D,MAAP,MAAwB,MAChC,IAAM,GAAkB,GAGxB,OAAM,GAAW,EAAgB,GAAiB,GAAW,OAAQ,GAAS,OAG9E,IAAM,GAAQ,EAAiB,GAG1B,OAAC,GAAM,QAAS,GACpB,WAAS,IAEV,YAAM,IAAM,EAAiB,GAE7B,WAAO,gBAAW,GAClB,GAED,CAYqC,iBACpC,IAAM,IAAa,eAAsB,GAAS,GAElD,0BAAQ,UAAS,YAAa,IAC9B,MAAM,WAAM,SAAU,IAAe,UAAS,SAC9C,OAAQ,WAAM,SAEd,KACA,EAQD,CAC6B,cAC5B,QAAI,IAAS,GAEb,OAAQ,CAAC,EAAuB,KAC/B,IAAK,CACJ,GAED,UAAS,GACT,MAED,OACA,GASD,CACgC,cAAgC,6DAC/D,GAAM,GAAa,GACnB,MAAM,GAAW,GAEjB,SAGA,IAAK,GAAM,YACV,IAAM,IAAW,EAAkB,GAAM,MAEzC,UAAO,gBAAW,GAClB,GAED,IAAM,IAAW,EAAkB,GACnC,IAAM,GAAQ,GAAS,OACvB,WAAM,GAAa,EAAkB,GAGrC,cAAS,QAAU,GAAS,OAAO,WAEnC,GAAO,eAAW,GAClB,GAeD,CAC2B,cAAmC,6DAC7D,GAAM,GAAiB,GACvB,OAAM,GAAiB,GAGvB,UAAK,GAAS,OAAO,GAMpB,qBAAM,gBAIP,6CAAK,GAAS,OAAO,GAMpB,kBAAM,gBAIP,0CAAK,CAAC,IAAkB,GAAe,GAAI,SAAY,EAAuB,GAC7E,cAAO,WAAS,mBAIjB,OAAK,EACJ,UAAO,WAAS,mBAIjB,OAAK,GAAe,GACnB,cAAO,GAAkB,EAAe,IAGzC,OAAM,IAAS,GAKf,cAAK,IAAkB,GACtB,IAAM,IAAc,cAAc,GAAe,OAAQ,GAAe,MAExE,SAAO,GAAkB,GACzB,GAID,IAAwB,CAAnB,MACJ,IAAM,IAAc,cAAc,GAAe,OAAQ,GAEzD,aAAO,GAAkB,GACzB,GAMA,IAAM,IAAc,GAAe,MAGnC,EAAM,GAAa,GAGnB,WAAe,OAAO,eAAgB,GAGtC,OAAM,IAAQ,GAAe,WAC7B,GAAM,GAAc,GAAe,eAAgB,GAGnD,OAAW,eAGX,OAAM,IAAc,cAAc,GAAe,OAEjD,UAAO,GAAkB,GAE1B,GAQD,CACyD,uBACxD,QAAI,IACJ,GAGA,SAAQ,GACD,UAAQ,GAAO,SAGrB,IAAK,GAAM,UAAW,IACrB,IAAM,IAAY,GAClB,cAAM,GAAQ,GAGd,cACA,YAAO,eAAgB,GAGvB,OAAgB,KACf,cAAc,GAAQ,IACtB,cAAc,GAAQ,GAKvB,SACA,OAAa,GACb,CAEA,KAAK,IAAM,GACV,uBAAgB,GAAO,EAAG,GAAM,WAGjC,IAKF,QAAI,IAAe,EAtCiD,kBAwCpE,YAAwB,sDAAkB,eACzC,SAAS,QAGT,GAAK,GAAS,QAAU,IAAe,GAAS,QAIhD,OAAM,IAAc,EAGf,IAAC,GAAY,QACjB,MACA,KAED,gBAvDmE,4EAyDpE,OAAO,YAAM,4BAA6B,GAAQ,GAAa,GAC/D,GAQD,CACuD,uBACtD,QAAI,IACJ,GAEA,MAAQ,GAAI,IACX,IAAM,IAAQ,GAAO,SACrB,IAAM,GAAS,GAAM,GACrB,QAAM,GAAc,GAAM,GAC1B,oBAAM,GAAU,GAAM,GACtB,gBAAM,GAAO,GAAM,GAGnB,gBAAK,IAAU,IAAW,IAAU,IAAe,GAAU,UAAY,GAAM,SAE9E,IAAM,IAAe,GAGrB,WACA,YAAa,eACb,OAAO,eAAgB,GAEvB,OAAc,KAAM,cAAc,GAClC,IAEI,KACJ,OAAc,GAAO,EAAG,GAAM,WAG/B,IACA,IAGD,IAAI,IAAe,EAhC+C,kBAkClE,YAAwB,sDAAgB,eACvC,SAAS,QAGT,GAAK,GAAS,QAId,OAAM,IAAc,EAGf,IAAC,GAAY,QACjB,MACA,KAED,gBAjDiE,4EAmDlE,OAAO,YAAM,4BAA6B,GAAQ,GAAa,GAC/D,GAUD,CACiC,cAChC,IAAM,IAAa,GAEnB,cAAK,IAAc,GAAW,GAC7B,cAAO,eAAc,GAAY,GAAW,KAG7C,WAAM,IAAY,GAElB,gBAAK,KAAa,GAAU,GAC3B,QAAO,cAAc,GAGtB,GACA,EASD,CACwB,cACvB,IAAK,GAAS,QAAU,GAAS,OAAO,KACvC,aAAO,eAAc,GAAS,OAAO,OAAQ,GAAS,OAAO,MAG9D,MACC,CADI,MAAS,aACN,eAAc,GAAS,OAAO,OAAQ,GAAS,OAIvD,UAAM,IAAa,GAAS,OAAO,KAAK,MAAO,GAG/C,kBAAS,OAAO,KAAO,GAAS,OAAO,KAAK,MAAO,EAAG,GAGtD,WAAS,OAAO,OAAO,eAAgB,GAAS,OAAO,MAAQ,EAAG,eAGlE,KAAO,cAAc,GAAS,OAAO,OAAQ,GAAS,OAAO,MAC7D,EAOD,CAC6B,iBAE5B,IAAM,IAAmB,GAAG,KAC5B,iBAAG,MAAQ,GACX,QAEA,SAAO,cAAc,GACrB,GASD,CACwC,iBAEvC,IAAK,GAAQ,OAAS,GAAO,MAAQ,GAAQ,WAAa,GACzD,SAGD,YANgD,mBAOhD,YAAmB,GAAQ,sEAAqB,gBAE/C,MAAa,OAAR,OAKL,OALwB,QAKnB,GAAO,aAAc,KAAS,GAAO,aAAc,MAAU,GAAQ,aACzE,IAIF,kBAnBgD,mGAoBhD,YAAmB,GAAQ,mEAAkB,eAC5C,MAAK,GAAO,SAAU,KAAS,GAAO,SAAU,MAAU,GAAQ,SACjE,IAIF,kBA1BgD,mGA2BhD,YAAmB,GAAQ,sEAAqB,aAE/C,MAAa,OAAR,OAKA,OALmB,SAKlB,GAAO,aACZ,QAAO,aAAc,GAAK,GAAQ,aAEnC,eArC+C,mGAuChD,YAAmB,GAAQ,mEAAkB,YACvC,MAAC,GAAO,SACZ,QAAO,SAAU,GAAK,GAAQ,SAE/B,cA3C+C,mGA6ChD,YAAmB,GAAQ,mEAAkB,YACvC,MAAC,GAAO,SACZ,QAAO,SAER,aAjD+C,4EAmDhD,CACA,QAOD,CAC0C,iBAEzC,IAAK,GAAQ,OAAS,GAAS,MAAQ,GAAQ,WAAa,GAC3D,SAGD,YANoD,mBAOpD,YAAmB,GAAQ,sEAAqB,gBAE/C,MAAa,OAAR,OAKL,OALwB,SAKnB,CAAC,GAAS,aAAc,KAAS,GAAS,aAAc,MAAU,GAAQ,aAC9E,KAIF,kBAnBoD,4EAoBpD,IAAK,CAAC,GAAS,oBAAa,GAC3B,kBAGD,YAxBoD,mBAyBpD,YAAmB,GAAQ,mEAAkB,eAE5C,MAAK,CAAC,GAAS,SAAU,KAAS,GAAS,SAAU,MAAU,GAAQ,SACtE,IAIF,kBAhCoD,mGAiCpD,YAAmB,GAAQ,sEAAqB,aAE/C,MAAa,OAAR,OAIL,OAJwB,WAIf,gBAGV,aA1CoD,4EA2CpD,CAMA,UANS,uBAAgB,GAGzB,qBAAS,uBAAgB,GAEzB,oBAQD,CACkC,cACjC,OAAO,IAAM,MAAM,QAAU,GAAM,IAAI,QAAU,GAAM,MAAM,OAAO,GAAI,qBAChD,CAAvB,MAAM,MAAM,QAAgB,GAAM,IAAI,SAAW,GAAM,MAAM,OAC9D,UAgBD,CACgC,cAAQ,QAC3B,YACX,IAAK,CAAC,GAAmB,KAAQ,mBAAa,cAAgB,GAS7D,QAAM,gBAGF,mCAAC,GAAK,GACV,WAAuB,GACvB,cAhBqC,oBACvC,YAAoB,sDAAQ,qBAgB3B,aAjBsC,4EAkBvC,EAQ+B,cAC/B,OAAO,MAAU,GAAK,GAAI,qBAAwB,GAAK,GACvD,oBAMD,CACiC,cAChC,IAAM,IAAiB,EAAoB,GAC3C,OAAM,GAAe,EAAoB,GAEzC,QAAK,CAAC,IAAkB,CAAC,IAAgB,KAQxC,QAAM,gBAEP,sC,oDApoCe,oBAiCA,mBAgEA,oBAgEA,oBAiCA,+BAyCA,WAkDA,WAqCA,UA8DA,SAkCA,SAmEA,iBA4DA,WA4DA,SAzqBhB,gBACA,iBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,wBA0BA,QAjBC,iBACA,iBACA,kBACA,kBACA,SACA,SACA,QACA,OACA,OACA,eACA,SACA,SACA,6BAbc,GAiqCf,GAAM,IAAqB,gDAK3B,ypBiF/qCA,CA2H8D,mBAE7D,CAAK,GAAC,EAAW,KAAM,EAAK,MAAO,CAAE,KAAM,EAAK,MAK3C,QAAC,EAAiB,EAAK,MAAO,EAAK,QAAS,EAKjD,cAAK,QAAQ,KACb,gBAAM,GAAO,EAAc,YAAa,EAAK,MAAO,EACpD,KAAK,QAEL,QAAK,OACL,EAMD,CACoD,mBAEnD,CAAK,GAAC,EAIN,WAAM,GAAkB,EAAU,sBAAsB,IAAK,EAAK,MAAM,OAAU,CAAC,EAAK,OAAO,GAY/F,WAAM,EACH,EAAK,MAAM,GAAI,qBACf,EAAK,MAAM,GAAI,YAAe,EAAK,OAAO,GAAI,YAGjD,EAAK,GAKL,MAAM,IAAkB,EAAK,OAAO,GAEpC,WACC,MAAK,QAAQ,KAAM,EAIpB,YAMM,GANF,IAMJ,KAAU,GAAI,KAAG,GAAI,EAAK,OAAO,WAC1B,QAAQ,EAAK,OAAO,SAE1B,IAAK,EAAiB,GAAO,EAAK,QAAS,EAAc,OAEnD,IACJ,GASD,SATiB,cAChB,eAAK,OAAO,eAAgB,GAAM,MAKlC,QAID,YAAc,eAId,QAIF,KACC,MAAK,QAEN,QAEgD,mBAChD,IAAM,GAAO,EAAK,MAIlB,cAAK,CAAC,GAA8B,EAAO,MAAO,CAAE,KAAF,EAAQ,OAKrD,SAAC,EAAO,MAAO,CAAE,KAAM,YAAa,OAKpC,OAAC,EAAO,MAAO,CAAE,KAAF,EAAQ,OAAQ,EAAQ,OAK5C,cAED,CAG8B,eAAQ,oBACrC,WAAwB,EAAI,kEAAiB,WAC5C,MAAM,GAAO,EAAI,QAEjB,IAAK,GACJ,QAAK,CAAC,EAAW,IAChB,OAAW,IAAK,GAGjB,KAAW,OAEZ,GAXoC,gFAYrC,CAED,CACS,YAA0B,OACd,eAInB,CAAM,GACA,IAAM,GACZ,SAAM,GAAS,GAGf,OAAK,GACJ,MANa,CAAE,KAAM,YAAa,OAAQ,CAC3C,UAKK,eAAgB,UACnB,IAAM,OAAQ,UAAc,SAAU,IAAQ,cAC9C,aACD,EAdgC,iBAClC,WAA+B,mDAAa,kDAc3C,GAfiC,gFAiBlC,GACA,O,stBA5RD,iBACA,cAEA,cACA,cAEA,eACA,kBAQqB,0IAQpB,uBAIC,IAAM,GAAS,KACf,OAAM,EAAM,EACZ,SAAM,EAAO,EACb,KAAM,GAAU,EAEhB,UAAO,SAAS,IAAK,YAAa,cAGlC,MAAI,OAAO,aAAc,YAGzB,0BAAsB,IAAK,EAAK,YAAa,GAAQ,aACnD,YAAa,aACb,UAGF,qBAAqB,IAAK,EAAK,aAC7B,YAAa,KACb,UAUF,eAAK,YAAY,GAAI,UAAW,EAA8B,CAAE,SAEhE,UAAK,YAAY,GAAI,OAAQ,EAA8B,CAAE,SAO7D,aAAK,YAAY,GAAI,UAAW,EAAoB,CAAE,SACtD,aAAK,YAAY,GAAI,mBAAoB,EAAoB,CAAE,SAO/D,aAAI,GAAI,SAAgC,qBAAtB,OAAiC,GAAgB,EAAK,GACxE,KAAI,GAAI,cAAe,EAAyB,CAAE,SAClD,aAAO,GAAI,YAAa,UACvB,GAAgB,EAAK,EAAI,MACzB,gBACA,GAHD,EAGG,CAAE,SACL,oBA9DD,2BAIC,OACA,+BA4DF,mBAlEqB,EAiGrB,EAAU,sBAAwB,GAmBlC,iFAsHA,GAAM,GAAa,GAAI,mLCpPvB,mSALA,eACA,cACA,eACA,iBAcqB,YAOpB,CAAa,aAAU,QAOtB,QAQA,eAAK,SAAW,GAQhB,UAAK,YAAc,GAAW,EAAQ,YAYtC,UAAK,6BAA+B,GAYpC,cAAK,6BAA+B,GASpC,QAED,kBASA,YAWW,aACV,IACM,GAAa,KAEnB,YAFA,KAEO,IAAc,GACpB,MAAS,EAET,GAMC,QANI,QAAO,QAML,eAGP,gCAAK,KAAK,IAMT,QAAM,eAEP,qCACA,QAAM,GAAe,EAAS,KAI/B,cACC,aAAQ,KAAK,OACb,WAAM,IAAK,EAAQ,KAAK,OAAO,QAM/B,CANyC,QAMnC,eAGP,iDAAK,OAAO,OAAQ,EAAO,EAE3B,QAAK,SAAS,IAAK,EAEnB,QAAK,KAAM,MAAO,EAElB,GACA,IAED,oBAMK,WACJ,IAEA,MACC,QADI,QAAO,KACJ,KAAK,SAAS,IACrB,OAAM,IACN,QADW,QAAO,KACX,KAAK,OAOZ,aAAM,eAGP,gEAAO,IACP,IAED,yBAOU,WACT,IAEA,YACC,QADI,QAAO,GACJ,KAAK,SAAS,IAErB,GAGD,EAAO,KAAK,OAAO,QACnB,EAED,uBAOQ,WACP,IAEA,MAAM,EAAa,KAEnB,YAJI,EAAO,EACX,KAIC,QADI,QAAO,MAEX,IAAO,KAAK,SAAS,IACrB,KAAmB,CAEnB,EACC,MAAQ,KAAK,OAAO,QAEf,KACN,QADW,QAAO,MAElB,IAAO,KAAK,OACZ,KAAmB,CAEnB,EACC,MAAK,EAGN,QACA,IAAK,EACL,KAAQ,KAAK,OAAO,QACpB,KAA8B,CAAC,CAAV,KAAe,CAAC,KAAK,SAAS,IAGpD,IAMC,OAAM,eAGP,+CAAK,OAAO,OAAQ,EACpB,QAAK,SAAS,OAEd,MAAM,GAAe,KAAK,6BAA6B,IACvD,eAAK,6BAA6B,OAClC,QAAK,6BAA6B,OAElC,QAAK,KAAM,SAEX,GACA,CAED,oBASe,aACd,OAAO,MAAK,OAAO,IAAK,EACxB,EAED,qBASgB,aACf,OAAO,MAAK,OAAO,KAAM,EACzB,EAED,uBASkB,aACjB,OAAO,MAAK,OAAO,OAAQ,EAC3B,EAED,gCAKC,KAAK,KACJ,yBAAK,cAAe,KACpB,wBAAK,kBAGN,MAAQ,KACP,aAAK,OAEN,EAED,uBA+EQ,WAAqB,OAC5B,QAAK,KAMJ,uBAAM,eAGP,yFAAK,kBAEL,EAOC,IAAI,WACH,GAAK,oBAAqB,kBAAQ,IAAI,GAAO,EAC7C,EAUD,QAAO,WACN,CACC,UADI,QAAO,KACN,oBAAqB,kBAAQ,GAAoB,EAEtD,KAAK,oBAAqB,kBAAQ,GAAM,EAEzC,EAEF,EAED,oCAMqB,WAAU,OAC9B,KAAM,EAAqB,KAK3B,kBAAM,EAA+B,eACpC,IAAM,GAAwB,EAAmB,mBACjD,EAAM,EAAoB,EAAmB,6BAA6B,IAM1E,MAAK,GACJ,IAAK,6BAA6B,IAAK,EACvC,KAAK,6BAA6B,IAAK,EACvC,OACA,IAAM,GAAO,EAEb,KAAK,6BAA6B,IAAK,EACvC,KAAK,6BAA6B,IAAK,EAEvC,KAAK,IAAK,EACV,EACD,CAED,EA3B8B,eA4B9B,WAA4B,gDAAqB,SAChD,QAAS,KAGV,WAhC8B,oEAiC9B,MAAK,SAAU,EAAoB,MAGnC,QAAK,SAAU,EAAoB,SAAiB,aACnD,IAAM,GAAO,EAAK,6BAA6B,IAE/C,GACC,KAAK,OAEN,EACD,EAED,QAGE,OAAO,yBACR,OAAO,MAAK,OAAQ,OACpB,WASD,+BAlZC,OAAO,MAAK,OACZ,0BAxEmB,EAierB,cAAK,I,uLCvdL,CA2OqB,aACpB,OAAO,GAAM,qBAAyB,EAAM,mBAAsB,KAClE,WAMD,CACoB,aACnB,OAAO,IAAQ,cAAU,EACzB,iBAED,kDAnRA,eACA,eACA,eACA,mBAwBM,EAAkB,KAAQ,sBAkB/B,CAlBiD,mBAkB7B,+CAAP,IAAO,eACnB,MAAM,GAAU,EAIhB,GAAK,EACJ,OAAM,GAAM,KAAK,iBAAkB,IAAa,GAAI,GAIrD,cAAa,SAAS,MAAO,KAC7B,EAmBD,EAhDiD,wBAgDxB,+CAAP,IAAO,eACxB,MAAM,GAAU,EAGhB,MAAK,EAAW,GACf,IAAM,GAAQ,KAAK,iBAGnB,MAAK,CACJ,EAGD,SAAM,GACN,CAGD,WAAa,cAAc,MAAO,KAClC,EASD,EA1EiD,iBA0E/B,WACjB,OAAO,4BAAuB,KAAM,EACpC,GA5EgD,cAiFlD,KA+BC,GAIa,aAAO,QAEnB,uBAAe,KAAM,EAGrB,SAAK,SACL,C,EAGF,cAAQ,EAAa,oBA0BpB,CA1B6C,GA0BlC,aAAyB,2DAEnC,mBAAa,GAAG,KAAM,KAAM,EAAO,EAInC,KAAK,KAAK,eAAiB,KAAK,cAIhC,QAAM,GAAc,KAAK,mBAAoB,EAAO,CAAC,CAAC,EAGtD,iBAAK,SAAS,iBAAkB,EAAO,EAAa,CAAC,CAAC,EAEjD,YAAC,KACL,qBAKD,uBAAK,cAAe,GACpB,EAYD,EA5D6C,IA4DvB,eAErB,WAAa,IAAI,KAAM,KAAM,EAAO,EAEpC,MAMA,GAAK,MAAK,cAAe,IAAa,CAAG,EAAS,KAAK,QAAsB,KAAC,EAAO,UACpF,aAAK,cAAe,GAErB,gBAeD,EAxF6C,mBAwFlB,aAAa,OACvC,KAAM,EAAc,WACnB,GAAK,KAAM,EACX,EAKD,WAAY,eAAiB,UAC5B,GAAK,SAAS,oBAAqB,EAAO,EAC1C,SAAO,GAAK,cACZ,EAED,EACA,CAOF,oFCxQA,CAOmB,aACjB,IAAI,GAAQ,CAAC,EACT,EAAS,EAAU,EAAQ,OAE/B,WACA,QAAS,IAAQ,GACf,IAAI,GAAQ,EACZ,QAAK,IAAI,EAAM,GAAI,EACpB,GACF,CAED,kDAxBA,iBACA,gBACA,gBACA,gBACA,mBAqBA,EAAU,UAAU,gBACpB,EAAU,UAAU,oBACpB,EAAU,UAAU,cACpB,EAAU,UAAU,cACpB,EAAU,UAAU,wBAEL,kFC3Bf,CAQkB,aAChB,IAAI,GAAQ,CAAC,EACT,EAAS,EAAS,EAAO,OAE7B,WAAK,SAAW,MAChB,QAAS,IACP,QAAK,IAAI,EAEZ,GAED,kDAtBA,iBACA,gBACA,mBAqBA,EAAS,UAAU,IAAM,EAAS,UAAU,OAA5C,QACA,EAAS,UAAU,wBAEJ,oEC1Bf,aAwBe,QAfa,aAC1B,QAAI,GAAQ,CAAC,EACT,EAAS,EAAM,OACf,EAAW,EAGf,OAAS,IACH,KAAQ,EACZ,GAAI,EAAU,EAAO,EACnB,OAAO,KAGX,SACD,sECtBD,aAmBe,QAXW,aACxB,QAAI,GAAQ,CAAC,EACT,EAAS,EAAO,OAChB,EAAS,EAEb,OAAS,IACP,KAAM,EAAS,GAAS,EAE1B,SACD,mFCjBD,8DAEA,OAkBe,QAVc,aAC3B,QAAI,GAAS,EACb,OACE,QAAI,cAAG,EAAM,GAAQ,GACnB,SAGJ,SAAO,CACR,mFCbG,kDALJ,iBACA,gBACA,oBAuCe,QArBwB,eACrC,IAAI,GAAM,EACN,EAAO,EAAQ,EAAM,OAEzB,KAAoB,QAAhB,QAAO,IAAqB,IAAU,GAAiB,GAlBzD,UAAwB,GAE5B,EAiBI,MAAO,EAAM,GACX,IAAI,GAAO,EAAM,IAAU,EACvB,EAAW,EAEf,GAAiB,IAAb,MAAqB,CAAC,cAAS,KAC9B,EAAc,GAAY,EAAU,EACvC,KAAM,EAEN,IAEH,CACD,OACD,EACD,OAAO,cAAkB,EAAO,YACjC,mFCvCD,8DAEA,OAuBe,QAZ8B,iBAC3C,QAAI,GAAS,EAAM,OACf,EAAQ,EAAY,EAAS,CAEjC,EAAO,CAAC,EAAY,IAAY,IAAQ,IACtC,EAAU,EAAM,GAAQ,EAE1B,WAAO,GACH,cAAU,EAAQ,EAAY,EAAI,EAAS,EAAY,EAAQ,EAAI,GACnE,cAAU,EAAQ,EAAY,EAAQ,EAAI,EAAK,EAAY,EAChE,oFCpBD,kDAHA,gBACA,qBAae,QAJG,WAChB,OAAO,cAAQ,GAAS,EAAQ,cACjC,mFCZD,+DAEA,OAee,QAPU,aACvB,IAAI,GAAO,EACX,eAAO,cAAU,GACb,EAAmB,QAAd,QAAO,GAAkB,SAAW,QACzC,EACL,uECfD,aAmBe,QAZO,WAGpB,IACA,SAAa,IAAT,KACF,UADmB,QAAO,GAAM,YAE9B,GAAS,CAAC,EAAE,EACb,GAFD,CAES,QAAK,CAEhB,OACD,oFCZD,gQALA,cACA,eACA,eACA,oBA0Be,QAduB,eACpC,IAAI,CAAC,cACH,GAEF,YAAI,sBAAc,iBAClB,WAAY,QAAR,MACK,cAAY,IAAW,cAAQ,EAAO,EAAO,WACrC,QAAR,KAAoB,IAE3B,MAAO,cAAG,EAAO,GAGpB,sEC3BD,WACA,GAAI,GAAc,OAElB,YAce,QAPM,WACnB,IAAI,GAAO,GAAS,EAAM,YACtB,EAAwB,UAAf,QAAO,IAAsB,EAAK,WAE/C,QAAO,KACR,kFCfD,8DAGA,KAAI,EAAe,cAAU,OAAQ,oBAEtB,oECLf,aAiBe,QAVK,WAClB,IAAI,GAAQ,CAAC,EACT,EAAS,MAAM,EAEnB,eAAI,QAAiB,WACnB,GAAS,KACV,CACD,GACD,kFCfD,+DAEA,OA8Be,QAJA,WACb,OAAO,cACR,0FC1BD,kDAJA,iBACA,gBACA,oBA+Be,QAJM,WACnB,OAAgB,KAAT,KAAiB,cAAS,cAAU,KAAW,CAAC,cACxD,sEC9BG,aAkCW,QALG,WAChB,OAAuB,QAAhB,QAAO,IACJ,CAAC,CAAT,IAA2B,CAAb,IAAQ,GACzB,GA9BD,kGCEI,kDALJ,iBACA,eACA,kBAMI,EAAc,OAGlB,UAAI,EAAe,SAAS,UAG5B,SAAI,EAAiB,EAGrB,eAAI,EAAmB,EAAa,KAOpC,QAAI,EAAiB,EAErB,WA2Ce,QAdQ,WACrB,IAAI,CAAC,cAAa,IACd,EAAe,KAAe,IAjDpC,mBAiDiD,cAC7C,GAEF,YAAI,GAAQ,cACZ,MACE,IADE,KAGJ,YAAI,GAAO,EAAe,KAAK,EAAO,gBAAkB,EACxD,kBAAuB,UAAf,QAAO,IACb,YAAgB,IAAQ,EAAa,KAAK,IAC7C,mFC1DD,kDATA,gBACA,eACA,gBACA,gBACA,oBAwCe,QAhBA,WACb,IAAI,EAAE,GAAS,EACb,QAEF,YAAI,GACJ,WAAQ,cAAY,EAAgB,WAClC,IAAI,cACF,GAGH,SAHY,SAAU,EAAM,OACzB,KAGJ,GAAO,cAAU,EAAiB,WAChC,OAAO,cAAS,EAAO,cACxB,GACF,8BC1CD,EAAO,QAAmB,WACtB,OAAC,GACH,oBAAO,UAAY,UAAa,CAChC,IAEA,SAAG,CAAC,EAAO,WAAU,EACrB,oBAAO,eAAe,EAAQ,SAC7B,CACA,kBAAK,UACJ,OAAO,GACP,CAEF,WAAO,eAAe,EAAQ,KAC7B,CACA,kBAAK,UACJ,OAAO,GACP,CAEF,MAAO,gBAER,GACA,CArBD,kFCaA,oDASwB,QAAyC,eAChE,IAAoB,MADqD,eAGzE,WAAqB,mDAAS,aAC7B,MAAM,EAAS,cAAgB,CAAE,WAAY,EAC7C,qBAAI,EAAO,EAEX,OAAI,EAAO,EACX,MAAI,EAAO,EACX,MAAM,EAAK,EAEX,IAAQ,CAAC,EAAK,MACb,IAAM,GAAO,EAAK,MAAM,KAAK,MAC7B,QAAM,EAAe,UAAS,aAAc,EAAK,MAE5C,MAAC,EAAO,MAAO,CAAE,KAAF,EAAQ,OAAQ,EAAc,WACjD,MAAK,CAAC,EAAK,QACV,MAAY,KAAM,cAAW,EAG9B,MAAO,EAGR,YAAO,EACP,WAAO,EACP,MAED,CAAK,GAAQ,CAAC,EAAK,QAClB,MAAY,KAAM,cAAW,EAE9B,GA9BwE,8EAgCzE,OACA,EAlDD,EAIA,gBACA,cACA,iGCOA,CAidmD,eAElD,IAAM,GAAS,cAAoB,CAAE,cAAe,EAEpD,sBAAI,EAAkB,EAJsC,eAM5D,YAAqB,oDAAS,cAC7B,MACC,MADI,KAAM,OAGV,IAAK,GACJ,SAAO,GAGT,kBAd2D,uEAe5D,CAED,CAiD2C,aAC1C,IAAM,GAAQ,EAAQ,MAEtB,WAAO,GAAO,GAAM,IAAM,EAC1B,E,oDA3fe,cAAe,WAC9B,OAAgC,kBAC/B,IAAM,GAAgB,eAAF,QACnB,EAAsB,UACtB,EAAgB,EAAM,EAEvB,GAAK,GAIA,GAAC,EAAW,QAAS,EAAK,KAI/B,cAAM,GAAe,EAAc,OAAO,eAAgB,EAAK,MAE/D,SAAc,OAAO,aAAc,EAAK,KACxC,aAAW,OAAQ,EACnB,GACD,CAED,IAUgB,qBACf,OAAgC,kBAC/B,CAAK,GAAC,EAAW,QAAS,EAAK,KAI/B,cAAM,GAAe,EAAc,OAAO,eAAgB,EAAK,MAC/D,OAAM,EAAW,cAAc,EAAK,KAEpC,gBAAW,OAAQ,EACnB,GACD,CAED,IAagB,gBAAiB,WAChC,OAAgC,kBAC/B,IAAI,GAEJ,MAAK,eACJ,WAAmB,EACnB,YAAiB,EAEjB,cACA,eAAmB,EAAgB,EAAM,EAEzC,KACA,eAAiB,EAAgB,EAAM,EAGxC,IAA0B,CAArB,EAIA,IAAC,EAAW,QAAS,EAAK,MAI/B,iBAAM,IAAS,EAEf,iBAAW,OAAQ,GAAO,eAAgB,EAAK,MAAM,OAEhD,GAAC,EAAK,MACV,uBAAW,OAAQ,GAAO,eAAgB,EAAK,MAAM,KAEtD,GACD,CAED,IAgCgB,aAAc,WAC7B,UAAmB,GAA+B,aAAT,OAAoB,CAAE,MAAF,EAAS,IAAT,EAE7D,EAAgC,iBAC/B,CAAK,GAAC,EAAW,QAAS,EAAK,KAAM,EAA2B,EAE/D,cAEsB,EAAkB,EAAK,kBAAmB,EAAK,aAAc,EAAM,EAAY,GAA9F,QAAK,KAEb,QAAc,OAAO,cAAe,EAAK,MAAO,aAAc,EAC9D,IACD,CAED,IAiCgB,gBAAiB,WAChC,UAAmB,GAA+B,aAAT,OAAoB,CAAE,IAAF,EAE7D,EAAgC,iBAC/B,CAAK,GAAC,EAAW,QAAS,EAAK,KAAM,EAA2B,EAE/D,cAEe,EAAkB,EAAK,kBAAmB,EAAK,aAAc,EAAM,EAAY,GAAvF,IAER,MAAc,OAAO,cAAe,EAAK,MAAO,gBAChD,GACD,CAED,IA2BgB,SAAU,WACzB,OAAgC,kBAC/B,IAAM,GAAgB,eAAF,QACnB,EAAsB,UACtB,EAAgB,EAAK,kBAAmB,EAAM,EAE/C,GAAK,GAIA,GAAC,EAAW,QAAS,EAAK,KAAM,EAA2B,EAIhE,WAAI,GAAY,EAAc,OAAO,YAAa,EAKlD,UAAgC,IAA3B,KAAK,mBAA8B,EAAG,eAAH,SACvC,IAAM,IAAiB,EAAgB,EAAK,kBAAmB,EAAM,EACrE,KAAY,UAAW,OAAQ,EAC/B,GAED,WAAW,KAAM,EACjB,GACD,CAED,IAsBgB,WAAY,WAC3B,OAAgC,kBAC/B,IAAM,GAAgB,eAAF,QACnB,EAAsB,UACtB,EAAgB,EAAK,kBAAmB,EAAM,EAE/C,GAAK,GAIA,GAAC,EAAW,QAAS,EAAK,KAAM,EAA2B,EAIhE,WAAM,GAAY,EAAc,OAAO,YAAa,EAEpD,iBAAW,OAAQ,EACnB,GACD,CAED,IAgCgB,UAAW,WAC1B,OAAgC,kBAC/B,IAAM,GAAgB,eAAF,QACnB,EAAsB,UACtB,EAAgB,EAAM,EAEvB,GAAK,GAIA,GAAC,EAAW,QAAS,EAAK,MAI/B,iBAAM,GAAY,EAAc,OAAO,YAAa,EACpD,OAAM,GAAiB,UAAW,2BAA4B,GAdZ,kBAgBlD,YAAqB,sDAAiB,YACrC,gBAAW,KAAM,GACjB,YAlBiD,4EAmBlD,EACD,CAED,IAqBgB,YAAa,WAC5B,OAAgC,kBAC/B,IAAM,GAAgB,eAAF,QACnB,EAAsB,UACtB,EAAgB,EAAM,EAEvB,GAAK,GAIA,GAAC,EAAW,QAAS,EAAK,MAI/B,oBAAM,GAAY,EAAc,OAAO,YAAa,EACpD,OAAM,GAAiB,UAAW,2BAA4B,GAdZ,kBAgBlD,YAAqB,sDAAiB,YACrC,gBAAW,OAAQ,GACnB,YAlBiD,4EAmBlD,EACD,CAED,IAOgB,iBACf,OAAgC,kBAC/B,CAAK,GAAC,EAAW,QAAS,EAAK,KAS/B,cAAM,GAAe,EAAc,OAAO,eAAgB,EAC1D,gBAEA,KAAK,EAAK,KAAK,GAId,aAAY,UAAU,SAAU,EAChC,eAGA,IAAM,GAAe,EAAgC,EAAc,EAAK,KACxE,cAAY,cAAe,EAC3B,EAGD,WAAW,OAAQ,EAenB,cACC,YADI,IAAK,KAAK,KAAK,YACL,OAAO,mBAAoB,EAE1C,MACD,CAID,IA0BgB,gBAAiB,WAChC,OAAgC,kBAC/B,IAAI,GAEJ,MAAK,eACJ,WAAmB,EACnB,YAAiB,EAEjB,cACA,eAAmB,EAAgB,EAAM,EAEzC,KACA,eAAiB,EAAgB,EAAM,EAGxC,IAA0B,CAArB,EAIA,IAAC,EAAW,QAAS,EAAK,MAI/B,oBAAM,IAAY,EAAc,OAAO,YAAa,EAGpD,iBAAW,MAAO,GAAU,cAGvB,GAAC,EAAiB,UACtB,cAAW,MAAO,GAAU,cAE7B,GACD,CAED,IAMgB,4BAhiBhB,gBACA,eACA,eACA,eACA,kqBCWA,+sBAXA,gBACA,gBACA,eACA,eACA,OACA,QAEA,gBACA,cACA,iBAOqB,0IACpB,qBAIC,OACA,QAED,iCAOC,OAAO,MAAK,iBAAmB,KAAK,iBAAiB,SACrD,IAED,8BAOC,OAAO,MAAK,iBAAmB,KAAK,iBAAiB,MACrD,IAED,yCAQC,OAAO,MAAK,WAAY,IACxB,IAED,2CAIC,UACA,OAED,oCAIC,OACA,gCAED,kCAIC,OACA,aAGF,mBA7DqB,EAwErB,eAAU,SAA8B,aACvC,IAAM,GAAkB,qBAGxB,MACC,CADI,KAAgB,aAIrB,SAAM,GAAQ,GACd,GAAM,EAAS,cAAqB,EAAU,EAAiB,KAAK,SAEpE,iBAAK,SACL,KAAM,aACN,QAAK,SAAS,eAGd,GAAK,eAAL,QAAyC,oBACxC,YAA2C,EAAM,4DAAU,2CAE1D,GAAM,GAAoB,UAAS,SAAU,GAC7C,MAAM,GAAQ,cACb,GAAY,MAAM,aAAc,GAAmB,GACnD,GAAY,IAAI,aAAc,GAG/B,SAAK,UAAW,GAChB,GAVuC,kFAWxC,CAED,OACA,KA9BD,GAgCA,UAAa,SAAU,mpBC9GvB,iiBAVA,cACA,eACA,gBACA,OACA,eACA,cACA,eACA,eACA,iBAOqB,0IAkBpB,8BAIC,IAAM,wFAEN,YACC,EADI,GAAM,WAAW,WACf,WAAY,GAGnB,aACA,CAED,QA9BA,qBAIC,OACA,OAED,iCAOC,OAAO,MAAK,iBAAmB,KAAK,iBAAiB,eACrD,6CA0BA,OAAO,MAAK,WAAY,IACxB,IAED,2CAIC,UACA,OAED,oCAIC,OACA,yCAGF,mBA5DqB,EAsErB,eAAU,QAAmB,WAC5B,IAAM,GAAQ,GACd,QAAK,SAEL,MAAM,GAAa,EACnB,WAAM,EAAY,EAElB,aAAK,EAAG,eAMP,cAAM,eAGP,oFAAK,EAAG,eAMP,cAAM,eAGP,kFAAM,GAAgB,UAAS,0BAA2B,EAC1D,GAAM,EAAiB,UAAS,0BAA2B,EAAY,EAEvE,WAAM,EAAO,cACZ,EACA,EAAU,UACV,EACA,KAAK,SAGN,WACA,cAAM,aACN,QAAK,SAAS,eAEd,MAAM,IAAS,cAAqB,EAAU,EAAG,KAAK,SACtD,kBAAM,aACN,SAAK,SAAS,eAEd,IACA,IA5CD,GA8CA,UAAa,SAAU,mpBC3HvB,CA6EkE,qBACjE,IAAM,GAAY,cAAmB,EAAgB,EAAS,EAAgB,EAAM,SACpF,WAAM,aACN,KAAM,SAAS,eACf,EAED,mSA3FA,gBACA,eACA,OACA,gBACA,cACA,cACA,iBAOqB,0IACpB,qBAIC,OACA,MAED,gCAMC,OAAO,MAAK,eAAiB,KAAK,eAAe,QACjD,IAED,uCAQC,OAAO,MAAK,eAAiB,KAAK,eAAe,eACjD,IAED,uCAQC,OAAO,MAAK,eAAiB,KAAK,eAAe,eACjD,IAED,uCAQC,OAAO,MAAK,WAAY,IACxB,IAED,2CAIC,OACA,EAED,oCAIC,OACA,8BAED,kCAIC,OACA,gCArEmB,EAsFrB,eAAU,OAA+B,aACxC,IAAM,GAAQ,GACd,WAAK,SAEL,GAAK,eAAL,QACC,IAAK,CAAC,EAML,YAAM,eAGP,2DAAkB,KAAM,EAAO,EAAY,MAAO,EAAY,IAAI,OAAS,EAAY,MAAM,OAC7F,EACA,QAAkB,KAAM,EAAO,UAAS,aAAc,GAAe,EAGtE,SACA,KApBD,GAsBA,UAAa,SAAU,mpBClHvB,CAcqD,mBACpD,IAAM,GAAY,cAAqB,EAAU,EAAS,EAAM,SAChE,WAAM,aACN,KAAM,SAAS,eACf,EAED,mSA3BA,iBACA,OACA,gBACA,eACA,cACA,iBAOqB,+IACpB,0BAIC,OACA,6DANmB,EAsBrB,eAAU,SAAoB,WAC7B,IAAM,GAAQ,GACd,WAAK,SAEL,GAAK,eAAL,QAEC,IAAM,GAAS,EAAY,uBAAuB,UAFf,eAInC,WAAoB,gDAAS,SAC5B,QAAoB,KAAM,EAAO,EAAK,MAAO,EAAK,IAAI,OAAS,EAAK,MACpE,gBANkC,oEAOnC,CACA,QAAoB,KAAM,EAAO,UAAS,aAAc,GAGzD,SACA,KAhBD,GAkBA,UAAa,SAAU,mpBC1CvB,iiBAVA,cACA,eACA,OACA,eACA,cACA,eACA,eACA,cACA,mBAOqB,0IAiBpB,8BAIC,IAAM,wFAEN,YACC,EADI,GAAM,WAAW,WACf,WAAY,GAGnB,aACA,CAED,QA7BA,qBAIC,OACA,OAED,iCAMC,OAAO,MAAK,eAAiB,KAAK,eAAe,eACjD,4CA+BA,OAAO,MAAK,WAAY,IACxB,IAED,uCAQC,OAAO,MAAK,WAAY,IACxB,IAED,2CAIC,UACA,OAED,oCAIC,OACA,+BAED,kCAIC,OACA,YAGF,mBAlFqB,EA4FrB,eAAU,QAAmB,WAC5B,IAAM,GAAQ,GACd,QAAK,SAEL,MAAM,GAAe,EAErB,UAAK,CAAC,EAML,YAAM,eAGP,uDAAM,GAAO,cAAa,EAAa,KAAM,EAE7C,iBAAM,EAAS,cACd,UAAS,YAAa,GACtB,EACA,KAAK,SAGN,WAAM,aACN,QAAK,SAAS,eAEd,MAAM,GAAO,cACZ,EACA,EAAa,UAAY,EAAS,OAClC,UAAS,0BAA2B,EAAM,GAC1C,KAAK,SAEN,kBAEA,cAAM,aACN,QAAK,SAAS,eAEd,GACA,IAtCD,GAwCA,UAAa,SAAU,2MC9IvB,CAuPyC,eAAS,oBACjD,WAAqB,mDAAS,qCAC7B,WAAkB,EAAM,yDAAa,SACpC,QAAG,YACH,YAH4B,oEAI7B,CALgD,8EAOjD,OACA,EAGD,CAC4B,iBAC3B,UAAK,EAAE,UAAY,EAEZ,cAAK,EAAE,UAAY,EAGzB,YAED,CAED,CACsB,aACrB,OAAO,GAAO,OAAmB,aAChC,OAAO,GAAU,EAAM,WACvB,MAFM,EAGP,EAGD,CAC+B,eAC9B,KAKM,GALA,GAAY,EAAQ,EAAO,OACjC,GAAI,EAAc,EAAU,WAAW,OAAS,EAEhD,YAAM,EAAU,MAEhB,QAAU,EAAI,EAAG,EAAI,EACpB,MAAQ,aAAc,cAGvB,QAAO,KACP,E,kDAtSD,gBACA,gBACA,eACA,mBAEM,EAAe,GAKrB,KAAM,EA0BL,CA1BiB,UA0BA,eAChB,IAAM,GAAqB,EAAU,sBAAuB,EAAG,IAAO,EAEtE,iBAAM,EAAc,EAAoB,EAAG,EAC3C,GAAM,EAAc,UAAW,KAAM,EAAE,YAEvC,kBAAO,GAAmB,EAC1B,EAgBD,EAjDiB,iBAiDO,eAEvB,GAAwB,EAAa,EAAE,YAAa,EAAE,YAMtD,MAAM,GAAc,GAAI,GAGxB,YAAI,EAAQ,EAGZ,WAEA,KAhB+C,eAiB/C,WAAmB,EAAE,4DAAa,SAGjC,MAAM,EAAM,CAEZ,GALiC,wBAMjC,YAAmB,yDAAQ,OAE1B,UAAM,GAAI,IAAI,KAAG,GAAI,EAAI,OAAQ,KAE1B,IAAK,EAkBX,UAAM,UAAU,KAAK,MAAO,EAAU,cAAoB,GAAK,GAAI,CAGnE,OAAM,IAAU,cAAoB,GAAI,GAMxC,SAAM,UAAU,OAAO,MAAO,EAAK,CAAE,GAAG,GAAI,OAE5C,SAAK,GAAQ,OACb,CAOD,CAID,WAnDiC,2EAoDjC,GACA,EAGA,QAxDiC,0BAyDjC,YAAkB,qDAAM,YACvB,QAAY,aAIb,aA9DiC,4EA+DjC,CAhF8C,gFAkF/C,OAAO,CACP,EASD,EA7IiB,sBA6IY,eAC5B,IAAI,GAAS,EAAa,IAErB,GACJ,MAAS,GACT,OAAa,IAAK,EAGnB,MAAO,IAAK,EACZ,EAQD,EA9JiB,sBA8JS,aACzB,IAAI,GAAS,EAAa,IAAK,EAI/B,gBAAK,CAAC,GAAU,CAAC,EAAO,IAAK,EAAE,aAC9B,IAAM,GAAQ,EAAa,OADmB,eAG9C,WAAyB,gDAAQ,YAChC,MAAK,YAAa,IAAa,EAAa,IAAK,GAAY,IAAK,EAAE,aACnE,GAAS,EAAa,IAEtB,GACA,KACD,UAT6C,oEAU9C,CAED,OACC,GAAO,EAAO,IAAK,EAIpB,mBAeD,EAnMiB,mBAmMqB,eACrC,KAGM,GAHA,GAAqB,MAAM,KACjC,GAAM,EAAqB,MAAM,KAEjC,GAAU,EAAI,IAAG,EAAI,EAAmB,OAAQ,IACzC,GAAS,CAAE,EAEjB,QAAM,GAAI,GAAI,IAAG,EAAI,EAAmB,OAAQ,IACzC,GAAS,CAAE,EAEjB,QAAM,GAAI,GAAI,EAAG,EAAI,EAAO,OAC3B,QAAM,GAAI,GAAI,EAAG,EAAI,EAAO,OAAQ,IACnC,IAAM,GAAW,EAAU,UAAW,EAAQ,GAAK,EAAQ,GAC3D,GAAM,EAAW,EAAU,UAAW,EAAQ,GAAK,EAAQ,GAAK,CAEhE,KAAO,gBAAQ,EAAG,YAClB,QAAK,EAAS,OAEd,IAAO,gBAAQ,EAAG,YAClB,QAAK,EAAS,OACd,CAGF,GAAmB,gBAAQ,EAAG,UAC9B,OAAK,EAAO,OACZ,CAED,GAAmB,gBAAQ,EAAG,UAC9B,OAAK,EAAO,OACZ,CAED,IAAM,GAAW,EAAa,GAAuB,EACrD,GAAM,GAAW,EAAa,GAAuB,EAErD,SAAK,IACJ,IAAc,EAAoB,EAC5B,IAAK,EACX,MAAc,EAAoB,GAGnC,GAAO,CAAE,QAAS,EAAoB,QACtC,EA5OgB,aAiPlB,kpBClPA,mSATA,gBACA,eACA,gBACA,OACA,eACA,eACA,eACA,iBAOqB,0IACpB,qBAIC,OACA,QAED,iCAMC,OAAO,MAAK,eAAiB,KAAK,eAAe,eACjD,IAED,uCAOC,OAAO,MAAK,WAAY,IACxB,IAED,2CAIC,UACA,OAED,oCAIC,OACA,gCAED,kCAIC,OACA,aAGF,mBAjDqB,EAyDrB,eAAU,SAAoB,WAC7B,IAMC,IANI,KAAQ,YAMN,eAGP,uFAAM,GAAQ,GACd,QAAK,SAEL,MAAM,GAAiB,UAAS,0BAA2B,EAE3D,GAAM,EAAO,cACZ,EACA,EAAQ,UACR,UAAS,aAAc,GACvB,KAAK,SAGN,WACA,cAAM,aACN,QAAK,SAAS,eAId,MAAM,GAAS,cAAqB,UAAS,aAAc,GAAW,EAAG,KAAK,SAC9E,kBAAM,aACN,QAAK,SAAS,eAEd,GACA,IAjCD,GAmCA,UAAa,SAAU,mpBC/FvB,mSAXA,gBACA,eACA,gBACA,OACA,eACA,cACA,cACA,eACA,eACA,iBAOqB,0IACpB,qBAIC,OACA,MAED,8BAMC,IAAM,GAAS,KAEf,qBAAO,GAAS,UAAM,2BAA4B,EAAO,eAAgB,EAAO,SAChF,IAED,gCAMC,IAAM,GAAQ,KAEd,YAAO,GAAQ,EAAM,IAAI,OAAS,EAAM,MAAM,OAC9C,CASD,yCAEC,OAAO,MAAK,WAAY,IACxB,IAED,uCAOC,OAAO,MAAK,WAAY,IACxB,IAED,2CAIC,UACA,OAED,oCAIC,OACA,8BAED,kCAIC,OACA,aAGF,mBA1EqB,EAmFrB,eAAU,OAAyB,aAClC,IAAK,CAAC,EAML,YAAM,eAGP,4DAAM,GAAU,uBAAqC,EAAkB,cAEvE,MAMC,CANI,GAAQ,gBAMN,eAGP,uEAMC,IANI,KAAQ,YAMN,eAGP,2FAAM,GAAQ,GACd,QAAK,SAEL,MAAM,GAAS,cAAqB,EAAM,IAAK,EAAS,KAAK,SAC7D,WAAM,aACN,QAAK,SAAS,eAEd,MAAM,GAAiB,UAAS,0BAA2B,EAC3D,GAAM,GAAO,cACZ,EAAM,MACN,EAAM,IAAI,OAAS,EAAM,MAAM,OAC/B,EACA,KAAK,SAEN,kBAAM,aACN,SAAK,SAAS,eAEd,IACA,IAhDD,GAkDA,UAAa,SAAU,mpBCjJvB,CAkFS,YAAmB,OAE3B,KAAM,EAAiB,GAEvB,iDAAK,SACJ,KAAK,KAAK,SACV,SAC+B,mBAC9B,CAAK,EAAe,IACnB,MAAU,OAAY,EAAM,EAAW,EAAQ,MAAO,EAEvD,eAPF,EAQC,CAAE,SAEH,QAED,CAWwD,mBACvD,IAAM,GAAU,EAAY,IAAI,OAAS,EAAY,MACrD,OAAI,EAAiB,EAErB,MAIC,MAJI,QAIa,EAAe,2BAA4B,EAG7D,OAAM,GAAS,KAAK,gCAAiC,EAAY,EAAW,EAAgB,EAM5F,GAAmB,MAAd,KAGJ,CAH4B,IAAO,WAG3B,GAGT,MAAM,GAAU,UAAM,iBAGtB,MAAK,CAAC,EAAQ,QAAS,MACtB,IAAM,GAAW,UAAM,gBAEvB,WAAK,MAAQ,EACb,WAAK,IAAM,EAEX,SAAK,KAAM,SACX,EACD,oSAnJD,eACA,cACA,iBAUqB,cAMA,eAAM,0EAClB,EAEP,aAAiB,KAHQ,GAIzB,CAED,YANA,sCAYC,MACA,eAsCD,UASD,mBAlEqB,EAyIrB,cAAK,I,ypBClJL,iiBAHA,cACA,iBAKqB,cAQ4B,qBAAc,QAG7D,kEAMA,aAAK,KAQL,IAAK,SAAW,EAAW,UAAM,gBAAiB,GAQlD,OAAK,SAAW,EAAW,UAAM,gBAAiB,GAQlD,OAAK,SAAW,EAChB,CAED,YApCA,aA2CA,wBAKC,OAAO,IAAI,GAAiB,KAAK,KAAM,KAAK,SAAU,KAAK,SAAU,KAAK,SAAU,KACpF,YAED,sCAKC,OAAO,IAAI,GAAiB,KAAK,KAAM,KAAK,SAAU,KAAK,SAAU,KAAK,SAAU,KAAK,YACzF,EAED,mCAIC,IAAM,GAAO,KAAK,SAAW,MAE7B,qBAAK,SAAU,GAAQ,KAAK,KAAM,KAElC,UAAO,CAAE,KAAM,KAAK,KAAM,KAC1B,EAED,iCAIC,IAAM,mFAEN,mBAAO,GAEP,SACA,CAED,6BAzCC,OACA,kBA+CD,iBAOuB,aACtB,OAAO,IAAI,GACV,EAAK,KACL,EAAK,SAAW,UAAM,SAAU,EAAK,SAAU,GAAa,KAC5D,EAAK,SAAW,UAAM,SAAU,EAAK,SAAU,GAAa,KAC5D,EAAS,QACT,EAED,8CAlBA,OACA,qEA9FmB,kpBCHrB,mSAHA,gBACA,kBAQqB,0IAwBpB,8BAKC,IAAM,GAAW,cAAqB,KAAK,eAAgB,KAAK,QAAS,KAAK,YAG9E,YAAS,eAAiB,KAC1B,iBAEA,uBACA,CAED,QArCA,yBAMC,OAAO,MACP,cAED,MAGc,WACb,MAAK,eACL,CAED,6BAIC,OACA,8CAoBA,OACA,uEA3CmB,kpBCJrB,mSALA,gBACA,cACA,cACA,iBASqB,cASqB,mBAAc,QAGtD,kEAKA,aAAK,SAOL,IAAK,QAOL,IAAK,QAAU,EACf,CAED,YAzBA,aAgCA,wBAKC,OAAO,IAAI,GAAiB,UAAS,mBAAoB,KAAK,UAAY,KAAK,QAAS,KAAK,QAAS,KACtG,YAED,sCAKC,OAAO,IAAI,GAAiB,UAAS,mBAAoB,KAAK,UAAY,KAAK,QAAS,KAAK,QAAS,KAAK,YAC3G,EAED,mCAKC,IAAM,GAAU,KAAK,SAErB,aAAK,EAAG,eAMP,cAAM,eAGN,kHAAM,IAAK,EAAQ,OAAS,KAM5B,aAAM,eASP,uGAAK,MAAK,SAAW,KAIrB,kBAAQ,KAAO,KAEf,QAAO,CAAE,QAAF,EAAW,QAAS,KAC3B,SAED,6BA3DC,OACA,kBAiED,iBAOuB,aACtB,OAAO,IAAI,GAAiB,UAAS,SAAU,EAAK,SAAU,GAAY,EAAK,QAAS,EAAK,QAAS,EACtG,8CAZA,OACA,qEAtGmB,kpBCTrB,mSAHA,gBACA,iBAcqB,cAWwB,qBAAc,QAGzD,kEAMA,aAAK,KAQL,IAAK,IAQL,IAAK,SAQL,IAAK,SAAW,EAChB,aAlCD,aA8CA,wBAIC,OAAO,IAAI,GAAwB,KAAK,KAAM,KAAK,IAAK,KAAK,SAAU,KAAK,SAAU,KACtF,YAED,sCAIC,OAAO,IAAI,GAAwB,KAAK,KAAM,KAAK,IAAK,KAAK,SAAU,KAAK,SAAU,KAAK,YAC3F,qCAGA,IAAuB,IAAlB,QAAK,UAAqB,KAAK,KAAK,aAAc,KAAK,OAAU,KASrE,cAAM,OAEL,uIACA,CAAE,KAAM,KAAK,KAAM,IAAK,KAI1B,SAAuB,IAAlB,QAAK,UAAuC,IAAlB,QAAK,UAAqB,KAAK,KAAK,aAAc,KAQhF,UAAM,eACL,yFACA,CAAE,KAAM,KAAK,KAAM,IAAK,KAI1B,YACC,KADI,QAAK,cAGJ,KAAK,gBAAiB,KAG5B,UALM,KAAK,aAAc,KAAK,IAAK,KAElC,UAGM,CAAE,KAAM,KAAK,KAAM,IAAK,KAAK,IAAK,SAAU,KAAK,SAAU,SAAU,KAC5E,SAED,6BA/DC,OACC,KADI,QAAK,SAEH,mBACN,IADW,QAAK,SAGhB,sBAED,+BA+DD,iBAOuB,aACtB,IAAK,CAAC,EAAS,QAAS,EAOvB,WAAM,eACL,2HACA,CAAE,SAIJ,UAAO,IAAI,GAAwB,EAAS,QAAS,EAAK,MAAQ,EAAK,IAAK,EAAK,SAAU,EAAK,SAAU,EAC1G,8CAzBA,OACA,4EApHmB,+lBCZrB,CAyFS,YAER,IAAK,KACJ,iBAGD,aAAI,GAAU,KAGd,OAAQ,GAAW,EAAQ,GAAI,qBAC9B,IACC,CADI,GAAQ,iBAIb,QAAU,EACV,MAED,OAAK,CAAC,GACL,CADgB,GAAQ,WAIzB,KACA,C,iiBAlHD,iEAGM,EAEN,GAUqB,cAMM,iBAAW,QAGpC,kEAFO,EAAM,EASb,aAAK,SAQL,IAAK,gBAAkB,EACvB,CAED,YArBA,wBAwBI,WAAoB,8DAClB,WACJ,GAEiB,kBAAR,KAA8B,GAAQ,KAAK,uFAAoB,EAEzE,GAJgB,kBAAR,sFAEP,EAIF,sBAOO,WACN,IAAM,uFAGN,YAAO,SAAW,KAElB,SACA,CAED,0BAQW,WACV,OAAO,yFAAiB,IAAkB,KAAK,UAAY,EAC3D,kBAGF,mBAnEqB,EAwErB,EAAiB,iBAIjB,gLCtFA,CAwLoB,aAEnB,OACC,QADI,QAAO,GACJ,CAAE,cAGL,KAAC,cACL,OAAQ,CAIT,IAAO,MAAM,KAAM,GACjB,IAAK,WACL,OAAsB,QAAf,QAAO,GAAmB,cAAU,GAC3C,CACF,G,mSA5MD,gBACA,cACA,eACA,iBAKqB,YAOpB,CAAa,aAAW,QAOvB,QAEA,aACC,QAAK,eAAgB,EAEtB,EAED,kBAGE,OAAO,yBACR,OAAO,MAAK,UAAW,OACvB,WAED,QAwCA,WAQI,WACH,OACA,kBADO,GAGR,+BAOgB,WACf,OAAO,MAAK,eAAgB,KAAK,WACjC,EAED,yBAMU,WACT,OAAO,MAAK,UACZ,EAED,8BAMe,WACd,OAAO,MAAK,UAAU,QACtB,EAED,sCAMC,OAAO,MAAK,UAAW,OACvB,WAED,+BAQuB,aACtB,MAAK,YAAa,WAClB,SAAI,GAEJ,IAAQ,EAAW,MAJW,gBAM9B,WAAoB,gDAAQ,SAC3B,QAAK,OAEL,UAAK,UAAU,OAAQ,EAAO,EAC9B,GACA,IACA,YAZ6B,oEAc9B,OACA,EAED,+BAOgB,WAAqB,8DACpC,OAAK,YAAa,WAElB,UAAM,GAAI,GAAI,EAAO,EAAI,EAAQ,EAChC,SAAK,UAAW,GAAI,OAGrB,WAAO,MAAK,UAAU,OAAQ,EAC9B,EAED,4BAQmB,aAClB,MAAK,KAAM,UAAY,EACvB,qCAzIA,OAAO,MAAK,UACZ,MAED,gCAOC,OACA,EADO,QAAK,UAGb,6BAOC,OACA,KAED,+BAOC,OACA,yBAlEmB,EA+KrB,cAAK,IAKL,oIC1LA,mSAFA,mEAOqB,YAMpB,CAAiC,iBAAiB,QAOjD,QAAK,SAQL,OAAK,SAQL,OAAK,UAAY,EAEjB,qBAAQ,KACR,EAED,kBAUA,iCAIC,MAAK,SACL,gBAED,0CAIC,MAAK,SACL,gDAfA,OAAO,MAAK,SAAS,aAAa,4BAA6B,KAC/D,8BA1CmB,6HCLrB,CA6QsB,aACrB,OAAO,CAAC,EAAG,EAAK,OAChB,MADyB,YAAO,OAAO,iBAAkB,EAAK,SAAU,Q,mSAhRzE,mEAwCqB,YAUpB,CAAa,aAAU,sBACtB,UAAO,OAAQ,KA0Cf,GAAK,EAAQ,SAAW,EAAQ,iBAAmB,OACtC,WACX,IAAI,GAAU,EAAQ,QAEtB,GACC,QADI,QAAO,OACD,CACV,OANgD,gBAQjD,WAAyB,gDAAU,SAClC,QAAQ,iBAAiB,IAAK,EAAmB,aAChD,GACA,KACA,GACD,WAbgD,qEAClD,MAAM,GAAM,KAAc,GAAkB,UAc5C,EACD,CAED,kBAwEA,6BAIC,MAAK,OAAQ,KACb,MAED,oCAIC,MAAK,OAAQ,KACb,KAED,oCAIC,MAAK,OAAQ,KACb,KAED,wCAIC,MAAK,OAAQ,KACb,SAED,uBAMQ,WACP,CACC,KAED,OAED,kCASmB,WAElB,IAAM,GAAU,KAChB,QAAM,EAAmB,KAAK,WAE9B,UAAK,CACJ,QAKD,SACC,IADI,WACG,MAAe,CAAT,KAAa,QAI3B,WAAI,GAAQ,CAAE,EAAU,EAAmB,GAE3C,IACC,IAAM,GAAO,KAAK,WAAW,IAG7B,MAAK,EACJ,SAID,KAAQ,CAAE,EAAQ,EAAmB,GACrC,CAVD,OAUU,IAEV,SACA,mCAhJA,OAAO,MAAK,WAAW,KAAM,IAC7B,IAED,6BAQC,OAAO,MAAK,WAAW,OAAQ,GAAc,MAAO,CAAC,GAAK,IAC1D,IAED,6BAQC,OAAO,MAAK,kBACZ,EAED,iCAQC,OAAO,MAAK,kBAAmB,CAC/B,EAED,gCAOc,OACb,KAAI,EAGJ,WACC,KADI,QAAK,aAAa,eAIvB,WAAK,WAAW,KAAc,aAC7B,IAAM,GAAU,EAAK,UAAY,EAAK,aAEtC,qBACC,OAGD,GACA,CAED,GACA,QAyFF,cAtOqB,kpBCnCrB,CAkOwB,aACvB,OAAO,GAAI,MAAO,kBAAiB,QAAZ,QAAO,EAC9B,E,iiBAzOD,aACA,eACA,eACA,iBAQqB,cAMP,aAAS,QAOrB,kEAHC,YAID,sBAAK,GAAI,MAAoB,eAC5B,CAAK,EAAK,SAAW,EACpB,kBAAK,eAAe,aAAc,EAAK,QAAS,EAAK,eAAe,SAErE,GAGD,KAAK,GAAI,SAAiB,aACzB,CAAK,EAAK,SAAW,EACpB,kBAAK,QAEN,QAOD,KAAK,OAUL,IAAK,IAQL,cAAK,eAUL,OAAK,aAAe,GAAI,KACxB,CAED,YAzDA,oCA+DO,OACN,QAAK,KAMJ,WAAM,eAGP,0FAAO,SAAQ,IAAK,KAAK,IAAK,kBAAK,GAAE,MAAjB,IAClB,KAAM,UACN,GACA,QACF,EAED,kCAKU,OAGT,WAAO,SAAQ,IAAK,KACnB,cACC,KAAM,UACN,OAAO,SAAQ,IAAK,EAAK,IAAK,kBAAK,GAAE,SACrC,GACF,EAED,oBAQW,aAAQ,OAClB,uFAAW,EAGX,MAAI,GAAU,QAEd,gBAAK,MAAK,OAAS,CAAC,EACnB,UAAU,EACR,KAAM,iBAAM,GAAK,MAClB,GACC,KAAM,iBAAM,GAAK,aAAa,OAAQ,EAKxC,QAAK,aAAa,IAGnB,IACA,CAED,0BAKW,WACV,MAAK,eACL,CAED,mCA8BsB,sDAAT,IAAS,eACrB,MAAK,CAAC,EAAO,QAAU,CAAC,EAMvB,QAAM,eAGP,mFASC,IAAI,WACH,IADW,gBAEX,8DAA2B,wCAC1B,YAAuB,qDAAS,YAC/B,QAAK,SAAU,IAAU,GACzB,YAHyB,4EAI1B,CAED,WARW,qEASX,GAAK,GAAI,MAAc,eAAU,uBAChC,YAAuB,qDAAS,YAC/B,SAAK,SAAU,IAAU,GACzB,YAH+B,4EAIhC,CAGD,KAAK,GAAI,SAAiB,eAAU,uBACnC,YAAuB,qDAAS,YAC/B,SAAK,eAAgB,GACrB,YAHkC,4EAInC,CACD,EAEF,+BAlNmB,EAqNrB,0BAMA,yFCzOA,CAOkB,aAChB,IAAI,GAAQ,CAAC,EACT,EAAS,EAAU,EAAQ,OAE/B,WACA,QAAS,IAAQ,GACf,IAAI,GAAQ,EACZ,QAAK,IAAI,EAAM,GAAI,EACpB,GACF,CAED,kDAxBA,iBACA,gBACA,gBACA,gBACA,mBAqBA,EAAS,UAAU,gBACnB,EAAS,UAAU,oBACnB,EAAS,UAAU,cACnB,EAAS,UAAU,cACnB,EAAS,UAAU,wBAEJ,kFCxBf,CAOe,aACb,MAAK,SAAW,cACjB,EAED,kDAlBA,gBACA,gBACA,gBACA,gBACA,gBACA,mBAcA,EAAM,UAAU,gBAChB,EAAM,UAAU,oBAChB,EAAM,UAAU,cAChB,EAAM,UAAU,cAChB,EAAM,UAAU,wBAED,iFCzBf,8DAGA,KAAI,EAAS,UAAK,iBAEH,iFCLf,+DAEA,OAae,QAJe,aAC5B,OAAO,CAAC,CAAC,EAAM,QAAyC,CACzD,CAD0B,eAAY,EAAO,EAAO,sECZrD,aAqBe,QAZ0B,eACvC,QAAI,GAAQ,CAAC,EACT,EAAS,EAEb,OAAS,IACP,MAAI,EAAW,EAAO,EACpB,IAGJ,SACD,0FCfD,kDAJA,gBACA,eACA,oBAsBe,QAZU,aACvB,GAAO,cAAM,EAAM,GAAU,CAAC,GAAQ,cAEtC,UAAI,GAAQ,EACR,EAAS,EAEb,OAAiB,IAAV,KAAkB,EACvB,KAAS,EAAO,cAAM,EAExB,aAAQ,IAAS,GAAS,EAC3B,yFCtBD,+DAEA,OAwBe,QAfoB,eACjC,IAAI,IACF,QAAO,cAAW,EAEpB,UAAI,GAAQ,EAAY,EACpB,EAAS,EAEb,OAAS,IACP,MAAI,EAAM,KACR,QAGJ,SAAO,CACR,mFCdD,kDAVA,gBACA,gBACA,gBACA,eACA,gBACA,qBAoEe,QArD6B,eAC1C,QAAI,GAAW,cAAf,QACI,EAAS,EAAO,GAAG,OACnB,EAAY,EAAO,OACnB,EAAW,EACX,EAAS,MAAM,GACf,EAAY,SAGhB,OACM,OAAQ,EACZ,GAAI,GACF,MAAQ,cAAS,EAAO,cAE1B,OAAY,SAAU,EAAM,OAC5B,KAAO,GAAY,CAAC,IAAe,GAAuB,GAAV,KAAiC,GAAhB,IAAM,QACnE,cAAa,GAGnB,YAAQ,EAER,MAAI,GAAQ,CAAC,EACT,EAAO,EAEX,GACA,WAAS,IAAQ,GAAU,EAAO,OAAS,GACzC,IAAI,GAAQ,EAAM,GACd,EAAW,EAAW,EAAS,GAEnC,EACI,KADK,GAAwB,CAAV,KAAe,EACtC,EAAM,GACE,cAAS,EAAM,IACf,EAAS,EAAQ,EAAU,GAEjC,OACA,EAAS,KACP,IAAI,GAAQ,EACZ,GAAI,GAAE,GACE,cAAS,EAAO,IAChB,EAAS,EAAO,GAAW,EAEjC,WAEH,MACD,CACE,KAAK,KAEP,KAAO,KACR,EACF,CACD,OACD,oFCnED,CAewD,qBACtD,SAAI,IAGJ,KAAa,IAAT,KAA0B,IAAT,MAAmB,cAAmB,EAApB,EAAqB,cAC1D,IAEK,cAAgB,EAAO,EAAO,EAAa,EAAY,EAC/D,GAHU,IAAU,GAAS,IAE5B,oDA1BF,iBACA,eACA,4BA2Be,oEC7Bf,aAae,QANO,WACpB,OAAgB,YACd,OAAwB,KAAjB,WAA6B,EACrC,EACF,mFCLD,kDANA,gBACA,gBACA,gBACA,mBAGI,EAAa,MAGjB,UAAI,EAAS,EAEb,SAmCe,QAxB+B,iBAC5C,IAAI,GAAU,cAAd,QACI,EAAQ,CAAC,EACT,EAAS,EAAO,OAChB,EAEJ,MACE,MAAO,cAAS,EAAO,cAEzB,KAAS,IACP,UAAI,GAAY,EACZ,EAAQ,EAAO,GACf,EAAW,EAAW,EAAS,GAEnC,EAAsE,CACpE,CADK,EAAC,EAAY,EAAQ,EAAM,EAAU,EAAW,KACjD,IACF,KAAO,KAAK,EAAM,EAEpB,KAAO,KAAK,EAAO,EAGvB,SACD,mFC5CD,8DAGI,OA4DW,QAxCoC,iBACjD,GAAQ,EAER,UAAI,GAAM,EACN,EAAO,EAAQ,EAAM,OAAS,EAC9B,EAAW,IAAU,EACrB,EAAsB,IAAV,KACZ,EAAc,cAAS,GACvB,EAEJ,WAAO,EAAM,GACX,IAAI,GAAM,WAAY,CAAC,EAAM,GAAQ,GACjC,EAAW,EAAS,EAAM,IAC1B,EAA4B,WAC5B,EAAyB,IAAb,KACZ,EAAiB,IAAa,EAC9B,EAAc,cAElB,MACE,KAAI,GAAS,GACR,SACL,EAAS,IAAmB,GACvB,GACL,EAAS,GAAkB,IAAiB,GAAc,CACrD,GACL,EAAS,GAAkB,GAAgB,CAAC,IAAc,GAAc,CACnE,GAAI,GAGT,KAAS,EAAc,GAAY,EAAU,EAE/C,EACE,IAAM,EAEN,IAEH,CACD,OAAO,UACR,EAzDG,UAAkB,CAMtB,sECVA,aAae,QANI,WACjB,OAAgB,YACd,OAAO,GACR,EACF,mFCPD,kDAJA,gBACA,eACA,oBA2Be,QAfoB,eACjC,QAAI,GAAQ,CAAC,EACT,EAAS,EAEb,SAAS,IACH,KAAS,EACT,cACE,cAAe,EAAQ,EAAO,GAAQ,EAAU,GAChD,cAAe,EAAO,GAAQ,EAAQ,EAAU,IAElD,EAEN,SAAQ,IAAU,EAAO,OAAU,cAAS,EAAQ,EACrD,yEC3BD,aAYe,QAJU,aACvB,OAAO,GAAM,IACd,mFCVD,8DAEA,OAWe,QAJc,WAC3B,OAAO,cAAkB,GAC1B,qFCXD,+DAEA,OAae,QANW,WACxB,IAAI,GAAS,GAAI,GAAY,YAAY,EACzC,iCAAe,GAAQ,IAAI,cAC3B,IACD,kFCbD,8DAEA,OA4Be,QAlB4B,iBACzC,KAEA,aAAI,GAAQ,CAAC,EACT,EAAS,EAEb,OAAS,IAAQ,GACf,IAAI,GAAM,EAEV,GAAI,EAAW,EACX,EAAW,EAAO,GAAM,EAAO,GAAM,EAAK,EAAQ,GAClD,EAEJ,iBAAY,EAAQ,EACrB,EACD,OACD,sEC5BD,WACA,GAAI,GAAqB,OAEzB,iBAWe,QAJO,WACpB,OAAO,GAAmB,OAC3B,qFCJD,CAgCgB,aACd,OAAO,GAAe,KACvB,EAID,kDA9CA,iBACA,gBACA,gBACA,gBACA,gBACA,mBAGI,EACA,eACA,EAAa,mBACb,EAAS,eACT,EAEJ,mBAAI,EAGJ,oBAAI,EAAc,OAOlB,UAAI,EAAiB,EAGrB,SAAI,EAAqB,gBAAzB,SACI,EAAgB,gBADpB,SAEI,EAAoB,gBAFxB,SAGI,EAAgB,gBAHpB,SAII,EAAoB,gBAExB,UAaK,WAAY,EAAO,cAAa,GAAI,aAAY,MAAQ,GACxD,WAAO,EAAO,MAAP,UAAmB,GAC1B,WAAW,EAAO,UAAQ,YAAc,GACxC,WAAO,EAAO,MAAP,UAAmB,GAC1B,WAAW,EAAO,MAAP,UACd,OAAkB,WAChB,IAAI,GAAS,EAAe,KAAK,GAC7B,EAAiB,GA5CT,kBA4CqB,EAAoB,mBACjD,GAAa,EAAO,cAExB,aACE,UACE,QAAyB,SACzB,OAAoB,SACpB,OAAwB,SACxB,OAAoB,SACpB,OAAwB,SAG5B,UACD,EACF,aAEc,oECrEf,aAiBe,QAVK,WAClB,IAAI,GAAQ,CAAC,EACT,EAAS,MAAM,EAEnB,eAAI,QAAwB,aAC1B,GAAS,KAAS,CAAC,EACpB,EACD,GACD,mFCVG,kDALJ,gBACA,gBACA,qBAuLe,QA5He,eAC5B,CAsBoB,cAClB,IAAI,IAAO,EACP,GAEJ,WACA,WACA,KAAS,EAAK,MAAM,GACpB,IACD,CAED,CAAqB,cAEnB,UAEA,KAAU,WAAW,EAErB,GAAO,EAAU,EAAW,IAC7B,CAED,CAAuB,cACrB,IAAI,IAAoB,GAAO,EAC3B,GAAsB,GAAO,EAC7B,GAAS,EAEb,SAAO,IAAS,SAAU,GAAQ,EAAU,IAC7C,EAED,CAAsB,cACpB,IAAI,IAAoB,GAAO,EAC3B,GAAsB,GAK1B,QAAQ,CAAC,GAAiB,IAAqB,GACxB,CAApB,KAA2B,IAAU,IACzC,CAED,CAAS,YACP,IAAI,IAAO,KACX,iBAAI,GACF,IAAO,EAGT,WAAU,WAAW,EAAc,EACpC,KAED,CAAsB,cACpB,qBACA,GAIA,SAAI,IACF,GAAO,EAET,OACA,SACD,EAED,CAYS,YACP,IAAI,IAAO,KAAX,WACI,GAAa,EAEjB,SACA,YACA,OAEA,GAAI,GACF,IACE,iBAAO,GAET,MAEE,uBACA,KAAU,WAAW,EACrB,GAAO,EAEV,EACD,OACE,gBAAU,WAAW,EAEvB,IACD,CACD,IAjHI,GAAe,EACf,EAAiB,EACP,KACD,MAGb,MAXI,EACA,EACA,EACA,EACA,KAQF,UADE,QAAO,QACH,IAER,WAjEF,gCAiES,cAAS,IAChB,EAAI,cACF,OAAU,CAAC,CAAC,EACZ,WAAS,WACT,KAAU,GAAS,SAAU,cAAS,EAAQ,UAAY,EAAG,GAC7D,KAAW,YAAc,GAAU,CAAC,CAAC,EAAQ,SAG/C,MAiGA,OArCS,UACP,CACE,yBAEF,KAAe,EACf,IAAW,EACZ,QAED,IA8BA,MA9BS,UACP,OAAmB,YAAY,EAAS,EAAa,KACtD,WAED,EA2BD,mFCpLD,kDAHA,gBACA,oBAoCe,QATS,eACtB,IAAI,GAAS,EAAQ,EAAM,OACvB,QAGJ,MAAK,GAAe,WAAa,EAAI,cACrC,GAAO,cAAU,EAAW,CAAJ,GAAQ,EAAI,EACrC,wFChCD,kDAHA,gBACA,oBAqCe,QAVc,eAC3B,IAAI,GAAS,EAAQ,EAAM,OACvB,QAGJ,MAAK,GAAe,WAAa,EAAI,cACrC,KAAI,EACJ,EAAO,cAAU,EAAO,EAAO,CAAJ,GAAQ,EACpC,0ECpCD,aAsBe,QAJD,WACZ,OAAQ,IAAS,EAAM,OAAU,EAClC,0FCpBD,8DAGI,KAGA,EAAc,OAGlB,UAAI,EAAiB,EAOrB,eAAI,EAAiB,EAGrB,SAAI,EAAuB,EAE3B,uBAwBe,QANM,WAEnB,OAAO,cAAkB,IAAU,EAAe,KAAK,EAAO,YAC3D,CAAC,EAAqB,KAAK,EAAO,WAAa,EAAe,KAClE,IArCD,sGCNA,8DAGI,KAIA,EAAc,OAOlB,UAAI,EAAiB,EAErB,WA0Be,QARK,WAIlB,IAAI,GAAM,cAAS,GAAS,EAAe,KAAK,GAChD,SAAc,IAnCZ,qBAoCH,GAjCD,8GCHI,kDAJJ,gBACA,kBAMI,EAAc,OAOlB,UAAI,EAAiB,EAErB,WAuBe,QALG,WAChB,OAAuB,QAAhB,QAAO,IACX,CAAC,cAAQ,IAAU,cAAa,IAAU,EAAe,KAC7D,IA9BD,kGCPA,+DAEA,OA0Be,QANS,aACtB,OAAQ,IAAS,EAAM,QAAU,GAAU,EAAO,OAC9C,cAAY,EAAO,GAExB,mFCtBD,kDAJA,iBACA,eACA,qBAoCe,QAbW,aACxB,IAAI,EAAE,GAAS,EACb,QAEF,YAAI,GAAS,cACb,SACE,KADE,IAGJ,EAAO,cAAS,EAAiB,WAC/B,OAAO,cAAgB,SACxB,EACF,oFCxBD,oDAUwB,QAAO,WAC9B,OAAK,cACJ,GAAO,cAEP,GAAO,GAAI,KAEZ,E,EAnBD,gBACA,+CC6DmC,eAClC,GAAQ,kBAAmB,EAC3B,EAED,CA2CS,YACR,OACA,K,oDAxFe,SAAU,WACzB,OAAO,CAAC,CAAC,EAAQ,kBACjB,EAED,IAagB,SAAmB,aAClC,UACA,QAAQ,aACR,wBAAQ,gBACR,IAAQ,SACR,KAAQ,kBAER,MAAK,EACJ,SAAU,EAAS,EAGpB,OACA,CAED,IAQgB,aAUA,SAAU,WACzB,IAAM,GAAe,EAAQ,kBAExB,SACJ,GAG6B,UAAvB,QAAO,GAA6B,IAC3C,EADA,EAGD,IASgB,iBAAkB,WACjC,UAAS,aAAc,kBACvB,UAAS,SAET,iBAAS,GAAI,mBAAqC,eACjD,CACC,IAAS,SAET,yBAAS,YAEV,sBAED,GACA,CAID,EA5GA,GAAM,GAAe,OACrB,YAAM,EAAc,OAOb,SAAM,sBAON,YAAM,+BAEb,6PC1BA,EAEA,EACA,EAAK,UACJ,OACA,KAFG,IAIJ,GAEC,GAAI,GAAK,SAAS,kBAAoB,CAAC,EAAE,MACzC,OAHD,CAGQ,QAEP,CAAqB,QAAlB,uBAAO,iCACT,EACD,OAID,CAEA,EAAO,QAAU,mFCEO,QAAqD,eAC5E,IAAK,EAEJ,kBAAO,GAAO,MAAO,CAAE,KAAM,QAAS,OAAQ,EAAU,mBAAoB,WAE5E,OAAM,GAAS,EAEf,YAHM,eAIN,WAAqB,8CAAS,iBAC7B,MAAM,EAAS,cAAgB,CAAE,WAAY,EAC7C,qBAAI,EAAO,EACX,SAAI,EAAO,EAGX,SAAQ,CAAC,EAAK,MAEP,MAAO,EAAK,MAAM,KAAK,MAE7B,QAAK,EAAO,MAAO,CAAE,KAAF,EAAQ,OAAQ,EAAM,WAExC,IAGD,WAAO,EACP,WAAO,EACP,MACD,UAtBK,oEA0BP,CACA,QAhDD,EAIA,8DAEA,qpBCEA,mSAJA,gBACA,gBACA,mBASqB,cAMC,eAAe,QAGnC,kEAKA,aAAK,aASL,IAAK,IAEL,cAAK,SAAU,EAAO,SAAU,cAAe,UAC9C,GACA,iBACA,cAHD,GAIA,CAED,YAzBA,4CA6BC,MAAK,MAAQ,KAAK,OAAO,SAAS,UAAU,aAAc,KAC1D,aAED,wCAQC,IAAM,GAAW,KAAK,OAEtB,eAAO,cAA+B,KAAK,aAAc,EAAS,UAAW,EAC7E,OAED,qCAqB2B,kEAC1B,MAAM,EAAW,KAAK,OACtB,SAAM,EAAY,EAClB,UAAM,EAAU,WAAuB,WAAc,CAAC,KAAK,MAAQ,EAGnE,aAAS,eAAgB,UACxB,IAAK,EACJ,YACC,IAAU,aAAc,EAExB,mBAAU,gBAAiB,EAE5B,kBACA,IAAM,GAAS,cAAsB,EAAK,aAAc,EAAU,YAAa,EAG/E,QAAM,EAAQ,EAAQ,OAAS,EAAS,QAJlC,eAMN,WAAqB,gDAAS,SAC7B,MACC,IAAM,aAAc,EAAO,EAAK,aAEhC,KAAM,gBAAiB,EAAO,EAE/B,sBAZK,oEAaN,CACD,CACD,+BApGmB,gLCDrB,mSAVA,eACA,cAEA,eACA,eACA,eAEA,cACA,iBAiBqB,YAIpB,aAAc,mBAOb,QAAK,oBAAsB,GAQ3B,cAAK,oBAAsB,GAS3B,cAAK,4BAA8B,GAGnC,UAAK,GAAI,sBAA8B,aACtC,KAAK,EAIL,iBAAM,GAAgB,EAAK,oBAAoB,IAAK,EAAK,cAEzD,UAAK,aAAe,EAAK,gBAAiB,EAAe,EAAK,cAC9D,QARD,EAQG,CAAE,SAGL,aAAK,GAAI,sBAA8B,aACtC,KAAK,EAIL,sBAAI,GAAY,EAAK,aACrB,OAAI,EAAc,EAAK,oBAAoB,IAE3C,GAAQ,CACP,KAAY,EACZ,SAAc,EAAK,oBAAoB,IAGxC,MAAM,GAAc,EAAK,eAAgB,EAAK,aAAa,OAAQ,EAAK,aAAa,OAErF,KAAK,cAAgB,UAAc,0BAA2B,EAC9D,GAhBD,EAgBG,CAAE,SACL,OAED,uCAS4B,aAC3B,MAAK,oBAAoB,IAAK,EAC9B,QAAK,oBAAoB,IAAK,EAC9B,EAED,kCAKmB,WAClB,IAAM,GAAe,KAAK,eAE1B,QAAK,gBAAiB,EACtB,EAED,mCAKoB,WACnB,IAAM,GAAc,KAAK,cAEzB,QAAK,gBAAiB,EACtB,EAED,wCAIC,MAAK,oBAAsB,GAC3B,cAAK,oBAAsB,GAC3B,QAED,+BAQgB,WACf,OAAO,MAAK,oBAAoB,IAChC,EAED,8BAMe,WACd,OAAO,MAAK,oBAAoB,IAChC,EAED,6BAMc,WACb,OAAO,eAAgB,KAAK,gBAAiB,EAAU,OAAS,KAAK,gBAAiB,EACtF,KAED,4BAMa,WACZ,OAAO,eAAe,KAAK,eAAgB,EAAW,OAAS,KAAK,eAAgB,EACpF,KAED,gCAOiB,WAChB,IAAM,GACL,cACA,SAGD,kBAAK,KAAM,sBAEX,GAAO,EACP,aAED,+BAOgB,WACf,IAAM,GACL,eACA,SAGD,kBAAK,KAAM,sBAEX,GAAO,EACP,YAED,0CA6B4C,aAC3C,MAAK,4BAA4B,IAAK,EACtC,EAED,+BAkBwC,eACvC,IAAK,GAAa,EAEjB,IAAM,GAAsB,KAAK,eAAgB,EAAW,OAAQ,EAAW,MAC/E,GAAM,EAAiB,KAAK,eAAgB,EAAY,EAExD,SAAO,GACP,CAKD,IAAK,EAAW,GACf,cAID,OAEM,GAFF,GAEJ,EAAU,EAAI,EAAG,EAAI,EACpB,OAAe,KAAK,eAAgB,EAAW,SAGhD,UACA,EAED,gCAO+B,aAC9B,MAAK,oBAAoB,OACzB,QAAK,oBAAoB,OACzB,EAED,+BAsBgB,WACf,IAAK,KAAK,4BAA4B,IAAK,EAAS,MACnD,IAAM,GAAW,KAAK,4BAA4B,IAAK,EAEvD,YAAO,GACP,EAJD,CAIO,GAAK,KAAK,oBAAoB,IACpC,SACA,GAAM,GAAK,EAAS,GACpB,cAAO,GAAS,KAChB,OAAM,GAAK,EAAS,GACpB,mBAEA,MAAI,GAAM,EADJ,eAGN,WAAqB,EAAS,4DAAgB,SAC7C,SAAO,KAAK,eACZ,WALK,oEAON,OAED,EAED,gCAyB6B,aAE5B,IAEI,GAEJ,EAAI,EACJ,EAAI,EAGJ,EANA,KAMK,EAAW,GACf,cAAO,eAAkB,EAM1B,QAAQ,EACP,KAAW,EAAW,SACtB,KAAa,KAAK,eAClB,MACA,EAID,UAAK,IACJ,EAAO,KAAK,4BAA6B,cAAkB,EAM3D,IAAO,KAAK,gBAAiB,EAAU,GAAmB,EAE3D,GAED,4CAY6B,WAG5B,IAAM,GAAa,EACnB,WAAM,EAAY,EAElB,gBAAK,gBACJ,QAAO,cAAkB,EAAY,EAAW,KAC1C,QAAK,eACX,QAAO,cAAkB,EAI1B,GACA,CAuDD,oBA1coB,EA4erB,cAAK,I,yFC7fL,CA+KiG,qBAChG,CAAK,GAAC,EAID,aAAC,EAAW,QAAS,EAI1B,OAAI,GAAe,EACnB,qBAAe,UAAW,aAAc,EAExC,KACA,oBAAc,SAAU,cAAe,EACvC,IAED,oDAtLgB,gCACf,OAAgC,kBAC/B,IAAM,GAAY,EAElB,cAAK,EAIA,aAAC,EAAW,QAAS,EAI1B,gBAAc,cAAc,qBAXsB,gBAalD,WAAqB,EAAU,6DAAc,SAC5C,MAAM,EAAY,EAAc,OAAO,YACvC,KAAc,cAAc,SAAU,EAAW,EACjD,WAhBiD,8EAiBlD,EACD,CAED,IAwBgB,oCACf,OAAgC,kBAC/B,IAAM,GAAY,EAElB,UAAK,GAAC,EAID,aAAC,EAAW,QAAS,EAI1B,iBAAM,GAAgB,EACtB,mBAAM,EAAe,EAAc,OAAO,eAC1C,GAAM,EAAiB,UAAW,gBAElC,KAAc,cACd,oBAAc,cAAc,SAAU,cAAe,EACrD,IACD,CAED,IAqDgB,0BAA2B,WAC1C,OAAgC,kBAC/B,IAAM,GAAc,uBACnB,EAAsB,UACtB,EAAgB,EAAK,MAAO,EAAM,EAAK,UAAW,EAEnD,GAAK,GAIL,MAAM,GAAiB,sBAAwB,EAE/C,MAAgC,EAAK,UAAW,EAAc,cAAe,EAAa,EAC1F,GACD,CAED,IAcgB,uBAAwB,WACvC,OAAgC,kBAC/B,IAAM,GAAc,uBACnB,EAAsB,UACtB,EAAgB,EAAM,EAEvB,GAAK,GAIL,MAAM,GAAiB,mBAAqB,EAE5C,OAAgC,EAAK,UAAW,EAAc,cAAe,EAAa,EAC1F,GACD,CAED,IAyCgB,0BACf,OAAgC,kBAAmB,oBAClD,WAAqB,EAAc,cAAc,0DAAc,SAE9D,MAAK,EAEJ,aAAK,EAAM,IAAI,OACd,oBAAW,gBAAiB,EAG9B,eATiD,oEAUlD,GAAc,cACd,iBACD,CAED,IAIgB,6BACf,OAAgC,kBAAzB,OAA4C,GAAc,cAAuB,WACxF,C,EAxPD,gBACA,eACA,gMCUA,mSARA,iBACA,cACA,cACA,eACA,cACA,cACA,kBA6FqB,YAOpB,CAAa,aAAoC,wEAOhD,QAAK,eAOL,OAAK,cAAgB,cAAQ,CAAE,WAAY,MAC3C,EAED,wCAgBqB,aAGpB,CAAc,QAAT,MAAqB,EAAK,OAI/B,YAJwC,IAAK,MAAM,KAAK,UAI3C,QAAR,KAIL,YAJyB,IAAK,eAAe,KAAK,UAIrC,QAAR,KAKL,YALyB,IAAK,QAAQ,KAAK,WAK9B,QAAR,KACJ,UADwB,SACnB,iBAAkB,EACjB,OACN,MADW,SACN,YAAa,EAAK,eAAgB,EACjC,OACN,QADW,SACN,cAAe,EAAK,eAAgB,EACnC,OAAa,cAAR,KAAkC,iBAAR,KACrC,iBADkE,SAC7D,iBAAkB,EAAM,EAAK,MAAO,EAAK,IAAK,EAAK,SAAU,EAC5D,UACN,QADW,UACN,cAAe,EAAK,QAAS,EAEnC,SAED,iCAakB,WAEjB,IAAM,GAAa,KAAK,wBAExB,GAJyB,eAKzB,WAAqB,mDAAQ,SAC5B,MAAM,EAAO,EACb,KAAM,EAAY,UAAM,2BAA4B,EAAM,iBAAkB,EAC5E,QAAM,EACL,MACA,QAGD,QAAK,aAAc,SAAU,EAI7B,MAZ4B,0BAa5B,YAAmB,EAAK,sEAAqB,YAC5C,QAAK,aACL,KAAK,kBACL,OAAK,kBAAoB,EAAK,aAE9B,SAAK,6BAA+B,GAAQ,EAC5C,YAnB2B,4EAoB5B,CAzBwB,uGA2BzB,YAAsB,KAAK,eAAe,8DAAU,WACnD,MAAM,GAAc,GAGpB,WAAK,GAAY,iBAAkB,EAClC,aAAK,cAAe,YAAa,GAAO,KAAM,GAAY,gBAI3D,KAAK,EAAM,cAAe,KAAiB,EAAM,QAChD,WAAK,cAAe,YAAa,GAAO,KAEzC,GAvCwB,uFAwCzB,CAED,4BAU6B,aAE5B,IAAK,EAAM,MAAM,SAAU,GAC1B,MAAK,iBAEL,MAAM,GACL,EAAe,2BAA4B,EAAM,MAAO,EAAM,IAAI,OAAS,EAAM,MAElF,aAAK,cAAe,EACpB,EACA,WAAK,cAAe,EACpB,QAAK,iBAEN,EAED,8BAU+B,aAC9B,IAAM,GAAa,KAAK,0BAA2B,EAAO,UADpB,eAGtC,WAAoB,EAAM,SAAU,CAAW,8DAAW,SACnD,WAKD,aAAwB,SAJ5B,gBACA,OAGD,GACA,EAVqC,8EAWtC,CAED,iCAc8C,mBAE7C,IAAM,GAAa,KAAK,0BAA2B,EAAO,EAAO,IAEjE,GAJwD,eAKxD,WAAqB,mDAAQ,UAC5B,MAAM,GAAO,GACb,KAAM,GAAY,UAAM,2BAA4B,GAAM,iBAAkB,GACtE,aAQD,aAAkB,MAAkB,EAPxC,MACA,SACA,gBACA,oBACA,oBAGD,GACA,EAjBuD,gFAkBxD,CAED,8BAUwB,aAEvB,IAAM,GAAc,EACpB,YAAY,KAGZ,OAAK,cAAc,OAAO,aACzB,EACA,KAAK,cAAc,OAAO,cAI3B,OAAM,GAAuB,MAC7B,UAAqB,eAErB,QAAK,cAAe,UAAS,aAAc,GAAW,UAAM,SAC5D,SAAK,iBAAkB,UAAM,SAC7B,GAED,iCASkB,WACjB,IAAM,GAAU,MAAM,KAAM,KAAK,eAAe,QAAQ,qBAAsB,EAC9E,qBAAM,EAAa,KAAK,2BAA4B,EAEpD,QAAK,KAAM,YAAa,CAAE,UAAF,GAAe,EAAY,KAAK,kBAJ3B,gBAM7B,WAAsB,mDAAU,SAC/B,MAAM,EACL,WACA,OAAM,EAGP,MAAK,EAAW,KAAM,EAAW,mBAAqB,EACrD,YAAK,KAAM,mBAAqB,EAAO,KAAM,EAAM,EAAY,KAEhE,cAf4B,sGAiB7B,YAAmB,EAAU,uEAAqB,WACjD,MAAM,EACL,WACA,MACA,SAAO,EAAU,aAIlB,KAAK,EAAW,KAAM,EAAW,sBAAwB,EACxD,WAAK,KAAM,sBAAwB,EAAK,IAAK,EAAM,EAAY,KAEhE,cA5B4B,sFA6B7B,CAED,8BAY2B,eAE1B,IAAM,EAAM,KAAK,QAAZ,EAIL,YAJ6B,IAAM,KAAK,aAIlC,GAAa,KAAK,wBAAyB,EAC3C,QAED,KAAM,EAAO,IAAY,EAFjB,CAAE,KAAF,EAAQ,MAErB,GAAoC,EAAY,KAChD,eAED,wCAQyB,WACxB,IAAM,GAAa,MAAnB,QADgC,eAGhC,WAAqB,mDAAQ,SAC5B,MAAM,EAAO,EAEb,OAAW,IAAK,EAAM,aAHM,wBAK5B,YAAmB,EAAK,qEAAqB,WAC5C,QAAW,IAAK,EAAM,gBACtB,aAP2B,yEAQ5B,CAX+B,gFAahC,OACA,EAED,0CASkC,aACjC,IAAM,GAAa,MAAnB,QADwC,eAGxC,WAAoB,EAAM,yDAAa,SACtC,QAAW,IAAK,EAChB,WALuC,oEAOxC,OACA,EAED,2CAQuC,aACtC,IAAM,GAAa,MAEnB,UAAW,IAAK,EAAW,gBAHqB,gBAKhD,WAAsB,gDAAU,SAC/B,QAAW,IAAK,EAAW,mBAAqB,EAChD,eAP+C,0FAShD,YAAmB,EAAU,qEAAqB,WACjD,QAAW,IAAK,EAAW,sBAC3B,aAX+C,yEAahD,OACA,EAED,wCAQ+B,aAC9B,IAAM,GAAa,MAEnB,iBAAW,IAAK,EAEhB,GACA,CAED,6BAa0B,eACzB,CAAK,GAAC,EAAW,KAAM,EAAK,KAK5B,OAAM,GAAO,EAAK,KAAK,MAEvB,aAAK,KAAM,EAAO,IAAM,EAAM,EAAM,EAAY,KAChD,eA+ID,oBAniBoB,EAojBrB,cAAK,I,uLCjpBL,mSAJA,iBACA,gBACA,WAQqB,YAIpB,aAAc,QAOb,QAAK,WAAa,GAQlB,gBAAK,cAAgB,cAAkB,CAAE,cAQzC,mBAAK,YAAc,MACnB,OAED,iCAOQ,WAEP,IAAM,GAAc,KAAK,cAAc,UAAW,EAGlD,gBAAO,MAAK,YAAY,QACxB,EAED,uBAMQ,WAEP,IAAM,GAAc,KAAK,OAGzB,SAAO,MAAK,cAAc,UAC1B,EAED,uBAQQ,WACP,QAAM,GAAW,KAAK,WAAW,gBAAiB,EAClD,aAAM,EAAW,EACjB,yBAAM,EAAQ,EAAS,KAEvB,WACC,CADO,GAAM,UACJ,YAAa,EAGvB,UACA,sBA7EmB,kpBCJrB,CAoJuC,mBACtC,CAAK,eACJ,UAAa,EAAO,EAAM,SAAU,EAAK,EAEzC,KAAY,EAAO,EAAM,SAAU,EAAK,EAEzC,GAE4C,qBAC5C,IAAM,GAAgB,EAAK,aAC3B,GAAI,EAEJ,GAAM,GAAQ,EAAK,GAAI,eAAkB,GAAI,GAAuB,GAEpE,GAAK,GACJ,MAAM,SAEN,IAAK,EAAK,GAET,kBAAY,cAA4B,EAAM,EAAK,EAAe,EAAO,EAEzE,YAAK,EAAK,GAIT,WAAQ,cAAW,UAAS,aAAc,GAAQ,UAAS,0BAA2B,EAItF,IAAQ,cAAW,UAAS,aAAc,GAAQ,UAAS,YAG5D,OAAY,cAAwB,EAAO,EAAK,EAAe,EAAO,EAGvE,aAAM,aACN,MAAI,eAEL,IAGD,CACgE,qBAC/D,CAqCS,YAER,CACC,CADI,KAAM,WAAW,UACf,SAGP,MAAM,IAAQ,cAAW,GACzB,IAAM,GAAY,cAAwB,GAAO,EAAc,GAAsB,EAAgB,EAErG,WAAM,aACN,MAAI,eACJ,GACD,IAjDM,GAAQ,GAGd,GAAI,GAAoB,EAIxB,MAEC,GAEA,GAJD,GARuE,kBAcvE,YAAqB,qDAAQ,YAC5B,SAAsB,GAAM,KAAK,aAIjC,GAAK,IAAY,IAEhB,KAAK,IACJ,GAGD,OAGD,OAAW,GACX,gBAID,YAjCuE,4EAkCvE,CAAK,yBAAgC,IAAY,IAAqB,IACrE,GAGD,gkBA5OD,cACA,eACA,OACA,gBACA,gBACA,cACA,iBAQqB,0IAkEpB,yBAIC,IAAM,mFAEN,mBAAO,GAEP,OACA,CAED,QA5EA,qBAIC,OACA,WAED,4BAOC,OAAO,MAAK,WAAY,GAAM,KAAK,WAAY,GAAI,IACnD,IAED,8BAOC,OAAO,MAAK,WAAY,GAAM,KAAK,WAAY,GAAI,SACnD,IAED,8BAQC,IAAK,KACJ,aAAO,MAGR,UAAI,GACJ,KAAI,EAAM,KAPC,gBASX,YAAyB,KAAK,6DAAa,WAC1C,OAAe,IAAV,KAAkB,EAAM,QAAS,GAAU,MAC/C,YAAQ,GAAU,MAGnB,QAAa,IAAR,KAAgB,EAAI,SAAU,GAAU,MAC5C,UAAM,GAAU,MAEjB,cAjBU,yEAmBX,OAAK,IACJ,QAAK,OAAS,cAAW,EAEzB,GAAO,KAGR,QACA,+CAGA,OACA,sCAiBA,OACA,mCAED,kCAIC,OACA,aAGF,mBA5FqB,KAoGR,qKACZ,0BAIC,OACA,iDAGF,SAWA,eAAU,eAA4C,eACrD,UAAW,KAAM,EAAK,EAEtB,GACA,IAED,GAUA,eAAU,kBAA0C,aACnD,UAAW,KAAM,EAAK,KAEtB,GACA,IAJD,GAoGA,UAAa,SAAU,GACvB,UAAa,SAAU,mpBCnPvB,CA2B8B,iBAC7B,GAAM,aACN,KAAM,SAAS,eACf,EAED,mSAxCA,gBACA,eACA,OACA,iBACA,cACA,cACA,iBAMqB,0IACpB,qBAIC,OACA,QAED,2CAIC,OACA,EAED,oCAIC,OACA,6DApBmB,EAoCrB,eAAU,SAA6B,aACtC,IAAK,EAAG,eAMP,cAAM,eAGP,yGAAM,GAAQ,GACd,QAAK,SAEL,MAAM,GAAkB,cAAqB,UAAS,aAAc,GAAW,EAAQ,KAAM,EAAS,KAAK,SAC3G,kBAAO,KAAM,EAEb,GACA,IAjBD,GAmBA,UAAa,SAAU,mpBC7DvB,mSANA,iBACA,OACA,gBACA,eACA,WAOqB,+IACpB,0BAIC,OACA,8CAGF,mBATqB,EA6BrB,eAAU,aAAkC,aAC3C,IAAM,GAAQ,GACd,QAAK,SAEL,KAAQ,qBAAgB,MAJ2B,gBAMnD,WAAoB,gDAAQ,SAC3B,QAAK,gBAAiB,KAAK,SAAS,UACpC,yBARkD,oEAUnD,IAAM,GAAY,cAAqB,EAAU,EAAO,KAAK,SAC7D,kBAAM,aACN,QAAK,SAAS,eAEd,GACA,IAfD,GAiBA,UAAa,SAAU,mpBCnDvB,CAwHS,YAAmB,OAE3B,KAAM,EAAiB,GAEvB,iDAAK,SACJ,KAAK,KAAK,SACV,SACe,eACd,CAAK,EAAe,IACnB,MAAU,OAAY,EAAM,EAAQ,MAAO,EAE5C,eAPF,EAQC,CAAE,SAEH,QAED,CAUiC,iBAEhC,IAAM,GAAU,EAAM,IAAI,OAAS,EAAM,MACzC,OAEA,SACC,OACC,YAAM,GACN,cADqB,OAAK,aACZ,KAAK,2BAA4B,EAAM,MAAO,EAC5D,GAED,UACA,WACA,aACC,cAAM,GAAgB,UAAM,2BAA4B,EAExD,GAAM,EAAW,EAAc,iBAAkB,OAC9C,EAAc,MAAM,QAAS,OAA6B,cAAnB,OAAK,YAC5C,EAAc,IAAI,QAAS,OAG9B,kBAHwC,OAAK,cAI5C,IAAc,KAAK,aAAc,EAAU,EAC3C,WACA,IAAM,GACN,cADqB,OAAK,aACZ,KAAK,sBAAuB,EAAU,EAAM,MAAO,EACjE,EAIH,KAAK,CAAC,KAAK,QAAS,GACnB,IAAM,GAAc,UAAS,mBAE7B,WAAK,KAAO,EACZ,UAAK,KAAO,EAEZ,UAAK,KAAM,SACX,EAED,oSA/LD,eACA,cACA,cACA,cACA,iBAiBqB,cAUK,iBAAa,0EAC9B,EAEP,OAAK,CAAC,EAAK,KAAK,GAMf,oBAAM,eAuBP,6GAAK,WAAa,GAElB,iBAAiB,KAlCoB,GAmCrC,CAED,YArCA,sCA2CC,MACA,eAmCD,UAQD,mBAjGqB,EA4KrB,cAAK,IAEL,yLCnLA,CAqhC2C,mBAC1C,IAAI,IAAU,cAEd,SACC,SAAU,GAAQ,MAAO,GAAQ,QAAS,IAG3C,IAAO,GAAQ,KAAM,mBAAU,IAAO,SAAW,GAAM,SAAU,GAAO,QAAQ,cAChF,EAMD,CACuC,gBACtC,MAAQ,GAAQ,GAAQ,UACvB,aACA,KAAO,EAER,U,ywBAvjCD,gBACA,eACA,eACA,eACA,eACA,gBACA,eACA,OAEA,gBACA,gBACA,gBACA,mBAYqB,YAOpB,aAA4B,yEAkB3B,QAAK,YAAc,GAAQ,eAO3B,eAOA,yBAQA,6DAAK,kBAAoB,GAQzB,cAAK,kBAAoB,GAQzB,cAAK,sBAAwB,GAC7B,QAED,4CAQ+B,eAC9B,MAAK,sBAAsB,IAAK,GAAY,UAAc,oBAC1D,IAED,oCAOqB,YACpB,OAAO,MAAK,sBAAsB,IAClC,GAED,6BAQ0B,eACzB,MAAK,kBAAkB,IAAK,GAC5B,SAAK,kBAAkB,IAAK,GAC5B,GAED,iCAMkB,YACjB,IAAM,IAAc,KAAK,kBAAkB,IAE3C,OAAK,GACJ,MAAK,kBAAkB,OACvB,SAAK,kBAAkB,OAEvB,OAJkB,mBAKlB,YAAqB,MAAM,KAAM,GAAW,+DAAe,YAC1D,WAAK,iBACL,aAPiB,4EAQlB,CACD,CAED,sCAQoC,eACnC,MAAK,kBAAkB,IAAK,GAC5B,SAAK,kBAAkB,IAAK,GAC5B,GAED,0BAYqB,eAA4B,4DAChD,SAAK,GAAS,GAAI,QACjB,IAAM,IAAW,KAAK,yBAEtB,UAAO,IAAY,eACnB,GACA,IAAK,KAAK,oBACT,UAAO,MAAK,oBAGb,OAEA,OAAK,GAAS,GAEb,uBAAa,GAEb,yBAAK,GACJ,WAAK,sBAAuB,GAE7B,QAEA,IAAa,GAAY,cAAe,GAExC,MAAK,GACJ,WAAK,aAAc,GAGpB,OARM,mBASN,YAAmB,GAAS,sEAAqB,YAChD,SAAW,aAAc,GAAK,GAAS,aACvC,cAXK,4EAYN,CAED,IAAK,GAAQ,cAAgB,YAAyB,aAAY,uBACjE,YAAqB,KAAK,kBAAmB,GAAU,GAAa,uDAAY,YAC/E,SAAW,YACX,aAHgE,4EAIjE,CAED,OAED,GAED,0DASkC,sBAAa,wDAAU,6GAClD,G,GAAuB,GAAY,iBAAmB,GACxD,kB,GAAS,qCAEY,GAAY,mFAAzB,I,YACN,KAAyB,uCACvB,KAAK,YAAa,8BAGnB,KAAK,UAAW,GAAW,GAAa,QAE9C,2SAGI,KAAyB,uCACvB,KAAK,YAAa,6EAI1B,gCAOgB,YACf,IAAM,IAAW,KAAK,kBAAmB,GACzC,OAAM,GAAS,KAAK,kBAAmB,GAEvC,KAAM,GAAW,SACjB,wBAAS,SAAU,GAAS,OAAQ,GACpC,WAAS,OAAQ,GAAO,OAAQ,GAEhC,QACA,EAED,kCAWmB,YAClB,IAAM,IAAa,GAEnB,UAAK,GAAW,GAAI,QACnB,IAAM,IAAY,KAAK,wBAEvB,OAAK,CAEJ,SAGD,SAAI,IAAS,GAEb,aAAK,uBACJ,YAGD,sBAAO,CAAE,OAAQ,GAAW,OAC5B,GAEA,IAAI,IAAW,GAEf,MAA6B,CAAxB,MAAa,OACjB,OAAY,KAAK,oBAAqB,GAEtC,QAAK,CAEJ,SAGD,SAAW,GAAU,WACrB,EATD,KAUC,OAAY,KAAK,oBAAqB,GAEtC,YAAK,CAEJ,SAGD,SAAY,GACZ,cAAW,GACX,WAID,IAAK,KAAK,OAAQ,KAAc,uBAC/B,UAAO,CAAE,OAAQ,GAAU,SAG5B,yBAAM,IAAS,GAAY,cAAS,IAAc,EAElD,QAAO,CAAE,OAAQ,GAAW,OAE7B,GAED,0BAaW,YAAwB,4DAClC,SAAK,oBAAe,GAAS,KAC5B,mBAGD,SAAK,KAAK,OAAQ,IACjB,IAAK,qBACJ,UAEA,SAAM,IAAW,KAAK,wBAEtB,UAAoB,EAAb,MAAkB,KAAO,cAEjC,GARD,CAQO,GAAK,KAAK,UAChB,UAEA,SAAK,KAAK,qBACT,UAAO,MAAK,qBAGb,OAEA,OAAK,KAAK,mBAET,OAAc,MAEd,QAAK,GACJ,WAAK,sBAAuB,GAE7B,QAEA,IAAM,IAAW,GAAQ,iBAAmB,GAAQ,QAAU,GAAQ,QACtE,iBAAc,cAEd,IAAK,GACJ,WAAK,aAAc,GAIpB,QAEM,GAFA,IAAQ,GAEd,WAAU,GAAI,GAAM,OAAS,EAAQ,CAAL,KAC/B,QAAY,aAAc,GAAO,IAAI,KAAM,GAAO,IAEnD,MAED,IAAK,GAAQ,cAAgB,YAAyB,aAAY,uBACjE,YAAqB,KAAK,kBAAmB,GAAS,uDAAY,YACjE,SAAY,eACZ,aAHgE,4EAIjE,CAED,OAED,GAED,0DAQqB,mBAAY,wDAAU,8FAChC,G,GAAI,cAAG,GAAI,GAAW,WAAW,yBACpC,I,GAAW,GAAW,WACtB,I,GAAY,KAAK,UAAW,GAAU,IAEzB,IAAd,wCACE,OAL2C,G,mEAUpD,oCAOoB,YAGnB,IAAiC,CAA5B,MAAa,WACjB,IAAI,IAAY,GAAa,WAAY,GAGzC,eAAK,KAAK,OACT,SAAY,GAGb,eAAM,IAAgB,KAAK,oBAE3B,OACC,SAED,GAED,KAGM,GAHA,IAAgB,MACtB,QAAM,GAAa,KAAK,uBAExB,IAAU,GAAI,EAAG,GAAI,GAAa,WAAY,KAE7C,IAAM,IAAW,GAAa,WAC9B,IAAM,GAAY,KAAK,eAEvB,IACC,OAAc,SAAU,GAEzB,GAED,OACA,GAED,+BAOgB,YACf,IAAM,IAAY,KAAK,kBAAmB,GAAS,eAAgB,GACnE,aAAM,GAAU,KAAK,kBAAmB,GAAS,aAAc,GAE/D,iBAAK,KACJ,GAAO,cAAe,GAGvB,IACA,IAED,kCAY8B,eAC7B,IAAK,oBAAe,GAAW,KAC9B,mBAAO,MAAK,kBAAmB,GAAU,WAAY,cAGtD,QAAK,KAAK,OAAQ,IACjB,IAAK,qBACJ,UAAO,MAAK,kBAAmB,GAAU,WAAY,cAGtD,QAAM,IAAa,KAAK,yBACxB,IAAI,GAEC,SACJ,KAGI,uBACJ,YACA,wBAAkB,CAAT,IAAa,EAGvB,IAAO,cAAkB,GACzB,KANA,IASA,IAAmB,CAAd,MACJ,IAAM,IAAa,KAAK,qBAExB,OACC,SAAO,eAAkB,GAE1B,EAND,KAOC,IAAM,IAAa,KAAK,qBAAsB,GAAU,WAAY,GAGpE,OAAK,IAAc,GAClB,aAAO,eAAkB,GAAW,OAAQ,GAAW,MAExD,EAED,OAED,KAED,qCAasB,YACrB,OAAK,MAAK,UACT,IAAO,KAAK,4BACN,IAAK,KAAK,mBAChB,IAAO,KAAK,qCACN,IAAK,KAAK,OAChB,IAAO,KAAK,yBAGb,IACA,IAED,4CAO6B,YAC5B,OAAO,MAAK,kBAAkB,IAC9B,GAED,qDAQsC,YACrC,OAAO,MAAK,kBAAkB,IAC9B,GAED,yCAkB0B,YACzB,IAAK,qBACJ,UAGD,SAAM,IAAkB,GAGxB,mBAAK,GACJ,IAAK,CAAG,KAAK,UAEZ,UAGD,SAAM,IAAc,KAAK,4BAEzB,OAAK,GACJ,IAAM,IAAc,GAGpB,kBAAK,iBACJ,QAAO,GAEP,YAED,IACD,CACD,KAEC,IAAM,IAAc,KAAK,4BAA6B,GAEtD,eAAK,GACJ,IAAM,IAAa,GAAY,SAG/B,SAAK,iBACJ,QAEA,GAED,IACD,CAED,OACA,KAED,oCAUqB,YACpB,OAAK,iBACJ,QAAO,KAAK,2BACN,IAAK,gBACX,QAAO,KAAK,oCACN,IAAK,gBACX,QAAO,KAAK,wBAGb,IACA,IAED,2CAO4B,YAC3B,OAAO,MAAK,kBAAkB,IAC9B,GAED,oDAQqC,YACpC,OAAO,MAAK,kBAAkB,IAC9B,GAED,wCAeyB,YACxB,IAAM,IAAkB,GAGxB,sBAAK,KAAmB,KAAK,oBAC5B,IAAO,KAAK,oBAAqB,IAIlC,YAAK,CAAC,IAAmB,GAAS,QAAU,KAAK,oBAAqB,GACrE,QAAO,KAAK,oBAAqB,GAAS,QAAS,WAGpD,GACA,IAED,sBAKO,YACN,IAAM,IAAc,KAAK,2BAEzB,OAAK,IAAe,GAAY,cAAc,gBAAkB,GAC/D,QAC6B,UAAO,OAA5B,cAAS,MACjB,QAIA,QAAwB,GAAa,YAAQ,IACpC,IAA0B,GAA1B,WAAY,GAAc,GAElC,aAAgB,KAAM,CAAE,GACxB,IAED,MAMA,UAAwB,GAAa,YAAQ,QACV,GAAgB,gBADN,GACpC,MADoC,GACxB,MAEpB,MAAK,WACL,MAAK,UACL,EAID,aAAO,OAAO,SAAU,GACxB,GACD,CAED,uBAMQ,YACP,OAAO,KAAQ,GAAK,UAAY,KAChC,SAED,0BAMW,YACV,OAAO,KAAQ,GAAK,UAAY,KAChC,YAED,mCAMoB,YACnB,OAAO,KAAQ,GAAK,UAAY,KAChC,sBAED,0BAMW,YACV,OAAO,KAAQ,GAAK,UAAY,KAChC,YAED,uCAMwB,YACvB,IAAK,GACJ,YAKD,YAAM,IAAQ,SAEd,iBAAM,SAAU,GAAU,WAAY,GACtC,iBAAM,OAAQ,GAAU,UAAW,GAEnC,gBAAM,IAAW,GAEjB,oBAEA,SACA,EAED,yCAa0B,YAAO,QAChC,KAAM,GAAO,GAIb,QAAK,GAAK,eAAe,KAAM,mBAAU,IAAK,YAAY,SAAU,GAAO,KAC1E,SAGD,OAAM,IAAW,KAAK,yBACtB,OAAM,GAAW,KAAK,yBAItB,OAAI,GAAU,GAAK,MAAO,OAE1B,GAAI,GAAY,GAAK,OAAQ,EAAG,GAAK,OAAS,GAM9C,WAAM,EAAD,EACJ,GADiB,KAAS,KAAK,OAAQ,GAAS,KAAK,OAAS,QAClD,GAAU,QAAS,KAUhC,YAAY,GAAU,QAAS,QAG/B,SAAsB,CAAjB,IAAQ,OAiBZ,IAEK,OAEJ,IAGwC,GAA7B,KAAS,KAAK,OAAQ,IAEjC,MAF+C,KAAS,KAAK,OAAQ,KAGpE,CADI,KAAQ,OAAS,IAKvB,OAVM,GAAQ,OACZ,IAEK,OAQN,QAAU,OAAW,GAAQ,OAAQ,EAAG,GAAQ,OAGjD,OAAU,GAAQ,QAAS,QAC3B,QAED,OAAO,IACP,EAED,yCASgC,eAC/B,IAAK,CAAC,GACL,aAGD,SAAM,IAAa,cAClB,eAAe,GAAU,UAAa,YAAa,IAAS,UAAa,aACzE,cAAW,GAAU,UAAY,aAPO,kBAUzC,YAAqB,4DAAa,UACjC,MAAK,GAAM,KAAK,GAGf,0BACA,MAAM,GAAK,GAAM,KAAK,GAEtB,cAAO,IAER,IAnBwC,uFAqBzC,OACA,KAED,wCAayB,YACxB,IAAI,IAAO,2BAEX,OAAK,EAAqB,GAAM,KAC/B,mBAMD,OAAO,GAAK,QAAS,mBAErB,QAAM,IAAW,KAAK,wBACtB,OAAM,GAAW,KAAK,wBAItB,cAAK,CAAC,IAAY,cAAc,KAAM,GAAS,KAAK,OAAQ,GAAS,KAAK,OACzE,UAAO,GAAK,QAAS,KAIjB,KACJ,QAAO,GAAK,QAAS,KAQtB,QAAO,GAAK,QAAS,WAIrB,OAAK,CAAC,IAAY,cAAc,KAAM,GAAS,KAAK,OAAQ,GAAS,KAAK,OACzE,UAAO,GAAK,QAAS,UAMtB,MAAM,EAAD,EACJ,MADiB,KAAS,KAAK,OAAQ,QAChC,GAAK,QAAS,cAKtB,QACA,EAED,wCAS+B,eAC9B,IAAK,CAAC,GACL,iBAGD,SAAM,IAAY,GAAU,WAC5B,eAAM,GAAW,GACjB,cAAM,GAAa,GAAS,iBAAkB,GAAS,WAAY,GAAK,WAExE,cAAW,YAEX,MAAM,IAAe,GAErB,SAAsB,IAAjB,MACJ,IAAM,IAAM,cAAmB,GAK/B,OACC,IACA,CAAC,EAAqB,GAAM,KAAK,cAAe,KAChD,CAAC,EAAqB,GAAc,KAAK,cAGzC,UAED,GAED,OACA,WASF,cA1gCqB,kpBCtBrB,CAwDS,YACR,OACA,K,iiBA9DD,cACA,cACA,kBAKqB,cAUW,iBAAW,QAGzC,kEAFO,EAAM,EAQb,aAAK,gBAAkB,EACvB,CAED,YAZA,wBAeI,WAAoB,8DAClB,WACJ,GAEiB,cAAR,KAA0B,GAAQ,KAAK,uFAAoB,EAErE,GAJgB,cAAR,sFAEP,EAIF,+BAKuB,aACtB,IAAK,IAAW,wBAMf,CANwC,OAAM,KAAM,GAAQ,aAMtD,eAEP,2FAKF,mBApDqB,2HCPrB,CAsNqC,eAEpC,IACC,UADI,QAAO,SACJ,GAGR,MAEA,YAAK,GACJ,SAAM,KAAO,EAAW,EAAQ,KAAM,EAEtC,MAAK,CAAC,EACL,MAKF,KAAK,EACJ,cAAM,UAAY,EAAiB,EAAQ,UAE3C,GAAK,CAAC,EACL,WAKF,KAAK,EACJ,UAAM,MAAQ,EAAc,EAAQ,MAEpC,GAAK,CAAC,EAMP,UAAK,EACJ,UAAM,MAAQ,EAAa,EAAQ,MAEnC,GAAK,CAAC,EAKP,UACA,CAMD,CAC6B,eAE5B,OAAK,aACJ,QAAO,EAAQ,KAGhB,GAAO,IACP,CAOD,CACoC,eACnC,IAEA,UAAM,GAAM,KAAQ,GACnB,IAAM,GAAU,EAEhB,MAAK,EAAQ,aAAc,GAC1B,IAAM,GAAY,EAAQ,aAE1B,MAAK,YACJ,YAAK,EAAQ,KACZ,KAAM,KAEN,cAED,WAAM,IAAK,IACX,IAAM,KAEN,cAED,KACA,YAED,KAED,OACA,EAMD,CACiC,eAChC,IAAc,MAD4B,eAG1C,WAAuB,gDAAW,YACjC,MAAK,YAAmB,QACvB,IAAM,GAAU,EAAQ,gBADQ,sBAGhC,WAAoB,gDAAU,SAC7B,MAAK,EAAQ,KACZ,MAAM,KAEP,WAP+B,oEAShC,IACC,CADI,KAAM,aAGX,KAZD,KAYO,IAAK,EAAQ,SACnB,KAAM,KAEN,cAED,cArByC,oEAuB1C,OACA,EAOD,CACgC,eAC/B,IAEA,UAAM,GAAM,KAAQ,GACnB,IAAM,GAAU,EAEhB,MAAK,EAAQ,SAAU,GACtB,IAAM,GAAQ,EAAQ,SAEtB,MAAK,YACJ,YAAK,EAAQ,KACZ,KAAM,KAEN,cAED,WAAM,IAAK,IACX,IAAM,KAEN,cAED,KACA,YAED,KAED,OACA,E,uSA/WoB,YAOpB,aAA0B,QACzB,QAEA,kBAAK,eACL,UAED,wCA+EkB,+CAAV,IAAU,qCACjB,WAAkB,gDAAU,SAE3B,OAAoB,QAAf,QAAO,IAAoB,YAC/B,aAAO,CAAE,KAIV,IAAK,EAAK,QAAgC,QAArB,QAAO,GAAK,OAAqB,EAAK,gBAC1D,aAAK,MAAQ,CAAE,EAGhB,aAAK,UAAU,KACf,WAbgB,oEAcjB,CAED,gCA6BoB,+CAAV,IAAU,qCACnB,WAA6B,mDAAU,qCACtC,WAAuB,KAAK,2DAAY,SACvC,MAAM,EAAQ,EAAmB,EAEjC,MACC,QACC,SACA,UACA,QAGF,EAXqC,8EAYtC,CAbkB,8EAenB,OACA,KAED,mCAWC,QAAgB,yBADM,mBAAV,IAAU,qCAGtB,WAA6B,mDAAU,qCACtC,WAAuB,KAAK,2DAAY,SACvC,MAAM,EAAQ,EAAmB,EAEjC,GACC,KAAQ,KACP,SACA,UACA,QAGF,GAXqC,8EAYtC,CAfqB,8EAiBtB,OAAwB,EAAjB,GAAQ,OAAa,EAC5B,IAED,yCAOC,IACC,CADI,QAAK,UAAU,aAIpB,SAAM,GAAU,KAAK,UACrB,GAAM,EAAO,EAEb,WAA2B,UAAlB,QAAO,IAAyB,GAAQ,EAAG,YAAgB,SAAa,EACjF,UASF,cAjNqB,kpBCErB,iiBAJA,cACA,eACA,WAkBqB,cACP,aAAW,QAGvB,kEAMA,aAAK,QACJ,CACA,aACA,iBACA,yBAQD,cAAK,aAAe,EAOpB,eAAK,SAAW,EAQhB,WAQA,kBAAK,kBAAoB,GAAI,QAAO,iBAAkB,EAAK,aAAa,KAA/C,IACzB,CAED,YA/CA,qCAoDC,MAAK,aAAc,KAAK,kBACxB,cAED,wBAGS,WACR,MAAK,aAAa,KAElB,GAAK,KACJ,gBAAK,kBAAkB,QAAS,EAAY,KAE7C,QAED,iCAIC,iFADQ,yBAGR,WAA0B,KAAK,2DAAe,SAC7C,WAAK,kBAAkB,QAAS,EAAY,KAC5C,iBALO,oEAMR,CAED,kCAIC,kFAEA,WAAK,kBACL,YAED,kCAIC,kFAEA,WAAK,kBACL,YAED,6BAMc,WAEb,IAIA,CAJK,KAAa,WAIZ,GAAe,KAGrB,aAAM,EAAe,GACrB,KAAM,EAAkB,GAGxB,KAb4B,eAc5B,WAAwB,gDAAe,YACtC,MAAuB,WAAlB,KAAS,KACb,IAAM,GAAU,EAAa,4BAA6B,EAE1D,QAAK,GAAW,CAAC,KAAK,mBACrB,MAAgB,IAEjB,EAGF,WAxB4B,yFAyB5B,WAAwB,iDAAe,aACtC,MAAuB,eAAlB,MAAS,KACb,IAAM,IAAO,EAAa,yBAA0B,GAEpD,QAAK,IAAQ,CAAC,EAAgB,IAAK,GAGlC,UAAa,IAAK,GACjB,MACA,eAAS,GACT,aAAS,2BAAsB,GAC/B,aAMG,KAAK,CAAC,IAAQ,uBAAkB,GACpC,WAAgB,IAAK,EAAa,4BAA6B,GAAS,OAEzE,YAMF,WAnD4B,qEAoD5B,IAAsB,OApDM,kBAsD5B,YAA2B,EAAa,4DAAW,YAClD,WAAK,SAAS,WAAY,OAAQ,GAClC,SAAc,KACd,aAzD2B,mGA2D5B,YAA2B,wDAAkB,WAC5C,MAAM,GAAa,EAAa,2BAChC,IAAM,GAAe,GACrB,cAAM,GAAkB,EAAa,kBAErC,SAAK,SAAS,WAAY,WAC1B,OAAc,KACb,MACA,uBAAa,MAAM,KACnB,gBAAa,MAAM,KACnB,SAED,IAGD,WA1E4B,4EA2E5B,IAAM,IAAe,EAAc,GAAI,OAAO,cAE9C,eAAI,GAEJ,QAAK,IAAgB,GAAa,WAMjC,IAAM,IAAsB,EAAa,kBAAmB,GAAa,WAAY,GACrF,cAAM,GAAqB,EAAa,kBAAmB,GAAa,UAAW,GAGnF,aAAK,IACJ,QAAgB,MAChB,WAAc,SACd,OAAc,SAEf,IAED,MAAK,SAAS,KAAM,YAAa,GAIjC,SAAK,SACL,SAED,mCASoB,WACnB,IAAI,GAGJ,WAA8B,KAAzB,KAAS,aAAyD,CAAjC,KAAS,aAAa,QAC3D,CAD2E,IAAS,WAAW,WACnF,KAAK,aAAa,UAAW,EAAS,WAAY,GAC7D,CAIF,mBAAO,GAAa,EAAU,GAAI,UAClC,eAsCF,mBAvQqB,+lBCpBrB,iiBAFA,iEAEM,EAAiB,OAEvB,YAQqB,cAOP,aAAO,QAGnB,kEAMA,aAAK,SAAW,OAChB,CAED,YAZA,wBAeI,WAAoB,8DAClB,WACJ,GAEiB,aAAR,KAAyB,GAAQ,KAAK,uFAAoB,EAEpE,GAJgB,aAAR,sFAEP,mCAKD,OAAO,MAAK,kBACZ,E,MAEa,WACb,MAAK,kBAAmB,EACxB,+BApCmB,kpBCRrB,CAyDS,YACR,OACA,K,iiBA/DD,cACA,cACA,kBAMqB,cAUW,iBAAW,QAGzC,kEAFO,EAAM,EAQb,aAAK,gBAAkB,EACvB,CAED,YAZA,wBAeI,WAAoB,8DAClB,WACJ,GAEiB,WAAR,KAAuB,GAAQ,KAAK,uFAAoB,EAElE,GAJgB,WAAR,sFAEP,EAIF,+BAKuB,aACtB,IAAK,IAAW,wBAMf,CANwC,OAAM,KAAM,GAAQ,aAMtD,eAEP,qFAKF,mBApDqB,kpBCCrB,CAmEgB,YACf,OAAO,eAA0B,SAAU,CAAE,MAAO,SAAW,cAC/D,O,ySAFe,yBA5EhB,eACA,eACA,eACA,OACA,SACA,eACA,eACA,mBASqB,0IACpB,uBAIC,IAAM,GAAS,KACf,OAAM,EAAM,EACZ,SAAM,EAAS,EACf,OAAM,EAAO,EACb,KAAM,EAAU,EAChB,QAAM,EAAI,EAGV,IAAO,aACP,WAAO,kBACP,mBAAO,MAAO,CAAE,KAAM,QAA8B,yBAAS,OAC7D,YAAO,QAAQ,IAGf,yBAAsB,IAAK,EAAK,aAC9B,YAAa,SACb,UAAW,iBAAM,IAGnB,mBAAsB,IAAK,EAAQ,aACjC,YAAa,SACb,UAAW,iBAAM,oBAAe,IAA0B,EAAG,gBAE/D,uCAA+B,CAAE,EAAQ,YAAa,EAAK,aAC3D,2CAA+B,CAAE,EAAQ,YAAa,EAAK,aAG3D,uBAAqB,IAAK,EAAK,aAC7B,KAAM,CAAE,KAAM,MAAO,UAAW,CAAE,IAAK,OACvC,UAAW,kBAAa,eAAkB,QAAS,CAAE,IAAK,EAAU,aAAc,QAEpF,KAAK,YAAY,GAAI,sCAAsC,CAAE,SAC7D,UAAK,YAAY,GAAI,qCAAqC,CAAE,SAK5D,wBAAqB,IAAK,EAAK,aAC7B,KAAM,CAAE,KAAM,MAAO,UAAW,CAAE,IAAK,OACvC,UAAW,CAAe,oBAC1B,YAAa,kBAAe,CAAE,IAAK,MAAO,MAAO,EAAU,aAAc,OAG3E,KAAK,YAAY,GAAI,iBAAkB,KACvC,+BAUF,mBA3DqB,kpBCXrB,iiBALA,eACA,eACA,gBACA,WASqB,cAIP,aAAS,0EACd,EAEP,WAAK,OACL,KAAM,GAAc,EAAO,QAG3B,cAAK,SAAU,EAAO,GAAG,aAAc,mBAAqC,iBAC3E,CAAK,GAAO,CACX,KAED,QAGD,KAAO,SAAU,EAAa,SAAU,UACvC,IAAM,GAAkB,EAAY,UAEpC,qBAAyB,CAApB,EAAqB,oBACzB,MAED,QAND,EAMG,CAAE,SASL,UAAK,iBAAmB,cAAU,UACjC,GACA,SAFuB,EAErB,KACH,CAED,YAlCA,oCAuCC,aAAK,OAAO,GAAG,aAAa,IAAK,KAEjC,uFACA,KAED,iCAIC,MACA,eAAK,OAAO,GAAG,KAAK,SAAU,UAAO,OAAQ,SAAU,KACvD,uBAAK,OAAO,GAAG,KAAK,SAAU,UAAO,OAAQ,SAAU,KACvD,iBAED,iCAIC,MACA,YAAK,OAAO,GAAG,KAAK,cAAe,UAAO,OAAQ,SAAU,KAC5D,uBAAK,OAAO,GAAG,KAAK,cAAe,UAAO,OAAQ,SAAU,KAC5D,iBAED,kCAMC,IAAM,GAAc,KAAK,OAAO,QAChC,KAAM,EAAmB,UAEzB,sBAAK,SACJ,QAAQ,EAAY,aAAa,UAAW,EAAY,UACxD,gCAAW,CAAE,EAAiB,gBAAiB,EAEhD,+CA/EmB,kpBCNrB,mSANA,eACA,cACA,gBACA,OACA,oBASqB,cAWP,aAAS,QAGrB,kEAMA,aAAiB,aACjB,CAED,8BAtBA,2BAIC,OACA,oBAKD,2CAeY,OACX,KAAM,EAAS,KACf,OAAM,EAAgB,EAAO,OAAO,IAGpC,oBAAuB,CAAlB,EAAmB,EAIxB,WAAM,GAAQ,KAAK,OAAS,cAC5B,GACA,KAAM,EAAU,MAGhB,yBAAS,OAAQ,EAAQ,SACxB,YACC,OAKF,iCAAS,OAAQ,EAAM,SACtB,YACC,CAQF,kEAAS,KAAM,EAAM,QAAQ,IAG7B,MAAS,KAAM,EAAQ,eAAgB,EAAe,EAAO,GAG7D,qBAAS,KAAM,EAAO,GAAG,KAAK,KAAK,IAGnC,SAAK,SAAU,KAAK,OAAO,QAAQ,KAAM,SAAU,UAClD,CAAK,EACJ,aAED,MAJD,EAIG,CAAE,SAGL,aAAK,SAAU,EAAO,GAAG,aAAc,mBAAqC,iBAC3E,CAAK,CAAC,GAAO,GAAM,EAClB,aAED,MAED,GAAO,QAAQ,IACf,GAED,+BAIC,IAAM,GAAkB,KAAK,OAAO,QAAQ,KAAK,UAEjD,qBAAK,GAAmB,oBACvB,SAAK,OAEN,QAED,+BAIC,MAAK,OACL,qCAlGmB,kFCVrB,CAmBsC,iBAGrC,QAAI,GAAO,EAAS,WAAc,EAAW,EAAS,WAAa,EAEnE,WAAI,EAEJ,KAAQ,GAAQ,EAAK,aAAc,aAClC,KACA,IAAO,EAAW,EAAK,gBAAkB,EAG1C,kBAAO,GAAW,UAAS,SAAU,EAAU,EAAW,SAAW,SACrE,C,oDAxBuB,QAAyB,aAChD,OAAO,eAAW,EAAY,EAAiB,MAAQ,EAAY,EACnE,MAQD,EArBA,eACA,8mBCCA,kDAFA,oEASqB,qRCPrB,mSAFA,oEAoBqB,YAOpB,CAAa,aAAkB,+EAO9B,QAAK,SASL,OAAK,KAQL,OAAK,MAQL,OAEA,iBAAK,gBAAwC,iBAC5C,GAAK,SACL,EAED,OAAK,yBAA2B,UAC/B,GACA,QAED,IAAI,GAAI,SAAU,KAElB,mBAAI,UAAU,GAAI,eAAgB,KAElC,4BAAI,UAAU,GAAI,mBAAoB,KAsBtC,yBAED,kBAcA,cAMO,WACN,MAAK,MAEL,EAAK,KAAK,MAAQ,KACjB,YAED,UAED,+BAIC,MACA,WAED,iCAIC,MACA,WAED,kCAIC,MAAK,SAAS,IAAK,SAAU,KAC7B,sBAAK,SAAS,UAAU,IAAK,eAAgB,KAC7C,+BAAK,SAAS,UAAU,IAAK,mBAAoB,KACjD,yBAED,yBAWU,WAET,CAAmB,aAAd,IAAM,MAAyB,IAAU,KAAK,QAClD,CAD4D,gBAAO,EAAM,uBAG1E,UAED,uBAMQ,WACP,EAAK,CAAC,KAAK,UACV,UAAK,OACL,UAAK,KAEN,gCAzEK,OAAC,MACL,cAAK,OAAS,KAAK,SAGpB,SAAO,KACP,0BAzFmB,iFCNG,mBAAwE,gDAC/F,iBAAQ,SAAU,SAAU,UAAa,aAAqB,SAC7D,OAAK,KAAe,CAAC,EAAe,SACnC,IAED,GACD,E,iFCbuB,QAAgB,WACvC,OAAO,GAAK,aAAa,GAAI,WAC5B,CAAK,EAAI,SAAW,EACnB,WAED,gBACD,E,iFCLuB,mBAA0B,SACjD,OAAK,SAAU,EAAK,QAAS,SAAiB,aAC7C,GACA,mBAAK,KACL,SAHD,EAGG,CACH,e,kpBCVD,mSAHA,eACA,iBAOqB,cAIP,aAAS,QAGrB,kEAMA,MAAK,IAQL,WAAK,IAQL,QAAK,IAEL,kBAAM,GAAO,EAEb,sBAAK,SAAW,cACf,KACA,mBACC,MACA,OAIA,sCAAI,EAAK,GACT,kBAAa,EAAK,GAKpB,oBAAK,GAAI,eAAqC,eAC7C,GAAK,QAAQ,MAAQ,GACrB,EAFD,GAGA,CAED,YAhDA,sCAoDC,MAAK,QACL,QAED,gCAIC,MAAK,QACL,oCAhEmB,kpBCFrB,mSANA,eACA,cACA,eAEA,mBAOqB,cAOC,eAAY,0EAGhC,IAAM,cAAkB,KAQxB,oBAAK,IAQL,WAAK,IAOL,WAAK,UAAY,EAAK,iBAOtB,KAAK,UAAY,EAAK,iBAAkB,EAExC,KAAK,SAAW,cACf,KAEA,eAAU,CACT,EAAK,UACL,EAAK,aAGP,CAED,YA7CA,sCAoDkB,WACjB,IAAM,GAAY,cAAe,KAEjC,iBAAU,IACV,IAAU,KAAM,QAAS,GAAI,KAE7B,SACA,CAED,iCAQ6B,aAC5B,IAAM,GAAY,GAAI,GAAW,KAEjC,iBAAU,GACV,IAAU,KAAM,SAAU,GAE1B,MACA,CAED,iCAIC,MAAK,UACL,QAED,gCAIC,MAAK,UACL,oCAjGmB,kpBCFrB,mSATA,eACA,cACA,OACA,kBACA,gBACA,gBACA,gBACA,kBAEM,EAAO,cACb,MAAM,EAAwB,UAAO,SAErC,KAKqB,cAIP,aAAS,0EAGrB,IAAM,EAAO,EASb,sBAAK,IAAK,MASV,KAAK,IAAK,OAmBV,KAAK,IAAK,WASV,cAAK,IAUL,kBAAK,IAQL,kBAAK,IAgBL,eAAK,QAAU,EAEf,qBAAK,SAAW,cACf,KACA,iBACC,OAAO,CACN,mBACA,EAAK,GAAI,WAAY,sCAA8B,CAAnD,GACA,EAAK,GAAI,YAAa,4BACtB,EAAK,GAAI,YAAa,+BACtB,EAAK,GAGN,oBACC,KAAK,EAAK,GAAI,MACd,QAAM,EAAK,GAAI,OAIjB,cAAU,EAEV,WAEC,WAAW,cAFR,MAKL,CAED,YA/GA,oCAqHC,MACA,YAED,+BAMC,MACA,YAED,yBAWU,WACT,MAEA,UAAM,GAAmB,EACzB,iBAAM,EAAkB,OAAe,UACtC,SAAS,KACT,kBAAW,CACV,EAAiB,wBACjB,EAAiB,wBACjB,EAAiB,wBACjB,EAED,iCACA,EAAe,kBACb,KAEmC,yBAAoB,GAAlD,QAAK,UAAY,KAEzB,YAAO,OAAQ,KAAM,CAAE,IAAF,EAAO,KAAP,GAAa,SAClC,IAED,oBAcK,WAAU,OACd,UAEA,aAAK,0BAA4B,UAChC,CAAK,EACJ,YAAK,cAEL,KAED,cAED,OAAK,cAKL,QAAK,SAAU,KAAM,mBAAoB,KACzC,0BAED,gCAIC,CAAK,KAEJ,iCAIA,oBAAK,cAAe,KAAM,mBAAoB,KAE9C,gCAAK,0BAEL,UAED,OAED,8BAOe,WAAU,OACxB,UAAK,SAEL,MAAM,GAAU,EAAQ,SACxB,EAAI,EAGJ,KAAK,cAAW,EACf,UAAgB,EACV,OAAK,cAAS,EACpB,YAAgB,EAAQ,OAIzB,8BAAK,SAAU,UAAO,SAAU,SAAiB,cAChD,IAAM,IAAe,GAGrB,OAAM,GAAuB,GAAiB,GAAa,SAG3D,GAAM,GAA8B,GAAa,SAGjD,IAAK,IAAwB,IAA+B,CAC3D,MAAK,SAEN,EAbD,EAaG,CAGH,qBAAK,SAAU,UAAO,OAAQ,SAAU,UACvC,GAAK,SACL,EACD,EAED,uCAMC,MAAK,cAAe,UAAO,SAC3B,eAAK,cAAe,UAAO,OAC3B,mBAGF,mBA7QqB,EA6RrB,EAAiB,sBAEjB,GAiBA,EAAiB,oBAEjB,GAsGA,EAAiB,iBAChB,yBAAyB,kBACxB,KAAK,EAAW,OAAS,EACzB,yBAAM,EAAW,KAAO,EAAW,MAAQ,EAAI,EAC/C,2BAAM,WAGP,0BAAuC,aAAd,OACxB,KAAK,EAAW,OAAS,EACzB,yBAAM,EAAW,KAAO,EAAW,MAAQ,EAAI,EAAY,MAAQ,EACnE,2BAAM,WAGP,0BAAuC,aAAd,OACxB,KAAK,EAAW,IAAM,EAAY,OAAS,EAC3C,yBAAM,EAAW,KAAO,EAAW,MAAQ,EAAI,EAC/C,2BAAM,WAGP,0BAAuC,aAAd,OACxB,KAAK,EAAW,IAAM,EAAY,OAAS,EAC3C,yBAAM,EAAW,KAAO,EAAW,MAAQ,EAAI,EAAY,MAAQ,EACnE,2BAAM,WAGP,sBAAmC,aAAd,OACpB,KAAK,EAAW,OAAS,EACzB,yBAAM,EAAW,MAAQ,EAAY,MACrC,OAAM,UAGP,sBAAmC,aAAd,OACpB,KAAK,EAAW,IAAM,EAAY,OAAS,EAC3C,yBAAM,EAAW,MAAQ,EAAY,MACrC,OAAM,UAGP,sBAAmC,aAAd,OACpB,KAAK,EAAW,IAAM,EAAY,OAAS,EAC3C,yBAAM,EAAW,KAAO,EAAY,MACpC,OAAM,UAGP,sBAAmC,aAAd,OACpB,KAAK,EAAW,OAAS,EACzB,yBAAM,EAAW,KAAO,EAAY,MACpC,OAAM,UAGP,kBAA+B,aAAd,OAChB,KAAK,EAAW,OAAS,EACzB,yBAAM,EAAW,KAAO,EAAW,MAAQ,EAAI,EAAY,MAC3D,OAAM,UAGP,kBAA+B,aAAd,OAChB,KAAK,EAAW,IAAM,EAAY,OAAS,EAC3C,yBAAM,EAAW,KAAO,EAAW,MAAQ,EAAI,EAAY,MAC3D,OAAM,UA1D4B,mpBCjapC,iiBARA,aACA,cACA,eACA,gBACA,eACA,gBACA,mBAOqB,cAIP,aAAS,QAGrB,kEAMA,aAAK,MAAQ,EAQb,qBAAK,aAAe,MAQpB,UAAK,WAAa,MASlB,UAAK,aAAe,cACnB,YAAY,EACZ,mBAAc,EACd,8BAAkB,EAClB,mBAEC,CAGA,sCAIF,0CAAK,SAAW,cACf,KACA,iBACC,CAKD,+BAAU,EAEV,SAEC,WAAW,cAIb,QAAK,MAAM,GAAI,MAAc,aAC5B,GAAK,aAAa,IAAK,EACvB,QAED,KAAK,MAAM,GAAI,SAAiB,aAC/B,GAAK,aAAa,OAAQ,EAC1B,QAFD,GAGA,CAED,YAxEA,oCA6EC,aAAK,WAAW,SAAU,KAE1B,uFACA,KAED,gCAIC,MAAK,aACL,YAED,+BAQwB,aAAU,OAC5B,WACJ,GAGM,QAAQ,IAAK,EAAO,IAAK,WAC/B,IAAM,GAAoB,GAAR,IAAc,MAAd,QAA2C,EAAQ,OAErE,SAAO,GAAK,MAAM,IAClB,EACD,IARQ,QAGR,sCA1GmB,utBCXrB,CAwGyC,eAIxC,IAAM,GAAc,EAAyB,CAAE,GAK/C,KAAY,KAAW,aAAL,OAAY,GAAE,MAAM,SAAU,EAAE,OAAU,CAAC,EAAI,CAGjE,OAAM,GAAI,GAAI,EAAG,EAAI,EAAY,OAAQ,IACxC,IAAM,GAAI,EAAa,EACvB,GAAM,EAAI,EAEV,GAAK,EAAE,IAAI,WAAY,EACtB,WAAE,IAAM,EACR,MAAY,OAAQ,EACpB,GAED,IAED,OACA,EAED,CACiD,eAAS,oBACzD,WAAqB,mDAAS,qCAC7B,WAAyB,EAAM,8DAAa,KAG3C,UAAM,GAAI,GAAI,IAAG,EAAI,EAAO,OAAQ,IAE/B,cAEJ,GAAS,EACR,UACC,WAAS,EAAQ,GAAI,2BACpB,EAAU,SACV,EAAU,MAGX,cAED,UACA,WACA,aACC,aAAS,EAAQ,GAAI,sBACpB,EAAU,eACV,EAAU,eACV,EAQH,aACC,MAAO,gBAAQ,EAAG,YAGlB,OAAI,EAAI,EAAO,OAEhB,EACD,CAtC4B,8EAuC7B,CAxCwD,8EA0CzD,OACA,E,ySA3Ce,0BArIhB,mEAQqB,cACP,aAAS,QAGrB,kEASA,aAQA,YAAK,gBAAkB,GAGvB,WAAK,eACL,CAED,YA1BA,8BAgCU,WACT,IAAM,GACL,QAAQ,MAAM,KAAM,KAAK,OAAO,SAAS,UACzC,wBAAY,KAAK,OAAO,SAAS,UAGlC,iBAAK,OAAO,KAAM,CAAE,MAAF,EAAS,UAC3B,SACA,cAED,qCAIC,MACA,eACA,cAED,wCAIC,OACA,EADO,MAAK,OAAO,MAGpB,kCAOuC,eACtC,IAAM,GAAW,KAAK,OAGtB,SAEA,KAN+C,eAO/C,WAAqB,mDAAS,SAC7B,MAAM,EAAoB,EAAyB,EAMnD,GAAM,EAAmB,EAAkB,KAC1C,kBAAS,GAAM,MAAM,MAAQ,EAAS,SAIvC,GACC,KAAgB,KAEjB,EAED,UAxB+C,oEAyB/C,CAAK,EACJ,UAAS,UAAU,UAAW,EAE/B,YAIF,mBAjGqB,iFCAG,QAAO,WAC9B,IAAI,GAAQ,EAD6B,eAGzC,WAAiB,gDAAW,SAC3B,MACA,YALwC,oEAOzC,OACA,E,iFCFuB,QAAY,eAEnC,CA+BgB,aAGf,IAAM,GAAK,CAAE,EAAI,EAAY,YAA0B,CAAC,EAAf,EAAI,EAAI,IAEjD,EAAM,EAAK,EAAI,EAAY,YAA0B,CAErD,EAFuC,EAAI,EAAI,GAEzC,EAAM,EAAK,EAAK,CAAC,EAGvB,EAAK,EAAI,EACR,OAAI,GAAM,EAAI,EAAI,GAAM,MAIpB,IAAC,EACL,OAID,SAAI,GAAI,KAAM,EAAK,EAAK,EAGxB,UAAI,GAAS,SAAK,EAClB,GAAI,EAAI,EAGR,EAAQ,EAAI,GAAK,EAAI,GAAK,EAAK,EAAG,GAAK,EACtC,KACA,IAEA,MAAI,GAAI,KAGT,eACA,EAED,GApEM,GAAoB,aACzB,OAAO,KACP,CAGD,KAAI,GAGJ,KAAK,EAAE,OAAS,EAAE,OACjB,IAAM,GAEN,IACA,IAGA,IACA,WACA,QACA,QACA,WAGD,YAAM,GAAI,EACV,OAAM,EAAI,EACV,OAAM,EAAQ,EAGd,EAEA,KAEA,KAqCI,EACJ,EAAI,MAGJ,KAEC,KAAM,EAAI,CAAC,EAAG,EAAI,EACjB,MAAI,GAAM,EAIX,OAAM,EAAI,EAAQ,EAAG,EAAI,EACxB,MAAI,GAAM,EAKX,KAAI,GAAU,EAEd,GACA,GAhBD,OAgBU,EAAI,KAId,SAAO,GAAI,GAAQ,MACnB,E,iFClGuB,QAAc,WACrC,QAGA,MAAQ,GAAQ,EAAK,UAAY,KAChC,iBAAM,QACN,KAAO,EAGR,iBACA,E,iFCfuB,QAAS,WAChC,OACA,gBADO,SAAO,UAAU,SAAS,MAAO,E,iFCAjB,QAAQ,WAS/B,OAAO,mBAAS,GAAQ,CACxB,C,kFCtBD,kDAJA,gBACA,kBAGI,EAAM,wBAAgB,iBAEX,kFCFf,kDAJA,gBACA,kBAGI,EAAM,wBAAgB,iBAEX,iFCNf,8DAGA,KAAI,EAAa,UAAK,qBAEP,oECLf,aAqBe,QAXe,eAC5B,IAAI,GAAS,EACb,aACU,KAAR,EAAe,EAAK,KACpB,GAAQ,MAAO,EAAK,KAAK,EAAS,EAClC,IAAQ,MAAO,EAAK,KAAK,EAAS,EAAK,GAAI,EAC3C,IAAQ,MAAO,EAAK,KAAK,EAAS,EAAK,GAAI,EAAK,GAAI,EAEtD,IAAO,EAAK,MAAM,EACnB,sECnBD,aAyBe,QAboC,iBACjD,IAAI,GAAQ,CAAC,EACT,EAAS,EAEb,WAAI,GACF,MAAc,EAEhB,MAAS,IACP,KAAc,EAAS,EAAa,EAAM,GAAQ,EAEpD,SACD,yFCJD,CA0DmE,gCACjE,IACA,OACE,QAAS,GAAS,GAAW,GAAO,GAAK,GAAQ,IAAS,GAE5D,KACE,kBAEF,OAAI,CAAC,eACH,UAEF,OAAI,IAAQ,cACZ,QACE,GAKA,IAAI,IAAM,cAAO,IACb,GAAS,IAAO,IAAW,IAE/B,MAAI,cACF,UAAO,cAAY,GAErB,OAAI,IAAO,IAAa,IAAO,IAAY,IAAU,CAAC,GACpD,IAAI,eACF,UAAO,IAET,YAAS,cAAyB,MAClC,IAAI,CACF,SAAO,cAAY,GAAO,cAAW,GAExC,IARD,KASE,IAAI,CAAC,GACH,UAAO,IAET,SAAS,cAAe,GAAO,GAAK,EACrC,GACF,CAED,YA3BW,cACT,IAAI,CACF,SAAO,cAAU,GAEpB,SAuBS,GAAQ,MAClB,YAAI,IAAU,GAAM,IACpB,OACE,SAEF,UAAM,IAAI,GAEV,IAAI,CACF,MAAI,IAAQ,GAAS,cAAW,IAAS,eAG3C,wBAAU,IAAS,GAA0B,eAC3C,CACE,QACA,MAAW,GAEb,mBAAY,GAAQ,GAAK,EAAU,GAAU,GAAQ,GAAQ,GAAY,GAAK,GAC/E,IACD,GACD,oDAxID,iBACA,gBACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,eACA,gBACA,gBACA,iBACA,sBAGI,GACA,qBAIA,GAAU,oBACV,GACA,6BAEA,GACA,kBAmBgB,MACpB,GAAc,IAAyB,GA5BnC,kBA6BU,GAdV,wBAc0C,GAb1C,qBAcU,GA7BV,oBA6BmC,GA5BnC,iBA6BU,GAdV,yBAcsC,GAbtC,yBAcU,GAbV,sBAamC,GAZnC,uBAaU,GAZV,uBAYoC,GA3BpC,gBA4BU,GA5BE,mBA4BW,GAAc,IAC3B,GA1BV,mBA0BqC,GAzBrC,gBA0BU,GAzBV,mBAyBqC,GAxBrC,mBAyBU,GAfV,uBAeoC,GAdpC,8BAeU,GAdV,wBAckD,GAXtD,2BAYc,GArCC,kBAqCW,GAAc,IAGxC,GA5BI,iCAuGW,oEC1If,aAsBe,QAZ0B,eACvC,QAAI,GAAS,EAAM,OACf,EAAQ,EAAY,EAAS,CAEjC,EAAQ,EAAY,IAAY,IAC9B,MAAI,EAAU,EAAM,GAAQ,EAC1B,SAGJ,SAAO,CACR,gSCpBD,6DAGA,KAAI,EAAc,OAGlB,UAAI,EAAiB,EAErB,iBAgBe,QARU,aAIvB,OAAO,GAAe,KAAK,EAAQ,IACf,QAAjB,sBAAO,sBAAsB,IAAO,IACxC,IADkD,iBAAa,oFCbhE,kDARA,gBACA,eACA,eACA,eACA,gBACA,kBAGI,EAAa,MAGjB,UAAI,EAAS,EAEb,SAoCe,QA3BY,aACzB,QAAI,GAAS,EAAQ,EAAQ,OAAS,EAClC,EAAY,EAEhB,IACM,UAAQ,EACZ,GAAI,GAAU,GAAa,IAAU,EACnC,IAAI,GACJ,KAAI,cACF,KAAO,KAAK,EAAO,EACpB,OACI,IAAI,CAAC,cAAM,EAAO,GACrB,IAAI,GAAO,cAAS,GAChB,EAAS,cAAO,EAEpB,GACE,IADE,WACK,GAAO,cAAM,cAEvB,IAEC,YAAO,GAAM,cAEhB,GAEH,OACD,mFC/CD,8DAEA,OA2Be,QAlBgB,aAC7B,QAAI,GAAQ,CAAC,EACT,EAAS,EAAM,OACf,EAAW,EAGf,KAAS,IAAQ,GACf,IAAI,GAAQ,EAAM,GACd,EAAW,EAAW,EAAS,GAEnC,KAAI,CAAC,GAAS,CAAC,cAAG,EAAU,GAC1B,IAAI,GACJ,IAAO,KAAwB,CAAV,KAAc,EACpC,CACF,CACD,OACD,sEC3BD,aAmBe,QAVO,aACpB,QAAI,GAAQ,CAAC,EACT,EAAS,MAEb,GAAS,IACP,KAAO,GAAS,EAElB,SACD,sECjBD,aAsBe,QAbuB,eACpC,QAAI,GAAQ,CAAC,EACT,EAAS,EAAM,OACf,EAAa,EAAO,OAGxB,OAAS,IACH,KAAQ,EAAQ,EAAa,EACjC,YAAW,EAAQ,EAAM,GAE3B,SACD,sECpBD,aAmBe,QAXY,aACzB,IAAI,GAAQ,CAAC,EACT,EAAS,EAEb,eAAU,EAAQ,MAClB,IAAS,IACP,KAAM,GAAS,EAEjB,SACD,oFCbG,kDAJJ,gBACA,qBA+Ee,QA3DoD,qBACjE,IAAI,GAAsB,EAf5B,EAgBM,EAAY,EAAM,OAClB,EAAY,EAEhB,UAAI,GAAa,GAAa,EAAE,GAAa,EAC3C,GAGF,YAAI,GAAU,EAAM,IACpB,MACE,QAAO,IAET,KAAI,GAAQ,CAAC,EACA,KACT,EAAkB,EA/BpB,EA+B8C,MAEhD,qBAAM,IAAI,EAGV,GAAS,IAAQ,GACf,IAAI,GAAW,EAAM,GACjB,EAAW,EAEf,MACE,KAAI,GAAW,EACX,EAAW,EAAU,EAAU,EAAO,EAAO,EAAO,GACpD,EAAW,EAAU,EAAU,EAAO,EAAO,EAEnD,MAAiB,WACf,IACE,EAEF,SACA,KACD,KAED,IACE,MAAI,CAAC,cAAU,EAA0B,aACnC,IAAI,CAAC,EAAK,IAAI,KACT,IAAa,GAAY,EAAU,EAAU,EAAU,EAAY,EACtE,UAAO,GAAK,IAEf,EALA,GAMH,CACA,KACD,KACF,MAAM,IAAI,EACL,IAAa,GACX,EAAU,EAAU,EAAU,EAAY,EAAS,IAEzD,CACA,KACD,KACF,CACD,UAAM,UACN,GACD,+BCpEmB,aAGlB,OAAO,GAAsB,OAC9B,GAGG,uCAjBJ,WACA,GAAI,GAAwB,OAE5B,sBAeE,MAAa,UACX,CACD,QACF,aAEc,kFCjBf,kDANA,iBACA,gBACA,eACA,eACA,qBAmBe,QATI,WACjB,IAAI,GAAS,EAAS,EACtB,oBAAI,cAAS,KACR,cAAQ,IAAW,cAAS,IAAW,cAC1C,IAAO,cAAU,EAEnB,QACD,wECrBD,aAsBe,QAbuB,eACpC,QAAI,GAAS,EAAM,OACf,EAAQ,GAAa,EAAY,EAAI,CAEzC,KAAQ,EAAY,IAAY,IAC1B,QAAQ,EACZ,GAAI,IACF,QAGJ,SAAO,CACR,kFCpBD,8DAEA,OAYe,QAJa,WAC1B,OAAO,KAAU,GAAS,CAAC,cAC5B,sECZD,aAmBe,QAVuB,aACpC,OAAgB,YACd,OAGA,KAHI,KAGG,EAAO,KAAS,IACP,YAAc,IAAO,QACtC,GACF,qECjBD,WACA,GAAI,GAAe,SAAS,UAE5B,WAmBe,QAZG,WAChB,IAAY,IAAR,IACF,IACE,OAAO,GAAa,KACrB,EAFD,CAES,QAAK,CACd,IACE,OAAQ,GACT,EAFD,CAES,QAAK,CACf,CACD,OACD,oFCfD,kDALA,gBACA,eACA,kBAGI,EAAa,KAGjB,OAyCe,QApBa,eAC1B,IAAK,EAAQ,cAAe,EAAO,EAAM,GACvC,YAEA,EAAO,SAAU,cAAU,GAE7B,MAAI,GAAS,EAAQ,EAAM,OAC3B,KAAI,CAAC,GACH,CADa,GAGf,gBAAI,GAAQ,EACR,EAAW,EACX,EAAS,MAAM,EAAW,EAE9B,IAAO,EACL,KAAO,KAAc,cAAU,EAAO,EAAQ,GAEhD,SACD,sEC/CD,aA8Be,QAfE,WACf,QAAI,GAAQ,CAAC,EACT,EAAS,EAAQ,EAAM,OAAS,EAChC,EAAW,EAGf,OAAS,IACH,KAAQ,EACZ,GACE,MAAO,KAGX,SACD,oFCvBD,kDALA,gBACA,eACA,gBACA,oBAsCe,QAdN,UACP,QAAI,GAAS,UAAU,OACnB,EAAO,MAAM,EAAS,EAAS,EAAI,GACnC,EAAQ,UAAU,GAClB,EAEJ,EACE,OAAK,EAAQ,GAAK,UAEpB,SAAO,GACH,cAAU,cAAQ,GAAS,cAAU,GAAS,CAAC,GAAQ,cAAY,EAExE,wFCfD,kDAxBA,gBACA,eACA,eACA,iBAqBI,EAAa,cAAqB,aACpC,OAAO,cAAkB,GACrB,cAAe,EAAO,cAAY,EAAQ,IAE/C,eAJgB,aAMF,kFCCf,kDA/BA,gBACA,eACA,eACA,eACA,eACA,iBA0BI,EAAe,cAAqB,aACtC,IAAI,GAAW,cACf,SAAI,cACF,KAEF,UAAO,cAAkB,GACrB,cAAe,EAAO,cAAY,EAAQ,IAAsB,YAAO,cAE5E,MARkB,aAUJ,kFCdf,kDA3BA,gBACA,eACA,eACA,eACA,iBAuBI,EAAiB,cAAqB,aACxC,IAAI,GAAa,cACjB,SAAI,cACF,KAEF,UAAO,cAAkB,GACrB,cAAe,EAAO,cAAY,EAAQ,IAA6B,mBAE5E,KARoB,aAUN,kFClCf,kDAHA,gBACA,oBA4Ce,QANgB,aAC7B,OAAQ,IAAS,EAAM,OACnB,cAAU,EAAO,cAAa,EAEnC,8FCxCD,kDAHA,gBACA,oBA4Ce,QANW,aACxB,OAAQ,IAAS,EAAM,OACnB,cAAU,EAAO,cAAa,EAEnC,2FCxCD,kDAHA,iBACA,oBA2Ce,QAZoB,iBACjC,IAAI,GAAS,EAAQ,EAAM,OACvB,QAGJ,IAAI,GAAyB,QAAhB,QAAO,IAAqB,cAAe,EAAO,EAC7D,OACA,IAEF,GAAO,cAAS,EAAO,EAAO,EAC/B,wFCvCD,kDAHA,iBACA,oBA2Ce,QANW,aACxB,OAAQ,IAAS,EAAM,OACnB,cAAc,EAAO,cAAa,EAAW,IAC7C,CACL,mFCvCD,kDAHA,iBACA,oBA2Ce,QANe,aAC5B,OAAQ,IAAS,EAAM,OACnB,cAAc,EAAO,cAAa,EAAe,OACjD,CACL,8NC1CQ,0FCAT,8DAEA,OAmBe,QALE,WACf,IAAI,GAAS,EAAQ,EAAM,OAC3B,QAAO,GAAS,cAAY,EAC7B,sFCnBD,8DAGI,OAqBW,QALM,WACnB,IAAI,GAAS,EAAQ,EAAM,OAC3B,QAAO,GAAS,cACjB,EAnBc,EAEf,uFCFA,kDAHA,gBACA,oBA+Be,QATc,aAC3B,IAAI,GAAS,EAAQ,EAAM,OACvB,QAGJ,MAAkB,WAAY,EAAI,cAClC,GAAO,cAAY,EACpB,0EC9BD,aA2Be,QAZI,WACjB,QAAI,GAAQ,CAAC,EACT,EAAS,EAAQ,EAAM,OAAS,EAGpC,OAAS,IACH,KAAO,EACX,KAAO,EAAK,IAAM,EAEpB,SACD,mFCzBD,+DAEA,OA8Be,QALY,eACzB,IAAI,GAA0B,IAAjB,WAA6B,cAAQ,EAClD,SAAkB,YAAY,EAC/B,qEC9BD,aAoBe,QAJG,WAChB,OACD,oFCZD,kDANA,iBACA,oBAwCe,QAZgB,eAC7B,IAAI,GAAS,EAAQ,EAAM,OACvB,QACF,MAEU,cACZ,GACE,CADE,OACU,SAAU,EAAS,EAEjC,IAAO,cAAY,EAAO,EAC3B,IAPU,CAET,kFClCF,+DAEA,OAkBe,QAJE,WACf,OAAO,cAAU,EAClB,oFCID,kDAtBA,gBACA,gBACA,gBACA,iBAmBI,EAAe,cAAc,WAC/B,IAAI,GAAS,cAAS,IACtB,eAAQ,GAAO,QAAU,EAAO,KAAO,EAAO,GAC1C,cAEL,KALkB,aAOJ,kFCCf,kDA9BA,gBACA,gBACA,eACA,gBACA,eACA,iBAyBI,EAAiB,cAAc,WACjC,IAAI,GAAW,cAAK,GAChB,EAAS,cAAS,IAEtB,eAAI,KAAa,cACf,GAEA,WAEF,MAAQ,EAAO,QAAU,EAAO,KAAO,EAAO,GAC1C,cAAiB,EAAQ,cAE9B,MAZoB,aAcN,kFCjBf,kDA3BA,gBACA,gBACA,gBACA,eACA,iBAuBI,EAAmB,cAAc,WACnC,IAAI,GAAa,cAAK,GAClB,EAAS,cAAS,IAEtB,eAAI,KAAe,cACjB,GAEA,WAEF,MAAQ,EAAO,QAAU,EAAO,KAAO,EAAO,GAC1C,cAAyB,SAE9B,KAZsB,aAcR,kFCtCf,kDAHA,gBACA,oBAwBe,QAJI,WACjB,OAAO,CAAC,CAAC,GAA4B,CAAnB,KAAM,UAAkB,cAAa,IAAU,CAAC,cACnE,oFCdD,kDATA,iBACA,eACA,eACA,mBAMI,EAGJ,sBAAI,EAGJ,8BAAI,EAAc,OAGlB,UAAI,EAAe,SAAS,UAG5B,SAAI,EAAiB,EAGrB,eAAI,EAAa,OAAO,IACtB,EAAa,KAAK,GAAgB,QAAQ,EAAc,QACvD,QAAQ,yDAA0D,SAGrE,OA0Be,QARG,WAChB,IAAI,CAAC,cACH,GAEF,YAAI,GAAW,cAAW,IAAU,cAAa,GAAU,EAC3D,QAAO,GAAQ,KAAK,cACrB,uECrDD,WACA,GAAI,GAAa,MAGjB,UAAI,EAAa,EAEjB,OAmBe,QAJM,aACnB,OAAO,GAAQ,EAAW,KAAK,EAAO,GACvC,oFChBD,kDAPA,iBACA,oBAoDe,QAzBoB,eACjC,IAAI,GAAS,EAAQ,EAAM,OAC3B,KAAI,CACF,QAAO,CAET,KAAI,GACJ,KACE,eAAQ,cACR,KAAQ,CACE,CAAR,GACI,SAAU,EAAS,EAAO,GAC1B,SAAU,EAAO,EAAS,IAGlC,GAAI,IACF,QAAO,cAAW,EAEpB,WACE,QAAI,EAAM,KACR,QAGJ,SAAO,CACR,mFChDD,kDAHA,iBACA,oBA2Be,QAJK,aAClB,OAAQ,IAAS,EAAM,OAAU,cAAQ,EAAO,cACjD,4FCAD,kDA1BA,iBACA,iBAyBI,EAAO,gBAAX,mBAEe,kFCzBf,kDAHA,gBACA,qBAgCe,QANmB,eAChC,OAAQ,IAAS,EAAM,QAAU,GAAU,EAAO,OAC9C,cAAY,EAAO,EAAQ,cAAa,IAE7C,kFC/BD,+DAEA,OA6Be,QANqB,eAClC,OAAQ,IAAS,EAAM,QAAU,GAAU,EAAO,OAC9C,cAAY,EAAe,SAAW,GAE3C,mFCGD,kDAhCA,gBACA,gBACA,eACA,gBACA,gBACA,eACA,iBA0BI,EAAS,cAAqB,aAChC,GAAU,cAAY,EAEtB,MAAI,GAAS,EAAQ,EAAM,OAAS,EAChC,EAAS,cAAO,EAEpB,uBAAW,EAAO,cAAS,EAAkB,WAC3C,OAAO,cAAQ,EAAO,GAAU,CAAC,EAClC,CAFiB,GAEf,OAEH,UACD,CAXY,aAaE,kFC1Cf,kDAHA,gBACA,qBAoDe,QArBQ,aACrB,IACA,SAAI,EAAE,GAAS,EACb,cAEF,MAAI,GAAQ,CAAC,EACC,KACV,EAAS,EAEb,aAAY,cAAa,EACzB,GAAS,IAAQ,GACf,IAAI,GAAQ,EACZ,GAAI,EAAU,EAAO,EACnB,OAAO,KACP,KAAQ,KAEX,GACD,qBAAW,EACX,GACD,qECnDD,WACA,GAAI,GAAa,MAGjB,UAAI,EAAgB,EAEpB,UA2Be,QAJE,WACf,OAAO,GAAQ,EAAc,KAAK,GACnC,mFC3BD,kDAJA,gBACA,eACA,oBAkCe,QAhBc,eAC3B,IAAI,GAAS,EAAQ,EAAM,OACvB,QAGJ,IAAI,GAAqB,QAAd,QAAO,IAAmB,cAAe,EAAO,EACzD,MACA,IAGA,MAAiB,IAAT,IAAgB,EAAI,cAC5B,KAAc,WAAY,EAAS,cAErC,IAAO,cAAU,EAAO,EACzB,uFClCD,8DAEA,OAwBe,QAJa,aAC1B,OAAO,cAAgB,EACxB,oFCrBD,kDAHA,gBACA,qBAgCe,QAJsB,eACnC,OAAO,cAAkB,EAAO,EAAO,cACxC,qFC5BD,kDAHA,gBACA,oBA6Be,QAXe,aAC5B,IAAI,GAAS,EAAQ,EAAM,OAC3B,KAAI,EACF,IAAI,GAAQ,cAAgB,EAC5B,MAAI,EAAQ,GAAU,cAAG,EAAM,GAC7B,SAEH,EACD,OAAO,CACR,kFC5BD,8DAEA,OAsBe,QAJiB,aAC9B,OAAO,cAAgB,EACxB,uFCnBD,kDAHA,gBACA,qBA2Be,QAJ0B,eACvC,OAAO,cAAkB,EAAO,EAAO,cACxC,wFCvBD,kDAHA,gBACA,oBA6Be,QAXmB,aAChC,IAAI,GAAS,EAAQ,EAAM,OAC3B,KAAI,EACF,IAAI,GAAQ,cAAgB,EAAc,MAC1C,KAAI,cAAG,EAAM,GACX,SAEH,EACD,OAAO,CACR,kFC5BD,+DAEA,OAqBe,QANK,WAClB,OAAQ,IAAS,EAAM,OACnB,cAEL,uFClBD,kDAHA,gBACA,qBAwBe,QANc,aAC3B,OAAQ,IAAS,EAAM,OACnB,cAAe,EAAO,cAE3B,uFCvBD,+DAEA,OAkBe,QAJD,WACZ,OAAO,cAAK,EACb,oFCfD,kDAHA,gBACA,oBAmCe,QARS,eAClB,OAAE,IAAS,EAGf,UAAK,GAAe,WAAa,EAAI,cACrC,GAAO,cAAU,EAAO,EAAO,CAAJ,GAAQ,EACpC,wFC/BD,kDAHA,gBACA,oBAqCe,QAVc,eAC3B,IAAI,GAAS,EAAQ,EAAM,OACvB,QAGJ,MAAK,GAAe,WAAa,EAAI,cACrC,KAAI,EACJ,EAAO,cAAU,EAAW,CAAJ,GAAQ,EAAI,EACrC,wFCjCD,kDAHA,gBACA,oBA4Ce,QANgB,aAC7B,OAAQ,IAAS,EAAM,OACnB,cAAU,EAAO,cAAa,EAEnC,8FCxCD,kDAHA,gBACA,oBA4Ce,QANW,aACxB,OAAQ,IAAS,EAAM,OACnB,cAAU,EAAO,cAAa,EAEnC,wFCtCD,kDALA,iBACA,eACA,kBAGI,EAAM,EAGV,EAAI,EAGJ,aAAI,EAGJ,qBAAI,EAGJ,aAAI,EAGJ,cAAI,EAEJ,WA4Ce,QArBG,WAChB,IACE,QADE,QAAO,SAGX,MAAI,cACF,SAEF,MAAI,cAAS,GACX,IAAI,GAAQ,cAAW,EAAM,SAAW,EAAM,UAC9C,IAAQ,cAAS,GAAU,EAAQ,GACpC,CACD,IACE,QADE,QAAO,SACQ,EAAV,KAAc,EAAQ,CAE/B,IAAQ,EAAM,QAAQ,EACtB,OAAI,GAAW,EAAW,KAC1B,SAAQ,IAAY,EAAU,KAAK,GAC/B,EAAa,EAAM,MAAM,GAAI,EAAW,EAAI,GAC3C,EAAW,KAAK,GAAS,EAAM,CACrC,mFC3CD,kDArBA,gBACA,eACA,eACA,iBAkBI,EAAQ,cAAc,WACxB,OAAO,cAAS,cAAY,EAAQ,IACrC,YAFW,aAIG,kFCKf,kDA9BA,gBACA,eACA,eACA,eACA,eACA,iBAyBI,EAAU,cAAc,WAC1B,IAAI,GAAW,cACf,SAAI,cACF,KAEF,UAAO,cAAS,cAAY,EAAQ,IAAsB,YAAO,cAClE,GANa,aAQC,kFCZf,kDA1BA,gBACA,eACA,eACA,eACA,iBAsBI,EAAY,cAAc,WAC5B,IAAI,GAAa,cACjB,SAAI,cACF,KAEF,UAAO,cAAS,cAAY,EAAQ,IAA6B,mBAClE,EANe,aAQD,iFClCf,8DAEA,OAuBe,QAND,WACZ,OAAQ,IAAS,EAAM,OACnB,cAEL,uFCpBD,kDAHA,gBACA,oBA8Be,QANQ,aACrB,OAAQ,IAAS,EAAM,OACnB,cAAS,EAAO,cAErB,uFC7BD,8DAEA,OAyBe,QANU,aACvB,OAAQ,IAAS,EAAM,OACnB,cAAgB,SAErB,uFCHD,kDAtBA,gBACA,eACA,iBAoBI,EAAU,cAAqB,aACjC,OAAO,cAAkB,GACrB,cAAe,EAEpB,KAJa,aAMC,kFCLf,kDAvBA,gBACA,gBACA,eACA,iBAoBI,EAAM,cAAc,WACtB,OAAO,cAAQ,cAAY,IAC5B,SAFS,aAIK,kFCGf,kDA9BA,gBACA,eACA,gBACA,eACA,eACA,iBAyBI,EAAQ,cAAc,WACxB,IAAI,GAAW,cACf,SAAI,cACF,KAEF,UAAO,cAAQ,cAAY,IAApB,SAAgD,cACxD,GANW,aAQG,kFCZf,kDA1BA,gBACA,gBACA,eACA,eACA,iBAsBI,EAAU,cAAc,WAC1B,IAAI,GAAa,cACjB,SAAI,cACF,KAEF,UAAO,cAAQ,cAAY,IAA4B,gBACxD,EANa,aAQC,kFCff,kDAnBA,eACA,mBAkBI,EAAM,gBAAV,mBAEe,kFClBf,kDAHA,gBACA,qBAsBe,QAJW,aACxB,OAAO,cAAuB,MAAc,QAC7C,0FClBD,kDAHA,iBACA,qBAqBe,QAJe,aAC5B,OAAO,cAAuB,MAAc,QAC7C,0FCED,kDAtBA,eACA,mBAqBI,EAAU,cAAc,WAC1B,IAAI,GAAS,EAAO,OAChB,EAAoB,CAAT,GAAa,EAAO,EAEnC,mBAA8B,UAAnB,QAAO,IAA0B,EAAO,MACnD,UAAO,cAAU,EAClB,EANa,aAQC,iFCZS,QAAa,WACpC,IAAM,GAAM,GAEZ,SAAM,GAAM,KACX,KAAI,IAAK,EAAK,EAGf,UACA,E,8BCTgC,aAChC,OAAO,CAAC,CAAC,GAAiC,CAApB,IAAU,QAAe,sEAAsE,KACrH,EAED,CASqC,aACpC,OAAO,CAAC,CAAC,GAAiC,CAApB,IAAU,QAAe,kBAAkB,KACjE,EAED,CASoC,aACnC,OAAO,CAAC,CAAC,GAAiC,CAApB,IAAU,QAAe,kBAAkB,KACjE,EAED,oDA9BgB,oBAaA,wBAaA,uBAWA,sBAA+B,aAC9C,OAAO,GAAqB,EAAO,OAAQ,EAAS,KAAS,EAAoB,EAAO,OACxF,GAED,IAOgB,uBAAgC,aAC/C,OAAO,GAAiB,EAAO,OAC/B,G,6PCnED,EAUA,CAAW,WACT,CAEA,aAyBsC,uBAEpC,IAAI,IAAiB,IAAW,GAAQ,oBAAqB,GAAY,GACzE,EAAI,GAAY,OAAO,OAAO,GAC9B,WAAI,GAAU,GAAI,GAIlB,kBAAU,QAAU,EAAiB,GAAS,GAE9C,IACD,EACD,CAY2B,oBACzB,IACE,OAAO,CAAE,KAAM,SAAU,IAAK,GAAG,KAAK,GACvC,IAFD,CAES,SACP,OAAO,CAAE,KAAM,QAAS,IACzB,GACF,CAED,CAaS,YAAc,CACvB,CAAS,YAAsB,CAC/B,CAAS,YAA+B,CAIxC,CAwB+B,cAC7B,CAAkB,0BAAU,QAAiB,YAC3C,IAAU,IAAmB,YAC3B,OAAO,MAAK,QAAQ,GACrB,GACF,CACF,EAED,CA+BuB,cACrB,CAAsC,wBACpC,IAAI,IAAS,EAAS,GAAU,IAAS,GACzC,OACE,OADE,MAAO,QACF,GACR,SACC,IAAI,IAAS,GACb,IAAI,GAAQ,GACZ,YAAI,KACiB,QAAjB,uBAAO,wBACP,EAAO,KAAK,GACd,WAAO,QAAQ,QAAQ,GAAM,SAAS,KAAc,YAClD,IAAO,OAAQ,GAAO,GACvB,GAFM,EAEK,YACV,IAAO,QAAS,GAAK,GACtB,GAGH,GAAO,QAAQ,QAAQ,IAAO,KAAc,YAgB1C,IAAO,MACP,MACD,GAlBM,EAmBR,GACF,CAED,CAA8B,QAA1B,KAAO,EAAO,UAAwB,EAAO,QAC/C,YAAS,EAAO,QAAQ,OAAO,KAGjC,QAEA,SA+BD,QA/B0B,eACvB,CAAS,aACP,OAAO,IAAI,SAA0B,eACnC,IAAO,GAAQ,GAAK,GACrB,GACF,EAED,OAaE,OAAkB,GAAgB,KAIhC,GAJgB,IAMrB,IAID,CAGF,CAqByC,oBACvC,IAAI,IAEJ,QAA+B,gBAC7B,IAAI,IACF,OAAM,IAAI,OAGZ,mCAAI,IAAU,EACZ,IACE,OADE,WAMJ,UACD,IAED,QAAQ,OACR,MAAQ,IAED,KACL,IAAI,IAAW,GACf,YAAI,GACF,IAAI,IAAiB,EAAoB,GACzC,OAAI,GACF,IAAI,KAAmB,GACvB,eACD,GACF,CAED,IAGE,MAHE,MAAQ,UAGF,KAAO,GAAQ,MAAQ,GAEhC,QAAM,IAAuB,OAAnB,MAAQ,OACjB,IAAI,IACF,WACA,EAAM,GAGR,OAAQ,kBAAkB,GAE3B,IAAM,KACL,QADS,MAAQ,WACT,OAAO,SAAU,GAG3B,QAEA,KAAI,IAAS,EAAS,GAAS,GAC/B,OAAoB,QAAhB,MAAO,KAGT,OAAQ,GAAQ,KACZ,EAGJ,EAAI,GAAO,MACT,GAGF,eACE,OAAO,GACP,SAAM,GAGT,KAAM,CACL,OADS,MAAO,UAIhB,KAAQ,OACR,WAAQ,IAAM,GAEjB,IACF,CACF,CAMD,CAAuC,iBACrC,IAAI,IAAS,GAAS,SAAS,GAC/B,WAAI,KAAW,EAGb,OAAQ,SAER,KAAuB,OAAnB,MAAQ,OACV,IAAI,GAAS,SAGX,YAAQ,OACR,YAAQ,IACR,IAAoB,GAEpB,IAGE,OAHE,MAAQ,cAOd,OAAQ,OACR,WAAQ,IAAM,GAAI,WAEnB,mDAED,OACD,GAED,IAAI,IAAS,EAAS,GAAQ,GAAS,SAAU,GAEjD,QACE,OADE,MAAO,eACD,OACR,WAAQ,IAAM,GACd,OAAQ,SACR,KAGF,MAAI,IAAO,GAEX,OAAI,CACF,aAAQ,OACR,WAAQ,IAAM,GAAI,WAClB,uCAAQ,SACR,KAGF,MAAI,GAGF,QAAQ,GAAS,YAAc,GAG/B,SAAQ,KAAO,GAQf,QACE,QADE,MAAQ,YACF,OACR,UAAQ,IAKV,cAKF,cAAQ,SACR,KACD,EAID,CAiBsB,cACpB,IAAI,IAAQ,CAAE,OAAQ,GAEtB,IAAI,IACF,SAAM,SAAW,GAGnB,IAAI,IACF,SAAM,WAAa,GACnB,MAAM,SAAW,GAGnB,SAAK,WAAW,KACjB,GAED,CAAuB,cACrB,IAAI,IAAS,GACb,kBAAO,KACP,eAAO,IACP,OAAM,WACP,EAED,CAAiB,cAIf,MAAK,WAAa,CAAC,CAAE,OACrB,YAAY,QAAQ,EACpB,WACD,SAED,CA2BgB,cACd,IAAI,GACF,IAAI,IAAiB,GACrB,MACE,SAAO,IAAe,KAGxB,OACE,UADE,QAAO,IAAS,WAIpB,OAAI,CAAC,MAAM,GAAS,QAClB,IAAI,IAAI,CAAC,EAAG,GAAgB,aAC1B,MAAS,KAAI,GACX,WAAI,EAAO,KAAK,GACd,cAAK,MAAQ,GACb,OACA,QAIJ,aAAK,MACL,KAEA,QACD,EAED,QAAO,IAAK,KACb,EACF,CAGD,OAAO,CAAE,KACV,EACD,CAES,YACP,OAAO,CAAE,MAAO,EACjB,QAED,IApgBI,GAAK,OACT,UAAI,EAAS,EACb,eACA,EAAI,EAA4B,UAAlB,QAAO,QACrB,UAAI,EAAiB,EAAQ,UAC7B,aAAI,EAAsB,EAAQ,eAClC,kBAAI,EAAoB,EAAQ,aAEhC,gBAAI,EACJ,QADe,KAAO,GAClB,EAAU,EACd,sBACE,EAYF,YATI,MAAO,QAIT,MAKQ,EAAO,mBAAqB,EAAW,EAEjD,aAYQ,KAYR,KAQI,GACJ,iBAAI,EACJ,iBAAI,EACJ,YAAI,EAIJ,YAMA,MAOA,SAAkB,GAAkB,UAClC,OACD,KAED,KAAI,IAAW,OACf,eAAI,GAA0B,IAAY,GAAS,GACnD,QAAI,IACA,KAA4B,GAC5B,EAAO,KAAK,GAGd,QAGF,OAAI,IAAK,EAA2B,UAClC,EAAU,UAAY,OAAO,OAC/B,MAAkB,UAAY,GAAG,YACjC,IAA2B,YAC3B,IAA2B,GACzB,EAAkB,YAIpB,sBAQQ,oBAA+B,YACrC,IAAI,IAAyB,UAAlB,QAAO,KAAyB,GAC3C,oBAAO,KACH,KAGA,GAEL,uBAFM,GAAK,aAAe,GAAK,MAIhC,IAAQ,KAAgB,YACtB,OAAI,QACF,sBAAO,eAAe,GAEtB,OAAO,UACP,EAAI,EAAE,IACJ,UAAO,GAGX,yBAAO,UAAY,OAAO,OAC1B,IACD,EAMD,IAAQ,MAAiB,YACvB,OAAO,CAAE,QACV,GAED,IA+EsB,EACtB,aAAc,UAAU,GAAuB,UAC7C,OACD,KACD,IAAQ,cAKR,IAAQ,MAAyC,qBAC/C,IAAI,IAAO,GAAI,GACb,EAAK,GAAS,GAAS,GAGzB,WAAO,GAAQ,oBAAoB,IAC1B,GACL,GAAK,OAAO,KAAc,YACxB,OAAO,IAAO,KAAO,GAAO,MAAQ,GACrC,MACN,EAED,IAoKA,OAAG,GAOH,eAAG,GAAkB,UACnB,OACD,KAED,KAAG,SAAW,UACZ,OACD,oBAED,IA+BQ,KAAgB,YACtB,IACA,WAAK,GAAI,MACP,OAAK,KAEP,cAIA,UAAgB,aACd,MAAO,GAAK,QACV,IAAI,IAAM,GACV,SAAI,KACF,cAAK,MACL,MACA,QAEH,EAKD,WACA,QACD,EACF,CAED,IAkCQ,OAER,IAIQ,UACN,aAEA,QAAgB,YACd,SAAK,KACL,OAAK,KAGL,OAAK,KAAO,KAAK,MACjB,OACA,aAAK,SAEL,UAAK,OACL,YAAK,IAEL,OAAK,WAAW,QAEhB,GAAI,CACF,OAAK,GAAI,MAEP,MAAuB,GAAnB,MAAK,OAAO,IACZ,EAAO,KAAK,KAAM,KAClB,CAAC,MAAM,CAAC,GAAK,MACf,WAAK,IAIZ,EAED,OAAM,UACJ,MAEA,WAAI,IAAY,KAAK,WACrB,GAAI,GAAa,GACjB,cACE,OADE,MAAW,UACP,IAGR,UAAO,MACR,IAED,oBAA4B,YAC1B,CAKqB,kBACnB,WAAO,KACP,WAAO,IACP,MAAQ,KAER,GAGE,QAAQ,OACR,UAAQ,IAGV,GAAO,CAAC,CACT,EAED,IApBI,KACF,UAGF,QAgBK,GAhBD,IACJ,KAeS,GAAI,KAAK,WAAW,OAAS,EAAQ,CAAL,KAAU,KACjD,IAAI,IAAQ,KAAK,WACjB,IAAI,GAAS,GAEb,cAIE,MAJE,MAAM,aAID,IAGT,UAAI,GAAM,QAAU,KAAK,KACvB,IAAI,IAAW,EAAO,KAAK,GAC3B,YAAI,GAAa,EAAO,KAAK,GAE7B,iBAAI,IAAY,GACd,IAAI,KAAK,KAAO,GACd,eAAO,IAAO,GACf,aAAM,GAAI,KAAK,KAAO,GACrB,iBAAO,IAAO,GAGjB,WAPD,KAOO,IACL,OAAI,KAAK,KAAO,GACd,eAAO,IAAO,GAGjB,kBAAM,KACL,QAKM,IAAI,OAEb,kDAPO,KAAK,KAAO,GACd,iBAAO,IAAO,GAIhB,WAGL,CACF,CAED,SAAuB,eACrB,KAAK,GAAI,IAAI,KAAK,WAAW,OAAS,KAAQ,CAAL,KACnC,WAAQ,KAAK,WACjB,IAAI,GAAM,QAAU,KAAK,MACrB,EAAO,KAAK,GAAO,eACnB,KAAK,KAAO,GAAM,WACpB,IAAI,IACJ,GACD,KAGH,CAAI,KACU,OAAT,OACS,UAAT,QACD,GAAa,QAAU,IACvB,IAAO,GAGT,gBAGF,SAAI,IAAS,GAAe,GAC5B,wBAAO,KACP,MAAO,IAEP,GACE,SAAK,OACL,YAAK,KAAO,GACZ,WAGF,IAAO,KAAK,SACb,GAED,WAA2B,eACzB,IACE,OADE,MAAO,UACH,IAGR,UAAoB,OAAhB,MAAO,MAET,UADE,MAAO,UACJ,KAAO,GACP,IACL,QADS,MAAO,WACX,KAAO,KAAK,IAAM,GACvB,SAAK,OACL,cAAK,KACA,OAAoB,QAAhB,MAAO,MAChB,UAAK,KAGP,IACD,EAED,SAAiB,YACf,KAAK,GAAI,IAAI,KAAK,WAAW,OAAS,KAAQ,CAAL,KACnC,WAAQ,KAAK,WACjB,IAAI,GAAM,aACR,eAAK,SAAS,GAAM,WAAY,GAChC,YACA,IAGL,EAED,UAAkB,YAChB,KAAK,GAAI,IAAI,KAAK,WAAW,OAAS,KAAQ,CAAL,KACnC,WAAQ,KAAK,WACjB,IAAI,GAAM,SAAW,GACnB,IAAI,IAAS,GACb,cAAoB,OAAhB,MAAO,KACT,IAAI,IAAS,GACb,MACD,GACD,OACD,GAKH,MAAM,IAAI,OACX,wBAED,gBAA8C,kBAC5C,aAAK,SACH,UAAU,EACV,eACA,WAGF,IAGE,MAHE,QAAK,cAGF,IAGP,GACD,EAEJ,EAGC,EACkB,QAAlB,uBAAO,qBAAsB,EACX,QAAlB,uBAAO,+BAAsB,OACb,QAAhB,uBAAO,2BAAoB,utBC9tB7B,yEAKA,iBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,mBAEa,uKAEb,GAAc,MACb,SAAS,4HAeT,gBACC,CAYA,oHACC,CAIC,uFCvDJ,aAaA,EAAO,QAAoB,WAEzB,IAAI,GAA6B,WAAlB,QAAO,SAA0B,OAEhD,YAAI,CACF,OAAM,IAAI,OAIb,uCAAI,CAAC,GACH,QADU,QAAO,SAIlB,MAAI,GAAU,EAAS,SAAW,KAAO,EACzC,KAAI,EAAa,EAAU,EAAS,SAAS,QAAQ,YA4BtD,KAAI,EAAW,EAAI,QAAQ,sDAA2E,aAErG,IAAI,GAAkB,EACpB,OACA,QAAQ,WAAwB,aAAK,OAAY,EAF7B,GAGpB,QAAQ,WAAwB,aAAK,OAAY,EAGnD,MAAI,+CAA+C,KACjD,SAIF,MAEA,YAEC,CAFG,KAAgB,QAAQ,MAGrB,EAEN,CAFU,KAAgB,QAAQ,KAEzB,EAGT,EAAS,EAAa,EAAgB,QAAQ,QAI/C,IAAO,OAAS,KAAK,UAAU,GAC/B,GAGD,SACA,EA1ED,kpBCDA,mSAJA,iBACA,gBACA,iBAwCqB,0IAQpB,4BAIC,MACA,2BACA,kCACA,8BACA,2BAED,8CAUC,IAAM,GAAW,KAAK,OAEtB,SAAK,EAAS,IAEb,+BAA2B,KAAK,OAAQ,WAGzC,gBAAK,EAAS,IAEb,+BAA2B,KAAK,OAAQ,gBAEzC,eAED,qDAaC,IAAM,GAAW,KAAK,OAEtB,SAAK,EAAS,IAEb,wBAA4B,KAAK,OAAQ,wBACzC,sBAA4B,KAAK,OAAQ,oBAI1C,SAAK,EAAS,IAKb,0BAA4B,KAAK,OAAQ,+BACzC,wBAA4B,KAAK,OAAQ,4BAG1C,UAED,iDAUyB,OACxB,KAAM,EAAW,KAAK,OACtB,SAAM,EAAU,KAAK,OAAO,OAAO,IAEnC,sBAAK,EAAU,OACF,WACX,IAAM,GAAc,EACpB,aAEA,KAAK,EAAS,IAAK,KAAmB,EAAQ,EAAY,MAAO,SAChE,IAAM,GAAQ,EACd,GAAM,EAAS,GAAI,eAAgB,EAGnC,wBAA2B,EAAK,OAAQ,EAAQ,YAAW,IAClD,IAAU,GAElB,QAAK,OAAO,QAAS,EAAa,CAAE,MACpC,IACD,EAfY,kBACd,WAAsB,gDAAU,iBAe/B,WAhBa,oEAiBd,CACD,CAED,oDAQC,CAAK,KAAK,OAAO,SAAS,IAEzB,6BAA2B,KAAK,OAAQ,QAEzC,uBAvHD,2BAIC,OACA,oDANmB,gLC3BpB,kDAfD,eACA,oBAaqB,QA+BU,iBAAoB,QACjD,MAEA,MACC,UADI,QAAO,KAEX,MAEM,GAEK,WAAW,IACb,GAAU,EAGlB,QAAgB,QAJjB,EAI0B,CAAE,MAC3B,GACD,CAED,GAAO,SAAS,GAAI,SAAyB,eAC5C,IAMA,QANK,QAMC,GAAQ,EAAQ,MAAM,WAAW,OAEvC,MAAK,GAAG,eAIR,YAAM,GAAW,EACjB,SAAM,EAAO,EAGb,QAA6C,WAAxC,KAAS,OAAO,MAIrB,MAAM,GAAQ,EAAQ,KAEjB,GAIL,KAAO,SAAS,eAAgB,UAE/B,IAAM,GAAQ,EAAO,SAGrB,QAAM,EAAQ,UAAM,4BAA6B,EAAS,OAAQ,EAAG,EAAS,OAAQ,EAAO,GAG7F,UAAM,OAEN,KAAU,CAAE,MAAF,EAAS,MACnB,GACD,KACD,E,gLCvFD,CAyLiB,aACjB,OAAO,OAAM,KAAM,EAAQ,eAAgB,OAAa,aAAL,OAAY,GAAI,EAAE,IAA9D,EACP,G,kDA1MD,iBACA,qBAaqB,QA8CuB,iBAAsB,mBAChE,QAAK,OAEL,KACA,GACA,EACA,EAEA,EAAK,YACJ,UAEA,IAGD,EACC,QADI,QAAO,KAGX,IAID,IAAe,GAAkB,WAChC,QAEA,MAEA,KAHA,EAKC,IAFO,IAAE,EAAS,EAAO,KAAM,OAE1B,GAEJ,CAFc,GAAO,gBASlB,EAJH,UACK,EAAL,KACK,EAAL,KACK,EAIA,QACG,EAAQ,GAAI,OAAS,CADhB,EAAU,EACxB,GAGA,UAAM,GAAW,CAChB,EACA,EAAQ,EAET,QAAM,EAAS,CACd,EAAQ,EAAQ,OAAS,EAAQ,OACjC,EAAQ,EAAQ,OAAS,EAAQ,OAAS,EAG3C,UAAO,KACP,KAAO,KAEP,KAAO,KAAM,CAAE,EAAQ,EAAQ,OAAQ,EAAQ,EAAQ,OAAS,EAGjE,eACC,QACA,SAED,EAGD,IAAiB,GAA6B,aAAiB,oBAC9D,WAAqB,gDAAc,SAClC,QAAM,aAAc,EACpB,cAH6D,oEAI9D,CAED,IAAO,SAAS,GAAI,SAAiB,aACpC,IAIA,QAJK,SAIC,GAAY,EAAK,OAAO,SAE9B,aAAM,EAAyB,WAA1B,EAA2B,EAAmB,OAAC,EAAU,MAI9D,WAAM,GAAQ,EAAU,MACxB,OAAM,EAAO,EAAS,GAAQ,MAAO,EAAG,EAAU,MAClD,QAAM,EAAS,EACf,GAGA,OAAO,OAAO,QAAS,WACtB,CAAK,WAAe,IAAa,WAIjC,MAAe,KAAM,UAAU,4BAC9B,EAAO,EAAO,GACd,EAAO,EAER,IAED,MAGA,WAAO,OAAO,QAAQ,UAAU,QAAS,WACxC,CAAK,WAAe,IAAa,WAIjC,MAAe,KAAM,UAAU,4BAC9B,EAAO,EAAO,GACd,EAAO,EAER,IAED,IAAK,EAAG,EAAe,QAAU,EAIjC,YAAM,GAAQ,EAAO,SAErB,UAAO,SAAS,eAAgB,UAC/B,IAAM,GAAc,cAAsB,EAAS,EAAgB,EAAO,SAG1E,UAAgB,EAEhB,MANqC,gBAOrC,WAAqB,mDAAiB,WACrC,QAAM,OACN,aAToC,qEAUrC,CACD,KACD,EAOF,kpBClMA,mSALA,eACA,gBACA,eACA,mBASqB,0IAepB,uBAGO,OACN,KAAM,EAAS,KACf,OAAM,EAAI,EACV,EAAM,EAAU,EAAO,SAAS,IAChC,QAAM,EAGN,WAAO,GAAG,iBAAiB,IAAK,OAAQ,WACvC,IAAM,GAAO,cAEb,YAAK,IACJ,OAAO,EACP,eACA,kBACA,EAGD,eAAK,KAAM,OAAQ,aAAc,GAAI,EAAS,QAG9C,eAAK,SAAU,EAAM,UAAW,iBAAM,GAAO,QAAS,OAEtD,GACA,CAGD,KAAO,WAAW,IAAK,EACvB,iBA5CD,yBAIC,OAAO,GACP,QAED,mCAIC,OACA,gDAbmB,kpBCPrB,mSALA,eACA,eACA,eACA,mBAEM,EAEN,OAQqB,0IACpB,uBAIC,IAAM,GAAS,KACf,OAAM,EAAO,EACb,KAAM,EAAU,EAGhB,UAAO,SAAS,OAAO,MAAO,CAAE,KAAM,UAAW,WAAY,CAAE,GAAQ,OAGvE,2BAAsB,IAAK,EAAK,YAAa,EAAQ,aACnD,cAAe,GACf,UAGF,0BAAqB,IAAK,EAAK,aAC7B,YAAa,UACb,YAAa,KACb,cAAyC,gCACzC,YAGF,QAAO,SAAS,IAAK,EAAM,cAA4B,EACvD,gCA1BmB,kpBCVrB,mSALA,eACA,gBACA,eACA,mBASqB,0IAepB,uBAGO,OACN,KAAM,EAAS,KACf,OAAM,EAAI,EACV,EAAM,EAAU,EAAO,SAAS,IAChC,UAAM,EAGN,WAAO,GAAG,iBAAiB,IAAK,SAAU,WACzC,IAAM,GAAO,cAEb,YAAK,IACJ,OAAO,EACP,iBACA,kBACA,EAGD,eAAK,KAAM,OAAQ,aAAc,GAAI,EAAS,QAG9C,eAAK,SAAU,EAAM,UAAW,iBAAM,GAAO,QAAS,SAEtD,GACA,CAGD,KAAO,WAAW,IAAK,EACvB,mBA5CD,yBAIC,OAAO,GACP,QAED,mCAIC,OACA,kDAbmB,kpBCPrB,mSALA,eACA,eACA,eACA,mBAEM,EAEN,SAQqB,0IACpB,uBAIC,IAAM,GAAS,KACf,OAAM,EAAO,EACb,KAAM,EAAU,EAGhB,UAAO,SAAS,OAAO,MAAO,CAAE,KAAM,UAAW,WAAY,CAAE,GAAU,OAGzE,2BAAsB,IAAK,EAAK,YAAa,EAAQ,aACnD,cAAe,GACf,UAGF,qBAAqB,IAAK,EAAK,aAC7B,YAAa,MACb,YAAa,KACb,cAAwC,iCACxC,YAGF,QAAO,SAAS,IAAK,EAAQ,cAA4B,EACzD,gCA1BmB,kpBCPrB,mSARA,eACA,gBAEA,eAEA,mBACA,UAWqB,2IAepB,uBAGO,OACN,KAAM,EAAS,KACf,OAAM,EAAI,EACV,EAAM,EAAU,EAAO,SAAS,IAEhC,gBAAO,GAAG,iBAAiB,IAAK,aAAc,WAC7C,IAAM,GAAa,cAEnB,YAAW,IACV,OAAO,EACP,sBACA,QAID,eAAW,KAAM,OAAQ,aAAc,GAAI,EAAS,QAGpD,eAAK,SAAU,EAAY,UAAW,iBAAM,GAAO,QAAS,aAE5D,GACA,CACD,EAED,oCAGY,OACX,KAAM,EAAS,KACf,OAAM,EAAU,EAAO,SAAS,IAOhC,mBAAK,SAAU,KAAK,OAAO,QAAQ,KAAM,QAAgB,aACxD,IAAM,GAAM,EAAK,OACjB,SAAM,EAAiB,EAAI,UAAU,kBAErC,OAAK,EAAI,UAAU,aAAe,EAAe,SAAW,EAC3D,UAAK,OAAO,QAEZ,gBACA,mBAED,OACD,YAhED,yBAIC,OAAO,GACP,QAED,mCAIC,OACA,qDAbmB,kpBCXrB,CA0KoB,aACnB,OAAwC,YAAjC,IAAkB,OAAO,KAAuB,EAAkB,OACzE,IASD,CACiC,aAChC,QACI,GACJ,EAEA,KAHA,EAGQ,EAAI,EAAO,QAClB,IAAM,GAAQ,EACd,GAAM,EAAY,EAAQ,EAErB,GACJ,MAAgB,UAAS,aAG1B,IAAM,CAAD,EAAc,EAAM,aACxB,MAAO,KAAM,cAAW,EAAe,UAAS,YAChD,OAGD,MACA,GAED,OACA,EAED,CACmC,eAClC,IAAM,GAAc,EAAO,MAC1B,MACA,oBAAQ,UAAS,aAElB,KAAM,EAAqB,EAAO,MACjC,MAAM,EACN,gBAAY,MAAM,KAAM,EACxB,2BAGD,qBAAO,IACP,C,mSAjOD,gBACA,cACA,cACA,cACA,kBAOqB,cAIP,aAAS,QAGrB,kEAQA,aAAK,IAGL,cAAK,SAAU,EAAO,SAAU,cAAe,UAC9C,GACA,iBACA,cAHD,GAIA,CAED,YApBA,4CAwBC,IAAM,GAAa,cAAO,KAAK,OAAO,SAAS,UAG/C,0BAAK,MAAQ,CAAC,EAAG,GAAc,EAC/B,GAED,qCAU2B,kEAC1B,MAAM,EAAM,KAAK,OACjB,SAAM,EAAS,EACf,OAAM,EAAQ,EAAQ,OAAS,EAC/B,QAAM,EAAS,MAAM,KAAM,EAAI,UAE/B,uBAAI,eAAgB,UACnB,IAAK,EACJ,QAAK,aAAc,EAAO,EAAO,OACjC,QACA,IAAM,GAAgB,EAAO,OAAQ,WAGpC,OAAO,GAAW,IAAW,EAAkB,EAC/C,EAED,KAAK,YAAa,EAClB,EACD,CACD,EAED,wCAIC,IAAK,KACJ,MAGD,YAAM,GAAY,KAAK,OAAO,SAC9B,UAAM,EAAS,KAAK,OAAO,SAE3B,OAAM,EAAa,cAAO,EAErB,6BAIL,GAAO,EAAkB,EACzB,EAED,6BAUqB,aAEpB,GAAwB,GAAS,UAAU,QAAS,WACnD,IAAK,EAAW,MAAM,WAAa,EAAW,IAC7C,QAMD,cANO,OAAQ,EAAW,MAEzB,WAII,EAAW,MAAM,UACrB,IAAM,GAAiB,UAAS,aAAc,EAAW,MAEzD,QAGA,cAHM,KAAM,EAEZ,EAKI,CAAC,EAAW,IAChB,WAAM,MAAO,EAKd,QAAM,GAAgB,UAAS,YAAa,EAAW,IAEvD,UAAM,KAAM,EACZ,EACD,EAED,4BAMoB,aACnB,IAGA,QAAwB,GAAS,UAAU,QAAS,WACnD,IAAI,GAAQ,EAAW,EAElB,OACJ,MAAQ,cAER,gBAAM,KAAM,EAGb,MAAc,KACd,EAMD,KAAc,UAAU,OAAwB,aAC/C,OAAK,GAAa,aACjB,KAAM,MAAO,UAAS,YAEtB,IAGD,GACA,CACD,+BAlKmB,kpBCJrB,mSAPA,eAEA,gBAEA,eACA,kBASqB,0IACpB,uBAIC,IAAM,GAAS,KACf,OAAM,EAAS,EAAO,SAEtB,SAAO,SAAS,IAAK,aAAc,cAEnC,MAAO,aACP,gBAAO,MAAO,CAAE,KAAM,aAAc,OACpC,YAAO,MAAO,CAAE,KAAM,SAAU,OAEhC,+BAAqB,IAAK,EAAO,KAAK,aACpC,YAAa,cACb,UAEF,8BAAsB,IAAK,EAAO,KAAK,YAAa,EAAO,QAAQ,aACjE,YAAa,cACb,UACF,aAED,oCAIC,IAAM,GAAS,KAAK,OAAO,SAI3B,OAAK,EAAO,QACX,eAAO,MACN,MACA,kBACA,aAGF,2DAtCmB,kpBCJrB,mSAVA,eAEA,gBAEA,gBACA,gBACA,gBAEA,mBA0FqB,0IAQpB,uBAGO,OACN,KAAM,EAAS,KACf,OAAM,EAAM,EACZ,SAAM,EAAc,EAAO,QAQ3B,UAAK,mBAAqB,MAE1B,UAAY,cAIZ,cAAK,SAAU,EAAa,iBAAyB,aACpD,IAAM,GAAe,EACrB,aAAI,EAEJ,GAAK,EAAa,QACjB,eAAU,cAAwB,EAAa,QACzC,cAAK,EAAa,QACxB,kBAAU,cAAiB,EAAa,QAGzC,kBAAU,EAAK,mBAAmB,OAElC,KAAK,KAAM,sBAAuB,CAAE,QACpC,GAbD,EAaG,CAAE,SAEL,aAAK,SAAU,KAAM,sBAA8B,aAClD,IAAK,CAAC,EAAK,QAAQ,QAClB,IAAM,GAAiB,EAAK,OAK5B,KAAM,EAAgB,EAAe,QAAS,EAAK,QAEnD,sBAAI,eAAgB,UACnB,GAAe,cAAe,EAAe,EAC7C,UACD,EACD,CAbD,EAaG,CAAE,SAIL,WAAM,GAAmB,aACxB,IAAM,GAAe,EACrB,aAAM,EAAU,EAAO,KAAK,OAAQ,EAAO,KAAK,mBAAoB,EAEpE,cAEA,mBAAY,KAAM,kBAAmB,CAAE,aAAF,EAAgB,QAAhB,EAAyB,OAAQ,EACtE,MAED,OAAK,SAAU,EAAa,OAAQ,EAAW,CAAE,SACjD,aAAK,SAAU,EAAa,MAAO,EAAW,CAAE,SAEhD,aAAK,SAAU,EAAa,kBAA0B,aAChD,CAAC,EAAK,QACV,YAAK,aAAa,QAAS,YAAa,EAAK,mBAAmB,OAAQ,EACxE,YAAK,aAAa,QAAS,aAAc,cAAiB,EAG3D,WACC,KADI,IAAK,UACL,eAAgB,UACnB,GAAO,KAAK,cAAe,EAAI,UAAW,EAAI,QAAS,CACvD,UAEF,EAXD,EAWG,CAAE,SACL,iBAnFD,2BAIC,OACA,+BA6HF,mBAnIqB,kpBC/FrB,mSAHA,gBACA,mBAUqB,cACP,aAAM,CAQS,eAC1B,GAEA,mBAAI,KAAM,iBAAkB,CAAE,aAAc,EAC5C,cAZiB,0EAGlB,aAEA,6CAAK,SAAU,EAAK,QAAS,EAAa,CAAE,SAC5C,UAAK,SAAU,EAAK,OAAQ,EAAa,CAAE,SAE3C,QAKA,aAbD,gCAeY,WACX,MAAK,KAAM,EAAS,KAAM,EACzB,cAAc,cAAkB,EAAS,cAAgB,EAAS,cAAgB,EAEnF,yBAkFF,mBAtGqB,2HCXrB,CAsDmB,aAElB,IAAM,GAAQ,EAAmB,MAAQ,MAAM,KAAM,EACrD,UAAM,EAAQ,EAAmB,MAAQ,MAAM,KAAM,EAErD,gBAAK,GACJ,OAGD,EAAO,EACL,OAAQ,kBAAsB,MAAd,KAAK,IADhB,GAEL,IAAK,kBAAQ,GAAK,WACpB,E,uSA/DoB,YACpB,CAAa,aAAqB,QAOjC,QAAK,MAAQ,EAQb,QAAK,QACL,CAED,kBASA,gBAQS,WACR,OAAO,MAAK,QAAQ,QACpB,EAED,wBAMe,aACd,MAAK,QAAQ,QAAS,EACtB,gCAvBA,OAAO,MAAK,QACZ,yBA1BmB,iFCGG,QAAwB,WAC/C,OAAO,GACL,QAAS,qDAAmE,aAG5E,OACC,EADI,IAAO,OAIZ,IACA,CACF,E,iFCXuB,QAAiB,WACxC,UACC,EACC,QAAS,KAAM,QACf,QAAS,KAEV,QACC,QAAS,QAAS,WAClB,QAAS,MACV,KACC,QAAS,MAAO,UAChB,QAAS,MACV,UACC,QAAS,QAEX,WAAiC,CAEhC,CAFI,GAAK,QAAS,qBAEJ,EAMf,QACA,C,8BCnBwC,aACxC,IAAI,GAEJ,MAAK,EAAS,GAAI,SAAY,EAAS,GAEtC,eAAO,EACP,SAAM,IAAK,EAAS,GAAI,QAAW,EAAS,aAE5C,SAAO,EAAS,aAChB,WAGA,IAAI,GAAO,KAHL,eAKN,WAAqB,EAAS,+DAAgB,SAC7C,MAAM,EAAY,EAGlB,GAAK,IAAU,EAAK,GAAI,qBAAwB,EAAM,GACrD,uBAAK,EAAqB,SAAU,EAAK,OAAU,EAAqB,SAAU,EACjF,SAEA,QAIF,WACA,IACA,CAnBK,8EAoBN,CAED,OACA,E,4DAhCuB,EARxB,GAEA,onBCHA,iiBAFA,iEAeqB,cAMP,aAAS,QAGrB,6DAMA,gBAAK,OAAS,EACd,CAED,YAZA,yBAyBgB,aAAW,OAC1B,QAAwB,QAAnB,QAAO,GACX,IAAM,GAEN,IAAW,UACV,GAAK,OAAO,QACZ,EACD,CAED,mFAAW,EACX,EAED,yBAGU,WAAU,OACnB,UAAK,UAAU,SAAU,EAAS,UAAkB,aACnD,IAAM,GAAU,EAAK,MAErB,GACC,KAED,gBACD,+BAtDmB,gLCLrB,mSAVA,eACA,gBACA,gBACA,gBACA,gBACA,gBAEA,cACA,iBASqB,YAMpB,CAAa,aAAS,QACrB,MAAM,GAAmB,KAAK,YAAY,OAAS,KAAK,YAAY,MAQpE,aAAK,OAAS,cAAY,EAAQ,KAAK,YAAY,OAAS,KAAK,YAAY,MAE7E,aAAK,OAAO,OAAQ,UAQpB,QAAK,QAAU,cAAsB,KAQrC,QAAK,SAAW,GAMhB,UAAK,OAAS,cAAY,KAAK,OAAO,IAQtC,cAAK,EAAI,KAAK,OAQd,OAAK,SAAW,MAQhB,aAAK,KAAO,cAAoB,KAchC,SAED,gDAKc,CAkBwB,eACpC,OAAO,GAAc,OAAmB,aAClC,OAAC,GACL,GAGM,EAAQ,KAAM,EAAQ,GAAS,KACtC,IADA,CALM,EAMJ,QACH,UACD,OA1BA,KAAM,EACN,KAAM,EAAS,KAEf,aAOS,WACR,IAAM,GAAU,EAAO,IACvB,eAAM,EAAgB,EAAO,IAE7B,2BAAO,GAAK,QAAQ,KAAM,EAC1B,EAED,CAdO,GACL,KAAM,WACN,OAAO,GAAa,EAAe,QACjC,KAAM,iBAAM,GAAa,EAAe,YAC1C,EAJK,GAKL,KAAM,iBAAM,GAAK,KAAM,eAEzB,EAkBD,kCAMU,OACT,iBAAK,KACL,gBAEA,gBAAO,QAAQ,UACb,KAAM,UACN,GAAK,SACL,YAAK,KACL,SACF,EAED,wBAMsB,aACrB,IAAM,GAAU,KAAK,SAAS,IAE9B,MAAK,CAMJ,OAAM,eAGP,mFAAQ,SACR,EAED,yBAOe,WAAS,OACvB,WAAO,IAAI,SAAS,WACnB,IAAM,GAAS,MAEf,KACC,EAAO,cACL,KAAM,UACN,GAAO,KACP,eAAO,KACP,QAJF,GAKE,KAAM,iBAAM,EAEf,GACD,sBA3KmB,EA8KrB,cAAK,IAmCL,ypBC3NA,iiBAPA,eACA,gBACA,gBAEA,gBACA,mBAMqB,cAQE,eAAS,QAG9B,kEAMA,aAAK,QAGL,IAAK,QAAU,cAAuB,EAQtC,YAAK,WAAa,cAalB,KAAK,WAAW,SAAU,EAAK,QAAQ,MACvC,CAED,YApCA,uCAuCU,OACT,WAAO,SAAQ,UACb,KAAM,iBAAM,GAAK,WAAW,SADvB,GAEL,KAAM,iBAAM,GAAK,QAAQ,SAFpB,GAGL,sFACF,MAED,wBAKS,WACR,MAAK,KAAK,IACV,EAED,kCAIC,OAAO,MAAK,KACZ,KAED,8CAIC,eAAkB,KAAK,QAAS,KAChC,UAED,oDAIC,MAAK,QAAS,cAAoB,KAClC,SAED,yBAQwB,aAAS,OAChC,WAAO,IAAI,SAAS,WACnB,IAAM,GAAS,MAAU,EAEzB,KACC,EAAO,cACL,KAAM,UACN,GAAO,KACP,eAAO,KACP,QAJF,GAKE,KAAM,iBAAM,EAEf,GACD,+BAzGmB,gLCRrB,mSAHA,eACA,kBAKqB,YAWpB,CAAa,aAAgC,wEAK5C,QAAK,QAQL,OAAK,kBAAoB,GAMzB,UAAK,SAAW,GAAI,QAnBwB,gBAqB5C,WAAiC,gDAAmB,SACnD,WAAK,kBAAkB,IAAK,EAE5B,GAAK,EACJ,iBAAK,kBAAkB,IAAK,EAAkB,WAE/C,WA3B2C,oEA4B5C,CAED,kBAGI,OAAO,iLACW,KAAK,0EAAd,I,UACe,UAArB,QAAO,GAAO,qCACZ,4UAKT,qBAMK,WACJ,OAAO,MAAK,SAAS,IACrB,EAED,qBAYM,WAA8B,CAkCd,aACpB,OAAK,GAAyB,SAK9B,IAAK,EAAK,IAAK,IAAuB,EAAQ,IAI9C,UAAO,EAAmB,GACxB,MAAO,WAOP,iBAAI,MAAO,iEAAkE,CAAE,OAE/E,IACA,CACF,EAED,CAA4B,aAC3B,OAAO,IAAI,SAAS,WACnB,GAAQ,IAER,GAAK,EACJ,YAAkB,SAAS,QAAS,WACnC,IAAM,GAA4B,EAElC,MAAK,EAAc,SAQlB,QAAM,OAEL,kIACA,CAAE,OAAQ,EAA2B,WAIvC,MACA,EAGF,MAAM,GAAS,GAAI,GACnB,KAAK,KAAM,EACX,KAAO,KAEP,GACA,GACD,EAED,CAA+B,aAC9B,OACC,UADI,QAAO,GAIZ,EAAO,EAAK,kBAAkB,IAC9B,EAED,CAYqC,aACpC,OAAO,GACL,IAAK,kBAA2B,GAAsB,EADjD,GAEL,OAAQ,kBAAqB,CAAC,CAAC,CACjC,EACD,IAtHmC,uDACnC,MAAM,EACN,KAAM,EAAS,KACf,QAAM,EAAU,GAChB,KAEA,KAAM,EAAqB,EAC3B,GAAM,EAA2B,EACjC,GAAM,EA6F0B,WAC/B,IAAuB,MADkB,eAGzC,WAAuC,mDAAU,WAC3C,MAAC,EACL,OAAe,KAEhB,aAPwC,qEASzC,OAAO,GAAe,OAAS,EAC/B,IAED,CAzGuB,CAEvB,MAAK,EAaJ,IAAM,GAGN,8GAAI,MAAO,EAAU,CAAE,QAEvB,IAAO,QAAQ,OAAQ,cAAmB,EAAU,CAAE,QACtD,IAED,OAAO,SAAQ,IAAK,EAAmB,IAAK,IAC1C,KAAM,iBAAM,EAEd,EAsFD,qBAOyB,aACxB,MAAK,SAAS,IAAK,EAEnB,GAAK,EACJ,iBAAK,SAAS,IAAK,EAAkB,WAEtC,sBA/MmB,kpBCErB,iiBARA,eACA,gBACA,gBACA,gBACA,mBAEA,UAQqB,eAQE,eAAS,0EACvB,EAEP,aAAK,SACL,eAAK,KAAK,UAAY,MACtB,UAAK,GAAK,gBAA2B,cAAyB,EAQ9D,WAAK,iBAAmB,MAAxB,QACA,CAED,YAhBA,uCAuBU,OACT,iBACA,2BAAK,iBAEL,UAAO,KAAK,GAAG,UACb,KAAM,kGACR,EAED,yBAmBwB,aAAS,OAChC,WAAO,IAAI,SAAS,WACnB,IAAM,GAAS,MAAU,EAEzB,KACC,EAAO,cACL,KAAM,iBAAM,GAAO,iBAAiB,QAAS,EAAS,EAAO,GAAG,KAAK,QADvE,GAEE,KAAM,iBAAM,GAAO,GAAG,MAFxB,GAGE,KAAM,iBAAM,GAAO,KAAM,UAH3B,GAIE,KAAM,iBAAM,GAAO,QAAQ,KAAK,cAAe,EAAO,GAAG,KAAK,gBAJhE,GAKE,KAAM,iBAAM,GAAO,2BALrB,GAME,KAAM,UACN,GAAO,KACP,eAAO,KACP,QATF,GAUE,KAAM,iBAAM,EAEf,GACD,+BA5EmB,gLCVrB,mSAJA,iBACA,eACA,mBAOqB,YAOpB,CAAqB,eAAO,QAI3B,QAAK,OAKL,OAAK,KAKL,OAAK,iBAAmB,cAKxB,QAAK,aAAe,MAGpB,UAAK,IAAK,QAAS,EAAO,OAAO,IACjC,eAAK,IAAK,SAAU,EAAO,OAAO,IAGlC,gBAAK,QAAQ,KAAM,YAAa,GAAI,KAAK,aACzC,eAAK,QAAQ,eAAiB,EAG9B,WAAM,GAAc,EAAO,QAAQ,WACnC,SAAK,SAAS,KAAM,cAAe,GACnC,KAAK,SAAS,KAAM,aAAc,GAAI,EAAO,QAC7C,QAAK,SAAS,KAAO,EACrB,cAAK,aAAa,IAAK,EACvB,gBAED,yCAKO,OACN,KAAM,EAAS,KAEf,aAAO,MAAK,KAAK,OACf,KAAM,UACN,OAAO,GAAK,KAAK,QAAQ,eAAgB,EAAO,OAAO,IAAK,WAAa,EACzE,iBAHK,GAIL,KAAM,UACN,eACC,QAAQ,EAAO,QACf,wBAAoB,EACpB,oCAAwB,EACxB,mBAAS,EAAK,KAEf,SACF,EAED,kCAMC,OAAO,MAAK,KACZ,6BAzEmB,kpBCJrB,mSALA,iBACA,gBACA,gBACA,iBAQqB,cAMP,aAAS,QAGrB,kEAMA,aAAK,QAAU,cAEf,aAAS,OAAQ,EAAK,QAAQ,SAC7B,YACC,OAUF,yBAAK,SAAW,cAEhB,KAAK,IAAI,IAAK,EACd,WAAK,KAAK,IAAK,EAAK,UACpB,CAED,YA7BA,6CAiCC,OAAO,MAAK,SACZ,oCAxCmB,kLCUrB,+TArBA,eACA,cAEA,gBAEA,gBACA,OAEA,kBACA,OAEA,kBAEA,cACA,cAEA,gBACA,gBACA,gBACA,mBAcqB,YAOpB,CAAoB,iBAAgB,oBAOnC,QAAK,MAQL,QAAK,UASL,QAAK,OAAS,MAed,aAAK,YAAc,cAA+B,KAAK,MACtD,QAAQ,KAET,cAAK,YAAY,GAAI,eAAgB,KAArC,cAAmD,CAAE,SAerD,gBAAK,YAAc,cAClB,QAAQ,GAQT,cAAK,YAAY,GAAI,OAAQ,KAA7B,eAA4C,CAAE,SAC9C,gBAAK,YAAY,GAAI,UAAW,KAAhC,0BAA0D,CAAE,SAC5D,gBAAK,YAAY,GAAI,mBAAoB,KAAzC,0BAAmE,CAAE,SAErE,gBAAK,GAAI,gBAAwB,eAAP,OAAiB,iBAAqB,GAAK,QAAS,GAAK,UAAW,GAAK,MACnG,QAAK,GAAI,gBAAwB,eAAP,OAAiB,cAAe,GAAK,UAAW,GAAK,MAAO,GAAK,QAC3F,QAAK,GAAI,kBAA0B,eAAP,OAAiB,iBAAuB,GAAK,UAAW,GAAK,QACzF,QAAK,GAAI,qBAA6B,eACrC,IAAK,QAAU,cAAoB,GACnC,UACD,EAED,wCAOyB,+DAExB,aAAO,MAAK,UAAW,KAAK,MAAM,QAClC,IAED,0BAUW,YAEV,IAAM,IAAuB,KAAK,OAGlC,UAAO,MAAK,UAAU,OACtB,GAED,uBAUQ,YACP,IAAM,IAAa,UAAW,SAE9B,IAAM,GAAuB,MAC7B,oBAAK,OAAO,aAAc,GAE1B,SAAK,YAAY,iBAEjB,SAAK,OAEL,gBACA,EAED,oBAUK,YAA0B,uEAE9B,OAAM,GAAY,KAAK,MAAM,QAE7B,SAAK,MAAM,eAAgB,UAG1B,IAAK,MAAM,UACX,qBAAK,MAAM,UAGX,qBAAK,MAAM,MAAO,eAChB,OAAQ,UAAW,SAAU,KAC7B,OAAQ,UAAc,SAAU,GAAW,GAAK,GAAK,MACvD,IACD,EAED,sBAUO,YAA0B,+DAEhC,QAAM,GAAuB,KAAK,UAAU,OAG5C,UAAO,MAAK,QAAS,GACrB,GAED,wBAeS,YAA2C,+DACnD,cAAO,MAAK,YAAY,QAAS,GAAuB,CAAE,QAAS,CACnE,KAED,kCAGY,CAEZ,8BASmC,kBAClC,MAAK,KAAM,gBAAiB,CAAE,QAAF,GAAW,UAAX,GAAsB,MAClD,IAED,8BAgBiC,kBAChC,MAAK,KAAM,gBAAiB,CAAE,MAAF,GAAS,UAAT,GAAoB,QAChD,IAED,gCAO4B,eAC3B,MAAK,KAAM,kBAAmB,CAAE,UAAF,GAAa,QAC3C,IAED,mCAOoB,YACnB,IAAM,IAAU,CAAE,UAElB,gBAAK,KAAM,qBAEX,IAAO,GACP,2BAxQmB,EA2QrB,cAAK,IAqCL,yFC5UA,CAuDyC,iBACxC,IAAM,GAAc,EACpB,OAAM,EAAY,EAIlB,UAAK,GAOL,GAAM,EAAsB,MAAvB,EAAwB,EAOxB,QAAC,EAAkB,EAQxB,UAAW,UAAS,YACpB,KAAS,UAAS,aAElB,GAAK,EACJ,UAAM,OAUN,IAAK,CAAC,EAAO,QACZ,MAAM,KAAM,EAKb,KAAM,MAQP,IAAQ,EAAO,OAAO,SACrB,IAAM,GAAiB,EAEvB,SAAS,UAAS,aAElB,KAAM,OACN,EAGD,GAAe,EAAO,EACtB,IAEkC,eAClC,IAAM,GAAgB,EAAI,OAAO,MAAO,CAAE,KAAM,QAAS,OACzD,IAAM,EAAqB,EAAI,OAAO,MAAO,CAAE,KAAM,YAAa,OAElE,UAAO,CAAC,GACR,CAOD,CACoC,eACnC,IAAM,GAAS,EAAQ,KAAK,SAC5B,OAAM,EAAe,cAAW,EAAS,GAFK,eAI9C,WAAqB,EAAa,0DAAc,YAC/C,MAAK,EAAO,QAAQ,IAAK,EAAM,KAAK,OAAU,EAAO,OAAO,IAAK,EAAM,KACtE,MAED,iBAR6C,oEAU9C,CACA,Q,oDAvIuB,QAA0B,aAAsB,2DACvE,UAAK,EAIL,gBAAM,GAAW,EAEjB,gBAAM,EAAW,EACjB,MAAM,EAAS,UAAa,mBAAoB,EAG3C,QAAC,EAAS,MAAM,WAAY,EAChC,QAAM,OAWP,GAAK,EACJ,SAAe,EAAO,EAGvB,KAAU,SAIV,GAAK,EAAqB,EAAM,SAAU,GACzC,IAAM,GAAY,cAClB,eAAM,OAAQ,EAEd,KAAU,SACV,EAED,GACA,SAGD,EA3DA,iBACA,cACA,cACA,+LCcA,mSAjBA,iBACA,gBACA,gBACA,OAIA,SACA,SAOA,mBAOqB,YAMpB,CAAa,aAAQ,mBAOpB,QAAK,MAQL,OAAK,KAAO,MAQZ,aAAK,OAAS,MAiBd,aAAK,YAAc,cAA+B,KAAK,MACtD,QAAQ,KACR,qBAAe,KAAK,KAUrB,iBAAK,UAAY,OAAO,SAGxB,cAAK,UAAU,SAAU,KAAK,MAAO,SAAuB,eAC3D,GAAK,YAAY,cAAe,EAChC,EAFD,EAEG,CAAE,SAGL,aAAK,UAAU,SAAU,KAAK,MAAO,cAAe,UACnD,IAAM,GAAY,EAAK,MAEvB,YAAK,YAAY,iBACjB,KAAK,KACL,QALD,EAKG,CAAE,SAGL,aAAK,UAAU,SAAU,KAAK,MAAM,QAAS,MAAc,aAC1D,GAAK,YAAY,cAAe,YAAa,EAAO,KAAM,EAC1D,WAED,QAAK,UAAU,SAAU,KAAK,MAAM,QAAS,SAAiB,aAC7D,GAAK,YAAY,cAAe,eAAgB,EAAO,KAAM,EAC7D,WAGD,QAAK,UAAU,SAAU,KAAK,KAAM,kBAAmB,6BAAwB,KAAK,MAAO,KAG3F,cAAK,YAAY,GAAI,eAAgB,KAArC,cAAmD,CAAE,SACrD,gBAAK,YAAY,GAAI,SAAU,KAA/B,UAAyC,CAAE,SAG3C,aAAK,YAAY,GAAI,YAAa,KAAlC,mBAAqD,CAAE,SACvD,aAAK,YAAY,GAAI,YAAa,KAAlC,sBAAwD,CAAE,SAC1D,aAAK,YAAY,GAAI,YAAa,KAAlC,yBAA2D,CAAE,SAC7D,aAAK,YAAY,GAAI,YAAa,KAAlC,6BAA+D,CAAE,SACjE,OAED,qCAkBY,WAAyB,8DACpC,OAAM,EAAW,KAAK,KAAK,WAAY,EACvC,GAAM,EAAY,KAAK,MAAM,QAE7B,eAAK,OAAO,aAAc,EAE1B,GACA,CAED,kCAKC,MAAK,KACL,eAAK,UACL,mCAlImB,kFChBrB,CA6F6B,aAC5B,IAEA,YAAM,KAAM,EAAM,SAAU,CAAE,UAE7B,cACC,IAAK,kBAAQ,WAAM,SAAU,EAI9B,GACC,OAAQ,WAER,IAAM,GACL,CAAE,EAAU,MAAM,QAAS,EAAM,QAAW,EAAU,MAAM,QAAS,EAAM,UACzE,EAAU,IAAI,SAAU,EAAM,MAAS,EAAU,IAAI,QAAS,EAEjE,YACA,EAfF,GAgBE,QAAS,WACT,GAAe,KAAM,EAAU,MAE/B,qBACA,EAIF,KAAe,QAAS,WACvB,QAAI,GAEJ,IAAQ,EAAO,QAAU,EAClB,WAAc,UAAM,SAE1B,KAAS,EAET,oBAED,EACD,E,oDArHuB,QAAoB,WAC3C,IAAM,GAAO,MACb,QAAM,EAAQ,EAEd,mBAAK,CAAC,GAAS,EACd,kBAGD,MAAM,GAAO,EAAM,MACnB,KAAM,EAAa,EAAM,MAAM,cAAe,EAC9C,KAAM,EAAe,EAAK,cAe1B,GAEA,IAAK,EAAM,MAAM,QAAU,EAAM,IAEhC,OAEA,EAAmB,UAAM,4BACxB,EAAc,EAAM,MAAM,KAAM,EAAW,QAC3C,EAAc,EAAM,IAAI,KAAM,EAAW,QAI3C,MAAM,GAAU,EAAiB,IAAI,OAAS,EAAiB,MAE/D,OAvCuD,eAwCvD,WAAoB,EAAiB,SAAU,CAAW,2DAAW,SACpE,MAAK,EAAK,GACT,eAAK,eAAgB,cAAU,EAAK,KAAM,EAE1C,oBAAK,eAAgB,EAkBvB,mBA9DuD,oEA+DvD,IAAK,GAAoB,EAExB,IAAM,GAAW,EAAM,sBAAuB,EAAiB,MAAO,UAAS,SAAU,EAAM,GAAK,GAEpG,GAAM,EAAkB,cAAW,UAAS,SAAU,GAAQ,EAC9D,OAAM,EAAmB,cAAW,EAAS,IAAK,UAAS,SAAU,EAErE,UACA,KACA,EAED,OACA,EAGD,EAlGA,gBACA,cACA,cACA,eACA,yLCEA,mSAVA,MA0BwB,QAAmD,iBACrE,CACJ,MAAQ,EAAe,MAGnB,SAAC,EACL,eAAe,cAAe,EAAW,EACxC,CAIF,cAAM,GAAY,GAAI,GAAW,EAAgB,EAAO,EAExD,QAEA,IAAK,EAAQ,GACZ,oBAAgB,EAEhB,cAAgB,CAGjB,KAAU,YAAa,EAGtB,CACA,WAGD,eAAM,GAAW,EAGjB,oBACC,IAAU,UAAW,CAUrB,cAAI,KAEL,qFAED,EApEA,eACA,gBACA,cACA,cACA,kBAqEM,YACL,CAAoC,iBAAW,QAM9C,QAAK,eAOL,OAAK,MAOL,OAAK,SAaL,OAAK,aAAe,GAAI,KAAK,CAAE,KAAK,SAOpC,cAAK,OAAS,EAAe,MAC7B,MAED,sCAOoB,aACnB,GAAQ,MAAM,KAEd,OAAM,GAAI,GAAI,IAAG,EAAI,EAAM,OACpB,MAAO,EAEb,QAAK,YAAa,EACjB,SAAe,CAAN,MAAW,EACpB,eAAU,IAAQ,EAAM,OAAS,GAAS,EAG5C,QAED,4CAOC,OAAK,MACJ,aAAO,UAAM,SAAU,KAGxB,cAAO,KAAK,eAAe,MAAM,yBAA0B,KAC3D,SAED,4BAQmB,aAIlB,IAAK,KAAK,eACT,GAQD,iBARM,cAAe,EAEpB,MAMK,GAAY,KAAK,gCAAiC,EAEnD,SACJ,aAKI,QAcL,QAAK,iBAAkB,EACvB,cApBM,sBAAuB,EAK7B,EAiBD,8BAIqB,aAEpB,CAAK,KAAK,gCACT,QAAK,QAIL,QAAK,qBAAsB,EAE5B,EAED,sCAI6B,aAE5B,CAAK,EAAK,GACT,gBAAK,YAAa,EAAK,cAIvB,QAAK,qBAAsB,EAE5B,EAED,wBAGS,WAER,IAAK,CAAC,KAAK,gBAAiB,EAAM,CAAE,KAAK,SAGxC,SAQD,sBARK,MACH,mFACA,CAAE,KAAF,EAAQ,SAAU,KAGnB,cAGK,GAAU,UAAa,mBAAoB,KAEjD,eAAK,MAAM,OAAQ,KAAK,SAExB,QAAK,SAAW,UAAS,mBACzB,KAGA,cACM,aADD,KAAK,eAAgB,IAAU,CAAC,KAAK,OAAO,MAAO,CAAE,KAAM,QAAS,OAAQ,CAAE,KAAK,SACvF,UAEK,EAEN,IAED,iCAIwB,aACvB,CAAK,GAAG,eAIR,YAAM,GAAY,EAAQ,SAAa,EAAK,6BAA1B,SAAkE,KAAK,aAAa,IAAK,EAC3G,iBAAM,EAAa,EAAQ,QAAY,EAAK,yBAAzB,SAA6D,KAAK,aAAa,IAAK,EACvG,aAAM,EAAe,UAAa,aAClC,GAAM,EAAgB,UAAa,YAEnC,MAAK,EACJ,IAAM,GAAW,UAAa,mBAAoB,KAElD,eAAK,MAAM,MAEX,QAAK,SAAW,UAAS,mBACzB,KACA,QAED,IAAK,EAEC,CAAC,KAAK,SAAS,QAInB,cAAI,MAKL,sGAAK,SAAW,UAAS,SAAU,EAAc,WAIjD,UAAM,GAAW,cAAkB,KAAK,SAAS,KAAM,KAAK,SAAS,KAErE,yBAAK,MAAM,MAEX,QAAK,SAAW,UAAS,mBACzB,KACA,QAED,GACA,WACA,SAED,qCAM4B,aAC3B,IAAM,GAAY,cAKlB,aAAK,KAAK,cAAe,EAAW,KAAK,SAAS,SAAY,KAAK,gBAAiB,EAAM,CACzF,QAAU,eAEV,QAAK,YAAa,EAEnB,GAED,gDAKiC,WAChC,IAAM,GAAY,KAAK,cAAe,EAAM,KAAK,SAEjD,WAAK,CACJ,EAGD,cAAQ,GAAa,KAAK,SAAS,QAElC,IAAK,KAAK,OAAO,OAAO,IAAK,KAAK,SAAS,OAC1C,MAGD,YAAK,KAAK,SAAS,UAClB,IAAM,GAAS,KAAK,SACpB,YAAK,SAAW,UAAS,aAIzB,GAAK,EACJ,cAAK,MAAM,OAEZ,EATD,KASO,IAAK,KAAK,SAChB,aAAK,SAAW,UAAS,YAAa,KAAK,SAC3C,YACA,IAAM,GAAU,UAAS,YAAa,KAAK,SAE3C,aAAK,MAAM,MAAO,KAElB,eAAK,SAEL,OAAK,aAAa,IAAK,KAAK,SAC5B,UACD,CAED,CACA,QAED,8BAOqB,aACpB,OAAK,MAAK,gBAAiB,EAAM,CAChC,IAGD,EAAK,EACJ,OAAO,KAAK,cAAe,EAAM,EAGlC,QACA,IAED,gCAMuB,aACtB,OAAO,MAAK,OAAO,MAClB,MAAM,KAAK,mBACX,cAAY,MAAM,KAAM,EACxB,2BAED,GAED,+BAKgB,WACf,OAAO,MAAK,OAAO,QAAQ,IAAK,KAAK,mBACrC,GAED,mCAKoB,WACnB,OAAK,GAAK,GACT,QAGD,QAAO,EACP,8FClaF,CA4D+B,eAG9B,IACC,MADI,IAAM,WACH,GAAoB,EAAK,OAAQ,EAIzC,SAAK,EAAM,OAAU,EAAK,UAAY,eAAiB,cAEtD,IAAK,EAAK,OAAO,QAAQ,IAAK,EAAM,KACnC,YAAO,WAAS,SAAU,EAAM,KAAM,EAAK,UAAY,QAIxD,aAAK,EAAK,OAAO,MAAO,CAAE,KAAM,QAAS,OAAQ,EAChD,qBAAO,GAER,YACD,KAGC,IAAK,EAAK,OAAO,OAAO,IAAK,EAAM,KAElC,MAMD,cANM,OAAO,KAAM,WAAM,QAExB,MAII,EAAK,OAAO,MAAO,CAAE,KAAM,QAAS,OAAQ,EAChD,qBAAO,GAER,YACD,CAGD,CACqC,eACpC,IAAM,GAAW,EAAO,SAExB,YACC,SAAM,GAAO,EACb,KAAI,EAAS,EAAO,SAAS,OAAS,EAEtC,YAAQ,4BAAuB,EAAM,IAAsB,WAAR,KAAuB,6BAAwB,EACjG,MAEA,SAAS,EAAO,SAAS,OAAS,EAIpC,kBAAO,GACP,SAE+B,eAC/B,IAAM,GAAO,EACb,KAAM,EAAY,UAAS,SAAU,EAAM,EAAY,MAEvD,SACC,GAAO,cAAW,EAElB,GAAO,cAAW,EAEnB,E,oDAhGuB,QAAiC,aAA0B,+DAClF,MAAM,EAAS,EAAe,MAC9B,OAAM,EACN,UADkB,IAAQ,UACpB,EAAO,EAAQ,KAAO,EAAQ,KAEpC,YAAM,EAAQ,EACd,MAAM,EAAS,cACd,YAAY,EAAgB,EAC5B,GACA,8BAAW,EAAY,UAGxB,aAAM,EAAO,CAAE,OAAF,EAAU,OAAV,EAAkB,UAAlB,EAA6B,KAE1C,GAEA,EAAU,EAAO,EAAO,QACvB,IAAK,EACJ,KAGD,UAAM,GAAW,EAAgB,EAAM,EAEvC,UACC,EAID,cAJW,SAEV,EAGF,CAED,EAhEA,eACA,eACA,cACA,uICDA,mSAFA,mEA+EqB,YAIpB,aAAc,QAOb,QAAK,YAAc,GAanB,UAAK,mBAAqB,GAC1B,IAED,8BAcW,aACV,CAAK,eACJ,YAAO,KAAK,uBAGR,IAAC,KAAK,YAAY,IACtB,SAAK,YAAY,IAAK,EAAM,GAG7B,WAAK,YAAY,IAAK,GAAO,IAC7B,KAED,wBAee,aACd,OAAK,gBACJ,YAAO,KAAK,uBAGb,MAAK,KAAK,KAAM,EACf,UAAK,YAAY,IAAK,GAAO,IAM9B,SAED,qBAgBY,aACX,CAAK,eACJ,YAAO,KAAK,uBAGb,OAAM,GAAkB,KAAK,YAAY,IAEzC,MACC,iBAGD,SAAM,GAAQ,EAAgB,IAE9B,SACC,YAGD,KACA,CAED,uBAgBc,aACb,CAAK,eACJ,YAAO,KAAK,uBAGb,OAAM,GAAO,KAAK,KAAM,EAExB,SACC,aAAK,YAAY,IAAK,GAAO,IAGvB,UAIP,QACA,IAED,uCAUwB,WACvB,IAAI,GAEJ,KAAM,EAAW,KAAK,mBAAmB,IAAK,EAE9C,gBAAK,EACJ,IAAM,GAAS,EAAS,IAAK,EAE7B,WACC,MAAS,EAAO,IAAK,EAEtB,QAEI,OACJ,OAAS,KAAK,uBAAwB,EAAU,YAAa,EAAU,UAAW,EAGnF,SACA,CAED,uCAWoC,eACnC,IAAM,GAAS,OACf,mBAAI,EAEJ,WAAW,KAAK,mBAAmB,IAE9B,GACJ,MAAW,GACX,UAAK,mBAAmB,IAAK,EAG9B,MAAS,EAAS,IAEb,GACJ,MAAS,GACT,OAAS,IAAK,EAGf,MAAO,IAAK,EAEZ,GACA,qBAtNmB,mFC5DL,uBAAuC,aACtD,OAAc,cACb,IAAM,GAAgB,EACtB,aAAM,EAAiB,MAEvB,QAAe,KAJQ,eAMvB,WAAyB,EAAc,0DAAc,SACpD,QAAO,KAAM,EAAO,aACpB,YARsB,oEAUvB,GAAe,UAAW,EAAQ,EAE7B,YAAC,EAAe,QAAS,EAC7B,cAAc,eAAgB,UAC7B,GAAc,UAAU,MACxB,EAEF,EACD,CA1CD,EAOA,8DAEA,qFCEA,oDAegB,iCACf,OAAgC,kBAE/B,IAAK,CAAC,EAAK,QAAU,EAAW,QAAS,EAAK,MAAO,CAAQ,UAC5D,IAAM,GAAoB,EAAc,gBAAiB,EAAK,MAAO,EAErE,KAAK,OAAS,cAA2B,qBACzC,GACD,CACD,CAED,IAKgB,sBACf,OAAgC,kBAC/B,IAAM,GACL,MACA,eAAQ,EAGT,SAAK,EAAc,OAAO,MACzB,IAAK,EAAW,QAAS,EACxB,WAAK,OAAS,cAAe,EAAK,MAGpC,MACD,C,EAvDD,gBACA,eACA,iTCKA,mSAHA,gBACA,iBAyBqB,YAIpB,aAAc,QAUb,QAAK,aAAe,GACpB,IAED,8BA0Bc,aACb,IAGA,SAAK,GAAQ,GAAI,SAAY,EAAQ,GACpC,8BAAK,aAAa,IAMd,WAAC,KAAK,aAAa,IACvB,KAGqB,KAAK,aAAa,IAGxC,MANsB,GACrB,QAAK,aAAa,IAAK,EAEvB,MAGkB,IACnB,GAED,qBA6Be,aACd,IAAM,GAAqB,KAAK,aAAa,IAE7C,SACC,YAID,KAAK,EAAQ,GAAI,SAAY,EAAQ,GACpC,oBAID,EAAO,EAAmB,KAC1B,EAED,wBA4BkB,aACjB,SAAK,KAAK,KAAM,EACf,KAAK,EAAQ,GAAI,SAAY,EAAQ,GAEpC,yBAAK,aAAa,IAGlB,WAAK,aAAa,IAAK,GAAU,QAOnC,MAED,uBA4BiB,aAChB,IAAM,GAAqB,KAAK,aAAa,IAE7C,GACC,aAAK,EAAQ,GAAI,SAAY,EAAQ,GAEpC,yBAAK,aAAa,IAGlB,QAAmB,OAGrB,GAED,yCAQ+B,WAC9B,IAAM,GACL,CACA,QACA,aACA,SAGD,UAAM,EAAa,EAAQ,mBARa,eAUxC,WAAyB,gDAAa,UAErC,MAAkB,OAAb,KAIL,OAJ6B,QAIjB,UAAU,KACtB,YAjBuC,qEAmBxC,IAAM,GAAU,EAAQ,gBAnBgB,eAqBxC,WAAyB,gDAAU,SAClC,QAAY,MAAM,KAClB,YAvBuC,qEAyBxC,IAAM,GAAS,EAAQ,gBAzBiB,gBA2BxC,YAAqB,oDAAS,WAC7B,QAAY,MAAM,KAClB,aA7BuC,yEA+BxC,OACA,EAED,2BAWyB,aACnB,IACJ,MAAW,GAGZ,IAAK,EAAK,GACT,iBAAS,IAET,GAID,EAAK,EAAK,GACT,cAAS,IAAK,EAAM,EAAe,uBAGpC,IAAK,EAAK,GACT,uBAAS,IACT,MAlBkC,gBAoBnC,WAAqB,EAAK,4DAAgB,SACzC,QAAW,EAAe,WAAY,EACtC,WAtBkC,oEAwBnC,OACA,QAGF,cApRqB,KA0Rf,aAKL,aAAc,QAOb,QAAK,gBAQL,UAAK,aACJ,WAAW,GACX,WAAO,GACP,WAAO,GAER,KAED,8BAqBK,WACJ,KAIM,GAAM,KAJP,GACJ,YAGD,oBAAoB,KACnB,aAAK,IACJ,SAAK,KAAM,EAAM,EAGnB,GAED,qBAoBM,WAEL,IAAK,EAAY,MAAQ,CAAC,KACzB,sBAAO,MAGR,oBAAM,GAAM,KAAQ,MACnB,gBAAK,IAAQ,GACZ,IAAM,GAAQ,KAAK,MAAO,EAAM,EAEhC,OACC,aAED,EAIF,CACA,QAED,wBAkBS,WACR,KAIM,GAAM,KAJP,GACJ,YAGD,oBAAoB,KACnB,aAAK,IACJ,SAAK,SAAU,EAAM,EAGvB,GAED,uBAiBQ,WACP,KAIM,GAAM,KAJP,GACJ,YAGD,oBAAoB,KACnB,aAAK,IACJ,SAAK,QAAS,EAAM,EAGtB,GAED,qBAUY,aACX,IAAM,GAAQ,cAAS,GAAS,EAAO,CACvC,GAAM,EAAc,KAAK,aAAc,GAFrB,eAIlB,WAAoB,qDAAQ,QAC3B,MAAc,WAAT,OAAmC,OAAT,MAM9B,OANkD,WAM5C,eAGP,wFAAY,IACZ,KAfiB,8EAgBlB,CAED,sBASa,aACZ,IAAM,GAAQ,cAAS,GAAS,EAAO,CACvC,GAAM,EAAc,KAAK,aAAc,GAFpB,eAInB,WAAoB,gDAAQ,YAC3B,MAAc,WAAT,OAAmC,OAAT,MAA6B,OAAT,MAElD,IAAM,GAAQ,KAAK,MAAO,cAAW,KAAK,aAAc,GAExD,aACC,aAED,EAPD,KAQC,IAAM,GAAQ,EAAY,IAE1B,MACC,iBAGD,SAAK,CACJ,EAED,QACD,UAvBkB,oEAyBnB,CACA,QAED,yBAOgB,aACf,IAAM,GAAQ,cAAS,GAAS,EAAO,CACvC,GAAM,EAAc,KAAK,aAAc,GAFjB,eAItB,WAAoB,gDAAQ,SAC3B,MAAc,WAAT,OAAmC,OAAT,MAE9B,OAFkD,WAE7C,SAAU,cAAW,KAAK,aAAc,GAE7C,YAAY,IAEb,cAXqB,oEAYtB,CAED,wBAOe,aACd,IAAM,GAAQ,cAAS,GAAS,EAAO,CACvC,GAAM,EAAc,KAAK,aAAc,GAFlB,eAIrB,WAAoB,gDAAQ,YAC3B,MAAc,WAAT,OAAmC,OAAT,MAE9B,OAFkD,WAE7C,QAAS,cAAW,KAAK,aAAc,GAC5C,cACA,IAAM,GAAQ,EAAY,IAE1B,GACC,UAAY,IAEb,KACD,UAfoB,oEAgBrB,yLCnjBF,CAkQ0C,aACzC,IAAM,GAAe,GACrB,KAAM,EAAU,GAGhB,KAAM,EAAS,cACd,eAAe,UAAc,SAAU,EACvC,GAGD,sBAVqD,iBAWrD,YAAqB,oDAAS,WAE7B,MACC,SADI,KAAM,KAAK,QACF,IAAK,GAIpB,eAlBqD,kGAmBrD,YAAqB,wDAAe,WACnC,MAAM,GAAa,GAAM,aACzB,aAAM,GAAkB,UAAc,aAGjC,IAAC,EAAQ,IACb,MAGQ,IAAK,IAAa,IAAM,UAAc,mBAI/C,MAPS,IAAK,GAAY,cAAgB,UAAc,mBAGvD,mBAIO,UAAW,SACnB,IAjCoD,uFAmCrD,OACA,EAkCD,mSArVA,iBACA,cACA,cACA,eACA,eACA,eACA,OAEA,eACA,cACA,eACA,kBAsFqB,YAQpB,aAAkC,wEAMjC,QAAK,cAAgB,KAAQ,YAI7B,QAAK,cAAc,YAAc,KAAK,aAAa,KACnD,WAAK,cAAc,gBAAkB,KAAK,iBAAiB,KAC3D,KAED,kCAcS,WAAgC,2DACxC,WAAK,KAAM,cAEX,MAAM,GAAa,UAAe,WAClC,GAAI,GAAmB,KAAK,aAAc,EAAU,EAI/C,SACJ,KAIK,GAAiB,GACtB,yBAAmB,cAA2B,CAI/C,SAAiB,QAAU,EAE3B,IACA,IAZQ,MAIH,OAUN,6BAIqB,aAAkC,2DACtD,MAAM,GAAO,KAAQ,YAAI,EACxB,OACA,SAGD,aAAK,GAAM,GACV,gBAAK,KAAM,WAAa,EAAM,KAAM,GAAM,EAAY,KAChD,eAAK,EAAM,GACjB,aAAK,KAAM,OAAQ,GAAM,EAAY,KAErC,oBAAK,KAAM,mBAAoB,GAAM,EAAY,KAIlD,eAAK,GAAK,QAAU,EAAG,GAAK,6BAA+B,GAAK,oBAS/D,oBAAI,KAAM,oFAAqF,CAAE,EAAO,GAExG,SAGD,MAAO,GACP,MAED,iCAIyB,aAAkC,mEAE1D,MAAM,GAAe,MAAM,KAAM,EAKjC,eAAM,GAAoB,GACxB,IAAK,mBAAa,GAAK,aAAc,GAAW,EAAY,GADpC,GAExB,OAAQ,mBAAa,0BAAkC,gBAA/C,OAFgB,GAGxB,OAAkB,eAClB,OAAO,IAAO,OACb,GAAS,GAAI,oBAAuB,MAAM,KAAM,GAAS,eAE1D,GAGF,YAAO,eACP,GA0CD,oBA/JoB,EAuKrB,cAAK,IAML,kIC5QA,uSAMqB,qDACpB,gBAMS,WACR,IAAM,GAAM,SAAS,eAAe,mBACpC,IAAM,EAAY,EAAI,cACtB,gBAAU,YAEV,GAAO,EACP,6BAbmB,mFCFrB,iBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,wGCdA,CA2FkC,iBACjC,IAAM,IAAmB,GACzB,QAAM,GAAgB,GAAiB,WAEvC,SAAK,IACJ,cAAc,SAAW,GAAc,SAAS,sBAAuB,IAGxE,IAAK,GACJ,cAAc,SAAW,GAAc,SAAS,sBAAuB,IAGxE,IAAO,CACP,IAsVqD,iBACrD,CAsCS,aACR,IAAM,IAAQ,cACb,GAAgB,SAAS,aAAc,IACvC,GAAgB,SAAS,aAG1B,KAAM,GAAgB,cAAwB,GAAO,GAAe,IAAK,GAAK,GAAe,MAC7F,MAAuB,aACvB,GACD,KAnCM,GAZA,IAAyB,MAC/B,QAAM,GAAQ,GAGd,MAAI,GAAM,GAAM,QAAS,GAAI,aAAc,GAI3C,KAAI,GAEJ,EAAI,GAAY,GAAM,QAAS,GAE/B,WAAU,GAAI,EAAG,GAAI,GAAM,OAAQ,KAClC,IAAM,IAAO,GAAM,QACnB,IAAM,GAAc,GAAK,aAAc,GAIvC,KAAK,IAGJ,KAAK,IAAO,GACX,OAGD,QACA,MAGW,QAAY,GACxB,UAID,OAEA,MAEA,EAYD,CACS,YACR,IAAM,IAAU,MAGhB,kBAAQ,aAAc,cAEtB,IACA,E,CA1fD,iBAIA,cACA,cAEA,eACA,eACA,eACA,gBAEA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBAEA,sBAxBM,GAAwB,UAC9B,sBAAM,GAAmB,UA2BzB,iBACA,wBAAgE,kBAG/D,IAAM,IAAS,GAAkB,GAAG,GAEpC,UAAK,IAAE,MAAM,iBAAkB,GAC9B,cAAO,KAAM,EAA4B,GAG1C,KACA,EAED,GACA,wBAA2D,kBAC1D,IAAM,IAAgB,cAAc,GAAE,SAAS,KAAM,GAAE,SAAS,KAAK,MAAO,EAAG,CAE/E,IAAM,GAAS,GAAkB,GAAG,GAAG,IAHiC,kBAKxE,YAAyB,GAAE,8DAAa,eAGvC,MAAK,GAAU,MAAM,iBAAkB,KAAmB,GAAU,MAAM,MAAM,QAAS,IACxF,IAAM,IAA2B,MAEjC,QAAM,GAAa,GAAc,aACjC,GAAM,GAAW,UAAS,mBAC1B,OAAS,KAAK,KAEd,MAAM,IAAW,GAAE,gBAAgB,MAAM,QAAS,GAAI,aAAc,GAEpE,QAAyB,aAAc,cACtC,cAAW,GAAY,IACvB,GAAU,IACG,YAAY,KAAO,GAChC,GAAU,SAIX,OAAO,KAEP,IACA,KACD,WA7BuE,4EA+BxE,OACA,GAED,GACA,uBAAwD,kBAIvD,OAAK,IAAE,SAAS,QAAS,GACxB,UAAO,CACN,GAAE,cACF,GAIF,SAAO,GAAkB,GAAG,GAC5B,GAZD,GA6BA,wBAAgD,GAChD,uBAAgD,GAChD,wBAA+C,GAC/C,wBAAiD,GACjD,uBAA+C,GAC/C,wBAEA,GACA,uBAAsD,kBAKrD,IAAM,IACL,GAAE,eAAe,MAAQ,GAAE,SAAS,MAGrC,MAFC,kBAAe,GAAE,eAAe,gBAAiB,GAAE,SAAS,iBAEvD,GAAuB,GAAE,eAAe,QAAU,GAAE,SAAS,QAAU,GAAE,eAAe,OAAS,GAAE,QAAU,GAAE,SAErH,aAAK,KACJ,GAAO,CACN,GAAE,cACF,GAIF,SAAO,GAAkB,GAAG,GAC5B,GAED,GACA,uBAAwD,kBAGvD,OAAK,IAAE,SAAS,QAAS,GACxB,UAAO,CAGR,KAAO,GAAkB,GAAG,GAC5B,GAED,GACA,uBAAsD,kBAIrD,IAAM,IACL,GAAE,SAAS,MAAQ,GAAE,eAAe,MAGrC,MAFC,kBAAe,GAAE,SAAS,gBAAiB,GAAE,eAAe,iBAEvD,GAAuB,GAAE,eAAe,QAAU,GAAE,SAAS,QAAU,GAAE,eAAe,OAAS,GAAE,QAAU,GAAE,SAErH,aAAK,KACJ,GAAO,CAGR,KAAO,GAAkB,GAAG,GAC5B,GAED,GACA,yBAAuD,kBACtD,IAAM,IAAQ,GAAE,SAChB,gBAAM,GAAQ,GAAE,SAGhB,mBAAsC,MAAjC,iBAAe,GAAO,IAC1B,IAAK,GAAE,SAAS,QAAU,GAAE,SAE3B,aAAO,CACP,KAAM,GAAK,GAAE,SAAS,OAAS,GAAE,SAAS,OAK1C,IAAM,IAAQ,GACd,kBAAM,eAAe,QAAU,GAAE,SAAS,OAAS,GAAE,SAGrD,OACC,GAAE,sCACF,GAAE,6BADF,SAEA,GAAE,gBAAgB,eAAe,OAAS,GAAE,gBAAgB,eAE5D,WAAM,gBAAgB,eAGvB,SAAO,CACP,GAKA,IAAM,IAAQ,GAEd,kBAAM,gBAAgB,SACtB,YAAM,eAAe,eAAe,KAAM,GAAM,eAAe,eAAe,KAAK,OACnF,QAAM,eAAe,eAAe,KAAM,GAAM,eAAe,eAAe,KAAK,OACnF,QAAM,eAAe,eAAe,OAAS,GAAE,SAAS,OAAS,GAAE,SAGnE,OACC,GAAE,sCACF,GAAE,6BADF,SAEA,GAAE,gBAAgB,eAAe,OAAS,GAAE,gBAAgB,eAE5D,WAAM,gBAAgB,eAGvB,SAAO,CAER,GAED,OAAO,IAAkB,GAAG,GAC5B,GAED,GACA,yBAAwD,kBAGvD,OACC,MADI,kBAAe,GAAE,SAAS,KAAM,GAAE,SAAS,iBACxC,CAGR,KAAO,GAAkB,GAAG,GAC5B,GAED,GACA,yBAAsD,kBAIrD,IAAM,IACN,MAD4B,kBAAe,GAAE,SAAS,gBAAiB,GAAE,MAAM,MAAM,iBAC/E,GAAuB,GAAE,MAAM,MAAM,OAAS,GAAE,SAAS,QAAU,GAAE,MAAM,IAAI,QAAU,GAAE,SAEjG,UAAK,IACJ,SAAO,CACP,KAAM,GAA0F,MAArF,kBAAe,GAAE,SAAS,gBAAiB,GAAE,MAAM,IAAI,aAAc,CAAC,GAAI,MAIrF,IAAM,IAAQ,GAOd,QAAM,GAAe,UAAS,mBAAoB,GAAE,MAGpD,UAAa,KAAK,KAAM,GAAE,QAG1B,MAAM,IAAY,GAAa,aAC/B,MAAM,gBAAgB,SAKtB,MAAM,IAAY,UAAS,mBAE3B,OAAU,KAAK,KAAM,GAAE,SACvB,WAAM,eAAe,eAKrB,MAAM,IAAY,UAAS,mBAC3B,cAAU,KAAK,KACf,MAAM,eAAe,eAErB,GAAO,CACP,GAED,OAAO,IAAkB,GAAG,GAC5B,GAED,GACA,wBAAwD,eACvD,IAAI,GAEJ,WAAM,IAAgB,cAAc,GAAE,SAAS,KAAM,GAAE,SAAS,KAAK,MAAO,EAAG,CAE/E,OAAK,GAAE,6BAAP,QAEC,IAFmD,mBAGnD,YAAyB,GAAE,8DAAa,eACvC,MAAK,GAAU,MAAM,iBAAkB,KAAmB,GAAU,MAAM,MAAM,QAAS,IACxF,CACC,IADI,MAAU,YAGZ,gBAAgB,MAAM,QAAS,GAAI,gBAAiB,GAGvD,QALG,gBAAgB,MAAM,QAAS,GAAI,aAAc,GAAU,IAAK,GAElE,UAID,KACD,WAbkD,4EAcnD,CAED,OAAO,CACP,GAED,GACA,yBAAwD,kBAGvD,IAAsE,MAAjE,kBAAe,GAAE,SAAS,KAAM,GAAE,SAAS,iBAC/C,IAAM,IAAc,CACnB,GAAE,cACF,GAID,mBAAa,GAAI,WAAY,GAAI,eAAe,KAMhD,KACA,EAED,OAAO,IAAkB,GAAG,GAC5B,GAED,GACA,wBAA6D,eAE5D,IAAM,IAAS,CAAE,GAEjB,eAAK,IAAE,MAAM,iBAAkB,GAC9B,cAAO,KAAM,EAA4B,GAG1C,KACA,EAED,GACA,yBAAsD,kBAIrD,IAAM,IACN,MAD4B,kBAAe,GAAE,MAAM,MAAM,gBAAiB,GAAE,SAAS,iBAC/E,GAAuB,GAAE,MAAM,MAAM,OAAS,GAAE,SAAS,QAAU,GAAE,MAAM,IAAI,QAAU,GAAE,SAEjG,UAAK,IACJ,SAAO,CACN,GAAE,cACF,GAED,SAAM,GAA0F,MAArF,kBAAe,GAAE,SAAS,gBAAiB,GAAE,MAAM,IAAI,aAAc,CAAC,GAAI,MACrF,IAAM,IAAQ,GAGd,kBAAM,iBAAiB,SAGvB,YAAM,eAGN,aAAM,eAAe,eAAe,KAAM,GAAM,eAAe,eAAe,KAAK,OAEnF,KAAO,CACP,GAED,OAAO,IAAkB,GAAG,GAC5B,GAED,GACA,yBAAwD,kBACvD,IAAM,IAAgB,cAAc,GAAE,SAAS,KAAM,GAAE,SAAS,KAAK,MAAO,EAAG,CAE/E,IAAM,GAAS,GAAkB,GAAG,GAEpC,OAAK,GAAE,WAAY,GAAI,SAAS,QAAS,IAGxC,IAAM,IAAwB,GAC9B,WAAsB,WAAY,GAAI,SAAW,GAAE,WAAY,GAAI,SAAS,aAE5E,MAAO,KACP,GAED,OACA,GAED,GACA,yBAAqD,eACpD,IAAI,GAEJ,WAAM,IAAgB,cAAc,GAAE,SAAS,KAAM,GAAE,SAAS,KAAK,MAAO,EAAG,CAE/E,UAAK,IAAE,6BAGN,SAAK,GAAE,WAAY,GAAI,SAAS,QAC/B,SAAE,gBAAgB,MAAM,QAAS,GAAI,KAAO,GAAE,WAAY,GAI5D,SAAO,CACP,GAED,GACA,yBAAwD,kBACvD,IAAM,IAAS,GAAkB,GAAG,GACpC,IAAM,GAAiB,GAAE,gBAEzB,SAJqE,kBAKrE,YAAqB,yDAAS,0CAC7B,YAAyB,GAAM,iEAAa,WAC3C,MAAM,GAAW,GAAU,eAAe,aAAc,GAExD,SAAK,GAAS,QACb,SAAU,SAEX,EAP4B,uFAQ7B,CAboE,uFAerE,OACA,GAED,GACA,yBAAwD,kBACvD,IAAI,GAEJ,WAAM,IAAiB,GAAE,gBAAgB,SAH4B,kBAKrE,YAAyB,GAAE,iEAAa,WACvC,MAAM,GAAW,GAAU,eAAe,aAAc,GAExD,SAAK,GAAS,QACb,SAAU,SAEX,EAXoE,uFAarE,OAAO,IAAkB,GAAG,GAC5B,GAGD,mpBCxbA,CAuG8C,mBAC7C,IAAM,GAAM,EACZ,SAAM,EAAQ,GAEd,GAAM,EAAY,cAAqB,EAAM,EAAU,EAAU,EAAI,QAAS,EAE9E,WAAM,SACN,KAAM,aACN,KAAI,eACJ,qSAtHD,gBACA,eACA,OACA,iBACA,iBAQqB,0IACpB,qBAIC,OACA,QAED,2CAOC,OACA,EAED,oCAIC,OACA,0CAGF,mBA1BqB,EA4CrB,eAAU,YAAqC,aAC9C,IAAM,GAA8B,QAAvB,QAAO,GAA2B,EAAe,EAC9D,KAAM,EAAgB,KAAK,SAAS,QAAQ,IAE5C,MAAK,CAAC,GAAY,CAMjB,OAAM,eAGP,sFAAM,GAAe,EAAgB,EAAc,WAE9C,WAGJ,KAGc,KAAM,EAAM,EAG3B,KANe,KAAM,EAAM,KAG1B,GAID,IAED,GAOA,eAAU,eAA0B,WACnC,IAAM,GAA8B,QAAvB,QAAO,GAA2B,EAAe,EAE9D,QAAK,CAAC,KAAK,SAAS,QAAQ,IAM3B,QAAM,eAGP,iFAAM,GAAW,KAAK,SAAS,QAAQ,IAAK,GAE5C,oBAAc,KAAM,EAAM,EAE1B,MACA,IAjBD,GA8BA,UAAa,SAAU,0LCnGvB,CAmamC,cAClC,IAAM,IAAW,GAEjB,YAAK,GACJ,IAAM,IAAO,GACb,KAAM,GAAS,GAAc,OAAS,GAEtC,kBAAO,CAAC,6BAAuB,GAAM,KAAY,CAAC,8BAAwB,GAC1E,GAED,CACA,QAQD,CACoC,iBAApC,6FACK,GAAO,UADZ,MAGU,GAHV,iBAIE,IAAO,OAEF,GANP,gBAOS,IAPT,GAOgB,GAAS,OAEhB,GAAK,KATd,gBAUI,OAAO,eAVX,EAYK,QACA,SAAO,GAAK,WAbjB,OAkBO,GAlBP,iBAmBS,IAnBT,GAmBgB,GAAQ,OAEf,GAAK,KArBd,iBAsBI,OAAO,eAtBX,GAwBK,QACA,SAAO,GAAK,WAzBjB,qE,kUAxcA,iBADA,gBAGA,cACA,cACA,gBACA,eACA,gBACA,gBACA,gBACA,eACA,gBACA,eACA,cACA,gBACA,iBACA,kBAybU,gCAvbJ,GAEN,aAaqB,aAKpB,cAAc,oBAUb,SAAK,QAOL,OAAK,OAAS,MAUd,aAAK,QAAU,cAQf,WAAK,QAAU,MAQf,aAAK,UAAY,cAQjB,WASA,wBAAK,MAAQ,GAGb,UAAK,UAAU,GAAI,eAAgB,UAAM,uBACxC,YAAqB,GAAK,UAAU,+DAAc,eACjD,MAAK,CAAC,GAAK,wBAOV,SAAM,QACL,iHAAuE,CAAE,MAE3E,cAZuC,4EAaxC,CAGD,QAAK,WAAY,QACjB,GAED,mBAUA,uBAQgB,YACf,IAAK,GAAU,cAAgB,KAO9B,aAAM,gBACL,sGACA,CAAE,UAGJ,QAAM,IAAU,GAEhB,gBAEA,eAAK,QAAQ,SAAU,GAEvB,OAEC,SAAK,KAAM,SAAU,GAAU,KAAM,GAAS,GAAU,MAAM,MAAO,GAAU,MAEhF,KAED,sBAMO,YACN,OAAO,eAAW,KAClB,GAED,qCASuD,iIACtD,UAAK,KAAK,MAAM,IAQf,SAAM,gBACL,kFACA,CAAE,KAIJ,QAAM,IAAO,cAAiB,KAAM,GACpC,gBAAK,MAAM,IAAK,GAEhB,IACA,EAED,kCAIC,MAAK,UACL,eACA,eAED,+BAWgB,YACf,SAAK,gBAAgB,KAErB,IAAoC,CAA/B,OAAK,gBAAgB,OACzB,MAAQ,KAAK,gBACZ,aAAK,gBACL,UAAK,gBAGN,aAAK,KACL,cACD,CAED,kCAMyB,+DACxB,UAAK,CAAC,KAAK,MAAM,IAOhB,SAAM,gBACL,kFACA,CAAE,KAIJ,WAAO,MAAK,MAAM,IAClB,GAED,wBAMS,YACR,OAAO,MAAK,MAAM,IAClB,GAED,uCAMC,OAAO,OAAM,KAAM,KAAK,MAAM,QAAS,OAAQ,mBAAQ,KAAQ,EAC/D,EAED,yCAmB0B,YAA+B,+DAExD,UAAK,KAAK,OAAO,MAAO,CAAE,KAAM,QAAS,OACxC,WAAO,eAGR,OAAI,IAEJ,IAAkB,MAAb,MACJ,UAD2B,WACV,cAAgB,CAAE,cAAe,GAAU,UAG7D,eAAkB,MAAb,MACJ,SAD2B,WACX,cAAgB,CAAE,cAClC,SAduD,mBAgBxD,YAAoB,EAAgB,GAAgB,0DAAkB,WACrE,MAAM,GAAS,GAAK,QAAU,GAAiB,aAC/C,eAAM,GAAQ,GAEd,SAAK,GAAM,MAAQ,IAAQ,KAAK,OAAO,QAAQ,IAAK,GAAM,KACzD,YAAO,WAAM,SAAU,GAGxB,SAAK,KAAK,OAAO,MAAO,CAAE,KAAM,QAAS,OAAQ,GAChD,qBAAO,eAAW,GAEnB,aA3BuD,uFA6BxD,OACA,KAED,iCAMC,IAAM,IAAO,cAGb,gBAAK,UAEL,+BACA,EAED,0CAOkB,uBACjB,YAAoB,KAAK,MAAM,4DAAW,eACzC,MAAK,KAAS,KACb,gBAED,aALgB,4EAOjB,OAAO,MACP,SAED,2CAQC,IAAM,IAAc,KAGpB,kBAAM,GAAW,cACjB,QAAM,GAAe,KAAK,yBAG1B,UAAO,KAAgB,cACvB,GAED,wCAQyB,YACxB,OAAO,GAA0B,GAAM,QAAW,EAA0B,GAC5E,IAuCD,kCA3SC,OAAO,MAAK,QACZ,wBA/FmB,GAgZrB,eAAK,KAGL,4PCrbA,mSAFA,kEAYqB,YAIpB,aAAc,QAOb,QASA,gBAAK,eAAiB,GACtB,IAED,mCAKU,WACT,IAA+B,CAA1B,GAAM,WAAW,QAAc,CAAC,KAAK,eAAe,IAAK,EAAM,aACnE,IAAM,GAAQ,KAAK,QAEnB,YAAK,QAAS,GACd,OAAK,eAAe,IAAK,EAAM,YAC/B,EACD,CAED,kEASa,0DAAO,EAAG,sDAAY,kHAEL,CAAxB,QAAK,QAAQ,qDAKd,M,EAAY,KAAK,UAErB,GACkB,CAAC,CAAd,0DAKG,EAAY,KAAK,QAAQ,wBAC1B,I,EAAQ,KAAK,QAAS,OAEvB,EAAM,aAAe,uEAIpB,qEAIR,0BAQU,WACT,IAAI,GAAQ,KAAK,eAAe,IAEhC,MACC,iBAGD,SAEA,UAAM,EAAO,EAAQ,KAAK,QAAQ,OAAQ,IACzC,IAAM,GAAQ,KAAK,QAEnB,MAAK,EAAM,aACV,EAGD,QAAO,KACP,EAED,OAAyB,EAAlB,KAAO,OAAe,KAC7B,CAED,4BAea,WACZ,MAAK,YACL,KAED,4BAW0B,aAAgB,IACnC,GAAS,KAAK,SAGpB,GAHA,KAQA,IALK,SAJoC,gBAUzC,WAAqB,gDAAgB,SACpC,QAAM,YAGP,UAdyC,oEAezC,SAAK,SAAQ,gBAAQ,KAAK,UAAW,GAAe,EAAO,iBAG3D,QAAM,GAAW,EAAc,OAAS,EAAO,OAlBN,eAoBzC,WAAmB,KAAK,eAAe,qDAAS,SAC/C,MAAK,EACJ,QAAK,eAAe,IAAK,EAAK,KAAK,eAAe,IAAK,GAExD,WAxBwC,oEAyBzC,EAED,0BAMW,WACV,IAAM,GAAQ,KAAK,eAAe,IAGlC,MAAe,WACd,IAAM,GAAY,KAAK,QAAS,KAAK,QAAQ,OAC7C,GAAM,EAAkB,EAAU,YAAc,EAAU,WAE1D,UAAmB,CAAd,IAAmB,GAGvB,QAAO,CAQR,OAAM,eACN,mFAED,OACA,sBA5LmB,kpBCDrB,CA2nB8B,aAC7B,OAAK,yBAA6B,eACjC,QAAO,EAGR,gBACA,I,2gCA5oBD,aACA,cACA,gBACA,eACA,eACA,gBACA,cACA,eAEA,kBAEM,EAEN,aAAM,EAAc,GAIpB,0HAoBqB,cAMP,cAAW,QAGvB,8DAMA,iBAAK,UAYL,MAAK,mBAAqB,GAI1B,QAAK,SAAU,GAAK,UAAW,SAAiB,eAC/C,CAAK,EAAY,IAChB,QAED,qBAJD,GAKA,EAED,YAhCA,aA8DA,0BAIC,KAAM,GAAI,IAAI,EAAG,GAAI,KAAK,QAAQ,OACjC,UAAK,QAAS,IAGf,cACA,eAED,sJAIM,KAAK,QAAQ,gMAGX,KAAK,UAAU,gEAIvB,yCAIC,OAAO,+FAAyB,KAAK,UACrC,kBAED,uCAIC,OAAO,8FAAwB,KAAK,UACpC,kBAED,yBAGU,YAA4B,6DACrC,0FAAgB,GAChB,SACA,mBAED,0CAIC,0FACA,WACA,mBAED,0BAGW,YAAoC,6DAC9C,2FAAiB,GACjB,SACA,mBAED,6BAGmB,eAElB,IAAK,KAAK,aACT,CADwB,QAAK,OAAO,OAAO,iBACtC,gBAAiB,GAGvB,IAAK,KAAK,cAAe,GAAK,IAEvB,MACD,KAAM,mBAAoB,CAAE,cADX,CACtB,IACA,iBACD,CAED,gCAGiB,YAEhB,IAAK,KAAK,aACT,CADwB,QAAK,OAAO,OAAO,iBACtC,uBAGN,IAAK,KAAK,iBAAkB,IAErB,MACD,KAAM,mBAAoB,CAAE,cADX,CACtB,IACA,iBACD,CAED,gCAGiB,YAChB,IAAQ,cAER,IAAK,KAAK,aACT,CADwB,QAAK,OAAO,OAAO,iBACtC,uBAGN,OAAM,IAAU,KAAK,iBAErB,OAAoB,CAAf,IAAQ,KAEZ,IAAM,IAAgB,MAAM,KAC5B,SAAK,KAAM,mBAAoB,CAAE,cAAF,GAC/B,iBACD,CAED,0CAIC,MACA,mBAED,4CAIC,MACA,qBAED,QAcA,4BAIC,MAAK,QAAQ,MACb,QAED,2BAGY,YACX,IAAM,IAAY,KAAK,cAGvB,IACC,SAAK,QAAQ,KAEd,GAED,8BAQe,YAAQ,QACtB,QAAK,EAAG,gBAMP,cAAM,eAGP,iGAAK,GAAM,MAAQ,KAAK,UAMvB,UAKD,sBALK,KAEJ,iHAGI,YAEL,OAAM,IAAY,UAAU,gBAC5B,gBAAK,SAAU,GAAW,SAAiB,eAC1C,CAAK,GAAU,MAAQ,GAAK,UAC3B,cAAK,uBAAwB,GAG9B,OAAK,KAAM,eAAgB,CAC3B,iBAED,GACA,EAED,kCAOmB,YAClB,IAAM,IAAgB,cAAO,KAC7B,6BAAM,GAAgB,cAAO,KAE7B,oBAEC,QAAK,mBAAqB,GAC1B,UAAK,OAAS,GACd,SACA,IADM,mBAEN,YAAiC,KAAK,yEAAqB,2CAC1D,GACC,KADI,YACC,OAAO,OACZ,SAAK,mBAAmB,OAEzB,IAPK,uFAQN,CAED,MAAK,iBAGL,UAGA,OAxB6B,kBAyB7B,YAAoC,KAAK,sEAAkB,2CAC1D,GAAM,GAAc,IAAK,GAApB,EAAgC,GAAc,IAAK,MACvD,OAAQ,KAET,GAED,WA/B6B,mGAgC7B,YAA0B,yDAAgB,kCACpC,GAAC,KAAK,aACV,QAAQ,KAET,GAED,WAtC6B,4EAuC7B,CACC,CADI,IAAQ,aACP,KAAM,mBAAoB,CAAE,cAAe,GAEjD,iBAED,QAWA,sBAWoB,eAA6B,4DAChD,MAAM,GAAW,GAAe,SAEhC,SAAiB,KAAZ,MAEJ,QAFyB,OAAK,mBAAmB,IAAK,IAKvD,YAAM,+FAGN,UAAK,MAIL,UAAK,OAAO,IAAK,GAGjB,SAAK,mBAAmB,IAAK,GAG7B,OAED,iCAWkB,YAA2B,4DAC5C,MAAM,GAAW,GAAe,SAEhC,YAAiB,KAAZ,MAMA,QANqB,OAAK,mBAAmB,IAAK,oGAUvD,WAAK,OAAO,OAGZ,SAAK,mBAAmB,IAAK,GAG7B,OAED,iCAUkB,YAA6B,4DAC9C,MAAM,GAAU,GAAI,KAD0B,kBAG9C,YAAoC,KAAK,sEAAkB,2CAE1D,GAAK,GAAM,IAAK,MAKhB,IAAK,KAAK,iBAAkB,GAC3B,QAAQ,IAET,GAb6C,8GAe9C,YAA8B,yDAAQ,2CAErC,GAAM,GAAW,KAAK,cAAe,GAAK,GAE1C,IACC,OAAQ,IAET,GAtB6C,uFAwB9C,OACA,GAED,sLAOO,M,GAAkB,KAAK,mBAAmB,SAE3C,KAAK,aAA8C,CAA/B,MAAgB,iEACrB,GAAgB,wFAAvB,I,YACyB,CAA/B,MAAI,QAAS,oBACX,O,IAAU,GAAI,OAAQ,EAAY,mBAElC,CAAE,GAAS,GAAgB,aAAc,qWAMnD,wCAMwB,YACvB,IAAM,IAAW,EAAc,sBAE/B,SAAK,UAAU,QAAQ,gBAAiB,KAAK,OAAO,OACpD,GAED,gCAOsB,eACrB,IAAM,IAAW,EAAc,sBAE/B,SAAK,UAAU,QAAQ,aAAc,KAAK,OAAO,OAAQ,GACzD,GAED,uCAMwB,YACvB,IAAM,IAAkB,KAAK,OAC7B,OAAM,GAAQ,KAAK,UAAU,QAFE,kBAI/B,YAA0B,KAAK,6EAAyB,kCACvD,GAAM,GAAW,EAAc,sBAE/B,OAAM,gBAAiB,GACvB,GAR8B,8GAU/B,YAA8B,yDAAQ,2CACrC,GAAM,GAAW,EAAc,sBAE/B,OAAM,aAAc,GAAiB,GACrC,GAd8B,uFAe/B,CAED,oDASC,IAAM,IAAW,KAEjB,mBAAI,GAEJ,QAAK,CAAC,KAAK,YAEV,IAAM,IAAQ,KAEd,gBAJwB,kBAKxB,YAAoB,sDAAQ,YAG3B,MAAkB,MAAb,KAAK,MACT,IAD2B,UACnB,GAAK,KAEd,0BAXuB,4EAYxB,CAZD,KAeC,IAAM,IAAa,GAAS,SAAW,GAAS,SAAW,GAC3D,WAAM,GAAY,GAAS,SAAW,GAAS,SAAW,GAG1D,gBAAQ,EAGH,IACJ,QAAQ,EAIT,KAAK,CACJ,UAAI,IAEJ,GAAQ,IAAQ,CACf,OAAO,GACP,mBAAQ,EAKV,OAAK,CACJ,UAAI,IAEJ,GAAQ,IAAQ,CACf,OAAO,GACP,eAAQ,EAKL,IACJ,QAAQ,KAET,uBAED,OACA,GAED,uCAOiC,eAChC,IAAM,IAAS,GAAQ,MAEvB,KAAM,GAAgB,GAAS,MAAM,KAAK,QAAW,GAAO,OAC5D,GAAM,GAAU,GAAS,MAAM,KAAK,MAAO,EAC3C,OAAS,GAAQ,OAAS,IAAO,GAEjC,MAAM,IAAc,cAAc,GAAS,KAC3C,IAAI,GAAiB,KAAK,UAAU,yBAG/B,IACJ,QAAiB,cAAW,cAAc,GAG3C,eAAM,IAAW,KAAK,cACtB,IAAM,GAAQ,KAAK,QAAQ,QAC3B,OAEA,cAAK,QAAQ,OAAQ,GAAO,EAC5B,uCA3iBA,IAAM,IAAS,KAAK,QAEpB,aAAsB,EAAf,iFACP,KAED,+BAIC,OAAO,6EAAgB,KAAK,UAAU,mBACtC,KAED,8BAIC,OAAO,4EAAe,KAAK,UAAU,mBACrC,KAED,mCAIC,OAAO,MAAK,QAAQ,OAAS,KAAK,QAAQ,OAC1C,uCAsI2B,YAC3B,IAAM,IAAY,GAAI,MAAM,GAC5B,qBAAU,MAEV,IACA,wCA0H6B,YAC7B,OAAO,GACP,YAuRF,mBAhmBqB,gLC9BrB,mSAPA,iBACA,cACA,cACA,cACA,cACA,iBAYqB,YAIpB,aAAc,QAOb,QAAK,SAAW,GAChB,IAED,kBAKE,OAAO,yBACR,OAAO,MAAK,SACZ,QAED,oBAMK,WACJ,OAAO,MAAK,SAAS,IACrB,EAED,oBAOK,WACJ,OAAO,MAAK,SAAS,IAAK,IAC1B,IAED,oBAcmB,aAClB,IAAM,GAAa,YAAwB,GAAS,EAAa,KACjE,EAAM,EAAY,KAAK,SAAS,IAEhC,MAAK,EACJ,IAAM,GAAW,EAEjB,cAAK,EAAS,QACb,SAGD,QAAK,OACL,EAED,IAAM,GAAY,UAAU,gBAC5B,GAAM,EAAS,GAAI,GAAQ,EAE3B,eAAK,SAAS,IAAK,EACnB,QAAK,KAAM,OAAS,EAEpB,GACA,CAED,uBAMQ,WACP,IAAM,GAAa,YAAwB,GAAS,EAAa,KACjE,EAAM,EAAY,KAAK,SAAS,IAEhC,WACC,SAAK,SAAS,OACd,QAAK,KAAM,UAAY,EAEvB,QAAK,eAMN,MAED,6DAMwB,2IACD,sEAAV,I,WACN,EAAO,WAAW,iBAAkB,qCAClC,4UAKT,mCAGU,oBACT,WAAsB,KAAK,SAAS,uDAAW,SAC9C,WAAK,eACL,WAHQ,oEAKT,MAAK,SAEL,UACA,eAED,wDAamB,2IACI,KAAK,SAAS,0EAAxB,I,WACN,EAAO,KAAK,WAAY,EAAS,uCAC/B,4UAKT,gCAMgB,WACf,GACA,kBAAO,WACP,WAAO,WACP,IASD,oBA1KoB,EAkLrB,cAAK,IAEL,YA4BM,aAOL,CAAmB,eAAY,QAO9B,QAAK,KAQL,OAAK,WAEL,OAAK,WAAW,SAAU,UAAW,GACrC,KAED,6CAMC,IAAK,CAAC,KAML,gBAAM,eAGP,mEAAO,WAAS,mBAAoB,KAAK,WACzC,MAED,iCAMC,IAAK,CAAC,KAML,gBAAM,eAGP,mEAAO,WAAS,mBAAoB,KAAK,WACzC,IAED,mCAaC,IAAK,CAAC,KAML,gBAAM,eAGP,mEAAO,WAAM,gBAAiB,KAC9B,WAED,UAeD,cAAK,I,uLC7TL,mSAXA,gBACA,eACA,gBACA,eACA,eACA,eACA,gBACA,eACA,gBACA,mBAEmB,KACnB,EAAY,UAAmB,qBAC/B,EAAY,UAAgB,qBAC5B,EAAY,UAAgB,qBAC5B,EAAY,UAAc,qBAC1B,EAAY,UAAY,qBACxB,EAAY,UAAU,qBACtB,EAAY,UAAkB,qBAC9B,EAAY,UAAgB,qBAC5B,EAAY,UAAgB,qBAC5B,EAAY,UAAuB,aAEnC,WAKqB,2DACpB,iBAOuB,aACtB,OAAO,GAAY,EAAK,aAAc,SAAU,EAChD,sBAVmB,kFCjBrB,CA+jBsB,aACrB,OAAO,CAAE,EACT,QAGD,CAC0C,eACzC,KAAM,GAAI,GAAI,EAAG,EAAI,EAAW,OAC/B,MAAY,GAAI,YAAc,EAAc,EAG7C,QACA,EAED,CACsC,eACrC,OACA,KADO,KAAE,eAAe,0BAA2B,EAAE,eAAgB,EAAE,QAKxE,CACqB,aACpB,OACC,EADI,KAAO,OAEL,KACN,CADW,IAAO,OACX,EAEP,MAAQ,GAAI,IAAM,EAAQ,EAAO,OAAS,GAE1C,IAAO,EAER,G,kDA1mBD,gBACA,eACA,gBACA,gBACA,gBACA,eACA,eACA,eACA,cACA,oBA6Ce,QAweW,eACzB,IAAI,GAEJ,GAAK,eACJ,UAAQ,EACF,gBAAK,eACX,UAAQ,EACF,mBAAK,eACX,UAAQ,EACF,uBAAK,eACX,UAAQ,EACF,gBAAK,eACX,UAAQ,EACF,gBAAK,eACX,UAAQ,EAER,iBAGD,EACC,IAAK,eACJ,WAAY,EACN,gBAAK,eACX,WAAY,EACN,mBAAK,eACX,WAAY,EACN,uBAAK,eACX,WAAY,EACN,gBAAK,eACX,WAAY,EACN,gBAAK,eACX,WAAY,EAEZ,iBAIF,MAAM,IAAc,GAAW,EAAG,EAElC,SAAO,GAAoB,EAAE,YAC7B,GAGD,EAjhBA,GAAM,GACL,iBAGC,CAHgB,gBAGO,eAEtB,IAAM,IAAc,EAGpB,kBAAY,SAAW,GAAY,SAAS,2BAA4B,EAAE,SAAU,EAAE,MAAM,UAAW,CAEvG,GAAO,CACP,GAED,qBAEA,yBAEA,kBAEA,kBAIA,EAvBgB,cAuBK,eACpB,IAAM,IAAc,EAGpB,kBAAY,SAAW,EAAE,SAAS,sBAAuB,EAAE,eAAgB,EAAE,eAAgB,EAAE,QAAS,CAAC,EAAU,EAEnH,UAAO,CACP,GAGF,sBAEC,CAFmB,gBAEC,aAEnB,IAAM,GAAS,EAAE,MAAM,2BAA4B,EAAE,SAAU,EAAE,MAGjE,uBAAO,GAAO,UAAU,IAAK,YAC5B,OAAO,eAAwB,GAAO,EAAE,IAAK,EAAE,SAAU,EAAE,SAAU,EACrE,YACD,EAID,EAdmB,mBAcO,eACzB,IAAK,EAAE,MAAQ,EAAE,IAIhB,IAAM,IAAa,EAAE,MAAM,cAAe,EAAE,OAAQ,IAAK,YACxD,OAAO,eAAwB,GAAO,EAAE,IAAK,EAAE,SAAU,EAAE,SAAU,EACrE,YAGD,GAAM,GAAS,EAAE,MAAM,gBAAiB,EAExC,aAIC,MACC,KAAW,KAAM,cAAwB,GAAQ,EAAE,IAAK,EAAE,SAAU,EAAE,SAAU,EAC1E,cACN,CADW,MAAW,WACX,KAAM,cAInB,KACA,EAEA,OAAO,CAAE,EAEV,QAED,yBAEA,kBAEA,kBAGA,EAnDmB,cAmDD,aAEjB,IAAM,GAAS,UAAM,2BAA4B,EAAE,eAAgB,EAGnE,SAKA,MAAK,wBAAgC,EAAE,qBACtC,EAAE,MAAM,MAAQ,EAAE,eAAe,MAAQ,EAAE,MAAM,MAAM,KAAM,IAAO,EAGpE,yBAAI,EACJ,UAAE,MAAM,MAAM,KACd,OAAE,MAAM,IAAI,KAMb,SAAM,IAAa,EAAY,EAAE,MAAM,cAGvC,IAAM,GAAS,EAAE,MAAM,gBAEvB,SAKC,KALI,WAKO,MAAQ,GAAW,MAAM,0BAA2B,EAAE,eAAgB,EACjF,YAAW,IAAM,GAAW,IAAI,0BAA2B,EAAE,eAAgB,EAO7E,YAAS,GAAW,2BAA4B,EAAE,qBAAsB,EAAiB,eAG1F,WAIC,IAJI,WAIG,MAAQ,GAAO,MAAM,aAAc,EAAE,eAAgB,EAC5D,yBAAO,IAAM,GAAO,IAAI,aAAc,EAAE,eAAgB,EAExD,yBAAO,KAIR,KAAO,GAAO,IAAK,YAClB,OAAO,eAAwB,GAAO,EAAE,IAAK,EAAE,SAAU,EAAE,SAAU,EACrE,YACD,EAGF,0BACC,iBAEA,qBAIA,EAPuB,uBAOO,eAC7B,OAAK,GAAE,OAAS,EAAE,MAAQ,EAAE,MAAQ,EACnC,KAAO,GAAE,WAAa,EAAc,UAAC,IAAc,EAAE,WAAa,EACjE,SAIK,CAAE,EACT,SALS,CAAE,cAAiB,EAI5B,aAGD,kBAEA,kBAEA,gBAGD,mBAEC,CAFgB,gBAEI,aAEnB,IAAM,GAAQ,EAGd,iBAAM,SAAW,EAAM,SAAS,2BAA4B,EAAE,SAAU,EAAE,MAE1E,cAAO,CACP,EAED,qBAEA,yBAIA,EAlBgB,gBAkBO,eAEtB,IAAM,IAAQ,EAEd,WAAK,EAAE,SAAS,QAAS,EACxB,aACC,KAAM,QAAU,EAEhB,mBAAO,CAAE,cAAiB,EAI5B,oBAAO,CACP,GAED,kBAGA,EApCgB,cAoCE,aACjB,IAAM,GAAQ,EACd,QAAM,GAAW,EAAM,SAAS,QAAS,EAEzC,yBAAM,SAAW,EAAM,SAAS,sBAAuB,EAAE,eAAgB,EAAE,eAAgB,EAAW,WAEtG,IAAO,CACP,EAGF,mBAEC,CAFgB,gBAEI,aAEnB,IAAM,GAAQ,EAEd,cAAK,GACJ,aAAM,SAAW,EAAM,SAAS,2BAA4B,EAAE,SAAU,EAAE,MAAwB,iBAGnG,IAAK,EACJ,aAAM,SAAW,EAAM,SAAS,2BAA4B,EAAE,SAAU,EAAE,MAAwB,iBAGnG,IAAO,CACP,EAED,qBAEA,yBAEA,kBAIA,EAzBgB,gBAyBO,eAEtB,IAAM,IAAQ,EAEd,WAAK,EAAE,MAAQ,EACd,QACC,KAAM,SAAW,EAEjB,oBAAO,CAAE,cAAiB,EAI5B,oBAAO,CACP,GAGD,EAzCgB,cAyCE,aAEjB,IAAM,GAAQ,EAEd,WAAK,EAAM,SACV,IAAM,IAAY,EAAM,SAAS,sBAAuB,EAAE,eAAgB,EAAE,eAAgB,EAC5F,WAAM,SAAW,UAAM,iBACvB,GAED,IAAK,EAAM,SACV,IAAM,IAAY,EAAM,SAAS,sBAAuB,EAAE,eAAgB,EAAE,eAAgB,EAC5F,WAAM,SAAW,UAAM,iBACvB,GAED,OAAO,CACP,EAGF,iBAGC,CAHc,gBAGS,eAEtB,IAAI,IAAQ,UAAM,2BAA4B,EAAE,eAAgB,EAChE,YAAQ,GAAM,2BAA4B,EAAE,SAAU,EAAE,MAAiB,aAAO,EAAE,UAElF,MAAM,IAAS,GAAI,GAAE,YACpB,GAAM,MACN,GAAM,IAAI,OAAS,GAAM,MAAM,OAC/B,uBACC,EAAE,YACF,EAAE,eAAe,2BAA4B,EAAE,SAAU,EAAE,MAAM,UAAW,CAAC,GAC9E,eAA+B,eAAY,EAG5C,uBAAO,SAAW,EAElB,SAAK,eACJ,aAAO,oBAAsB,EAC7B,uBAAO,qBAAuB,EAG/B,sBAAO,CACP,GAED,qBAEA,yBAEA,kBAEA,kBAIA,EArCc,cAqCO,eAIpB,IAAK,EAA0B,EAAG,IAAO,EAA0B,EAGlE,SAAO,CAAE,EAMV,kBAAK,wBAAgC,EAAE,oBACtC,GAAI,EAEJ,WAAM,IAAgB,EAAE,eAAe,KACvC,GAAM,GAAgB,EAAE,eAAe,KAOvC,GAAK,EAAE,eAAe,MAAQ,EAAE,eAC/B,OAAK,GAAgB,EAAE,sBAAwB,IAAiB,EAC/D,yBAAE,eAAe,KAInB,KAAK,EAAE,eAAe,MAAQ,EAAE,eAC/B,OAAK,GAAgB,EAAE,sBAA0B,IAAiB,EAAE,sBACnE,MAAE,eAAe,KAGnB,IAID,CAAK,wBAAgC,EAAG,eACvC,SACM,KAAK,EAAG,eAAH,UAAqC,eAChD,UAID,SAAM,IAAS,UAAM,2BAA4B,EAAE,eAAgB,EACnE,SAAM,GAAS,UAAM,2BAA4B,EAAE,eAAgB,EAGnE,SAGA,MAAM,GAAa,EAAY,GAAO,cAEtC,KACC,QAAW,MAAQ,GAAW,MAAM,sBACnC,EAAE,eACF,EAAE,eACF,EAAE,QACF,CAAC,EAGF,gBAAW,IAAM,GAAW,IAAI,sBAC/B,EAAE,eACF,EAAE,eACF,EAAE,QACF,EAID,gBAAO,KAIR,QAAM,IAAS,GAAO,gBAStB,IAAM,GAAS,cAAe,EAAE,eAAe,gBAAiB,EAAE,eAIlE,iBAAM,GAAc,GAAO,iBAAkB,EAAE,iBAC5C,GAAO,MAAM,QAAS,EAAE,iBAAoB,EAAE,UAC9C,GAAO,IAAI,QAAS,EAAE,iBAAoB,EAQ7C,SAAM,GAAY,GAAO,cAAe,MAEtC,GAAO,iBAAkB,EAAE,iBAC3B,GAAO,MAAM,QAAS,EAAE,iBACxB,GAAO,IAAI,QAAS,EAGtB,oBAAgB,IAAX,QAAgC,WAAX,OAAuC,MAAX,OAAqB,GAAc,KAAe,CAIvG,QAAO,MAAQ,GAAO,MAAM,aAAc,EAAE,eAAgB,EAC5D,yBAAO,IAAM,GAAO,IAAI,aAAc,EAAE,eAAgB,EAGxD,sBAAK,IAAc,GAAO,MAAM,SAAU,GACzC,UAAO,KAEP,OAAO,QAIT,KAIC,CAJI,MAAO,aAIN,gBAOJ,WAAI,EACJ,UAAE,QACF,IAAE,eAAiB,EAEnB,eAAO,CAEP,IAAO,CAAE,cAAiB,EAK5B,iBAAM,IAAoB,EAAE,eAAe,sBAC1C,EAAE,eACF,EAAE,eACF,EAAE,QACF,CAAC,EACD,EAAE,UAIH,UAAO,IAAO,UAAU,IAAc,eAErC,IAAM,IAAS,GAAI,GAAE,YACpB,GAAM,MACN,GAAM,IAAI,OAAS,GAAM,MAAM,OAC/B,uBAA+B,EAAE,YAAc,GAC/C,eAA+B,eAAY,EAG5C,uBAAO,SAAW,EAElB,SAAK,eAGJ,aAAO,oBAAsB,EAAE,qBAC/B,CADsD,SAC/C,qBAAuB,EAG/B,sBACA,EACD,EAhNa,imBCxUhB,iiBAFA,gEAMqB,cASF,eAA0B,4EAG3C,kEAMA,aAAK,KAQL,IAAK,SAAW,EAChB,CAED,YApBA,aAgCA,WAGU,aACJ,OACJ,GAEiB,aAAR,KAAyB,GAAQ,KAAK,uFAAoB,EAEpE,GAJgB,aAAR,sFAEP,EAIF,iCAMC,OAAO,MACP,yCArBA,OAAO,MACP,iCAvCmB,gLCCrB,CAojB0C,iBAEzC,QAAI,GAAsB,EAAe,OACzC,EAAI,EAAmB,EAAY,OAGnC,IAA+B,CAAvB,KAAgD,CAApB,KAC7B,MAAY,EAGlB,GAAK,CAAC,EAAO,QACZ,GAGD,YAAM,GAAW,EAAO,iBAAiB,IAEzC,MAAK,EAAS,SAAU,EACvB,IACA,IAEA,QAED,SAED,CACA,Q,uTAplBD,eACA,cACA,eACA,eACA,gBACA,iBAsBqB,YAIpB,aAAc,QAQb,QAAK,QAAU,GASf,UAAK,OAAS,GAQd,UAAK,OAAS,GAQd,UAAK,iBAAmB,GAGxB,UAAK,aACL,cAAK,aACL,eAAK,aACL,gBAAK,aAAc,QAEnB,gBAAK,MAAO,CAAE,KAAM,SAAU,OAC9B,eAAK,MAAO,CAAE,KAAM,UAAW,OAM/B,gBAAK,aAAc,mBACnB,cAAK,MAAO,CAAE,KAAM,UAAW,OAC/B,oBAED,gCAcO,WACN,MAAK,SAAU,EAAM,MAAO,MAAO,EAAO,oBAAqB,EAAM,QAAU,EAC/E,WAED,yBAMU,WACT,MAAK,SAAU,EAAM,MAAO,SAAU,EAAO,oBAAqB,EAAM,QAAU,EAClF,WAED,kCAcyB,aACxB,MAAK,SAAU,GAAO,kBACtB,EAED,sBAkCO,WAAQ,OACd,QAAK,CAAC,KAAK,QAAS,EACnB,MAII,SAAC,cAAS,EACd,YAKA,CAJW,KAAM,WAAW,UAItB,WAIP,eATO,WAAa,CAAE,EACf,eAQD,GAAO,EAAO,oBAAqB,EAGzC,QAAM,EAAc,KAAK,iBAAiB,IAAK,EAAM,MAAO,IAAK,YAChE,OAAO,GAAK,SACZ,GAGD,MAAK,CAAC,KAAK,SAAU,EAAM,MAAO,yBAA0B,EAC3D,YAGD,YA5Bc,gBA6Bd,WAAyB,EAAM,4DAAa,uCAC3C,YAA0B,oDAAc,cACvC,MAAK,GAAW,iBAAkB,WAAY,EAC7C,GAED,kBAL0C,2EAM3C,CAOD,WA1Cc,4FA2Cd,YAAyB,EAAM,iEAAa,WAC3C,MAAc,MAD6B,yBAG3C,YAA0B,qDAAc,eACvC,MAAK,GAAW,iBAAkB,QAAS,EAAM,IAChD,CACA,MACA,KAIF,WAX2C,4EAY3C,IAAK,CACJ,GAED,QA1Da,uFA4Dd,CACA,QAED,wBAMS,WACR,OAAO,MAAK,OAAO,IACnB,EAED,6BASwB,aACvB,IAAK,KAAK,QAMT,QAAM,eAGP,mFAAK,CAAC,CAAC,GAAe,CAAC,KAAK,QAM3B,QAAM,eAIP,iFAAK,OAAO,IAAK,EAAU,GAAI,GAO/B,UAAM,GAAQ,KAAK,QAAS,GAAgB,KAAK,iBAAiB,IAAK,GAAc,OAAQ,GAAa,CAC1G,QAAK,iBAAiB,IAAK,EAC3B,EAED,4BAO4B,aAC3B,IAAK,CAAC,KAAK,QAAS,IAAmB,CAAC,KAAK,QAM5C,QAAM,eAGP,+EAAM,GAAQ,KAAK,iBAAiB,IAEpC,SAAO,GAAM,KAAM,kBAAY,IAAY,CAC3C,EAED,yBAQU,WACT,IAAK,CAAC,KAAK,QAMV,QAAM,eAGP,kFAAO,MAAK,OAAO,IACnB,EAED,sCAO4B,WAC3B,IAEA,SAAK,cAAS,GAAS,oBACtB,WAAwB,gDAAO,SAC9B,MAAK,eACJ,UAAW,KAAM,EACX,MAAK,cACX,MAAW,KAEZ,WAPqB,oEAQtB,CARD,KAQO,IAAK,eAAL,QACN,QAAI,GAAS,EAEb,OACC,IADO,QACI,KAAM,EACjB,QAAS,EAGV,SACA,SAAM,KAAK,cACX,OAAa,EAAK,MAGnB,YACA,QAGF,cAvUqB,KA8UR,0BAMZ,CAAa,aAAS,QAOrB,QAAK,QAQL,OAQA,iBAQA,oBACA,sBAED,gCAMa,aACZ,MAAK,SAAU,WAAY,EAC3B,EAED,yBAMgB,aACf,MAAK,SAAU,cAAe,EAC9B,EAED,kCAOmB,WAClB,MAAK,oBAAoB,KACzB,EAED,yBAQwB,eACvB,GAAO,EAEF,QAAC,cACL,OAAa,CACb,OALmC,gBAOpC,WAAyB,gDAAa,SACrC,WAAM,GAAS,KAAM,CAAE,KAAF,EAAQ,UAC7B,YATmC,oEAUpC,CAED,0BAQiB,aAChB,IAAM,GAAkB,OAAT,KAAmB,KAAK,SAAW,KAClD,YAAc,KAFc,eAI5B,WAAoB,gDAAS,SAC5B,MAAK,EAAK,YACT,KAAM,KAAM,EAEb,cAR2B,oEAU5B,OACA,EAED,yCAQ0B,WACzB,IAAY,MADiC,eAG7C,WAA4B,KAAK,uEAAsB,KACtD,MAAQ,QAD8C,uBAGtD,YAAyB,oDAAe,cACvC,MAA+C,CAAC,CAA3C,IAAkB,QAAS,IAC/B,CACA,KACA,KACD,WARqD,uEAUtD,IACC,EAED,KAhB4C,gFAkB7C,OACA,EAED,iCASqC,eACpC,IAAM,GAAkB,KAAK,UAAW,EAAM,GADE,eAGhD,WAAkC,gDAAkB,YACnD,MAAK,EAAY,KAAK,QAAS,EAC9B,GAED,iBAP+C,oEAShD,CACA,QAED,iCAMC,IAAM,GAAO,cAGb,eAAK,QAEL,iBACA,OAmCF,oLC5iBA,ywBAdA,gBACA,gBACA,gBACA,gBACA,OACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,cACA,kBAqBqB,YAIpB,aAAc,oBAOb,QAAK,SAAW,GAQhB,UAAK,UAAY,MAUjB,aAAK,aAAe,MAQpB,aAAK,MAAQ,GAYb,UAAK,IAQL,qBAAK,SAAW,cAAc,KAAK,aAAc,KACjD,gBAAK,SAAS,KAAM,aAAc,GAAI,KAQtC,kBAAK,WAAa,GAGlB,UAAK,cACL,cAAK,cACL,cAAK,cACL,cAAK,cACL,cAAK,cAEL,oCAIA,WAAK,GAAI,SAAU,UAClB,IACA,sBAAK,SACL,YACA,iBACD,EAED,sCAaa,YACZ,IAAI,IAAW,KAAK,WAAW,IAE/B,OACC,SAGD,OAAW,GAAI,IAEf,WAAK,WAAW,IAAK,GAAU,OATR,mBAWvB,YAAoC,KAAK,+DAAW,2CACnD,MAAS,QAAS,GAClB,GAbsB,uFAevB,WAEA,SACA,EAED,4BAMa,YACZ,OAAO,MAAK,WAAW,IACvB,GAED,2BAuBY,YAAyB,uEACpC,OAAM,GAA4B,QAAlB,QAAO,IAAsB,GAAU,GAEvD,QAAM,GAAW,cAAyB,GAAQ,cAClD,cAAS,SAET,UAAK,MAAM,IAAK,GAGhB,OAAS,GAAI,kBAA0B,eAAP,OAAiB,IAAK,SAAS,WAAY,WAAY,GACvF,MAAS,GAAI,oBAA4B,eAAP,OAAiB,IAAK,SAAS,WAAY,aAAc,GAC3F,MAAS,GAAI,cAAsB,eAAP,OAAiB,IAAK,SAAS,WAAY,OAAQ,GAE/E,GAAK,KAAK,aAAa,UACtB,UAAK,cAAe,GAGrB,IACA,EAED,8BAWe,YAAyB,+DACvC,OAAM,GAAW,KAAK,QAEtB,SAAK,SAAS,IAAK,GAEnB,SAAK,aAAa,aAAc,GAEhC,SAAK,SAAS,WAAY,WAC1B,SAAK,SAAS,aAAa,IAAK,GAAQ,kBARD,mBAUvC,YAAwB,KAAK,WAAW,4DAAW,YAClD,SAAS,QAAS,GAClB,aAZsC,4EAavC,CAED,kCAOyB,+DACxB,aAAO,MAAK,MAAM,IAClB,GAED,qCAM4B,+DAC3B,aAAO,MAAK,SAAS,IACrB,GAED,iCAOC,MAAK,KACL,SAED,gCAKC,IAAK,CAAC,KAAK,UACV,IAAM,IAAW,KAAK,UAEtB,gBACC,SAAK,aAAa,MAClB,SASA,oBAAI,KAEL,2EACD,CAED,2CAGmB,uBAClB,YAAwB,KAAK,WAAW,4DAAW,YAClD,SACA,mBAHiB,4EAIlB,CAED,0CAGkB,uBACjB,YAAwB,KAAK,WAAW,4DAAW,YAClD,SACA,kBAHgB,4EAIjB,CAED,kCAGU,uBACT,YAAwB,KAAK,WAAW,4DAAW,YAClD,SACA,mBAHQ,4EAIT,qBAtRmB,EAyRrB,cAAK,IAcL,smBCtUA,mSAFA,mEAWqB,cACP,aAAW,0EAGvB,aAAK,aAAe,QACpB,aAJD,gCAMY,WACX,MAAK,KAAM,EAAS,KACpB,YAGF,mBAZqB,kpBCNrB,CAyG0B,aACzB,OAAO,IAAW,WAAS,YAC1B,GAAW,WAAS,WACpB,GAAW,WAAS,SACpB,GAAW,WACZ,S,iiBAnHD,cACA,eACA,OACA,oBAWqB,cAMP,aAAW,QAGvB,kEAOA,aAAK,kCAAoC,cAAU,kBAAQ,GAAK,SAAS,KAAM,sBAAuB,EAA7D,EAAqE,KAC9G,CAED,YAbA,uCAgBU,OACT,KAAM,EAAW,KAEjB,WAAS,GAAI,UAAwB,aACpC,IAAM,GAAY,EAElB,UAAK,EAAU,QAAU,EAAiB,EAAK,UAAa,EAE3D,cAEA,mBAAK,qBAAsB,EAE5B,SATD,EASG,CAAE,SACL,UAED,kCAIC,kFAEA,WAAK,kCACL,QAED,qCAasB,WACrB,IAAM,GAAY,KAAK,SACvB,UAAM,EAAe,UAAc,oBACnC,KAGA,aAAK,GAAW,WAAS,WAAa,GAAW,WAChD,YAID,mBAAK,GAAW,WAAS,YAAc,GAAW,WACjD,cAGD,mBAAM,GACL,cACA,eACA,eAID,WAAK,SAAS,KAAM,kBAMpB,QAAK,kCACL,YAOF,mBA/FqB,+lBCVrB,iiBAFA,iEAYqB,cACP,aAAW,0EAGvB,aACA,gCAEA,gBAAS,GAAI,QAAS,UACrB,GAMA,eAAK,iBAAmB,WAAY,iBAAM,GAAS,QAA3B,EACxB,EAED,KAAS,GAAI,OAAe,aAC3B,IAAM,GAAmB,EAAS,UAElC,iBAA0B,IAArB,MAA6B,IAAqB,EACtD,YAGA,eAED,SAED,GAMA,aAjCD,gCAmCY,WACX,MAAK,KAAM,EAAS,KACpB,EAED,kCAIC,CAAK,KACJ,+BAAc,KAGf,mGACA,eAiBF,mBAlEqB,+lBCXrB,mSAHA,gEACA,WASqB,cACP,aAAW,0EAGvB,aAAK,aAAe,UACpB,aAJD,gCAMY,WACX,MAAK,KAAM,UAAW,EACrB,SAAS,EAET,eAAQ,EACR,eAAS,EAAO,SAAW,EAC3B,iBAAU,EAEV,YAAI,YACH,OAAO,cACP,KAEF,aAyBF,mBA5CqB,+lBCRrB,mSAFA,mEAWqB,cACP,aAAW,0EAGvB,aAAK,aAAe,YACpB,aAJD,gCAMY,WACX,MAAK,KAAM,EAAS,KACpB,YAGF,mBAZqB,kpBCJrB,iiBALA,cACA,gBACA,eACA,mBAcqB,cACP,aAAW,QAGvB,kEASA,aAAK,iBAAmB,EAAS,cAQjC,WAAK,SAQL,IAAK,UAAY,EAUjB,YAAK,aAAe,EASpB,eAAK,WAAa,GASlB,WAAK,kCAAoC,cAAU,kBAAQ,GAAK,SAAS,KAAM,sBAAuB,EAA7D,EAEzC,OAAK,2BAA6B,YAAa,iBAAM,GAAK,oBAQ1D,SAAK,iBAAmB,EACxB,CAED,YArEA,6BAwES,WAAa,OACrB,KAAM,EAAc,EAGpB,cAAK,KAAK,WAAW,IAIrB,UAAK,SAAU,EAAa,kBAAmB,UAC9C,GAAK,uBACL,EAED,QAAK,WAAW,IAChB,GAED,kCAIC,kFAEA,oBAAe,KACf,iCAAK,kCACL,QAED,uCAQwB,WACvB,IAAM,KAAkB,SAAnB,EAAoB,KAAK,SAK9B,gBAAK,iBAIL,WAAM,GAAe,EAAY,YACjC,eAAM,EAAmB,KAAK,aAAa,mBAE3C,OAAK,KAAK,UAAU,QAOpB,OASC,EATI,GAAE,KAAK,iBAcZ,sBALK,KAEJ,oGAGK,GACL,cAAc,KACd,uBACA,eAID,QAAK,SAAS,KAAM,kBAMpB,QAAK,kCACL,IAED,6CAMC,MAAK,iBACL,WAsBF,mBAzLqB,mFCsCc,aAClC,IAAM,GAAW,EAEjB,WAAQ,YACR,oBAAQ,gBAER,oBAAK,EAAqB,IACzB,MAAqB,IAAK,GAAW,OAEtC,EAKD,CACgC,aAC/B,IAAM,GAAe,EAAqB,IAAK,GADL,eAG1C,WAA0C,mDAAe,mCACxD,KAAyB,EACzB,EALyC,8EAM1C,CAMD,CAC2C,eAC1C,IAAM,GAAW,EAGjB,SAAK,GAIL,MAAM,GAAgB,EACtB,UAAM,EAAS,EAGf,aAAK,IAAiB,CACrB,WAAQ,YAMT,kBAAM,EAAsB,SAAvB,EAAwB,EAC5B,gBAMI,CAAC,EAAQ,YAAc,GAAU,EAAO,SAC5C,IAAQ,SAER,oBAAQ,YAET,0BAXS,SAMT,kB,ydAnHD,MAwBgB,kBAA6C,eAC5D,IAAM,GAAW,EAEjB,YAAK,CAMJ,OAAM,eAIP,uFAGK,GAAC,EAAqB,IAC1B,OAAqB,IAAK,EAAU,GACpC,QAAS,SAAU,EAAU,SAAU,iBAAM,GAAuB,EAApE,EAAgF,CAAE,SAKnF,YAAQ,aAAc,mBAGtB,KAAqB,IAAK,GAAW,IAAK,EAG1C,KAAyB,EACzB,EAED,IAKgB,oBAzDhB,gBACA,cACA,iBACA,OAEA,GAAiB,MACjB,cAAQ,IAER,SACA,GAAM,GAAuB,GAE7B,uLCEA,CAqoB2C,eAC1C,OAAO,CAAC,EAAW,aAAe,EAAe,GAAa,QAAS,EACvE,GAOD,CACwB,aACvB,IAAM,GAAe,UAAU,oBAC/B,GAAM,EAAS,EAEf,YAAsB,KAJa,kBAMnC,YAAqB,qDAAS,YAC7B,QAAc,KAAM,GACpB,uBARkC,4EAUnC,UAAa,UAAW,EAAe,EAEvC,YACA,C,4SAzqBD,gBACA,eACA,eACA,OAEA,eACA,gBACA,gBACA,gBACA,eACA,eACA,iBAeqB,YAOpB,CAA2B,eAAY,QAMtC,QAAK,aAAe,GAQpB,UAAK,aAQL,OAAK,iBAAmB,GAQxB,UAAK,eAAiB,GAQtB,UAAK,YAAc,GAQnB,UAAK,UAQL,OAAK,cAQL,UAQA,kBAAK,wBACL,IAED,qCAYkB,aACjB,IACC,MADI,KACC,KAAK,aAAa,oBAAqB,EAC3C,cAAK,YAAY,IAElB,OAGA,IAAK,CAAC,KAAK,aAAa,oBACvB,GAGD,UACC,YADI,UACC,iBAAiB,IACtB,OAAM,IACN,UADW,UACN,eAAe,IAOpB,aAAM,eAEP,0EACD,CAED,iCAyBC,IAKA,GAAK,KAAK,eAAiB,CAAC,KAC3B,mCAID,sBAAK,KACJ,gBAAuB,KAGnB,2BAAK,KACT,oCAAuB,KAAK,UAG5B,wBAAK,eAAe,IAAK,EACzB,YApBO,kBAsBR,YAAoB,KAAK,8DAAc,WACtC,MAAK,CAAC,KAAK,eAAe,IAAK,GAAK,SAAY,KAAK,aAAa,oBAAqB,GACtF,cAAK,YAAa,GAAM,CAAE,qBAE3B,aA1BO,kGA4BR,YAAuB,KAAK,oEAAmB,YAC9C,WAAK,aACL,aA9BO,mGAgCR,YAAuB,KAAK,kEAAiB,YAC5C,WAAK,gBAAiB,GAAS,CAAE,qBACjC,aAlCO,4EAoCR,MACA,wBAEA,oBAAK,YACL,aAAK,iBACL,aAAK,eAGL,aAAK,cAAgB,KAAK,qBAC1B,EAED,qCAOsB,WACrB,IAAK,CACJ,EAKD,iBALM,cAEL,SAGK,GAAc,KAAK,aAAa,kBAGtC,MAAK,CAAC,GAAe,CAAC,uBAAkB,EAMvC,aAAM,eAGP,oFAAO,GACP,MAED,mDAcC,IAAM,GAAW,KAAK,UAEtB,yBAAK,GAAS,OAAO,GACpB,QAAO,UAAa,aAAc,KAAK,UAAU,mBAEjD,QAED,CAED,qDASC,IAAkC,CAA7B,OAAK,UAAU,YAAmB,CAAC,KAAK,UAC5C,YAYD,YAAM,GAAoB,KAAK,UAC/B,mBAAM,EAAW,KAAK,aAAa,kBAEnC,SAAK,IAAY,KAAK,aAAa,OAAQ,EAAS,SAAY,uBAAkB,EAKlF,OAED,8CAMC,IAAM,GAAgB,KAGtB,iBAAK,CAAC,uBAOL,QAAM,eAGP,mEAAK,qBACJ,KAAc,WAAW,YAEzB,KAAc,KAAO,EAAc,KAAK,SAGzC,2BAAK,cACL,IAED,wDAOC,IAAkC,CAA7B,OAAK,UAAU,YAAmB,CAAC,KAAK,UAC5C,YAGD,YAAM,GAAoB,KAAK,UAC/B,mBAAM,EAAkB,EACxB,OAAM,GAAkB,EAGxB,UAAK,CAAC,KAAK,aAAa,2BAA4B,EACnD,MAGD,YAAK,CAAG,EAAgB,GACvB,WAID,YAAK,KAAoB,EACxB,kBAGD,YAAM,IAAa,EACnB,WAAM,GAAY,EAElB,gBAAK,0BAAkC,gBAKvC,aAED,4BASuB,aACtB,IAAM,IAAU,KAAK,aAAa,oBAClC,GAAM,GAAa,KAAK,aAAa,UAAW,EAAU,GAE1D,eAAM,GAAa,GACnB,KAAI,GAAe,GAEnB,KAAM,GAAS,EAEf,qBAAK,IAAU,GAAO,QAAU,EAAS,QAAU,GAAO,QAAU,EACnE,WAAe,gBAGhB,IAAK,IACJ,QAAQ,KAET,GAED,6BAMc,WACb,IAAM,GAAa,KAAK,aAAa,oBACrC,GAAM,GAAc,MAAM,KAAM,EAAW,YAAa,IAAK,mBAAQ,IAAK,IAC1E,GAAM,GAAe,EAErB,mBAL2B,kBAM3B,YAAmB,sDAAe,YACjC,QAAW,aAAc,GAAK,EAAY,aAG3C,cAV2B,mGAW3B,YAAmB,sDAAc,YAC3B,MAAC,EAAY,aACjB,OAAW,gBAEZ,aAf0B,4EAgB3B,CAED,gCAS8B,aAC7B,CA2CoC,kBAEnC,OAAK,MAIA,KAAK,GAAa,OAAQ,KAAoB,GAAa,OAC/D,IAAO,GAAe,OAAS,GAG3B,KAAK,oBAAe,GAAgB,GAAa,cACrD,oBAAe,GAAkB,GAMlC,aACD,IA7DM,IAAe,KACrB,aAAM,GAAa,GAAa,oBAEhC,GAAK,GAML,OAAM,IAAc,GAEpB,cAAM,GAAS,EAEf,qBAAM,GAAoB,GAC1B,WAAM,GAAsB,MAAM,KAAM,GAAa,kBAAmB,EAAa,GAAa,CAElG,cAAK,IAAU,GAAO,QAAU,EAC/B,IAAM,IAA0B,GAAqB,GAErD,QAAK,KAAK,aAAa,OACtB,OAAwB,KAAO,gBAAgB,GAE/C,QAAoB,OAAQ,GAAO,OAAQ,EAAG,GAAY,iBAE3D,eAED,IAAM,IAAU,cAAM,GAAmB,GAEzC,IAAI,GAAI,EA7B+B,kBA+BvC,YAAsB,sDAAU,YAC/B,MACC,QADI,qBACM,GAAY,GAAG,GACzB,KACM,MAEN,QAFW,YAEN,aAAa,iBAAkB,GACpC,mBAAQ,GAER,MAED,cA1CsC,4EA4CvC,EAoBD,2CAOC,IACC,CADI,QAAK,UAAU,WAOpB,YALC,gCAEA,0BAGK,GAAU,KAAK,aAAa,2BAA4B,KAAK,UAGnE,iBAAM,KAAkB,SAAnB,EAKL,IAAK,KAAK,UACT,YAAK,qBAEL,SACA,4BAAK,oBAEN,IAED,qCAMsB,WACrB,IAAM,GAAc,EAGf,cAAC,KACL,+BAAK,wBAA0B,EAAY,cAC3C,YAAK,wBAAwB,MAAM,SACnC,aAAK,wBAAwB,MAAM,IACnC,OAAK,wBAAwB,MAAM,KACnC,eAAK,wBAAwB,YAAa,EAAY,eAIlD,UAAC,KAAK,wBACV,iBAAQ,YAAa,KAItB,4BAAM,IAAU,KAAK,UAAU,oBAC/B,YAAK,wBAAwB,WAAW,KAGxC,MAAM,IAAe,EACrB,kBAEA,qBAAM,IAAW,EACjB,iBAAS,mBAAoB,KAC7B,4BAAa,SAGb,SAAK,aAAa,kBAAmB,KAAK,wBAAyB,KACnE,UAED,oCAMqB,WACpB,IAAM,GAAe,EAAQ,cAAc,YAC3C,eAAM,GAAmB,GAAgB,KAAK,aAAa,mBAE3D,QAAK,IAAoB,KAAK,UAAU,QAIxC,SAAK,IAAoB,EAAsB,GAAkB,KAAK,WACrE,IAAM,IACL,cACA,oBAAkB,KAGnB,WAMA,sBANI,KACH,iHAID,GAQD,IAAM,IAAS,KAAK,aAAa,kBAAmB,KAAK,UACzD,QAAM,GAAQ,KAAK,aAAa,kBAAmB,KAAK,UAExD,SAAa,SAAU,GAAO,OAAQ,GACtC,UAAa,OAAQ,GAAM,OAAQ,GACnC,QAED,8CAKsB,qBACrB,YAAmB,KAAK,iEAAe,WACtC,MAAM,GAAe,GAErB,kBAAK,GAAa,WACjB,IAAM,IAAmB,GACzB,cAAM,GAAc,KAAK,aAAa,4BAEtC,IAAK,IACJ,OAAI,eAEL,iBACD,CAZoB,oFAarB,CAED,+CAMC,IAAM,GAAY,KAElB,wBACC,KAED,QAED,uCAMC,IAAK,KAAK,UACT,IAAM,GAAW,KAAK,UAEtB,gBACC,QAAK,aAAa,MAEnB,EACD,qBA5mBmB,EA+mBrB,cAAK,IAQL,oIC/oBA,mSAFA,kEAsBqB,YAWpB,CAAqC,iBAAS,WAO7C,QAAK,SAEL,EAAoB,CAAf,IAAoB,EAAe,EAAS,KAMhD,YAAM,eAGP,gFAAc,CAAT,IAAc,EAAe,EAAS,EAAS,KAMnD,YAAM,eASP,sEAAK,KAAO,EAAS,KAAK,UAAW,EAAc,EAQnD,QAAK,aACL,CAED,kBA8CA,WAQI,WACH,OACA,WADO,GAGR,uCASqE,kEAA7C,CAAe,eACtC,gBACA,KAAI,EAAS,EAAQ,YAAc,KAAK,SAAW,KAEnD,OACC,IADO,QACI,EAAQ,YAAc,OAAS,WAC1C,KAAS,EAGV,aACA,oCAjEA,OAAO,MAAK,KAAK,SAAW,KAAK,SAAS,KAC1C,MAED,+BAOC,OAAO,MAAK,SACZ,MAED,6BAOC,OAAO,MAAK,SACZ,IAED,iCAQC,OAAO,MAAK,SACZ,4BAnGmB,kpBClBrB,mSAJA,eACA,gBACA,mBAOqB,iKASnB,IAAM,GAAS,KACf,OAAM,EAAc,EAAO,QAE3B,OAAY,cAEZ,WAAO,SAAS,IAAK,QAAS,cAG9B,SAAK,SAAU,EAAa,QAAgB,aAC3C,GAAO,QACP,WACA,gBAHD,EAGG,CAAE,SACL,iBApBD,2BAIC,OACA,0CANmB,kpBCNrB,CA2BuD,mBACtD,IAAM,GAAmB,EACzB,YAAM,EAAQ,EACd,gBAAM,EAAe,EAAM,MAC3B,OAAM,EAAa,EAAM,IAGzB,YAAK,EAAO,OAAO,IAAK,EAAa,OAAU,EAAO,OAAO,IAAK,EAKlE,WAAK,EAAa,MACZ,EAON,YANE,KAAe,cAAe,EAG/B,OAIA,IAAY,EAAO,EAAW,EAC9B,WACA,IAAM,GAAc,EAAM,MAAM,WAAa,EAAM,IAC7C,UAES,cAAe,EAAW,EAAO,CAAE,MAE7C,IAKH,IAToC,GAEtC,IAOc,EAAO,EAAW,EAM9B,SAAU,SAGZ,GACD,GAEsC,iBACtC,IAAK,EAAS,QAIb,IAAM,GAAa,EACnB,OAAM,EAAa,GAAI,GAAW,YAAa,EAAW,KAAM,EAEhE,mBAAM,OAAQ,UAAS,YAAa,EAAS,QAC7C,EACA,QAAM,MAGP,KAAU,SAAU,EAAS,OAC7B,Y,mSAzFD,gBACA,iBAOqB,0IACpB,6BAGa,OACZ,KAAM,EAAM,KAAK,OACjB,SAAM,EAAQ,EAEd,UAAI,eAAgB,UACnB,GAAY,EAAK,OAAO,KAAM,EAAO,EAAI,UAAW,EAEpD,UAAK,KAAM,eAAgB,CAAE,MAC7B,GACD,YAQF,mBArBqB,kpBCJrB,mSAJA,gBACA,gBACA,WAOqB,cACP,aAAW,0EAGvB,aAAS,GAAI,UAAkB,aAC9B,CAAK,EAAK,WAAa,EAAK,SAAW,WACtC,SAAS,KAAM,QAAS,cAAkB,EAAU,EAErD,UAJD,GAKA,CAED,YAVA,uCAaY,WAGb,mBAjBqB,0wBCCrB,CA2I8C,eAAY,IACzD,SAAO,SAAM,WAAU,iBAAW,EAAS,IAAK,kBAAK,CAAE,EAAG,EAC1D,I,mSAvJD,gBACA,gBACA,cACA,gBACA,gBACA,eACA,iBAEA,UAQqB,2IAepB,uBAGO,OACN,KAAM,EAAS,KACf,OAAM,EAAgB,MACtB,QAAM,EAAU,KAChB,uBACA,MAAM,GAAI,EACV,EAAM,GAAe,GACrB,kBAAM,GAAkB,GAAG,WAPrB,sBASN,YAAsB,wDAAU,WAC/B,MAAM,GAAU,EAAO,SAAS,IAAK,GACrC,cAAM,GAAY,cACjB,aAAa,GACb,mBAAO,GACP,YAAO,GAGR,WAAU,KAAM,YAAa,GAAI,GAGjC,WAAc,IAEd,OAAS,KACT,GAED,WAzBM,4EA0BN,IAAM,IAAgB,cACrB,CACA,kBACA,UAGD,WAAc,KAAM,cAAc,aAE9B,EAA2B,GAAU,qBAExC,wCAAK,6BAAL,2BAAqB,IAAW,KAAM,mBAAa,GAA9B,EAGtB,WAAc,KAAM,UAAU,aAE1B,EAA2B,GAAU,iBAExC,WAAoB,qDAAf,KAAe,iBACnB,OAAM,IAAQ,GAAU,UAAW,mBAAS,GAG5C,SAAO,GAAS,IAAU,EAAS,IAAQ,MAC3C,EAIF,OAAO,GAAG,iBAAiB,IAAK,WAAY,YAC3C,IAAM,IAAW,cAAoB,GAErC,qBAAS,OAAQ,GAAS,SACzB,YACC,CAOF,mCAAK,SAAU,GAAU,UAAW,YACnC,GAAO,QAAS,GAAI,OACpB,eAAO,QAAQ,KACf,OAED,GACA,EACD,EAED,+CAYC,IAAM,GAAS,KACf,OAAM,EAAI,EACV,EAAM,EACL,WAAW,EACX,yBAAa,EACb,yBAAa,EACb,yBAAa,EAGd,oBAAO,GAAO,OAAO,IAAK,mBAAoB,IAAK,WAClD,IAAM,GAAQ,EAAiB,EAE/B,aAAK,IAAS,GAAS,EAEtB,UAAS,OAAe,UAAI,EAAQ,CAAE,MAGvC,KACA,CACD,YAzHD,yBAIC,OAAO,aACP,QAED,mCAIC,OACA,2BAuHF,mBApIqB,kpBCVrB,mSANA,eACA,eACA,eACA,cACA,kBAOqB,cAOC,eAAS,0EAG7B,kBAAO,SAUP,KAAK,IAGL,cAAK,SAAU,EAAO,SAAU,cAAe,UAC9C,GACA,iBACA,cAkBD,GAOA,CAED,YA9CA,0CAsD2B,kEAC1B,MAAM,EAAS,KACf,OAAM,EAAW,EAGjB,SAAM,EAAe,KAErB,QAAS,eAAgB,UACxB,IAAM,GAAQ,EAAQ,OAAS,EAAS,QADV,eAG9B,WAAqB,EAAS,UAAU,kEAAsB,YAE7D,OACC,EAWU,EAAM,GAAI,EACpB,iBAAM,OAAQ,EAAO,EAEtB,sBAdM,EAAM,GAAI,EAAK,cAGnB,IAAM,IAAY,MAClB,WAAU,SAAU,UAAM,SAG1B,MAAO,QAAS,YAAa,CAAE,UAAF,GAAa,MAC1C,GAGQ,WAjBmB,qEAqB9B,CACD,EAED,uCAIC,IAAM,GAAQ,cAAO,KAAK,OAAO,SAAS,UAE1C,0BAAK,MAAQ,CAAC,CAAC,GAAS,EAAM,GAAI,KAClC,aAED,wCAIC,IAAM,GAAQ,cAAO,KAAK,OAAO,SAAS,UAE1C,2BAAO,CAAC,CAAC,GAAS,KAAK,OAAO,SAAS,OAAO,MAC7C,MAAM,KACN,oBAAQ,UAAS,aAElB,cAGF,mBAlHqB,kpBCLrB,mSANA,eACA,eACA,eACA,eACA,mBAEM,EAEN,YAMqB,cAIP,aAAS,QAKrB,kEACA,aAAO,OAAO,OAAQ,UACrB,SAAS,CACR,CAAE,aAAc,YAAa,MAAO,YAAa,MAAO,wBACxD,CAAE,aAAc,WAAY,YAAa,KAAM,MAAO,YAAa,MAAO,uBAC1E,CAAE,aAAc,WAAY,YAAa,KAAM,MAAO,YAAa,MAAO,uBAC1E,CAAE,aAAc,WAAY,YAAa,KAAM,MAAO,YAAa,MAAO,0BAG5E,CAED,YAhBA,aAuBA,uBAIC,IAAM,GAAS,KACf,OAAM,EAAO,EACb,KAAM,EAAU,EAChB,QAAM,EAAU,EAAO,OAAO,IAAK,mBAJ7B,eAMN,WAAsB,gDAAU,SAE/B,MAAK,EAAO,eAEX,MAAO,SAAS,OAAO,aAAc,EAAO,aAG5C,0BAAsB,IAAK,EAAK,YAAa,EAAQ,aACnD,YAAa,EAAO,cACpB,UAAW,EAGb,6BAAqB,IAAK,EAAK,aAC7B,YAAa,EAAO,aACpB,UAAW,EAGb,gBAAO,SAAS,IAAK,EAAO,aAAc,cAAoB,EAE/D,aAzBK,oEA0BN,CAED,oCAMC,IAAM,GAAS,KACf,OAAM,EAAe,EAAO,SAAS,IACrC,SAAM,EAAU,EAAO,OAAO,IAE9B,mBACC,QAAK,SAAU,EAAc,eAAuB,aACnD,IAAM,GAAiB,EAAO,SAAS,UAAU,mBACjD,OAAM,EAAQ,EACd,MAAM,EAAY,EAAQ,KAAM,kBAAU,GAAe,GAAI,EAAO,aAEpE,GAAK,GAAa,CAAC,EAAe,GAAI,IACrC,CAD8D,KAAe,cACvE,OAAQ,EAEf,EAEF,qCAvDA,OAAO,GACP,qCAzBmB,kpBCNrB,mSARA,eACA,gBACA,gBACA,gBACA,WAEA,UASqB,2IAepB,uBAIC,IAAM,GAAS,KACf,OAAM,EAAoB,EAAO,QAAQ,IAKzC,wBACC,QAAK,SAAU,EAAmB,aAAqB,aACtD,IAAM,GAAkB,EAAO,QAAQ,KAAK,UAE5C,qBAAK,GAAmB,oBACvB,IAED,GAEF,YAjCD,yBAIC,OAAO,uBACP,QAED,mCAIC,OACA,0CAbmB,kFCXrB,CAsE+D,mBAC9D,IAAM,GAAQ,EAAI,KAAK,MACvB,KAAM,EAAiB,EAAO,GAAM,IAAM,EAE1C,GAAK,GAAC,EAAW,QAAS,EAAK,KAI/B,OAAM,GAAS,EAAc,OAAO,cAAe,EACnD,MAAM,EAAM,EAAO,SAEnB,GACC,iBADI,IAAO,KACP,gBAAiB,EAErB,gBAAI,aAAc,EAAK,aAAc,EAEtC,mBAGD,CA+CkD,iBAEjD,GAAU,EAIV,eAAM,GACL,MAAM,EACN,gBAAY,EACZ,kBAID,GAAQ,EAAQ,QAAU,CAAC,EAAO,MAAO,IACxC,IAAM,GAAS,EACf,MAAM,EAA+B,QAAlB,QAAO,GAAsB,EAAS,EAGzD,QAAK,EAAO,OAAO,IAClB,SAED,KAID,OAAO,GAAQ,OAAS,EACxB,IAED,oDAtJgB,4BACf,OAAgC,kBAE/B,CAAK,GAAC,EAAW,KAAM,EAAK,MAAO,CAAQ,QAAM,MAK5C,WAAC,EAAc,OAAO,MAAO,CAAE,KAAM,QAAS,OAAQ,EAAK,QAAS,WAKzE,YAAM,GAAY,MAAM,KAAM,EAAK,MAAM,eAAgB,KAAM,kBAAa,GAAU,GAAI,MAG1F,MAAmB,CAAd,EAAe,EAAU,aAAyB,QAAC,EAAW,KAAM,EAAW,CAKpF,cAAM,GAAa,EAAc,YAAa,EAAW,EAIzD,KAAK,QAAQ,KAEb,MAAM,GAAgB,EAAc,gBAAiB,EAAK,MAAO,EAEjE,KAAK,QAGL,gBAAY,OAAQ,UAAc,SAAU,GAG5C,KAAK,OACL,GACD,CAED,IAMgB,8BAA4C,aAAgB,oBAC3E,WAA0B,gDAAc,SACvC,QAAW,mBAAqB,WAChC,KAAW,sBAAwB,WACnC,KAAW,sBAAwB,WACnC,WAL0E,oEAM3E,CAID,IA8BgB,sBAA8C,iBAC7D,IAAM,GAAM,EAGZ,MAAK,GAAC,EAAW,KAAM,EAAK,CAAQ,QAOpC,wBAAM,GAAiB,EAAqB,CAAE,KAAM,QAAuB,oBAAW,EAAK,QAAS,EAEpG,QAAK,GAKL,MAAM,GAAU,OAAe,UAC/B,KAAQ,QAER,IAAK,OAAS,EAAc,YAAa,EAAK,EAG9C,KAAkB,IAAK,EACvB,SAWD,IA6CgB,yBAA+B,aAE9C,CAAK,GAAC,EAOD,QAAC,EAAK,OAAO,GAKlB,gBAIM,GAAN,MAAU,EAAI,EAAK,OAAO,WAAa,IAAQ,CAAL,IACnC,SAAQ,EAAK,OAAO,SAE1B,GAAK,EAAkB,IAAK,GAoB3B,IAAM,GAAqB,EAAK,OAAO,WAAa,EACpD,EAAI,EAGJ,KACC,CADI,OACU,EAAK,OACnB,YAAY,eAAgB,EAAK,OAAO,eAAgB,EAAI,EAI7D,OAIA,WAGA,QACC,KAAU,QAIX,KAAU,QAGV,GACC,CADI,GAAK,OAAO,cACN,QAAS,EAEpB,OAIF,CAAK,EACJ,WAAK,OAAS,cAEf,I,EApQD,eACA,eACA,kBA2FM,EAAoB,GAE1B,ypBC3FA,mSAJA,eACA,mBACA,UAOqB,gJACpB,yBAIC,OAAO,GACP,QAED,mCAIC,OACA,iDAbmB,kqBCQrB,CAmIkE,sBACjE,IAIA,QAJK,UAIC,IAAS,cACd,YAAY,GACZ,MAAkB,yBAGP,YACX,IAAM,IAAO,GAEb,KAAmB,cAAd,KAAM,MAA0B,cAAS,KAAU,CAAC,0BACxD,QAAM,SAAS,eAAgB,UAGzB,CAAC,0BACL,QAAM,OAAQ,UAAc,SAAU,GAAM,OAAS,cAEtD,WACD,EArBuE,oBAUzE,YAAqB,sDAAS,qBAY7B,aAtBwE,4EAuBzE,EAMD,CAC6B,aAA8B,4DAC1D,YAAgC,sBAC/B,IAAM,IAAiB,GAGvB,SAAM,GAA6B,UAA9B,EAIL,KAAK,cAAS,GAAe,QAC5B,IAAK,CAAC,GAAW,QAAS,GAAK,KAC9B,UAGD,UAAM,IAAY,GAAc,OAAO,cAAe,GAAK,MAAM,MACjE,QAAM,GAAgB,eAAF,QACnB,EAAsB,UAIlB,IAAC,GACL,eAAY,SAGb,eAA0B,GAAa,GAAK,KAAM,GAAW,GAC7D,OACD,CACD,CAQD,CACyE,sBACxE,IAAM,IAAe,UAAa,SAAU,GAE5C,iBAAW,OAAQ,GACnB,MAAO,aAAc,GACrB,EAED,CAM2B,aAC1B,IAAM,IAAY,EAAK,aAAc,CACrC,iBAAM,GAAU,GAAU,KAAM,mBAA6B,SAAjB,KAAS,IAErD,SAAK,KAAW,GAAQ,QACvB,OADiC,KAAQ,OAAO,KAIjD,GACA,I,+TA5OD,eACA,eACA,cACA,eACA,eACA,eACA,cACA,eACA,eACA,OACA,aAcqB,gJACpB,uBAGO,QACN,KAAM,GAAS,KACf,OAAM,GAAW,GACjB,SAAM,GAAe,GAAO,QAC5B,KAAM,GAAS,GACf,OAAM,GAAO,GACb,KAAM,GAAU,GAChB,QAAM,GAAI,GAgBV,OAAK,eAAiB,4BAAuB,GAAc,GAG3D,2BAAO,aAAc,UACrB,aAAO,MAAO,CAAE,KAAM,UAAW,OACjC,eAAO,MAAO,CAAE,KAAM,UAAW,OACjC,aAAO,OAAO,IAGd,cAAS,GAAI,SAGb,mBACE,IAAK,GAAK,aACV,0BACA,UAGF,cAAK,YAAY,GAAI,iBAAkB,EAAoB,cAG3D,sBAAQ,YAAY,GAAI,iBAAkB,EAAoB,KAG9D,oBAAQ,YAAY,GAAI,SAAiB,eAAP,OAAiB,IAAK,sBAAuB,GAAK,KAApF,EAA4F,CAAE,SAG9F,YAAQ,YAAY,GAAI,SAAiB,eAAP,OAAiB,IAAK,sBAAuB,GAAK,eAAe,OAAnG,EAA6G,CAAE,SAG/G,cAAK,SAAU,GAAc,SAAU,iBAAM,IAAK,0BAAlD,EAA8E,CAAE,SAChF,QAED,mDAOC,IAAM,IAAS,KAAK,OAAO,QAC3B,OAAM,GAAgB,KAAK,OAAO,QAAQ,KAC1C,UAAM,GAAkB,GACxB,qBAGA,MAAK,KAAK,sBAAwB,CAAC,KAAK,qBACvC,iBAAK,qBAAqB,SAI3B,aAAK,IAAmB,oBAAe,IACtC,IAAM,IAAa,GAAO,eAC1B,IAAM,GAAe,0BACrB,OAAc,GAAO,cACrB,GAGD,CAAK,gBAAW,GACf,sBAAc,GAGf,iBACC,QAAY,YACZ,kBAAK,qBAEN,GAED,sCAOuB,YACtB,IAAM,IAAe,EACrB,IAAM,GAAS,KAAK,OAAO,QAE3B,UAAK,GACJ,IAAM,IAAc,GAAO,cAE3B,IACC,KAAK,GACJ,cAAY,YAEZ,gBAAY,SAGd,aACD,YAMF,mBA3HqB,kFCnBrB,oDASgB,sBAAqC,aACpD,OAAO,WACN,IAAM,GAAW,cACjB,uBAAS,SACT,IAAS,kBACT,8BAAmB,EAEnB,GAAO,uBACP,EACD,CAED,IAMgB,UAAW,WAC1B,OAAO,CAAC,CAAC,EAAY,kBACrB,EAED,IAMgB,oBAAqB,WAAoB,oBACxD,WAAoB,EAAkB,4DAAgB,YACrD,MAAK,wBACJ,SADoC,IAAK,WAG1C,WALuD,oEAOxD,OACA,KAED,IAQgB,kBAAmB,WAClC,IAAM,GAAS,EAGf,aAAqB,YAAhB,IAAQ,MAAwB,GAAyB,QAAf,IAAO,MAAoB,EAAO,SAChF,SAAO,CAGR,SACA,I,EApED,eACA,eACA,OACA,cAEM,EAAgB,OAEtB,gqBCHA,mSAJA,eACA,gBACA,kBASqB,0IAepB,uBAIC,IAAM,GAAS,KAAK,OAAO,OAAO,IAAK,gBADjC,eAGN,WAAqB,gDAAS,SAC7B,WAAK,cACL,WALK,oEAMN,CAED,8BAMe,WAAQ,OACtB,KAAM,EAAS,KACf,OAAM,EAAU,EAAO,SAAS,IAAK,EAErC,QAAO,GAAG,iBAAiB,IAAK,EAAM,KAAM,WAC3C,IAAM,GAAO,cAEb,YAAK,IACJ,OAAO,EACP,WAAM,EACN,KAGD,eAAK,KAAM,aAAc,GAAI,EAC7B,eAAK,KAAM,QAAS,GAAI,EAExB,WAAK,SAAU,EAAM,UAAW,iBAAM,GAAO,QAAS,EAAM,KAE5D,GACA,CACD,YAnDD,yBAIC,OAAO,GACP,QAED,mCAIC,OACA,+CAbmB,uJCTrB,CAmDyD,mBACxD,IAAM,GAAoB,EAC1B,MAAM,EAAoB,EAI1B,OAAK,GAAC,EAAW,KAAM,EAAmB,CAAE,MAAO,EAK9C,aAAC,cAKN,OAAM,eAAkB,EAEnB,oCAAC,EAAc,OAAO,MAAO,CAAE,KAAM,QAAS,OAAQ,EAAK,QAAS,WAKzE,QAAW,QAAS,EAAmB,CAAE,MAAO,EAChD,cAAkB,aAAc,aAAc,EAC9C,QAMD,CACiC,eAAS,oBACzC,WAAqB,gDAAS,YAC7B,MAAK,EAAM,QACV,QAED,WALwC,oEAMzC,CAQD,CAC0C,iBACzC,OAAK,KAAwB,iBAAb,KACf,iBADiD,SACrC,YAAa,EAM1B,cAQD,CAC0C,iBACzC,OAAK,KAAuB,cAAZ,KACf,iBAD6C,SACjC,SAAU,EAMvB,c,oDApHe,0BAA2B,WAC1C,OAAgC,kBAC/B,IAAM,GAAY,EAAI,KAAK,MAAO,KAClC,GAAM,EAAiB,EAEvB,cAAK,GAAC,EAAW,KAAM,EAAK,KAK5B,OAAM,GAAW,EAAiB,EAAK,kBACvC,GAAM,EAAW,EAAiB,EAAK,kBACvC,GAAM,EAAc,EAAc,OAAO,cAAe,EAExD,OAAK,EAAe,EAAW,EAAU,IAAiB,EAAgB,EAAW,EACpF,OAAW,QAAS,EAAK,KAE1B,GACD,CAED,IAMgB,0BAA2B,WAE1C,IAAM,GAAiB,EAAO,OAAQ,kBAAyB,KAAhB,KAAM,KAErD,SAAgC,kBAAmB,oBAClD,WAAqB,gDAAiB,SACrC,QAAuB,EAAO,EAAM,EACpC,WAHiD,oEAIlD,CACD,CAQD,EApDA,ymBCGA,mSAHA,gEACA,WAOqB,cAOC,eAAQ,QAG5B,kEAQA,aAAK,IAQL,cAAK,MAGL,IAAK,SAAU,EAAO,SAAU,cAAe,UAC9C,GACA,iBACA,cAHD,GAIA,CAED,YA5BA,4CAkCC,IAAM,GAAM,KAAK,OACjB,SAAM,EAAU,EAAI,UAEf,2BACJ,QAMA,IADI,QAAK,MAAM,WACV,MAAQ,CAAC,EAAQ,aAEtB,mBAAK,MAAU,EAAQ,aAAc,eAAkB,KAAK,MAE7D,iBALA,SAOD,wCAIC,IAAM,GAAU,KAAK,OAAO,SAAS,UAErC,2BAAO,cACP,EAED,qCAQ2B,kEAE1B,UAAK,KAIL,UAAM,GAAS,KACf,OAAM,EAAM,EACZ,SAAM,EAAY,EAClB,UAAM,EAAe,EAErB,uBAAI,eAAgB,UACnB,IAAM,GAAQ,EAAQ,OAAS,EAE/B,UAAM,aAAc,EAAc,aAAc,EAAK,MACrD,MACD,gCA1FmB,kpBCDrB,mSAPA,eACA,gBACA,gBACA,OACA,kBACA,mBAQqB,0IAQpB,uBAIC,IAAM,GAAS,KACf,OAAM,EAAI,EACV,EAAM,EAAM,EACZ,SAAM,EAAS,EACf,OAAM,EAAO,EACb,KAAM,EAAU,EAGhB,UAAO,OAAO,OAAQ,eAErB,EAAE,KAAM,iBAAkB,MAAO,EAAG,mBAAqB,OAAzD,QAA6E,MAG7E,OAAE,KAAM,iBAAkB,MAAO,EAAG,cAAgB,OAApD,QAAoE,MAAO,OAAQ,UAIpF,yBAAM,GAAS,EAAO,OAAO,IAI7B,kBAAO,MAAO,CAAE,KAAM,QAAS,WAAY,aAAc,OAGzD,aAAM,GAAuB,gCAC7B,KAAQ,YAAY,GAAI,gCACxB,KAAK,YAAY,GAAI,gCACrB,KAAQ,YAAY,GAAI,mCACxB,KAAK,YAAY,GAAI,mCACrB,KAAQ,YAAY,GAAI,mCACxB,KAAK,YAAY,GAAI,mCAGrB,KAAK,YAAY,GAAI,iBAAkB,gCAA2B,GAAU,CAAE,SAE9E,WApCM,gBAqCN,YAAqB,oDAAS,WAC7B,QAAO,SAAS,IAAK,GAAM,KAAM,cAAuB,EACxD,cAvCK,uEAwCN,WAlDD,yBAIC,OAAO,GACP,kBAgDF,mBAtDqB,kpBCDrB,mSAZA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBAEA,mBACA,UAOqB,2IAepB,uBAGO,OACN,iBAEA,gBAAO,KAAK,sBAAsB,KAAM,WAMvC,GAAK,aAOL,IAAK,KAAO,EAAM,QAAQ,IAC1B,EACD,EAED,wCAMgB,OACf,KAAM,EAAS,KACf,OAAM,EAAU,EAAO,SAAS,IAChC,wBAAM,EAAI,EAEV,IAAO,GAAG,iBAAiB,IAAK,uBAAwB,YACvD,IAAM,IAAO,cAEb,cAAK,IACJ,OAAO,EACP,wCACA,QAGD,gBAAK,KAAM,aAAc,GAAI,EAE7B,eAAK,SAAU,GAAM,UAAW,iBAAM,GAAK,mBAE3C,GACA,EACD,EAED,8CAMsB,OACrB,KAAM,EAAS,KAEf,OAAM,EAAQ,cACd,GAAM,EAAO,cAA6B,EAE1C,aAAK,SAAU,EAAM,SAAU,UAC9B,GAAO,QAAS,uBAAwB,CAAE,SAAU,EAAK,aAAa,UAAU,QAChF,UACA,mBAGD,MAAM,IAAe,EAAO,QAAQ,MAEpC,eACC,UAAK,SAAU,EAAO,mBAAoB,UACzC,CAAK,EACJ,cACA,UAEA,kBACA,UAED,aAGF,QAAK,SAAU,EAAM,SAAU,iBAAM,GAAK,mBAG1C,iBACC,SACA,YAAW,iBAAM,GAAM,SACvB,WAAU,iBAAM,GAAK,mBAItB,kBACC,SACA,YAAW,iBAAM,GAAM,SACvB,iBAAgB,EAChB,iBAAU,iBAAM,GAAK,mBAGtB,IAAO,QAAQ,IAAK,CACnB,EAAM,QAAQ,IAAK,GACnB,EAAO,GAAG,KAAK,KAAK,IAAK,KACtB,KAAM,iBAAM,EAChB,EAED,4CAMC,IAAM,GAAS,KACf,OAAM,EAAU,EAAO,SAAS,IAChC,6BAAK,KAAK,aAAa,MAAQ,EAAQ,OACvC,QAAK,aACL,cAAK,KAAK,aACV,QAED,4CAMC,IAAM,GAAS,KACf,YAAK,aACL,WAAO,QAAQ,KACf,iBA9ID,yBAIC,OAAO,GACP,QAED,mCAIC,OACA,yDAbmB,+lBCdrB,mSAHA,gEACA,WAOqB,cAIP,aAAS,QAGrB,kEAQA,aAAK,IAGL,cAAK,SAAU,EAAO,SAAU,cAAe,UAC9C,GACA,iBACA,cAHD,GAIA,CAED,YApBA,4CA0BC,IAAM,GAAM,KAAK,OACjB,SAAM,EAAU,EAAI,UAEpB,0BACM,MADD,cAAS,IAAa,EAAQ,aAClC,QAAa,EAAQ,aAItB,MAED,wCAIC,IAAM,GAAU,KAAK,OAAO,SAAS,UAErC,2BAAO,cACP,EAED,2BASY,WACX,IAAM,GAAS,KACf,OAAM,EAAM,EACZ,SAAM,EAAe,EAAI,UAEzB,uBAAI,eAAgB,UACnB,IAAM,GAAQ,EAAQ,OAAS,EAE/B,UAAM,aAAc,EAAc,MAAO,EACzC,SACD,+BApEmB,kpBCLrB,mSAHA,iBACA,iBAQqB,0IACpB,uBAIC,MAAK,OAAO,SAAS,IAAK,uBAAwB,cAAiC,KACnF,qCANmB,kpBCFrB,mSAPA,eACA,eACA,cACA,gBACA,gBACA,mBAOqB,cAIP,aAAS,0EAGrB,IAAM,EAAI,EAAK,OAOf,WAAK,aAAe,EAOpB,4BAAK,eAAiB,EAAK,cAAe,EAC1C,WAAK,eAAe,KAOpB,WAAK,iBAAmB,EAAK,cAAe,EAAG,UAE/C,oBAAS,OAAQ,EAAK,eAAe,SACpC,YACC,CAMF,gCAAK,SAAW,cACf,KAEA,kBACC,CAKD,8CAAU,CACT,EAAK,aAEJ,KAEA,iBACC,CAKD,uDAAU,CACT,EAAK,eACL,EAMJ,oCACC,MADc,IAGf,CAED,YApEA,mCA4EsB,aACrB,IAAM,GAAS,cAAgB,KAE/B,iBAAO,MACP,IAEA,YACC,KAAO,SAAU,WAAY,GAAI,KAGlC,GACA,CAED,kDAOC,IAAM,GAAI,KAAK,OACf,EAAM,EAAe,cAAsB,KAAK,SAChD,kBAAa,MAAQ,EAErB,oBACA,8BAzGmB,kpBCKrB,CAyWkC,aACjC,OAAO,GAAS,eAAe,KAAM,kBAAY,gBAAZ,OACrC,E,yTA5XD,eACA,gBACA,eACA,gBACA,gBACA,gBAEA,gBAEA,eACA,gBAEA,gBACA,mBAEA,UAUqB,2IAepB,uBAIC,MAAK,OAAO,QAAQ,KAAK,cAOzB,cAAK,SAAW,KAQhB,mBAAK,SAAW,KAAK,OAAO,QAAQ,MAGpC,cACA,gCAGA,kCACA,gBAED,sCAMc,QACb,KAAM,GAAS,KACf,OAAM,GAAW,cAAkB,GAEnC,kBAAS,aAAa,KAAM,SAAU,GAAI,GAAO,SAAS,IAAK,QAG/D,cAAK,SAAU,GAAU,SAAU,UAClC,IAAO,QAAS,OAAQ,GAAS,aAAa,UAAU,QACxD,UACA,cAGD,QAAK,SAAU,GAAU,SAAU,UAClC,IAAO,QACP,aACA,cAGD,QAAK,SAAU,GAAU,SAAU,iBAAM,IAAiB,cAG1D,MAAS,WAAW,IAAK,MAAe,eACvC,IACA,eACA,IAED,GACA,EAED,mDAM2B,QAC1B,KAAM,GAAS,KACf,OAAM,GAAc,GAAO,SAAS,IACpC,QAAM,GAAI,GAGV,KAAO,WAAW,IAAK,SAAU,iBAAM,IAAiB,cAExD,MAAO,GAAG,iBAAiB,IAAK,OAAQ,YACvC,IAAM,IAAS,cAEf,cACA,gBAAO,MAAQ,GACf,WAAO,OACP,WAAO,UACP,YAGA,cAAO,KAAM,aAAc,GAAI,GAG/B,gBAAK,SAAU,GAAQ,UAAW,iBAAM,IAAiB,cAEzD,GACA,EACD,EAED,qDAM6B,QAC5B,KAAM,GAAS,KACf,OAAM,GAAI,GACV,EAAM,GAAgB,GAAO,SAAS,IAEtC,aAAO,GAAG,iBAAiB,IAAK,SAAU,YACzC,IAAM,IAAS,cAEf,cACA,gBAAO,MAAQ,GACf,aAAO,OACP,WAGA,cAAO,KAAM,aAAc,GAAI,GAG/B,gBAAK,SAAU,GAAQ,UAAW,iBAAM,IAAO,QAAS,SAExD,GACA,EACD,EAED,yCAMiB,QAChB,KAAM,GAAe,KAAK,OAAO,QAIjC,UAAK,SAAU,GAAc,QAAS,UACrC,IAAM,IAAa,GAEnB,0BAEC,OAED,YAGD,QAAK,OAAO,WAAW,IAAK,MAAe,eAC1C,CAAK,GAAK,SAAS,cAAgB,GAAiB,UAAC,GAAK,SAAS,aAClE,eAAK,SACL,QAED,KAGD,QAAK,OAAO,WAAW,IAAK,MAAe,eAC1C,CAAK,GAAK,SAAS,cAAgB,GAClC,cACA,aAED,KAGD,iBACC,SAAS,KACT,mBAAW,iBAAM,IAAK,SAAS,QAAS,GAAK,SAC7C,iBAAgB,KAAK,SAAS,KAC9B,iBAAU,iBAAM,IAAK,YAEtB,GAED,2BAQY,YAAa,QACxB,KAAM,GAAS,KACf,OAAM,GAAU,GAAO,SAAS,IAChC,QAAM,GAAU,GAChB,QAAM,GAAmB,GACzB,KAAM,GAAkB,GAAiB,UACzC,YAAM,GAAmB,KAGzB,sCAAK,SAAS,iBAAiB,UAAY,CAAC,CAQ5C,QAAK,SAAS,aAAa,UAAU,QAAQ,MAAQ,GAAQ,OAE7D,QAAK,SAAU,GAAkB,SAAU,UAC1C,IAAM,IAAqB,GAC3B,0BAAM,GAAoB,GAAiB,UACrC,YAAwB,IAAmB,CAOjD,EAAK,EAAyB,KAC7B,MAOA,eACC,MAAK,SAKL,oBAAK,SAAS,eAAgB,GAGhC,0BAED,GAAK,KAAK,SAAS,QAAS,KAE3B,WAAK,IAAc,KAAK,SAAS,cAAgB,KAChD,eAAK,SAAS,aAGf,SAAO,QAEP,WAAO,KAAK,SAAS,IACpB,MAAM,KACN,kBAAU,KAAK,4BACZ,KAAM,UACT,CACC,OAAK,SAAS,aAEf,QAEF,EAED,2BAQY,YACX,MAAK,cAAe,KAAK,OAAO,QAAQ,KAEnC,UAAC,KAAK,SAAS,QAAS,KAI7B,YACC,SAAK,OAAO,QAAQ,KAGrB,aAAK,cAAe,KAAK,OAAO,QAAQ,KACxC,eAAK,SAAS,OAAQ,KACtB,UAED,kDAWC,IAAM,IAAe,KAAK,OAAO,QACjC,KAAM,GAAa,KAEnB,0BAAM,GAEL,MAAa,aAAa,2BAE1B,OAAa,aAAa,eAAgB,GAAa,UAExD,uBACC,QACA,WAAS,GAAa,aAAa,2BAA4B,GAAa,UAE7E,iBAED,kDAYC,IAAM,IAAY,KAAK,OAAO,QAAQ,KAEtC,aAAK,GACJ,kBAAO,GAAyB,GAIhC,uBAAM,IAAQ,GAAU,gBACxB,aAAM,GAAY,EAAyB,GAC3C,OAAM,GAAU,EAAyB,GAEzC,WAAM,GAAD,EAAc,IAClB,GAII,UAAM,SAAU,IAAY,aAAa,QAC7C,IAEA,GAGF,KANC,cAlVF,yBAIC,OAAO,aACP,QAED,mCAIC,OACA,qBAmVF,mBAhWqB,kpBClBrB,mSAPA,gBACA,eACA,cACA,gBACA,gBACA,mBAOqB,cAKP,aAAS,QAGrB,kEAMA,aAAK,IAGL,kBAAK,SAAU,EAAO,SAAU,cAAe,UAC9C,GACA,iBACA,cAHD,GAIA,CAED,YAlBA,4CAsBC,MAAK,MAAQ,KAAK,OAAO,SAAS,UAAU,aAC5C,WAED,wCAQC,IAAM,GAAW,KAAK,OAEtB,eAAO,cAA+B,WAAY,EAAS,UAAW,EACtE,OAED,2BAgBY,WACX,IAAM,GAAW,KAAK,OACtB,SAAM,EAAY,EAElB,YAAS,eAAgB,UAExB,IAAM,GAAQ,EAGd,WAAK,EAAU,YACd,IAAM,GAAW,EACjB,mBAAM,EAAS,EAGf,UAAK,EAAU,aAAc,YAE5B,IAAM,GAAY,cAAe,EAAU,mBAAoB,EAAU,aAEzE,eAAM,aAAc,EAAW,WAG/B,KAAU,UAAW,CACrB,GACD,KACK,IAAK,EAAS,OAAO,MAAO,CAAE,KAAM,QAAS,WAAY,WAAY,OAAQ,EAAO,OACxF,IAAM,GAAO,cAAU,EAAM,CAAE,SAE/B,MAAM,OAAQ,EAGd,KAAU,UAAW,CAAE,UAAM,SAC7B,IACD,CAvBD,KA0BC,IAAM,GAAS,cAAsB,WAAY,EAAU,YAAa,EAAS,QAH3E,iBAKN,YAAqB,oDAAS,WAC7B,QAAM,aAAc,GAAO,WAC3B,YAPK,2EAQN,CACD,CACD,+BArGmB,kpBCLrB,mSAPA,eACA,eACA,eACA,gBACA,gBACA,mBASqB,0IACpB,uBAIC,IAAM,GAAS,KACf,OAAM,EAAO,EACb,KAAM,EAAU,EAGhB,UAAO,SAAS,OAAO,MAAO,CAAE,KAAM,UAAW,WAAY,WAAY,OAGzE,2BAAsB,IAAK,EAAK,YAAa,EAAQ,aACnD,cAAe,YACf,UAAW,kBAAY,eAAiB,IAAK,CAAE,KAAM,GAGvD,mBAAqB,IAAK,EAAK,aAC7B,YAAa,KACb,YAAa,kBACb,KACA,iBAAO,EAAY,aAAc,QAInC,KAAO,SAAS,IAAK,OAAQ,cAC7B,MAAO,SAAS,IAAK,SAAU,cAC/B,gCA5BmB,kpBCDrB,qjBAbA,aACA,cACA,gBAEA,eACA,gBACA,gBAEA,gBACA,eACA,gBACA,kBASqB,cAIP,aAAS,0EAGrB,IAAM,GAAI,EAQV,IAAK,aAAe,MAQpB,UAAK,WAAa,MAOlB,UAAK,aAAe,EAOpB,oBAAK,eAAiB,EAAK,cAAe,GAC1C,WAAK,eAAe,KAOpB,WAAK,iBAAmB,EAAK,cAAe,GAAG,UAO/C,YAAK,iBAAmB,EAAK,cAAe,GAAG,UAS/C,YAAK,YAAc,MASnB,UAAK,aAAe,cACnB,YAAY,EACZ,yBAAc,EACd,8BAAkB,EAClB,mBAEC,eAGA,wBAIF,mBAAS,OAAQ,EAAK,eAAe,SACpC,YACC,CAMF,gCAAK,SAAW,cACf,KAEA,kBACC,CAKA,gCAGD,eAAU,CACT,EAAK,aAEJ,KAEA,iBACC,CAKD,0CAAU,CACT,EAAK,eACL,EAAK,iBACL,EAMJ,oCACC,MAGD,OAAM,IAAa,CAClB,EAAK,aACL,EAAK,eACL,EAAK,iBACL,EAGD,4BAAW,QAAS,YAEnB,GAAK,YAAY,IAGjB,MAAK,aAAa,IAAK,GACvB,QAND,GAOA,CAED,YA3IA,oCAgJC,aAAK,WAAW,SAAU,KAE1B,uFACA,KAED,gCAIC,MAAK,aACL,YAED,0CAOC,IAAM,GAAI,KAAK,OAEf,EAAM,GAAe,cAAsB,KAAK,SAEhD,mBAAa,MAAQ,EACrB,eAAa,UAAU,YAAc,EAErC,sBACA,EAED,8BAQsB,cACrB,IAAM,IAAS,cAAgB,KAE/B,kBAAO,MACP,KAEA,YACC,OAAO,SAAU,WAAY,GAAI,KAGlC,IACA,YAgBF,mBApNqB,kpBCjBrB,mSAHA,gBACA,mBAOqB,cAKP,aAAS,QAGrB,kEACA,aAAK,SAAU,EAAO,SAAU,cAAe,UAC9C,GACA,cAFD,GAGA,CAED,YATA,0CAkBC,IAAM,GAAW,KAAK,OACtB,SAAM,EAAY,EAElB,YAAS,eAAgB,UAExB,IAAM,GAAiB,EAAU,YAChC,CAAE,cAAe,EAAU,mBAAoB,EAAU,aAAc,cAAmB,EAG3F,YAAM,EAAQ,EAEd,QAR8B,eAS9B,WAAqB,gDAAiB,SACrC,QAAM,gBAAiB,EACvB,oBAX6B,oEAY9B,CACD,EAED,wCAOC,OAAO,MAAK,OAAO,SAAS,UAAU,aACtC,wCAjDmB,6NCKrB,CA6lBoD,oBACnD,IAAI,IAAW,GAEf,UAAK,IACJ,UADgB,KAAS,SAChB,eAAgB,UACxB,QAAM,IAAW,GAEjB,gBAAM,GAAY,IAAY,GAAS,GAAI,YAAe,GAAS,aAAc,UAAa,EAG9F,EAAI,GAAY,GAAS,aAAc,UACvC,GAEA,MAAQ,IAA6B,UAAjB,KAAS,MAAsB,GAAS,aAAc,UAAa,IACtF,CAAK,GAAY,GAAS,aACzB,eAAY,GAAS,aAGtB,cAAM,IAAY,GAAS,aAAc,UAEzC,MAAM,KAAM,CAAE,KAAM,GAAU,OAE9B,QAAW,GACX,WAED,IAAoB,CAAf,IAAM,OACV,IADuB,mBAEvB,YAAoB,GAAM,6DAAY,YACrC,SAAM,aAAc,GAAK,KAAM,SAAU,GACzC,iBAJsB,4EAKvB,CACD,CAEF,EAID,CAC+D,uBAC9D,IAAI,IAAO,GAAgB,GAAc,aAEzC,aAAc,EAAT,EAAU,GAAK,GAAI,aAOxB,CAPwC,MAAK,aAAc,cAOlD,eAAgB,UACxB,IAAM,IAAU,EAA4B,GAAM,CAElD,OAAM,EAAD,EAAY,IAMjB,UAAM,IAAY,GAAQ,aAC1B,UAAM,GAAU,GAAQ,aAExB,QAAQ,IAAQ,GAAK,GAAI,aAAgB,GAAK,aAAc,WAC3D,IAAK,GAAK,aAAc,SAAY,IAAW,GAAK,aAAc,WACjE,OAAM,aAAc,GAAM,OAG3B,OAAO,GAAM,GAAc,kBAE5B,cACD,EAED,CA+DoC,iBACnC,IAAM,IAA+C,UAApC,KAAU,aAAc,QAAyB,KAClE,KAAM,GAAW,MAEjB,QAAM,GAAW,eAA0B,GAC3C,gBAAS,eAET,OAAO,aAAc,GAErB,IACA,EAYD,CACkD,iBACjD,QAAM,IAAY,GAAQ,QAAU,cACpC,kBAAM,GAAe,GAAQ,QAAU,YACvC,aAAM,GAAmB,CAAC,CAAC,GAC3B,iBAAM,GAAa,CAAC,CAAC,GACrB,WAAM,GAAe,CAAC,CAAC,GACvB,aAAM,GAAgB,CAAC,CAAC,GACxB,cAAM,GAAW,CAAC,CAAC,GAEnB,SAAM,GAAS,wBAA8C,GAAoB,aAAc,UAAa,GAC5G,OAAI,GAAO,wBAA8C,GAAqB,IAAc,GAE5F,OAAQ,IAAqB,UAAb,KAAK,MACd,OAAa,GAAK,aAExB,UACG,IAAc,IAAU,IACxB,IAAgB,GAAS,IACzB,IAAiB,GAAS,GAE5B,IAAK,CAAC,IAAY,GAAQ,OAAO,cAChC,UAEA,OAAO,GAEP,IAED,QAED,IAAK,CACJ,SAGD,SAAO,GACP,GAED,OACA,KAGD,CACoC,iBACnC,OAAK,KAAa,KAAkC,IAAlB,KAAU,MAAkC,IAAlB,KAAU,OAAkB,GAAU,MAAQ,GACzG,KAAO,WAAW,gBAAiB,WAAa,YAGjD,KACA,IAKD,CAC0D,uBACzD,IAAM,IAAe,GAGrB,OAKA,GAAI,GAAW,EAAoB,GAAW,CAAc,cAAqB,iBAEjF,yBAAK,IAAY,GAAS,aAAc,WAAc,GAAU,aAAc,UAG7E,IAAM,IAAW,GAAO,cACxB,OAAiB,WAAW,eAAgB,WAAa,YACzD,IAEA,SAAW,GAEX,mBAAK,IAMJ,UANgB,KAAS,KAMpB,GAAS,aAAc,UAAa,GAAU,aAElD,UAAiB,GAAO,eAAgB,UAAc,SAAU,GAIhE,QAAK,GAAe,OAAO,GAAI,OAAU,GAAe,OAAO,GAC9D,MAAiB,WAAW,eAE5B,IAMF,GAAiB,GAAO,eAAgB,UAAc,aAKxD,gBAAW,OAAQ,GAOnB,OAAM,IAAW,EAChB,GACA,CAAgB,gBAAe,WAAgB,YAAM,OAGtD,QAAK,GACJ,IAAM,IAAW,GAAO,cAGxB,eAAW,eAAgB,WAAa,aAGxC,QAAM,IAAc,WAAa,aAAc,GAE/C,QAAM,GAAgB,EACtB,OAAM,GAAe,GAAO,cAC5B,IAAM,GAAY,WAAW,eAAgB,WAAa,YAC1D,KAAM,GAAc,eAAe,GAEnC,IAAM,GAAiB,WAAa,SAAU,GAC9C,kBAAW,KAAM,GACjB,GAGD,GAAgB,GAAc,GAC9B,eAAgB,GAAa,gBAC7B,GAGD,CAC2G,0BAK1G,IAAM,IAAgB,EAAoB,GACzC,CACA,cACA,iBACA,2BAID,KAAM,GAAa,GAAgB,GAAc,aAAc,UAE/D,KAEA,MAAK,CAiBJ,MACA,OAAM,IAAK,IAAc,GAkBzB,IAAM,IAAe,GAAO,cAAe,IAC3C,UAAiB,WAAa,YAC9B,GApBM,KAuCN,IAAM,IAAgB,UAAc,SAAU,GAC9C,UAAiB,GAAO,eACxB,GAGD,wBAC0B,GAAgB,qCAAkB,WAC3D,KAAK,GAAM,GAAI,OAAU,GAAM,GAC9B,YAAiB,WAAW,KAAM,WAAU,SAAU,IAAS,IAE/D,MAAgB,GAAO,GACvB,eAAgB,GAAM,gBAGxB,IAED,CAC2C,iBAC1C,QAAM,IAAS,GAAK,aACpB,UAAM,GAAY,GAAW,kBAE7B,cAAI,GAEJ,GAAQ,GAAM,KAAe,GAAM,IAAY,GAAI,aAAgB,GAAM,IAAY,aAAc,WAClG,OAAO,GAEP,IAAK,GAAK,aAAc,WACvB,QAIF,UACA,G,oDA/9Be,mBAA2C,qBAC1D,IAAM,GAAW,KAAM,GAAK,KAC3B,SADI,EACH,GAAW,KAAM,GAAK,KACvB,sBAAC,GAAW,KAAM,GAAK,KAKxB,2BAAW,QAAS,GAAK,KACzB,aAAW,QAAS,GAAK,KACzB,wBAAW,QAAS,GAAK,KAEzB,0BAAM,IAAY,GAClB,KAAM,GAAW,EAAgB,GAAW,GAG5C,QAAM,GAAiB,GAAc,OAAO,eAAgB,UAAc,aAE1E,OAAgB,GAAW,GAAU,GAAc,OACnD,IAED,IAYgB,oBAA4C,qBAC3D,CAAK,GAAC,GAAW,QAAS,GAAK,KAI/B,4BAAM,IAAW,GAAc,OAAO,cAAe,GAIrD,iBAAW,eAAgB,WAAa,aACxC,gBAAW,eAAgB,WAAa,YAIxC,QAAI,IAAW,GACf,OAAM,GAAqC,UAA1B,KAAK,kBAAkC,KACxD,QAAW,WAAW,OAAQ,GAG9B,MAAgB,GAAU,GAC1B,eAAgB,GAAS,gBACzB,IAED,IASgB,gBAAwC,qBACvD,CAAK,GAAC,GAAW,QAAS,GAAK,KAI/B,cAAM,IAAe,GAAc,OAAO,eAAgB,GAC1D,gBAAM,GAAW,GAAa,UAAU,GAAI,MAAS,GAAa,UAAY,GAAa,UAAU,SAIrG,cAAW,eAAgB,WAAa,aACxC,gBAAW,eAAgB,WAAa,YAGxC,QAAM,IAAW,GACjB,OAAM,GAAe,GACrB,gBAAM,GAAc,WAAU,SAC9B,eAAW,OAEX,IAAK,IAAgB,GACpB,eAAgB,GAAc,GAI/B,eAAkB,GAAK,KAAK,aAAc,UAAa,EAAG,GAAK,eAAgB,GAAY,MAAO,GAAU,GAI5G,QACC,YADI,KAAK,KAAK,KAAK,aACL,OAAO,mBAAoB,GAE1C,MAED,IASgB,sBAA8C,qBAC7D,CAAK,GAAC,GAAW,QAAS,GAAK,KAI/B,8BAAM,IAAW,GAAc,OAAO,cAAe,GAIrD,iBAAW,eAAgB,WAAa,aACxC,gBAAW,eAAgB,WAAa,YAGxC,QAAM,IAAW,GACjB,OAAM,GAAe,GACrB,gBAAM,GAAc,WAAU,SAC9B,eAAW,OAGX,OAEA,IAAK,IAAgB,GACpB,iBAAiB,EAAgB,GAAc,GAG3C,cACJ,QAAiB,GAIlB,SAAkB,GAAK,kBAAoB,EAAG,GAAK,MAAM,MAAO,GAAY,MAAO,GAAU,GAG7F,UAAgB,GAAK,KAAM,GAAU,GAAc,OACnD,IAED,IAyBgB,uBAA+C,qBAC9D,IAAuB,UAAlB,KAAK,KAAK,KACd,QAAI,IAAe,GAAc,OAAO,eAAgB,GAAK,MAE7D,OAgDA,OAAoC,IAA5B,KAAa,OAAO,MAC3B,IAD2C,KAAa,OAAO,WAChD,WAAW,eAE1B,IAMA,IANK,KAAa,OAAO,WAMnB,IACN,GAAM,GAAY,WAAa,SAAU,GAAa,OAGtD,UAAK,CAAC,GAAY,QAAS,IAC1B,IAAM,IAAU,WAAW,OAAQ,eAAe,GAClD,QAAM,KACN,GAED,IAAe,WAAa,YAAa,GAI1C,WAAoB,CAAf,IAAM,OACV,KAAM,GAAI,IAAI,EAAG,GAAI,GAAM,OAAQ,KAClC,IAAM,IAAe,GACrB,WAAM,GAAgB,WAAW,OAAQ,GAAc,GACvD,WAAe,GAGf,IAAS,CAAJ,IACJ,IAAM,IAAW,EAAgB,GAAc,GAI/C,aAAK,IAAY,GAAS,QACzB,OAED,QACD,CAGD,GAAgB,GAAa,WAAY,GACzC,UACD,CACD,CAED,IAuBgB,oBAA4C,qBAC3D,IAAK,CAAC,GAAK,KAAK,GAAI,YACnB,IAAM,IAAe,GAAc,OAAO,eAAgB,GAC1D,gBAAM,GAAe,GACrB,WAAM,GAAe,GAKrB,YAAgB,GAChB,GACD,CAED,IAagB,mBAA2C,qBAC1D,IAAK,GAAW,QAAS,GAAK,MAAO,CAAQ,UAE5C,IAAM,IAAW,cAGjB,eAAK,OAAS,GAAK,OAAS,GAAK,OAEjC,KAAM,IAAiC,IAA1B,KAAK,MAAM,OAAO,KAAe,WAC9C,cAAS,aAAc,OACvB,OAAS,aAAc,SAAU,GAGjC,WAAK,QAAQ,KAGb,OAGA,YAAM,IAAQ,MACd,WAAM,eAIN,OAvBuD,mBAwBvD,YAAqB,GAAK,MAAM,oEAAgB,WAE/C,MAAM,GAAY,GAAc,YAAa,GAAO,GAIpD,IAAmB,IAAd,KAAM,MACV,IAD0B,KAAM,QAC1B,eAAgB,MAAM,KAAM,GAIlC,2BAAY,OAAQ,UAAc,SAAU,GAAU,OAEvD,GArCsD,uFAuCvD,IACA,YAAK,QAEL,SAAK,OACL,EACD,CAED,IAUgB,UAAsB,kBACrC,IAAK,GAAW,KAAM,GAAK,MAAO,CAAQ,UAEzC,IAAM,IAAW,MAAM,KAAM,GAAK,MAAM,eAFY,kBAIpD,YAAqB,sDAAW,YAC1B,MAAC,GAAM,GACX,UAED,kBARmD,4EASpD,CACD,CAED,IAQgB,cAA0B,kBACzC,IAAK,GAAW,KAAM,GAAK,MAAO,CAAQ,UACzC,IACC,CADI,MAAK,MAAM,WAIhB,UAAM,gBAAgB,GAAK,MAE3B,gBACA,MAAgB,MARoC,kBAUpD,YAAqB,sDAAW,YAC/B,MAAkB,KAAC,GAAM,GAAc,OAAC,GAAM,GAC7C,UAGD,SAAK,GAAM,GAEV,SACC,QAAM,KAAO,GAAM,KAAK,QAAS,OAIlC,MAAK,CAAC,GAAM,aAAiB,GAAM,YAAY,GAAI,OAAU,GAAM,YAAY,GAC9E,YAAM,KAAO,GAAM,KAAK,QAAS,OAE5B,OAAK,GAAM,GAAI,OAAU,GAAM,GAErC,SAGD,OACA,eA/BmD,4EAgCpD,CACD,CAED,IASgB,oBAA0B,eACzC,IAAM,IAAY,GAAK,cAEvB,cAAK,IAAa,GAAU,GAAI,YAC/B,IAAM,IAAW,GAAK,OAAO,cAC7B,IAAM,GAAkB,GAAS,eAAe,KAAM,mBAAW,IAAQ,GAAI,OAAU,GAAQ,GAAI,KACnG,GAAM,GAAS,eACd,eAAe,WAAa,SAAU,GAAU,KAJH,kBAO9C,YAAqB,sDAAS,eAC7B,MAAmB,cAAd,KAAM,MAA0B,GAAM,KAAK,GAAI,MACnD,IAAK,aAAe,GAEpB,iBACA,KAJD,KAIO,IAAmB,YAAd,KAAM,MAAwB,GAAM,MAAQ,GACvD,IAAK,aAAe,GAEpB,aACA,KACD,WAjB6C,4EAkB9C,CACD,CAED,IASgB,oBAA0B,eACzC,IAAM,IAAU,GAChB,aAAM,GAAa,GACnB,OAAM,GAAS,GAEf,UAAwB,IAAnB,KAAW,MAAmC,IAAnB,KAAW,KAE1C,IAAK,CAAC,GAAQ,QAGb,IAAM,IAAY,GAAO,eAAgB,GAEzC,cAAK,cAAgB,UAAc,aACnC,GAND,KAWC,IAAM,IAAY,GAAO,eAAgB,GACzC,YAAM,GAAc,GAAO,eAAgB,GAG3C,eAAK,cAAgB,UAAc,aAAc,IAAY,aAC7D,GAED,IACA,MArBD,KAqBO,IAAwB,IAAnB,KAAW,MAAgB,GAAQ,aAA2C,IAA3B,KAAQ,WAAW,MAA2C,IAA3B,KAAQ,WAAW,MAGpH,QAAM,IAAY,GAAO,eAIzB,IAAI,GACJ,EAAI,GAAW,GAEf,WAAQ,KAAc,GAAS,GAAI,OAAU,GAAS,GACrD,YAAe,GAAO,eAEtB,OAAW,GAGZ,mBAAK,cAAgB,UAAc,aAAc,IAAY,aAE7D,OACA,MACD,CAED,IAiBgB,qBAAsB,YACrC,OAA6B,sBAC5B,IAGC,QAHI,OAGa,GAAQ,eAAgB,GAEzC,MAAe,GAAwB,kBAAO,GAC9C,QAAM,IAGN,MAHW,OAGM,GAAQ,eAAgB,GAEzC,MAAe,GAAwB,kBAAO,GAI9C,MAAiB,GAAQ,MAAM,MAAO,GAEtC,MAAe,GAAQ,MAAa,SAAO,GAI3C,MAAiB,GAAQ,MAAM,IAAK,GAEpC,MAAe,GAAQ,MAAW,OAAM,GACxC,QAAM,IAAa,QAAR,MAAuC,UAAnB,KAAQ,SAA4C,UAAnB,KAAQ,QACxE,IAAM,IAAU,GAGhB,WAAS,eAAgB,UACxB,IAAM,gBAAiB,GAAS,UAAW,gBAAiB,GAC5D,OAED,MAAM,IAAY,UAAc,YAAa,GAI7C,WAAiB,GAAW,GAC5B,GAAM,KAGN,QAHW,SAGM,GAAQ,MAAM,MAAO,GAEtC,MAAe,GAAQ,MAAa,SAAO,GAI3C,MAAiB,GAAQ,MAAM,IAAK,GAEpC,MAAe,GAAQ,MAAW,OAAM,GAEzC,IACD,CAGD,IA8FgB,sBAA4B,eAI3C,IAAI,IAAO,GAAK,QAAQ,SAExB,MAAK,GAAK,GAAI,YAEb,IAAM,IAAM,GAAK,UACjB,mBAAI,GAEJ,QAAK,GAAI,OAAO,GACf,eAAU,GACJ,OAAK,GAAI,YAAc,GAAI,WAAW,GAC5C,iBAAU,GAIX,YAAK,GAIJ,IAAM,IAAe,GAAQ,aAG7B,aAEC,CAFI,SAEI,IAAQ,GAAK,GACpB,gBAAK,aAAc,SAAU,GAAK,aAAc,UAEhD,OAAO,GAGT,WACD,CACD,CAID,EA9uBA,iBAEA,eACA,cACA,cACA,iBAEA,kBACA,kBACA,kBACA,kBACA,sqBCRA,CAmIyB,eAExB,IAAM,GAAO,EAGb,SACC,EAMD,cANO,aAAc,EAAM,OAAQ,EAAK,aAEvC,YAIK,GAAO,EAGb,MACC,KAAM,aAAc,EAAM,OAAQ,EAAK,aAExC,QAGD,CAC8B,eAC7B,QAAI,GAAS,EAAM,EAAc,cAIjC,mBAAQ,GAAU,EAAO,GAAI,aAAgB,EAAO,aAAc,WAAc,EAAK,aAAc,WAClG,IAAK,EAAO,aAAc,WAAc,EAAK,aAE5C,gBAGD,KAAS,EAAQ,EAAc,cAC/B,kBAED,OACA,K,mSA3KD,gBACA,kBAOqB,cAQC,eAAkB,QAGtC,kEAOA,aAAK,UAA+B,SAAnB,IAA+B,EAAI,CAEpD,IAAK,SAAU,EAAO,SAAU,cAAe,UAC9C,GACA,cAFD,GAGA,CAED,YAjBA,0CAoBa,OACZ,KAAM,EAAM,KAAK,OACjB,SAAM,EAAQ,EACd,QAAI,EAAgB,MAAM,KAAM,EAAI,UAEpC,uBAAI,eAAgB,UACnB,QAAM,GAAW,EAAe,EAAc,OAG9C,GAAI,EAAO,EAGX,YAAQ,GAAqB,UAAb,IAAK,MAAsB,EAAK,aAAc,UAAa,EAAS,aACnF,aAAc,KAEd,KAAO,EAOR,YACC,CADI,GAAK,cACO,EAChB,cAnBwB,gBAqBzB,WAAoB,mDAAgB,SACnC,MAAM,EAAS,EAAK,aAAc,UAAa,EAI/C,UAIC,CAJI,KAIE,OAAQ,EAId,eAAM,aAAc,EAAM,SAE3B,EAGD,WAvCyB,qEAwCzB,CACC,CADI,GAAK,cACO,EAChB,cA1CwB,gBA4CzB,YAAoB,oDAAgB,WACnC,QAAU,GACV,YA9CwB,uEA+CzB,CACD,EAED,wCAKC,IAAM,GAAW,cAAO,KAAK,OAAO,SAAS,UAG7C,wBAAK,CAAC,GAAY,CAAC,EAAS,GAC3B,YAGD,YAAsB,CAAjB,MAAK,UAGT,QAAM,GAAS,EAAS,aACxB,UAAM,EAAO,EAAS,aAEtB,QAAI,EAAO,EAEX,gBAAQ,GAAQ,EAAK,GAAI,aAAgB,EAAK,aAAc,WAAc,GACzE,IAAK,EAAK,aAAc,WAKvB,QAAO,GAAK,aAAc,SAG3B,IAAO,EACP,eAGD,CACA,QAGD,CACA,kBAIF,mBA7HqB,kpBCCrB,mSATA,iBAEA,gBACA,gBAEA,cACA,OACA,mBAUqB,0IAepB,uBAGO,OAEN,KAAM,EAAI,KAAK,OACf,OAAK,WAAY,eAAgB,EAAG,mBACpC,cAAK,WAAY,eAAgB,EAAG,mBAIpC,cAAK,SAAU,KAAK,OAAO,QAAQ,KAAM,QAAgB,aACxD,IAAM,GAAM,EAAK,OACjB,SAAM,EAAiB,EAAI,UAAU,kBAErC,OAAK,EAAI,UAAU,aAAsC,UAAvB,IAAe,MAAsB,EACtE,YAAK,OAAO,QAEZ,iBACA,mBAED,OAKD,QAAK,SAAU,KAAK,OAAO,QAAQ,KAAM,UAAkB,aAC1D,IAEA,MAAK,EAAK,WAAa,qBACtB,SACM,aAAK,EAAK,WAAa,qBAC7B,iBAGD,eAAK,EACJ,IAAM,GAAU,EAAK,OAAO,SAAS,IAErC,GAAK,EACJ,cAAK,OAAO,QAEZ,KACA,mBAED,OACD,CACD,EAED,2BAQgC,eAAO,OACtC,KAAM,EAAS,KACf,OAAM,EAAU,EAAO,SAAS,IAEhC,KAAO,GAAG,iBAAiB,IAAK,EAAa,WAC5C,IAAM,GAAa,cAEnB,YAAW,IACV,OACA,OACA,EAID,eAAW,KAAM,OAAQ,aAAc,GAAI,EAAS,QAGpD,eAAK,SAAU,EAAY,UAAW,iBAAM,GAAO,QAAS,EAE5D,GACA,CACD,YA3FD,yBAIC,OAAO,GACP,QAED,mCAIC,OACA,wCAbmB,kpBCbrB,CAyPuC,iBAEtC,IAAM,GAAe,EAAa,EAAQ,GAAM,EAAQ,EAAO,OAE/D,MAAK,EAAa,GACjB,mBAAI,GAAO,EAAc,EAAa,kBActC,eAAI,EAAgB,EAAa,aAIjC,UAAQ,GAAQ,EAAK,GAAI,aAAgB,EAAK,aAAc,WAC3D,GAAK,EAAgB,EAAK,aACzB,cAAgB,EAAK,aAItB,WAAK,EAAK,aAAc,WAEvB,KAAQ,EAAa,UAAY,QAGlC,KAAO,EAAM,EAAa,kBAG5B,c,mSAlSD,gBACA,cACA,kBAOqB,cAOC,eAAO,QAG3B,kEAMA,aAAK,KAAe,UAAR,IAAqB,WAQjC,aAAK,IAGL,cAAK,SAAU,EAAO,SAAU,cAAe,UAC9C,GACA,iBACA,cAHD,GAIA,CAED,YA1BA,4CA+BC,IAAM,GAAW,cAAO,KAAK,OAAO,SAAS,UAE7C,0BAAK,MAAQ,GAAY,EAAS,GAAI,aAAgB,EAAS,aAAc,SAAY,KACzF,IAED,qCAQ2B,kEAC1B,MAAM,EAAW,KAAK,OACtB,SAAM,EAAS,MAAM,KAAM,EAAS,UAGpC,qBAAM,EAAU,UAGhB,QAAS,eAAgB,UACxB,IAAM,GAAQ,EAAQ,OAAS,EAI/B,WAAK,EAEJ,QAAI,GAAO,EAAQ,EAAO,OAAS,GACnC,YACA,2BAkDA,OAAQ,GAAqB,UAAb,IAAK,MAAwD,CAAlC,KAAK,aAAc,WAGvD,GAAS,EAAK,aAGpB,UAAK,EAEJ,MAKD,MAAM,GAAY,EAKlB,IAAQ,KAAM,CAAE,QAAS,EAAM,OAG/B,MAAO,EACP,WAED,GAAU,EAAQ,aA9EJ,gBAgFd,WAAoB,mDAAU,WAC7B,QAAM,aAAc,GAAK,QAAS,SAAU,GAC5C,iBAlFa,qEAmFd,CAmBD,IAAK,CAAC,EAGL,IAA0B,6BAHX,kBAKf,YAAoB,qDAAS,YAC5B,MAAK,GAAK,GAAI,aAAgB,GAAK,aAAc,UAChD,QAAe,GAAK,aAItB,oBAXe,4EAYf,IAAgC,CAAjB,MAAqB,EAGpC,KAAkB,KAGlB,MAAkB,KAClB,GAKD,IAnI8B,mBAoI9B,YAAuB,EAAO,6DAAY,YACzC,MAAK,GAGJ,UAHe,KAAQ,OAGjB,OAAQ,GACR,aAAM,CAAD,EAGX,UAHuB,KAAQ,KAIpB,CAAC,GAA2B,UAAhB,KAAQ,MAAsB,GAAQ,aAAc,SAAY,EAGvF,QAAM,aAAc,GAAS,OAAQ,EAEtC,QANO,aAAc,GAAS,OAAQ,EAAK,MAAO,aAAc,GAAS,SAAU,GAAI,OAAQ,GACxF,qBA7IsB,4EAmJ9B,CACD,EAED,wCAKC,IAAK,KACJ,MAGD,YAAM,GAAY,KAAK,OAAO,SAC9B,UAAM,EAAS,KAAK,OAAO,SAE3B,OAAM,EAAa,cAAO,EAErB,6BAKL,GAAO,EAAO,MACb,MACA,WACA,oCAAQ,UAAS,aAElB,cAUF,mBAnPqB,kpBCarB,CA8FgC,aAC/B,IAAI,GAAS,EAD4B,eAGzC,WAAqB,EAAQ,4DAAgB,YAC5C,MAAmB,IAAd,IAAM,MAA8B,IAAd,IAAM,KAAe,2BAC/C,WAAoB,EAAM,4DAAgB,SACzC,SAAU,EACV,WAH8C,oEAI/C,CACD,UATwC,oEAWzC,OACA,E,mSAhID,iBACA,gBAEA,cACA,eAEA,YAsBqB,0IAQpB,uBAIC,IAAM,GAAS,KAMf,OAAM,EAAS,EAAO,SACtB,SAAO,aAAc,WACrB,YAAO,MACN,MACA,kBACA,QAED,iCAAO,kBAGP,iCAAM,GAAO,EACb,KAAM,EAAU,EAEhB,aAAK,OAAO,SAAS,GAAI,SAAU,2BAAsB,KAAK,OAAO,UAAY,CAAE,SAInF,cAAK,OAAO,SAAS,GAAI,SAAuB,eAC/C,IAAa,MAAR,IAAiB,oBACrB,WAAoB,EAAQ,MAAM,0DAAa,UAC9C,MAAK,GAAK,GACT,eAAQ,OAAO,mBAEhB,aALoB,qEAMrB,CACD,CARD,EAQG,CAAE,SAEL,WAAQ,OAAO,0BAA2B,KAC1C,KAAK,OAAO,0BAA2B,KAEvC,KAAQ,OAAO,GAAI,wBACnB,uBAAQ,OAAO,GAAI,wBACnB,uBAAK,OAAO,GAAI,wBAEhB,uBAAQ,YAAY,GAAI,kCAAkC,CAAE,SAC5D,WAAQ,YAAY,GAAI,oBACxB,sBAAK,YAAY,GAAI,kCAAkC,CAAE,SACzD,WAAK,YAAY,GAAI,oBAIrB,sBAAQ,YAAY,GAAI,kCACxB,uBAAK,YAAY,GAAI,kCAErB,uBAAQ,YAAY,GAAI,oBACxB,mBAAQ,YAAY,GAAI,+BAA+B,CAAE,SACzD,UAAK,YAAY,GAAI,oBACrB,mBAAK,YAAY,GAAI,+BAA+B,CAAE,SAEtD,UAAQ,YAAY,GAAI,oCACxB,yBAAK,YAAY,GAAI,oCAErB,yBAAK,YAAY,GAAI,yBAAyB,CAAE,SAChD,WAAK,YAAY,GAAI,yBAAyB,CAAE,SAChD,WAAK,YAAY,GAAI,6BAA6B,CAAE,SACpD,WAAK,YAAY,GAAI,eAGrB,sBAAK,GAAI,wCAAwC,CAAE,SAGnD,WAAO,SAAS,IAAK,eAAgB,cAAiB,EACtD,eAAO,SAAS,IAAK,eAAgB,cAAiB,EAGtD,eAAO,SAAS,IAAK,aAAc,cAAmB,EACtD,cAAO,SAAS,IAAK,cAAe,cAAmB,EACvD,sBApFD,yBAIC,OAAO,GACP,qCANmB,+lBC1BrB,CA4BS,YACR,IAAM,GAAe,CAAC,KAAK,UAAwC,IAA3B,OAAK,SAAU,GAAI,MAE3D,IAF2E,OAAK,SAAU,GAAI,YAEvF,MAAK,SAAW,EAAe,EACtC,I,kDAlCD,mEASqB,cAQA,eAAW,QAG9B,kEAFO,KAAM,EAKb,aAAK,gBAAkB,EACvB,aAPD,QAYD,mBApBqB,kpBCLrB,mSAJA,gBACA,cACA,kBAOqB,cAMP,aAAS,QAGrB,kEAQA,aAAK,IAGL,cAAK,SAAU,EAAO,SAAU,cAAe,UAC9C,GACA,iBACA,cAHD,GAIA,CAED,YApBA,0CA+B2B,2DAC1B,MAAM,EAAW,KAAK,OAEtB,WAAS,eAAgB,UACxB,IAAM,GAAQ,EAAQ,OAAS,EAC/B,QAAM,EAAS,CAAE,EAAQ,WAAa,EAAS,WAAY,oBAF7B,eAI9B,WAAqB,gDAAS,SACxB,MAAC,EAAM,GACX,gBAAM,OAAQ,EAEf,qBAR6B,oEAS9B,CACD,EAED,uCAIC,IAAM,GAAQ,cAAO,KAAK,OAAO,SAAS,UAE1C,0BAAK,MAAQ,CAAC,CAAC,GAAS,EAAM,GAC9B,YAED,wCAIC,IAAM,GAAQ,cAAO,KAAK,OAAO,SAAS,UAE1C,2BAAO,CAAC,CAAC,GAAS,KAAK,OAAO,SAAS,OAAO,MAC7C,MACA,mBAAQ,UAAS,aAElB,iCAvEmB,kpBCFrB,mSAPA,eAEA,gBACA,gBACA,gBACA,mBAeqB,wKAEnB,OAAO,iCACP,qCAHmB,kpBChBrB,mSAJA,eACA,gBACA,mBAOqB,iKASnB,IAAM,GAAS,KACf,OAAM,EAAc,EAAO,QAE3B,OAAY,cAEZ,WAAO,SAAS,IAAK,gBAAiB,cAAmB,EACzD,cAAO,SAAS,IAAK,SAAU,cAAmB,EAElD,kBAAK,SAAU,EAAa,SAAiB,aAC5C,GAAO,QAA2B,SAAlB,IAAK,UAAyB,gBAAkB,SAAU,CAAE,KAAM,EAClF,SACA,gBACD,YApBD,2BAIC,OACA,4CANmB,kpBCJrB,mSALA,gBACA,eACA,gBACA,mBAQqB,cAQC,eAAY,QAGhC,kEAOA,aAAK,UASL,IAAK,QAAU,cAAkB,EAAO,SAAU,EAAO,OAAO,IAAK,oBACrE,CAED,YAtBA,0CA8B2B,kEAC1B,MAAM,EAAM,KAAK,OACjB,SAAM,EAAiB,KAAK,OAE5B,OAAI,eAAgB,UACnB,GAAK,QAEL,UAAM,GAAY,UAAU,oBAAqB,EAGjD,cAAK,EACJ,eAAe,gBAAiB,EAAW,CAAE,UAAW,EAAK,UAAW,KAAM,EAI/E,QAAK,EAIL,gBAAI,GAEJ,IAAU,gBAAgB,uBAAuB,QAAS,WACzD,IAAe,cACd,EAAM,UAAW,CAAoB,oBAAwB,oBAE9D,aAED,KAAe,cAAe,EAAW,EAAK,QAAQ,MAAO,CAC7D,aAAK,QAAQ,MAEb,KAAI,UAAU,UAAW,EAAU,YAAa,EAEhD,cAAK,QACL,SACD,+BAxEmB,kpBCPrB,mSAJA,gBACA,gBACA,WAOqB,cACP,aAAW,0EAGvB,aAAS,GAAI,UAAkB,aAC9B,IAEA,SAAK,EAAK,SAAW,WACpB,SAAW,UACX,YAAW,KACX,gBAAM,IAAK,EAAK,SAAW,WAC3B,YAAW,UACX,aAAW,KAEX,gBAGD,UAAW,KAAO,EAAK,OAAS,OAAS,EAEzC,OAAS,KAAM,SAAU,cAAkB,EAAU,EAAK,SAC1D,GAhBD,GAiBA,CAED,YAtBA,uCAyBY,WAGb,mBA7BqB,kpBCArB,CAwQ0B,aAEzB,SAAK,EAIL,SAAO,EAAa,SAAU,EAC9B,QAGD,CACsC,eACrC,OAAK,yBAAgC,eACpC,QAAO,EAAS,OAAS,EAEzB,KAAO,IAER,C,mSAlSD,eACA,cACA,eACA,eACA,gBACA,gBACA,OACA,oBAOqB,0IAQpB,uBAGO,OACN,KAAM,EAAS,KACf,OAAM,GAAc,EAAO,QAC3B,KAAM,GAAe,cAAkB,EAAQ,EAAO,OAAO,IAAK,oBAIlE,MAAO,SAAS,IAAK,QAErB,SAAK,SAAU,GAAa,UAAkB,eAC7C,GAAK,eAAgB,GAAM,GAC3B,OAFD,EAEG,CAAE,SAEL,gBAAK,SAAU,GAAa,YAA+B,kBAC1D,GAAK,iBAAkB,GACvB,GACD,EAED,+BAgByB,aAAS,QACjC,KAAM,GAAM,KAAK,OAEjB,SAAK,EAAiB,IAAa,GAAI,UAIvC,gBAEA,UAAI,eAAgB,UACnB,IAAK,OAAO,KAAK,cAAe,GAAI,UAAW,EAC/C,MAED,KACA,SAED,iCAO6B,aAC5B,IAAI,GAAiB,KAAK,QAAS,OAAQ,EAC3C,YArED,2BAIC,OACA,wBAmEF,mBAzEqB,EAyPrB,IAAM,GA3KA,aAML,CAAa,aAAS,QAOrB,QAAK,OAQL,OAAK,QAAU,KAAK,OACpB,OAED,iCAOmB,aAAgB,sBAClC,YAAwB,oDAAY,WAEnC,WAAK,oBAAqB,GAC1B,QAAK,yBACL,aALiC,2EAMlC,qCAE8B,aAC9B,IAaA,MAbK,IAAS,UAyBR,GAZA,GAAU,EAAS,QAAQ,QAAS,UAE1C,KAAM,GAAU,EAAS,QAAQ,QAAS,UAE1C,KAAM,GAAa,cAAM,GAGzB,GAAI,GAEJ,KAAI,GAGJ,KAAU,GAAI,KAAG,GAAI,GAAW,OACzB,QAAS,GAEf,IACC,OADI,UAC8B,IAAlB,KAAyB,GACzC,MAKF,QAIM,GAJF,IAEJ,EAAI,GAEJ,EAAU,GAAI,GAAe,IAAK,GAEjC,KACC,QADI,KAAY,KAKjB,KACC,QADI,KAAY,KAMlB,QAAI,IAEJ,KACC,OAAsB,KAAK,QAAQ,OAAO,aAAc,EAIzD,qBAAM,IAAU,cAAkB,EAAS,KAC3C,IAAM,GAAW,KAAK,QAAQ,OAAO,gBACrC,IAAM,GAAc,UAAW,2BAA4B,GAC3D,IAAM,GAAa,EAAQ,OAAQ,GAEnC,SAAK,OAAO,QAAS,QACpB,MACA,SACA,eAED,8CAEyB,WACzB,IAKA,UALK,IAAS,MAUd,CALK,IAAS,YAAY,OAAS,EAAS,YAAY,WAKlD,GAAa,cAAM,EAAS,YAAa,EAAS,YACxD,GAAM,EAAU,cAAe,EAAY,EAG3C,kBAIA,CAJK,GAAQ,YAIP,IAAS,EAGf,GAAK,GAAG,GAAO,OAAQ,eAIvB,YAAM,IAAU,cAAkB,EAAS,KAAM,GACjD,OAAM,GAAW,KAAK,QAAQ,OAAO,gBACrC,IAAM,GAAe,GAAO,OAAQ,GAEpC,UAAK,OAAO,QAAS,QAKpB,MAAM,GAAa,QAAS,UAC5B,WAAO,cAER,cAGF,IAAM,EAAe,CACpB,cAAS,WACT,cAAS,cACT,cAAS,aACT,cAAS,aACL,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAIL,KACU,EAAO,IAAa,GAAR,IACrB,MAAa,KAQd,mpBC7QA,iiBAHA,cACA,mBAOqB,cAQC,eAAe,QAGnC,kEAOA,aAAK,QAAU,cAAkB,EAAO,SAAU,GAClD,CAED,YAbA,uCAiBC,kFAEA,WAAK,QACL,eAAK,QACL,IAED,QASA,6BAa2B,kEAC1B,MAAM,EAAM,KAAK,OACjB,SAAM,EAAO,EAAQ,MACrB,GAAM,EAAiB,EACvB,OAAM,EAAQ,EAAQ,OAAS,EAAI,UACnC,gBAAM,EAAc,EAEpB,cAAI,eAAgB,UACnB,IAAM,GAAmB,EAEzB,cAAK,QAEA,OACJ,KAAK,QAAQ,MAAM,OAGpB,KAAK,QAAQ,MAAM,WAAY,EAAM,MAErC,GACC,IAAK,OAAO,KAAK,MAAM,UAAU,UAAW,CACtC,IAEN,KAAK,OAAO,KAAK,MAAM,UAAU,SAAU,EAAM,MAAM,aAGxD,MAAK,QAEL,WAAK,QAAQ,MACb,EACD,iCA7CA,OAAO,MACP,oCAtCmB,kpBCJrB,mSAJA,eACA,gBACA,mBAOqB,wKAEnB,OAAO,aACP,QAED,mCAIC,OACA,4CAVmB,mFCGG,mBAAoD,mCAC3E,WAAQ,SAAU,SAAU,UAAa,aAAsB,SAC9D,QAAK,GAAW,WAAS,KACxB,KAED,GACD,EAlBD,EAEA,QAEA,+HCFA,mSAFA,kEAUqB,YAOpB,CAAa,aAAS,QAOrB,QAAK,OAQL,OAAK,YAAc,GACnB,IAED,8BASW,aACV,IAAK,KAAK,YAAY,IAOrB,QAAM,eACL,kFAAmF,CAAE,KAIvF,SAAK,YAAY,IAAK,EACtB,EAED,uBAMQ,WACP,IAAM,GAAY,KAAK,YAAY,IAEnC,MAAK,CAOJ,OAAM,eACL,+EAAgF,CAAE,KAIpF,UAAO,GAAW,KAAK,OACvB,2BAxEmB,kFCNrB,oDAQwB,QAAuB,aAC9C,IAAM,GAAa,cACnB,KAAW,KAAM,QAAS,OAAQ,YAAa,WAAY,YAAa,WAAY,GAEpF,MAAM,GAAY,cAElB,SAAO,eAAkB,EAAQ,EACjC,EAvBD,EAIA,gBACA,gBACA,mqBCCA,kDAHA,eACA,iBAOqB,cAIP,aAAS,0EAGrB,IAAM,EAAO,EAQb,sBAAK,IAQL,kBAAK,SAAW,EAEhB,qBAAK,SAAW,cACf,KAEA,iBACC,OAAO,CACN,WACA,qBACA,EAAK,GAAI,YAIX,yCAAU,EAAK,WAEhB,aAlCD,2BAJoB,kpBCHrB,iiBALA,aACA,cACA,eACA,kBAOqB,cAIa,iBAAY,QAK5C,kEACA,qBAAS,OAAQ,EAAW,SAC3B,YACC,CAYF,mCAAK,WAQL,IAAK,UASL,IAAK,IAQL,eAAK,aAAe,MAQpB,UAAK,WAAa,MAElB,UAAK,SAAW,cACf,KAEA,iBACC,CAKD,gCAAU,CACT,EAMF,OAAK,SAAU,EAAY,UAAW,UACrC,GAAK,OAAS,CAAC,EACf,MAGD,KAAU,KAAM,aAAc,KAuB9B,UAMA,CAED,YA3GA,oCA8GO,OAEN,UAAK,WAAW,SAAU,KAG1B,cAAK,aAAa,IAAK,KAEvB,YAAM,GAAwB,aAC7B,CAAK,EACJ,WAAK,WACL,UACA,UAED,IAGD,cAAK,WAAW,IAAK,YAAqB,aACpC,CAAC,EACL,WACA,UAED,IAGD,QAAK,WAAW,IAAK,aAAsB,aAC1C,CAAK,EACJ,QAED,GAGD,QAAK,WAAW,IAAK,YACrB,QAAK,WAAW,IAAK,MAErB,iFACA,KAED,gCAIC,MAAK,WACL,oCA5JmB,0MCJrB,CAkEsC,aAGrC,GAAa,SAAU,SAAU,QAAW,aAAuC,SAElF,OAAK,EAAa,SAA2B,GAAC,EAAa,QAAQ,SAClE,OAED,UACD,E,oDAnEuB,QAA2B,aAClD,IAAM,GAAe,cAAgB,EAErC,GAAM,EAAW,EAAa,SAAW,cAEzC,YAAS,MAAM,OAAQ,EAAM,OAAQ,MAAO,WAC3C,IAAM,GAAO,cAGb,YAAK,eAAS,OAAO,KAAM,KAAc,GAEzC,GACA,CAGD,KAAS,MAAM,SAAU,WAAY,GAErC,KAAa,UAAU,SAAS,IAEhC,KAAa,GAAI,gBAA8B,eAC9C,CACC,IAEA,KAAa,cAEd,SAGD,KAAa,GAAI,UAAW,UAC3B,GACA,SAID,KAAa,WAAW,IAAK,YAAqB,aACjD,CAAK,EACJ,WACA,QAED,IAID,KAAa,WAAW,IAAK,UAAmB,aAC/C,CAAK,EACJ,WACA,YAED,IAED,GACA,CAMD,EArEA,iBACA,gBACA,mqBCDA,iiBAHA,aACA,iBAOqB,cAQC,eAAkB,0EAGtC,IAAM,EAAO,EAEb,mBACC,OAAK,QAAU,EAAK,gBAGrB,KAAK,SAAW,cACf,KACA,iBACC,OAAO,CACN,EAAK,GAAI,YAAa,kBAAS,GAAQ,aAAe,YAAtD,GAGD,uCAAiB,EAAK,GAAI,aAAc,kBAAS,CAAC,CAUpD,QAAK,IAQL,mBAAK,IAQL,kBAAK,gBAEL,EAMA,CAED,YApDA,oCA2DC,OAAK,MACJ,qBAAK,SAAS,MAAO,KAErB,sBAAK,gBAAkB,KAGxB,sFACA,KAED,kCAIC,OAAK,MACJ,sBAAK,SAAS,OAAQ,KAGvB,kGACA,kCArFmB,kpBCLrB,kDAHA,iBACA,iBAOqB,cASC,eAAkB,0EAC/B,EAEP,IAAM,EAAO,EACb,aAAM,EAAI,EAQV,IAAK,IAAK,OAEJ,uBAIG,OAAQ,EAAK,SACrB,YACC,MACA,uBAAc,EAAK,GACnB,OARe,WAChB,OAAO,GAAG,uBAAwB,CAClC,GAED,SAIS,gCAGT,aAzBD,2BAToB,kpBCJrB,kDAJA,iBACA,eACA,iBAQqB,cAMP,aAAS,0EAGrB,IAAM,EAAI,EACV,EAAM,EAAe,KAQrB,oBAAK,IAAK,QAQV,QAAK,IAAK,SASV,QAAK,IAAM,EASX,qBAAK,KAAO,EAEZ,qBAAK,SAAW,cACf,KAEA,iBACC,CAKA,yDACA,kBACA,WAAM,EACN,iDAGD,YAAU,CAER,KACA,kBACC,8BACA,QAED,4BAEC,GAAG,sBAIJ,KACA,iBACC,OACA,mCAED,yBAAU,EAAK,KAGf,KACA,iBACC,OACA,uBAED,yBAAU,EAAK,SAIlB,aArFD,2BANoB,kpBCLrB,iiBAHA,aACA,iBAOqB,cAMP,aAAS,QAGrB,kEAOA,aAAK,KAAO,EAEZ,mBAMA,CAED,YApBA,oCAuBO,OACN,WAAO,SAAQ,UACb,KAAM,iBAAM,GAAK,uBADZ,GAEL,KAAM,+FACR,EAED,kCAIC,aAAK,yBAEL,0FACA,KAED,gDAMC,IAAM,GAAc,KAAK,yBAA2B,cACnD,KACA,iBACC,CAMD,gEAAU,KAAK,OAGhB,kBAAS,KAAK,YACd,+BA/DmB,kpBCLrB,kDAHA,eACA,iBAOqB,0BAIN,qEAGb,OAAM,EAAO,EAQb,sBAAK,IAUL,aAAK,IAAK,UAEV,eAAK,SAAW,cACf,KACA,SACA,wCACC,OACA,kBAAS,EAAK,GAMhB,gBAAK,GAAI,iBAA+B,eACvC,QAAM,GAAM,GAAI,aACd,gBAAiB,EAAM,OAAQ,iBAGjC,WACC,CADO,GAAI,WAAW,UACjB,QAAQ,YAAa,EAAI,WAE/B,GARD,GASA,aA3CD,2BAJoB,kpBCPrB,kDAHA,eACA,iBAOqB,cAIP,aAAS,QAGrB,kEAMA,MAAK,IAQL,UAAK,IAEL,UAAM,GAAO,EAEb,sBAAK,SAAW,cACf,KACA,mBACC,CAGA,uBAAK,EAAK,GAEX,iBAAU,CAER,MAAM,EAAK,GAAI,YAIlB,aAnCD,2BAJoB,kpBCLrB,mSAHA,eACA,iBAOqB,0BAIN,QAGb,6DAOA,SAAK,IAAK,WAAY,CAEtB,MAAM,GAAO,EAEb,sBAAK,SAAW,cACf,KAEA,gBACC,OAAO,CACN,gBACA,EAAK,GAAI,SACT,EAAK,GAAI,WAEV,+BAAO,EAAK,GACZ,kBAAU,EAAK,GAGhB,sBAAU,CAER,MAAM,EAAK,GAIb,cACC,OAAO,EAAK,GAgCd,cAKA,CAED,YAzEA,qCA6EC,MAAK,QACL,oCAlFmB,kpBCFrB,iiBANA,aACA,cACA,eACA,gBACA,kBAOqB,0BAIN,QAGb,6DAMA,gBAAK,MAAQ,EAQb,qBAAK,aAAe,MAQpB,UAAK,WAAa,MASlB,UAAK,aAAe,cACnB,YAAY,EACZ,mBAAc,EACd,8BAAkB,EAClB,mBAEC,eAGA,oBAIF,iBAAK,SAAW,cACf,KAEA,gBACC,CAMD,uCAAU,EAGX,UAAK,MAAM,GAAI,MAAc,aAC5B,GAAK,aAAa,IAAK,EACvB,QAED,KAAK,MAAM,GAAI,SAAiB,aAC/B,GAAK,aAAa,OAAQ,EAC1B,QAFD,GAGA,CAED,YArEA,oCA0EC,aAAK,WAAW,SAAU,KAE1B,uFACA,KAED,gCAIC,MAAK,aACL,YAED,oCAIC,MAAK,aACL,wCA/FmB,gLCPrB,kDAJA,gBACA,cACA,kBAQC,EAMyB,eAAa,QAErC,GACC,iBAAQ,KAIT,GACC,QAAK,IAEN,E,YAjBmB,EAoBrB,cAAK,I,ypBCzBL,iiBAJA,aACA,gBACA,iBAkBqB,0IAQpB,uBAUC,aAAK,KAAO,MASZ,aAAK,OAAS,GAGd,UAAK,OAAO,GAAG,aAAa,IAAK,KAAK,KAGtC,SAAO,KAAK,OAAO,GAAG,KAAK,KAAK,IAAK,KACrC,KAED,QAYA,gBAMS,WACR,OAAO,MAAK,OAAO,IACnB,EAED,oBASK,WACJ,IAAK,KAAK,QAAS,EAMlB,WAAM,eAIP,4FAAK,MAEJ,kBAAK,KAAK,QAAQ,OAAQ,KAI3B,kBAAK,OAAO,IAAK,EAAK,KAEtB,GAAO,KAAK,MACZ,EAED,uBAQQ,WACP,IAAK,CAAC,KAAK,QAMV,QAAM,eAIP,iGAAI,GAAU,QAGd,aAAK,KAAK,cAAgB,EAEzB,MAAK,KAAK,QAAQ,OAGlB,QAAK,OAAO,OAGZ,MAAM,GAAO,MAAM,KAAM,KAAK,OAAO,UAGrC,MAEC,IAAU,KAAK,MAGf,QAAK,KAEN,MAEA,WAAK,OAAO,OAGb,SACA,EAED,+BAMgB,WACf,CACC,SAAK,OAAO,SAAS,OAAO,MAAM,SAGnC,QAAK,KAAK,SAAU,KACpB,sBAED,iCASyC,0DACxC,cAAK,KAAK,UAEV,EAAO,KAAK,KAAK,QAAQ,IAAK,GAAO,KAAM,UAC1C,GAAK,KAAK,IAAK,EACf,sBACD,EAED,8CAQC,OAAO,MAAK,OAAO,SAAS,OAAO,MACnC,QAED,kCAIC,MAAK,OAAO,GAAG,KAAK,KAAK,OAAQ,KACjC,WAAK,KACL,eAAK,OACL,yFACA,yCAhJA,IAAM,GAAO,KAAK,OAAO,IAAK,KAAK,KAAK,QAAQ,IAEhD,UAAO,GAAO,EAAK,KACnB,cA7CD,2BAIC,OACA,mDANmB,iFCPG,mBAKpB,sEAGH,UAAmB,IAAK,EAGxB,WAAuB,IAAK,UAAmB,aAC9C,CAAK,EAAmB,WAAa,CAAC,EAAQ,aAC7C,cACA,QAED,IAGD,KAAQ,WAAW,IAAK,MAAe,aACtC,CAAK,EAAQ,aACZ,cACA,QAED,IACD,E,kpBCjCD,iiBALA,cACA,cACA,gBACA,mBAEM,EAAO,cAEb,MAKqB,cAIP,aAAS,0EAGrB,IAAM,EAAO,EAUb,sBAAK,IASL,iBAAK,IAaL,iBAAK,IAAK,iBAYV,QAAK,IAAK,gBAUV,MAAK,IAAK,cAWV,QAAK,IAiBL,sCAAS,OAAQ,EAAK,SACrB,YACC,OAEC,GAAK,GAAI,WAAY,qBACrB,EAAK,GAAI,wBAEV,yCACC,OAAO,EAAK,GAAI,WAAY,WAC3B,OAAO,GAAW,EAAM,EAAK,oBAAoB,wBAAwB,OACzE,IAED,UAAQ,EAAK,GAAI,wBAAyB,WACzC,OAAO,GAAwB,EAAM,EAAK,eAC1C,IAED,cAAY,EAAK,GAYpB,qBAAK,oBAAsB,cAC1B,KACA,iBACC,CAGA,wCACC,SAAS,EAAK,GAAI,WAAY,kBAAY,GAAW,QAAU,MAC/D,UAAQ,EAAK,GAAI,WAAY,WAC5B,OAAO,GAAW,EAAM,EAAK,aAAa,QAC1C,IAFO,OAKP,SACJ,CAED,YAjIA,oCAoIO,OACN,mFAEA,WAAK,QAAQ,WAAW,aAAc,KAAK,oBAAqB,KAGhE,cAAK,SAAU,UAAO,OAAQ,SAAU,UACvC,GACA,wBAGD,QAAK,SAAU,KAAM,kBAAmB,UACvC,GACA,wBACD,EAED,kCAGU,OACT,WAAO,wFAAgB,KAAM,UAC5B,GAAK,oBACL,QACD,EAED,iDAOC,IAAM,GAAc,KAAK,aAAe,KAAK,eAC7C,wBAAM,EAAc,KAAK,aAAe,KAAK,QAG7C,6BAAK,SAAW,KAEf,UAKA,IALY,UAKP,aAAa,OAAS,KAAK,cAAgB,EAIjD,OAAK,KACJ,eAAK,sBAAwB,EAAY,OAAS,EAAY,OAAS,KACvE,mBAAK,YAAc,KAAK,sBAAwB,KAAO,EAAM,CAAC,UAAO,OAIrE,gBACA,8BAAK,YAEN,kCAhMmB,kpBCTrB,kDAHA,eACA,iBAOqB,cAIP,aAAS,0EAGrB,aAAK,SAAW,cACf,KACA,kBACC,CACC,mCAIH,aAXD,2BAJoB,kpBCLrB,mSAHA,iBACA,mBAaqB,0IACpB,6BAQa,OACZ,KAAM,EAAO,KAAK,OAIlB,WAAK,OAAO,SAAS,eAAgB,UACpC,IAAM,GAAY,EAAK,MAAM,OAAQ,EAAK,MAAM,OAAO,OACvD,GAAM,EAAkB,EAAU,YAAc,EAAU,WAM1D,OAAM,EAAS,MAAM,KAAM,EAAK,OAAO,SAAS,QAAQ,UAAW,IAAoB,OAAQ,WAC9F,OAAO,CAAC,EAAK,gBAAgB,IAAK,EAClC,MAED,KAAK,kBAAmB,EAAK,UAAU,OAAQ,EAAK,UAAU,WAC9D,KAAK,MAAO,EACZ,MAED,QACA,cAED,sBAOO,WACN,IAAM,GAAW,KAAK,OAGtB,SAAM,EAAe,EACrB,aAAK,gBAAgB,IAErB,MAAM,GAAe,EAAY,OACjC,UAGA,aAXoB,gBAYpB,WAA2B,mDAAe,SAKzC,MAAM,EAAkB,EAAY,YAAc,EAAY,WAG9D,OAAI,EAAgB,CAAE,EAItB,eAZyC,sBAazC,WAA4B,EAAS,QAAQ,UAAW,iDAAoB,SACtE,MAAC,KAAK,gBAAgB,IAAK,EAC/B,WAAgB,UAAe,mBAAoB,EAAe,CAAkB,OAItF,kBAnByC,mGAoBzC,YAAqB,2DAAgB,OAEpC,SAAM,YAAc,EAGpB,UAAa,SAEb,OAPoC,0BAQpC,YAAyB,GAAM,8DAAa,YAC3C,QAAS,eACT,aAVmC,4EAWpC,CA/BwC,uFAgCzC,CA5CmB,gFA6CpB,8BArFmB,kpBCPrB,mSAPA,eACA,gBACA,eAEA,gBACA,mBAmHqB,0IAepB,uBAIC,IAAM,GAAS,KACf,OAAM,EAAI,EAEV,OAAK,WAAY,OAAQ,EAAG,QAAU,WACtC,cAAK,WAAY,OAAQ,EAAG,QAAU,WAEtC,WAAO,WAAW,IAAK,SACvB,UAAO,WAAW,IAAK,SACvB,UAAO,WAAW,IAAK,eACvB,OAED,2BASoC,iBAAO,OAC1C,KAAM,EAAS,KACf,OAAM,EAAU,EAAO,SAAS,IAEhC,KAAO,GAAG,iBAAiB,IAAK,EAAM,WACrC,IAAM,GAAO,cAEb,YAAK,IACJ,OACA,OACA,YACA,EAGD,eAAK,KAAM,aAAc,GAAI,EAE7B,eAAK,SAAU,EAAM,UAAW,iBAAM,GAAO,QAAS,EAEtD,GACA,CACD,YA1DD,yBAIC,OAAO,GACP,QAED,mCAIC,OACA,wCAbmB,kpBCrHrB,mSAHA,iBACA,mBAYqB,0IACpB,6BAS2B,qEAE1B,KAAM,EAAa,EAAQ,KAAK,OAAO,UAAW,kBAAK,GAAE,OAAS,CAAvC,GAAiD,KAAK,OAAO,OAExF,EAAM,EAAO,KAAK,OAAO,OAAQ,EAAY,GAI7C,QAAK,OAAO,SAAS,eAAgB,UACpC,IAAM,GAAe,EAAK,MAAO,EAEjC,OAAM,EAAS,EAAK,OAAO,SAAS,QAAQ,UAAW,EAAK,MAC5D,eAAK,kBAAmB,EAAK,UAAU,OAAQ,EAAK,UAAU,WAE9D,KAAK,KAAM,SAAU,EAAK,MAC1B,EAED,QACA,cAED,6CAQ8B,WAC7B,KAAM,GAAI,GAAI,EAAG,EAAI,KAAK,OAAO,OAChC,OAAK,KAAK,OAAQ,GAAI,MAAM,aAC3B,QAIF,SACA,KAED,sBAOO,WACN,IAAM,GAAW,KAAK,OAGtB,SAAM,EAAe,EACrB,aAAK,gBAAgB,IAErB,MAAM,GAAU,EAChB,QAAM,EAAe,EAAY,OACjC,UAGA,aAZoB,gBAapB,WAA2B,mDAAe,SAIzC,MAAM,EAAc,EACpB,YAAM,EAAkB,EAAc,EAAY,WAKlD,OAAM,EAAqB,EAAQ,SAInC,MAKA,IALK,QAML,aAAoB,MApBqB,sBAsBzC,YAAqB,oDAAqB,WACzC,QAAc,KAAM,GAGrB,wBA1ByC,uEA2BzC,IAIA,OA/ByC,yBAgCzC,YAA4B,EAAQ,UAAW,yDAAoB,WAIlE,MAAM,GAAY,KAAK,6BAA8B,GAKrD,aACC,IADI,aACC,OAAQ,IAAY,UAAU,OAAS,8BAC3C,KAAK,OAAQ,IAAY,UAAU,OAKrC,OAAM,IAAU,UAAe,mBAAoB,EAAe,CAElE,UAAgB,GAChB,WAAM,IAAsB,GAGvB,QAAC,GAAsB,GAC3B,kBAAsB,GAGvB,oBAAM,IAAsB,GAAsB,GAAa,aAAc,OAC7E,OAAsB,GAAa,aACnC,EAED,WA9DyC,0GA+DzC,YAAqB,2DAAgB,OAEpC,SAAM,YAAc,EAGpB,UAAa,SAEb,OAPoC,0BAQpC,YAAyB,GAAM,8DAAa,YAC3C,QAAS,eACT,aAVmC,4EAWpC,CAED,WA5EyC,4EA6EzC,GAAQ,YAIR,MAjFyC,0BAkFzC,YAAqB,qDAAgB,YACpC,QAAQ,YAAa,GAGtB,sBAtFyC,4EAuFzC,KAAM,GAAM,MACX,MAAqB,aAAQ,GAAsB,GAEpD,KAvGmB,gFAyGpB,OACA,YAGF,mBApKqB,kpBCTrB,mSAJA,eACA,gBACA,mBAUqB,cAIP,aAAS,QAmBrB,kEAMA,aAAK,eAAiB,GAAI,SAC1B,CAED,YA5BA,oCA+BO,OAEN,UAAK,aAAe,cAAiB,KACrC,aAAK,aAAe,cAAiB,KAGrC,aAAK,OAAO,SAAS,IAAK,OAAQ,KAClC,mBAAK,OAAO,SAAS,IAAK,OAAQ,KAElC,mBAAK,SAAU,KAAK,OAAO,SAAU,SAAgC,iBAEpE,CAAK,EAAK,eAAe,IAAK,IAG7B,aAHwC,IAAM,OAGzC,EAAK,aAAa,gBAAgB,IAEtC,KAAK,aAAa,SACZ,GAAK,CAAC,EAAK,aAAa,gBAAgB,IAG9C,OAAK,aAAa,SAClB,KAAK,aAKP,gBAAK,eAAe,IACpB,GAlBD,EAkBG,CAAE,SAEL,iBAAK,SAAU,KAAK,aAAc,SAA8B,eAC/D,GAAK,aAAa,SAClB,EACD,+BAnEmB,6HCVrB,mSAFA,mEAKqB,YAOpB,CAA6B,eAAwB,QAOpD,QAGA,WACC,QAAK,OAIN,GACC,QAAK,mBAAoB,KAAK,QAE/B,EAED,8BAqCW,aACV,MAAK,aAAc,KAAK,QAAS,EACjC,EAED,uBAWc,aAGb,MAAK,aAAc,KAAK,QAAS,EACjC,KAED,oBAYK,WACJ,OAAO,MAAK,eAAgB,KAAK,QACjC,EAED,6BAU4B,eAA0B,4DAErD,MAAK,cACJ,GAMD,iBANM,mBAAoB,EAAQ,EAEjC,MAIK,GAAQ,EAAK,MAGnB,OAAO,EAEP,SAdqD,gBAerD,WAAoB,gDAAQ,SAEtB,MAAC,cAAe,EACpB,QAID,SAAS,EAGV,WAzBqD,oEA0BrD,OAAK,cAEC,IAAC,cAAe,EACpB,QAGD,SAAS,EAGT,aAAK,mBAAoB,EAAQ,EAMlC,SAAK,GAIL,WAJiB,QAAO,GAAQ,OAIxB,GACR,GAED,+BAQwB,aAEvB,IAAM,GAAQ,EAAK,MAGnB,OAAO,EAEP,SAP8B,gBAQ9B,WAAoB,qDAAQ,QAC3B,MAAK,CAAC,cAAe,EAAQ,IAC5B,GACA,KACA,KAGD,GAAS,EACT,EAED,UAlB8B,oEAmB9B,OAAO,GAAS,EAChB,SAED,mCAQ2C,eAAW,OACrD,YAAO,KAAM,GAAgB,QAAS,WACrC,GAAK,aAAc,EAAQ,EAAK,EAAe,GAC/C,EACD,sBAzMmB,iFCkBG,QAAqB,aAC5C,CA0CS,YACR,CACC,MAAQ,KACR,KAED,KAED,CAA2B,aAC1B,OAAO,IAAiB,EAAc,MACtC,CACD,IAnDA,MAAI,EACJ,EAEA,WAAK,QAAS,WACb,CACC,OADI,KAGJ,IACM,KACN,QADW,KACN,EACJ,YAAc,OAAO,KAAM,EAE3B,KAEA,MACC,MACA,eACA,SAAQ,CAAE,EAIZ,MAEA,KAAK,EACJ,YAEA,WAEA,MACC,MACA,eACA,UAIH,GAED,GAEA,IAEA,C,mFCzDuB,QAA0B,aACjD,QAAM,GAAa,cACnB,GAAM,EAAa,cAEnB,GAAI,EAGJ,EAAQ,EAAY,IAAO,EAAY,IAAO,EAC7C,IAGD,UAAa,EAAN,IAAU,KAAO,EAAY,EACpC,EAzBD,EAIA,+DAEA,oFCMwB,QAAoB,WAC3C,OAAK,aACJ,qBAAO,EAGR,MAAO,EACP,S,mFCNuB,QAAuB,WAC9C,MAAQ,GAA4C,MAAjC,IAAQ,QAAQ,eAClC,IACC,QADI,YAAO,OAAO,iBAAkB,GAAU,eAI/C,KAAU,EACV,aAED,OACA,KAtBD,EAIA,8DAEA,oFCIwB,QAAS,WAChC,QAAI,GAEJ,EAAQ,EACP,mBAAO,EACP,gBAGD,UACA,E,iFCRuB,QAAgC,eACvD,GAAc,aAAc,EAAc,EAAc,WAAY,IACpE,K,kFCLD,CAoI4C,iBAAc,OAC7B,EAAU,EAAY,GAA1C,SAAM,QAAK,IAEnB,WAAO,CAAE,EAAM,EAAY,QAAQ,OAAQ,EAC3C,GAYD,CAC2E,qBAC1E,IAAI,GACJ,EAAI,EACJ,EAIM,EAAkB,EAExB,UALA,EAGA,WAEU,KAAM,WAAY,CA+ClB,YACR,GACA,IACA,IACA,IACA,CAID,OAvDuC,EAAa,EAAU,EAAY,SAD/C,GACnB,IADmB,GACL,IACtB,GACA,EAEA,KACC,KAAK,EAEJ,IAAM,GAA+B,EAAY,gBAEjD,KAGC,EAAuB,EAA6B,oBAEpD,GAED,CACA,QAAuB,EAAY,oBAIrC,SACC,OAAwB,EAAa,oBAItC,IAAK,GAAgB,CACpB,EAAK,EACJ,GAIG,IAAK,CAAC,GACV,EAAK,EACJ,GAKD,IAAK,EAAwB,GAA4B,GACxD,EACM,IAAK,GAAyB,GAA4B,EAChE,GAIF,IASO,IACP,CAED,GAAO,EAAmB,CAAE,EAAkB,GAC9C,IAOD,CACS,aAA4C,wBACvB,UAAO,OAA5B,YAAS,IAEjB,cACC,MAAM,EACN,MAAK,EAEN,EAyCD,ydA1RA,MAwEgB,8BAA6E,0DAG5F,cACC,UADI,QAAO,OAIZ,QAAM,GAA4B,cAAuB,EACzD,eAAM,EAAc,cACpB,GAAM,EAAa,cAEnB,GACA,EAGA,KAAK,CAAC,GAAW,CAAC,EAAgB,OACR,EAAa,EAAW,GAAK,EAAY,SAAhE,GAD+B,IACzB,GADyB,IAEjC,EAFD,KAGC,IAAM,GAAc,GAAW,cAAU,GACzC,aAAM,EAAe,GAAiB,UAAK,oBAG1C,EAAiB,EAAW,EAAY,EAAa,EAGrD,MAAa,EAAW,GAAK,EAAY,SAJxC,GAJI,IAIE,GAJF,IASN,EA1B2F,OA4BxE,EAA4B,GAA1C,SAAM,KAEZ,OAAK,EACJ,IAAM,IAAmB,EAA4B,cACrD,IAAM,GAAyB,UAAO,OAAO,iBAM7C,MAAQ,GACR,SAAO,GAOP,OAAQ,EACR,eAAO,EAOP,aAAQ,SAAU,GAAuB,gBACzC,QAAO,SAAU,GAAuB,eACxC,GAED,OAAO,CAAE,KAAF,EAAQ,IAAR,GAAa,KACpB,EAQD,EAvIA,gBACA,gBACA,iMCEA,CA0QmC,eAAS,oBAC3C,WAAiB,gDAAiB,SACjC,QAAM,GAAM,EACZ,WAH0C,oEAI3C,C,mSAlRD,gBACA,gBACA,mBAOqB,YAqBpB,CAAa,aAAS,WAQrB,UAAO,eAAgB,KAAM,UAE5B,OAAO,EAAO,SACd,EACA,YAGD,gBAAK,cACJ,KAAoB,KAAM,EAC1B,6BAAM,KAAK,cAGX,KAkBoB,KA4CrB,WA9DM,EAAO,UACX,IAAM,GAAQ,EAEd,iBAAK,EACJ,SAAoB,KAAM,EAO1B,OAAoB,KAAM,EAAO,eACjC,8BAAK,MAEN,EACA,QAAoB,KAAM,EAG3B,wBA8CF,0CAMC,OAAO,IAAI,GACX,KAED,uBAOW,aACV,aAAK,IACL,OAAK,MAAQ,EAAI,KACjB,WAAK,OAAS,EAAI,KAClB,YAAK,KAEL,EACA,IAED,uBAOW,aACV,aAAK,KACL,OAAK,OACL,OAAK,MACL,OAAK,QAEL,EACA,IAED,gCAMiB,WAChB,IAAM,GACL,KAAU,SAAK,KAAK,IAAK,EACzB,WAAY,SAAK,KAAK,MAAO,EAC7B,cAAa,SAAK,KAAK,OAAQ,EAC/B,aAAW,SAAK,KAAK,KAAM,EAG5B,gBAAK,MAAQ,EAAK,MAAQ,EAC1B,OAAK,OAAS,EAAK,OAAS,EAE5B,IAAkB,CAAb,GAAK,OACT,CADsB,GAAK,OAG3B,KAAO,GAAI,GAEZ,EAED,oCAMqB,WACpB,IAAM,GAAO,KAAK,gBAElB,SACC,GAAO,EAEP,UAED,CAED,kCAMC,OAAO,MAAK,MAAQ,KACpB,MAED,qCAWC,IAAM,GAAS,KACf,QAAI,EAAc,KAGlB,WAAK,GAAU,UAAO,SACrB,YAAI,GAAS,EAAO,YAAc,EAGlC,wBAAQ,GAAU,GAAU,UAAO,SAAS,MAC3C,IAAM,GAAa,GAAI,GACvB,GAAM,EAAmB,EAAY,gBAErC,MACC,EAAK,EAAiB,UAAY,EAEjC,cAID,cAGD,QAAS,EACT,UAGF,OACA,EAED,4CAKyB,OACY,UAAO,OAAnC,eAAY,IAEpB,kBAAO,IAAI,GACV,KACA,QACA,SACA,OACA,QACA,SAED,uBA3PmB,EA8PrB,GAMA,mICxQwB,QAAQ,WAC/B,IAAM,GAAS,EAEf,WACC,KAAO,YAER,E,iFCHuB,QAAsB,aAC7C,CAAK,YACJ,yBAAG,MAGJ,KAAG,UACH,C,2HCdD,uSAIqB,YACpB,aAAc,QAOb,QACA,oBAED,kCAQkB,aACjB,MAAK,kBAAkB,KAAM,CAAE,QAAF,EAAW,WAExC,MAAQ,MAAM,QAEd,OACC,KAAQ,WAAW,aAAc,EAAY,EAE9C,YAED,kCAIC,MAAK,kBAAkB,QAAS,WAA+B,qBAC9D,aAAQ,MAAM,QAEd,GACC,KAED,QAED,QACA,wCA1CmB,8BCuBE,aACtB,OAA0C,CAC1C,CADO,GAAU,QAAS,Y,oDADX,QAzBhB,GAAM,GAAY,UAAU,UAO5B,cAAM,EAOL,KAAK,EAAO,cAKb,6HCdC,kDAPD,sEAMqB,QAKC,eAAO,QAO3B,QAAK,OAQL,OAAK,KAQL,OASA,aAAK,KAAO,KAOZ,gBAAK,IAAM,KACX,U,kFCxDF,kDAJA,gBACA,kBAGI,EAAW,wBAAgB,sBAEhB,kFCAf,CAOc,aACZ,IAAI,GAAQ,CAAC,EACT,EAAS,EAAU,EAAQ,OAE/B,WACA,QAAS,IAAQ,GACf,IAAI,GAAQ,EACZ,QAAK,IAAI,EAAM,GAAI,EACpB,GACF,CAED,kDAxBA,iBACA,gBACA,gBACA,gBACA,mBAqBA,EAAK,UAAU,gBACf,EAAK,UAAU,oBACf,EAAK,UAAU,cACf,EAAK,UAAU,cACf,EAAK,UAAU,wBAEA,kFC3Bf,kDAJA,gBACA,kBAGI,EAAU,wBAAgB,qBAEf,iFCNf,8DAGA,KAAI,EAAU,UAAK,kBAEJ,kFCDf,kDAJA,gBACA,kBAGI,EAAU,wBAAgB,qBAEf,oECNf,aAce,QANW,aAExB,UAAI,IAAI,EAAK,GAAI,EACjB,IACD,qECZD,aAae,QALW,aACxB,UAAI,IACJ,GACD,qECXD,aAqBe,QAZW,aACxB,QAAI,GAAQ,CAAC,EACT,EAAS,EAEb,OAAS,IACP,KAAI,OAAS,EAAM,GAAQ,EAI7B,YACD,sECnBD,aAsBe,QAZW,aACxB,QAAI,GAAQ,CAAC,EACT,EAAS,EAEb,OAAS,IACP,MAAI,EAAU,EAAM,GAAQ,EAC1B,GAGJ,SACD,0FCjBD,kDAHA,iBACA,oBAee,QAJa,aAC1B,OAAO,IAAU,cAAW,EAAQ,cAAK,GAC1C,mFCdD,+DAEA,OAoBe,QAZS,aACtB,QAAI,GAAQ,CACR,EACA,EAAS,EAAM,OACf,EAAS,MAEb,GAAS,IACP,KAAO,GALa,IAAV,GAKc,QAAY,cAAI,EAAQ,EAElD,UACD,sECpBD,aAqBe,QAZmB,eAChC,OAAI,KACF,IACE,eAAS,GAAU,EAAQ,EAE7B,GACE,eAAS,GAAU,EAAQ,EAG/B,IACD,kFCnBD,8DAGA,KAAI,EAAe,OAEnB,SAYe,QAJK,WAClB,OAAO,cAAS,GAAS,EAC1B,uFCZD,kDAHA,gBACA,qBA8Be,QAlBwB,iBACrC,IAAI,GAAS,EAEb,aAAQ,cACR,GACE,CADE,OACM,CAAC,EAAQ,EAAS,EAAK,EAEjC,KAAe,YAAa,EAAM,EAAU,EAAS,cACrD,GACE,CADE,QAGJ,KAAM,EAAQ,EAAM,EAAI,cACxB,GAAO,EACL,KAAM,KAER,QACD,oFC1BD,kDAHA,gBACA,oBAkBe,QAL2B,eACxC,IAAI,GAAS,EACb,SAAO,cAAQ,GAAU,EAAS,cAAU,EAAQ,EACrD,uECjBD,aAYe,QAJY,aACzB,OAAO,KAAO,QACf,sECVD,aAsBe,QAZmC,iBAChD,QAAI,GAAQ,EAAY,EACpB,EAAS,EAEb,OAAS,IACP,MAAI,EAAW,EAAM,GACnB,SAGJ,SAAO,CACR,mFCVG,kDAVJ,iBACA,gBACA,gBACA,gBACA,gBACA,eACA,eACA,mBAMI,EAAU,qBACV,EAAW,iBACX,EAGJ,kBAAI,EAAc,OAGlB,UAAI,EAAiB,EAErB,iBA0De,QA3CyD,qBACtE,IAAI,GAAW,cAAQ,GACnB,GAAW,cAAQ,GACnB,GAAS,EACT,GAEA,EACF,OAAS,cACT,MAAS,IAAU,EAAU,EAE3B,IACF,QAAS,cACT,MAAS,IAAU,EAAU,EAE/B,OAAI,IAAW,IAAU,GAAa,CAAC,cAAa,GAChD,GAAW,IAAU,GAAa,CAAC,cAAa,GAChD,GAAY,IAEhB,MAAI,IAAa,CACf,cAAU,EAAQ,MAClB,SAAQ,GAAY,cAAa,GAC7B,cAAY,EAAQ,EAAO,EAAW,EAAY,EAAS,GAC3D,cAAW,EAAQ,EAAO,GAAQ,EAAW,EAAY,EAE/D,MAAI,EAAY,EAjDlB,GAkDI,IAAI,IAAe,IAAY,EAAe,KAAK,EAAQ,eACvD,GAAe,IAAY,EAAe,KAAK,EAEnD,kBAAI,IAAgB,GAClB,IAAI,IAAe,GAAe,EAAO,QAAU,EAC/C,GAAe,GAAe,EAAM,QAExC,aAAU,EAAQ,MAClB,SAAO,EAAU,GAAc,GAAc,EAAY,EAC1D,EACF,CACG,SAGJ,SAAU,EAAQ,MAClB,SAAO,cAAa,EAAQ,EAAO,EAAW,EAAY,EAC3D,qFC3EG,kDAJJ,iBACA,qBA4De,QA5CiC,iBAC9C,IAAI,GAAQ,EAAU,OAClB,EAAS,EACT,EAAe,CAEnB,KACE,IADE,UACK,CAET,QAAS,OACT,GAAO,KACL,IAAI,GAAO,EACX,MAAK,GAAgB,EAAK,GAClB,EAAK,KAAO,EAAO,EAAK,IACxB,EAAE,EAAK,IAEb,IAEH,QACD,MAAS,IAAQ,GACf,GAAO,EACP,MAAI,GAAM,EAAK,GACX,EAAW,EAAO,GAClB,EAAW,EAEf,QAAI,GAAgB,EAClB,IAIA,IAAI,GAAQ,MACZ,WACE,KAAI,GAAS,EAAW,EAAU,EAAU,EAAK,EAAQ,EAE3D,GAAI,GAAa,YACT,cAAY,EAAU,EAAU,EA9C1C,CA8C+E,CA5CnF,EA4CyG,IAGjG,EAEH,QACF,SAfoB,YAAa,EAAE,IAC9B,IAEH,QAaH,CACD,4EC3DD,WACA,GAAI,GAAa,OAEjB,OAYe,QAJG,WAChB,OAAO,GAAW,OACnB,qFCTD,CAcoB,aAClB,GAAmB,IAAV,IAAiB,EAAS,OAEnC,MACA,UAAK,GAAI,KACP,KAAO,KAET,SACD,EAGD,kDA7BA,iBACA,mBAGI,EAAc,OAGlB,UAAI,EAAY,UAAU,UAAoB,iBAC1C,EAAuB,EAE3B,qBAmBI,GAAa,CAAC,EAAuC,iBACvD,eAAsB,WACpB,OAAO,cAAgB,EACxB,GACF,aAEc,kFC/Bf,kDAJA,iBACA,gBACA,qBAmBe,QAVM,WACnB,IAAI,GAAY,cAChB,SAAwB,EAApB,IAAU,QAAe,EAAU,GACrC,GAAO,cAAwB,EAAU,GAAG,GAAI,EAAU,GAE5D,IAAgB,WACd,OAAO,KAAW,GAAU,cAAY,EAAQ,EACjD,EACF,mFCVG,kDATJ,iBACA,gBACA,gBACA,eACA,gBACA,gBACA,oBA0Be,QAZoB,aACjC,OAAI,cAAM,IAAS,cACjB,GAAO,cAAwB,cAAM,GAEvC,GAAgB,WACd,IAAI,GAAW,cAAI,EACnB,SAAqB,aAAa,IAAa,EAC3C,cAAM,EAAQ,GACd,cAAY,EAAoB,SAlBpC,CAmBD,CAjBH,EAkBC,kFC9BD,8DAEA,OAiBe,QATS,aACtB,IAAI,GAAS,EACb,OAAI,GAGJ,YAAS,CAAJ,GAAQ,EACb,EAAO,cAAQ,EAAG,GAAU,EAC7B,0FCjBD,+DAEA,OAae,QANW,WACxB,OAAgB,YACd,OAAO,cAAQ,EAChB,EACF,mFCND,kDAPA,gBACA,eACA,eACA,eACA,eACA,oBAwCe,QA5BuB,iBACpC,GAAO,cAAM,EAAM,GAAU,CAAC,GAAQ,cAEtC,UAAI,GAAQ,CAAC,EACT,EAAS,EACT,OACA,EAEJ,IAAiB,IAAV,KAAoB,IAAQ,GAC7B,MAAM,cAAM,EAChB,IAAI,cAAS,GACX,IAAI,GACJ,KAAa,GAPD,EAAS,EAQnB,IAAI,GAAW,EACf,KAAW,EAAa,EAAW,EAAU,EAC7C,UACE,eAAuB,IAAZ,IACN,cAAQ,EAAK,EAAmB,UAGxC,EACD,eAAY,EAAQ,EACrB,EACD,GAAS,EACV,EACD,OACD,mFC3CD,8DAEA,OAee,QANc,aAC3B,OAAO,cAAS,EAAgB,WAC9B,OAAO,CAAC,EAAK,EACd,GACF,oFCXG,kDAJJ,iBACA,kBAMI,EAAc,UAAS,UAAmB,iBAC1C,EAAiB,EAAc,EAEnC,kBAoBe,QAZO,WAEpB,IACE,QADE,QAAO,SAGX,MAAI,cACF,SAAO,GAAiB,EAAe,KAAK,GAE9C,MAAI,GAAU,EACd,SAAkB,GAAV,KAAkB,EAAI,GAAW,EAvB5B,EAGf,GAoBuD,KACtD,qEC5BD,aAWe,QAJM,WACnB,OAAQ,IAAS,EAAM,SAAW,OAAU,EAC7C,wECTD,aAiBe,QATc,aAC3B,IACE,QAAO,GAET,WAAI,GAAS,GAAI,GAAO,YAAY,EACpC,iBAAO,KACP,GACD,kFCfD,+DAEA,OAae,QALkB,aAC/B,IAAI,GAAS,EAAS,cAAiB,EAAS,QAAU,EAC1D,aAAO,IAAI,GAAS,YAAY,EAAQ,EAAS,WAAY,EAC9D,6FCTD,kDAJA,iBACA,gBACA,qBAgBe,QALgB,eAC7B,IAAI,GAAQ,EAAS,EAAU,cAAiB,OAAQ,cACxD,SAAO,cAAY,YAAoB,GAAI,GAC5C,gFChBD,WACA,GAAI,GAEJ,SAae,QANM,WACnB,IAAI,GAAS,GAAI,GAAO,YAAY,EAAO,OAAQ,EAAQ,KAC3D,aAAO,UAAY,EACnB,UACD,mFCVD,kDAJA,iBACA,gBACA,oBAgBe,QALgB,eAC7B,IAAI,GAAQ,EAAS,EAAU,cAAiB,OAAQ,cACxD,SAAO,cAAY,YAAoB,GAAI,GAC5C,6FChBD,+DAGA,KAAI,EAAc,UAAS,UAAmB,iBAC1C,EAAgB,EAAc,EAElC,iBAWe,QAJM,WACnB,OAAO,GAAgB,OAAO,EAAc,KAC7C,uFCfD,+DAEA,OAae,QALsB,aACnC,IAAI,GAAS,EAAS,cAAiB,EAAW,QAAU,EAC5D,aAAO,IAAI,GAAW,YAAY,EAAQ,EAAW,WAAY,EAClE,wFCbD,8DAEA,OAsCe,QA9BkB,aAC/B,IAAI,IAAU,EACZ,IAAI,GAAyB,WACzB,EAAsB,IAAV,KACZ,EAAiB,IAAU,EAC3B,EAAc,cAElB,GAAI,EAAyB,WACzB,EAAsB,IAAV,KACZ,EAAiB,IAAU,EAC3B,EAAc,cAElB,MAAK,CAAC,GAAa,CAAC,GAAe,CAAC,GAAe,EAAQ,GACtD,GAAe,GAAgB,GAAkB,CAAC,GAAa,CAAC,GAChE,GAAa,GAAgB,GAC7B,CAAC,GAAgB,GAClB,CACF,QAEF,MAAK,CAAC,GAAa,CAAC,GAAe,CAAC,GAAe,EAAQ,GACtD,GAAe,GAAgB,GAAkB,CAAC,GAAa,CAAC,GAChE,GAAa,GAAgB,GAC7B,CAAC,GAAgB,GAClB,CACF,QAAO,CAEV,CACD,OACD,oFCnCD,kDAHA,iBACA,qBAce,QAJc,aAC3B,OAAO,cAAW,EAAQ,cAAW,GACtC,oFCVD,kDAHA,gBACA,mBAmCe,QA1BS,WACtB,OAAO,cAAsB,aAC3B,IAAI,GAAQ,CAAC,EACT,EAAS,EAAQ,OACjB,EAAsB,CAAT,GAAa,EAAQ,EAAc,UAChD,EAAiB,CAAT,GAAa,EAEzB,gBAAgC,CAAlB,GAAS,QAAmC,UAArB,QAAO,IACvC,IAGL,UAAI,GAAS,cAAe,EAAQ,GAAI,EAAQ,GAC9C,OAA0B,CAAb,UACb,IAEF,KAAS,OACT,GAAS,IAAQ,GACf,IAAI,GAAS,EACb,GACE,KAAS,EAAQ,EAAQ,EAE5B,EACD,OACD,EACF,oFC7BG,kDALJ,iBACA,gBACA,kBAYI,EAAc,WAAQ,EAAI,cAAW,cAAQ,EAAE,CAAC,KAAY,IATjD,EASf,CAAgB,CAA4E,WAC1F,OAAO,eACR,EAFD,sBAIe,kFCZX,kDANJ,iBACA,gBACA,gBACA,qBA0Be,QAbQ,WACrB,OAAgB,YACd,IAAI,GAAM,cACV,SACE,IAbF,eAaS,cAET,GACE,GAdN,eAca,cAET,GAAO,cAAY,EAAQ,EAC5B,GACF,mFCpBG,kDAPJ,iBACA,gBACA,gBACA,gBACA,kBAqBI,EAAc,UAAS,UAAmB,iBAC1C,EAAgB,EAAc,EAElC,iBAqFe,QAnEyD,0BACtE,QACE,GACE,IAxBN,uBAwBW,EAAO,YAAc,EAAM,YAC3B,EAAO,YAAc,EACxB,WAEF,WAAS,EACT,SAAQ,EAEV,OACE,IAnCF,6BAmCO,GAAO,YAAc,EACtB,YAAC,EAAU,cAAe,GAAS,cAKzC,IACA,IApDA,mBAwDE,IAvDF,sBAuDS,CAAC,GAAU,CAEpB,EACE,IAzDF,uBAyDS,GAAO,MAAQ,EAAM,MAAQ,EAAO,SAAW,EAExD,QAEE,IA3DF,wBA2DU,IAAU,CAAC,EAA4B,GAAU,CAE3D,EAF+B,GAAS,CAAC,EAGzC,IA7DA,kBAiEE,IA/DF,wBA+DS,IAAW,EAEpB,GACE,IAtEF,kBAsEM,MAEN,QACE,IAtEF,kBAsEM,IACJ,GA9EF,UA8Ec,KAEZ,SAAI,EAAO,MAAQ,EAAM,MAAQ,CAC/B,GAGF,YAAI,IAAU,GAAM,IACpB,SACE,IAAO,IAET,GACA,IA5FF,KA4FQ,IAAI,EAGV,GAAO,cAAY,GAAQ,GAAS,GAAQ,GAAQ,EAAW,GAAY,GAE7E,KACE,IArFF,qBAsFI,QAAO,GAAc,KAAK,IAAW,EAAc,KAGzD,IACD,0FC3GG,kDAJJ,iBACA,oBAiFe,QA9DsD,qBACnE,IAAI,GAAsB,EAf5B,EAgBM,EAAW,cAAK,GAChB,EAAY,EAAS,OACrB,EAAW,cAAK,GAChB,EAAY,EAEhB,UAAI,GAAa,GAAa,CAC5B,EAEF,gBAAI,GACJ,IACM,KACA,KADM,EACV,GAAM,IAAY,IAAO,KAAQ,cAAQ,EACvC,GAIJ,YAAI,GAAU,EAAM,IACpB,MACE,QAAO,IAET,KACA,QAAM,IAAI,EAEV,UAAI,GACJ,EAAS,IAAQ,GACf,GAAM,EACN,MAAI,GAAW,EAAO,GAClB,EAAW,EAEf,MACE,KAAI,GAAW,EACX,EAAW,EAAU,EAAU,EAAK,EAAO,EAAQ,GACnD,EAAW,EAAU,EAAU,EAAK,EAAQ,EAGlD,GAAI,GAAe,aACV,IAAa,GAAY,EAAU,EAAU,EAAU,EAAY,EAAS,KAC7E,EAEN,CACA,KACD,KACD,KAAa,EACd,aADyB,IAE1B,IAAI,GAAU,CAAC,EACb,IAAI,GAAU,EAAO,YACjB,EAAU,EAGd,YAAI,GAAW,GACV,eAAiB,IAAU,eAAiB,IAC7C,EAAoB,UAAlB,QAAO,IAAyB,YAAmB,IACjC,UAAlB,QAAO,IAAyB,YACpC,MAEH,KACD,UAAM,UACN,GACD,mFC5ED,kDAJA,iBACA,gBACA,oBAae,QAJK,WAClB,OAAO,cAAe,cACvB,yFCbD,+DAaA,KAAI,EAAY,cAAa,oBAEd,kFCZf,kDAHA,iBACA,qBAmBe,QAVO,WACpB,QAAI,GAAS,cAAQ,GACjB,EAAS,EAEb,OACE,OAAO,GAAQ,GAAK,cAAmB,EAAO,GAEhD,UACD,oFCTD,kDATA,gBACA,gBACA,eACA,eACA,eACA,eACA,gBACA,oBAiCe,QAtBgB,eAC7B,GAAO,cAAM,EAAM,GAAU,CAAC,GAAQ,cAEtC,UACI,GAAQ,CAAC,EACT,EAAS,EAEb,OAJI,IAIK,IACH,MAAM,cAAM,EAChB,KAAI,EAAE,EAAmB,IAAV,KAAkB,EAAQ,EAGzC,QAAS,EAEX,MACE,QAEF,MAAI,GAAS,EAAS,EAAO,OAC7B,QAAO,CAAC,CAAC,GAAU,cAAS,IAAW,cAAQ,EAAK,KACjD,cAAQ,IAAW,cAAS,IAAW,cAC3C,oFCtCD,8DAEA,OAWe,QAJN,UACP,MAAK,SAAW,UAAe,cAChC,4ECXD,aAce,QAJK,WAClB,OAAO,MAAK,IAAI,IAAQ,MAAO,MAAK,SACrC,mFCZD,8DAGI,KAGA,EAAc,OAGlB,UAAI,EAAiB,EAErB,iBAkBe,QATE,WACf,IAAI,GAAO,KACX,sBACE,IAAI,GAAS,EACb,SAAmC,KAlBvC,mCAmBG,CACD,OAAO,GAAe,KAAK,EAAM,GAAO,EACzC,0FC3BD,8DAGA,KAAI,EAAc,OAGlB,UAAI,EAAiB,EAErB,iBAce,QALE,WACf,IAAI,GAAO,KACX,eAAO,WAAe,EAAc,YAAY,EAAe,KAAK,EACrE,mFCpBD,8DAGI,OAkBW,QANO,aACpB,IAAI,GAAO,KACX,kBAAK,GAAQ,WAAuC,WAZtD,4BAaE,EACD,wECnBD,WACA,GAAI,GAAc,OAGlB,UAAI,EAAiB,EAErB,iBAmBe,QAZS,WACtB,IAAI,GAAS,EAAM,OACf,EAAS,EAAM,YAGnB,SAAI,IAA6B,QAAnB,QAAO,GAAM,IAAkB,EAAe,KAAK,EAC/D,aAAO,MAAQ,EACf,QAAO,MAAQ,EAEjB,OACD,wFCdG,kDATJ,iBACA,gBACA,gBACA,gBACA,gBACA,gBACA,qBAyEe,QApCiC,qBAC9C,IAAI,IAAO,GACX,kBAEI,MA5BF,uBA4BS,cAIP,SAzCF,yBACA,gBAwCS,GAAI,IAAK,CAGhB,SAlCF,oBAkCS,cAAc,GAKrB,SAtCF,8BACA,8BACA,2BACA,4BACA,4BACA,4BACA,mCACA,6BAEJ,uBA6Ba,cAAgB,GAGvB,SAlDF,eAkDS,cAAS,GAAQ,GAIxB,SArDF,wBAGA,kBAkDS,GAAI,IAGX,SAvDF,kBAuDS,cAGP,SAzDF,eAyDS,cAAS,GAAQ,GAGxB,SAzDF,kBAyDS,cAEZ,4FCzED,kDAJA,iBACA,gBACA,oBAee,QANU,WACvB,OAAmD,UAA3C,QAAO,GAAO,aAA8B,cAAY,MAC5D,cAAW,cAEhB,qFCZD,kDAHA,iBACA,oBAae,QAJQ,WACrB,OAAO,cAAQ,IAAU,cAC1B,+RCZD,IAce,QAPI,WACjB,IAAI,sBAAc,iBAClB,SAAgB,QAAR,KAA4B,QAAR,KAA4B,QAAR,KAA4B,SAAR,IACrD,WAAV,KAEN,IADM,wECXP,aAiBe,QAVU,WACvB,QAGA,MAHI,EAGG,CAAC,CAAC,EAAO,EAAS,QACvB,QAAO,KAAK,EAEd,aACD,sECfD,aAWe,QAJN,UACP,MACD,4FCTD,8DAGA,KAAI,EAAa,MAGjB,UAAI,EAAS,EAEb,SAyBe,QAhBU,WACvB,IAAI,GAAO,KAAK,SACZ,EAAQ,cAAa,EAEzB,MACE,CADE,GAGJ,YAAI,GAAY,EAAK,OACrB,EAMD,MANK,IACF,IAEA,QAAO,KAAK,EAAM,EAEpB,sFC9BF,8DAEA,OAgBe,QAPO,WACpB,IAAI,GAAO,KAAK,SACZ,EAAQ,cAAa,EAEzB,SAAmB,EAAZ,UAAwB,EAAK,GACrC,mFChBD,8DAEA,OAae,QAJO,WACpB,OAA0C,CAC3C,CADQ,eAAa,KAAK,SAAU,mFCZrC,8DAEA,OAsBe,QAZY,aACzB,IAAI,GAAO,KAAK,SACZ,EAAQ,cAAa,EAEzB,SACE,EADE,KACG,KAAK,CAAC,EAEX,MAAK,GAAO,GAEd,EACD,sFClBD,kDAJA,iBACA,eACA,qBAiBe,QARN,UACP,MAAK,SACH,MAAQ,MACR,YAAO,IAAK,aACZ,gBAAU,MAEb,yFCjBD,8DAEA,OAae,QAJS,WACtB,OAAO,cAAW,KAAM,GAAK,UAC9B,mFCbD,8DAEA,OAae,QAJM,WACnB,OAAO,cAAW,KAAM,GAAK,IAC9B,mFCbD,8DAEA,OAae,QAJM,WACnB,OAAO,cAAW,KAAM,GAAK,IAC9B,mFCbD,8DAEA,OAee,QALW,aACxB,qBAAW,KAAM,GAAK,IAAI,EAC1B,GACD,sFCZD,kDAHA,iBACA,oBAce,QAJS,aACtB,OAAsB,EAAf,IAAK,OAAc,EAAS,cAAQ,EAAQ,cAAU,EAAM,EAAG,CACvE,uECZG,aAiBW,QALM,WACnB,aAAK,SAAS,IACd,EAZF,6BAaC,wEChBD,aAae,QAJM,WACnB,OAAO,MAAK,SAAS,IACtB,sECXD,aAiBe,QAVK,WAClB,IAAI,GAAQ,CAAC,EACT,EAAS,MAAM,EAEnB,eAAI,QAAiB,WACnB,GAAS,KAAS,CAAC,EACpB,EACD,GACD,kFCfD,8DAEA,OAWe,QAJN,UACP,MAAK,SAAW,MACjB,2ECXD,aAae,QAJM,WACnB,OAAO,MAAK,SAAS,UACtB,sECXD,aAae,QAJG,WAChB,OAAO,MAAK,SAAS,IACtB,sECXD,aAae,QAJG,WAChB,OAAO,MAAK,SAAS,IACtB,oFCPG,kDAJJ,gBACA,qBAwBe,QATQ,aACrB,IAAI,GAAQ,KACZ,eAAI,yBAA8B,EAAM,SACtC,QAbJ,QAaY,KAAK,SAAW,cAAa,EAEvC,aAAM,IAAI,EACV,GACD,sFCnBD,kDAJA,iBACA,mBAGI,EAGJ,sEAAI,EASJ,WAAI,EAAe,cAAiB,WAClC,IACA,0BAAS,GAAQ,QAAQ,EAA2C,iBAClE,GAAO,KAAK,EAAQ,EAAO,QAAQ,EAAc,MAAS,GAC3D,EACD,GACD,CANkB,aAQJ,yICxBf,iBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iCAGE,SADa,QACN,UADM,QACG,SADH,QACW,aADX,QACuB,eACpC,yBAFa,QAEG,OAFH,QAES,YAFT,QAEoB,iBAFpB,QAEoC,YACjD,eAHa,QAGP,YAHO,QAGI,gBAHJ,QAGmB,QAHnB,QAG0B,UACvC,uBAJa,QAIA,gBAJA,QAIc,aAJd,QAIyB,QAJzB,QAI+B,WAC5C,mBALa,QAKJ,gBALI,QAKU,kBALV,QAK0B,oBAL1B,QAK4C,QACzD,gBANa,QAMP,eANO,QAMM,OANN,QAMW,QANX,QAMiB,WAC9B,qBAPa,QAOF,eAPE,QAOW,UAPX,QAOmB,UAPnB,QAO2B,WACxC,iBARa,QAQN,eARM,QAQO,iBARP,QAQsB,iBARtB,QAQqC,mBAClD,6BATa,QASM,qBATN,QASyB,cATzB,QASqC,gBATrC,QASmD,QAChE,gBAVa,QAUP,aAVO,QAUI,kBAVJ,QAUoB,aAVpB,QAU+B,SAC5C,mBAXa,QAWJ,aAXI,QAWO,QAXP,QAWa,UAXb,QAWqB,YAClC,iBAZa,QAYN,aAZM,QAYK,WAZL,QAYc,OAZd,QAYmB,SAChC,mBAba,QAaJ,OAbI,QAaC,aAbD,QAaY,iBAbZ,QAa2B,WAb3B,uOClEN,oGACA,mGACA,uGACA,yGACA,2GACA,iGACA,sGACA,2GACA,sGACA,iGACA,sGACA,0GACA,kGACA,oGACA,wGACA,yGACA,sGACA,iGACA,oGACA,oGACA,yGACA,2GACA,6GACA,iGACA,gGACA,wGACA,gGACA,iGACA,oGACA,wGACA,0GACA,qGACA,qGACA,sGACA,oGACA,0GACA,4GACA,4GACA,8GACA,gHACA,gHACA,yGACA,2GACA,mGACA,mGACA,wGACA,6GACA,wGACA,oGACA,sGACA,wGACA,mGACA,qGACA,uGACA,oGACA,wGACA,sGACA,kGACA,oGACA,sGACA,kGACA,wGACA,4GACA,sGACA,sGACA,2FCzDT,kDARA,gBACA,gBACA,gBACA,eACA,eACA,mBAGI,EAAc,OAGlB,UAAI,EAAuB,EAG3B,qBAAI,EAAiB,CAAC,EAAuC,iBAiC7D,WAAI,EAAW,cAAgC,aAC7C,IAAI,GAAkB,cAAY,IAAW,cAC3C,GAGF,yBAHa,EAAQ,cAAO,GAC1B,OAEG,GAAI,KACP,iBAAY,EAAQ,EAAK,EAE5B,GARc,aAUA,iFCzDf,+DAEA,OAgCe,QAJe,aAC5B,OAAO,cAAuB,QAC/B,sEChCD,aAuBe,QANG,WAChB,OAAO,WACL,OACD,EACF,mFClBD,kDAHA,iBACA,qBAgCe,QAJQ,aACrB,OAAiB,KAAV,KAAkB,cAAQ,EAAQ,IAC1C,uGC3BD,gQAJA,eACA,kBASA,4BAAI,EAAe,IAAmB,KAAY,GAAW,CAAC,EAAQ,SAKtE,SAAI,EAAc,IAAmB,KAAW,GAAU,CAAC,EAAO,SAKlE,SAAI,EAAiB,GAAc,EAAW,UAAY,EAK1D,SAAI,EAAS,EAAgB,UAmB7B,cAAI,EAAY,CAAD,CAAqC,WAClD,OAAO,aACR,EAFD,EAAyB,KAAS,uBAInB,qGChDf,+DAEA,OAiCe,QAJS,aACtB,OAAO,cAAY,EACpB,yFC7BG,kDAJJ,gBACA,kBA8BqB,KACN,EAXX,yBAWwC,EAVxC,yBAWW,EAVX,sBAUqC,EATrC,uBAUW,EATX,uBASsC,EARtC,uBASW,EARX,8BAQ6C,EAP7C,wBAQwB,EAL5B,2BAMe,EAhCX,sBAgCqC,EA/BrC,kBAgCW,EAnBX,wBAmB4C,EA/B5C,oBAgCW,EAnBX,qBAmByC,EA/BzC,iBAgCW,EA/BX,kBA+BsC,EA9BtC,qBA+BW,EA9BX,gBA8BoC,EA7BpC,mBA8BW,EA7BX,mBA6BuC,EA5BvC,mBA6BW,EA5BX,gBA4BoC,EA3BpC,mBA8BJ,EA5BI,uBA6BJ,GAAI,IAAc,OAOlB,UAAI,GAAiB,GAErB,WAuBe,QALO,YACpB,OAAO,cAAa,KAClB,cAAS,GAAM,SAAW,CAAC,CAAC,EAAe,GAAe,KAC7D,sFCvED,kDANA,iBACA,gBACA,eACA,kBAGI,EAAc,OAGlB,UAAI,EAAiB,EAErB,iBA2Ce,QApBC,WACd,QAAI,GAAQ,CAAC,EACT,EAAU,cAAY,GACtB,EAAQ,cAAW,GACnB,EAAc,EAAM,OACpB,EAAU,cACV,GACA,EAAoB,MACpB,EAAS,EAEb,SAAS,IACH,KAAM,EACV,GANgB,CAAC,CAAC,CAMZ,GAAuB,QAAP,KAAmB,cAAQ,EAC7C,GADA,EACS,aAAP,MAAyB,GAAW,CAAC,EAAe,KAAK,EAC7D,OAAO,KAGX,SACD,kCCHsB,eACrB,IAAmB,UAAf,QAAO,IAAuB,GAChC,UAD4C,QAAO,QAC7C,IAAI,WAEZ,MAAI,GAAW,YACb,IAAI,GAAO,UACP,EAAM,EAAW,EAAS,MAAM,KAAM,GAAQ,EAAK,GACnD,EAAQ,EAEZ,SAAI,EAAM,IACR,SAAO,GAAM,IAEf,MAAI,GAAS,EAAK,MAAM,KACxB,YAAS,MAAQ,EAAM,IAAI,EAC3B,GACD,CACD,WAAS,MAAQ,IAAK,EAAQ,SAC9B,SACD,CAED,kDArEA,+DAGA,KAAI,EAEJ,sBAiEA,EAAQ,0BAEO,oECxEf,aAmBe,QAJN,UAER,qECjBD,WAiBA,GAAI,GAAM,KAAK,cAEA,kFCdf,kDALA,iBACA,gBACA,eACA,oBA4Be,QAJG,WAChB,OAAO,cAAM,GAAQ,cAAa,cAAM,IAAS,cAClD,oFCzBG,kDAJJ,iBACA,oBAgEe,QAlBe,eAC5B,IAAc,MAGd,QACE,UADE,QAAO,QACH,IAER,WAhDF,6BAgDM,cACF,OAAU,WAAa,GAAU,CAAC,CAAC,EAAQ,QAC3C,IAAW,YAAc,GAAU,CAAC,CAAC,EAAQ,SAE/C,GAAO,cAAS,EAAM,EACpB,SACA,UACA,WAEH,oFC/DD,+DAGA,KAAI,EAAW,EAGf,IAmCe,QAZG,WAChB,IAAI,CACF,QAAiB,EAAV,KAAc,EAEvB,OAAQ,cACR,GAAI,IAAU,GAAY,IAAU,CAAC,EACnC,IAAI,GAAgB,CAAR,GAAY,CAAC,EACzB,QACD,yBACD,OAAO,KAAU,EAAQ,EAC1B,mFCnCG,kDAJJ,iBACA,oBAoCe,QAJG,WAChB,OAAO,GAAQ,cAAU,cAAU,GAAW,EA5BhD,YA6BC,mFCRD,kDA3BA,iBACA,kBA0BI,EAAU,gBAAd,mBAEe,iFC7Bf,+DAEA,OAyBe,QAJG,WAChB,OAAgB,KAAT,IAAgB,GAAK,cAC7B,+HCdD,mSAFA,aAKqB,YAMpB,CAAa,aAAO,mBAOnB,QAAK,KAAO,GAqBZ,UAAK,EAAI,iBAAe,GAAK,WAApB,UACT,CAED,6BAKS,aACR,IAAI,GAAmB,gBAAW,KAAK,KAEvC,SACC,OAAmB,EAAiB,QAAS,UAAoB,aAChE,OAAS,GAAQ,EAAO,OAAW,EAAQ,GAC3C,CAGF,IACA,qBApDmB,iFCAG,QAAiB,aACxC,IAAK,EAAK,MAAQ,EACjB,KACA,YAH8C,gBAK/C,WAAoB,EAAK,2DAAY,SACpC,MAAM,EAAO,KAAK,UAAW,EAC7B,IAAM,EAAO,KAAK,UAAW,EAAK,IAAK,EAEvC,QAAK,IACJ,EAED,QAZ8C,8EAc/C,CACA,Q,oECTK,aAuBS,QAfd,CARkB,IAQb,WACJ,OACC,QADI,QAAO,GAKZ,EAJQ,KAAM,IAAc,KAE3B,MAIF,EACA,YACA,gBACA,MACA,YAAS,wEC/BV,aAee,QANN,UACR,OAAgB,aACf,GACA,SACD,+BCgC8B,eAC9B,OACG,KAAQ,IACR,IAAkB,GAErB,EAED,oDAtCgB,IAAW,aAC1B,GAAc,GAAS,EAEvB,cAAO,OAAQ,EAAc,GAC7B,EAED,IAgBgB,UAAiB,aAC3B,OAAC,GAAgB,EACrB,GAGM,EAAc,GACrB,GAJQ,EAAe,QAAS,wBAGhC,GAGD,IAagB,iBACf,CACA,I,EA3DD,GAEA,spBCUA,CA6OyB,aACxB,OAAO,IAAW,WAAS,YAC1B,GAAW,WAAS,WACpB,GAAW,WAAS,SACpB,GAAW,WACZ,SAKD,CAC0B,aACzB,OAAO,IAAW,WAAS,QAAU,GAAW,WAChD,SAKD,CACiC,aAChC,MAAQ,GACP,IAAK,wBAA0C,EAAG,eACjD,SAGD,WAAU,EACV,MAED,CACA,Q,mSAtRD,eACA,gBACA,cACA,eACA,cACA,eACA,gBACA,OACA,aAEA,UAWqB,2IAQpB,uBAGO,OACN,KAAM,EAAe,KAAK,OAAO,QAEjC,KAIA,OAAK,OAAO,QAAQ,YAAY,GAAI,YAAsC,qBAEzE,CAAK,GAAsB,EAAmB,WAC7C,+BAAmB,cAGpB,+BAAM,IAAgB,GAGtB,cAAM,GAAkB,GAExB,qBAAyB,EAApB,EAAqB,eAI1B,SAAuB,WAAM,CAAE,MAAO,eACtC,SAAgB,WAChB,8BACA,GAlBD,EAkBG,CAAE,SAGL,UAAa,cACb,cAAK,SAAU,EAAc,YAAa,iBAAe,GAAK,qBAApB,UAG1C,QAAK,SAAU,EAAc,UAAW,iBAAe,GAAK,mBAApB,UAAxC,EAAmF,CAAE,SACrF,QAED,6BAOyB,aAAe,OACvC,KAAM,GAAS,KACf,OAAM,GAAe,GAAO,QAC5B,KAAI,GAAU,EAGd,WAAK,EAKA,MAAC,eACL,SAAU,GAAQ,eAElB,WAAK,CAKN,QAGK,iBAAC,GACL,cAID,WAAM,IAAe,GAAO,QAAQ,OAAO,eAE3C,OAAO,SAAS,eAAgB,UAC/B,GAAK,yBACL,GACD,GAED,2BAOuB,aACtB,IAAM,GAAU,EAChB,QAAM,GAAY,GAAW,WAAS,QAAU,GAAW,WAAS,WAAa,GAAW,WAI5F,YAAO,EAAiB,IAAa,KAAK,cAAe,KACtD,EAAgB,IAAa,KAAK,iBACpC,SACA,mBAED,OAED,8BAOe,WAAY,OAC1B,KAAM,EAAgB,KAAK,OAC3B,SAAM,GAAiB,EAGvB,UAAK,GAAC,GAIN,gBAAM,IAAgB,KAAK,iCAE3B,MACC,GAcD,SAde,eAAgB,UAE7B,IAAM,IAAe,GAAe,OAEpC,UAAK,GAAa,QACjB,IAAM,IAAQ,EACd,WAAM,OACN,GAED,GAAK,yBACL,GAED,MAIF,iCAMkB,WAAY,OAC7B,KAAM,EAAgB,KAAK,OAC3B,SAAM,GAAS,EACf,OAAM,GAAiB,EACvB,UAAM,GAAgB,GAGtB,wBAAK,IAAiB,GAAO,QAAQ,IAAK,GAAc,MACvD,IAAM,IAAW,EAAY,GAAe,kBAAoB,GAChE,mBAAM,GAAW,EAAc,yBAA0B,GAAU,EAAY,UAE/E,YAOA,MANC,OAAc,eAAgB,UAC7B,IAAe,UAAW,CAC1B,IAGF,KAKD,CAAK,GAAC,GAIN,gBAAM,IAAiB,KAAK,iCAE5B,MAAK,yBAA0C,EAAc,OAAO,QAAQ,IAAK,GAChF,MAMD,SANe,eAAgB,UAC7B,GAAK,yBACL,GAED,MAIF,yCAM0B,WACzB,MAAK,OAAO,SAAS,UAAU,UAAW,CAAE,UAAW,SACvD,IAED,iDASkC,WACjC,IAAM,GAAgB,KAAK,OAC3B,SAAM,EAAS,EACf,OAAM,GAAiB,EACvB,UAAM,GAAiB,KAAK,OAI5B,KAAM,GAAQ,UAAe,oBAC7B,OAAe,gBAAiB,GAAO,CAAE,UAAW,EAAU,UAC9D,gBAAM,IAAgB,EAAU,GAAM,MAAM,WAAa,GAAM,MAE/D,gBAAK,0BAAyC,EAAO,QAAQ,IAAK,GACjE,MAGD,GACA,cA5ND,2BAIC,OACA,yBA6NF,mBAnOqB,mBC9BrB,cAIA,YACA,YAAkH,2FAElH,sBCPA,cAIA,YACA,YAAiub,osbAEjub,sBCPA,cAIA,YACA,YAA0G,mFAE1G,sBCPA,cAIA,YACA,YAA6T,sSAE7T,sBCPA,cAIA,YACA,YAA0J,mIAE1J,sBCPA,cAIA,YACA,YAAoa,6YAEpa,sBCPA,cAIA,YACA,YAAsP,+NAEtP,sBCPA,cAIA,YACA,YAAuX,gWAEvX,sBCPA,cAIA,YACA,YAAwb,iaAExb,kBCPA,U,u+GCAA,U,4zECAA,UAA6V,o5HCA7V,U,2WCAA,U,yeCAA,U,24FCAA,U,4rECAA,U,gqFCAA,U,29CCAA,U,o+ECAA,U,0yBCAA,U,uxBCEA,CACA,QACA,oCAEA,YACA,6BAaA,2BClBA,CACA,QACA,oCAEA,YACA,6BAaA,2BClBA,CACA,QACA,oCAEA,YACA,6BAaA,2BClBA,CACA,QACA,oCAEA,YACA,6BAaA,2BClBA,CACA,QACA,oCAEA,YACA,6BAaA,2BClBA,CACA,QACA,oCAEA,YACA,6BAaA,2BClBA,CACA,QACA,oCAEA,YACA,6BAaA,2BClBA,CACA,QACA,oCAEA,YACA,6BAaA,2BClBA,CACA,QACA,oCAEA,YACA,6BAaA","file":"ckeditor.compat.js","sourcesContent":["/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module module:engine/view/writer\n */\n\nimport Position from './position';\nimport ContainerElement from './containerelement';\nimport AttributeElement from './attributeelement';\nimport EmptyElement from './emptyelement';\nimport UIElement from './uielement';\nimport Text from './text';\nimport Range from './range';\nimport TreeWalker from './treewalker';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport DocumentFragment from './documentfragment';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\n\n/**\n * Contains functions used for composing view tree.\n *\n * @namespace writer\n */\n\nconst writer = {\n\tbreakAttributes,\n\tbreakContainer,\n\tmergeAttributes,\n\tmergeContainers,\n\tinsert,\n\tremove,\n\tclear,\n\tmove,\n\twrap,\n\twrapPosition,\n\tunwrap,\n\trename,\n\tbreakViewRangePerContainer\n};\n\nexport default writer;\n\n/**\n * Breaks attribute nodes at provided position or at boundaries of provided range. It breaks attribute elements inside\n * up to a container element.\n *\n * In following examples `<p>` is a container, `<b>` and `<u>` are attribute nodes:\n *\n *\t\t<p>foo<b><u>bar{}</u></b></p> -> <p>foo<b><u>bar</u></b>[]</p>\n *\t\t<p>foo<b><u>{}bar</u></b></p> -> <p>foo{}<b><u>bar</u></b></p>\n *\t\t<p>foo<b><u>b{}ar</u></b></p> -> <p>foo<b><u>b</u></b>[]<b><u>ar</u></b></p>\n *\t\t<p><b>fo{o</b><u>ba}r</u></p> -> <p><b>fo</b><b>o</b><u>ba</u><u>r</u></b></p>\n *\n * **Note:** {@link module:engine/view/documentfragment~DocumentFragment DocumentFragment} is treated like a container.\n *\n * **Note:** Difference between {@link module:engine/view/writer~writer.breakAttributes breakAttributes} and\n * {@link module:engine/view/writer~writer.breakContainer breakContainer} is that `breakAttributes` breaks all\n * {@link module:engine/view/attributeelement~AttributeElement attribute elements} that are ancestors of given `position`, up to the first\n * encountered {@link module:engine/view/containerelement~ContainerElement container element}. `breakContainer` assumes that given\n * `position`\n * is directly in container element and breaks that container element.\n *\n * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container`\n * when {@link module:engine/view/range~Range#start start}\n * and {@link module:engine/view/range~Range#end end} positions of a passed range are not placed inside same parent container.\n *\n * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-empty-element`\n * when trying to break attributes\n * inside {@link module:engine/view/emptyelement~EmptyElement EmptyElement}.\n *\n * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-ui-element`\n * when trying to break attributes\n * inside {@link module:engine/view/uielement~UIElement UIElement}.\n *\n * @see module:engine/view/attributeelement~AttributeElement\n * @see module:engine/view/containerelement~ContainerElement\n * @see module:engine/view/writer~writer.breakContainer\n * @function module:engine/view/writer~writer.breakAttributes\n * @param {module:engine/view/position~Position|module:engine/view/range~Range} positionOrRange Position where to break attribute elements.\n * @returns {module:engine/view/position~Position|module:engine/view/range~Range} New position or range, after breaking the attribute\n * elements.\n */\nexport function breakAttributes( positionOrRange ) {\n\tif ( positionOrRange instanceof Position ) {\n\t\treturn _breakAttributes( positionOrRange );\n\t} else {\n\t\treturn _breakAttributesRange( positionOrRange );\n\t}\n}\n\n/**\n * Breaks {@link module:engine/view/containerelement~ContainerElement container view element} into two, at the given position. Position\n * has to be directly inside container element and cannot be in root. Does not break if position is at the beginning\n * or at the end of it's parent element.\n *\n *\t\t<p>foo^bar</p> -> <p>foo</p><p>bar</p>\n *\t\t<div><p>foo</p>^<p>bar</p></div> -> <div><p>foo</p></div><div><p>bar</p></div>\n *\t\t<p>^foobar</p> -> ^<p>foobar</p>\n *\t\t<p>foobar^</p> -> <p>foobar</p>^\n *\n * **Note:** Difference between {@link module:engine/view/writer~writer.breakAttributes breakAttributes} and\n * {@link module:engine/view/writer~writer.breakContainer breakContainer} is that `breakAttributes` breaks all\n * {@link module:engine/view/attributeelement~AttributeElement attribute elements} that are ancestors of given `position`, up to the first\n * encountered {@link module:engine/view/containerelement~ContainerElement container element}. `breakContainer` assumes that given\n * `position`\n * is directly in container element and breaks that container element.\n *\n * @see module:engine/view/attributeelement~AttributeElement\n * @see module:engine/view/containerelement~ContainerElement\n * @see module:engine/view/writer~writer.breakAttributes\n * @function module:engine/view/writer~writer.breakContainer\n * @param {module:engine/view/position~Position} position Position where to break element.\n * @returns {module:engine/view/position~Position} Position between broken elements. If element has not been broken, the returned position\n * is placed either before it or after it.\n */\nexport function breakContainer( position ) {\n\tconst element = position.parent;\n\n\tif ( !( element.is( 'containerElement' ) ) ) {\n\t\t/**\n\t\t * Trying to break an element which is not a container element.\n\t\t *\n\t\t * @error view-writer-break-non-container-element\n\t\t */\n\t\tthrow new CKEditorError( 'view-writer-break-non-container-element: Trying to break an element which is not a container element.' );\n\t}\n\n\tif ( !element.parent ) {\n\t\t/**\n\t\t * Trying to break root element.\n\t\t *\n\t\t * @error view-writer-break-root\n\t\t */\n\t\tthrow new CKEditorError( 'view-writer-break-root: Trying to break root element.' );\n\t}\n\n\tif ( position.isAtStart ) {\n\t\treturn Position.createBefore( element );\n\t} else if ( !position.isAtEnd ) {\n\t\tconst newElement = element.clone( false );\n\n\t\tinsert( Position.createAfter( element ), newElement );\n\n\t\tconst sourceRange = new Range( position, Position.createAt( element, 'end' ) );\n\t\tconst targetPosition = new Position( newElement, 0 );\n\n\t\tmove( sourceRange, targetPosition );\n\t}\n\n\treturn Position.createAfter( element );\n}\n\n/**\n * Merges {@link module:engine/view/attributeelement~AttributeElement attribute elements}. It also merges text nodes if needed.\n * Only {@link module:engine/view/attributeelement~AttributeElement#isSimilar similar} attribute elements can be merged.\n *\n * In following examples `<p>` is a container and `<b>` is an attribute element:\n *\n *\t\t<p>foo[]bar</p> -> <p>foo{}bar</p>\n *\t\t<p><b>foo</b>[]<b>bar</b></p> -> <p><b>foo{}bar</b></p>\n *\t\t<p><b foo=\"bar\">a</b>[]<b foo=\"baz\">b</b></p> -> <p><b foo=\"bar\">a</b>[]<b foo=\"baz\">b</b></p>\n *\n * It will also take care about empty attributes when merging:\n *\n *\t\t<p><b>[]</b></p> -> <p>[]</p>\n *\t\t<p><b>foo</b><i>[]</i><b>bar</b></p> -> <p><b>foo{}bar</b></p>\n *\n * **Note:** Difference between {@link module:engine/view/writer~writer.mergeAttributes mergeAttributes} and\n * {@link module:engine/view/writer~writer.mergeContainers mergeContainers} is that `mergeAttributes` merges two\n * {@link module:engine/view/attributeelement~AttributeElement attribute elements} or {@link module:engine/view/text~Text text nodes}\n * while `mergeContainer` merges two {@link module:engine/view/containerelement~ContainerElement container elements}.\n *\n * @see module:engine/view/attributeelement~AttributeElement\n * @see module:engine/view/containerelement~ContainerElement\n * @see module:engine/view/writer~writer.mergeContainers\n * @function module:engine/view/writer~writer.mergeAttributes\n * @param {module:engine/view/position~Position} position Merge position.\n * @returns {module:engine/view/position~Position} Position after merge.\n */\nexport function mergeAttributes( position ) {\n\tconst positionOffset = position.offset;\n\tconst positionParent = position.parent;\n\n\t// When inside text node - nothing to merge.\n\tif ( positionParent.is( 'text' ) ) {\n\t\treturn position;\n\t}\n\n\t// When inside empty attribute - remove it.\n\tif ( positionParent.is( 'attributeElement' ) && positionParent.childCount === 0 ) {\n\t\tconst parent = positionParent.parent;\n\t\tconst offset = positionParent.index;\n\t\tpositionParent.remove();\n\n\t\treturn mergeAttributes( new Position( parent, offset ) );\n\t}\n\n\tconst nodeBefore = positionParent.getChild( positionOffset - 1 );\n\tconst nodeAfter = positionParent.getChild( positionOffset );\n\n\t// Position should be placed between two nodes.\n\tif ( !nodeBefore || !nodeAfter ) {\n\t\treturn position;\n\t}\n\n\t// When position is between two text nodes.\n\tif ( nodeBefore.is( 'text' ) && nodeAfter.is( 'text' ) ) {\n\t\treturn mergeTextNodes( nodeBefore, nodeAfter );\n\t}\n\t// When selection is between two same attribute elements.\n\telse if ( nodeBefore.is( 'attributeElement' ) && nodeAfter.is( 'attributeElement' ) && nodeBefore.isSimilar( nodeAfter ) ) {\n\t\t// Move all children nodes from node placed after selection and remove that node.\n\t\tconst count = nodeBefore.childCount;\n\t\tnodeBefore.appendChildren( nodeAfter.getChildren() );\n\t\tnodeAfter.remove();\n\n\t\t// New position is located inside the first node, before new nodes.\n\t\t// Call this method recursively to merge again if needed.\n\t\treturn mergeAttributes( new Position( nodeBefore, count ) );\n\t}\n\n\treturn position;\n}\n\n/**\n * Merges two {@link module:engine/view/containerelement~ContainerElement container elements} that are before and after given position.\n * Precisely, the element after the position is removed and it's contents are moved to element before the position.\n *\n *\t\t<p>foo</p>^<p>bar</p> -> <p>foo^bar</p>\n *\t\t<div>foo</div>^<p>bar</p> -> <div>foo^bar</div>\n *\n * **Note:** Difference between {@link module:engine/view/writer~writer.mergeAttributes mergeAttributes} and\n * {@link module:engine/view/writer~writer.mergeContainers mergeContainers} is that `mergeAttributes` merges two\n * {@link module:engine/view/attributeelement~AttributeElement attribute elements} or {@link module:engine/view/text~Text text nodes}\n * while `mergeContainer` merges two {@link module:engine/view/containerelement~ContainerElement container elements}.\n *\n * @see module:engine/view/attributeelement~AttributeElement\n * @see module:engine/view/containerelement~ContainerElement\n * @see module:engine/view/writer~writer.mergeAttributes\n * @function module:engine/view/writer~writer.mergeContainers\n * @param {module:engine/view/position~Position} position Merge position.\n * @returns {module:engine/view/position~Position} Position after merge.\n */\nexport function mergeContainers( position ) {\n\tconst prev = position.nodeBefore;\n\tconst next = position.nodeAfter;\n\n\tif ( !prev || !next || !prev.is( 'containerElement' ) || !next.is( 'containerElement' ) ) {\n\t\t/**\n\t\t * Element before and after given position cannot be merged.\n\t\t *\n\t\t * @error view-writer-merge-containers-invalid-position\n\t\t */\n\t\tthrow new CKEditorError( 'view-writer-merge-containers-invalid-position: ' +\n\t\t\t'Element before and after given position cannot be merged.' );\n\t}\n\n\tconst lastChild = prev.getChild( prev.childCount - 1 );\n\tconst newPosition = lastChild instanceof Text ? Position.createAt( lastChild, 'end' ) : Position.createAt( prev, 'end' );\n\n\tmove( Range.createIn( next ), Position.createAt( prev, 'end' ) );\n\tremove( Range.createOn( next ) );\n\n\treturn newPosition;\n}\n\n/**\n * Breaks given `range` on a set of {@link module:engine/view/range~Range ranges}, that each are contained within a\n * {@link module:engine/view/containerelement~ContainerElement container element}. After `range` is broken, it's \"pieces\" can\n * be used by other {@link module:engine/view/writer~writer} methods (which expect that passed ranges are contained within\n * one container element).\n *\n * @function module:engine/view/writer~writer.breakViewRangePerContainer\n * @param {module:engine/view/range~Range} range Range to break.\n * @returns {Array.<module:engine/view/range~Range>} Ranges that combine into passed `viewRange`.\n */\nexport function breakViewRangePerContainer( range ) {\n\tconst ranges = [];\n\tconst walker = new TreeWalker( { boundaries: range } );\n\n\tlet start = range.start;\n\n\tfor ( const value of walker ) {\n\t\tif ( value.item.is( 'containerElement' ) ) {\n\t\t\tif ( !start.isEqual( value.previousPosition ) ) {\n\t\t\t\tranges.push( new Range( start, value.previousPosition ) );\n\t\t\t}\n\n\t\t\tstart = value.nextPosition;\n\t\t}\n\t}\n\n\tranges.push( new Range( start, range.end ) );\n\n\treturn ranges;\n}\n\n/**\n * Insert node or nodes at specified position. Takes care about breaking attributes before insertion\n * and merging them afterwards.\n *\n * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-insert-invalid-node` when nodes to insert\n * contains instances that are not {@link module:engine/view/text~Text Texts},\n * {@link module:engine/view/attributeelement~AttributeElement AttributeElements},\n * {@link module:engine/view/containerelement~ContainerElement ContainerElements},\n * {@link module:engine/view/emptyelement~EmptyElement EmptyElements} or\n * {@link module:engine/view/uielement~UIElement UIElements}.\n *\n * @function insert\n * @param {module:engine/view/position~Position} position Insertion position.\n * @param {module:engine/view/text~Text|module:engine/view/attributeelement~AttributeElement|\n * module:engine/view/containerelement~ContainerElement|module:engine/view/emptyelement~EmptyElement|\n * module:engine/view/uielement~UIElement|Iterable.<module:engine/view/text~Text|\n * module:engine/view/attributeelement~AttributeElement|module:engine/view/containerelement~ContainerElement|\n * module:engine/view/emptyelement~EmptyElement|module:engine/view/uielement~UIElement>} nodes Node or nodes to insert.\n * @returns {module:engine/view/range~Range} Range around inserted nodes.\n */\nexport function insert( position, nodes ) {\n\tnodes = isIterable( nodes ) ? [ ...nodes ] : [ nodes ];\n\n\t// Check if nodes to insert are instances of AttributeElements, ContainerElements, EmptyElements, UIElements or Text.\n\tvalidateNodesToInsert( nodes );\n\n\tconst container = getParentContainer( position );\n\n\tif ( !container ) {\n\t\t/**\n\t\t * Position's parent container cannot be found.\n\t\t *\n\t\t * @error view-writer-invalid-position-container\n\t\t */\n\t\tthrow new CKEditorError( 'view-writer-invalid-position-container' );\n\t}\n\n\tconst insertionPosition = _breakAttributes( position, true );\n\n\tconst length = container.insertChildren( insertionPosition.offset, nodes );\n\tconst endPosition = insertionPosition.getShiftedBy( length );\n\tconst start = mergeAttributes( insertionPosition );\n\n\t// When no nodes were inserted - return collapsed range.\n\tif ( length === 0 ) {\n\t\treturn new Range( start, start );\n\t} else {\n\t\t// If start position was merged - move end position.\n\t\tif ( !start.isEqual( insertionPosition ) ) {\n\t\t\tendPosition.offset--;\n\t\t}\n\n\t\tconst end = mergeAttributes( endPosition );\n\n\t\treturn new Range( start, end );\n\t}\n}\n\n/**\n * Removes provided range from the container.\n *\n * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n * same parent container.\n *\n * @function module:engine/view/writer~writer.remove\n * @param {module:engine/view/range~Range} range Range to remove from container. After removing, it will be updated\n * to a collapsed range showing the new position.\n * @returns {module:engine/view/documentfragment~DocumentFragment} Document fragment containing removed nodes.\n */\nexport function remove( range ) {\n\tvalidateRangeContainer( range );\n\n\t// If range is collapsed - nothing to remove.\n\tif ( range.isCollapsed ) {\n\t\treturn new DocumentFragment();\n\t}\n\n\t// Break attributes at range start and end.\n\tconst { start: breakStart, end: breakEnd } = _breakAttributesRange( range, true );\n\tconst parentContainer = breakStart.parent;\n\n\tconst count = breakEnd.offset - breakStart.offset;\n\n\t// Remove nodes in range.\n\tconst removed = parentContainer.removeChildren( breakStart.offset, count );\n\n\t// Merge after removing.\n\tconst mergePosition = mergeAttributes( breakStart );\n\trange.start = mergePosition;\n\trange.end = Position.createFromPosition( mergePosition );\n\n\t// Return removed nodes.\n\treturn new DocumentFragment( removed );\n}\n\n/**\n * Removes matching elements from given range.\n *\n * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n * same parent container.\n *\n * @function module:engine/view/writer~writer.clear\n * @param {module:engine/view/range~Range} range Range to clear.\n * @param {module:engine/view/element~Element} element Element to remove.\n */\nexport function clear( range, element ) {\n\tvalidateRangeContainer( range );\n\n\t// Create walker on given range.\n\t// We walk backward because when we remove element during walk it modifies range end position.\n\tconst walker = range.getWalker( {\n\t\tdirection: 'backward',\n\t\tignoreElementEnd: true\n\t} );\n\n\t// Let's walk.\n\tfor ( const current of walker ) {\n\t\tconst item = current.item;\n\t\tlet rangeToRemove;\n\n\t\t// When current item matches to the given element.\n\t\tif ( item.is( 'element' ) && element.isSimilar( item ) ) {\n\t\t\t// Create range on this element.\n\t\t\trangeToRemove = Range.createOn( item );\n\t\t// When range starts inside Text or TextProxy element.\n\t\t} else if ( !current.nextPosition.isAfter( range.start ) && ( item.is( 'text' ) || item.is( 'textProxy' ) ) ) {\n\t\t\t// We need to check if parent of this text matches to given element.\n\t\t\tconst parentElement = item.getAncestors().find( ancestor => {\n\t\t\t\treturn ancestor.is( 'element' ) && element.isSimilar( ancestor );\n\t\t\t} );\n\n\t\t\t// If it is then create range inside this element.\n\t\t\tif ( parentElement ) {\n\t\t\t\trangeToRemove = Range.createIn( parentElement );\n\t\t\t}\n\t\t}\n\n\t\t// If we have found element to remove.\n\t\tif ( rangeToRemove ) {\n\t\t\t// We need to check if element range stick out of the given range and truncate if it is.\n\t\t\tif ( rangeToRemove.end.isAfter( range.end ) ) {\n\t\t\t\trangeToRemove.end = range.end;\n\t\t\t}\n\n\t\t\tif ( rangeToRemove.start.isBefore( range.start ) ) {\n\t\t\t\trangeToRemove.start = range.start;\n\t\t\t}\n\n\t\t\t// At the end we remove range with found element.\n\t\t\tremove( rangeToRemove );\n\t\t}\n\t}\n}\n\n/**\n * Moves nodes from provided range to target position.\n *\n * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n * same parent container.\n *\n * @function module:engine/view/writer~writer.move\n * @param {module:engine/view/range~Range} sourceRange Range containing nodes to move.\n * @param {module:engine/view/position~Position} targetPosition Position to insert.\n * @returns {module:engine/view/range~Range} Range in target container. Inserted nodes are placed between\n * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions.\n */\nexport function move( sourceRange, targetPosition ) {\n\tlet nodes;\n\n\tif ( targetPosition.isAfter( sourceRange.end ) ) {\n\t\ttargetPosition = _breakAttributes( targetPosition, true );\n\n\t\tconst parent = targetPosition.parent;\n\t\tconst countBefore = parent.childCount;\n\n\t\tsourceRange = _breakAttributesRange( sourceRange, true );\n\n\t\tnodes = remove( sourceRange );\n\n\t\ttargetPosition.offset += ( parent.childCount - countBefore );\n\t} else {\n\t\tnodes = remove( sourceRange );\n\t}\n\n\treturn insert( targetPosition, nodes );\n}\n\n/**\n * Wraps elements within range with provided {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\n *\n * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-invalid-range-container`\n * when {@link module:engine/view/range~Range#start}\n * and {@link module:engine/view/range~Range#end} positions are not placed inside same parent container.\n * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-invalid-attribute` when passed attribute element is not\n * an instance of {module:engine/view/attributeelement~AttributeElement AttributeElement}.\n *\n * @function module:engine/view/writer~writer.wrap\n * @param {module:engine/view/range~Range} range Range to wrap.\n * @param {module:engine/view/attributeelement~AttributeElement} attribute Attribute element to use as wrapper.\n */\nexport function wrap( range, attribute ) {\n\tif ( !( attribute instanceof AttributeElement ) ) {\n\t\t/**\n\t\t * Attribute element need to be instance of attribute element.\n\t\t *\n\t\t * @error view-writer-wrap-invalid-attribute\n\t\t */\n\t\tthrow new CKEditorError( 'view-writer-wrap-invalid-attribute' );\n\t}\n\n\tvalidateRangeContainer( range );\n\n\t// If range is collapsed - nothing to wrap.\n\tif ( range.isCollapsed ) {\n\t\treturn range;\n\t}\n\n\t// Range around one element.\n\tif ( range.end.isEqual( range.start.getShiftedBy( 1 ) ) ) {\n\t\tconst node = range.start.nodeAfter;\n\n\t\tif ( node instanceof AttributeElement && wrapAttributeElement( attribute, node ) ) {\n\t\t\treturn range;\n\t\t}\n\t}\n\n\t// Range is inside single attribute and spans on all children.\n\tif ( rangeSpansOnAllChildren( range ) && wrapAttributeElement( attribute, range.start.parent ) ) {\n\t\tconst parent = range.start.parent.parent;\n\t\tconst index = range.start.parent.index;\n\n\t\treturn Range.createFromParentsAndOffsets( parent, index, parent, index + 1 );\n\t}\n\n\t// Break attributes at range start and end.\n\tconst { start: breakStart, end: breakEnd } = _breakAttributesRange( range, true );\n\tconst parentContainer = breakStart.parent;\n\n\t// Unwrap children located between break points.\n\tconst unwrappedRange = unwrapChildren( parentContainer, breakStart.offset, breakEnd.offset, attribute );\n\n\t// Wrap all children with attribute.\n\tconst newRange = wrapChildren( parentContainer, unwrappedRange.start.offset, unwrappedRange.end.offset, attribute );\n\n\t// Merge attributes at the both ends and return a new range.\n\tconst start = mergeAttributes( newRange.start );\n\n\t// If start position was merged - move end position back.\n\tif ( !start.isEqual( newRange.start ) ) {\n\t\tnewRange.end.offset--;\n\t}\n\tconst end = mergeAttributes( newRange.end );\n\n\treturn new Range( start, end );\n}\n\n/**\n * Wraps position with provided attribute. Returns new position after wrapping. This method will also merge newly\n * added attribute with its siblings whenever possible.\n *\n * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-invalid-attribute` when passed attribute element is not\n * an instance of {module:engine/view/attributeelement~AttributeElement AttributeElement}.\n *\n * @param {module:engine/view/position~Position} position\n * @param {module:engine/view/attributeelement~AttributeElement} attribute\n * @returns {module:engine/view/position~Position} New position after wrapping.\n */\nexport function wrapPosition( position, attribute ) {\n\tif ( !( attribute instanceof AttributeElement ) ) {\n\t\t/**\n\t\t * Attribute element need to be instance of attribute element.\n\t\t *\n\t\t * @error view-writer-wrap-invalid-attribute\n\t\t */\n\t\tthrow new CKEditorError( 'view-writer-wrap-invalid-attribute' );\n\t}\n\n\t// Return same position when trying to wrap with attribute similar to position parent.\n\tif ( attribute.isSimilar( position.parent ) ) {\n\t\treturn movePositionToTextNode( Position.createFromPosition( position ) );\n\t}\n\n\t// When position is inside text node - break it and place new position between two text nodes.\n\tif ( position.parent.is( 'text' ) ) {\n\t\tposition = breakTextNode( position );\n\t}\n\n\t// Create fake element that will represent position, and will not be merged with other attributes.\n\tconst fakePosition = new AttributeElement();\n\tfakePosition.priority = Number.POSITIVE_INFINITY;\n\tfakePosition.isSimilar = () => false;\n\n\t// Insert fake element in position location.\n\tposition.parent.insertChildren( position.offset, fakePosition );\n\n\t// Range around inserted fake attribute element.\n\tconst wrapRange = new Range( position, position.getShiftedBy( 1 ) );\n\n\t// Wrap fake element with attribute (it will also merge if possible).\n\twrap( wrapRange, attribute );\n\n\t// Remove fake element and place new position there.\n\tconst newPosition = new Position( fakePosition.parent, fakePosition.index );\n\tfakePosition.remove();\n\n\t// If position is placed between text nodes - merge them and return position inside.\n\tconst nodeBefore = newPosition.nodeBefore;\n\tconst nodeAfter = newPosition.nodeAfter;\n\n\tif ( nodeBefore instanceof Text && nodeAfter instanceof Text ) {\n\t\treturn mergeTextNodes( nodeBefore, nodeAfter );\n\t}\n\n\t// If position is next to text node - move position inside.\n\treturn movePositionToTextNode( newPosition );\n}\n\n/**\n * Unwraps nodes within provided range from attribute element.\n *\n * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n * same parent container.\n *\n * @param {module:engine/view/range~Range} range\n * @param {module:engine/view/attributeelement~AttributeElement} element\n */\nexport function unwrap( range, attribute ) {\n\tif ( !( attribute instanceof AttributeElement ) ) {\n\t\t/**\n\t\t * Attribute element need to be instance of attribute element.\n\t\t *\n\t\t * @error view-writer-unwrap-invalid-attribute\n\t\t */\n\t\tthrow new CKEditorError( 'view-writer-unwrap-invalid-attribute' );\n\t}\n\n\tvalidateRangeContainer( range );\n\n\t// If range is collapsed - nothing to unwrap.\n\tif ( range.isCollapsed ) {\n\t\treturn range;\n\t}\n\n\t// Range around one element - check if AttributeElement can be unwrapped partially when it's not similar.\n\t// For example:\n\t// <b class=\"foo bar\" title=\"baz\"></b> unwrap with:\t<b class=\"foo\"></p> result: <b class\"bar\" title=\"baz\"></b>\n\tif ( range.end.isEqual( range.start.getShiftedBy( 1 ) ) ) {\n\t\tconst node = range.start.nodeAfter;\n\n\t\t// Unwrap single attribute element.\n\t\tif ( !attribute.isSimilar( node ) && node instanceof AttributeElement && unwrapAttributeElement( attribute, node ) ) {\n\t\t\treturn range;\n\t\t}\n\t}\n\n\t// Break attributes at range start and end.\n\tconst { start: breakStart, end: breakEnd } = _breakAttributesRange( range, true );\n\tconst parentContainer = breakStart.parent;\n\n\t// Unwrap children located between break points.\n\tconst newRange = unwrapChildren( parentContainer, breakStart.offset, breakEnd.offset, attribute );\n\n\t// Merge attributes at the both ends and return a new range.\n\tconst start = mergeAttributes( newRange.start );\n\n\t// If start position was merged - move end position back.\n\tif ( !start.isEqual( newRange.start ) ) {\n\t\tnewRange.end.offset--;\n\t}\n\tconst end = mergeAttributes( newRange.end );\n\n\treturn new Range( start, end );\n}\n\n/**\n * Renames element by creating a copy of renamed element but with changed name and then moving contents of the\n * old element to the new one. Keep in mind that this will invalidate all {@link module:engine/view/position~Position positions} which\n * has renamed element as {@link module:engine/view/position~Position#parent a parent}.\n *\n * New element has to be created because `Element#tagName` property in DOM is readonly.\n *\n * Since this function creates a new element and removes the given one, the new element is returned to keep reference.\n *\n * @param {module:engine/view/containerelement~ContainerElement} viewElement Element to be renamed.\n * @param {String} newName New name for element.\n */\nexport function rename( viewElement, newName ) {\n\tconst newElement = new ContainerElement( newName, viewElement.getAttributes() );\n\n\tinsert( Position.createAfter( viewElement ), newElement );\n\tmove( Range.createIn( viewElement ), Position.createAt( newElement ) );\n\tremove( Range.createOn( viewElement ) );\n\n\treturn newElement;\n}\n\n// Returns first parent container of specified {@link module:engine/view/position~Position Position}.\n// Position's parent node is checked as first, then next parents are checked.\n// Note that {@link module:engine/view/documentfragment~DocumentFragment DocumentFragment} is treated like a container.\n//\n// @param {module:engine/view/position~Position} position Position used as a start point to locate parent container.\n// @returns {module:engine/view/containerelement~ContainerElement|module:engine/view/documentfragment~DocumentFragment|undefined}\n// Parent container element or `undefined` if container is not found.\nfunction getParentContainer( position ) {\n\tlet parent = position.parent;\n\n\twhile ( !isContainerOrFragment( parent ) ) {\n\t\tif ( !parent ) {\n\t\t\treturn undefined;\n\t\t}\n\t\tparent = parent.parent;\n\t}\n\n\treturn parent;\n}\n\n// Function used by both public breakAttributes (without splitting text nodes) and by other methods (with\n// splitting text nodes).\n//\n// @param {module:engine/view/range~Range} range Range which `start` and `end` positions will be used to break attributes.\n// @param {Boolean} [forceSplitText = false] If set to `true`, will break text nodes even if they are directly in\n// container element. This behavior will result in incorrect view state, but is needed by other view writing methods\n// which then fixes view state. Defaults to `false`.\n// @returns {module:engine/view/range~Range} New range with located at break positions.\nfunction _breakAttributesRange( range, forceSplitText = false ) {\n\tconst rangeStart = range.start;\n\tconst rangeEnd = range.end;\n\n\tvalidateRangeContainer( range );\n\n\t// Break at the collapsed position. Return new collapsed range.\n\tif ( range.isCollapsed ) {\n\t\tconst position = _breakAttributes( range.start, forceSplitText );\n\n\t\treturn new Range( position, position );\n\t}\n\n\tconst breakEnd = _breakAttributes( rangeEnd, forceSplitText );\n\tconst count = breakEnd.parent.childCount;\n\tconst breakStart = _breakAttributes( rangeStart, forceSplitText );\n\n\t// Calculate new break end offset.\n\tbreakEnd.offset += breakEnd.parent.childCount - count;\n\n\treturn new Range( breakStart, breakEnd );\n}\n\n// Function used by public breakAttributes (without splitting text nodes) and by other methods (with\n// splitting text nodes).\n//\n// Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-empty-element` when break position\n// is placed inside {@link module:engine/view/emptyelement~EmptyElement EmptyElement}.\n//\n// Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-ui-element` when break position\n// is placed inside {@link module:engine/view/uielement~UIElement UIElement}.\n//\n// @param {module:engine/view/position~Position} position Position where to break attributes.\n// @param {Boolean} [forceSplitText = false] If set to `true`, will break text nodes even if they are directly in\n// container element. This behavior will result in incorrect view state, but is needed by other view writing methods\n// which then fixes view state. Defaults to `false`.\n// @returns {module:engine/view/position~Position} New position after breaking the attributes.\nfunction _breakAttributes( position, forceSplitText = false ) {\n\tconst positionOffset = position.offset;\n\tconst positionParent = position.parent;\n\n\t// If position is placed inside EmptyElement - throw an exception as we cannot break inside.\n\tif ( position.parent.is( 'emptyElement' ) ) {\n\t\t/**\n\t\t * Cannot break inside EmptyElement instance.\n\t\t *\n\t\t * @error view-writer-cannot-break-empty-element\n\t\t */\n\t\tthrow new CKEditorError( 'view-writer-cannot-break-empty-element' );\n\t}\n\n\t// If position is placed inside UIElement - throw an exception as we cannot break inside.\n\tif ( position.parent.is( 'uiElement' ) ) {\n\t\t/**\n\t\t * Cannot break inside UIElement instance.\n\t\t *\n\t\t * @error view-writer-cannot-break-ui-element\n\t\t */\n\t\tthrow new CKEditorError( 'view-writer-cannot-break-ui-element' );\n\t}\n\n\t// There are no attributes to break and text nodes breaking is not forced.\n\tif ( !forceSplitText && positionParent.is( 'text' ) && isContainerOrFragment( positionParent.parent ) ) {\n\t\treturn Position.createFromPosition( position );\n\t}\n\n\t// Position's parent is container, so no attributes to break.\n\tif ( isContainerOrFragment( positionParent ) ) {\n\t\treturn Position.createFromPosition( position );\n\t}\n\n\t// Break text and start again in new position.\n\tif ( positionParent.is( 'text' ) ) {\n\t\treturn _breakAttributes( breakTextNode( position ), forceSplitText );\n\t}\n\n\tconst length = positionParent.childCount;\n\n\t// <p>foo<b><u>bar{}</u></b></p>\n\t// <p>foo<b><u>bar</u>[]</b></p>\n\t// <p>foo<b><u>bar</u></b>[]</p>\n\tif ( positionOffset == length ) {\n\t\tconst newPosition = new Position( positionParent.parent, positionParent.index + 1 );\n\n\t\treturn _breakAttributes( newPosition, forceSplitText );\n\t} else\n\t// <p>foo<b><u>{}bar</u></b></p>\n\t// <p>foo<b>[]<u>bar</u></b></p>\n\t// <p>foo{}<b><u>bar</u></b></p>\n\tif ( positionOffset === 0 ) {\n\t\tconst newPosition = new Position( positionParent.parent, positionParent.index );\n\n\t\treturn _breakAttributes( newPosition, forceSplitText );\n\t}\n\t// <p>foo<b><u>b{}ar</u></b></p>\n\t// <p>foo<b><u>b[]ar</u></b></p>\n\t// <p>foo<b><u>b</u>[]<u>ar</u></b></p>\n\t// <p>foo<b><u>b</u></b>[]<b><u>ar</u></b></p>\n\telse {\n\t\tconst offsetAfter = positionParent.index + 1;\n\n\t\t// Break element.\n\t\tconst clonedNode = positionParent.clone();\n\n\t\t// Insert cloned node to position's parent node.\n\t\tpositionParent.parent.insertChildren( offsetAfter, clonedNode );\n\n\t\t// Get nodes to move.\n\t\tconst count = positionParent.childCount - positionOffset;\n\t\tconst nodesToMove = positionParent.removeChildren( positionOffset, count );\n\n\t\t// Move nodes to cloned node.\n\t\tclonedNode.appendChildren( nodesToMove );\n\n\t\t// Create new position to work on.\n\t\tconst newPosition = new Position( positionParent.parent, offsetAfter );\n\n\t\treturn _breakAttributes( newPosition, forceSplitText );\n\t}\n}\n\n// Unwraps children from provided `attribute`. Only children contained in `parent` element between\n// `startOffset` and `endOffset` will be unwrapped.\n//\n// @param {module:engine/view/element~Element} parent\n// @param {Number} startOffset\n// @param {Number} endOffset\n// @param {module:engine/view/element~Element} attribute\nfunction unwrapChildren( parent, startOffset, endOffset, attribute ) {\n\tlet i = startOffset;\n\tconst unwrapPositions = [];\n\n\t// Iterate over each element between provided offsets inside parent.\n\twhile ( i < endOffset ) {\n\t\tconst child = parent.getChild( i );\n\n\t\t// If attributes are the similar, then unwrap.\n\t\tif ( child.isSimilar( attribute ) ) {\n\t\t\tconst unwrapped = child.getChildren();\n\t\t\tconst count = child.childCount;\n\n\t\t\t// Replace wrapper element with its children\n\t\t\tchild.remove();\n\t\t\tparent.insertChildren( i, unwrapped );\n\n\t\t\t// Save start and end position of moved items.\n\t\t\tunwrapPositions.push(\n\t\t\t\tnew Position( parent, i ),\n\t\t\t\tnew Position( parent, i + count )\n\t\t\t);\n\n\t\t\t// Skip elements that were unwrapped. Assuming that there won't be another element to unwrap in child\n\t\t\t// elements.\n\t\t\ti += count;\n\t\t\tendOffset += count - 1;\n\t\t} else {\n\t\t\t// If other nested attribute is found start unwrapping there.\n\t\t\tif ( child.is( 'attributeElement' ) ) {\n\t\t\t\tunwrapChildren( child, 0, child.childCount, attribute );\n\t\t\t}\n\n\t\t\ti++;\n\t\t}\n\t}\n\n\t// Merge at each unwrap.\n\tlet offsetChange = 0;\n\n\tfor ( const position of unwrapPositions ) {\n\t\tposition.offset -= offsetChange;\n\n\t\t// Do not merge with elements outside selected children.\n\t\tif ( position.offset == startOffset || position.offset == endOffset ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst newPosition = mergeAttributes( position );\n\n\t\t// If nodes were merged - other merge offsets will change.\n\t\tif ( !newPosition.isEqual( position ) ) {\n\t\t\toffsetChange++;\n\t\t\tendOffset--;\n\t\t}\n\t}\n\n\treturn Range.createFromParentsAndOffsets( parent, startOffset, parent, endOffset );\n}\n\n// Wraps children with provided `attribute`. Only children contained in `parent` element between\n// `startOffset` and `endOffset` will be wrapped.\n//\n// @param {module:engine/view/element~Element} parent\n// @param {Number} startOffset\n// @param {Number} endOffset\n// @param {module:engine/view/element~Element} attribute\nfunction wrapChildren( parent, startOffset, endOffset, attribute ) {\n\tlet i = startOffset;\n\tconst wrapPositions = [];\n\n\twhile ( i < endOffset ) {\n\t\tconst child = parent.getChild( i );\n\t\tconst isText = child.is( 'text' );\n\t\tconst isAttribute = child.is( 'attributeElement' );\n\t\tconst isEmpty = child.is( 'emptyElement' );\n\t\tconst isUI = child.is( 'uiElement' );\n\n\t\t// Wrap text, empty elements, ui elements or attributes with higher or equal priority.\n\t\tif ( isText || isEmpty || isUI || ( isAttribute && attribute.priority <= child.priority ) ) {\n\t\t\t// Clone attribute.\n\t\t\tconst newAttribute = attribute.clone();\n\n\t\t\t// Wrap current node with new attribute;\n\t\t\tchild.remove();\n\t\t\tnewAttribute.appendChildren( child );\n\t\t\tparent.insertChildren( i, newAttribute );\n\n\t\t\twrapPositions.push(\tnew Position( parent, i ) );\n\t\t}\n\t\t// If other nested attribute is found start wrapping there.\n\t\telse if ( isAttribute ) {\n\t\t\twrapChildren( child, 0, child.childCount, attribute );\n\t\t}\n\n\t\ti++;\n\t}\n\n\t// Merge at each wrap.\n\tlet offsetChange = 0;\n\n\tfor ( const position of wrapPositions ) {\n\t\tposition.offset -= offsetChange;\n\n\t\t// Do not merge with elements outside selected children.\n\t\tif ( position.offset == startOffset ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst newPosition = mergeAttributes( position );\n\n\t\t// If nodes were merged - other merge offsets will change.\n\t\tif ( !newPosition.isEqual( position ) ) {\n\t\t\toffsetChange++;\n\t\t\tendOffset--;\n\t\t}\n\t}\n\n\treturn Range.createFromParentsAndOffsets( parent, startOffset, parent, endOffset );\n}\n\n// Returns new position that is moved to near text node. Returns same position if there is no text node before of after\n// specified position.\n//\n//\t\t<p>foo[]</p>  ->  <p>foo{}</p>\n//\t\t<p>[]foo</p>  ->  <p>{}foo</p>\n//\n// @param {module:engine/view/position~Position} position\n// @returns {module:engine/view/position~Position} Position located inside text node or same position if there is no text nodes\n// before or after position location.\nfunction movePositionToTextNode( position ) {\n\tconst nodeBefore = position.nodeBefore;\n\n\tif ( nodeBefore && nodeBefore.is( 'text' ) ) {\n\t\treturn new Position( nodeBefore, nodeBefore.data.length );\n\t}\n\n\tconst nodeAfter = position.nodeAfter;\n\n\tif ( nodeAfter && nodeAfter.is( 'text' ) ) {\n\t\treturn new Position( nodeAfter, 0 );\n\t}\n\n\treturn position;\n}\n\n// Breaks text node into two text nodes when possible.\n//\n//\t\t<p>foo{}bar</p> -> <p>foo[]bar</p>\n//\t\t<p>{}foobar</p> -> <p>[]foobar</p>\n//\t\t<p>foobar{}</p> -> <p>foobar[]</p>\n//\n// @param {module:engine/view/position~Position} position Position that need to be placed inside text node.\n// @returns {module:engine/view/position~Position} New position after breaking text node.\nfunction breakTextNode( position ) {\n\tif ( position.offset == position.parent.data.length ) {\n\t\treturn new Position( position.parent.parent, position.parent.index + 1 );\n\t}\n\n\tif ( position.offset === 0 ) {\n\t\treturn new Position( position.parent.parent, position.parent.index );\n\t}\n\n\t// Get part of the text that need to be moved.\n\tconst textToMove = position.parent.data.slice( position.offset );\n\n\t// Leave rest of the text in position's parent.\n\tposition.parent.data = position.parent.data.slice( 0, position.offset );\n\n\t// Insert new text node after position's parent text node.\n\tposition.parent.parent.insertChildren( position.parent.index + 1, new Text( textToMove ) );\n\n\t// Return new position between two newly created text nodes.\n\treturn new Position( position.parent.parent, position.parent.index + 1 );\n}\n\n// Merges two text nodes into first node. Removes second node and returns merge position.\n//\n// @param {module:engine/view/text~Text} t1 First text node to merge. Data from second text node will be moved at the end of\n// this text node.\n// @param {module:engine/view/text~Text} t2 Second text node to merge. This node will be removed after merging.\n// @returns {module:engine/view/position~Position} Position after merging text nodes.\nfunction mergeTextNodes( t1, t2 ) {\n\t// Merge text data into first text node and remove second one.\n\tconst nodeBeforeLength = t1.data.length;\n\tt1.data += t2.data;\n\tt2.remove();\n\n\treturn new Position( t1, nodeBeforeLength );\n}\n\n// Wraps one {@link module:engine/view/attributeelement~AttributeElement AttributeElement} into another by merging them if possible.\n// Two AttributeElements can be merged when there is no attribute or style conflicts between them.\n// When merging is possible - all attributes, styles and classes are moved from wrapper element to element being\n// wrapped.\n//\n// @param {module:engine/view/attributeelement~AttributeElement} wrapper Wrapper AttributeElement.\n// @param {module:engine/view/attributeelement~AttributeElement} toWrap AttributeElement to wrap using wrapper element.\n// @returns {Boolean} Returns `true` if elements are merged.\nfunction wrapAttributeElement( wrapper, toWrap ) {\n\t// Can't merge if name or priority differs.\n\tif ( wrapper.name !== toWrap.name || wrapper.priority !== toWrap.priority ) {\n\t\treturn false;\n\t}\n\n\t// Check if attributes can be merged.\n\tfor ( const key of wrapper.getAttributeKeys() ) {\n\t\t// Classes and styles should be checked separately.\n\t\tif ( key === 'class' || key === 'style' ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// If some attributes are different we cannot wrap.\n\t\tif ( toWrap.hasAttribute( key ) && toWrap.getAttribute( key ) !== wrapper.getAttribute( key ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t// Check if styles can be merged.\n\tfor ( const key of wrapper.getStyleNames() ) {\n\t\tif ( toWrap.hasStyle( key ) && toWrap.getStyle( key ) !== wrapper.getStyle( key ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t// Move all attributes/classes/styles from wrapper to wrapped AttributeElement.\n\tfor ( const key of wrapper.getAttributeKeys() ) {\n\t\t// Classes and styles should be checked separately.\n\t\tif ( key === 'class' || key === 'style' ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Move only these attributes that are not present - other are similar.\n\t\tif ( !toWrap.hasAttribute( key ) ) {\n\t\t\ttoWrap.setAttribute( key, wrapper.getAttribute( key ) );\n\t\t}\n\t}\n\n\tfor ( const key of wrapper.getStyleNames() ) {\n\t\tif ( !toWrap.hasStyle( key ) ) {\n\t\t\ttoWrap.setStyle( key, wrapper.getStyle( key ) );\n\t\t}\n\t}\n\n\tfor ( const key of wrapper.getClassNames() ) {\n\t\tif ( !toWrap.hasClass( key ) ) {\n\t\t\ttoWrap.addClass( key );\n\t\t}\n\t}\n\n\treturn true;\n}\n\n// Unwraps {@link module:engine/view/attributeelement~AttributeElement AttributeElement} from another by removing corresponding attributes,\n// classes and styles. All attributes, classes and styles from wrapper should be present inside element being unwrapped.\n//\n// @param {module:engine/view/attributeelement~AttributeElement} wrapper Wrapper AttributeElement.\n// @param {module:engine/view/attributeelement~AttributeElement} toUnwrap AttributeElement to unwrap using wrapper element.\n// @returns {Boolean} Returns `true` if elements are unwrapped.\nfunction unwrapAttributeElement( wrapper, toUnwrap ) {\n\t// Can't unwrap if name or priority differs.\n\tif ( wrapper.name !== toUnwrap.name || wrapper.priority !== toUnwrap.priority ) {\n\t\treturn false;\n\t}\n\n\t// Check if AttributeElement has all wrapper attributes.\n\tfor ( const key of wrapper.getAttributeKeys() ) {\n\t\t// Classes and styles should be checked separately.\n\t\tif ( key === 'class' || key === 'style' ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// If some attributes are missing or different we cannot unwrap.\n\t\tif ( !toUnwrap.hasAttribute( key ) || toUnwrap.getAttribute( key ) !== wrapper.getAttribute( key ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t// Check if AttributeElement has all wrapper classes.\n\tif ( !toUnwrap.hasClass( ...wrapper.getClassNames() ) ) {\n\t\treturn false;\n\t}\n\n\t// Check if AttributeElement has all wrapper styles.\n\tfor ( const key of wrapper.getStyleNames() ) {\n\t\t// If some styles are missing or different we cannot unwrap.\n\t\tif ( !toUnwrap.hasStyle( key ) || toUnwrap.getStyle( key ) !== wrapper.getStyle( key ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t// Remove all wrapper's attributes from unwrapped element.\n\tfor ( const key of wrapper.getAttributeKeys() ) {\n\t\t// Classes and styles should be checked separately.\n\t\tif ( key === 'class' || key === 'style' ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\ttoUnwrap.removeAttribute( key );\n\t}\n\n\t// Remove all wrapper's classes from unwrapped element.\n\ttoUnwrap.removeClass( ...wrapper.getClassNames() );\n\n\t// Remove all wrapper's styles from unwrapped element.\n\ttoUnwrap.removeStyle( ...wrapper.getStyleNames() );\n\n\treturn true;\n}\n\n// Returns `true` if range is located in same {@link module:engine/view/attributeelement~AttributeElement AttributeElement}\n// (`start` and `end` positions are located inside same {@link module:engine/view/attributeelement~AttributeElement AttributeElement}),\n// starts on 0 offset and ends after last child node.\n//\n// @param {module:engine/view/range~Range} Range\n// @returns {Boolean}\nfunction rangeSpansOnAllChildren( range ) {\n\treturn range.start.parent == range.end.parent && range.start.parent.is( 'attributeElement' ) &&\n\t\trange.start.offset === 0 && range.end.offset === range.start.parent.childCount;\n}\n\n// Checks if provided nodes are valid to insert. Checks if each node is an instance of\n// {@link module:engine/view/text~Text Text} or {@link module:engine/view/attributeelement~AttributeElement AttributeElement},\n// {@link module:engine/view/containerelement~ContainerElement ContainerElement},\n// {@link module:engine/view/emptyelement~EmptyElement EmptyElement} or\n// {@link module:engine/view/uielement~UIElement UIElement}.\n//\n// Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-insert-invalid-node` when nodes to insert\n// contains instances that are not {@link module:engine/view/text~Text Texts},\n// {@link module:engine/view/emptyelement~EmptyElement EmptyElements},\n// {@link module:engine/view/uielement~UIElement UIElements},\n// {@link module:engine/view/attributeelement~AttributeElement AttributeElements} or\n// {@link module:engine/view/containerelement~ContainerElement ContainerElements}.\n//\n// @param Iterable.<module:engine/view/text~Text|module:engine/view/attributeelement~AttributeElement\n// |module:engine/view/containerelement~ContainerElement> nodes\nfunction validateNodesToInsert( nodes ) {\n\tfor ( const node of nodes ) {\n\t\tif ( !validNodesToInsert.some( ( validNode => node instanceof validNode ) ) ) { // eslint-disable-line no-use-before-define\n\t\t\t/**\n\t\t\t * Inserted nodes should be valid to insert. of {@link module:engine/view/attributeelement~AttributeElement AttributeElement},\n\t\t\t * {@link module:engine/view/containerelement~ContainerElement ContainerElement},\n\t\t\t * {@link module:engine/view/emptyelement~EmptyElement EmptyElement},\n\t\t\t * {@link module:engine/view/uielement~UIElement UIElement}, {@link module:engine/view/text~Text Text}.\n\t\t\t *\n\t\t\t * @error view-writer-insert-invalid-node\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-writer-insert-invalid-node' );\n\t\t}\n\n\t\tif ( !node.is( 'text' ) ) {\n\t\t\tvalidateNodesToInsert( node.getChildren() );\n\t\t}\n\t}\n}\n\nconst validNodesToInsert = [ Text, AttributeElement, ContainerElement, EmptyElement, UIElement ];\n\n// Checks if node is ContainerElement or DocumentFragment, because in most cases they should be treated the same way.\n//\n// @param {module:engine/view/node~Node} node\n// @returns {Boolean} Returns `true` if node is instance of ContainerElement or DocumentFragment.\nfunction isContainerOrFragment( node ) {\n\treturn node && ( node.is( 'containerElement' ) || node.is( 'documentFragment' ) );\n}\n\n// Checks if {@link module:engine/view/range~Range#start range start} and {@link module:engine/view/range~Range#end range end} are placed\n// inside same {@link module:engine/view/containerelement~ContainerElement container element}.\n// Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when validation fails.\n//\n// @param {module:engine/view/range~Range} range\nfunction validateRangeContainer( range ) {\n\tconst startContainer = getParentContainer( range.start );\n\tconst endContainer = getParentContainer( range.end );\n\n\tif ( !startContainer || !endContainer || startContainer !== endContainer ) {\n\t\t/**\n\t\t * Range container is invalid. This can happen if {@link module:engine/view/range~Range#start range start} and\n\t\t * {@link module:engine/view/range~Range#end range end} positions are not placed inside same container or\n\t\t * parent container for these positions cannot be found.\n\t\t *\n\t\t * @error view-writer-invalid-range-container\n\t\t */\n\t\tthrow new CKEditorError( 'view-writer-invalid-range-container' );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/view/writer.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/uid\n */\n\n/**\n * Returns a unique id. This id is a number (starting from 1) which will never get repeated on successive calls\n * to this method.\n *\n * @returns {String} A number representing the id.\n */\nexport default function uid() {\n\tlet uuid = 'e'; // Make sure that id does not start with number.\n\n\tfor ( let i = 0; i < 8; i++ ) {\n\t\tuuid += Math.floor( ( 1 + Math.random() ) * 0x10000 ).toString( 16 ).substring( 1 );\n\t}\n\n\treturn uuid;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/uid.js","import apply from './_apply';\nimport toInteger from './toInteger';\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that invokes `func` with the `this` binding of the\n * created function and arguments from `start` and beyond provided as\n * an array.\n *\n * **Note:** This method is based on the\n * [rest parameter](https://mdn.io/rest_parameters).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Function\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var say = _.rest(function(what, names) {\n *   return what + ' ' + _.initial(names).join(', ') +\n *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n * });\n *\n * say('hello', 'fred', 'barney', 'pebbles');\n * // => 'hello fred, barney, & pebbles'\n */\nfunction rest(func, start) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    switch (start) {\n      case 0: return func.call(this, array);\n      case 1: return func.call(this, args[0], array);\n      case 2: return func.call(this, args[0], args[1], array);\n    }\n    var otherArgs = Array(start + 1);\n    index = -1;\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = array;\n    return apply(func, this, otherArgs);\n  };\n}\n\nexport default rest;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/rest.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/position\n */\n\nimport TreeWalker from './treewalker';\nimport last from '@ckeditor/ckeditor5-utils/src/lib/lodash/last';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Text from './text';\n\n/**\n * Represents a position in the model tree.\n *\n * **Note:** Position is based on offsets, not indexes. This means that position in element containing two text nodes\n * with data `foo` and `bar`, position between them has offset `3`, not `1`.\n * See {@link module:engine/model/position~Position#path} for more.\n *\n * Since position in a model is represented by a {@link module:engine/model/position~Position#root position root} and\n * {@link module:engine/model/position~Position#path position path} it is possible to create positions placed in non-existing elements.\n * This requirement is important for {@link module:engine/model/operation/transform~transform operational transformation}.\n *\n * Also, {@link module:engine/model/operation/operation~Operation operations}\n * kept in {@link module:engine/model/document~Document#history document history}\n * are storing positions (and ranges) which were correct when those operations were applied, but may not be correct\n * after document got changed.\n *\n * When changes are applied to model, it may also happen that {@link module:engine/model/position~Position#parent position parent}\n * will change even if position path has not changed. Keep in mind, that if a position leads to non-existing element,\n * {@link module:engine/model/position~Position#parent} and some other properties and methods will throw errors.\n *\n * In most cases, position with wrong path is caused by an error in code, but it is sometimes needed, as described above.\n */\nexport default class Position {\n\t/**\n\t * Creates a position.\n\t *\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} root Root of the position.\n\t * @param {Array.<Number>} path Position path. See {@link module:engine/model/position~Position#path}.\n\t */\n\tconstructor( root, path ) {\n\t\tif ( !root.is( 'element' ) && !root.is( 'documentFragment' ) ) {\n\t\t\t/**\n\t\t\t * Position root invalid.\n\t\t\t *\n\t\t\t * @error position-root-invalid.\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-position-root-invalid: Position root invalid.' );\n\t\t}\n\n\t\tif ( !( path instanceof Array ) || path.length === 0 ) {\n\t\t\t/**\n\t\t\t * Position path must be an Array with at least one item.\n\t\t\t *\n\t\t\t * @error position-path-incorrect\n\t\t\t * @param path\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-position-path-incorrect: Position path must be an Array with at least one item.', { path } );\n\t\t}\n\n\t\t// Normalize the root and path (if element was passed).\n\t\tpath = root.getPath().concat( path );\n\t\troot = root.root;\n\n\t\t/**\n\t\t * Root of the position path.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment}\n\t\t * module:engine/model/position~Position#root\n\t\t */\n\t\tthis.root = root;\n\n\t\t/**\n\t\t * Position of the node it the tree. Path is described through offsets, not indexes.\n\t\t *\n\t\t * Position can be placed before, after or in a {@link module:engine/model/node~Node node} if that node has\n\t\t * {@link module:engine/model/node~Node#offsetSize} greater than `1`. Items in position path are\n\t\t * {@link module:engine/model/node~Node#startOffset starting offsets} of position ancestors, starting from direct root children,\n\t\t * down to the position offset in it's parent.\n\t\t *\n\t\t *\t\t ROOT\n\t\t *\t\t  |- P            before: [ 0 ]         after: [ 1 ]\n\t\t *\t\t  |- UL           before: [ 1 ]         after: [ 2 ]\n\t\t *\t\t     |- LI        before: [ 1, 0 ]      after: [ 1, 1 ]\n\t\t *\t\t     |  |- foo    before: [ 1, 0, 0 ]   after: [ 1, 0, 3 ]\n\t\t *\t\t     |- LI        before: [ 1, 1 ]      after: [ 1, 2 ]\n\t\t *\t\t        |- bar    before: [ 1, 1, 0 ]   after: [ 1, 1, 3 ]\n\t\t *\n\t\t * `foo` and `bar` are representing {@link module:engine/model/text~Text text nodes}. Since text nodes has offset size\n\t\t * greater than `1` you can place position offset between their start and end:\n\t\t *\n\t\t *\t\t ROOT\n\t\t *\t\t  |- P\n\t\t *\t\t  |- UL\n\t\t *\t\t     |- LI\n\t\t *\t\t     |  |- f^o|o  ^ has path: [ 1, 0, 1 ]   | has path: [ 1, 0, 2 ]\n\t\t *\t\t     |- LI\n\t\t *\t\t        |- b^a|r  ^ has path: [ 1, 1, 1 ]   | has path: [ 1, 1, 2 ]\n\t\t *\n\t\t * @member {Array.<Number>} module:engine/model/position~Position#path\n\t\t */\n\t\tthis.path = path;\n\t}\n\n\t/**\n\t * Offset at which this position is located in its {@link module:engine/model/position~Position#parent parent}. It is equal\n\t * to the last item in position {@link module:engine/model/position~Position#path path}.\n\t *\n\t * @type {Number}\n\t */\n\tget offset() {\n\t\treturn last( this.path );\n\t}\n\n\t/**\n\t * @param {Number} newOffset\n\t */\n\tset offset( newOffset ) {\n\t\tthis.path[ this.path.length - 1 ] = newOffset;\n\t}\n\n\t/**\n\t * Parent element of this position.\n\t *\n\t * Keep in mind that `parent` value is calculated when the property is accessed.\n\t * If {@link module:engine/model/position~Position#path position path}\n\t * leads to a non-existing element, `parent` property will throw error.\n\t *\n\t * Also it is a good idea to cache `parent` property if it is used frequently in an algorithm (i.e. in a long loop).\n\t *\n\t * @readonly\n\t * @type {module:engine/model/element~Element}\n\t */\n\tget parent() {\n\t\tlet parent = this.root;\n\n\t\tfor ( let i = 0; i < this.path.length - 1; i++ ) {\n\t\t\tparent = parent.getChild( parent.offsetToIndex( this.path[ i ] ) );\n\t\t}\n\n\t\treturn parent;\n\t}\n\n\t/**\n\t * Position {@link module:engine/model/position~Position#offset offset} converted to an index in position's parent node. It is\n\t * equal to the {@link module:engine/model/node~Node#index index} of a node after this position. If position is placed\n\t * in text node, position index is equal to the index of that text node.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget index() {\n\t\treturn this.parent.offsetToIndex( this.offset );\n\t}\n\n\t/**\n\t * Returns {@link module:engine/model/text~Text text node} instance in which this position is placed or `null` if this\n\t * position is not in a text node.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/text~Text|null}\n\t */\n\tget textNode() {\n\t\tconst node = this.parent.getChild( this.index );\n\n\t\treturn ( node instanceof Text && node.startOffset < this.offset ) ? node : null;\n\t}\n\n\t/**\n\t * Node directly after this position or `null` if this position is in text node.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/node~Node|null}\n\t */\n\tget nodeAfter() {\n\t\treturn this.textNode === null ? this.parent.getChild( this.index ) : null;\n\t}\n\n\t/**\n\t * Node directly before this position or `null` if this position is in text node.\n\t *\n\t * @readonly\n\t * @type {Node}\n\t */\n\tget nodeBefore() {\n\t\treturn this.textNode === null ? this.parent.getChild( this.index - 1 ) : null;\n\t}\n\n\t/**\n\t * Is `true` if position is at the beginning of its {@link module:engine/model/position~Position#parent parent}, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isAtStart() {\n\t\treturn this.offset === 0;\n\t}\n\n\t/**\n\t * Is `true` if position is at the end of its {@link module:engine/model/position~Position#parent parent}, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isAtEnd() {\n\t\treturn this.offset == this.parent.maxOffset;\n\t}\n\n\t/**\n\t * Checks whether this position is before or after given position.\n\t *\n\t * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n\t * @returns {module:engine/model/position~PositionRelation}\n\t */\n\tcompareWith( otherPosition ) {\n\t\tif ( this.root != otherPosition.root ) {\n\t\t\treturn 'different';\n\t\t}\n\n\t\tconst result = compareArrays( this.path, otherPosition.path );\n\n\t\tswitch ( result ) {\n\t\t\tcase 'same':\n\t\t\t\treturn 'same';\n\n\t\t\tcase 'prefix':\n\t\t\t\treturn 'before';\n\n\t\t\tcase 'extension':\n\t\t\t\treturn 'after';\n\n\t\t\tdefault:\n\t\t\t\tif ( this.path[ result ] < otherPosition.path[ result ] ) {\n\t\t\t\t\treturn 'before';\n\t\t\t\t} else {\n\t\t\t\t\treturn 'after';\n\t\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets the farthest position which matches the callback using\n\t * {@link module:engine/model/treewalker~TreeWalker TreeWalker}.\n\t *\n\t * For example:\n\t *\n\t * \t\tgetLastMatchingPosition( value => value.type == 'text' );\n\t * \t\t// <paragraph>[]foo</paragraph> -> <paragraph>foo[]</paragraph>\n\t *\n\t * \t\tgetLastMatchingPosition( value => value.type == 'text', { direction: 'backward' } );\n\t * \t\t// <paragraph>foo[]</paragraph> -> <paragraph>[]foo</paragraph>\n\t *\n\t * \t\tgetLastMatchingPosition( value => false );\n\t * \t\t// Do not move the position.\n\t *\n\t * @param {Function} skip Callback function. Gets {@link module:engine/model/treewalker~TreeWalkerValue} and should\n\t * return `true` if the value should be skipped or `false` if not.\n\t * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\n\t *\n\t * @returns {module:engine/model/position~Position} The position after the last item which matches the `skip` callback test.\n\t */\n\tgetLastMatchingPosition( skip, options = {} ) {\n\t\toptions.startPosition = this;\n\n\t\tconst treeWalker = new TreeWalker( options );\n\t\ttreeWalker.skip( skip );\n\n\t\treturn treeWalker.position;\n\t}\n\n\t/**\n\t * Returns a path to this position's parent. Parent path is equal to position {@link module:engine/model/position~Position#path path}\n\t * but without the last item.\n\t *\n\t * This method returns the parent path even if the parent does not exists.\n\t *\n\t * @returns {Array.<Number>} Path to the parent.\n\t */\n\tgetParentPath() {\n\t\treturn this.path.slice( 0, -1 );\n\t}\n\n\t/**\n\t * Returns ancestors array of this position, that is this position's parent and its ancestors.\n\t *\n\t * @returns {Array.<module:engine/model/item~Item>} Array with ancestors.\n\t */\n\tgetAncestors() {\n\t\tif ( this.parent.is( 'documentFragment' ) ) {\n\t\t\treturn [ this.parent ];\n\t\t} else {\n\t\t\treturn this.parent.getAncestors( { includeNode: true } );\n\t\t}\n\t}\n\n\t/**\n\t * Returns the slice of two position {@link #path paths} which is identical. The {@link #root roots}\n\t * of these two paths must be identical.\n\t *\n\t * @param {module:engine/model/position~Position} position The second position.\n\t * @returns {Array.<Number>} The common path.\n\t */\n\tgetCommonPath( position ) {\n\t\tif ( this.root != position.root ) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// We find on which tree-level start and end have the lowest common ancestor\n\t\tconst cmp = compareArrays( this.path, position.path );\n\t\t// If comparison returned string it means that arrays are same.\n\t\tconst diffAt = ( typeof cmp == 'string' ) ? Math.min( this.path.length, position.path.length ) : cmp;\n\n\t\treturn this.path.slice( 0, diffAt );\n\t}\n\n\t/**\n\t * Returns a new instance of `Position`, that has same {@link #parent parent} but it's offset\n\t * is shifted by `shift` value (can be a negative value).\n\t *\n\t * @param {Number} shift Offset shift. Can be a negative value.\n\t * @returns {module:engine/model/position~Position} Shifted position.\n\t */\n\tgetShiftedBy( shift ) {\n\t\tconst shifted = Position.createFromPosition( this );\n\n\t\tconst offset = shifted.offset + shift;\n\t\tshifted.offset = offset < 0 ? 0 : offset;\n\n\t\treturn shifted;\n\t}\n\n\t/**\n\t * Checks whether this position is after given position.\n\t *\n\t * @see module:engine/model/position~Position#isBefore\n\t *\n\t * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n\t * @returns {Boolean} True if this position is after given position.\n\t */\n\tisAfter( otherPosition ) {\n\t\treturn this.compareWith( otherPosition ) == 'after';\n\t}\n\n\t/**\n\t * Checks whether this position is before given position.\n\t *\n\t * **Note:** watch out when using negation of the value returned by this method, because the negation will also\n\t * be `true` if positions are in different roots and you might not expect this. You should probably use\n\t * `a.isAfter( b ) || a.isEqual( b )` or `!a.isBefore( p ) && a.root == b.root` in most scenarios. If your\n\t * condition uses multiple `isAfter` and `isBefore` checks, build them so they do not use negated values, i.e.:\n\t *\n\t *\t\tif ( a.isBefore( b ) && c.isAfter( d ) ) {\n\t *\t\t\t// do A.\n\t *\t\t} else {\n\t *\t\t\t// do B.\n\t *\t\t}\n\t *\n\t * or, if you have only one if-branch:\n\t *\n\t *\t\tif ( !( a.isBefore( b ) && c.isAfter( d ) ) {\n\t *\t\t\t// do B.\n\t *\t\t}\n\t *\n\t * rather than:\n\t *\n\t *\t\tif ( !a.isBefore( b ) || && !c.isAfter( d ) ) {\n\t *\t\t\t// do B.\n\t *\t\t} else {\n\t *\t\t\t// do A.\n\t *\t\t}\n\t *\n\t * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n\t * @returns {Boolean} True if this position is before given position.\n\t */\n\tisBefore( otherPosition ) {\n\t\treturn this.compareWith( otherPosition ) == 'before';\n\t}\n\n\t/**\n\t * Checks whether this position is equal to given position.\n\t *\n\t * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n\t * @returns {Boolean} True if positions are same.\n\t */\n\tisEqual( otherPosition ) {\n\t\treturn this.compareWith( otherPosition ) == 'same';\n\t}\n\n\t/**\n\t * Checks whether this position is touching given position. Positions touch when there are no text nodes\n\t * or empty nodes in a range between them. Technically, those positions are not equal but in many cases\n\t * they are very similar or even indistinguishable.\n\t *\n\t * **Note:** this method traverses model document so it can be only used when range is up-to-date with model document.\n\t *\n\t * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n\t * @returns {Boolean} True if positions touch.\n\t */\n\tisTouching( otherPosition ) {\n\t\tlet left = null;\n\t\tlet right = null;\n\t\tconst compare = this.compareWith( otherPosition );\n\n\t\tswitch ( compare ) {\n\t\t\tcase 'same':\n\t\t\t\treturn true;\n\n\t\t\tcase 'before':\n\t\t\t\tleft = Position.createFromPosition( this );\n\t\t\t\tright = Position.createFromPosition( otherPosition );\n\t\t\t\tbreak;\n\n\t\t\tcase 'after':\n\t\t\t\tleft = Position.createFromPosition( otherPosition );\n\t\t\t\tright = Position.createFromPosition( this );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\n\t\t// Cached for optimization purposes.\n\t\tlet leftParent = left.parent;\n\n\t\twhile ( left.path.length + right.path.length ) {\n\t\t\tif ( left.isEqual( right ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif ( left.path.length > right.path.length ) {\n\t\t\t\tif ( left.offset !== leftParent.maxOffset ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tleft.path = left.path.slice( 0, -1 );\n\t\t\t\tleftParent = leftParent.parent;\n\t\t\t\tleft.offset++;\n\t\t\t} else {\n\t\t\t\tif ( right.offset !== 0 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tright.path = right.path.slice( 0, -1 );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns a copy of this position that is updated by removing `howMany` nodes starting from `deletePosition`.\n\t * It may happen that this position is in a removed node. If that is the case, `null` is returned instead.\n\t *\n\t * @protected\n\t * @param {module:engine/model/position~Position} deletePosition Position before the first removed node.\n\t * @param {Number} howMany How many nodes are removed.\n\t * @returns {module:engine/model/position~Position|null} Transformed position or `null`.\n\t */\n\t_getTransformedByDeletion( deletePosition, howMany ) {\n\t\tconst transformed = Position.createFromPosition( this );\n\n\t\t// This position can't be affected if deletion was in a different root.\n\t\tif ( this.root != deletePosition.root ) {\n\t\t\treturn transformed;\n\t\t}\n\n\t\tif ( compareArrays( deletePosition.getParentPath(), this.getParentPath() ) == 'same' ) {\n\t\t\t// If nodes are removed from the node that is pointed by this position...\n\t\t\tif ( deletePosition.offset < this.offset ) {\n\t\t\t\t// And are removed from before an offset of that position...\n\t\t\t\tif ( deletePosition.offset + howMany > this.offset ) {\n\t\t\t\t\t// Position is in removed range, it's no longer in the tree.\n\t\t\t\t\treturn null;\n\t\t\t\t} else {\n\t\t\t\t\t// Decrement the offset accordingly.\n\t\t\t\t\ttransformed.offset -= howMany;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if ( compareArrays( deletePosition.getParentPath(), this.getParentPath() ) == 'prefix' ) {\n\t\t\t// If nodes are removed from a node that is on a path to this position...\n\t\t\tconst i = deletePosition.path.length - 1;\n\n\t\t\tif ( deletePosition.offset <= this.path[ i ] ) {\n\t\t\t\t// And are removed from before next node of that path...\n\t\t\t\tif ( deletePosition.offset + howMany > this.path[ i ] ) {\n\t\t\t\t\t// If the next node of that path is removed return null\n\t\t\t\t\t// because the node containing this position got removed.\n\t\t\t\t\treturn null;\n\t\t\t\t} else {\n\t\t\t\t\t// Otherwise, decrement index on that path.\n\t\t\t\t\ttransformed.path[ i ] -= howMany;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn transformed;\n\t}\n\n\t/**\n\t * Returns a copy of this position that is updated by inserting `howMany` nodes at `insertPosition`.\n\t *\n\t * @protected\n\t * @param {module:engine/model/position~Position} insertPosition Position where nodes are inserted.\n\t * @param {Number} howMany How many nodes are inserted.\n\t * @param {Boolean} insertBefore Flag indicating whether nodes are inserted before or after `insertPosition`.\n\t * This is important only when `insertPosition` and this position are same. If that is the case and the flag is\n\t * set to `true`, this position will get transformed. If the flag is set to `false`, it won't.\n\t * @returns {module:engine/model/position~Position} Transformed position.\n\t */\n\t_getTransformedByInsertion( insertPosition, howMany, insertBefore ) {\n\t\tconst transformed = Position.createFromPosition( this );\n\n\t\t// This position can't be affected if insertion was in a different root.\n\t\tif ( this.root != insertPosition.root ) {\n\t\t\treturn transformed;\n\t\t}\n\n\t\tif ( compareArrays( insertPosition.getParentPath(), this.getParentPath() ) == 'same' ) {\n\t\t\t// If nodes are inserted in the node that is pointed by this position...\n\t\t\tif ( insertPosition.offset < this.offset || ( insertPosition.offset == this.offset && insertBefore ) ) {\n\t\t\t\t// And are inserted before an offset of that position...\n\t\t\t\t// \"Push\" this positions offset.\n\t\t\t\ttransformed.offset += howMany;\n\t\t\t}\n\t\t} else if ( compareArrays( insertPosition.getParentPath(), this.getParentPath() ) == 'prefix' ) {\n\t\t\t// If nodes are inserted in a node that is on a path to this position...\n\t\t\tconst i = insertPosition.path.length - 1;\n\n\t\t\tif ( insertPosition.offset <= this.path[ i ] ) {\n\t\t\t\t// And are inserted before next node of that path...\n\t\t\t\t// \"Push\" the index on that path.\n\t\t\t\ttransformed.path[ i ] += howMany;\n\t\t\t}\n\t\t}\n\n\t\treturn transformed;\n\t}\n\n\t/**\n\t * Returns a copy of this position that is updated by moving `howMany` nodes from `sourcePosition` to `targetPosition`.\n\t *\n\t * @protected\n\t * @param {module:engine/model/position~Position} sourcePosition Position before the first element to move.\n\t * @param {module:engine/model/position~Position} targetPosition Position where moved elements will be inserted.\n\t * @param {Number} howMany How many consecutive nodes to move, starting from `sourcePosition`.\n\t * @param {Boolean} insertBefore Flag indicating whether moved nodes are pasted before or after `insertPosition`.\n\t * This is important only when `targetPosition` and this position are same. If that is the case and the flag is\n\t * set to `true`, this position will get transformed by range insertion. If the flag is set to `false`, it won't.\n\t * @param {Boolean} [sticky] Flag indicating whether this position \"sticks\" to range, that is if it should be moved\n\t * with the moved range if it is equal to one of range's boundaries.\n\t * @returns {module:engine/model/position~Position} Transformed position.\n\t */\n\t_getTransformedByMove( sourcePosition, targetPosition, howMany, insertBefore, sticky ) {\n\t\t// Moving a range removes nodes from their original position. We acknowledge this by proper transformation.\n\t\tlet transformed = this._getTransformedByDeletion( sourcePosition, howMany );\n\n\t\t// Then we update target position, as it could be affected by nodes removal too.\n\t\ttargetPosition = targetPosition._getTransformedByDeletion( sourcePosition, howMany );\n\n\t\tif ( transformed === null || ( sticky && transformed.isEqual( sourcePosition ) ) ) {\n\t\t\t// This position is inside moved range (or sticks to it).\n\t\t\t// In this case, we calculate a combination of this position, move source position and target position.\n\t\t\ttransformed = this._getCombined( sourcePosition, targetPosition );\n\t\t} else {\n\t\t\t// This position is not inside a removed range.\n\t\t\t// In next step, we simply reflect inserting `howMany` nodes, which might further affect the position.\n\t\t\ttransformed = transformed._getTransformedByInsertion( targetPosition, howMany, insertBefore );\n\t\t}\n\n\t\treturn transformed;\n\t}\n\n\t/**\n\t * Returns a new position that is a combination of this position and given positions.\n\t *\n\t * The combined position is a copy of this position transformed by moving a range starting at `source` position\n\t * to the `target` position. It is expected that this position is inside the moved range.\n\t *\n\t * Example:\n\t *\n\t *\t\tlet original = new Position( root, [ 2, 3, 1 ] );\n\t *\t\tlet source = new Position( root, [ 2, 2 ] );\n\t *\t\tlet target = new Position( otherRoot, [ 1, 1, 3 ] );\n\t *\t\toriginal._getCombined( source, target ); // path is [ 1, 1, 4, 1 ], root is `otherRoot`\n\t *\n\t * Explanation:\n\t *\n\t * We have a position `[ 2, 3, 1 ]` and move some nodes from `[ 2, 2 ]` to `[ 1, 1, 3 ]`. The original position\n\t * was inside moved nodes and now should point to the new place. The moved nodes will be after\n\t * positions `[ 1, 1, 3 ]`, `[ 1, 1, 4 ]`, `[ 1, 1, 5 ]`. Since our position was in the second moved node,\n\t * the transformed position will be in a sub-tree of a node at `[ 1, 1, 4 ]`. Looking at original path, we\n\t * took care of `[ 2, 3 ]` part of it. Now we have to add the rest of the original path to the transformed path.\n\t * Finally, the transformed position will point to `[ 1, 1, 4, 1 ]`.\n\t *\n\t * @protected\n\t * @param {module:engine/model/position~Position} source Beginning of the moved range.\n\t * @param {module:engine/model/position~Position} target Position where the range is moved.\n\t * @returns {module:engine/model/position~Position} Combined position.\n\t */\n\t_getCombined( source, target ) {\n\t\tconst i = source.path.length - 1;\n\n\t\t// The first part of a path to combined position is a path to the place where nodes were moved.\n\t\tconst combined = Position.createFromPosition( target );\n\n\t\t// Then we have to update the rest of the path.\n\n\t\t// Fix the offset because this position might be after `from` position and we have to reflect that.\n\t\tcombined.offset = combined.offset + this.path[ i ] - source.offset;\n\n\t\t// Then, add the rest of the path.\n\t\t// If this position is at the same level as `from` position nothing will get added.\n\t\tcombined.path = combined.path.concat( this.path.slice( i + 1 ) );\n\n\t\treturn combined;\n\t}\n\n\t/**\n\t * Creates position at the given location. The location can be specified as:\n\t *\n\t * * a {@link module:engine/model/position~Position position},\n\t * * parent element and offset (offset defaults to `0`),\n\t * * parent element and `'end'` (sets position at the end of that element),\n\t * * {@link module:engine/model/item~Item model item} and `'before'` or `'after'` (sets position before or after given model item).\n\t *\n\t * This method is a shortcut to other constructors such as:\n\t *\n\t * * {@link module:engine/model/position~Position.createBefore},\n\t * * {@link module:engine/model/position~Position.createAfter},\n\t * * {@link module:engine/model/position~Position.createFromParentAndOffset},\n\t * * {@link module:engine/model/position~Position.createFromPosition}.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset=0] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/model/item~Item model item}.\n\t */\n\tstatic createAt( itemOrPosition, offset ) {\n\t\tif ( itemOrPosition instanceof Position ) {\n\t\t\treturn this.createFromPosition( itemOrPosition );\n\t\t} else {\n\t\t\tconst node = itemOrPosition;\n\n\t\t\tif ( offset == 'end' ) {\n\t\t\t\toffset = node.maxOffset;\n\t\t\t} else if ( offset == 'before' ) {\n\t\t\t\treturn this.createBefore( node );\n\t\t\t} else if ( offset == 'after' ) {\n\t\t\t\treturn this.createAfter( node );\n\t\t\t} else if ( !offset ) {\n\t\t\t\toffset = 0;\n\t\t\t}\n\n\t\t\treturn this.createFromParentAndOffset( node, offset );\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new position, after given {@link module:engine/model/item~Item model item}.\n\t *\n\t * @param {module:engine/model/item~Item} item Item after which the position should be placed.\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tstatic createAfter( item ) {\n\t\tif ( !item.parent ) {\n\t\t\t/**\n\t\t\t * You can not make position after root.\n\t\t\t *\n\t\t\t * @error position-after-root\n\t\t\t * @param {module:engine/model/item~Item} root\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-position-after-root: You can not make position after root.', { root: item } );\n\t\t}\n\n\t\treturn this.createFromParentAndOffset( item.parent, item.endOffset );\n\t}\n\n\t/**\n\t * Creates a new position, before the given {@link module:engine/model/item~Item model item}.\n\t *\n\t * @param {module:engine/model/item~Item} item Item before which the position should be placed.\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tstatic createBefore( item ) {\n\t\tif ( !item.parent ) {\n\t\t\t/**\n\t\t\t * You can not make position before root.\n\t\t\t *\n\t\t\t * @error position-before-root\n\t\t\t * @param {module:engine/model/item~Item} root\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-position-before-root: You can not make position before root.', { root: item } );\n\t\t}\n\n\t\treturn this.createFromParentAndOffset( item.parent, item.startOffset );\n\t}\n\n\t/**\n\t * Creates a new position from the parent element and an offset in that element.\n\t *\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} parent Position's parent.\n\t * @param {Number} offset Position's offset.\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tstatic createFromParentAndOffset( parent, offset ) {\n\t\tif ( !parent.is( 'element' ) && !parent.is( 'documentFragment' ) ) {\n\t\t\t/**\n\t\t\t * Position parent have to be a model element or model document fragment.\n\t\t\t *\n\t\t\t * @error position-parent-incorrect\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-position-parent-incorrect: Position parent have to be a element or document fragment.' );\n\t\t}\n\n\t\tconst path = parent.getPath();\n\n\t\tpath.push( offset );\n\n\t\treturn new this( parent.root, path );\n\t}\n\n\t/**\n\t * Creates a new position, which is equal to passed position.\n\t *\n\t * @param {module:engine/model/position~Position} position Position to be cloned.\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tstatic createFromPosition( position ) {\n\t\treturn new this( position.root, position.path.slice() );\n\t}\n\n\t/**\n\t * Creates a `Position` instance from given plain object (i.e. parsed JSON string).\n\t *\n\t * @param {Object} json Plain object to be converted to `Position`.\n\t * @returns {module:engine/model/position~Position} `Position` instance created using given plain object.\n\t */\n\tstatic fromJSON( json, doc ) {\n\t\tif ( json.root === '$graveyard' ) {\n\t\t\treturn new Position( doc.graveyard, json.path );\n\t\t}\n\n\t\tif ( !doc.hasRoot( json.root ) ) {\n\t\t\t/**\n\t\t\t * Cannot create position for document. Root with specified name does not exist.\n\t\t\t *\n\t\t\t * @error position-fromjson-no-root\n\t\t\t * @param {String} rootName\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-position-fromjson-no-root: Cannot create position for document. Root with specified name does not exist.',\n\t\t\t\t{ rootName: json.root }\n\t\t\t);\n\t\t}\n\n\t\treturn new Position( doc.getRoot( json.root ), json.path );\n\t}\n}\n\n/**\n * A flag indicating whether this position is `'before'` or `'after'` or `'same'` as given position.\n * If positions are in different roots `'different'` flag is returned.\n *\n * @typedef {String} module:engine/model/position~PositionRelation\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/position.js","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 542);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ecb096a2104482aaa84d","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/ckeditorerror\n */\n\n/**\n * The CKEditor error class.\n *\n * All errors will be shortened during the minification process in order to reduce the code size.\n * Therefore, all error messages should be documented in the same way as those in {@link module:utils/log}.\n *\n * Read more in the {@link module:utils/log} module.\n *\n * @extends Error\n */\nexport default class CKEditorError extends Error {\n\t/**\n\t * Creates an instance of the CKEditorError class.\n\t *\n\t * Read more about error logging in the {@link module:utils/log} module.\n\t *\n\t * @param {String} message The error message in an `error-name: Error message.` format.\n\t * During the minification process the \"Error message\" part will be removed to limit the code size\n\t * and a link to this error documentation will be added to the `message`.\n\t * @param {Object} [data] Additional data describing the error. A stringified version of this object\n\t * will be appended to the error message, so the data are quickly visible in the console. The original\n\t * data object will also be later available under the {@link #data} property.\n\t */\n\tconstructor( message, data ) {\n\t\tif ( data ) {\n\t\t\tmessage += ' ' + JSON.stringify( data );\n\t\t}\n\n\t\tsuper( message );\n\n\t\t/**\n\t\t * @member {String}\n\t\t */\n\t\tthis.name = 'CKEditorError';\n\n\t\t/**\n\t\t * The additional error data passed to the constructor.\n\t\t *\n\t\t * @member {Object}\n\t\t */\n\t\tthis.data = data;\n\t}\n\n\t/**\n\t * Checks if error is an instance of CKEditorError class.\n\t *\n\t * @param {Object} error Object to check.\n\t * @returns {Boolean}\n\t */\n\tstatic isCKEditorError( error ) {\n\t\treturn error instanceof CKEditorError;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/ckeditorerror.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module core/plugin\n */\n\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * The base class for CKEditor plugin classes.\n *\n * @implements module:core/plugin~PluginInterface\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\t/**\n\t\t * The editor instance.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/editor/editor~Editor} #editor\n\t\t */\n\t\tthis.editor = editor;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t}\n}\n\nmix( Plugin, ObservableMixin );\n\n/**\n * The base interface for CKEditor plugins.\n *\n * In its minimal form it can be a simple function (it will be used as a constructor) which accepts\n * {@link module:core/editor/editor~Editor the editor} as a parm.\n * It can also implement a few methods which, when present, will be used to properly initialize and destroy the plugin.\n *\n *\t\t// A simple plugin which enables a data processor.\n *\t\tfunction MyPlugin( editor ) {\n *\t\t\teditor.data.processor = new MyDataProcessor();\n *\t\t}\n *\n * In most cases, however, you'll want to inherit from the {@link module:core/plugin~Plugin} class which implements the\n * {@link module:utils/observablemixin~ObservableMixin} and is, therefore, more convenient:\n *\n *\t\tclass MyPlugin extends Plugin {\n *\t\t\tinit() {\n *\t\t\t\t// `listenTo()` and `editor` are available thanks to `Plugin`.\n *\t\t\t\t// By using `listenTo()` you'll ensure that the listener will be removed when\n *\t\t\t\t// the plugin is destroyed.\n *\t\t\t\tthis.listenTo( this.editor, 'dataReady', () => {\n *\t\t\t\t\t// Do something when data is ready.\n *\t\t\t\t} );\n *\t\t\t}\n *\t\t}\n *\n * @interface PluginInterface\n */\n\n/**\n * Creates a new plugin instance. This is the first step of a plugin initialization.\n * See also {@link #init} and {@link #afterInit}.\n *\n * A plugin is always instantiated after its {@link module:core/plugin~PluginInterface.requires dependencies} and the\n * {@link #init} and {@link #afterInit} methods are called in the same order.\n *\n * Usually, you'll want to put your plugin's initialization code in the {@link #init} method.\n * The constructor can be understood as \"before init\" and used in special cases, just like\n * {@link #afterInit} servers for the special \"after init\" scenarios (e.g. code which depends on other\n * plugins, but which doesn't {@link module:core/plugin~PluginInterface.requires explicitly require} them).\n *\n * @method #constructor\n * @param {module:core/editor/editor~Editor} editor\n */\n\n/**\n * An array of plugins required by this plugin.\n *\n * To keep a plugin class definition tight it's recommended to define this property as a static getter:\n *\n *\t\timport Image from './image.js';\n *\n *\t\texport default class ImageCaption {\n *\t\t\tstatic get requires() {\n *\t\t\t\treturn [ Image ];\n *\t\t\t}\n *      }\n *\n * @static\n * @readonly\n * @member {Array.<Function>|undefined} module:core/plugin~PluginInterface.requires\n */\n\n/**\n * Optional name of the plugin. If set, the plugin will be available in\n * {@link module:core/plugincollection~PluginCollection#get} by its\n * name and its constructor. If not, then only by its constructor.\n *\n * The name should reflect the package name + the plugin module name. E.g. `ckeditor5-image/src/image.js` plugin\n * should be named `image/image`. If plugin is kept deeper in the directory structure, it's recommended to only use the module file name,\n * not the whole path. So, e.g. a plugin defined in `ckeditor5-ui/src/notification/notification.js` file may be named `ui/notification`.\n *\n * To keep a plugin class definition tight it's recommended to define this property as a static getter:\n *\n *\t\texport default class ImageCaption {\n *\t\t\tstatic get pluginName() {\n *\t\t\t\treturn 'image/imagecaption';\n *\t\t\t}\n *\t\t}\n *\n * @static\n * @readonly\n * @member {String|undefined} module:core/plugin~PluginInterface.pluginName\n */\n\n/**\n * The second stage (after plugin {@link #constructor}) of plugin initialization.\n * Unlike the plugin constructor this method can be asynchronous.\n *\n * A plugin's `init()` method is called after its {@link module:core/plugin~PluginInterface.requires dependencies} are initialized,\n * so in the same order as constructors of these plugins.\n *\n * **Note:** This method is optional. A plugin instance does not need to have to have it defined.\n *\n * @method #init\n * @returns {null|Promise}\n */\n\n/**\n * The third (and last) stage of plugin initialization. See also {@link #constructor} and {@link #init}.\n *\n * **Note:** This method is optional. A plugin instance does not need to have to have it defined.\n *\n * @method #afterInit\n * @returns {null|Promise}\n */\n\n/**\n * Destroys the plugin.\n *\n * **Note:** This method is optional. A plugin instance does not need to have to have it defined.\n *\n * @method #destroy\n * @returns {null|Promise}\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-core/src/plugin.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/range\n */\n\nimport Position from './position';\nimport TreeWalker from './treewalker';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Range class. Range is iterable.\n */\nexport default class Range {\n\t/**\n\t * Creates a range spanning from `start` position to `end` position.\n\t *\n\t * **Note:** Constructor creates it's own {@link module:engine/model/position~Position Position} instances basing on passed values.\n\t *\n\t * @param {module:engine/model/position~Position} start Start position.\n\t * @param {module:engine/model/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\n\t */\n\tconstructor( start, end = null ) {\n\t\t/**\n\t\t * Start position.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/position~Position}\n\t\t */\n\t\tthis.start = Position.createFromPosition( start );\n\n\t\t/**\n\t\t * End position.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/position~Position}\n\t\t */\n\t\tthis.end = end ? Position.createFromPosition( end ) : Position.createFromPosition( start );\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all {@link module:engine/model/item~Item items} that are in this range and returns\n\t * them together with additional information like length or {@link module:engine/model/position~Position positions},\n\t * grouped as {@link module:engine/model/treewalker~TreeWalkerValue}.\n\t * It iterates over all {@link module:engine/model/textproxy~TextProxy text contents} that are inside the range\n\t * and all the {@link module:engine/model/element~Element}s that are entered into when iterating over this range.\n\t *\n\t * This iterator uses {@link module:engine/model/treewalker~TreeWalker} with `boundaries` set to this range\n\t * and `ignoreElementEnd` option set to `true`.\n\t *\n\t * @returns {Iterable.<module:engine/model/treewalker~TreeWalkerValue>}\n\t */\n\t* [ Symbol.iterator ]() {\n\t\tyield* new TreeWalker( { boundaries: this, ignoreElementEnd: true } );\n\t}\n\n\t/**\n\t * Returns whether the range is collapsed, that is if {@link #start start} and\n\t * {@link #end end} positions are equal.\n\t *\n\t * @type {Boolean}\n\t */\n\tget isCollapsed() {\n\t\treturn this.start.isEqual( this.end );\n\t}\n\n\t/**\n\t * Returns whether this range is flat, that is if {@link #start start} position and\n\t * {@link #end end} position are in the same {@link module:engine/model/position~Position#parent parent}.\n\t *\n\t * @type {Boolean}\n\t */\n\tget isFlat() {\n\t\treturn this.start.parent === this.end.parent;\n\t}\n\n\t/**\n\t * Range root element.\n\t *\n\t * @type {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\treturn this.start.root;\n\t}\n\n\t/**\n\t * Checks whether this range contains given {@link module:engine/model/position~Position position}.\n\t *\n\t * @param {module:engine/model/position~Position} position Position to check.\n\t * @returns {Boolean} `true` if given {@link module:engine/model/position~Position position} is contained in this range,\n\t * `false` otherwise.\n\t */\n\tcontainsPosition( position ) {\n\t\treturn position.isAfter( this.start ) && position.isBefore( this.end );\n\t}\n\n\t/**\n\t * Checks whether this range contains given {@link ~Range range}.\n\t *\n\t * @param {module:engine/model/range~Range} otherRange Range to check.\n\t * @returns {Boolean} `true` if given {@link ~Range range} boundaries are contained by this range, `false` otherwise.\n\t */\n\tcontainsRange( otherRange ) {\n\t\treturn this.containsPosition( otherRange.start ) && this.containsPosition( otherRange.end );\n\t}\n\n\t/**\n\t * Two ranges are equal if their {@link #start start} and\n\t * {@link #end end} positions are equal.\n\t *\n\t * @param {module:engine/model/range~Range} otherRange Range to compare with.\n\t * @returns {Boolean} `true` if ranges are equal, `false` otherwise.\n\t */\n\tisEqual( otherRange ) {\n\t\treturn this.start.isEqual( otherRange.start ) && this.end.isEqual( otherRange.end );\n\t}\n\n\t/**\n\t * Checks and returns whether this range intersects with given range.\n\t *\n\t * @param {module:engine/model/range~Range} otherRange Range to compare with.\n\t * @returns {Boolean} `true` if ranges intersect, `false` otherwise.\n\t */\n\tisIntersecting( otherRange ) {\n\t\treturn this.start.isBefore( otherRange.end ) && this.end.isAfter( otherRange.start );\n\t}\n\n\t/**\n\t * Computes which part(s) of this {@link ~Range range} is not a part of given {@link ~Range range}.\n\t * Returned array contains zero, one or two {@link ~Range ranges}.\n\t *\n\t * Examples:\n\t *\n\t *\t\tlet range = new Range( new Position( root, [ 2, 7 ] ), new Position( root, [ 4, 0, 1 ] ) );\n\t *\t\tlet otherRange = new Range( new Position( root, [ 1 ] ), new Position( root, [ 5 ] ) );\n\t *\t\tlet transformed = range.getDifference( otherRange );\n\t *\t\t// transformed array has no ranges because `otherRange` contains `range`\n\t *\n\t *\t\totherRange = new Range( new Position( root, [ 1 ] ), new Position( root, [ 3 ] ) );\n\t *\t\ttransformed = range.getDifference( otherRange );\n\t *\t\t// transformed array has one range: from [ 3 ] to [ 4, 0, 1 ]\n\t *\n\t *\t\totherRange = new Range( new Position( root, [ 3 ] ), new Position( root, [ 4 ] ) );\n\t *\t\ttransformed = range.getDifference( otherRange );\n\t *\t\t// transformed array has two ranges: from [ 2, 7 ] to [ 3 ] and from [ 4 ] to [ 4, 0, 1 ]\n\t *\n\t * @param {module:engine/model/range~Range} otherRange Range to differentiate against.\n\t * @returns {Array.<module:engine/model/range~Range>} The difference between ranges.\n\t */\n\tgetDifference( otherRange ) {\n\t\tconst ranges = [];\n\n\t\tif ( this.isIntersecting( otherRange ) ) {\n\t\t\t// Ranges intersect.\n\n\t\t\tif ( this.containsPosition( otherRange.start ) ) {\n\t\t\t\t// Given range start is inside this range. This means that we have to\n\t\t\t\t// add shrunken range - from the start to the middle of this range.\n\t\t\t\tranges.push( new Range( this.start, otherRange.start ) );\n\t\t\t}\n\n\t\t\tif ( this.containsPosition( otherRange.end ) ) {\n\t\t\t\t// Given range end is inside this range. This means that we have to\n\t\t\t\t// add shrunken range - from the middle of this range to the end.\n\t\t\t\tranges.push( new Range( otherRange.end, this.end ) );\n\t\t\t}\n\t\t} else {\n\t\t\t// Ranges do not intersect, return the original range.\n\t\t\tranges.push( Range.createFromRange( this ) );\n\t\t}\n\n\t\treturn ranges;\n\t}\n\n\t/**\n\t * Returns an intersection of this {@link ~Range range} and given {@link ~Range range}.\n\t * Intersection is a common part of both of those ranges. If ranges has no common part, returns `null`.\n\t *\n\t * Examples:\n\t *\n\t *\t\tlet range = new Range( new Position( root, [ 2, 7 ] ), new Position( root, [ 4, 0, 1 ] ) );\n\t *\t\tlet otherRange = new Range( new Position( root, [ 1 ] ), new Position( root, [ 2 ] ) );\n\t *\t\tlet transformed = range.getIntersection( otherRange ); // null - ranges have no common part\n\t *\n\t *\t\totherRange = new Range( new Position( root, [ 3 ] ), new Position( root, [ 5 ] ) );\n\t *\t\ttransformed = range.getIntersection( otherRange ); // range from [ 3 ] to [ 4, 0, 1 ]\n\t *\n\t * @param {module:engine/model/range~Range} otherRange Range to check for intersection.\n\t * @returns {module:engine/model/range~Range|null} A common part of given ranges or `null` if ranges have no common part.\n\t */\n\tgetIntersection( otherRange ) {\n\t\tif ( this.isIntersecting( otherRange ) ) {\n\t\t\t// Ranges intersect, so a common range will be returned.\n\t\t\t// At most, it will be same as this range.\n\t\t\tlet commonRangeStart = this.start;\n\t\t\tlet commonRangeEnd = this.end;\n\n\t\t\tif ( this.containsPosition( otherRange.start ) ) {\n\t\t\t\t// Given range start is inside this range. This means thaNt we have to\n\t\t\t\t// shrink common range to the given range start.\n\t\t\t\tcommonRangeStart = otherRange.start;\n\t\t\t}\n\n\t\t\tif ( this.containsPosition( otherRange.end ) ) {\n\t\t\t\t// Given range end is inside this range. This means that we have to\n\t\t\t\t// shrink common range to the given range end.\n\t\t\t\tcommonRangeEnd = otherRange.end;\n\t\t\t}\n\n\t\t\treturn new Range( commonRangeStart, commonRangeEnd );\n\t\t}\n\n\t\t// Ranges do not intersect, so they do not have common part.\n\t\treturn null;\n\t}\n\n\t/**\n\t * Computes and returns the smallest set of {@link #isFlat flat} ranges, that covers this range in whole.\n\t *\n\t * See an example of a model structure (`[` and `]` are range boundaries):\n\t *\n\t *\t\troot                                                            root\n\t *\t\t |- element DIV                         DIV             P2              P3             DIV\n\t *\t\t |   |- element H                   H        P1        f o o           b a r       H         P4\n\t *\t\t |   |   |- \"fir[st\"             fir[st     lorem                               se]cond     ipsum\n\t *\t\t |   |- element P1\n\t *\t\t |   |   |- \"lorem\"                                              ||\n\t *\t\t |- element P2                                                   ||\n\t *\t\t |   |- \"foo\"                                                    VV\n\t *\t\t |- element P3\n\t *\t\t |   |- \"bar\"                                                   root\n\t *\t\t |- element DIV                         DIV             [P2             P3]             DIV\n\t *\t\t |   |- element H                   H       [P1]       f o o           b a r        H         P4\n\t *\t\t |   |   |- \"se]cond\"            fir[st]    lorem                               [se]cond     ipsum\n\t *\t\t |   |- element P4\n\t *\t\t |   |   |- \"ipsum\"\n\t *\n\t * As it can be seen, letters contained in the range are: `stloremfoobarse`, spread across different parents.\n\t * We are looking for minimal set of flat ranges that contains the same nodes.\n\t *\n\t * Minimal flat ranges for above range `( [ 0, 0, 3 ], [ 3, 0, 2 ] )` will be:\n\t *\n\t *\t\t( [ 0, 0, 3 ], [ 0, 0, 5 ] ) = \"st\"\n\t *\t\t( [ 0, 1 ], [ 0, 2 ] ) = element P1 (\"lorem\")\n\t *\t\t( [ 1 ], [ 3 ] ) = element P2, element P3 (\"foobar\")\n\t *\t\t( [ 3, 0, 0 ], [ 3, 0, 2 ] ) = \"se\"\n\t *\n\t * **Note:** if an {@link module:engine/model/element~Element element} is not wholly contained in this range, it won't be returned\n\t * in any of the returned flat ranges. See in the example how `H` elements at the beginning and at the end of the range\n\t * were omitted. Only their parts that were wholly in the range were returned.\n\t *\n\t * **Note:** this method is not returning flat ranges that contain no nodes.\n\t *\n\t * @returns {Array.<module:engine/model/range~Range>} Array of flat ranges covering this range.\n\t */\n\tgetMinimalFlatRanges() {\n\t\tconst ranges = [];\n\t\tconst diffAt = this.start.getCommonPath( this.end ).length;\n\n\t\tconst pos = Position.createFromPosition( this.start );\n\t\tlet posParent = pos.parent;\n\n\t\t// Go up.\n\t\twhile ( pos.path.length > diffAt + 1 ) {\n\t\t\tconst howMany = posParent.maxOffset - pos.offset;\n\n\t\t\tif ( howMany !== 0 ) {\n\t\t\t\tranges.push( new Range( pos, pos.getShiftedBy( howMany ) ) );\n\t\t\t}\n\n\t\t\tpos.path = pos.path.slice( 0, -1 );\n\t\t\tpos.offset++;\n\t\t\tposParent = posParent.parent;\n\t\t}\n\n\t\t// Go down.\n\t\twhile ( pos.path.length <= this.end.path.length ) {\n\t\t\tconst offset = this.end.path[ pos.path.length - 1 ];\n\t\t\tconst howMany = offset - pos.offset;\n\n\t\t\tif ( howMany !== 0 ) {\n\t\t\t\tranges.push( new Range( pos, pos.getShiftedBy( howMany ) ) );\n\t\t\t}\n\n\t\t\tpos.offset = offset;\n\t\t\tpos.path.push( 0 );\n\t\t}\n\n\t\treturn ranges;\n\t}\n\n\t/**\n\t * Creates a {@link module:engine/model/treewalker~TreeWalker TreeWalker} instance with this range as a boundary.\n\t *\n\t * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\n\t * @param {module:engine/model/position~Position} [options.startPosition]\n\t * @param {Boolean} [options.singleCharacters=false]\n\t * @param {Boolean} [options.shallow=false]\n\t * @param {Boolean} [options.ignoreElementEnd=false]\n\t */\n\tgetWalker( options = {} ) {\n\t\toptions.boundaries = this;\n\n\t\treturn new TreeWalker( options );\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all {@link module:engine/model/item~Item items} that are in this range and returns\n\t * them.\n\t *\n\t * This method uses {@link module:engine/model/treewalker~TreeWalker} with `boundaries` set to this range and `ignoreElementEnd` option\n\t * set to `true`. However it returns only {@link module:engine/model/item~Item model items},\n\t * not {@link module:engine/model/treewalker~TreeWalkerValue}.\n\t *\n\t * You may specify additional options for the tree walker. See {@link module:engine/model/treewalker~TreeWalker} for\n\t * a full list of available options.\n\t *\n\t * @method getItems\n\t * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\n\t * @returns {Iterable.<module:engine/model/item~Item>}\n\t */\n\t* getItems( options = {} ) {\n\t\toptions.boundaries = this;\n\t\toptions.ignoreElementEnd = true;\n\n\t\tconst treeWalker = new TreeWalker( options );\n\n\t\tfor ( const value of treeWalker ) {\n\t\t\tyield value.item;\n\t\t}\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all {@link module:engine/model/position~Position positions} that are boundaries or\n\t * contained in this range.\n\t *\n\t * This method uses {@link module:engine/model/treewalker~TreeWalker} with `boundaries` set to this range. However it returns only\n\t * {@link module:engine/model/position~Position positions}, not {@link module:engine/model/treewalker~TreeWalkerValue}.\n\t *\n\t * You may specify additional options for the tree walker. See {@link module:engine/model/treewalker~TreeWalker} for\n\t * a full list of available options.\n\t *\n\t * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\n\t * @returns {Iterable.<module:engine/model/position~Position>}\n\t */\n\t* getPositions( options = {} ) {\n\t\toptions.boundaries = this;\n\n\t\tconst treeWalker = new TreeWalker( options );\n\n\t\tyield treeWalker.position;\n\n\t\tfor ( const value of treeWalker ) {\n\t\t\tyield value.nextPosition;\n\t\t}\n\t}\n\n\t/**\n\t * Returns a range that is a result of transforming this range by given `delta`.\n\t *\n\t * **Note:** transformation may break one range into multiple ranges (e.g. when a part of the range is\n\t * moved to a different part of document tree). For this reason, an array is returned by this method and it\n\t * may contain one or more `Range` instances.\n\t *\n\t * @param {module:engine/model/delta/delta~Delta} delta Delta to transform range by.\n\t * @returns {Array.<module:engine/model/range~Range>} Range which is the result of transformation.\n\t */\n\tgetTransformedByDelta( delta ) {\n\t\tconst ranges = [ Range.createFromRange( this ) ];\n\n\t\t// Operation types that a range can be transformed by.\n\t\tconst supportedTypes = new Set( [ 'insert', 'move', 'remove', 'reinsert' ] );\n\n\t\tfor ( const operation of delta.operations ) {\n\t\t\tif ( supportedTypes.has( operation.type ) ) {\n\t\t\t\tfor ( let i = 0; i < ranges.length; i++ ) {\n\t\t\t\t\tconst result = ranges[ i ]._getTransformedByDocumentChange(\n\t\t\t\t\t\toperation.type,\n\t\t\t\t\t\tdelta.type,\n\t\t\t\t\t\toperation.targetPosition || operation.position,\n\t\t\t\t\t\toperation.howMany || operation.nodes.maxOffset,\n\t\t\t\t\t\toperation.sourcePosition\n\t\t\t\t\t);\n\n\t\t\t\t\tranges.splice( i, 1, ...result );\n\n\t\t\t\t\ti += result.length - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn ranges;\n\t}\n\n\t/**\n\t * Returns a range that is a result of transforming this range by multiple `deltas`.\n\t *\n\t * **Note:** transformation may break one range into multiple ranges (e.g. when a part of the range is\n\t * moved to a different part of document tree). For this reason, an array is returned by this method and it\n\t * may contain one or more `Range` instances.\n\t *\n\t * @param {Iterable.<module:engine/model/delta~Delta>} deltas Deltas to transform the range by.\n\t * @returns {Array.<module:engine/model/range~Range>} Range which is the result of transformation.\n\t */\n\tgetTransformedByDeltas( deltas ) {\n\t\tconst ranges = [ Range.createFromRange( this ) ];\n\n\t\tfor ( const delta of deltas ) {\n\t\t\tfor ( let i = 0; i < ranges.length; i++ ) {\n\t\t\t\tconst result = ranges[ i ].getTransformedByDelta( delta );\n\n\t\t\t\tranges.splice( i, 1, ...result );\n\t\t\t\ti += result.length - 1;\n\t\t\t}\n\t\t}\n\n\t\t// It may happen that a range is split into two, and then the part of second \"piece\" is moved into first\n\t\t// \"piece\". In this case we will have incorrect third rage, which should not be included in the result --\n\t\t// because it is already included in first \"piece\". In this loop we are looking for all such ranges that\n\t\t// are inside other ranges and we simply remove them.\n\t\tfor ( let i = 0; i < ranges.length; i++ ) {\n\t\t\tconst range = ranges[ i ];\n\n\t\t\tfor ( let j = i + 1; j < ranges.length; j++ ) {\n\t\t\t\tconst next = ranges[ j ];\n\n\t\t\t\tif ( range.containsRange( next ) || next.containsRange( range ) || range.isEqual( next ) ) {\n\t\t\t\t\tranges.splice( j, 1 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn ranges;\n\t}\n\n\t/**\n\t * Returns a range that is a result of transforming this range by a change in the model document.\n\t *\n\t * @protected\n\t * @param {'insert'|'move'|'remove'|'reinsert'} type Change type.\n\t * @param {String} deltaType Type of delta that introduced the change.\n\t * @param {module:engine/model/position~Position} targetPosition Position before the first changed node.\n\t * @param {Number} howMany How many nodes has been changed.\n\t * @param {module:engine/model/position~Position} sourcePosition Source position of changes.\n\t * @returns {Array.<module:engine/model/range~Range>}\n\t */\n\t_getTransformedByDocumentChange( type, deltaType, targetPosition, howMany, sourcePosition ) {\n\t\tif ( type == 'insert' ) {\n\t\t\treturn this._getTransformedByInsertion( targetPosition, howMany, false, false );\n\t\t} else {\n\t\t\tconst sourceRange = Range.createFromPositionAndShift( sourcePosition, howMany );\n\n\t\t\tif (\n\t\t\t\tdeltaType == 'merge' &&\n\t\t\t\tthis.isCollapsed &&\n\t\t\t\t( this.start.isEqual( sourceRange.start ) || this.start.isEqual( sourceRange.end ) )\n\t\t\t) {\n\t\t\t\t// Collapsed range is in merged element.\n\t\t\t\t// Without fix, the range would end up in the graveyard, together with removed element.\n\t\t\t\t// <p>foo</p><p>[]bar</p> -> <p>foobar</p><p>[]</p> -> <p>foobar</p> -> <p>foo[]bar</p>\n\t\t\t\treturn [ new Range( targetPosition.getShiftedBy( this.start.offset ) ) ];\n\t\t\t} else if ( type == 'move' ) {\n\t\t\t\t// In all examples `[]` is `this` and `{}` is `sourceRange`, while `^` is move target position.\n\t\t\t\t//\n\t\t\t\t// Example:\n\t\t\t\t// <p>xx</p>^<w>{<p>a[b</p>}</w><p>c]d</p>   -->   <p>xx</p><p>a[b</p><w></w><p>c]d</p>\n\t\t\t\t// ^<p>xx</p><w>{<p>a[b</p>}</w><p>c]d</p>   -->   <p>a[b</p><p>xx</p><w></w><p>c]d</p>  // Note <p>xx</p> inclusion.\n\t\t\t\t// <w>{<p>a[b</p>}</w>^<p>c]d</p>            -->   <w></w><p>a[b</p><p>c]d</p>\n\t\t\t\tif (\n\t\t\t\t\tsourceRange.containsPosition( this.start ) &&\n\t\t\t\t\tthis.containsPosition( sourceRange.end ) &&\n\t\t\t\t\tthis.end.isAfter( targetPosition )\n\t\t\t\t) {\n\t\t\t\t\tconst start = this.start._getCombined(\n\t\t\t\t\t\tsourcePosition,\n\t\t\t\t\t\ttargetPosition._getTransformedByDeletion( sourcePosition, howMany )\n\t\t\t\t\t);\n\t\t\t\t\tconst end = this.end._getTransformedByMove( sourcePosition, targetPosition, howMany, false, false );\n\n\t\t\t\t\treturn [ new Range( start, end ) ];\n\t\t\t\t}\n\n\t\t\t\t// Example:\n\t\t\t\t// <p>c[d</p><w>{<p>a]b</p>}</w>^<p>xx</p>   -->   <p>c[d</p><w></w><p>a]b</p><p>xx</p>\n\t\t\t\t// <p>c[d</p><w>{<p>a]b</p>}</w><p>xx</p>^   -->   <p>c[d</p><w></w><p>xx</p><p>a]b</p>  // Note <p>xx</p> inclusion.\n\t\t\t\t// <p>c[d</p>^<w>{<p>a]b</p>}</w>            -->   <p>c[d</p><p>a]b</p><w></w>\n\t\t\t\tif (\n\t\t\t\t\tsourceRange.containsPosition( this.end ) &&\n\t\t\t\t\tthis.containsPosition( sourceRange.start ) &&\n\t\t\t\t\tthis.start.isBefore( targetPosition )\n\t\t\t\t) {\n\t\t\t\t\tconst start = this.start._getTransformedByMove(\n\t\t\t\t\t\tsourcePosition,\n\t\t\t\t\t\ttargetPosition,\n\t\t\t\t\t\thowMany,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tfalse\n\t\t\t\t\t);\n\t\t\t\t\tconst end = this.end._getCombined(\n\t\t\t\t\t\tsourcePosition,\n\t\t\t\t\t\ttargetPosition._getTransformedByDeletion( sourcePosition, howMany )\n\t\t\t\t\t);\n\n\t\t\t\t\treturn [ new Range( start, end ) ];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this._getTransformedByMove( sourcePosition, targetPosition, howMany );\n\t\t}\n\t}\n\n\t/**\n\t * Returns an array containing one or two {@link ~Range ranges} that are a result of transforming this\n\t * {@link ~Range range} by inserting `howMany` nodes at `insertPosition`. Two {@link ~Range ranges} are\n\t * returned if the insertion was inside this {@link ~Range range} and `spread` is set to `true`.\n\t *\n\t * Examples:\n\t *\n\t *\t\tlet range = new Range( new Position( root, [ 2, 7 ] ), new Position( root, [ 4, 0, 1 ] ) );\n\t *\t\tlet transformed = range._getTransformedByInsertion( new Position( root, [ 1 ] ), 2 );\n\t *\t\t// transformed array has one range from [ 4, 7 ] to [ 6, 0, 1 ]\n\t *\n\t *\t\ttransformed = range._getTransformedByInsertion( new Position( root, [ 4, 0, 0 ] ), 4 );\n\t *\t\t// transformed array has one range from [ 2, 7 ] to [ 4, 0, 5 ]\n\t *\n\t *\t\ttransformed = range._getTransformedByInsertion( new Position( root, [ 3, 2 ] ), 4 );\n\t *\t\t// transformed array has one range, which is equal to original range\n\t *\n\t *\t\ttransformed = range._getTransformedByInsertion( new Position( root, [ 3, 2 ] ), 4, true );\n\t *\t\t// transformed array has two ranges: from [ 2, 7 ] to [ 3, 2 ] and from [ 3, 6 ] to [ 4, 0, 1 ]\n\t *\n\t *\t\ttransformed = range._getTransformedByInsertion( new Position( root, [ 4, 0, 1 ] ), 4, false, false );\n\t *\t\t// transformed array has one range which is equal to original range because insertion is after the range boundary\n\t *\n\t *\t\ttransformed = range._getTransformedByInsertion( new Position( root, [ 4, 0, 1 ] ), 4, false, true );\n\t *\t\t// transformed array has one range: from [ 2, 7 ] to [ 4, 0, 5 ] because range was expanded\n\t *\n\t * @protected\n\t * @param {module:engine/model/position~Position} insertPosition Position where nodes are inserted.\n\t * @param {Number} howMany How many nodes are inserted.\n\t * @param {Boolean} [spread] Flag indicating whether this {~Range range} should be spread if insertion\n\t * was inside the range. Defaults to `false`.\n\t * @param {Boolean} [isSticky] Flag indicating whether insertion should expand a range if it is in a place of\n\t * range boundary. Defaults to `false`.\n\t * @returns {Array.<module:engine/model/range~Range>} Result of the transformation.\n\t */\n\t_getTransformedByInsertion( insertPosition, howMany, spread = false, isSticky = false ) {\n\t\tif ( spread && this.containsPosition( insertPosition ) ) {\n\t\t\t// Range has to be spread. The first part is from original start to the spread point.\n\t\t\t// The other part is from spread point to the original end, but transformed by\n\t\t\t// insertion to reflect insertion changes.\n\n\t\t\treturn [\n\t\t\t\tnew Range( this.start, insertPosition ),\n\t\t\t\tnew Range(\n\t\t\t\t\tinsertPosition._getTransformedByInsertion( insertPosition, howMany, true ),\n\t\t\t\t\tthis.end._getTransformedByInsertion( insertPosition, howMany, this.isCollapsed )\n\t\t\t\t)\n\t\t\t];\n\t\t} else {\n\t\t\tconst range = Range.createFromRange( this );\n\n\t\t\tconst insertBeforeStart = range.isCollapsed ? true : !isSticky;\n\t\t\tconst insertBeforeEnd = range.isCollapsed ? true : isSticky;\n\n\t\t\trange.start = range.start._getTransformedByInsertion( insertPosition, howMany, insertBeforeStart );\n\t\t\trange.end = range.end._getTransformedByInsertion( insertPosition, howMany, insertBeforeEnd );\n\n\t\t\treturn [ range ];\n\t\t}\n\t}\n\n\t/**\n\t * Returns an array containing {@link ~Range ranges} that are a result of transforming this\n\t * {@link ~Range range} by moving `howMany` nodes from `sourcePosition` to `targetPosition`.\n\t *\n\t * @protected\n\t * @param {module:engine/model/position~Position} sourcePosition Position from which nodes are moved.\n\t * @param {module:engine/model/position~Position} targetPosition Position to where nodes are moved.\n\t * @param {Number} howMany How many nodes are moved.\n\t * @returns {Array.<module:engine/model/range~Range>} Result of the transformation.\n\t */\n\t_getTransformedByMove( sourcePosition, targetPosition, howMany ) {\n\t\tif ( this.isCollapsed ) {\n\t\t\tconst newPos = this.start._getTransformedByMove( sourcePosition, targetPosition, howMany, true, false );\n\n\t\t\treturn [ new Range( newPos ) ];\n\t\t}\n\n\t\tlet result;\n\n\t\tconst moveRange = new Range( sourcePosition, sourcePosition.getShiftedBy( howMany ) );\n\n\t\tconst differenceSet = this.getDifference( moveRange );\n\t\tlet difference = null;\n\n\t\tconst common = this.getIntersection( moveRange );\n\n\t\tif ( differenceSet.length == 1 ) {\n\t\t\t// `moveRange` and this range may intersect.\n\t\t\tdifference = new Range(\n\t\t\t\tdifferenceSet[ 0 ].start._getTransformedByDeletion( sourcePosition, howMany ),\n\t\t\t\tdifferenceSet[ 0 ].end._getTransformedByDeletion( sourcePosition, howMany )\n\t\t\t);\n\t\t} else if ( differenceSet.length == 2 ) {\n\t\t\t// `moveRange` is inside this range.\n\t\t\tdifference = new Range(\n\t\t\t\tthis.start,\n\t\t\t\tthis.end._getTransformedByDeletion( sourcePosition, howMany )\n\t\t\t);\n\t\t} // else, `moveRange` contains this range.\n\n\t\tconst insertPosition = targetPosition._getTransformedByDeletion( sourcePosition, howMany );\n\n\t\tif ( difference ) {\n\t\t\tresult = difference._getTransformedByInsertion( insertPosition, howMany, common !== null );\n\t\t} else {\n\t\t\tresult = [];\n\t\t}\n\n\t\tif ( common ) {\n\t\t\tresult.push( new Range(\n\t\t\t\tcommon.start._getCombined( moveRange.start, insertPosition ),\n\t\t\t\tcommon.end._getCombined( moveRange.start, insertPosition )\n\t\t\t) );\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Creates a new range, spreading from specified {@link module:engine/model/position~Position position} to a position moved by\n\t * given `shift`. If `shift` is a negative value, shifted position is treated as the beginning of the range.\n\t *\n\t * @param {module:engine/model/position~Position} position Beginning of the range.\n\t * @param {Number} shift How long the range should be.\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tstatic createFromPositionAndShift( position, shift ) {\n\t\tconst start = position;\n\t\tconst end = position.getShiftedBy( shift );\n\n\t\treturn shift > 0 ? new this( start, end ) : new this( end, start );\n\t}\n\n\t/**\n\t * Creates a range from given parents and offsets.\n\t *\n\t * @param {module:engine/model/element~Element} startElement Start position parent element.\n\t * @param {Number} startOffset Start position offset.\n\t * @param {module:engine/model/element~Element} endElement End position parent element.\n\t * @param {Number} endOffset End position offset.\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tstatic createFromParentsAndOffsets( startElement, startOffset, endElement, endOffset ) {\n\t\treturn new this(\n\t\t\tPosition.createFromParentAndOffset( startElement, startOffset ),\n\t\t\tPosition.createFromParentAndOffset( endElement, endOffset )\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new instance of `Range` which is equal to passed range.\n\t *\n\t * @param {module:engine/model/range~Range} range Range to clone.\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tstatic createFromRange( range ) {\n\t\treturn new this( range.start, range.end );\n\t}\n\n\t/**\n\t * Creates a range inside an {@link module:engine/model/element~Element element} which starts before the first child of\n\t * that element and ends after the last child of that element.\n\t *\n\t * @param {module:engine/model/element~Element} element Element which is a parent for the range.\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tstatic createIn( element ) {\n\t\treturn this.createFromParentsAndOffsets( element, 0, element, element.maxOffset );\n\t}\n\n\t/**\n\t * Creates a range that starts before given {@link module:engine/model/item~Item model item} and ends after it.\n\t *\n\t * @param {module:engine/model/item~Item} item\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tstatic createOn( item ) {\n\t\treturn this.createFromPositionAndShift( Position.createBefore( item ), item.offsetSize );\n\t}\n\n\t/**\n\t * Combines all ranges from the passed array into a one range. At least one range has to be passed.\n\t * Passed ranges must not have common parts.\n\t *\n\t * The first range from the array is a reference range. If other ranges start or end on the exactly same position where\n\t * the reference range, they get combined into one range.\n\t *\n\t *\t\t[  ][]  [    ][ ][             ][ ][]  [  ]  // Passed ranges, shown sorted\n\t *\t\t[    ]                                       // The result of the function if the first range was a reference range.\n\t *\t            [                           ]        // The result of the function if the third-to-seventh range was a reference range.\n\t *\t                                           [  ]  // The result of the function if the last range was a reference range.\n\t *\n\t * @param {Array.<module:engine/model/range~Range>} ranges Ranges to combine.\n\t * @returns {module:engine/model/range~Range} Combined range.\n\t */\n\tstatic createFromRanges( ranges ) {\n\t\tif ( ranges.length === 0 ) {\n\t\t\t/**\n\t\t\t * At least one range has to be passed.\n\t\t\t *\n\t\t\t * @error range-create-from-ranges-empty-array\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'range-create-from-ranges-empty-array: At least one range has to be passed.' );\n\t\t} else if ( ranges.length == 1 ) {\n\t\t\treturn this.createFromRange( ranges[ 0 ] );\n\t\t}\n\n\t\t// 1. Set the first range in `ranges` array as a reference range.\n\t\t// If we are going to return just a one range, one of the ranges need to be the reference one.\n\t\t// Other ranges will be stuck to that range, if possible.\n\t\tconst ref = ranges[ 0 ];\n\n\t\t// 2. Sort all the ranges so it's easier to process them.\n\t\tranges.sort( ( a, b ) => {\n\t\t\treturn a.start.isAfter( b.start ) ? 1 : -1;\n\t\t} );\n\n\t\t// 3. Check at which index the reference range is now.\n\t\tconst refIndex = ranges.indexOf( ref );\n\n\t\t// 4. At this moment we don't need the original range.\n\t\t// We are going to modify the result and we need to return a new instance of Range.\n\t\t// We have to create a copy of the reference range.\n\t\tconst result = new this( ref.start, ref.end );\n\n\t\t// 5. Ranges should be checked and glued starting from the range that is closest to the reference range.\n\t\t// Since ranges are sorted, start with the range with index that is closest to reference range index.\n\t\tfor ( let i = refIndex - 1; i >= 0; i++ ) {\n\t\t\tif ( ranges[ i ].end.isEqual( result.start ) ) {\n\t\t\t\tresult.start = Position.createFromPosition( ranges[ i ].start );\n\t\t\t} else {\n\t\t\t\t// If ranges are not starting/ending at the same position there is no point in looking further.\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// 6. Ranges should be checked and glued starting from the range that is closest to the reference range.\n\t\t// Since ranges are sorted, start with the range with index that is closest to reference range index.\n\t\tfor ( let i = refIndex + 1; i < ranges.length; i++ ) {\n\t\t\tif ( ranges[ i ].start.isEqual( result.end ) ) {\n\t\t\t\tresult.end = Position.createFromPosition( ranges[ i ].end );\n\t\t\t} else {\n\t\t\t\t// If ranges are not starting/ending at the same position there is no point in looking further.\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Creates a `Range` instance from given plain object (i.e. parsed JSON string).\n\t *\n\t * @param {Object} json Plain object to be converted to `Range`.\n\t * @param {module:engine/model/document~Document} doc Document object that will be range owner.\n\t * @returns {module:engine/model/element~Element} `Range` instance created using given plain object.\n\t */\n\tstatic fromJSON( json, doc ) {\n\t\treturn new this( Position.fromJSON( json.start, doc ), Position.fromJSON( json.end, doc ) );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/range.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/mix\n */\n\n/**\n * Copies enumerable properties and symbols from the objects given as 2nd+ parameters to the\n * prototype of first object (a constructor).\n *\n *\t\tclass Editor {\n *\t\t\t...\n *\t\t}\n *\n *\t\tconst SomeMixin = {\n *\t\t\ta() {\n *\t\t\t\treturn 'a';\n *\t\t\t}\n *\t\t};\n *\n *\t\tmix( Editor, SomeMixin, ... );\n *\n *\t\tnew Editor().a(); // -> 'a'\n *\n * Note: Properties which already exist in the base class will not be overriden.\n *\n * @param {Function} [baseClass] Class which prototype will be extended.\n * @param {Object} [...mixins] Objects from which to get properties.\n */\nexport default function mix( baseClass, ...mixins ) {\n\tmixins.forEach( mixin => {\n\t\tObject.getOwnPropertyNames( mixin ).concat( Object.getOwnPropertySymbols( mixin ) )\n\t\t\t.forEach( key => {\n\t\t\t\tif ( key in baseClass.prototype ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst sourceDescriptor = Object.getOwnPropertyDescriptor( mixin, key );\n\t\t\t\tsourceDescriptor.enumerable = false;\n\n\t\t\t\tObject.defineProperty( baseClass.prototype, key, sourceDescriptor );\n\t\t\t} );\n\t} );\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/mix.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/element\n */\n\nimport Node from './node';\nimport NodeList from './nodelist';\nimport Text from './text';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\n\n/**\n * Model element. Type of {@link module:engine/model/node~Node node} that has a {@link module:engine/model/element~Element#name name} and\n * {@link module:engine/model/element~Element#getChildren child nodes}.\n *\n * **Important**: see {@link module:engine/model/node~Node} to read about restrictions using `Element` and `Node` API.\n */\nexport default class Element extends Node {\n\t/**\n\t * Creates a model element.\n\t *\n\t * @param {String} name Element's name.\n\t * @param {Object} [attrs] Element's attributes. See {@link module:utils/tomap~toMap} for a list of accepted values.\n\t * @param {module:engine/model/node~Node|Iterable.<module:engine/model/node~Node>} [children]\n\t * One or more nodes to be inserted as children of created element.\n\t */\n\tconstructor( name, attrs, children ) {\n\t\tsuper( attrs );\n\n\t\t/**\n\t\t * Element name.\n\t\t *\n\t\t * @member {String} module:engine/model/element~Element#name\n\t\t */\n\t\tthis.name = name;\n\n\t\t/**\n\t\t * List of children nodes.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/nodelist~NodeList} module:engine/model/element~Element#_children\n\t\t */\n\t\tthis._children = new NodeList();\n\n\t\tif ( children ) {\n\t\t\tthis.insertChildren( 0, children );\n\t\t}\n\t}\n\n\t/**\n\t * Number of this element's children.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget childCount() {\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Sum of {module:engine/model/node~Node#offsetSize offset sizes} of all of this element's children.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget maxOffset() {\n\t\treturn this._children.maxOffset;\n\t}\n\n\t/**\n\t * Is `true` if there are no nodes inside this element, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isEmpty() {\n\t\treturn this.childCount === 0;\n\t}\n\n\t/**\n\t * Checks whether given model tree object is of given type.\n\t *\n\t *\t\tobj.name; // 'listItem'\n\t *\t\tobj instanceof Element; // true\n\t *\n\t *\t\tobj.is( 'element' ); // true\n\t *\t\tobj.is( 'listItem' ); // true\n\t *\t\tobj.is( 'element', 'listItem' ); // true\n\t *\t\tobj.is( 'text' ); // false\n\t *\t\tobj.is( 'element', 'image' ); // false\n\t *\n\t * Read more in {@link module:engine/model/node~Node#is}.\n\t *\n\t * @param {String} type Type to check when `name` parameter is present.\n\t * Otherwise, it acts like the `name` parameter.\n\t * @param {String} [name] Element name.\n\t * @returns {Boolean}\n\t */\n\tis( type, name = null ) {\n\t\tif ( !name ) {\n\t\t\treturn type == 'element' || type == this.name;\n\t\t} else {\n\t\t\treturn type == 'element' && name == this.name;\n\t\t}\n\t}\n\n\t/**\n\t * Gets the child at the given index.\n\t *\n\t * @param {Number} index Index of child.\n\t * @returns {module:engine/model/node~Node} Child node.\n\t */\n\tgetChild( index ) {\n\t\treturn this._children.getNode( index );\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all of this element's children.\n\t *\n\t * @returns {Iterable.<module:engine/model/node~Node>}\n\t */\n\tgetChildren() {\n\t\treturn this._children[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Returns an index of the given child node. Returns `null` if given node is not a child of this element.\n\t *\n\t * @param {module:engine/model/node~Node} node Child node to look for.\n\t * @returns {Number} Child node's index in this element.\n\t */\n\tgetChildIndex( node ) {\n\t\treturn this._children.getNodeIndex( node );\n\t}\n\n\t/**\n\t * Returns the starting offset of given child. Starting offset is equal to the sum of\n\t * {module:engine/model/node~Node#offsetSize offset sizes} of all node's siblings that are before it. Returns `null` if\n\t * given node is not a child of this element.\n\t *\n\t * @param {module:engine/model/node~Node} node Child node to look for.\n\t * @returns {Number} Child node's starting offset.\n\t */\n\tgetChildStartOffset( node ) {\n\t\treturn this._children.getNodeStartOffset( node );\n\t}\n\n\t/**\n\t * Creates a copy of this element and returns it. Created element has the same name and attributes as the original element.\n\t * If clone is deep, the original element's children are also cloned. If not, then empty element is removed.\n\t *\n\t * @param {Boolean} [deep=false] If set to `true` clones element and all its children recursively. When set to `false`,\n\t * element will be cloned without any child.\n\t */\n\tclone( deep = false ) {\n\t\tconst children = deep ? Array.from( this._children ).map( node => node.clone( true ) ) : null;\n\n\t\treturn new Element( this.name, this.getAttributes(), children );\n\t}\n\n\t/**\n\t * Returns index of a node that occupies given offset. If given offset is too low, returns `0`. If given offset is\n\t * too high, returns {@link module:engine/model/element~Element#getChildIndex index after last child}.\n\t *\n\t *\t\tconst textNode = new Text( 'foo' );\n\t *\t\tconst pElement = new Element( 'p' );\n\t *\t\tconst divElement = new Element( [ textNode, pElement ] );\n\t *\t\tdivElement.offsetToIndex( -1 ); // Returns 0, because offset is too low.\n\t *\t\tdivElement.offsetToIndex( 0 ); // Returns 0, because offset 0 is taken by `textNode` which is at index 0.\n\t *\t\tdivElement.offsetToIndex( 1 ); // Returns 0, because `textNode` has `offsetSize` equal to 3, so it occupies offset 1 too.\n\t *\t\tdivElement.offsetToIndex( 2 ); // Returns 0.\n\t *\t\tdivElement.offsetToIndex( 3 ); // Returns 1.\n\t *\t\tdivElement.offsetToIndex( 4 ); // Returns 2. There are no nodes at offset 4, so last available index is returned.\n\t *\n\t * @param {Number} offset Offset to look for.\n\t * @returns {Number}\n\t */\n\toffsetToIndex( offset ) {\n\t\treturn this._children.offsetToIndex( offset );\n\t}\n\n\t/**\n\t * {@link module:engine/model/element~Element#insertChildren Inserts} one or more nodes at the end of this element.\n\t *\n\t * @param {module:engine/model/node~Node|Iterable.<module:engine/model/node~Node>} nodes Nodes to be inserted.\n\t */\n\tappendChildren( nodes ) {\n\t\tthis.insertChildren( this.childCount, nodes );\n\t}\n\n\t/**\n\t * Inserts one or more nodes at the given index and sets {@link module:engine/model/node~Node#parent parent} of these nodes\n\t * to this element.\n\t *\n\t * @param {Number} index Index at which nodes should be inserted.\n\t * @param {module:engine/model/node~Node|Iterable.<module:engine/model/node~Node>} nodes Nodes to be inserted.\n\t */\n\tinsertChildren( index, nodes ) {\n\t\tnodes = normalize( nodes );\n\n\t\tfor ( const node of nodes ) {\n\t\t\tnode.parent = this;\n\t\t}\n\n\t\tthis._children.insertNodes( index, nodes );\n\t}\n\n\t/**\n\t * Removes one or more nodes starting at the given index and sets\n\t * {@link module:engine/model/node~Node#parent parent} of these nodes to `null`.\n\t *\n\t * @param {Number} index Index of the first node to remove.\n\t * @param {Number} [howMany=1] Number of nodes to remove.\n\t * @returns {Array.<module:engine/model/node~Node>} Array containing removed nodes.\n\t */\n\tremoveChildren( index, howMany = 1 ) {\n\t\tconst nodes = this._children.removeNodes( index, howMany );\n\n\t\tfor ( const node of nodes ) {\n\t\t\tnode.parent = null;\n\t\t}\n\n\t\treturn nodes;\n\t}\n\n\t/**\n\t * Returns a descendant node by its path relative to this element.\n\t *\n\t *\t\t// <this>a<b>c</b></this>\n\t *\t\tthis.getNodeByPath( [ 0 ] );     // -> \"a\"\n\t *\t\tthis.getNodeByPath( [ 1 ] );     // -> <b>\n\t *\t\tthis.getNodeByPath( [ 1, 0 ] );  // -> \"c\"\n\t *\n\t * @param {Array.<Number>} relativePath Path of the node to find, relative to this element.\n\t * @returns {module:engine/model/node~Node}\n\t */\n\tgetNodeByPath( relativePath ) {\n\t\tlet node = this; // eslint-disable-line consistent-this\n\n\t\tfor ( const index of relativePath ) {\n\t\t\tnode = node.getChild( index );\n\t\t}\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * Converts `Element` instance to plain object and returns it. Takes care of converting all of this element's children.\n\t *\n\t * @returns {Object} `Element` instance converted to plain object.\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.name = this.name;\n\n\t\tif ( this._children.length > 0 ) {\n\t\t\tjson.children = [];\n\n\t\t\tfor ( const node of this._children ) {\n\t\t\t\tjson.children.push( node.toJSON() );\n\t\t\t}\n\t\t}\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * Creates an `Element` instance from given plain object (i.e. parsed JSON string).\n\t * Converts `Element` children to proper nodes.\n\t *\n\t * @param {Object} json Plain object to be converted to `Element`.\n\t * @returns {module:engine/model/element~Element} `Element` instance created using given plain object.\n\t */\n\tstatic fromJSON( json ) {\n\t\tlet children = null;\n\n\t\tif ( json.children ) {\n\t\t\tchildren = [];\n\n\t\t\tfor ( const child of json.children ) {\n\t\t\t\tif ( child.name ) {\n\t\t\t\t\t// If child has name property, it is an Element.\n\t\t\t\t\tchildren.push( Element.fromJSON( child ) );\n\t\t\t\t} else {\n\t\t\t\t\t// Otherwise, it is a Text node.\n\t\t\t\t\tchildren.push( Text.fromJSON( child ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn new Element( json.name, json.attributes, children );\n\t}\n}\n\n// Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/model/node~Node|Iterable.<String|module:engine/model/node~Node>}\n// @return {Iterable.<module:engine/model/node~Node>}\nfunction normalize( nodes ) {\n\t// Separate condition because string is iterable.\n\tif ( typeof nodes == 'string' ) {\n\t\treturn [ new Text( nodes ) ];\n\t}\n\n\tif ( !isIterable( nodes ) ) {\n\t\tnodes = [ nodes ];\n\t}\n\n\t// Array.from to enable .map() on non-arrays.\n\treturn Array.from( nodes )\n\t\t.map( node => {\n\t\t\treturn typeof node == 'string' ? new Text( node ) : node;\n\t\t} );\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/element.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/template\n */\n\n/* global document */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport View from './view';\nimport ViewCollection from './viewcollection';\nimport cloneDeepWith from '@ckeditor/ckeditor5-utils/src/lib/lodash/cloneDeepWith';\nimport isObject from '@ckeditor/ckeditor5-utils/src/lib/lodash/isObject';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\n\nconst xhtmlNs = 'http://www.w3.org/1999/xhtml';\n\n/**\n * A basic Template class. It renders DOM HTMLElement or Text from {@link module:ui/template~TemplateDefinition} and supports\n * element attributes, children, bindings to {@link module:utils/observablemixin~ObservableMixin} instances and DOM events\n * propagation. For example:\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tattributes: {\n *\t\t\t\tclass: 'foo',\n *\t\t\t\tstyle: {\n *\t\t\t\t\tbackgroundColor: 'yellow'\n *\t\t\t\t}\n *\t\t\t},\n *\t\t\tchildren: [\n *\t\t\t\t'A paragraph.'\n *\t\t\t]\n *\t\t} ).render();\n *\n * will render the following HTMLElement:\n *\n *\t\t<p class=\"foo\" style=\"background-color: yellow;\">A paragraph.</p>\n *\n * See {@link module:ui/template~TemplateDefinition} to know more about templates and complex template definitions.\n *\n* @mixes module:utils/emittermixin~EmitterMixin\n */\nexport default class Template {\n\t/**\n\t * Creates an instance of the {@link ~Template} class.\n\t *\n\t * @param {module:ui/template~TemplateDefinition} def The definition of the template.\n\t */\n\tconstructor( def ) {\n\t\tObject.assign( this, normalize( clone( def ) ) );\n\n\t\t/**\n\t\t * Indicates whether this particular Template instance has been\n\t\t * {@link #render rendered}.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis._isRendered = false;\n\n\t\t/**\n\t\t * Tag of this template, i.e. `div`, indicating that the instance will render\n\t\t * to an HTMLElement.\n\t\t *\n\t\t * @member {String} #tag\n\t\t */\n\n\t\t/**\n\t\t * Text of this template, indicating that the instance will render to a DOM Text.\n\t\t *\n\t\t * @member {Array.<String|module:ui/template~TemplateValueSchema>} #text\n\t\t */\n\n\t\t/**\n\t\t * Attributes of this template, i.e. `{ id: [ 'ck-id' ] }`, corresponding with\n\t\t * HTML attributes on HTMLElement.\n\t\t *\n\t\t * Note: Only when {@link #tag} is defined.\n\t\t *\n\t\t * @member {Object} #attributes\n\t\t */\n\n\t\t/**\n\t\t * Children of this template; sub–templates. Each one is an independent\n\t\t * instance of {@link ~Template}.\n\t\t *\n\t\t * Note: Only when {@link #tag} is defined.\n\t\t *\n\t\t * @member {module:utils/collection~Collection.<module:ui/template~Template>} #children\n\t\t */\n\n\t\t/**\n\t\t * DOM event listeners of this template.\n\t\t *\n\t\t * @member {Object} #eventListeners\n\t\t */\n\n\t\t/**\n\t\t * Data used by {@link #revert} method to restore a node\n\t\t * to its original state.\n\t\t *\n\t\t * See: {@link #apply}.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/template~RenderData}\n\t\t */\n\t\tthis._revertData = null;\n\t}\n\n\t/**\n\t * Renders a DOM Node (`HTMLElement` or `Text`) out of the template.\n\t *\n\t * @see #apply\n\t *\n\t * @returns {HTMLElement|Text}\n\t */\n\trender() {\n\t\tconst node = this._renderNode( {\n\t\t\tintoFragment: true\n\t\t} );\n\n\t\tthis._isRendered = true;\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * Applies the template to an existing DOM Node, either `HTMLElement` or `Text`.\n\t *\n\t * **Note:** No new DOM nodes (HTMLElement or Text) will be created. Applying extends attributes\n\t * ({@link module:ui/template~TemplateDefinition attributes}) and listeners ({@link module:ui/template~TemplateDefinition on}) only.\n\t *\n\t * **Note:** Existing \"class\" and \"style\" attributes are extended when a template\n\t * is applied to a Node, while other attributes and `textContent` are overridden.\n\t *\n\t * **Note:** The process of applying a template can be easily reverted using\n\t * {@link module:ui/template~Template#revert} method.\n\t *\n\t *\t\tconst element = document.createElement( 'div' );\n\t *\t\tconst bind = Template.bind( observableInstance, emitterInstance );\n\t *\n\t *\t\tnew Template( {\n\t *\t\t\tattrs: {\n\t *\t\t\t\tid: 'first-div',\n\t *\t\t\t\tclass: bind.to( 'divClass' )\n\t *\t\t\t},\n\t *\t\t\ton: {\n\t *\t\t\t\tclick: bind( 'elementClicked' ) // Will be fired by the observableInstance.\n\t *\t\t\t}\n\t *\t\t\tchildren: [\n\t *\t\t\t\t'Div text.'\n\t *\t\t\t]\n\t *\t\t} ).apply( element );\n\t *\n\t *\t\telement.outerHTML == \"<div id=\"first-div\" class=\"my-div\">Div text.</div>\"\n\t *\n\t * @see module:ui/template~Template#render\n\t * @see module:ui/template~Template#revert\n\t * @param {Node} node Root node for the template to apply.\n\t */\n\tapply( node ) {\n\t\tthis._revertData = getEmptyRevertData();\n\n\t\tthis._renderNode( {\n\t\t\tnode,\n\t\t\tisApplying: true,\n\t\t\trevertData: this._revertData\n\t\t} );\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * Reverts a template {@link module:ui/template~Template#apply applied} to a DOM Node.\n\t *\n\t * @param {Node} node Root node for the template to revert. In most cases, it's the same node\n\t * that {@link module:ui/template~Template#apply} has used.\n\t */\n\trevert( node ) {\n\t\tif ( !this._revertData ) {\n\t\t\t/**\n\t\t\t * Attempting reverting a template which has not been applied yet.\n\t\t\t *\n\t\t\t * @error ui-template-revert-not-applied\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'ui-template-revert-not-applied: Attempting reverting a template which has not been applied yet.' );\n\t\t}\n\n\t\tthis._revertTemplateFromNode( node, this._revertData );\n\t}\n\n\t/**\n\t * An entry point to the interface which allows binding DOM nodes to {@link module:utils/observablemixin~ObservableMixin}.\n\t * There are two types of bindings:\n\t *\n\t * * `HTMLElement` attributes or Text Node `textContent` can be synchronized with {@link module:utils/observablemixin~ObservableMixin}\n\t * instance attributes. See {@link module:ui/template~BindChain#to} and {@link module:ui/template~BindChain#if}.\n\t *\n\t * * DOM events fired on `HTMLElement` can be propagated through {@link module:utils/observablemixin~ObservableMixin}.\n\t * See {@link module:ui/template~BindChain#to}.\n\t *\n\t * @param {module:utils/observablemixin~ObservableMixin} observable An instance of ObservableMixin class.\n\t * @param {module:utils/emittermixin~EmitterMixin} emitter An instance of `Emitter` class. It listens\n\t * to `observable` attribute changes and DOM Events, depending on the binding. Usually {@link module:ui/view~View} instance.\n\t * @returns {module:ui/template~BindChain}\n\t */\n\tstatic bind( observable, emitter ) {\n\t\treturn {\n\t\t\tto( eventNameOrFunctionOrAttribute, callback ) {\n\t\t\t\treturn new TemplateToBinding( {\n\t\t\t\t\teventNameOrFunction: eventNameOrFunctionOrAttribute,\n\t\t\t\t\tattribute: eventNameOrFunctionOrAttribute,\n\t\t\t\t\tobservable, emitter, callback\n\t\t\t\t} );\n\t\t\t},\n\n\t\t\tif( attribute, valueIfTrue, callback ) {\n\t\t\t\treturn new TemplateIfBinding( {\n\t\t\t\t\tobservable, emitter, attribute, valueIfTrue, callback\n\t\t\t\t} );\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Extends {@link module:ui/template~Template} instance with additional content from {@link module:ui/template~TemplateDefinition}.\n\t *\n\t *\t\tconst bind = Template.bind( observable, emitterInstance );\n\t *\t\tconst instance = new Template( {\n\t *\t\t\ttag: 'p',\n\t *\t\t\tattributes: {\n\t *\t\t\t\tclass: 'a',\n\t *\t\t\t\tdata-x: bind.to( 'foo' )\n\t *\t\t\t},\n\t *\t\t\tchildren: [\n\t *\t\t\t\t{\n\t *\t\t\t\t\ttag: 'span',\n\t *\t\t\t\t\tattributes: {\n\t *\t\t\t\t\t\tclass: 'b'\n\t *\t\t\t\t\t},\n\t *\t\t\t\t\tchildren: [\n\t *\t\t\t\t\t\t'Span'\n\t *\t\t\t\t\t]\n\t *\t\t\t\t}\n\t *\t\t\t]\n\t *\t\t } );\n\t *\n\t *\t\t// Instance-level extension.\n\t *\t\tTemplate.extend( instance, {\n\t *\t\t\tattributes: {\n\t *\t\t\t\tclass: 'b',\n\t *\t\t\t\tdata-x: bind.to( 'bar' )\n\t *\t\t\t},\n\t *\t\t\tchildren: [\n\t *\t\t\t\t{\n\t *\t\t\t\t\tattributes: {\n\t *\t\t\t\t\t\tclass: 'c'\n\t *\t\t\t\t\t}\n\t *\t\t\t\t}\n\t *\t\t\t]\n\t *\t\t} );\n\t *\n\t *\t\t// Child extension.\n\t *\t\tTemplate.extend( instance.children.get( 0 ), {\n\t *\t\t\tattributes: {\n\t *\t\t\t\tclass: 'd'\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * the `instance.render().outerHTML` is\n\t *\n\t *\t\t<p class=\"a b\" data-x=\"{ observable.foo } { observable.bar }\">\n\t *\t\t\t<span class=\"b c d\">Span</span>\n\t *\t\t</p>\n\t *\n\t * @param {module:ui/template~Template} template Existing Template instance to be extended.\n\t * @param {module:ui/template~TemplateDefinition} def An extension to existing an template instance.\n\t */\n\tstatic extend( template, def ) {\n\t\tif ( template._isRendered ) {\n\t\t\t/**\n\t\t\t * Extending a template after rendering may not work as expected. To make sure\n\t\t\t * the {@link #extend extending} works for the rendered element, perform it\n\t\t\t * before {@link #render} is called.\n\t\t\t *\n\t\t\t * @error template-extend-render\n\t\t\t */\n\t\t\tlog.warn( 'template-extend-render: Attempting to extend a template which has already been rendered.' );\n\t\t}\n\n\t\textendTemplate( template, normalize( clone( def ) ) );\n\t}\n\n\t/**\n\t * Renders a DOM Node (either `HTMLElement` or `Text`) out of the template.\n\t *\n\t * @protected\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t */\n\t_renderNode( data ) {\n\t\tlet isInvalid;\n\n\t\tif ( data.node ) {\n\t\t\t// When applying, a definition cannot have \"tag\" and \"text\" at the same time.\n\t\t\tisInvalid = this.tag && this.text;\n\t\t} else {\n\t\t\t// When rendering, a definition must have either \"tag\" or \"text\": XOR( this.tag, this.text ).\n\t\t\tisInvalid = this.tag ? this.text : !this.text;\n\t\t}\n\n\t\tif ( isInvalid ) {\n\t\t\t/**\n\t\t\t * Node definition cannot have \"tag\" and \"text\" properties at the same time.\n\t\t\t * Node definition must have either \"tag\" or \"text\" when rendering new Node.\n\t\t\t *\n\t\t\t * @error ui-template-wrong-syntax\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'ui-template-wrong-syntax: Node definition must have either \"tag\" or \"text\" when rendering new Node.'\n\t\t\t);\n\t\t}\n\n\t\tif ( this.text ) {\n\t\t\treturn this._renderText( data );\n\t\t} else {\n\t\t\treturn this._renderElement( data );\n\t\t}\n\t}\n\n\t/**\n\t * Renders an `HTMLElement` out of the template.\n\t *\n\t * @protected\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t */\n\t_renderElement( data ) {\n\t\tlet node = data.node;\n\n\t\tif ( !node ) {\n\t\t\tnode = data.node = document.createElementNS( this.ns || xhtmlNs, this.tag );\n\t\t}\n\n\t\tthis._renderAttributes( data );\n\t\tthis._renderElementChildren( data );\n\t\tthis._setUpListeners( data );\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * Renders a `Text` node out of {@link module:ui/template~Template#text}.\n\t *\n\t * @protected\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t */\n\t_renderText( data ) {\n\t\tlet node = data.node;\n\n\t\t// Save the original textContent to revert it in #revert().\n\t\tif ( node ) {\n\t\t\tdata.revertData.text = node.textContent;\n\t\t} else {\n\t\t\tnode = data.node = document.createTextNode( '' );\n\t\t}\n\n\t\t// Check if this Text Node is bound to Observable. Cases:\n\t\t//\n\t\t//\t\ttext: [ Template.bind( ... ).to( ... ) ]\n\t\t//\n\t\t//\t\ttext: [\n\t\t//\t\t\t'foo',\n\t\t//\t\t\tTemplate.bind( ... ).to( ... ),\n\t\t//\t\t\t...\n\t\t//\t\t]\n\t\t//\n\t\tif ( hasTemplateBinding( this.text ) ) {\n\t\t\tthis._bindToObservable( {\n\t\t\t\tschema: this.text,\n\t\t\t\tupdater: getTextUpdater( node ),\n\t\t\t\tdata\n\t\t\t} );\n\t\t}\n\t\t// Simply set text. Cases:\n\t\t//\n\t\t//\t\ttext: [ 'all', 'are', 'static' ]\n\t\t//\n\t\t//\t\ttext: [ 'foo' ]\n\t\t//\n\t\telse {\n\t\t\tnode.textContent = this.text.join( '' );\n\t\t}\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * Renders an `HTMLElement` attributes out of {@link module:ui/template~Template#attributes}.\n\t *\n\t * @protected\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t */\n\t_renderAttributes( data ) {\n\t\tlet attrName, attrValue, domAttrValue, attrNs;\n\n\t\tif ( !this.attributes ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst node = data.node;\n\t\tconst revertData = data.revertData;\n\n\t\tfor ( attrName in this.attributes ) {\n\t\t\t// Current attribute value in DOM.\n\t\t\tdomAttrValue = node.getAttribute( attrName );\n\n\t\t\t// The value to be set.\n\t\t\tattrValue = this.attributes[ attrName ];\n\n\t\t\t// Save revert data.\n\t\t\tif ( revertData ) {\n\t\t\t\trevertData.attributes[ attrName ] = domAttrValue;\n\t\t\t}\n\n\t\t\t// Detect custom namespace:\n\t\t\t//\n\t\t\t//\t\tclass: {\n\t\t\t//\t\t\tns: 'abc',\n\t\t\t//\t\t\tvalue: Template.bind( ... ).to( ... )\n\t\t\t//\t\t}\n\t\t\t//\n\t\t\tattrNs = ( isObject( attrValue[ 0 ] ) && attrValue[ 0 ].ns ) ? attrValue[ 0 ].ns : null;\n\n\t\t\t// Activate binding if one is found. Cases:\n\t\t\t//\n\t\t\t//\t\tclass: [\n\t\t\t//\t\t\tTemplate.bind( ... ).to( ... )\n\t\t\t//\t\t]\n\t\t\t//\n\t\t\t//\t\tclass: [\n\t\t\t//\t\t\t'bar',\n\t\t\t//\t\t\tTemplate.bind( ... ).to( ... ),\n\t\t\t//\t\t\t'baz'\n\t\t\t//\t\t]\n\t\t\t//\n\t\t\t//\t\tclass: {\n\t\t\t//\t\t\tns: 'abc',\n\t\t\t//\t\t\tvalue: Template.bind( ... ).to( ... )\n\t\t\t//\t\t}\n\t\t\t//\n\t\t\tif ( hasTemplateBinding( attrValue ) ) {\n\t\t\t\t// Normalize attributes with additional data like namespace:\n\t\t\t\t//\n\t\t\t\t//\t\tclass: {\n\t\t\t\t//\t\t\tns: 'abc',\n\t\t\t\t//\t\t\tvalue: [ ... ]\n\t\t\t\t//\t\t}\n\t\t\t\t//\n\t\t\t\tconst valueToBind = attrNs ? attrValue[ 0 ].value : attrValue;\n\n\t\t\t\t// Extend the original value of attributes like \"style\" and \"class\",\n\t\t\t\t// don't override them.\n\t\t\t\tif ( revertData && shouldExtend( attrName ) ) {\n\t\t\t\t\tvalueToBind.unshift( domAttrValue );\n\t\t\t\t}\n\n\t\t\t\tthis._bindToObservable( {\n\t\t\t\t\tschema: valueToBind,\n\t\t\t\t\tupdater: getAttributeUpdater( node, attrName, attrNs ),\n\t\t\t\t\tdata\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Style attribute could be an Object so it needs to be parsed in a specific way.\n\t\t\t//\n\t\t\t//\t\tstyle: {\n\t\t\t//\t\t\twidth: '100px',\n\t\t\t//\t\t\theight: Template.bind( ... ).to( ... )\n\t\t\t//\t\t}\n\t\t\t//\n\t\t\telse if ( attrName == 'style' && typeof attrValue[ 0 ] !== 'string' ) {\n\t\t\t\tthis._renderStyleAttribute( attrValue[ 0 ], data );\n\t\t\t}\n\n\t\t\t// Otherwise simply set the static attribute:\n\t\t\t//\n\t\t\t//\t\tclass: [ 'foo' ]\n\t\t\t//\n\t\t\t//\t\tclass: [ 'all', 'are', 'static' ]\n\t\t\t//\n\t\t\t//\t\tclass: [\n\t\t\t//\t\t\t{\n\t\t\t//\t\t\t\tns: 'abc',\n\t\t\t//\t\t\t\tvalue: [ 'foo' ]\n\t\t\t//\t\t\t}\n\t\t\t//\t\t]\n\t\t\t//\n\t\t\telse {\n\t\t\t\t// Extend the original value of attributes like \"style\" and \"class\",\n\t\t\t\t// don't override them.\n\t\t\t\tif ( revertData && domAttrValue && shouldExtend( attrName ) ) {\n\t\t\t\t\tattrValue.unshift( domAttrValue );\n\t\t\t\t}\n\n\t\t\t\tattrValue = attrValue\n\t\t\t\t\t// Retrieve \"values\" from:\n\t\t\t\t\t//\n\t\t\t\t\t//\t\tclass: [\n\t\t\t\t\t//\t\t\t{\n\t\t\t\t\t//\t\t\t\tns: 'abc',\n\t\t\t\t\t//\t\t\t\tvalue: [ ... ]\n\t\t\t\t\t//\t\t\t}\n\t\t\t\t\t//\t\t]\n\t\t\t\t\t//\n\t\t\t\t\t.map( val => val ? ( val.value || val ) : val )\n\t\t\t\t\t// Flatten the array.\n\t\t\t\t\t.reduce( ( prev, next ) => prev.concat( next ), [] )\n\t\t\t\t\t// Convert into string.\n\t\t\t\t\t.reduce( arrayValueReducer, '' );\n\n\t\t\t\tif ( !isFalsy( attrValue ) ) {\n\t\t\t\t\tnode.setAttributeNS( attrNs, attrName, attrValue );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Renders `style` attribute of an `HTMLElement` based on {@link module:ui/template~Template#attributes}.\n\t *\n\t * Style attribute is an {Object} with static values:\n\t *\n\t *\t\tattributes: {\n\t *\t\t\tstyle: {\n\t *\t\t\t\tcolor: 'red'\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t * or values bound to {@link module:ui/model~Model} properties:\n\t *\n\t *\t\tattributes: {\n\t *\t\t\tstyle: {\n\t *\t\t\t\tcolor: bind.to( ... )\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t * Note: `style` attribute is rendered without setting the namespace. It does not seem to be\n\t * needed.\n\t *\n\t * @private\n\t * @param {Object} styles Styles located in `attributes.style` of {@link module:ui/template~TemplateDefinition}.\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t */\n\t_renderStyleAttribute( styles, data ) {\n\t\tconst node = data.node;\n\n\t\tfor ( const styleName in styles ) {\n\t\t\tconst styleValue = styles[ styleName ];\n\n\t\t\t// Cases:\n\t\t\t//\n\t\t\t//\t\tstyle: {\n\t\t\t//\t\t\tcolor: bind.to( 'attribute' )\n\t\t\t//\t\t}\n\t\t\t//\n\t\t\tif ( hasTemplateBinding( styleValue ) ) {\n\t\t\t\tthis._bindToObservable( {\n\t\t\t\t\tschema: [ styleValue ],\n\t\t\t\t\tupdater: getStyleUpdater( node, styleName ),\n\t\t\t\t\tdata\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Cases:\n\t\t\t//\n\t\t\t//\t\tstyle: {\n\t\t\t//\t\t\tcolor: 'red'\n\t\t\t//\t\t}\n\t\t\t//\n\t\t\telse {\n\t\t\t\tnode.style[ styleName ] = styleValue;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Recursively renders `HTMLElement` children from {@link module:ui/template~Template#children}.\n\t *\n\t * @protected\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t */\n\t_renderElementChildren( data ) {\n\t\tconst node = data.node;\n\t\tconst container = data.intoFragment ? document.createDocumentFragment() : node;\n\t\tconst isApplying = data.isApplying;\n\t\tlet childIndex = 0;\n\n\t\tfor ( const child of this.children ) {\n\t\t\tif ( isViewCollection( child ) ) {\n\t\t\t\tif ( !isApplying ) {\n\t\t\t\t\tchild.setParent( node );\n\n\t\t\t\t\tfor ( const view of child ) {\n\t\t\t\t\t\tcontainer.appendChild( view.element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if ( isView( child ) ) {\n\t\t\t\tif ( !isApplying ) {\n\t\t\t\t\tcontainer.appendChild( child.element );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( isApplying ) {\n\t\t\t\t\tconst revertData = data.revertData;\n\t\t\t\t\tconst childRevertData = getEmptyRevertData();\n\n\t\t\t\t\trevertData.children.push( childRevertData );\n\n\t\t\t\t\tchild._renderNode( {\n\t\t\t\t\t\tnode: container.childNodes[ childIndex++ ],\n\t\t\t\t\t\tisApplying: true,\n\t\t\t\t\t\trevertData: childRevertData\n\t\t\t\t\t} );\n\t\t\t\t} else {\n\t\t\t\t\tcontainer.appendChild( child.render() );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( data.intoFragment ) {\n\t\t\tnode.appendChild( container );\n\t\t}\n\t}\n\n\t/**\n\t * Activates `on` listeners in the {@link module:ui/template~TemplateDefinition}\n\t * on a passed `HTMLElement`.\n\t *\n\t * @protected\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t */\n\t_setUpListeners( data ) {\n\t\tif ( !this.eventListeners ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor ( const key in this.eventListeners ) {\n\t\t\tconst revertBindings = this.eventListeners[ key ].map( schemaItem => {\n\t\t\t\tconst [ domEvtName, domSelector ] = key.split( '@' );\n\n\t\t\t\treturn schemaItem.activateDomEventListener( domEvtName, domSelector, data );\n\t\t\t} );\n\n\t\t\tif ( data.revertData ) {\n\t\t\t\tdata.revertData.bindings.push( revertBindings );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * For given {@link module:ui/template~TemplateValueSchema} containing {@link module:ui/template~TemplateBinding} it activates the\n\t * binding and sets its initial value.\n\t *\n\t * Note: {@link module:ui/template~TemplateValueSchema} can be for HTMLElement attributes or Text Node `textContent`.\n\t *\n\t * @protected\n\t * @param {Object} options Binding options.\n\t * @param {module:ui/template~TemplateValueSchema} options.schema\n\t * @param {Function} options.updater A function which updates DOM (like attribute or text).\n\t * @param {module:ui/template~RenderData} options.data Rendering data.\n\t */\n\t_bindToObservable( { schema, updater, data } ) {\n\t\tconst revertData = data.revertData;\n\n\t\t// Set initial values.\n\t\tsyncValueSchemaValue( schema, updater, data );\n\n\t\tconst revertBindings = schema\n\t\t\t// Filter \"falsy\" (false, undefined, null, '') value schema components out.\n\t\t\t.filter( item => !isFalsy( item ) )\n\t\t\t// Filter inactive bindings from schema, like static strings ('foo'), numbers (42), etc.\n\t\t\t.filter( item => item.observable )\n\t\t\t// Once only the actual binding are left, let the emitter listen to observable change:attribute event.\n\t\t\t// TODO: Reduce the number of listeners attached as many bindings may listen\n\t\t\t// to the same observable attribute.\n\t\t\t.map( templateBinding => templateBinding.activateAttributeListener( schema, updater, data ) );\n\n\t\tif ( revertData ) {\n\t\t\trevertData.bindings.push( revertBindings );\n\t\t}\n\t}\n\n\t/**\n\t * Reverts {@link module:ui/template~RenderData#revertData template data} from a node to\n\t * return it to the the original state.\n\t *\n\t * @protected\n\t * @param {HTMLElement|Text} node A node to be reverted.\n\t * @param {module:ui/template~RenderData#revertData} revertData Stores information about\n\t * what changes have been made by {@link #apply} to the node.\n\t */\n\t_revertTemplateFromNode( node, revertData ) {\n\t\tfor ( const binding of revertData.bindings ) {\n\t\t\t// Each binding may consist of several observable+observable#attribute.\n\t\t\t// like the following has 2:\n\t\t\t//\n\t\t\t//\t\tclass: [\n\t\t\t//\t\t\t'x',\n\t\t\t//\t\t\tbind.to( 'foo' ),\n\t\t\t//\t\t\t'y',\n\t\t\t//\t\t\tbind.to( 'bar' )\n\t\t\t//\t\t]\n\t\t\t//\n\t\t\tfor ( const revertBinding of binding ) {\n\t\t\t\trevertBinding();\n\t\t\t}\n\t\t}\n\n\t\tif ( revertData.text ) {\n\t\t\tnode.textContent = revertData.text;\n\n\t\t\treturn;\n\t\t}\n\n\t\tfor ( const attrName in revertData.attributes ) {\n\t\t\tconst attrValue = revertData.attributes[ attrName ];\n\n\t\t\t// When the attribute has **not** been set before #apply().\n\t\t\tif ( attrValue === null ) {\n\t\t\t\tnode.removeAttribute( attrName );\n\t\t\t} else {\n\t\t\t\tnode.setAttribute( attrName, attrValue );\n\t\t\t}\n\t\t}\n\n\t\tfor ( let i = 0; i < revertData.children.length; ++i ) {\n\t\t\tthis._revertTemplateFromNode( node.childNodes[ i ], revertData.children[ i ] );\n\t\t}\n\t}\n}\n\nmix( Template, EmitterMixin );\n\n/**\n * Describes a binding created by {@link module:ui/template~Template.bind} interface.\n *\n * @protected\n */\nexport class TemplateBinding {\n\t/**\n\t * Creates an instance of the {@link module:ui/template~TemplateBinding} class.\n\t *\n\t * @param {module:ui/template~TemplateDefinition} def The definition of the binding.\n\t */\n\tconstructor( def ) {\n\t\tObject.assign( this, def );\n\n\t\t/**\n\t\t * An observable instance of the binding. It provides the attribute\n\t\t * with the value or passes the event when a corresponding DOM event is fired.\n\t\t *\n\t\t * @member {module:utils/observablemixin~ObservableMixin} module:ui/template~TemplateBinding#observable\n\t\t */\n\n\t\t/**\n\t\t * An {@link module:utils/emittermixin~EmitterMixin} instance used by the binding\n\t\t * to (either):\n\t\t *\n\t\t * * listen to the attribute change in the {@link module:ui/template~TemplateBinding#observable},\n\t\t * * listen to the event in the DOM.\n\t\t *\n\t\t * @member {module:utils/emittermixin~EmitterMixin} module:ui/template~TemplateBinding#emitter\n\t\t */\n\n\t\t/**\n\t\t * The name of the attribute of {@link module:ui/template~TemplateBinding#observable} which is observed.\n\t\t *\n\t\t * @member {String} module:ui/template~TemplateBinding#attribute\n\t\t */\n\n\t\t/**\n\t\t * A custom function to process the value of {@link module:ui/template~TemplateBinding#attribute}.\n\t\t *\n\t\t * @member {Function} [module:ui/template~TemplateBinding#callback]\n\t\t */\n\t}\n\n\t/**\n\t * Returns the value of the binding, which is the value of {@link module:ui/template~TemplateBinding#attribute} in\n\t * {@link module:ui/template~TemplateBinding#observable}.\n\t *\n\t * @param {Node} [node] A native DOM node, passed to the custom {@link module:ui/template~TemplateBinding#callback}.\n\t * @returns {*} The value of {@link module:ui/template~TemplateBinding#attribute} in\n\t * {@link module:ui/template~TemplateBinding#observable}.\n\t */\n\tgetValue( node ) {\n\t\tconst value = this.observable[ this.attribute ];\n\n\t\treturn this.callback ? this.callback( value, node ) : value;\n\t}\n\n\t/**\n\t * Activates the listener for the changes of {@link module:ui/template~TemplateBinding#attribute} in\n\t * {@link module:ui/template~TemplateBinding#observable}, which then updates the DOM with the aggregated\n\t * value of {@link module:ui/template~TemplateValueSchema}.\n\t *\n\t * For instance, the `class` attribute of the `Template` element can be be bound to\n\t * the observable `foo` attribute in `ObservableMixin` instance.\n\t *\n\t * @param {module:ui/template~TemplateValueSchema} schema A full schema to generate an attribute or text in DOM.\n\t * @param {Function} updater A DOM updater function used to update native DOM attribute or text.\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t * @returns {Function} A function to sever the listener binding.\n\t */\n\tactivateAttributeListener( schema, updater, data ) {\n\t\tconst callback = () => syncValueSchemaValue( schema, updater, data );\n\n\t\tthis.emitter.listenTo( this.observable, 'change:' + this.attribute, callback );\n\n\t\t// Allows revert of the listener.\n\t\treturn () => {\n\t\t\tthis.emitter.stopListening( this.observable, 'change:' + this.attribute, callback );\n\t\t};\n\t}\n}\n\n/**\n * Describes either:\n *\n * * a binding to {@link module:utils/observablemixin~ObservableMixin}\n * * or a native DOM event binding\n *\n * created by {@link module:ui/template~BindChain#to} method.\n *\n * @protected\n */\nexport class TemplateToBinding extends TemplateBinding {\n\t/**\n\t * Activates the listener for the native DOM event, which when fired, is propagated by\n\t * the {@link module:ui/template~TemplateBinding#emitter}.\n\t *\n\t * @param {String} domEvtName A name of the native DOM event.\n\t * @param {String} domSelector A selector in DOM to filter delegated events.\n\t * @param {module:ui/template~RenderData} data Rendering data.\n\t * @returns {Function} A function to sever the listener binding.\n\t */\n\tactivateDomEventListener( domEvtName, domSelector, data ) {\n\t\tconst callback = ( evt, domEvt ) => {\n\t\t\tif ( !domSelector || domEvt.target.matches( domSelector ) ) {\n\t\t\t\tif ( typeof this.eventNameOrFunction == 'function' ) {\n\t\t\t\t\tthis.eventNameOrFunction( domEvt );\n\t\t\t\t} else {\n\t\t\t\t\tthis.observable.fire( this.eventNameOrFunction, domEvt );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.emitter.listenTo( data.node, domEvtName, callback );\n\n\t\t// Allows revert of the listener.\n\t\treturn () => {\n\t\t\tthis.emitter.stopListening( data.node, domEvtName, callback );\n\t\t};\n\t}\n}\n\n/**\n * Describes a binding to {@link module:utils/observablemixin~ObservableMixin} created by {@link module:ui/template~BindChain#if}\n * method.\n *\n * @protected\n */\nexport class TemplateIfBinding extends TemplateBinding {\n\t/**\n\t * @inheritDoc\n\t */\n\tgetValue( node ) {\n\t\tconst value = super.getValue( node );\n\n\t\treturn isFalsy( value ) ? false : ( this.valueIfTrue || true );\n\t}\n\n\t/**\n\t * The value of the DOM attribute/text to be set if the {@link module:ui/template~TemplateBinding#attribute} in\n\t * {@link module:ui/template~TemplateBinding#observable} is `true`.\n\t *\n\t * @member {String} [module:ui/template~TemplateIfBinding#valueIfTrue]\n\t */\n}\n\n// Checks whether given {@link module:ui/template~TemplateValueSchema} contains a\n// {@link module:ui/template~TemplateBinding}.\n//\n// @param {module:ui/template~TemplateValueSchema} schema\n// @returns {Boolean}\nfunction hasTemplateBinding( schema ) {\n\tif ( !schema ) {\n\t\treturn false;\n\t}\n\n\t// Normalize attributes with additional data like namespace:\n\t//\n\t//\t\tclass: {\n\t//\t\t\tns: 'abc',\n\t//\t\t\tvalue: [ ... ]\n\t//\t\t}\n\t//\n\tif ( schema.value ) {\n\t\tschema = schema.value;\n\t}\n\n\tif ( Array.isArray( schema ) ) {\n\t\treturn schema.some( hasTemplateBinding );\n\t} else if ( schema instanceof TemplateBinding ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n// Assembles the value using {@link module:ui/template~TemplateValueSchema} and stores it in a form of\n// an Array. Each entry of an Array corresponds to one of {@link module:ui/template~TemplateValueSchema}\n// items.\n//\n// @param {module:ui/template~TemplateValueSchema} schema\n// @param {Node} node DOM Node updated when {@link module:utils/observablemixin~ObservableMixin} changes.\n// @return {Array}\nfunction getValueSchemaValue( schema, node ) {\n\treturn schema.map( schemaItem => {\n\t\t// Process {@link module:ui/template~TemplateBinding} bindings.\n\t\tif ( schemaItem instanceof TemplateBinding ) {\n\t\t\treturn schemaItem.getValue( node );\n\t\t}\n\n\t\t// All static values like strings, numbers, and \"falsy\" values (false, null, undefined, '', etc.) just pass.\n\t\treturn schemaItem;\n\t} );\n}\n\n// A function executed each time bound Observable attribute changes, which updates DOM with a value\n// constructed from {@link module:ui/template~TemplateValueSchema}.\n//\n// @param {module:ui/template~TemplateValueSchema} schema\n// @param {Function} updater A function which updates DOM (like attribute or text).\n// @param {Node} node DOM Node updated when {@link module:utils/observablemixin~ObservableMixin} changes.\nfunction syncValueSchemaValue( schema, updater, { node } ) {\n\tlet value = getValueSchemaValue( schema, node );\n\n\t// Check if schema is a single Template.bind.if, like:\n\t//\n\t//\t\tclass: Template.bind.if( 'foo' )\n\t//\n\tif ( schema.length == 1 && schema[ 0 ] instanceof TemplateIfBinding ) {\n\t\tvalue = value[ 0 ];\n\t} else {\n\t\tvalue = value.reduce( arrayValueReducer, '' );\n\t}\n\n\tif ( isFalsy( value ) ) {\n\t\tupdater.remove();\n\t} else {\n\t\tupdater.set( value );\n\t}\n}\n\n// Returns an object consisting of `set` and `remove` functions, which\n// can be used in the context of DOM Node to set or reset `textContent`.\n// @see module:ui/view~View#_bindToObservable\n//\n// @param {Node} node DOM Node to be modified.\n// @returns {Object}\nfunction getTextUpdater( node ) {\n\treturn {\n\t\tset( value ) {\n\t\t\tnode.textContent = value;\n\t\t},\n\n\t\tremove() {\n\t\t\tnode.textContent = '';\n\t\t}\n\t};\n}\n\n// Returns an object consisting of `set` and `remove` functions, which\n// can be used in the context of DOM Node to set or reset an attribute.\n// @see module:ui/view~View#_bindToObservable\n//\n// @param {Node} node DOM Node to be modified.\n// @param {String} attrName Name of the attribute to be modified.\n// @param {String} [ns=null] Namespace to use.\n// @returns {Object}\nfunction getAttributeUpdater( el, attrName, ns ) {\n\treturn {\n\t\tset( value ) {\n\t\t\tel.setAttributeNS( ns, attrName, value );\n\t\t},\n\n\t\tremove() {\n\t\t\tel.removeAttributeNS( ns, attrName );\n\t\t}\n\t};\n}\n\n// Returns an object consisting of `set` and `remove` functions, which\n// can be used in the context of CSSStyleDeclaration to set or remove a style.\n// @see module:ui/view~View#_bindToObservable\n//\n// @param {Node} node DOM Node to be modified.\n// @param {String} styleName Name of the style to be modified.\n// @returns {Object}\nfunction getStyleUpdater( el, styleName ) {\n\treturn {\n\t\tset( value ) {\n\t\t\tel.style[ styleName ] = value;\n\t\t},\n\n\t\tremove() {\n\t\t\tel.style[ styleName ] = null;\n\t\t}\n\t};\n}\n\n// Clones definition of the template.\n//\n// @param {module:ui/template~TemplateDefinition} def\n// @returns {module:ui/template~TemplateDefinition}\nfunction clone( def ) {\n\tconst clone = cloneDeepWith( def, value => {\n\t\t// Don't clone the `Template.bind`* bindings because of the references to Observable\n\t\t// and DomEmitterMixin instances inside, which would also be traversed and cloned by greedy\n\t\t// cloneDeepWith algorithm. There's no point in cloning Observable/DomEmitterMixins\n\t\t// along with the definition.\n\t\t//\n\t\t// Don't clone Template instances if provided as a child. They're simply #render()ed\n\t\t// and nothing should interfere.\n\t\t//\n\t\t// Also don't clone View instances if provided as a child of the Template. The template\n\t\t// instance will be extracted from the View during the normalization and there's no need\n\t\t// to clone it.\n\t\tif ( value && ( value instanceof TemplateBinding || isTemplate( value ) || isView( value ) || isViewCollection( value ) ) ) {\n\t\t\treturn value;\n\t\t}\n\t} );\n\n\treturn clone;\n}\n\n// Normalizes given {@link module:ui/template~TemplateDefinition}.\n//\n// See:\n//  * {@link normalizeAttributes}\n//  * {@link normalizeListeners}\n//  * {@link normalizePlainTextDefinition}\n//  * {@link normalizeTextDefinition}\n//\n// @param {module:ui/template~TemplateDefinition} def\n// @returns {module:ui/template~TemplateDefinition} Normalized definition.\nfunction normalize( def ) {\n\tif ( typeof def == 'string' ) {\n\t\tdef = normalizePlainTextDefinition( def );\n\t} else if ( def.text ) {\n\t\tnormalizeTextDefinition( def );\n\t}\n\n\tif ( def.on ) {\n\t\tdef.eventListeners = normalizeListeners( def.on );\n\n\t\t// Template mixes EmitterMixin, so delete #on to avoid collision.\n\t\tdelete def.on;\n\t}\n\n\tif ( !def.text ) {\n\t\tif ( def.attributes ) {\n\t\t\tnormalizeAttributes( def.attributes );\n\t\t}\n\n\t\tconst children = new Collection();\n\n\t\tif ( def.children ) {\n\t\t\tif ( isViewCollection( def.children ) ) {\n\t\t\t\tchildren.add( def.children );\n\t\t\t} else {\n\t\t\t\tfor ( const child of def.children ) {\n\t\t\t\t\tif ( isTemplate( child ) || isView( child ) ) {\n\t\t\t\t\t\tchildren.add( child );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchildren.add( new Template( child ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdef.children = children;\n\t}\n\n\treturn def;\n}\n\n// Normalizes \"attributes\" section of {@link module:ui/template~TemplateDefinition}.\n//\n//\t\tattributes: {\n//\t\t\ta: 'bar',\n//\t\t\tb: {@link module:ui/template~TemplateBinding},\n//\t\t\tc: {\n//\t\t\t\tvalue: 'bar'\n//\t\t\t}\n//\t\t}\n//\n// becomes\n//\n//\t\tattributes: {\n//\t\t\ta: [ 'bar' ],\n//\t\t\tb: [ {@link module:ui/template~TemplateBinding} ],\n//\t\t\tc: {\n//\t\t\t\tvalue: [ 'bar' ]\n//\t\t\t}\n//\t\t}\n//\n// @param {Object} attrs\nfunction normalizeAttributes( attrs ) {\n\tfor ( const a in attrs ) {\n\t\tif ( attrs[ a ].value ) {\n\t\t\tattrs[ a ].value = [].concat( attrs[ a ].value );\n\t\t}\n\n\t\tarrayify( attrs, a );\n\t}\n}\n\n// Normalizes \"on\" section of {@link module:ui/template~TemplateDefinition}.\n//\n//\t\ton: {\n//\t\t\ta: 'bar',\n//\t\t\tb: {@link module:ui/template~TemplateBinding},\n//\t\t\tc: [ {@link module:ui/template~TemplateBinding}, () => { ... } ]\n//\t\t}\n//\n// becomes\n//\n//\t\ton: {\n//\t\t\ta: [ 'bar' ],\n//\t\t\tb: [ {@link module:ui/template~TemplateBinding} ],\n//\t\t\tc: [ {@link module:ui/template~TemplateBinding}, () => { ... } ]\n//\t\t}\n//\n// @param {Object} listeners\n// @returns {Object} Object containing normalized listeners.\nfunction normalizeListeners( listeners ) {\n\tfor ( const l in listeners ) {\n\t\tarrayify( listeners, l );\n\t}\n\n\treturn listeners;\n}\n\n// Normalizes \"string\" {@link module:ui/template~TemplateDefinition}.\n//\n//\t\t\"foo\"\n//\n// becomes\n//\n//\t\t{ text: [ 'foo' ] },\n//\n// @param {String} def\n// @returns {module:ui/template~TemplateDefinition} Normalized template definition.\nfunction normalizePlainTextDefinition( def ) {\n\treturn {\n\t\ttext: [ def ]\n\t};\n}\n\n// Normalizes text {@link module:ui/template~TemplateDefinition}.\n//\n//\t\tchildren: [\n//\t\t\t{ text: 'def' },\n//\t\t\t{ text: {@link module:ui/template~TemplateBinding} }\n//\t\t]\n//\n// becomes\n//\n//\t\tchildren: [\n//\t\t\t{ text: [ 'def' ] },\n//\t\t\t{ text: [ {@link module:ui/template~TemplateBinding} ] }\n//\t\t]\n//\n// @param {module:ui/template~TemplateDefinition} def\nfunction normalizeTextDefinition( def ) {\n\tif ( !Array.isArray( def.text ) ) {\n\t\tdef.text = [ def.text ];\n\t}\n}\n\n// Wraps an entry in Object in an Array, if not already one.\n//\n//\t\t{\n//\t\t\tx: 'y',\n//\t\t\ta: [ 'b' ]\n//\t\t}\n//\n// becomes\n//\n//\t\t{\n//\t\t\tx: [ 'y' ],\n//\t\t\ta: [ 'b' ]\n//\t\t}\n//\n// @param {Object} obj\n// @param {String} key\nfunction arrayify( obj, key ) {\n\tif ( !Array.isArray( obj[ key ] ) ) {\n\t\tobj[ key ] = [ obj[ key ] ];\n\t}\n}\n\n// A helper which concatenates the value avoiding unwanted\n// leading white spaces.\n//\n// @param {String} prev\n// @param {String} cur\n// @returns {String}\nfunction arrayValueReducer( prev, cur ) {\n\tif ( isFalsy( cur ) ) {\n\t\treturn prev;\n\t} else if ( isFalsy( prev ) ) {\n\t\treturn cur;\n\t} else {\n\t\treturn `${ prev } ${ cur }`;\n\t}\n}\n\n// Extends one object defined in the following format:\n//\n//\t\t{\n//\t\t\tkey1: [Array1],\n//\t\t\tkey2: [Array2],\n//\t\t\t...\n//\t\t\tkeyN: [ArrayN]\n//\t\t}\n//\n// with another object of the same data format.\n//\n// @param {Object} obj Base object.\n// @param {Object} ext Object extending base.\n// @returns {String}\nfunction extendObjectValueArray( obj, ext ) {\n\tfor ( const a in ext ) {\n\t\tif ( obj[ a ] ) {\n\t\t\tobj[ a ].push( ...ext[ a ] );\n\t\t} else {\n\t\t\tobj[ a ] = ext[ a ];\n\t\t}\n\t}\n}\n\n// A helper for {@link module:ui/template~Template#extend}. Recursively extends {@link module:ui/template~Template} instance\n// with content from {module:ui/template~TemplateDefinition}. See {@link module:ui/template~Template#extend} to learn more.\n//\n// @param {module:ui/template~Template} def A template instance to be extended.\n// @param {module:ui/template~TemplateDefinition} def A definition which is to extend the template instance.\nfunction extendTemplate( template, def ) {\n\tif ( def.attributes ) {\n\t\tif ( !template.attributes ) {\n\t\t\ttemplate.attributes = {};\n\t\t}\n\n\t\textendObjectValueArray( template.attributes, def.attributes );\n\t}\n\n\tif ( def.eventListeners ) {\n\t\tif ( !template.eventListeners ) {\n\t\t\ttemplate.eventListeners = {};\n\t\t}\n\n\t\textendObjectValueArray( template.eventListeners, def.eventListeners );\n\t}\n\n\tif ( def.text ) {\n\t\ttemplate.text.push( ...def.text );\n\t}\n\n\tif ( def.children && def.children.length ) {\n\t\tif ( template.children.length != def.children.length ) {\n\t\t\t/**\n\t\t\t * The number of children in extended definition does not match.\n\t\t\t *\n\t\t\t * @error ui-template-extend-children-mismatch\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'ui-template-extend-children-mismatch: The number of children in extended definition does not match.'\n\t\t\t);\n\t\t}\n\n\t\tlet childIndex = 0;\n\n\t\tfor ( const childDef of def.children ) {\n\t\t\textendTemplate( template.children.get( childIndex++ ), childDef );\n\t\t}\n\t}\n}\n\n// Checks if value is \"falsy\".\n// Note: 0 (Number) is not \"falsy\" in this context.\n//\n// @private\n// @param {*} value Value to be checked.\nfunction isFalsy( value ) {\n\treturn !value && value !== 0;\n}\n\n// Checks if the item is an instance of {@link module:ui/view~View}\n//\n// @private\n// @param {*} value Value to be checked.\nfunction isView( item ) {\n\treturn item instanceof View;\n}\n\n// Checks if the item is an instance of {@link module:ui/template~Template}\n//\n// @private\n// @param {*} value Value to be checked.\nfunction isTemplate( item ) {\n\treturn item instanceof Template;\n}\n\n// Checks if the item is an instance of {@link module:ui/viewcollection~ViewCollection}\n//\n// @private\n// @param {*} value Value to be checked.\nfunction isViewCollection( item ) {\n\treturn item instanceof ViewCollection;\n}\n\n// Creates an empty skeleton for {@link module:ui/template~Template#revert}\n// data.\n//\n// @private\nfunction getEmptyRevertData() {\n\treturn {\n\t\tchildren: [],\n\t\tbindings: [],\n\t\tattributes: {}\n\t};\n}\n\n// Checks whether an attribute should be extended when\n// {@link module:ui/template~Template#apply} is called.\n//\n// @private\n// @param {String} attrName Attribute name to check.\nfunction shouldExtend( attrName ) {\n\treturn attrName == 'class' || attrName == 'style';\n}\n\n/**\n * A definition of {@link module:ui/template~Template}.\n * See: {@link module:ui/template~TemplateValueSchema}.\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tchildren: [\n *\t\t\t\t{\n *\t\t\t\t\ttag: 'span',\n *\t\t\t\t\tattributes: { ... },\n *\t\t\t\t\tchildren: [ ... ],\n *\t\t\t\t\t...\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\ttext: 'static–text'\n *\t\t\t\t},\n *\t\t\t\t'also-static–text',\n *\t\t\t\t<{@link module:ui/view~View} instance>\n *\t\t\t\t<{@link module:ui/template~Template} instance>\n *\t\t\t\t...\n *\t\t\t],\n *\t\t\tattributes: {\n *\t\t\t\tclass: {@link module:ui/template~TemplateValueSchema},\n *\t\t\t\tid: {@link module:ui/template~TemplateValueSchema},\n *\t\t\t\tstyle: {@link module:ui/template~TemplateValueSchema}\n *\t\t\t\t...\n *\t\t\t},\n *\t\t\ton: {\n *\t\t\t\t'click': {@link module:ui/template~TemplateListenerSchema}\n *\t\t\t\t'keyup@.some-class': {@link module:ui/template~TemplateListenerSchema},\n *\t\t\t\t...\n *\t\t\t}\n *\t\t} );\n *\n *\t\t// An entire view collection can be used as a child in the definition.\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tchildren: <{@link module:ui/viewcollection~ViewCollection} instance>\n *\t\t} );\n *\n * @typedef module:ui/template~TemplateDefinition\n * @type Object\n * @property {String} tag\n * @property {Array.<module:ui/template~TemplateDefinition>} [children]\n * @property {Object.<String,module:ui/template~TemplateValueSchema>} [attributes]\n * @property {String|module:ui/template~TemplateValueSchema|Array.<String|module:ui/template~TemplateValueSchema>} [text]\n * @property {Object.<String,module:ui/template~TemplateListenerSchema>} [on]\n */\n\n/**\n * Describes a value of HTMLElement attribute or `textContent`. See:\n *  * {@link module:ui/template~TemplateDefinition},\n *  * {@link module:ui/template~Template.bind},\n *\n *\t\tconst bind = Template.bind( observableInstance, emitterInstance );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tattributes: {\n *\t\t\t\t// Plain String schema.\n *\t\t\t\tclass: 'static-text'\n *\n *\t\t\t\t// Object schema, an `ObservableMixin` binding.\n *\t\t\t\tclass: bind.to( 'foo' )\n *\n *\t\t\t\t// Array schema, combines the above.\n *\t\t\t\tclass: [\n *\t\t\t\t\t'static-text',\n *\t\t\t\t\tbind.to( 'bar', () => { ... } )\n *\t\t\t\t],\n *\n *\t\t\t\t// Array schema, with custom namespace.\n *\t\t\t\tclass: {\n *\t\t\t\t\tns: 'http://ns.url',\n *\t\t\t\t\tvalue: [\n *\t\t\t\t\t\tbind.if( 'baz', 'value-when-true' )\n *\t\t\t\t\t\t'static-text'\n *\t\t\t\t\t]\n *\t\t\t\t},\n *\n *\t\t\t\t// Object literal schema, specific for styles.\n *\t\t\t\tstyle: {\n *\t\t\t\t\tcolor: 'red',\n *\t\t\t\t\tbackgroundColor: bind.to( 'qux', () => { ... } )\n *\t\t\t\t}\n *\t\t\t}\n *\t\t} );\n *\n * @typedef module:ui/template~TemplateValueSchema\n * @type {Object|String|Array}\n */\n\n/**\n * Describes a listener attached to HTMLElement. See: {@link module:ui/template~TemplateDefinition}.\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\ton: {\n *\t\t\t\t// Plain String schema.\n *\t\t\t\tclick: 'clicked'\n *\n *\t\t\t\t// Object schema, an `ObservableMixin` binding.\n *\t\t\t\tclick: {@link module:ui/template~TemplateBinding}\n *\n *\t\t\t\t// Array schema, combines the above.\n *\t\t\t\tclick: [\n *\t\t\t\t\t'clicked',\n *\t\t\t\t\t{@link module:ui/template~TemplateBinding}\n *\t\t\t\t],\n *\n *\t\t\t\t// Array schema, with custom callback.\n *\t\t\t\t// Note: It will work for \"click\" event on class=\".foo\" children only.\n *\t\t\t\t'click@.foo': {\n *\t\t\t\t\t'clicked',\n *\t\t\t\t\t{@link module:ui/template~TemplateBinding},\n *\t\t\t\t\t() => { ... }\n *\t\t\t\t}\n *\t\t\t}\n *\t\t} );\n *\n * @typedef module:ui/template~TemplateListenerSchema\n * @type {Object|String|Array}\n */\n\n/**\n * The type of {@link ~Template.bind}'s return value.\n *\n * @interface module:ui/template~BindChain\n */\n\n/**\n * Binds {@link module:utils/observablemixin~ObservableMixin} instance to:\n *\n * * HTMLElement attribute or Text Node `textContent` so remains in sync with the Observable when it changes:\n * * HTMLElement DOM event, so the DOM events are propagated through Observable.\n *\n *\t\tconst bind = Template.bind( observableInstance, emitterInstance );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tattributes: {\n *\t\t\t\t// class=\"...\" attribute gets bound to `observableInstance#a`\n *\t\t\t\t'class': bind.to( 'a' )\n *\t\t\t},\n *\t\t\tchildren: [\n *\t\t\t\t// <p>...</p> gets bound to `observableInstance#b`; always `toUpperCase()`.\n *\t\t\t\t{ text: bind.to( 'b', ( value, node ) => value.toUpperCase() ) }\n *\t\t\t],\n *\t\t\ton: {\n *\t\t\t\tclick: [\n *\t\t\t\t\t// \"clicked\" event will be fired on `observableInstance` when \"click\" fires in DOM.\n *\t\t\t\t\tbind.to( 'clicked' ),\n *\n *\t\t\t\t\t// A custom callback function will be executed when \"click\" fires in DOM.\n *\t\t\t\t\tbind.to( () => {\n *\t\t\t\t\t\t...\n *\t\t\t\t\t} )\n *\t\t\t\t]\n *\t\t\t}\n *\t\t} ).render();\n *\n *\t\tconst bind = Template.bind( observableInstance, emitterInstance );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t} ).render();\n *\n * @method #to\n * @param {String|Function} eventNameOrFunctionOrAttribute An attribute name of\n * {@link module:utils/observablemixin~ObservableMixin} or a DOM event name or an event callback.\n * @param {Function} [callback] Allows processing of the value. Accepts `Node` and `value` as arguments.\n * @return {module:ui/template~TemplateBinding}\n */\n\n/**\n * Binds {@link module:utils/observablemixin~ObservableMixin} to HTMLElement attribute or Text Node `textContent`\n * so remains in sync with the Model when it changes. Unlike {@link module:ui/template~BindChain#to},\n * it controls the presence of the attribute/`textContent` depending on the \"falseness\" of\n * {@link module:utils/observablemixin~ObservableMixin} attribute.\n *\n *\t\tconst bind = Template.bind( observableInstance, emitterInstance );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'input',\n *\t\t\tattributes: {\n *\t\t\t\t// <input checked> when `observableInstance#a` is not undefined/null/false/''\n *\t\t\t\t// <input> when `observableInstance#a` is undefined/null/false\n *\t\t\t\tchecked: bind.if( 'a' )\n *\t\t\t},\n *\t\t\tchildren: [\n *\t\t\t\t{\n *\t\t\t\t\t// <input>\"b-is-not-set\"</input> when `observableInstance#b` is undefined/null/false/''\n *\t\t\t\t\t// <input></input> when `observableInstance#b` is not \"falsy\"\n *\t\t\t\t\ttext: bind.if( 'b', 'b-is-not-set', ( value, node ) => !value )\n *\t\t\t\t}\n *\t\t\t]\n *\t\t} ).render();\n *\n * @method #if\n * @param {String} attribute An attribute name of {@link module:utils/observablemixin~ObservableMixin} used in the binding.\n * @param {String} [valueIfTrue] Value set when {@link module:utils/observablemixin~ObservableMixin} attribute is not\n * undefined/null/false/''.\n * @param {Function} [callback] Allows processing of the value. Accepts `Node` and `value` as arguments.\n * @return {module:ui/template~TemplateBinding}\n */\n\n/**\n * The {@link module:ui/template~Template#_renderNode} configuration.\n *\n * @private\n * @interface module:ui/template~RenderData\n */\n\n/**\n * Tells {@link module:ui/template~Template#_renderNode} to render\n * children into `DocumentFragment` first and then append the fragment\n * to the parent element. It's a speed optimization.\n *\n * @member {Boolean} #intoFragment\n */\n\n/**\n * A node which is being rendered.\n *\n * @member {HTMLElement|Text} #node\n */\n\n/**\n * Indicates whether the {@module:ui/template~RenderNodeOptions#node} has\n * been provided by {@module:ui/template~Template#apply}.\n *\n * @member {Boolean} #isApplying\n */\n\n/**\n * An object storing the data that helps {@module:ui/template~Template#revert}\n * bringing back an element to its initial state, i.e. before\n * {@module:ui/template~Template#apply} was called.\n *\n * @member {Object} #revertData\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-ui/src/template.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/emittermixin\n */\n\nimport EventInfo from './eventinfo';\nimport uid from './uid';\nimport priorities from './priorities';\n\nconst _listeningTo = Symbol( 'listeningTo' );\nconst _emitterId = Symbol( 'emitterId' );\n\n/**\n * Mixin that injects the events API into its host.\n *\n * @mixin EmitterMixin\n * @implements module:utils/emittermixin~Emitter\n */\nconst EmitterMixin = {\n\t/**\n\t * Registers a callback function to be executed when an event is fired. Events can be grouped in namespaces using `:`.\n\t * When namespaced event is fired, it additionaly fires all callbacks for that namespace.\n\t *\n\t *\t\tmyEmitter.on( 'myGroup', genericCallback );\n\t *\t\tmyEmitter.on( 'myGroup:myEvent', specificCallback );\n\t *\t\tmyEmitter.fire( 'myGroup' ); // genericCallback is fired.\n\t *\t\tmyEmitter.fire( 'myGroup:myEvent' ); // both genericCallback and specificCallback are fired.\n\t *\t\tmyEmitter.fire( 'myGroup:foo' ); // genericCallback is fired even though there are no callbacks for \"foo\".\n\t *\n\t * @method #on\n\t * @param {String} event The name of the event.\n\t * @param {Function} callback The function to be called on event.\n\t * @param {Object} [options={}] Additional options.\n\t * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n\t * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n\t * order they were added.\n\t * @param {Object} [options.context] The object that represents `this` in the callback. Defaults to the object firing the event.\n\t */\n\ton( event, callback, options = {} ) {\n\t\tcreateEventNamespace( this, event );\n\t\tconst lists = getCallbacksListsForNamespace( this, event );\n\t\tconst priority = priorities.get( options.priority );\n\n\t\tcallback = {\n\t\t\tcallback,\n\t\t\tcontext: options.context || this,\n\t\t\tpriority\n\t\t};\n\n\t\t// Add the callback to all callbacks list.\n\t\tfor ( const callbacks of lists ) {\n\t\t\t// Add the callback to the list in the right priority position.\n\t\t\tlet added = false;\n\n\t\t\tfor ( let i = 0; i < callbacks.length; i++ ) {\n\t\t\t\tif ( callbacks[ i ].priority < priority ) {\n\t\t\t\t\tcallbacks.splice( i, 0, callback );\n\t\t\t\t\tadded = true;\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add at the end, if right place was not found.\n\t\t\tif ( !added ) {\n\t\t\t\tcallbacks.push( callback );\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Registers a callback function to be executed on the next time the event is fired only. This is similar to\n\t * calling {@link #on} followed by {@link #off} in the callback.\n\t *\n\t * @method #once\n\t * @param {String} event The name of the event.\n\t * @param {Function} callback The function to be called on event.\n\t * @param {Object} [options={}] Additional options.\n\t * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n\t * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n\t * order they were added.\n\t * @param {Object} [options.context] The object that represents `this` in the callback. Defaults to the object firing the event.\n\t */\n\tonce( event, callback, options ) {\n\t\tconst onceCallback = function( event, ...args ) {\n\t\t\t// Go off() at the first call.\n\t\t\tevent.off();\n\n\t\t\t// Go with the original callback.\n\t\t\tcallback.call( this, event, ...args );\n\t\t};\n\n\t\t// Make a similar on() call, simply replacing the callback.\n\t\tthis.on( event, onceCallback, options );\n\t},\n\n\t/**\n\t * Stops executing the callback on the given event.\n\t *\n\t * @method #off\n\t * @param {String} event The name of the event.\n\t * @param {Function} callback The function to stop being called.\n\t * @param {Object} [context] The context object to be removed, pared with the given callback. To handle cases where\n\t * the same callback is used several times with different contexts.\n\t */\n\toff( event, callback, context ) {\n\t\tconst lists = getCallbacksListsForNamespace( this, event );\n\n\t\tfor ( const callbacks of lists ) {\n\t\t\tfor ( let i = 0; i < callbacks.length; i++ ) {\n\t\t\t\tif ( callbacks[ i ].callback == callback ) {\n\t\t\t\t\tif ( !context || context == callbacks[ i ].context ) {\n\t\t\t\t\t\t// Remove the callback from the list (fixing the next index).\n\t\t\t\t\t\tcallbacks.splice( i, 1 );\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Registers a callback function to be executed when an event is fired in a specific (emitter) object.\n\t *\n\t * @method #listenTo\n\t * @param {module:utils/emittermixin~Emitter} emitter The object that fires the event.\n\t * @param {String} event The name of the event.\n\t * @param {Function} callback The function to be called on event.\n\t * @param {Object} [options={}] Additional options.\n\t * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n\t * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n\t * order they were added.\n\t * @param {Object} [options.context] The object that represents `this` in the callback. Defaults to the object firing the event.\n\t */\n\tlistenTo( emitter, event, callback, options ) {\n\t\tlet emitterInfo, eventCallbacks;\n\n\t\t// _listeningTo contains a list of emitters that this object is listening to.\n\t\t// This list has the following format:\n\t\t//\n\t\t// _listeningTo: {\n\t\t//     emitterId: {\n\t\t//         emitter: emitter,\n\t\t//         callbacks: {\n\t\t//             event1: [ callback1, callback2, ... ]\n\t\t//             ....\n\t\t//         }\n\t\t//     },\n\t\t//     ...\n\t\t// }\n\n\t\tif ( !this[ _listeningTo ] ) {\n\t\t\tthis[ _listeningTo ] = {};\n\t\t}\n\n\t\tconst emitters = this[ _listeningTo ];\n\n\t\tif ( !_getEmitterId( emitter ) ) {\n\t\t\t_setEmitterId( emitter );\n\t\t}\n\n\t\tconst emitterId = _getEmitterId( emitter );\n\n\t\tif ( !( emitterInfo = emitters[ emitterId ] ) ) {\n\t\t\temitterInfo = emitters[ emitterId ] = {\n\t\t\t\temitter,\n\t\t\t\tcallbacks: {}\n\t\t\t};\n\t\t}\n\n\t\tif ( !( eventCallbacks = emitterInfo.callbacks[ event ] ) ) {\n\t\t\teventCallbacks = emitterInfo.callbacks[ event ] = [];\n\t\t}\n\n\t\teventCallbacks.push( callback );\n\n\t\t// Finally register the callback to the event.\n\t\temitter.on( event, callback, options );\n\t},\n\n\t/**\n\t * Stops listening for events. It can be used at different levels:\n\t *\n\t * * To stop listening to a specific callback.\n\t * * To stop listening to a specific event.\n\t * * To stop listening to all events fired by a specific object.\n\t * * To stop listening to all events fired by all object.\n\t *\n\t * @method #stopListening\n\t * @param {module:utils/emittermixin~Emitter} [emitter] The object to stop listening to. If omitted, stops it for all objects.\n\t * @param {String} [event] (Requires the `emitter`) The name of the event to stop listening to. If omitted, stops it\n\t * for all events from `emitter`.\n\t * @param {Function} [callback] (Requires the `event`) The function to be removed from the call list for the given\n\t * `event`.\n\t */\n\tstopListening( emitter, event, callback ) {\n\t\tconst emitters = this[ _listeningTo ];\n\t\tlet emitterId = emitter && _getEmitterId( emitter );\n\t\tconst emitterInfo = emitters && emitterId && emitters[ emitterId ];\n\t\tconst eventCallbacks = emitterInfo && event && emitterInfo.callbacks[ event ];\n\n\t\t// Stop if nothing has been listened.\n\t\tif ( !emitters || ( emitter && !emitterInfo ) || ( event && !eventCallbacks ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// All params provided. off() that single callback.\n\t\tif ( callback ) {\n\t\t\temitter.off( event, callback );\n\t\t}\n\t\t// Only `emitter` and `event` provided. off() all callbacks for that event.\n\t\telse if ( eventCallbacks ) {\n\t\t\twhile ( ( callback = eventCallbacks.pop() ) ) {\n\t\t\t\temitter.off( event, callback );\n\t\t\t}\n\t\t\tdelete emitterInfo.callbacks[ event ];\n\t\t}\n\t\t// Only `emitter` provided. off() all events for that emitter.\n\t\telse if ( emitterInfo ) {\n\t\t\tfor ( event in emitterInfo.callbacks ) {\n\t\t\t\tthis.stopListening( emitter, event );\n\t\t\t}\n\t\t\tdelete emitters[ emitterId ];\n\t\t}\n\t\t// No params provided. off() all emitters.\n\t\telse {\n\t\t\tfor ( emitterId in emitters ) {\n\t\t\t\tthis.stopListening( emitters[ emitterId ].emitter );\n\t\t\t}\n\t\t\tdelete this[ _listeningTo ];\n\t\t}\n\t},\n\n\t/**\n\t * Fires an event, executing all callbacks registered for it.\n\t *\n\t * The first parameter passed to callbacks is an {@link module:utils/eventinfo~EventInfo} object,\n\t * followed by the optional `args` provided in the `fire()` method call.\n\t *\n\t * @method #fire\n\t * @param {String|module:utils/eventinfo~EventInfo} eventOrInfo The name of the event or `EventInfo` object if event is delegated.\n\t * @param {...*} [args] Additional arguments to be passed to the callbacks.\n\t */\n\tfire( eventOrInfo, ...args ) {\n\t\tconst eventInfo = eventOrInfo instanceof EventInfo ? eventOrInfo : new EventInfo( this, eventOrInfo );\n\t\tconst event = eventInfo.name;\n\t\tlet callbacks = getCallbacksForEvent( this, event );\n\n\t\t// Record that the event passed this emitter on its path.\n\t\teventInfo.path.push( this );\n\n\t\t// Handle event listener callbacks first.\n\t\tif ( callbacks ) {\n\t\t\t// Arguments passed to each callback.\n\t\t\tconst callbackArgs = [ eventInfo, ...args ];\n\n\t\t\t// Copying callbacks array is the easiest and most secure way of preventing infinite loops, when event callbacks\n\t\t\t// are added while processing other callbacks. Previous solution involved adding counters (unique ids) but\n\t\t\t// failed if callbacks were added to the queue before currently processed callback.\n\t\t\t// If this proves to be too inefficient, another method is to change `.on()` so callbacks are stored if same\n\t\t\t// event is currently processed. Then, `.fire()` at the end, would have to add all stored events.\n\t\t\tcallbacks = Array.from( callbacks );\n\n\t\t\tfor ( let i = 0; i < callbacks.length; i++ ) {\n\t\t\t\tcallbacks[ i ].callback.apply( callbacks[ i ].context, callbackArgs );\n\n\t\t\t\t// Remove the callback from future requests if off() has been called.\n\t\t\t\tif ( eventInfo.off.called ) {\n\t\t\t\t\t// Remove the called mark for the next calls.\n\t\t\t\t\tdelete eventInfo.off.called;\n\n\t\t\t\t\tthis.off( event, callbacks[ i ].callback, callbacks[ i ].context );\n\t\t\t\t}\n\n\t\t\t\t// Do not execute next callbacks if stop() was called.\n\t\t\t\tif ( eventInfo.stop.called ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Delegate event to other emitters if needed.\n\t\tif ( this._delegations ) {\n\t\t\tconst destinations = this._delegations.get( event );\n\t\t\tconst passAllDestinations = this._delegations.get( '*' );\n\n\t\t\tif ( destinations ) {\n\t\t\t\tfireDelegatedEvents( destinations, eventInfo, args );\n\t\t\t}\n\n\t\t\tif ( passAllDestinations ) {\n\t\t\t\tfireDelegatedEvents( passAllDestinations, eventInfo, args );\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Delegates selected events to another {@link module:utils/emittermixin~Emitter}. For instance:\n\t *\n\t *\t\temitterA.delegate( 'eventX' ).to( emitterB );\n\t *\t\temitterA.delegate( 'eventX', 'eventY' ).to( emitterC );\n\t *\n\t * then `eventX` is delegated (fired by) `emitterB` and `emitterC` along with `data`:\n\t *\n\t *\t\temitterA.fire( 'eventX', data );\n\t *\n\t * and `eventY` is delegated (fired by) `emitterC` along with `data`:\n\t *\n\t *\t\temitterA.fire( 'eventY', data );\n\t *\n\t * @method #delegate\n\t * @param {...String} events Event names that will be delegated to another emitter.\n\t * @returns {module:utils/emittermixin~EmitterMixinDelegateChain}\n\t */\n\tdelegate( ...events ) {\n\t\treturn {\n\t\t\tto: ( emitter, nameOrFunction ) => {\n\t\t\t\tif ( !this._delegations ) {\n\t\t\t\t\tthis._delegations = new Map();\n\t\t\t\t}\n\n\t\t\t\tfor ( const eventName of events ) {\n\t\t\t\t\tconst destinations = this._delegations.get( eventName );\n\n\t\t\t\t\tif ( !destinations ) {\n\t\t\t\t\t\tthis._delegations.set( eventName, new Map( [ [ emitter, nameOrFunction ] ] ) );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestinations.set( emitter, nameOrFunction );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t},\n\n\t/**\n\t * Stops delegating events. It can be used at different levels:\n\t *\n\t * * To stop delegating all events.\n\t * * To stop delegating a specific event to all emitters.\n\t * * To stop delegating a specific event to a specific emitter.\n\t *\n\t * @method #stopDelegating\n\t * @param {String} [event] The name of the event to stop delegating. If omitted, stops it all delegations.\n\t * @param {module:utils/emittermixin~Emitter} [emitter] (requires `event`) The object to stop delegating a particular event to.\n\t * If omitted, stops delegation of `event` to all emitters.\n\t */\n\tstopDelegating( event, emitter ) {\n\t\tif ( !this._delegations ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !event ) {\n\t\t\tthis._delegations.clear();\n\t\t} else if ( !emitter ) {\n\t\t\tthis._delegations.delete( event );\n\t\t} else {\n\t\t\tconst destinations = this._delegations.get( event );\n\n\t\t\tif ( destinations ) {\n\t\t\t\tdestinations.delete( emitter );\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport default EmitterMixin;\n\n/**\n * Checks if `listeningEmitter` listens to an emitter with given `listenedToEmitterId` and if so, returns that emitter.\n * If not, returns `null`.\n *\n * @protected\n * @param {module:utils/emittermixin~EmitterMixin} listeningEmitter Emitter that listens.\n * @param {String} listenedToEmitterId Unique emitter id of emitter listened to.\n * @returns {module:utils/emittermixin~EmitterMixin|null}\n */\nexport function _getEmitterListenedTo( listeningEmitter, listenedToEmitterId ) {\n\tif ( listeningEmitter[ _listeningTo ] && listeningEmitter[ _listeningTo ][ listenedToEmitterId ] ) {\n\t\treturn listeningEmitter[ _listeningTo ][ listenedToEmitterId ].emitter;\n\t}\n\n\treturn null;\n}\n\n/**\n * Sets emitter's unique id.\n *\n * **Note:** `_emitterId` can be set only once.\n *\n * @protected\n * @param {module:utils/emittermixin~EmitterMixin} emitter Emitter for which id will be set.\n * @param {String} [id] Unique id to set. If not passed, random unique id will be set.\n */\nexport function _setEmitterId( emitter, id ) {\n\tif ( !emitter[ _emitterId ] ) {\n\t\temitter[ _emitterId ] = id || uid();\n\t}\n}\n\n/**\n * Returns emitter's unique id.\n *\n * @protected\n * @param {module:utils/emittermixin~EmitterMixin} emitter Emitter which id will be returned.\n */\nexport function _getEmitterId( emitter ) {\n\treturn emitter[ _emitterId ];\n}\n\n// Gets the internal `_events` property of the given object.\n// `_events` property store all lists with callbacks for registered event names.\n// If there were no events registered on the object, empty `_events` object is created.\nfunction getEvents( source ) {\n\tif ( !source._events ) {\n\t\tObject.defineProperty( source, '_events', {\n\t\t\tvalue: {}\n\t\t} );\n\t}\n\n\treturn source._events;\n}\n\n// Creates event node for generic-specific events relation architecture.\nfunction makeEventNode() {\n\treturn {\n\t\tcallbacks: [],\n\t\tchildEvents: []\n\t};\n}\n\n// Creates an architecture for generic-specific events relation.\n// If needed, creates all events for given eventName, i.e. if the first registered event\n// is foo:bar:abc, it will create foo:bar:abc, foo:bar and foo event and tie them together.\n// It also copies callbacks from more generic events to more specific events when\n// specific events are created.\nfunction createEventNamespace( source, eventName ) {\n\tconst events = getEvents( source );\n\n\t// First, check if the event we want to add to the structure already exists.\n\tif ( events[ eventName ] ) {\n\t\t// If it exists, we don't have to do anything.\n\t\treturn;\n\t}\n\n\t// In other case, we have to create the structure for the event.\n\t// Note, that we might need to create intermediate events too.\n\t// I.e. if foo:bar:abc is being registered and we only have foo in the structure,\n\t// we need to also register foo:bar.\n\n\t// Currently processed event name.\n\tlet name = eventName;\n\t// Name of the event that is a child event for currently processed event.\n\tlet childEventName = null;\n\n\t// Array containing all newly created specific events.\n\tconst newEventNodes = [];\n\n\t// While loop can't check for ':' index because we have to handle generic events too.\n\t// In each loop, we truncate event name, going from the most specific name to the generic one.\n\t// I.e. foo:bar:abc -> foo:bar -> foo.\n\twhile ( name !== '' ) {\n\t\tif ( events[ name ] ) {\n\t\t\t// If the currently processed event name is already registered, we can be sure\n\t\t\t// that it already has all the structure created, so we can break the loop here\n\t\t\t// as no more events need to be registered.\n\t\t\tbreak;\n\t\t}\n\n\t\t// If this event is not yet registered, create a new object for it.\n\t\tevents[ name ] = makeEventNode();\n\t\t// Add it to the array with newly created events.\n\t\tnewEventNodes.push( events[ name ] );\n\n\t\t// Add previously processed event name as a child of this event.\n\t\tif ( childEventName ) {\n\t\t\tevents[ name ].childEvents.push( childEventName );\n\t\t}\n\n\t\tchildEventName = name;\n\t\t// If `.lastIndexOf()` returns -1, `.substr()` will return '' which will break the loop.\n\t\tname = name.substr( 0, name.lastIndexOf( ':' ) );\n\t}\n\n\tif ( name !== '' ) {\n\t\t// If name is not empty, we found an already registered event that was a parent of the\n\t\t// event we wanted to register.\n\n\t\t// Copy that event's callbacks to newly registered events.\n\t\tfor ( const node of newEventNodes ) {\n\t\t\tnode.callbacks = events[ name ].callbacks.slice();\n\t\t}\n\n\t\t// Add last newly created event to the already registered event.\n\t\tevents[ name ].childEvents.push( childEventName );\n\t}\n}\n\n// Gets an array containing callbacks list for a given event and it's more specific events.\n// I.e. if given event is foo:bar and there is also foo:bar:abc event registered, this will\n// return callback list of foo:bar and foo:bar:abc (but not foo).\n// Returns empty array if given event has not been yet registered.\nfunction getCallbacksListsForNamespace( source, eventName ) {\n\tconst eventNode = getEvents( source )[ eventName ];\n\n\tif ( !eventNode ) {\n\t\treturn [];\n\t}\n\n\tlet callbacksLists = [ eventNode.callbacks ];\n\n\tfor ( let i = 0; i < eventNode.childEvents.length; i++ ) {\n\t\tconst childCallbacksLists = getCallbacksListsForNamespace( source, eventNode.childEvents[ i ] );\n\n\t\tcallbacksLists = callbacksLists.concat( childCallbacksLists );\n\t}\n\n\treturn callbacksLists;\n}\n\n// Get the list of callbacks for a given event, but only if there any callbacks have been registered.\n// If there are no callbacks registered for given event, it checks if this is a specific event and looks\n// for callbacks for it's more generic version.\nfunction getCallbacksForEvent( source, eventName ) {\n\tlet event;\n\n\tif ( !source._events || !( event = source._events[ eventName ] ) || !event.callbacks.length ) {\n\t\t// There are no callbacks registered for specified eventName.\n\t\t// But this could be a specific-type event that is in a namespace.\n\t\tif ( eventName.indexOf( ':' ) > -1 ) {\n\t\t\t// If the eventName is specific, try to find callback lists for more generic event.\n\t\t\treturn getCallbacksForEvent( source, eventName.substr( 0, eventName.lastIndexOf( ':' ) ) );\n\t\t} else {\n\t\t\t// If this is a top-level generic event, return null;\n\t\t\treturn null;\n\t\t}\n\t}\n\n\treturn event.callbacks;\n}\n\n// Fires delegated events for given map of destinations.\n//\n// @private\n// * @param {Map.<utils.Emitter>} destinations A map containing `[ {@link utils.Emitter}, \"event name\" ]` pair destinations.\n// * @param {utils.EventInfo} eventInfo The original event info object.\n// * @param {Array.<*>} fireArgs Arguments the original event was fired with.\nfunction fireDelegatedEvents( destinations, eventInfo, fireArgs ) {\n\tfor ( let [ emitter, name ] of destinations ) {\n\t\tif ( !name ) {\n\t\t\tname = eventInfo.name;\n\t\t} else if ( typeof name == 'function' ) {\n\t\t\tname = name( eventInfo.name );\n\t\t}\n\n\t\tconst delegatedInfo = new EventInfo( eventInfo.source, name );\n\n\t\tdelegatedInfo.path = [ ...eventInfo.path ];\n\n\t\temitter.fire( delegatedInfo, ...fireArgs );\n\t}\n}\n\n/**\n * Interface representing classes which mix in {@link module:utils/emittermixin~EmitterMixin}.\n *\n * @interface Emitter\n */\n\n/**\n * The return value of {@link ~EmitterMixin#delegate}.\n *\n * @interface module:utils/emittermixin~EmitterMixinDelegateChain\n */\n\n/**\n * Selects destination for {@link module:utils/emittermixin~EmitterMixin#delegate} events.\n *\n * @method #to\n * @param {module:utils/emittermixin~Emitter} emitter An `EmitterMixin` instance which is the destination for delegated events.\n * @param {String|Function} nameOrFunction A custom event name or function which converts the original name string.\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/emittermixin.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/view\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport ViewCollection from './viewcollection';\nimport Template from './template';\nimport DomEmmiterMixin from '@ckeditor/ckeditor5-utils/src/dom/emittermixin';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\n\n/**\n * Basic View class.\n *\n *\t\tclass SampleView extends View {\n *\t\t\tconstructor( locale ) {\n *\t\t\t\tsuper( locale );\n *\n *\t\t\t\tthis.template = new Template( {\n *\t\t\t\t\ttag: 'p',\n *\t\t\t\t\tchildren: [\n *\t\t\t\t\t\t'Hello',\n *\t\t\t\t\t\t{\n *\t\t\t\t\t\t\ttag: 'b',\n *\t\t\t\t\t\t\tchildren: [\n *\t\t\t\t\t\t\t\t'world!'\n *\t\t\t\t\t\t\t]\n *\t\t\t\t\t\t}\n *\t\t\t\t\t],\n *\t\t\t\t\tattributes: {\n *\t\t\t\t\t\tclass: 'foo'\n *\t\t\t\t\t}\n *\t\t\t\t} );\n *\t\t\t}\n *\t\t}\n *\n *\t\tconst view = new SampleView( locale );\n *\n *\t\tview.init().then( () => {\n *\t\t\t// Will append <p class=\"foo\">Hello<b>world</b></p>\n *\t\t\tdocument.body.appendChild( view.element );\n *\t\t} );\n *\n * @mixes module:utils/dom/emittermixin~EmmiterMixin\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class View {\n\t/**\n\t * Creates an instance of the {@link module:ui/view~View} class.\n\t *\n\t * @param {module:utils/locale~Locale} [locale] The {@link module:core/editor/editor~Editor editor's locale} instance.\n\t */\n\tconstructor( locale ) {\n\t\t/**\n\t\t * A set of tools to localize the user interface. See {@link module:core/editor/editor~Editor}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/locale~Locale}\n\t\t */\n\t\tthis.locale = locale;\n\n\t\t/**\n\t\t * Shorthand for {@link module:utils/locale~Locale#t}.\n\t\t *\n\t\t * Note: If locale instance hasn't been passed to the view this method may not be available.\n\t\t *\n\t\t * @see module:utils/locale~Locale#t\n\t\t * @method\n\t\t */\n\t\tthis.t = locale && locale.t;\n\n\t\t/**\n\t\t * Set `true` after {@link #init}, which can be asynchronous.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #ready\n\t\t */\n\t\tthis.set( 'ready', false );\n\n\t\t/**\n\t\t * Collections registered with {@link #createCollection}.\n\t\t *\n\t\t * @protected\n\t\t * @member {Set.<module:ui/viewcollection~ViewCollection>}\n\t\t */\n\t\tthis._viewCollections = new Collection();\n\n\t\t/**\n\t\t * A collection of view instances, which have been added directly\n\t\t * into the {@link module:ui/template~Template#children}.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis._unboundChildren = this.createCollection();\n\n\t\t// Pass parent locale to its children.\n\t\tthis._viewCollections.on( 'add', ( evt, collection ) => {\n\t\t\tcollection.locale = locale;\n\t\t} );\n\n\t\t/**\n\t\t * Template of this view.\n\t\t *\n\t\t * @member {module:ui/template~Template} #template\n\t\t */\n\n\t\t/**\n\t\t * Element of this view.\n\t\t *\n\t\t * @private\n\t\t * @member {HTMLElement} #_element\n\t\t */\n\n\t\t/**\n\t\t * Cached {@link module:ui/template~Template} binder object specific for this instance.\n\t\t * See {@link #bindTemplate}.\n\t\t *\n\t\t * @private\n\t\t * @member {Object} #_bindTemplate\n\t\t */\n\t}\n\n\t/**\n\t * Element of this view. The element is rendered on first reference\n\t * using {@link #template} definition.\n\t *\n\t * @type {HTMLElement}\n\t */\n\tget element() {\n\t\tif ( this._element ) {\n\t\t\treturn this._element;\n\t\t}\n\n\t\t// No template means no element (a virtual view).\n\t\tif ( !this.template ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tthis._addTemplateChildren();\n\n\t\treturn ( this._element = this.template.render() );\n\t}\n\n\t/**\n\t * @type {HTMLElement}\n\t */\n\tset element( el ) {\n\t\tthis._element = el;\n\t}\n\n\t/**\n\t * Shorthand for {@link module:ui/template~Template.bind}, bound to {@link ~View} on the first access.\n\t *\n\t * Cached {@link module:ui/template~Template.bind} object is stored in {@link #_bindTemplate}.\n\t *\n\t * @method #bindTemplate\n\t */\n\tget bindTemplate() {\n\t\tif ( this._bindTemplate ) {\n\t\t\treturn this._bindTemplate;\n\t\t}\n\n\t\treturn ( this._bindTemplate = Template.bind( this, this ) );\n\t}\n\n\t/**\n\t * Creates a new collection of views, which can be used in this view instance,\n\t * e.g. as a member of {@link module:ui/template~TemplateDefinition TemplateDefinition} children.\n\t *\n\t *\t\tclass SampleView extends View {\n\t *\t\t\tconstructor( locale ) {\n\t *\t\t\t\tsuper( locale );\n\t *\n\t *\t\t\t\tthis.items = this.createCollection();\n \t *\n\t *\t\t\t\tthis.template = new Template( {\n\t *\t\t\t\t\ttag: 'p',\n\t *\n\t *\t\t\t\t\t// `items` collection will render here.\n\t *\t\t\t\t\tchildren: this.items\n\t *\t\t\t\t} );\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t *\t\tconst view = new SampleView( locale );\n\t *\t\tconst anotherView = new AnotherSampleView( locale );\n\t *\n\t *\t\tview.init().then( () => {\n\t *\t\t\t// Will append <p></p>\n\t *\t\t\tdocument.body.appendChild( view.element );\n\t *\n\t *\t\t\t// `anotherView` becomes a child of the view, which is reflected in DOM\n\t *\t\t\t// <p><anotherView#element></p>\n\t *\t\t\tview.items.add( anotherView );\n\t *\t\t} );\n\t *\n\t * @returns {module:ui/viewcollection~ViewCollection} A new collection of view instances.\n\t */\n\tcreateCollection() {\n\t\tconst collection = new ViewCollection();\n\n\t\tthis._viewCollections.add( collection );\n\n\t\treturn collection;\n\t}\n\n\t/**\n\t * Registers a new child view under this view instance. Once registered, a child\n\t * view is managed by its parent, including initialization ({@link #init})\n\t * and destruction ({@link #destroy}).\n\t *\n\t *\t\tclass SampleView extends View {\n\t *\t\t\tconstructor( locale ) {\n\t *\t\t\t\tsuper( locale );\n\t *\n\t *\t\t\t\tthis.childA = new SomeChildView( locale );\n\t *\t\t\t\tthis.childB = new SomeChildView( locale );\n\t *\n\t *\t\t\t\tthis.template = new Template( { tag: 'p' } );\n\t *\n\t *\t\t\t\t// Register children.\n\t *\t\t\t\tthis.addChildren( [ this.childA, this.childB ] );\n\t *\t\t\t}\n\t *\n\t *\t\t\tinit() {\n\t *\t\t\t\tthis.element.appendChild( this.childA.element );\n\t *\t\t\t\tthis.element.appendChild( this.childB.element );\n\t *\n\t *\t\t\t\treturn super.init();\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t *\t\tconst view = new SampleView( locale );\n\t *\n\t *\t\tview.init().then( () => {\n\t *\t\t\t// Will append <p><childA#element><b></b><childB#element></p>\n\t *\t\t\tdocument.body.appendChild( view.element );\n\t *\t\t} );\n\t *\n\t * **Note**: There's no need to add child views if they're used in the\n\t * {@link #template} explicitly:\n\t *\n\t *\t\tclass SampleView extends View {\n\t *\t\t\tconstructor( locale ) {\n\t *\t\t\t\tsuper( locale );\n\t *\n\t *\t\t\t\tthis.childA = new SomeChildView( locale );\n\t *\t\t\t\tthis.childB = new SomeChildView( locale );\n\t *\n\t *\t\t\t\tthis.template = new Template( {\n\t *\t\t\t\t\ttag: 'p',\n\t *\n \t *\t\t\t\t\t// These children will be added automatically. There's no\n \t *\t\t\t\t\t// need to call {@link #addChildren} for any of them.\n\t *\t\t\t\t\tchildren: [ this.childA, this.childB ]\n\t *\t\t\t\t} );\n\t *\t\t\t}\n\t *\n\t *\t\t\t...\n\t *\t\t}\n\t *\n\t * @param {module:ui/view~View|Iterable.<module:ui/view~View>} children Children views to be registered.\n\t * @returns {Promise}\n\t */\n\taddChildren( children ) {\n\t\tif ( !isIterable( children ) ) {\n\t\t\tchildren = [ children ];\n\t\t}\n\n\t\treturn Promise.all( children.map( c => this._unboundChildren.add( c ) ) );\n\t}\n\n\t/**\n\t * Initializes the view and child views located in {@link #_viewCollections}.\n\t *\n\t * @returns {Promise} A Promise resolved when the initialization process is finished.\n\t */\n\tinit() {\n\t\tif ( this.ready ) {\n\t\t\t/**\n\t\t\t * This View has already been initialized.\n\t\t\t *\n\t\t\t * @error ui-view-init-reinit\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'ui-view-init-reinit: This View has already been initialized.' );\n\t\t}\n\n\t\treturn Promise.resolve()\n\t\t\t// Initialize collections in #_viewCollections.\n\t\t\t.then( () => {\n\t\t\t\treturn Promise.all( this._viewCollections.map( c => c.init() ) );\n\t\t\t} )\n\t\t\t// Spread the word that this view is ready!\n\t\t\t.then( () => {\n\t\t\t\tthis.ready = true;\n\t\t\t} );\n\t}\n\n\t/**\n\t * Destroys the view instance and child views located in {@link #_viewCollections}.\n\t *\n\t * @returns {Promise} A Promise resolved when the destruction process is finished.\n\t */\n\tdestroy() {\n\t\tthis.stopListening();\n\n\t\treturn Promise.all( this._viewCollections.map( c => c.destroy() ) )\n\t\t\t.then( () => {\n\t\t\t\tthis._unboundChildren.clear();\n\t\t\t\tthis._viewCollections.clear();\n\n\t\t\t\tthis.element = this.template = this.locale = this.t =\n\t\t\t\t\tthis._viewCollections = this._unboundChildren = null;\n\t\t\t} );\n\t}\n\n\t/**\n\t * Recursively traverses {@link #template} in search of {@link module:ui/view~View}\n\t * instances and automatically registers them using {@link #addChildren} method.\n\t *\n\t * @protected\n\t */\n\t_addTemplateChildren() {\n\t\tconst search = def => {\n\t\t\tif ( def.children ) {\n\t\t\t\tfor ( const defOrView of def.children ) {\n\t\t\t\t\tif ( defOrView instanceof View ) {\n\t\t\t\t\t\tthis.addChildren( defOrView );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsearch( defOrView );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tsearch( this.template );\n\t}\n}\n\nmix( View, DomEmmiterMixin );\nmix( View, ObservableMixin );\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-ui/src/view.js","import baseMatches from './_baseMatches';\nimport baseMatchesProperty from './_baseMatchesProperty';\nimport identity from './identity';\nimport isArray from './isArray';\nimport property from './property';\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nexport default baseIteratee;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseIteratee.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module core/command/command\n */\n\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * The base class for CKEditor commands.\n *\n * Commands are main way to manipulate editor contents and state. They are mostly used by UI elements (or by other\n * commands) to make changes in Tree Model. Commands are available in every part of code that has access to\n * {@link module:core/editor/editor~Editor} instance, since they are registered in it and executed through\n * {@link module:core/editor/editor~Editor#execute}.\n * Commands instances are available through {@link module:core/editor/editor~Editor#commands}.\n *\n * This is an abstract base class for all commands.\n *\n * @mixes module:utils/observablemixin~ObservaleMixin\n */\nexport default class Command {\n\t/**\n\t * Creates a new Command instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor Editor on which this command will be used.\n\t */\n\tconstructor( editor ) {\n\t\t/**\n\t\t * Editor on which this command will be used.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/editor/editor~Editor} #editor\n\t\t */\n\t\tthis.editor = editor;\n\n\t\t/**\n\t\t * Flag indicating whether a command is enabled or disabled.\n\t\t * A disabled command should do nothing upon it's execution.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isEnabled\n\t\t */\n\t\tthis.set( 'isEnabled', true );\n\n\t\t// If schema checking function is specified, add it to the `refreshState` listeners.\n\t\t// Feature will be disabled if it does not apply to schema requirements.\n\t\tif ( this._checkEnabled ) {\n\t\t\tthis.on( 'refreshState', ( evt, data ) => {\n\t\t\t\tdata.isEnabled = this._checkEnabled();\n\t\t\t} );\n\t\t}\n\t}\n\n\tdestroy() {\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Fires `refreshState` event and checks it's resolve value to decide whether command should be enabled or not.\n\t * Other parts of code might listen to `refreshState` event on this command and add their callbacks. This\n\t * way the responsibility of deciding whether a command should be enabled is shared.\n\t *\n\t * @fires refreshState\n\t */\n\trefreshState() {\n\t\tconst data = { isEnabled: true };\n\t\tthis.fire( 'refreshState', data );\n\n\t\tthis.isEnabled = data.isEnabled;\n\t}\n\n\t/**\n\t * Executes the command if it is enabled.\n\t *\n\t * @protected\n\t * @param {*} param Parameter passed to {@link module:core/editor/editor~Editor#execute execute} method of this command.\n\t */\n\t_execute( param ) {\n\t\tif ( this.isEnabled ) {\n\t\t\tthis._doExecute( param );\n\t\t}\n\t}\n\n\t/**\n\t * Disables the command. This should be used only by the command itself. Other parts of code should add\n\t * listeners to `refreshState` event.\n\t *\n\t * @protected\n\t */\n\t_disable() {\n\t\tthis.on( 'refreshState', disableCallback );\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Enables the command (internally). This should be used only by the command itself. Command will be enabled if\n\t * other listeners does not return false on `refreshState` event callbacks. Firing {@link #_enable}\n\t * does not guarantee that {@link #isEnabled} will be set to true, as it depends on other listeners.\n\t *\n\t * @protected\n\t */\n\t_enable() {\n\t\tthis.off( 'refreshState', disableCallback );\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Executes command.\n\t * This is an abstract method that should be overwritten in child classes.\n\t *\n\t * @protected\n\t */\n\t_doExecute() {}\n\n\t/**\n\t * Checks if a command should be enabled according to its own rules. Mostly it will check schema to see if the command\n\t * is allowed to be executed in given position. This method can be defined in child class (but is not obligatory).\n\t * If it is defined, it will be added as a callback to `refreshState` event.\n\t *\n\t * @protected\n\t * @method #_checkEnabled\n\t * @returns {Boolean} `true` if command should be enabled according to\n\t * {@link module:engine/model/document~Document#schema}. `false` otherwise.\n\t */\n}\n\nfunction disableCallback( evt, data ) {\n\tdata.isEnabled = false;\n}\n\nmix( Command, ObservableMixin );\n\n/**\n * Fired whenever command has to have its {@link #isEnabled} property refreshed. Every feature,\n * command or other class which needs to disable command (set `isEnabled` to `false`) should listen to this\n * event.\n *\n * @event refreshState\n * @param {Object} data\n * @param {Boolean} [data.isEnabled=true]\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-core/src/command/command.js","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @type {Function}\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n *  else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/isArray.js","import isArrayLike from './isArrayLike';\nimport isObjectLike from './isObjectLike';\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nexport default isArrayLikeObject;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/isArrayLikeObject.js","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/isObject.js","import toFinite from './toFinite';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This function is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/toInteger.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/batch\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * `Batch` instance groups document changes ({@link module:engine/model/delta/delta~Delta deltas}). All deltas grouped in a single `Batch`\n * can be reverted together, so you can think about `Batch` as of a single undo step. If you want to extend given undo step you\n * can call another method on the same `Batch` object. If you want to create a separate undo step you can create a new `Batch`.\n *\n * For example to create two separate undo steps you can call:\n *\n *\t\tdoc.batch().insert( firstPosition, 'foo' );\n *\t\tdoc.batch().insert( secondPosition, 'bar' );\n *\n * To create a single undo step:\n *\n *\t\tconst batch = doc.batch();\n *\t\tbatch.insert( firstPosition, 'foo' );\n *\t\tbatch.insert( secondPosition, 'bar' );\n *\n * Note that all document modification methods (insert, remove, split, etc.) are chainable so you can shorten code to:\n *\n *\t\tdoc.batch().insert( firstPosition, 'foo' ).insert( secondPosition, 'bar' );\n */\nexport default class Batch {\n\t/**\n\t * Creates `Batch` instance. Not recommended to use directly, use {@link module:engine/model/document~Document#batch} instead.\n\t *\n\t * @param {module:engine/model/document~Document} document Document which this Batch changes.\n\t * @param {'transparent'|'default'} [type='default'] Type of the batch.\n\t */\n\tconstructor( document, type = 'default' ) {\n\t\t/**\n\t\t * Document which this batch changes.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/document~Document} module:engine/model/batch~Batch#document\n\t\t */\n\t\tthis.document = document;\n\n\t\t/**\n\t\t * Array of deltas which compose this batch.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Array.<module:engine/model/delta/delta~Delta>} module:engine/model/batch~Batch#deltas\n\t\t */\n\t\tthis.deltas = [];\n\n\t\t/**\n\t\t * Type of the batch.\n\t\t *\n\t\t * Can be one of the following values:\n\t\t * * `'default'` - all \"normal\" batches, most commonly used type.\n\t\t * * `'transparent'` - batch that should be ignored by other features, i.e. initial batch or collaborative editing changes.\n\t\t *\n\t\t * @readonly\n\t\t * @member {'transparent'|'default'} module:engine/model/batch~Batch#type\n\t\t */\n\t\tthis.type = type;\n\t}\n\n\t/**\n\t * Returns this batch base version, which is equal to the base version of first delta in the batch.\n\t * If there are no deltas in the batch, it returns `null`.\n\t *\n\t * @readonly\n\t * @type {Number|null}\n\t */\n\tget baseVersion() {\n\t\treturn this.deltas.length > 0 ? this.deltas[ 0 ].baseVersion : null;\n\t}\n\n\t/**\n\t * Adds delta to the batch instance. All modification methods (insert, remove, split, etc.) use this method\n\t * to add created deltas.\n\t *\n\t * @param {module:engine/model/delta/delta~Delta} delta Delta to add.\n\t * @return {module:engine/model/delta/delta~Delta} Added delta.\n\t */\n\taddDelta( delta ) {\n\t\tdelta.batch = this;\n\t\tthis.deltas.push( delta );\n\n\t\treturn delta;\n\t}\n\n\t/**\n\t * Gets an iterable collection of operations.\n\t *\n\t * @returns {Iterable.<module:engine/model/operation/operation~Operation>}\n\t */\n\t* getOperations() {\n\t\tfor ( const delta of this.deltas ) {\n\t\t\tyield* delta.operations;\n\t\t}\n\t}\n}\n\n/**\n * Function to register batch methods. To make code scalable `Batch` do not have modification\n * methods built in. They can be registered using this method.\n *\n * This method checks if there is no naming collision and throws `batch-register-taken` if the method name\n * is already taken.\n *\n * Besides that no magic happens here, the method is added to the `Batch` class prototype.\n *\n * For example:\n *\n *\t\tBatch.register( 'insert', function( position, nodes ) {\n *\t\t\t// You can use a class inheriting from `Delta` if that class should handle OT in a special way.\n *\t\t\tconst delta = new Delta();\n *\n *\t\t\t// Add delta to the Batch instance. It is important to add a delta to the batch before applying any operation.\n *\t\t\tthis.addDelta( delta );\n *\n *\t\t\t// Create operations which should be components of this delta.\n *\t\t\tconst operation = new InsertOperation( position, nodes, this.document.version );\n *\n *\t\t\t// Add operation to the delta. It is important to add operation before applying it.\n *\t\t\tdelta.addOperation( operation );\n *\n *\t\t\t// Remember to apply every operation, no magic, you need to do it manually.\n *\t\t\tthis.document.applyOperation( operation );\n *\n *\t\t\t// Make this method chainable.\n *\t\t\treturn this;\n *\t\t} );\n *\n * @method module:engine/model/batch~Batch.register\n * @param {String} name Method name.\n * @param {Function} creator Method body.\n */\nexport function register( name, creator ) {\n\tif ( Batch.prototype[ name ] ) {\n\t\t/**\n\t\t * This batch method name is already taken.\n\t\t *\n\t\t * @error batch-register-taken\n\t\t * @param {String} name\n\t\t */\n\t\tthrow new CKEditorError(\n\t\t\t'model-batch-register-taken: This batch method name is already taken.',\n\t\t\t{ name } );\n\t}\n\n\tBatch.prototype[ name ] = creator;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/batch.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/delta/deltafactory\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\nimport OperationFactory from '../operation/operationfactory';\n\nconst deserializers = new Map();\n\n/**\n * A factory class for creating operations.\n *\n * Delta is a single, from the user action point of view, change in the editable document, like insert, split or\n * rename element. Delta is composed of operations, which are unit changes needed to be done to execute user action.\n *\n * Multiple deltas are grouped into a single {@link module:engine/model/batch~Batch}.\n */\nexport default class DeltaFactory {\n\t/**\n\t * Creates InsertDelta from deserialized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json\n\t * @param {module:engine/model/document~Document} doc Document on which this delta will be applied.\n\t * @returns {module:engine/model/delta/insertdelta~InsertDelta}\n\t */\n\tstatic fromJSON( json, doc ) {\n\t\tif ( !deserializers.has( json.__className ) ) {\n\t\t\t/**\n\t\t\t * This delta has no defined deserializer.\n\t\t\t *\n\t\t\t * @error delta-fromjson-no-deserializer\n\t\t\t * @param {String} name\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'delta-fromjson-no-deserializer: This delta has no defined deserializer',\n\t\t\t\t{ name: json.__className }\n\t\t\t);\n\t\t}\n\n\t\tconst Delta = deserializers.get( json.__className );\n\n\t\tconst delta = new Delta();\n\n\t\tfor ( const operation of json.operations ) {\n\t\t\tdelta.addOperation( OperationFactory.fromJSON( operation, doc ) );\n\t\t}\n\n\t\t// Rewrite all other properties.\n\t\tfor ( const prop in json ) {\n\t\t\tif ( prop != '__className' && delta[ prop ] === undefined ) {\n\t\t\t\tdelta[ prop ] = json[ prop ];\n\t\t\t}\n\t\t}\n\n\t\treturn delta;\n\t}\n\n\t/**\n\t * Registers a class for delta factory.\n\t *\n\t * @param {Function} Delta A delta class to register.\n\t */\n\tstatic register( Delta ) {\n\t\tdeserializers.set( Delta.className, Delta );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/delta/deltafactory.js","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array ? array.length : 0;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/last.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/delta/delta\n */\n\nimport clone from '@ckeditor/ckeditor5-utils/src/lib/lodash/clone';\nimport DeltaFactory from './deltafactory';\n\n/**\n * Base class for all deltas.\n *\n * Delta is a single, from the user action point of view, change in the editable document, like insert, split or\n * rename element. Delta is composed of operations, which are unit changes needed to be done to execute user action.\n *\n * Multiple deltas are grouped into a single {@link module:engine/model/batch~Batch}.\n */\nexport default class Delta {\n\t/**\n\t * Creates a delta instance.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * {@link module:engine/model/batch~Batch} which delta is a part of. This property is null by default and set by the\n\t\t * {@link module:engine/model/batch~Batch#addDelta} method.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/batch~Batch} module:engine/model/delta/delta~Delta#batch\n\t\t */\n\t\tthis.batch = null;\n\n\t\t/**\n\t\t * Array of operations which compose delta.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/operation/operation~Operation[]} module:engine/model/delta/delta~Delta#operations\n\t\t */\n\t\tthis.operations = [];\n\t}\n\n\t/**\n\t * Returns delta base version which is equal to the base version of the first operation in delta. If there\n\t * are no operations in delta, returns `null`.\n\t *\n\t * @see module:engine/model/document~Document\n\t * @type {Number|null}\n\t */\n\tget baseVersion() {\n\t\tif ( this.operations.length > 0 ) {\n\t\t\treturn this.operations[ 0 ].baseVersion;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * @param {Number} baseVersion\n\t */\n\tset baseVersion( baseVersion ) {\n\t\tfor ( const operation of this.operations ) {\n\t\t\toperation.baseVersion = baseVersion++;\n\t\t}\n\t}\n\n\t/**\n\t * A class that will be used when creating reversed delta.\n\t *\n\t * @private\n\t * @type {Function}\n\t */\n\tget _reverseDeltaClass() {\n\t\treturn Delta;\n\t}\n\n\t/**\n\t * Delta type.\n\t *\n\t * @readonly\n\t * @member {String} #type\n\t */\n\n\t/**\n\t * Add operation to the delta.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} operation Operation instance.\n\t */\n\taddOperation( operation ) {\n\t\toperation.delta = this;\n\t\tthis.operations.push( operation );\n\n\t\treturn operation;\n\t}\n\n\t/**\n\t * Creates and returns a delta that has the same parameters as this delta.\n\t *\n\t * @returns {module:engine/model/delta/delta~Delta} Clone of this delta.\n\t */\n\tclone() {\n\t\tconst delta = new this.constructor();\n\n\t\tfor ( const op of this.operations ) {\n\t\t\tdelta.addOperation( op.clone() );\n\t\t}\n\n\t\treturn delta;\n\t}\n\n\t/**\n\t * Creates and returns a reverse delta. Reverse delta when executed right after the original delta will bring back\n\t * tree model state to the point before the original delta execution. In other words, it reverses changes done\n\t * by the original delta.\n\t *\n\t * Keep in mind that tree model state may change since executing the original delta, so reverse delta may be \"outdated\".\n\t * In that case you will need to {@link module:engine/model/delta/transform~transform} it by all deltas that were executed after\n\t * the original delta.\n\t *\n\t * @returns {module:engine/model/delta/delta~Delta} Reversed delta.\n\t */\n\tgetReversed() {\n\t\tconst delta = new this._reverseDeltaClass();\n\n\t\tfor ( const op of this.operations ) {\n\t\t\tdelta.addOperation( op.getReversed() );\n\t\t}\n\n\t\tdelta.operations.reverse();\n\n\t\tfor ( let i = 0; i < delta.operations.length; i++ ) {\n\t\t\tdelta.operations[ i ].baseVersion = this.operations[ this.operations.length - 1 ].baseVersion + i + 1;\n\t\t}\n\n\t\treturn delta;\n\t}\n\n\t/**\n\t * Custom toJSON method to make deltas serializable.\n\t *\n\t * @returns {Object} Clone of this delta with added class name.\n\t */\n\ttoJSON() {\n\t\tconst json = clone( this );\n\n\t\tjson.__className = this.constructor.className;\n\n\t\t// Remove parent batch to avoid circular dependencies.\n\t\tdelete json.batch;\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * Delta class name. Used by {@link #toJSON} method for serialization and\n\t * {@link module:engine/model/delta/deltafactory~DeltaFactory.fromJSON} during deserialization.\n\t *\n\t * @type {String}\n\t * @readonly\n\t */\n\tstatic get className() {\n\t\treturn 'engine.model.delta.Delta';\n\t}\n\n\t/**\n\t * Delta priority. Used in {@link module:engine/model/delta/transform~transform delta transformations}. Delta with the higher\n\t * priority will be treated as more important when resolving transformation conflicts. If deltas have same\n\t * priority, other factors will be used to determine which delta is more important.\n\t *\n\t * @private\n\t * @type {Number}\n\t */\n\tstatic get _priority() {\n\t\treturn 0;\n\t}\n}\n\nDeltaFactory.register( Delta );\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/delta/delta.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/writer\n */\n\nimport Node from './node';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport Range from './range';\nimport DocumentFragment from './documentfragment';\nimport NodeList from './nodelist';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Contains functions used for composing model tree, grouped together under \"model writer\" name. Those functions\n * are built on top of {@link module:engine/model/node~Node node}, and it's child classes', APIs.\n *\n * Model writer API has multiple advantages and it is highly recommended to use it when changing model tree and nodes:\n * * model writer API {@link module:engine/model/writer~writer.normalizeNodes normalizes inserted nodes}, which means that you can insert\n * not only {@link module:engine/model/node~Node nodes}, but also `String`s, {@link module:engine/model/textproxy~TextProxy text proxies}\n * and\n * {@link module:engine/model/documentfragment~DocumentFragment document fragments},\n * * model writer API operates on {@link module:engine/model/position~Position positions}, which means that you have\n * better control over manipulating model tree as positions operate on offsets rather than indexes,\n * * model writer API automatically merges {@link module:engine/model/text~Text text nodes} with same attributes, which means\n * lower memory usage and better efficiency.\n *\n * @namespace writer\n */\nconst writer = {\n\tinsert,\n\tremove,\n\tmove,\n\tsetAttribute,\n\tremoveAttribute,\n\tnormalizeNodes\n};\n\nexport default writer;\n\n/**\n * Inserts given nodes at given position.\n *\n * @function module:engine/model/writer~writer.insert\n * @param {module:engine/model/position~Position} position Position at which nodes should be inserted.\n * @param {module:engine/model/node~NodeSet} nodes Nodes to insert.\n * @returns {module:engine/model/range~Range} Range spanning over inserted elements.\n */\nexport function insert( position, nodes ) {\n\tnodes = normalizeNodes( nodes );\n\n\t// We have to count offset before inserting nodes because they can get merged and we would get wrong offsets.\n\tconst offset = nodes.reduce( ( sum, node ) => sum + node.offsetSize, 0 );\n\tconst parent = position.parent;\n\n\t// Insertion might be in a text node, we should split it if that's the case.\n\t_splitNodeAtPosition( position );\n\tconst index = position.index;\n\n\t// Insert nodes at given index. After splitting we have a proper index and insertion is between nodes,\n\t// using basic `Element` API.\n\tparent.insertChildren( index, nodes );\n\n\t// Merge text nodes, if possible. Merging is needed only at points where inserted nodes \"touch\" \"old\" nodes.\n\t_mergeNodesAtIndex( parent, index + nodes.length );\n\t_mergeNodesAtIndex( parent, index );\n\n\treturn new Range( position, position.getShiftedBy( offset ) );\n}\n\n/**\n * Removed nodes in given range. Only {@link module:engine/model/range~Range#isFlat flat} ranges are accepted.\n *\n * @function module:engine/model/writer~writer.remove\n * @param {module:engine/model/range~Range} range Range containing nodes to remove.\n * @returns {Array.<module:engine/model/node~Node>}\n */\nexport function remove( range ) {\n\tif ( !range.isFlat ) {\n\t\t/**\n\t\t * Trying to remove a range that starts and ends in different element.\n\t\t *\n\t\t * @error model-writer-remove-range-not-flat\n\t\t */\n\t\tthrow new CKEditorError( 'model-writer-remove-range-not-flat: ' +\n\t\t\t'Trying to remove a range that starts and ends in different element.' );\n\t}\n\n\tconst parent = range.start.parent;\n\n\t// Range may be inside text nodes, we have to split them if that's the case.\n\t_splitNodeAtPosition( range.start );\n\t_splitNodeAtPosition( range.end );\n\n\t// Remove the text nodes using basic `Element` API.\n\tconst removed = parent.removeChildren( range.start.index, range.end.index - range.start.index );\n\n\t// Merge text nodes, if possible. After some nodes were removed, node before and after removed range will be\n\t// touching at the position equal to the removed range beginning. We check merging possibility there.\n\t_mergeNodesAtIndex( parent, range.start.index );\n\n\treturn removed;\n}\n\n/**\n * Moves nodes in given range to given target position. Only {@link module:engine/model/range~Range#isFlat flat} ranges are accepted.\n *\n * @param {module:engine/model/range~Range} sourceRange Range containing nodes to move.\n * @param {module:engine/model/position~Position} targetPosition Position to which nodes should be moved.\n * @returns {module:engine/model/range~Range} Range containing moved nodes.\n */\nexport function move( sourceRange, targetPosition ) {\n\tif ( !sourceRange.isFlat ) {\n\t\t/**\n\t\t * Trying to move a range that starts and ends in different element.\n\t\t *\n\t\t * @error model-writer-move-range-not-flat\n\t\t */\n\t\tthrow new CKEditorError( 'model-writer-move-range-not-flat: ' +\n\t\t\t'Trying to move a range that starts and ends in different element.' );\n\t}\n\n\tconst nodes = this.remove( sourceRange );\n\n\t// We have to fix `targetPosition` because model changed after nodes from `sourceRange` got removed and\n\t// that change might have an impact on `targetPosition`.\n\ttargetPosition = targetPosition._getTransformedByDeletion( sourceRange.start, sourceRange.end.offset - sourceRange.start.offset );\n\n\treturn this.insert( targetPosition, nodes );\n}\n\n/**\n * Sets given attribute on nodes in given range.\n *\n * @param {module:engine/model/range~Range} range Range containing nodes that should have the attribute set.\n * @param {String} key Key of attribute to set.\n * @param {*} value Attribute value.\n */\nexport function setAttribute( range, key, value ) {\n\t// Range might start or end in text nodes, so we have to split them.\n\t_splitNodeAtPosition( range.start );\n\t_splitNodeAtPosition( range.end );\n\n\t// Iterate over all items in the range.\n\tfor ( const item of range.getItems() ) {\n\t\t// Iterator will return `TextProxy` instances but we know that those text proxies will\n\t\t// always represent full text nodes (this is guaranteed thanks to splitting we did before).\n\t\t// So, we can operate on those text proxies' text nodes.\n\t\tconst node = item.is( 'textProxy' ) ? item.textNode : item;\n\n\t\tif ( value !== null ) {\n\t\t\tnode.setAttribute( key, value );\n\t\t} else {\n\t\t\tnode.removeAttribute( key );\n\t\t}\n\n\t\t// After attributes changing it may happen that some text nodes can be merged. Try to merge with previous node.\n\t\t_mergeNodesAtIndex( node.parent, node.index );\n\t}\n\n\t// Try to merge last changed node with it's previous sibling (not covered by the loop above).\n\t_mergeNodesAtIndex( range.end.parent, range.end.index );\n}\n\n/**\n * Removes given attribute from nodes in given range.\n *\n * @param {module:engine/model/range~Range} range Range containing nodes that should have the attribute removed.\n * @param {String} key Key of attribute to remove.\n */\nexport function removeAttribute( range, key ) {\n\tthis.setAttribute( range, key, null );\n}\n\n/**\n * Normalizes given object or an array of objects to an array of {@link module:engine/model/node~Node nodes}. See\n * {@link module:engine/model/node~NodeSet NodeSet} for details on how normalization is performed.\n *\n * @param {module:engine/model/node~NodeSet} nodes Objects to normalize.\n * @returns {Array.<module:engine/model/node~Node>} Normalized nodes.\n */\nexport function normalizeNodes( nodes ) {\n\tconst normalized = [];\n\n\tif ( !( nodes instanceof Array ) ) {\n\t\tnodes = [ nodes ];\n\t}\n\n\t// Convert instances of classes other than Node.\n\tfor ( let i = 0; i < nodes.length; i++ ) {\n\t\tif ( typeof nodes[ i ] == 'string' ) {\n\t\t\tnormalized.push( new Text( nodes[ i ] ) );\n\t\t} else if ( nodes[ i ] instanceof TextProxy ) {\n\t\t\tnormalized.push( new Text( nodes[ i ].data, nodes[ i ].getAttributes() ) );\n\t\t} else if ( nodes[ i ] instanceof DocumentFragment || nodes[ i ] instanceof NodeList ) {\n\t\t\tfor ( const child of nodes[ i ] ) {\n\t\t\t\tnormalized.push( child );\n\t\t\t}\n\t\t} else if ( nodes[ i ] instanceof Node ) {\n\t\t\tnormalized.push( nodes[ i ] );\n\t\t}\n\t\t// Skip unrecognized type.\n\t}\n\n\t// Merge text nodes.\n\tfor ( let i = 1; i < normalized.length; i++ ) {\n\t\tconst node = normalized[ i ];\n\t\tconst prev = normalized[ i - 1 ];\n\n\t\tif ( node instanceof Text && prev instanceof Text && _haveSameAttributes( node, prev ) ) {\n\t\t\t// Doing this instead changing prev.data because .data is readonly.\n\t\t\tnormalized.splice( i - 1, 2, new Text( prev.data + node.data, prev.getAttributes() ) );\n\t\t\ti--;\n\t\t}\n\t}\n\n\treturn normalized;\n}\n\n/**\n * Checks if nodes before and after given index in given element are {@link module:engine/model/text~Text text nodes} and\n * merges them into one node if they have same attributes.\n *\n * Merging is done by removing two text nodes and inserting a new text node containing data from both merged text nodes.\n *\n * @ignore\n * @private\n * @param {module:engine/model/element~Element} element Parent element of nodes to merge.\n * @param {Number} index Index between nodes to merge.\n */\nfunction _mergeNodesAtIndex( element, index ) {\n\tconst nodeBefore = element.getChild( index - 1 );\n\tconst nodeAfter = element.getChild( index );\n\n\t// Check if both of those nodes are text objects with same attributes.\n\tif ( nodeBefore && nodeAfter && nodeBefore.is( 'text' ) && nodeAfter.is( 'text' ) && _haveSameAttributes( nodeBefore, nodeAfter ) ) {\n\t\t// Append text of text node after index to the before one.\n\t\tconst mergedNode = new Text( nodeBefore.data + nodeAfter.data, nodeBefore.getAttributes() );\n\n\t\t// Remove separate text nodes.\n\t\telement.removeChildren( index - 1, 2 );\n\n\t\t// Insert merged text node.\n\t\telement.insertChildren( index - 1, mergedNode );\n\t}\n}\n\n/**\n * Checks if given position is in a text node, and if so, splits the text node in two text nodes, each of them\n * containing a part of original text node.\n *\n * @ignore\n * @private\n * @param {module:engine/model/position~Position} position Position at which node should be split.\n */\nfunction _splitNodeAtPosition( position ) {\n\tconst textNode = position.textNode;\n\tconst element = position.parent;\n\n\tif ( textNode ) {\n\t\tconst offsetDiff = position.offset - textNode.startOffset;\n\t\tconst index = textNode.index;\n\n\t\telement.removeChildren( index, 1 );\n\n\t\tconst firstPart = new Text( textNode.data.substr( 0, offsetDiff ), textNode.getAttributes() );\n\t\tconst secondPart = new Text( textNode.data.substr( offsetDiff ), textNode.getAttributes() );\n\n\t\telement.insertChildren( index, [ firstPart, secondPart ] );\n\t}\n}\n\n/**\n * Checks whether two given nodes have same attributes.\n *\n * @ignore\n * @private\n * @param {module:engine/model/node~Node} nodeA Node to check.\n * @param {module:engine/model/node~Node} nodeB Node to check.\n * @returns {Boolean} `true` if nodes have same attributes, `false` otherwise.\n */\nfunction _haveSameAttributes( nodeA, nodeB ) {\n\tconst iteratorA = nodeA.getAttributes();\n\tconst iteratorB = nodeB.getAttributes();\n\n\tfor ( const attr of iteratorA ) {\n\t\tif ( attr[ 1 ] !== nodeB.getAttribute( attr[ 0 ] ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\titeratorB.next();\n\t}\n\n\treturn iteratorB.next().done;\n}\n\n/**\n * Value that can be normalized to an array of {@link module:engine/model/node~Node nodes}.\n *\n * Non-arrays are normalized as follows:\n * * {@link module:engine/model/node~Node Node} is left as is,\n * * {@link module:engine/model/textproxy~TextProxy TextProxy} and `String` are normalized to {@link module:engine/model/text~Text Text},\n * * {@link module:engine/model/nodelist~NodeList NodeList} is normalized to an array containing all nodes that are in that node list,\n * * {@link module:engine/model/documentfragment~DocumentFragment DocumentFragment} is normalized to an array containing all of it's\n * * children.\n *\n * Arrays are processed item by item like non-array values and flattened to one array. Normalization always results in\n * a flat array of {@link module:engine/model/node~Node nodes}. Consecutive text nodes (or items normalized to text nodes) will be\n * merged if they have same attributes.\n *\n * @typedef {module:engine/model/node~Node|module:engine/model/textproxy~TextProxy|String|\n * module:engine/model/nodelist~NodeList|module:engine/model/documentfragment~DocumentFragment|Iterable}\n * module:engine/model/node~NodeSet\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/writer.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/button/buttonview\n */\n\nimport View from '../view';\nimport Template from '../template';\nimport IconView from '../icon/iconview';\n\nimport { getEnvKeystrokeText } from '@ckeditor/ckeditor5-utils/src/keyboard';\n\n/**\n * The button view class.\n *\n * @extends module:ui/view~View\n */\nexport default class ButtonView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * The label of the button view visible to the user.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #label\n\t\t */\n\t\tthis.set( 'label' );\n\n\t\t/**\n\t\t * (Optional) The keystroke associated with the button, i.e. <kbd>CTRL+B</kbd>,\n\t\t * in the string format compatible with {@link module:utils/keyboard}.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #keystroke\n\t\t */\n\t\tthis.set( 'keystroke' );\n\n\t\t/**\n\t\t * (Optional) Tooltip of the button, i.e. displayed when hovering the button with the mouse cursor.\n\t\t *\n\t\t * * If defined as a `Boolean` (e.g. `true`), then combination of `label` and `keystroke` will be set as a tooltip.\n\t\t * * If defined as a `String`, tooltip will equal the exact text of that `String`.\n\t\t * * If defined as a `Function`, `label` and `keystroke` will be passed to that function, which is to return\n\t\t * a string with the tooltip text.\n\t\t *\n\t\t *\t\tconst view = new ButtonView( locale );\n\t\t *\t\tview.tooltip = ( label, keystroke ) => `A tooltip for ${ label } and ${ keystroke }.`\n\t\t *\n\t\t * @observable\n\t\t * @default false\n\t\t * @member {Boolean|String|Function} #tooltip\n\t\t */\n\t\tthis.set( 'tooltip' );\n\n\t\t/**\n\t\t * The HTML type of the button. Default `button`.\n\t\t *\n\t\t * @observable\n\t\t * @member {'button'|'submit'|'reset'|'menu'} #type\n\t\t */\n\t\tthis.set( 'type', 'button' );\n\n\t\t/**\n\t\t * Controls whether the button view is \"on\", e.g. some feature which it represents\n\t\t * is currently enabled.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isOn\n\t\t */\n\t\tthis.set( 'isOn', false );\n\n\t\t/**\n\t\t * Controls whether the button view is enabled (can be clicked).\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isEnabled\n\t\t */\n\t\tthis.set( 'isEnabled', true );\n\n\t\t/**\n\t\t * Controls whether the button view is visible.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isVisible\n\t\t */\n\t\tthis.set( 'isVisible', true );\n\n\t\t/**\n\t\t * (Optional) Whether the label of the button is hidden (e.g. button with icon only).\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #withText\n\t\t */\n\t\tthis.set( 'withText', false );\n\n\t\t/**\n\t\t * (Optional) Source of the icon. See {@link module:ui/icon/iconview~IconView#content}.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #icon\n\t\t */\n\t\tthis.set( 'icon' );\n\n\t\t/**\n\t\t * Controls the `tabindex` attribute of the button.\n\t\t *\n\t\t * @observable\n\t\t * @default -1\n\t\t * @member {String} #tabindex\n\t\t */\n\t\tthis.set( 'tabindex', -1 );\n\n\t\t/**\n\t\t * Tooltip of the button bound to the template.\n\t\t *\n\t\t * @see #tooltip\n\t\t * @see #_getTooltipString\n\t\t * @private\n\t\t * @observable\n\t\t * @member {Boolean} #_tooltipString\n\t\t */\n\t\tthis.bind( '_tooltipString' ).to(\n\t\t\tthis, 'tooltip',\n\t\t\tthis, 'label',\n\t\t\tthis, 'keystroke',\n\t\t\tthis._getTooltipString.bind( this )\n\t\t);\n\n\t\t/**\n\t\t * Icon of the button view.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/icon/iconview~IconView} #iconView\n\t\t */\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.template = new Template( {\n\t\t\ttag: 'button',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-button',\n\t\t\t\t\tbind.if( '_tooltipString', 'ck-tooltip_s' ),\n\t\t\t\t\tbind.to( 'isEnabled', value => value ? 'ck-enabled' : 'ck-disabled' ),\n\t\t\t\t\tbind.if( 'isVisible', 'ck-hidden', value => !value ),\n\t\t\t\t\tbind.to( 'isOn', value => value ? 'ck-on' : 'ck-off' ),\n\t\t\t\t\tbind.if( 'withText', 'ck-button_with-text' )\n\t\t\t\t],\n\t\t\t\ttype: bind.to( 'type', value => value ? value : 'button' ),\n\t\t\t\t'data-ck-tooltip': [\n\t\t\t\t\tbind.to( '_tooltipString' )\n\t\t\t\t],\n\t\t\t\ttabindex: bind.to( 'tabindex' )\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttag: 'span',\n\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [ 'ck-button__label' ]\n\t\t\t\t\t},\n\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttext: bind.to( 'label' )\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\n\t\t\ton: {\n\t\t\t\tmousedown: bind.to( evt => {\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t} ),\n\n\t\t\t\tclick: bind.to( evt => {\n\t\t\t\t\t// We can't make the button disabled using the disabled attribute, because it won't be focusable.\n\t\t\t\t\t// Though, shouldn't this condition be moved to the button controller?\n\t\t\t\t\tif ( this.isEnabled ) {\n\t\t\t\t\t\tthis.fire( 'execute' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Prevent the default when button is disabled, to block e.g.\n\t\t\t\t\t\t// automatic form submitting. See ckeditor/ckeditor5-link#74.\n\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * Fired when the button view is clicked. It won't be fired when the button is disabled.\n\t\t *\n\t\t * @event #execute\n\t\t */\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tlet promise = Promise.resolve();\n\n\t\tif ( this.icon && !this.iconView ) {\n\t\t\tconst iconView = this.iconView = new IconView();\n\n\t\t\ticonView.bind( 'content' ).to( this, 'icon' );\n\n\t\t\tthis.element.insertBefore( iconView.element, this.element.firstChild );\n\n\t\t\t// Make sure the icon view will be destroyed along with button.\n\t\t\tpromise = promise.then( () => this.addChildren( iconView ) );\n\t\t}\n\n\t\treturn promise.then( () => super.init() );\n\t}\n\n\t/**\n\t * Focuses the button.\n\t */\n\tfocus() {\n\t\tthis.element.focus();\n\t}\n\n\t/**\n\t * Gets value for the `data-ck-tooltip` attribute from the combination of\n\t * {@link #tooltip}, {@link #label} and {@link #keystroke} attributes.\n\t *\n\t * @private\n\t * @see #tooltip\n\t * @see #_tooltipString\n\t * @param {Boolean|String|Function} tooltip Button tooltip.\n\t * @param {String} label Button label.\n\t * @param {String} keystroke Button keystroke.\n\t * @returns {String}\n\t */\n\t_getTooltipString( tooltip, label, keystroke ) {\n\t\tif ( tooltip ) {\n\t\t\tif ( typeof tooltip == 'string' ) {\n\t\t\t\treturn tooltip;\n\t\t\t} else {\n\t\t\t\tif ( keystroke ) {\n\t\t\t\t\tkeystroke = getEnvKeystrokeText( keystroke );\n\t\t\t\t}\n\n\t\t\t\tif ( tooltip instanceof Function ) {\n\t\t\t\t\treturn tooltip( label, keystroke );\n\t\t\t\t} else if ( tooltip === true ) {\n\t\t\t\t\treturn `${ label }${ keystroke ? ` (${ keystroke })` : '' }`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-ui/src/button/buttonview.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * Set of utils related to keyboard support.\n *\n * @module utils/keyboard\n */\n\nimport CKEditorError from './ckeditorerror';\nimport env from './env';\n\n/**\n * Object with `keyName => keyCode` pairs for a set of known keys.\n *\n * Contains:\n *\n * * `a-z`,\n * * `0-9`,\n * * `f1-f12`,\n * * `arrow(left|up|right|bottom)`,\n * * `backspace`, `delete`, `enter`, `esc`, `tab`,\n * * `ctrl`, `cmd`, `shift`, `alt`.\n */\nexport const keyCodes = generateKnownKeyCodes();\n\n/**\n * Converts a key name or a {@link module:utils/keyboard~KeystrokeInfo keystroke info} into a key code.\n *\n * Note: Key names are matched with {@link module:utils/keyboard~keyCodes} in a case-insensitive way.\n *\n * @param {String|module:utils/keyboard~KeystrokeInfo} Key name (see {@link module:utils/keyboard~keyCodes})\n * or a keystroke data object.\n * @returns {Number} Key or keystroke code.\n */\nexport function getCode( key ) {\n\tlet keyCode;\n\n\tif ( typeof key == 'string' ) {\n\t\tkeyCode = keyCodes[ key.toLowerCase() ];\n\n\t\tif ( !keyCode ) {\n\t\t\t/**\n\t\t\t * Unknown key name. Only key names contained by the {@link module:utils/keyboard~keyCodes} can be used.\n\t\t\t *\n\t\t\t * @errror keyboard-unknown-key\n\t\t\t * @param {String} key\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'keyboard-unknown-key: Unknown key name.', { key } );\n\t\t}\n\t} else {\n\t\tkeyCode = key.keyCode +\n\t\t\t( key.altKey ? keyCodes.alt : 0 ) +\n\t\t\t( key.ctrlKey ? keyCodes.ctrl : 0 ) +\n\t\t\t( key.shiftKey ? keyCodes.shift : 0 );\n\t}\n\n\treturn keyCode;\n}\n\n/**\n * Parses keystroke and returns a keystroke code that will match the code returned by\n * link {@link module:utils/keyboard.getCode} for a corresponding {@link module:utils/keyboard~KeystrokeInfo keystroke info}.\n *\n * The keystroke can be passed in two formats:\n *\n * * as a single string – e.g. `ctrl + A`,\n * * as an array of {@link module:utils/keyboard~keyCodes known key names} and key codes – e.g.:\n *   * `[ 'ctrl', 32 ]` (ctrl + space),\n *   * `[ 'ctrl', 'a' ]` (ctrl + A).\n *\n * Note: Key names are matched with {@link module:utils/keyboard~keyCodes} in a case-insensitive way.\n *\n * Note: Only keystrokes with a single non-modifier key are supported (e.g. `ctrl+A` is OK, but `ctrl+A+B` is not).\n *\n * @param {String|Array.<Number|String>} keystroke Keystroke definition.\n * @returns {Number} Keystroke code.\n */\nexport function parseKeystroke( keystroke ) {\n\tif ( typeof keystroke == 'string' ) {\n\t\tkeystroke = splitKeystrokeText( keystroke );\n\t}\n\n\treturn keystroke\n\t\t.map( key => ( typeof key == 'string' ) ? getCode( key ) : key )\n\t\t.reduce( ( key, sum ) => sum + key, 0 );\n}\n\n/**\n * It translates any keystroke string text like `\"CTRL+A\"` to an\n * environment–specific keystroke, i.e. `\"⌘A\"` on Mac OSX.\n *\n * @param {String} keystroke Keystroke text.\n * @returns {String} Keystroke text specific for the environment.\n */\nexport function getEnvKeystrokeText( keystroke ) {\n\tconst split = splitKeystrokeText( keystroke );\n\n\tif ( env.mac ) {\n\t\tif ( split[ 0 ].toLowerCase() == 'ctrl' ) {\n\t\t\treturn '⌘' + ( split[ 1 ] || '' );\n\t\t}\n\t}\n\n\treturn keystroke;\n}\n\nfunction generateKnownKeyCodes() {\n\tconst keyCodes = {\n\t\tarrowleft: 37,\n\t\tarrowup: 38,\n\t\tarrowright: 39,\n\t\tarrowdown: 40,\n\t\tbackspace: 8,\n\t\tdelete: 46,\n\t\tenter: 13,\n\t\tesc: 27,\n\t\ttab: 9,\n\n\t\t// The idea about these numbers is that they do not collide with any real key codes, so we can use them\n\t\t// like bit masks.\n\t\tctrl: 0x110000,\n\t\t// Has the same code as ctrl, because their behaviour should be unified across the editor.\n\t\t// See http://ckeditor.github.io/editor-recommendations/general-policies#ctrl-vs-cmd\n\t\tcmd: 0x110000,\n\t\tshift: 0x220000,\n\t\talt: 0x440000\n\t};\n\n\t// a-z\n\tfor ( let code = 65; code <= 90; code++ ) {\n\t\tconst letter = String.fromCharCode( code );\n\n\t\tkeyCodes[ letter.toLowerCase() ] = code;\n\t}\n\n\t// 0-9\n\tfor ( let code = 48; code <= 57; code++ ) {\n\t\tkeyCodes[ code - 48 ] = code;\n\t}\n\n\t// F1-F12\n\tfor ( let code = 112; code <= 123; code++ ) {\n\t\tkeyCodes[ 'f' + ( code - 111 ) ] = code;\n\t}\n\n\treturn keyCodes;\n}\n\nfunction splitKeystrokeText( keystroke ) {\n\treturn keystroke.split( /\\s*\\+\\s*/ );\n}\n\n/**\n * Information about a keystroke.\n *\n * @interface module:utils/keyboard~KeystrokeInfo\n */\n\n/**\n * The [key code](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode).\n *\n * @member {Number} module:utils/keyboard~KeystrokeInfo#keyCode\n */\n\n/**\n * Whether the <kbd>Alt</kbd> modifier was pressed.\n *\n * @member {Bolean} module:utils/keyboard~KeystrokeInfo#altKey\n */\n\n/**\n * Whether the <kbd>Ctrl</kbd> or <kbd>Cmd</kbd> modifier was pressed.\n *\n * @member {Bolean} module:utils/keyboard~KeystrokeInfo#ctrlKey\n */\n\n/**\n * Whether the <kbd>Shift</kbd> modifier was pressed.\n *\n * @member {Bolean} module:utils/keyboard~KeystrokeInfo#shiftKey\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/keyboard.js","import arrayPush from './_arrayPush';\nimport isFlattenable from './_isFlattenable';\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nexport default baseFlatten;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseFlatten.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/text\n */\n\nimport Node from './node';\n\n/**\n * Model text node. Type of {@link module:engine/model/node~Node node} that contains {@link module:engine/model/text~Text#data text data}.\n *\n * **Important:** see {@link module:engine/model/node~Node} to read about restrictions using `Text` and `Node` API.\n *\n * **Note:** keep in mind that `Text` instances might indirectly got removed from model tree when model is changed.\n * This happens when {@link module:engine/model/writer~writer model writer} is used to change model and the text node is merged with\n * another text node. Then, both text nodes are removed and a new text node is inserted into the model. Because of\n * this behavior, keeping references to `Text` is not recommended. Instead, consider creating\n * {@link module:engine/model/liveposition~LivePosition live position} placed before the text node.\n */\nexport default class Text extends Node {\n\t/**\n\t * Creates a text node.\n\t *\n\t * @param {String} data Node's text.\n\t * @param {Object} [attrs] Node's attributes. See {@link module:utils/tomap~toMap} for a list of accepted values.\n\t */\n\tconstructor( data, attrs ) {\n\t\tsuper( attrs );\n\n\t\t/**\n\t\t * Text data contained in this text node.\n\t\t *\n\t\t * @type {String}\n\t\t */\n\t\tthis.data = data || '';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget offsetSize() {\n\t\treturn this.data.length;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tis( type ) {\n\t\treturn type == 'text';\n\t}\n\n\t/**\n\t * Creates a copy of this text node and returns it. Created text node has same text data and attributes as original text node.\n\t */\n\tclone() {\n\t\treturn new Text( this.data, this.getAttributes() );\n\t}\n\n\t/**\n\t * Converts `Text` instance to plain object and returns it.\n\t *\n\t * @returns {Object} `Text` instance converted to plain object.\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.data = this.data;\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * Creates a `Text` instance from given plain object (i.e. parsed JSON string).\n\t *\n\t * @param {Object} json Plain object to be converted to `Text`.\n\t * @returns {module:engine/model/text~Text} `Text` instance created using given plain object.\n\t */\n\tstatic fromJSON( json ) {\n\t\treturn new Text( json.data, json.attributes );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/text.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/element\n */\n\nimport Node from './node';\nimport Text from './text';\nimport objectToMap from '@ckeditor/ckeditor5-utils/src/objecttomap';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\nimport isPlainObject from '@ckeditor/ckeditor5-utils/src/lib/lodash/isPlainObject';\nimport Matcher from './matcher';\n\n/**\n * View element.\n *\n * Editing engine does not define fixed HTML DTD. This is why the type of the {@link module:engine/view/element~Element} need to\n * be defined by the feature developer. Creating an element you should use {@link module:engine/view/containerelement~ContainerElement}\n * class, {@link module:engine/view/attributeelement~AttributeElement} class or {@link module:engine/view/emptyelement~EmptyElement} class.\n *\n * Note that for view elements which are not created from model, like elements from mutations, paste or\n * {@link module:engine/controller/datacontroller~DataController#set data.set} it is not possible to define the type of the element, so\n * these will be instances of the {@link module:engine/view/element~Element}.\n *\n * @extends module:engine/view/node~Node\n */\nexport default class Element extends Node {\n\t/**\n\t * Creates a view element.\n\t *\n\t * Attributes can be passed in various formats:\n\t *\n\t *\t\tnew Element( 'div', { 'class': 'editor', 'contentEditable': 'true' } ); // object\n\t *\t\tnew Element( 'div', [ [ 'class', 'editor' ], [ 'contentEditable', 'true' ] ] ); // map-like iterator\n\t *\t\tnew Element( 'div', mapOfAttributes ); // map\n\t *\n\t * @param {String} name Node name.\n\t * @param {Object|Iterable} [attrs] Collection of attributes.\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n\t * List of nodes to be inserted into created element.\n\t */\n\tconstructor( name, attrs, children ) {\n\t\tsuper();\n\n\t\t/**\n\t\t * Name of the element.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.name = name;\n\n\t\t/**\n\t\t * Map of attributes, where attributes names are keys and attributes values are values.\n\t\t *\n\t\t * @protected\n\t\t * @member {Map} #_attrs\n\t\t */\n\t\tif ( isPlainObject( attrs ) ) {\n\t\t\tthis._attrs = objectToMap( attrs );\n\t\t} else {\n\t\t\tthis._attrs = new Map( attrs );\n\t\t}\n\n\t\t/**\n\t\t * Array of child nodes.\n\t\t *\n\t\t * @protected\n\t\t * @member {Array.<module:engine/view/node~Node>}\n\t\t */\n\t\tthis._children = [];\n\n\t\tif ( children ) {\n\t\t\tthis.insertChildren( 0, children );\n\t\t}\n\n\t\t/**\n\t\t * Set of classes associated with element instance.\n\t\t *\n\t\t * @protected\n\t\t * @member {Set}\n\t\t */\n\t\tthis._classes = new Set();\n\n\t\tif ( this._attrs.has( 'class' ) ) {\n\t\t\t// Remove class attribute and handle it by class set.\n\t\t\tconst classString = this._attrs.get( 'class' );\n\t\t\tparseClasses( this._classes, classString );\n\t\t\tthis._attrs.delete( 'class' );\n\t\t}\n\n\t\t/**\n\t\t * Map of styles.\n\t\t *\n\t\t * @protected\n\t\t * @member {Set} module:engine/view/element~Element#_styles\n\t\t */\n\t\tthis._styles = new Map();\n\n\t\tif ( this._attrs.has( 'style' ) ) {\n\t\t\t// Remove style attribute and handle it by styles map.\n\t\t\tparseInlineStyles( this._styles, this._attrs.get( 'style' ) );\n\t\t\tthis._attrs.delete( 'style' );\n\t\t}\n\n\t\t/**\n\t\t * Map of custom properties.\n\t\t * Custom properties can be added to element instance, will be cloned but not rendered into DOM.\n\t\t *\n\t\t * @protected\n\t\t * @memeber {Map}\n\t\t */\n\t\tthis._customProperties = new Map();\n\t}\n\n\t/**\n\t * Number of element's children.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget childCount() {\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Is `true` if there are no nodes inside this element, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isEmpty() {\n\t\treturn this._children.length === 0;\n\t}\n\n\t/**\n\t * Checks whether given view tree object is of given type.\n\t *\n\t * Read more in {@link module:engine/view/node~Node#is}.\n\t *\n\t * @param {String} type\n\t * @param {String} [name] Element name.\n\t * @returns {Boolean}\n\t */\n\tis( type, name = null ) {\n\t\tif ( !name ) {\n\t\t\treturn type == 'element' || type == this.name;\n\t\t} else {\n\t\t\treturn type == 'element' && name == this.name;\n\t\t}\n\t}\n\n\t/**\n\t * Clones provided element.\n\t *\n\t * @param {Boolean} [deep=false] If set to `true` clones element and all its children recursively. When set to `false`,\n\t * element will be cloned without any children.\n\t * @returns {module:engine/view/element~Element} Clone of this element.\n\t */\n\tclone( deep = false ) {\n\t\tconst childrenClone = [];\n\n\t\tif ( deep ) {\n\t\t\tfor ( const child of this.getChildren() ) {\n\t\t\t\tchildrenClone.push( child.clone( deep ) );\n\t\t\t}\n\t\t}\n\n\t\t// ContainerElement and AttributeElement should be also cloned properly.\n\t\tconst cloned = new this.constructor( this.name, this._attrs, childrenClone );\n\n\t\t// Classes and styles are cloned separately - this solution is faster than adding them back to attributes and\n\t\t// parse once again in constructor.\n\t\tcloned._classes = new Set( this._classes );\n\t\tcloned._styles = new Map( this._styles );\n\n\t\t// Clone custom properties.\n\t\tcloned._customProperties = new Map( this._customProperties );\n\n\t\t// Clone filler offset method.\n\t\tcloned.getFillerOffset = this.getFillerOffset;\n\n\t\treturn cloned;\n\t}\n\n\t/**\n\t * {@link module:engine/view/element~Element#insertChildren Insert} a child node or a list of child nodes at the end of this node\n\t * and sets the parent of these nodes to this element.\n\t *\n\t * @fires module:engine/view/node~Node#change\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} nodes Node or the list of nodes to be inserted.\n\t * @returns {Number} Number of appended nodes.\n\t */\n\tappendChildren( nodes ) {\n\t\treturn this.insertChildren( this.childCount, nodes );\n\t}\n\n\t/**\n\t * Gets child at the given index.\n\t *\n\t * @param {Number} index Index of child.\n\t * @returns {module:engine/view/node~Node} Child node.\n\t */\n\tgetChild( index ) {\n\t\treturn this._children[ index ];\n\t}\n\n\t/**\n\t * Gets index of the given child node. Returns `-1` if child node is not found.\n\t *\n\t * @param {module:engine/view/node~Node} node Child node.\n\t * @returns {Number} Index of the child node.\n\t */\n\tgetChildIndex( node ) {\n\t\treturn this._children.indexOf( node );\n\t}\n\n\t/**\n\t * Gets child nodes iterator.\n\t *\n\t * @returns {Iterable.<module:engine/view/node~Node>} Child nodes iterator.\n\t */\n\tgetChildren() {\n\t\treturn this._children[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Returns an iterator that contains the keys for attributes. Order of inserting attributes is not preserved.\n\t *\n\t * @returns {Iterator.<String>} Keys for attributes.\n\t */\n\t* getAttributeKeys() {\n\t\tif ( this._classes.size > 0 ) {\n\t\t\tyield 'class';\n\t\t}\n\n\t\tif ( this._styles.size > 0 ) {\n\t\t\tyield 'style';\n\t\t}\n\n\t\t// This is not an optimal solution because of https://github.com/ckeditor/ckeditor5-engine/issues/454.\n\t\t// It can be simplified to `yield* this._attrs.keys();`.\n\t\tfor ( const key of this._attrs.keys() ) {\n\t\t\tyield key;\n\t\t}\n\t}\n\n\t/**\n\t * Returns iterator that iterates over this element's attributes.\n\t *\n\t * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\n\t * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n\t *\n\t * @returns {Iterable.<*>}\n\t */\n\t* getAttributes() {\n\t\tyield* this._attrs.entries();\n\n\t\tif ( this._classes.size > 0 ) {\n\t\t\tyield [ 'class', this.getAttribute( 'class' ) ];\n\t\t}\n\n\t\tif ( this._styles.size > 0 ) {\n\t\t\tyield [ 'style', this.getAttribute( 'style' ) ];\n\t\t}\n\t}\n\n\t/**\n\t * Gets attribute by key. If attribute is not present - returns undefined.\n\t *\n\t * @param {String} key Attribute key.\n\t * @returns {String|undefined} Attribute value.\n\t */\n\tgetAttribute( key ) {\n\t\tif ( key == 'class' ) {\n\t\t\tif ( this._classes.size > 0 ) {\n\t\t\t\treturn [ ...this._classes ].join( ' ' );\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif ( key == 'style' ) {\n\t\t\tif ( this._styles.size > 0 ) {\n\t\t\t\tlet styleString = '';\n\n\t\t\t\tfor ( const [ property, value ] of this._styles ) {\n\t\t\t\t\tstyleString += `${ property }:${ value };`;\n\t\t\t\t}\n\n\t\t\t\treturn styleString;\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this._attrs.get( key );\n\t}\n\n\t/**\n\t * Returns a boolean indicating whether an attribute with the specified key exists in the element.\n\t *\n\t * @param {String} key Attribute key.\n\t * @returns {Boolean} `true` if attribute with the specified key exists in the element, false otherwise.\n\t */\n\thasAttribute( key ) {\n\t\tif ( key == 'class' ) {\n\t\t\treturn this._classes.size > 0;\n\t\t}\n\n\t\tif ( key == 'style' ) {\n\t\t\treturn this._styles.size > 0;\n\t\t}\n\n\t\treturn this._attrs.has( key );\n\t}\n\n\t/**\n\t * Adds or overwrite attribute with a specified key and value.\n\t *\n\t * @param {String} key Attribute key.\n\t * @param {String} value Attribute value.\n\t * @fires module:engine/view/node~Node#change\n\t */\n\tsetAttribute( key, value ) {\n\t\tthis._fireChange( 'attributes', this );\n\n\t\tif ( key == 'class' ) {\n\t\t\tparseClasses( this._classes, value );\n\t\t} else if ( key == 'style' ) {\n\t\t\tparseInlineStyles( this._styles, value );\n\t\t} else {\n\t\t\tthis._attrs.set( key, value );\n\t\t}\n\t}\n\n\t/**\n\t * Inserts a child node or a list of child nodes on the given index and sets the parent of these nodes to\n\t * this element.\n\t *\n\t * @param {Number} index Position where nodes should be inserted.\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} nodes Node or the list of nodes to be inserted.\n\t * @fires module:engine/view/node~Node#change\n\t * @returns {Number} Number of inserted nodes.\n\t */\n\tinsertChildren( index, nodes ) {\n\t\tthis._fireChange( 'children', this );\n\t\tlet count = 0;\n\n\t\tnodes = normalize( nodes );\n\n\t\tfor ( const node of nodes ) {\n\t\t\tnode.parent = this;\n\n\t\t\tthis._children.splice( index, 0, node );\n\t\t\tindex++;\n\t\t\tcount++;\n\t\t}\n\n\t\treturn count;\n\t}\n\n\t/**\n\t * Removes attribute from the element.\n\t *\n\t * @param {String} key Attribute key.\n\t * @returns {Boolean} Returns true if an attribute existed and has been removed.\n\t * @fires module:engine/view/node~Node#change\n\t */\n\tremoveAttribute( key ) {\n\t\tthis._fireChange( 'attributes', this );\n\n\t\t// Remove class attribute.\n\t\tif ( key == 'class' ) {\n\t\t\tif ( this._classes.size > 0 ) {\n\t\t\t\tthis._classes.clear();\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t// Remove style attribute.\n\t\tif ( key == 'style' ) {\n\t\t\tif ( this._styles.size > 0 ) {\n\t\t\t\tthis._styles.clear();\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t// Remove other attributes.\n\t\treturn this._attrs.delete( key );\n\t}\n\n\t/**\n\t * Removes number of child nodes starting at the given index and set the parent of these nodes to `null`.\n\t *\n\t * @param {Number} index Number of the first node to remove.\n\t * @param {Number} [howMany=1] Number of nodes to remove.\n\t * @returns {Array.<module:engine/view/node~Node>} The array of removed nodes.\n\t * @fires module:engine/view/node~Node#change\n\t */\n\tremoveChildren( index, howMany = 1 ) {\n\t\tthis._fireChange( 'children', this );\n\n\t\tfor ( let i = index; i < index + howMany; i++ ) {\n\t\t\tthis._children[ i ].parent = null;\n\t\t}\n\n\t\treturn this._children.splice( index, howMany );\n\t}\n\n\t/**\n\t * Checks if this element is similar to other element.\n\t * Both elements should have the same name and attributes to be considered as similar. Two similar elements\n\t * can contain different set of children nodes.\n\t *\n\t * @param {module:engine/view/element~Element} otherElement\n\t * @returns {Boolean}\n\t */\n\tisSimilar( otherElement ) {\n\t\tif ( !( otherElement instanceof Element ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If exactly the same Element is provided - return true immediately.\n\t\tif ( this === otherElement ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Check element name.\n\t\tif ( this.name != otherElement.name ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check number of attributes, classes and styles.\n\t\tif ( this._attrs.size !== otherElement._attrs.size || this._classes.size !== otherElement._classes.size ||\n\t\t\tthis._styles.size !== otherElement._styles.size ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if attributes are the same.\n\t\tfor ( const [ key, value ] of this._attrs ) {\n\t\t\tif ( !otherElement._attrs.has( key ) || otherElement._attrs.get( key ) !== value ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Check if classes are the same.\n\t\tfor ( const className of this._classes ) {\n\t\t\tif ( !otherElement._classes.has( className ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Check if styles are the same.\n\t\tfor ( const [ property, value ] of this._styles ) {\n\t\t\tif ( !otherElement._styles.has( property ) || otherElement._styles.get( property ) !== value ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Adds specified class.\n\t *\n\t *\t\telement.addClass( 'foo' ); // Adds 'foo' class.\n\t *\t\telement.addClass( 'foo', 'bar' ); // Adds 'foo' and 'bar' classes.\n\t *\n\t * @param {...String} className\n\t * @fires module:engine/view/node~Node#change\n\t */\n\taddClass( ...className ) {\n\t\tthis._fireChange( 'attributes', this );\n\t\tclassName.forEach( name => this._classes.add( name ) );\n\t}\n\n\t/**\n\t * Removes specified class.\n\t *\n \t *\t\telement.removeClass( 'foo' );  // Removes 'foo' class.\n\t *\t\telement.removeClass( 'foo', 'bar' ); // Removes both 'foo' and 'bar' classes.\n\t *\n\t * @param {...String} className\n\t * @fires module:engine/view/node~Node#change\n\t */\n\tremoveClass( ...className ) {\n\t\tthis._fireChange( 'attributes', this );\n\t\tclassName.forEach( name => this._classes.delete( name ) );\n\t}\n\n\t/**\n\t * Returns true if class is present.\n\t * If more then one class is provided - returns true only when all classes are present.\n\t *\n\t *\t\telement.hasClass( 'foo' ); // Returns true if 'foo' class is present.\n\t *\t\telement.hasClass( 'foo', 'bar' ); // Returns true if 'foo' and 'bar' classes are both present.\n\t *\n\t * @param {...String} className\n\t */\n\thasClass( ...className ) {\n\t\tfor ( const name of className ) {\n\t\t\tif ( !this._classes.has( name ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns iterator that contains all class names.\n\t *\n\t * @returns {Iterator.<String>}\n\t */\n\tgetClassNames() {\n\t\treturn this._classes.keys();\n\t}\n\n\t/**\n\t * Adds style to the element.\n\t *\n\t *\t\telement.setStyle( 'color', 'red' );\n\t *\t\telement.setStyle( {\n\t *\t\t\tcolor: 'red',\n\t *\t\t\tposition: 'fixed'\n\t *\t\t} );\n\t *\n\t * @param {String|Object} property Property name or object with key - value pairs.\n\t * @param {String} [value] Value to set. This parameter is ignored if object is provided as the first parameter.\n\t * @fires module:engine/view/node~Node#change\n\t */\n\tsetStyle( property, value ) {\n\t\tthis._fireChange( 'attributes', this );\n\n\t\tif ( isPlainObject( property ) ) {\n\t\t\tconst keys = Object.keys( property );\n\n\t\t\tfor ( const key of keys ) {\n\t\t\t\tthis._styles.set( key, property[ key ] );\n\t\t\t}\n\t\t} else {\n\t\t\tthis._styles.set( property, value );\n\t\t}\n\t}\n\n\t/**\n\t * Returns style value for given property.\n\t * Undefined is returned if style does not exist.\n\t *\n\t * @param {String} property\n\t * @returns {String|undefined}\n\t */\n\tgetStyle( property ) {\n\t\treturn this._styles.get( property );\n\t}\n\n\t/**\n\t * Returns iterator that contains all style names.\n\t *\n\t * @returns {Iterator.<String>}\n\t */\n\tgetStyleNames() {\n\t\treturn this._styles.keys();\n\t}\n\n\t/**\n\t * Returns true if style keys are present.\n\t * If more then one style property is provided - returns true only when all properties are present.\n\t *\n\t *\t\telement.hasStyle( 'color' ); // Returns true if 'border-top' style is present.\n\t *\t\telement.hasStyle( 'color', 'border-top' ); // Returns true if 'color' and 'border-top' styles are both present.\n\t *\n\t * @param {...String} property\n\t */\n\thasStyle( ...property ) {\n\t\tfor ( const name of property ) {\n\t\t\tif ( !this._styles.has( name ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Removes specified style.\n\t *\n\t *\t\telement.removeStyle( 'color' );  // Removes 'color' style.\n\t *\t\telement.removeStyle( 'color', 'border-top' ); // Removes both 'color' and 'border-top' styles.\n\t *\n\t * @param {...String} property\n\t * @fires module:engine/view/node~Node#change\n\t */\n\tremoveStyle( ...property ) {\n\t\tthis._fireChange( 'attributes', this );\n\t\tproperty.forEach( name => this._styles.delete( name ) );\n\t}\n\n\t/**\n\t * Returns ancestor element that match specified pattern.\n\t * Provided patterns should be compatible with {@link module:engine/view/matcher~Matcher Matcher} as it is used internally.\n\t *\n\t * @see module:engine/view/matcher~Matcher\n\t * @param {Object|String|RegExp|Function} patterns Patterns used to match correct ancestor.\n\t * See {@link module:engine/view/matcher~Matcher}.\n\t * @returns {module:engine/view/element~Element|null} Found element or `null` if no matching ancestor was found.\n\t */\n\tfindAncestor( ...patterns ) {\n\t\tconst matcher = new Matcher( ...patterns );\n\t\tlet parent = this.parent;\n\n\t\twhile ( parent ) {\n\t\t\tif ( matcher.match( parent ) ) {\n\t\t\t\treturn parent;\n\t\t\t}\n\n\t\t\tparent = parent.parent;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Sets a custom property. Unlike attributes, custom properties are not rendered to the DOM,\n\t * so they can be used to add special data to elements.\n\t *\n\t * @param {String|Symbol} key\n\t * @param {*} value\n\t */\n\tsetCustomProperty( key, value ) {\n\t\tthis._customProperties.set( key, value );\n\t}\n\n\t/**\n\t * Returns the custom property value for the given key.\n\t *\n\t * @param {String|Symbol} key\n\t * @returns {*}\n\t */\n\tgetCustomProperty( key ) {\n\t\treturn this._customProperties.get( key );\n\t}\n\n\t/**\n\t * Removes the custom property stored under the given key.\n\t *\n\t * @param {String|Symbol} key\n\t * @returns {Boolean} Returns true if property was removed.\n\t */\n\tremoveCustomProperty( key ) {\n\t\treturn this._customProperties.delete( key );\n\t}\n\n\t/**\n\t * Returns an iterator which iterates over this element's custom properties.\n\t * Iterator provides [key, value] pair for each stored property.\n\t *\n\t * @returns {Iterable.<*>}\n\t */\n\t* getCustomProperties() {\n\t\tyield* this._customProperties.entries();\n\t}\n\n\t/**\n\t * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n\t *\n\t * @abstract\n\t * @method module:engine/view/element~Element#getFillerOffset\n\t */\n}\n\n// Parses inline styles and puts property - value pairs into styles map.\n// Styles map is cleared before insertion.\n//\n// @param {Map.<String, String>} stylesMap Map to insert parsed properties and values.\n// @param {String} stylesString Styles to parse.\nfunction parseInlineStyles( stylesMap, stylesString ) {\n\t// `null` if no quote was found in input string or last found quote was a closing quote. See below.\n\tlet quoteType = null;\n\tlet propertyNameStart = 0;\n\tlet propertyValueStart = 0;\n\tlet propertyName = null;\n\n\tstylesMap.clear();\n\n\t// Do not set anything if input string is empty.\n\tif ( stylesString === '' ) {\n\t\treturn;\n\t}\n\n\t// Fix inline styles that do not end with `;` so they are compatible with algorithm below.\n\tif ( stylesString.charAt( stylesString.length - 1 ) != ';' ) {\n\t\tstylesString = stylesString + ';';\n\t}\n\n\t// Seek the whole string for \"special characters\".\n\tfor ( let i = 0; i < stylesString.length; i++ ) {\n\t\tconst char = stylesString.charAt( i );\n\n\t\tif ( quoteType === null ) {\n\t\t\t// No quote found yet or last found quote was a closing quote.\n\t\t\tswitch ( char ) {\n\t\t\t\tcase ':':\n\t\t\t\t\t// Most of time colon means that property name just ended.\n\t\t\t\t\t// Sometimes however `:` is found inside property value (for example in background image url).\n\t\t\t\t\tif ( !propertyName ) {\n\t\t\t\t\t\t// Treat this as end of property only if property name is not already saved.\n\t\t\t\t\t\t// Save property name.\n\t\t\t\t\t\tpropertyName = stylesString.substr( propertyNameStart, i - propertyNameStart );\n\t\t\t\t\t\t// Save this point as the start of property value.\n\t\t\t\t\t\tpropertyValueStart = i + 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase '\"':\n\t\t\t\tcase '\\'':\n\t\t\t\t\t// Opening quote found (this is an opening quote, because `quoteType` is `null`).\n\t\t\t\t\tquoteType = char;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t// eslint-disable-next-line no-case-declarations\n\t\t\t\tcase ';':\n\t\t\t\t\t// Property value just ended.\n\t\t\t\t\t// Use previously stored property value start to obtain property value.\n\t\t\t\t\tconst propertyValue = stylesString.substr( propertyValueStart, i - propertyValueStart );\n\n\t\t\t\t\tif ( propertyName ) {\n\t\t\t\t\t\t// Save parsed part.\n\t\t\t\t\t\tstylesMap.set( propertyName.trim(), propertyValue.trim() );\n\t\t\t\t\t}\n\n\t\t\t\t\tpropertyName = null;\n\n\t\t\t\t\t// Save this point as property name start. Property name starts immediately after previous property value ends.\n\t\t\t\t\tpropertyNameStart = i + 1;\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else if ( char === quoteType ) {\n\t\t\t// If a quote char is found and it is a closing quote, mark this fact by `null`-ing `quoteType`.\n\t\t\tquoteType = null;\n\t\t}\n\t}\n}\n\n// Parses class attribute and puts all classes into classes set.\n// Classes set s cleared before insertion.\n//\n// @param {Set.<String>} classesSet Set to insert parsed classes.\n// @param {String} classesString String with classes to parse.\nfunction parseClasses( classesSet, classesString ) {\n\tconst classArray = classesString.split( /\\s+/ );\n\tclassesSet.clear();\n\tclassArray.forEach( name => classesSet.add( name ) );\n}\n\n// Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/view/node~Node|Iterable.<String|module:engine/view/node~Node>}\n// @return {Iterable.<module:engine/view/node~Node>}\nfunction normalize( nodes ) {\n\t// Separate condition because string is iterable.\n\tif ( typeof nodes == 'string' ) {\n\t\treturn [ new Text( nodes ) ];\n\t}\n\n\tif ( !isIterable( nodes ) ) {\n\t\tnodes = [ nodes ];\n\t}\n\n\t// Array.from to enable .map() on non-arrays.\n\treturn Array.from( nodes )\n\t\t.map( node => {\n\t\t\treturn typeof node == 'string' ? new Text( node ) : node;\n\t\t} );\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/view/element.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/position\n */\n\nimport TreeWalker from './treewalker';\n\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport EditableElement from './editableelement';\n\n/**\n * Position in the tree. Position is always located before or after a node.\n */\nexport default class Position {\n\t/**\n\t * Creates a position.\n\t *\n\t * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} parent Position parent.\n\t * @param {Number} offset Position offset.\n\t */\n\tconstructor( parent, offset ) {\n\t\t/**\n\t\t * Position parent.\n\t\t *\n\t\t * @member {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n\t\t * module:engine/view/position~Position#parent\n\t\t */\n\t\tthis.parent = parent;\n\n\t\t/**\n\t\t * Position offset.\n\t\t *\n\t\t * @member {Number} module:engine/view/position~Position#offset\n\t\t */\n\t\tthis.offset = offset;\n\t}\n\n\t/**\n\t * Node directly after the position. Equals `null` when there is no node after position or position is located\n\t * inside text node.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|null}\n\t */\n\tget nodeAfter() {\n\t\tif ( this.parent.is( 'text' ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.parent.getChild( this.offset ) || null;\n\t}\n\n\t/**\n\t * Node directly before the position. Equals `null` when there is no node before position or position is located\n\t * inside text node.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|null}\n\t */\n\tget nodeBefore() {\n\t\tif ( this.parent.is( 'text' ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.parent.getChild( this.offset - 1 ) || null;\n\t}\n\n\t/**\n\t * Is `true` if position is at the beginning of its {@link module:engine/view/position~Position#parent parent}, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isAtStart() {\n\t\treturn this.offset === 0;\n\t}\n\n\t/**\n\t * Is `true` if position is at the end of its {@link module:engine/view/position~Position#parent parent}, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isAtEnd() {\n\t\tconst endOffset = this.parent.is( 'text' ) ? this.parent.data.length : this.parent.childCount;\n\n\t\treturn this.offset === endOffset;\n\t}\n\n\t/**\n\t * Position's root, that is the root of the position's parent element.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\treturn this.parent.root;\n\t}\n\n\t/**\n\t * {@link module:engine/view/editableelement~EditableElement EditableElement} instance that contains this position, or `null` if\n\t * position is not inside an editable element.\n\t *\n\t * @type {module:engine/view/editableelement~EditableElement|null}\n\t */\n\tget editableElement() {\n\t\tlet editable = this.parent;\n\n\t\twhile ( !( editable instanceof EditableElement ) ) {\n\t\t\tif ( editable.parent ) {\n\t\t\t\teditable = editable.parent;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\treturn editable;\n\t}\n\n\t/**\n\t * Returns a new instance of Position with offset incremented by `shift` value.\n\t *\n\t * @param {Number} shift How position offset should get changed. Accepts negative values.\n\t * @returns {module:engine/view/position~Position} Shifted position.\n\t */\n\tgetShiftedBy( shift ) {\n\t\tconst shifted = Position.createFromPosition( this );\n\n\t\tconst offset = shifted.offset + shift;\n\t\tshifted.offset = offset < 0 ? 0 : offset;\n\n\t\treturn shifted;\n\t}\n\n\t/**\n\t * Gets the farthest position which matches the callback using\n\t * {@link module:engine/view/treewalker~TreeWalker TreeWalker}.\n\t *\n\t * For example:\n\t *\n\t * \t\tgetLastMatchingPosition( value => value.type == 'text' ); // <p>{}foo</p> -> <p>foo[]</p>\n\t * \t\tgetLastMatchingPosition( value => value.type == 'text', { direction: 'backward' } ); // <p>foo[]</p> -> <p>{}foo</p>\n\t * \t\tgetLastMatchingPosition( value => false ); // Do not move the position.\n\t *\n\t * @param {Function} skip Callback function. Gets {@link module:engine/view/treewalker~TreeWalkerValue} and should\n\t * return `true` if the value should be skipped or `false` if not.\n\t * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n\t *\n\t * @returns {module:engine/view/position~Position} The position after the last item which matches the `skip` callback test.\n\t */\n\tgetLastMatchingPosition( skip, options = {} ) {\n\t\toptions.startPosition = this;\n\n\t\tconst treeWalker = new TreeWalker( options );\n\t\ttreeWalker.skip( skip );\n\n\t\treturn treeWalker.position;\n\t}\n\n\t/**\n\t * Returns ancestors array of this position, that is this position's parent and it's ancestors.\n\t *\n\t * @returns {Array} Array with ancestors.\n\t */\n\tgetAncestors() {\n\t\tif ( this.parent.is( 'documentFragment' ) ) {\n\t\t\treturn [ this.parent ];\n\t\t} else {\n\t\t\treturn this.parent.getAncestors( { includeNode: true } );\n\t\t}\n\t}\n\n\t/**\n\t * Checks whether this position equals given position.\n\t *\n\t * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n\t * @returns {Boolean} True if positions are same.\n\t */\n\tisEqual( otherPosition ) {\n\t\treturn ( this.parent == otherPosition.parent && this.offset == otherPosition.offset );\n\t}\n\n\t/**\n\t * Checks whether this position is located before given position. When method returns `false` it does not mean that\n\t * this position is after give one. Two positions may be located inside separate roots and in that situation this\n\t * method will still return `false`.\n\t *\n\t * @see module:engine/view/position~Position#isAfter\n\t * @see module:engine/view/position~Position#compareWith\n\t * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n\t * @returns {Boolean} Returns `true` if this position is before given position.\n\t */\n\tisBefore( otherPosition ) {\n\t\treturn this.compareWith( otherPosition ) == 'before';\n\t}\n\n\t/**\n\t * Checks whether this position is located after given position. When method returns `false` it does not mean that\n\t * this position is before give one. Two positions may be located inside separate roots and in that situation this\n\t * method will still return `false`.\n\t *\n\t * @see module:engine/view/position~Position#isBefore\n\t * @see module:engine/view/position~Position#compareWith\n\t * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n\t * @returns {Boolean} Returns `true` if this position is after given position.\n\t */\n\tisAfter( otherPosition ) {\n\t\treturn this.compareWith( otherPosition ) == 'after';\n\t}\n\n\t/**\n\t * Checks whether this position is before, after or in same position that other position. Two positions may be also\n\t * different when they are located in separate roots.\n\t *\n\t * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n\t * @returns {module:engine/view/position~PositionRelation}\n\t */\n\tcompareWith( otherPosition ) {\n\t\tif ( this.isEqual( otherPosition ) ) {\n\t\t\treturn 'same';\n\t\t}\n\n\t\t// If positions have same parent.\n\t\tif ( this.parent === otherPosition.parent ) {\n\t\t\treturn this.offset - otherPosition.offset < 0 ? 'before' : 'after';\n\t\t}\n\n\t\t// Get path from root to position's parent element.\n\t\tconst path = this.getAncestors();\n\t\tconst otherPath = otherPosition.getAncestors();\n\n\t\t// Compare both path arrays to find common ancestor.\n\t\tconst result = compareArrays( path, otherPath );\n\n\t\tlet commonAncestorIndex;\n\n\t\tswitch ( result ) {\n\t\t\tcase 0:\n\t\t\t\t// No common ancestors found.\n\t\t\t\treturn 'different';\n\n\t\t\tcase 'prefix':\n\t\t\t\tcommonAncestorIndex = path.length - 1;\n\t\t\t\tbreak;\n\n\t\t\tcase 'extension':\n\t\t\t\tcommonAncestorIndex = otherPath.length - 1;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tcommonAncestorIndex = result - 1;\n\t\t}\n\n\t\t// Common ancestor of two positions.\n\t\tconst commonAncestor = path[ commonAncestorIndex ];\n\t\tconst nextAncestor1 = path[ commonAncestorIndex + 1 ];\n\t\tconst nextAncestor2 = otherPath[ commonAncestorIndex + 1 ];\n\n\t\t// Check if common ancestor is not one of the parents.\n\t\tif ( commonAncestor === this.parent ) {\n\t\t\tconst index = this.offset - nextAncestor2.index;\n\n\t\t\treturn index <= 0 ? 'before' : 'after';\n\t\t} else if ( commonAncestor === otherPosition.parent ) {\n\t\t\tconst index = nextAncestor1.index - otherPosition.offset;\n\n\t\t\treturn index < 0 ? 'before' : 'after';\n\t\t}\n\n\t\tconst index = nextAncestor1.index - nextAncestor2.index;\n\n\t\t// Compare indexes of next ancestors inside common one.\n\t\treturn index < 0 ? 'before' : 'after';\n\t}\n\n\t/**\n\t * Creates position at the given location. The location can be specified as:\n\t *\n\t * * a {@link module:engine/view/position~Position position},\n\t * * parent element and offset (offset defaults to `0`),\n\t * * parent element and `'end'` (sets position at the end of that element),\n\t * * {@link module:engine/view/item~Item view item} and `'before'` or `'after'` (sets position before or after given view item).\n\t *\n\t * This method is a shortcut to other constructors such as:\n\t *\n\t * * {@link module:engine/view/position~Position.createBefore},\n\t * * {@link module:engine/view/position~Position.createAfter},\n\t * * {@link module:engine/view/position~Position.createFromPosition}.\n\t *\n\t * @param {module:engine/view/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset=0] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\n\t */\n\tstatic createAt( itemOrPosition, offset ) {\n\t\tif ( itemOrPosition instanceof Position ) {\n\t\t\treturn this.createFromPosition( itemOrPosition );\n\t\t} else {\n\t\t\tconst node = itemOrPosition;\n\n\t\t\tif ( offset == 'end' ) {\n\t\t\t\toffset = node.is( 'text' ) ? node.data.length : node.childCount;\n\t\t\t} else if ( offset == 'before' ) {\n\t\t\t\treturn this.createBefore( node );\n\t\t\t} else if ( offset == 'after' ) {\n\t\t\t\treturn this.createAfter( node );\n\t\t\t} else if ( !offset ) {\n\t\t\t\toffset = 0;\n\t\t\t}\n\n\t\t\treturn new Position( node, offset );\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new position after given view item.\n\t *\n\t * @param {module:engine/view/item~Item} item View item after which the position should be located.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tstatic createAfter( item ) {\n\t\t// TextProxy is not a instance of Node so we need do handle it in specific way.\n\t\tif ( item.is( 'textProxy' ) ) {\n\t\t\treturn new Position( item.textNode, item.offsetInText + item.data.length );\n\t\t}\n\n\t\tif ( !item.parent ) {\n\t\t\t/**\n\t\t\t * You can not make a position after a root.\n\t\t\t *\n\t\t\t * @error position-after-root\n\t\t\t * @param {module:engine/view/node~Node} root\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-position-after-root: You can not make position after root.', { root: item } );\n\t\t}\n\n\t\treturn new Position( item.parent, item.index + 1 );\n\t}\n\n\t/**\n\t * Creates a new position before given view item.\n\t *\n\t * @param {module:engine/view/item~Item} item View item before which the position should be located.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tstatic createBefore( item ) {\n\t\t// TextProxy is not a instance of Node so we need do handle it in specific way.\n\t\tif ( item.is( 'textProxy' ) ) {\n\t\t\treturn new Position( item.textNode, item.offsetInText );\n\t\t}\n\n\t\tif ( !item.parent ) {\n\t\t\t/**\n\t\t\t * You cannot make a position before a root.\n\t\t\t *\n\t\t\t * @error position-before-root\n\t\t\t * @param {module:engine/view/node~Node} root\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-position-before-root: You can not make position before root.', { root: item } );\n\t\t}\n\n\t\treturn new Position( item.parent, item.index );\n\t}\n\n\t/**\n\t * Creates and returns a new instance of `Position`, which is equal to the passed position.\n\t *\n\t * @param {module:engine/view/position~Position} position Position to be cloned.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tstatic createFromPosition( position ) {\n\t\treturn new this( position.parent, position.offset );\n\t}\n}\n\n/**\n * A flag indicating whether this position is `'before'` or `'after'` or `'same'` as given position.\n * If positions are in different roots `'different'` flag is returned.\n *\n * @typedef {String} module:engine/view/position~PositionRelation\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/view/position.js","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_arrayMap.js","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/pomek/Projects/ckeditor/ckeditor5/~/css-loader/lib/css-base.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/moveoperation\n */\n\nimport Operation from './operation';\nimport Position from '../position';\nimport Range from '../range';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport writer from './../writer';\n\n/**\n * Operation to move a range of {@link module:engine/model/item~Item model items}\n * to given {@link module:engine/model/position~Position target position}.\n */\nexport default class MoveOperation extends Operation {\n\t/**\n\t * Creates a move operation.\n\t *\n\t * @param {module:engine/model/position~Position} sourcePosition\n\t * Position before the first {@link module:engine/model/item~Item model item} to move.\n\t * @param {Number} howMany Offset size of moved range. Moved range will start from `sourcePosition` and end at\n\t * `sourcePosition` with offset shifted by `howMany`.\n\t * @param {module:engine/model/position~Position} targetPosition Position at which moved nodes will be inserted.\n\t * @param {Number} baseVersion {@link module:engine/model/document~Document#version} on which operation can be applied.\n\t */\n\tconstructor( sourcePosition, howMany, targetPosition, baseVersion ) {\n\t\tsuper( baseVersion );\n\n\t\t/**\n\t\t * Position before the first {@link module:engine/model/item~Item model item} to move.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/moveoperation~MoveOperation#sourcePosition\n\t\t */\n\t\tthis.sourcePosition = Position.createFromPosition( sourcePosition );\n\n\t\t/**\n\t\t * Offset size of moved range.\n\t\t *\n\t\t * @member {Number} module:engine/model/operation/moveoperation~MoveOperation#howMany\n\t\t */\n\t\tthis.howMany = howMany;\n\n\t\t/**\n\t\t * Position at which moved nodes will be inserted.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/moveoperation~MoveOperation#targetPosition\n\t\t */\n\t\tthis.targetPosition = Position.createFromPosition( targetPosition );\n\n\t\t/**\n\t\t * Defines whether `MoveOperation` is sticky. If `MoveOperation` is sticky, during\n\t\t * {@link module:engine/model/operation/transform~transform operational transformation} if there will be an operation that\n\t\t * inserts some nodes at the position equal to the boundary of this `MoveOperation`, that operation will\n\t\t * get their insertion path updated to the position where this `MoveOperation` moves the range.\n\t\t *\n\t\t * @member {Boolean} module:engine/model/operation/moveoperation~MoveOperation#isSticky\n\t\t */\n\t\tthis.isSticky = false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\treturn 'move';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t * @returns {module:engine/model/operation/moveoperation~MoveOperation}\n\t */\n\tclone() {\n\t\tconst op = new this.constructor( this.sourcePosition, this.howMany, this.targetPosition, this.baseVersion );\n\t\top.isSticky = this.isSticky;\n\n\t\treturn op;\n\t}\n\n\t/**\n\t * Returns the start position of the moved range after it got moved. This may be different than\n\t * {@link module:engine/model/operation/moveoperation~MoveOperation#targetPosition} in some cases, i.e. when a range is moved\n\t * inside the same parent but {@link module:engine/model/operation/moveoperation~MoveOperation#targetPosition targetPosition}\n\t * is after {@link module:engine/model/operation/moveoperation~MoveOperation#sourcePosition sourcePosition}.\n\t *\n\t *\t\t vv              vv\n\t *\t\tabcdefg ===> adefbcg\n\t *\t\t     ^          ^\n\t *\t\t     targetPos\tmovedRangeStart\n\t *\t\t     offset 6\toffset 4\n\t *\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tgetMovedRangeStart() {\n\t\treturn this.targetPosition._getTransformedByDeletion( this.sourcePosition, this.howMany );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t * @returns {module:engine/model/operation/moveoperation~MoveOperation}\n\t */\n\tgetReversed() {\n\t\tconst newTargetPosition = this.sourcePosition._getTransformedByInsertion( this.targetPosition, this.howMany );\n\n\t\tconst op = new this.constructor( this.getMovedRangeStart(), this.howMany, newTargetPosition, this.baseVersion + 1 );\n\t\top.isSticky = this.isSticky;\n\n\t\treturn op;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\tconst sourceElement = this.sourcePosition.parent;\n\t\tconst targetElement = this.targetPosition.parent;\n\t\tconst sourceOffset = this.sourcePosition.offset;\n\t\tconst targetOffset = this.targetPosition.offset;\n\n\t\t// Validate whether move operation has correct parameters.\n\t\t// Validation is pretty complex but move operation is one of the core ways to manipulate the document state.\n\t\t// We expect that many errors might be connected with one of scenarios described below.\n\t\tif ( !sourceElement || !targetElement ) {\n\t\t\t/**\n\t\t\t * Source position or target position is invalid.\n\t\t\t *\n\t\t\t * @error move-operation-position-invalid\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'move-operation-position-invalid: Source position or target position is invalid.'\n\t\t\t);\n\t\t} else if ( sourceOffset + this.howMany > sourceElement.maxOffset ) {\n\t\t\t/**\n\t\t\t * The nodes which should be moved do not exist.\n\t\t\t *\n\t\t\t * @error move-operation-nodes-do-not-exist\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'move-operation-nodes-do-not-exist: The nodes which should be moved do not exist.'\n\t\t\t);\n\t\t} else if ( sourceElement === targetElement && sourceOffset < targetOffset && targetOffset < sourceOffset + this.howMany ) {\n\t\t\t/**\n\t\t\t * Trying to move a range of nodes into the middle of that range.\n\t\t\t *\n\t\t\t * @error move-operation-range-into-itself\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'move-operation-range-into-itself: Trying to move a range of nodes to the inside of that range.'\n\t\t\t);\n\t\t} else if ( this.sourcePosition.root == this.targetPosition.root ) {\n\t\t\tif ( compareArrays( this.sourcePosition.getParentPath(), this.targetPosition.getParentPath() ) == 'prefix' ) {\n\t\t\t\tconst i = this.sourcePosition.path.length - 1;\n\n\t\t\t\tif ( this.targetPosition.path[ i ] >= sourceOffset && this.targetPosition.path[ i ] < sourceOffset + this.howMany ) {\n\t\t\t\t\t/**\n\t\t\t\t\t * Trying to move a range of nodes into one of nodes from that range.\n\t\t\t\t\t *\n\t\t\t\t\t * @error move-operation-node-into-itself\n\t\t\t\t\t */\n\t\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t\t'move-operation-node-into-itself: Trying to move a range of nodes into one of nodes from that range.'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst range = writer.move( Range.createFromPositionAndShift( this.sourcePosition, this.howMany ), this.targetPosition );\n\n\t\treturn {\n\t\t\tsourcePosition: this.sourcePosition,\n\t\t\trange\n\t\t};\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'engine.model.operation.MoveOperation';\n\t}\n\n\t/**\n\t * Creates `MoveOperation` object from deserilized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/moveoperation~MoveOperation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\tconst sourcePosition = Position.fromJSON( json.sourcePosition, document );\n\t\tconst targetPosition = Position.fromJSON( json.targetPosition, document );\n\n\t\tconst move = new this( sourcePosition, json.howMany, targetPosition, json.baseVersion );\n\n\t\tif ( json.isSticky ) {\n\t\t\tmove.isSticky = true;\n\t\t}\n\n\t\treturn move;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/operation/moveoperation.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/text\n */\n\nimport Node from './node';\n\n/**\n * Tree view text node.\n *\n * @extends module:engine/view/node~Node\n */\nexport default class Text extends Node {\n\t/**\n\t * Creates a tree view text node.\n\t *\n\t * @param {String} data Text.\n\t */\n\tconstructor( data ) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The text content.\n\t\t *\n\t\t * Setting the data fires the {@link module:engine/view/node~Node#event:change:text change event}.\n\t\t *\n\t\t * @private\n\t\t * @member {String} module:engine/view/text~Text#_data\n\t\t */\n\t\tthis._data = data;\n\t}\n\n\t/**\n\t * Clones this node.\n\t *\n\t * @returns {module:engine/view/text~Text} Text node that is a clone of this node.\n\t */\n\tclone() {\n\t\treturn new Text( this.data );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tis( type ) {\n\t\treturn type == 'text';\n\t}\n\n\t/**\n\t * The text content.\n\t *\n\t * Setting the data fires the {@link module:engine/view/node~Node#event:change:text change event}.\n\t */\n\tget data() {\n\t\treturn this._data;\n\t}\n\n\tset data( data ) {\n\t\tthis._fireChange( 'text', this );\n\n\t\tthis._data = data;\n\t}\n\n\t/**\n\t * Checks if this text node is similar to other text node.\n\t * Both nodes should have the same data to be considered as similar.\n\t *\n\t * @param {module:engine/view/text~Text} otherNode Node to check if it is same as this node.\n\t * @returns {Boolean}\n\t */\n\tisSimilar( otherNode ) {\n\t\tif ( !( otherNode instanceof Text ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this === otherNode || this.data === otherNode.data;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/view/text.js","import checkGlobal from './_checkGlobal';\n\n/** Used to determine if values are of the language type `Object`. */\nvar objectTypes = {\n  'function': true,\n  'object': true\n};\n\n/** Detect free variable `exports`. */\nvar freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType)\n  ? exports\n  : undefined;\n\n/** Detect free variable `module`. */\nvar freeModule = (objectTypes[typeof module] && module && !module.nodeType)\n  ? module\n  : undefined;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = checkGlobal(freeExports && freeModule && typeof global == 'object' && global);\n\n/** Detect free variable `self`. */\nvar freeSelf = checkGlobal(objectTypes[typeof self] && self);\n\n/** Detect free variable `window`. */\nvar freeWindow = checkGlobal(objectTypes[typeof window] && window);\n\n/** Detect `this` as the global object. */\nvar thisGlobal = checkGlobal(objectTypes[typeof this] && this);\n\n/**\n * Used as a reference to the global object.\n *\n * The `this` value is used if it's the global object to avoid Greasemonkey's\n * restricted `window` object, otherwise the `window` object is used.\n */\nvar root = freeGlobal ||\n  ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) ||\n    freeSelf || thisGlobal || Function('return this')();\n\nexport default root;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_root.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/observablemixin\n */\n\nimport EmitterMixin from './emittermixin';\nimport CKEditorError from './ckeditorerror';\nimport extend from './lib/lodash/extend';\nimport isObject from './lib/lodash/isObject';\n\nconst attributesSymbol = Symbol( 'attributes' );\nconst boundObservablesSymbol = Symbol( 'boundObservables' );\nconst boundAttributesSymbol = Symbol( 'boundAttributes' );\n\n/**\n * Mixin that injects the \"observable attributes\" and data binding functionality.\n * Used mainly in the {@link module:ui/model~Model} class.\n *\n * @mixin ObservableMixin\n * @mixes module:utils/emittermixin~EmitterMixin\n * @implements module:utils/observablemixin~Observable\n */\nconst ObservableMixin = {\n\t/**\n\t * Creates and sets the value of an observable attribute of this object. Such an attribute becomes a part\n\t * of the state and is be observable.\n\t *\n\t * It accepts also a single object literal containing key/value pairs with attributes to be set.\n\t *\n\t * This method throws the observable-set-cannot-override error if the observable instance already\n\t * have a property with a given attribute name. This prevents from mistakenly overriding existing\n\t * properties and methods, but means that `foo.set( 'bar', 1 )` may be slightly slower than `foo.bar = 1`.\n\t *\n\t * @method #set\n\t * @param {String} name The attributes name.\n\t * @param {*} value The attributes value.\n\t */\n\tset( name, value ) {\n\t\t// If the first parameter is an Object, iterate over its properties.\n\t\tif ( isObject( name ) ) {\n\t\t\tObject.keys( name ).forEach( attr => {\n\t\t\t\tthis.set( attr, name[ attr ] );\n\t\t\t}, this );\n\n\t\t\treturn;\n\t\t}\n\n\t\tinitObservable( this );\n\n\t\tconst attributes = this[ attributesSymbol ];\n\n\t\tif ( ( name in this ) && !attributes.has( name ) ) {\n\t\t\t/**\n\t\t\t * Cannot override an existing property.\n\t\t\t *\n\t\t\t * This error is thrown when trying to {@link ~Observable#set set} an attribute with\n\t\t\t * a name of an already existing property. For example:\n\t\t\t *\n\t\t\t *\t\tlet observable = new Model();\n\t\t\t *\t\tobservable.property = 1;\n\t\t\t *\t\tobservable.set( 'property', 2 );\t\t// throws\n\t\t\t *\n\t\t\t *\t\tobservable.set( 'attr', 1 );\n\t\t\t *\t\tobservable.set( 'attr', 2 );\t\t\t// ok, because this is an existing attribute.\n\t\t\t *\n\t\t\t * @error observable-set-cannot-override\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'observable-set-cannot-override: Cannot override an existing property.' );\n\t\t}\n\n\t\tObject.defineProperty( this, name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\n\t\t\tget() {\n\t\t\t\treturn attributes.get( name );\n\t\t\t},\n\n\t\t\tset( value ) {\n\t\t\t\tconst oldValue = attributes.get( name );\n\n\t\t\t\t// Allow undefined as an initial value like A.define( 'x', undefined ) (#132).\n\t\t\t\t// Note: When attributes map has no such own property, then its value is undefined.\n\t\t\t\tif ( oldValue !== value || !attributes.has( name ) ) {\n\t\t\t\t\tattributes.set( name, value );\n\t\t\t\t\tthis.fire( 'change:' + name, name, value, oldValue );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\tthis[ name ] = value;\n\t},\n\n\t/**\n\t * Binds observable attributes to another objects implementing {@link ~ObservableMixin}\n\t * interface (like {@link module:ui/model~Model}).\n\t *\n\t * Once bound, the observable will immediately share the current state of attributes\n\t * of the observable it is bound to and react to the changes to these attributes\n\t * in the future.\n\t *\n\t * **Note**: To release the binding use {@link module:utils/observablemixin~ObservableMixin#unbind}.\n\t *\n\t *\t\tA.bind( 'a' ).to( B );\n\t *\t\tA.bind( 'a' ).to( B, 'b' );\n\t *\t\tA.bind( 'a', 'b' ).to( B, 'c', 'd' );\n\t *\t\tA.bind( 'a' ).to( B, 'b', C, 'd', ( b, d ) => b + d );\n\t *\n\t * @method #bind\n\t * @param {...String} bindAttrs Observable attributes that will be bound to another observable(s).\n\t * @returns {module:utils/observablemixin~BindChain}\n\t */\n\tbind( ...bindAttrs ) {\n\t\tif ( !bindAttrs.length || !isStringArray( bindAttrs ) ) {\n\t\t\t/**\n\t\t\t * All attributes must be strings.\n\t\t\t *\n\t\t\t * @error observable-bind-wrong-attrs\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'observable-bind-wrong-attrs: All attributes must be strings.' );\n\t\t}\n\n\t\tif ( ( new Set( bindAttrs ) ).size !== bindAttrs.length ) {\n\t\t\t/**\n\t\t\t * Attributes must be unique.\n\t\t\t *\n\t\t\t * @error observable-bind-duplicate-attrs\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'observable-bind-duplicate-attrs: Attributes must be unique.' );\n\t\t}\n\n\t\tinitObservable( this );\n\n\t\tconst boundAttributes = this[ boundAttributesSymbol ];\n\n\t\tbindAttrs.forEach( attrName => {\n\t\t\tif ( boundAttributes.has( attrName ) ) {\n\t\t\t\t/**\n\t\t\t\t * Cannot bind the same attribute more that once.\n\t\t\t\t *\n\t\t\t\t * @error observable-bind-rebind\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'observable-bind-rebind: Cannot bind the same attribute more that once.' );\n\t\t\t}\n\t\t} );\n\n\t\tconst bindings = new Map();\n\n\t\t/**\n\t\t * @typedef Binding\n\t\t * @type Object\n\t\t * @property {Array} attr Attribute which is bound.\n\t\t * @property {Array} to Array of observable–attribute components of the binding (`{ observable: ..., attr: .. }`).\n\t\t * @property {Array} callback A function which processes `to` components.\n\t\t */\n\t\tbindAttrs.forEach( a => {\n\t\t\tconst binding = { attr: a, to: [] };\n\n\t\t\tboundAttributes.set( a, binding );\n\t\t\tbindings.set( a, binding );\n\t\t} );\n\n\t\t/**\n\t\t * @typedef BindChain\n\t\t * @type Object\n\t\t * @property {Function} to See {@link ~ObservableMixin#_bindTo}.\n\t\t * @property {module:utils/observablemixin~Observable} _observable The observable which initializes the binding.\n\t\t * @property {Array} _bindAttrs Array of `_observable` attributes to be bound.\n\t\t * @property {Array} _to Array of `to()` observable–attributes (`{ observable: toObservable, attrs: ...toAttrs }`).\n\t\t * @property {Map} _bindings Stores bindings to be kept in\n\t\t *  {@link ~ObservableMixin#_boundAttributes}/{@link ~ObservableMixin#_boundObservables}\n\t\t * initiated in this binding chain.\n\t\t */\n\t\treturn {\n\t\t\tto: bindTo,\n\n\t\t\t_observable: this,\n\t\t\t_bindAttrs: bindAttrs,\n\t\t\t_to: [],\n\t\t\t_bindings: bindings\n\t\t};\n\t},\n\n\t/**\n\t * Removes the binding created with {@link ~ObservableMixin#bind}.\n\t *\n\t *\t\tA.unbind( 'a' );\n\t *\t\tA.unbind();\n\t *\n\t * @method #unbind\n\t * @param {...String} [unbindAttrs] Observable attributes to be unbound. All the bindings will\n\t * be released if no attributes provided.\n\t */\n\tunbind( ...unbindAttrs ) {\n\t\t// Nothing to do here if not inited yet.\n\t\tif ( !( attributesSymbol in this ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst boundAttributes = this[ boundAttributesSymbol ];\n\t\tconst boundObservables = this[ boundObservablesSymbol ];\n\n\t\tif ( unbindAttrs.length ) {\n\t\t\tif ( !isStringArray( unbindAttrs ) ) {\n\t\t\t\t/**\n\t\t\t\t * Attributes must be strings.\n\t\t\t\t *\n\t\t\t\t * @error observable-unbind-wrong-attrs\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'observable-unbind-wrong-attrs: Attributes must be strings.' );\n\t\t\t}\n\n\t\t\tunbindAttrs.forEach( attrName => {\n\t\t\t\tconst binding = boundAttributes.get( attrName );\n\t\t\t\tlet toObservable, toAttr, toAttrs, toAttrBindings;\n\n\t\t\t\tbinding.to.forEach( to => {\n\t\t\t\t\t// TODO: ES6 destructuring.\n\t\t\t\t\ttoObservable = to[ 0 ];\n\t\t\t\t\ttoAttr = to[ 1 ];\n\t\t\t\t\ttoAttrs = boundObservables.get( toObservable );\n\t\t\t\t\ttoAttrBindings = toAttrs[ toAttr ];\n\n\t\t\t\t\ttoAttrBindings.delete( binding );\n\n\t\t\t\t\tif ( !toAttrBindings.size ) {\n\t\t\t\t\t\tdelete toAttrs[ toAttr ];\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( !Object.keys( toAttrs ).length ) {\n\t\t\t\t\t\tboundObservables.delete( toObservable );\n\t\t\t\t\t\tthis.stopListening( toObservable, 'change' );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tboundAttributes.delete( attrName );\n\t\t\t} );\n\t\t} else {\n\t\t\tboundObservables.forEach( ( bindings, boundObservable ) => {\n\t\t\t\tthis.stopListening( boundObservable, 'change' );\n\t\t\t} );\n\n\t\t\tboundObservables.clear();\n\t\t\tboundAttributes.clear();\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @member ~ObservableMixin#_boundAttributes\n\t */\n\n\t/**\n\t * @private\n\t * @member ~ObservableMixin#_boundObservables\n\t */\n\n\t/**\n\t * @private\n\t * @member ~ObservableMixin#_bindTo\n\t */\n};\n\nexport default ObservableMixin;\n\n// Init symbol properties needed to for the observable mechanism to work.\n//\n// @private\n// @param {module:utils/observablemixin~ObservableMixin} observable\nfunction initObservable( observable ) {\n\t// Do nothing if already inited.\n\tif ( attributesSymbol in observable ) {\n\t\treturn;\n\t}\n\n\t// The internal hash containing the observable's state.\n\t//\n\t// @private\n\t// @type {Map}\n\tObject.defineProperty( observable, attributesSymbol, {\n\t\tvalue: new Map()\n\t} );\n\n\t// Map containing bindings to external observables. It shares the binding objects\n\t// (`{ observable: A, attr: 'a', to: ... }`) with {@link module:utils/observablemixin~ObservableMixin#_boundAttributes} and\n\t// it is used to observe external observables to update own attributes accordingly.\n\t// See {@link module:utils/observablemixin~ObservableMixin#bind}.\n\t//\n\t//\t\tA.bind( 'a', 'b', 'c' ).to( B, 'x', 'y', 'x' );\n\t//\t\tconsole.log( A._boundObservables );\n\t//\n\t//\t\t\tMap( {\n\t//\t\t\t\tB: {\n\t//\t\t\t\t\tx: Set( [\n\t//\t\t\t\t\t\t{ observable: A, attr: 'a', to: [ [ B, 'x' ] ] },\n\t//\t\t\t\t\t\t{ observable: A, attr: 'c', to: [ [ B, 'x' ] ] }\n\t//\t\t\t\t\t] ),\n\t//\t\t\t\t\ty: Set( [\n\t//\t\t\t\t\t\t{ observable: A, attr: 'b', to: [ [ B, 'y' ] ] },\n\t//\t\t\t\t\t] )\n\t//\t\t\t\t}\n\t//\t\t\t} )\n\t//\n\t//\t\tA.bind( 'd' ).to( B, 'z' ).to( C, 'w' ).as( callback );\n\t//\t\tconsole.log( A._boundObservables );\n\t//\n\t//\t\t\tMap( {\n\t//\t\t\t\tB: {\n\t//\t\t\t\t\tx: Set( [\n\t//\t\t\t\t\t\t{ observable: A, attr: 'a', to: [ [ B, 'x' ] ] },\n\t//\t\t\t\t\t\t{ observable: A, attr: 'c', to: [ [ B, 'x' ] ] }\n\t//\t\t\t\t\t] ),\n\t//\t\t\t\t\ty: Set( [\n\t//\t\t\t\t\t\t{ observable: A, attr: 'b', to: [ [ B, 'y' ] ] },\n\t//\t\t\t\t\t] ),\n\t//\t\t\t\t\tz: Set( [\n\t//\t\t\t\t\t\t{ observable: A, attr: 'd', to: [ [ B, 'z' ], [ C, 'w' ] ], callback: callback }\n\t//\t\t\t\t\t] )\n\t//\t\t\t\t},\n\t//\t\t\t\tC: {\n\t//\t\t\t\t\tw: Set( [\n\t//\t\t\t\t\t\t{ observable: A, attr: 'd', to: [ [ B, 'z' ], [ C, 'w' ] ], callback: callback }\n\t//\t\t\t\t\t] )\n\t//\t\t\t\t}\n\t//\t\t\t} )\n\t//\n\t// @private\n\t// @type {Map}\n\tObject.defineProperty( observable, boundObservablesSymbol, {\n\t\tvalue: new Map()\n\t} );\n\n\t// Object that stores which attributes of this observable are bound and how. It shares\n\t// the binding objects (`{ observable: A, attr: 'a', to: ... }`) with {@link utils.ObservableMixin#_boundObservables}.\n\t// This data structure is a reverse of {@link utils.ObservableMixin#_boundObservables} and it is helpful for\n\t// {@link utils.ObservableMixin#unbind}.\n\t//\n\t// See {@link utils.ObservableMixin#bind}.\n\t//\n\t//\t\tA.bind( 'a', 'b', 'c' ).to( B, 'x', 'y', 'x' );\n\t//\t\tconsole.log( A._boundAttributes );\n\t//\n\t//\t\t\tMap( {\n\t//\t\t\t\ta: { observable: A, attr: 'a', to: [ [ B, 'x' ] ] },\n\t//\t\t\t\tb: { observable: A, attr: 'b', to: [ [ B, 'y' ] ] },\n\t//\t\t\t\tc: { observable: A, attr: 'c', to: [ [ B, 'x' ] ] }\n\t//\t\t\t} )\n\t//\n\t//\t\tA.bind( 'd' ).to( B, 'z' ).to( C, 'w' ).as( callback );\n\t//\t\tconsole.log( A._boundAttributes );\n\t//\n\t//\t\t\tMap( {\n\t//\t\t\t\ta: { observable: A, attr: 'a', to: [ [ B, 'x' ] ] },\n\t//\t\t\t\tb: { observable: A, attr: 'b', to: [ [ B, 'y' ] ] },\n\t//\t\t\t\tc: { observable: A, attr: 'c', to: [ [ B, 'x' ] ] },\n\t//\t\t\t\td: { observable: A, attr: 'd', to: [ [ B, 'z' ], [ C, 'w' ] ], callback: callback }\n\t//\t\t\t} )\n\t//\n\t// @private\n\t// @type {Map}\n\tObject.defineProperty( observable, boundAttributesSymbol, {\n\t\tvalue: new Map()\n\t} );\n}\n\n// A chaining for {@link module:utils/observablemixin~ObservableMixin#bind} providing `.to()` interface.\n//\n// @private\n// @param {...[Observable|String|Function]} args Arguments of the `.to( args )` binding.\nfunction bindTo( ...args ) {\n\tconst parsedArgs = parseBindToArgs( ...args );\n\tconst bindingsKeys = Array.from( this._bindings.keys() );\n\tconst numberOfBindings = bindingsKeys.length;\n\n\t// Eliminate A.bind( 'x' ).to( B, C )\n\tif ( !parsedArgs.callback && parsedArgs.to.length > 1 ) {\n\t\t/**\n\t\t * Binding multiple observables only possible with callback.\n\t\t *\n\t\t * @error observable-bind-no-callback\n\t\t */\n\t\tthrow new CKEditorError( 'observable-bind-to-no-callback: Binding multiple observables only possible with callback.' );\n\t}\n\n\t// Eliminate A.bind( 'x', 'y' ).to( B, callback )\n\tif ( numberOfBindings > 1 && parsedArgs.callback ) {\n\t\t/**\n\t\t * Cannot bind multiple attributes and use a callback in one binding.\n\t\t *\n\t\t * @error observable-bind-to-extra-callback\n\t\t */\n\t\tthrow new CKEditorError( 'observable-bind-to-extra-callback: Cannot bind multiple attributes and use a callback in one binding.' );\n\t}\n\n\tparsedArgs.to.forEach( to => {\n\t\t// Eliminate A.bind( 'x', 'y' ).to( B, 'a' )\n\t\tif ( to.attrs.length && to.attrs.length !== numberOfBindings ) {\n\t\t\t/**\n\t\t\t * The number of attributes must match.\n\t\t\t *\n\t\t\t * @error observable-bind-to-attrs-length\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'observable-bind-to-attrs-length: The number of attributes must match.' );\n\t\t}\n\n\t\t// When no to.attrs specified, observing source attributes instead i.e.\n\t\t// A.bind( 'x', 'y' ).to( B ) -> Observe B.x and B.y\n\t\tif ( !to.attrs.length ) {\n\t\t\tto.attrs = this._bindAttrs;\n\t\t}\n\t} );\n\n\tthis._to = parsedArgs.to;\n\n\t// Fill {@link BindChain#_bindings} with callback. When the callback is set there's only one binding.\n\tif ( parsedArgs.callback ) {\n\t\tthis._bindings.get( bindingsKeys[ 0 ] ).callback = parsedArgs.callback;\n\t}\n\n\tattachBindToListeners( this._observable, this._to );\n\n\t// Update observable._boundAttributes and observable._boundObservables.\n\tupdateBindToBound( this );\n\n\t// Set initial values of bound attributes.\n\tthis._bindAttrs.forEach( attrName => {\n\t\tupdateBoundObservableAttr( this._observable, attrName );\n\t} );\n}\n\n// Check if all entries of the array are of `String` type.\n//\n// @private\n// @param {Array} arr An array to be checked.\n// @returns {Boolean}\nfunction isStringArray( arr ) {\n\treturn arr.every( a => typeof a == 'string' );\n}\n\n// Parses and validates {@link Observable#bind}`.to( args )` arguments and returns\n// an object with a parsed structure. For example\n//\n//\t\tA.bind( 'x' ).to( B, 'a', C, 'b', call );\n//\n// becomes\n//\n//\t\t{\n//\t\t\tto: [\n//\t\t\t\t{ observable: B, attrs: [ 'a' ] },\n//\t\t\t\t{ observable: C, attrs: [ 'b' ] },\n//\t\t\t],\n//\t\t\tcallback: call\n// \t\t}\n//\n// @private\n// @param {...*} args Arguments of {@link Observable#bind}`.to( args )`.\n// @returns {Object}\nfunction parseBindToArgs( ...args ) {\n\t// Eliminate A.bind( 'x' ).to()\n\tif ( !args.length ) {\n\t\t/**\n\t\t * Invalid argument syntax in `to()`.\n\t\t *\n\t\t * @error observable-bind-to-parse-error\n\t\t */\n\t\tthrow new CKEditorError( 'observable-bind-to-parse-error: Invalid argument syntax in `to()`.' );\n\t}\n\n\tconst parsed = { to: [] };\n\tlet lastObservable;\n\n\tif ( typeof args[ args.length - 1 ] == 'function' ) {\n\t\tparsed.callback = args.pop();\n\t}\n\n\targs.forEach( a => {\n\t\tif ( typeof a == 'string' ) {\n\t\t\tlastObservable.attrs.push( a );\n\t\t} else if ( typeof a == 'object' ) {\n\t\t\tlastObservable = { observable: a, attrs: [] };\n\t\t\tparsed.to.push( lastObservable );\n\t\t} else {\n\t\t\tthrow new CKEditorError( 'observable-bind-to-parse-error: Invalid argument syntax in `to()`.' );\n\t\t}\n\t} );\n\n\treturn parsed;\n}\n\n// Synchronizes {@link module:utils/observablemixin#_boundObservables} with {@link Binding}.\n//\n// @private\n// @param {Binding} binding A binding to store in {@link Observable#_boundObservables}.\n// @param {Observable} toObservable A observable, which is a new component of `binding`.\n// @param {String} toAttrName A name of `toObservable`'s attribute, a new component of the `binding`.\nfunction updateBoundObservables( observable, binding, toObservable, toAttrName ) {\n\tconst boundObservables = observable[ boundObservablesSymbol ];\n\tconst bindingsToObservable = boundObservables.get( toObservable );\n\tconst bindings = bindingsToObservable || {};\n\n\tif ( !bindings[ toAttrName ] ) {\n\t\tbindings[ toAttrName ] = new Set();\n\t}\n\n\t// Pass the binding to a corresponding Set in `observable._boundObservables`.\n\tbindings[ toAttrName ].add( binding );\n\n\tif ( !bindingsToObservable ) {\n\t\tboundObservables.set( toObservable, bindings );\n\t}\n}\n\n// Synchronizes {@link Observable#_boundAttributes} and {@link Observable#_boundObservables}\n// with {@link BindChain}.\n//\n// Assuming the following binding being created\n//\n// \t\tA.bind( 'a', 'b' ).to( B, 'x', 'y' );\n//\n// the following bindings were initialized by {@link Observable#bind} in {@link BindChain#_bindings}:\n//\n// \t\t{\n// \t\t\ta: { observable: A, attr: 'a', to: [] },\n// \t\t\tb: { observable: A, attr: 'b', to: [] },\n// \t\t}\n//\n// Iterate over all bindings in this chain and fill their `to` properties with\n// corresponding to( ... ) arguments (components of the binding), so\n//\n// \t\t{\n// \t\t\ta: { observable: A, attr: 'a', to: [ B, 'x' ] },\n// \t\t\tb: { observable: A, attr: 'b', to: [ B, 'y' ] },\n// \t\t}\n//\n// Then update the structure of {@link Observable#_boundObservables} with updated\n// binding, so it becomes:\n//\n// \t\tMap( {\n// \t\t\tB: {\n// \t\t\t\tx: Set( [\n// \t\t\t\t\t{ observable: A, attr: 'a', to: [ [ B, 'x' ] ] }\n// \t\t\t\t] ),\n// \t\t\t\ty: Set( [\n// \t\t\t\t\t{ observable: A, attr: 'b', to: [ [ B, 'y' ] ] },\n// \t\t\t\t] )\n//\t\t\t}\n// \t\t} )\n//\n// @private\n// @param {BindChain} chain The binding initialized by {@link Observable#bind}.\nfunction updateBindToBound( chain ) {\n\tlet toAttr;\n\n\tchain._bindings.forEach( ( binding, attrName ) => {\n\t\t// Note: For a binding without a callback, this will run only once\n\t\t// like in A.bind( 'x', 'y' ).to( B, 'a', 'b' )\n\t\t// TODO: ES6 destructuring.\n\t\tchain._to.forEach( to => {\n\t\t\ttoAttr = to.attrs[ binding.callback ? 0 : chain._bindAttrs.indexOf( attrName ) ];\n\n\t\t\tbinding.to.push( [ to.observable, toAttr ] );\n\t\t\tupdateBoundObservables( chain._observable, binding, to.observable, toAttr );\n\t\t} );\n\t} );\n}\n\n// Updates an attribute of a {@link Observable} with a value\n// determined by an entry in {@link Observable#_boundAttributes}.\n//\n// @private\n// @param {Observable} observable A observable which attribute is to be updated.\n// @param {String} attrName An attribute to be updated.\nfunction updateBoundObservableAttr( observable, attrName ) {\n\tconst boundAttributes = observable[ boundAttributesSymbol ];\n\tconst binding = boundAttributes.get( attrName );\n\tlet attrValue;\n\n\t// When a binding with callback is created like\n\t//\n\t// \t\tA.bind( 'a' ).to( B, 'b', C, 'c', callback );\n\t//\n\t// collect B.b and C.c, then pass them to callback to set A.a.\n\tif ( binding.callback ) {\n\t\tattrValue = binding.callback.apply( observable, binding.to.map( to => to[ 0 ][ to[ 1 ] ] ) );\n\t} else {\n\t\tattrValue = binding.to[ 0 ];\n\t\tattrValue = attrValue[ 0 ][ attrValue[ 1 ] ];\n\t}\n\n\tif ( observable.hasOwnProperty( attrName ) ) {\n\t\tobservable[ attrName ] = attrValue;\n\t} else {\n\t\tobservable.set( attrName, attrValue );\n\t}\n}\n\n// Starts listening to changes in {@link BindChain._to} observables to update\n// {@link BindChain._observable} {@link BindChain._bindAttrs}. Also sets the\n// initial state of {@link BindChain._observable}.\n//\n// @private\n// @param {BindChain} chain The chain initialized by {@link Observable#bind}.\nfunction attachBindToListeners( observable, toBindings ) {\n\ttoBindings.forEach( to => {\n\t\tconst boundObservables = observable[ boundObservablesSymbol ];\n\t\tlet bindings;\n\n\t\t// If there's already a chain between the observables (`observable` listens to\n\t\t// `to.observable`), there's no need to create another `change` event listener.\n\t\tif ( !boundObservables.get( to.observable ) ) {\n\t\t\tobservable.listenTo( to.observable, 'change', ( evt, attrName ) => {\n\t\t\t\tbindings = boundObservables.get( to.observable )[ attrName ];\n\n\t\t\t\t// Note: to.observable will fire for any attribute change, react\n\t\t\t\t// to changes of attributes which are bound only.\n\t\t\t\tif ( bindings ) {\n\t\t\t\t\tbindings.forEach( binding => {\n\t\t\t\t\t\tupdateBoundObservableAttr( observable, binding.attr );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t} );\n}\n\nextend( ObservableMixin, EmitterMixin );\n\n/**\n * Fired when an attribute changed value.\n *\n * @event module:utils/observablemixin~ObservableMixin#change:{attribute}\n * @param {String} name The attribute name.\n * @param {*} value The new attribute value.\n * @param {*} oldValue The previous attribute value.\n */\n\n/**\n * Interface representing classes which mix in {@link module:utils/observablemixin~ObservableMixin}.\n *\n * @interface Observable\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/observablemixin.js","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\t// Test for IE <= 9 as proposed by Browserhacks\n\t\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t\t// Tests for existence of standard globals is to allow style-loader \n\t\t// to operate correctly into non-standard environments\n\t\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\t\treturn window && document && document.all && !window.atob;\n\t}),\n\tgetElement = (function(fn) {\n\t\tvar memo = {};\n\t\treturn function(selector) {\n\t\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t\t}\n\t\t\treturn memo[selector]\n\t\t};\n\t})(function (styleTarget) {\n\t\treturn document.querySelector(styleTarget)\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [],\n\tfixUrls = require(\"./fixUrls\");\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (typeof options.insertInto === \"undefined\") options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar styleTarget = getElement(options.insertInto)\n\tif (!styleTarget) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\tstyleTarget.insertBefore(styleElement, styleTarget.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\tstyleTarget.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\tstyleTarget.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\tstyleTarget.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\toptions.attrs.type = \"text/css\";\n\n\tattachTagAttrs(styleElement, options.attrs);\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction createLinkElement(options) {\n\tvar linkElement = document.createElement(\"link\");\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\tattachTagAttrs(linkElement, options.attrs);\n\tinsertStyleElement(options, linkElement);\n\treturn linkElement;\n}\n\nfunction attachTagAttrs(element, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\telement.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else if(obj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\") {\n\t\tstyleElement = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, styleElement, options);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t\tif(styleElement.href)\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\n\t\t};\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyleElement.setAttribute(\"media\", media)\n\t}\n\n\tif(styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink(linkElement, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/* If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls){\n\t\tcss = fixUrls(css);\n\t}\n\n\tif(sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = linkElement.href;\n\n\tlinkElement.href = URL.createObjectURL(blob);\n\n\tif(oldSrc)\n\t\tURL.revokeObjectURL(oldSrc);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/pomek/Projects/ckeditor/ckeditor5/~/style-loader/addStyles.js\n// module id = 33\n// module chunks = 0","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/conversion/buildviewconverter\n */\n\nimport Matcher from '../view/matcher';\nimport ModelElement from '../model/element';\nimport ModelPosition from '../model/position';\nimport modelWriter from '../model/writer';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\n\n/**\n * Provides chainable, high-level API to easily build basic view-to-model converters that are appended to given\n * dispatchers. View-to-model converters are used when external data is added to the editor, i.e. when a user pastes\n * HTML content to the editor. Then, converters are used to translate this structure, possibly removing unknown/incorrect\n * nodes, and add it to the model. Also multiple, different elements might be translated into the same thing in the\n * model, i.e. `<b>` and `<strong>` elements might be converted to `bold` attribute (even though `bold` attribute will\n * be then converted only to `<strong>` tag). Instances of this class are created by\n * {@link module:engine/conversion/buildviewconverter~buildViewConverter}.\n *\n * If you need more complex converters, see {@link module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher},\n * {@link module:engine/conversion/view-to-model-converters}, {@link module:engine/conversion/viewconsumable~ViewConsumable}.\n *\n * Using this API it is possible to create various kind of converters:\n *\n * 1. View element to model element:\n *\n *\t\tbuildViewConverter().for( dispatcher ).fromElement( 'p' ).toElement( 'paragraph' );\n *\n * 2. View element to model attribute:\n *\n *\t\tbuildViewConverter().for( dispatcher ).fromElement( 'b' ).fromElement( 'strong' ).toAttribute( 'bold', 'true' );\n *\n * 3. View attribute to model attribute:\n *\n *\t\tbuildViewConverter().for( dispatcher ).fromAttribute( 'style', { 'font-weight': 'bold' } ).toAttribute( 'bold', 'true' );\n *\t\tbuildViewConverter().for( dispatcher )\n *\t\t\t.fromAttribute( 'class' )\n *\t\t\t.toAttribute( ( viewElement ) => ( { class: viewElement.getAttribute( 'class' ) } ) );\n *\n * 4. View elements and attributes to model attribute:\n *\n *\t\tbuildViewConverter().for( dispatcher )\n *\t\t\t.fromElement( 'b' ).fromElement( 'strong' ).fromAttribute( 'style', { 'font-weight': 'bold' } )\n *\t\t\t.toAttribute( 'bold', 'true' );\n *\n * 5. View {@link module:engine/view/matcher~Matcher view element matcher instance} or\n * {@link module:engine/view/matcher~Matcher#add matcher pattern}\n * to model element or attribute:\n *\n *\t\tconst matcher = new ViewMatcher();\n *\t\tmatcher.add( 'div', { class: 'quote' } );\n *\t\tbuildViewConverter().for( dispatcher ).from( matcher ).toElement( 'quote' );\n *\n *\t\tbuildViewConverter().for( dispatcher ).from( { name: 'span', class: 'bold' } ).toAttribute( 'bold', 'true' );\n *\n * Note, that converters built using `ViewConverterBuilder` automatically check {@link module:engine/model/schema~Schema schema}\n * if created model structure is valid. If given conversion would be invalid according to schema, it is ignored.\n *\n * It is possible to provide creator functions as parameters for {@link ~ViewConverterBuilder#toElement}\n * and {@link module:engine/conversion/buildviewconverter~ViewConverterBuilder#toAttribute} methods. See their descriptions to learn more.\n *\n * By default, converter will {@link module:engine/conversion/viewconsumable~ViewConsumable#consume consume} every value specified in\n * given `from...` query, i.e. `.from( { name: 'span', class: 'bold' } )` will make converter consume both `span` name\n * and `bold` class. It is possible to change this behavior using {@link ~ViewConverterBuilder#consuming consuming}\n * modifier. The modifier alters the last `fromXXX` query used before it. To learn more about consuming values,\n * see {@link module:engine/conversion/viewconsumable~ViewConsumable}.\n *\n * It is also possible to {@link module:engine/conversion/buildviewconverter~ViewConverterBuilder#withPriority change default priority}\n * of created converters to decide which converter should be fired earlier and which later. This is useful if you provide\n * a general converter but want to provide different converter for a specific-case (i.e. given view element is converted\n * always to given model element, but if it has given class it is converter to other model element). For this,\n * use {@link module:engine/conversion/buildviewconverter~ViewConverterBuilder#withPriority withPriority} modifier. The modifier alters\n * the last `from...` query used before it.\n *\n * Note that `to...` methods are \"terminators\", which means that should be the last one used in building converter.\n *\n * You can use {@link module:engine/conversion/buildmodelconverter~ModelConverterBuilder}\n * to create \"opposite\" converters - from model to view.\n */\nclass ViewConverterBuilder {\n\t/**\n\t * Creates `ViewConverterBuilder` with given `dispatchers` registered to it.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Dispatchers to which converters will be attached.\n\t\t *\n\t\t * @type {Array.<module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher>}\n\t\t * @private\n\t\t */\n\t\tthis._dispatchers = [];\n\n\t\t/**\n\t\t * Stores \"from\" queries.\n\t\t *\n\t\t * @type {Array}\n\t\t * @private\n\t\t */\n\t\tthis._from = [];\n\t}\n\n\t/**\n\t * Set one or more dispatchers which the built converter will be attached to.\n\t *\n\t * @chainable\n\t * @param {...module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher} dispatchers One or more dispatchers.\n\t * @returns {module:engine/conversion/buildviewconverter~ViewConverterBuilder}\n\t */\n\tfor( ...dispatchers ) {\n\t\tthis._dispatchers = dispatchers;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Registers what view element should be converted.\n\t *\n\t *\t\tbuildViewConverter().for( dispatcher ).fromElement( 'p' ).toElement( 'paragraph' );\n\t *\n\t * @chainable\n\t * @param {String} elementName View element name.\n\t * @returns {module:engine/conversion/buildviewconverter~ViewConverterBuilder}\n\t */\n\tfromElement( elementName ) {\n\t\treturn this.from( { name: elementName } );\n\t}\n\n\t/**\n\t * Registers what view attribute should be converted.\n\t *\n\t *\t\tbuildViewConverter().for( dispatcher ).fromAttribute( 'style', { 'font-weight': 'bold' } ).toAttribute( 'bold', 'true' );\n\t *\n\t * @chainable\n\t * @param {String|RegExp} key View attribute key.\n\t * @param {String|RegExp} [value] View attribute value.\n\t * @returns {module:engine/conversion/buildviewconverter~ViewConverterBuilder}\n\t */\n\tfromAttribute( key, value = /.*/ ) {\n\t\tconst pattern = {};\n\n\t\tif ( key === 'style' || key === 'class' ) {\n\t\t\tpattern[ key ] = value;\n\t\t} else {\n\t\t\tpattern.attribute = {};\n\t\t\tpattern.attribute[ key ] = value;\n\t\t}\n\n\t\tconst matcher = new Matcher( pattern );\n\n\t\tthis._from.push( {\n\t\t\tmatcher,\n\t\t\tconsume: false,\n\t\t\tpriority: null,\n\t\t\tattributeKey: key\n\t\t} );\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Registers what view pattern should be converted. The method accepts either {@link module:engine/view/matcher~Matcher view matcher}\n\t * or view matcher pattern.\n\t *\n\t *\t\tconst matcher = new ViewMatcher();\n\t *\t\tmatcher.add( 'div', { class: 'quote' } );\n\t *\t\tbuildViewConverter().for( dispatcher ).from( matcher ).toElement( 'quote' );\n\t *\n\t *\t\tbuildViewConverter().for( dispatcher ).from( { name: 'span', class: 'bold' } ).toAttribute( 'bold', 'true' );\n\t *\n\t * @chainable\n\t * @param {Object|module:engine/view/matcher~Matcher} matcher View matcher or view matcher pattern.\n\t * @returns {module:engine/conversion/buildviewconverter~ViewConverterBuilder}\n\t */\n\tfrom( matcher ) {\n\t\tif ( !( matcher instanceof Matcher ) ) {\n\t\t\tmatcher = new Matcher( matcher );\n\t\t}\n\n\t\tthis._from.push( {\n\t\t\tmatcher,\n\t\t\tconsume: false,\n\t\t\tpriority: null\n\t\t} );\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Modifies which consumable values will be {@link module:engine/conversion/viewconsumable~ViewConsumable#consume consumed}\n\t * by built converter.\n\t * It modifies the last `from...` query. Can be used after each `from...` query in given chain. Useful for providing\n\t * more specific matches.\n\t *\n\t *\t\t// This converter will only handle class bold conversion (to proper attribute) but span element\n\t *\t\t// conversion will have to be done in separate converter.\n\t *\t\t// Without consuming modifier, the converter would consume both class and name, so a converter for\n\t *\t\t// span element would not be fired.\n\t *\t\tbuildViewConverter().for( dispatcher )\n\t *\t\t\t.from( { name: 'span', class: 'bold' } ).consuming( { class: 'bold' } )\n\t *\t\t\t.toAttribute( 'bold', 'true' } );\n\t *\n\t *\t\tbuildViewConverter().for( dispatcher )\n\t *\t\t\t.fromElement( 'img' ).consuming( { name: true, attribute: [ 'src', 'title' ] } )\n\t *\t\t\t.toElement( ( viewElement ) => new ModelElement( 'image', { src: viewElement.getAttribute( 'src' ),\n\t *\t\t\t                                                            title: viewElement.getAttribute( 'title' ) } );\n\t *\n\t * **Note:** All and only values from passed object has to be consumable on converted view element. This means that\n\t * using `consuming` method, you can either make looser conversion conditions (like in first example) or tighter\n\t * conversion conditions (like in second example). So, the view element, to be converter, has to match query of\n\t * `from...` method and then have to have enough consumable values to consume.\n\t *\n\t * @see module:engine/conversion/viewconsumable~ViewConsumable\n\t * @chainable\n\t * @param {Object} consume Values to consume.\n\t * @returns {module:engine/conversion/buildviewconverter~ViewConverterBuilder}\n\t */\n\tconsuming( consume ) {\n\t\tconst lastFrom = this._from[ this._from.length - 1 ];\n\t\tlastFrom.consume = consume;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Changes default priority for built converter. It modifies the last `from...` query. Can be used after each\n\t * `from...` query in given chain. Useful for overwriting converters. The lower the number, the earlier converter will be fired.\n\t *\n\t *\t\tbuildViewConverter().for( dispatcher ).fromElement( 'p' ).toElement( 'paragraph' );\n\t *\t\t// Register converter with proper priority, otherwise \"p\" element would get consumed by first\n\t *\t\t// converter and the second converter would not be fired.\n\t *\t\tbuildViewConverter().for( dispatcher )\n\t *\t\t\t.from( { name: 'p', class: 'custom' } ).withPriority( 9 )\n\t *\t\t\t.toElement( 'customParagraph' );\n\t *\n\t * **Note:** `ViewConverterBuilder` takes care of applying all `toElement()` conversions before all `toAttribute()`\n\t * conversions. This is done by setting default `toElement()` priority to `normal` and `toAttribute()` priority to `low`.\n\t * It is recommended to set converter priority for `toElement()` around `0` (the value of `normal` priority)\n\t * and `toAttribute()` priority around `-1000` (the value of `low` priority).\n\t * It is important that model elements are created before attributes, otherwise attributes would\n\t * not be applied or other errors may occur.\n\t *\n\t * @chainable\n\t * @param {Number} priority Converter priority.\n\t * @returns {module:engine/conversion/buildviewconverter~ViewConverterBuilder}\n\t */\n\twithPriority( priority ) {\n\t\tconst lastFrom = this._from[ this._from.length - 1 ];\n\t\tlastFrom.priority = priority;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Registers what model element will be created by converter.\n\t *\n\t * Method accepts two ways of providing what kind of model element will be created. You can pass model element\n\t * name as a `string` or a function that will return model element instance. If you provide creator function,\n\t * it will be passed converted view element as first and only parameter.\n\t *\n\t *\t\tbuildViewConverter().for( dispatcher ).fromElement( 'p' ).toElement( 'paragraph' );\n\t *\t\tbuildViewConverter().for( dispatcher )\n\t *\t\t\t.fromElement( 'img' )\n\t *\t\t\t.toElement( ( viewElement ) => new ModelElement( 'image', { src: viewElement.getAttribute( 'src' ) } );\n\t *\n\t * @param {String|Function} element Model element name or model element creator function.\n\t */\n\ttoElement( element ) {\n\t\tfunction eventCallbackGen( from ) {\n\t\t\treturn ( evt, data, consumable, conversionApi ) => {\n\t\t\t\t// There is one callback for all patterns in the matcher.\n\t\t\t\t// This will be usually just one pattern but we support matchers with many patterns too.\n\t\t\t\tconst matchAll = from.matcher.matchAll( data.input );\n\n\t\t\t\t// If there is no match, this callback should not do anything.\n\t\t\t\tif ( !matchAll ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Now, for every match between matcher and actual element, we will try to consume the match.\n\t\t\t\tfor ( const match of matchAll ) {\n\t\t\t\t\t// Create model element basing on creator function or element name.\n\t\t\t\t\tconst modelElement = element instanceof Function ? element( data.input ) : new ModelElement( element );\n\n\t\t\t\t\t// Do not convert if element building function returned falsy value.\n\t\t\t\t\tif ( !modelElement ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check whether generated structure is okay with `Schema`.\n\t\t\t\t\tconst keys = Array.from( modelElement.getAttributeKeys() );\n\n\t\t\t\t\tif ( !conversionApi.schema.check( { name: modelElement.name, attributes: keys, inside: data.context } ) ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Try to consume appropriate values from consumable values list.\n\t\t\t\t\tif ( !consumable.consume( data.input, from.consume || match.match ) ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// If everything is fine, we are ready to start the conversion.\n\t\t\t\t\t// Add newly created `modelElement` to the parents stack.\n\t\t\t\t\tdata.context.push( modelElement );\n\n\t\t\t\t\t// Convert children of converted view element and append them to `modelElement`.\n\t\t\t\t\tconst modelChildren = conversionApi.convertChildren( data.input, consumable, data );\n\t\t\t\t\tconst insertPosition = ModelPosition.createAt( modelElement, 'end' );\n\t\t\t\t\tmodelWriter.insert( insertPosition, modelChildren );\n\n\t\t\t\t\t// Remove created `modelElement` from the parents stack.\n\t\t\t\t\tdata.context.pop();\n\n\t\t\t\t\t// Add `modelElement` as a result.\n\t\t\t\t\tdata.output = modelElement;\n\n\t\t\t\t\t// Prevent multiple conversion if there are other correct matches.\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tthis._setCallback( eventCallbackGen, 'normal' );\n\t}\n\n\t/**\n\t * Registers what model attribute will be created by converter.\n\t *\n\t * Method accepts two ways of providing what kind of model attribute will be created. You can either pass two strings\n\t * representing attribute key and attribute value or a function that returns an object with `key` and `value` properties.\n\t * If you provide creator function, it will be passed converted view element as first and only parameter.\n\t *\n\t *\t\tbuildViewConverter().for( dispatcher ).fromAttribute( 'alt' ).toAttribute( 'alt' );\n\t *\t\tbuildViewConverter().for( dispatcher ).fromAttribute( 'style', { 'font-weight': 'bold' } ).toAttribute( 'bold', true );\n\t *\t\tbuildViewConverter().for( dispatcher )\n\t *\t\t\t.fromAttribute( 'class' )\n\t *\t\t\t.toAttribute( ( viewElement ) => ( { key: 'class', value: 'class-' + viewElement.getAttribute( 'class' ) } ) );\n\t *\n\t * @param {String|Function} keyOrCreator Attribute key or a creator function.\n\t * @param {String} [value] Attribute value. Ignored if `keyOrCreator` is not a `string`. If `keyOrCreator` is `string`,\n\t * if `value` is not set, attribute value from converted element will be used.\n\t */\n\ttoAttribute( keyOrCreator, value ) {\n\t\tfunction eventCallbackGen( from ) {\n\t\t\treturn ( evt, data, consumable, conversionApi ) => {\n\t\t\t\t// There is one callback for all patterns in the matcher.\n\t\t\t\t// This will be usually just one pattern but we support matchers with many patterns too.\n\t\t\t\tconst matchAll = from.matcher.matchAll( data.input );\n\n\t\t\t\t// If there is no match, this callback should not do anything.\n\t\t\t\tif ( !matchAll ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Now, for every match between matcher and actual element, we will try to consume the match.\n\t\t\t\tfor ( const match of matchAll ) {\n\t\t\t\t\t// Try to consume appropriate values from consumable values list.\n\t\t\t\t\tif ( !consumable.consume( data.input, from.consume || match.match ) ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Since we are converting to attribute we need an output on which we will set the attribute.\n\t\t\t\t\t// If the output is not created yet, we will create it.\n\t\t\t\t\tif ( !data.output ) {\n\t\t\t\t\t\tdata.output = conversionApi.convertChildren( data.input, consumable, data );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Use attribute creator function, if provided.\n\t\t\t\t\tlet attribute;\n\n\t\t\t\t\tif ( keyOrCreator instanceof Function ) {\n\t\t\t\t\t\tattribute = keyOrCreator( data.input );\n\n\t\t\t\t\t\tif ( !attribute ) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tattribute = {\n\t\t\t\t\t\t\tkey: keyOrCreator,\n\t\t\t\t\t\t\tvalue: value ? value : data.input.getAttribute( from.attributeKey )\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Set attribute on current `output`. `Schema` is checked inside this helper function.\n\t\t\t\t\tsetAttributeOn( data.output, attribute, data, conversionApi );\n\n\t\t\t\t\t// Prevent multiple conversion if there are other correct matches.\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tthis._setCallback( eventCallbackGen, 'low' );\n\t}\n\n\t/**\n\t * Registers how model element marking marker range will be created by converter.\n\t *\n\t * Created element has to match the following pattern:\n\t *\n\t * \t\t{ name: '$marker', attribute: { data-name: /^\\w/ } }\n\t *\n\t * There are two ways of creating this element:\n\t *\n\t * 1. Makes sure that converted view element will have property `data-name` then converter will\n\t * automatically take this property value. In this case there is no need to provide creator function.\n\t * For the following view:\n\t *\n\t *\t\t<marker data-name=\"search\"></marker>foo<marker data-name=\"search\"></marker>\n\t *\n\t * converter should look like this:\n\t *\n\t *\t\tbuildViewConverter().for( dispatcher ).fromElement( 'marker' ).toMarker();\n\t *\n\t * 2. Creates element by creator:\n\t *\n\t * For the following view:\n\t *\n\t * \t\t<span foo=\"search\"></span>foo<span foo=\"search\"></span>\n\t *\n\t * converter should look like this:\n\t *\n\t * \t\tbuildViewConverter().for( dispatcher ).from( { name: 'span', { attribute: foo: /^\\w/ } } ).toMarker( ( data ) => {\n\t * \t\t\treturn new Element( '$marker', { 'data-name': data.getAttribute( 'foo' ) } );\n\t * \t\t} );\n\t *\n\t * @param {Function} [creator] Creator function.\n\t */\n\ttoMarker( creator ) {\n\t\tfunction eventCallbackGen( from ) {\n\t\t\treturn ( evt, data, consumable ) => {\n\t\t\t\t// There is one callback for all patterns in the matcher.\n\t\t\t\t// This will be usually just one pattern but we support matchers with many patterns too.\n\t\t\t\tconst matchAll = from.matcher.matchAll( data.input );\n\n\t\t\t\t// If there is no match, this callback should not do anything.\n\t\t\t\tif ( !matchAll ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet modelElement;\n\n\t\t\t\t// When creator is provided then create model element basing on creator function.\n\t\t\t\tif ( creator instanceof Function ) {\n\t\t\t\t\tmodelElement = creator( data.input );\n\t\t\t\t// When there is no creator then create model element basing on data from view element.\n\t\t\t\t} else {\n\t\t\t\t\tmodelElement = new ModelElement( '$marker', { 'data-name': data.input.getAttribute( 'data-name' ) } );\n\t\t\t\t}\n\n\t\t\t\t// Check if model element is correct (has proper name and property).\n\t\t\t\tif ( modelElement.name != '$marker' || typeof modelElement.getAttribute( 'data-name' ) != 'string' ) {\n\t\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t\t'build-view-converter-invalid-marker: Invalid model element to mark marker range.'\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// Now, for every match between matcher and actual element, we will try to consume the match.\n\t\t\t\tfor ( const match of matchAll ) {\n\t\t\t\t\t// Try to consume appropriate values from consumable values list.\n\t\t\t\t\tif ( !consumable.consume( data.input, from.consume || match.match ) ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tdata.output = modelElement;\n\n\t\t\t\t\t// Prevent multiple conversion if there are other correct matches.\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tthis._setCallback( eventCallbackGen, 'normal' );\n\t}\n\n\t/**\n\t * Helper function that uses given callback generator to created callback function and sets it on registered dispatchers.\n\t *\n\t * @param eventCallbackGen\n\t * @param defaultPriority\n\t * @private\n\t */\n\t_setCallback( eventCallbackGen, defaultPriority ) {\n\t\t// We will add separate event callback for each registered `from` entry.\n\t\tfor ( const from of this._from ) {\n\t\t\t// We have to figure out event name basing on matcher's patterns.\n\t\t\t// If there is exactly one pattern and it has `name` property we will used that name.\n\t\t\tconst matcherElementName = from.matcher.getElementName();\n\t\t\tconst eventName = matcherElementName ? 'element:' + matcherElementName : 'element';\n\t\t\tconst eventCallback = eventCallbackGen( from );\n\n\t\t\tconst priority = from.priority === null ? defaultPriority : from.priority;\n\n\t\t\t// Add event to each registered dispatcher.\n\t\t\tfor ( const dispatcher of this._dispatchers ) {\n\t\t\t\tdispatcher.on( eventName, eventCallback, { priority } );\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Helper function that sets given attributes on given `module:engine/model/node~Node` or\n// `module:engine/model/documentfragment~DocumentFragment`.\nfunction setAttributeOn( toChange, attribute, data, conversionApi ) {\n\tif ( isIterable( toChange ) ) {\n\t\tfor ( const node of toChange ) {\n\t\t\tsetAttributeOn( node, attribute, data, conversionApi );\n\t\t}\n\n\t\treturn;\n\t}\n\n\tconst keys = Array.from( toChange.getAttributeKeys() );\n\tkeys.push( attribute.key );\n\n\tconst schemaQuery = {\n\t\tname: toChange.name || '$text',\n\t\tattributes: keys,\n\t\tinside: data.context\n\t};\n\n\tif ( conversionApi.schema.check( schemaQuery ) ) {\n\t\ttoChange.setAttribute( attribute.key, attribute.value );\n\t}\n}\n\n/**\n * Entry point for view-to-model converters builder. This chainable API makes it easy to create basic, most common\n * view-to-model converters and attach them to provided dispatchers. The method returns an instance of\n * {@link module:engine/conversion/buildviewconverter~ViewConverterBuilder}.\n */\nexport default function buildViewConverter() {\n\treturn new ViewConverterBuilder();\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/conversion/buildviewconverter.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module module:engine/model/documentfragment\n */\n\nimport NodeList from './nodelist';\nimport Element from './element';\nimport Text from './text';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\n\n/**\n * DocumentFragment represents a part of model which does not have a common root but it's top-level nodes\n * can be seen as siblings. In other words, it is a detached part of model tree, without a root.\n *\n * DocumentFragment has own {@link module:engine/model/markercollection~MarkerCollection}. Markers from this collection\n * will be set to the {@link module:engine/model/document~Document#markers document markers} by a\n * {@link module:engine/model/writer~writer.insert} function.\n */\nexport default class DocumentFragment {\n\t/**\n\t * Creates an empty `DocumentFragment`.\n\t *\n\t * @param {module:engine/model/node~Node|Iterable.<module:engine/model/node~Node>} [children]\n\t * Nodes to be contained inside the `DocumentFragment`.\n\t */\n\tconstructor( children ) {\n\t\t/**\n\t\t * DocumentFragment static markers map. This is a list of names and {@link module:engine/model/range~Range ranges}\n\t\t * which will be set as Markers to {@link module:engine/model/document~Document#markers document markers collection}\n\t\t * when DocumentFragment will be inserted to the document.\n\t\t *\n\t\t * @member {Map<String, {module:engine/model/range~Range}>} module:engine/model/documentfragment~DocumentFragment#markers\n\t\t */\n\t\tthis.markers = new Map();\n\n\t\t/**\n\t\t * List of nodes contained inside the document fragment.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/nodelist~NodeList} module:engine/model/documentfragment~DocumentFragment#_children\n\t\t */\n\t\tthis._children = new NodeList();\n\n\t\tif ( children ) {\n\t\t\tthis.insertChildren( 0, children );\n\t\t}\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all nodes contained inside this document fragment.\n\t *\n\t * @returns {Iterator.<module:engine/model/node~Node>}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this.getChildren();\n\t}\n\n\t/**\n\t * Number of this document fragment's children.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget childCount() {\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Sum of {module:engine/model/node~Node#offsetSize offset sizes} of all of this document fragment's children.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget maxOffset() {\n\t\treturn this._children.maxOffset;\n\t}\n\n\t/**\n\t * Is `true` if there are no nodes inside this document fragment, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isEmpty() {\n\t\treturn this.childCount === 0;\n\t}\n\n\t/**\n\t * Artificial root of `DocumentFragment`. Returns itself. Added for compatibility reasons.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Artificial parent of `DocumentFragment`. Returns `null`. Added for compatibility reasons.\n\t *\n\t * @readonly\n\t * @type {null}\n\t */\n\tget parent() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * Checks whether given model tree object is of given type.\n\t *\n\t * Read more in {@link module:engine/model/node~Node#is}.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type == 'documentFragment';\n\t}\n\n\t/**\n\t * Gets the child at the given index. Returns `null` if incorrect index was passed.\n\t *\n\t * @param {Number} index Index of child.\n\t * @returns {module:engine/model/node~Node|null} Child node.\n\t */\n\tgetChild( index ) {\n\t\treturn this._children.getNode( index );\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all of this document fragment's children.\n\t *\n\t * @returns {Iterable.<module:engine/model/node~Node>}\n\t */\n\tgetChildren() {\n\t\treturn this._children[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Returns an index of the given child node. Returns `null` if given node is not a child of this document fragment.\n\t *\n\t * @param {module:engine/model/node~Node} node Child node to look for.\n\t * @returns {Number|null} Child node's index.\n\t */\n\tgetChildIndex( node ) {\n\t\treturn this._children.getNodeIndex( node );\n\t}\n\n\t/**\n\t * Returns the starting offset of given child. Starting offset is equal to the sum of\n\t * {module:engine/model/node~Node#offsetSize offset sizes} of all node's siblings that are before it. Returns `null` if\n\t * given node is not a child of this document fragment.\n\t *\n\t * @param {module:engine/model/node~Node} node Child node to look for.\n\t * @returns {Number|null} Child node's starting offset.\n\t */\n\tgetChildStartOffset( node ) {\n\t\treturn this._children.getNodeStartOffset( node );\n\t}\n\n\t/**\n\t * Returns path to a `DocumentFragment`, which is an empty array. Added for compatibility reasons.\n\t *\n\t * @returns {Array}\n\t */\n\tgetPath() {\n\t\treturn [];\n\t}\n\n\t/**\n\t * Converts offset \"position\" to index \"position\".\n\t *\n\t * Returns index of a node that occupies given offset. If given offset is too low, returns `0`. If given offset is\n\t * too high, returns index after last child}.\n\t *\n\t *\t\tconst textNode = new Text( 'foo' );\n\t *\t\tconst pElement = new Element( 'p' );\n\t *\t\tconst docFrag = new DocumentFragment( [ textNode, pElement ] );\n\t *\t\tdocFrag.offsetToIndex( -1 ); // Returns 0, because offset is too low.\n\t *\t\tdocFrag.offsetToIndex( 0 ); // Returns 0, because offset 0 is taken by `textNode` which is at index 0.\n\t *\t\tdocFrag.offsetToIndex( 1 ); // Returns 0, because `textNode` has `offsetSize` equal to 3, so it occupies offset 1 too.\n\t *\t\tdocFrag.offsetToIndex( 2 ); // Returns 0.\n\t *\t\tdocFrag.offsetToIndex( 3 ); // Returns 1.\n\t *\t\tdocFrag.offsetToIndex( 4 ); // Returns 2. There are no nodes at offset 4, so last available index is returned.\n\t *\n\t * @param {Number} offset Offset to look for.\n\t * @returns {Number} Index of a node that occupies given offset.\n\t */\n\toffsetToIndex( offset ) {\n\t\treturn this._children.offsetToIndex( offset );\n\t}\n\n\t/**\n\t * {@link #insertChildren Inserts} one or more nodes at the end of this document fragment.\n\t *\n\t * @param {module:engine/model/node~Node|Iterable.<module:engine/model/node~Node>} nodes Nodes to be inserted.\n\t */\n\tappendChildren( nodes ) {\n\t\tthis.insertChildren( this.childCount, nodes );\n\t}\n\n\t/**\n\t * Inserts one or more nodes at the given index and sets {@link module:engine/model/node~Node#parent parent} of these nodes\n\t * to this document fragment.\n\t *\n\t * @param {Number} index Index at which nodes should be inserted.\n\t * @param {module:engine/model/node~Node|Iterable.<module:engine/model/node~Node>} nodes Nodes to be inserted.\n\t */\n\tinsertChildren( index, nodes ) {\n\t\tnodes = normalize( nodes );\n\n\t\tfor ( const node of nodes ) {\n\t\t\tnode.parent = this;\n\t\t}\n\n\t\tthis._children.insertNodes( index, nodes );\n\t}\n\n\t/**\n\t * Removes one or more nodes starting at the given index\n\t * and sets {@link module:engine/model/node~Node#parent parent} of these nodes to `null`.\n\t *\n\t * @param {Number} index Index of the first node to remove.\n\t * @param {Number} [howMany=1] Number of nodes to remove.\n\t * @returns {Array.<module:engine/model/node~Node>} Array containing removed nodes.\n\t */\n\tremoveChildren( index, howMany = 1 ) {\n\t\tconst nodes = this._children.removeNodes( index, howMany );\n\n\t\tfor ( const node of nodes ) {\n\t\t\tnode.parent = null;\n\t\t}\n\n\t\treturn nodes;\n\t}\n\n\t/**\n\t * Converts `DocumentFragment` instance to plain object and returns it.\n\t * Takes care of converting all of this document fragment's children.\n\t *\n\t * @returns {Object} `DocumentFragment` instance converted to plain object.\n\t */\n\ttoJSON() {\n\t\tconst json = [];\n\n\t\tfor ( const node of this._children ) {\n\t\t\tjson.push( node.toJSON() );\n\t\t}\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * Creates a `DocumentFragment` instance from given plain object (i.e. parsed JSON string).\n\t * Converts `DocumentFragment` children to proper nodes.\n\t *\n\t * @param {Object} json Plain object to be converted to `DocumentFragment`.\n\t * @returns {module:engine/model/documentfragment~DocumentFragment} `DocumentFragment` instance created using given plain object.\n\t */\n\tstatic fromJSON( json ) {\n\t\tconst children = [];\n\n\t\tfor ( const child of json ) {\n\t\t\tif ( child.name ) {\n\t\t\t\t// If child has name property, it is an Element.\n\t\t\t\tchildren.push( Element.fromJSON( child ) );\n\t\t\t} else {\n\t\t\t\t// Otherwise, it is a Text node.\n\t\t\t\tchildren.push( Text.fromJSON( child ) );\n\t\t\t}\n\t\t}\n\n\t\treturn new DocumentFragment( children );\n\t}\n}\n\n// Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/model/node~Node|Iterable.<String|module:engine/model/node~Node>}\n// @return {Iterable.<module:engine/model/node~Node>}\nfunction normalize( nodes ) {\n\t// Separate condition because string is iterable.\n\tif ( typeof nodes == 'string' ) {\n\t\treturn [ new Text( nodes ) ];\n\t}\n\n\tif ( !isIterable( nodes ) ) {\n\t\tnodes = [ nodes ];\n\t}\n\n\t// Array.from to enable .map() on non-arrays.\n\treturn Array.from( nodes )\n\t\t.map( node => {\n\t\t\treturn typeof node == 'string' ? new Text( node ) : node;\n\t\t} );\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/documentfragment.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/operation\n */\n\nimport clone from '@ckeditor/ckeditor5-utils/src/lib/lodash/clone';\n\n/**\n * Abstract base operation class.\n *\n * @abstract\n */\nexport default class Operation {\n\t/**\n\t * Base operation constructor.\n\t * @param {Number} baseVersion {@link module:engine/model/document~Document#version} on which the operation can be applied.\n\t */\n\tconstructor( baseVersion ) {\n\t\t/**\n\t\t * {@link module:engine/model/document~Document#version} on which operation can be applied. If you try to\n\t\t * {@link module:engine/model/document~Document#applyOperation apply} operation with different base version than the\n\t\t * {@link module:engine/model/document~Document#version document version} the\n\t\t * {@link module:utils/ckeditorerror~CKEditorError model-document-applyOperation-wrong-version} error is thrown.\n\t\t *\n\t\t * @member {Number}\n\t\t */\n\t\tthis.baseVersion = baseVersion;\n\n\t\t/**\n\t\t * Operation type.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String} #type\n\t\t */\n\n\t\t/**\n\t\t * {@link module:engine/model/delta/delta~Delta Delta} which the operation is a part of. This property is set by the\n\t\t * {@link module:engine/model/delta/delta~Delta delta} when the operations is added to it by the\n\t\t * {@link module:engine/model/delta/delta~Delta#addOperation} method.\n\t\t *\n\t\t * @member {module:engine/model/delta/delta~Delta} #delta\n\t\t */\n\n\t\t/**\n\t\t * Creates and returns an operation that has the same parameters as this operation.\n\t\t *\n\t\t * @method #clone\n\t\t * @returns {module:engine/model/operation/operation~Operation} Clone of this operation.\n\t\t */\n\n\t\t/**\n\t\t * Creates and returns a reverse operation. Reverse operation when executed right after\n\t\t * the original operation will bring back tree model state to the point before the original\n\t\t * operation execution. In other words, it reverses changes done by the original operation.\n\t\t *\n\t\t * Keep in mind that tree model state may change since executing the original operation,\n\t\t * so reverse operation will be \"outdated\". In that case you will need to\n\t\t * {@link module:engine/model/operation/transform~transform} it by all operations that were executed after the original operation.\n\t\t *\n\t\t * @method #getReversed\n\t\t * @returns {module:engine/model/operation/operation~Operation} Reversed operation.\n\t\t */\n\n\t\t/**\n\t\t * Executes the operation - modifications described by the operation attributes\n\t\t * will be applied to the tree model.\n\t\t *\n\t\t * @protected\n\t\t * @method #_execute\n\t\t * @returns {Object} Object with additional information about the applied changes. It properties depends on the\n\t\t * operation type.\n\t\t */\n\t}\n\n\t/**\n\t * Custom toJSON method to solve child-parent circular dependencies.\n\t *\n\t * @method #toJSON\n\t * @returns {Object} Clone of this object with the delta property replaced with string.\n\t */\n\ttoJSON() {\n\t\tconst json = clone( this, true );\n\n\t\tjson.__className = this.constructor.className;\n\n\t\t// Remove parent delta to avoid circular dependencies.\n\t\tdelete json.delta;\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * Name of the operation class used for serialization.\n\t *\n\t * @type {String}\n\t */\n\tstatic get className() {\n\t\treturn 'engine.model.operation.Operation';\n\t}\n\n\t/**\n\t * Creates Operation object from deserilized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} doc Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/operation~Operation}\n\t */\n\tstatic fromJSON( json ) {\n\t\treturn new this( json.baseVersion );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/operation/operation.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/treewalker\n */\n\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport Element from './element';\nimport Position from './position';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Position iterator class. It allows to iterate forward and backward over the document.\n */\nexport default class TreeWalker {\n\t/**\n\t * Creates a range iterator. All parameters are optional, but you have to specify either `boundaries` or `startPosition`.\n\t *\n\t * @constructor\n\t * @param {Object} [options={}] Object with configuration.\n\t * @param {'forward'|'backward'} [options.direction='forward'] Walking direction.\n\t * @param {module:engine/model/range~Range} [options.boundaries=null] Range to define boundaries of the iterator.\n\t * @param {module:engine/model/position~Position} [options.startPosition] Starting position.\n\t * @param {Boolean} [options.singleCharacters=false] Flag indicating whether all consecutive characters with the same attributes\n\t * should be returned one by one as multiple {@link module:engine/model/textproxy~TextProxy} (`true`) objects or as one\n\t * {@link module:engine/model/textproxy~TextProxy} (`false`).\n\t * @param {Boolean} [options.shallow=false] Flag indicating whether iterator should enter elements or not. If the\n\t * iterator is shallow child nodes of any iterated node will not be returned along with `elementEnd` tag.\n\t * @param {Boolean} [options.ignoreElementEnd=false] Flag indicating whether iterator should ignore `elementEnd`\n\t * tags. If the option is true walker will not return a parent node of start position. If this option is `true`\n\t * each {@link module:engine/model/element~Element} will be returned once, while if the option is `false` they might be returned\n\t * twice: for `'elementStart'` and `'elementEnd'`.\n\t */\n\tconstructor( options = {} ) {\n\t\tif ( !options.boundaries && !options.startPosition ) {\n\t\t\t/**\n\t\t\t * Neither boundaries nor starting position have been defined.\n\t\t\t *\n\t\t\t * @error tree-walker-no-start-position\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-tree-walker-no-start-position: Neither boundaries nor starting position have been defined.' );\n\t\t}\n\n\t\tconst direction = options.direction || 'forward';\n\n\t\tif ( direction != 'forward' && direction != 'backward' ) {\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-tree-walker-unknown-direction: Only `backward` and `forward` direction allowed.',\n\t\t\t\t{ direction }\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * Walking direction. Defaults `'forward'`.\n\t\t *\n\t\t * @readonly\n\t\t * @member {'backward'|'forward'} module:engine/model/treewalker~TreeWalker#direction\n\t\t */\n\t\tthis.direction = direction;\n\n\t\t/**\n\t\t * Iterator boundaries.\n\t\t *\n\t\t * When the iterator is walking `'forward'` on the end of boundary or is walking `'backward'`\n\t\t * on the start of boundary, then `{ done: true }` is returned.\n\t\t *\n\t\t * If boundaries are not defined they are set before first and after last child of the root node.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/range~Range} module:engine/model/treewalker~TreeWalker#boundaries\n\t\t */\n\t\tthis.boundaries = options.boundaries || null;\n\n\t\t/**\n\t\t * Iterator position. This is always static position, even if the initial position was a\n\t\t * {@link module:engine/model/liveposition~LivePosition live position}. If start position is not defined then position depends\n\t\t * on {@link #direction}. If direction is `'forward'` position starts form the beginning, when direction\n\t\t * is `'backward'` position starts from the end.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/position~Position} module:engine/model/treewalker~TreeWalker#position\n\t\t */\n\t\tif ( options.startPosition ) {\n\t\t\tthis.position = Position.createFromPosition( options.startPosition );\n\t\t} else {\n\t\t\tthis.position = Position.createFromPosition( this.boundaries[ this.direction == 'backward' ? 'end' : 'start' ] );\n\t\t}\n\n\t\t/**\n\t\t * Flag indicating whether all consecutive characters with the same attributes should be\n\t\t * returned as one {@link module:engine/model/textproxy~TextProxy} (`true`) or one by one (`false`).\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} module:engine/model/treewalker~TreeWalker#singleCharacters\n\t\t */\n\t\tthis.singleCharacters = !!options.singleCharacters;\n\n\t\t/**\n\t\t * Flag indicating whether iterator should enter elements or not. If the iterator is shallow child nodes of any\n\t\t * iterated node will not be returned along with `elementEnd` tag.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} module:engine/model/treewalker~TreeWalker#shallow\n\t\t */\n\t\tthis.shallow = !!options.shallow;\n\n\t\t/**\n\t\t * Flag indicating whether iterator should ignore `elementEnd` tags. If the option is true walker will not\n\t\t * return a parent node of the start position. If this option is `true` each {@link module:engine/model/element~Element} will\n\t\t * be returned once, while if the option is `false` they might be returned twice:\n\t\t * for `'elementStart'` and `'elementEnd'`.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} module:engine/model/treewalker~TreeWalker#ignoreElementEnd\n\t\t */\n\t\tthis.ignoreElementEnd = !!options.ignoreElementEnd;\n\n\t\t/**\n\t\t * Start boundary cached for optimization purposes.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/element~Element} module:engine/model/treewalker~TreeWalker#_boundaryStartParent\n\t\t */\n\t\tthis._boundaryStartParent = this.boundaries ? this.boundaries.start.parent : null;\n\n\t\t/**\n\t\t * End boundary cached for optimization purposes.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/element~Element} module:engine/model/treewalker~TreeWalker#_boundaryEndParent\n\t\t */\n\t\tthis._boundaryEndParent = this.boundaries ? this.boundaries.end.parent : null;\n\n\t\t/**\n\t\t * Parent of the most recently visited node. Cached for optimization purposes.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment}\n\t\t * module:engine/model/treewalker~TreeWalker#_visitedParent\n\t\t */\n\t\tthis._visitedParent = this.position.parent;\n\t}\n\n\t/**\n\t * Iterator interface.\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Moves {@link #position} in the {@link #direction} skipping values as long as the callback function returns `true`.\n\t *\n\t * For example:\n\t *\n\t * \t\twalker.skip( value => value.type == 'text' ); // <paragraph>[]foo</paragraph> -> <paragraph>foo[]</paragraph>\n\t * \t\twalker.skip( () => true ); // Move the position to the end: <paragraph>[]foo</paragraph> -> <paragraph>foo</paragraph>[]\n\t * \t\twalker.skip( () => false ); // Do not move the position.\n\t *\n\t * @param {Function} skip Callback function. Gets {@link module:engine/model/treewalker~TreeWalkerValue} and should\n\t * return `true` if the value should be skipped or `false` if not.\n\t */\n\tskip( skip ) {\n\t\tlet done, value, prevPosition, prevVisitedParent;\n\n\t\tdo {\n\t\t\tprevPosition = this.position;\n\t\t\tprevVisitedParent = this._visitedParent;\n\n\t\t\t( { done, value } = this.next() );\n\t\t} while ( !done && skip( value ) );\n\n\t\tif ( !done ) {\n\t\t\tthis.position = prevPosition;\n\t\t\tthis._visitedParent = prevVisitedParent;\n\t\t}\n\t}\n\n\t/**\n\t * Iterator interface method.\n\t * Detects walking direction and makes step forward or backward.\n\t *\n\t * @returns {Object} Object implementing iterator interface, returning information about taken step.\n\t */\n\tnext() {\n\t\tif ( this.direction == 'forward' ) {\n\t\t\treturn this._next();\n\t\t} else {\n\t\t\treturn this._previous();\n\t\t}\n\t}\n\n\t/**\n\t * Makes a step forward in model. Moves the {@link #position} to the next position and returns the encountered value.\n\t *\n\t * @private\n\t * @returns {Object}\n\t * @returns {Boolean} return.done True if iterator is done.\n\t * @returns {module:engine/model/treewalker~TreeWalkerValue} return.value Information about taken step.\n\t */\n\t_next() {\n\t\tconst previousPosition = this.position;\n\t\tconst position = Position.createFromPosition( this.position );\n\t\tconst parent = this._visitedParent;\n\n\t\t// We are at the end of the root.\n\t\tif ( parent.parent === null && position.offset === parent.maxOffset ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\t// We reached the walker boundary.\n\t\tif ( parent === this._boundaryEndParent && position.offset == this.boundaries.end.offset ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\tconst node = position.textNode ? position.textNode : position.nodeAfter;\n\n\t\tif ( node instanceof Element ) {\n\t\t\tif ( !this.shallow ) {\n\t\t\t\t// Manual operations on path internals for optimization purposes. Here and in the rest of the method.\n\t\t\t\tposition.path.push( 0 );\n\t\t\t\tthis._visitedParent = node;\n\t\t\t} else {\n\t\t\t\tposition.offset++;\n\t\t\t}\n\n\t\t\tthis.position = position;\n\n\t\t\treturn formatReturnValue( 'elementStart', node, previousPosition, position, 1 );\n\t\t} else if ( node instanceof Text ) {\n\t\t\tlet charactersCount;\n\n\t\t\tif ( this.singleCharacters ) {\n\t\t\t\tcharactersCount = 1;\n\t\t\t} else {\n\t\t\t\tlet offset = node.endOffset;\n\n\t\t\t\tif ( this._boundaryEndParent == parent && this.boundaries.end.offset < offset ) {\n\t\t\t\t\toffset = this.boundaries.end.offset;\n\t\t\t\t}\n\n\t\t\t\tcharactersCount = offset - position.offset;\n\t\t\t}\n\n\t\t\tconst offsetInTextNode = position.offset - node.startOffset;\n\t\t\tconst item = new TextProxy( node, offsetInTextNode, charactersCount );\n\n\t\t\tposition.offset += charactersCount;\n\t\t\tthis.position = position;\n\n\t\t\treturn formatReturnValue( 'text', item, previousPosition, position, charactersCount );\n\t\t} else {\n\t\t\t// `node` is not set, we reached the end of current `parent`.\n\t\t\tposition.path.pop();\n\t\t\tposition.offset++;\n\t\t\tthis.position = position;\n\t\t\tthis._visitedParent = parent.parent;\n\n\t\t\tif ( this.ignoreElementEnd ) {\n\t\t\t\treturn this._next();\n\t\t\t} else {\n\t\t\t\treturn formatReturnValue( 'elementEnd', parent, previousPosition, position );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Makes a step backward in model. Moves the {@link #position} to the previous position and returns the encountered value.\n\t *\n\t * @private\n\t * @returns {Object}\n\t * @returns {Boolean} return.done True if iterator is done.\n\t * @returns {module:engine/model/treewalker~TreeWalkerValue} return.value Information about taken step.\n\t */\n\t_previous() {\n\t\tconst previousPosition = this.position;\n\t\tconst position = Position.createFromPosition( this.position );\n\t\tconst parent = this._visitedParent;\n\n\t\t// We are at the beginning of the root.\n\t\tif ( parent.parent === null && position.offset === 0 ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\t// We reached the walker boundary.\n\t\tif ( parent == this._boundaryStartParent && position.offset == this.boundaries.start.offset ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\t// Get node just before current position\n\t\tconst node = position.textNode ? position.textNode : position.nodeBefore;\n\n\t\tif ( node instanceof Element ) {\n\t\t\tposition.offset--;\n\n\t\t\tif ( !this.shallow ) {\n\t\t\t\tposition.path.push( node.maxOffset );\n\t\t\t\tthis.position = position;\n\t\t\t\tthis._visitedParent = node;\n\n\t\t\t\tif ( this.ignoreElementEnd ) {\n\t\t\t\t\treturn this._previous();\n\t\t\t\t} else {\n\t\t\t\t\treturn formatReturnValue( 'elementEnd', node, previousPosition, position );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn formatReturnValue( 'elementStart', node, previousPosition, position, 1 );\n\t\t\t}\n\t\t} else if ( node instanceof Text ) {\n\t\t\tlet charactersCount;\n\n\t\t\tif ( this.singleCharacters ) {\n\t\t\t\tcharactersCount = 1;\n\t\t\t} else {\n\t\t\t\tlet offset = node.startOffset;\n\n\t\t\t\tif ( this._boundaryStartParent == parent && this.boundaries.start.offset > offset ) {\n\t\t\t\t\toffset = this.boundaries.start.offset;\n\t\t\t\t}\n\n\t\t\t\tcharactersCount = position.offset - offset;\n\t\t\t}\n\n\t\t\tconst offsetInTextNode = position.offset - node.startOffset;\n\t\t\tconst item = new TextProxy( node, offsetInTextNode - charactersCount, charactersCount );\n\n\t\t\tposition.offset -= charactersCount;\n\t\t\tthis.position = position;\n\n\t\t\treturn formatReturnValue( 'text', item, previousPosition, position, charactersCount );\n\t\t} else {\n\t\t\t// `node` is not set, we reached the beginning of current `parent`.\n\t\t\tposition.path.pop();\n\t\t\tthis.position = position;\n\t\t\tthis._visitedParent = parent.parent;\n\n\t\t\treturn formatReturnValue( 'elementStart', parent, previousPosition, position, 1 );\n\t\t}\n\t}\n}\n\nfunction formatReturnValue( type, item, previousPosition, nextPosition, length ) {\n\treturn {\n\t\tdone: false,\n\t\tvalue: {\n\t\t\ttype,\n\t\t\titem,\n\t\t\tpreviousPosition,\n\t\t\tnextPosition,\n\t\t\tlength\n\t\t}\n\t};\n}\n\n/**\n * Type of the step made by {@link module:engine/model/treewalker~TreeWalker}.\n * Possible values: `'elementStart'` if walker is at the beginning of a node, `'elementEnd'` if walker is at the end of node,\n * `'character'` if walker traversed over a character, or `'text'` if walker traversed over multiple characters (available in\n * character merging mode, see {@link module:engine/model/treewalker~TreeWalker#constructor}).\n *\n * @typedef {'elementStart'|'elementEnd'|'character'|'text'} module:engine/model/treewalker~TreeWalkerValueType\n */\n\n/**\n * Object returned by {@link module:engine/model/treewalker~TreeWalker} when traversing tree model.\n *\n * @typedef {Object} module:engine/model/treewalker~TreeWalkerValue\n * @property {module:engine/model/treewalker~TreeWalkerValueType} type\n * @property {module:engine/model/item~Item} item Item between old and new positions of {@link module:engine/model/treewalker~TreeWalker}.\n * @property {module:engine/model/position~Position} previousPosition Previous position of the iterator.\n * * Forward iteration: For `'elementEnd'` it is the last position inside the element. For all other types it is the\n * position before the item. Note that it is more efficient to use this position then calculate the position before\n * the node using {@link module:engine/model/position~Position.createBefore}. It is also more efficient to get the\n * position after node by shifting `previousPosition` by `length`, using {@link module:engine/model/position~Position#getShiftedBy},\n * then calculate the position using {@link module:engine/model/position~Position.createAfter}.\n * * Backward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after item.\n * @property {module:engine/model/position~Position} nextPosition Next position of the iterator.\n * * Forward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after the item.\n * * Backward iteration: For `'elementEnd'` it is last position inside element. For all other types it is the position\n * before the item.\n * @property {Number} [length] Length of the item. For `'elementStart'` and `'character'` it is 1. For `'text'` it is\n * the length of the text. For `'elementEnd'` it is undefined.\n */\n\n/**\n * Tree walking directions.\n *\n * @typedef {'forward'|'backward'} module:engine/view/treewalker~TreeWalkerDirection\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/treewalker.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/range\n */\n\nimport Position from './position';\nimport TreeWalker from './treewalker';\n\n/**\n * Tree view range.\n */\nexport default class Range {\n\t/**\n\t * Creates a range spanning from `start` position to `end` position.\n\t *\n\t * **Note:** Constructor creates it's own {@link module:engine/view/position~Position} instances basing on passed values.\n\t *\n\t * @param {module:engine/view/position~Position} start Start position.\n\t * @param {module:engine/view/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\n\t */\n\tconstructor( start, end = null ) {\n\t\t/**\n\t\t * Start position.\n\t\t *\n\t\t * @member {module:engine/view/position~Position}\n\t\t */\n\t\tthis.start = Position.createFromPosition( start );\n\n\t\t/**\n\t\t * End position.\n\t\t *\n\t\t * @member {module:engine/view/position~Position}\n\t\t */\n\t\tthis.end = end ? Position.createFromPosition( end ) : Position.createFromPosition( start );\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all {@link module:engine/view/item~Item view items} that are in this range and returns\n\t * them together with additional information like length or {@link module:engine/view/position~Position positions},\n\t * grouped as {@link module:engine/view/treewalker~TreeWalkerValue}.\n\t *\n\t * This iterator uses {@link module:engine/view/treewalker~TreeWalker TreeWalker} with `boundaries` set to this range and\n\t * `ignoreElementEnd` option\n\t * set to `true`.\n\t *\n\t * @returns {Iterable.<module:engine/view/treewalker~TreeWalkerValue>}\n\t */\n\t* [ Symbol.iterator ]() {\n\t\tyield* new TreeWalker( { boundaries: this, ignoreElementEnd: true } );\n\t}\n\n\t/**\n\t * Returns whether the range is collapsed, that is it start and end positions are equal.\n\t *\n\t * @type {Boolean}\n\t */\n\tget isCollapsed() {\n\t\treturn this.start.isEqual( this.end );\n\t}\n\n\t/**\n\t * Returns whether this range is flat, that is if {@link module:engine/view/range~Range#start start} position and\n\t * {@link module:engine/view/range~Range#end end} position are in the same {@link module:engine/view/position~Position#parent parent}.\n\t *\n\t * @type {Boolean}\n\t */\n\tget isFlat() {\n\t\treturn this.start.parent === this.end.parent;\n\t}\n\n\t/**\n\t * Range root element.\n\t *\n\t * @type {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\treturn this.start.root;\n\t}\n\n\t/**\n\t * Creates a maximal range that has the same content as this range but is expanded in both ways (at the beginning\n\t * and at the end).\n\t *\n\t * For example:\n\t *\n\t * \t\t<p>Foo</p><p><b>{Bar}</b></p> -> <p>Foo</p>[<p><b>Bar</b>]</p>\n\t * \t\t<p><b>foo</b>{bar}<span></span></p> -> <p><b>foo[</b>bar<span></span>]</p>\n\t *\n\t * Note that in the sample above:\n\t *  - `<p>` have type of {@link module:engine/view/containerelement~ContainerElement},\n\t *  - `<b>` have type of {@link module:engine/view/attributeelement~AttributeElement},\n\t *  - `<span>` have type of {@link module:engine/view/uielement~UIElement}.\n\t *\n\t * @returns {module:engine/view/range~Range} Enlarged range.\n\t */\n\tgetEnlarged() {\n\t\tlet start = this.start.getLastMatchingPosition( enlargeShrinkSkip, { direction: 'backward' } );\n\t\tlet end = this.end.getLastMatchingPosition( enlargeShrinkSkip );\n\n\t\t// Fix positions, in case if they are in Text node.\n\t\tif ( start.parent.is( 'text' ) && start.isAtStart ) {\n\t\t\tstart = Position.createBefore( start.parent );\n\t\t}\n\n\t\tif ( end.parent.is( 'text' ) && end.isAtEnd ) {\n\t\t\tend = Position.createAfter( end.parent );\n\t\t}\n\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Creates a minimum range that has the same content as this range but is trimmed in both ways (at the beginning\n\t * and at the end).\n\t *\n\t * For example:\n\t *\n\t * \t\t<p>Foo</p>[<p><b>Bar</b>]</p> -> <p>Foo</p><p><b>{Bar}</b></p>\n\t * \t\t<p><b>foo[</b>bar<span></span>]</p> -> <p><b>foo</b>{bar}<span></span></p>\n\t *\n\t * Note that in the sample above:\n\t *  - `<p>` have type of {@link module:engine/view/containerelement~ContainerElement},\n\t *  - `<b>` have type of {@link module:engine/view/attributeelement~AttributeElement},\n\t *  - `<span>` have type of {@link module:engine/view/uielement~UIElement}.\n\t *\n\t * @returns {module:engine/view/range~Range} Shrink range.\n\t */\n\tgetTrimmed() {\n\t\tlet start = this.start.getLastMatchingPosition( enlargeShrinkSkip );\n\t\tlet end = this.end.getLastMatchingPosition( enlargeShrinkSkip, { direction: 'backward' } );\n\t\tconst nodeAfterStart = start.nodeAfter;\n\t\tconst nodeBeforeEnd = end.nodeBefore;\n\n\t\t// Because TreeWalker prefers positions next to text node, we need to move them manually into these text nodes.\n\t\tif ( nodeAfterStart && nodeAfterStart.is( 'text' ) ) {\n\t\t\tstart = new Position( nodeAfterStart, 0 );\n\t\t}\n\n\t\tif ( nodeBeforeEnd && nodeBeforeEnd.is( 'text' ) ) {\n\t\t\tend = new Position( nodeBeforeEnd, nodeBeforeEnd.data.length );\n\t\t}\n\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Two ranges are equal if their start and end positions are equal.\n\t *\n\t * @param {module:engine/view/range~Range} otherRange Range to compare with.\n\t * @returns {Boolean} `true` if ranges are equal, `false` otherwise\n\t */\n\tisEqual( otherRange ) {\n\t\treturn this == otherRange || ( this.start.isEqual( otherRange.start ) && this.end.isEqual( otherRange.end ) );\n\t}\n\n\t/**\n\t * Checks whether this range contains given {@link module:engine/view/position~Position position}.\n\t *\n\t * @param {module:engine/view/position~Position} position Position to check.\n\t * @returns {Boolean} `true` if given {@link module:engine/view/position~Position position} is contained in this range,\n\t * `false` otherwise.\n\t */\n\tcontainsPosition( position ) {\n\t\treturn position.isAfter( this.start ) && position.isBefore( this.end );\n\t}\n\n\t/**\n\t * Checks whether this range contains given {@link module:engine/view/range~Range range}.\n\t *\n\t * @param {module:engine/view/range~Range} otherRange Range to check.\n\t * @returns {Boolean} `true` if given {@link module:engine/view/range~Range range} boundaries are contained by this range, `false`\n\t * otherwise.\n\t */\n\tcontainsRange( otherRange ) {\n\t\treturn this.containsPosition( otherRange.start ) && this.containsPosition( otherRange.end );\n\t}\n\n\t/**\n\t * Computes which part(s) of this {@link module:engine/view/range~Range range} is not a part of given\n\t * {@link module:engine/view/range~Range range}.\n\t * Returned array contains zero, one or two {@link module:engine/view/range~Range ranges}.\n\t *\n\t * Examples:\n\t *\n\t *\t\tlet foo = new Text( 'foo' );\n\t *\t\tlet img = new ContainerElement( 'img' );\n\t *\t\tlet bar = new Text( 'bar' );\n\t *\t\tlet p = new ContainerElement( 'p', null, [ foo, img, bar ] );\n\t *\n\t *\t\tlet range = new Range( new Position( foo, 2 ), new Position( bar, 1 ); // \"o\", img, \"b\" are in range.\n\t *\t\tlet otherRange = new Range( new Position( foo, 1 ), new Position( bar, 2 ); \"oo\", img, \"ba\" are in range.\n\t *\t\tlet transformed = range.getDifference( otherRange );\n\t *\t\t// transformed array has no ranges because `otherRange` contains `range`\n\t *\n\t *\t\totherRange = new Range( new Position( foo, 1 ), new Position( p, 2 ); // \"oo\", img are in range.\n\t *\t\ttransformed = range.getDifference( otherRange );\n\t *\t\t// transformed array has one range: from ( p, 2 ) to ( bar, 1 )\n\t *\n\t *\t\totherRange = new Range( new Position( p, 1 ), new Position( p, 2 ) ); // img is in range.\n\t *\t\ttransformed = range.getDifference( otherRange );\n\t *\t\t// transformed array has two ranges: from ( foo, 1 ) to ( p, 1 ) and from ( p, 2 ) to ( bar, 1 )\n\t *\n\t * @param {module:engine/view/range~Range} otherRange Range to differentiate against.\n\t * @returns {Array.<module:engine/view/range~Range>} The difference between ranges.\n\t */\n\tgetDifference( otherRange ) {\n\t\tconst ranges = [];\n\n\t\tif ( this.isIntersecting( otherRange ) ) {\n\t\t\t// Ranges intersect.\n\n\t\t\tif ( this.containsPosition( otherRange.start ) ) {\n\t\t\t\t// Given range start is inside this range. This means that we have to\n\t\t\t\t// add shrunken range - from the start to the middle of this range.\n\t\t\t\tranges.push( new Range( this.start, otherRange.start ) );\n\t\t\t}\n\n\t\t\tif ( this.containsPosition( otherRange.end ) ) {\n\t\t\t\t// Given range end is inside this range. This means that we have to\n\t\t\t\t// add shrunken range - from the middle of this range to the end.\n\t\t\t\tranges.push( new Range( otherRange.end, this.end ) );\n\t\t\t}\n\t\t} else {\n\t\t\t// Ranges do not intersect, return the original range.\n\t\t\tranges.push( Range.createFromRange( this ) );\n\t\t}\n\n\t\treturn ranges;\n\t}\n\n\t/**\n\t * Returns an intersection of this {@link module:engine/view/range~Range range} and given {@link module:engine/view/range~Range range}.\n\t * Intersection is a common part of both of those ranges. If ranges has no common part, returns `null`.\n\t *\n\t * Examples:\n\t *\n\t *\t\tlet foo = new Text( 'foo' );\n\t *\t\tlet img = new ContainerElement( 'img' );\n\t *\t\tlet bar = new Text( 'bar' );\n\t *\t\tlet p = new ContainerElement( 'p', null, [ foo, img, bar ] );\n\t *\n\t *\t\tlet range = new Range( new Position( foo, 2 ), new Position( bar, 1 ); // \"o\", img, \"b\" are in range.\n\t *\t\tlet otherRange = new Range( new Position( foo, 1 ), new Position( p, 2 ); // \"oo\", img are in range.\n\t *\t\tlet transformed = range.getIntersection( otherRange ); // range from ( foo, 1 ) to ( p, 2 ).\n\t *\n\t *\t\totherRange = new Range( new Position( bar, 1 ), new Position( bar, 3 ); \"ar\" is in range.\n\t *\t\ttransformed = range.getIntersection( otherRange ); // null - no common part.\n\t *\n\t * @param {module:engine/view/range~Range} otherRange Range to check for intersection.\n\t * @returns {module:engine/view/range~Range|null} A common part of given ranges or `null` if ranges have no common part.\n\t */\n\tgetIntersection( otherRange ) {\n\t\tif ( this.isIntersecting( otherRange ) ) {\n\t\t\t// Ranges intersect, so a common range will be returned.\n\t\t\t// At most, it will be same as this range.\n\t\t\tlet commonRangeStart = this.start;\n\t\t\tlet commonRangeEnd = this.end;\n\n\t\t\tif ( this.containsPosition( otherRange.start ) ) {\n\t\t\t\t// Given range start is inside this range. This means thaNt we have to\n\t\t\t\t// shrink common range to the given range start.\n\t\t\t\tcommonRangeStart = otherRange.start;\n\t\t\t}\n\n\t\t\tif ( this.containsPosition( otherRange.end ) ) {\n\t\t\t\t// Given range end is inside this range. This means that we have to\n\t\t\t\t// shrink common range to the given range end.\n\t\t\t\tcommonRangeEnd = otherRange.end;\n\t\t\t}\n\n\t\t\treturn new Range( commonRangeStart, commonRangeEnd );\n\t\t}\n\n\t\t// Ranges do not intersect, so they do not have common part.\n\t\treturn null;\n\t}\n\n\t/**\n\t * Creates a {@link module:engine/view/treewalker~TreeWalker TreeWalker} instance with this range as a boundary.\n\t *\n\t * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n\t * @param {module:engine/view/position~Position} [options.startPosition]\n\t * @param {Boolean} [options.singleCharacters=false]\n\t * @param {Boolean} [options.shallow=false]\n\t * @param {Boolean} [options.ignoreElementEnd=false]\n\t */\n\tgetWalker( options = {} ) {\n\t\toptions.boundaries = this;\n\n\t\treturn new TreeWalker( options );\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all {@link module:engine/view/item~Item view items} that are in this range and returns\n\t * them.\n\t *\n\t * This method uses {@link module:engine/view/treewalker~TreeWalker} with `boundaries` set to this range and `ignoreElementEnd` option\n\t * set to `true`. However it returns only {@link module:engine/view/item~Item items},\n\t * not {@link module:engine/view/treewalker~TreeWalkerValue}.\n\t *\n\t * You may specify additional options for the tree walker. See {@link module:engine/view/treewalker~TreeWalker} for\n\t * a full list of available options.\n\t *\n\t * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n\t * @returns {Iterable.<module:engine/view/item~Item>}\n\t */\n\t* getItems( options = {} ) {\n\t\toptions.boundaries = this;\n\t\toptions.ignoreElementEnd = true;\n\n\t\tconst treeWalker = new TreeWalker( options );\n\n\t\tfor ( const value of treeWalker ) {\n\t\t\tyield value.item;\n\t\t}\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all {@link module:engine/view/position~Position positions} that are boundaries or\n\t * contained in this range.\n\t *\n\t * This method uses {@link module:engine/view/treewalker~TreeWalker} with `boundaries` set to this range. However it returns only\n\t * {@link module:engine/view/position~Position positions}, not {@link module:engine/view/treewalker~TreeWalkerValue}.\n\t *\n\t * You may specify additional options for the tree walker. See {@link module:engine/view/treewalker~TreeWalker} for\n\t * a full list of available options.\n\t *\n\t * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n\t * @returns {Iterable.<module:engine/view/position~Position>}\n\t */\n\t* getPositions( options = {} ) {\n\t\toptions.boundaries = this;\n\n\t\tconst treeWalker = new TreeWalker( options );\n\n\t\tyield treeWalker.position;\n\n\t\tfor ( const value of treeWalker ) {\n\t\t\tyield value.nextPosition;\n\t\t}\n\t}\n\n\t/**\n\t * Checks and returns whether this range intersects with given range.\n\t *\n\t * @param {module:engine/view/range~Range} otherRange Range to compare with.\n\t * @returns {Boolean} True if ranges intersect.\n\t */\n\tisIntersecting( otherRange ) {\n\t\treturn this.start.isBefore( otherRange.end ) && this.end.isAfter( otherRange.start );\n\t}\n\n\t/**\n\t * Creates a range from given parents and offsets.\n\t *\n\t * @param {module:engine/view/element~Element} startElement Start position parent element.\n\t * @param {Number} startOffset Start position offset.\n\t * @param {module:engine/view/element~Element} endElement End position parent element.\n\t * @param {Number} endOffset End position offset.\n\t * @returns {module:engine/view/range~Range} Created range.\n\t */\n\tstatic createFromParentsAndOffsets( startElement, startOffset, endElement, endOffset ) {\n\t\treturn new this(\n\t\t\tnew Position( startElement, startOffset ),\n\t\t\tnew Position( endElement, endOffset )\n\t\t);\n\t}\n\n\t/**\n\t * Creates and returns a new instance of Range which is equal to passed range.\n\t *\n\t * @param {module:engine/view/range~Range} range Range to clone.\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tstatic createFromRange( range ) {\n\t\treturn new this( range.start, range.end );\n\t}\n\n\t/**\n\t * Creates a new range, spreading from specified {@link module:engine/view/position~Position position} to a position moved by\n\t * given `shift`. If `shift` is a negative value, shifted position is treated as the beginning of the range.\n\t *\n\t * @param {module:engine/view/position~Position} position Beginning of the range.\n\t * @param {Number} shift How long the range should be.\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tstatic createFromPositionAndShift( position, shift ) {\n\t\tconst start = position;\n\t\tconst end = position.getShiftedBy( shift );\n\n\t\treturn shift > 0 ? new this( start, end ) : new this( end, start );\n\t}\n\n\t/**\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n\t * that element and ends after the last child of that element.\n\t *\n\t * @param {module:engine/view/element~Element} element Element which is a parent for the range.\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tstatic createIn( element ) {\n\t\treturn this.createFromParentsAndOffsets( element, 0, element, element.childCount );\n\t}\n\n\t/**\n\t * Creates a range that starts before given {@link module:engine/view/item~Item view item} and ends after it.\n\t *\n\t * @param {module:engine/view/item~Item} item\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tstatic createOn( item ) {\n\t\treturn this.createFromPositionAndShift( Position.createBefore( item ), 1 );\n\t}\n}\n\n// Function used by getEnlagred and getShrinked methods.\nfunction enlargeShrinkSkip( value ) {\n\tif ( value.item.is( 'attributeElement' ) || value.item.is( 'uiElement' ) ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/view/range.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module image/image/utils\n */\n\nimport { toWidget, isWidget } from '@ckeditor/ckeditor5-widget/src/utils';\nimport ModelElement from '@ckeditor/ckeditor5-engine/src/model/element';\n\nconst imageSymbol = Symbol( 'isImage' );\n\n/**\n * Converts given {@link module:engine/view/element~Element} to image widget:\n * * adds {@link module:engine/view/element~Element#setCustomProperty custom property} allowing to recognize image widget element,\n * * calls {@link module:widget/utils~toWidget toWidget} function with proper element's label creator.\n *\n * @param {module:engine/view/element~Element} viewElement\n * @param {String} label Element's label. It will be concatenated with image's `alt` attribute if one is present.\n * @returns {module:engine/view/element~Element}\n */\nexport function toImageWidget( viewElement, label ) {\n\tviewElement.setCustomProperty( imageSymbol, true );\n\n\treturn toWidget( viewElement, { label: labelCreator } );\n\n\tfunction labelCreator() {\n\t\tconst imgElement = viewElement.getChild( 0 );\n\t\tconst altText = imgElement.getAttribute( 'alt' );\n\n\t\treturn altText ? `${ altText } ${ label }` : label;\n\t}\n}\n\n/**\n * Checks if given view element is an image widget.\n *\n * @param {module:engine/view/element~Element} viewElement\n * @returns {Boolean}\n */\nexport function isImageWidget( viewElement ) {\n\treturn !!viewElement.getCustomProperty( imageSymbol ) && isWidget( viewElement );\n}\n\n/**\n * Checks if provided modelElement is an instance of {@link module:engine/model/element~Element Element} and its name\n * is `image`.\n *\n * @param {module:engine/model/element~Element} modelElement\n * @returns {Boolean}\n */\nexport function isImage( modelElement ) {\n\treturn modelElement instanceof ModelElement && modelElement.name == 'image';\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-image/src/image/utils.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* globals window, document */\n\n/**\n * @module utils/dom/global\n */\n\n/**\n * A helper (module) giving an access to the global DOM objects such as `window` and\n * `document`. Accessing these objects using this helper allows easy and bulletproof\n * testing, i.e. stubbing native properties:\n *\n *\t\timport global from 'ckeditor5/utils/dom/global.js';\n *\n *\t\t// This stub will work for any code using global module.\n *\t\ttestUtils.sinon.stub( global, 'window', {\n *\t\t\tinnerWidth: 10000\n *\t\t} );\n *\n *\t\tconsole.log( global.window.innerWidth );\n */\nexport default { window, document };\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/dom/global.js","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nexport default baseSlice;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseSlice.js","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\nexport default isIndex;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_isIndex.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* global console */\n\n/**\n * @module utils/log\n */\n\n/**\n * The logging module.\n *\n * This object features two functions that should be used across CKEditor code base to log errors and warnings.\n * Despite being an overridable interface for native `console.*` this module serves also the goal to limit the\n * code size of a minified CKEditor package. During minification process the messages will be shortened and\n * links to their documentation will be logged to the console.\n *\n * All errors and warning should be documented in the following way:\n *\n *\t\t/**\n *\t\t * Error thrown when a plugin cannot be loaded due to JavaScript errors, lack of plugins with a given name, etc.\n *\t\t *\n *\t\t * @error plugin-load\n *\t\t * @param pluginName The name of the plugin that could not be loaded.\n *\t\t * @param moduleName The name of the module which tried to load this plugin.\n *\t\t * /\n *\t\tlog.error( 'plugin-load: It was not possible to load the \"{$pluginName}\" plugin in module \"{$moduleName}', {\n *\t\t\tpluginName: 'foo',\n *\t\t\tmoduleName: 'bar'\n *\t\t} );\n *\n * ### Warning vs Error vs Throw\n *\n * * Whenever a potentially incorrect situation occurs, which does not directly lead to an incorrect behavior,\n * log a warning.\n * * Whenever an incorrect situation occurs, but the app may continue working (although perhaps incorrectly),\n * log an error.\n * * Whenever it's really bad and it does not make sense to continue working, throw a {@link module:utils/ckeditorerror~CKEditorError}.\n *\n * @namespace\n */\nconst log = {\n\t/**\n\t * Logs an error to the console.\n\t *\n\t * Read more about error logging in the {@link module:utils/log} module.\n\t *\n\t * @param {String} message The error message in an `error-name: Error message.` format.\n\t * During the minification process the \"Error message\" part will be removed to limit the code size\n\t * and a link to this error documentation will be logged to the console.\n\t * @param {Object} [data] Additional data describing the error.\n\t */\n\terror( message, data ) {\n\t\tconsole.error( message, data );\n\t},\n\n\t/**\n\t * Logs a warning to the console.\n\t *\n\t * Read more about error logging in the {@link module:utils/log} module.\n\t *\n\t * @param {String} message The warning message in a `warning-name: Warning message.` format.\n\t * During the minification process the \"Warning message\" part will be removed to limit the code size\n\t * and a link to this error documentation will be logged to the console.\n\t * @param {Object} [data] Additional data describing the warning.\n\t */\n\twarn( message, data ) {\n\t\tconsole.warn( message, data );\n\t}\n};\n\nexport default log;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/log.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/conversion/buildmodelconverter\n */\n\nimport {\n\tinsertElement,\n\tinsertUIElement,\n\tsetAttribute,\n\tremoveAttribute,\n\tremoveUIElement,\n\twrapItem,\n\tunwrapItem,\n\twrapRange,\n\tunwrapRange\n} from './model-to-view-converters';\n\nimport { convertSelectionAttribute, convertSelectionMarker } from './model-selection-to-view-converters';\n\nimport ViewAttributeElement from '../view/attributeelement';\nimport ViewContainerElement from '../view/containerelement';\nimport ViewUIElement from '../view/uielement';\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Provides chainable, high-level API to easily build basic model-to-view converters that are appended to given\n * dispatchers. In many cases, this is the API that should be used to specify how abstract model elements and\n * attributes should be represented in the view (and then later in DOM). Instances of this class are created by\n * {@link module:engine/conversion/buildmodelconverter~buildModelConverter}.\n *\n * If you need more complex converters, see {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher},\n * {@link module:engine/conversion/model-to-view-converters}, {@link module:engine/conversion/modelconsumable~ModelConsumable},\n * {@link module:engine/conversion/mapper~Mapper}.\n *\n * Using this API it is possible to create four kinds of converters:\n *\n * 1. Model element to view element converter. This is a converter that takes the model element and represents it\n * in the view.\n *\n *\t\tbuildModelConverter().for( dispatcher ).fromElement( 'paragraph' ).toElement( 'p' );\n *\t\tbuildModelConverter().for( dispatcher ).fromElement( 'image' ).toElement( 'img' );\n *\n * 2. Model attribute to view attribute converter. This is a converter that operates on model element attributes\n * and converts them to view element attributes. It is suitable for elements like `image` (`src`, `title` attributes).\n *\n *\t\tbuildModelConverter().for( dispatcher ).fromElement( 'image' ).toElement( 'img' );\n *\t\tbuildModelConverter().for( dispatcher ).fromAttribute( 'src' ).toAttribute();\n *\n * 3. Model attribute to view element converter. This is a converter that takes model attributes and represents them\n * as view elements. Elements created by this kind of converter are wrapping other view elements. Wrapped view nodes\n * correspond to model nodes had converter attribute. It is suitable for attributes like `bold`, where `bold` attribute\n * set on model text nodes is converter to `strong` view element.\n *\n *\t\tbuildModelConverter().for( dispatcher ).fromAttribute( 'bold' ).toElement( 'strong' );\n *\n * 4. Model marker to view element converter. This is a converter that converts markers from given group to view attribute element.\n * Markers, basically, are {@link module:engine/model/liverange~LiveRange} instances, that are named. In this conversion, model range is\n * converted to view range, then that view range is wrapped (or unwrapped, if range is removed) in a view attribute element.\n * To learn more about markers, see {@link module:engine/model/markercollection~MarkerCollection}.\n *\n *\t\tconst viewSpanSearchResult = new ViewAttributeElement( 'span', { class: 'search-result' } );\n *\t\tbuildModelConverter().for( dispatcher ).fromMarker( 'searchResult' ).toElement( viewSpanSearchResult );\n *\n * It is possible to provide various different parameters for\n * {@link module:engine/conversion/buildmodelconverter~ModelConverterBuilder#toElement}\n * and {@link module:engine/conversion/buildmodelconverter~ModelConverterBuilder#toAttribute} methods.\n * See their descriptions to learn more.\n *\n * It is also possible to {@link module:engine/conversion/buildmodelconverter~ModelConverterBuilder#withPriority change default priority}\n * of created converters to decide which converter should be fired earlier and which later. This is useful if you have\n * a general converter but also want to provide different special-case converters (i.e. given model element is converted\n * always to given view element, but if it has given attribute it is converter to other view element). For this,\n * use {@link module:engine/conversion/buildmodelconverter~ModelConverterBuilder#withPriority withPriority} right after `from...` method.\n *\n * Note that `to...` methods are \"terminators\", which means that should be the last one used in building converter.\n *\n * You can use {@link module:engine/conversion/buildviewconverter~ViewConverterBuilder}\n * to create \"opposite\" converters - from view to model.\n */\nclass ModelConverterBuilder {\n\t/**\n\t * Creates `ModelConverterBuilder` with given `dispatchers` registered to it.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Dispatchers to which converters will be attached.\n\t\t *\n\t\t * @type {Array.<module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher>}\n\t\t * @private\n\t\t */\n\t\tthis._dispatchers = [];\n\n\t\t/**\n\t\t * Contains data about registered \"from\" query.\n\t\t *\n\t\t * @type {Object}\n\t\t * @private\n\t\t */\n\t\tthis._from = null;\n\t}\n\n\t/**\n\t * Set one or more dispatchers which the built converter will be attached to.\n\t *\n\t * @chainable\n\t * @param {...module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher} dispatchers One or more dispatchers.\n\t * @returns {module:engine/conversion/buildmodelconverter~ModelConverterBuilder}\n\t */\n\tfor( ...dispatchers ) {\n\t\tthis._dispatchers = dispatchers;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Registers what model element should be converted.\n\t *\n\t * @chainable\n\t * @param {String} elementName Name of element to convert.\n\t * @returns {module:engine/conversion/buildmodelconverter~ModelConverterBuilder}\n\t */\n\tfromElement( elementName ) {\n\t\tthis._from = {\n\t\t\ttype: 'element',\n\t\t\tname: elementName,\n\t\t\tpriority: null\n\t\t};\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Registers what model attribute should be converted.\n\t *\n\t * @chainable\n\t * @param {String} key Key of attribute to convert.\n\t * @returns {module:engine/conversion/buildmodelconverter~ModelConverterBuilder}\n\t */\n\tfromAttribute( key ) {\n\t\tthis._from = {\n\t\t\ttype: 'attribute',\n\t\t\tkey,\n\t\t\tpriority: null\n\t\t};\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Registers what type of marker should be converted.\n\t *\n\t * @chainable\n\t * @param {String} markerName Name of marker to convert.\n\t * @returns {module:engine/conversion/buildmodelconverter~ModelConverterBuilder}\n\t */\n\tfromMarker( markerName ) {\n\t\tthis._from = {\n\t\t\ttype: 'marker',\n\t\t\tname: markerName,\n\t\t\tpriority: null\n\t\t};\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Changes default priority for built converter. The lower the number, the earlier converter will be fired.\n\t * Default priority is `10`.\n\t *\n\t * **Note:** Keep in mind that event priority, that is set by this modifier, is used for attribute priority\n\t * when {@link module:engine/view/writer~writer} is used. This changes how view elements are ordered,\n\t * i.e.: `<strong><em>foo</em></strong>` vs `<em><strong>foo</strong></em>`. Using priority you can also\n\t * prevent node merging, i.e.: `<span class=\"bold\"><span class=\"theme\">foo</span><span>` vs `<span class=\"bold theme\">foo</span>`.\n\t * If you want to prevent merging, just set different priority for both converters.\n\t *\n\t *\t\tbuildModelConverter().for( dispatcher ).fromAttribute( 'bold' ).withPriority( 2 ).toElement( 'strong' );\n\t *\t\tbuildModelConverter().for( dispatcher ).fromAttribute( 'italic' ).withPriority( 3 ).toElement( 'em' );\n\t *\n\t * @chainable\n\t * @param {Number} priority Converter priority.\n\t * @returns {module:engine/conversion/buildmodelconverter~ModelConverterBuilder}\n\t */\n\twithPriority( priority ) {\n\t\tthis._from.priority = priority;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Registers what view element will be created by converter.\n\t *\n\t * Method accepts various ways of providing how the view element will be created. You can pass view element name as\n\t * `string`, view element instance which will be cloned and used, or creator function which returns view element that\n\t * will be used. Keep in mind that when you view element instance or creator function, it has to be/return a\n\t * proper type of view element: {@link module:engine/view/containerelement~ContainerElement ViewContainerElement} if you convert\n\t * from element or {@link module:engine/view/attributeelement~AttributeElement ViewAttributeElement} if you convert from attribute.\n\t *\n\t *\t\tbuildModelConverter().for( dispatcher ).fromElement( 'paragraph' ).toElement( 'p' );\n\t *\n\t *\t\tbuildModelConverter().for( dispatcher ).fromElement( 'image' ).toElement( new ViewContainerElement( 'img' ) );\n\t *\n\t *\t\tbuildModelConverter().for( dispatcher )\n\t *\t\t\t.fromElement( 'header' )\n\t *\t\t\t.toElement( ( data ) => new ViewContainerElement( 'h' + data.item.getAttribute( 'level' ) ) );\n\t *\n\t *\t\tbuildModelConverter().for( dispatcher ).fromAttribute( 'bold' ).toElement( new ViewAttributeElement( 'strong' ) );\n\t *\n\t * Creator function will be passed different values depending whether conversion is from element or from attribute:\n\t *\n\t * * from element: dispatcher's\n\t * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:insert insert event}\n\t * parameters will be passed,\n\t * * from attribute: there is one parameter and it is attribute value.\n\t *\n\t * This method also registers model selection to view selection converter, if conversion is from attribute.\n\t *\n\t * This method creates the converter and adds it as a callback to a proper\n\t * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher conversion dispatcher} event.\n\t *\n\t * @param {String|module:engine/view/element~Element|Function} element Element created by converter or\n\t * a function that returns view element.\n\t */\n\ttoElement( element ) {\n\t\tconst priority = this._from.priority === null ? 'normal' : this._from.priority;\n\n\t\tfor ( const dispatcher of this._dispatchers ) {\n\t\t\tif ( this._from.type == 'element' ) {\n\t\t\t\t// From model element to view element -> insert element.\n\t\t\t\telement = typeof element == 'string' ? new ViewContainerElement( element ) : element;\n\n\t\t\t\tdispatcher.on( 'insert:' + this._from.name, insertElement( element ), { priority } );\n\t\t\t} else if ( this._from.type == 'attribute' ) {\n\t\t\t\t// From model attribute to view element -> wrap and unwrap.\n\t\t\t\telement = typeof element == 'string' ? new ViewAttributeElement( element ) : element;\n\n\t\t\t\tdispatcher.on( 'addAttribute:' + this._from.key, wrapItem( element ), { priority } );\n\t\t\t\tdispatcher.on( 'changeAttribute:' + this._from.key, wrapItem( element ), { priority } );\n\t\t\t\tdispatcher.on( 'removeAttribute:' + this._from.key, unwrapItem( element ), { priority } );\n\n\t\t\t\tdispatcher.on( 'selectionAttribute:' + this._from.key, convertSelectionAttribute( element ), { priority } );\n\t\t\t} else {\n\t\t\t\telement = typeof element == 'string' ? new ViewAttributeElement( element ) : element;\n\n\t\t\t\tdispatcher.on( 'addMarker:' + this._from.name, wrapRange( element ), { priority } );\n\t\t\t\tdispatcher.on( 'removeMarker:' + this._from.name, unwrapRange( element ), { priority } );\n\n\t\t\t\tdispatcher.on( 'selectionMarker:' + this._from.name, convertSelectionMarker( element ), { priority } );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Registers what view stamp will be created by converter to mark marker range bounds. Separate elements will be\n\t * created at the beginning and at the end of the range. If range is collapsed then only one element will be created.\n\t *\n\t * Method accepts various ways of providing how the view element will be created. You can pass view element name as\n\t * `string`, view element instance which will be cloned and used, or creator function which returns view element that\n\t * will be used. Keep in mind that when you provide view element instance or creator function, it has to be/return a\n\t * proper type of view element: {@link module:engine/view/uielement~UIElement UIElement}.\n\t *\n\t *\t\tbuildModelConverter().for( dispatcher ).fromMarker( 'search' ).toStamp( 'span' );\n\t *\n\t *\t\tbuildModelConverter().for( dispatcher )\n\t *\t\t\t.fromMarker( 'search' )\n\t *\t\t\t.toStamp( new UIElement( 'span', { 'data-name': 'search' } ) );\n\t *\n\t *\t\tbuildModelConverter().for( dispatcher )\n\t *\t\t\t.fromMarker( 'search' )\n\t *\t\t\t.toStamp( ( data ) => new UIElement( 'span', { 'data-name': data.name ) );\n\t *\n\t * Creator function provides additional `data.isOpening` parameter which defined if currently converted element is\n\t * a beginning or end of the marker range. This makes possible to create different opening and closing stamp.\n\t *\n\t *\t\tbuildModelConverter().for( dispatcher )\n\t *\t\t\t.fromMarker( 'search' )\n\t *\t\t\t.toStamp( ( data ) => {\n\t *\t\t\t\tif ( data.isOpening ) {\n\t *\t\t\t\t\treturn new UIElement( 'span', { 'data-name': data.name, 'data-start': true ) );\n\t *\t\t\t\t}\n\t *\n\t *\t\t\t\treturn new UIElement( 'span', { 'data-name': data.name, 'data-end': true ) );\n\t *\t\t\t}\n\t *\n\t * Creator function provides\n\t * {@link module:engine/conversion/buildmodelconverter~StampCreatorData} parameters.\n\t *\n\t * See how markers {module:engine/model/buildviewconverter~ViewConverterBuilder#toMarker view -> model serialization}\n\t * works to find out what view element format is the best for you.\n\t *\n\t * @param {String|module:engine/view/uielement~UIElement|Function} element UIElement created by converter or\n\t * a function that returns view element.\n\t */\n\ttoStamp( element ) {\n\t\tfor ( const dispatcher of this._dispatchers ) {\n\t\t\tif ( this._from.type != 'marker' ) {\n\t\t\t\t/**\n\t\t\t\t * To-stamp conversion is supported only for model markers.\n\t\t\t\t *\n\t\t\t\t * @error build-model-converter-element-to-stamp\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'build-model-converter-non-marker-to-stamp: To-stamp conversion is supported only from model markers.'\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst priority = this._from.priority === null ? 'normal' : this._from.priority;\n\n\t\t\telement = typeof element == 'string' ? new ViewUIElement( element ) : element;\n\n\t\t\tdispatcher.on( 'addMarker:' + this._from.name, insertUIElement( element ), { priority } );\n\t\t\tdispatcher.on( 'removeMarker:' + this._from.name, removeUIElement( element ), { priority } );\n\t\t}\n\t}\n\n\t/**\n\t * Registers what view attribute will be created by converter. Keep in mind, that only model attribute to\n\t * view attribute conversion is supported.\n\t *\n\t * Method accepts various ways of providing how the view attribute will be created:\n\t *\n\t * * for no passed parameter, attribute key and value will be converted 1-to-1 to view attribute,\n\t * * if you pass one `string`, it will be used as new attribute key while attribute value will be copied,\n\t * * if you pass two `string`s, first one will be used as new attribute key and second one as new attribute value,\n\t * * if you pass a function, it is expected to return an object with `key` and `value` properties representing attribute key and value.\n\t * This function will be passed model attribute value and model attribute key as first two parameters and then\n\t * all dispatcher's\n\t * {module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:changeAttribute changeAttribute event}\n\t * parameters.\n\t *\n\t *\t\tbuildModelConverter().for( dispatcher ).fromAttribute( 'class' ).toAttribute( '' );\n\t *\n\t *\t\tbuildModelConverter().for( dispatcher ).fromAttribute( 'linkTitle' ).toAttribute( 'title' );\n\t *\n\t *\t\tbuildModelConverter().for( dispatcher ).fromAttribute( 'highlighted' ).toAttribute( 'style', 'background:yellow' );\n\t *\n\t *\t\tbuildModelConverter().for( dispatcher )\n\t *\t\t\t.fromAttribute( 'theme' )\n\t *\t\t\t.toAttribute( ( value ) => ( { key: 'class', value: value + '-theme' } ) );\n\t *\n\t * This method creates the converter and adds it as a callback to a proper\n\t * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher conversion dispatcher} event.\n\t *\n\t * @param {String|Function} [keyOrCreator] Attribute key or a creator function.\n\t * @param {*} [value] Attribute value.\n\t */\n\ttoAttribute( keyOrCreator, value ) {\n\t\tif ( this._from.type != 'attribute' ) {\n\t\t\t/**\n\t\t\t * To-attribute conversion is supported only for model attributes.\n\t\t\t *\n\t\t\t * @error build-model-converter-element-to-attribute\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'build-model-converter-non-attribute-to-attribute: ' +\n\t\t\t\t'To-attribute conversion is supported only from model attributes.' );\n\t\t}\n\n\t\tlet attributeCreator;\n\n\t\tif ( !keyOrCreator ) {\n\t\t\t// If `keyOrCreator` is not set, we assume default behavior which is 1:1 attribute re-write.\n\t\t\t// This is also a default behavior for `setAttribute` converter when no attribute creator is passed.\n\t\t\tattributeCreator = undefined;\n\t\t} else if ( typeof keyOrCreator == 'string' ) {\n\t\t\t// `keyOrCreator` is an attribute key.\n\n\t\t\tif ( value ) {\n\t\t\t\t// If value is set, create \"dumb\" creator that always returns the same object.\n\t\t\t\tattributeCreator = function() {\n\t\t\t\t\treturn { key: keyOrCreator, value };\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t// If value is not set, take it from the passed parameter.\n\t\t\t\tattributeCreator = function( value ) {\n\t\t\t\t\treturn { key: keyOrCreator, value };\n\t\t\t\t};\n\t\t\t}\n\t\t} else {\n\t\t\t// `keyOrCreator` is an attribute creator function.\n\t\t\tattributeCreator = keyOrCreator;\n\t\t}\n\n\t\tfor ( const dispatcher of this._dispatchers ) {\n\t\t\tconst options = { priority: this._from.priority || 'normal' };\n\n\t\t\tdispatcher.on( 'addAttribute:' + this._from.key, setAttribute( attributeCreator ), options );\n\t\t\tdispatcher.on( 'changeAttribute:' + this._from.key, setAttribute( attributeCreator ), options );\n\t\t\tdispatcher.on( 'removeAttribute:' + this._from.key, removeAttribute( attributeCreator ), options );\n\t\t}\n\t}\n}\n\n/**\n * Entry point for model-to-view converters builder. This chainable API makes it easy to create basic, most common\n * model-to-view converters and attach them to provided dispatchers. The method returns an instance of\n * {@link module:engine/conversion/buildmodelconverter~ModelConverterBuilder}.\n */\nexport default function buildModelConverter() {\n\treturn new ModelConverterBuilder();\n}\n\n/**\n * @typedef StampCreatorData\n * @param {Object} data Additional information about the change.\n * @param {String} data.name Marker name.\n * @param {module:engine/model/range~Range} data.range Marker range.\n * @param {Boolean} data.isOpening Defines if currently converted element is a beginning or end of the marker range.\n * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n * @param {Object} conversionApi Conversion interface to be used by callback, passed in `ModelConversionDispatcher` constructor.\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/conversion/buildmodelconverter.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/insertoperation\n */\n\nimport Operation from './operation';\nimport Position from '../position';\nimport NodeList from '../nodelist';\nimport RemoveOperation from './removeoperation';\nimport { insert, normalizeNodes } from '../writer';\nimport Text from '../text';\nimport Element from '../element';\n\n/**\n * Operation to insert one or more nodes at given position in the model.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class InsertOperation extends Operation {\n\t/**\n\t * Creates an insert operation.\n\t *\n\t * @param {module:engine/model/position~Position} position Position of insertion.\n\t * @param {module:engine/model/node~NodeSet} nodes The list of nodes to be inserted.\n\t * @param {Number} baseVersion {@link module:engine/model/document~Document#version} on which operation can be applied.\n\t */\n\tconstructor( position, nodes, baseVersion ) {\n\t\tsuper( baseVersion );\n\n\t\t/**\n\t\t * Position of insertion.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/insertoperation~InsertOperation#position\n\t\t */\n\t\tthis.position = Position.createFromPosition( position );\n\n\t\t/**\n\t\t * List of nodes to insert.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/nodelist~NodeList} module:engine/model/operation/insertoperation~InsertOperation#nodeList\n\t\t */\n\t\tthis.nodes = new NodeList( normalizeNodes( nodes ) );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\treturn 'insert';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t * @returns {module:engine/model/operation/insertoperation~InsertOperation}\n\t */\n\tclone() {\n\t\tconst nodes = new NodeList( [ ...this.nodes ].map( node => node.clone( true ) ) );\n\n\t\treturn new InsertOperation( this.position, nodes, this.baseVersion );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t * @returns {module:engine/model/operation/removeoperation~RemoveOperation}\n\t */\n\tgetReversed() {\n\t\treturn new RemoveOperation( this.position, this.nodes.maxOffset, this.baseVersion + 1 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\t// What happens here is that we want original nodes be passed to writer because we want original nodes\n\t\t// to be inserted to the model. But in InsertOperation, we want to keep those nodes as they were added\n\t\t// to the operation, not modified. For example, text nodes can get merged or cropped while Elements can\n\t\t// get children. It is important that InsertOperation has the copy of original nodes in intact state.\n\t\tconst originalNodes = this.nodes;\n\t\tthis.nodes = new NodeList( [ ...originalNodes ].map( node => node.clone( true ) ) );\n\n\t\tconst range = insert( this.position, originalNodes );\n\n\t\treturn { range };\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'engine.model.operation.InsertOperation';\n\t}\n\n\t/**\n\t * Creates `InsertOperation` object from deserilized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/insertoperation~InsertOperation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\tconst children = [];\n\n\t\tfor ( const child of json.nodes ) {\n\t\t\tif ( child.name ) {\n\t\t\t\t// If child has name property, it is an Element.\n\t\t\t\tchildren.push( Element.fromJSON( child ) );\n\t\t\t} else {\n\t\t\t\t// Otherwise, it is a Text node.\n\t\t\t\tchildren.push( Text.fromJSON( child ) );\n\t\t\t}\n\t\t}\n\n\t\treturn new InsertOperation( Position.fromJSON( json.position, document ), children, json.baseVersion );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/operation/insertoperation.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/removeoperation\n */\n\nimport MoveOperation from './moveoperation';\nimport Position from '../position';\nimport Element from '../element';\nimport ReinsertOperation from './reinsertoperation';\n\n/**\n * Operation to remove a range of nodes.\n */\nexport default class RemoveOperation extends MoveOperation {\n\t/**\n\t * Creates a remove operation.\n\t *\n\t * @param {module:engine/model/position~Position} position Position before the first {@link module:engine/model/item~Item model item} to\n\t * remove.\n\t * @param {Number} howMany Offset size of removed range. {@link module:engine/model/item~Item Model items} will be removed starting\n\t * from `sourcePosition`, up to a `sourcePosition` with offset shifted by `howMany`.\n\t * @param {Number} baseVersion {@link module:engine/model/document~Document#version} on which operation can be applied.\n\t */\n\tconstructor( position, howMany, baseVersion ) {\n\t\tconst graveyard = position.root.document.graveyard;\n\t\tconst graveyardPosition = new Position( graveyard, [ graveyard.maxOffset, 0 ] );\n\n\t\tsuper( position, howMany, graveyardPosition, baseVersion );\n\n\t\t/**\n\t\t * Flag informing whether this operation should insert \"holder\" element (`true`) or should move removed nodes\n\t\t * into existing \"holder\" element (`false`).\n\t\t *\n\t\t * The flag should be set to `true` for each \"new\" `RemoveOperation` that is each `RemoveOperation` originally\n\t\t * created to remove some nodes from document (most likely created through `Batch` API).\n\t\t *\n\t\t * The flag should be set to `false` for each `RemoveOperation` that got created by splitting the original\n\t\t * `RemoveOperation`, for example during operational transformation.\n\t\t *\n\t\t * The flag should be set to `false` whenever removing nodes that were re-inserted from graveyard. This will\n\t\t * ensure correctness of all other operations that might change something on those nodes. This will also ensure\n\t\t * that redundant empty graveyard holder elements are not created.\n\t\t *\n\t\t * @protected\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._needsHolderElement = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\treturn 'remove';\n\t}\n\n\t/**\n\t * Offset of the graveyard \"holder\" element, in which nodes removed by this operation are stored.\n\t *\n\t * @protected\n\t * @type {Number}\n\t */\n\tget _holderElementOffset() {\n\t\treturn this.targetPosition.path[ 0 ];\n\t}\n\n\t/**\n\t * Sets {@link module:engine/model/operation/removeoperation~RemoveOperation#_holderElementOffset}.\n\t *\n\t * @protected\n\t * @param {Number} offset\n\t */\n\tset _holderElementOffset( offset ) {\n\t\tthis.targetPosition.path[ 0 ] = offset;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t * @returns {module:engine/model/operation/reinsertoperation~ReinsertOperation}\n\t */\n\tgetReversed() {\n\t\treturn new ReinsertOperation( this.targetPosition, this.howMany, this.sourcePosition, this.baseVersion + 1 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t * @returns {module:engine/model/operation/removeoperation~RemoveOperation}\n\t */\n\tclone() {\n\t\tconst removeOperation = new RemoveOperation( this.sourcePosition, this.howMany, this.baseVersion );\n\t\tremoveOperation.targetPosition = Position.createFromPosition( this.targetPosition );\n\n\t\treturn removeOperation;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\t// Insert \"holder\" element in graveyard root, if the operation needs it.\n\t\tif ( this._needsHolderElement ) {\n\t\t\tconst graveyard = this.targetPosition.root;\n\t\t\tconst holderElement = new Element( '$graveyardHolder' );\n\n\t\t\tgraveyard.insertChildren( this._holderElementOffset, holderElement );\n\n\t\t\t// If the operation removes nodes that are already in graveyard, it may happen that\n\t\t\t// the operation's source position is invalidated by inserting new holder element into the graveyard.\n\t\t\t// If that's the case, we need to fix source position path.\n\t\t\tif ( this.sourcePosition.root == graveyard && this.sourcePosition.path[ 0 ] >= this._holderElementOffset ) {\n\t\t\t\tthis.sourcePosition.path[ 0 ]++;\n\t\t\t}\n\t\t}\n\n\t\t// Then, execute as a move operation.\n\t\treturn super._execute();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'engine.model.operation.RemoveOperation';\n\t}\n\n\t/**\n\t * Creates `RemoveOperation` object from deserilized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/removeoperation~RemoveOperation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\tconst sourcePosition = Position.fromJSON( json.sourcePosition, document );\n\n\t\tconst removeOp = new RemoveOperation( sourcePosition, json.howMany, json.baseVersion );\n\n\t\tremoveOp.targetPosition = Position.fromJSON( json.targetPosition, document );\n\t\tremoveOp._needsHolderElement = json._needsHolderElement;\n\n\t\treturn removeOp;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/operation/removeoperation.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/containerelement\n */\n\nimport Element from './element';\n\n/**\n * Containers are elements which define document structure. They define boundaries for\n * {@link module:engine/view/attributeelement~AttributeElement attributes}. They are mostly use for block elements like `<p>` or `<div>`.\n *\n * Editing engine does not define fixed HTML DTD. This is why the type of the {@link module:engine/view/element~Element} need to\n * be defined by the feature developer.\n *\n * Creating an element you should use `ContainerElement` class or {@link module:engine/view/attributeelement~AttributeElement}. This is\n * important to define the type of the element because of two reasons:\n *\n * Firstly, {@link module:engine/view/domconverter~DomConverter} needs the information what is an editable block to convert elements to\n * DOM properly. {@link module:engine/view/domconverter~DomConverter} will ensure that `ContainerElement` is editable and it is possible\n * to put caret inside it, even if the container is empty.\n *\n * Secondly, {@link module:engine/view/writer~writer view writer} uses this information.\n * Nodes {@link module:engine/view/writer~writer.breakAttributes breaking} and {@link module:engine/view/writer~writer.mergeAttributes\n * merging}\n * is performed only in a bounds of a container nodes.\n *\n * For instance if `<p>` is an container and `<b>` is attribute:\n *\n *\t\t<p><b>fo^o</b></p>\n *\n * {@link module:engine/view/writer~writer.breakAttributes breakAttributes} will create:\n *\n *\t\t<p><b>fo</b><b>o</b></p>\n *\n * There might be a need to mark `<span>` element as a container node, for example in situation when it will be a\n * container of an inline widget:\n *\n *\t\t<span color=\"red\">foobar</span>\t\t// attribute\n *\t\t<span data-widget>foobar</span>\t\t// container\n *\n * @extends module:engine/view/element~Element\n */\nexport default class ContainerElement extends Element {\n\t/**\n\t * Creates a container element.\n\t *\n\t * @see module:engine/view/element~Element\n\t */\n\tconstructor( name, attrs, children ) {\n\t\tsuper( name, attrs, children );\n\n\t\t/**\n\t\t * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n\t\t *\n\t\t * @method #getFillerOffset\n\t\t * @returns {Number|null} Block filler offset or `null` if block filler is not needed.\n\t\t */\n\t\tthis.getFillerOffset = getFillerOffset;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tis( type, name = null ) {\n\t\tif ( !name ) {\n\t\t\treturn type == 'containerElement' || super.is( type );\n\t\t} else {\n\t\t\treturn ( type == 'containerElement' && name == this.name ) || super.is( type, name );\n\t\t}\n\t}\n}\n\n// Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n//\n// @returns {Number|null} Block filler offset or `null` if block filler is not needed.\nfunction getFillerOffset() {\n\treturn this.childCount === 0 ? 0 : null;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/view/containerelement.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/isiterable\n */\n\n/**\n * Checks if value implements iterator interface.\n *\n * @param {*} value The value to check.\n * @returns {Boolean} True if value implements iterator interface.\n */\nexport default function isIterable( value ) {\n\treturn !!( value && value[ Symbol.iterator ] );\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/isiterable.js","import SetCache from './_SetCache';\nimport arrayIncludes from './_arrayIncludes';\nimport arrayIncludesWith from './_arrayIncludesWith';\nimport cacheHas from './_cacheHas';\nimport createSet from './_createSet';\nimport setToArray from './_setToArray';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseUniq;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseUniq.js","export { default } from './assignIn'\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/extend.js","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nexport default isObjectLike;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/isObjectLike.js","import isObjectLike from './isObjectLike';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n *  else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\nexport default isSymbol;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/isSymbol.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/observer/observer\n */\n\nimport DomEmitterMixin from '@ckeditor/ckeditor5-utils/src/dom/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * Abstract base observer class. Observers are classes which observe changes on DOM elements, do the preliminary\n * processing and fire events on the {@link module:engine/view/document~Document} objects. Observers can also add features to the view,\n * for instance by updating its status or marking elements which need refresh on DOM events.\n *\n * @abstract\n */\nexport default class Observer {\n\t/**\n\t * Creates an instance of the observer.\n\t *\n\t * @param {module:engine/view/document~Document} document\n\t */\n\tconstructor( document ) {\n\t\t/**\n\t\t * Reference to the {@link module:engine/view/document~Document} object.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/document~Document}\n\t\t */\n\t\tthis.document = document;\n\n\t\t/**\n\t\t * State of the observer. If it is disabled events will not be fired.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis.isEnabled = false;\n\t}\n\n\t/**\n\t * Enables the observer. This method is called when then observer is registered to the\n\t * {@link module:engine/view/document~Document} and after {@link module:engine/view/document~Document#render rendering}\n\t * (all observers are {@link #disable disabled} before rendering).\n\t *\n\t * A typical use case for disabling observers is that mutation observers need to be disabled for the rendering.\n\t * However, a child class may not need to be disabled, so it can implement an empty method.\n\t *\n\t * @see module:engine/view/observer/observer~Observer#disable\n\t */\n\tenable() {\n\t\tthis.isEnabled = true;\n\t}\n\n\t/**\n\t * Disables the observer. This method is called before\n\t * {@link module:engine/view/document~Document#render rendering} to prevent firing events during rendering.\n\t *\n\t * @see module:engine/view/observer/observer~Observer#enable\n\t */\n\tdisable() {\n\t\tthis.isEnabled = false;\n\t}\n\n\t/**\n\t * Disables and destroys the observer, among others removes event listeners created by the observer.\n\t */\n\tdestroy() {\n\t\tthis.disable();\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Starts observing the given root element.\n\t *\n\t * @method #observe\n\t * @param {HTMLElement} domElement\n\t * @param {String} name The name of the root element.\n\t */\n}\n\nmix( Observer, DomEmitterMixin );\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/view/observer/observer.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/treewalker\n */\n\nimport Element from './element';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport Position from './position';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Position iterator class. It allows to iterate forward and backward over the document.\n */\nexport default class TreeWalker {\n\t/**\n\t * Creates a range iterator. All parameters are optional, but you have to specify either `boundaries` or `startPosition`.\n\t *\n\t * @constructor\n\t * @param {Object} options Object with configuration.\n\t * @param {module:engine/view/range~Range} [options.boundaries=null] Range to define boundaries of the iterator.\n\t * @param {module:engine/view/position~Position} [options.startPosition] Starting position.\n\t * @param {'forward'|'backward'} [options.direction='forward'] Walking direction.\n\t * @param {Boolean} [options.singleCharacters=false] Flag indicating whether all characters from\n\t * {@link module:engine/view/text~Text} should be returned as one {@link module:engine/view/text~Text} (`false`) ore one by one as\n\t * {@link module:engine/view/textproxy~TextProxy} (`true`).\n\t * @param {Boolean} [options.shallow=false] Flag indicating whether iterator should enter elements or not. If the\n\t * iterator is shallow child nodes of any iterated node will not be returned along with `elementEnd` tag.\n\t * @param {Boolean} [options.ignoreElementEnd=false] Flag indicating whether iterator should ignore `elementEnd`\n\t * tags. If the option is true walker will not return a parent node of start position. If this option is `true`\n\t * each {@link module:engine/view/element~Element} will be returned once, while if the option is `false` they might be returned\n\t * twice: for `'elementStart'` and `'elementEnd'`.\n\t */\n\tconstructor( options = {} ) {\n\t\tif ( !options.boundaries && !options.startPosition ) {\n\t\t\t/**\n\t\t\t * Neither boundaries nor starting position have been defined.\n\t\t\t *\n\t\t\t * @error tree-walker-no-start-position\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-tree-walker-no-start-position: Neither boundaries nor starting position have been defined.' );\n\t\t}\n\n\t\tif ( options.direction && options.direction != 'forward' && options.direction != 'backward' ) {\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'view-tree-walker-unknown-direction: Only `backward` and `forward` direction allowed.',\n\t\t\t\t{ direction: options.direction }\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * Iterator boundaries.\n\t\t *\n\t\t * When the iterator is walking `'forward'` on the end of boundary or is walking `'backward'`\n\t\t * on the start of boundary, then `{ done: true }` is returned.\n\t\t *\n\t\t * If boundaries are not defined they are set before first and after last child of the root node.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/range~Range} module:engine/view/treewalker~TreeWalker#boundaries\n\t\t */\n\t\tthis.boundaries = options.boundaries || null;\n\n\t\t/**\n\t\t * Iterator position. If start position is not defined then position depends on {@link #direction}. If direction is\n\t\t * `'forward'` position starts form the beginning, when direction is `'backward'` position starts from the end.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/position~Position} module:engine/view/treewalker~TreeWalker#position\n\t\t */\n\t\tif ( options.startPosition ) {\n\t\t\tthis.position = Position.createFromPosition( options.startPosition );\n\t\t} else {\n\t\t\tthis.position = Position.createFromPosition( options.boundaries[ options.direction == 'backward' ? 'end' : 'start' ] );\n\t\t}\n\n\t\t/**\n\t\t * Walking direction. Defaults `'forward'`.\n\t\t *\n\t\t * @readonly\n\t\t * @member {'backward'|'forward'} module:engine/view/treewalker~TreeWalker#direction\n\t\t */\n\t\tthis.direction = options.direction || 'forward';\n\n\t\t/**\n\t\t * Flag indicating whether all characters from {@link module:engine/view/text~Text} should be returned as one\n\t\t * {@link module:engine/view/text~Text} or one by one as {@link module:engine/view/textproxy~TextProxy}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} module:engine/view/treewalker~TreeWalker#singleCharacters\n\t\t */\n\t\tthis.singleCharacters = !!options.singleCharacters;\n\n\t\t/**\n\t\t * Flag indicating whether iterator should enter elements or not. If the iterator is shallow child nodes of any\n\t\t * iterated node will not be returned along with `elementEnd` tag.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} module:engine/view/treewalker~TreeWalker#shallow\n\t\t */\n\t\tthis.shallow = !!options.shallow;\n\n\t\t/**\n\t\t * Flag indicating whether iterator should ignore `elementEnd` tags. If set to `true`, walker will not\n\t\t * return a parent node of the start position. Each {@link module:engine/view/element~Element} will be returned once.\n\t\t * When set to `false` each element might be returned twice: for `'elementStart'` and `'elementEnd'`.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} module:engine/view/treewalker~TreeWalker#ignoreElementEnd\n\t\t */\n\t\tthis.ignoreElementEnd = !!options.ignoreElementEnd;\n\n\t\t/**\n\t\t * Start boundary parent.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/view/node~Node} module:engine/view/treewalker~TreeWalker#_boundaryStartParent\n\t\t */\n\t\tthis._boundaryStartParent = this.boundaries ? this.boundaries.start.parent : null;\n\n\t\t/**\n\t\t * End boundary parent.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/view/node~Node} module:engine/view/treewalker~TreeWalker#_boundaryEndParent\n\t\t */\n\t\tthis._boundaryEndParent = this.boundaries ? this.boundaries.end.parent : null;\n\t}\n\n\t/**\n\t * Iterator interface.\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Moves {@link #position} in the {@link #direction} skipping values as long as the callback function returns `true`.\n\t *\n\t * For example:\n\t *\n\t * \t\twalker.skip( value => value.type == 'text' ); // <p>{}foo</p> -> <p>foo[]</p>\n\t * \t\twalker.skip( value => true ); // Move the position to the end: <p>{}foo</p> -> <p>foo</p>[]\n\t * \t\twalker.skip( value => false ); // Do not move the position.\n\t *\n\t * @param {Function} skip Callback function. Gets {@link module:engine/view/treewalker~TreeWalkerValue} and should\n\t * return `true` if the value should be skipped or `false` if not.\n\t */\n\tskip( skip ) {\n\t\tlet done, value, prevPosition;\n\n\t\tdo {\n\t\t\tprevPosition = this.position;\n\n\t\t\t( { done, value } = this.next() );\n\t\t} while ( !done && skip( value ) );\n\n\t\tif ( !done ) {\n\t\t\tthis.position = prevPosition;\n\t\t}\n\t}\n\n\t/**\n\t * Iterator interface method.\n\t * Detects walking direction and makes step forward or backward.\n\t *\n\t * @returns {Object} Object implementing iterator interface, returning information about taken step.\n\t */\n\tnext() {\n\t\tif ( this.direction == 'forward' ) {\n\t\t\treturn this._next();\n\t\t} else {\n\t\t\treturn this._previous();\n\t\t}\n\t}\n\n\t/**\n\t * Makes a step forward in view. Moves the {@link #position} to the next position and returns the encountered value.\n\t *\n\t * @private\n\t * @returns {Object}\n\t * @returns {Boolean} return.done `true` if iterator is done, `false` otherwise.\n\t * @returns {module:engine/view/treewalker~TreeWalkerValue} return.value Information about taken step.\n\t */\n\t_next() {\n\t\tlet position = Position.createFromPosition( this.position );\n\t\tconst previousPosition = this.position;\n\t\tconst parent = position.parent;\n\n\t\t// We are at the end of the root.\n\t\tif ( parent.parent === null && position.offset === parent.childCount ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\t// We reached the walker boundary.\n\t\tif ( parent === this._boundaryEndParent && position.offset == this.boundaries.end.offset ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\t// Get node just after current position.\n\t\tlet node;\n\n\t\t// Text is a specific parent because it contains string instead of child nodes.\n\t\tif ( parent instanceof Text ) {\n\t\t\tif ( position.isAtEnd ) {\n\t\t\t\t// Prevent returning \"elementEnd\" for Text node. Skip that value and return the next walker step.\n\t\t\t\tthis.position = Position.createAfter( parent );\n\n\t\t\t\treturn this._next();\n\t\t\t}\n\n\t\t\tnode = parent.data[ position.offset ];\n\t\t} else {\n\t\t\tnode = parent.getChild( position.offset );\n\t\t}\n\n\t\tif ( node instanceof Element ) {\n\t\t\tif ( !this.shallow ) {\n\t\t\t\tposition = new Position( node, 0 );\n\t\t\t} else {\n\t\t\t\tposition.offset++;\n\t\t\t}\n\n\t\t\tthis.position = position;\n\n\t\t\treturn this._formatReturnValue( 'elementStart', node, previousPosition, position, 1 );\n\t\t} else if ( node instanceof Text ) {\n\t\t\tif ( this.singleCharacters ) {\n\t\t\t\tposition = new Position( node, 0 );\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn this._next();\n\t\t\t} else {\n\t\t\t\tlet charactersCount = node.data.length;\n\t\t\t\tlet item = node;\n\n\t\t\t\t// If text stick out of walker range, we need to cut it and wrap by TextProxy.\n\t\t\t\tif ( node == this._boundaryEndParent ) {\n\t\t\t\t\tcharactersCount = this.boundaries.end.offset;\n\t\t\t\t\titem = new TextProxy( node, 0, charactersCount );\n\t\t\t\t\tposition = Position.createAfter( item );\n\t\t\t\t} else {\n\t\t\t\t\t// If not just keep moving forward.\n\t\t\t\t\tposition.offset++;\n\t\t\t\t}\n\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn this._formatReturnValue( 'text', item, previousPosition, position, charactersCount );\n\t\t\t}\n\t\t} else if ( typeof node == 'string' ) {\n\t\t\tlet textLength;\n\n\t\t\tif ( this.singleCharacters ) {\n\t\t\t\ttextLength = 1;\n\t\t\t} else {\n\t\t\t\t// Check if text stick out of walker range.\n\t\t\t\tconst endOffset = parent === this._boundaryEndParent ? this.boundaries.end.offset : parent.data.length;\n\n\t\t\t\ttextLength = endOffset - position.offset;\n\t\t\t}\n\n\t\t\tconst textProxy = new TextProxy( parent, position.offset, textLength );\n\n\t\t\tposition.offset += textLength;\n\t\t\tthis.position = position;\n\n\t\t\treturn this._formatReturnValue( 'text', textProxy, previousPosition, position, textLength );\n\t\t} else {\n\t\t\t// `node` is not set, we reached the end of current `parent`.\n\t\t\tposition = Position.createAfter( parent );\n\t\t\tthis.position = position;\n\n\t\t\tif ( this.ignoreElementEnd ) {\n\t\t\t\treturn this._next();\n\t\t\t} else {\n\t\t\t\treturn this._formatReturnValue( 'elementEnd', parent, previousPosition, position );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Makes a step backward in view. Moves the {@link #position} to the previous position and returns the encountered value.\n\t *\n\t * @private\n\t * @returns {Object}\n\t * @returns {Boolean} return.done True if iterator is done.\n\t * @returns {module:engine/view/treewalker~TreeWalkerValue} return.value Information about taken step.\n\t */\n\t_previous() {\n\t\tlet position = Position.createFromPosition( this.position );\n\t\tconst previousPosition = this.position;\n\t\tconst parent = position.parent;\n\n\t\t// We are at the beginning of the root.\n\t\tif ( parent.parent === null && position.offset === 0 ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\t// We reached the walker boundary.\n\t\tif ( parent == this._boundaryStartParent && position.offset == this.boundaries.start.offset ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\t// Get node just before current position.\n\t\tlet node;\n\n\t\t// Text {@link module:engine/view/text~Text} element is a specific parent because contains string instead of child nodes.\n\t\tif ( parent instanceof Text ) {\n\t\t\tif ( position.isAtStart ) {\n\t\t\t\t// Prevent returning \"elementStart\" for Text node. Skip that value and return the next walker step.\n\t\t\t\tthis.position = Position.createBefore( parent );\n\n\t\t\t\treturn this._previous();\n\t\t\t}\n\n\t\t\tnode = parent.data[ position.offset - 1 ];\n\t\t} else {\n\t\t\tnode = parent.getChild( position.offset - 1 );\n\t\t}\n\n\t\tif ( node instanceof Element ) {\n\t\t\tif ( !this.shallow ) {\n\t\t\t\tposition = new Position( node, node.childCount );\n\t\t\t\tthis.position = position;\n\n\t\t\t\tif ( this.ignoreElementEnd ) {\n\t\t\t\t\treturn this._previous();\n\t\t\t\t} else {\n\t\t\t\t\treturn this._formatReturnValue( 'elementEnd', node, previousPosition, position );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tposition.offset--;\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn this._formatReturnValue( 'elementStart', node, previousPosition, position, 1 );\n\t\t\t}\n\t\t} else if ( node instanceof Text ) {\n\t\t\tif ( this.singleCharacters ) {\n\t\t\t\tposition = new Position( node, node.data.length );\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn this._previous();\n\t\t\t} else {\n\t\t\t\tlet charactersCount = node.data.length;\n\t\t\t\tlet item = node;\n\n\t\t\t\t// If text stick out of walker range, we need to cut it and wrap by TextProxy.\n\t\t\t\tif ( node == this._boundaryStartParent ) {\n\t\t\t\t\tconst offset = this.boundaries.start.offset;\n\n\t\t\t\t\titem = new TextProxy( node, offset, node.data.length - offset );\n\t\t\t\t\tcharactersCount = item.data.length;\n\t\t\t\t\tposition = Position.createBefore( item );\n\t\t\t\t} else {\n\t\t\t\t\t// If not just keep moving backward.\n\t\t\t\t\tposition.offset--;\n\t\t\t\t}\n\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn this._formatReturnValue( 'text', item, previousPosition, position, charactersCount );\n\t\t\t}\n\t\t} else if ( typeof node == 'string' ) {\n\t\t\tlet textLength;\n\n\t\t\tif ( !this.singleCharacters ) {\n\t\t\t\t// Check if text stick out of walker range.\n\t\t\t\tconst startOffset = parent === this._boundaryStartParent ? this.boundaries.start.offset : 0;\n\n\t\t\t\ttextLength = position.offset - startOffset;\n\t\t\t} else {\n\t\t\t\ttextLength = 1;\n\t\t\t}\n\n\t\t\tposition.offset -= textLength;\n\n\t\t\tconst textProxy = new TextProxy( parent, position.offset, textLength );\n\n\t\t\tthis.position = position;\n\n\t\t\treturn this._formatReturnValue( 'text', textProxy, previousPosition, position, textLength );\n\t\t} else {\n\t\t\t// `node` is not set, we reached the beginning of current `parent`.\n\t\t\tposition = Position.createBefore( parent );\n\t\t\tthis.position = position;\n\n\t\t\treturn this._formatReturnValue( 'elementStart', parent, previousPosition, position, 1 );\n\t\t}\n\t}\n\n\t/**\n\t * Format returned data and adjust `previousPosition` and `nextPosition` if reach the bound of the {@link module:engine/view/text~Text}.\n\t *\n\t * @private\n\t * @param {module:engine/view/treewalker~TreeWalkerValueType} type Type of step.\n\t * @param {module:engine/view/item~Item} item Item between old and new position.\n\t * @param {module:engine/view/position~Position} previousPosition Previous position of iterator.\n\t * @param {module:engine/view/position~Position} nextPosition Next position of iterator.\n\t * @param {Number} [length] Length of the item.\n\t * @returns {module:engine/view/treewalker~TreeWalkerValue}\n\t */\n\t_formatReturnValue( type, item, previousPosition, nextPosition, length ) {\n\t\t// Text is a specific parent, because contains string instead of children.\n\t\t// Walker doesn't enter to the Text except situations when walker is iterating over every single character,\n\t\t// or the bound starts/ends inside the Text. So when the position is at the beginning or at the end of the Text\n\t\t// we move it just before or just after Text.\n\t\tif ( item instanceof TextProxy ) {\n\t\t\t// Position is at the end of Text.\n\t\t\tif ( item.offsetInText + item.data.length == item.textNode.data.length ) {\n\t\t\t\tif ( this.direction == 'forward' && !( this.boundaries && this.boundaries.end.isEqual( this.position ) ) ) {\n\t\t\t\t\tnextPosition = Position.createAfter( item.textNode );\n\t\t\t\t\t// When we change nextPosition of returned value we need also update walker current position.\n\t\t\t\t\tthis.position = nextPosition;\n\t\t\t\t} else {\n\t\t\t\t\tpreviousPosition = Position.createAfter( item.textNode );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Position is at the begining ot the text.\n\t\t\tif ( item.offsetInText === 0 ) {\n\t\t\t\tif ( this.direction == 'backward' && !( this.boundaries && this.boundaries.start.isEqual( this.position ) ) ) {\n\t\t\t\t\tnextPosition = Position.createBefore( item.textNode );\n\t\t\t\t\t// When we change nextPosition of returned value we need also update walker current position.\n\t\t\t\t\tthis.position = nextPosition;\n\t\t\t\t} else {\n\t\t\t\t\tpreviousPosition = Position.createBefore( item.textNode );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tdone: false,\n\t\t\tvalue: {\n\t\t\t\ttype,\n\t\t\t\titem,\n\t\t\t\tpreviousPosition,\n\t\t\t\tnextPosition,\n\t\t\t\tlength\n\t\t\t}\n\t\t};\n\t}\n}\n\n/**\n * Type of the step made by {@link module:engine/view/treewalker~TreeWalker}.\n * Possible values: `'elementStart'` if walker is at the beginning of a node, `'elementEnd'` if walker is at the end\n * of node, or `'text'` if walker traversed over single and multiple characters.\n * For {@link module:engine/view/text~Text} `elementStart` and `elementEnd` is not returned.\n *\n * @typedef {String} module:engine/view/treewalker~TreeWalkerValueType\n */\n\n/**\n * Object returned by {@link module:engine/view/treewalker~TreeWalker} when traversing tree view.\n *\n * @typedef {Object} module:engine/view/treewalker~TreeWalkerValue\n * @property {module:engine/view/treewalker~TreeWalkerValueType} type\n * @property {module:engine/view/item~Item} item Item between old and new positions of {@link module:engine/view/treewalker~TreeWalker}.\n * @property {module:engine/view/position~Position} previousPosition Previous position of the iterator.\n * * Forward iteration: For `'elementEnd'` it is the last position inside the element. For all other types it is the\n * position before the item. Note that it is more efficient to use this position then calculate the position before\n * the node using {@link module:engine/view/position~Position.createBefore}.\n * * Backward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after item.\n * * If the position is at the beginning or at the end of the {@link module:engine/view/text~Text} it is always moved from the\n * inside of the Text to its parent just before or just after Text.\n * @property {module:engine/view/position~Position} nextPosition Next position of the iterator.\n * * Forward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after the item.\n * * Backward iteration: For `'elementEnd'` it is last position inside element. For all other types it is the position\n * before the item.\n * * If the position is at the beginning or at the end of the {@link module:engine/view/text~Text} it is always moved from the\n * inside of the Text to its parent just before or just after Text.\n * @property {Number} [length] Length of the item. For `'elementStart'` it is 1. For `'text'` it is\n * the length of the text. For `'elementEnd'` it is undefined.\n */\n\n/**\n * Tree walking directions.\n *\n * @typedef {'forward'|'backward'} module:engine/view/treewalker~TreeWalkerDirection\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/view/treewalker.js","import isNative from './isNative';\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object[key];\n  return isNative(value) ? value : undefined;\n}\n\nexport default getNative;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_getNative.js","import isArray from './isArray';\nimport isSymbol from './isSymbol';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nexport default isKey;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_isKey.js","import isSymbol from './isSymbol';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default toKey;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_toKey.js","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'user': 'fred' };\n * var other = { 'user': 'fred' };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nexport default eq;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/eq.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/node\n */\n\nimport toMap from '@ckeditor/ckeditor5-utils/src/tomap';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Model node. Most basic structure of model tree.\n *\n * This is an abstract class that is a base for other classes representing different nodes in model.\n *\n * **Note:** If a node is detached from the model tree, you can manipulate it using it's API.\n * However, it is **very important** that nodes already attached to model tree should be only changed through\n * {@link module:engine/model/document~Document#batch Batch API}.\n *\n * Changes done by `Node` methods, like {@link module:engine/model/element~Element#insertChildren insertChildren} or\n * {@link module:engine/model/node~Node#setAttribute setAttribute}\n * do not generate {@link module:engine/model/operation/operation~Operation operations}\n * which are essential for correct editor work if you modify nodes in {@link module:engine/model/document~Document document} root.\n *\n * The flow of working on `Node` (and classes that inherits from it) is as such:\n * 1. You can create a `Node` instance, modify it using it's API.\n * 2. Add `Node` to the model using `Batch` API.\n * 3. Change `Node` that was already added to the model using `Batch` API.\n *\n * Similarly, you cannot use `Batch` API on a node that has not been added to the model tree, with the exception\n * of {@link module:engine/model/batch~Batch#insert inserting} that node to the model tree.\n *\n * Be aware that using {@link module:engine/model/batch~Batch#remove remove from Batch API} does not allow to use `Node` API because\n * the information about `Node` is still kept in model document.\n *\n * In case of {@link module:engine/model/element~Element element node}, adding and removing children also counts as changing a node and\n * follows same rules.\n */\nexport default class Node {\n\t/**\n\t * Creates a model node.\n\t *\n\t * This is an abstract class, so this constructor should not be used directly.\n\t *\n\t * @abstract\n\t * @param {Object} [attrs] Node's attributes. See {@link module:utils/tomap~toMap} for a list of accepted values.\n\t */\n\tconstructor( attrs ) {\n\t\t/**\n\t\t * Parent of this node. It could be {@link module:engine/model/element~Element}\n\t\t * or {@link module:engine/model/documentfragment~DocumentFragment}.\n\t\t * Equals to `null` if the node has no parent.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n\t\t */\n\t\tthis.parent = null;\n\n\t\t/**\n\t\t * Attributes set on this node.\n\t\t *\n\t\t * @private\n\t\t * @member {Map} module:engine/model/node~Node#_attrs\n\t\t */\n\t\tthis._attrs = toMap( attrs );\n\t}\n\n\t/**\n\t * Index of this node in it's parent or `null` if the node has no parent.\n\t *\n\t * Accessing this property throws an error if this node's parent element does not contain it.\n\t * This means that model tree got broken.\n\t *\n\t * @readonly\n\t * @type {Number|null}\n\t */\n\tget index() {\n\t\tlet pos;\n\n\t\tif ( !this.parent ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( ( pos = this.parent.getChildIndex( this ) ) === null ) {\n\t\t\t/**\n\t\t\t * The node's parent does not contain this node.\n\t\t\t *\n\t\t\t * @error node-not-found-in-parent\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-node-not-found-in-parent: The node\\'s parent does not contain this node.' );\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\t/**\n\t * Offset at which this node starts in it's parent. It is equal to the sum of {@link #offsetSize offsetSize}\n\t * of all it's previous siblings. Equals to `null` if node has no parent.\n\t *\n\t * Accessing this property throws an error if this node's parent element does not contain it.\n\t * This means that model tree got broken.\n\t *\n\t * @readonly\n\t * @type {Number|Null}\n\t */\n\tget startOffset() {\n\t\tlet pos;\n\n\t\tif ( !this.parent ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( ( pos = this.parent.getChildStartOffset( this ) ) === null ) {\n\t\t\t/**\n\t\t\t * The node's parent does not contain this node.\n\t\t\t *\n\t\t\t * @error node-not-found-in-parent\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-node-not-found-in-parent: The node\\'s parent does not contain this node.' );\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\t/**\n\t * Offset size of this node. Represents how much \"offset space\" is occupied by the node in it's parent.\n\t * It is important for {@link module:engine/model/position~Position position}. When node has `offsetSize` greater than `1`, position\n\t * can be placed between that node start and end. `offsetSize` greater than `1` is for nodes that represents more\n\t * than one entity, i.e. {@link module:engine/model/text~Text text node}.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget offsetSize() {\n\t\treturn 1;\n\t}\n\n\t/**\n\t * Offset at which this node ends in it's parent. It is equal to the sum of this node's\n\t * {@link module:engine/model/node~Node#startOffset start offset} and {@link #offsetSize offset size}.\n\t * Equals to `null` if the node has no parent.\n\t *\n\t * @readonly\n\t * @type {Number|null}\n\t */\n\tget endOffset() {\n\t\tif ( !this.parent ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.startOffset + this.offsetSize;\n\t}\n\n\t/**\n\t * Node's next sibling or `null` if the node is a last child of it's parent or if the node has no parent.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/node~Node|null}\n\t */\n\tget nextSibling() {\n\t\tconst index = this.index;\n\n\t\treturn ( index !== null && this.parent.getChild( index + 1 ) ) || null;\n\t}\n\n\t/**\n\t * Node's previous sibling or `null` if the node is a first child of it's parent or if the node has no parent.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/node~Node|null}\n\t */\n\tget previousSibling() {\n\t\tconst index = this.index;\n\n\t\treturn ( index !== null && this.parent.getChild( index - 1 ) ) || null;\n\t}\n\n\t/**\n\t * The top-most ancestor of the node. If node has no parent it is the root itself. If the node is a part\n\t * of {@link module:engine/model/documentfragment~DocumentFragment}, it's `root` is equal to that `DocumentFragment`.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/node~Node|module:engine/model/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\tlet root = this; // eslint-disable-line consistent-this\n\n\t\twhile ( root.parent ) {\n\t\t\troot = root.parent;\n\t\t}\n\n\t\treturn root;\n\t}\n\n\t/**\n\t * {@link module:engine/model/document~Document Document} that owns this node or `null` if the node has no parent or is inside\n\t * a {@link module:engine/model/documentfragment~DocumentFragment DocumentFragment}.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/document~Document|null}\n\t */\n\tget document() {\n\t\t// This is a top element of a sub-tree.\n\t\tif ( this.root == this ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Root may be `DocumentFragment` which does not have document property.\n\t\treturn this.root.document || null;\n\t}\n\n\t/**\n\t * Creates a copy of this node, that is a node with exactly same attributes, and returns it.\n\t *\n\t * @returns {module:engine/model/node~Node} Node with same attributes as this node.\n\t */\n\tclone() {\n\t\treturn new Node( this._attrs );\n\t}\n\n\t/**\n\t * Gets path to the node. The path is an array containing starting offsets of consecutive ancestors of this node,\n\t * beginning from {@link module:engine/model/node~Node#root root}, down to this node's starting offset. The path can be used to\n\t * create {@link module:engine/model/position~Position Position} instance.\n\t *\n\t *\t\tconst abc = new Text( 'abc' );\n\t *\t\tconst foo = new Text( 'foo' );\n\t *\t\tconst h1 = new Element( 'h1', null, new Text( 'header' ) );\n\t *\t\tconst p = new Element( 'p', null, [ abc, foo ] );\n\t *\t\tconst div = new Element( 'div', null, [ h1, p ] );\n\t *\t\tfoo.getPath(); // Returns [ 1, 3 ]. `foo` is in `p` which is in `div`. `p` starts at offset 1, while `foo` at 3.\n\t *\t\th1.getPath(); // Returns [ 0 ].\n\t *\t\tdiv.getPath(); // Returns [].\n\t *\n\t * @returns {Array.<Number>} The path.\n\t */\n\tgetPath() {\n\t\tconst path = [];\n\t\tlet node = this; // eslint-disable-line consistent-this\n\n\t\twhile ( node.parent ) {\n\t\t\tpath.unshift( node.startOffset );\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\treturn path;\n\t}\n\n\t/**\n\t * Returns ancestors array of this node.\n\t *\n\t * @param {Object} options Options object.\n\t * @param {Boolean} [options.includeNode=false] When set to `true` this node will be also included in parent's array.\n\t * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from node's parent to root element,\n\t * otherwise root element will be the first item in the array.\n\t * @returns {Array} Array with ancestors.\n\t */\n\tgetAncestors( options = { includeNode: false, parentFirst: false } ) {\n\t\tconst ancestors = [];\n\t\tlet parent = options.includeNode ? this : this.parent;\n\n\t\twhile ( parent ) {\n\t\t\tancestors[ options.parentFirst ? 'push' : 'unshift' ]( parent );\n\t\t\tparent = parent.parent;\n\t\t}\n\n\t\treturn ancestors;\n\t}\n\n\t/**\n\t * Removes this node from it's parent.\n\t */\n\tremove() {\n\t\tthis.parent.removeChildren( this.index );\n\t}\n\n\t/**\n\t * Checks if the node has an attribute with given key.\n\t *\n\t * @param {String} key Key of attribute to check.\n\t * @returns {Boolean} `true` if attribute with given key is set on node, `false` otherwise.\n\t */\n\thasAttribute( key ) {\n\t\treturn this._attrs.has( key );\n\t}\n\n\t/**\n\t * Gets an attribute value for given key or `undefined` if that attribute is not set on node.\n\t *\n\t * @param {String} key Key of attribute to look for.\n\t * @returns {*} Attribute value or `undefined`.\n\t */\n\tgetAttribute( key ) {\n\t\treturn this._attrs.get( key );\n\t}\n\n\t/**\n\t * Returns iterator that iterates over this node's attributes.\n\t *\n\t * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\n\t * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n\t *\n\t * @returns {Iterable.<*>}\n\t */\n\tgetAttributes() {\n\t\treturn this._attrs.entries();\n\t}\n\n\t/**\n\t * Returns iterator that iterates over this node's attribute keys.\n\t *\n\t * @returns {Iterator.<String>}\n\t */\n\tgetAttributeKeys() {\n\t\treturn this._attrs.keys();\n\t}\n\n\t/**\n\t * Sets attribute on the node. If attribute with the same key already is set, it's value is overwritten.\n\t *\n\t * @param {String} key Key of attribute to set.\n\t * @param {*} value Attribute value.\n\t */\n\tsetAttribute( key, value ) {\n\t\tthis._attrs.set( key, value );\n\t}\n\n\t/**\n\t * Removes all attributes from the node and sets given attributes.\n\t *\n\t * @param {Object} [attrs] Attributes to set. See {@link module:utils/tomap~toMap} for a list of accepted values.\n\t */\n\tsetAttributesTo( attrs ) {\n\t\tthis._attrs = toMap( attrs );\n\t}\n\n\t/**\n\t * Removes an attribute with given key from the node.\n\t *\n\t * @param {String} key Key of attribute to remove.\n\t * @returns {Boolean} `true` if the attribute was set on the element, `false` otherwise.\n\t */\n\tremoveAttribute( key ) {\n\t\treturn this._attrs.delete( key );\n\t}\n\n\t/**\n\t * Removes all attributes from the node.\n\t */\n\tclearAttributes() {\n\t\tthis._attrs.clear();\n\t}\n\n\t/**\n\t * Converts `Node` to plain object and returns it.\n\t *\n\t * @returns {Object} `Node` converted to plain object.\n\t */\n\ttoJSON() {\n\t\tconst json = {};\n\n\t\tif ( this._attrs.size ) {\n\t\t\tjson.attributes = [ ...this._attrs ];\n\t\t}\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * Checks whether given model tree object is of given type.\n\t *\n\t * This method is useful when processing model tree objects that are of unknown type. For example, a function\n\t * may return {@link module:engine/model/documentfragment~DocumentFragment} or {@link module:engine/model/node~Node}\n\t * that can be either text node or element. This method can be used to check what kind of object is returned.\n\t *\n\t *\t\tobj.is( 'node' ); // true for any node, false for document fragment\n\t *\t\tobj.is( 'documentFragment' ); // true for document fragment, false for any node\n\t *\t\tobj.is( 'element' ); // true for any element, false for text node or document fragment\n\t *\t\tobj.is( 'element', 'paragraph' ); // true only for element which name is 'paragraph'\n\t *\t\tobj.is( 'paragraph' ); // shortcut for obj.is( 'element', 'paragraph' )\n\t *\t\tobj.is( 'text' ); // true for text node, false for element and document fragment\n\t *\t\tobj.is( 'textProxy' ); // true for text proxy object\n\t *\n\t * @method #is\n\t * @param {'element'|'rootElement'|'text'|'textProxy'|'documentFragment'} type\n\t * @returns {Boolean}\n\t */\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/node.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/selection\n */\n\nimport Position from './position';\nimport Element from './element';\nimport Range from './range';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport toMap from '@ckeditor/ckeditor5-utils/src/tomap';\nimport mapsEqual from '@ckeditor/ckeditor5-utils/src/mapsequal';\n\n/**\n * `Selection` is a group of {@link module:engine/model/range~Range ranges} which has a direction specified by\n * {@link module:engine/model/selection~Selection#anchor anchor} and {@link module:engine/model/selection~Selection#focus focus}.\n * Additionally, `Selection` may have it's own attributes.\n */\nexport default class Selection {\n\t/**\n\t * Creates new selection instance.\n\t *\n\t * @param {Iterable.<module:engine/view/range~Range>} [ranges] An optional iterable object of ranges to set.\n\t * @param {Boolean} [isLastBackward] An optional flag describing if last added range was selected forward - from start to end\n\t * (`false`) or backward - from end to start (`true`). Defaults to `false`.\n\t */\n\tconstructor( ranges, isLastBackward ) {\n\t\t/**\n\t\t * Specifies whether the last added range was added as a backward or forward range.\n\t\t *\n\t\t * @private\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis._lastRangeBackward = false;\n\n\t\t/**\n\t\t * Stores selection ranges.\n\t\t *\n\t\t * @protected\n\t\t * @member {Array.<module:engine/model/range~Range>}\n\t\t */\n\t\tthis._ranges = [];\n\n\t\t/**\n\t\t * List of attributes set on current selection.\n\t\t *\n\t\t * @protected\n\t\t * @member {Map} module:engine/model/selection~Selection#_attrs\n\t\t */\n\t\tthis._attrs = new Map();\n\n\t\tif ( ranges ) {\n\t\t\tthis.setRanges( ranges, isLastBackward );\n\t\t}\n\t}\n\n\t/**\n\t * Selection anchor. Anchor may be described as a position where the most recent part of the selection starts.\n\t * Together with {@link #focus} they define the direction of selection, which is important\n\t * when expanding/shrinking selection. Anchor is always {@link module:engine/model/range~Range#start start} or\n\t * {@link module:engine/model/range~Range#end end} position of the most recently added range.\n\t *\n\t * Is set to `null` if there are no ranges in selection.\n\t *\n\t * @see #focus\n\t * @readonly\n\t * @type {module:engine/model/position~Position|null}\n\t */\n\tget anchor() {\n\t\tif ( this._ranges.length > 0 ) {\n\t\t\tconst range = this._ranges[ this._ranges.length - 1 ];\n\n\t\t\treturn this._lastRangeBackward ? range.end : range.start;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Selection focus. Focus is a position where the selection ends.\n\t *\n\t * Is set to `null` if there are no ranges in selection.\n\t *\n\t * @see #anchor\n\t * @readonly\n\t * @type {module:engine/model/position~Position|null}\n\t */\n\tget focus() {\n\t\tif ( this._ranges.length > 0 ) {\n\t\t\tconst range = this._ranges[ this._ranges.length - 1 ];\n\n\t\t\treturn this._lastRangeBackward ? range.start : range.end;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns whether the selection is collapsed. Selection is collapsed when there is exactly one range which is\n\t * collapsed.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isCollapsed() {\n\t\tconst length = this._ranges.length;\n\n\t\tif ( length === 1 ) {\n\t\t\treturn this._ranges[ 0 ].isCollapsed;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Returns number of ranges in selection.\n\t *\n\t * @type {Number}\n\t */\n\tget rangeCount() {\n\t\treturn this._ranges.length;\n\t}\n\n\t/**\n\t * Specifies whether the {@link #focus}\n\t * precedes {@link #anchor}.\n\t *\n\t * @type {Boolean}\n\t */\n\tget isBackward() {\n\t\treturn !this.isCollapsed && this._lastRangeBackward;\n\t}\n\n\t/**\n\t * Checks whether this selection is equal to given selection. Selections are equal if they have same directions,\n\t * same number of ranges and all ranges from one selection equal to a range from other selection.\n\t *\n\t * @param {module:engine/model/selection~Selection} otherSelection Selection to compare with.\n\t * @returns {Boolean} `true` if selections are equal, `false` otherwise.\n\t */\n\tisEqual( otherSelection ) {\n\t\tif ( this.rangeCount != otherSelection.rangeCount ) {\n\t\t\treturn false;\n\t\t} else if ( this.rangeCount === 0 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( !this.anchor.isEqual( otherSelection.anchor ) || !this.focus.isEqual( otherSelection.focus ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor ( const thisRange of this._ranges ) {\n\t\t\tlet found = false;\n\n\t\t\tfor ( const otherRange of otherSelection._ranges ) {\n\t\t\t\tif ( thisRange.isEqual( otherRange ) ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( !found ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over copies of selection ranges.\n\t *\n\t * @returns {Iterator.<module:engine/model/range~Range>}\n\t */\n\t* getRanges() {\n\t\tfor ( const range of this._ranges ) {\n\t\t\tyield Range.createFromRange( range );\n\t\t}\n\t}\n\n\t/**\n\t * Returns a copy of the first range in the selection.\n\t * First range is the one which {@link module:engine/model/range~Range#start start} position\n\t * {@link module:engine/model/position~Position#isBefore is before} start position of all other ranges\n\t * (not to confuse with the first range added to the selection).\n\t *\n\t * Returns `null` if there are no ranges in selection.\n\t *\n\t * @returns {module:engine/model/range~Range|null}\n\t */\n\tgetFirstRange() {\n\t\tlet first = null;\n\n\t\tfor ( const range of this._ranges ) {\n\t\t\tif ( !first || range.start.isBefore( first.start ) ) {\n\t\t\t\tfirst = range;\n\t\t\t}\n\t\t}\n\n\t\treturn first ? Range.createFromRange( first ) : null;\n\t}\n\n\t/**\n\t * Returns a copy of the last range in the selection.\n\t * Last range is the one which {@link module:engine/model/range~Range#end end} position\n\t * {@link module:engine/model/position~Position#isAfter is after} end position of all other ranges (not to confuse with the range most\n\t * recently added to the selection).\n\t *\n\t * Returns `null` if there are no ranges in selection.\n\t *\n\t * @returns {module:engine/model/range~Range|null}\n\t */\n\tgetLastRange() {\n\t\tlet last = null;\n\n\t\tfor ( const range of this._ranges ) {\n\t\t\tif ( !last || range.end.isAfter( last.end ) ) {\n\t\t\t\tlast = range;\n\t\t\t}\n\t\t}\n\n\t\treturn last ? Range.createFromRange( last ) : null;\n\t}\n\n\t/**\n\t * Returns the first position in the selection.\n\t * First position is the position that {@link module:engine/model/position~Position#isBefore is before}\n\t * any other position in the selection.\n\t *\n\t * Returns `null` if there are no ranges in selection.\n\t *\n\t * @returns {module:engine/model/position~Position|null}\n\t */\n\tgetFirstPosition() {\n\t\tconst first = this.getFirstRange();\n\n\t\treturn first ? Position.createFromPosition( first.start ) : null;\n\t}\n\n\t/**\n\t * Returns the last position in the selection.\n\t * Last position is the position that {@link module:engine/model/position~Position#isAfter is after}\n\t * any other position in the selection.\n\t *\n\t * Returns `null` if there are no ranges in selection.\n\t *\n\t * @returns {module:engine/model/position~Position|null}\n\t */\n\tgetLastPosition() {\n\t\tconst lastRange = this.getLastRange();\n\n\t\treturn lastRange ? Position.createFromPosition( lastRange.end ) : null;\n\t}\n\n\t/**\n\t * Adds a range to this selection. Added range is copied. This means that passed range is not saved in `Selection`\n\t * instance and operating on it will not change `Selection` state.\n\t *\n\t * Accepts a flag describing in which way the selection is made - passed range might be selected from\n\t * {@link module:engine/model/range~Range#start start} to {@link module:engine/model/range~Range#end end}\n\t * or from {@link module:engine/model/range~Range#end end}\n\t * to {@link module:engine/model/range~Range#start start}.\n\t * The flag is used to set {@link #anchor} and\n\t * {@link #focus} properties.\n\t *\n\t * @fires change:range\n\t * @param {module:engine/model/range~Range} range Range to add.\n\t * @param {Boolean} [isBackward=false] Flag describing if added range was selected forward - from start to end (`false`)\n\t * or backward - from end to start (`true`).\n\t */\n\taddRange( range, isBackward = false ) {\n\t\tthis._pushRange( range );\n\t\tthis._lastRangeBackward = !!isBackward;\n\n\t\tthis.fire( 'change:range', { directChange: true } );\n\t}\n\n\t/**\n\t * Removes all ranges that were added to the selection.\n\t *\n\t * @fires change:range\n\t */\n\tremoveAllRanges() {\n\t\tif ( this._ranges.length > 0 ) {\n\t\t\tthis._removeAllRanges();\n\t\t\tthis.fire( 'change:range', { directChange: true } );\n\t\t}\n\t}\n\n\t/**\n\t * Replaces all ranges that were added to the selection with given array of ranges. Last range of the array\n\t * is treated like the last added range and is used to set {@link module:engine/model/selection~Selection#anchor} and\n\t * {@link module:engine/model/selection~Selection#focus}. Accepts a flag describing in which direction the selection is made\n\t * (see {@link module:engine/model/selection~Selection#addRange}).\n\t *\n\t * @fires change:range\n\t * @param {Iterable.<module:engine/model/range~Range>} newRanges Ranges to set.\n\t * @param {Boolean} [isLastBackward=false] Flag describing if last added range was selected forward - from start to end (`false`)\n\t * or backward - from end to start (`true`).\n\t */\n\tsetRanges( newRanges, isLastBackward = false ) {\n\t\tnewRanges = Array.from( newRanges );\n\n\t\t// Check whether there is any range in new ranges set that is different than all already added ranges.\n\t\tconst anyNewRange = newRanges.some( newRange => {\n\t\t\tif ( !( newRange instanceof Range ) ) {\n\t\t\t\tthrow new CKEditorError( 'model-selection-added-not-range: Trying to add an object that is not an instance of Range.' );\n\t\t\t}\n\n\t\t\treturn this._ranges.every( oldRange => {\n\t\t\t\treturn !oldRange.isEqual( newRange );\n\t\t\t} );\n\t\t} );\n\n\t\t// Don't do anything if nothing changed.\n\t\tif ( newRanges.length === this._ranges.length && !anyNewRange ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._removeAllRanges();\n\n\t\tfor ( const range of newRanges ) {\n\t\t\tthis._pushRange( range );\n\t\t}\n\n\t\tthis._lastRangeBackward = !!isLastBackward;\n\n\t\tthis.fire( 'change:range', { directChange: true } );\n\t}\n\n\t/**\n\t * Sets this selection's ranges and direction to the ranges and direction of the given selection.\n\t *\n\t * @param {module:engine/model/selection~Selection} otherSelection\n\t */\n\tsetTo( otherSelection ) {\n\t\tthis.setRanges( otherSelection.getRanges(), otherSelection.isBackward );\n\t}\n\n\t/**\n\t * Sets collapsed selection in the specified location.\n\t *\n\t * The location can be specified in the same form as {@link module:engine/model/position~Position.createAt} parameters.\n\t *\n\t * @fires change:range\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset=0] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/model/item~Item model item}.\n\t */\n\tcollapse( itemOrPosition, offset ) {\n\t\tconst pos = Position.createAt( itemOrPosition, offset );\n\t\tconst range = new Range( pos, pos );\n\n\t\tthis.setRanges( [ range ] );\n\t}\n\n\t/**\n\t * Collapses selection to the selection's {@link module:engine/model/selection~Selection#getFirstPosition first position}.\n\t * All ranges, besides the collapsed one, will be removed. Nothing will change if there are no ranges stored\n\t * inside selection.\n\t *\n\t * @fires change\n\t */\n\tcollapseToStart() {\n\t\tconst startPosition = this.getFirstPosition();\n\n\t\tif ( startPosition !== null ) {\n\t\t\tthis.setRanges( [ new Range( startPosition, startPosition ) ] );\n\t\t}\n\t}\n\n\t/**\n\t * Collapses selection to the selection's {@link module:engine/model/selection~Selection#getLastPosition last position}.\n\t * All ranges, besides the collapsed one, will be removed. Nothing will change if there are no ranges stored\n\t * inside selection.\n\t *\n\t * @fires change\n\t */\n\tcollapseToEnd() {\n\t\tconst endPosition = this.getLastPosition();\n\n\t\tif ( endPosition !== null ) {\n\t\t\tthis.setRanges( [ new Range( endPosition, endPosition ) ] );\n\t\t}\n\t}\n\n\t/**\n\t * Sets {@link module:engine/model/selection~Selection#focus} to the specified location.\n\t *\n\t * The location can be specified in the same form as {@link module:engine/model/position~Position.createAt} parameters.\n\t *\n\t * @fires change:range\n\t * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset=0] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/model/item~Item model item}.\n\t */\n\tsetFocus( itemOrPosition, offset ) {\n\t\tif ( this.anchor === null ) {\n\t\t\t/**\n\t\t\t * Cannot set selection focus if there are no ranges in selection.\n\t\t\t *\n\t\t\t * @error model-selection-setFocus-no-ranges\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-selection-setFocus-no-ranges: Cannot set selection focus if there are no ranges in selection.'\n\t\t\t);\n\t\t}\n\n\t\tconst newFocus = Position.createAt( itemOrPosition, offset );\n\n\t\tif ( newFocus.compareWith( this.focus ) == 'same' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst anchor = this.anchor;\n\n\t\tif ( this._ranges.length ) {\n\t\t\tthis._popRange();\n\t\t}\n\n\t\tif ( newFocus.compareWith( anchor ) == 'before' ) {\n\t\t\tthis.addRange( new Range( newFocus, anchor ), true );\n\t\t} else {\n\t\t\tthis.addRange( new Range( anchor, newFocus ) );\n\t\t}\n\t}\n\n\t/**\n\t * Gets an attribute value for given key or `undefined` if that attribute is not set on the selection.\n\t *\n\t * @param {String} key Key of attribute to look for.\n\t * @returns {*} Attribute value or `undefined`.\n\t */\n\tgetAttribute( key ) {\n\t\treturn this._attrs.get( key );\n\t}\n\n\t/**\n\t * Returns iterator that iterates over this selection's attributes.\n\t *\n\t * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\n\t * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n\t *\n\t * @returns {Iterable.<*>}\n\t */\n\tgetAttributes() {\n\t\treturn this._attrs.entries();\n\t}\n\n\t/**\n\t * Returns iterator that iterates over this selection's attribute keys.\n\t *\n\t * @returns {Iterator.<String>}\n\t */\n\tgetAttributeKeys() {\n\t\treturn this._attrs.keys();\n\t}\n\n\t/**\n\t * Checks if the selection has an attribute for given key.\n\t *\n\t * @param {String} key Key of attribute to check.\n\t * @returns {Boolean} `true` if attribute with given key is set on selection, `false` otherwise.\n\t */\n\thasAttribute( key ) {\n\t\treturn this._attrs.has( key );\n\t}\n\n\t/**\n\t * Removes all attributes from the selection.\n\t *\n\t * If there were any attributes in selection, fires the {@link #event:change} event with\n\t * removed attributes' keys.\n\t *\n\t * @fires change:attribute\n\t */\n\tclearAttributes() {\n\t\tif ( this._attrs.size > 0 ) {\n\t\t\tconst attributeKeys = Array.from( this._attrs.keys() );\n\t\t\tthis._attrs.clear();\n\n\t\t\tthis.fire( 'change:attribute', { attributeKeys, directChange: true } );\n\t\t}\n\t}\n\n\t/**\n\t * Removes an attribute with given key from the selection.\n\t *\n\t * If given attribute was set on the selection, fires the {@link #event:change} event with\n\t * removed attribute key.\n\t *\n\t * @fires change:attribute\n\t * @param {String} key Key of attribute to remove.\n\t */\n\tremoveAttribute( key ) {\n\t\tif ( this.hasAttribute( key ) ) {\n\t\t\tthis._attrs.delete( key );\n\n\t\t\tthis.fire( 'change:attribute', { attributeKeys: [ key ], directChange: true } );\n\t\t}\n\t}\n\n\t/**\n\t * Sets attribute on the selection. If attribute with the same key already is set, it's value is overwritten.\n\t *\n\t * If the attribute value has changed, fires the {@link #event:change} event with\n\t * the attribute key.\n\t *\n\t * @fires change:attribute\n\t * @param {String} key Key of attribute to set.\n\t * @param {*} value Attribute value.\n\t */\n\tsetAttribute( key, value ) {\n\t\tif ( this.getAttribute( key ) !== value ) {\n\t\t\tthis._attrs.set( key, value );\n\n\t\t\tthis.fire( 'change:attribute', { attributeKeys: [ key ], directChange: true } );\n\t\t}\n\t}\n\n\t/**\n\t * Removes all attributes from the selection and sets given attributes.\n\t *\n\t * If given set of attributes is different than set of attributes already added to selection, fires\n\t * {@link #event:change change event} with keys of attributes that changed.\n\t *\n\t * @fires event:change:attribute\n\t * @param {Iterable|Object} attrs Iterable object containing attributes to be set.\n\t */\n\tsetAttributesTo( attrs ) {\n\t\tattrs = toMap( attrs );\n\n\t\tif ( !mapsEqual( attrs, this._attrs ) ) {\n\t\t\t// Create a set from keys of old and new attributes.\n\t\t\tconst changed = new Set( Array.from( attrs.keys() ).concat( Array.from( this._attrs.keys() ) ) );\n\n\t\t\tfor ( const [ key, value ] of attrs ) {\n\t\t\t\t// If the attribute remains unchanged, remove it from changed set.\n\t\t\t\tif ( this._attrs.get( key ) === value ) {\n\t\t\t\t\tchanged.delete( key );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._attrs = attrs;\n\n\t\t\tthis.fire( 'change:attribute', { attributeKeys: Array.from( changed ), directChange: true } );\n\t\t}\n\t}\n\n\t/**\n\t * Returns the selected element. {@link module:engine/model/element~Element Element} is considered as selected if there is only\n\t * one range in the selection, and that range contains exactly one element.\n\t * Returns `null` if there is no selected element.\n\t *\n\t * @returns {module:engine/model/element~Element|null}\n\t */\n\tgetSelectedElement() {\n\t\tif ( this.rangeCount !== 1 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst range = this.getFirstRange();\n\t\tconst nodeAfterStart = range.start.nodeAfter;\n\t\tconst nodeBeforeEnd = range.end.nodeBefore;\n\n\t\treturn ( nodeAfterStart instanceof Element && nodeAfterStart == nodeBeforeEnd ) ? nodeAfterStart : null;\n\t}\n\n\t/**\n\t * Gets elements of type \"block\" touched by the selection.\n\t *\n\t * This method's result can be used for example to apply block styling to all blocks covered by this selection.\n\t *\n\t * *Note:* `getSelectedBlocks` always returns the deepest block.\n\t *\n\t * In this case the function will return exactly all 3 paragraphs:\n\t *\n\t *\t\t<paragraph>[a</paragraph>\n\t *\t\t<quote>\n\t *\t\t\t<paragraph>b</paragraph>\n\t *\t\t</quote>\n\t *\t\t<paragraph>c]d</paragraph>\n\t *\n\t * In this case the paragraph will also be returned, despite the collapsed selection:\n\t *\n\t *\t\t<paragraph>[]a</paragraph>\n\t *\n\t * @returns {Iterator.<module:engine/model/element~Element>}\n\t */\n\t* getSelectedBlocks() {\n\t\tconst visited = new WeakSet();\n\n\t\tfor ( const range of this.getRanges() ) {\n\t\t\tconst startBlock = getParentBlock( range.start, visited );\n\n\t\t\tif ( startBlock ) {\n\t\t\t\tyield startBlock;\n\t\t\t}\n\n\t\t\tfor ( const value of range.getWalker() ) {\n\t\t\t\tif ( value.type == 'elementEnd' && isUnvisitedBlockContainer( value.item, visited ) ) {\n\t\t\t\t\tyield value.item;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst endBlock = getParentBlock( range.end, visited );\n\n\t\t\tif ( endBlock ) {\n\t\t\t\tyield endBlock;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates and returns an instance of `Selection` that is a clone of given selection, meaning that it has same\n\t * ranges and same direction as this selection.\n\t *\n\t * @params {module:engine/model/selection~Selection} otherSelection Selection to be cloned.\n\t * @returns {module:engine/model/selection~Selection} `Selection` instance that is a clone of given selection.\n\t */\n\tstatic createFromSelection( otherSelection ) {\n\t\tconst selection = new this();\n\t\tselection.setTo( otherSelection );\n\n\t\treturn selection;\n\t}\n\n\t/**\n\t * Adds given range to internal {@link #_ranges ranges array}. Throws an error\n\t * if given range is intersecting with any range that is already stored in this selection.\n\t *\n\t * @protected\n\t * @param {module:engine/model/range~Range} range Range to add.\n\t */\n\t_pushRange( range ) {\n\t\tif ( !( range instanceof Range ) ) {\n\t\t\tthrow new CKEditorError( 'model-selection-added-not-range: Trying to add an object that is not an instance of Range.' );\n\t\t}\n\n\t\tthis._checkRange( range );\n\t\tthis._ranges.push( Range.createFromRange( range ) );\n\t}\n\n\t/**\n\t * Checks if given range intersects with ranges that are already in the selection. Throws an error if it does.\n\t *\n\t * @protected\n\t * @param {module:engine/model/range~Range} range Range to check.\n\t */\n\t_checkRange( range ) {\n\t\tfor ( let i = 0; i < this._ranges.length; i++ ) {\n\t\t\tif ( range.isIntersecting( this._ranges[ i ] ) ) {\n\t\t\t\t/**\n\t\t\t\t * Trying to add a range that intersects with another range from selection.\n\t\t\t\t *\n\t\t\t\t * @error selection-range-intersects\n\t\t\t\t * @param {module:engine/model/range~Range} addedRange Range that was added to the selection.\n\t\t\t\t * @param {module:engine/model/range~Range} intersectingRange Range from selection that intersects with `addedRange`.\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'model-selection-range-intersects: Trying to add a range that intersects with another range from selection.',\n\t\t\t\t\t{ addedRange: range, intersectingRange: this._ranges[ i ] }\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Removes most recently added range from the selection.\n\t *\n\t * @protected\n\t */\n\t_popRange() {\n\t\tthis._ranges.pop();\n\t}\n\n\t/**\n\t * Deletes ranges from internal range array. Uses {@link #_popRange _popRange} to\n\t * ensure proper ranges removal.\n\t *\n\t * @private\n\t */\n\t_removeAllRanges() {\n\t\twhile ( this._ranges.length > 0 ) {\n\t\t\tthis._popRange();\n\t\t}\n\t}\n\n\t/**\n\t * @event change\n\t */\n\n\t/**\n\t * Fired whenever selection ranges are changed.\n\t *\n\t * @event change:range\n\t * @param {Boolean} directChange Specifies whether the range change was caused by direct usage of `Selection` API (`true`)\n\t * or by changes done to {@link module:engine/model/document~Document model document}\n\t * using {@link module:engine/model/batch~Batch Batch} API (`false`).\n\t */\n\n\t/**\n\t * Fired whenever selection attributes are changed.\n\t *\n\t * @event change:attribute\n\t * @param {Boolean} directChange Specifies whether the attributes changed by direct usage of the Selection API (`true`)\n\t * or by changes done to the {@link module:engine/model/document~Document model document}\n\t * using the {@link module:engine/model/batch~Batch Batch} API (`false`).\n\t * @param {Array.<String>} attributeKeys Array containing keys of attributes that changed.\n\t */\n}\n\nmix( Selection, EmitterMixin );\n\n// Checks whether the given element extends $block in the schema and has a parent (is not a root).\n// Marks it as already visited.\nfunction isUnvisitedBlockContainer( element, visited ) {\n\tif ( visited.has( element ) ) {\n\t\treturn false;\n\t}\n\n\tvisited.add( element );\n\n\t// TODO https://github.com/ckeditor/ckeditor5-engine/issues/532#issuecomment-278900072.\n\t// This should not be a `$block` check.\n\treturn element.document.schema.itemExtends( element.name, '$block' ) && element.parent;\n}\n\n// Finds the lowest element in position's ancestors which is a block.\n// Marks all ancestors as already visited to not include any of them later on.\nfunction getParentBlock( position, visited ) {\n\tconst ancestors = position.parent.getAncestors( { parentFirst: true, includeNode: true } );\n\tconst block = ancestors.find( element => isUnvisitedBlockContainer( element, visited ) );\n\n\t// Mark all ancestors of this position's parent, because find() might've stopped early and\n\t// the found block may be a child of another block.\n\tancestors.forEach( element => visited.add( element ) );\n\n\treturn block;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/selection.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/textproxy\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * `TextProxy` represents a part of {@link module:engine/model/text~Text text node}.\n *\n * Since {@link module:engine/model/position~Position positions} can be placed between characters of a text node,\n * {@link module:engine/model/range~Range ranges} may contain only parts of text nodes. When {@link module:engine/model/range~Range#getItems\n * getting items}\n * contained in such range, we need to represent a part of that text node, since returning the whole text node would be incorrect.\n * `TextProxy` solves this issue.\n *\n * `TextProxy` has an API similar to {@link module:engine/model/text~Text Text} and allows to do most of the common tasks performed\n * on model nodes.\n *\n * **Note:** Some `TextProxy` instances may represent whole text node, not just a part of it.\n * See {@link module:engine/model/textproxy~TextProxy#isPartial}.\n *\n * **Note:** `TextProxy` is not an instance of {@link module:engine/model/node~Node node}. Keep this in mind when using it as a\n * parameter of methods.\n *\n * **Note:** `TextProxy` is a readonly interface. If you want to perform changes on model data represented by a `TextProxy`\n * use {@link module:engine/model/writer~writer model writer API}.\n *\n * **Note:** `TextProxy` instances are created on the fly, basing on the current state of model. Because of this, it is\n * highly unrecommended to store references to `TextProxy` instances. `TextProxy` instances are not refreshed when\n * model changes, so they might get invalidated. Instead, consider creating {@link module:engine/model/liveposition~LivePosition live\n * position}.\n *\n * `TextProxy` instances are created by {@link module:engine/model/treewalker~TreeWalker model tree walker}. You should not need to create\n * an instance of this class by your own.\n */\nexport default class TextProxy {\n\t/**\n\t * Creates a text proxy.\n\t *\n\t * @protected\n\t * @param {module:engine/model/text~Text} textNode Text node which part is represented by this text proxy.\n\t * @param {Number} offsetInText Offset in {@link module:engine/model/textproxy~TextProxy#textNode text node} from which the text proxy\n\t * starts.\n\t * @param {Number} length Text proxy length, that is how many text node's characters, starting from `offsetInText` it represents.\n\t * @constructor\n\t */\n\tconstructor( textNode, offsetInText, length ) {\n\t\t/**\n\t\t * Text node which part is represented by this text proxy.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/text~Text}\n\t\t */\n\t\tthis.textNode = textNode;\n\n\t\tif ( offsetInText < 0 || offsetInText > textNode.offsetSize ) {\n\t\t\t/**\n\t\t\t * Given offsetInText value is incorrect.\n\t\t\t *\n\t\t\t * @error model-textproxy-wrong-offsetintext\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-textproxy-wrong-offsetintext: Given offsetInText value is incorrect.' );\n\t\t}\n\n\t\tif ( length < 0 || offsetInText + length > textNode.offsetSize ) {\n\t\t\t/**\n\t\t\t * Given length value is incorrect.\n\t\t\t *\n\t\t\t * @error model-textproxy-wrong-length\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-textproxy-wrong-length: Given length value is incorrect.' );\n\t\t}\n\n\t\t/**\n\t\t * Text data represented by this text proxy.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.data = textNode.data.substring( offsetInText, offsetInText + length );\n\n\t\t/**\n\t\t * Offset in {@link module:engine/model/textproxy~TextProxy#textNode text node} from which the text proxy starts.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number}\n\t\t */\n\t\tthis.offsetInText = offsetInText;\n\t}\n\n\t/**\n\t * Offset at which this text proxy starts in it's parent.\n\t *\n\t * @see module:engine/model/node~Node#startOffset\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget startOffset() {\n\t\treturn this.textNode.startOffset !== null ? this.textNode.startOffset + this.offsetInText : null;\n\t}\n\n\t/**\n\t * Offset size of this text proxy. Equal to the number of characters represented by the text proxy.\n\t *\n\t * @see module:engine/model/node~Node#offsetSize\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget offsetSize() {\n\t\treturn this.data.length;\n\t}\n\n\t/**\n\t * Offset at which this text proxy ends in it's parent.\n\t *\n\t * @see module:engine/model/node~Node#endOffset\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget endOffset() {\n\t\treturn this.startOffset !== null ? this.startOffset + this.offsetSize : null;\n\t}\n\n\t/**\n\t * Flag indicating whether `TextProxy` instance covers only part of the original {@link module:engine/model/text~Text text node}\n\t * (`true`) or the whole text node (`false`).\n\t *\n\t * This is `false` when text proxy starts at the very beginning of {@link module:engine/model/textproxy~TextProxy#textNode textNode}\n\t * ({@link module:engine/model/textproxy~TextProxy#offsetInText offsetInText} equals `0`) and text proxy sizes is equal to\n\t * text node size.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isPartial() {\n\t\treturn this.offsetSize !== this.textNode.offsetSize;\n\t}\n\n\t/**\n\t * Parent of this text proxy, which is same as parent of text node represented by this text proxy.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n\t */\n\tget parent() {\n\t\treturn this.textNode.parent;\n\t}\n\n\t/**\n\t * Root of this text proxy, which is same as root of text node represented by this text proxy.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/node~Node|module:engine/model/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\treturn this.textNode.root;\n\t}\n\n\t/**\n\t * {@link module:engine/model/document~Document Document} that owns text node represented by this text proxy or `null` if the text node\n\t * has no parent or is inside a {@link module:engine/model/documentfragment~DocumentFragment DocumentFragment}.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/document~Document|null}\n\t */\n\tget document() {\n\t\treturn this.textNode.document;\n\t}\n\n\t/**\n\t * Checks whether given model tree object is of given type.\n\t *\n\t * Read more in {@link module:engine/model/node~Node#is}.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type == 'textProxy';\n\t}\n\n\t/**\n\t * Gets path to this text proxy.\n\t *\n\t * @see module:engine/model/node~Node#getPath\n\t * @returns {Array.<Number>}\n\t */\n\tgetPath() {\n\t\tconst path = this.textNode.getPath();\n\n\t\tif ( path.length > 0 ) {\n\t\t\tpath[ path.length - 1 ] += this.offsetInText;\n\t\t}\n\n\t\treturn path;\n\t}\n\n\t/**\n\t * Returns ancestors array of this text proxy.\n\t *\n\t * @param {Object} options Options object.\n\t * @param {Boolean} [options.includeNode=false] When set to `true` this text proxy will be also included in parent's array.\n\t * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from text proxy parent to root element,\n\t * otherwise root element will be the first item in the array.\n\t * @returns {Array} Array with ancestors.\n\t */\n\tgetAncestors( options = { includeNode: false, parentFirst: false } ) {\n\t\tconst ancestors = [];\n\t\tlet parent = options.includeNode ? this : this.parent;\n\n\t\twhile ( parent ) {\n\t\t\tancestors[ options.parentFirst ? 'push' : 'unshift' ]( parent );\n\t\t\tparent = parent.parent;\n\t\t}\n\n\t\treturn ancestors;\n\t}\n\n\t/**\n\t * Checks if this text proxy has an attribute for given key.\n\t *\n\t * @param {String} key Key of attribute to check.\n\t * @returns {Boolean} `true` if attribute with given key is set on text proxy, `false` otherwise.\n\t */\n\thasAttribute( key ) {\n\t\treturn this.textNode.hasAttribute( key );\n\t}\n\n\t/**\n\t * Gets an attribute value for given key or `undefined` if that attribute is not set on text proxy.\n\t *\n\t * @param {String} key Key of attribute to look for.\n\t * @returns {*} Attribute value or `undefined`.\n\t */\n\tgetAttribute( key ) {\n\t\treturn this.textNode.getAttribute( key );\n\t}\n\n\t/**\n\t * Returns iterator that iterates over this node's attributes. Attributes are returned as arrays containing two\n\t * items. First one is attribute key and second is attribute value.\n\t *\n\t * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n\t *\n\t * @returns {Iterable.<*>}\n\t */\n\tgetAttributes() {\n\t\treturn this.textNode.getAttributes();\n\t}\n\n\t/**\n\t * Returns iterator that iterates over this node's attribute keys.\n\t *\n\t * @returns {Iterator.<String>}\n\t */\n\tgetAttributeKeys() {\n\t\treturn this.textNode.getAttributeKeys();\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/textproxy.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* globals window, Text */\n\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\n\n/**\n * Set of utils related to block and inline fillers handling.\n *\n * Browsers do not allow to put caret in elements which does not have height. Because of it, we need to fill all\n * empty elements which should be selectable with elements or characters called \"fillers\". Unfortunately there is no one\n * universal filler, this is why two types are uses:\n *\n * * Block filler is an element which fill block elements, like `<p>`. CKEditor uses `<br>` as a block filler during the editing,\n * as browsers do natively. So instead of an empty `<p>` there will be `<p><br></p>`. The advantage of block filler is that\n * it is transparent for the selection, so when the caret is before the `<br>` and user presses right arrow he will be\n * moved to the next paragraph, not after the `<br>`. The disadvantage is that it breaks a block, so it can not be used\n * in the middle of a line of text. The {@link module:engine/view/filler~BR_FILLER `<br>` filler} can be replaced with any other\n * character in the data output, for instance {@link module:engine/view/filler~NBSP_FILLER non-breaking space}.\n *\n * * Inline filler is a filler which does not break a line of text, so it can be used inside the text, for instance in the empty\n * `<b>` surrendered by text: `foo<b></b>bar`, if we want to put the caret there. CKEditor uses a sequence of the zero-width\n * spaces as an {@link module:engine/view/filler~INLINE_FILLER inline filler} having the predetermined\n * {@link module:engine/view/filler~INLINE_FILLER_LENGTH length}. A sequence is used, instead of a single character to\n * avoid treating random zero-width spaces as the inline filler. Disadvantage of the inline filler is that it is not\n * transparent for the selection. The arrow key moves the caret between zero-width spaces characters, so the additional\n * code is needed to handle the caret.\n *\n * Both inline and block fillers are handled by the {@link module:engine/view/renderer~Renderer renderer} and are not present in the\n * view.\n *\n * @module engine/view/filler\n */\n\n/**\n * `<br> filler creator. This is a function which creates `<br data-cke-filler=\"true\">` element.\n * It defines how the filler is created.\n *\n * @see module:engine/view/filler~NBSP_FILLER\n * @function\n */\nexport const BR_FILLER = domDocument => {\n\tconst fillerBr = domDocument.createElement( 'br' );\n\tfillerBr.dataset.ckeFiller = true;\n\n\treturn fillerBr;\n};\n\n/**\n * Non-breaking space filler creator. This is a function which creates `&nbsp;` text node.\n * It defines how the filler is created.\n *\n * @see module:engine/view/filler~BR_FILLER\n * @function\n */\nexport const NBSP_FILLER = domDocument => domDocument.createTextNode( '\\u00A0' );\n\n/**\n * Length of the {@link module:engine/view/filler~INLINE_FILLER INLINE_FILLER}.\n */\nexport const INLINE_FILLER_LENGTH = 7;\n\n/**\n * Inline filler which is sequence of the zero width spaces.\n */\nexport let INLINE_FILLER = '';\n\nfor ( let i = 0; i < INLINE_FILLER_LENGTH; i++ ) {\n\tINLINE_FILLER += '\\u200b';\n}\n\n/**\n * Checks if the node is a text node which starts with the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n *\n *\t\tstartsWithFiller( document.createTextNode( INLINE_FILLER ) ); // true\n *\t\tstartsWithFiller( document.createTextNode( INLINE_FILLER + 'foo' ) ); // true\n *\t\tstartsWithFiller( document.createTextNode( 'foo' ) ); // false\n *\t\tstartsWithFiller( document.createElement( 'p' ) ); // false\n *\n * @param {Node} domNode DOM node.\n * @returns {Boolean} True if the text node starts with the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n */\nexport function startsWithFiller( domNode ) {\n\treturn ( domNode instanceof Text ) && ( domNode.data.substr( 0, INLINE_FILLER_LENGTH ) === INLINE_FILLER );\n}\n\n/**\n * Checks if the text node contains only the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n *\n *\t\tisInlineFiller( document.createTextNode( INLINE_FILLER ) ); // true\n *\t\tisInlineFiller( document.createTextNode( INLINE_FILLER + 'foo' ) ); // false\n *\n * @param {Text} domText DOM text node.\n * @returns {Boolean} True if the text node contains only the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n */\nexport function isInlineFiller( domText ) {\n\treturn domText.data.length == INLINE_FILLER_LENGTH && startsWithFiller( domText );\n}\n\n/**\n * Get string data from the text node, removing an {@link module:engine/view/filler~INLINE_FILLER inline filler} from it,\n * if text node contains it.\n *\n *\t\tgetDataWithoutFiller( document.createTextNode( INLINE_FILLER + 'foo' ) ) == 'foo' // true\n *\t\tgetDataWithoutFiller( document.createTextNode( 'foo' ) ) == 'foo' // true\n *\n * @param {Text} domText DOM text node, possible with inline filler.\n * @returns {String} Data without filler.\n */\nexport function getDataWithoutFiller( domText ) {\n\tif ( startsWithFiller( domText ) ) {\n\t\treturn domText.data.slice( INLINE_FILLER_LENGTH );\n\t} else {\n\t\treturn domText.data;\n\t}\n}\n\n// Cache block fillers templates to improve performance.\nconst templateBlockFillers = new WeakMap();\n\n/**\n * Checks if the node is an instance of the block filler of the given type.\n *\n *\t\tconst brFillerInstance = BR_FILLER( document );\n *\t\tisBlockFiller( brFillerInstance, BR_FILLER ); // true\n *\n * @param {Node} domNode DOM node to check.\n * @param {Function} blockFiller Block filler creator.\n * @returns {Boolean} True if text node contains only {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n */\nexport function isBlockFiller( domNode, blockFiller ) {\n\tlet templateBlockFiller = templateBlockFillers.get( blockFiller );\n\n\tif ( !templateBlockFiller ) {\n\t\ttemplateBlockFiller = blockFiller( window.document );\n\t\ttemplateBlockFillers.set( blockFiller, templateBlockFiller );\n\t}\n\n\treturn domNode.isEqualNode( templateBlockFiller );\n}\n\n/**\n * Assign key observer which move cursor from the end of the inline filler to the beginning of it when\n * the left arrow is pressed, so the filler does not break navigation.\n *\n * @param {module:engine/view/document~Document} document Document instance we should inject quirks handling on.\n */\nexport function injectQuirksHandling( document ) {\n\tdocument.on( 'keydown', jumpOverInlineFiller );\n}\n\n// Move cursor from the end of the inline filler to the beginning of it when, so the filler does not break navigation.\nfunction jumpOverInlineFiller( evt, data ) {\n\tif ( data.keyCode == keyCodes.arrowleft ) {\n\t\tconst domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\n\n\t\tif ( domSelection.rangeCount == 1 && domSelection.getRangeAt( 0 ).collapsed ) {\n\t\t\tconst domParent = domSelection.getRangeAt( 0 ).startContainer;\n\t\t\tconst domOffset = domSelection.getRangeAt( 0 ).startOffset;\n\n\t\t\tif ( startsWithFiller( domParent ) && domOffset <= INLINE_FILLER_LENGTH ) {\n\t\t\t\tdomSelection.collapse( domParent, 0 );\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/view/filler.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/observer/domeventobserver\n */\n\nimport Observer from './observer';\nimport DomEventData from './domeventdata';\n\n/**\n * Base class for DOM event observers. This class handles\n * {@link module:engine/view/observer/observer~Observer#observe adding} listeners to DOM elements,\n * {@link module:engine/view/observer/observer~Observer#disable disabling} and\n * {@link module:engine/view/observer/observer~Observer#enable re-enabling} events.\n * Child class needs to define\n * {@link module:engine/view/observer/domeventobserver~DomEventObserver#domEventType DOM event type} and\n * {@link module:engine/view/observer/domeventobserver~DomEventObserver#onDomEvent callback}.\n *\n * For instance:\n *\n *\t\tclass ClickObserver extends DomEventObserver {\n *\t\t\t// It can also be defined as a normal property in the constructor.\n *\t\t\tget domEventType() {\n *\t\t\t\treturn 'click';\n *\t\t\t}\n *\n *\t\t\tonDomEvent( domEvent ) {\n *\t\t\t\tthis.fire( 'click', domEvent );\n *\t\t\t}\n *\t\t}\n *\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class DomEventObserver extends Observer {\n\t/**\n\t * Type of the DOM event the observer should listen on. Array of types can be defined\n\t * if the obsever should listen to multiple DOM events.\n\t *\n\t * @readonly\n\t * @member {String|Array.<String>} #domEventType\n\t */\n\n\t/**\n\t * Callback which should be called when the DOM event occurred. Note that the callback will not be called if\n\t * observer {@link #isEnabled is not enabled}.\n\t *\n\t * @see #domEventType\n\t * @abstract\n\t * @method #onDomEvent\n\t */\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( document ) {\n\t\tsuper( document );\n\n\t\t/**\n\t\t * If set to `true` DOM events will be listened on the capturing phase.\n\t\t * Default value is `false`.\n\t\t *\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis.useCapture = false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tobserve( domElement ) {\n\t\tconst types = typeof this.domEventType == 'string' ? [ this.domEventType ] : this.domEventType;\n\n\t\ttypes.forEach( type => {\n\t\t\tthis.listenTo( domElement, type, ( eventInfo, domEvent ) => {\n\t\t\t\tif ( this.isEnabled ) {\n\t\t\t\t\tthis.onDomEvent( domEvent );\n\t\t\t\t}\n\t\t\t}, { useCapture: this.useCapture } );\n\t\t} );\n\t}\n\n\t/**\n\t * Calls `Document#fire()` if observer {@link #isEnabled is enabled}.\n\t *\n\t * @see module:utils/emittermixin~EmitterMixin#fire\n\t * @param {String} eventType The event type (name).\n\t * @param {Event} domEvent The DOM event.\n\t * @param {Object} [additionalData] The additional data which should extend the\n\t * {@link module:engine/view/observer/domeventdata~DomEventData event data} object.\n\t */\n\tfire( eventType, domEvent, additionalData ) {\n\t\tif ( this.isEnabled ) {\n\t\t\tthis.document.fire( eventType, new DomEventData( this.document, domEvent, additionalData ) );\n\t\t}\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/view/observer/domeventobserver.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/selection\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Range from './range';\nimport Position from './position';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport Element from './element';\n\n/**\n * Class representing selection in tree view.\n *\n * Selection can consist of {@link module:engine/view/range~Range ranges} that can be added using\n * {@link module:engine/view/selection~Selection#addRange addRange}\n * and {@link module:engine/view/selection~Selection#setRanges setRanges} methods.\n * Both methods create copies of provided ranges and store those copies internally. Further modifications to passed\n * ranges will not change selection's state.\n * Selection's ranges can be obtained via {@link module:engine/view/selection~Selection#getRanges getRanges},\n * {@link module:engine/view/selection~Selection#getFirstRange getFirstRange}\n * and {@link module:engine/view/selection~Selection#getLastRange getLastRange}\n * methods, which return copies of ranges stored inside selection. Modifications made on these copies will not change\n * selection's state. Similar situation occurs when getting {@link module:engine/view/selection~Selection#anchor anchor},\n * {@link module:engine/view/selection~Selection#focus focus}, {@link module:engine/view/selection~Selection#getFirstPosition first} and\n * {@link module:engine/view/selection~Selection#getLastPosition last} positions - all will return copies of requested positions.\n */\nexport default class Selection {\n\t/**\n\t * Creates new selection instance.\n\t *\n\t * @param {Iterable.<module:engine/view/range~Range>} [ranges] An optional array of ranges to set.\n\t * @param {Boolean} [isLastBackward] An optional flag describing if last added range was selected forward - from start to end\n\t * (`false`) or backward - from end to start (`true`). Defaults to `false`.\n\t */\n\tconstructor( ranges, isLastBackward ) {\n\t\t/**\n\t\t * Stores all ranges that are selected.\n\t\t *\n\t\t * @protected\n\t\t * @member {Array.<module:engine/view/range~Range>}\n\t\t */\n\t\tthis._ranges = [];\n\n\t\t/**\n\t\t * Specifies whether the last added range was added as a backward or forward range.\n\t\t *\n\t\t * @protected\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis._lastRangeBackward = false;\n\n\t\t/**\n\t\t * Specifies whether selection instance is fake.\n\t\t *\n\t\t * @private\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis._isFake = false;\n\n\t\t/**\n\t\t * Fake selection's label.\n\t\t *\n\t\t * @private\n\t\t * @member {String}\n\t\t */\n\t\tthis._fakeSelectionLabel = '';\n\n\t\tif ( ranges ) {\n\t\t\tthis.setRanges( ranges, isLastBackward );\n\t\t}\n\t}\n\n\t/**\n\t * Sets this selection instance to be marked as `fake`. A fake selection does not render as browser native selection\n\t * over selected elements and is hidden to the user. This way, no native selection UI artifacts are displayed to\n\t * the user and selection over elements can be represented in other way, for example by applying proper CSS class.\n\t *\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM (and be\n\t * properly handled by screen readers).\n\t *\n\t * @fires change\n\t * @param {Boolean} [value=true] If set to true selection will be marked as `fake`.\n\t * @param {Object} [options] Additional options.\n\t * @param {String} [options.label=''] Fake selection label.\n\t */\n\tsetFake( value = true, options = {} ) {\n\t\tthis._isFake = value;\n\t\tthis._fakeSelectionLabel = value ? options.label || '' : '';\n\n\t\tthis.fire( 'change' );\n\t}\n\n\t/**\n\t * Returns true if selection instance is marked as `fake`.\n\t *\n\t * @see #setFake\n\t * @returns {Boolean}\n\t */\n\tget isFake() {\n\t\treturn this._isFake;\n\t}\n\n\t/**\n\t * Returns fake selection label.\n\t *\n\t * @see #setFake\n\t * @returns {String}\n\t */\n\tget fakeSelectionLabel() {\n\t\treturn this._fakeSelectionLabel;\n\t}\n\n\t/**\n\t * Selection anchor. Anchor may be described as a position where the selection starts. Together with\n\t * {@link #focus focus} they define the direction of selection, which is important\n\t * when expanding/shrinking selection. Anchor is always the start or end of the most recent added range.\n\t * It may be a bit unintuitive when there are multiple ranges in selection.\n\t *\n\t * @see #focus\n\t * @type {module:engine/view/position~Position}\n\t */\n\tget anchor() {\n\t\tif ( !this._ranges.length ) {\n\t\t\treturn null;\n\t\t}\n\t\tconst range = this._ranges[ this._ranges.length - 1 ];\n\t\tconst anchor = this._lastRangeBackward ? range.end : range.start;\n\n\t\treturn Position.createFromPosition( anchor );\n\t}\n\n\t/**\n\t * Selection focus. Focus is a position where the selection ends.\n\t *\n\t * @see #anchor\n\t * @type {module:engine/view/position~Position}\n\t */\n\tget focus() {\n\t\tif ( !this._ranges.length ) {\n\t\t\treturn null;\n\t\t}\n\t\tconst range = this._ranges[ this._ranges.length - 1 ];\n\t\tconst focus = this._lastRangeBackward ? range.start : range.end;\n\n\t\treturn Position.createFromPosition( focus );\n\t}\n\n\t/**\n\t * Returns whether the selection is collapsed. Selection is collapsed when there is exactly one range which is\n\t * collapsed.\n\t *\n\t * @type {Boolean}\n\t */\n\tget isCollapsed() {\n\t\treturn this.rangeCount === 1 && this._ranges[ 0 ].isCollapsed;\n\t}\n\n\t/**\n\t * Returns number of ranges in selection.\n\t *\n\t * @type {Number}\n     */\n\tget rangeCount() {\n\t\treturn this._ranges.length;\n\t}\n\n\t/**\n\t * Specifies whether the {@link #focus} precedes {@link #anchor}.\n\t *\n\t * @type {Boolean}\n\t */\n\tget isBackward() {\n\t\treturn !this.isCollapsed && this._lastRangeBackward;\n\t}\n\n\t/**\n\t * {@link module:engine/view/editableelement~EditableElement EditableElement} instance that contains this selection, or `null`\n\t * if the selection is not inside an editable element.\n\t *\n\t * @type {module:engine/view/editableelement~EditableElement|null}\n\t */\n\tget editableElement() {\n\t\tif ( this.anchor ) {\n\t\t\treturn this.anchor.editableElement;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Adds a range to the selection. Added range is copied. This means that passed range is not saved in the\n\t * selection instance and you can safely operate on it.\n\t *\n\t * Accepts a flag describing in which way the selection is made - passed range might be selected from\n\t * {@link module:engine/view/range~Range#start start} to {@link module:engine/view/range~Range#end end}\n\t * or from {@link module:engine/view/range~Range#end end} to {@link module:engine/view/range~Range#start start}.\n\t * The flag is used to set {@link #anchor anchor} and {@link #focus focus} properties.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-selection-range-intersects` if added range intersects\n\t * with ranges already stored in Selection instance.\n\t *\n\t * @fires change\n\t * @param {module:engine/view/range~Range} range\n\t */\n\taddRange( range, isBackward ) {\n\t\tif ( !( range instanceof Range ) ) {\n\t\t\tthrow new CKEditorError( 'view-selection-invalid-range: Invalid Range.' );\n\t\t}\n\n\t\tthis._pushRange( range );\n\t\tthis._lastRangeBackward = !!isBackward;\n\t\tthis.fire( 'change' );\n\t}\n\n\t/**\n\t * Returns an iterator that contains copies of all ranges added to the selection.\n\t *\n\t * @returns {Iterator.<module:engine/view/range~Range>}\n\t */\n\t* getRanges() {\n\t\tfor ( const range of this._ranges ) {\n\t\t\tyield Range.createFromRange( range );\n\t\t}\n\t}\n\n\t/**\n\t * Returns copy of the first range in the selection. First range is the one which\n\t * {@link module:engine/view/range~Range#start start} position {@link module:engine/view/position~Position#isBefore is before} start\n\t * position of all other ranges (not to confuse with the first range added to the selection).\n\t * Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/range~Range|null}\n\t */\n\tgetFirstRange() {\n\t\tlet first = null;\n\n\t\tfor ( const range of this._ranges ) {\n\t\t\tif ( !first || range.start.isBefore( first.start ) ) {\n\t\t\t\tfirst = range;\n\t\t\t}\n\t\t}\n\n\t\treturn first ? Range.createFromRange( first ) : null;\n\t}\n\n\t/**\n\t * Returns copy of the last range in the selection. Last range is the one which {@link module:engine/view/range~Range#end end}\n\t * position {@link module:engine/view/position~Position#isAfter is after} end position of all other ranges (not to confuse\n\t * with the last range added to the selection). Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/range~Range|null}\n\t */\n\tgetLastRange() {\n\t\tlet last = null;\n\n\t\tfor ( const range of this._ranges ) {\n\t\t\tif ( !last || range.end.isAfter( last.end ) ) {\n\t\t\t\tlast = range;\n\t\t\t}\n\t\t}\n\n\t\treturn last ? Range.createFromRange( last ) : null;\n\t}\n\n\t/**\n\t * Returns copy of the first position in the selection. First position is the position that\n\t * {@link module:engine/view/position~Position#isBefore is before} any other position in the selection ranges.\n\t * Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/position~Position|null}\n\t */\n\tgetFirstPosition() {\n\t\tconst firstRange = this.getFirstRange();\n\n\t\treturn firstRange ? Position.createFromPosition( firstRange.start ) : null;\n\t}\n\n\t/**\n\t * Returns copy of the last position in the selection. Last position is the position that\n\t * {@link module:engine/view/position~Position#isAfter is after} any other position in the selection ranges.\n\t * Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/position~Position|null}\n\t */\n\tgetLastPosition() {\n\t\tconst lastRange = this.getLastRange();\n\n\t\treturn lastRange ? Position.createFromPosition( lastRange.end ) : null;\n\t}\n\n\t/**\n\t * Checks whether, this selection is equal to given selection. Selections are equal if they have same directions,\n\t * same number of ranges and all ranges from one selection equal to a range from other selection.\n\t *\n\t * @param {module:engine/view/selection~Selection} otherSelection Selection to compare with.\n\t * @returns {Boolean} `true` if selections are equal, `false` otherwise.\n\t */\n\tisEqual( otherSelection ) {\n\t\tif ( this.isFake != otherSelection.isFake ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( this.isFake && this.fakeSelectionLabel != otherSelection.fakeSelectionLabel ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( this.rangeCount != otherSelection.rangeCount ) {\n\t\t\treturn false;\n\t\t} else if ( this.rangeCount === 0 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( !this.anchor.isEqual( otherSelection.anchor ) || !this.focus.isEqual( otherSelection.focus ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor ( const thisRange of this._ranges ) {\n\t\t\tlet found = false;\n\n\t\t\tfor ( const otherRange of otherSelection._ranges ) {\n\t\t\t\tif ( thisRange.isEqual( otherRange ) ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( !found ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Removes all ranges that were added to the selection.\n\t *\n\t * @fires change\n\t */\n\tremoveAllRanges() {\n\t\tif ( this._ranges.length ) {\n\t\t\tthis._ranges = [];\n\t\t\tthis.fire( 'change' );\n\t\t}\n\t}\n\n\t/**\n\t * Replaces all ranges that were added to the selection with given array of ranges. Last range of the array\n\t * is treated like the last added range and is used to set {@link #anchor anchor} and {@link #focus focus}.\n\t * Accepts a flag describing in which way the selection is made (see {@link #addRange addRange}).\n\t *\n\t * @fires change\n\t * @param {Iterable.<module:engine/view/range~Range>} newRanges Iterable object of ranges to set.\n\t * @param {Boolean} [isLastBackward] Flag describing if last added range was selected forward - from start to end\n\t * (`false`) or backward - from end to start (`true`). Defaults to `false`.\n\t */\n\tsetRanges( newRanges, isLastBackward ) {\n\t\tthis._ranges = [];\n\n\t\tfor ( const range of newRanges ) {\n\t\t\tif ( !( range instanceof Range ) ) {\n\t\t\t\tthrow new CKEditorError( 'view-selection-invalid-range: Invalid Range.' );\n\t\t\t}\n\n\t\t\tthis._pushRange( range );\n\t\t}\n\n\t\tthis._lastRangeBackward = !!isLastBackward;\n\t\tthis.fire( 'change' );\n\t}\n\n\t/**\n\t * Sets this selection's ranges and direction to the ranges and direction of the given selection.\n\t *\n\t * @param {module:engine/view/selection~Selection} otherSelection\n\t */\n\tsetTo( otherSelection ) {\n\t\tthis._isFake = otherSelection._isFake;\n\t\tthis._fakeSelectionLabel = otherSelection._fakeSelectionLabel;\n\n\t\tthis.setRanges( otherSelection.getRanges(), otherSelection.isBackward );\n\t}\n\n\t/**\n\t * Sets collapsed selection in the specified location.\n\t *\n\t * The location can be specified in the same form as {@link module:engine/view/position~Position.createAt} parameters.\n\t *\n\t * @fires change\n\t * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset=0] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\n\t */\n\tcollapse( itemOrPosition, offset ) {\n\t\tconst pos = Position.createAt( itemOrPosition, offset );\n\t\tconst range = new Range( pos, pos );\n\n\t\tthis.setRanges( [ range ] );\n\t}\n\n\t/**\n\t * Collapses selection to the selection's {@link #getFirstPosition first position}.\n\t * All ranges, besides the collapsed one, will be removed. Nothing will change if there are no ranges stored\n\t * inside selection.\n\t *\n\t * @fires change\n\t */\n\tcollapseToStart() {\n\t\tconst startPosition = this.getFirstPosition();\n\n\t\tif ( startPosition !== null ) {\n\t\t\tthis.setRanges( [ new Range( startPosition, startPosition ) ] );\n\t\t}\n\t}\n\n\t/**\n\t * Collapses selection to the selection's {@link #getLastPosition last position}.\n\t * All ranges, besides the collapsed one, will be removed. Nothing will change if there are no ranges stored\n\t * inside selection.\n\t *\n\t * @fires change\n\t */\n\tcollapseToEnd() {\n\t\tconst endPosition = this.getLastPosition();\n\n\t\tif ( endPosition !== null ) {\n\t\t\tthis.setRanges( [ new Range( endPosition, endPosition ) ] );\n\t\t}\n\t}\n\n\t/**\n\t * Sets {@link #focus} to the specified location.\n\t *\n\t * The location can be specified in the same form as {@link module:engine/view/position~Position.createAt} parameters.\n\t *\n\t * @fires change:range\n\t * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset=0] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\n\t */\n\tsetFocus( itemOrPosition, offset ) {\n\t\tif ( this.anchor === null ) {\n\t\t\t/**\n\t\t\t * Cannot set selection focus if there are no ranges in selection.\n\t\t\t *\n\t\t\t * @error view-selection-setFocus-no-ranges\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-selection-setFocus-no-ranges: Cannot set selection focus if there are no ranges in selection.' );\n\t\t}\n\n\t\tconst newFocus = Position.createAt( itemOrPosition, offset );\n\n\t\tif ( newFocus.compareWith( this.focus ) == 'same' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst anchor = this.anchor;\n\n\t\tthis._ranges.pop();\n\n\t\tif ( newFocus.compareWith( anchor ) == 'before' ) {\n\t\t\tthis.addRange( new Range( newFocus, anchor ), true );\n\t\t} else {\n\t\t\tthis.addRange( new Range( anchor, newFocus ) );\n\t\t}\n\t}\n\n\t/**\n\t * Returns the selected element. {@link module:engine/view/element~Element Element} is considered as selected if there is only\n\t * one range in the selection, and that range contains exactly one element.\n\t * Returns `null` if there is no selected element.\n\t *\n\t * @returns {module:engine/view/element~Element|null}\n\t */\n\tgetSelectedElement() {\n\t\tif ( this.rangeCount !== 1 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst range = this.getFirstRange();\n\t\tconst nodeAfterStart = range.start.nodeAfter;\n\t\tconst nodeBeforeEnd = range.end.nodeBefore;\n\n\t\treturn ( nodeAfterStart instanceof Element && nodeAfterStart == nodeBeforeEnd ) ? nodeAfterStart : null;\n\t}\n\n\t/**\n\t * Creates and returns an instance of `Selection` that is a clone of given selection, meaning that it has same\n\t * ranges and same direction as this selection.\n\t *\n\t * @params {module:engine/view/selection~Selection} otherSelection Selection to be cloned.\n\t * @returns {module:engine/view/selection~Selection} `Selection` instance that is a clone of given selection.\n\t */\n\tstatic createFromSelection( otherSelection ) {\n\t\tconst selection = new Selection();\n\t\tselection.setTo( otherSelection );\n\n\t\treturn selection;\n\t}\n\n\t/**\n\t * Adds range to selection - creates copy of given range so it can be safely used and modified.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-selection-range-intersects` if added range intersects\n\t * with ranges already stored in selection instance.\n\t *\n\t * @private\n\t * @param {module:engine/view/range~Range} range\n\t */\n\t_pushRange( range ) {\n\t\tfor ( const storedRange of this._ranges ) {\n\t\t\tif ( range.isIntersecting( storedRange ) ) {\n\t\t\t\t/**\n\t\t\t\t * Trying to add a range that intersects with another range from selection.\n\t\t\t\t *\n\t\t\t\t * @error selection-range-intersects\n\t\t\t\t * @param {module:engine/view/range~Range} addedRange Range that was added to the selection.\n\t\t\t\t * @param {module:engine/view/range~Range} intersectingRange Range from selection that intersects with `addedRange`.\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'view-selection-range-intersects: Trying to add a range that intersects with another range from selection.',\n\t\t\t\t\t{ addedRange: range, intersectingRange: storedRange }\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tthis._ranges.push( Range.createFromRange( range ) );\n\t}\n}\n\nmix( Selection, EmitterMixin );\n\n/**\n * Fired whenever selection ranges are changed through {@link ~Selection Selection API}.\n *\n * @event change\n */\n\n/**\n * @event change:range\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/view/selection.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/comparearrays\n */\n\n/**\n * Compares how given arrays relate to each other. One array can be: same as another array, prefix of another array\n * or completely different. If arrays are different, first index at which they differ is returned. Otherwise,\n * a flag specifying the relation is returned. Flags are negative numbers, so whenever a number >= 0 is returned\n * it means that arrays differ.\n *\n *\t\tcompareArrays( [ 0, 2 ], [ 0, 2 ] );\t\t// 'same'\n *\t\tcompareArrays( [ 0, 2 ], [ 0, 2, 1 ] );\t\t// 'prefix'\n *\t\tcompareArrays( [ 0, 2 ], [ 0 ] );\t\t\t// 'extension'\n *\t\tcompareArrays( [ 0, 2 ], [ 1, 2 ] );\t\t// 0\n *\t\tcompareArrays( [ 0, 2 ], [ 0, 1 ] );\t\t// 1\n *\n * @param {Array} a Array that is compared.\n * @param {Array} b Array to compare with.\n * @returns {module:utils/comparearrays~ArrayRelation} How array `a` is related to `b`.\n */\nexport default function compareArrays( a, b ) {\n\tconst minLen = Math.min( a.length, b.length );\n\n\tfor ( let i = 0; i < minLen; i++ ) {\n\t\tif ( a[ i ] != b[ i ] ) {\n\t\t\t// The arrays are different.\n\t\t\treturn i;\n\t\t}\n\t}\n\n\t// Both arrays were same at all points.\n\tif ( a.length == b.length ) {\n\t\t// If their length is also same, they are the same.\n\t\treturn 'same';\n\t} else if ( a.length < b.length ) {\n\t\t// Compared array is shorter so it is a prefix of the other array.\n\t\treturn 'prefix';\n\t} else {\n\t\t// Compared array is longer so it is an extension of the other array.\n\t\treturn 'extension';\n\t}\n}\n\n/**\n * @typedef {'extension'|'same'|'prefix'} module:utils/comparearrays~ArrayRelation\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/comparearrays.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/first\n */\n\n/**\n * Returns first item of the given `iterable`.\n *\n * @param {Iterable.<*>} iterable\n * @returns {*}\n */\nexport default function first( iterable ) {\n\tconst iteratorItem = iterable.next();\n\n\tif ( iteratorItem.done ) {\n\t\treturn null;\n\t}\n\n\treturn iteratorItem.value;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/first.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* global setTimeout, clearTimeout */\n\n/**\n * @module utils/focustracker\n */\n\nimport DomEmitterMixin from './dom/emittermixin';\nimport ObservableMixin from './observablemixin';\nimport CKEditorError from './ckeditorerror';\nimport mix from './mix';\n\n/**\n * Allows observing a group of `HTMLElement`s whether at least one of them is focused.\n *\n * Used by the {@link module:core/editor/editor~Editor} in order to track whether the focus is still within the application,\n * or were used outside of its UI.\n *\n * **Note** `focus` and `blur` listeners use event capturing, so it is only needed to register wrapper `HTMLElement`\n * which contain other `focusable` elements. But note that this wrapper element has to be focusable too\n * (have e.g. `tabindex=\"-1\"`).\n *\n * @mixes module:utils/dom/emittermixin~EmitterMixin\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class FocusTracker {\n\tconstructor() {\n\t\t/**\n\t\t * True when one of the registered elements is focused.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #isFocused\n\t\t */\n\t\tthis.set( 'isFocused', false );\n\n\t\t/**\n\t\t * Currently focused element.\n\t\t *\n\t\t * @readonly\n\t\t * @member {HTMLElement}\n\t\t */\n\t\tthis.focusedElement = null;\n\n\t\t/**\n\t\t * List of registered elements.\n\t\t *\n\t\t * @private\n\t\t * @member {Set.<HTMLElement>}\n\t\t */\n\t\tthis._elements = new Set();\n\n\t\t/**\n\t\t * Event loop timeout.\n\t\t *\n\t\t * @private\n\t\t * @member {Number}\n\t\t */\n\t\tthis._nextEventLoopTimeout = null;\n\t}\n\n\t/**\n\t * Starts tracking the specified element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tadd( element ) {\n\t\tif ( this._elements.has( element ) ) {\n\t\t\tthrow new CKEditorError( 'focusTracker-add-element-already-exist' );\n\t\t}\n\n\t\tthis.listenTo( element, 'focus', () => this._focus( element ), { useCapture: true } );\n\t\tthis.listenTo( element, 'blur', () => this._blur(), { useCapture: true } );\n\t\tthis._elements.add( element );\n\t}\n\n\t/**\n\t * Stops tracking the specified element and stops listening on this element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tremove( element ) {\n\t\tif ( element === this.focusedElement ) {\n\t\t\tthis._blur( element );\n\t\t}\n\n\t\tif ( this._elements.has( element ) ) {\n\t\t\tthis.stopListening( element );\n\t\t\tthis._elements.delete( element );\n\t\t}\n\t}\n\n\t/**\n\t * Stores currently focused element and set {#isFocused} as `true`.\n\t *\n\t * @private\n\t * @param {HTMLElement} element Element which has been focused.\n\t */\n\t_focus( element ) {\n\t\tclearTimeout( this._nextEventLoopTimeout );\n\n\t\tthis.focusedElement = element;\n\t\tthis.isFocused = true;\n\t}\n\n\t/**\n\t * Clears currently focused element and set {@link #isFocused} as `false`.\n\t * This method uses `setTimeout` to change order of fires `blur` and `focus` events.\n\t *\n\t * @private\n\t * @fires blur\n\t */\n\t_blur() {\n\t\tclearTimeout( this._nextEventLoopTimeout );\n\n\t\tthis._nextEventLoopTimeout = setTimeout( () => {\n\t\t\tthis.focusedElement = null;\n\t\t\tthis.isFocused = false;\n\t\t}, 0 );\n\t}\n\n\t/**\n\t * @event focus\n\t */\n\n\t/**\n\t * @event blur\n\t */\n}\n\nmix( FocusTracker, DomEmitterMixin );\nmix( FocusTracker, ObservableMixin );\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/focustracker.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/keystrokehandler\n */\n\nimport DomEmitterMixin from './dom/emittermixin';\nimport { getCode, parseKeystroke } from './keyboard';\n\n/**\n * Keystroke handler registers keystrokes so the callbacks associated\n * with these keystrokes will be executed if the matching `keydown` is fired\n * by a defined emitter.\n *\n *\t\tconst handler = new KeystrokeHandler();\n *\n *\t\thandler.listenTo( emitter );\n *\n *\t\thandler.set( 'ctrl + a', ( keyEventData, cancel ) => {\n *\t\t\tconsole.log( 'ctrl + a has been pressed' );\n *\t\t\tcancel();\n *\t\t} );\n */\nexport default class KeystrokeHandler {\n\t/**\n\t * Creates an instance of the keystroke handler.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Listener used to listen to events for easier keystroke handler destruction.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:utils/dom/emittermixin~Emitter}\n\t\t */\n\t\tthis._listener = Object.create( DomEmitterMixin );\n\n\t\t/**\n\t\t * Map of the defined keystrokes. Keystroke codes are the keys.\n\t\t *\n\t\t * @private\n\t\t * @member {Map}\n\t\t */\n\t\tthis._keystrokes = new Map();\n\t}\n\n\t/**\n\t * Starts listening for `keydown` events from a given emitter.\n\t *\n\t * @param {module:utils/emittermixin~Emitter} emitter\n\t */\n\tlistenTo( emitter ) {\n\t\tthis._listener.listenTo( emitter, 'keydown', ( evt, data ) => {\n\t\t\tthis.press( data );\n\t\t} );\n\t}\n\n\t/**\n\t * Registers a handler for the specified keystroke.\n\t *\n\t * @param {String|Array.<String|Number>} keystroke Keystroke defined in a format accepted by\n\t * the {@link module:utils/keyboard~parseKeystroke} function.\n\t * @param {Function} callback A function called with the\n\t * {@link module:engine/view/observer/keyobserver~KeyEventData key event data} object and\n\t * a helper to both `preventDefault` and `stopPropagation` of the event.\n\t */\n\tset( keystroke, callback ) {\n\t\tconst keyCode = parseKeystroke( keystroke );\n\t\tconst callbacks = this._keystrokes.get( keyCode );\n\n\t\tif ( callbacks ) {\n\t\t\tcallbacks.push( callback );\n\t\t} else {\n\t\t\tthis._keystrokes.set( keyCode, [ callback ] );\n\t\t}\n\t}\n\n\t/**\n\t * Triggers a keystroke handler for a specified key combination, if such a keystroke was {@link #set defined}.\n\t *\n\t * @param {module:engine/view/observer/keyobserver~KeyEventData} keyEventData Key event data.\n\t * @returns {Boolean} Whether the keystroke was handled.\n\t */\n\tpress( keyEventData ) {\n\t\tconst keyCode = getCode( keyEventData );\n\t\tconst callbacks = this._keystrokes.get( keyCode );\n\n\t\tif ( !callbacks ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor ( const callback of callbacks ) {\n\t\t\tcallback( keyEventData, () => {\n\t\t\t\tkeyEventData.preventDefault();\n\t\t\t\tkeyEventData.stopPropagation();\n\t\t\t} );\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Destroys the keystroke handler.\n\t */\n\tdestroy() {\n\t\tthis._keystrokes = new Map();\n\t\tthis._listener.stopListening();\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/keystrokehandler.js","import eq from './eq';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\nexport default assignValue;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_assignValue.js","import SetCache from './_SetCache';\nimport arrayIncludes from './_arrayIncludes';\nimport arrayIncludesWith from './_arrayIncludesWith';\nimport arrayMap from './_arrayMap';\nimport baseUnary from './_baseUnary';\nimport cacheHas from './_cacheHas';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseDifference;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseDifference.js","import baseHas from './_baseHas';\nimport baseKeys from './_baseKeys';\nimport indexKeys from './_indexKeys';\nimport isArrayLike from './isArrayLike';\nimport isIndex from './_isIndex';\nimport isPrototype from './_isPrototype';\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  var isProto = isPrototype(object);\n  if (!(isProto || isArrayLike(object))) {\n    return baseKeys(object);\n  }\n  var indexes = indexKeys(object),\n      skipIndexes = !!indexes,\n      result = indexes || [],\n      length = result.length;\n\n  for (var key in object) {\n    if (baseHas(object, key) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n        !(isProto && key == 'constructor')) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default keys;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/keys.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/nodelist\n */\n\nimport Node from './node';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Provides an interface to operate on a list of {@link module:engine/model/node~Node nodes}. `NodeList` is used internally\n * in classes like {@link module:engine/model/element~Element Element}\n * or {@link module:engine/model/documentfragment~DocumentFragment DocumentFragment}.\n */\nexport default class NodeList {\n\t/**\n\t * Creates an empty node list.\n\t *\n\t * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes contained in this node list.\n\t */\n\tconstructor( nodes ) {\n\t\t/**\n\t\t * Nodes contained in this node list.\n\t\t *\n\t\t * @private\n\t\t * @member {Array.<module:engine/model/node~Node>}\n\t\t */\n\t\tthis._nodes = [];\n\n\t\tif ( nodes ) {\n\t\t\tthis.insertNodes( 0, nodes );\n\t\t}\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all nodes contained inside this node list.\n\t *\n\t * @returns {Iterator.<module:engine/model/node~Node>}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this._nodes[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Number of nodes contained inside this node list.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget length() {\n\t\treturn this._nodes.length;\n\t}\n\n\t/**\n\t * Sum of {@link module:engine/model/node~Node#offsetSize offset sizes} of all nodes contained inside this node list.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget maxOffset() {\n\t\treturn this._nodes.reduce( ( sum, node ) => sum + node.offsetSize, 0 );\n\t}\n\n\t/**\n\t * Gets the node at the given index. Returns `null` if incorrect index was passed.\n\t *\n\t * @param {Number} index Index of node.\n\t * @returns {module:engine/model/node~Node|null} Node at given index.\n\t */\n\tgetNode( index ) {\n\t\treturn this._nodes[ index ] || null;\n\t}\n\n\t/**\n\t * Returns an index of the given node. Returns `null` if given node is not inside this node list.\n\t *\n\t * @param {module:engine/model/node~Node} node Child node to look for.\n\t * @returns {Number|null} Child node's index.\n\t */\n\tgetNodeIndex( node ) {\n\t\tconst index = this._nodes.indexOf( node );\n\n\t\treturn index == -1 ? null : index;\n\t}\n\n\t/**\n\t * Returns the starting offset of given node. Starting offset is equal to the sum of\n\t * {module:engine/model/node~Node#offsetSize offset sizes} of all nodes that are before this node in this node list.\n\t *\n\t * @param {module:engine/model/node~Node} node Node to look for.\n\t * @returns {Number|null} Node's starting offset.\n\t */\n\tgetNodeStartOffset( node ) {\n\t\tconst index = this.getNodeIndex( node );\n\n\t\treturn index === null ? null : this._nodes.slice( 0, index ).reduce( ( sum, node ) => sum + node.offsetSize, 0 );\n\t}\n\n\t/**\n\t * Converts index to offset in node list.\n\t *\n\t * Returns starting offset of a node that is at given index. Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError}\n\t * `model-nodelist-index-out-of-bounds` if given index is less than `0` or more than {@link #length}.\n\t *\n\t * @param {Number} index Node's index.\n\t * @returns {Number} Node's starting offset.\n\t */\n\tindexToOffset( index ) {\n\t\tif ( index == this._nodes.length ) {\n\t\t\treturn this.maxOffset;\n\t\t}\n\n\t\tconst node = this._nodes[ index ];\n\n\t\tif ( !node ) {\n\t\t\t/**\n\t\t\t * Given index cannot be found in the node list.\n\t\t\t *\n\t\t\t * @error nodelist-index-out-of-bounds\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-nodelist-index-out-of-bounds: Given index cannot be found in the node list.' );\n\t\t}\n\n\t\treturn this.getNodeStartOffset( node );\n\t}\n\n\t/**\n\t * Converts offset in node list to index.\n\t *\n\t * Returns index of a node that occupies given offset. Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError}\n\t * `model-nodelist-offset-out-of-bounds` if given offset is less than `0` or more than {@link #maxOffset}.\n\t *\n\t * @param {Number} offset Offset to look for.\n\t * @returns {Number} Index of a node that occupies given offset.\n\t */\n\toffsetToIndex( offset ) {\n\t\tlet totalOffset = 0;\n\n\t\tfor ( const node of this._nodes ) {\n\t\t\tif ( offset >= totalOffset && offset < totalOffset + node.offsetSize ) {\n\t\t\t\treturn this.getNodeIndex( node );\n\t\t\t}\n\n\t\t\ttotalOffset += node.offsetSize;\n\t\t}\n\n\t\tif ( totalOffset != offset ) {\n\t\t\t/**\n\t\t\t * Given offset cannot be found in the node list.\n\t\t\t *\n\t\t\t * @error nodelist-offset-out-of-bounds\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-nodelist-offset-out-of-bounds: Given offset cannot be found in the node list.' );\n\t\t}\n\n\t\treturn this.length;\n\t}\n\n\t/**\n\t * Inserts given nodes at given index.\n\t *\n\t * @param {Number} index Index at which nodes should be inserted.\n\t * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes to be inserted.\n\t */\n\tinsertNodes( index, nodes ) {\n\t\t// Validation.\n\t\tfor ( const node of nodes ) {\n\t\t\tif ( !( node instanceof Node ) ) {\n\t\t\t\t/**\n\t\t\t\t * Trying to insert an object which is not a Node instance.\n\t\t\t\t *\n\t\t\t\t * @error nodelist-insertNodes-not-node\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'model-nodelist-insertNodes-not-node: Trying to insert an object which is not a Node instance.' );\n\t\t\t}\n\t\t}\n\n\t\tthis._nodes.splice( index, 0, ...nodes );\n\t}\n\n\t/**\n\t * Removes one or more nodes starting at the given index.\n\t *\n\t * @param {Number} indexStart Index of the first node to remove.\n\t * @param {Number} [howMany=1] Number of nodes to remove.\n\t * @returns {Array.<module:engine/model/node~Node>} Array containing removed nodes.\n\t */\n\tremoveNodes( indexStart, howMany = 1 ) {\n\t\treturn this._nodes.splice( indexStart, howMany );\n\t}\n\n\t/**\n\t * Converts `NodeList` instance to an array containing nodes that were inserted in the node list. Nodes\n\t * are also converted to their plain object representation.\n\t *\n\t * @returns {Array.<module:engine/model/node~Node>} `NodeList` instance converted to `Array`.\n\t */\n\ttoJSON() {\n\t\treturn this._nodes.map( node => node.toJSON() );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/nodelist.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/attributeoperation\n */\n\nimport Operation from './operation';\nimport Range from '../range';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport writer from '../writer';\nimport isEqual from '@ckeditor/ckeditor5-utils/src/lib/lodash/isEqual';\n\n/**\n * Operation to change nodes' attribute.\n *\n * Using this class you can add, remove or change value of the attribute.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class AttributeOperation extends Operation {\n\t/**\n\t * Creates an operation that changes, removes or adds attributes.\n\t *\n\t * If only `newValue` is set, attribute will be added on a node. Note that all nodes in operation's range must not\n\t * have an attribute with the same key as the added attribute.\n\t *\n\t * If only `oldValue` is set, then attribute with given key will be removed. Note that all nodes in operation's range\n\t * must have an attribute with that key added.\n\t *\n\t * If both `newValue` and `oldValue` are set, then the operation will change the attribute value. Note that all nodes in\n\t * operation's ranges must already have an attribute with given key and `oldValue` as value\n\t *\n\t * @param {module:engine/model/range~Range} range Range on which the operation should be applied.\n\t * @param {String} key Key of an attribute to change or remove.\n\t * @param {*} oldValue Old value of the attribute with given key or `null`, if attribute was not set before.\n\t * @param {*} newValue New value of the attribute with given key or `null`, if operation should remove attribute.\n\t * @param {Number} baseVersion {@link module:engine/model/document~Document#version} on which the operation can be applied.\n\t */\n\tconstructor( range, key, oldValue, newValue, baseVersion ) {\n\t\tsuper( baseVersion );\n\n\t\t/**\n\t\t * Range on which operation should be applied.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/range~Range}\n\t\t */\n\t\tthis.range = Range.createFromRange( range );\n\n\t\t/**\n\t\t * Key of an attribute to change or remove.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.key = key;\n\n\t\t/**\n\t\t * Old value of the attribute with given key or `null`, if attribute was not set before.\n\t\t *\n\t\t * @readonly\n\t\t * @member {*}\n\t\t */\n\t\tthis.oldValue = oldValue === undefined ? null : oldValue;\n\n\t\t/**\n\t\t * New value of the attribute with given key or `null`, if operation should remove attribute.\n\t\t *\n\t\t * @readonly\n\t\t * @member {*}\n\t\t */\n\t\tthis.newValue = newValue === undefined ? null : newValue;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\tif ( this.oldValue === null ) {\n\t\t\treturn 'addAttribute';\n\t\t} else if ( this.newValue === null ) {\n\t\t\treturn 'removeAttribute';\n\t\t} else {\n\t\t\treturn 'changeAttribute';\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t * @returns {module:engine/model/operation/attributeoperation~AttributeOperation}\n\t */\n\tclone() {\n\t\treturn new AttributeOperation( this.range, this.key, this.oldValue, this.newValue, this.baseVersion );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t * @returns {module:engine/model/operation/attributeoperation~AttributeOperation}\n\t */\n\tgetReversed() {\n\t\treturn new AttributeOperation( this.range, this.key, this.newValue, this.oldValue, this.baseVersion + 1 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\t// Validation.\n\t\tfor ( const item of this.range.getItems() ) {\n\t\t\tif ( this.oldValue !== null && !isEqual( item.getAttribute( this.key ), this.oldValue ) ) {\n\t\t\t\t/**\n\t\t\t\t * Changed node has different attribute value than operation's old attribute value.\n\t\t\t\t *\n\t\t\t\t * @error operation-attribute-wrong-old-value\n\t\t\t\t * @param {module:engine/model/item~Item} item\n\t\t\t\t * @param {String} key\n\t\t\t\t * @param {*} value\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'attribute-operation-wrong-old-value: Changed node has different attribute value than operation\\'s ' +\n\t\t\t\t\t'old attribute value.',\n\t\t\t\t\t{ item, key: this.key, value: this.oldValue }\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif ( this.oldValue === null && this.newValue !== null && item.hasAttribute( this.key ) ) {\n\t\t\t\t/**\n\t\t\t\t * The attribute with given key already exists for the given node.\n\t\t\t\t *\n\t\t\t\t * @error attribute-operation-attribute-exists\n\t\t\t\t * @param {module:engine/model/node~Node} node\n\t\t\t\t * @param {String} key\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'attribute-operation-attribute-exists: The attribute with given key already exists.',\n\t\t\t\t\t{ node: item, key: this.key }\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// If value to set is same as old value, don't do anything.\n\t\t\t// By returning `undefined`, this operation will be seen as `NoOperation` - that means\n\t\t\t// that it won't generate any events, etc. `AttributeOperation` with such parameters may be\n\t\t\t// a result of operational transformation.\n\t\t\tif ( isEqual( this.oldValue, this.newValue ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Execution.\n\t\twriter.setAttribute( this.range, this.key, this.newValue );\n\n\t\treturn { range: this.range, key: this.key, oldValue: this.oldValue, newValue: this.newValue };\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'engine.model.operation.AttributeOperation';\n\t}\n\n\t/**\n\t * Creates `AttributeOperation` object from deserilized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/attributeoperation~AttributeOperation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\treturn new AttributeOperation( Range.fromJSON( json.range, document ), json.key, json.oldValue, json.newValue, json.baseVersion );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/operation/attributeoperation.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/nooperation\n */\n\nimport Operation from './operation';\n\n/**\n * Operation which is doing nothing (\"empty operation\", \"do-nothing operation\", \"noop\"). This is an operation,\n * which when executed does not change the tree model. It still has some parameters defined for transformation purposes.\n *\n * In most cases this operation is a result of transforming operations. When transformation returns\n * {@link module:engine/model/operation/nooperation~NoOperation} it means that changes done by the transformed operation\n * have already been applied.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class NoOperation extends Operation {\n\t/**\n\t * @inheritDoc\n\t * @returns {module:engine/model/operation/nooperation~NoOperation}\n\t */\n\tclone() {\n\t\treturn new NoOperation( this.baseVersion );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t * @returns {module:engine/model/operation/nooperation~NoOperation}\n\t */\n\tgetReversed() {\n\t\treturn new NoOperation( this.baseVersion + 1 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\t// Do nothing.\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'engine.model.operation.NoOperation';\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/operation/nooperation.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/editableelement\n */\n\nimport ContainerElement from './containerelement';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\n\nconst documentSymbol = Symbol( 'document' );\n\n/**\n * Editable element which can be a {@link module:engine/view/rooteditableelement~RootEditableElement root}\n * or nested editable area in the editor.\n *\n * @extends module:engine/view/containerelement~ContainerElement\n * @mixes module:utils/observablemixin~ObservaleMixin\n */\nexport default class EditableElement extends ContainerElement {\n\t/**\n\t * Creates an editable element.\n\t */\n\tconstructor( name, attrs, children ) {\n\t\tsuper( name, attrs, children );\n\n\t\t/**\n\t\t * Whether the editable is in read-write or read-only mode.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} module:engine/view/editableelement~EditableElement#isReadOnly\n\t\t */\n\t\tthis.set( 'isReadOnly', false );\n\n\t\t/**\n\t\t * Whether the editable is focused.\n\t\t *\n\t\t * This property updates when {@link module:engine/view/document~Document#isFocused document.isFocused} is changed and after each\n\t\t * {@link module:engine/view/document~Document#render render} method call.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} module:engine/view/editableelement~EditableElement#isFocused\n\t\t */\n\t\tthis.set( 'isFocused', false );\n\n\t\t/**\n\t\t * The {@link module:engine/view/document~Document} which is an owner of this root.\n\t\t * Can only by set once.\n\t\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-editableelement-document-already-set`\n\t\t * when document is already set.\n\t\t *\n\t\t * @member {module:engine/view/document~Document} #document\n\t\t */\n\t}\n\n\tget document() {\n\t\treturn this.getCustomProperty( documentSymbol );\n\t}\n\n\tset document( document ) {\n\t\tif ( this.getCustomProperty( documentSymbol ) ) {\n\t\t\t/**\n\t\t\t * View document is already set. It can only be set once.\n\t\t\t *\n\t\t\t * @error view-editableelement-document-already-set\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-editableelement-document-already-set: View document is already set.' );\n\t\t}\n\n\t\tthis.setCustomProperty( documentSymbol, document );\n\n\t\tthis.bind( 'isFocused' ).to(\n\t\t\tdocument,\n\t\t\t'isFocused',\n\t\t\tisFocused => isFocused && document.selection.editableElement == this\n\t\t);\n\n\t\t// Update focus state before each rendering. Rendering should not change neither the selection nor the value of\n\t\t// document.isFocused property.\n\t\tthis.listenTo( document, 'render', () => {\n\t\t\tthis.isFocused = document.isFocused && document.selection.editableElement == this;\n\t\t}, { priority: 'high' } );\n\t}\n}\n\nmix( EditableElement, ObservableMixin );\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/view/editableelement.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/node\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * Abstract tree view node class.\n *\n * @abstract\n */\nexport default class Node {\n\t/**\n\t * Creates a tree view node.\n\t *\n\t * This is an abstract class, so this constructor should not be used directly.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Parent element. Null by default. Set by {@link module:engine/view/element~Element#insertChildren}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|null}\n\t\t */\n\t\tthis.parent = null;\n\t}\n\n\t/**\n\t * Index of the node in the parent element or null if the node has no parent.\n\t *\n\t * Accessing this property throws an error if this node's parent element does not contain it.\n\t * This means that view tree got broken.\n\t *\n\t * @readonly\n\t * @type {Number|null}\n\t */\n\tget index() {\n\t\tlet pos;\n\n\t\tif ( !this.parent ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// No parent or child doesn't exist in parent's children.\n\t\tif ( ( pos = this.parent.getChildIndex( this ) ) == -1 ) {\n\t\t\t/**\n\t\t\t * The node's parent does not contain this node. It means that the document tree is corrupted.\n\t\t\t *\n\t\t\t * @error view-node-not-found-in-parent\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-node-not-found-in-parent: The node\\'s parent does not contain this node.' );\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\t/**\n\t * Node's next sibling, or `null` if it is the last child.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|null}\n\t */\n\tget nextSibling() {\n\t\tconst index = this.index;\n\n\t\treturn ( index !== null && this.parent.getChild( index + 1 ) ) || null;\n\t}\n\n\t/**\n\t * Node's previous sibling, or `null` if it is the first child.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|null}\n\t */\n\tget previousSibling() {\n\t\tconst index = this.index;\n\n\t\treturn ( index !== null && this.parent.getChild( index - 1 ) ) || null;\n\t}\n\n\t/**\n\t * Top-most ancestor of the node. If the node has no parent it is the root itself.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\tlet root = this; // eslint-disable-line consistent-this\n\n\t\twhile ( root.parent ) {\n\t\t\troot = root.parent;\n\t\t}\n\n\t\treturn root;\n\t}\n\n\t/**\n\t * {@link module:engine/view/document~Document View document} that owns this node, or `null` if the node is inside\n\t * {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/document~Document|null}\n\t */\n\tget document() {\n\t\t// Parent might be Node, null or DocumentFragment.\n\t\tif ( this.parent instanceof Node ) {\n\t\t\treturn this.parent.document;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Returns ancestors array of this node.\n\t *\n\t * @param {Object} options Options object.\n\t * @param {Boolean} [options.includeNode=false] When set to `true` this node will be also included in parent's array.\n\t * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from node's parent to root element,\n\t * otherwise root element will be the first item in the array.\n\t * @returns {Array} Array with ancestors.\n\t */\n\tgetAncestors( options = { includeNode: false, parentFirst: false } ) {\n\t\tconst ancestors = [];\n\t\tlet parent = options.includeNode ? this : this.parent;\n\n\t\twhile ( parent ) {\n\t\t\tancestors[ options.parentFirst ? 'push' : 'unshift' ]( parent );\n\t\t\tparent = parent.parent;\n\t\t}\n\n\t\treturn ancestors;\n\t}\n\n\t/**\n\t * Removes node from parent.\n\t */\n\tremove() {\n\t\tthis.parent.removeChildren( this.index );\n\t}\n\n\t/**\n\t * @param {module:engine/view/document~ChangeType} type Type of the change.\n\t * @param {module:engine/view/node~Node} node Changed node.\n\t * @fires change\n\t */\n\t_fireChange( type, node ) {\n\t\tthis.fire( 'change:' + type, node );\n\n\t\tif ( this.parent ) {\n\t\t\tthis.parent._fireChange( type, node );\n\t\t}\n\t}\n\n\t/**\n\t * Clones this node.\n\t *\n\t * @method #clone\n\t * @returns {module:engine/view/node~Node} Clone of this node.\n\t */\n\n\t/**\n\t * Checks if provided node is similar to this node.\n\t *\n\t * @method #isSimilar\n\t * @returns {Boolean} True if nodes are similar.\n\t */\n\n\t/**\n\t * Checks whether given view tree object is of given type.\n\t *\n\t * This method is useful when processing view tree objects that are of unknown type. For example, a function\n\t * may return {@link module:engine/view/documentfragment~DocumentFragment} or {@link module:engine/view/node~Node}\n\t * that can be either text node or element. This method can be used to check what kind of object is returned.\n\t *\n\t *\t\tobj.is( 'node' ); // true for any node, false for document fragment\n\t *\t\tobj.is( 'documentFragment' ); // true for document fragment, false for any node\n\t *\t\tobj.is( 'element' ); // true for any element, false for text node or document fragment\n\t *\t\tobj.is( 'element', 'p' ); // true only for element which name is 'p'\n\t *\t\tobj.is( 'p' ); // shortcut for obj.is( 'element', 'p' )\n\t *\t\tobj.is( 'text' ); // true for text node, false for element and document fragment\n\t *\n\t * @method #is\n\t * @param {'element'|'containerElement'|'attributeElement'|'emptyElement'|'uiElement'|\n\t * 'rootElement'|'documentFragment'|'text'|'textProxy'} type\n\t * @returns {Boolean}\n\t */\n}\n\n/**\n * Fired when list of {@link module:engine/view/element~Element elements} children changes.\n *\n * Change event is bubbled – it is fired on all ancestors.\n *\n * @event change:children\n * @param {module:engine/view/node~Node} Changed node.\n */\n\n/**\n * Fired when list of {@link module:engine/view/element~Element elements} attributes changes.\n *\n * Change event is bubbled – it is fired on all ancestors.\n *\n * @event change:attributes\n * @param {module:engine/view/node~Node} Changed node.\n */\n\n/**\n * Fired when {@link module:engine/view/text~Text text nodes} data changes.\n *\n * Change event is bubbled – it is fired on all ancestors.\n *\n * @event change:text\n * @param {module:engine/view/node~Node} Changed node.\n */\n\n/**\n * @event change\n */\n\nmix( Node, EmitterMixin );\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/view/node.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module paragraph/paragraph\n */\n\nimport ParagraphCommand from './paragraphcommand';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport ModelElement from '@ckeditor/ckeditor5-engine/src/model/element';\nimport ModelPosition from '@ckeditor/ckeditor5-engine/src/model/position';\n\nimport buildModelConverter from '@ckeditor/ckeditor5-engine/src/conversion/buildmodelconverter';\nimport buildViewConverter from '@ckeditor/ckeditor5-engine/src/conversion/buildviewconverter';\n\n/**\n * The paragraph feature for the editor.\n * Introduces the `<paragraph>` element in the model which renders as a `<p>` element in the DOM and data.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Paragraph extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'paragraph/paragraph';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst doc = editor.document;\n\t\tconst data = editor.data;\n\t\tconst editing = editor.editing;\n\n\t\teditor.commands.set( 'paragraph', new ParagraphCommand( editor ) );\n\n\t\t// Schema.\n\t\tdoc.schema.registerItem( 'paragraph', '$block' );\n\n\t\t// Build converter from model to view for data and editing pipelines.\n\t\tbuildModelConverter().for( data.modelToView, editing.modelToView )\n\t\t\t.fromElement( 'paragraph' )\n\t\t\t.toElement( 'p' );\n\n\t\t// Build converter from view to model for data pipeline.\n\t\tbuildViewConverter().for( data.viewToModel )\n\t\t\t.fromElement( 'p' )\n\t\t\t.toElement( 'paragraph' );\n\n\t\t// Content autoparagraphing. --------------------------------------------------\n\n\t\t// Step 1.\n\t\t// \"Second chance\" converters for elements and texts which were not allowed in their original locations.\n\t\t// They check if this element/text could be converted if it was in a paragraph.\n\t\t// Forcefully converted items will be temporarily in an invalid context. It's going to be fixed in step 2.\n\n\t\t// Executed after converter added by a feature, but before \"default\" to-model-fragment converter.\n\t\tdata.viewToModel.on( 'element', convertAutoparagraphableItem, { priority: 'low' } );\n\t\t// Executed after default text converter.\n\t\tdata.viewToModel.on( 'text', convertAutoparagraphableItem, { priority: 'lowest' } );\n\n\t\t// Step 2.\n\t\t// After an item is \"forced\" to be converted by `convertAutoparagraphableItem`, we need to actually take\n\t\t// care of adding the paragraph (assumed in `convertAutoparagraphableItem`) and wrap that item in it.\n\n\t\t// Executed after all converters (even default ones).\n\t\tdata.viewToModel.on( 'element', autoparagraphItems, { priority: 'lowest' } );\n\t\tdata.viewToModel.on( 'documentFragment', autoparagraphItems, { priority: 'lowest' } );\n\n\t\t// Empty roots autoparagraphing. -----------------------------------------------\n\n\t\t// Post-fixer which takes care of adding empty paragraph elements to empty roots.\n\t\t// Besides fixing content on #changesDone we also need to handle #dataReady because\n\t\t// if initial data is empty or setData() wasn't even called there will be no #change fired.\n\t\tdoc.on( 'change', ( evt, type, changes, batch ) => findEmptyRoots( doc, batch ) );\n\t\tdoc.on( 'changesDone', autoparagraphEmptyRoots, { priority: 'lowest' } );\n\t\teditor.on( 'dataReady', () => {\n\t\t\tfindEmptyRoots( doc, doc.batch( 'transparent' ) );\n\t\t\tautoparagraphEmptyRoots();\n\t\t}, { priority: 'lowest' } );\n\t}\n}\n\n/**\n * List of element names which should be treated by the autoparagraphing algorithms as\n * paragraph-like. This means that e.g. the following content:\n *\n *\t\t<h1>Foo</h1>\n *\t\t<table>\n *\t\t\t<tr>\n *\t\t\t\t<td>X</td>\n *\t\t\t\t<td>\n *\t\t\t\t\t<ul>\n *\t\t\t\t\t\t<li>Y</li>\n *\t\t\t\t\t\t<li>Z</li>\n *\t\t\t\t\t</ul>\n *\t\t\t\t</td>\n *\t\t\t</tr>\n *\t\t</table>\n *\n * Contains five paragraph-like elements – `<h1>` and two `<td>` and two `<li>`.\n * Hence, if none of the features is going to convert  those elements the above content will be automatically handled\n * by the paragraph feature and converted to:\n *\n *\t\t<p>Foo</p>\n *\t\t<p>X</p>\n *\t\t<p>Y</p>\n *\t\t<p>Z</p>\n *\n * Note: The `<td>` containing two `<li>` elements was ignored – the inner-most paragraph-like elements\n * have priority upon conversion.\n *\n * @member {Set.<String>} module:paragraph/paragraph~Paragraph.paragraphLikeElements\n */\nParagraph.paragraphLikeElements = new Set( [\n\t'blockquote',\n\t'dd',\n\t'div',\n\t'dt',\n\t'h1',\n\t'h2',\n\t'h3',\n\t'h4',\n\t'h5',\n\t'h6',\n\t'li',\n\t'p',\n\t'td'\n] );\n\n// This converter forces a conversion of a non-consumed view item, if that item would be allowed by schema and converted it if was\n// inside a paragraph element. The converter checks whether conversion would be possible if there was a paragraph element\n// between `data.input` item and its parent. If the conversion would be allowed, the converter adds `\"paragraph\"` to the\n// context and fires conversion for `data.input` again.\nfunction convertAutoparagraphableItem( evt, data, consumable, conversionApi ) {\n\t// If the item wasn't consumed by some of the dedicated converters...\n\tif ( !consumable.test( data.input, { name: data.input.name } ) ) {\n\t\treturn;\n\t}\n\n\t// But would be allowed if it was in a paragraph...\n\tif ( !isParagraphable( data.input, data.context, conversionApi.schema, false ) ) {\n\t\treturn;\n\t}\n\n\t// Convert that item in a paragraph context.\n\tdata.context.push( 'paragraph' );\n\tconst item = conversionApi.convertItem( data.input, consumable, data );\n\tdata.context.pop();\n\n\tdata.output = item;\n}\n\n// This converter checks all children of an element or document fragment that has been converted and wraps\n// children in a paragraph element if it is allowed by schema.\n//\n// Basically, after an item is \"forced\" to be converted by `convertAutoparagraphableItem`, we need to actually take\n// care of adding the paragraph (assumed in `convertAutoparagraphableItem`) and wrap that item in it.\nfunction autoparagraphItems( evt, data, consumable, conversionApi ) {\n\t// Autoparagraph only if the element has been converted.\n\tif ( !data.output ) {\n\t\treturn;\n\t}\n\n\tconst isParagraphLike = Paragraph.paragraphLikeElements.has( data.input.name ) && !data.output.is( 'element' );\n\n\t// Keep in mind that this converter is added to all elements and document fragments.\n\t// This means that we have to make a smart decision in which elements (at what level) auto-paragraph should be inserted.\n\t// There are three situations when it is correct to add paragraph:\n\t//   -\twe are converting a view document fragment: this means that we are at the top level of conversion and we should\n\t//\t\tadd paragraph elements for \"bare\" texts (unless converting in $clipboardHolder, but this is covered by schema),\n\t//   -\twe are converting an element that was converted to model element: this means that it will be represented in model\n\t//\t\tand has added its context when converting children - we should add paragraph for those items that passed\n\t//\t\tin `convertAutoparagraphableItem`, because it is correct for them to be autoparagraphed,\n\t//\t -\twe are converting \"paragraph-like\" element, which children should always be autoparagraphed (if it is allowed by schema,\n\t//\t\tso we won't end up with, i.e., paragraph inside paragraph, if paragraph was in paragraph-like element).\n\tconst shouldAutoparagraph =\n\t\t( data.input.is( 'documentFragment' ) ) ||\n\t\t( data.input.is( 'element' ) && data.output.is( 'element' ) ) ||\n\t\tisParagraphLike;\n\n\tif ( !shouldAutoparagraph ) {\n\t\treturn;\n\t}\n\n\t// Take care of proper context. This is important for `isParagraphable` checks.\n\tconst needsNewContext = data.output.is( 'element' );\n\n\tif ( needsNewContext ) {\n\t\tdata.context.push( data.output );\n\t}\n\n\t// `paragraph` element that will wrap auto-paragraphable children.\n\tlet autoParagraph = null;\n\n\t// Check children and wrap them in a `paragraph` element if they need to be wrapped.\n\t// Be smart when wrapping children and put all auto-paragraphable siblings in one `paragraph` parent:\n\t// foo<$text bold=\"true\">bar</$text><paragraph>xxx</paragraph>baz      --->\n\t// <paragraph>foo<$text bold=\"true\">bar</$text></paragraph><paragraph>xxx</paragraph><paragraph>baz</paragraph>\n\tfor ( let i = 0; i < data.output.childCount; i++ ) {\n\t\tconst child = data.output.getChild( i );\n\n\t\tif ( isParagraphable( child, data.context, conversionApi.schema, isParagraphLike ) ) {\n\t\t\t// If there is no wrapping `paragraph` element, create it.\n\t\t\tif ( !autoParagraph ) {\n\t\t\t\tautoParagraph = new ModelElement( 'paragraph' );\n\t\t\t\tdata.output.insertChildren( child.index, autoParagraph );\n\t\t\t}\n\t\t\t// Otherwise, use existing `paragraph` and just fix iterator.\n\t\t\t// Thanks to reusing `paragraph` element, multiple siblings ends up in same container.\n\t\t\telse {\n\t\t\t\ti--;\n\t\t\t}\n\n\t\t\tchild.remove();\n\t\t\tautoParagraph.appendChildren( child );\n\t\t} else {\n\t\t\t// That was not a paragraphable children, reset `paragraph` wrapper - following auto-paragraphable children\n\t\t\t// need to be placed in a new `paragraph` element.\n\t\t\tautoParagraph = null;\n\t\t}\n\t}\n\n\tif ( needsNewContext ) {\n\t\tdata.context.pop();\n\t}\n}\n\nfunction isParagraphable( node, context, schema, insideParagraphLikeElement ) {\n\tconst name = node.name || '$text';\n\n\t// Node is paragraphable if it is inside paragraph like element, or...\n\t// It is not allowed at this context...\n\tif ( !insideParagraphLikeElement && schema.check( { name, inside: context } ) ) {\n\t\treturn false;\n\t}\n\n\t// And paragraph is allowed in this context...\n\tif ( !schema.check( { name: 'paragraph', inside: context } ) ) {\n\t\treturn false;\n\t}\n\n\t// And a node would be allowed in this paragraph...\n\tif ( !schema.check( { name, inside: context.concat( 'paragraph' ) } ) ) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\n// Looks through all roots created in document and marks every empty root, saving which batch made it empty.\nconst rootsToFix = new Map();\n\nfunction findEmptyRoots( doc, batch ) {\n\tfor ( const rootName of doc.getRootNames() ) {\n\t\tconst root = doc.getRoot( rootName );\n\n\t\tif ( root.isEmpty ) {\n\t\t\tif ( !rootsToFix.has( root ) ) {\n\t\t\t\trootsToFix.set( root, batch );\n\t\t\t}\n\t\t} else {\n\t\t\trootsToFix.delete( root );\n\t\t}\n\t}\n}\n\n// Fixes all empty roots.\nfunction autoparagraphEmptyRoots() {\n\tfor ( const [ root, batch ] of rootsToFix ) {\n\t\t// Only empty roots are in `rootsToFix`. Even if root got content during `changesDone` event (because of, for example\n\t\t// other feature), this will fire `findEmptyRoots` and remove that root from `rootsToFix`. So we are guaranteed\n\t\t// to have only empty roots here.\n\t\tconst query = { name: 'paragraph', inside: [ root ] };\n\t\tconst doc = batch.document;\n\t\tconst schema = doc.schema;\n\n\t\t// If paragraph element is allowed in the root, create paragraph element.\n\t\tif ( schema.check( query ) ) {\n\t\t\tdoc.enqueueChanges( () => {\n\t\t\t\tbatch.insert( ModelPosition.createAt( root ), new ModelElement( 'paragraph' ) );\n\t\t\t} );\n\t\t}\n\t}\n\n\trootsToFix.clear();\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-paragraph/src/paragraph.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/collection\n */\n\nimport EmitterMixin from './emittermixin';\nimport CKEditorError from './ckeditorerror';\nimport uid from './uid';\nimport mix from './mix';\n\n/**\n * Collections are ordered sets of objects. Items in the collection can be retrieved by their indexes\n * in the collection (like in an array) or by their ids.\n *\n * If an object without an `id` property is being added to the collection, the `id` property will be generated\n * automatically. Note that the automatically generated id is unique only within this single collection instance.\n *\n * By default an item in the collection is identified by its `id` property. The name of the identifier can be\n * configured through the constructor of the collection.\n *\n * @mixes EventEmitter\n */\nexport default class Collection {\n\t/**\n\t * Creates a new Collection instance.\n\t *\n\t * @param {Object} options The options object.\n\t * @param {String} [options.idProperty='id'] The name of the property which is considered to identify an item.\n\t */\n\tconstructor( options ) {\n\t\t/**\n\t\t * The internal list of items in the collection.\n\t\t *\n\t\t * @private\n\t\t * @member {Object[]}\n\t\t */\n\t\tthis._items = [];\n\n\t\t/**\n\t\t * The internal map of items in the collection.\n\t\t *\n\t\t * @private\n\t\t * @member {Map}\n\t\t */\n\t\tthis._itemMap = new Map();\n\n\t\t/**\n\t\t * The name of the property which is considered to identify an item.\n\t\t *\n\t\t * @private\n\t\t * @member {String}\n\t\t */\n\t\tthis._idProperty = options && options.idProperty || 'id';\n\n\t\t/**\n\t\t * A helper mapping external items of a bound collection ({@link #bindTo})\n\t\t * and actual items of this collection. It provides information\n\t\t * necessary to properly remove items bound to another collection.\n\t\t *\n\t\t * See {@link #_bindToInternalToExternalMap}.\n\t\t *\n\t\t * @protected\n\t\t * @member {WeakMap}\n\t\t */\n\t\tthis._bindToExternalToInternalMap = new WeakMap();\n\n\t\t/**\n\t\t * A helper mapping items of this collection to external items of a bound collection\n\t\t * ({@link #bindTo}). It provides information necessary to manage the bindings, e.g.\n\t\t * to avoid loops in two–way bindings.\n\t\t *\n\t\t * See {@link #_bindToExternalToInternalMap}.\n\t\t *\n\t\t * @protected\n\t\t * @member {WeakMap}\n\t\t */\n\t\tthis._bindToInternalToExternalMap = new WeakMap();\n\n\t\t/**\n\t\t * A collection instance this collection is bound to as a result\n\t\t * of calling {@link #bindTo} method.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:utils/collection~Collection} #_bindToCollection\n\t\t */\n\t}\n\n\t/**\n\t * The number of items available in the collection.\n\t *\n\t * @member {Number} #length\n\t */\n\tget length() {\n\t\treturn this._items.length;\n\t}\n\n\t/**\n\t * Adds an item into the collection.\n\t *\n\t * If the item does not have an id, then it will be automatically generated and set on the item.\n\t *\n\t * @chainable\n\t * @param {Object} item\n\t * @param {Number} [index] The position of the item in the collection. The item\n\t * is pushed to the collection when `index` not specified.\n\t * @fires add\n\t */\n\tadd( item, index ) {\n\t\tlet itemId;\n\t\tconst idProperty = this._idProperty;\n\n\t\tif ( ( idProperty in item ) ) {\n\t\t\titemId = item[ idProperty ];\n\n\t\t\tif ( typeof itemId != 'string' ) {\n\t\t\t\t/**\n\t\t\t\t * This item's id should be a string.\n\t\t\t\t *\n\t\t\t\t * @error collection-add-invalid-id\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'collection-add-invalid-id' );\n\t\t\t}\n\n\t\t\tif ( this.get( itemId ) ) {\n\t\t\t\t/**\n\t\t\t\t * This item already exists in the collection.\n\t\t\t\t *\n\t\t\t\t * @error collection-add-item-already-exists\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'collection-add-item-already-exists' );\n\t\t\t}\n\t\t} else {\n\t\t\titem[ idProperty ] = itemId = uid();\n\t\t}\n\n\t\t// TODO: Use ES6 default function argument.\n\t\tif ( index === undefined ) {\n\t\t\tindex = this._items.length;\n\t\t} else if ( index > this._items.length || index < 0 ) {\n\t\t\t/**\n\t\t\t * The index number has invalid value.\n\t\t\t *\n\t\t\t * @error collection-add-item-bad-index\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'collection-add-item-invalid-index' );\n\t\t}\n\n\t\tthis._items.splice( index, 0, item );\n\n\t\tthis._itemMap.set( itemId, item );\n\n\t\tthis.fire( 'add', item, index );\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Gets item by its id or index.\n\t *\n\t * @param {String|Number} idOrIndex The item id or index in the collection.\n\t * @returns {Object} The requested item or `null` if such item does not exist.\n\t */\n\tget( idOrIndex ) {\n\t\tlet item;\n\n\t\tif ( typeof idOrIndex == 'string' ) {\n\t\t\titem = this._itemMap.get( idOrIndex );\n\t\t} else if ( typeof idOrIndex == 'number' ) {\n\t\t\titem = this._items[ idOrIndex ];\n\t\t} else {\n\t\t\t/**\n\t\t\t * Index or id must be given.\n\t\t\t *\n\t\t\t * @error collection-get-invalid-arg\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'collection-get-invalid-arg: Index or id must be given.' );\n\t\t}\n\n\t\treturn item || null;\n\t}\n\n\t/**\n\t * Gets index of item in the collection.\n\t * When item is not defined in the collection then index will be equal -1.\n\t *\n\t * @param {String|Object} idOrItem The item or its id in the collection.\n\t * @returns {Number} Index of given item.\n\t */\n\tgetIndex( idOrItem ) {\n\t\tlet item;\n\n\t\tif ( typeof idOrItem == 'string' ) {\n\t\t\titem = this._itemMap.get( idOrItem );\n\t\t} else {\n\t\t\titem = idOrItem;\n\t\t}\n\n\t\treturn this._items.indexOf( item );\n\t}\n\n\t/**\n\t * Removes an item from the collection.\n\t *\n\t * @param {Object|Number|String} subject The item to remove, its id or index in the collection.\n\t * @returns {Object} The removed item.\n\t * @fires remove\n\t */\n\tremove( subject ) {\n\t\tlet index, id, item;\n\t\tlet itemDoesNotExist = false;\n\t\tconst idProperty = this._idProperty;\n\n\t\tif ( typeof subject == 'string' ) {\n\t\t\tid = subject;\n\t\t\titem = this._itemMap.get( id );\n\t\t\titemDoesNotExist = !item;\n\n\t\t\tif ( item ) {\n\t\t\t\tindex = this._items.indexOf( item );\n\t\t\t}\n\t\t} else if ( typeof subject == 'number' ) {\n\t\t\tindex = subject;\n\t\t\titem = this._items[ index ];\n\t\t\titemDoesNotExist = !item;\n\n\t\t\tif ( item ) {\n\t\t\t\tid = item[ idProperty ];\n\t\t\t}\n\t\t} else {\n\t\t\titem = subject;\n\t\t\tid = item[ idProperty ];\n\t\t\tindex = this._items.indexOf( item );\n\t\t\titemDoesNotExist = ( index == -1 || !this._itemMap.get( id ) );\n\t\t}\n\n\t\tif ( itemDoesNotExist ) {\n\t\t\t/**\n\t\t\t * Item not found.\n\t\t\t *\n\t\t\t * @error collection-remove-404\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'collection-remove-404: Item not found.' );\n\t\t}\n\n\t\tthis._items.splice( index, 1 );\n\t\tthis._itemMap.delete( id );\n\n\t\tconst externalItem = this._bindToInternalToExternalMap.get( item );\n\t\tthis._bindToInternalToExternalMap.delete( item );\n\t\tthis._bindToExternalToInternalMap.delete( externalItem );\n\n\t\tthis.fire( 'remove', item );\n\n\t\treturn item;\n\t}\n\n\t/**\n\t * Executes the callback for each item in the collection and composes an array or values returned by this callback.\n\t *\n\t * @param {Function} callback\n\t * @param {Object} callback.item\n\t * @param {Number} callback.index\n\t * @params {Object} ctx Context in which the `callback` will be called.\n\t * @returns {Array} The result of mapping.\n\t */\n\tmap( callback, ctx ) {\n\t\treturn this._items.map( callback, ctx );\n\t}\n\n\t/**\n\t * Finds the first item in the collection for which the `callback` returns a true value.\n\t *\n\t * @param {Function} callback\n\t * @param {Object} callback.item\n\t * @param {Number} callback.index\n\t * @returns {Object} The item for which `callback` returned a true value.\n\t * @params {Object} ctx Context in which the `callback` will be called.\n\t */\n\tfind( callback, ctx ) {\n\t\treturn this._items.find( callback, ctx );\n\t}\n\n\t/**\n\t * Returns an array with items for which the `callback` returned a true value.\n\t *\n\t * @param {Function} callback\n\t * @param {Object} callback.item\n\t * @param {Number} callback.index\n\t * @params {Object} ctx Context in which the `callback` will be called.\n\t * @returns {Object[]} The array with matching items.\n\t */\n\tfilter( callback, ctx ) {\n\t\treturn this._items.filter( callback, ctx );\n\t}\n\n\t/**\n\t * Removes all items from the collection and destroys the binding created using\n\t * {@link #bindTo}.\n\t */\n\tclear() {\n\t\tif ( this._bindToCollection ) {\n\t\t\tthis.stopListening( this._bindToCollection );\n\t\t\tthis._bindToCollection = null;\n\t\t}\n\n\t\twhile ( this.length ) {\n\t\t\tthis.remove( 0 );\n\t\t}\n\t}\n\n\t/**\n\t * Binds and synchronizes the collection with another one.\n\t *\n\t * The binding can be a simple factory:\n\t *\n\t *\t\tclass FactoryClass {\n\t *\t\t\tconstructor( data ) {\n\t *\t\t\t\tthis.label = data.label;\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t *\t\tconst source = new Collection( { idProperty: 'label' } );\n\t *\t\tconst target = new Collection();\n\t *\n\t *\t\ttarget.bindTo( source ).as( FactoryClass );\n\t *\n\t *\t\tsource.add( { label: 'foo' } );\n\t *\t\tsource.add( { label: 'bar' } );\n\t *\n\t *\t\tconsole.log( target.length ); // 2\n\t *\t\tconsole.log( target.get( 1 ).label ); // 'bar'\n\t *\n\t *\t\tsource.remove( 0 );\n\t *\t\tconsole.log( target.length ); // 1\n\t *\t\tconsole.log( target.get( 0 ).label ); // 'bar'\n\t *\n\t * or the factory driven by a custom callback:\n\t *\n\t *\t\tclass FooClass {\n\t *\t\t\tconstructor( data ) {\n\t *\t\t\t\tthis.label = data.label;\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t *\t\tclass BarClass {\n\t *\t\t\tconstructor( data ) {\n\t *\t\t\t\tthis.label = data.label;\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t *\t\tconst source = new Collection( { idProperty: 'label' } );\n\t *\t\tconst target = new Collection();\n\t *\n\t *\t\ttarget.bindTo( source ).using( ( item ) => {\n\t *\t\t\tif ( item.label == 'foo' ) {\n\t *\t\t\t\treturn new FooClass( item );\n\t *\t\t\t} else {\n\t *\t\t\t\treturn new BarClass( item );\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\tsource.add( { label: 'foo' } );\n\t *\t\tsource.add( { label: 'bar' } );\n\t *\n\t *\t\tconsole.log( target.length ); // 2\n\t *\t\tconsole.log( target.get( 0 ) instanceof FooClass ); // true\n\t *\t\tconsole.log( target.get( 1 ) instanceof BarClass ); // true\n\t *\n\t * or the factory out of property name:\n\t *\n\t *\t\tconst source = new Collection( { idProperty: 'label' } );\n\t *\t\tconst target = new Collection();\n\t *\n\t *\t\ttarget.bindTo( source ).using( 'label' );\n\t *\n\t *\t\tsource.add( { label: { value: 'foo' } } );\n\t *\t\tsource.add( { label: { value: 'bar' } } );\n\t *\n\t *\t\tconsole.log( target.length ); // 2\n\t *\t\tconsole.log( target.get( 0 ).value ); // 'foo'\n\t *\t\tconsole.log( target.get( 1 ).value ); // 'bar'\n\t *\n\t * **Note**: {@link #clear} can be used to break the binding.\n\t *\n\t * @param {module:utils/collection~Collection} collection A collection to be bound.\n\t * @returns {Object}\n\t * @returns {module:utils/collection~Collection#bindTo#as} return.as\n\t * @returns {module:utils/collection~Collection#bindTo#using} return.using\n\t */\n\tbindTo( externalCollection ) {\n\t\tif ( this._bindToCollection ) {\n\t\t\t/**\n\t\t\t * The collection cannot be bound more than once.\n\t\t\t *\n\t\t\t * @error collection-bind-to-rebind\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'collection-bind-to-rebind: The collection cannot be bound more than once.' );\n\t\t}\n\n\t\tthis._bindToCollection = externalCollection;\n\n\t\treturn {\n\t\t\t/**\n\t\t\t * Creates the class factory binding.\n\t\t\t *\n\t\t\t * @static\n\t\t\t * @param {Function} Class Specifies which class factory is to be initialized.\n\t\t\t */\n\t\t\tas: Class => {\n\t\t\t\tthis._setUpBindToBinding( item => new Class( item ) );\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates callback or property binding.\n\t\t\t *\n\t\t\t * @static\n\t\t\t * @param {Function|String} callbackOrProperty When the function is passed, it is used to\n\t\t\t * produce the items. When the string is provided, the property value is used to create\n\t\t\t * the bound collection items.\n\t\t\t */\n\t\t\tusing: callbackOrProperty => {\n\t\t\t\tif ( typeof callbackOrProperty == 'function' ) {\n\t\t\t\t\tthis._setUpBindToBinding( item => callbackOrProperty( item ) );\n\t\t\t\t} else {\n\t\t\t\t\tthis._setUpBindToBinding( item => item[ callbackOrProperty ] );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Finalizes and activates a binding initiated by {#bindTo}.\n\t *\n\t * @protected\n\t * @param {Function} factory A function which produces collection items.\n\t */\n\t_setUpBindToBinding( factory ) {\n\t\tconst externalCollection = this._bindToCollection;\n\n\t\t// Adds the item to the collection once a change has been done to the external collection.\n\t\t//\n\t\t// @private\n\t\tconst addItem = ( evt, externalItem, index ) => {\n\t\t\tconst isExternalBoundToThis = externalCollection._bindToCollection == this;\n\t\t\tconst externalItemBound = externalCollection._bindToInternalToExternalMap.get( externalItem );\n\n\t\t\t// If an external collection is bound to this collection, which makes it a 2–way binding,\n\t\t\t// and the particular external collection item is already bound, don't add it here.\n\t\t\t// The external item has been created **out of this collection's item** and (re)adding it will\n\t\t\t// cause a loop.\n\t\t\tif ( isExternalBoundToThis && externalItemBound ) {\n\t\t\t\tthis._bindToExternalToInternalMap.set( externalItem, externalItemBound );\n\t\t\t\tthis._bindToInternalToExternalMap.set( externalItemBound, externalItem );\n\t\t\t} else {\n\t\t\t\tconst item = factory( externalItem );\n\n\t\t\t\tthis._bindToExternalToInternalMap.set( externalItem, item );\n\t\t\t\tthis._bindToInternalToExternalMap.set( item, externalItem );\n\n\t\t\t\tthis.add( item, index );\n\t\t\t}\n\t\t};\n\n\t\t// Load the initial content of the collection.\n\t\tfor ( const externalItem of externalCollection ) {\n\t\t\taddItem( null, externalItem );\n\t\t}\n\n\t\t// Synchronize the with collection as new items are added.\n\t\tthis.listenTo( externalCollection, 'add', addItem );\n\n\t\t// Synchronize the with collection as new items are removed.\n\t\tthis.listenTo( externalCollection, 'remove', ( evt, externalItem ) => {\n\t\t\tconst item = this._bindToExternalToInternalMap.get( externalItem );\n\n\t\t\tif ( item ) {\n\t\t\t\tthis.remove( item );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Collection iterator.\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this._items[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Fired when an item is added to the collection.\n\t *\n\t * @event add\n\t * @param {Object} item The added item.\n\t */\n\n\t/**\n\t * Fired when an item is removed from the collection.\n\t *\n\t * @event remove\n\t * @param {Object} item The removed item.\n\t */\n}\n\nmix( Collection, EmitterMixin );\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/collection.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/emittermixin\n */\n\nimport { default as EmitterMixin, _getEmitterListenedTo, _setEmitterId } from '../emittermixin';\nimport uid from '../uid';\nimport extend from '../lib/lodash/extend';\nimport isNative from '../lib/lodash/isNative';\n\n/**\n * Mixin that injects the DOM events API into its host. It provides the API\n * compatible with {@link module:utils/emittermixin~EmitterMixin}.\n *\n * DOM emitter mixin is by default available in the {@link module:ui/view~View} class,\n * but it can also be mixed into any other class:\n *\n *\t\timport mix from '../utils/mix.js';\n *\t\timport DomEmitterMixin from '../utils/dom/emittermixin.js';\n *\n *\t\tclass SomeView {}\n *\t\tmix( SomeView, DomEmitterMixin );\n *\n *\t\tconst view = new SomeView();\n *\t\tview.listenTo( domElement, ( evt, domEvt ) => {\n *\t\t\tconsole.log( evt, domEvt );\n *\t\t} );\n *\n * @mixin module:utils/dom/emittermixin~EmitterMixin\n * @mixes module:utils/emittermixin~EmitterMixin\n * @implements module:utils/dom/emittermixin~Emitter\n */\nconst DomEmitterMixin = extend( {}, EmitterMixin, {\n\t/**\n\t * Registers a callback function to be executed when an event is fired in a specific Emitter or DOM Node.\n\t * It is backwards compatible with {@link module:utils/emittermixin~EmitterMixin#listenTo}.\n\t *\n\t * @param {module:utils/emittermixin~Emitter|Node} emitter The object that fires the event.\n\t * @param {String} event The name of the event.\n\t * @param {Function} callback The function to be called on event.\n\t * @param {Object} [options={}] Additional options.\n\t * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n\t * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n\t * order they were added.\n\t * @param {Object} [options.context] The object that represents `this` in the callback. Defaults to the object firing the event.\n\t * @param {Boolean} [options.useCapture=false] Indicates that events of this type will be dispatched to the registered\n\t * listener before being dispatched to any EventTarget beneath it in the DOM tree.\n\t *\n\t * @method module:utils/dom/emittermixin~EmitterMixin#listenTo\n\t */\n\tlistenTo( ...args ) {\n\t\tconst emitter = args[ 0 ];\n\n\t\t// Check if emitter is an instance of DOM Node. If so, replace the argument with\n\t\t// corresponding ProxyEmitter (or create one if not existing).\n\t\tif ( isDomNode( emitter ) ) {\n\t\t\targs[ 0 ] = this._getProxyEmitter( emitter ) || new ProxyEmitter( emitter );\n\t\t}\n\n\t\t// Execute parent class method with Emitter (or ProxyEmitter) instance.\n\t\tEmitterMixin.listenTo.apply( this, args );\n\t},\n\n\t/**\n\t * Stops listening for events. It can be used at different levels:\n\t * It is backwards compatible with {@link module:utils/emittermixin~EmitterMixin#listenTo}.\n\t *\n\t * * To stop listening to a specific callback.\n\t * * To stop listening to a specific event.\n\t * * To stop listening to all events fired by a specific object.\n\t * * To stop listening to all events fired by all object.\n\t *\n\t * @param {module:utils/emittermixin~Emitter|Node} [emitter] The object to stop listening to. If omitted, stops it for all objects.\n\t * @param {String} [event] (Requires the `emitter`) The name of the event to stop listening to. If omitted, stops it\n\t * for all events from `emitter`.\n\t * @param {Function} [callback] (Requires the `event`) The function to be removed from the call list for the given\n\t * `event`.\n\t *\n\t * @method module:utils/dom/emittermixin~EmitterMixin#stopListening\n\t */\n\tstopListening( ...args ) {\n\t\tconst emitter = args[ 0 ];\n\n\t\t// Check if emitter is an instance of DOM Node. If so, replace the argument with corresponding ProxyEmitter.\n\t\tif ( isDomNode( emitter ) ) {\n\t\t\tconst proxy = this._getProxyEmitter( emitter );\n\n\t\t\t// Element has no listeners.\n\t\t\tif ( !proxy ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\targs[ 0 ] = proxy;\n\t\t}\n\n\t\t// Execute parent class method with Emitter (or ProxyEmitter) instance.\n\t\tEmitterMixin.stopListening.apply( this, args );\n\t},\n\n\t/**\n\t * Retrieves ProxyEmitter instance for given DOM Node residing in this Host.\n\t *\n\t * @param {Node} node DOM Node of the ProxyEmitter.\n\t * @method module:utils/dom/emittermixin~EmitterMixin#_getProxyEmitter\n\t * @return {module:utils/dom/emittermixin~ProxyEmitter} ProxyEmitter instance or null.\n\t */\n\t_getProxyEmitter( node ) {\n\t\treturn _getEmitterListenedTo( this, getNodeUID( node ) );\n\t}\n} );\n\nexport default DomEmitterMixin;\n\n/**\n * Creates a ProxyEmitter instance. Such an instance is a bridge between a DOM Node firing events\n * and any Host listening to them. It is backwards compatible with {@link module:utils/emittermixin~EmitterMixin#on}.\n *\n *                                  listenTo( click, ... )\n *                    +-----------------------------------------+\n *                    |              stopListening( ... )       |\n *     +----------------------------+                           |             addEventListener( click, ... )\n *     | Host                       |                           |   +---------------------------------------------+\n *     +----------------------------+                           |   |       removeEventListener( click, ... )     |\n *     | _listeningTo: {            |                +----------v-------------+                                   |\n *     |   UID: {                   |                | ProxyEmitter           |                                   |\n *     |     emitter: ProxyEmitter, |                +------------------------+                      +------------v----------+\n *     |     callbacks: {           |                | events: {              |                      | Node (HTMLElement)    |\n *     |       click: [ callbacks ] |                |   click: [ callbacks ] |                      +-----------------------+\n *     |     }                      |                | },                     |                      | data-ck-expando: UID  |\n *     |   }                        |                | _domNode: Node,        |                      +-----------------------+\n *     | }                          |                | _domListeners: {},     |                                   |\n *     | +------------------------+ |                | _emitterId: UID        |                                   |\n *     | | DomEmitterMixin        | |                +--------------^---------+                                   |\n *     | +------------------------+ |                           |   |                                             |\n *     +--------------^-------------+                           |   +---------------------------------------------+\n *                    |                                         |                  click (DOM Event)\n *                    +-----------------------------------------+\n *                                fire( click, DOM Event )\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n * @implements module:utils/dom/emittermixin~Emitter\n * @private\n */\nclass ProxyEmitter {\n\t/**\n\t * @param {Node} node DOM Node that fires events.\n\t * @returns {Object} ProxyEmitter instance bound to the DOM Node.\n\t */\n\tconstructor( node ) {\n\t\t// Set emitter ID to match DOM Node \"expando\" property.\n\t\t_setEmitterId( this, getNodeUID( node ) );\n\n\t\t// Remember the DOM Node this ProxyEmitter is bound to.\n\t\tthis._domNode = node;\n\t}\n}\n\nextend( ProxyEmitter.prototype, EmitterMixin, {\n\t/**\n\t * Collection of native DOM listeners.\n\t *\n\t * @private\n\t * @member {Object} module:utils/dom/emittermixin~ProxyEmitter#_domListeners\n\t */\n\n\t/**\n\t * Registers a callback function to be executed when an event is fired.\n\t *\n\t * It attaches a native DOM listener to the DOM Node. When fired,\n\t * a corresponding Emitter event will also fire with DOM Event object as an argument.\n\t *\n\t * @param {String} event The name of the event.\n\t * @param {Function} callback The function to be called on event.\n\t * @param {Object} [options={}] Additional options.\n\t * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n\t * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n\t * order they were added.\n\t * @param {Object} [options.context] The object that represents `this` in the callback. Defaults to the object firing the event.\n\t * @param {Boolean} [options.useCapture=false] Indicates that events of this type will be dispatched to the registered\n\t * listener before being dispatched to any EventTarget beneath it in the DOM tree.\n\t *\n\t * @method module:utils/dom/emittermixin~ProxyEmitter#on\n\t */\n\ton( event, callback, options = {} ) {\n\t\t// Execute parent class method first.\n\t\tEmitterMixin.on.call( this, event, callback, options );\n\n\t\t// If the DOM Listener for given event already exist it is pointless\n\t\t// to attach another one.\n\t\tif ( this._domListeners && this._domListeners[ event ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst domListener = this._createDomListener( event, !!options.useCapture );\n\n\t\t// Attach the native DOM listener to DOM Node.\n\t\tthis._domNode.addEventListener( event, domListener, !!options.useCapture );\n\n\t\tif ( !this._domListeners ) {\n\t\t\tthis._domListeners = {};\n\t\t}\n\n\t\t// Store the native DOM listener in this ProxyEmitter. It will be helpful\n\t\t// when stopping listening to the event.\n\t\tthis._domListeners[ event ] = domListener;\n\t},\n\n\t/**\n\t * Stops executing the callback on the given event.\n\t *\n\t * @param {String} event The name of the event.\n\t * @param {Function} callback The function to stop being called.\n\t * @param {Object} [context] The context object to be removed, pared with the given callback. To handle cases where\n\t * the same callback is used several times with different contexts.\n\t *\n\t * @method module:utils/dom/emittermixin~ProxyEmitter#off\n\t */\n\toff( event, callback, context ) {\n\t\t// Execute parent class method first.\n\t\tEmitterMixin.off.call( this, event, callback, context );\n\n\t\tlet events;\n\n\t\t// Remove native DOM listeners which are orphans. If no callbacks\n\t\t// are awaiting given event, detach native DOM listener from DOM Node.\n\t\t// See: {@link on}.\n\n\t\tif ( this._domListeners[ event ] && ( !( events = this._events[ event ] ) || !events.callbacks.length ) ) {\n\t\t\tthis._domListeners[ event ].removeListener();\n\t\t}\n\t},\n\n\t/**\n\t * Create a native DOM listener callback. When the native DOM event\n\t * is fired it will fire corresponding event on this ProxyEmitter.\n\t * Note: A native DOM Event is passed as an argument.\n\t *\n\t * @private\n\t * @param {String} event\n\t *\n\t * @method module:utils/dom/emittermixin~ProxyEmitter#_createDomListener\n\t * @param {String} event The name of the event.\n\t * @param {Boolean} useCapture Indicates whether the listener was created for capturing event.\n\t * @returns {Function} The DOM listener callback.\n\t */\n\t_createDomListener( event, useCapture ) {\n\t\tconst domListener = domEvt => {\n\t\t\tthis.fire( event, domEvt );\n\t\t};\n\n\t\t// Supply the DOM listener callback with a function that will help\n\t\t// detach it from the DOM Node, when it is no longer necessary.\n\t\t// See: {@link off}.\n\t\tdomListener.removeListener = () => {\n\t\t\tthis._domNode.removeEventListener( event, domListener, useCapture );\n\t\t\tdelete this._domListeners[ event ];\n\t\t};\n\n\t\treturn domListener;\n\t}\n} );\n\n// Gets an unique DOM Node identifier. The identifier will be set if not defined.\n//\n// @private\n// @param {Node} node\n// @return {String} UID for given DOM Node.\nfunction getNodeUID( node ) {\n\treturn node[ 'data-ck-expando' ] || ( node[ 'data-ck-expando' ] = uid() );\n}\n\n// Checks (naively) if given node is native DOM Node.\n//\n// @private\n// @param {Node} node\n// @return {Boolean} True when native DOM Node.\nfunction isDomNode( node ) {\n\treturn node && isNative( node.addEventListener );\n}\n\n/**\n * Interface representing classes which mix in {@link module:utils/dom/emittermixin~EmitterMixin}.\n *\n * @interface Emitter\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/dom/emittermixin.js","import listCacheClear from './_listCacheClear';\nimport listCacheDelete from './_listCacheDelete';\nimport listCacheGet from './_listCacheGet';\nimport listCacheHas from './_listCacheHas';\nimport listCacheSet from './_listCacheSet';\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nexport default ListCache;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_ListCache.js","import MapCache from './_MapCache';\nimport setCacheAdd from './_setCacheAdd';\nimport setCacheHas from './_setCacheHas';\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nexport default SetCache;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_SetCache.js","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default arrayFilter;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_arrayFilter.js","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nexport default arrayPush;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_arrayPush.js","import eq from './eq';\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nexport default assocIndexOf;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_assocIndexOf.js","import baseSortedIndexBy from './_baseSortedIndexBy';\nimport identity from './identity';\nimport isSymbol from './isSymbol';\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295,\n    HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n/**\n * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n * performs a binary search of `array` to determine the index at which `value`\n * should be inserted into `array` in order to maintain its sort order.\n *\n * @private\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @param {boolean} [retHighest] Specify returning the highest qualified index.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n */\nfunction baseSortedIndex(array, value, retHighest) {\n  var low = 0,\n      high = array ? array.length : low;\n\n  if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n    while (low < high) {\n      var mid = (low + high) >>> 1,\n          computed = array[mid];\n\n      if (computed !== null && !isSymbol(computed) &&\n          (retHighest ? (computed <= value) : (computed < value))) {\n        low = mid + 1;\n      } else {\n        high = mid;\n      }\n    }\n    return high;\n  }\n  return baseSortedIndexBy(array, value, identity, retHighest);\n}\n\nexport default baseSortedIndex;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseSortedIndex.js","import baseSlice from './_baseSlice';\n\n/**\n * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n * without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to query.\n * @param {Function} predicate The function invoked per iteration.\n * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseWhile(array, predicate, isDrop, fromRight) {\n  var length = array.length,\n      index = fromRight ? length : -1;\n\n  while ((fromRight ? index-- : ++index < length) &&\n    predicate(array[index], index, array)) {}\n\n  return isDrop\n    ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n    : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n}\n\nexport default baseWhile;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseWhile.js","import isArray from './isArray';\nimport stringToPath from './_stringToPath';\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\nexport default castPath;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_castPath.js","import isKeyable from './_isKeyable';\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nexport default getMapData;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_getMapData.js","/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\nexport default isHostObject;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_isHostObject.js","import eq from './eq';\nimport isArrayLike from './isArrayLike';\nimport isIndex from './_isIndex';\nimport isObject from './isObject';\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nexport default isIterateeCall;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_isIterateeCall.js","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nexport default isPrototype;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_isPrototype.js","import getNative from './_getNative';\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nexport default nativeCreate;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_nativeCreate.js","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nexport default setToArray;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_setToArray.js","import baseClone from './_baseClone';\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, false, true);\n}\n\nexport default clone;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/clone.js","import getLength from './_getLength';\nimport isFunction from './isFunction';\nimport isLength from './isLength';\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value)) && !isFunction(value);\n}\n\nexport default isArrayLike;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/isArrayLike.js","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length,\n *  else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nexport default isLength;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/isLength.js","import getPrototype from './_getPrototype';\nimport isHostObject from './_isHostObject';\nimport isObjectLike from './isObjectLike';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object,\n *  else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) ||\n      objectToString.call(value) != objectTag || isHostObject(value)) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nexport default isPlainObject;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/isPlainObject.js","import arrayFilter from './_arrayFilter';\nimport arrayMap from './_arrayMap';\nimport baseProperty from './_baseProperty';\nimport baseTimes from './_baseTimes';\nimport isArrayLikeObject from './isArrayLikeObject';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.zip` except that it accepts an array of grouped\n * elements and creates an array regrouping the elements to their pre-zip\n * configuration.\n *\n * @static\n * @memberOf _\n * @since 1.2.0\n * @category Array\n * @param {Array} array The array of grouped elements to process.\n * @returns {Array} Returns the new array of regrouped elements.\n * @example\n *\n * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n * // => [['fred', 30, true], ['barney', 40, false]]\n *\n * _.unzip(zipped);\n * // => [['fred', 'barney'], [30, 40], [true, false]]\n */\nfunction unzip(array) {\n  if (!(array && array.length)) {\n    return [];\n  }\n  var length = 0;\n  array = arrayFilter(array, function(group) {\n    if (isArrayLikeObject(group)) {\n      length = nativeMax(group.length, length);\n      return true;\n    }\n  });\n  return baseTimes(length, function(index) {\n    return arrayMap(array, baseProperty(index));\n  });\n}\n\nexport default unzip;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/unzip.js","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// (webpack)/buildin/module.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module core/command/helpers/getschemavalidranges\n */\n\nimport TreeWalker from '@ckeditor/ckeditor5-engine/src/model/treewalker';\nimport Range from '@ckeditor/ckeditor5-engine/src/model/range';\nimport Position from '@ckeditor/ckeditor5-engine/src/model/position';\n\n/**\n * Walks through given array of ranges and removes parts of them that are not allowed by passed schema to have the\n * attribute set. This is done by breaking a range in two and omitting the not allowed part.\n *\n * @param {String} attribute Attribute key.\n * @param {Array.<module:engine/model/range~Range>} ranges Ranges to be validated.\n * @param {module:engine/model/schema~Schema} schema Document schema.\n * @returns {Array.<module:engine/model/range~Range>} Ranges without invalid parts.\n */\nexport default function getSchemaValidRanges( attribute, ranges, schema ) {\n\tconst validRanges = [];\n\n\tfor ( const range of ranges ) {\n\t\tconst walker = new TreeWalker( { boundaries: range, mergeCharacters: true } );\n\t\tlet step = walker.next();\n\n\t\tlet last = range.start;\n\t\tlet from = range.start;\n\t\tconst to = range.end;\n\n\t\twhile ( !step.done ) {\n\t\t\tconst name = step.value.item.name || '$text';\n\t\t\tconst itemPosition = Position.createBefore( step.value.item );\n\n\t\t\tif ( !schema.check( { name, inside: itemPosition, attributes: attribute } ) ) {\n\t\t\t\tif ( !from.isEqual( last ) ) {\n\t\t\t\t\tvalidRanges.push( new Range( from, last ) );\n\t\t\t\t}\n\n\t\t\t\tfrom = walker.position;\n\t\t\t}\n\n\t\t\tlast = walker.position;\n\t\t\tstep = walker.next();\n\t\t}\n\n\t\tif ( from && !from.isEqual( to ) ) {\n\t\t\tvalidRanges.push( new Range( from, to ) );\n\t\t}\n\t}\n\n\treturn validRanges;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-core/src/command/helpers/getschemavalidranges.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\nimport ViewElement from '../view/element';\nimport ViewText from '../view/text';\nimport ViewRange from '../view/range';\nimport ViewTreeWalker from '../view/treewalker';\nimport viewWriter from '../view/writer';\n\n/**\n * Contains {@link module:engine/model/model model} to {@link module:engine/view/view view} converters for\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher}.\n *\n * @module engine/conversion/model-to-view-converters\n */\n\n/**\n * Function factory, creates a converter that converts node insertion changes from the model to the view.\n * The view element that will be added to the view depends on passed parameter. If {@link module:engine/view/element~Element} was passed,\n * it will be cloned and the copy will be inserted. If `Function` is provided, it is passed all the parameters of the\n * dispatcher's {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:insert insert event}.\n * It's expected that the function returns a {@link module:engine/view/element~Element}.\n * The result of the function will be inserted to the view.\n *\n * The converter automatically consumes corresponding value from consumables list, stops the event (see\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher}) and bind model and view elements.\n *\n *\t\tmodelDispatcher.on( 'insert:paragraph', insertElement( new ViewElement( 'p' ) ) );\n *\n *\t\tmodelDispatcher.on(\n *\t\t\t'insert:myElem',\n *\t\t\tinsertElement( ( data, consumable, conversionApi ) => {\n *\t\t\t\tlet myElem = new ViewElement( 'myElem', { myAttr: true }, new ViewText( 'myText' ) );\n *\n *\t\t\t\t// Do something fancy with myElem using data/consumable/conversionApi ...\n *\n *\t\t\t\treturn myElem;\n *\t\t\t}\n *\t\t) );\n *\n * @param {module:engine/view/element~Element|Function} elementCreator View element, or function returning a view element, which\n * will be inserted.\n * @returns {Function} Insert element event converter.\n */\nexport function insertElement( elementCreator ) {\n\treturn ( evt, data, consumable, conversionApi ) => {\n\t\tconst viewElement = ( elementCreator instanceof ViewElement ) ?\n\t\t\telementCreator.clone( true ) :\n\t\t\telementCreator( data, consumable, conversionApi );\n\n\t\tif ( !viewElement ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !consumable.consume( data.item, 'insert' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewPosition = conversionApi.mapper.toViewPosition( data.range.start );\n\n\t\tconversionApi.mapper.bindElements( data.item, viewElement );\n\t\tviewWriter.insert( viewPosition, viewElement );\n\t};\n}\n\n/**\n * Function factory, creates a default model-to-view converter for text insertion changes.\n *\n * The converter automatically consumes corresponding value from consumables list and stops the event (see\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher}).\n *\n *\t\tmodelDispatcher.on( 'insert:$text', insertText() );\n *\n * @returns {Function} Insert text event converter.\n */\nexport function insertText() {\n\treturn ( evt, data, consumable, conversionApi ) => {\n\t\tif ( !consumable.consume( data.item, 'insert' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewPosition = conversionApi.mapper.toViewPosition( data.range.start );\n\t\tconst viewText = new ViewText( data.item.data );\n\n\t\tviewWriter.insert( viewPosition, viewText );\n\t};\n}\n\n/**\n * Function factory, creates a converter that converts marker adding change to the view ui element.\n * The view ui element that will be added to the view depends on passed parameter. See {@link ~insertElement}.\n * In a case of collapsed range element will not wrap range but separate elements will be placed at the beginning\n * and at the end of the range.\n *\n * **Note:** unlike {@link ~insertElement}, the converter does not bind view element to model, because this converter\n * uses marker as \"model source of data\". This means that view ui element does not have corresponding model element.\n *\n * @param {module:engine/view/uielement~UIElement|Function} elementCreator View ui element, or function returning a view element, which\n * will be inserted.\n * @returns {Function} Insert element event converter.\n */\nexport function insertUIElement( elementCreator ) {\n\treturn ( evt, data, consumable, conversionApi ) => {\n\t\tlet viewStartElement, viewEndElement;\n\n\t\tif ( elementCreator instanceof ViewElement ) {\n\t\t\tviewStartElement = elementCreator.clone( true );\n\t\t\tviewEndElement = elementCreator.clone( true );\n\t\t} else {\n\t\t\tdata.isOpening = true;\n\t\t\tviewStartElement = elementCreator( data, consumable, conversionApi );\n\n\t\t\tdata.isOpening = false;\n\t\t\tviewEndElement = elementCreator( data, consumable, conversionApi );\n\t\t}\n\n\t\tif ( !viewStartElement || !viewEndElement ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !consumable.consume( data.range, 'addMarker' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst mapper = conversionApi.mapper;\n\n\t\tviewWriter.insert( mapper.toViewPosition( data.range.start ), viewStartElement );\n\n\t\tif ( !data.range.isCollapsed ) {\n\t\t\tviewWriter.insert( mapper.toViewPosition( data.range.end ), viewEndElement );\n\t\t}\n\t};\n}\n\n/**\n * Function factory, creates a converter that converts set/change attribute changes from the model to the view. Attributes\n * from model are converted to the view element attributes in the view. You may provide a custom function to generate a\n * key-value attribute pair to add/change. If not provided, model attributes will be converted to view elements attributes\n * on 1-to-1 basis.\n *\n * **Note:** Provided attribute creator should always return the same `key` for given attribute from the model.\n *\n * The converter automatically consumes corresponding value from consumables list and stops the event (see\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher}).\n *\n *\t\tmodelDispatcher.on( 'addAttribute:customAttr:myElem', setAttribute( ( data ) => {\n *\t\t\t// Change attribute key from `customAttr` to `class` in view.\n *\t\t\tconst key = 'class';\n *\t\t\tlet value = data.attributeNewValue;\n *\n *\t\t\t// Force attribute value to 'empty' if the model element is empty.\n *\t\t\tif ( data.item.childCount === 0 ) {\n *\t\t\t\tvalue = 'empty';\n *\t\t\t}\n *\n *\t\t\t// Return key-value pair.\n *\t\t\treturn { key, value };\n *\t\t} ) );\n *\n * @param {Function} [attributeCreator] Function returning an object with two properties: `key` and `value`, which\n * represents attribute key and attribute value to be set on a {@link module:engine/view/element~Element view element}.\n * The function is passed all the parameters of the\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:addAttribute}\n * or {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:changeAttribute} event.\n * @returns {Function} Set/change attribute converter.\n */\nexport function setAttribute( attributeCreator ) {\n\tattributeCreator = attributeCreator || ( ( value, key ) => ( { value, key } ) );\n\n\treturn ( evt, data, consumable, conversionApi ) => {\n\t\tif ( !consumable.consume( data.item, eventNameToConsumableType( evt.name ) ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { key, value } = attributeCreator( data.attributeNewValue, data.attributeKey, data, consumable, conversionApi );\n\n\t\tconversionApi.mapper.toViewElement( data.item ).setAttribute( key, value );\n\t};\n}\n\n/**\n * Function factory, creates a converter that converts remove attribute changes from the model to the view. Removes attributes\n * that were converted to the view element attributes in the view. You may provide a custom function to generate a\n * key-value attribute pair to remove. If not provided, model attributes will be removed from view elements on 1-to-1 basis.\n *\n * **Note:** Provided attribute creator should always return the same `key` for given attribute from the model.\n *\n * **Note:** You can use the same attribute creator as in {@link module:engine/conversion/model-to-view-converters~setAttribute}.\n *\n * The converter automatically consumes corresponding value from consumables list and stops the event (see\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher}).\n *\n *\t\tmodelDispatcher.on( 'removeAttribute:customAttr:myElem', removeAttribute( ( data ) => {\n *\t\t\t// Change attribute key from `customAttr` to `class` in view.\n *\t\t\tconst key = 'class';\n *\t\t\tlet value = data.attributeNewValue;\n *\n *\t\t\t// Force attribute value to 'empty' if the model element is empty.\n *\t\t\tif ( data.item.childCount === 0 ) {\n *\t\t\t\tvalue = 'empty';\n *\t\t\t}\n *\n *\t\t\t// Return key-value pair.\n *\t\t\treturn { key, value };\n *\t\t} ) );\n *\n * @param {Function} [attributeCreator] Function returning an object with two properties: `key` and `value`, which\n * represents attribute key and attribute value to be removed from {@link module:engine/view/element~Element view element}.\n * The function is passed all the parameters of the\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:addAttribute addAttribute event}\n * or {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:changeAttribute changeAttribute event}.\n * @returns {Function} Remove attribute converter.\n */\nexport function removeAttribute( attributeCreator ) {\n\tattributeCreator = attributeCreator || ( ( value, key ) => ( { key } ) );\n\n\treturn ( evt, data, consumable, conversionApi ) => {\n\t\tif ( !consumable.consume( data.item, eventNameToConsumableType( evt.name ) ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { key } = attributeCreator( data.attributeOldValue, data.attributeKey, data, consumable, conversionApi );\n\n\t\tconversionApi.mapper.toViewElement( data.item ).removeAttribute( key );\n\t};\n}\n\n/**\n * Function factory, creates a converter that converts set/change attribute changes from the model to the view. In this case,\n * model attributes are converted to a view element that will be wrapping view nodes which corresponding model nodes had\n * the attribute set. This is useful for attributes like `bold`, which may be set on text nodes in model but are\n * represented as an element in the view:\n *\n *\t\t[paragraph]              MODEL ====> VIEW        <p>\n *\t\t\t|- a {bold: true}                             |- <b>\n *\t\t\t|- b {bold: true}                             |   |- ab\n *\t\t\t|- c                                          |- c\n *\n * The wrapping node depends on passed parameter. If {@link module:engine/view/element~Element} was passed, it will be cloned and\n * the copy will become the wrapping element. If `Function` is provided, it is passed attribute value and then all the parameters of the\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:addAttribute addAttribute event}.\n * It's expected that the function returns a {@link module:engine/view/element~Element}.\n * The result of the function will be the wrapping element.\n * When provided `Function` does not return element, then will be no conversion.\n *\n * The converter automatically consumes corresponding value from consumables list, stops the event (see\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher}).\n *\n *\t\tmodelDispatcher.on( 'addAttribute:bold', wrapItem( new ViewAttributeElement( 'strong' ) ) );\n *\n * @param {module:engine/view/element~Element|Function} elementCreator View element, or function returning a view element, which will\n * be used for wrapping.\n * @returns {Function} Set/change attribute converter.\n */\nexport function wrapItem( elementCreator ) {\n\treturn ( evt, data, consumable, conversionApi ) => {\n\t\tconst viewElement = ( elementCreator instanceof ViewElement ) ?\n\t\t\telementCreator.clone( true ) :\n\t\t\telementCreator( data.attributeNewValue, data, consumable, conversionApi );\n\n\t\tif ( !viewElement ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !consumable.consume( data.item, eventNameToConsumableType( evt.name ) ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet viewRange = conversionApi.mapper.toViewRange( data.range );\n\n\t\t// If this is a change event (because old value is not empty) and the creator is a function (so\n\t\t// it may create different view elements basing on attribute value) we have to create\n\t\t// view element basing on old value and unwrap it before wrapping with a newly created view element.\n\t\tif ( data.attributeOldValue !== null && !( elementCreator instanceof ViewElement ) ) {\n\t\t\tconst oldViewElement = elementCreator( data.attributeOldValue, data, consumable, conversionApi );\n\t\t\tviewRange = viewWriter.unwrap( viewRange, oldViewElement );\n\t\t}\n\n\t\tviewWriter.wrap( viewRange, viewElement );\n\t};\n}\n\n/**\n * Function factory, creates a converter that converts remove attribute changes from the model to the view. It assumes, that\n * attributes from model were converted to elements in the view. This converter will unwrap view nodes from corresponding\n * view element if given attribute was removed.\n *\n * The view element type that will be unwrapped depends on passed parameter.\n * If {@link module:engine/view/element~Element} was passed, it will be used to look for similar element in the view for unwrapping.\n * If `Function` is provided, it is passed all the parameters of the\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:addAttribute addAttribute event}.\n * It's expected that the function returns a {@link module:engine/view/element~Element}.\n * The result of the function will be used to look for similar element in the view for unwrapping.\n *\n * The converter automatically consumes corresponding value from consumables list, stops the event (see\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher}) and bind model and view elements.\n *\n *\t\tmodelDispatcher.on( 'removeAttribute:bold', unwrapItem( new ViewAttributeElement( 'strong' ) ) );\n *\n * @see module:engine/conversion/model-to-view-converters~wrapItem\n * @param {module:engine/view/element~Element|Function} elementCreator View element, or function returning a view element, which will\n * be used for unwrapping.\n * @returns {Function} Remove attribute converter.\n */\nexport function unwrapItem( elementCreator ) {\n\treturn ( evt, data, consumable, conversionApi ) => {\n\t\tconst viewElement = ( elementCreator instanceof ViewElement ) ?\n\t\t\telementCreator.clone( true ) :\n\t\t\telementCreator( data.attributeOldValue, data, consumable, conversionApi );\n\n\t\tif ( !viewElement ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !consumable.consume( data.item, eventNameToConsumableType( evt.name ) ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewRange = conversionApi.mapper.toViewRange( data.range );\n\n\t\tviewWriter.unwrap( viewRange, viewElement );\n\t};\n}\n\n/**\n * Function factory, creates a converter that wraps model range.\n *\n * In contrary to {@link module:engine/conversion/model-to-view-converters~wrapItem}, this converter's input is a\n * {@link module:engine/model/range~Range model range} (not changed model item). The model range is mapped\n * to {@link module:engine/view/range~Range view range} and then, view items within that view range are wrapped in a\n * {@link module:engine/view/attributeelement~AttributeElement view attribute element}. Note, that `elementCreator`\n * function of this converter takes different parameters that `elementCreator` of `wrapItem`.\n *\n * Let's assume following model and view. `{}` represents a range that is added as a marker with `searchResult` name.\n * The range represents a result of search `ab` string in the model document. The range has to be visualized in view.\n *\n *\t\t[paragraph]              MODEL ====> VIEW        <p>\n *\t\t\t|- {a                                         |- <span class=\"searchResult\">\n *\t\t\t|-  b}                                        |   |- ab\n *\t\t\t|-  c                                         |- c\n *\n * The wrapping node depends on passed parameter. If {@link module:engine/view/attributeelement~AttributeElement} was passed, it\n * will be cloned and the copy will become the wrapping element. If `Function` is provided, it is passed all the parameters of the\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:addMarker addMarker event}. It's expected\n * that the function returns a {@link module:engine/view/attributeelement~AttributeElement}. The result of the function will be the\n * wrapping element. When provided `Function` does not return element, then will be no conversion.\n *\n * The converter automatically consumes corresponding value from consumables list, stops the event (see\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher}).\n *\n *\t\tmodelDispatcher.on( 'addMarker:searchResult', wrapRange( new ViewAttributeElement( 'span', { class: 'searchResult' } ) ) );\n *\n * @param {module:engine/view/attributeelement~AttributeElement|Function} elementCreator View attribute element, or function returning\n * a view attribute element, which will be used for wrapping.\n * @returns {Function} Wrap range converter.\n */\nexport function wrapRange( elementCreator ) {\n\treturn ( evt, data, consumable, conversionApi ) => {\n\t\tconst viewElement = ( elementCreator instanceof ViewElement ) ?\n\t\t\telementCreator.clone( true ) :\n\t\t\telementCreator( data, consumable, conversionApi );\n\n\t\tif ( !viewElement ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !consumable.consume( data.range, 'addMarker' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewRange = conversionApi.mapper.toViewRange( data.range );\n\t\tconst flatViewRanges = viewWriter.breakViewRangePerContainer( viewRange );\n\n\t\tfor ( const range of flatViewRanges ) {\n\t\t\tviewWriter.wrap( range, viewElement );\n\t\t}\n\t};\n}\n\n/**\n * Function factory, creates a converter that converts removing of a model marker to view attribute element.\n * This converter will unwrap view nodes from corresponding view range.\n *\n * The view element that will be unwrapped depends on passed parameter. If {@link module:engine/view/attributeelement~AttributeElement}\n * was passed, it will be used to look for similar element in the view for unwrapping. If `Function` is provided, it is passed all\n * the parameters of the\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:removeMarker removeMarker event}.\n * It's expected that the function returns a {@link module:engine/view/attributeelement~AttributeElement}. The result of\n * the function will be used to look for similar element in the view for unwrapping.\n *\n * The converter automatically consumes corresponding value from consumables list, stops the event (see\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher}) and bind model and view elements.\n *\n *\t\tmodelDispatcher.on( 'removeMarker:searchResult', unwrapRange( new ViewAttributeElement( 'span', { class: 'searchResult' } ) ) );\n *\n * @see module:engine/conversion/model-to-view-converters~wrapRange\n * @param {module:engine/view/attributeelement~AttributeElement|Function} elementCreator View attribute element, or function returning\n * a view attribute element, which will be used for unwrapping.\n * @returns {Function} Unwrap range converter.\n */\nexport function unwrapRange( elementCreator ) {\n\treturn ( evt, data, consumable, conversionApi ) => {\n\t\tconst viewElement = ( elementCreator instanceof ViewElement ) ?\n\t\t\telementCreator.clone( true ) :\n\t\t\telementCreator( data, consumable, conversionApi );\n\n\t\tif ( !viewElement ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !consumable.consume( data.range, 'removeMarker' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewRange = conversionApi.mapper.toViewRange( data.range );\n\t\tconst flatViewRanges = viewWriter.breakViewRangePerContainer( viewRange );\n\n\t\tfor ( const range of flatViewRanges ) {\n\t\t\tviewWriter.unwrap( range, viewElement );\n\t\t}\n\t};\n}\n\n/**\n * Function factory, creates a default model-to-view converter for node remove changes.\n *\n *\t\tmodelDispatcher.on( 'remove', remove() );\n *\n * @returns {Function} Remove event converter.\n */\nexport function remove() {\n\treturn ( evt, data, consumable, conversionApi ) => {\n\t\tif ( !consumable.consume( data.item, 'remove' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// We cannot map non-existing positions from model to view. Since a range was removed\n\t\t// from the model, we cannot recreate that range and map it to view, because\n\t\t// end of that range is incorrect.\n\t\t// Instead we will use `data.sourcePosition` as this is the last correct model position and\n\t\t// it is a position before the removed item. Then, we will calculate view range to remove \"manually\".\n\t\tconst viewPosition = conversionApi.mapper.toViewPosition( data.sourcePosition );\n\t\tlet viewRange;\n\n\t\tif ( data.item.is( 'element' ) ) {\n\t\t\t// Note: in remove conversion we cannot use model-to-view element mapping because `data.item` may be\n\t\t\t// already mapped to another element (this happens when move change is converted).\n\t\t\t// In this case however, `viewPosition` is the position before view element that corresponds to removed model element.\n\t\t\tviewRange = ViewRange.createOn( viewPosition.nodeAfter );\n\t\t} else {\n\t\t\t// If removed item is a text node, we need to traverse view tree to find the view range to remove.\n\t\t\t// Range to remove will start `viewPosition` and should contain amount of characters equal to the amount of removed characters.\n\t\t\tconst viewRangeEnd = _shiftViewPositionByCharacters( viewPosition, data.item.offsetSize );\n\t\t\tviewRange = new ViewRange( viewPosition, viewRangeEnd );\n\t\t}\n\n\t\t// Trim the range to remove in case some UI elements are on the view range boundaries.\n\t\tviewWriter.remove( viewRange.getTrimmed() );\n\n\t\t// Unbind this element only if it was moved to graveyard.\n\t\t// The dispatcher#remove event will also be fired if the element was moved to another place (remove+insert are fired).\n\t\t// Let's say that <b> is moved before <a>. The view will be changed like this:\n\t\t//\n\t\t// 1) start:    <a></a><b></b>\n\t\t// 2) insert:   <b (new)></b><a></a><b></b>\n\t\t// 3) remove:   <b (new)></b><a></a>\n\t\t//\n\t\t// If we'll unbind the <b> element in step 3 we'll also lose binding of the <b (new)> element in the view,\n\t\t// because unbindModelElement() cancels both bindings – (model <b> => view <b (new)>) and (view <b (new)> => model <b>).\n\t\t// We can't lose any of these.\n\t\t//\n\t\t// See #847.\n\t\tif ( data.item.root.rootName == '$graveyard' ) {\n\t\t\tconversionApi.mapper.unbindModelElement( data.item );\n\t\t}\n\t};\n}\n\n// Helper function that shifts given view `position` in a way that returned position is after `howMany` characters compared\n// to the original `position`.\n// Because in view there might be view ui elements splitting text nodes, we cannot simply use `ViewPosition#getShiftedBy()`.\nfunction _shiftViewPositionByCharacters( position, howMany ) {\n\t// Create a walker that will walk the view tree starting from given position and walking characters one-by-one.\n\tconst walker = new ViewTreeWalker( { startPosition: position, singleCharacters: true } );\n\t// We will count visited characters and return the position after `howMany` characters.\n\tlet charactersFound = 0;\n\n\tfor ( const value of walker ) {\n\t\tif ( value.type == 'text' ) {\n\t\t\tcharactersFound++;\n\n\t\t\tif ( charactersFound == howMany ) {\n\t\t\t\treturn walker.position;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Function factory, creates a default model-to-view converter for removing {@link module:engine/view/uielement~UIElement ui element}\n * basing on marker remove change.\n *\n * @param {module:engine/view/uielement~UIElement|Function} elementCreator View ui element, or function returning\n * a view ui element, which will be used as a pattern when look for element to remove at the marker start position.\n * @returns {Function} Remove ui element converter.\n */\nexport function removeUIElement( elementCreator ) {\n\treturn ( evt, data, consumable, conversionApi ) => {\n\t\tlet viewStartElement, viewEndElement;\n\n\t\tif ( elementCreator instanceof ViewElement ) {\n\t\t\tviewStartElement = elementCreator.clone( true );\n\t\t\tviewEndElement = elementCreator.clone( true );\n\t\t} else {\n\t\t\tdata.isOpening = true;\n\t\t\tviewStartElement = elementCreator( data, consumable, conversionApi );\n\n\t\t\tdata.isOpening = false;\n\t\t\tviewEndElement = elementCreator( data, consumable, conversionApi );\n\t\t}\n\n\t\tif ( !viewStartElement || !viewEndElement ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !consumable.consume( data.range, 'removeMarker' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewRange = conversionApi.mapper.toViewRange( data.range );\n\n\t\t// First remove closing element.\n\t\tviewWriter.clear( viewRange.getEnlarged(), viewEndElement );\n\n\t\t// If closing and opening elements are not the same then remove opening element.\n\t\tif ( !viewStartElement.isSimilar( viewEndElement ) ) {\n\t\t\tviewWriter.clear( viewRange.getEnlarged(), viewStartElement );\n\t\t}\n\t};\n}\n\n/**\n * Returns the consumable type that is to be consumed in an event, basing on that event name.\n *\n * @param {String} evtName Event name.\n * @returns {String} Consumable type.\n */\nexport function eventNameToConsumableType( evtName ) {\n\tconst parts = evtName.split( ':' );\n\n\treturn parts[ 0 ] + ':' + parts[ 1 ];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/conversion/model-to-view-converters.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/delta/insertdelta\n */\n\nimport Delta from './delta';\nimport RemoveDelta from './removedelta';\nimport DeltaFactory from './deltafactory';\nimport InsertOperation from '../operation/insertoperation';\nimport { register } from '../batch';\nimport { normalizeNodes } from './../writer';\n\nimport DocumentFragment from '../documentfragment';\nimport Range from '../../model/range.js';\nimport Position from '../../model/position.js';\n\n/**\n * @classdesc\n * To provide specific OT behavior and better collisions solving, the {@link module:engine/model/batch~Batch#insert Batch#insert} method\n * uses the `InsertDelta` class which inherits from the `Delta` class and may overwrite some methods.\n */\nexport default class InsertDelta extends Delta {\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\treturn 'insert';\n\t}\n\n\t/**\n\t * Position where the delta inserts nodes or `null` if there are no operations in the delta.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/position~Position|null}\n\t */\n\tget position() {\n\t\treturn this._insertOperation ? this._insertOperation.position : null;\n\t}\n\n\t/**\n\t * Node list containing all the nodes inserted by the delta or `null` if there are no operations in the delta.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/nodelist~NodeList|null}\n\t */\n\tget nodes() {\n\t\treturn this._insertOperation ? this._insertOperation.nodes : null;\n\t}\n\n\t/**\n\t * Insert operation that is saved in this delta or `null` if there are no operations in the delta.\n\t *\n\t * @readonly\n\t * @protected\n\t * @type {module:engine/model/operation/insertoperation~InsertOperation|null}\n\t */\n\tget _insertOperation() {\n\t\treturn this.operations[ 0 ] || null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget _reverseDeltaClass() {\n\t\treturn RemoveDelta;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'engine.model.delta.InsertDelta';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get _priority() {\n\t\treturn 20;\n\t}\n}\n\n/**\n * Inserts a node or nodes at the given position.\n *\n * When inserted element is a {@link module:engine/model/documentfragment~DocumentFragment} and has markers its markers will\n * be set to {@link module:engine/model/document~Document#markers}.\n *\n * @chainable\n * @method module:engine/model/batch~Batch#insert\n * @param {module:engine/model/position~Position} position Position of insertion.\n * @param {module:engine/model/node~NodeSet} nodes The list of nodes to be inserted.\n */\nregister( 'insert', function( position, nodes ) {\n\tconst normalizedNodes = normalizeNodes( nodes );\n\n\t// If nothing is inserted do not create delta and operation.\n\tif ( normalizedNodes.length === 0 ) {\n\t\treturn this;\n\t}\n\n\tconst delta = new InsertDelta();\n\tconst insert = new InsertOperation( position, normalizedNodes, this.document.version );\n\n\tthis.addDelta( delta );\n\tdelta.addOperation( insert );\n\tthis.document.applyOperation( insert );\n\n\t// When element is a DocumentFragment we need to move its markers to Document#markers.\n\tif ( nodes instanceof DocumentFragment ) {\n\t\tfor ( const [ markerName, markerRange ] of nodes.markers ) {\n\t\t\t// We need to migrate marker range from DocumentFragment to Document.\n\t\t\tconst rangeRootPosition = Position.createAt( markerRange.root );\n\t\t\tconst range = new Range(\n\t\t\t\tmarkerRange.start._getCombined( rangeRootPosition, position ),\n\t\t\t\tmarkerRange.end._getCombined( rangeRootPosition, position )\n\t\t\t);\n\n\t\t\tthis.setMarker( markerName, range );\n\t\t}\n\t}\n\n\treturn this;\n} );\n\nDeltaFactory.register( InsertDelta );\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/delta/insertdelta.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/delta/mergedelta\n */\n\nimport Delta from './delta';\nimport DeltaFactory from './deltafactory';\nimport SplitDelta from './splitdelta';\nimport { register } from '../batch';\nimport Position from '../position';\nimport Element from '../element';\nimport RemoveOperation from '../operation/removeoperation';\nimport MoveOperation from '../operation/moveoperation';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * @classdesc\n * To provide specific OT behavior and better collisions solving, {@link module:engine/model/batch~Batch#merge} method\n * uses the `MergeDelta` class which inherits from the `Delta` class and may overwrite some methods.\n */\nexport default class MergeDelta extends Delta {\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\treturn 'merge';\n\t}\n\n\t/**\n\t * Position between to merged nodes or `null` if the delta has no operations.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/position~Position|null}\n\t */\n\tget position() {\n\t\treturn this._removeOperation ? this._removeOperation.sourcePosition : null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tgetReversed() {\n\t\tconst delta = super.getReversed();\n\n\t\tif ( delta.operations.length > 0 ) {\n\t\t\tdelta.operations[ 1 ].isSticky = false;\n\t\t}\n\n\t\treturn delta;\n\t}\n\n\t/**\n\t * Operation in this delta that removes the node after merge position (which will be empty at that point) or\n\t * `null` if the delta has no operations. Note, that after {@link module:engine/model/delta/transform~transform transformation}\n\t * this might be an instance of {@link module:engine/model/operation/moveoperation~MoveOperation} instead of\n\t * {@link module:engine/model/operation/removeoperation~RemoveOperation}.\n\t *\n\t * @readonly\n\t * @protected\n\t * @type {module:engine/model/operation/moveoperation~MoveOperation|null}\n\t */\n\tget _removeOperation() {\n\t\treturn this.operations[ 1 ] || null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget _reverseDeltaClass() {\n\t\treturn SplitDelta;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'engine.model.delta.MergeDelta';\n\t}\n}\n\n/**\n * Merges two siblings at the given position.\n *\n * Node before and after the position have to be an element. Otherwise `batch-merge-no-element-before` or\n * `batch-merge-no-element-after` error will be thrown.\n *\n * @chainable\n * @method module:engine/model/batch~Batch#merge\n * @param {module:engine/model/position~Position} position Position of merge.\n */\nregister( 'merge', function( position ) {\n\tconst delta = new MergeDelta();\n\tthis.addDelta( delta );\n\n\tconst nodeBefore = position.nodeBefore;\n\tconst nodeAfter = position.nodeAfter;\n\n\tif ( !( nodeBefore instanceof Element ) ) {\n\t\t/**\n\t\t * Node before merge position must be an element.\n\t\t *\n\t\t * @error batch-merge-no-element-before\n\t\t */\n\t\tthrow new CKEditorError( 'batch-merge-no-element-before: Node before merge position must be an element.' );\n\t}\n\n\tif ( !( nodeAfter instanceof Element ) ) {\n\t\t/**\n\t\t * Node after merge position must be an element.\n\t\t *\n\t\t * @error batch-merge-no-element-after\n\t\t */\n\t\tthrow new CKEditorError( 'batch-merge-no-element-after: Node after merge position must be an element.' );\n\t}\n\n\tconst positionAfter = Position.createFromParentAndOffset( nodeAfter, 0 );\n\tconst positionBefore = Position.createFromParentAndOffset( nodeBefore, nodeBefore.maxOffset );\n\n\tconst move = new MoveOperation(\n\t\tpositionAfter,\n\t\tnodeAfter.maxOffset,\n\t\tpositionBefore,\n\t\tthis.document.version\n\t);\n\n\tmove.isSticky = true;\n\tdelta.addOperation( move );\n\tthis.document.applyOperation( move );\n\n\tconst remove = new RemoveOperation( position, 1, this.document.version );\n\tdelta.addOperation( remove );\n\tthis.document.applyOperation( remove );\n\n\treturn this;\n} );\n\nDeltaFactory.register( MergeDelta );\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/delta/mergedelta.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/delta/movedelta\n */\n\nimport Delta from './delta';\nimport DeltaFactory from './deltafactory';\nimport { register } from '../batch';\nimport MoveOperation from '../operation/moveoperation';\nimport Position from '../position';\nimport Range from '../range';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * @classdesc\n * To provide specific OT behavior and better collisions solving, {@link module:engine/model/batch~Batch#move} method\n * uses the `MoveDelta` class which inherits from the `Delta` class and may overwrite some methods.\n */\nexport default class MoveDelta extends Delta {\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\treturn 'move';\n\t}\n\n\t/**\n\t * Offset size of moved range or `null` if there are no operations in the delta.\n\t *\n\t * @type {Number|null}\n\t */\n\tget howMany() {\n\t\treturn this._moveOperation ? this._moveOperation.howMany : null;\n\t}\n\n\t/**\n\t * {@link module:engine/model/delta/movedelta~MoveDelta#_moveOperation Move operation}\n\t * {@link module:engine/model/operation/moveoperation~MoveOperation#sourcePosition source position} or `null` if there are\n\t * no operations in the delta.\n\t *\n\t * @type {module:engine/model/position~Position|null}\n\t */\n\tget sourcePosition() {\n\t\treturn this._moveOperation ? this._moveOperation.sourcePosition : null;\n\t}\n\n\t/**\n\t * {@link module:engine/model/delta/movedelta~MoveDelta#_moveOperation Move operation}\n\t * {@link module:engine/model/operation/moveoperation~MoveOperation#targetPosition target position} or `null` if there are\n\t * no operations in the delta.\n\t *\n\t * @type {module:engine/model/position~Position|null}\n\t */\n\tget targetPosition() {\n\t\treturn this._moveOperation ? this._moveOperation.targetPosition : null;\n\t}\n\n\t/**\n\t * {@link module:engine/model/delta/movedelta~MoveDelta#_moveOperation Move operation} that is saved in this delta or `null`\n\t * if there are no operations in the delta.\n\t *\n\t * @protected\n\t * @type {module:engine/model/operation/moveoperation~MoveOperation|null}\n\t */\n\tget _moveOperation() {\n\t\treturn this.operations[ 0 ] || null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget _reverseDeltaClass() {\n\t\treturn MoveDelta;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'engine.model.delta.MoveDelta';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get _priority() {\n\t\treturn 20;\n\t}\n}\n\nfunction addMoveOperation( batch, delta, sourcePosition, howMany, targetPosition ) {\n\tconst operation = new MoveOperation( sourcePosition, howMany, targetPosition, batch.document.version );\n\tdelta.addOperation( operation );\n\tbatch.document.applyOperation( operation );\n}\n\n/**\n * Moves given {@link module:engine/model/item~Item model item} or given range to target position.\n *\n * @chainable\n * @method module:engine/model/batch~Batch#move\n * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange Model item or range of nodes to move.\n * @param {module:engine/model/position~Position} targetPosition Position where moved nodes will be inserted.\n */\nregister( 'move', function( itemOrRange, targetPosition ) {\n\tconst delta = new MoveDelta();\n\tthis.addDelta( delta );\n\n\tif ( itemOrRange instanceof Range ) {\n\t\tif ( !itemOrRange.isFlat ) {\n\t\t\t/**\n\t\t\t * Range to move is not flat.\n\t\t\t *\n\t\t\t * @error batch-move-range-not-flat\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'batch-move-range-not-flat: Range to move is not flat.' );\n\t\t}\n\n\t\taddMoveOperation( this, delta, itemOrRange.start, itemOrRange.end.offset - itemOrRange.start.offset, targetPosition );\n\t} else {\n\t\taddMoveOperation( this, delta, Position.createBefore( itemOrRange ), 1, targetPosition );\n\t}\n\n\treturn this;\n} );\n\nDeltaFactory.register( MoveDelta );\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/delta/movedelta.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/delta/removedelta\n */\n\nimport MoveDelta from './movedelta';\nimport { register } from '../batch';\nimport DeltaFactory from './deltafactory';\nimport RemoveOperation from '../operation/removeoperation';\nimport Position from '../position';\nimport Range from '../range';\n\n/**\n * @classdesc\n * To provide specific OT behavior and better collisions solving, {@link module:engine/model/batch~Batch#remove} method\n * uses the `RemoveDelta` class which inherits from the `Delta` class and may overwrite some methods.\n */\nexport default class RemoveDelta extends MoveDelta {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'engine.model.delta.RemoveDelta';\n\t}\n}\n\nfunction addRemoveOperation( batch, delta, position, howMany ) {\n\tconst operation = new RemoveOperation( position, howMany, batch.document.version );\n\tdelta.addOperation( operation );\n\tbatch.document.applyOperation( operation );\n}\n\n/**\n * Removes given {@link module:engine/model/item~Item model item} or given range.\n *\n * @chainable\n * @method module:engine/model/batch~Batch#remove\n * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange Model item or range to remove.\n */\nregister( 'remove', function( itemOrRange ) {\n\tconst delta = new RemoveDelta();\n\tthis.addDelta( delta );\n\n\tif ( itemOrRange instanceof Range ) {\n\t\t// The array is reversed, so the ranges are correct and do not have to be updated.\n\t\tconst ranges = itemOrRange.getMinimalFlatRanges().reverse();\n\n\t\tfor ( const flat of ranges ) {\n\t\t\taddRemoveOperation( this, delta, flat.start, flat.end.offset - flat.start.offset );\n\t\t}\n\t} else {\n\t\taddRemoveOperation( this, delta, Position.createBefore( itemOrRange ), 1 );\n\t}\n\n\treturn this;\n} );\n\nDeltaFactory.register( RemoveDelta );\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/delta/removedelta.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/delta/splitdelta\n */\n\nimport Delta from './delta';\nimport DeltaFactory from './deltafactory';\nimport { register } from '../batch';\nimport Position from '../position';\nimport Element from '../element';\nimport InsertOperation from '../operation/insertoperation';\nimport MoveOperation from '../operation/moveoperation';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport MergeDelta from '../delta/mergedelta';\n\n/**\n * @classdesc\n * To provide specific OT behavior and better collisions solving, the {@link module:engine/model/batch~Batch#split} method\n * uses `SplitDelta` class which inherits from the `Delta` class and may overwrite some methods.\n */\nexport default class SplitDelta extends Delta {\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\treturn 'split';\n\t}\n\n\t/**\n\t * Position of split or `null` if there are no operations in the delta.\n\t *\n\t * @type {module:engine/model/position~Position|null}\n\t */\n\tget position() {\n\t\treturn this._moveOperation ? this._moveOperation.sourcePosition : null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tgetReversed() {\n\t\tconst delta = super.getReversed();\n\n\t\tif ( delta.operations.length > 0 ) {\n\t\t\tdelta.operations[ 0 ].isSticky = true;\n\t\t}\n\n\t\treturn delta;\n\t}\n\n\t/**\n\t * Operation in the delta that adds to model an element into which split nodes will be moved, or `null` if\n\t * there are no operations in the delta.\n\t *\n\t * Most commonly this will be {@link module:engine/model/operation/insertoperation~InsertOperation an insert operation},\n\t * as `SplitDelta` has to create a new node. If `SplitDelta` was created through\n\t * {@link module:engine/model/delta/delta~Delta#getReversed reversing}\n\t * a {@link module:engine/model/delta/mergedelta~MergeDelta merge delta},\n\t * this will be a {@link module:engine/model/operation/reinsertoperation~ReinsertOperation reinsert operation},\n\t * as we will want to re-insert the exact element that was removed by that merge delta.\n\t *\n\t * @protected\n\t * @type {module:engine/model/operation/insertoperation~InsertOperation|\n\t * module:engine/model/operation/reinsertoperation~ReinsertOperation|null}\n\t */\n\tget _cloneOperation() {\n\t\treturn this.operations[ 0 ] || null;\n\t}\n\n\t/**\n\t * Operation in the delta that moves model items, that are after split position, to their new parent or `null`\n\t * if there are no operations in the delta.\n\t *\n\t * @protected\n\t * @type {module:engine/model/operation/moveoperation~MoveOperation|null}\n\t */\n\tget _moveOperation() {\n\t\treturn this.operations[ 1 ] || null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget _reverseDeltaClass() {\n\t\treturn MergeDelta;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'engine.model.delta.SplitDelta';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get _priority() {\n\t\treturn 5;\n\t}\n}\n\n/**\n * Splits an element at the given position.\n *\n * The element cannot be a root element, as root element cannot be split. The `batch-split-root` error will be thrown if\n * you try to split the root element.\n *\n * @chainable\n * @method module:engine/model/batch~Batch#split\n * @param {module:engine/model/position~Position} position Position of split.\n */\nregister( 'split', function( position ) {\n\tconst delta = new SplitDelta();\n\tthis.addDelta( delta );\n\n\tconst splitElement = position.parent;\n\n\tif ( !splitElement.parent ) {\n\t\t/**\n\t\t * Root element can not be split.\n\t\t *\n\t\t * @error batch-split-root\n\t\t */\n\t\tthrow new CKEditorError( 'batch-split-root: Root element can not be split.' );\n\t}\n\n\tconst copy = new Element( splitElement.name, splitElement.getAttributes() );\n\n\tconst insert = new InsertOperation(\n\t\tPosition.createAfter( splitElement ),\n\t\tcopy,\n\t\tthis.document.version\n\t);\n\n\tdelta.addOperation( insert );\n\tthis.document.applyOperation( insert );\n\n\tconst move = new MoveOperation(\n\t\tposition,\n\t\tsplitElement.maxOffset - position.offset,\n\t\tPosition.createFromParentAndOffset( copy, 0 ),\n\t\tthis.document.version\n\t);\n\tmove.isSticky = true;\n\n\tdelta.addOperation( move );\n\tthis.document.applyOperation( move );\n\n\treturn this;\n} );\n\nDeltaFactory.register( SplitDelta );\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/delta/splitdelta.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/delta/transform\n */\n\nimport Delta from './delta';\nimport operationTransform from '../operation/transform';\nimport NoOperation from '../operation/nooperation';\nimport arrayUtils from '@ckeditor/ckeditor5-utils/src/lib/lodash/array';\n\nconst specialCases = new Map();\n\n/**\n * @namespace\n */\nconst transform = {\n\t/**\n\t * Transforms given {@link module:engine/model/delta/delta~Delta delta} by another {@link module:engine/model/delta/delta~Delta delta}\n\t * and returns the result of that transformation as an array containing one or more {@link module:engine/model/delta/delta~Delta delta}\n\t * instances.\n\t *\n\t * Delta transformations heavily base on {@link module:engine/model/operation/transform~transform operational transformations}. Since\n\t * delta is a list of operations most situations can be handled thanks to operational transformation. Unfortunately,\n\t * deltas are more complicated than operations and have they semantic meaning, as they represent user's editing intentions.\n\t *\n\t * Sometimes, simple operational transformation on deltas' operations might result in some unexpected results. Those\n\t * results would be fine from OT point of view, but would not reflect user's intentions. Because of such conflicts\n\t * we need to handle transformations in special cases in a custom way.\n\t *\n\t * The function itself looks whether two given delta types have a special case function registered. If so, the deltas are\n\t * transformed using that function. If not,\n\t * {@link module:engine/model/delta/transform~transform.defaultTransform default transformation algorithm} is used.\n\t *\n\t * @param {module:engine/model/delta/delta~Delta} a Delta that will be transformed.\n\t * @param {module:engine/model/delta/delta~Delta} b Delta to transform by.\n\t * @param {Boolean} isAMoreImportantThanB Flag indicating whether the delta which will be transformed (`a`) should be treated\n\t * as more important when resolving conflicts. Note that this flag is used only if provided deltas have same\n\t * {@link module:engine/model/delta/delta~Delta._priority priority}. If deltas have different priorities, their importance is resolved\n\t * automatically and overwrites this flag.\n\t * @returns {Array.<module:engine/model/delta/delta~Delta>} Result of the transformation.\n\t */\n\ttransform( a, b, isAMoreImportantThanB ) {\n\t\tconst transformAlgorithm = transform.getTransformationCase( a, b ) || transform.defaultTransform;\n\n\t\tconst transformed = transformAlgorithm( a, b, isAMoreImportantThanB );\n\t\tconst baseVersion = arrayUtils.last( b.operations ).baseVersion;\n\n\t\treturn updateBaseVersion( baseVersion, transformed );\n\t},\n\n\t/**\n\t * The default delta transformation function. It is used for those deltas that are not in special case conflict.\n\t *\n\t * This algorithm is similar to a popular `dOPT` algorithm used in operational transformation, as we are in fact\n\t * transforming two sets of operations by each other.\n\t *\n\t * @param {module:engine/model/delta/delta~Delta} a Delta that will be transformed.\n\t * @param {module:engine/model/delta/delta~Delta} b Delta to transform by.\n\t * @param {Boolean} isAMoreImportantThanB Flag indicating whether the delta which will be transformed (`a`) should be treated\n\t * as more important when resolving conflicts. Note that this flag is used only if provided deltas have same\n\t * {@link module:engine/model/delta/delta~Delta._priority priority}. If deltas have different priorities, their importance is resolved\n\t * automatically and overwrites this flag.\n\t * @returns {Array.<module:engine/model/delta/delta~Delta>} Result of the transformation, that is an array with single delta instance.\n\t */\n\tdefaultTransform( a, b, isAMoreImportantThanB ) {\n\t\t// First, resolve the flag real value.\n\t\tisAMoreImportantThanB = getPriority( a.constructor, b.constructor, isAMoreImportantThanB );\n\n\t\t// Create a new delta instance. Make sure that the new delta is of same type as transformed delta.\n\t\t// We will transform operations in that delta but it doesn't mean the delta's \"meaning\" which is connected to\n\t\t// the delta's type. Since the delta's type is heavily used in transformations and probably other parts\n\t\t// of system it is important to keep proper delta type through all transformation process.\n\t\tconst transformed = new a.constructor();\n\n\t\t// Array containing operations that we will transform by. At the beginning these are just operations from\n\t\tlet byOps = b.operations;\n\n\t\t// This array is storing operations from `byOps` which got transformed by operation from delta `a`.\n\t\tlet newByOps = [];\n\n\t\t// We take each operation from original set of operations to transform.\n\t\tfor ( const opA of a.operations ) {\n\t\t\t// We wrap the operation in the array. This is important, because operation transformation algorithm returns\n\t\t\t// an array of operations so we need to make sure that our algorithm is ready to handle arrays.\n\t\t\tconst ops = [ opA ];\n\n\t\t\t// Now the real algorithm takes place.\n\t\t\tfor ( const opB of byOps ) {\n\t\t\t\t// For each operation that we need transform by...\n\t\t\t\tfor ( let i = 0; i < ops.length; i++ ) {\n\t\t\t\t\t// We take each operation to transform...\n\t\t\t\t\tconst op = ops[ i ];\n\n\t\t\t\t\t// And transform both of them by themselves.\n\n\t\t\t\t\t// The result of transforming operation from delta B by operation from delta A is saved in\n\t\t\t\t\t// `newByOps` array. We will use that array for transformations in next loops. We need delta B\n\t\t\t\t\t// operations after transformed by delta A operations to get correct results of transformations\n\t\t\t\t\t// of next operations from delta A.\n\t\t\t\t\t//\n\t\t\t\t\t// It's like this because 2nd operation from delta A assumes that 1st operation from delta A\n\t\t\t\t\t// is \"already applied\". When we transform 2nd operation from delta A by operations from delta B\n\t\t\t\t\t// we have to be sure that operations from delta B are in a state that acknowledges 1st operation\n\t\t\t\t\t// from delta A.\n\t\t\t\t\t//\n\t\t\t\t\t// This can be easier understood when operations sets to transform are represented by diamond diagrams:\n\t\t\t\t\t// http://www.codecommit.com/blog/java/understanding-and-applying-operational-transformation\n\n\t\t\t\t\t// Using push.apply because operationTransform function is returning an array with one or multiple results.\n\t\t\t\t\tArray.prototype.push.apply( newByOps, operationTransform( opB, op, !isAMoreImportantThanB ) );\n\n\t\t\t\t\t// Then, we transform operation from delta A by operation from delta B.\n\t\t\t\t\tconst results = operationTransform( op, opB, isAMoreImportantThanB );\n\n\t\t\t\t\t// We replace currently processed operation from `ops` array by the results of transformation.\n\t\t\t\t\t// Note, that we process single operation but the operationTransform result might be an array, so we\n\t\t\t\t\t// might splice-in more operations. We will process them further in next iterations. Right now we\n\t\t\t\t\t// just save them in `ops` array and move `i` pointer by proper offset.\n\t\t\t\t\tArray.prototype.splice.apply( ops, [ i, 1 ].concat( results ) );\n\n\t\t\t\t\ti += results.length - 1;\n\t\t\t\t}\n\n\t\t\t\t// At this point a single operation from delta A got transformed by a single operation from delta B.\n\t\t\t\t// The transformation result is in `ops` array and it may be one or more operations. This was just the first step.\n\t\t\t\t// Operation from delta A has to be further transformed by the other operations from delta B.\n\t\t\t\t// So in next iterator loop we will take another operation from delta B and use transformed delta A (`ops`)\n\t\t\t\t// to transform it further.\n\t\t\t}\n\n\t\t\t// We got through all delta B operations and have a final transformed state of an operation from delta A.\n\n\t\t\t// As previously mentioned, we substitute operations from delta B by their transformed equivalents.\n\t\t\tbyOps = newByOps;\n\t\t\tnewByOps = [];\n\n\t\t\t// We add transformed operation from delta A to newly created delta.\n\t\t\t// Remember that transformed operation from delta A may consist of multiple operations.\n\t\t\tfor ( const op of ops ) {\n\t\t\t\ttransformed.addOperation( op );\n\t\t\t}\n\n\t\t\t// In next loop, we will take another operation from delta A and transform it through (transformed) operations\n\t\t\t// from delta B...\n\t\t}\n\n\t\treturn [ transformed ];\n\t},\n\n\t/**\n\t * Adds a special case callback for given delta classes.\n\t *\n\t * @param {Function} A Delta constructor which instance will get transformed.\n\t * @param {Function} B Delta constructor which instance will be transformed by.\n\t * @param {Function} resolver A callback that will handle custom special case transformation for instances of given delta classes.\n\t */\n\taddTransformationCase( A, B, resolver ) {\n\t\tlet casesA = specialCases.get( A );\n\n\t\tif ( !casesA ) {\n\t\t\tcasesA = new Map();\n\t\t\tspecialCases.set( A, casesA );\n\t\t}\n\n\t\tcasesA.set( B, resolver );\n\t},\n\n\t/**\n\t * Gets a special case callback which was previously {@link module:engine/model/delta/transform~transform.addTransformationCase added}.\n\t *\n\t * @param {module:engine/model/delta/delta~Delta} a Delta to transform.\n\t * @param {module:engine/model/delta/delta~Delta} b Delta to be transformed by.\n\t */\n\tgetTransformationCase( a, b ) {\n\t\tlet casesA = specialCases.get( a.constructor );\n\n\t\t// If there are no special cases registered for class which `a` is instance of, we will\n\t\t// check if there are special cases registered for any parent class.\n\t\tif ( !casesA || !casesA.get( b.constructor ) ) {\n\t\t\tconst cases = specialCases.keys();\n\n\t\t\tfor ( const caseClass of cases ) {\n\t\t\t\tif ( a instanceof caseClass && specialCases.get( caseClass ).get( b.constructor ) ) {\n\t\t\t\t\tcasesA = specialCases.get( caseClass );\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( casesA ) {\n\t\t\treturn casesA.get( b.constructor );\n\t\t}\n\n\t\treturn undefined;\n\t},\n\n\t/**\n\t * Transforms two sets of deltas by themselves. Returns both transformed sets. Does not modify passed parameters.\n\t *\n\t * @param {Array.<module:engine/model/delta/delta~Delta>} deltasA Array with first set of deltas to transform.\n\t * @param {Array.<module:engine/model/delta/delta~Delta>} deltasB Array with second set of deltas to transform.\n\t * @param {Boolean} isAMoreImportantThanB Flag indicating whether the deltas from `deltasA` set should be treated as more\n\t * important when resolving conflicts.\n\t * @returns {Object}\n\t * @returns {Array.<module:engine/model/delta/delta~Delta>} return.deltasA The first set of deltas transformed by the second\n\t * set of deltas.\n\t * @returns {Array.<module:engine/model/delta/delta~Delta>} return.deltasB The second set of deltas transformed by the first\n\t * set of deltas.\n\t */\n\ttransformDeltaSets( deltasA, deltasB, isAMoreImportantThanB ) {\n\t\tconst transformedDeltasA = Array.from( deltasA );\n\t\tconst transformedDeltasB = Array.from( deltasB );\n\n\t\tfor ( let i = 0; i < transformedDeltasA.length; i++ ) {\n\t\t\tconst deltaA = [ transformedDeltasA[ i ] ];\n\n\t\t\tfor ( let j = 0; j < transformedDeltasB.length; j++ ) {\n\t\t\t\tconst deltaB = [ transformedDeltasB[ j ] ];\n\n\t\t\t\tfor ( let k = 0; k < deltaA.length; k++ ) {\n\t\t\t\t\tfor ( let l = 0; l < deltaB.length; l++ ) {\n\t\t\t\t\t\tconst resultAB = transform.transform( deltaA[ k ], deltaB[ l ], isAMoreImportantThanB );\n\t\t\t\t\t\tconst resultBA = transform.transform( deltaB[ l ], deltaA[ k ], !isAMoreImportantThanB );\n\n\t\t\t\t\t\tdeltaA.splice( k, 1, ...resultAB );\n\t\t\t\t\t\tk += resultAB.length - 1;\n\n\t\t\t\t\t\tdeltaB.splice( l, 1, ...resultBA );\n\t\t\t\t\t\tl += resultBA.length - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttransformedDeltasB.splice( j, 1, ...deltaB );\n\t\t\t\tj += deltaB.length - 1;\n\t\t\t}\n\n\t\t\ttransformedDeltasA.splice( i, 1, ...deltaA );\n\t\t\ti += deltaA.length - 1;\n\t\t}\n\n\t\tconst opsDiffA = getOpsCount( transformedDeltasA ) - getOpsCount( deltasA );\n\t\tconst opsDiffB = getOpsCount( transformedDeltasB ) - getOpsCount( deltasB );\n\n\t\tif ( opsDiffB < opsDiffA ) {\n\t\t\tpadWithNoOps( transformedDeltasB, opsDiffA - opsDiffB );\n\t\t} else if ( opsDiffA < opsDiffB ) {\n\t\t\tpadWithNoOps( transformedDeltasA, opsDiffB - opsDiffA );\n\t\t}\n\n\t\treturn { deltasA: transformedDeltasA, deltasB: transformedDeltasB };\n\t}\n};\n\nexport default transform;\n\n// Updates base versions of operations inside deltas (which are the results of delta transformation).\nfunction updateBaseVersion( baseVersion, deltas ) {\n\tfor ( const delta of deltas ) {\n\t\tfor ( const op of delta.operations ) {\n\t\t\top.baseVersion = ++baseVersion;\n\t\t}\n\t}\n\n\treturn deltas;\n}\n\n// Checks priorities of passed constructors and decides which one is more important.\n// If both priorities are same, value passed in `isAMoreImportantThanB` parameter is used.\nfunction getPriority( A, B, isAMoreImportantThanB ) {\n\tif ( A._priority > B._priority ) {\n\t\treturn true;\n\t} else if ( A._priority < B._priority ) {\n\t\treturn false;\n\t} else {\n\t\treturn isAMoreImportantThanB;\n\t}\n}\n\n// Returns number of operations in given array of deltas.\nfunction getOpsCount( deltas ) {\n\treturn deltas.reduce( ( current, delta ) => {\n\t\treturn current + delta.operations.length;\n\t}, 0 );\n}\n\n// Adds a delta containing `howMany` `NoOperation` instances to given array with deltas.\n// Used to \"synchronize\" the number of operations in two delta sets.\nfunction padWithNoOps( deltas, howMany ) {\n\tconst lastDelta = deltas[ deltas.length - 1 ];\n\tlet baseVersion = lastDelta.operations.length + lastDelta.baseVersion;\n\n\tconst noDelta = new Delta();\n\n\tfor ( let i = 0; i < howMany; i++ ) {\n\t\tnoDelta.addOperation( new NoOperation( baseVersion++ ) );\n\t}\n\n\tdeltas.push( noDelta );\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/delta/transform.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/delta/unwrapdelta\n */\n\nimport Delta from './delta';\nimport DeltaFactory from './deltafactory';\nimport WrapDelta from './wrapdelta';\nimport { register } from '../batch';\nimport Position from '../position';\nimport RemoveOperation from '../operation/removeoperation';\nimport MoveOperation from '../operation/moveoperation';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * @classdesc\n * To provide specific OT behavior and better collisions solving, {@link module:engine/model/batch~Batch#merge} method\n * uses the `UnwrapDelta` class which inherits from the `Delta` class and may overwrite some methods.\n */\nexport default class UnwrapDelta extends Delta {\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\treturn 'unwrap';\n\t}\n\n\t/**\n\t * Position before unwrapped element or `null` if there are no operations in the delta.\n\t *\n\t * @type {module:engine/model/position~Position|null}\n\t */\n\tget position() {\n\t\treturn this._moveOperation ? this._moveOperation.targetPosition : null;\n\t}\n\n\t/**\n\t * Operation in the delta that moves unwrapped nodes to their new parent or `null` if there are no operations in the delta.\n\t *\n\t * @protected\n\t * @type {module:engine/model/operation/moveoperation~MoveOperation|null}\n\t */\n\tget _moveOperation() {\n\t\treturn this.operations[ 0 ] || null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget _reverseDeltaClass() {\n\t\treturn WrapDelta;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'engine.model.delta.UnwrapDelta';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get _priority() {\n\t\treturn 10;\n\t}\n}\n\n/**\n * Unwraps children of the given element – all its children are moved before it and then the element is removed.\n * Throws error if you try to unwrap an element which does not have a parent.\n *\n * @chainable\n * @method module:engine/model/batch~Batch#unwrap\n * @param {module:engine/model/element~Element} position Element to unwrap.\n */\nregister( 'unwrap', function( element ) {\n\tif ( element.parent === null ) {\n\t\t/**\n\t\t * Trying to unwrap an element which has no parent.\n\t\t *\n\t\t * @error batch-unwrap-element-no-parent\n\t\t */\n\t\tthrow new CKEditorError( 'batch-unwrap-element-no-parent: Trying to unwrap an element which has no parent.' );\n\t}\n\n\tconst delta = new UnwrapDelta();\n\tthis.addDelta( delta );\n\n\tconst sourcePosition = Position.createFromParentAndOffset( element, 0 );\n\n\tconst move = new MoveOperation(\n\t\tsourcePosition,\n\t\telement.maxOffset,\n\t\tPosition.createBefore( element ),\n\t\tthis.document.version\n\t);\n\n\tmove.isSticky = true;\n\tdelta.addOperation( move );\n\tthis.document.applyOperation( move );\n\n\t// Computing new position because we moved some nodes before `element`.\n\t// If we would cache `Position.createBefore( element )` we remove wrong node.\n\tconst remove = new RemoveOperation( Position.createBefore( element ), 1, this.document.version );\n\tdelta.addOperation( remove );\n\tthis.document.applyOperation( remove );\n\n\treturn this;\n} );\n\nDeltaFactory.register( UnwrapDelta );\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/delta/unwrapdelta.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/delta/wrapdelta\n */\n\nimport Delta from './delta';\nimport DeltaFactory from './deltafactory';\nimport UnwrapDelta from './unwrapdelta';\nimport { register } from '../batch';\nimport Position from '../position';\nimport Range from '../range';\nimport Element from '../element';\nimport InsertOperation from '../operation/insertoperation';\nimport MoveOperation from '../operation/moveoperation';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * @classdesc\n * To provide specific OT behavior and better collisions solving, {@link module:engine/model/batch~Batch#merge} method\n * uses the `WrapDelta` class which inherits from the `Delta` class and may overwrite some methods.\n */\nexport default class WrapDelta extends Delta {\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\treturn 'wrap';\n\t}\n\n\t/**\n\t * Range to wrap or `null` if there are no operations in the delta.\n\t *\n\t * @type {module:engine/model/range~Range|null}\n\t */\n\tget range() {\n\t\tconst moveOp = this._moveOperation;\n\n\t\treturn moveOp ? Range.createFromPositionAndShift( moveOp.sourcePosition, moveOp.howMany ) : null;\n\t}\n\n\t/**\n\t * Offset size of range to wrap by the delta or `null` if there are no operations in delta.\n\t *\n\t * @type {Number}\n\t */\n\tget howMany() {\n\t\tconst range = this.range;\n\n\t\treturn range ? range.end.offset - range.start.offset : 0;\n\t}\n\n\t/* eslint-disable max-len */\n\t/**\n\t * Operation that inserts wrapping element or `null` if there are no operations in the delta.\n\t *\n\t * @protected\n\t * @type {module:engine/model/operation/insertoperation~InsertOperation|module:engine/model/operation/reinsertoperation~ReinsertOperation}\n\t */\n\t/* eslint-enable max-len */\n\tget _insertOperation() {\n\t\treturn this.operations[ 0 ] || null;\n\t}\n\n\t/**\n\t * Operation that moves wrapped nodes to their new parent or `null` if there are no operations in the delta.\n\t *\n\t * @protected\n\t * @type {module:engine/model/operation/moveoperation~MoveOperation|null}\n\t */\n\tget _moveOperation() {\n\t\treturn this.operations[ 1 ] || null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget _reverseDeltaClass() {\n\t\treturn UnwrapDelta;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'engine.model.delta.WrapDelta';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get _priority() {\n\t\treturn 10;\n\t}\n}\n\n/**\n * Wraps given range with given element or with a new element with specified name, if string has been passed.\n * **Note:** range to wrap should be a \"flat range\" (see {@link module:engine/model/range~Range#isFlat}). If not, error will be thrown.\n *\n * @chainable\n * @method module:engine/model/batch~Batch#wrap\n * @param {module:engine/model/range~Range} range Range to wrap.\n * @param {module:engine/model/element~Element|String} elementOrString Element or name of element to wrap the range with.\n */\nregister( 'wrap', function( range, elementOrString ) {\n\tif ( !range.isFlat ) {\n\t\t/**\n\t\t * Range to wrap is not flat.\n\t\t *\n\t\t * @error batch-wrap-range-not-flat\n\t\t */\n\t\tthrow new CKEditorError( 'batch-wrap-range-not-flat: Range to wrap is not flat.' );\n\t}\n\n\tconst element = elementOrString instanceof Element ? elementOrString : new Element( elementOrString );\n\n\tif ( element.childCount > 0 ) {\n\t\t/**\n\t\t * Element to wrap with is not empty.\n\t\t *\n\t\t * @error batch-wrap-element-not-empty\n\t\t */\n\t\tthrow new CKEditorError( 'batch-wrap-element-not-empty: Element to wrap with is not empty.' );\n\t}\n\n\tif ( element.parent !== null ) {\n\t\t/**\n\t\t * Element to wrap with is already attached to a tree model.\n\t\t *\n\t\t * @error batch-wrap-element-attached\n\t\t */\n\t\tthrow new CKEditorError( 'batch-wrap-element-attached: Element to wrap with is already attached to tree model.' );\n\t}\n\n\tconst delta = new WrapDelta();\n\tthis.addDelta( delta );\n\n\tconst insert = new InsertOperation( range.end, element, this.document.version );\n\tdelta.addOperation( insert );\n\tthis.document.applyOperation( insert );\n\n\tconst targetPosition = Position.createFromParentAndOffset( element, 0 );\n\tconst move = new MoveOperation(\n\t\trange.start,\n\t\trange.end.offset - range.start.offset,\n\t\ttargetPosition,\n\t\tthis.document.version\n\t);\n\tdelta.addOperation( move );\n\tthis.document.applyOperation( move );\n\n\treturn this;\n} );\n\nDeltaFactory.register( WrapDelta );\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/delta/wrapdelta.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/liverange\n */\n\nimport Range from './range';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * `LiveRange` is a type of {@link module:engine/model/range~Range Range}\n * that updates itself as {@link module:engine/model/document~Document document}\n * is changed through operations. It may be used as a bookmark.\n *\n * **Note:** Be very careful when dealing with `LiveRange`. Each `LiveRange` instance bind events that might\n * have to be unbound. Use {@link module:engine/model/liverange~LiveRange#detach detach} whenever you don't need `LiveRange` anymore.\n */\nexport default class LiveRange extends Range {\n\t/**\n\t * Creates a live range.\n\t *\n\t * @see module:engine/model/range~Range\n\t */\n\tconstructor( start, end ) {\n\t\tsuper( start, end );\n\n\t\tbindWithDocument.call( this );\n\t}\n\n\t/**\n\t * Unbinds all events previously bound by `LiveRange`. Use it whenever you don't need `LiveRange` instance\n\t * anymore (i.e. when leaving scope in which it was declared or before re-assigning variable that was\n\t * referring to it).\n\t */\n\tdetach() {\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * @see module:engine/model/range~Range.createIn\n\t * @static\n\t * @method module:engine/model/liverange~LiveRange.createIn\n\t * @param {module:engine/model/element~Element} element\n\t * @returns {module:engine/model/liverange~LiveRange}\n\t */\n\n\t/**\n\t * @see module:engine/model/range~Range.createFromPositionAndShift\n\t * @static\n\t * @method module:engine/model/liverange~LiveRange.createFromPositionAndShift\n\t * @param {module:engine/model/position~Position} position\n\t * @param {Number} shift\n\t * @returns {module:engine/model/liverange~LiveRange}\n\t */\n\n\t/**\n\t * @see module:engine/model/range~Range.createFromParentsAndOffsets\n\t * @static\n\t * @method module:engine/model/liverange~LiveRange.createFromParentsAndOffsets\n\t * @param {module:engine/model/element~Element} startElement\n\t * @param {Number} startOffset\n\t * @param {module:engine/model/element~Element} endElement\n\t * @param {Number} endOffset\n\t * @returns {module:engine/model/liverange~LiveRange}\n\t */\n\n\t/**\n\t * @see module:engine/model/range~Range.createFromRange\n\t * @static\n\t * @method module:engine/model/liverange~LiveRange.createFromRange\n\t * @param {module:engine/model/range~Range} range\n\t * @returns {module:engine/model/liverange~LiveRange}\n\t */\n\n\t/**\n\t * Fired when `LiveRange` instance is changed due to changes on {@link module:engine/model/document~Document}.\n\t *\n\t * @event change\n\t * @param {module:engine/model/range~Range} oldRange\n\t * Range with start and end position equal to start and end position of this live range before it got changed.\n\t */\n}\n\n/**\n * Binds this `LiveRange` to the {@link module:engine/model/document~Document document}\n * that owns this range's {@link module:engine/model/range~Range#root root}.\n *\n * @ignore\n * @private\n * @method module:engine/model/liverange~LiveRange#bindWithDocument\n */\nfunction bindWithDocument() {\n\t// Operation types that a range can be transformed by.\n\tconst supportedTypes = new Set( [ 'insert', 'move', 'remove', 'reinsert' ] );\n\n\tthis.listenTo(\n\t\tthis.root.document,\n\t\t'change',\n\t\t( event, type, changes, batch, deltaType ) => {\n\t\t\tif ( supportedTypes.has( type ) ) {\n\t\t\t\ttransform.call( this, type, deltaType, changes.range, changes.sourcePosition );\n\t\t\t}\n\t\t},\n\t\t{ priority: 'high' }\n\t);\n}\n\n/**\n * Updates this range accordingly to the updates applied to the model. Bases on change events.\n *\n * @ignore\n * @private\n * @method transform\n * @param {String} [changeType] Type of change applied to the model document.\n * @param {String} [deltaType] Type of delta which introduced the change.\n * @param {module:engine/model/range~Range} targetRange Range containing the result of applied change.\n * @param {module:engine/model/position~Position} [sourcePosition] Source position for move, remove and reinsert change types.\n */\nfunction transform( changeType, deltaType, targetRange, sourcePosition ) {\n\tconst howMany = targetRange.end.offset - targetRange.start.offset;\n\tlet targetPosition = targetRange.start;\n\n\tif ( changeType == 'move' ) {\n\t\t// Range._getTransformedByDocumentChange is expecting `targetPosition` to be \"before\" move\n\t\t// (before transformation). `targetRange.start` is already after the move happened.\n\t\t// We have to revert `targetPosition` to the state before the move.\n\t\ttargetPosition = targetPosition._getTransformedByInsertion( sourcePosition, howMany );\n\t}\n\n\tconst result = this._getTransformedByDocumentChange( changeType, deltaType, targetPosition, howMany, sourcePosition );\n\n\t// Decide whether moved part should be included in the range.\n\t//\n\t// First, this concerns only `move` change, because insert change includes inserted part always (changeType == 'move').\n\t// Second, this is a case only if moved range was intersecting with this range and was inserted into this range (result.length == 3).\n\tif ( changeType == 'move' && result.length == 3 ) {\n\t\t// `result[ 2 ]` is a \"common part\" of this range and moved range. We substitute that common part with the whole\n\t\t// `targetRange` because we want to include whole `targetRange` in this range.\n\t\tresult[ 2 ] = targetRange;\n\t}\n\n\tconst updated = Range.createFromRanges( result );\n\n\t// If anything changed, update the range and fire an event.\n\tif ( !updated.isEqual( this ) ) {\n\t\tconst oldRange = Range.createFromRange( this );\n\n\t\tthis.start = updated.start;\n\t\tthis.end = updated.end;\n\n\t\tthis.fire( 'change', oldRange );\n\t}\n}\n\nmix( LiveRange, EmitterMixin );\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/liverange.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/markeroperation\n */\n\nimport Operation from './operation';\nimport Range from '../range';\n\n/**\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class MarkerOperation extends Operation {\n\t/**\n\t * @param {String} name Marker name.\n\t * @param {module:engine/model/range~Range} oldRange Marker range before the change.\n\t * @param {module:engine/model/range~Range} newRange Marker range after the change.\n\t * @param {module:engine/model/markercollection~MarkerCollection} markers Marker collection on which change should be executed.\n\t * @param {Number} baseVersion {@link module:engine/model/document~Document#version} on which the operation can be applied.\n\t */\n\tconstructor( name, oldRange, newRange, markers, baseVersion ) {\n\t\tsuper( baseVersion );\n\n\t\t/**\n\t\t * Marker name.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.name = name;\n\n\t\t/**\n\t\t * Marker range before the change.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/range~Range}\n\t\t */\n\t\tthis.oldRange = oldRange ? Range.createFromRange( oldRange ) : null;\n\n\t\t/**\n\t\t * Marker range after the change.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/range~Range}\n\t\t */\n\t\tthis.newRange = newRange ? Range.createFromRange( newRange ) : null;\n\n\t\t/**\n\t\t * Marker collection on which change should be executed.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/markercollection~MarkerCollection}\n\t\t */\n\t\tthis._markers = markers;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\treturn 'marker';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t * @returns {module:engine/model/operation/markeroperation~MarkerOperation}\n\t */\n\tclone() {\n\t\treturn new MarkerOperation( this.name, this.oldRange, this.newRange, this._markers, this.baseVersion );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t * @returns {module:engine/model/operation/markeroperation~MarkerOperation}\n\t */\n\tgetReversed() {\n\t\treturn new MarkerOperation( this.name, this.newRange, this.oldRange, this._markers, this.baseVersion + 1 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\tconst type = this.newRange ? 'set' : 'remove';\n\n\t\tthis._markers[ type ]( this.name, this.newRange );\n\n\t\treturn { name: this.name, type };\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tdelete json._markers;\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'engine.model.operation.MarkerOperation';\n\t}\n\n\t/**\n\t * Creates `MarkerOperation` object from deserilized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/markeroperation~MarkerOperation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\treturn new MarkerOperation(\n\t\t\tjson.name,\n\t\t\tjson.oldRange ? Range.fromJSON( json.oldRange, document ) : null,\n\t\t\tjson.newRange ? Range.fromJSON( json.newRange, document ) : null,\n\t\t\tdocument.markers,\n\t\t\tjson.baseVersion\n\t\t);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/operation/markeroperation.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/reinsertoperation\n */\n\nimport MoveOperation from './moveoperation';\nimport RemoveOperation from './removeoperation';\n\n/**\n * Operation to reinsert previously removed nodes back to the non-graveyard root. This operation acts like\n * {@link module:engine/model/operation/moveoperation~MoveOperation} but it returns\n * {@link module:engine/model/operation/removeoperation~RemoveOperation} when reversed\n * and fires different change event.\n */\nexport default class ReinsertOperation extends MoveOperation {\n\t/**\n\t * Position where nodes will be re-inserted.\n\t *\n\t * @type {module:engine/model/position~Position}\n\t */\n\tget position() {\n\t\treturn this.targetPosition;\n\t}\n\n\t/**\n\t * @param {module:engine/model/position~Position} pos\n\t */\n\tset position( pos ) {\n\t\tthis.targetPosition = pos;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\treturn 'reinsert';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t * @returns {module:engine/model/operation/removeoperation~RemoveOperation}\n\t */\n\tgetReversed() {\n\t\tconst removeOp = new RemoveOperation( this.targetPosition, this.howMany, this.baseVersion + 1 );\n\n\t\t// Make sure that nodes are put back into the `$graveyardHolder` from which they got reinserted.\n\t\tremoveOp.targetPosition = this.sourcePosition;\n\t\tremoveOp._needsHolderElement = false;\n\n\t\treturn removeOp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'engine.model.operation.ReinsertOperation';\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/operation/reinsertoperation.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/renameoperation\n */\n\nimport Operation from './operation';\nimport Element from '../element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Position from '../position';\n\n/**\n * Operation to change element's name.\n *\n * Using this class you can change element's name.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class RenameOperation extends Operation {\n\t/**\n\t * Creates an operation that changes element's name.\n\t *\n\t * @param {module:engine/model/position~Position} position Position before an element to change.\n\t * @param {String} oldName Current name of the element.\n\t * @param {String} newName New name for the element.\n\t * @param {Number} baseVersion {@link module:engine/model/document~Document#version} on which the operation can be applied.\n\t */\n\tconstructor( position, oldName, newName, baseVersion ) {\n\t\tsuper( baseVersion );\n\n\t\t/**\n\t\t * Position before an element to change.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/renameoperation~RenameOperation#position\n\t\t */\n\t\tthis.position = position;\n\n\t\t/**\n\t\t * Current name of the element.\n\t\t *\n\t\t * @member {String} module:engine/model/operation/renameoperation~RenameOperation#oldName\n\t\t */\n\t\tthis.oldName = oldName;\n\n\t\t/**\n\t\t * New name for the element.\n\t\t *\n\t\t * @member {String} module:engine/model/operation/renameoperation~RenameOperation#newName\n\t\t */\n\t\tthis.newName = newName;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\treturn 'rename';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t * @returns {module:engine/model/operation/renameoperation~RenameOperation}\n\t */\n\tclone() {\n\t\treturn new RenameOperation( Position.createFromPosition( this.position ), this.oldName, this.newName, this.baseVersion );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t * @returns {module:engine/model/operation/renameoperation~RenameOperation}\n\t */\n\tgetReversed() {\n\t\treturn new RenameOperation( Position.createFromPosition( this.position ), this.newName, this.oldName, this.baseVersion + 1 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\t// Validation.\n\t\tconst element = this.position.nodeAfter;\n\n\t\tif ( !( element instanceof Element ) ) {\n\t\t\t/**\n\t\t\t * Given position is invalid or node after it is not instance of Element.\n\t\t\t *\n\t\t\t * @error rename-operation-wrong-position\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'rename-operation-wrong-position: Given position is invalid or node after it is not an instance of Element.'\n\t\t\t);\n\t\t} else if ( element.name !== this.oldName ) {\n\t\t\t/**\n\t\t\t * Element to change has different name than operation's old name.\n\t\t\t *\n\t\t\t * @error rename-operation-wrong-name\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'rename-operation-wrong-name: Element to change has different name than operation\\'s old name.'\n\t\t\t);\n\t\t}\n\n\t\t// If value to set is same as old value, don't do anything.\n\t\t// By not returning `undefined`, this operation will be seen as `NoOperation` - that means\n\t\t// that it won't generate any events, etc. `RenameOperation` with such parameters may be\n\t\t// a result of Operational Transformation.\n\t\tif ( this.oldName == this.newName ) {\n\t\t\treturn;\n\t\t}\n\n\t\telement.name = this.newName;\n\n\t\treturn { element, oldName: this.oldName };\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'engine.model.operation.RenameOperation';\n\t}\n\n\t/**\n\t * Creates `RenameOperation` object from deserialized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/attributeoperation~AttributeOperation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\treturn new RenameOperation( Position.fromJSON( json.position, document ), json.oldName, json.newName, json.baseVersion );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/operation/renameoperation.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/rootattributeoperation\n */\n\nimport Operation from './operation';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Operation to change root element's attribute. Using this class you can add, remove or change value of the attribute.\n *\n * This operation is needed, because root elements can't be changed through\n * @link module:engine/model/operation/attributeoperation~AttributeOperation}.\n * It is because {@link module:engine/model/operation/attributeoperation~AttributeOperation}\n * requires a range to change and root element can't\n * be a part of range because every {@link module:engine/model/position~Position} has to be inside a root.\n * {@link module:engine/model/position~Position} can't be created before a root element.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class RootAttributeOperation extends Operation {\n\t/**\n\t * Creates an operation that changes, removes or adds attributes on root element.\n\t *\n\t * @see module:engine/model/operation/attributeoperation~AttributeOperation\n\t * @param {module:engine/model/rootelement~RootElement} root Root element to change.\n\t * @param {String} key Key of an attribute to change or remove.\n\t * @param {*} oldValue Old value of the attribute with given key or `null` if adding a new attribute.\n\t * @param {*} newValue New value to set for the attribute. If `null`, then the operation just removes the attribute.\n\t * @param {Number} baseVersion {@link module:engine/model/document~Document#version} on which the operation can be applied.\n\t */\n\tconstructor( root, key, oldValue, newValue, baseVersion ) {\n\t\tsuper( baseVersion );\n\n\t\t/**\n\t\t * Root element to change.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/rootelement~RootElement}\n\t\t */\n\t\tthis.root = root;\n\n\t\t/**\n\t\t * Key of an attribute to change or remove.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.key = key;\n\n\t\t/**\n\t\t * Old value of the attribute with given key or `null` if adding a new attribute.\n\t\t *\n\t\t * @readonly\n\t\t * @member {*}\n\t\t */\n\t\tthis.oldValue = oldValue;\n\n\t\t/**\n\t\t * New value to set for the attribute. If `null`, then the operation just removes the attribute.\n\t\t *\n\t\t * @readonly\n\t\t * @member {*}\n\t\t */\n\t\tthis.newValue = newValue;\n\t}\n\n\tget type() {\n\t\tif ( this.oldValue === null ) {\n\t\t\treturn 'addRootAttribute';\n\t\t} else if ( this.newValue === null ) {\n\t\t\treturn 'removeRootAttribute';\n\t\t} else {\n\t\t\treturn 'changeRootAttribute';\n\t\t}\n\t}\n\n\t/**\n\t * @returns {module:engine/model/operation/rootattributeoperation~RootAttributeOperation}\n\t */\n\tclone() {\n\t\treturn new RootAttributeOperation( this.root, this.key, this.oldValue, this.newValue, this.baseVersion );\n\t}\n\n\t/**\n\t * @returns {module:engine/model/operation/rootattributeoperation~RootAttributeOperation}\n\t */\n\tgetReversed() {\n\t\treturn new RootAttributeOperation( this.root, this.key, this.newValue, this.oldValue, this.baseVersion + 1 );\n\t}\n\n\t_execute() {\n\t\tif ( this.oldValue !== null && this.root.getAttribute( this.key ) !== this.oldValue ) {\n\t\t\t/**\n\t\t\t * The attribute which should be removed does not exists for the given node.\n\t\t\t *\n\t\t\t * @error rootattribute-operation-wrong-old-value\n\t\t\t * @param {module:engine/model/rootelement~RootElement} root\n\t\t\t * @param {String} key\n\t\t\t * @param {*} value\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'rootattribute-operation-wrong-old-value: Changed node has different attribute value than operation\\'s ' +\n\t\t\t\t'old attribute value.',\n\t\t\t\t{ root: this.root, key: this.key }\n\t\t\t);\n\t\t}\n\n\t\tif ( this.oldValue === null && this.newValue !== null && this.root.hasAttribute( this.key ) ) {\n\t\t\t/**\n\t\t\t * The attribute with given key already exists for the given node.\n\t\t\t *\n\t\t\t * @error rootattribute-operation-attribute-exists\n\t\t\t * @param {module:engine/model/rootelement~RootElement} root\n\t\t\t * @param {String} key\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'rootattribute-operation-attribute-exists: The attribute with given key already exists.',\n\t\t\t\t{ root: this.root, key: this.key }\n\t\t\t);\n\t\t}\n\n\t\tif ( this.newValue !== null ) {\n\t\t\tthis.root.setAttribute( this.key, this.newValue );\n\t\t} else {\n\t\t\tthis.root.removeAttribute( this.key );\n\t\t}\n\n\t\treturn { root: this.root, key: this.key, oldValue: this.oldValue, newValue: this.newValue };\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'engine.model.operation.RootAttributeOperation';\n\t}\n\n\t/**\n\t * Creates RootAttributeOperation object from deserilized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/rootattributeoperation~RootAttributeOperation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\tif ( !document.hasRoot( json.root ) ) {\n\t\t\t/**\n\t\t\t * Cannot create RootAttributeOperation for document. Root with specified name does not exist.\n\t\t\t *\n\t\t\t * @error rootattributeoperation-fromjson-no-root\n\t\t\t * @param {String} rootName\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'rootattribute-operation-fromjson-no-root: Cannot create RootAttributeOperation. Root with specified name does not exist.',\n\t\t\t\t{ rootName: json }\n\t\t\t);\n\t\t}\n\n\t\treturn new RootAttributeOperation( document.getRoot( json.root ), json.key, json.oldValue, json.newValue, json.baseVersion );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/operation/rootattributeoperation.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/attributeelement\n */\n\nimport Element from './element';\n\n// Default attribute priority.\nconst DEFAULT_PRIORITY = 10;\n\n/**\n * Attributes are elements which define document presentation. They are mostly elements like `<b>` or `<span>`.\n * Attributes can be broken and merged by the {@link module:engine/view/writer~writer view writer}.\n *\n * Editing engine does not define fixed HTML DTD. This is why the type of the {@link module:engine/view/element~Element} need to\n * be defined by the feature developer. Creating an element you should use {@link module:engine/view/containerelement~ContainerElement}\n * class or `AttributeElement`.\n *\n * @extends module:engine/view/element~Element\n */\nexport default class AttributeElement extends Element {\n\t/**\n\t * Creates a attribute element.\n\t *\n\t * @see module:engine/view/element~Element\n\t */\n\tconstructor( name, attrs, children ) {\n\t\tsuper( name, attrs, children );\n\n\t\t/**\n\t\t * Element priority. Attributes have to have the same priority to be\n\t\t * {@link module:engine/view/element~Element#isSimilar similar}. Setting different priorities on similar\n \t\t * nodes may prevent merging, e.g. two `<abbr>` nodes next each other shouldn't be merged.\n\t\t *\n\t\t * @member {Number}\n\t\t */\n\t\tthis.priority = DEFAULT_PRIORITY;\n\n\t\t/**\n\t\t * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n\t\t *\n\t\t * @method #getFillerOffset\n\t\t * @returns {Number|null} Block filler offset or `null` if block filler is not needed.\n\t\t */\n\t\tthis.getFillerOffset = getFillerOffset;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tis( type, name = null ) {\n\t\tif ( !name ) {\n\t\t\treturn type == 'attributeElement' || super.is( type );\n\t\t} else {\n\t\t\treturn ( type == 'attributeElement' && name == this.name ) || super.is( type, name );\n\t\t}\n\t}\n\n\t/**\n\t * Clones provided element with priority.\n\t *\n\t * @param {Boolean} deep If set to `true` clones element and all its children recursively. When set to `false`,\n\t * element will be cloned without any children.\n\t * @returns {module:engine/view/attributeelement~AttributeElement} Clone of this element.\n\t */\n\tclone( deep ) {\n\t\tconst cloned = super.clone( deep );\n\n\t\t// Clone priority too.\n\t\tcloned.priority = this.priority;\n\n\t\treturn cloned;\n\t}\n\n\t/**\n\t * Checks if this element is similar to other element.\n\t * Both elements should have the same name, attributes and priority to be considered as similar.\n\t * Two similar elements can contain different set of children nodes.\n\t *\n\t * @param {module:engine/view/element~Element} otherElement\n\t * @returns {Boolean}\n\t */\n\tisSimilar( otherElement ) {\n\t\treturn super.isSimilar( otherElement ) && this.priority == otherElement.priority;\n\t}\n}\n\n/**\n * Default attribute priority.\n *\n * @member {Number} module:engine/view/attributeelement~AttributeElement.DEFAULT_PRIORITY\n */\nAttributeElement.DEFAULT_PRIORITY = DEFAULT_PRIORITY;\n\n// Returns block {@link module:engine/view/filler~Filler filler} offset or `null` if block filler is not needed.\n//\n// @returns {Number|null} Block filler offset or `null` if block filler is not needed.\nfunction getFillerOffset() {\n\t// <b>foo</b> does not need filler.\n\tif ( this.childCount ) {\n\t\treturn null;\n\t}\n\n\tlet element = this.parent;\n\n\t// <p><b></b></p> needs filler -> <p><b><br></b></p>\n\twhile ( element && element.is( 'attributeElement' ) ) {\n\t\tif ( element.childCount > 1 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\telement = element.parent;\n\t}\n\n\tif ( !element || element.childCount > 1 ) {\n\t\treturn null;\n\t}\n\n\treturn 0;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/view/attributeelement.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/documentfragment\n */\n\nimport Text from './text';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\n\n/**\n * DocumentFragment class.\n */\nexport default class DocumentFragment {\n\t/**\n\t * Creates new DocumentFragment instance.\n\t *\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children] List of nodes to be inserted into\n\t * created document fragment.\n\t */\n\tconstructor( children ) {\n\t\t/**\n\t\t * Array of child nodes.\n\t\t *\n\t\t * @protected\n\t\t * @member {Array.<module:engine/view/element~Element>} module:engine/view/documentfragment~DocumentFragment#_children\n\t\t */\n\t\tthis._children = [];\n\n\t\tif ( children ) {\n\t\t\tthis.insertChildren( 0, children );\n\t\t}\n\t}\n\n\t/**\n\t * Iterates over nodes added to this DocumentFragment.\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this._children[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Number of child nodes in this document fragment.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget childCount() {\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Is `true` if there are no nodes inside this document fragment, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isEmpty() {\n\t\treturn this.childCount === 0;\n\t}\n\n\t/**\n\t * Artificial root of `DocumentFragment`. Returns itself. Added for compatibility reasons.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Artificial parent of `DocumentFragment`. Returns `null`. Added for compatibility reasons.\n\t *\n\t * @readonly\n\t * @type {null}\n\t */\n\tget parent() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * Checks whether given view tree object is of given type.\n\t *\n\t * Read more in {@link module:engine/view/node~Node#is}.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type == 'documentFragment';\n\t}\n\n\t/**\n\t * {@link module:engine/view/documentfragment~DocumentFragment#insertChildren Insert} a child node or a list of child nodes at the end\n\t * and sets the parent of these nodes to this fragment.\n\t *\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} nodes Node or the list of nodes to be inserted.\n\t * @returns {Number} Number of appended nodes.\n\t */\n\tappendChildren( nodes ) {\n\t\treturn this.insertChildren( this.childCount, nodes );\n\t}\n\n\t/**\n\t * Gets child at the given index.\n\t *\n\t * @param {Number} index Index of child.\n\t * @returns {module:engine/view/node~Node} Child node.\n\t */\n\tgetChild( index ) {\n\t\treturn this._children[ index ];\n\t}\n\n\t/**\n\t * Gets index of the given child node. Returns `-1` if child node is not found.\n\t *\n\t * @param {module:engine/view/node~Node} node Child node.\n\t * @returns {Number} Index of the child node.\n\t */\n\tgetChildIndex( node ) {\n\t\treturn this._children.indexOf( node );\n\t}\n\n\t/**\n\t * Gets child nodes iterator.\n\t *\n\t * @returns {Iterable.<module:engine/view/node~Node>} Child nodes iterator.\n\t */\n\tgetChildren() {\n\t\treturn this._children[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Inserts a child node or a list of child nodes on the given index and sets the parent of these nodes to\n\t * this fragment.\n\t *\n\t * @param {Number} index Position where nodes should be inserted.\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} nodes Node or list of nodes to be inserted.\n\t * @returns {Number} Number of inserted nodes.\n\t */\n\tinsertChildren( index, nodes ) {\n\t\tthis._fireChange( 'children', this );\n\t\tlet count = 0;\n\n\t\tnodes = normalize( nodes );\n\n\t\tfor ( const node of nodes ) {\n\t\t\tnode.parent = this;\n\n\t\t\tthis._children.splice( index, 0, node );\n\t\t\tindex++;\n\t\t\tcount++;\n\t\t}\n\n\t\treturn count;\n\t}\n\n\t/**\n\t * Removes number of child nodes starting at the given index and set the parent of these nodes to `null`.\n\t *\n\t * @param {Number} index Number of the first node to remove.\n\t * @param {Number} [howMany=1] Number of nodes to remove.\n\t * @returns {Array.<module:engine/view/node~Node>} The array of removed nodes.\n\t */\n\tremoveChildren( index, howMany = 1 ) {\n\t\tthis._fireChange( 'children', this );\n\n\t\tfor ( let i = index; i < index + howMany; i++ ) {\n\t\t\tthis._children[ i ].parent = null;\n\t\t}\n\n\t\treturn this._children.splice( index, howMany );\n\t}\n\n\t/**\n\t * Fires `change` event with given type of the change.\n\t *\n\t * @private\n\t * @param {module:engine/view/document~ChangeType} type Type of the change.\n\t * @param {module:engine/view/node~Node} node Changed node.\n\t * @fires module:engine/view/node~Node#change\n\t */\n\t_fireChange( type, node ) {\n\t\tthis.fire( 'change:' + type, node );\n\t}\n}\n\nmix( DocumentFragment, EmitterMixin );\n\n// Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/view/node~Node|Iterable.<String|module:engine/view/node~Node>}\n// @return {Iterable.<module:engine/view/node~Node>}\nfunction normalize( nodes ) {\n\t// Separate condition because string is iterable.\n\tif ( typeof nodes == 'string' ) {\n\t\treturn [ new Text( nodes ) ];\n\t}\n\n\tif ( !isIterable( nodes ) ) {\n\t\tnodes = [ nodes ];\n\t}\n\n\t// Array.from to enable .map() on non-arrays.\n\treturn Array.from( nodes )\n\t\t.map( node => {\n\t\t\treturn typeof node == 'string' ? new Text( node ) : node;\n\t\t} );\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/view/documentfragment.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/observer/domeventdata\n */\n\nimport extend from '@ckeditor/ckeditor5-utils/src/lib/lodash/extend';\n\n/**\n * Information about a DOM event in context of the {@link module:engine/view/document~Document}.\n * It wraps the native event, which usually should not be used as the wrapper contains\n * additional data (like key code for keyboard events).\n */\nexport default class DomEventData {\n\t/**\n\t * @param {module:engine/view/document~Document} document The instance of the tree view Document.\n\t * @param {Event} domEvent The DOM event.\n\t * @param {Object} [additionalData] Additional properties that the instance should contain.\n\t */\n\tconstructor( document, domEvent, additionalData ) {\n\t\t/**\n\t\t * The instance of the document.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/document~Document} module:engine/view/observer/observer~Observer.DomEvent#view\n\t\t */\n\t\tthis.document = document;\n\n\t\t/**\n\t\t * The DOM event.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Event} module:engine/view/observer/observer~Observer.DomEvent#domEvent\n\t\t */\n\t\tthis.domEvent = domEvent;\n\n\t\t/**\n\t\t * The DOM target.\n\t\t *\n\t\t * @readonly\n\t\t * @member {HTMLElement} module:engine/view/observer/observer~Observer.DomEvent#target\n\t\t */\n\t\tthis.domTarget = domEvent.target;\n\n\t\textend( this, additionalData );\n\t}\n\n\t/**\n\t * The tree view element representing the target.\n\t *\n\t * @readonly\n\t * @type module:engine/view/element~Element\n\t */\n\tget target() {\n\t\treturn this.document.domConverter.getCorrespondingViewElement( this.domTarget );\n\t}\n\n\t/**\n\t * Prevents the native's event default action.\n\t */\n\tpreventDefault() {\n\t\tthis.domEvent.preventDefault();\n\t}\n\n\t/**\n\t * Stops native event propagation.\n\t */\n\tstopPropagation() {\n\t\tthis.domEvent.stopPropagation();\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/view/observer/domeventdata.js","/**\n * @license Copyright (c) 2003-2016, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/focuscycler\n */\n\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\n\n/**\n * Helps cycling over focusable views in a {@link module:ui/viewcollection~ViewCollection}\n * when the focus is tracked by {@link module:utils/focustracker~FocusTracker} instance.\n *\n * It requires a collection of focusable views and associated focus tracker:\n *\n *\t\tconst focusables = new ViewCollection();\n *\t\tconst focusTracker = new FocusTracker();\n *\n *\t\t// Add focusables to the focus tracker.\n *\t\tfocusTracker.add( ... );\n *\n * The cycler can be used manually:\n *\n *\t\tconst cycler = new FocusCycler( { focusables, focusTracker } );\n *\n *\t\t// Will focus the first forusable view in #focusables.\n *\t\tcycler.focusFirst();\n *\n *\t\t// Will log next focusable item in #focusables.\n *\t\tconsole.log( cycler.next );\n *\n * or it can be used as an automated, keystroke–detecting utility:\n *\n *\t\tconst keystrokeHandler = new KeystrokeHandler();\n *\n *\t\t// Activate the keystroke handler.\n *\t\tkeystrokeHandler.listenTo( sourceOfEvents );\n *\n *\t\tconst cycler = new FocusCycler( {\n *\t\t\tfocusables, focusTracker, keystrokeHandler,\n *\t\t\tactions: {\n *\t\t\t\t// When arrowup of arrowleft is detected by the #keystrokeHandler\n *\t\t\t\t// focusPrevious() will be called by the cycler.\n *\t\t\t\tfocusPrevious: [ 'arrowup', 'arrowleft' ],\n *\t\t\t}\n *\t\t} );\n */\nexport default class FocusCycler {\n\t/**\n\t * Creates an instance of the focus cycler utility.\n\t *\n\t * @param {Object} options Configuration options.\n\t * @param {module:utils/collection~Collection|Object} options.focusables\n\t * @param {module:utils/focustracker~FocusTracker} options.focusTracker\n\t * @param {module:utils/keystrokehandler~KeystrokeHandler} [options.keystrokeHandler]\n\t * @param {Object} [options.actions]\n\t */\n\tconstructor( options ) {\n\t\tObject.assign( this, options );\n\n\t\t/**\n\t\t * A view collection the cycler operates on.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/collection~Collection} #focusables\n\t\t */\n\n\t\t/**\n\t\t * A focus tracker instance that cycler uses to determine focus\n\t\t * state in {@link #focusables}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker} #focusTracker\n\t\t */\n\n\t\t/**\n\t\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler} #keystrokeHandler\n\t\t */\n\n\t\t/**\n\t\t * Actions that the cycler can take when a keystroke is pressed. Requires\n\t\t * `options.keystrokeHandler` to be passed and working. When an action is\n\t\t * performed, the event the keystroke fired is will be `preventDefault` and\n\t\t * `stopPropagation` in DOM.\n\t\t *\n\t\t *\t\tactions: {\n\t\t *\t\t\t// Will call #focusPrevious() when arrowleft or arrowup is pressed.\n\t\t *\t\t\tfocusPrevious: [ 'arrowleft', 'arrowup' ],\n\t\t *\n\t\t *\t\t\t// Will call #focusNext() when arrowdown is pressed.\n\t\t *\t\t\tfocusNext: 'arrowdown'\n\t\t *\t\t}\n\t\t *\n\t\t * @readonly\n\t\t * @member {Object} #actions\n\t\t */\n\n\t\tif ( options.actions && options.keystrokeHandler ) {\n\t\t\tfor ( const methodName in options.actions ) {\n\t\t\t\tlet actions = options.actions[ methodName ];\n\n\t\t\t\tif ( typeof actions == 'string' ) {\n\t\t\t\t\tactions = [ actions ];\n\t\t\t\t}\n\n\t\t\t\tfor ( const keystroke of actions ) {\n\t\t\t\t\toptions.keystrokeHandler.set( keystroke, ( data, cancel ) => {\n\t\t\t\t\t\tthis[ methodName ]();\n\t\t\t\t\t\tcancel();\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns the first focusable view in {@link #focusables}.\n\t * `null` if there's none.\n\t *\n\t * @readonly\n\t * @member {module:ui/view~View|null} #first\n\t */\n\tget first() {\n\t\treturn this.focusables.find( isFocusable ) || null;\n\t}\n\n\t/**\n\t * Returns the last focusable view in {@link #focusables}.\n\t * `null` if there's none.\n\t *\n\t * @readonly\n\t * @member {module:ui/view~View|null} #last\n\t */\n\tget last() {\n\t\treturn this.focusables.filter( isFocusable ).slice( -1 )[ 0 ] || null;\n\t}\n\n\t/**\n\t * Returns the next focusable view in {@link #focusables} based on {@link #current}.\n\t * `null` if there's none.\n\t *\n\t * @readonly\n\t * @member {module:ui/view~View|null} #next\n\t */\n\tget next() {\n\t\treturn this._getFocusableItem( 1 );\n\t}\n\n\t/**\n\t * Returns the previous focusable view in {@link #focusables} based on {@link #current}.\n\t * `null` if there's none.\n\t *\n\t * @readonly\n\t * @member {module:ui/view~View|null} #previous\n\t */\n\tget previous() {\n\t\treturn this._getFocusableItem( -1 );\n\t}\n\n\t/**\n\t * An index of the view in the {@link #focusables} which is focused according\n\t * to {@link #focusTracker}. `null` when there's no such view.\n\t *\n\t * @readonly\n\t * @member {Number|null} #current\n\t */\n\tget current() {\n\t\tlet index = null;\n\n\t\t// There's no focused view in the focusables.\n\t\tif ( this.focusTracker.focusedElement === null ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tthis.focusables.find( ( view, viewIndex ) => {\n\t\t\tconst focused = view.element === this.focusTracker.focusedElement;\n\n\t\t\tif ( focused ) {\n\t\t\t\tindex = viewIndex;\n\t\t\t}\n\n\t\t\treturn focused;\n\t\t} );\n\n\t\treturn index;\n\t}\n\n\t/**\n\t * Focuses the {@link #first} item.\n\t */\n\tfocusFirst() {\n\t\tthis._focus( this.first );\n\t}\n\n\t/**\n\t * Focuses the {@link #last} item.\n\t */\n\tfocusLast() {\n\t\tthis._focus( this.last );\n\t}\n\n\t/**\n\t * Focuses the {@link #next} item.\n\t */\n\tfocusNext() {\n\t\tthis._focus( this.next );\n\t}\n\n\t/**\n\t * Focuses the {@link #previous} item.\n\t */\n\tfocusPrevious() {\n\t\tthis._focus( this.previous );\n\t}\n\n\t/**\n\t * Focuses the given view, if exists.\n\t *\n\t * @protected\n\t * @param {module:ui/view~View} view\n\t */\n\t_focus( view ) {\n\t\tif ( view ) {\n\t\t\tview.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Returns the next/previous focusable view in {@link #focusables} with respect\n\t * to {@link #current}.\n\t *\n\t * @protected\n\t * @param {Number} step Either `1` for checking forward of {@link #current} or\n\t * `-1` for checking backwards.\n\t * @returns {module:ui/view~View|null}\n\t */\n\t_getFocusableItem( step ) {\n\t\t// Cache for speed.\n\t\tconst current = this.current;\n\t\tconst collectionLength = this.focusables.length;\n\n\t\tif ( !collectionLength ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Start from the beginning if no view is focused.\n\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/206\n\t\tif ( current === null ) {\n\t\t\treturn this[ step === 1 ? 'first' : 'last' ];\n\t\t}\n\n\t\t// Cycle in both directions.\n\t\tlet index = ( current + collectionLength + step ) % collectionLength;\n\n\t\tdo {\n\t\t\tconst view = this.focusables.get( index );\n\n\t\t\t// TODO: Check if view is visible.\n\t\t\tif ( isFocusable( view ) ) {\n\t\t\t\treturn view;\n\t\t\t}\n\n\t\t\t// Cycle in both directions.\n\t\t\tindex = ( index + collectionLength + step ) % collectionLength;\n\t\t} while ( index !== current );\n\n\t\treturn null;\n\t}\n}\n\n// Checks whether an view is focusable.\n//\n// @private\n// @param {module:ui/view~View} view A view to be checked.\n// @returns {Boolean}\nfunction isFocusable( view ) {\n\treturn !!( view.focus && global.window.getComputedStyle( view.element ).display != 'none' );\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-ui/src/focuscycler.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/viewcollection\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * Collects {@link module:ui/view~View} instances.\n *\n * @extends module:utils/collection~Collection\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class ViewCollection extends Collection {\n\t/**\n\t * Creates a new {@link module:ui/viewcollection~ViewCollection} instance.\n\t *\n\t * @param {module:utils/locale~Locale} [locale] The {@link module:core/editor~Editor editor's locale} instance.\n\t */\n\tconstructor( locale ) {\n\t\tsuper( {\n\t\t\t// An #id Number attribute should be legal and not break the `ViewCollection` instance.\n\t\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/93\n\t\t\tidProperty: 'viewUid'\n\t\t} );\n\n\t\t// Handle {@link module:ui/view~View#element} in DOM when a new view is added to the collection.\n\t\tthis.on( 'add', ( evt, view, index ) => {\n\t\t\tif ( view.element && this._parentElement ) {\n\t\t\t\tthis._parentElement.insertBefore( view.element, this._parentElement.children[ index ] );\n\t\t\t}\n\t\t} );\n\n\t\t// Handle {@link module:ui/view~View#element} in DOM when a view is removed from the collection.\n\t\tthis.on( 'remove', ( evt, view ) => {\n\t\t\tif ( view.element && this._parentElement ) {\n\t\t\t\tview.element.remove();\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * The {@link module:core/editor~Editor editor's locale} instance.\n\t\t *\n\t\t * @member {module:utils/locale~Locale}\n\t\t */\n\t\tthis.locale = locale;\n\n\t\t/**\n\t\t * Set to `true` once the parent's {@link module:ui/view~View#ready} is true, which means\n\t\t * that all the views in the collection are also ready (which can be asynchronous).\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #ready\n\t\t */\n\t\tthis.set( 'ready', false );\n\n\t\t/**\n\t\t * A parent element within which child views are rendered and managed in DOM.\n\t\t *\n\t\t * @protected\n\t\t * @member {HTMLElement}\n\t\t */\n\t\tthis._parentElement = null;\n\n\t\t/**\n\t\t * A set containing promises created by {@link #add}. If the {@link #destroy} is called\n\t\t * before the child views' {@link module:ui/view~View#init} are completed,\n\t\t * {@link #destroy} will wait until all the promises are resolved.\n\t\t *\n\t\t * @private\n\t\t * @member {Set}\n\t\t */\n\t\tthis._addPromises = new Set();\n\t}\n\n\t/**\n\t * Initializes child views by injecting {@link module:ui/view~View#element} into DOM\n\t * and calling {@link module:ui/view~View#init}.\n\t *\n\t * @returns {Promise} A Promise resolved when the initialization process is finished.\n\t */\n\tinit() {\n\t\tif ( this.ready ) {\n\t\t\t/**\n\t\t\t * This ViewCollection has already been initialized.\n\t\t\t *\n\t\t\t * @error ui-viewcollection-init-reinit\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'ui-viewcollection-init-reinit: This ViewCollection has already been initialized.' );\n\t\t}\n\n\t\treturn Promise.all( this.map( v => v.init() ) )\n\t\t\t.then( () => {\n\t\t\t\tthis.ready = true;\n\t\t\t} );\n\t}\n\n\t/**\n\t * Destroys the view collection along with child views.\n\t *\n\t * @returns {Promise} A Promise resolved when the destruction process is finished.\n\t */\n\tdestroy() {\n\t\t// Wait for all #add() promises to resolve before destroying the children.\n\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/203\n\t\treturn Promise.all( this._addPromises )\n\t\t\t// Then begin the process of destroying the children.\n\t\t\t.then( () => {\n\t\t\t\treturn Promise.all( this.map( v => v.destroy() ) );\n\t\t\t} );\n\t}\n\n\t/**\n\t * Adds a child view to the collection. If {@link module:ui/viewcollection~ViewCollection#ready}, the child view\n\t * is also initialized when added.\n\t *\n\t * @param {module:ui/view~View} view A child view.\n\t * @param {Number} [index] Index at which the child will be added to the collection.\n\t * @returns {Promise} A Promise resolved when the child {@link module:ui/view~View#init} is done.\n\t */\n\tadd( view, index ) {\n\t\tsuper.add( view, index );\n\n\t\t// {@link module:ui/view~View#init} returns `Promise`.\n\t\tlet promise = Promise.resolve();\n\n\t\tif ( this.ready && !view.ready ) {\n\t\t\tpromise = promise\n\t\t\t\t.then( () => view.init() )\n\t\t\t\t// The view is ready. There's no point in storing the promise any longer.\n\t\t\t\t.then( () => this._addPromises.delete( promise ) );\n\n\t\t\t// Store the promise so it can be respected (and resolved) before #destroy()\n\t\t\t// starts destroying the child view.\n\t\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/203\n\t\t\tthis._addPromises.add( promise );\n\t\t}\n\n\t\treturn promise;\n\t}\n\n\t/**\n\t * Sets {@link #_parentElement} of this collection.\n\t *\n\t * @param {HTMLElement} element A new parent.\n\t */\n\tsetParent( elementOrDocFragment ) {\n\t\tthis._parentElement = elementOrDocFragment;\n\t}\n\n\t/**\n\t * Delegates selected events coming from within the collection to desired {@link module:utils/emittermixin~EmitterMixin}.\n\t *\n\t * For instance:\n\t *\n\t *\t\tconst viewA = new View();\n\t *\t\tconst viewB = new View();\n\t *\t\tconst viewC = new View();\n\t *\n\t *\t\tconst views = parentView.createCollection();\n\t *\n\t *\t\tviews.delegate( 'eventX' ).to( viewB );\n\t *\t\tviews.delegate( 'eventX', 'eventY' ).to( viewC );\n\t *\n\t *\t\tviews.add( viewA );\n\t *\n\t * then `eventX` is delegated (fired by) `viewB` and `viewC` along with `customData`:\n\t *\n\t *\t\tviewA.fire( 'eventX', customData );\n\t *\n\t * and `eventY` is delegated (fired by) `viewC` along with `customData`:\n\t *\n\t *\t\tviewA.fire( 'eventY', customData );\n\t *\n\t * See {@link module:utils/emittermixin~EmitterMixin#delegate}.\n\t *\n\t * @param {...String} events {@link module:ui/view~View} event names to be delegated to another {@link\n\t * module:utils/emittermixin~EmitterMixin}.\n\t * @returns {module:ui/viewcollection~ViewCollection#delegate.to}\n\t */\n\tdelegate( ...events ) {\n\t\tif ( !events.length || !isStringArray( events ) ) {\n\t\t\t/**\n\t\t\t * All event names must be strings.\n\t\t\t *\n\t\t\t * @error ui-viewcollection-delegate-wrong-events\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'ui-viewcollection-delegate-wrong-events: All event names must be strings.' );\n\t\t}\n\n\t\treturn {\n\t\t\t/**\n\t\t\t * Selects destination for {@link module:utils/emittermixin~EmitterMixin#delegate} events.\n\t\t\t *\n\t\t\t * @memberOf module:ui/viewcollection~ViewCollection#delegate\n\t\t\t * @function module:ui/viewcollection~ViewCollection#delegate.to\n\t\t\t * @param {module:utils/emittermixin~EmitterMixin} dest An `EmitterMixin` instance which is\n\t\t\t * the destination for delegated events.\n\t\t\t */\n\t\t\tto: dest => {\n\t\t\t\t// Activate delegating on existing views in this collection.\n\t\t\t\tfor ( const view of this ) {\n\t\t\t\t\tfor ( const evtName of events ) {\n\t\t\t\t\t\tview.delegate( evtName ).to( dest );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Activate delegating on future views in this collection.\n\t\t\t\tthis.on( 'add', ( evt, view ) => {\n\t\t\t\t\tfor ( const evtName of events ) {\n\t\t\t\t\t\tview.delegate( evtName ).to( dest );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\t// Deactivate delegating when view is removed from this collection.\n\t\t\t\tthis.on( 'remove', ( evt, view ) => {\n\t\t\t\t\tfor ( const evtName of events ) {\n\t\t\t\t\t\tview.stopDelegating( evtName, dest );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t};\n\t}\n}\n\nmix( Collection, ObservableMixin );\n\n// Check if all entries of the array are of `String` type.\n//\n// @private\n// @param {Array} arr An array to be checked.\n// @returns {Boolean}\nfunction isStringArray( arr ) {\n\treturn arr.every( a => typeof a == 'string' );\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-ui/src/viewcollection.js","import mapCacheClear from './_mapCacheClear';\nimport mapCacheDelete from './_mapCacheDelete';\nimport mapCacheGet from './_mapCacheGet';\nimport mapCacheHas from './_mapCacheHas';\nimport mapCacheSet from './_mapCacheSet';\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nexport default MapCache;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_MapCache.js","import ListCache from './_ListCache';\nimport stackClear from './_stackClear';\nimport stackDelete from './_stackDelete';\nimport stackGet from './_stackGet';\nimport stackHas from './_stackHas';\nimport stackSet from './_stackSet';\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nexport default Stack;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_Stack.js","import root from './_root';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_Symbol.js","import baseIndexOf from './_baseIndexOf';\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  return !!array.length && baseIndexOf(array, value, 0) > -1;\n}\n\nexport default arrayIncludes;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_arrayIncludes.js","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default arrayIncludesWith;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_arrayIncludesWith.js","import castPath from './_castPath';\nimport isKey from './_isKey';\nimport toKey from './_toKey';\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nexport default baseGet;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseGet.js","import indexOfNaN from './_indexOfNaN';\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  if (value !== value) {\n    return indexOfNaN(array, fromIndex);\n  }\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default baseIndexOf;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseIndexOf.js","import SetCache from './_SetCache';\nimport arrayIncludes from './_arrayIncludes';\nimport arrayIncludesWith from './_arrayIncludesWith';\nimport arrayMap from './_arrayMap';\nimport baseUnary from './_baseUnary';\nimport cacheHas from './_cacheHas';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * The base implementation of methods like `_.intersection`, without support\n * for iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of shared values.\n */\nfunction baseIntersection(arrays, iteratee, comparator) {\n  var includes = comparator ? arrayIncludesWith : arrayIncludes,\n      length = arrays[0].length,\n      othLength = arrays.length,\n      othIndex = othLength,\n      caches = Array(othLength),\n      maxLength = Infinity,\n      result = [];\n\n  while (othIndex--) {\n    var array = arrays[othIndex];\n    if (othIndex && iteratee) {\n      array = arrayMap(array, baseUnary(iteratee));\n    }\n    maxLength = nativeMin(array.length, maxLength);\n    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n      ? new SetCache(othIndex && array)\n      : undefined;\n  }\n  array = arrays[0];\n\n  var index = -1,\n      seen = caches[0];\n\n  outer:\n  while (++index < length && result.length < maxLength) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (!(seen\n          ? cacheHas(seen, computed)\n          : includes(result, computed, comparator)\n        )) {\n      othIndex = othLength;\n      while (--othIndex) {\n        var cache = caches[othIndex];\n        if (!(cache\n              ? cacheHas(cache, computed)\n              : includes(arrays[othIndex], computed, comparator))\n            ) {\n          continue outer;\n        }\n      }\n      if (seen) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseIntersection;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseIntersection.js","import baseIsEqualDeep from './_baseIsEqualDeep';\nimport isObject from './isObject';\nimport isObjectLike from './isObjectLike';\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {boolean} [bitmask] The bitmask of comparison flags.\n *  The bitmask may be composed of the following flags:\n *     1 - Unordered comparison\n *     2 - Partial comparison\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, customizer, bitmask, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n}\n\nexport default baseIsEqual;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseIsEqual.js","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nexport default baseProperty;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseProperty.js","import arrayMap from './_arrayMap';\nimport baseIndexOf from './_baseIndexOf';\nimport baseIndexOfWith from './_baseIndexOfWith';\nimport baseUnary from './_baseUnary';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * The base implementation of `_.pullAllBy` without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns `array`.\n */\nfunction basePullAll(array, values, iteratee, comparator) {\n  var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n      index = -1,\n      length = values.length,\n      seen = array;\n\n  if (iteratee) {\n    seen = arrayMap(array, baseUnary(iteratee));\n  }\n  while (++index < length) {\n    var fromIndex = 0,\n        value = values[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n      if (seen !== array) {\n        splice.call(seen, fromIndex, 1);\n      }\n      splice.call(array, fromIndex, 1);\n    }\n  }\n  return array;\n}\n\nexport default basePullAll;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_basePullAll.js","import isSymbol from './isSymbol';\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295,\n    MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeMin = Math.min;\n\n/**\n * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n * which invokes `iteratee` for `value` and each element of `array` to compute\n * their sort ranking. The iteratee is invoked with one argument; (value).\n *\n * @private\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @param {Function} iteratee The iteratee invoked per element.\n * @param {boolean} [retHighest] Specify returning the highest qualified index.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n */\nfunction baseSortedIndexBy(array, value, iteratee, retHighest) {\n  value = iteratee(value);\n\n  var low = 0,\n      high = array ? array.length : 0,\n      valIsNaN = value !== value,\n      valIsNull = value === null,\n      valIsSymbol = isSymbol(value),\n      valIsUndefined = value === undefined;\n\n  while (low < high) {\n    var mid = nativeFloor((low + high) / 2),\n        computed = iteratee(array[mid]),\n        othIsDefined = computed !== undefined,\n        othIsNull = computed === null,\n        othIsReflexive = computed === computed,\n        othIsSymbol = isSymbol(computed);\n\n    if (valIsNaN) {\n      var setLow = retHighest || othIsReflexive;\n    } else if (valIsUndefined) {\n      setLow = othIsReflexive && (retHighest || othIsDefined);\n    } else if (valIsNull) {\n      setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n    } else if (valIsSymbol) {\n      setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n    } else if (othIsNull || othIsSymbol) {\n      setLow = false;\n    } else {\n      setLow = retHighest ? (computed <= value) : (computed < value);\n    }\n    if (setLow) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return nativeMin(high, MAX_ARRAY_INDEX);\n}\n\nexport default baseSortedIndexBy;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseSortedIndexBy.js","/**\n * The base implementation of `_.unary` without support for storing wrapper metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseUnary.js","import arrayPush from './_arrayPush';\nimport baseDifference from './_baseDifference';\nimport baseUniq from './_baseUniq';\n\n/**\n * The base implementation of methods like `_.xor`, without support for\n * iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of values.\n */\nfunction baseXor(arrays, iteratee, comparator) {\n  var index = -1,\n      length = arrays.length;\n\n  while (++index < length) {\n    var result = result\n      ? arrayPush(\n          baseDifference(result, arrays[index], iteratee, comparator),\n          baseDifference(arrays[index], result, iteratee, comparator)\n        )\n      : arrays[index];\n  }\n  return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];\n}\n\nexport default baseXor;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseXor.js","/**\n * Checks if a cache value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nexport default cacheHas;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_cacheHas.js","import isArrayLikeObject from './isArrayLikeObject';\n\n/**\n * Casts `value` to an empty array if it's not an array like object.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array|Object} Returns the cast array-like object.\n */\nfunction castArrayLikeObject(value) {\n  return isArrayLikeObject(value) ? value : [];\n}\n\nexport default castArrayLikeObject;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_castArrayLikeObject.js","import Uint8Array from './_Uint8Array';\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nexport default cloneArrayBuffer;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_cloneArrayBuffer.js","import assignValue from './_assignValue';\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : source[key];\n\n    assignValue(object, key, newValue);\n  }\n  return object;\n}\n\nexport default copyObject;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_copyObject.js","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetPrototype = Object.getPrototypeOf;\n\n/**\n * Gets the `[[Prototype]]` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {null|Object} Returns the `[[Prototype]]`.\n */\nfunction getPrototype(value) {\n  return nativeGetPrototype(Object(value));\n}\n\nexport default getPrototype;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_getPrototype.js","import DataView from './_DataView';\nimport Map from './_Map';\nimport Promise from './_Promise';\nimport Set from './_Set';\nimport WeakMap from './_WeakMap';\nimport toSource from './_toSource';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction getTag(value) {\n  return objectToString.call(value);\n}\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nexport default getTag;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_getTag.js","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nexport default mapToArray;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_mapToArray.js","import isObject from './isObject';\nimport now from './now';\nimport toNumber from './toNumber';\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide an options object to indicate whether `func` should be invoked on\n * the leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent calls\n * to the debounced function return the result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n * on the trailing edge of the timeout only if the debounced function is\n * invoked more than once during the `wait` timeout.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime = 0,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (!lastCallTime || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    clearTimeout(timerId);\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastCallTime = lastInvokeTime = 0;\n    lastArgs = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/debounce.js","import baseSlice from './_baseSlice';\nimport toInteger from './toInteger';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.drop([1, 2, 3]);\n * // => [2, 3]\n *\n * _.drop([1, 2, 3], 2);\n * // => [3]\n *\n * _.drop([1, 2, 3], 5);\n * // => []\n *\n * _.drop([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction drop(array, n, guard) {\n  var length = array ? array.length : 0;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  return baseSlice(array, n < 0 ? 0 : n, length);\n}\n\nexport default drop;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/drop.js","import baseSlice from './_baseSlice';\nimport toInteger from './toInteger';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the end.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.dropRight([1, 2, 3]);\n * // => [1, 2]\n *\n * _.dropRight([1, 2, 3], 2);\n * // => [1]\n *\n * _.dropRight([1, 2, 3], 5);\n * // => []\n *\n * _.dropRight([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction dropRight(array, n, guard) {\n  var length = array ? array.length : 0;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  n = length - n;\n  return baseSlice(array, 0, n < 0 ? 0 : n);\n}\n\nexport default dropRight;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/dropRight.js","/**\n * Gets the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias first\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the first element of `array`.\n * @example\n *\n * _.head([1, 2, 3]);\n * // => 1\n *\n * _.head([]);\n * // => undefined\n */\nfunction head(array) {\n  return (array && array.length) ? array[0] : undefined;\n}\n\nexport default head;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/head.js","import isArrayLikeObject from './isArrayLikeObject';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\nexport default isArguments;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/isArguments.js","import isObject from './isObject';\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n *  else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8 which returns 'object' for typed array and weak map constructors,\n  // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\nexport default isFunction;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/isFunction.js","import isArray from './isArray';\nimport isObjectLike from './isObjectLike';\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n *  else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n}\n\nexport default isString;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/isString.js","import basePullAll from './_basePullAll';\n\n/**\n * This method is like `_.pull` except that it accepts an array of values to remove.\n *\n * **Note:** Unlike `_.difference`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [1, 2, 3, 1, 2, 3];\n *\n * _.pullAll(array, [2, 3]);\n * console.log(array);\n * // => [1, 1]\n */\nfunction pullAll(array, values) {\n  return (array && array.length && values && values.length)\n    ? basePullAll(array, values)\n    : array;\n}\n\nexport default pullAll;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/pullAll.js","import apply from './_apply';\nimport arrayMap from './_arrayMap';\nimport unzip from './unzip';\n\n/**\n * This method is like `_.unzip` except that it accepts `iteratee` to specify\n * how regrouped values should be combined. The iteratee is invoked with the\n * elements of each group: (...group).\n *\n * @static\n * @memberOf _\n * @since 3.8.0\n * @category Array\n * @param {Array} array The array of grouped elements to process.\n * @param {Function} [iteratee=_.identity] The function to combine\n *  regrouped values.\n * @returns {Array} Returns the new array of regrouped elements.\n * @example\n *\n * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n * // => [[1, 10, 100], [2, 20, 200]]\n *\n * _.unzipWith(zipped, _.add);\n * // => [3, 30, 300]\n */\nfunction unzipWith(array, iteratee) {\n  if (!(array && array.length)) {\n    return [];\n  }\n  var result = unzip(array);\n  if (iteratee == null) {\n    return result;\n  }\n  return arrayMap(result, function(group) {\n    return apply(iteratee, undefined, group);\n  });\n}\n\nexport default unzipWith;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/unzipWith.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/tomap\n */\n\nimport isPlainObject from './lib/lodash/isPlainObject';\nimport objectToMap from './objecttomap';\n\n/**\n * Transforms object or iterable to map. Iterable needs to be in the format acceptable by the `Map` constructor.\n *\n *\t\tmap = toMap( { 'foo': 1, 'bar': 2 } );\n *\t\tmap = toMap( [ [ 'foo', 1 ], [ 'bar', 2 ] ] );\n *\t\tmap = toMap( anotherMap );\n *\n * @param {Object|Iterable} data Object or iterable to transform.\n * @returns {Map} Map created from data.\n */\nexport default function toMap( data ) {\n\tif ( isPlainObject( data ) ) {\n\t\treturn objectToMap( data );\n\t} else {\n\t\treturn new Map( data );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/tomap.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module widget/utils\n */\n\nconst widgetSymbol = Symbol( 'isWidget' );\nconst labelSymbol = Symbol( 'label' );\n\n/**\n * CSS class added to each widget element.\n *\n * @const {String}\n */\nexport const WIDGET_CLASS_NAME = 'ck-widget';\n\n/**\n * CSS class added to currently selected widget element.\n *\n * @const {String}\n */\nexport const WIDGET_SELECTED_CLASS_NAME = 'ck-widget_selected';\n\n/**\n * Returns `true` if given {@link module:engine/view/element~Element} is a widget.\n *\n * @param {module:engine/view/element~Element} element\n * @returns {Boolean}\n */\nexport function isWidget( element ) {\n\treturn !!element.getCustomProperty( widgetSymbol );\n}\n\n/**\n * Converts given {@link module:engine/view/element~Element} to widget in following way:\n * * sets `contenteditable` attribute to `true`,\n * * adds custom `getFillerOffset` method returning `null`,\n * * adds `ck-widget` CSS class,\n * * adds custom property allowing to recognize widget elements by using {@link ~isWidget}.\n *\n * @param {module:engine/view/element~Element} element\n * @param {Object} [options]\n * @param {String|Function} [options.label] Element's label provided to {@link ~setLabel} function. It can be passed as\n * a plain string or a function returning a string.\n * @returns {module:engine/view/element~Element} Returns same element.\n */\nexport function toWidget( element, options ) {\n\toptions = options || {};\n\telement.setAttribute( 'contenteditable', false );\n\telement.getFillerOffset = getFillerOffset;\n\telement.addClass( WIDGET_CLASS_NAME );\n\telement.setCustomProperty( widgetSymbol, true );\n\n\tif ( options.label ) {\n\t\tsetLabel( element, options.label );\n\t}\n\n\treturn element;\n}\n\n/**\n * Sets label for given element.\n * It can be passed as a plain string or a function returning a string. Function will be called each time label is retrieved by\n * {@link ~getLabel}.\n *\n * @param {module:engine/view/element~Element} element\n * @param {String|Function} labelOrCreator\n */\nexport function setLabel( element, labelOrCreator ) {\n\telement.setCustomProperty( labelSymbol, labelOrCreator );\n}\n\n/**\n * Returns label for provided element.\n *\n * @param {module:engine/view/element~Element} element\n * @return {String}\n */\nexport function getLabel( element ) {\n\tconst labelCreator = element.getCustomProperty( labelSymbol );\n\n\tif ( !labelCreator ) {\n\t\treturn '';\n\t}\n\n\treturn typeof labelCreator == 'function' ? labelCreator() : labelCreator;\n}\n\n/**\n * Adds functionality to provided {module:engine/view/editableelement~EditableElement} to act as a widget's editable:\n * * sets `contenteditable` attribute to `true`,\n * * adds `ck-editable` CSS class,\n * * adds `ck-editable_focused` CSS class when editable is focused and removes it when it's blurred.\n *\n * @param {module:engine/view/editableelement~EditableElement} editable\n * @returns {module:engine/view/editableelement~EditableElement} Returns same element that was provided in `editable` param.\n */\nexport function toWidgetEditable( editable ) {\n\teditable.setAttribute( 'contenteditable', 'true' );\n\teditable.addClass( 'ck-editable' );\n\n\teditable.on( 'change:isFocused', ( evt, property, is ) => {\n\t\tif ( is ) {\n\t\t\teditable.addClass( 'ck-editable_focused' );\n\t\t} else {\n\t\t\teditable.removeClass( 'ck-editable_focused' );\n\t\t}\n\t} );\n\n\treturn editable;\n}\n\n// Default filler offset function applied to all widget elements.\n//\n// @returns {null}\nfunction getFillerOffset() {\n\treturn null;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-widget/src/utils.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n// WEBPACK FOOTER //\n// (webpack)/buildin/global.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module core/command/helpers/isattributeallowedinselection\n */\n\nimport TreeWalker from '@ckeditor/ckeditor5-engine/src/model/treewalker';\n\n/**\n * Checks {@link module:engine/model/document~Document#schema} if attribute is allowed in selection:\n *\n * * if selection is on range, the command is enabled if any of nodes in that range can have bold,\n * * if selection is collapsed, the command is enabled if text with bold is allowed in that node.\n *\n * @param {String} attribute Attribute key.\n * @param {module:engine/model/selection~Selection} selection Selection which ranges will be validate.\n * @param {module:engine/model/schema~Schema} schema Document schema.\n * @returns {Boolean}\n */\nexport default function isAttributeAllowedInSelection( attribute, selection, schema ) {\n\tif ( selection.isCollapsed ) {\n\t\t// Check whether schema allows for a test with `attributeKey` in caret position.\n\t\treturn schema.check( { name: '$text', inside: selection.getFirstPosition(), attributes: attribute } );\n\t} else {\n\t\tconst ranges = selection.getRanges();\n\n\t\t// For all ranges, check nodes in them until you find a node that is allowed to have `attributeKey` attribute.\n\t\tfor ( const range of ranges ) {\n\t\t\tconst walker = new TreeWalker( { boundaries: range, mergeCharacters: true } );\n\t\t\tlet last = walker.position;\n\t\t\tlet step = walker.next();\n\n\t\t\t// Walk the range.\n\t\t\twhile ( !step.done ) {\n\t\t\t\t// If returned item does not have name property, it is a model.TextFragment.\n\t\t\t\tconst name = step.value.item.name || '$text';\n\n\t\t\t\tif ( schema.check( { name, inside: last, attributes: attribute } ) ) {\n\t\t\t\t\t// If we found a node that is allowed to have the attribute, return true.\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tlast = walker.position;\n\t\t\t\tstep = walker.next();\n\t\t\t}\n\t\t}\n\t}\n\n\t// If we haven't found such node, return false.\n\treturn false;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-core/src/command/helpers/isattributeallowedinselection.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module core/command/toggleattributecommand\n */\n\nimport Command from './command';\nimport getSchemaValidRanges from './helpers/getschemavalidranges';\nimport isAttributeAllowedInSelection from './helpers/isattributeallowedinselection';\n\n/**\n * An extension of the base {@link module:core/command/command~Command} class, which provides utilities for a command which toggles a single\n * attribute on a text or an element. `ToggleAttributeCommand` uses {@link module:engine/model/document~Document#selection}\n * to decide which nodes (if any) should be changed, and applies or removes attributes from them.\n *\n * The command checks {@link module:engine/model/document~Document#schema} to decide if it should be enabled.\n */\nexport default class ToggleAttributeCommand extends Command {\n\t/**\n\t * @see module:core/command/command~Command\n\t * @param {module:core/editor/editor~Editor} editor\n\t * @param {String} attributeKey Attribute that will be set by the command.\n\t */\n\tconstructor( editor, attributeKey ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * Attribute that will be set by the command.\n\t\t *\n\t\t * @member {String}\n\t\t */\n\t\tthis.attributeKey = attributeKey;\n\n\t\t/**\n\t\t * Flag indicating whether command is active. For collapsed selection it means that typed characters will have\n\t\t * the command's attribute set. For range selection it means that all nodes inside have the attribute applied.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #value\n\t\t */\n\t\tthis.set( 'value', false );\n\n\t\tthis.listenTo( editor.document, 'changesDone', () => {\n\t\t\tthis.refreshValue();\n\t\t\tthis.refreshState();\n\t\t} );\n\t}\n\n\t/**\n\t * Updates command's {@link #value value} based on the current selection.\n\t */\n\trefreshValue() {\n\t\tthis.value = this.editor.document.selection.hasAttribute( this.attributeKey );\n\t}\n\n\t/**\n\t * Checks if {@link module:engine/model/document~Document#schema} allows to create attribute in\n\t * {@link module:engine/model/document~Document#selection}.\n\t *\n\t * @private\n\t * @returns {Boolean}\n\t */\n\t_checkEnabled() {\n\t\tconst document = this.editor.document;\n\n\t\treturn isAttributeAllowedInSelection( this.attributeKey, document.selection, document.schema );\n\t}\n\n\t/**\n\t * Executes the command: adds or removes attributes to nodes or selection.\n\t *\n\t * If the command is active (`value == true`), it will remove attributes. Otherwise, it will set attributes.\n\t *\n\t * The execution result differs, depending on the {@link module:engine/model/document~Document#selection}:\n\t * * if selection is on a range, the command applies the attribute on all nodes in that ranges\n\t * (if they are allowed to have this attribute by the {@link module:engine/model/schema~Schema schema}),\n\t * * if selection is collapsed in non-empty node, the command applies attribute to the\n\t * {@link module:engine/model/document~Document#selection} itself (note that typed characters copy attributes from selection),\n\t * * if selection is collapsed in empty node, the command applies attribute to the parent node of selection (note\n\t * that selection inherits all attributes from a node if it is in empty node).\n\t *\n\t * If the command is disabled (`isEnabled == false`) when it is executed, nothing will happen.\n\t *\n\t * @private\n\t * @param {Object} [options] Options of command.\n\t * @param {Boolean} [options.forceValue] If set it will force command behavior. If `true`, command will apply attribute,\n\t * otherwise command will remove attribute. If not set, command will look for it's current value to decide what it should do.\n\t * @param {module:engine/model/batch~Batch} [options.batch] Batch to group undo steps.\n\t */\n\t_doExecute( options = {} ) {\n\t\tconst document = this.editor.document;\n\t\tconst selection = document.selection;\n\t\tconst value = ( options.forceValue === undefined ) ? !this.value : options.forceValue;\n\n\t\t// If selection has non-collapsed ranges, we change attribute on nodes inside those ranges.\n\t\tdocument.enqueueChanges( () => {\n\t\t\tif ( selection.isCollapsed ) {\n\t\t\t\tif ( value ) {\n\t\t\t\t\tselection.setAttribute( this.attributeKey, true );\n\t\t\t\t} else {\n\t\t\t\t\tselection.removeAttribute( this.attributeKey );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst ranges = getSchemaValidRanges( this.attributeKey, selection.getRanges(), document.schema );\n\n\t\t\t\t// Keep it as one undo step.\n\t\t\t\tconst batch = options.batch || document.batch();\n\n\t\t\t\tfor ( const range of ranges ) {\n\t\t\t\t\tif ( value ) {\n\t\t\t\t\t\tbatch.setAttribute( range, this.attributeKey, value );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbatch.removeAttribute( range, this.attributeKey );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-core/src/command/toggleattributecommand.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/conversion/mapper\n */\n\nimport ModelPosition from '../model/position';\nimport ModelRange from '../model/range';\n\nimport ViewPosition from '../view/position';\nimport ViewRange from '../view/range';\nimport ViewText from '../view/text';\n\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * Maps elements and positions between {@link module:engine/view/document~Document view} and {@link module:engine/model/model model}.\n *\n * Mapper use bound elements to find corresponding elements and positions, so, to get proper results,\n * all model elements should be {@link module:engine/conversion/mapper~Mapper#bindElements bound}.\n *\n * To map complex model to/from view relations, you may provide custom callbacks for\n * {@link module:engine/conversion/mapper~Mapper#event:modelToViewPosition modelToViewPosition event} and\n * {@link module:engine/conversion/mapper~Mapper#event:viewToModelPosition viewToModelPosition event} that are fired whenever\n * a position mapping request occurs.\n * Those events are fired by {@link module:engine/conversion/mapper~Mapper#toViewPosition toViewPosition}\n * and {@link module:engine/conversion/mapper~Mapper#toModelPosition toModelPosition} methods. `Mapper` adds it's own default callbacks\n * with `'lowest'` priority. To override default `Mapper` mapping, add custom callback with higher priority and\n * stop the event.\n */\nexport default class Mapper {\n\t/**\n\t * Creates an instance of the mapper.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Model element to view element mapping.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakMap}\n\t\t */\n\t\tthis._modelToViewMapping = new WeakMap();\n\n\t\t/**\n\t\t * View element to model element mapping.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakMap}\n\t\t */\n\t\tthis._viewToModelMapping = new WeakMap();\n\n\t\t/**\n\t\t * A map containing callbacks between view element names and functions evaluating length of view elements\n\t\t * in model.\n\t\t *\n\t\t * @private\n\t\t * @member {Map}\n\t\t */\n\t\tthis._viewToModelLengthCallbacks = new Map();\n\n\t\t// Default mapper algorithm for mapping model position to view position.\n\t\tthis.on( 'modelToViewPosition', ( evt, data ) => {\n\t\t\tif ( data.viewPosition ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst viewContainer = this._modelToViewMapping.get( data.modelPosition.parent );\n\n\t\t\tdata.viewPosition = this._findPositionIn( viewContainer, data.modelPosition.offset );\n\t\t}, { priority: 'low' } );\n\n\t\t// Default mapper algorithm for mapping view position to model position.\n\t\tthis.on( 'viewToModelPosition', ( evt, data ) => {\n\t\t\tif ( data.modelPosition ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet viewBlock = data.viewPosition.parent;\n\t\t\tlet modelParent = this._viewToModelMapping.get( viewBlock );\n\n\t\t\twhile ( !modelParent ) {\n\t\t\t\tviewBlock = viewBlock.parent;\n\t\t\t\tmodelParent = this._viewToModelMapping.get( viewBlock );\n\t\t\t}\n\n\t\t\tconst modelOffset = this._toModelOffset( data.viewPosition.parent, data.viewPosition.offset, viewBlock );\n\n\t\t\tdata.modelPosition = ModelPosition.createFromParentAndOffset( modelParent, modelOffset );\n\t\t}, { priority: 'low' } );\n\t}\n\n\t/**\n\t * Marks model and view elements as corresponding. Corresponding elements can be retrieved by using\n\t * the {@link module:engine/conversion/mapper~Mapper#toModelElement toModelElement} and\n\t * {@link module:engine/conversion/mapper~Mapper#toViewElement toViewElement} methods.\n\t * The information that elements are bound is also used to translate positions.\n\t *\n\t * @param {module:engine/model/element~Element} modelElement Model element.\n\t * @param {module:engine/view/element~Element} viewElement View element.\n\t */\n\tbindElements( modelElement, viewElement ) {\n\t\tthis._modelToViewMapping.set( modelElement, viewElement );\n\t\tthis._viewToModelMapping.set( viewElement, modelElement );\n\t}\n\n\t/**\n\t * Unbinds given {@link module:engine/view/element~Element view element} from the map.\n\t *\n\t * @param {module:engine/view/element~Element} viewElement View element to unbind.\n\t */\n\tunbindViewElement( viewElement ) {\n\t\tconst modelElement = this.toModelElement( viewElement );\n\n\t\tthis._unbindElements( modelElement, viewElement );\n\t}\n\n\t/**\n\t * Unbinds given {@link module:engine/model/element~Element model element} from the map.\n\t *\n\t * @param {module:engine/model/element~Element} modelElement Model element to unbind.\n\t */\n\tunbindModelElement( modelElement ) {\n\t\tconst viewElement = this.toViewElement( modelElement );\n\n\t\tthis._unbindElements( modelElement, viewElement );\n\t}\n\n\t/**\n\t * Removes all model to view and view to model bindings.\n\t */\n\tclearBindings() {\n\t\tthis._modelToViewMapping = new WeakMap();\n\t\tthis._viewToModelMapping = new WeakMap();\n\t}\n\n\t/**\n\t * Gets the corresponding model element.\n\t *\n\t * **Note:** {@link module:engine/view/uielement~UIElement} does not have corresponding element in model.\n\t *\n\t * @param {module:engine/view/element~Element} viewElement View element.\n\t * @returns {module:engine/model/element~Element|undefined} Corresponding model element or `undefined` if not found.\n\t */\n\ttoModelElement( viewElement ) {\n\t\treturn this._viewToModelMapping.get( viewElement );\n\t}\n\n\t/**\n\t * Gets the corresponding view element.\n\t *\n\t * @param {module:engine/model/element~Element} modelElement Model element.\n\t * @returns {module:engine/view/element~Element|undefined} Corresponding view element or `undefined` if not found.\n\t */\n\ttoViewElement( modelElement ) {\n\t\treturn this._modelToViewMapping.get( modelElement );\n\t}\n\n\t/**\n\t * Gets the corresponding model range.\n\t *\n\t * @param {module:engine/view/range~Range} viewRange View range.\n\t * @returns {module:engine/model/range~Range} Corresponding model range.\n\t */\n\ttoModelRange( viewRange ) {\n\t\treturn new ModelRange( this.toModelPosition( viewRange.start ), this.toModelPosition( viewRange.end ) );\n\t}\n\n\t/**\n\t * Gets the corresponding view range.\n\t *\n\t * @param {module:engine/model/range~Range} modelRange Model range.\n\t * @returns {module:engine/view/range~Range} Corresponding view range.\n\t */\n\ttoViewRange( modelRange ) {\n\t\treturn new ViewRange( this.toViewPosition( modelRange.start ), this.toViewPosition( modelRange.end ) );\n\t}\n\n\t/**\n\t * Gets the corresponding model position.\n\t *\n\t * @fires viewToModelPosition\n\t * @param {module:engine/view/position~Position} viewPosition View position.\n\t * @returns {module:engine/model/position~Position} Corresponding model position.\n\t */\n\ttoModelPosition( viewPosition ) {\n\t\tconst data = {\n\t\t\tviewPosition,\n\t\t\tmapper: this\n\t\t};\n\n\t\tthis.fire( 'viewToModelPosition', data );\n\n\t\treturn data.modelPosition;\n\t}\n\n\t/**\n\t * Gets the corresponding view position.\n\t *\n\t * @fires modelToViewPosition\n\t * @param {module:engine/model/position~Position} modelPosition Model position.\n\t * @returns {module:engine/view/position~Position} Corresponding view position.\n\t */\n\ttoViewPosition( modelPosition ) {\n\t\tconst data = {\n\t\t\tmodelPosition,\n\t\t\tmapper: this\n\t\t};\n\n\t\tthis.fire( 'modelToViewPosition', data );\n\n\t\treturn data.viewPosition;\n\t}\n\n\t/**\n\t * Registers a callback that evaluates the length in the model of a view element with given name.\n\t *\n\t * The callback is fired with one argument, which is a view element instance. The callback is expected to return\n\t * a number representing the length of view element in model.\n\t *\n\t *\t\t// List item in view may contain nested list, which have other list items. In model though,\n\t *\t\t// the lists are represented by flat structure. Because of those differences, length of list view element\n\t *\t\t// may be greater than one. In the callback it's checked how many nested list items are in evaluated list item.\n\t *\n\t *\t\tfunction getViewListItemLength( element ) {\n\t *\t\t\tlet length = 1;\n\t *\n\t *\t\t\tfor ( let child of element.getChildren() ) {\n\t *\t\t\t\tif ( child.name == 'ul' || child.name == 'ol' ) {\n\t *\t\t\t\t\tfor ( let item of child.getChildren() ) {\n\t *\t\t\t\t\t\tlength += getViewListItemLength( item );\n\t *\t\t\t\t\t}\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\n\t *\t\t\treturn length;\n\t *\t\t}\n\t *\n\t *\t\tmapper.registerViewToModelLength( 'li', getViewListItemLength );\n\t *\n\t * @param {String} viewElementName Name of view element for which callback is registered.\n\t * @param {Function} lengthCallback Function return a length of view element instance in model.\n\t */\n\tregisterViewToModelLength( viewElementName, lengthCallback ) {\n\t\tthis._viewToModelLengthCallbacks.set( viewElementName, lengthCallback );\n\t}\n\n\t/**\n\t * Calculates model offset based on the view position and the block element.\n\t *\n\t * Example:\n\t *\n\t *\t\t<p>foo<b>ba|r</b></p> // _toModelOffset( b, 2, p ) -> 5\n\t *\n\t * Is a sum of:\n\t *\n\t *\t\t<p>foo|<b>bar</b></p> // _toModelOffset( p, 3, p ) -> 3\n\t *\t\t<p>foo<b>ba|r</b></p> // _toModelOffset( b, 2, b ) -> 2\n\t *\n\t * @private\n\t * @param {module:engine/view/element~Element} viewParent Position parent.\n\t * @param {Number} viewOffset Position offset.\n\t * @param {module:engine/view/element~Element} viewBlock Block used as a base to calculate offset.\n\t * @returns {Number} Offset in the model.\n\t */\n\t_toModelOffset( viewParent, viewOffset, viewBlock ) {\n\t\tif ( viewBlock != viewParent ) {\n\t\t\t// See example.\n\t\t\tconst offsetToParentStart = this._toModelOffset( viewParent.parent, viewParent.index, viewBlock );\n\t\t\tconst offsetInParent = this._toModelOffset( viewParent, viewOffset, viewParent );\n\n\t\t\treturn offsetToParentStart + offsetInParent;\n\t\t}\n\n\t\t// viewBlock == viewParent, so we need to calculate the offset in the parent element.\n\n\t\t// If the position is a text it is simple (\"ba|r\" -> 2).\n\t\tif ( viewParent.is( 'text' ) ) {\n\t\t\treturn viewOffset;\n\t\t}\n\n\t\t// If the position is in an element we need to sum lengths of siblings ( <b> bar </b> foo | -> 3 + 3 = 6 ).\n\t\tlet modelOffset = 0;\n\n\t\tfor ( let i = 0; i < viewOffset; i++ ) {\n\t\t\tmodelOffset += this.getModelLength( viewParent.getChild( i ) );\n\t\t}\n\n\t\treturn modelOffset;\n\t}\n\n\t/**\n\t * Removes binding between given elements.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} modelElement Model element to unbind.\n\t * @param {module:engine/view/element~Element} viewElement View element to unbind.\n\t */\n\t_unbindElements( modelElement, viewElement ) {\n\t\tthis._viewToModelMapping.delete( viewElement );\n\t\tthis._modelToViewMapping.delete( modelElement );\n\t}\n\n\t/**\n\t * Gets the length of the view element in the model.\n\t *\n\t * The length is calculated as follows:\n\t * * if {@link #registerViewToModelLength length mapping callback} is provided for given `viewNode` it is used to\n\t * evaluate model length (`viewNode` is used as first and only parameter passed to the callback),\n\t * * length of a {@link module:engine/view/text~Text text node} is equal to the length of it's\n\t * {@link module:engine/view/text~Text#data data},\n\t * * length of a {@link module:engine/view/uielement~UIElement ui element} is equal to 0,\n\t * * length of a mapped {@link module:engine/view/element~Element element} is equal to 1,\n\t * * length of a not-mapped {@link module:engine/view/element~Element element} is equal to the length of it's children.\n\t *\n\t * Examples:\n\t *\n\t *\t\tfoo                          -> 3 // Text length is equal to it's data length.\n\t *\t\t<p>foo</p>                   -> 1 // Length of an element which is mapped is by default equal to 1.\n\t *\t\t<b>foo</b>                   -> 3 // Length of an element which is not mapped is a length of its children.\n\t *\t\t<div><p>x</p><p>y</p></div>  -> 2 // Assuming that <div> is not mapped and <p> are mapped.\n\t *\n\t * @param {module:engine/view/element~Element} viewNode View node.\n\t * @returns {Number} Length of the node in the tree model.\n\t */\n\tgetModelLength( viewNode ) {\n\t\tif ( this._viewToModelLengthCallbacks.get( viewNode.name ) ) {\n\t\t\tconst callback = this._viewToModelLengthCallbacks.get( viewNode.name );\n\n\t\t\treturn callback( viewNode );\n\t\t} else if ( this._viewToModelMapping.has( viewNode ) ) {\n\t\t\treturn 1;\n\t\t} else if ( viewNode.is( 'text' ) ) {\n\t\t\treturn viewNode.data.length;\n\t\t} else if ( viewNode.is( 'uiElement' ) ) {\n\t\t\treturn 0;\n\t\t} else {\n\t\t\tlet len = 0;\n\n\t\t\tfor ( const child of viewNode.getChildren() ) {\n\t\t\t\tlen += this.getModelLength( child );\n\t\t\t}\n\n\t\t\treturn len;\n\t\t}\n\t}\n\n\t/**\n\t * Finds the position in the view node (or its children) with the expected model offset.\n\t *\n\t * Example:\n\t *\n\t *\t\t<p>fo<b>bar</b>bom</p> -> expected offset: 4\n\t *\n\t *\t\t_findPositionIn( p, 4 ):\n\t *\t\t<p>|fo<b>bar</b>bom</p> -> expected offset: 4, actual offset: 0\n\t *\t\t<p>fo|<b>bar</b>bom</p> -> expected offset: 4, actual offset: 2\n\t *\t\t<p>fo<b>bar</b>|bom</p> -> expected offset: 4, actual offset: 5 -> we are too far\n\t *\n\t *\t\t_findPositionIn( b, 4 - ( 5 - 3 ) ):\n\t *\t\t<p>fo<b>|bar</b>bom</p> -> expected offset: 2, actual offset: 0\n\t *\t\t<p>fo<b>bar|</b>bom</p> -> expected offset: 2, actual offset: 3 -> we are too far\n\t *\n\t *\t\t_findPositionIn( bar, 2 - ( 3 - 3 ) ):\n\t *\t\tWe are in the text node so we can simple find the offset.\n\t *\t\t<p>fo<b>ba|r</b>bom</p> -> expected offset: 2, actual offset: 2 -> position found\n\t *\n\t * @private\n\t * @param {module:engine/view/element~Element} viewParent Tree view element in which we are looking for the position.\n\t * @param {Number} expectedOffset Expected offset.\n\t * @returns {module:engine/view/position~Position} Found position.\n\t */\n\t_findPositionIn( viewParent, expectedOffset ) {\n\t\t// Last scanned view node.\n\t\tlet viewNode;\n\t\t// Length of the last scanned view node.\n\t\tlet lastLength = 0;\n\n\t\tlet modelOffset = 0;\n\t\tlet viewOffset = 0;\n\n\t\t// In the text node it is simple: offset in the model equals offset in the text.\n\t\tif ( viewParent.is( 'text' ) ) {\n\t\t\treturn new ViewPosition( viewParent, expectedOffset );\n\t\t}\n\n\t\t// In other cases we add lengths of child nodes to find the proper offset.\n\n\t\t// If it is smaller we add the length.\n\t\twhile ( modelOffset < expectedOffset ) {\n\t\t\tviewNode = viewParent.getChild( viewOffset );\n\t\t\tlastLength = this.getModelLength( viewNode );\n\t\t\tmodelOffset += lastLength;\n\t\t\tviewOffset++;\n\t\t}\n\n\t\t// If it equals we found the position.\n\t\tif ( modelOffset == expectedOffset ) {\n\t\t\treturn this._moveViewPositionToTextNode( new ViewPosition( viewParent, viewOffset ) );\n\t\t}\n\t\t// If it is higher we need to enter last child.\n\t\telse {\n\t\t\t// ( modelOffset - lastLength ) is the offset to the child we enter,\n\t\t\t// so we subtract it from the expected offset to fine the offset in the child.\n\t\t\treturn this._findPositionIn( viewNode, expectedOffset - ( modelOffset - lastLength ) );\n\t\t}\n\t}\n\n\t/**\n\t * Because we prefer positions in text nodes over positions next to text node moves view position to the text node\n\t * if it was next to it.\n\t *\n\t *\t\t<p>[]<b>foo</b></p> -> <p>[]<b>foo</b></p> // do not touch if position is not directly next to text\n\t *\t\t<p>foo[]<b>foo</b></p> -> <p>foo{}<b>foo</b></p> // move to text node\n\t *\t\t<p><b>[]foo</b></p> -> <p><b>{}foo</b></p> // move to text node\n\t *\n\t * @private\n\t * @param {module:engine/view/position~Position} viewPosition Position potentially next to text node.\n\t * @returns {module:engine/view/position~Position} Position in text node if possible.\n\t */\n\t_moveViewPositionToTextNode( viewPosition ) {\n\t\t// If the position is just after text node, put it at the end of that text node.\n\t\t// If the position is just before text node, put it at the beginning of that text node.\n\t\tconst nodeBefore = viewPosition.nodeBefore;\n\t\tconst nodeAfter = viewPosition.nodeAfter;\n\n\t\tif ( nodeBefore instanceof ViewText ) {\n\t\t\treturn new ViewPosition( nodeBefore, nodeBefore.data.length );\n\t\t} else if ( nodeAfter instanceof ViewText ) {\n\t\t\treturn new ViewPosition( nodeAfter, 0 );\n\t\t}\n\n\t\t// Otherwise, just return the given position.\n\t\treturn viewPosition;\n\t}\n\n\t/**\n\t * Fired for each model-to-view position mapping request. The purpose of this event is to enable custom model-to-view position\n\t * mapping. Callbacks added to this event take {@link module:engine/model/position~Position model position} and are expected to\n\t * calculate {@link module:engine/view/position~Position view position}. Calculated view position should be added as `viewPosition`\n\t * value in `data` object that is passed as one of parameters to the event callback.\n\t *\n\t * \t\t// Assume that \"captionedImage\" model element is converted to <img> and following <span> elements in view,\n\t * \t\t// and the model element is bound to <img> element. Force mapping model positions inside \"captionedImage\" to that\n\t * \t\t// <span> element.\n\t *\t\tmapper.on( 'modelToViewPosition', ( evt, data ) => {\n\t *\t\t\tconst positionParent = modelPosition.parent;\n\t *\n\t *\t\t\tif ( positionParent.name == 'captionedImage' ) {\n\t *\t\t\t\tconst viewImg = data.mapper.toViewElement( positionParent );\n\t *\t\t\t\tconst viewCaption = viewImg.nextSibling; // The <span> element.\n\t *\n\t *\t\t\t\tdata.viewPosition = new ViewPosition( viewCaption, modelPosition.offset );\n\t *\n\t *\t\t\t\t// Stop the event if other callbacks should not modify calculated value.\n\t *\t\t\t\tevt.stop();\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * **Note:** keep in mind that custom callback provided for this event should use provided `data.modelPosition` only to check\n\t * what is before the position (or position's parent). This is important when model-to-view position mapping is used in\n\t * remove change conversion. Model after the removed position (that is being mapped) does not correspond to view, so it cannot be used:\n\t *\n\t *\t\t// Incorrect:\n\t *\t\tconst modelElement = data.modelPosition.nodeAfter;\n\t *\t\tconst viewElement = data.mapper.toViewElement( modelElement );\n\t *\t\t// ... Do something with `viewElement` and set `data.viewPosition`.\n\t *\n\t *\t\t// Correct:\n\t *\t\tconst prevModelElement = data.modelPosition.nodeBefore;\n\t *\t\tconst prevViewElement = data.mapper.toViewElement( prevModelElement );\n\t *\t\t// ... Use `prevViewElement` to find correct `data.viewPosition`.\n\t *\n\t * **Note:** default mapping callback is provided with `low` priority setting and does not cancel the event, so it is possible to\n\t * attach a custom callback after default callback and also use `data.viewPosition` calculated by default callback\n\t * (for example to fix it).\n\t *\n\t * **Note:** default mapping callback will not fire if `data.viewPosition` is already set.\n\t *\n\t * **Note:** these callbacks are called **very often**. For efficiency reasons, it is advised to use them only when position\n\t * mapping between given model and view elements is unsolvable using just elements mapping and default algorithm. Also,\n\t * the condition that checks if special case scenario happened should be as simple as possible.\n\t *\n\t * @event modelToViewPosition\n\t * @param {Object} data Data pipeline object that can store and pass data between callbacks. The callback should add\n\t * `viewPosition` value to that object with calculated {@link module:engine/view/position~Position view position}.\n\t * @param {module:engine/conversion/mapper~Mapper} data.mapper Mapper instance that fired the event.\n\t */\n\n\t/**\n\t * Fired for each view-to-model position mapping request. See {@link module:engine/conversion/mapper~Mapper#event:modelToViewPosition}.\n\t *\n\t * \t\t// See example in `modelToViewPosition` event description.\n\t * \t\t// This custom mapping will map positions from <span> element next to <img> to the \"captionedImage\" element.\n\t *\t\tmapper.on( 'viewToModelPosition', ( evt, data ) => {\n\t *\t\t\tconst positionParent = viewPosition.parent;\n\t *\n\t *\t\t\tif ( positionParent.hasClass( 'image-caption' ) ) {\n\t *\t\t\t\tconst viewImg = positionParent.previousSibling;\n\t *\t\t\t\tconst modelImg = data.mapper.toModelElement( viewImg );\n\t *\n\t *\t\t\t\tdata.modelPosition = new ModelPosition( modelImg, viewPosition.offset );\n\t *\t\t\t\tevt.stop();\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * **Note:** default mapping callback is provided with `low` priority setting and does not cancel the event, so it is possible to\n\t * attach a custom callback after default callback and also use `data.modelPosition` calculated by default callback\n\t * (for example to fix it).\n\t *\n\t * **Note:** default mapping callback will not fire if `data.modelPosition` is already set.\n\t *\n\t * **Note:** these callbacks are called **very often**. For efficiency reasons, it is advised to use them only when position\n\t * mapping between given model and view elements is unsolvable using just elements mapping and default algorithm. Also,\n\t * the condition that checks if special case scenario happened should be as simple as possible.\n\t *\n\t * @event viewToModelPosition\n\t * @param {Object} data Data pipeline object that can store and pass data between callbacks. The callback should add\n\t * `modelPosition` value to that object with calculated {@link module:engine/model/position~Position model position}.\n\t * @param {module:engine/conversion/mapper~Mapper} data.mapper Mapper instance that fired the event.\n\t */\n}\n\nmix( Mapper, EmitterMixin );\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/conversion/mapper.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\nimport ViewElement from '../view/element';\nimport ViewRange from '../view/range';\nimport viewWriter from '../view/writer';\n\n/**\n * Contains {@link module:engine/model/selection~Selection model selection} to\n * {@link module:engine/view/selection~Selection view selection} converters for\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher}.\n *\n * @module engine/conversion/model-selection-to-view-converters\n */\n\n/**\n * Function factory, creates a converter that converts non-collapsed {@link module:engine/model/selection~Selection model selection} to\n * {@link module:engine/view/selection~Selection view selection}. The converter consumes appropriate value from `consumable` object\n * and maps model positions from selection to view positions.\n *\n *\t\tmodelDispatcher.on( 'selection', convertRangeSelection() );\n *\n * @returns {Function} Selection converter.\n */\nexport function convertRangeSelection() {\n\treturn ( evt, data, consumable, conversionApi ) => {\n\t\tconst selection = data.selection;\n\n\t\tif ( selection.isCollapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !consumable.consume( selection, 'selection' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconversionApi.viewSelection.removeAllRanges();\n\n\t\tfor ( const range of selection.getRanges() ) {\n\t\t\tconst viewRange = conversionApi.mapper.toViewRange( range );\n\t\t\tconversionApi.viewSelection.addRange( viewRange, selection.isBackward );\n\t\t}\n\t};\n}\n\n/**\n * Function factory, creates a converter that converts collapsed {@link module:engine/model/selection~Selection model selection} to\n * {@link module:engine/view/selection~Selection view selection}. The converter consumes appropriate value from `consumable` object,\n * maps model selection position to view position and breaks {@link module:engine/view/attributeelement~AttributeElement attribute elements}\n * at the selection position.\n *\n *\t\tmodelDispatcher.on( 'selection', convertCollapsedSelection() );\n *\n * Example of view state before and after converting collapsed selection:\n *\n *\t\t   <p><strong>f^oo<strong>bar</p>\n *\t\t-> <p><strong>f</strong>^<strong>oo</strong>bar</p>\n *\n * By breaking attribute elements like `<strong>`, selection is in correct element. See also complementary\n * {@link module:engine/conversion/model-selection-to-view-converters~convertSelectionAttribute attribute converter}\n * for selection attributes,\n * which wraps collapsed selection into view elements. Those converters together ensure, that selection ends up in\n * appropriate attribute elements.\n *\n * See also {@link module:engine/conversion/model-selection-to-view-converters~clearAttributes} which does a clean-up\n * by merging attributes.\n *\n * @returns {Function} Selection converter.\n */\nexport function convertCollapsedSelection() {\n\treturn ( evt, data, consumable, conversionApi ) => {\n\t\tconst selection = data.selection;\n\n\t\tif ( !selection.isCollapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !consumable.consume( selection, 'selection' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst modelPosition = selection.getFirstPosition();\n\t\tconst viewPosition = conversionApi.mapper.toViewPosition( modelPosition );\n\t\tconst brokenPosition = viewWriter.breakAttributes( viewPosition );\n\n\t\tconversionApi.viewSelection.removeAllRanges();\n\t\tconversionApi.viewSelection.addRange( new ViewRange( brokenPosition, brokenPosition ) );\n\t};\n}\n\n/**\n * Function factory, creates a converter that converts {@link module:engine/model/selection~Selection model selection} attributes to\n * {@link module:engine/view/attributeelement~AttributeElement view attribute elements}. The converter works only for collapsed selection.\n * The converter consumes appropriate value from `consumable` object, maps model selection position to view position and\n * wraps that position into a view attribute element.\n *\n * The wrapping node depends on passed parameter. If {@link module:engine/view/element~Element} was passed, it will be cloned and\n * the copy will become the wrapping element. If `Function` is provided, it is passed all the parameters of the\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:selectionAttribute selectionAttribute event}.\n * It's expected that the function returns a {@link module:engine/view/attributeelement~AttributeElement}.\n * The result of the function will be the wrapping element.\n *\n *\t\tmodelDispatcher.on( 'selectionAttribute:italic', convertSelectionAttribute( new ViewAttributeElement( 'em' ) ) );\n *\n *\t\tfunction styleElementCreator( styleValue ) {\n *\t\t\tif ( styleValue == 'important' ) {\n *\t\t\t\treturn new ViewAttributeElement( 'strong', { style: 'text-transform:uppercase;' } );\n *\t\t\t} else if ( styleValue == 'gold' ) {\n *\t\t\t\treturn new ViewAttributeElement( 'span', { style: 'color:yellow;' } );\n *\t\t\t}\n *\t\t}\n *\t\tmodelDispatcher.on( 'selectionAttribute:style', convertSelectionAttribute( styleCreator ) );\n *\n * **Note:** You can use the same `elementCreator` function for this converter factory\n * and {@link module:engine/conversion/model-to-view-converters~wrapRange}\n * model to view converter, as long as the `elementCreator` function uses only the first parameter (attribute value).\n *\n *\t\tmodelDispatcher.on( 'selection', convertCollapsedSelection() );\n *\t\tmodelDispatcher.on( 'selectionAttribute:italic', convertSelectionAttribute( new ViewAttributeElement( 'em' ) ) );\n *\t\tmodelDispatcher.on( 'selectionAttribute:bold', convertSelectionAttribute( new ViewAttributeElement( 'strong' ) ) );\n *\n * Example of view states before and after converting collapsed selection:\n *\n *\t\t   <p><em>f^oo</em>bar</p>\n *\t\t-> <p><em>f</em>^<em>oo</em>bar</p>\n *\t\t-> <p><em>f^oo</em>bar</p>\n *\n * Example of view state after converting collapsed selection. The scenario is: selection is inside bold text (`<strong>` element)\n * but it does not have bold attribute itself and has italic attribute instead (let's assume that user turned off bold and turned\n * on italic with selection collapsed):\n *\n *\t\t   <p><strong>f^oo<strong>bar</p>\n *\t\t-> <p><strong>f</strong>^<strong>oo<strong>bar</p>\n *\t\t-> <p><strong>f</strong><em>^</em><strong>oo</strong>bar</p>\n *\n * In first example, nothing has changed, because first `<em>` element got broken by `convertCollapsedSelection()` converter,\n * but then it got wrapped-back by `convertSelectionAttribute()` converter. In second example, notice how `<strong>` element\n * is broken to prevent putting selection in it, since selection has no `bold` attribute.\n *\n * @param {module:engine/view/attributeelement~AttributeElement|Function} elementCreator View element,\n * or function returning a view element, which will be used for wrapping.\n * @returns {Function} Selection converter.\n */\nexport function convertSelectionAttribute( elementCreator ) {\n\treturn ( evt, data, consumable, conversionApi ) => {\n\t\tconst viewElement = elementCreator instanceof ViewElement ?\n\t\t\telementCreator.clone( true ) :\n\t\t\telementCreator( data.value, data, data.selection, consumable, conversionApi );\n\n\t\tif ( !viewElement ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst consumableName = 'selectionAttribute:' + data.key;\n\n\t\twrapCollapsedSelectionPosition( data.selection, conversionApi.viewSelection, viewElement, consumable, consumableName );\n\t};\n}\n\n/**\n * Performs similar conversion as {@link ~convertSelectionAttribute}, but depends on a marker name of a marker in which\n * collapsed selection is placed.\n *\n *\t\tmodelDispatcher.on( 'selectionMarker:searchResult', wrapRange( new ViewAttributeElement( 'span', { class: 'searchResult' } ) ) );\n *\n * **Note:** You can use the same `elementCreator` function for this converter factory\n * and {@link module:engine/conversion/model-to-view-converters~wrapRange}.\n *\n * @see module:engine/conversion/model-selection-to-view-converters~convertSelectionAttribute\n * @param {module:engine/view/attributeelement~AttributeElement|Function} elementCreator View element,\n * or function returning a view element, which will be used for wrapping.\n * @returns {Function} Selection converter.\n */\nexport function convertSelectionMarker( elementCreator ) {\n\treturn ( evt, data, consumable, conversionApi ) => {\n\t\tconst viewElement = elementCreator instanceof ViewElement ?\n\t\t\telementCreator.clone( true ) :\n\t\t\telementCreator( data, consumable, conversionApi );\n\n\t\tif ( !viewElement ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst consumableName = 'selectionMarker:' + data.name;\n\n\t\twrapCollapsedSelectionPosition( data.selection, conversionApi.viewSelection, viewElement, consumable, consumableName );\n\t};\n}\n\n// Helper function for `convertSelectionAttribute` and `convertSelectionMarker`, which perform similar task.\nfunction wrapCollapsedSelectionPosition( modelSelection, viewSelection, viewElement, consumable, consumableName ) {\n\tif ( !modelSelection.isCollapsed ) {\n\t\treturn;\n\t}\n\n\tif ( !consumable.consume( modelSelection, consumableName ) ) {\n\t\treturn;\n\t}\n\n\tlet viewPosition = viewSelection.getFirstPosition();\n\tviewPosition = viewWriter.wrapPosition( viewPosition, viewElement );\n\n\tviewSelection.removeAllRanges();\n\tviewSelection.addRange( new ViewRange( viewPosition, viewPosition ) );\n}\n\n/**\n * Function factory, creates a converter that clears artifacts after the previous\n * {@link module:engine/model/selection~Selection model selection} conversion. It removes all empty\n * {@link module:engine/view/attributeelement~AttributeElement view attribute elements} and merge sibling attributes at all start and end\n * positions of all ranges.\n *\n *\t\t   <p><strong>^</strong></p>\n *\t\t-> <p>^</p>\n *\n *\t\t   <p><strong>foo</strong>^<strong>bar</strong>bar</p>\n *\t\t-> <p><strong>foo^bar<strong>bar</p>\n *\n *\t\t   <p><strong>foo</strong><em>^</em><strong>bar</strong>bar</p>\n *\t\t-> <p><strong>foo^bar<strong>bar</p>\n *\n * This listener should be assigned before any converter for the new selection:\n *\n *\t\tmodelDispatcher.on( 'selection', clearAttributes() );\n *\n * See {@link module:engine/conversion/model-selection-to-view-converters~convertCollapsedSelection}\n * which do the opposite by breaking attributes in the selection position.\n *\n * @returns {Function} Selection converter.\n */\nexport function clearAttributes() {\n\treturn ( evt, data, consumable, conversionApi ) => {\n\t\tfor ( const range of conversionApi.viewSelection.getRanges() ) {\n\t\t\t// Not collapsed selection should not have artifacts.\n\t\t\tif ( range.isCollapsed ) {\n\t\t\t\t// Position might be in the node removed by the view writer.\n\t\t\t\tif ( range.end.parent.document ) {\n\t\t\t\t\tviewWriter.mergeAttributes( range.start );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconversionApi.viewSelection.removeAllRanges();\n\t};\n}\n\n/**\n * Function factory, creates a converter that clears fake selection marking after the previous\n * {@link module:engine/model/selection~Selection model selection} conversion.\n */\nexport function clearFakeSelection() {\n\treturn ( evt, data, consumable, conversionApi ) => conversionApi.viewSelection.setFake( false );\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/conversion/model-selection-to-view-converters.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/conversion/modelconversiondispatcher\n */\n\nimport Consumable from './modelconsumable';\nimport Range from '../model/range';\nimport Position from '../model/position';\nimport DocumentFragment from '../model/documentfragment';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport extend from '@ckeditor/ckeditor5-utils/src/lib/lodash/extend';\n\n/**\n * `ModelConversionDispatcher` is a central point of {@link module:engine/model/model model} conversion, which is\n * a process of reacting to changes in the model and reflecting them by listeners that listen to those changes.\n * In default application, {@link module:engine/model/model model} is converted to {@link module:engine/view/view view}. This means\n * that changes in the model are reflected by changing the view (i.e. adding view nodes or changing attributes on view elements).\n *\n * During conversion process, `ModelConversionDispatcher` fires data-manipulation events, basing on state of the model and prepares\n * data for those events. It is important to note that the events are connected with \"change actions\" like \"inserting\"\n * or \"removing\" so one might say that we are converting \"changes\". This is in contrary to view to model conversion,\n * where we convert view nodes (the structure, not \"changes\" to the view). Note, that because changes are converted\n * and not the structure itself, there is a need to have a mapping between model and the structure on which changes are\n * reflected. To map elements during model to view conversion use {@link module:engine/conversion/mapper~Mapper}.\n *\n * The main use for this class is to listen to {@link module:engine/model/document~Document#event:change Document change event}, process it\n * and then fire specific events telling what exactly has changed. For those events, `ModelConversionDispatcher`\n * creates {@link module:engine/conversion/modelconsumable~ModelConsumable list of consumable values} that should be handled by event\n * callbacks. Those events are listened to by model-to-view converters which convert changes done in the\n * {@link module:engine/model/model model} to changes in the {@link module:engine/view/view view}. `ModelConversionController` also checks\n * the current state of consumables, so it won't fire events for parts of model that were already consumed. This is\n * especially important in callbacks that consume multiple values. See {@link module:engine/conversion/modelconsumable~ModelConsumable}\n * for an example of such callback.\n *\n * Although the primary usage for this class is the model-to-view conversion, `ModelConversionDispatcher` can be used\n * to build custom data processing pipelines that converts model to anything that is needed. Existing model structure can\n * be used to generate events (listening to {@link module:engine/model/document~Document#event:change Document change event} is not\n * required)\n * and custom callbacks can be added to the events (these does not have to be limited to changes in the view).\n *\n * When providing your own event listeners for `ModelConversionDispatcher` keep in mind that any callback that had\n * {@link module:engine/conversion/modelconsumable~ModelConsumable#consume consumed} a value from consumable (and did some changes, i.e. to\n * the view) should also stop the event. This is because whenever a callback is fired it is assumed that there is something\n * to be consumed. Thanks to that approach, you do not have to test whether there is anything to consume at the beginning\n * of your listener callback.\n *\n * Example of providing a converter for `ModelConversionDispatcher`:\n *\n *\t\t// We will convert inserting \"paragraph\" model element into the model.\n *\t\tmodelDispatcher.on( 'insert:paragraph', ( evt, data, consumable, conversionApi ) => {\n *\t\t\t// Remember to consume the part of consumable.\n *\t\t\tconsumable.consume( data.item, 'insert' );\n *\n *\t\t\t// Translate position in model to position in the view.\n *\t\t\tconst viewPosition = conversionApi.mapper.toViewPosition( data.range.start );\n *\n *\t\t\t// Create a P element (note that this converter is for inserting P elements -> 'insert:paragraph').\n *\t\t\tconst viewElement = new ViewElement( 'p' );\n *\n *\t\t\t// Bind the newly created view element to model element so positions will map accordingly in future.\n *\t\t\tconversionApi.mapper.bindElements( data.item, viewElement );\n *\n *\t\t\t// Add the newly created view element to the view.\n *\t\t\tviewWriter.insert( viewPosition, viewElement );\n *\n *\t\t\t// Remember to stop the event propagation if the data.item was consumed.\n *\t\t\tevt.stop();\n *\t\t} );\n *\n * Callback that \"overrides\" other callback:\n *\n *\t\t// Special converter for `linkHref` attribute added on custom `quote` element. Note, that this\n *\t\t// attribute may be the same as the attribute added by other features (link feature in this case).\n *\t\t// It might be even added by that feature! It makes sense that a part of content that is a quote is linked\n *\t\t// to an external source so it makes sense that link feature works on the custom quote element.\n *\t\t// However, we have to make sure that the attributes added by link feature are correctly converted.\n *\t\t// To block default `linkHref` conversion we have to:\n *\t\t// 1) add this callback with higher priority than link feature callback,\n *\t\t// 2) consume `linkHref` attribute add change.\n *\t\tmodelConversionDispatcher.on( 'addAttribute:linkHref:quote', ( evt, data, consumable, conversionApi ) => {\n *\t\t\tconsumable.consume( data.item, 'addAttribute:linkHref' );\n *\n *\t\t\t// Create a button that will represent the `linkHref` attribute.\n *\t\t\tlet viewSourceBtn = new ViewElement( 'a', {\n *\t\t\t\thref: data.item.getAttribute( 'linkHref' ),\n *\t\t\t\ttitle: 'source'\n *\t\t\t} );\n *\n *\t\t\t// Add a class for the button.\n *\t\t\tviewSourceBtn.addClass( 'source' );\n *\n *\t\t\t// Insert the button using writer API.\n *\t\t\t// If `addAttribute` event is fired by\n *\t\t\t// `module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#convertInsert` it is fired\n *\t\t\t// after `data.item` insert conversion was done. If the event is fired due to attribute insertion coming from\n *\t\t\t// different source, `data.item` already existed. This means we are safe to get `viewQuote` from mapper.\n *\t\t\tconst viewQuote = conversionApi.mapper.toViewElement( data.item );\n *\t\t\tconst position = new ViewPosition( viewQuote, viewQuote.childCount );\n *\t\t\tviewWriter.insert( position, viewSourceBtn );\n *\n *\t\t\tevt.stop();\n *\t\t}, { priority: 'high' } );\n */\nexport default class ModelConversionDispatcher {\n\t/**\n\t * Creates a `ModelConversionDispatcher` that operates using passed API.\n\t *\n\t * @param {module:engine/model/document~Document} modelDocument Model document instance bound with this dispatcher.\n\t * @param {Object} [conversionApi] Interface passed by dispatcher to the events callbacks.\n\t */\n\tconstructor( modelDocument, conversionApi = {} ) {\n\t\t/**\n\t\t * Model document instance bound with this dispatcher.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/document~Document}\n\t\t */\n\t\tthis._modelDocument = modelDocument;\n\n\t\t/**\n\t\t * Interface passed by dispatcher to the events callbacks.\n\t\t *\n\t\t * @member {Object}\n\t\t */\n\t\tthis.conversionApi = extend( { dispatcher: this }, conversionApi );\n\t}\n\n\t/**\n\t * Prepares data and fires a proper event.\n\t *\n\t * The method is crafted to take use of parameters passed in {@link module:engine/model/document~Document#event:change Document change\n\t * event}.\n\t *\n\t * @see module:engine/model/document~Document#event:change\n\t * @fires insert\n\t * @fires remove\n\t * @fires addAttribute\n\t * @fires removeAttribute\n\t * @fires changeAttribute\n\t * @fires addMarker\n\t * @param {String} type Change type.\n\t * @param {Object} data Additional information about the change.\n\t */\n\tconvertChange( type, data ) {\n\t\t// Do not convert changes if they happen in graveyard.\n\t\t// Graveyard is a special root that has no view / no other representation and changes done in it should not be converted.\n\t\tif ( type !== 'remove' && data.range && data.range.root.rootName == '$graveyard' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type == 'remove' && data.sourcePosition.root.rootName == '$graveyard' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type == 'rename' && data.element.root.rootName == '$graveyard' ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// We can safely dispatch changes.\n\t\tif ( type == 'insert' || type == 'reinsert' ) {\n\t\t\tthis.convertInsertion( data.range );\n\t\t} else if ( type == 'move' ) {\n\t\t\tthis.convertMove( data.sourcePosition, data.range );\n\t\t} else if ( type == 'remove' ) {\n\t\t\tthis.convertRemove( data.sourcePosition, data.range );\n\t\t} else if ( type == 'addAttribute' || type == 'removeAttribute' || type == 'changeAttribute' ) {\n\t\t\tthis.convertAttribute( type, data.range, data.key, data.oldValue, data.newValue );\n\t\t} else if ( type == 'rename' ) {\n\t\t\tthis.convertRename( data.element, data.oldName );\n\t\t}\n\t}\n\n\t/**\n\t * Starts conversion of insertion-change on given `range`.\n\t *\n\t * Analyzes given range and fires insertion-connected events with data based on that range.\n\t *\n\t * **Note**: This method will fire separate events for node insertion and attributes insertion. All\n\t * attributes that are set on inserted nodes are treated like they were added just after node insertion.\n\t *\n\t * @fires insert\n\t * @fires addAttribute\n\t * @fires addMarker\n\t * @param {module:engine/model/range~Range} range Inserted range.\n\t */\n\tconvertInsertion( range ) {\n\t\t// Create a list of things that can be consumed, consisting of nodes and their attributes.\n\t\tconst consumable = this._createInsertConsumable( range );\n\n\t\t// Fire a separate insert event for each node and text fragment contained in the range.\n\t\tfor ( const value of range ) {\n\t\t\tconst item = value.item;\n\t\t\tconst itemRange = Range.createFromPositionAndShift( value.previousPosition, value.length );\n\t\t\tconst data = {\n\t\t\t\titem,\n\t\t\t\trange: itemRange\n\t\t\t};\n\n\t\t\tthis._testAndFire( 'insert', data, consumable );\n\n\t\t\t// Fire a separate addAttribute event for each attribute that was set on inserted items.\n\t\t\t// This is important because most attributes converters will listen only to add/change/removeAttribute events.\n\t\t\t// If we would not add this part, attributes on inserted nodes would not be converted.\n\t\t\tfor ( const key of item.getAttributeKeys() ) {\n\t\t\t\tdata.attributeKey = key;\n\t\t\t\tdata.attributeOldValue = null;\n\t\t\t\tdata.attributeNewValue = item.getAttribute( key );\n\n\t\t\t\tthis._testAndFire( `addAttribute:${ key }`, data, consumable );\n\t\t\t}\n\t\t}\n\n\t\tfor ( const marker of this._modelDocument.markers ) {\n\t\t\tconst markerRange = marker.getRange();\n\n\t\t\t// Check if inserted content is inserted into a marker.\n\t\t\tif ( markerRange.containsPosition( range.start ) ) {\n\t\t\t\tthis.convertMarker( 'addMarker', marker.name, markerRange.getIntersection( range ) );\n\t\t\t}\n\n\t\t\t// Check if inserted content contains a marker.\n\t\t\tif ( range.containsRange( markerRange ) || range.isEqual( markerRange ) ) {\n\t\t\t\tthis.convertMarker( 'addMarker', marker.name, markerRange );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Starts conversion of move-change of given `range`, that was moved from given `sourcePosition`.\n\t *\n\t * Fires {@link ~#event:remove remove event} and {@link ~#event:insert insert event} based on passed parameters.\n\t *\n\t * @fires remove\n\t * @fires insert\n\t * @param {module:engine/model/position~Position} sourcePosition The original position from which the range was moved.\n\t * @param {module:engine/model/range~Range} range The range containing the moved content.\n\t */\n\tconvertMove( sourcePosition, range ) {\n\t\t// Move left – convert insertion first (#847).\n\t\tif ( range.start.isBefore( sourcePosition ) ) {\n\t\t\tthis.convertInsertion( range );\n\n\t\t\tconst sourcePositionAfterInsertion =\n\t\t\t\tsourcePosition._getTransformedByInsertion( range.start, range.end.offset - range.start.offset );\n\n\t\t\tthis.convertRemove( sourcePositionAfterInsertion, range );\n\t\t} else {\n\t\t\tthis.convertRemove( sourcePosition, range );\n\t\t\tthis.convertInsertion( range );\n\t\t}\n\t}\n\n\t/**\n\t * Starts conversion of remove-change of given `range`, that was removed from given `sourcePosition`.\n\t *\n\t * Fires {@link ~#event:remove remove event} with data based on passed values.\n\t *\n\t * @fires remove\n\t * @param {module:engine/model/position~Position} sourcePosition Position from where the range has been removed.\n\t * @param {module:engine/model/range~Range} range Removed range (after remove, in\n\t * {@link module:engine/model/document~Document#graveyard graveyard root}).\n\t */\n\tconvertRemove( sourcePosition, range ) {\n\t\tconst consumable = this._createConsumableForRange( range, 'remove' );\n\n\t\tfor ( const item of range.getItems( { shallow: true } ) ) {\n\t\t\tconst data = {\n\t\t\t\tsourcePosition,\n\t\t\t\titem\n\t\t\t};\n\n\t\t\tthis._testAndFire( 'remove', data, consumable );\n\t\t}\n\t}\n\n\t/**\n\t * Starts conversion of attribute-change on given `range`.\n\t *\n\t * Analyzes given attribute change and fires attributes-connected events with data based on passed values.\n\t *\n\t * @fires addAttribute\n\t * @fires removeAttribute\n\t * @fires changeAttribute\n\t * @param {String} type Change type. Possible values: `addAttribute`, `removeAttribute`, `changeAttribute`.\n\t * @param {module:engine/model/range~Range} range Changed range.\n\t * @param {String} key Attribute key.\n\t * @param {*} oldValue Attribute value before the change or `null` if attribute has not been set.\n\t * @param {*} newValue New attribute value or `null` if attribute has been removed.\n\t */\n\tconvertAttribute( type, range, key, oldValue, newValue ) {\n\t\t// Create a list with attributes to consume.\n\t\tconst consumable = this._createConsumableForRange( range, type + ':' + key );\n\n\t\t// Create a separate attribute event for each node in the range.\n\t\tfor ( const value of range ) {\n\t\t\tconst item = value.item;\n\t\t\tconst itemRange = Range.createFromPositionAndShift( value.previousPosition, value.length );\n\t\t\tconst data = {\n\t\t\t\titem,\n\t\t\t\trange: itemRange,\n\t\t\t\tattributeKey: key,\n\t\t\t\tattributeOldValue: oldValue,\n\t\t\t\tattributeNewValue: newValue\n\t\t\t};\n\n\t\t\tthis._testAndFire( `${ type }:${ key }`, data, consumable );\n\t\t}\n\t}\n\n\t/**\n\t * Starts conversion of rename-change of given `element` that had given `oldName`.\n\t *\n\t * Fires {@link ~#event:remove remove event} and {@link ~#event:insert insert event} based on passed values.\n\t *\n\t * @fires remove\n\t * @fires insert\n\t * @param {module:engine/model/element~Element} element Renamed element.\n\t * @param {String} oldName Name of the renamed element before it was renamed.\n\t */\n\tconvertRename( element, oldName ) {\n\t\t// Create fake element that will be used to fire remove event. The fake element will have the old element name.\n\t\tconst fakeElement = element.clone( true );\n\t\tfakeElement.name = oldName;\n\n\t\t// Bind fake element with original view element so the view element will be removed.\n\t\tthis.conversionApi.mapper.bindElements(\n\t\t\tfakeElement,\n\t\t\tthis.conversionApi.mapper.toViewElement( element )\n\t\t);\n\n\t\t// Create fake document fragment so a range can be created on fake element.\n\t\tconst fakeDocumentFragment = new DocumentFragment();\n\t\tfakeDocumentFragment.appendChildren( fakeElement );\n\n\t\tthis.convertRemove( Position.createBefore( element ), Range.createOn( fakeElement ) );\n\t\tthis.convertInsertion( Range.createOn( element ) );\n\t}\n\n\t/**\n\t * Starts selection conversion.\n\t *\n\t * Fires events for given {@link module:engine/model/selection~Selection selection} to start selection conversion.\n\t *\n\t * @fires selection\n\t * @fires selectionAttribute\n\t * @param {module:engine/model/selection~Selection} selection Selection to convert.\n\t */\n\tconvertSelection( selection ) {\n\t\tconst markers = Array.from( this._modelDocument.markers.getMarkersAtPosition( selection.getFirstPosition() ) );\n\t\tconst consumable = this._createSelectionConsumable( selection, markers );\n\n\t\tthis.fire( 'selection', { selection }, consumable, this.conversionApi );\n\n\t\tfor ( const marker of markers ) {\n\t\t\tconst data = {\n\t\t\t\tselection,\n\t\t\t\tname: marker.name\n\t\t\t};\n\n\t\t\tif ( consumable.test( selection, 'selectionMarker:' + marker.name ) ) {\n\t\t\t\tthis.fire( 'selectionMarker:' + marker.name, data, consumable, this.conversionApi );\n\t\t\t}\n\t\t}\n\n\t\tfor ( const key of selection.getAttributeKeys() ) {\n\t\t\tconst data = {\n\t\t\t\tselection,\n\t\t\t\tkey,\n\t\t\t\tvalue: selection.getAttribute( key )\n\t\t\t};\n\n\t\t\t// Do not fire event if the attribute has been consumed.\n\t\t\tif ( consumable.test( selection, 'selectionAttribute:' + data.key ) ) {\n\t\t\t\tthis.fire( 'selectionAttribute:' + data.key, data, consumable, this.conversionApi );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Starts marker-conversion.\n\t *\n\t * Fires {@link ~#event:addMarker addMarker event} or {@link ~#event:removeMarker removeMarker event} based on\n\t * given `type` with data based on passed parameters.\n\t *\n\t * @fires addMarker\n\t * @fires removeMarker\n\t * @param {'addMarker'|'removeMarker'} type Change type.\n\t * @param {String} name Marker name.\n\t * @param {module:engine/model/range~Range} range Marker range.\n\t */\n\tconvertMarker( type, name, range ) {\n\t\t// Do not convert if range is in graveyard or not in the document (e.g. in DocumentFragment).\n\t\tif ( !range.root.document || range.root.rootName == '$graveyard' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst consumable = this._createMarkerConsumable( type, range );\n\t\tconst data = { name, range };\n\n\t\tthis.fire( type + ':' + name, data, consumable, this.conversionApi );\n\t}\n\n\t/**\n\t * Creates {@link module:engine/conversion/modelconsumable~ModelConsumable} with values to consume from given range, assuming that\n\t * given range has just been inserted to the model.\n\t *\n\t * @private\n\t * @param {module:engine/model/range~Range} range Inserted range.\n\t * @returns {module:engine/conversion/modelconsumable~ModelConsumable} Values to consume.\n\t */\n\t_createInsertConsumable( range ) {\n\t\tconst consumable = new Consumable();\n\n\t\tfor ( const value of range ) {\n\t\t\tconst item = value.item;\n\n\t\t\tconsumable.add( item, 'insert' );\n\n\t\t\tfor ( const key of item.getAttributeKeys() ) {\n\t\t\t\tconsumable.add( item, 'addAttribute:' + key );\n\t\t\t}\n\t\t}\n\n\t\treturn consumable;\n\t}\n\n\t/**\n\t * Creates {@link module:engine/conversion/modelconsumable~ModelConsumable} with values of given `type`\n\t * for each item from given `range`.\n\t *\n\t * @private\n\t * @param {module:engine/model/range~Range} range Affected range.\n\t * @param {String} type Consumable type.\n\t * @returns {module:engine/conversion/modelconsumable~ModelConsumable} Values to consume.\n\t */\n\t_createConsumableForRange( range, type ) {\n\t\tconst consumable = new Consumable();\n\n\t\tfor ( const item of range.getItems() ) {\n\t\t\tconsumable.add( item, type );\n\t\t}\n\n\t\treturn consumable;\n\t}\n\n\t/**\n\t * Creates {@link module:engine/conversion/modelconsumable~ModelConsumable} with selection consumable values.\n\t *\n\t * @private\n\t * @param {module:engine/model/selection~Selection} selection Selection to create consumable from.\n\t * @param {Iterable.<module:engine/model/markercollection~Marker>} markers Markers which contains selection.\n\t * @returns {module:engine/conversion/modelconsumable~ModelConsumable} Values to consume.\n\t */\n\t_createSelectionConsumable( selection, markers ) {\n\t\tconst consumable = new Consumable();\n\n\t\tconsumable.add( selection, 'selection' );\n\n\t\tfor ( const marker of markers ) {\n\t\t\tconsumable.add( selection, 'selectionMarker:' + marker.name );\n\t\t}\n\n\t\tfor ( const key of selection.getAttributeKeys() ) {\n\t\t\tconsumable.add( selection, 'selectionAttribute:' + key );\n\t\t}\n\n\t\treturn consumable;\n\t}\n\n\t/**\n\t * Creates {@link module:engine/conversion/modelconsumable~ModelConsumable} for adding or removing marker on given `range`.\n\t *\n\t * @private\n\t * @param {'addMarker'|'removeMarker'} type Change type.\n\t * @param {module:engine/model/range~Range} range Range on which marker was added or removed.\n\t * @returns {module:engine/conversion/modelconsumable~ModelConsumable} Values to consume.\n\t */\n\t_createMarkerConsumable( type, range ) {\n\t\tconst consumable = new Consumable();\n\n\t\tconsumable.add( range, type );\n\n\t\treturn consumable;\n\t}\n\n\t/**\n\t * Tests passed `consumable` to check whether given event can be fired and if so, fires it.\n\t *\n\t * @private\n\t * @fires insert\n\t * @fires remove\n\t * @fires addAttribute\n\t * @fires removeAttribute\n\t * @fires changeAttribute\n\t * @param {String} type Event type.\n\t * @param {Object} data Event data.\n\t * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n\t */\n\t_testAndFire( type, data, consumable ) {\n\t\tif ( !consumable.test( data.item, type ) ) {\n\t\t\t// Do not fire event if the item was consumed.\n\t\t\treturn;\n\t\t}\n\n\t\tconst name = data.item.name || '$text';\n\n\t\tthis.fire( type + ':' + name, data, consumable, this.conversionApi );\n\t}\n\n\t/**\n\t * Fired for inserted nodes.\n\t *\n\t * `insert` is a namespace for a class of events. Names of actually called events follow this pattern:\n\t * `insert:<name>`. `name` is either `'$text'` when one or more characters has been inserted or\n\t * {@link module:engine/model/element~Element#name name} of inserted element.\n\t *\n\t * This way listeners can either listen to a general `insert` event or specific event (for example `insert:paragraph`).\n\t *\n\t * @event insert\n\t * @param {Object} data Additional information about the change.\n\t * @param {module:engine/model/item~Item} data.item Inserted item.\n\t * @param {module:engine/model/range~Range} data.range Range spanning over inserted item.\n\t * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n\t * @param {Object} conversionApi Conversion interface to be used by callback, passed in `ModelConversionDispatcher` constructor.\n\t */\n\n\t/**\n\t * Fired for removed nodes.\n\t *\n\t * `remove` is a namespace for a class of events. Names of actually called events follow this pattern:\n\t * `remove:<name>`. `name` is either `'$text'` when one or more characters has been removed or the\n\t * {@link module:engine/model/element~Element#name name} of removed element.\n\t *\n\t * This way listeners can either listen to a general `remove` event or specific event (for example `remove:paragraph`).\n\t *\n\t * @event remove\n\t * @param {Object} data Additional information about the change.\n\t * @param {module:engine/model/position~Position} data.sourcePosition Position from where the range has been removed.\n\t * @param {module:engine/model/range~Range} data.range Removed range (in {@link module:engine/model/document~Document#graveyard\n\t * graveyard root}).\n\t * @param {Object} conversionApi Conversion interface to be used by callback, passed in `ModelConversionDispatcher` constructor.\n\t */\n\n\t/**\n\t * Fired when attribute has been added on a node.\n\t *\n\t * `addAttribute` is a namespace for a class of events. Names of actually called events follow this pattern:\n\t * `addAttribute:<attributeKey>:<name>`. `attributeKey` is the key of added attribute. `name` is either `'$text'`\n\t * if attribute was added on one or more characters, or the {@link module:engine/model/element~Element#name name} of\n\t * the element on which attribute was added.\n\t *\n\t * This way listeners can either listen to a general `addAttribute:bold` event or specific event\n\t * (for example `addAttribute:link:image`).\n\t *\n\t * @event addAttribute\n\t * @param {Object} data Additional information about the change.\n\t * @param {module:engine/model/item~Item} data.item Changed item.\n\t * @param {module:engine/model/range~Range} data.range Range spanning over changed item.\n\t * @param {String} data.attributeKey Attribute key.\n\t * @param {null} data.attributeOldValue Attribute value before the change - always `null`. Kept for the sake of unifying events.\n\t * @param {*} data.attributeNewValue New attribute value.\n\t * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n\t * @param {Object} conversionApi Conversion interface to be used by callback, passed in `ModelConversionDispatcher` constructor.\n\t */\n\n\t/**\n\t * Fired when attribute has been removed from a node.\n\t *\n\t * `removeAttribute` is a namespace for a class of events. Names of actually called events follow this pattern:\n\t * `removeAttribute:<attributeKey>:<name>`. `attributeKey` is the key of removed attribute. `name` is either `'$text'`\n\t * if attribute was removed from one or more characters, or the {@link module:engine/model/element~Element#name name} of\n\t * the element from which attribute was removed.\n\t *\n\t * This way listeners can either listen to a general `removeAttribute:bold` event or specific event\n\t * (for example `removeAttribute:link:image`).\n\t *\n\t * @event removeAttribute\n\t * @param {Object} data Additional information about the change.\n\t * @param {module:engine/model/item~Item} data.item Changed item.\n\t * @param {module:engine/model/range~Range} data.range Range spanning over changed item.\n\t * @param {String} data.attributeKey Attribute key.\n\t * @param {*} data.attributeOldValue Attribute value before it was removed.\n\t * @param {null} data.attributeNewValue New attribute value - always `null`. Kept for the sake of unifying events.\n\t * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n\t * @param {Object} conversionApi Conversion interface to be used by callback, passed in `ModelConversionDispatcher` constructor.\n\t */\n\n\t/**\n\t * Fired when attribute of a node has been changed.\n\t *\n\t * `changeAttribute` is a namespace for a class of events. Names of actually called events follow this pattern:\n\t * `changeAttribute:<attributeKey>:<name>`. `attributeKey` is the key of changed attribute. `name` is either `'$text'`\n\t * if attribute was changed on one or more characters, or the {@link module:engine/model/element~Element#name name} of\n\t * the element on which attribute was changed.\n\t *\n\t * This way listeners can either listen to a general `changeAttribute:link` event or specific event\n\t * (for example `changeAttribute:link:image`).\n\t *\n\t * @event changeAttribute\n\t * @param {Object} data Additional information about the change.\n\t * @param {module:engine/model/item~Item} data.item Changed item.\n\t * @param {module:engine/model/range~Range} data.range Range spanning over changed item.\n\t * @param {String} data.attributeKey Attribute key.\n\t * @param {*} data.attributeOldValue Attribute value before the change.\n\t * @param {*} data.attributeNewValue New attribute value.\n\t * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n\t * @param {Object} conversionApi Conversion interface to be used by callback, passed in `ModelConversionDispatcher` constructor.\n\t */\n\n\t/**\n\t * Fired for {@link module:engine/model/selection~Selection selection} changes.\n\t *\n\t * @event selection\n\t * @param {module:engine/model/selection~Selection} selection `Selection` instance that is converted.\n\t * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n\t * @param {Object} conversionApi Conversion interface to be used by callback, passed in `ModelConversionDispatcher` constructor.\n\t */\n\n\t/**\n\t * Fired for {@link module:engine/model/selection~Selection selection} attributes changes.\n\t *\n\t * `selectionAttribute` is a namespace for a class of events. Names of actually called events follow this pattern:\n\t * `selectionAttribute:<attributeKey>`. `attributeKey` is the key of selection attribute. This way listen can listen to\n\t * certain attribute, i.e. `addAttribute:bold`.\n\t *\n\t * @event selectionAttribute\n\t * @param {Object} data Additional information about the change.\n\t * @param {module:engine/model/selection~Selection} data.selection Selection that is converted.\n\t * @param {String} data.attributeKey Key of changed attribute.\n\t * @param {*} data.attributeValue Value of changed attribute.\n\t * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n\t * @param {Object} conversionApi Conversion interface to be used by callback, passed in `ModelConversionDispatcher` constructor.\n\t */\n\n\t/**\n\t * Fired when a new marker is added to the model.\n\t *\n\t * `addMarker` is a namespace for a class of events. Names of actually called events follow this pattern:\n\t * `addMarker:<markerName>`. By specifying certain marker names, you can make the events even more gradual. For example,\n\t * markers can be named `foo:abc`, `foo:bar`, then it is possible to listen to `addMarker:foo` or `addMarker:foo:abc` and\n\t * `addMarker:foo:bar` events.\n\t *\n\t * @event addMarker\n\t * @param {Object} data Additional information about the change.\n\t * @param {String} data.name Marker name.\n\t * @param {module:engine/model/range~Range} data.range Marker range.\n\t * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n\t * @param {Object} conversionApi Conversion interface to be used by callback, passed in `ModelConversionDispatcher` constructor.\n\t */\n\n\t/**\n\t * Fired when marker is removed from the model.\n\t *\n\t * `removeMarker` is a namespace for a class of events. Names of actually called events follow this pattern:\n\t * `removeMarker:<markerName>`. By specifying certain marker names, you can make the events even more gradual. For example,\n\t * markers can be named `foo:abc`, `foo:bar`, then it is possible to listen to `removeMarker:foo` or `removeMarker:foo:abc` and\n\t * `removeMarker:foo:bar` events.\n\t *\n\t * @event removeMarker\n\t * @param {Object} data Additional information about the change.\n\t * @param {String} data.name Marker name.\n\t * @param {module:engine/model/range~Range} data.range Marker range.\n\t * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n\t * @param {Object} conversionApi Conversion interface to be used by callback, passed in `ModelConversionDispatcher` constructor.\n\t */\n}\n\nmix( ModelConversionDispatcher, EmitterMixin );\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/conversion/modelconversiondispatcher.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/dataprocessor/htmldataprocessor\n */\n\n/* globals document, DOMParser */\n\nimport BasicHtmlWriter from './basichtmlwriter';\nimport DomConverter from '../view/domconverter';\nimport { NBSP_FILLER } from '../view/filler';\n\n/**\n * HtmlDataProcessor class.\n * This data processor implementation uses HTML as input/output data.\n *\n * @implements module:engine/dataprocessor/dataprocessor~DataProcessor\n */\nexport default class HtmlDataProcessor {\n\t/**\n\t * Creates a new instance of the HtmlDataProcessor class.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * DOMParser instance used to parse HTML string to HTMLDocument.\n\t\t *\n\t\t * @private\n\t\t * @member {DOMParser}\n\t\t */\n\t\tthis._domParser = new DOMParser();\n\n\t\t/**\n\t\t * DOM converter used to convert DOM elements to view elements.\n\t\t *\n\t\t * @private\n\t\t * @member\n\t\t */\n\t\tthis._domConverter = new DomConverter( { blockFiller: NBSP_FILLER } );\n\n\t\t/**\n\t\t * BasicHtmlWriter instance used to convert DOM elements to HTML string.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/dataprocessor/basichtmlwriter~BasicHtmlWriter}\n\t\t */\n\t\tthis._htmlWriter = new BasicHtmlWriter();\n\t}\n\n\t/**\n\t * Converts provided {@link module:engine/view/documentfragment~DocumentFragment DocumentFragment}\n\t * to data format - in this case HTML string.\n\t *\n\t * @param {module:engine/view/documentfragment~DocumentFragment} viewFragment\n\t * @returns {String} HTML string.\n\t */\n\ttoData( viewFragment ) {\n\t\t// Convert view DocumentFragment to DOM DocumentFragment.\n\t\tconst domFragment = this._domConverter.viewToDom( viewFragment, document );\n\n\t\t// Convert DOM DocumentFragment to HTML output.\n\t\treturn this._htmlWriter.getHtml( domFragment );\n\t}\n\n\t/**\n\t * Converts provided HTML string to view tree.\n\t *\n\t * @param {String} data HTML string.\n\t * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null} Converted view element.\n\t */\n\ttoView( data ) {\n\t\t// Convert input HTML data to DOM DocumentFragment.\n\t\tconst domFragment = this._toDom( data );\n\n\t\t// Convert DOM DocumentFragment to view DocumentFragment.\n\t\treturn this._domConverter.domToView( domFragment );\n\t}\n\n\t/**\n\t * Converts HTML String to its DOM representation. Returns DocumentFragment, containing nodes parsed from\n\t * provided data.\n\t *\n\t * @private\n\t * @param {String} data\n\t * @returns {DocumentFragment}\n\t */\n\t_toDom( data ) {\n\t\tconst document = this._domParser.parseFromString( data, 'text/html' );\n\t\tconst fragment = document.createDocumentFragment();\n\t\tconst nodes = document.body.childNodes;\n\n\t\twhile ( nodes.length > 0 ) {\n\t\t\tfragment.appendChild( nodes[ 0 ] );\n\t\t}\n\n\t\treturn fragment;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/dataprocessor/htmldataprocessor.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/delta/attributedelta\n */\n\nimport Delta from './delta';\nimport DeltaFactory from './deltafactory';\nimport { register } from '../batch';\nimport AttributeOperation from '../operation/attributeoperation';\nimport RootAttributeOperation from '../operation/rootattributeoperation';\nimport Position from '../position';\nimport Range from '../range';\n\n/**\n * To provide specific OT behavior and better collisions solving, methods to change attributes\n * ({@link module:engine/model/batch~Batch#setAttribute} and {@link module:engine/model/batch~Batch#removeAttribute})\n * use `AttributeDelta` class which inherits from the `Delta` class and may overwrite some methods.\n * @extends module:engine/model/delta/delta~Delta\n */\nexport default class AttributeDelta extends Delta {\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\treturn 'attribute';\n\t}\n\n\t/**\n\t * The attribute key that is changed by the delta or `null` if the delta has no operations.\n\t *\n\t * @readonly\n\t * @type {String|null}\n\t */\n\tget key() {\n\t\treturn this.operations[ 0 ] ? this.operations[ 0 ].key : null;\n\t}\n\n\t/**\n\t * The attribute value that is set by the delta or `null` if the delta has no operations.\n\t *\n\t * @readonly\n\t * @type {*|null}\n\t */\n\tget value() {\n\t\treturn this.operations[ 0 ] ? this.operations[ 0 ].newValue : null;\n\t}\n\n\t/**\n\t * The range on which delta operates or `null` if the delta has no operations.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/range~Range|null}\n\t */\n\tget range() {\n\t\t// Check if it is cached.\n\t\tif ( this._range ) {\n\t\t\treturn this._range;\n\t\t}\n\n\t\tlet start = null;\n\t\tlet end = null;\n\n\t\tfor ( const operation of this.operations ) {\n\t\t\tif ( start === null || start.isAfter( operation.range.start ) ) {\n\t\t\t\tstart = operation.range.start;\n\t\t\t}\n\n\t\t\tif ( end === null || end.isBefore( operation.range.end ) ) {\n\t\t\t\tend = operation.range.end;\n\t\t\t}\n\t\t}\n\n\t\tif ( start && end ) {\n\t\t\tthis._range = new Range( start, end );\n\n\t\t\treturn this._range;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tget _reverseDeltaClass() {\n\t\treturn AttributeDelta;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tdelete json._range;\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'engine.model.delta.AttributeDelta';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get _priority() {\n\t\treturn 20;\n\t}\n}\n\n/**\n * To provide specific OT behavior and better collisions solving, methods to change attributes\n * ({@link module:engine/model/batch~Batch#setAttribute} and {@link module:engine/model/batch~Batch#removeAttribute})\n * use `RootAttributeDelta` class which inherits from the `Delta` class and may\n * overwrite some methods.\n *\n * @extends module:engine/model/delta/delta~Delta\n */\nexport class RootAttributeDelta extends Delta {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'engine.model.delta.RootAttributeDelta';\n\t}\n}\n\n/**\n * Sets value of the attribute with given key on a {@link module:engine/model/item~Item model item}\n * or on a {@link module:engine/model/range~Range range}.\n *\n * @chainable\n * @method module:engine/model/batch~Batch#setAttribute\n * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange\n * Model item or range on which the attribute will be set.\n * @param {String} key Attribute key.\n * @param {*} value Attribute new value.\n */\nregister( 'setAttribute', function( itemOrRange, key, value ) {\n\tattribute( this, key, value, itemOrRange );\n\n\treturn this;\n} );\n\n/**\n * Removes an attribute with given key from a {@link module:engine/model/item~Item model item}\n * or from a {@link module:engine/model/range~Range range}.\n *\n * @chainable\n * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange\n * Model item or range from which the attribute will be removed.\n * @method module:engine/model/batch~Batch#removeAttribute\n * @param {String} key Attribute key.\n */\nregister( 'removeAttribute', function( itemOrRange, key ) {\n\tattribute( this, key, null, itemOrRange );\n\n\treturn this;\n} );\n\nfunction attribute( batch, key, value, itemOrRange ) {\n\tif ( itemOrRange instanceof Range ) {\n\t\tchangeRange( batch, batch.document, key, value, itemOrRange );\n\t} else {\n\t\tchangeItem( batch, batch.document, key, value, itemOrRange );\n\t}\n}\n\nfunction changeItem( batch, doc, key, value, item ) {\n\tconst previousValue = item.getAttribute( key );\n\tlet range, operation;\n\n\tconst delta = item.is( 'rootElement' ) ? new RootAttributeDelta() : new AttributeDelta();\n\n\tif ( previousValue != value ) {\n\t\tbatch.addDelta( delta );\n\n\t\tif ( item.is( 'rootElement' ) ) {\n\t\t\t// If we change attributes of root element, we have to use `RootAttributeOperation`.\n\t\t\toperation = new RootAttributeOperation( item, key, previousValue, value, doc.version );\n\t\t} else {\n\t\t\tif ( item.is( 'element' ) ) {\n\t\t\t\t// If we change the attribute of the element, we do not want to change attributes of its children, so\n\t\t\t\t// the end of the range cannot be after the closing tag, it should be inside that element, before any of\n\t\t\t\t// it's children, so the range will contain only the opening tag.\n\t\t\t\trange = new Range( Position.createBefore( item ), Position.createFromParentAndOffset( item, 0 ) );\n\t\t\t} else {\n\t\t\t\t// If `item` is text proxy, we create a range from the beginning to the end of that text proxy, to change\n\t\t\t\t// all characters represented by it.\n\t\t\t\trange = new Range( Position.createBefore( item ), Position.createAfter( item ) );\n\t\t\t}\n\n\t\t\toperation = new AttributeOperation( range, key, previousValue, value, doc.version );\n\t\t}\n\n\t\tdelta.addOperation( operation );\n\t\tdoc.applyOperation( operation );\n\t}\n}\n\n// Because attribute operation needs to have the same attribute value on the whole range, this function splits the range\n// into smaller parts.\nfunction changeRange( batch, doc, attributeKey, attributeValue, range ) {\n\tconst delta = new AttributeDelta();\n\n\t// Position of the last split, the beginning of the new range.\n\tlet lastSplitPosition = range.start;\n\n\t// Currently position in the scanning range. Because we need value after the position, it is not a current\n\t// position of the iterator but the previous one (we need to iterate one more time to get the value after).\n\tlet position,\n\t// Value before the currently position.\n\t\tattributeValueBefore,\n\t// Value after the currently position.\n\t\tattributeValueAfter;\n\n\tfor ( const value of range ) {\n\t\tattributeValueAfter = value.item.getAttribute( attributeKey );\n\n\t\t// At the first run of the iterator the position in undefined. We also do not have a attributeValueBefore, but\n\t\t// because attributeValueAfter may be null, attributeValueBefore may be equal attributeValueAfter ( undefined == null ).\n\t\tif ( position && attributeValueBefore != attributeValueAfter ) {\n\t\t\t// if attributeValueBefore == attributeValue there is nothing to change, so we add operation only if these values are different.\n\t\t\tif ( attributeValueBefore != attributeValue ) {\n\t\t\t\taddOperation();\n\t\t\t}\n\n\t\t\tlastSplitPosition = position;\n\t\t}\n\n\t\tposition = value.nextPosition;\n\t\tattributeValueBefore = attributeValueAfter;\n\t}\n\n\t// Because position in the loop is not the iterator position (see let position comment), the last position in\n\t// the while loop will be last but one position in the range. We need to check the last position manually.\n\tif ( position instanceof Position && position != lastSplitPosition && attributeValueBefore != attributeValue ) {\n\t\taddOperation();\n\t}\n\n\tfunction addOperation() {\n\t\t// Add delta to the batch only if there is at least operation in the delta. Add delta only once.\n\t\tif ( delta.operations.length === 0 ) {\n\t\t\tbatch.addDelta( delta );\n\t\t}\n\n\t\tconst range = new Range( lastSplitPosition, position );\n\t\tconst operation = new AttributeOperation( range, attributeKey, attributeValueBefore, attributeValue, doc.version );\n\n\t\tdelta.addOperation( operation );\n\t\tdoc.applyOperation( operation );\n\t}\n}\n\nDeltaFactory.register( AttributeDelta );\nDeltaFactory.register( RootAttributeDelta );\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/delta/attributedelta.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/delta/renamedelta\n */\n\nimport Delta from './delta';\nimport DeltaFactory from './deltafactory';\nimport { register } from '../batch';\nimport RenameOperation from '../operation/renameoperation';\nimport Element from '../element';\nimport Position from '../position';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * To provide specific OT behavior and better collisions solving, the {@link module:engine/model/batch~Batch#rename Batch#rename} method\n * uses the `RenameDelta` class which inherits from the `Delta` class and may overwrite some methods.\n */\nexport default class RenameDelta extends Delta {\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\treturn 'rename';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget _reverseDeltaClass() {\n\t\treturn RenameDelta;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'engine.model.delta.RenameDelta';\n\t}\n}\n\nfunction apply( batch, delta, operation ) {\n\tdelta.addOperation( operation );\n\tbatch.document.applyOperation( operation );\n}\n\n/**\n * Renames given element.\n *\n * @chainable\n * @method module:engine/model/batch~Batch#rename\n * @param {module:engine/model/element~Element} element The element to rename.\n * @param {String} newName New element name.\n */\nregister( 'rename', function( element, newName ) {\n\tif ( !( element instanceof Element ) ) {\n\t\t/**\n\t\t * Trying to rename an object which is not an instance of Element.\n\t\t *\n\t\t * @error batch-rename-not-element-instance\n\t\t */\n\t\tthrow new CKEditorError( 'batch-rename-not-element-instance: Trying to rename an object which is not an instance of Element.' );\n\t}\n\n\tconst delta = new RenameDelta();\n\tthis.addDelta( delta );\n\n\tconst renameOperation = new RenameOperation( Position.createBefore( element ), element.name, newName, this.document.version );\n\tapply( this, delta, renameOperation );\n\n\treturn this;\n} );\n\nDeltaFactory.register( RenameDelta );\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/delta/renamedelta.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/delta/weakinsertdelta\n */\n\nimport InsertDelta from './insertdelta';\nimport { register } from '../batch';\nimport DeltaFactory from './deltafactory';\nimport InsertOperation from '../operation/insertoperation';\nimport { normalizeNodes } from './../writer';\n\n/**\n * @classdesc\n * To provide specific OT behavior and better collisions solving, the {@link module:engine/model/batch~Batch#insert} method\n * uses the `WeakInsertDelta` class which inherits from the `Delta` class and may overwrite some methods.\n */\nexport default class WeakInsertDelta extends InsertDelta {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'engine.model.delta.WeakInsertDelta';\n\t}\n}\n\n/**\n * Inserts a node or nodes at given position. {@link module:engine/model/batch~Batch#weakInsert weakInsert} is commonly used for actions\n * like typing or plain-text paste (without formatting). There are two differences between\n * {@link module:engine/model/batch~Batch#insert insert} and {@link module:engine/model/batch~Batch#weakInsert weakInsert}:\n *\n * * When using `weakInsert`, inserted nodes will have same attributes as the current attributes of\n * {@link module:engine/model/document~Document#selection document selection}.\n * * If {@link module:engine/model/operation/insertoperation~InsertOperation insert operation} position is inside a range changed by\n * {@link module:engine/model/operation/attributeoperation~AttributeOperation attribute operation},\n * the attribute operation is split into two operations.\n * Thanks to this, attribute change \"omits\" the inserted nodes. The correct behavior for `WeakInsertDelta` is that\n * {@link module:engine/model/operation/attributeoperation~AttributeOperation AttributeOperation} does not \"break\" and also\n * applies attributes for inserted nodes. This behavior has to be reflected during\n * {@link module:engine/model/delta/transform~transform delta transformation}.\n *\n * @chainable\n * @method module:engine/model/batch~Batch#weakInsert\n * @param {module:engine/model/position~Position} position Position of insertion.\n * @param {module:engine/model/node~NodeSet} nodes The list of nodes to be inserted.\n */\nregister( 'weakInsert', function( position, nodes ) {\n\tconst delta = new WeakInsertDelta();\n\tthis.addDelta( delta );\n\n\tnodes = normalizeNodes( nodes );\n\n\tfor ( const node of nodes ) {\n\t\tnode.setAttributesTo( this.document.selection.getAttributes() );\n\t}\n\n\tconst operation = new InsertOperation( position, nodes, this.document.version );\n\tdelta.addOperation( operation );\n\tthis.document.applyOperation( operation );\n\n\treturn this;\n} );\n\nDeltaFactory.register( WeakInsertDelta );\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/delta/weakinsertdelta.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/liveposition\n */\n\nimport Position from './position';\nimport Range from './range';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * `LivePosition` is a type of {@link module:engine/model/position~Position Position}\n * that updates itself as {@link module:engine/model/document~Document document}\n * is changed through operations. It may be used as a bookmark.\n *\n * **Note:** Contrary to {@link module:engine/model/position~Position}, `LivePosition` works only in roots that are\n * {@link module:engine/model/rootelement~RootElement}.\n * If {@link module:engine/model/documentfragment~DocumentFragment} is passed, error will be thrown.\n *\n * **Note:** Be very careful when dealing with `LivePosition`. Each `LivePosition` instance bind events that might\n * have to be unbound.\n * Use {@link module:engine/model/liveposition~LivePosition#detach} whenever you don't need `LivePosition` anymore.\n *\n * @extends module:engine/model/position~Position\n */\nexport default class LivePosition extends Position {\n\t/**\n\t * Creates a live position.\n\t *\n\t * @see module:engine/model/position~Position\n\t * @param {module:engine/model/rootelement~RootElement} root\n\t * @param {Array.<Number>} path\n\t * @param {module:engine/model/position~PositionStickiness} [stickiness] Defaults to `'sticksToNext'`.\n\t * See {@link module:engine/model/liveposition~LivePosition#stickiness}.\n\t */\n\tconstructor( root, path, stickiness ) {\n\t\tsuper( root, path );\n\n\t\tif ( !this.root.is( 'rootElement' ) ) {\n\t\t\t/**\n\t\t\t * LivePosition root has to be an instance of RootElement.\n\t\t\t *\n\t\t\t * @error liveposition-root-not-rootelement\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-liveposition-root-not-rootelement: LivePosition root has to be an instance of RootElement.' );\n\t\t}\n\n\t\t/**\n\t\t * Flag representing `LivePosition` stickiness. `LivePosition` might be sticking to previous node or next node.\n\t\t * Whenever some nodes are inserted at the same position as `LivePosition`, `stickiness` is checked to decide if\n\t\t * LivePosition should be moved. Similar applies when a range of nodes is moved and one of it's boundary\n\t\t * position is same as `LivePosition`.\n\t\t *\n\t\t * Examples:\n\t\t *\n\t\t *\t\tInsert:\n\t\t *\t\tPosition is at | and we insert at the same position, marked as ^:\n\t\t *\t\t- | sticks to previous node: `<p>f|^oo</p>` => `<p>f|baroo</p>`\n\t\t *\t\t- | sticks to next node: `<p>f^|oo</p>` => `<p>fbar|oo</p>`\n\t\t *\n\t\t *\t\tMove:\n\t\t *\t\tPosition is at | and range [ ] is moved to position ^:\n\t\t *\t\t- | sticks to previous node: `<p>f|[oo]</p><p>b^ar</p>` => `<p>f|</p><p>booar</p>`\n\t\t *\t\t- | sticks to next node: `<p>f|[oo]</p><p>b^ar</p>` => `<p>f</p><p>b|ooar</p>`\n\t\t *\n\t\t * @member {module:engine/model/position~PositionStickiness} module:engine/model/liveposition~LivePosition#stickiness\n\t\t */\n\t\tthis.stickiness = stickiness || 'sticksToNext';\n\n\t\tbindWithDocument.call( this );\n\t}\n\n\t/**\n\t * Unbinds all events previously bound by `LivePosition`. Use it whenever you don't need `LivePosition` instance\n\t * anymore (i.e. when leaving scope in which it was declared or before re-assigning variable that was\n\t * referring to it).\n\t */\n\tdetach() {\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * @static\n\t * @method module:engine/model/liveposition~LivePosition.createAfter\n\t * @see module:engine/model/position~Position.createAfter\n\t * @param {module:engine/model/node~Node} node\n\t * @returns {module:engine/model/liveposition~LivePosition}\n\t */\n\n\t/**\n\t * @static\n\t * @method module:engine/model/liveposition~LivePosition.createBefore\n\t * @see module:engine/model/position~Position.createBefore\n\t * @param {module:engine/model/node~Node} node\n\t * @returns {module:engine/model/liveposition~LivePosition}\n\t */\n\n\t/**\n\t * @static\n\t * @method module:engine/model/liveposition~LivePosition.createFromParentAndOffset\n\t * @see module:engine/model/position~Position.createFromParentAndOffset\n\t * @param {module:engine/model/element~Element} parent\n\t * @param {Number} offset\n\t * @returns {module:engine/model/liveposition~LivePosition}\n\t */\n\n\t/**\n\t * @static\n\t * @method module:engine/model/liveposition~LivePosition.createFromPosition\n\t * @see module:engine/model/position~Position.createFromPosition\n\t * @param {module:engine/model/position~Position} position\n\t * @returns {module:engine/model/liveposition~LivePosition}\n\t */\n\n\t/**\n\t * Fired when `LivePosition` instance is changed due to changes on {@link module:engine/model/document~Document}.\n\t *\n\t * @event module:engine/model/liveposition~LivePosition#change\n\t * @param {module:engine/model/position~Position} oldPosition Position equal to this live position before it got changed.\n\t */\n}\n\n/**\n * Binds this `LivePosition` to the {@link module:engine/model/document~Document document} that owns\n * this position's {@link module:engine/model/position~Position#root root}.\n *\n * @ignore\n * @private\n * @method module:engine/model/liveposition~LivePosition.bindWithDocument\n */\nfunction bindWithDocument() {\n\t// Operation types handled by LivePosition (these are operations that change model tree structure).\n\tconst supportedTypes = new Set( [ 'insert', 'move', 'remove', 'reinsert' ] );\n\n\tthis.listenTo(\n\t\tthis.root.document,\n\t\t'change',\n\t\t( event, type, changes ) => {\n\t\t\tif ( supportedTypes.has( type ) ) {\n\t\t\t\ttransform.call( this, type, changes.range, changes.sourcePosition );\n\t\t\t}\n\t\t},\n\t\t{ priority: 'high' }\n\t);\n}\n\n/**\n * Updates this position accordingly to the updates applied to the model. Bases on change events.\n *\n * @ignore\n * @private\n * @method transform\n * @param {String} type Type of changes applied to the Tree Model.\n * @param {module:engine/model/range~Range} range Range containing the result of applied change.\n * @param {module:engine/model/position~Position} [position] Additional position parameter provided by some change events.\n */\nfunction transform( type, range, position ) {\n\t/* eslint-disable no-case-declarations */\n\tconst howMany = range.end.offset - range.start.offset;\n\tlet transformed;\n\n\tswitch ( type ) {\n\t\tcase 'insert':\n\t\t\tconst insertBefore = this.stickiness == 'sticksToNext';\n\t\t\ttransformed = this._getTransformedByInsertion( range.start, howMany, insertBefore );\n\t\t\tbreak;\n\n\t\tcase 'move':\n\t\tcase 'remove':\n\t\tcase 'reinsert':\n\t\t\tconst originalRange = Range.createFromPositionAndShift( position, howMany );\n\n\t\t\tconst gotMoved = originalRange.containsPosition( this ) ||\n\t\t\t\t( originalRange.start.isEqual( this ) && this.stickiness == 'sticksToNext' ) ||\n\t\t\t\t( originalRange.end.isEqual( this ) && this.stickiness == 'sticksToPrevious' );\n\n\t\t\t// We can't use ._getTransformedByMove() because we have a different if-condition.\n\t\t\tif ( gotMoved ) {\n\t\t\t\ttransformed = this._getCombined( position, range.start );\n\t\t\t} else {\n\t\t\t\tconst insertBefore = this.stickiness == 'sticksToNext';\n\t\t\t\ttransformed = this._getTransformedByMove( position, range.start, howMany, insertBefore );\n\t\t\t}\n\t\t\tbreak;\n\t}\n\n\tif ( !this.isEqual( transformed ) ) {\n\t\tconst oldPosition = Position.createFromPosition( this );\n\n\t\tthis.path = transformed.path;\n\t\tthis.root = transformed.root;\n\n\t\tthis.fire( 'change', oldPosition );\n\t}\n\t/* eslint-enable no-case-declarations */\n}\n\nmix( LivePosition, EmitterMixin );\n\n/**\n * Enum representing how position is \"sticking\" with their neighbour nodes.\n * Possible values: `'sticksToNext'`, `'sticksToPrevious'`.\n *\n * @typedef {String} module:engine/model/position~PositionStickiness\n */\n\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/liveposition.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/domconverter\n */\n\n/* globals document, Node, NodeFilter */\n\nimport ViewText from './text';\nimport ViewElement from './element';\nimport ViewPosition from './position';\nimport ViewRange from './range';\nimport ViewSelection from './selection';\nimport ViewDocumentFragment from './documentfragment';\nimport ViewTreeWalker from './treewalker';\nimport { BR_FILLER, INLINE_FILLER_LENGTH, isBlockFiller, isInlineFiller, startsWithFiller, getDataWithoutFiller } from './filler';\n\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\nimport indexOf from '@ckeditor/ckeditor5-utils/src/dom/indexof';\nimport getAncestors from '@ckeditor/ckeditor5-utils/src/dom/getancestors';\nimport getCommonAncestor from '@ckeditor/ckeditor5-utils/src/dom/getcommonancestor';\n\n/**\n * DomConverter is a set of tools to do transformations between DOM nodes and view nodes. It also handles\n * {@link module:engine/view/domconverter~DomConverter#bindElements binding} these nodes.\n *\n * DomConverter does not check which nodes should be rendered (use {@link module:engine/view/renderer~Renderer}), does not keep a\n * state of a tree nor keeps synchronization between tree view and DOM tree (use {@link module:engine/view/document~Document}).\n *\n * DomConverter keeps DOM elements to View element bindings, so when the converter will be destroyed, the binding will\n * be lost. Two converters will keep separate binding maps, so one tree view can be bound with two DOM trees.\n */\nexport default class DomConverter {\n\t/**\n\t * Creates DOM converter.\n\t *\n\t * @param {Object} options Object with configuration options.\n\t * @param {Function} [options.blockFiller=module:engine/view/filler~BR_FILLER] Block filler creator.\n\t */\n\tconstructor( options = {} ) {\n\t\t// Using WeakMap prevent memory leaks: when the converter will be destroyed all referenced between View and DOM\n\t\t// will be removed. Also because it is a *Weak*Map when both view and DOM elements will be removed referenced\n\t\t// will be also removed, isn't it brilliant?\n\t\t//\n\t\t// Yes, PJ. It is.\n\t\t//\n\t\t// You guys so smart.\n\t\t//\n\t\t// I've been here. Seen stuff. Afraid of code now.\n\n\t\t/**\n\t\t * Block {@link module:engine/view/filler filler} creator, which is used to create all block fillers during the\n\t\t * view to DOM conversion and to recognize block fillers during the DOM to view conversion.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Function} module:engine/view/domconverter~DomConverter#blockFiller\n\t\t */\n\t\tthis.blockFiller = options.blockFiller || BR_FILLER;\n\n\t\t/**\n\t\t * Tag names of DOM `Element`s which are considered pre-formatted elements.\n\t\t *\n\t\t * @member {Array.<String>} module:engine/view/domconverter~DomConverter#preElements\n\t\t */\n\t\tthis.preElements = [ 'pre' ];\n\n\t\t/**\n\t\t * Tag names of DOM `Element`s which are considered block elements.\n\t\t *\n\t\t * @member {Array.<String>} module:engine/view/domconverter~DomConverter#blockElements\n\t\t */\n\t\tthis.blockElements = [ 'p', 'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6' ];\n\n\t\t/**\n\t\t * DOM to View mapping.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakMap} module:engine/view/domconverter~DomConverter#_domToViewMapping\n\t\t */\n\t\tthis._domToViewMapping = new WeakMap();\n\n\t\t/**\n\t\t * View to DOM mapping.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakMap} module:engine/view/domconverter~DomConverter#_viewToDomMapping\n\t\t */\n\t\tthis._viewToDomMapping = new WeakMap();\n\n\t\t/**\n\t\t * Holds mapping between fake selection containers and corresponding view selections.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakMap} module:engine/view/domconverter~DomConverter#_fakeSelectionMapping\n\t\t */\n\t\tthis._fakeSelectionMapping = new WeakMap();\n\t}\n\n\t/**\n\t * Binds given DOM element that represents fake selection to {@link module:engine/view/selection~Selection view selection}.\n\t * View selection copy is stored and can be retrieved by {@link module:engine/view/domconverter~DomConverter#fakeSelectionToView}\n\t * method.\n\t *\n\t * @param {HTMLElement} domElement\n\t * @param {module:engine/view/selection~Selection} viewSelection\n\t */\n\tbindFakeSelection( domElement, viewSelection ) {\n\t\tthis._fakeSelectionMapping.set( domElement, ViewSelection.createFromSelection( viewSelection ) );\n\t}\n\n\t/**\n\t * Returns {@link module:engine/view/selection~Selection view selection} instance corresponding to given DOM element that represents\n\t * fake selection. Returns `undefined` if binding to given DOM element does not exists.\n\t *\n\t * @param {HTMLElement} domElement\n\t * @returns {module:engine/view/selection~Selection|undefined}\n\t */\n\tfakeSelectionToView( domElement ) {\n\t\treturn this._fakeSelectionMapping.get( domElement );\n\t}\n\n\t/**\n\t * Binds DOM and View elements, so it will be possible to get corresponding elements using\n\t * {@link module:engine/view/domconverter~DomConverter#getCorrespondingViewElement getCorrespondingViewElement} and\n\t * {@link module:engine/view/domconverter~DomConverter#getCorrespondingDomElement getCorrespondingDomElement}.\n\t *\n\t * @param {HTMLElement} domElement DOM element to bind.\n\t * @param {module:engine/view/element~Element} viewElement View element to bind.\n\t */\n\tbindElements( domElement, viewElement ) {\n\t\tthis._domToViewMapping.set( domElement, viewElement );\n\t\tthis._viewToDomMapping.set( viewElement, domElement );\n\t}\n\n\t/**\n\t * Unbinds given `domElement` from the view element it was bound to. Unbinding is deep, meaning that all children of\n\t * `domElement` will be unbound too.\n\t *\n\t * @param {HTMLElement} domElement DOM element to unbind.\n\t */\n\tunbindDomElement( domElement ) {\n\t\tconst viewElement = this._domToViewMapping.get( domElement );\n\n\t\tif ( viewElement ) {\n\t\t\tthis._domToViewMapping.delete( domElement );\n\t\t\tthis._viewToDomMapping.delete( viewElement );\n\n\t\t\t// Use Array.from because of MS Edge (#923).\n\t\t\tfor ( const child of Array.from( domElement.childNodes ) ) {\n\t\t\t\tthis.unbindDomElement( child );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Binds DOM and View document fragments, so it will be possible to get corresponding document fragments using\n\t * {@link module:engine/view/domconverter~DomConverter#getCorrespondingViewDocumentFragment getCorrespondingViewDocumentFragment} and\n\t * {@link module:engine/view/domconverter~DomConverter#getCorrespondingDomDocumentFragment getCorrespondingDomDocumentFragment}.\n\t *\n\t * @param {DocumentFragment} domFragment DOM document fragment to bind.\n\t * @param {module:engine/view/documentfragment~DocumentFragment} viewFragment View document fragment to bind.\n\t */\n\tbindDocumentFragments( domFragment, viewFragment ) {\n\t\tthis._domToViewMapping.set( domFragment, viewFragment );\n\t\tthis._viewToDomMapping.set( viewFragment, domFragment );\n\t}\n\n\t/**\n\t * Converts view to DOM. For all text nodes, not bound elements and document fragments new items will\n\t * be created. For bound elements and document fragments function will return corresponding items.\n\t *\n\t * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} viewNode View node or document fragment to\n\t * transform.\n\t * @param {Document} domDocument Document which will be used to create DOM nodes.\n\t * @param {Object} [options] Conversion options.\n\t * @param {Boolean} [options.bind=false] Determines whether new elements will be bound.\n\t * @param {Boolean} [options.withChildren=true] If true node's and document fragment's children  will be converted too.\n\t * @returns {Node|DocumentFragment} Converted node or DocumentFragment.\n\t */\n\tviewToDom( viewNode, domDocument, options = {} ) {\n\t\tif ( viewNode.is( 'text' ) ) {\n\t\t\tconst textData = this._processDataFromViewText( viewNode );\n\n\t\t\treturn domDocument.createTextNode( textData );\n\t\t} else {\n\t\t\tif ( this.getCorrespondingDom( viewNode ) ) {\n\t\t\t\treturn this.getCorrespondingDom( viewNode );\n\t\t\t}\n\n\t\t\tlet domElement;\n\n\t\t\tif ( viewNode.is( 'documentFragment' ) ) {\n\t\t\t\t// Create DOM document fragment.\n\t\t\t\tdomElement = domDocument.createDocumentFragment();\n\n\t\t\t\tif ( options.bind ) {\n\t\t\t\t\tthis.bindDocumentFragments( domElement, viewNode );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Create DOM element.\n\t\t\t\tdomElement = domDocument.createElement( viewNode.name );\n\n\t\t\t\tif ( options.bind ) {\n\t\t\t\t\tthis.bindElements( domElement, viewNode );\n\t\t\t\t}\n\n\t\t\t\t// Copy element's attributes.\n\t\t\t\tfor ( const key of viewNode.getAttributeKeys() ) {\n\t\t\t\t\tdomElement.setAttribute( key, viewNode.getAttribute( key ) );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( options.withChildren || options.withChildren === undefined ) {\n\t\t\t\tfor ( const child of this.viewChildrenToDom( viewNode, domDocument, options ) ) {\n\t\t\t\t\tdomElement.appendChild( child );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn domElement;\n\t\t}\n\t}\n\n\t/**\n\t * Converts children of the view element to DOM using {@link module:engine/view/domconverter~DomConverter#viewToDom} method.\n\t * Additionally this method adds block {@link module:engine/view/filler filler} to the list of children, if needed.\n\t *\n\t * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} viewElement Parent view element.\n\t * @param {Document} domDocument Document which will be used to create DOM nodes.\n\t * @param {Object} options See {@link module:engine/view/domconverter~DomConverter#viewToDom} options parameter.\n\t * @returns {Iterable.<Node>} DOM nodes.\n\t */\n\t* viewChildrenToDom( viewElement, domDocument, options = {} ) {\n\t\tconst fillerPositionOffset = viewElement.getFillerOffset && viewElement.getFillerOffset();\n\t\tlet offset = 0;\n\n\t\tfor ( const childView of viewElement.getChildren() ) {\n\t\t\tif ( fillerPositionOffset === offset ) {\n\t\t\t\tyield this.blockFiller( domDocument );\n\t\t\t}\n\n\t\t\tyield this.viewToDom( childView, domDocument, options );\n\n\t\t\toffset++;\n\t\t}\n\n\t\tif ( fillerPositionOffset === offset ) {\n\t\t\tyield this.blockFiller( domDocument );\n\t\t}\n\t}\n\n\t/**\n\t * Converts view {@link module:engine/view/range~Range} to DOM range.\n\t * Inline and block {@link module:engine/view/filler fillers} are handled during the conversion.\n\t *\n\t * @param {module:engine/view/range~Range} viewRange View range.\n\t * @returns {Range} DOM range.\n\t */\n\tviewRangeToDom( viewRange ) {\n\t\tconst domStart = this.viewPositionToDom( viewRange.start );\n\t\tconst domEnd = this.viewPositionToDom( viewRange.end );\n\n\t\tconst domRange = document.createRange();\n\t\tdomRange.setStart( domStart.parent, domStart.offset );\n\t\tdomRange.setEnd( domEnd.parent, domEnd.offset );\n\n\t\treturn domRange;\n\t}\n\n\t/**\n\t * Converts view {@link module:engine/view/position~Position} to DOM parent and offset.\n\t *\n\t * Inline and block {@link module:engine/view/filler fillers} are handled during the conversion.\n\t * If the converted position is directly before inline filler it is moved inside the filler.\n\t *\n\t * @param {module:engine/view/position~Position} viewPosition View position.\n\t * @returns {Object|null} position DOM position or `null` if view position could not be converted to DOM.\n\t * @returns {Node} position.parent DOM position parent.\n\t * @returns {Number} position.offset DOM position offset.\n\t */\n\tviewPositionToDom( viewPosition ) {\n\t\tconst viewParent = viewPosition.parent;\n\n\t\tif ( viewParent.is( 'text' ) ) {\n\t\t\tconst domParent = this.getCorrespondingDomText( viewParent );\n\n\t\t\tif ( !domParent ) {\n\t\t\t\t// Position is in a view text node that has not been rendered to DOM yet.\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet offset = viewPosition.offset;\n\n\t\t\tif ( startsWithFiller( domParent ) ) {\n\t\t\t\toffset += INLINE_FILLER_LENGTH;\n\t\t\t}\n\n\t\t\treturn { parent: domParent, offset };\n\t\t} else {\n\t\t\t// viewParent is instance of ViewElement.\n\t\t\tlet domParent, domBefore, domAfter;\n\n\t\t\tif ( viewPosition.offset === 0 ) {\n\t\t\t\tdomParent = this.getCorrespondingDom( viewPosition.parent );\n\n\t\t\t\tif ( !domParent ) {\n\t\t\t\t\t// Position is in a view element that has not been rendered to DOM yet.\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tdomAfter = domParent.childNodes[ 0 ];\n\t\t\t} else {\n\t\t\t\tdomBefore = this.getCorrespondingDom( viewPosition.nodeBefore );\n\n\t\t\t\tif ( !domBefore ) {\n\t\t\t\t\t// Position is after a view element that has not been rendered to DOM yet.\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tdomParent = domBefore.parentNode;\n\t\t\t\tdomAfter = domBefore.nextSibling;\n\t\t\t}\n\n\t\t\t// If there is an inline filler at position return position inside the filler. We should never return\n\t\t\t// the position before the inline filler.\n\t\t\tif ( this.isText( domAfter ) && startsWithFiller( domAfter ) ) {\n\t\t\t\treturn { parent: domAfter, offset: INLINE_FILLER_LENGTH };\n\t\t\t}\n\n\t\t\tconst offset = domBefore ? indexOf( domBefore ) + 1 : 0;\n\n\t\t\treturn { parent: domParent, offset };\n\t\t}\n\t}\n\n\t/**\n\t * Converts DOM to view. For all text nodes, not bound elements and document fragments new items will\n\t * be created. For bound elements and document fragments function will return corresponding items. For\n\t * {@link module:engine/view/filler fillers} `null` will be returned.\n\t *\n\t * @param {Node|DocumentFragment} domNode DOM node or document fragment to transform.\n\t * @param {Object} [options] Conversion options.\n\t * @param {Boolean} [options.bind=false] Determines whether new elements will be bound.\n\t * @param {Boolean} [options.withChildren=true] If `true`, node's and document fragment's children will be converted too.\n\t * @param {Boolean} [options.keepOriginalCase=false] If `false`, node's tag name will be converter to lower case.\n\t * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null} Converted node or document fragment\n\t * or `null` if DOM node is a {@link module:engine/view/filler filler} or the given node is an empty text node.\n\t */\n\tdomToView( domNode, options = {} ) {\n\t\tif ( isBlockFiller( domNode, this.blockFiller ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( this.isText( domNode ) ) {\n\t\t\tif ( isInlineFiller( domNode ) ) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tconst textData = this._processDataFromDomText( domNode );\n\n\t\t\t\treturn textData === '' ? null : new ViewText( textData );\n\t\t\t}\n\t\t} else if ( this.isComment( domNode ) ) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\tif ( this.getCorrespondingView( domNode ) ) {\n\t\t\t\treturn this.getCorrespondingView( domNode );\n\t\t\t}\n\n\t\t\tlet viewElement;\n\n\t\t\tif ( this.isDocumentFragment( domNode ) ) {\n\t\t\t\t// Create view document fragment.\n\t\t\t\tviewElement = new ViewDocumentFragment();\n\n\t\t\t\tif ( options.bind ) {\n\t\t\t\t\tthis.bindDocumentFragments( domNode, viewElement );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Create view element.\n\t\t\t\tconst viewName = options.keepOriginalCase ? domNode.tagName : domNode.tagName.toLowerCase();\n\t\t\t\tviewElement = new ViewElement( viewName );\n\n\t\t\t\tif ( options.bind ) {\n\t\t\t\t\tthis.bindElements( domNode, viewElement );\n\t\t\t\t}\n\n\t\t\t\t// Copy element's attributes.\n\t\t\t\tconst attrs = domNode.attributes;\n\n\t\t\t\tfor ( let i = attrs.length - 1; i >= 0; i-- ) {\n\t\t\t\t\tviewElement.setAttribute( attrs[ i ].name, attrs[ i ].value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( options.withChildren || options.withChildren === undefined ) {\n\t\t\t\tfor ( const child of this.domChildrenToView( domNode, options ) ) {\n\t\t\t\t\tviewElement.appendChildren( child );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn viewElement;\n\t\t}\n\t}\n\n\t/**\n\t * Converts children of the DOM element to view nodes using {@link module:engine/view/domconverter~DomConverter#domToView} method.\n\t * Additionally this method omits block {@link module:engine/view/filler filler}, if it exists in the DOM parent.\n\t *\n\t * @param {HTMLElement} domElement Parent DOM element.\n\t * @param {Object} options See {@link module:engine/view/domconverter~DomConverter#domToView} options parameter.\n\t * @returns {Iterable.<module:engine/view/node~Node>} View nodes.\n\t */\n\t* domChildrenToView( domElement, options = {} ) {\n\t\tfor ( let i = 0; i < domElement.childNodes.length; i++ ) {\n\t\t\tconst domChild = domElement.childNodes[ i ];\n\t\t\tconst viewChild = this.domToView( domChild, options );\n\n\t\t\tif ( viewChild !== null ) {\n\t\t\t\tyield viewChild;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Converts DOM selection to view {@link module:engine/view/selection~Selection}.\n\t * Ranges which cannot be converted will be omitted.\n\t *\n\t * @param {Selection} domSelection DOM selection.\n\t * @returns {module:engine/view/selection~Selection} View selection.\n\t */\n\tdomSelectionToView( domSelection ) {\n\t\t// DOM selection might be placed in fake selection container.\n\t\t// If container contains fake selection - return corresponding view selection.\n\t\tif ( domSelection.rangeCount === 1 ) {\n\t\t\tlet container = domSelection.getRangeAt( 0 ).startContainer;\n\n\t\t\t// The DOM selection might be moved to the text node inside the fake selection container.\n\t\t\tif ( this.isText( container ) ) {\n\t\t\t\tcontainer = container.parentNode;\n\t\t\t}\n\n\t\t\tconst viewSelection = this.fakeSelectionToView( container );\n\n\t\t\tif ( viewSelection ) {\n\t\t\t\treturn viewSelection;\n\t\t\t}\n\t\t}\n\n\t\tconst viewSelection = new ViewSelection();\n\t\tconst isBackward = this.isDomSelectionBackward( domSelection );\n\n\t\tfor ( let i = 0; i < domSelection.rangeCount; i++ ) {\n\t\t\t// DOM Range have correct start and end, no matter what is the DOM Selection direction. So we don't have to fix anything.\n\t\t\tconst domRange = domSelection.getRangeAt( i );\n\t\t\tconst viewRange = this.domRangeToView( domRange );\n\n\t\t\tif ( viewRange ) {\n\t\t\t\tviewSelection.addRange( viewRange, isBackward );\n\t\t\t}\n\t\t}\n\n\t\treturn viewSelection;\n\t}\n\n\t/**\n\t * Converts DOM Range to view {@link module:engine/view/range~Range}.\n\t * If the start or end position can not be converted `null` is returned.\n\t *\n\t * @param {Range} domRange DOM range.\n\t * @returns {module:engine/view/range~Range|null} View range.\n\t */\n\tdomRangeToView( domRange ) {\n\t\tconst viewStart = this.domPositionToView( domRange.startContainer, domRange.startOffset );\n\t\tconst viewEnd = this.domPositionToView( domRange.endContainer, domRange.endOffset );\n\n\t\tif ( viewStart && viewEnd ) {\n\t\t\treturn new ViewRange( viewStart, viewEnd );\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Converts DOM parent and offset to view {@link module:engine/view/position~Position}.\n\t *\n\t * If the position is inside a {@link module:engine/view/filler filler} which has no corresponding view node,\n\t * position of the filler will be converted and returned.\n\t *\n\t * If structures are too different and it is not possible to find corresponding position then `null` will be returned.\n\t *\n\t * @param {Node} domParent DOM position parent.\n\t * @param {Number} domOffset DOM position offset.\n\t * @returns {module:engine/view/position~Position} viewPosition View position.\n\t */\n\tdomPositionToView( domParent, domOffset ) {\n\t\tif ( isBlockFiller( domParent, this.blockFiller ) ) {\n\t\t\treturn this.domPositionToView( domParent.parentNode, indexOf( domParent ) );\n\t\t}\n\n\t\tif ( this.isText( domParent ) ) {\n\t\t\tif ( isInlineFiller( domParent ) ) {\n\t\t\t\treturn this.domPositionToView( domParent.parentNode, indexOf( domParent ) );\n\t\t\t}\n\n\t\t\tconst viewParent = this.getCorrespondingViewText( domParent );\n\t\t\tlet offset = domOffset;\n\n\t\t\tif ( !viewParent ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( startsWithFiller( domParent ) ) {\n\t\t\t\toffset -= INLINE_FILLER_LENGTH;\n\t\t\t\toffset = offset < 0 ? 0 : offset;\n\t\t\t}\n\n\t\t\treturn new ViewPosition( viewParent, offset );\n\t\t}\n\t\t// domParent instanceof HTMLElement.\n\t\telse {\n\t\t\tif ( domOffset === 0 ) {\n\t\t\t\tconst viewParent = this.getCorrespondingView( domParent );\n\n\t\t\t\tif ( viewParent ) {\n\t\t\t\t\treturn new ViewPosition( viewParent, 0 );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst viewBefore = this.getCorrespondingView( domParent.childNodes[ domOffset - 1 ] );\n\n\t\t\t\t// TODO #663\n\t\t\t\tif ( viewBefore && viewBefore.parent ) {\n\t\t\t\t\treturn new ViewPosition( viewBefore.parent, viewBefore.index + 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Gets corresponding view item. This function use\n\t * {@link module:engine/view/domconverter~DomConverter#getCorrespondingViewElement getCorrespondingViewElement}\n\t * for elements, {@link  module:engine/view/domconverter~DomConverter#getCorrespondingViewText getCorrespondingViewText} for text\n\t * nodes and\n\t * {@link module:engine/view/domconverter~DomConverter#getCorrespondingViewDocumentFragment getCorrespondingViewDocumentFragment}\n\t * for document fragments.\n\t *\n\t * Note that for the block or inline {@link module:engine/view/filler filler} this method returns `null`.\n\t *\n\t * @param {Node|DocumentFragment} domNode DOM node or document fragment.\n\t * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null} Corresponding view item.\n\t */\n\tgetCorrespondingView( domNode ) {\n\t\tif ( this.isElement( domNode ) ) {\n\t\t\treturn this.getCorrespondingViewElement( domNode );\n\t\t} else if ( this.isDocumentFragment( domNode ) ) {\n\t\t\treturn this.getCorrespondingViewDocumentFragment( domNode );\n\t\t} else if ( this.isText( domNode ) ) {\n\t\t\treturn this.getCorrespondingViewText( domNode );\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Gets corresponding view element. Returns element if an view element was\n\t * {@link module:engine/view/domconverter~DomConverter#bindElements bound} to the given DOM element or `null` otherwise.\n\t *\n\t * @param {HTMLElement} domElement DOM element.\n\t * @returns {module:engine/view/element~Element|null} Corresponding element or `null` if no element was bound.\n\t */\n\tgetCorrespondingViewElement( domElement ) {\n\t\treturn this._domToViewMapping.get( domElement );\n\t}\n\n\t/**\n\t * Gets corresponding view document fragment. Returns document fragment if an view element was\n\t * {@link module:engine/view/domconverter~DomConverter#bindDocumentFragments bound} to the given DOM fragment or `null` otherwise.\n\t *\n\t * @param {DocumentFragment} domFragment DOM element.\n\t * @returns {module:engine/view/documentfragment~DocumentFragment|null} Corresponding document fragment or `null` if none element was\n\t * bound.\n\t */\n\tgetCorrespondingViewDocumentFragment( domFragment ) {\n\t\treturn this._domToViewMapping.get( domFragment );\n\t}\n\n\t/**\n\t * Gets corresponding text node. Text nodes are not {@link module:engine/view/domconverter~DomConverter#bindElements bound},\n\t * corresponding text node is returned based on the sibling or parent.\n\t *\n\t * If the directly previous sibling is a {@link module:engine/view/domconverter~DomConverter#bindElements bound} element, it is used\n\t * to find the corresponding text node.\n\t *\n\t * If this is a first child in the parent and the parent is a {@link module:engine/view/domconverter~DomConverter#bindElements bound}\n\t * element, it is used to find the corresponding text node.\n\t *\n\t * Otherwise `null` is returned.\n\t *\n\t * Note that for the block or inline {@link module:engine/view/filler filler} this method returns `null`.\n\t *\n\t * @param {Text} domText DOM text node.\n\t * @returns {module:engine/view/text~Text|null} Corresponding view text node or `null`, if it was not possible to find a\n\t * corresponding node.\n\t */\n\tgetCorrespondingViewText( domText ) {\n\t\tif ( isInlineFiller( domText ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst previousSibling = domText.previousSibling;\n\n\t\t// Try to use previous sibling to find the corresponding text node.\n\t\tif ( previousSibling ) {\n\t\t\tif ( !( this.isElement( previousSibling ) ) ) {\n\t\t\t\t// The previous is text or comment.\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst viewElement = this.getCorrespondingViewElement( previousSibling );\n\n\t\t\tif ( viewElement ) {\n\t\t\t\tconst nextSibling = viewElement.nextSibling;\n\n\t\t\t\t// It might be filler which has no corresponding view node.\n\t\t\t\tif ( nextSibling instanceof ViewText ) {\n\t\t\t\t\treturn viewElement.nextSibling;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Try to use parent to find the corresponding text node.\n\t\telse {\n\t\t\tconst viewElement = this.getCorrespondingViewElement( domText.parentNode );\n\n\t\t\tif ( viewElement ) {\n\t\t\t\tconst firstChild = viewElement.getChild( 0 );\n\n\t\t\t\t// It might be filler which has no corresponding view node.\n\t\t\t\tif ( firstChild instanceof ViewText ) {\n\t\t\t\t\treturn firstChild;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Gets corresponding DOM item. This function uses\n\t * {@link module:engine/view/domconverter~DomConverter#getCorrespondingDomElement getCorrespondingDomElement} for\n\t * elements, {@link module:engine/view/domconverter~DomConverter#getCorrespondingDomText getCorrespondingDomText} for text nodes\n\t * and {@link module:engine/view/domconverter~DomConverter#getCorrespondingDomDocumentFragment getCorrespondingDomDocumentFragment}\n\t * for document fragments.\n\t *\n\t * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} viewNode View node or document fragment.\n\t * @returns {Node|DocumentFragment|null} Corresponding DOM node or document fragment.\n\t */\n\tgetCorrespondingDom( viewNode ) {\n\t\tif ( viewNode instanceof ViewElement ) {\n\t\t\treturn this.getCorrespondingDomElement( viewNode );\n\t\t} else if ( viewNode instanceof ViewDocumentFragment ) {\n\t\t\treturn this.getCorrespondingDomDocumentFragment( viewNode );\n\t\t} else if ( viewNode instanceof ViewText ) {\n\t\t\treturn this.getCorrespondingDomText( viewNode );\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Gets corresponding DOM element. Returns element if an DOM element was\n\t * {@link module:engine/view/domconverter~DomConverter#bindElements bound} to the given view element or `null` otherwise.\n\t *\n\t * @param {module:engine/view/element~Element} viewElement View element.\n\t * @returns {HTMLElement|null} Corresponding element or `null` if none element was bound.\n\t */\n\tgetCorrespondingDomElement( viewElement ) {\n\t\treturn this._viewToDomMapping.get( viewElement );\n\t}\n\n\t/**\n\t * Gets corresponding DOM document fragment. Returns document fragment if an DOM element was\n\t * {@link module:engine/view/domconverter~DomConverter#bindDocumentFragments bound} to the given view document fragment or `null`\n\t * otherwise.\n\t *\n\t * @param {module:engine/view/documentfragment~DocumentFragment} viewDocumentFragment View document fragment.\n\t * @returns {DocumentFragment|null} Corresponding document fragment or `null` if no fragment was bound.\n\t */\n\tgetCorrespondingDomDocumentFragment( viewDocumentFragment ) {\n\t\treturn this._viewToDomMapping.get( viewDocumentFragment );\n\t}\n\n\t/**\n\t * Gets corresponding text node. Text nodes are not {@link module:engine/view/domconverter~DomConverter#bindElements bound},\n\t * corresponding text node is returned based on the sibling or parent.\n\t *\n\t * If the directly previous sibling is a {@link module:engine/view/domconverter~DomConverter#bindElements bound} element, it is used\n\t * to find the corresponding text node.\n\t *\n\t * If this is a first child in the parent and the parent is a {@link module:engine/view/domconverter~DomConverter#bindElements bound}\n\t * element, it is used to find the corresponding text node.\n\t *\n\t * Otherwise `null` is returned.\n\t *\n\t * @param {module:engine/view/text~Text} viewText View text node.\n\t * @returns {Text|null} Corresponding DOM text node or `null`, if it was not possible to find a corresponding node.\n\t */\n\tgetCorrespondingDomText( viewText ) {\n\t\tconst previousSibling = viewText.previousSibling;\n\n\t\t// Try to use previous sibling to find the corresponding text node.\n\t\tif ( previousSibling && this.getCorrespondingDom( previousSibling ) ) {\n\t\t\treturn this.getCorrespondingDom( previousSibling ).nextSibling;\n\t\t}\n\n\t\t// If this is a first node, try to use parent to find the corresponding text node.\n\t\tif ( !previousSibling && viewText.parent && this.getCorrespondingDom( viewText.parent ) ) {\n\t\t\treturn this.getCorrespondingDom( viewText.parent ).childNodes[ 0 ];\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Focuses DOM editable that is corresponding to provided {@link module:engine/view/editableelement~EditableElement EditableElement}.\n\t *\n\t * @param {module:engine/view/editableelement~EditableElement} viewEditable\n\t */\n\tfocus( viewEditable ) {\n\t\tconst domEditable = this.getCorrespondingDomElement( viewEditable );\n\n\t\tif ( domEditable && domEditable.ownerDocument.activeElement !== domEditable ) {\n\t\t\t// Save the scrollX and scrollY positions before the focus.\n\t\t\tconst { scrollX, scrollY } = global.window;\n\t\t\tconst scrollPositions = [];\n\n\t\t\t// Save all scrollLeft and scrollTop values starting from domEditable up to\n\t\t\t// document#documentElement.\n\t\t\tforEachDomNodeAncestor( domEditable, node => {\n\t\t\t\tconst { scrollLeft, scrollTop } = node;\n\n\t\t\t\tscrollPositions.push( [ scrollLeft, scrollTop ] );\n\t\t\t} );\n\n\t\t\tdomEditable.focus();\n\n\t\t\t// Restore scrollLeft and scrollTop values starting from domEditable up to\n\t\t\t// document#documentElement.\n\t\t\t// https://github.com/ckeditor/ckeditor5-engine/issues/951\n\t\t\t// https://github.com/ckeditor/ckeditor5-engine/issues/957\n\t\t\tforEachDomNodeAncestor( domEditable, node => {\n\t\t\t\tconst [ scrollLeft, scrollTop ] = scrollPositions.shift();\n\n\t\t\t\tnode.scrollLeft = scrollLeft;\n\t\t\t\tnode.scrollTop = scrollTop;\n\t\t\t} );\n\n\t\t\t// Restore the scrollX and scrollY positions after the focus.\n\t\t\t// https://github.com/ckeditor/ckeditor5-engine/issues/951\n\t\t\tglobal.window.scrollTo( scrollX, scrollY );\n\t\t}\n\t}\n\n\t/**\n\t * Returns `true` when `node.nodeType` equals `Node.TEXT_NODE`.\n\t *\n\t * @param {Node} node Node to check.\n\t * @returns {Boolean}\n\t */\n\tisText( node ) {\n\t\treturn node && node.nodeType == Node.TEXT_NODE;\n\t}\n\n\t/**\n\t * Returns `true` when `node.nodeType` equals `Node.ELEMENT_NODE`.\n\t *\n\t * @param {Node} node Node to check.\n\t * @returns {Boolean}\n\t */\n\tisElement( node ) {\n\t\treturn node && node.nodeType == Node.ELEMENT_NODE;\n\t}\n\n\t/**\n\t * Returns `true` when `node.nodeType` equals `Node.DOCUMENT_FRAGMENT_NODE`.\n\t *\n\t * @param {Node} node Node to check.\n\t * @returns {Boolean}\n\t */\n\tisDocumentFragment( node ) {\n\t\treturn node && node.nodeType == Node.DOCUMENT_FRAGMENT_NODE;\n\t}\n\n\t/**\n\t * Returns `true` when `node.nodeType` equals `Node.COMMENT_NODE`.\n\t *\n\t * @param {Node} node Node to check.\n\t * @returns {Boolean}\n\t */\n\tisComment( node ) {\n\t\treturn node && node.nodeType == Node.COMMENT_NODE;\n\t}\n\n\t/**\n\t * Returns `true` if given selection is a backward selection, that is, if it's `focus` is before `anchor`.\n\t *\n\t * @param {Selection} DOM Selection instance to check.\n\t * @returns {Boolean}\n\t */\n\tisDomSelectionBackward( selection ) {\n\t\tif ( selection.isCollapsed ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Since it takes multiple lines of code to check whether a \"DOM Position\" is before/after another \"DOM Position\",\n\t\t// we will use the fact that range will collapse if it's end is before it's start.\n\t\tconst range = document.createRange();\n\n\t\trange.setStart( selection.anchorNode, selection.anchorOffset );\n\t\trange.setEnd( selection.focusNode, selection.focusOffset );\n\n\t\tconst backward = range.collapsed;\n\n\t\trange.detach();\n\n\t\treturn backward;\n\t}\n\n\t/**\n\t * Takes text data from given {@link module:engine/view/text~Text#data} and processes it so it is correctly displayed in DOM.\n\t *\n\t * Following changes are done:\n\t * * multiple spaces are replaced to a chain of spaces and `&nbsp;`,\n\t * * space at the beginning of the text node is changed to `&nbsp;` if it is a first text node in it's container\n\t * element or if previous text node ends by space character,\n\t * * space at the end of the text node is changed to `&nbsp;` if it is a last text node in it's container.\n\t *\n\t * @private\n\t * @param {module:engine/view/text~Text} node View text node to process.\n\t * @returns {String} Processed text data.\n\t */\n\t_processDataFromViewText( node ) {\n\t\tconst data = node.data;\n\n\t\t// If any of node ancestors has a name which is in `preElements` array, then currently processed\n\t\t// view text node is (will be) in preformatted element. We should not change whitespaces then.\n\t\tif ( node.getAncestors().some( parent => this.preElements.includes( parent.name ) ) ) {\n\t\t\treturn data;\n\t\t}\n\n\t\tconst prevNode = this._getTouchingViewTextNode( node, false );\n\t\tconst nextNode = this._getTouchingViewTextNode( node, true );\n\n\t\t// Second part of text data, from the space after the last non-space character to the end.\n\t\t// We separate `textEnd` and `textStart` because `textEnd` needs some special handling.\n\t\tlet textEnd = data.match( / *$/ )[ 0 ];\n\t\t// First part of data, between first and last part of data.\n\t\tlet textStart = data.substr( 0, data.length - textEnd.length );\n\n\t\t// If previous text node does not exist or it ends by space character, replace space character at the beginning of text.\n\t\t// ` x`\t\t\t-> `_x`\n\t\t// `  x`\t\t-> `_ x`\n\t\t// `   x`\t\t-> `_  x`\n\t\tif ( !prevNode || prevNode.data.charAt( prevNode.data.length - 1 ) == ' ' ) {\n\t\t\ttextStart = textStart.replace( /^ /, '\\u00A0' );\n\t\t}\n\n\t\t// Multiple consecutive spaces. Change them to ` &nbsp;` pairs.\n\t\t// `_x  x`\t\t-> `_x _x`\n\t\t// `_ x  x`\t\t-> `_ x _x`\n\t\t// `_  x  x`\t-> `_ _x _x`\n\t\t// `_  x   x`\t-> `_ _x _ x`\n\t\t// `_  x    x`\t-> `_ _x _ _x`\n\t\t// `_   x    x` -> `_ _ x _ _x`\n\t\ttextStart = textStart.replace( / {2}/g, ' \\u00A0' );\n\n\t\t// Process `textEnd` only if there is anything to process.\n\t\tif ( textEnd.length > 0 ) {\n\t\t\t// (1) We need special treatment for the last part of text node, it has to end on `&nbsp;`, not space:\n\t\t\t// `x `\t\t-> `x_`\n\t\t\t// `x  `\t-> `x _`\n\t\t\t// `x   `\t-> `x_ _`\n\t\t\t// `x    `\t-> `x _ _`\n\t\t\t// (2) Different case when there is a node after:\n\t\t\t// `x <b>b</b>`\t\t-> `x <b>b</b>`\n\t\t\t// `x  <b>b</b>`\t-> `x _<b>b</b>`\n\t\t\t// `x   <b>b</b>`\t-> `x _ <b>b</b>`\n\t\t\t// `x    <b>b</b>`\t-> `x _ _<b>b</b>`\n\t\t\t// (3) But different, when that node starts by &nbsp; (or space that will be converted to &nbsp;):\n\t\t\t// `x <b>_b</b>`\t-> `x <b>_b</b>`\n\t\t\t// `x  <b>_b</b>`\t-> `x_ <b>_b</b>`\n\t\t\t// `x   <b>_b</b>`\t-> `x _ <b>_b</b>`\n\t\t\t// `x    <b>_b</b>`\t-> `x_ _ <b>_b</b>`\n\t\t\t// Let's assume that starting from space is normal behavior, because starting from &nbsp; is a less frequent case.\n\t\t\tlet textEndStartsFromNbsp = false;\n\n\t\t\tif ( !nextNode ) {\n\t\t\t\t// (1)\n\t\t\t\tif ( textEnd.length % 2 ) {\n\t\t\t\t\ttextEndStartsFromNbsp = true;\n\t\t\t\t}\n\t\t\t} else if ( nextNode.data.charAt( 0 ) == ' ' || nextNode.data.charAt( 0 ) == '\\u00A0' ) {\n\t\t\t\t// (3)\n\t\t\t\tif ( textEnd.length % 2 === 0 ) {\n\t\t\t\t\ttextEndStartsFromNbsp = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( textEndStartsFromNbsp ) {\n\t\t\t\ttextEnd = '\\u00A0' + textEnd.substr( 0, textEnd.length - 1 );\n\t\t\t}\n\n\t\t\ttextEnd = textEnd.replace( / {2}/g, ' \\u00A0' );\n\t\t}\n\n\t\treturn textStart + textEnd;\n\t}\n\n\t/**\n\t * Helper function. For given {@link module:engine/view/text~Text view text node}, it finds previous or next sibling that is contained\n\t * in the same block element. If there is no such sibling, `null` is returned.\n\t *\n\t * @private\n\t * @param {module:engine/view/text~Text} node\n\t * @param {Boolean} getNext\n\t * @returns {module:engine/view/text~Text}\n\t */\n\t_getTouchingViewTextNode( node, getNext ) {\n\t\tif ( !node.parent ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst treeWalker = new ViewTreeWalker( {\n\t\t\tstartPosition: getNext ? ViewPosition.createAfter( node ) : ViewPosition.createBefore( node ),\n\t\t\tdirection: getNext ? 'forward' : 'backward'\n\t\t} );\n\n\t\tfor ( const value of treeWalker ) {\n\t\t\tif ( value.item.is( 'containerElement' ) ) {\n\t\t\t\t// ViewContainerElement is found on a way to next ViewText node, so given `node` was first/last\n\t\t\t\t// text node in it's container element.\n\t\t\t\treturn null;\n\t\t\t} else if ( value.item.is( 'text' ) ) {\n\t\t\t\t// Found a text node in the same container element.\n\t\t\t\treturn value.item;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Takes text data from native `Text` node and processes it to a correct {@link module:engine/view/text~Text view text node} data.\n\t *\n\t * Following changes are done:\n\t * * multiple whitespaces are replaced to a single space,\n\t * * space at the beginning of the text node is removed, if it is a first text node in it's container\n\t * element or if previous text node ends by space character,\n\t * * space at the end of the text node is removed, if it is a last text node in it's container.\n\t *\n\t * @param {Node} node DOM text node to process.\n\t * @returns {String} Processed data.\n\t * @private\n\t */\n\t_processDataFromDomText( node ) {\n\t\tlet data = getDataWithoutFiller( node );\n\n\t\tif ( _hasDomParentOfType( node, this.preElements ) ) {\n\t\t\treturn data;\n\t\t}\n\n\t\t// Change all consecutive whitespace characters to a single space character. That's how multiple whitespaces\n\t\t// are treated when rendered, so we normalize those whitespaces.\n\t\t// Note that &nbsp; (`\\u00A0`) should not be treated as a whitespace because it is rendered.\n\t\tdata = data.replace( /[^\\S\\u00A0]{2,}/g, ' ' );\n\n\t\tconst prevNode = this._getTouchingDomTextNode( node, false );\n\t\tconst nextNode = this._getTouchingDomTextNode( node, true );\n\n\t\t// If previous dom text node does not exist or it ends by whitespace character, remove space character from the beginning\n\t\t// of this text node. Such space character is treated as a whitespace.\n\t\tif ( !prevNode || /[^\\S\\u00A0]/.test( prevNode.data.charAt( prevNode.data.length - 1 ) ) ) {\n\t\t\tdata = data.replace( /^ /, '' );\n\t\t}\n\n\t\t// If next text node does not exist remove space character from the end of this text node.\n\t\tif ( !nextNode ) {\n\t\t\tdata = data.replace( / $/, '' );\n\t\t}\n\t\t// At this point we should have removed all whitespaces from DOM text data.\n\n\t\t// Now we have to change &nbsp; chars, that were in DOM text data because of rendering reasons, to spaces.\n\t\t// First, change all ` \\u00A0` pairs (space + &nbsp;) to two spaces. DOM converter changes two spaces from model/view as\n\t\t// ` \\u00A0` to ensure proper rendering. Since here we convert back, we recognize those pairs and change them\n\t\t// to `  ` which is what we expect to have in model/view.\n\t\tdata = data.replace( / \\u00A0/g, '  ' );\n\t\t// Then, change &nbsp; character that is at the beginning of the text node to space character.\n\t\t// As above, that &nbsp; was created for rendering reasons but it's real meaning is just a space character.\n\t\t// We do that replacement only if this is the first node or the previous node ends on whitespace character.\n\t\tif ( !prevNode || /[^\\S\\u00A0]/.test( prevNode.data.charAt( prevNode.data.length - 1 ) ) ) {\n\t\t\tdata = data.replace( /^\\u00A0/, ' ' );\n\t\t}\n\t\t// Since input text data could be: `x_ _`, we would not replace the first &nbsp; after `x` character.\n\t\t// We have to fix it. Since we already change all ` &nbsp;`, we will have something like this at the end of text data:\n\t\t// `x_ _ _` -> `x_    `. Find &nbsp; at the end of string (can be followed only by spaces).\n\t\t// We do that replacement only if this is the last node or the next node starts by &nbsp;.\n\t\tif ( !nextNode || nextNode.data.charAt( 0 ) == '\\u00A0' ) {\n\t\t\tdata = data.replace( /\\u00A0( *)$/, ' $1' );\n\t\t}\n\n\t\t// At this point, all whitespaces should be removed and all &nbsp; created for rendering reasons should be\n\t\t// changed to normal space. All left &nbsp; are &nbsp; inserted intentionally.\n\t\treturn data;\n\t}\n\n\t/**\n\t * Helper function. For given `Text` node, it finds previous or next sibling that is contained in the same block element.\n\t * If there is no such sibling, `null` is returned.\n\t *\n\t * @private\n\t * @param {Text} node\n\t * @param {Boolean} getNext\n\t * @returns {Text|null}\n\t */\n\t_getTouchingDomTextNode( node, getNext ) {\n\t\tif ( !node.parentNode ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst direction = getNext ? 'nextNode' : 'previousNode';\n\t\tconst document = node.ownerDocument;\n\t\tconst treeWalker = document.createTreeWalker( document.childNodes[ 0 ], NodeFilter.SHOW_TEXT );\n\n\t\ttreeWalker.currentNode = node;\n\n\t\tconst touchingNode = treeWalker[ direction ]();\n\n\t\tif ( touchingNode !== null ) {\n\t\t\tconst lca = getCommonAncestor( node, touchingNode );\n\n\t\t\t// If there is common ancestor between the text node and next/prev text node,\n\t\t\t// and there are no block elements on a way from the text node to that ancestor,\n\t\t\t// and there are no block elements on a way from next/prev text node to that ancestor...\n\t\t\tif (\n\t\t\t\tlca &&\n\t\t\t\t!_hasDomParentOfType( node, this.blockElements, lca ) &&\n\t\t\t\t!_hasDomParentOfType( touchingNode, this.blockElements, lca )\n\t\t\t) {\n\t\t\t\t// Then they are in the same container element.\n\t\t\t\treturn touchingNode;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\n// Helper function.\n// Used to check if given native `Element` or `Text` node has parent with tag name from `types` array.\n//\n// @param {Node} node\n// @param {Array.<String>} types\n// @param {Boolean} [boundaryParent] Can be given if parents should be checked up to a given element (excluding that element).\n// @returns {Boolean} `true` if such parent exists or `false` if it does not.\nfunction _hasDomParentOfType( node, types, boundaryParent ) {\n\tlet parents = getAncestors( node );\n\n\tif ( boundaryParent ) {\n\t\tparents = parents.slice( parents.indexOf( boundaryParent ) + 1 );\n\t}\n\n\treturn parents.some( parent => parent.tagName && types.includes( parent.tagName.toLowerCase() ) );\n}\n\n// A helper that executes given callback for each DOM node's ancestor, starting from the given node\n// and ending in document#documentElement.\n//\n// @param {Node} node\n// @param {Function} callback A callback to be executed for each ancestor.\nfunction forEachDomNodeAncestor( node, callback ) {\n\twhile ( node && node != global.document ) {\n\t\tcallback( node );\n\t\tnode = node.parentNode;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/view/domconverter.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/emptyelement\n */\n\nimport Element from './element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Node from './node';\n\n/**\n * EmptyElement class. It is used to represent elements that cannot contain any child nodes.\n */\nexport default class EmptyElement extends Element {\n\t/**\n\t * Creates new instance of EmptyElement.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-emptyelement-cannot-add` when third parameter is passed,\n\t * to inform that usage of EmptyElement is incorrect (adding child nodes to EmptyElement is forbidden).\n\t *\n\t * @param {String} name Node name.\n\t * @param {Object|Iterable} [attributes] Collection of attributes.\n\t */\n\tconstructor( name, attributes, children ) {\n\t\tsuper( name, attributes, children );\n\n\t\t/**\n\t\t * Returns `null` because filler is not needed for EmptyElements.\n\t\t *\n\t\t * @method #getFillerOffset\n\t\t * @returns {null} Always returns null.\n\t\t */\n\t\tthis.getFillerOffset = getFillerOffset;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tis( type, name = null ) {\n\t\tif ( !name ) {\n\t\t\treturn type == 'emptyElement' || super.is( type );\n\t\t} else {\n\t\t\treturn ( type == 'emptyElement' && name == this.name ) || super.is( type, name );\n\t\t}\n\t}\n\n\t/**\n\t * Overrides {@link module:engine/view/element~Element#insertChildren} method.\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-emptyelement-cannot-add` to prevent\n\t * adding any child nodes to EmptyElement.\n\t */\n\tinsertChildren( index, nodes ) {\n\t\tif ( nodes && ( nodes instanceof Node || Array.from( nodes ).length > 0 ) ) {\n\t\t\t/**\n\t\t\t * Cannot add children to {@link module:engine/view/emptyelement~EmptyElement}.\n\t\t\t *\n\t\t\t * @error view-emptyelement-cannot-add\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-emptyelement-cannot-add: Cannot add child nodes to EmptyElement instance.' );\n\t\t}\n\t}\n}\n\n// Returns `null` because block filler is not needed for EmptyElements.\n//\n// @returns {null}\nfunction getFillerOffset() {\n\treturn null;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/view/emptyelement.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/matcher\n */\n\n/**\n * View matcher class.\n * Instance of this class can be used to find {@link module:engine/view/element~Element elements} that match given pattern.\n */\nexport default class Matcher {\n\t/**\n\t * Creates new instance of Matcher.\n\t *\n\t * @param {String|RegExp|Object} [pattern] Match patterns. See {@link module:engine/view/matcher~Matcher#add add method} for\n\t * more information.\n\t */\n\tconstructor( ...pattern ) {\n\t\tthis._patterns = [];\n\n\t\tthis.add( ...pattern );\n\t}\n\n\t/**\n\t * Adds pattern or patterns to matcher instance.\n\t *\n\t * Example patterns matching element's name:\n\t *\n\t *\t\t// String.\n\t *\t\tmatcher.add( 'div' );\n\t *\t\tmatcher.add( { name: 'div' } );\n\t *\n\t *\t\t// Regular expression.\n\t *\t\tmatcher.add( /^\\w/ );\n\t *\t\tmatcher.add( { name: /^\\w/ } );\n\t *\n\t * Example pattern matching element's attributes:\n\t *\n\t *\t\tmatcher.add( {\n\t *\t\t\tattribute: {\n\t *\t\t\t\ttitle: 'foobar',\n\t *\t\t\t\tfoo: /^\\w+/\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * Example patterns matching element's classes:\n\t *\n\t *\t\t// Single class.\n\t *\t\tmatcher.add( {\n\t *\t\t\tclass: 'foobar'\n\t *\t\t} );\n\t *\n\t *\t\t// Single class using regular expression.\n\t *\t\tmatcher.add( {\n\t *\t\t\tclass: /foo.../\n\t *\t\t} );\n\t *\n\t *\t\t// Multiple classes to match.\n\t *\t\tmatcher.add( {\n\t *\t\t\tclass: [ 'baz', 'bar', /foo.../ ]\n\t *\t\t} ):\n\t *\n\t * Example pattern matching element's styles:\n\t *\n\t *\t\tmatcher.add( {\n\t *\t\t\tstyle: {\n\t *\t\t\t\tposition: 'absolute',\n\t *\t\t\t\tcolor: /^\\w*blue$/\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * Example function pattern:\n\t *\n\t *\t\tmatcher.add( ( element ) => {\n\t *\t\t\t// Result of this function will be included in `match`\n\t *\t\t\t// property of the object returned from matcher.match() call.\n\t *\t\t\tif ( element.name === 'div' && element.childCount > 0 ) {\n\t *\t\t\t\treturn { name: true };\n\t *\t\t\t}\n\t *\n\t *\t\t\treturn null;\n\t *\t\t} );\n\t *\n\t * Multiple patterns can be added in one call:\n\t *\n\t * \t\tmatcher.add( 'div', { class: 'foobar' } );\n\t *\n\t * @param {Object|String|RegExp|Function} pattern Object describing pattern details. If string or regular expression\n\t * is provided it will be used to match element's name. Pattern can be also provided in a form\n\t * of a function - then this function will be called with each {@link module:engine/view/element~Element element} as a parameter.\n\t * Function's return value will be stored under `match` key of the object returned from\n\t * {@link module:engine/view/matcher~Matcher#match match} or {@link module:engine/view/matcher~Matcher#matchAll matchAll} methods.\n\t * @param {String|RegExp} [pattern.name] Name or regular expression to match element's name.\n\t * @param {Object} [pattern.attribute] Object with key-value pairs representing attributes to match. Each object key\n\t * represents attribute name. Value under that key can be either a string or a regular expression and it will be\n\t * used to match attribute value.\n\t * @param {String|RegExp|Array} [pattern.class] Class name or array of class names to match. Each name can be\n\t * provided in a form of string or regular expression.\n\t * @param {Object} [pattern.style] Object with key-value pairs representing styles to match. Each object key\n\t * represents style name. Value under that key can be either a string or a regular expression and it will be used\n\t * to match style value.\n\t */\n\tadd( ...pattern ) {\n\t\tfor ( let item of pattern ) {\n\t\t\t// String or RegExp pattern is used as element's name.\n\t\t\tif ( typeof item == 'string' || item instanceof RegExp ) {\n\t\t\t\titem = { name: item };\n\t\t\t}\n\n\t\t\t// Single class name/RegExp can be provided.\n\t\t\tif ( item.class && ( typeof item.class == 'string' || item.class instanceof RegExp ) ) {\n\t\t\t\titem.class = [ item.class ];\n\t\t\t}\n\n\t\t\tthis._patterns.push( item );\n\t\t}\n\t}\n\n\t/**\n\t * Matches elements for currently stored patterns. Returns match information about first found\n\t * {@link module:engine/view/element~Element element}, otherwise returns `null`.\n\t *\n\t * Example of returned object:\n\t *\n\t *\t\t{\n\t *\t\t\telement: <instance of found element>,\n\t *\t\t\tpattern: <pattern used to match found element>,\n\t *\t\t\tmatch: {\n\t *\t\t\t\tname: true,\n\t *\t\t\t\tattribute: [ 'title', 'href' ],\n\t *\t\t\t\tclass: [ 'foo' ],\n\t *\t\t\t\tstyle: [ 'color', 'position' ]\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t * @see module:engine/view/matcher~Matcher#add\n\t * @see module:engine/view/matcher~Matcher#matchAll\n\t * @param {...module:engine/view/element~Element} element View element to match against stored patterns.\n\t * @returns {Object|null} result\n\t * @returns {module:engine/view/element~Element} result.element Matched view element.\n\t * @returns {Object|String|RegExp|Function} result.pattern Pattern that was used to find matched element.\n\t * @returns {Object} result.match Object representing matched element parts.\n\t * @returns {Boolean} [result.match.name] True if name of the element was matched.\n\t * @returns {Array} [result.match.attribute] Array with matched attribute names.\n\t * @returns {Array} [result.match.class] Array with matched class names.\n\t * @returns {Array} [result.match.style] Array with matched style names.\n\t */\n\tmatch( ...element ) {\n\t\tfor ( const singleElement of element ) {\n\t\t\tfor ( const pattern of this._patterns ) {\n\t\t\t\tconst match = isElementMatching( singleElement, pattern );\n\n\t\t\t\tif ( match ) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\telement: singleElement,\n\t\t\t\t\t\tpattern,\n\t\t\t\t\t\tmatch\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Matches elements for currently stored patterns. Returns array of match information with all found\n\t * {@link module:engine/view/element~Element elements}. If no element is found - returns `null`.\n\t *\n\t * @see module:engine/view/matcher~Matcher#add\n\t * @see module:engine/view/matcher~Matcher#match\n\t * @param {...module:engine/view/element~Element} element View element to match against stored patterns.\n\t * @returns {Array.<Object>|null} Array with match information about found elements or `null`. For more information\n\t * see {@link module:engine/view/matcher~Matcher#match match method} description.\n\t */\n\tmatchAll( ...element ) {\n\t\tconst results = [];\n\n\t\tfor ( const singleElement of element ) {\n\t\t\tfor ( const pattern of this._patterns ) {\n\t\t\t\tconst match = isElementMatching( singleElement, pattern );\n\n\t\t\t\tif ( match ) {\n\t\t\t\t\tresults.push( {\n\t\t\t\t\t\telement: singleElement,\n\t\t\t\t\t\tpattern,\n\t\t\t\t\t\tmatch\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn results.length > 0 ? results : null;\n\t}\n\n\t/**\n\t * Returns the name of the element to match if there is exactly one pattern added to the matcher instance\n\t * and it matches element name defined by `string` (not `RegExp`). Otherwise, returns `null`.\n\t *\n\t * @returns {String|null} Element name trying to match.\n\t */\n\tgetElementName() {\n\t\tif ( this._patterns.length !== 1 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst pattern = this._patterns[ 0 ];\n\t\tconst name = pattern.name;\n\n\t\treturn ( typeof pattern != 'function' && name && !( name instanceof RegExp ) ) ? name : null;\n\t}\n\n}\n\n// Returns match information if {@link module:engine/view/element~Element element} is matching provided pattern.\n// If element cannot be matched to provided pattern - returns `null`.\n//\n// @param {module:engine/view/element~Element} element\n// @param {Object|String|RegExp|Function} pattern\n// @returns {Object|null} Returns object with match information or null if element is not matching.\nfunction isElementMatching( element, pattern ) {\n\t// If pattern is provided as function - return result of that function;\n\tif ( typeof pattern == 'function' ) {\n\t\treturn pattern( element );\n\t}\n\n\tconst match = {};\n\t// Check element's name.\n\tif ( pattern.name ) {\n\t\tmatch.name = matchName( pattern.name, element.name );\n\n\t\tif ( !match.name ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// Check element's attributes.\n\tif ( pattern.attribute ) {\n\t\tmatch.attribute = matchAttributes( pattern.attribute, element );\n\n\t\tif ( !match.attribute ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// Check element's classes.\n\tif ( pattern.class ) {\n\t\tmatch.class = matchClasses( pattern.class, element );\n\n\t\tif ( !match.class ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t// Check element's styles.\n\tif ( pattern.style ) {\n\t\tmatch.style = matchStyles( pattern.style, element );\n\n\t\tif ( !match.style ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn match;\n}\n\n// Checks if name can be matched by provided pattern.\n//\n// @param {String|RegExp} pattern\n// @param {String} name\n// @returns {Boolean} Returns `true` if name can be matched, `false` otherwise.\nfunction matchName( pattern, name ) {\n\t// If pattern is provided as RegExp - test against this regexp.\n\tif ( pattern instanceof RegExp ) {\n\t\treturn pattern.test( name );\n\t}\n\n\treturn pattern === name;\n}\n\n// Checks if attributes of provided element can be matched against provided patterns.\n//\n// @param {Object} patterns Object with information about attributes to match. Each key of the object will be\n// used as attribute name. Value of each key can be a string or regular expression to match against attribute value.\n// @param {module:engine/view/element~Element} element Element which attributes will be tested.\n// @returns {Array|null} Returns array with matched attribute names or `null` if no attributes were matched.\nfunction matchAttributes( patterns, element ) {\n\tconst match = [];\n\n\tfor ( const name in patterns ) {\n\t\tconst pattern = patterns[ name ];\n\n\t\tif ( element.hasAttribute( name ) ) {\n\t\t\tconst attribute = element.getAttribute( name );\n\n\t\t\tif ( pattern instanceof RegExp ) {\n\t\t\t\tif ( pattern.test( attribute ) ) {\n\t\t\t\t\tmatch.push( name );\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else if ( attribute === pattern ) {\n\t\t\t\tmatch.push( name );\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\treturn match;\n}\n\n// Checks if classes of provided element can be matched against provided patterns.\n//\n// @param {Array.<String|RegExp>} patterns Array of strings or regular expressions to match against element's classes.\n// @param {module:engine/view/element~Element} element Element which classes will be tested.\n// @returns {Array|null} Returns array with matched class names or `null` if no classes were matched.\nfunction matchClasses( patterns, element ) {\n\tconst match = [];\n\n\tfor ( const pattern of patterns ) {\n\t\tif ( pattern instanceof RegExp ) {\n\t\t\tconst classes = element.getClassNames();\n\n\t\t\tfor ( const name of classes ) {\n\t\t\t\tif ( pattern.test( name ) ) {\n\t\t\t\t\tmatch.push( name );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( match.length === 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else if ( element.hasClass( pattern ) ) {\n\t\t\tmatch.push( pattern );\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\treturn match;\n}\n\n// Checks if styles of provided element can be matched against provided patterns.\n//\n// @param {Object} patterns Object with information about styles to match. Each key of the object will be\n// used as style name. Value of each key can be a string or regular expression to match against style value.\n// @param {module:engine/view/element~Element} element Element which styles will be tested.\n// @returns {Array|null} Returns array with matched style names or `null` if no styles were matched.\nfunction matchStyles( patterns, element ) {\n\tconst match = [];\n\n\tfor ( const name in patterns ) {\n\t\tconst pattern = patterns[ name ];\n\n\t\tif ( element.hasStyle( name ) ) {\n\t\t\tconst style = element.getStyle( name );\n\n\t\t\tif ( pattern instanceof RegExp ) {\n\t\t\t\tif ( pattern.test( style ) ) {\n\t\t\t\t\tmatch.push( name );\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else if ( style === pattern ) {\n\t\t\t\tmatch.push( name );\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\treturn match;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/view/matcher.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/observer/mutationobserver\n */\n\n/* globals window */\n\nimport Observer from './observer';\nimport ViewSelection from '../selection';\nimport { startsWithFiller, getDataWithoutFiller } from '../filler';\n\n/**\n * Mutation observer class observes changes in the DOM, fires {@link module:engine/view/document~Document#event:mutations} event, mark view\n * elements as changed and call {@link module:engine/view/renderer~Renderer#render}.\n * Because all mutated nodes are marked as \"to be rendered\" and the\n * {@link module:engine/view/renderer~Renderer#render} is called, all changes will be reverted, unless the mutation will be handled by the\n * {@link module:engine/view/document~Document#event:mutations} event listener. It means user will see only handled changes, and the editor\n * will block all changes which are not handled.\n *\n * Mutation Observer also take care of reducing number of mutations which are fired. It removes duplicates and\n * mutations on elements which do not have corresponding view elements. Also\n * {@link module:engine/view/observer/mutationobserver~MutatedText text mutation} is fired only if parent element do not change child list.\n *\n * Note that this observer is attached by the {@link module:engine/view/document~Document} and is available by default.\n *\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class MutationObserver extends Observer {\n\tconstructor( document ) {\n\t\tsuper( document );\n\n\t\t/**\n\t\t * Native mutation observer config.\n\t\t *\n\t\t * @private\n\t\t * @member {Object}\n\t\t */\n\t\tthis._config = {\n\t\t\tchildList: true,\n\t\t\tcharacterData: true,\n\t\t\tcharacterDataOldValue: true,\n\t\t\tsubtree: true\n\t\t};\n\n\t\t/**\n\t\t * Reference to the {@link module:engine/view/document~Document#domConverter}.\n\t\t *\n\t\t * @member {module:engine/view/domconverter~DomConverter}\n\t\t */\n\t\tthis.domConverter = document.domConverter;\n\n\t\t/**\n\t\t * Reference to the {@link module:engine/view/document~Document#renderer}.\n\t\t *\n\t\t * @member {module:engine/view/renderer~Renderer}\n\t\t */\n\t\tthis.renderer = document.renderer;\n\n\t\t/**\n\t\t * Observed DOM elements.\n\t\t *\n\t\t * @private\n\t\t * @member {Array.<HTMLElement>}\n\t\t */\n\t\tthis._domElements = [];\n\n\t\t/**\n\t\t * Native mutation observer.\n\t\t *\n\t\t * @private\n\t\t * @member {MutationObserver}\n\t\t */\n\t\tthis._mutationObserver = new window.MutationObserver( this._onMutations.bind( this ) );\n\t}\n\n\t/**\n\t * Synchronously fires {@link module:engine/view/document~Document#event:mutations} event with all mutations in record queue.\n\t * At the same time empties the queue so mutations will not be fired twice.\n\t */\n\tflush() {\n\t\tthis._onMutations( this._mutationObserver.takeRecords() );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tobserve( domElement ) {\n\t\tthis._domElements.push( domElement );\n\n\t\tif ( this.isEnabled ) {\n\t\t\tthis._mutationObserver.observe( domElement, this._config );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tenable() {\n\t\tsuper.enable();\n\n\t\tfor ( const domElement of this._domElements ) {\n\t\t\tthis._mutationObserver.observe( domElement, this._config );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdisable() {\n\t\tsuper.disable();\n\n\t\tthis._mutationObserver.disconnect();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\tthis._mutationObserver.disconnect();\n\t}\n\n\t/**\n\t * Handles mutations. Deduplicates, mark view elements to sync, fire event and call render.\n\t *\n\t * @private\n\t * @param {Array.<Object>} domMutations Array of native mutations.\n\t */\n\t_onMutations( domMutations ) {\n\t\t// As a result of this.flush() we can have an empty collection.\n\t\tif ( domMutations.length === 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst domConverter = this.domConverter;\n\n\t\t// Use map and set for deduplication.\n\t\tconst mutatedTexts = new Map();\n\t\tconst mutatedElements = new Set();\n\n\t\t// Handle `childList` mutations first, so we will be able to check if the `characterData` mutation is in the\n\t\t// element with changed structure anyway.\n\t\tfor ( const mutation of domMutations ) {\n\t\t\tif ( mutation.type === 'childList' ) {\n\t\t\t\tconst element = domConverter.getCorrespondingViewElement( mutation.target );\n\n\t\t\t\tif ( element && !this._isBogusBrMutation( mutation ) ) {\n\t\t\t\t\tmutatedElements.add( element );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Handle `characterData` mutations later, when we have the full list of nodes which changed structure.\n\t\tfor ( const mutation of domMutations ) {\n\t\t\tif ( mutation.type === 'characterData' ) {\n\t\t\t\tconst text = domConverter.getCorrespondingViewText( mutation.target );\n\n\t\t\t\tif ( text && !mutatedElements.has( text.parent ) ) {\n\t\t\t\t\t// Use text as a key, for deduplication. If there will be another mutation on the same text element\n\t\t\t\t\t// we will have only one in the map.\n\t\t\t\t\tmutatedTexts.set( text, {\n\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\toldText: text.data,\n\t\t\t\t\t\tnewText: getDataWithoutFiller( mutation.target ),\n\t\t\t\t\t\tnode: text\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\t// When we added first letter to the text node which had only inline filler, for the DOM it is mutation\n\t\t\t\t// on text, but for the view, where filler text node did not existed, new text node was created, so we\n\t\t\t\t// need to fire 'children' mutation instead of 'text'.\n\t\t\t\telse if ( !text && startsWithFiller( mutation.target ) ) {\n\t\t\t\t\tmutatedElements.add( domConverter.getCorrespondingViewElement( mutation.target.parentNode ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Now we build the list of mutations to fire and mark elements. We did not do it earlier to avoid marking the\n\t\t// same node multiple times in case of duplication.\n\n\t\t// List of mutations we will fire.\n\t\tconst viewMutations = [];\n\n\t\tfor ( const mutatedText of mutatedTexts.values() ) {\n\t\t\tthis.renderer.markToSync( 'text', mutatedText.node );\n\t\t\tviewMutations.push( mutatedText );\n\t\t}\n\n\t\tfor ( const viewElement of mutatedElements ) {\n\t\t\tconst domElement = domConverter.getCorrespondingDomElement( viewElement );\n\t\t\tconst viewChildren = viewElement.getChildren();\n\t\t\tconst newViewChildren = domConverter.domChildrenToView( domElement );\n\n\t\t\tthis.renderer.markToSync( 'children', viewElement );\n\t\t\tviewMutations.push( {\n\t\t\t\ttype: 'children',\n\t\t\t\toldChildren: Array.from( viewChildren ),\n\t\t\t\tnewChildren: Array.from( newViewChildren ),\n\t\t\t\tnode: viewElement\n\t\t\t} );\n\t\t}\n\n\t\t// Retrieve `domSelection` using `ownerDocument` of one of mutated nodes.\n\t\t// There should not be simultaneous mutation in multiple documents, so it's fine.\n\t\tconst domSelection = domMutations[ 0 ].target.ownerDocument.getSelection();\n\n\t\tlet viewSelection = null;\n\n\t\tif ( domSelection && domSelection.anchorNode ) {\n\t\t\t// If `domSelection` is inside a dom node that is already bound to a view node from view tree, get\n\t\t\t// corresponding selection in the view and pass it together with `viewMutations`. The `viewSelection` may\n\t\t\t// be used by features handling mutations.\n\t\t\t// Only one range is supported.\n\n\t\t\tconst viewSelectionAnchor = domConverter.domPositionToView( domSelection.anchorNode, domSelection.anchorOffset );\n\t\t\tconst viewSelectionFocus = domConverter.domPositionToView( domSelection.focusNode, domSelection.focusOffset );\n\n\t\t\t// Anchor and focus has to be properly mapped to view.\n\t\t\tif ( viewSelectionAnchor && viewSelectionFocus ) {\n\t\t\t\tviewSelection = new ViewSelection();\n\t\t\t\tviewSelection.collapse( viewSelectionAnchor );\n\t\t\t\tviewSelection.setFocus( viewSelectionFocus );\n\t\t\t}\n\t\t}\n\n\t\tthis.document.fire( 'mutations', viewMutations, viewSelection );\n\n\t\t// If nothing changes on `mutations` event, at this point we have \"dirty DOM\" (changed) and de-synched\n\t\t// view (which has not been changed). In order to \"reset DOM\" we render the view again.\n\t\tthis.document.render();\n\t}\n\n\t/**\n\t * Checks if mutation was generated by the browser inserting bogus br on the end of the block element.\n\t * Such mutations are generated while pressing space or performing native spellchecker correction\n\t * on the end of the block element in Firefox browser.\n\t *\n\t * @private\n\t * @param {Object} mutation Native mutation object.\n\t * @returns {Boolean}\n\t */\n\t_isBogusBrMutation( mutation ) {\n\t\tlet addedNode = null;\n\n\t\t// Check if mutation added only one node on the end of its parent.\n\t\tif ( mutation.nextSibling === null && mutation.removedNodes.length === 0 && mutation.addedNodes.length == 1 ) {\n\t\t\taddedNode = this.domConverter.domToView( mutation.addedNodes[ 0 ], {\n\t\t\t\twithChildren: false\n\t\t\t} );\n\t\t}\n\n\t\treturn addedNode && addedNode.is( 'element', 'br' );\n\t}\n}\n\n/**\n * Fired when mutation occurred. If tree view is not changed on this event, DOM will be reverter to the state before\n * mutation, so all changes which should be applied, should be handled on this event.\n *\n * Introduced by {@link module:engine/view/observer/mutationobserver~MutationObserver}.\n *\n * Note that because {@link module:engine/view/observer/mutationobserver~MutationObserver} is attached by the\n * {@link module:engine/view/document~Document}\n * this event is available by default.\n *\n * @see module:engine/view/observer/mutationobserver~MutationObserver\n * @event module:engine/view/document~Document#event:mutations\n * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|module:engine/view/observer/mutationobserver~MutatedChildren>}\n * viewMutations Array of mutations.\n * For mutated texts it will be {@link module:engine/view/observer/mutationobserver~MutatedText} and for mutated elements it will be\n * {@link module:engine/view/observer/mutationobserver~MutatedChildren}. You can recognize the type based on the `type` property.\n * @param {module:engine/view/selection~Selection|null} viewSelection View selection that is a result of converting DOM selection to view.\n * Keep in\n * mind that the DOM selection is already \"updated\", meaning that it already acknowledges changes done in mutation.\n */\n\n/**\n * Mutation item for text.\n *\n * @see module:engine/view/document~Document#event:mutations\n * @see module:engine/view/observer/mutationobserver~MutatedChildren\n *\n * @typedef {Object} module:engine/view/observer/mutationobserver~MutatedText\n *\n * @property {String} type For text mutations it is always 'text'.\n * @property {module:engine/view/text~Text} node Mutated text node.\n * @property {String} oldText Old text.\n * @property {String} newText New text.\n */\n\n/**\n * Mutation item for child nodes.\n *\n * @see module:engine/view/document~Document#event:mutations\n * @see module:engine/view/observer/mutationobserver~MutatedText\n *\n * @typedef {Object} module:engine/view/observer/mutationobserver~MutatedChildren\n *\n * @property {String} type For child nodes mutations it is always 'children'.\n * @property {module:engine/view/element~Element} node Parent of the mutated children.\n * @property {Array.<module:engine/view/node~Node>} oldChildren Old child nodes.\n * @property {Array.<module:engine/view/node~Node>} newChildren New child nodes.\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/view/observer/mutationobserver.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/rooteditableelement\n */\n\nimport EditableElement from './editableelement';\n\nconst rootNameSymbol = Symbol( 'rootName' );\n\n/**\n * Class representing a single root in the data view. A root can be either {@link #isReadOnly editable or read-only}, but\n * in both cases it is called \"an editable\". Roots can contain other {@link module:engine/view/editableelement~EditableElement editable\n * elements}\n * making them \"nested editables\".\n *\n * @extends module:engine/view/editableelement~EditableElement\n */\nexport default class RootEditableElement extends EditableElement {\n\t/**\n\t * Creates root editable element.\n\t *\n\t * @param {module:engine/view/document~Document} document {@link module:engine/view/document~Document} that is an owner of the root.\n\t * @param {String} name Node name.\n\t */\n\tconstructor( name ) {\n\t\tsuper( name );\n\n\t\t/**\n\t\t * Name of this root inside {@link module:engine/view/document~Document} that is an owner of this root. If no\n\t\t * other name is set, `main` name is used.\n\t\t *\n\t\t * @member {String}\n\t\t */\n\t\tthis.rootName = 'main';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tis( type, name = null ) {\n\t\tif ( !name ) {\n\t\t\treturn type == 'rootElement' || super.is( type );\n\t\t} else {\n\t\t\treturn ( type == 'rootElement' && name == this.name ) || super.is( type, name );\n\t\t}\n\t}\n\n\tget rootName() {\n\t\treturn this.getCustomProperty( rootNameSymbol );\n\t}\n\n\tset rootName( rootName ) {\n\t\tthis.setCustomProperty( rootNameSymbol, rootName );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/view/rooteditableelement.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/uielement\n */\n\nimport Element from './element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Node from './node';\n\n/**\n * UIElement class. It is used to represent UI not a content of the document.\n * This element can't be split and selection can't be placed inside this element.\n */\nexport default class UIElement extends Element {\n\t/**\n\t * Creates new instance of UIElement.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-uielement-cannot-add` when third parameter is passed,\n\t * to inform that usage of UIElement is incorrect (adding child nodes to UIElement is forbidden).\n\t *\n\t * @param {String} name Node name.\n\t * @param {Object|Iterable} [attributes] Collection of attributes.\n\t */\n\tconstructor( name, attributes, children ) {\n\t\tsuper( name, attributes, children );\n\n\t\t/**\n\t\t * Returns `null` because filler is not needed for UIElements.\n\t\t *\n\t\t * @method #getFillerOffset\n\t\t * @returns {null} Always returns null.\n\t\t */\n\t\tthis.getFillerOffset = getFillerOffset;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tis( type, name = null ) {\n\t\tif ( !name ) {\n\t\t\treturn type == 'uiElement' || super.is( type );\n\t\t} else {\n\t\t\treturn ( type == 'uiElement' && name == this.name ) || super.is( type, name );\n\t\t}\n\t}\n\n\t/**\n\t * Overrides {@link module:engine/view/element~Element#insertChildren} method.\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-uielement-cannot-add` to prevent adding any child nodes\n\t * to UIElement.\n\t */\n\tinsertChildren( index, nodes ) {\n\t\tif ( nodes && ( nodes instanceof Node || Array.from( nodes ).length > 0 ) ) {\n\t\t\t/**\n\t\t\t * Cannot add children to {@link module:engine/view/uielement~UIElement}.\n\t\t\t *\n\t\t\t * @error view-uielement-cannot-add\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-uielement-cannot-add: Cannot add child nodes to UIElement instance.' );\n\t\t}\n\t}\n}\n\n// Returns `null` because block filler is not needed for UIElements.\n//\n// @returns {null}\nfunction getFillerOffset() {\n\treturn null;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/view/uielement.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module image/image/imageengine\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport buildModelConverter from '@ckeditor/ckeditor5-engine/src/conversion/buildmodelconverter';\nimport buildViewConverter from '@ckeditor/ckeditor5-engine/src/conversion/buildviewconverter';\nimport { viewFigureToModel, createImageAttributeConverter, convertHoistableImage, hoistImageThroughElement } from './converters';\nimport { toImageWidget } from './utils';\nimport ModelElement from '@ckeditor/ckeditor5-engine/src/model/element';\nimport ViewContainerElement from '@ckeditor/ckeditor5-engine/src/view/containerelement';\nimport ViewEmptyElement from '@ckeditor/ckeditor5-engine/src/view/emptyelement';\n\n/**\n * The image engine plugin.\n * Registers `image` as a block element in document's schema and allows it to have two attributes: `src` and `alt`.\n * Registers converters for editing and data pipelines.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageEngine extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst doc = editor.document;\n\t\tconst schema = doc.schema;\n\t\tconst data = editor.data;\n\t\tconst editing = editor.editing;\n\t\tconst t = editor.t;\n\n\t\t// Configure schema.\n\t\tschema.registerItem( 'image' );\n\t\tschema.requireAttributes( 'image', [ 'src' ] );\n\t\tschema.allow( { name: 'image', attributes: [ 'alt', 'src' ], inside: '$root' } );\n\t\tschema.objects.add( 'image' );\n\n\t\t// Build converter from model to view for data pipeline.\n\t\tbuildModelConverter().for( data.modelToView )\n\t\t\t.fromElement( 'image' )\n\t\t\t.toElement( () => createImageViewElement() );\n\n\t\t// Build converter from model to view for editing pipeline.\n\t\tbuildModelConverter().for( editing.modelToView )\n\t\t\t.fromElement( 'image' )\n\t\t\t.toElement( () => toImageWidget( createImageViewElement(), t( 'image widget' ) ) );\n\n\t\tcreateImageAttributeConverter( [ editing.modelToView, data.modelToView ], 'src' );\n\t\tcreateImageAttributeConverter( [ editing.modelToView, data.modelToView ], 'alt' );\n\n\t\t// Build converter for view img element to model image element.\n\t\tbuildViewConverter().for( data.viewToModel )\n\t\t\t.from( { name: 'img', attribute: { src: /./ } } )\n\t\t\t.toElement( viewImage => new ModelElement( 'image', { src: viewImage.getAttribute( 'src' ) } ) );\n\n\t\tdata.viewToModel.on( 'element:img', convertHoistableImage, { priority: 'low' } );\n\t\tdata.viewToModel.on( 'element', hoistImageThroughElement, { priority: 'low' } );\n\n\t\t// Build converter for alt attribute.\n\t\t// Note that by default attribute converters are added with `low` priority.\n\t\t// This converter will be thus fired after `convertHoistableImage` converter.\n\t\tbuildViewConverter().for( data.viewToModel )\n\t\t\t.from( { name: 'img', attribute: { alt: /./ } } )\n\t\t\t.consuming( { attribute: [ 'alt' ] } )\n\t\t\t.toAttribute( viewImage => ( { key: 'alt', value: viewImage.getAttribute( 'alt' ) } ) );\n\n\t\t// Converter for figure element from view to model.\n\t\tdata.viewToModel.on( 'element:figure', viewFigureToModel() );\n\t}\n}\n\n// Creates view element representing the image.\n//\n//\t\t<figure class=\"image\"><img></img></figure>\n//\n// Note that `alt` and `src` attributes are converted separately, so they're not included.\n//\n// @private\n// @return {module:engine/view/containerelement~ContainerElement}\nexport function createImageViewElement() {\n\treturn new ViewContainerElement( 'figure', { class: 'image' }, new ViewEmptyElement( 'img' ) );\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-image/src/image/imageengine.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module image/image/ui/imageballoonpanel\n */\n\nimport throttle from '@ckeditor/ckeditor5-utils/src/lib/lodash/throttle';\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\nimport BalloonPanelView from '@ckeditor/ckeditor5-ui/src/panel/balloon/balloonpanelview';\nimport { isImageWidget } from '../utils';\n\n/**\n * Image balloon panel class. It extends {module:ui/panel/balloon/balloonpanelview~BalloonPanelView} by adding helpers\n * to use with image widgets. It sets proper positioning on `scroll` and `resize` events and hides the panel when\n * image is no longer selected or focus is lost.\n *\n * @extends module:ui/panel/balloon/balloonpanelview~BalloonPanelView\n */\nexport default class ImageBalloonPanelView extends BalloonPanelView {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor.locale );\n\n\t\tthis.editor = editor;\n\t\tconst editingView = editor.editing.view;\n\n\t\t// Hide the balloon if editor had focus and now focus is lost.\n\t\tthis.listenTo( editor.ui.focusTracker, 'change:isFocused', ( evt, name, is, was ) => {\n\t\t\tif ( was && !is ) {\n\t\t\t\tthis.detach();\n\t\t\t}\n\t\t} );\n\n\t\t// Hide the balloon if no image is currently selected.\n\t\teditor.listenTo( editingView, 'render', () => {\n\t\t\tconst selectedElement = editingView.selection.getSelectedElement();\n\n\t\t\tif ( !selectedElement || !isImageWidget( selectedElement ) ) {\n\t\t\t\tthis.detach();\n\t\t\t}\n\t\t}, { priority: 'low' } );\n\n\t\t/**\n\t\t * Wraps {@link #_attach} method with throttle function that will fire it not more than every 100ms.\n\t\t * It is used as `scroll` and `resize` callback.\n\t\t *\n\t\t * @private\n\t\t * @member {Function} #_throttledAttach\n\t\t */\n\t\tthis._throttledAttach = throttle( () => {\n\t\t\tthis._attach();\n\t\t}, 100 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\t// Let the focusTracker know about new focusable UI element.\n\t\tthis.editor.ui.focusTracker.add( this.element );\n\n\t\treturn super.init();\n\t}\n\n\t/**\n\t * Attaches the panel and enables `scroll` and `resize` listeners.\n\t */\n\tattach() {\n\t\tthis._attach();\n\t\tthis.editor.ui.view.listenTo( global.window, 'scroll', this._throttledAttach );\n\t\tthis.editor.ui.view.listenTo( global.window, 'resize', this._throttledAttach );\n\t}\n\n\t/**\n\t * Detaches the panel and disables `scroll` and `resize` listeners.\n\t */\n\tdetach() {\n\t\tthis.hide();\n\t\tthis.editor.ui.view.stopListening( global.window, 'scroll', this._throttledAttach );\n\t\tthis.editor.ui.view.stopListening( global.window, 'resize', this._throttledAttach );\n\t}\n\n\t/**\n\t * Attaches the panel to the first selection range.\n\t *\n\t * @private\n\t */\n\t_attach() {\n\t\tconst editingView = this.editor.editing.view;\n\t\tconst defaultPositions = BalloonPanelView.defaultPositions;\n\n\t\tthis.attachTo( {\n\t\t\ttarget: editingView.domConverter.viewToDom( editingView.selection.getSelectedElement() ),\n\t\t\tpositions: [ defaultPositions.northArrowSouth, defaultPositions.southArrowNorth ]\n\t\t} );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-image/src/image/ui/imageballoonpanelview.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module image/imagetoolbar\n */\n\nimport Template from '@ckeditor/ckeditor5-ui/src/template';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ToolbarView from '@ckeditor/ckeditor5-ui/src/toolbar/toolbarview';\nimport { isImageWidget } from './image/utils';\nimport ImageBalloonPanel from './image/ui/imageballoonpanelview';\n\n/**\n * Image toolbar class. Creates image toolbar placed inside balloon panel that is showed when image widget is selected.\n * Toolbar components are created using editor's {@link module:ui/componentfactory~ComponentFactory ComponentFactory}\n * based on {@link module:core/editor/editor~Editor#config configuration} stored under `image.toolbar`.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageToolbar extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'image/imagetoolbar';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * When set to `true`, toolbar will be repositioned and showed on each render event and focus change.\n\t\t * Set to `false` to temporary disable the image toolbar.\n\t\t *\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis.isEnabled = true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tafterInit() {\n\t\tconst editor = this.editor;\n\t\tconst toolbarConfig = editor.config.get( 'image.toolbar' );\n\n\t\t// Don't add the toolbar if there is no configuration.\n\t\tif ( !toolbarConfig || !toolbarConfig.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst panel = this._panel = new ImageBalloonPanel( editor );\n\t\tconst promises = [];\n\t\tconst toolbar = new ToolbarView();\n\n\t\t// Add CSS class to the toolbar.\n\t\tTemplate.extend( toolbar.template, {\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-editor-toolbar'\n\t\t\t}\n\t\t} );\n\n\t\t// Add CSS class to the panel.\n\t\tTemplate.extend( panel.template, {\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-toolbar-container',\n\t\t\t\t\t'ck-editor-toolbar-container'\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\n\t\t// Add toolbar to balloon panel.\n\t\tpromises.push( panel.content.add( toolbar ) );\n\n\t\t// Add buttons to the toolbar.\n\t\tpromises.push( toolbar.fillFromConfig( toolbarConfig, editor.ui.componentFactory ) );\n\n\t\t// Add balloon panel to editor's UI.\n\t\tpromises.push( editor.ui.view.body.add( panel ) );\n\n\t\t// Show balloon panel each time image widget is selected.\n\t\tthis.listenTo( this.editor.editing.view, 'render', () => {\n\t\t\tif ( this.isEnabled ) {\n\t\t\t\tthis.show();\n\t\t\t}\n\t\t}, { priority: 'low' } );\n\n\t\t// There is no render method after focus is back in editor, we need to check if balloon panel should be visible.\n\t\tthis.listenTo( editor.ui.focusTracker, 'change:isFocused', ( evt, name, is, was ) => {\n\t\t\tif ( !was && is && this.isEnabled ) {\n\t\t\t\tthis.show();\n\t\t\t}\n\t\t} );\n\n\t\treturn Promise.all( promises );\n\t}\n\n\t/**\n\t * Shows the toolbar.\n\t */\n\tshow() {\n\t\tconst selectedElement = this.editor.editing.view.selection.getSelectedElement();\n\n\t\tif ( selectedElement && isImageWidget( selectedElement ) ) {\n\t\t\tthis._panel.attach();\n\t\t}\n\t}\n\n\t/**\n\t * Hides the toolbar.\n\t */\n\thide() {\n\t\tthis._panel.detach();\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-image/src/imagetoolbar.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module link/findlinkrange\n */\n\nimport Range from '@ckeditor/ckeditor5-engine/src/model/range';\nimport Position from '@ckeditor/ckeditor5-engine/src/model/position';\n\n/**\n * Walk backward and forward from start position, node by node as long as they have the same `linkHref` attribute value and return\n * {@link module:engine/model/range~Range Range} with found link.\n *\n * @param {module:engine/model/position~Position} position Start position.\n * @param {String} value `linkHref` attribute value.\n * @returns {module:engine/model/range~Range} Link range.\n */\nexport default function findLinkRange( position, value ) {\n\treturn new Range( _findBound( position, value, true ), _findBound( position, value, false ) );\n}\n\n// Walk forward or backward (depends on `lookBack` flag), node by node as long as they have the same `linkHref` attribute value\n// and return position just before or after (depends on `lookBack` flag) last matched node.\n//\n// @param {module:engine/model/position~Position} position Start position.\n// @param {String} value `linkHref` attribute value.\n// @param {Boolean} lookBack Whether walk direction is forward `false` or backward `true`.\n// @returns {module:engine/model/position~Position} Position just before last matched node.\nfunction _findBound( position, value, lookBack ) {\n\t// Get node before or after position (depends on `lookBack` flag).\n\t// When position is inside text node then start searching from text node.\n\tlet node = position.textNode || ( lookBack ? position.nodeBefore : position.nodeAfter );\n\n\tlet lastNode = null;\n\n\twhile ( node && node.getAttribute( 'linkHref' ) == value ) {\n\t\tlastNode = node;\n\t\tnode = lookBack ? node.previousSibling : node.nextSibling;\n\t}\n\n\treturn lastNode ? Position.createAt( lastNode, lookBack ? 'before' : 'after' ) : position;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-link/src/findlinkrange.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module link/linkelement\n */\n\nimport AttributeElement from '@ckeditor/ckeditor5-engine/src/view/attributeelement';\n\n/**\n * This class is to mark specific {@link module:engine/view/node~Node} as {@link module:link/linkelement~LinkElement}.\n * E.g. There could be a situation when different features will create nodes with the same names,\n * and hence they must be identified somehow.\n *\n * @extends module:engine/view/attributelement~AttributeElement\n */\nexport default class LinkElement extends AttributeElement {\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-link/src/linkelement.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module typing/changebuffer\n */\n\nimport count from '@ckeditor/ckeditor5-utils/src/count';\n\n/**\n * Change buffer allows to group atomic changes (like characters that have been typed) into\n * {@link module:engine/model/batch~Batch batches}.\n *\n * Batches represent single undo steps, hence changes added to one single batch are undone together.\n *\n * The buffer has a configurable limit of atomic changes that it can accommodate. After the limit was\n * exceeded (see {@link ~ChangeBuffer#input}), a new batch is created in {@link ~ChangeBuffer#batch}.\n *\n * To use the change buffer you need to let it know about the number of changes that were added to the batch:\n *\n *\t\tconst buffer = new ChangeBuffer( document, LIMIT );\n *\n *\t\t// Later on in your feature:\n *\t\tbuffer.batch.insert( pos, insertedCharacters );\n *\t\tbuffer.input( insertedCharacters.length );\n *\n */\nexport default class ChangeBuffer {\n\t/**\n\t * Creates a new instance of the change buffer.\n\t *\n\t * @param {module:engine/model/document~Document} document\n\t * @param {Number} [limit=20] The maximum number of atomic changes which can be contained in one batch.\n\t */\n\tconstructor( doc, limit = 20 ) {\n\t\t/**\n\t\t * The document instance.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/document~Document} #document\n\t\t */\n\t\tthis.document = doc;\n\n\t\t/**\n\t\t * The number of atomic changes in the buffer. Once it exceeds the {@link #limit},\n\t\t * the {@link #batch batch} is set to a new one.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #size\n\t\t */\n\t\tthis.size = 0;\n\n\t\t/**\n\t\t * The maximum number of atomic changes which can be contained in one batch.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #limit\n\t\t */\n\t\tthis.limit = limit;\n\n\t\t/**\n\t\t * Whether the buffer is locked. The locked buffer cannot be reset unless it gets unlocked.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} #isLocked\n\t\t */\n\t\tthis.isLocked = false;\n\n\t\tthis._changeCallback = ( evt, type, changes, batch ) => {\n\t\t\tthis._onBatch( batch );\n\t\t};\n\n\t\tthis._selectionChangeCallback = () => {\n\t\t\tthis._reset();\n\t\t};\n\n\t\tdoc.on( 'change', this._changeCallback );\n\n\t\tdoc.selection.on( 'change:range', this._selectionChangeCallback );\n\n\t\tdoc.selection.on( 'change:attribute', this._selectionChangeCallback );\n\n\t\t/**\n\t\t * The current batch instance.\n\t\t *\n\t\t * @private\n\t\t * @member #_batch\n\t\t */\n\n\t\t/**\n\t\t * The callback to document the change event which later needs to be removed.\n\t\t *\n\t\t * @private\n\t\t * @member #_changeCallback\n\t\t */\n\n\t\t/**\n\t\t * The callback to document selection change:attribute and change:range events which resets the buffer.\n\t\t *\n\t\t * @private\n\t\t * @member #_selectionChangeCallback\n\t\t */\n\t}\n\n\t/**\n\t * The current batch to which a feature should add its deltas. Once the {@link #size}\n\t * is reached or exceeds the {@link #limit}, the batch is set to a new instance and the size is reset.\n\t *\n\t * @type {module:engine/model/batch~Batch}\n\t */\n\tget batch() {\n\t\tif ( !this._batch ) {\n\t\t\tthis._batch = this.document.batch();\n\t\t}\n\n\t\treturn this._batch;\n\t}\n\n\t/**\n\t * The input number of changes into the buffer. Once the {@link #size} is\n\t * reached or exceeds the {@link #limit}, the batch is set to a new instance and the size is reset.\n\t *\n\t * @param {Number} changeCount The number of atomic changes to input.\n\t */\n\tinput( changeCount ) {\n\t\tthis.size += changeCount;\n\n\t\tif ( this.size >= this.limit ) {\n\t\t\tthis._reset( true );\n\t\t}\n\t}\n\n\t/**\n\t * Locks the buffer.\n\t */\n\tlock() {\n\t\tthis.isLocked = true;\n\t}\n\n\t/**\n\t * Unlocks the buffer.\n\t */\n\tunlock() {\n\t\tthis.isLocked = false;\n\t}\n\n\t/**\n\t * Destroys the buffer.\n\t */\n\tdestroy() {\n\t\tthis.document.off( 'change', this._changeCallback );\n\t\tthis.document.selection.off( 'change:range', this._selectionChangeCallback );\n\t\tthis.document.selection.off( 'change:attribute', this._selectionChangeCallback );\n\t}\n\n\t/**\n\t * The method to be called in order to notify the buffer about batches which appeared in the document.\n\t * The method will check whether it is a new batch and in that case the buffer will be flushed.\n\t *\n\t * The reason why the buffer needs to be flushed whenever a new batch appears is that the changes added afterwards\n\t * should be added to a new batch. For instance, when the  user types, then inserts an image, and then types again,\n\t * the characters typed after inserting the image should be added to a different batch than the characters typed before.\n\t *\n\t * @private\n\t * @param {module:engine/model/batch~Batch} batch The batch which appears in the document.\n\t */\n\t_onBatch( batch ) {\n\t\t// One operation means a newly created batch.\n\t\tif ( batch.type != 'transparent' && batch !== this._batch && count( batch.getOperations() ) <= 1 ) {\n\t\t\tthis._reset( true );\n\t\t}\n\t}\n\n\t/**\n\t * Resets the change buffer.\n\t *\n\t * @private\n\t * @param {Boolean} [ignoreLock] Whether internal lock {@link #isLocked} should be ignored.\n\t */\n\t_reset( ignoreLock ) {\n\t\tif ( !this.isLocked || ignoreLock ) {\n\t\t\tthis._batch = null;\n\t\t\tthis.size = 0;\n\t\t}\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-typing/src/changebuffer.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/bindings/clickoutsidehandler\n */\n\n/* global document */\n\n/**\n * Handles a DOM `click` event outside of specified element and fires an action.\n *\n * Note that it is not handled by a `click` event, this is to avoid situation when click on some trigger\n * opens and closes element at the same time.\n *\n * @param {Object} options Configuration options.\n * @param {module:utils/dom/emittermixin~Emitter} options.emitter The emitter to which this behavior should be added.\n * @param {Function} options.activator Function returning a `Boolean`, to determine whether handler is active.\n * @param {HTMLElement} options.contextElement `HTMLElement` that clicking inside of which will not fire the callback.\n * @param {Function} options.callback Function fired after clicking outside of a specified element.\n */\nexport default function clickOutsideHandler( { emitter, activator, callback, contextElement } ) {\n\temitter.listenTo( document, 'mouseup', ( evt, { target } ) => {\n\t\tif ( activator() && !contextElement.contains( target ) ) {\n\t\t\tcallback();\n\t\t}\n\t} );\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-ui/src/bindings/clickoutsidehandler.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/bindings/preventdefault\n */\n\n/**\n * Returns a {module:ui/template~TemplateToBinding} resulting in a native `event#preventDefault`\n * for the DOM event if `event#target` equals {@link module:ui/view~View#element}.\n *\n * @param {module:ui/view~View} view View instance that uses the template.\n * @returns {module:ui/template~TemplateToBinding}\n */\nexport default function preventDefault( view ) {\n\treturn view.bindTemplate.to( evt => {\n\t\tif ( evt.target === view.element ) {\n\t\t\tevt.preventDefault();\n\t\t}\n\t} );\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-ui/src/bindings/preventdefault.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/bindings/submithandler\n */\n\n/**\n * Handles native DOM `submit` event by preventing it and firing\n * the {@link module:ui/view~View view's} `submit` event, which can be then handled by the\n * parent controller.\n *\n * @param {Object} [options] Configuration options.\n * @param {module:ui/view~View} options.view The view to which this behavior should be added.\n */\nexport default function submitHandler( { view } ) {\n\tview.listenTo( view.element, 'submit', ( evt, domEvt ) => {\n\t\tdomEvt.preventDefault();\n\t\tview.fire( 'submit' );\n\t}, { useCapture: true } );\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-ui/src/bindings/submithandler.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/inputtext/inputtextview\n */\n\nimport View from '../view';\nimport Template from '../template';\n\n/**\n * The text input view class.\n *\n * @extends module:ui/view~View\n */\nexport default class InputTextView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * The value of the input.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #value\n\t\t */\n\t\tthis.set( 'value' );\n\n\t\t/**\n\t\t * The `id` attribute of the input (i.e. to pair with a `<label>` element).\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #id\n\t\t */\n\t\tthis.set( 'id' );\n\n\t\t/**\n\t\t * The `placeholder` attribute of the input.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #placeholder\n\t\t */\n\t\tthis.set( 'placeholder' );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.template = new Template( {\n\t\t\ttag: 'input',\n\t\t\tattributes: {\n\t\t\t\ttype: 'text',\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-input',\n\t\t\t\t\t'ck-input-text'\n\t\t\t\t],\n\t\t\t\tid: bind.to( 'id' ),\n\t\t\t\tplaceholder: bind.to( 'placeholder' )\n\t\t\t}\n\t\t} );\n\n\t\t// Note: `value` cannot be an HTML attribute, because it doesn't change HTMLInputElement value once changed.\n\t\tthis.on( 'change:value', ( evt, propertyName, value ) => {\n\t\t\tthis.element.value = value || '';\n\t\t} );\n\t}\n\n\t/**\n\t * Moves the focus to the input and selects the value.\n\t */\n\tselect() {\n\t\tthis.element.select();\n\t}\n\n\t/**\n\t * Focuses the input.\n\t */\n\tfocus() {\n\t\tthis.element.focus();\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-ui/src/inputtext/inputtextview.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/labeledinput/labeledinputview\n */\n\nimport View from '../view';\nimport Template from '../template';\nimport uid from '@ckeditor/ckeditor5-utils/src/uid';\n\nimport LabelView from '../label/labelview';\n\n/**\n * The labeled input view class.\n *\n * @extends module:ui/view~View\n */\nexport default class LabeledInputView extends View {\n\t/**\n\t * Creates an instance of the labeled input view class.\n\t *\n\t * @param {module:utils/locale~Locale} locale The locale instance.\n\t * @param {Function} InputView Constructor of the input view.\n\t */\n\tconstructor( locale, InputView ) {\n\t\tsuper( locale );\n\n\t\tconst id = `ck-input-${ uid() }`;\n\n\t\t/**\n\t\t * The text of the label.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #label\n\t\t */\n\t\tthis.set( 'label' );\n\n\t\t/**\n\t\t * The value of the input.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #value\n\t\t */\n\t\tthis.set( 'value' );\n\n\t\t/**\n\t\t * The label view.\n\t\t *\n\t\t * @member {module:ui/label/labelview~LabelView} #labelView\n\t\t */\n\t\tthis.labelView = this._createLabelView( id );\n\n\t\t/**\n\t\t * The input view.\n\t\t *\n\t\t * @member {module:ui/view~View} #inputView\n\t\t */\n\t\tthis.inputView = this._createInputView( InputView, id );\n\n\t\tthis.template = new Template( {\n\t\t\ttag: 'div',\n\n\t\t\tchildren: [\n\t\t\t\tthis.labelView,\n\t\t\t\tthis.inputView\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * Creates label view class instance and bind with view.\n\t *\n\t * @private\n\t * @param {String} id Unique id to set as labelView#for attribute.\n\t * @returns {module:ui/label/labelview~LabelView}\n\t */\n\t_createLabelView( id ) {\n\t\tconst labelView = new LabelView( this.locale );\n\n\t\tlabelView.for = id;\n\t\tlabelView.bind( 'text' ).to( this, 'label' );\n\n\t\treturn labelView;\n\t}\n\n\t/**\n\t * Creates input view class instance and bind with view.\n\t *\n\t * @private\n\t * @param {Function} InputView Input view constructor.\n\t * @param {String} id Unique id to set as inputView#id attribute.\n\t * @returns {module:ui/inputtext/inputtextview~InputTextView}\n\t */\n\t_createInputView( InputView, id ) {\n\t\tconst inputView = new InputView( this.locale );\n\n\t\tinputView.id = id;\n\t\tinputView.bind( 'value' ).to( this );\n\n\t\treturn inputView;\n\t}\n\n\t/**\n\t * Moves the focus to the input and selects the value.\n\t */\n\tselect() {\n\t\tthis.inputView.select();\n\t}\n\n\t/**\n\t * Focuses the input.\n\t */\n\tfocus() {\n\t\tthis.inputView.focus();\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-ui/src/labeledinput/labeledinputview.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/panel/balloon/balloonpanelview\n */\n\nimport View from '../../view';\nimport Template from '../../template';\nimport { getOptimalPosition } from '@ckeditor/ckeditor5-utils/src/dom/position';\nimport isRange from '@ckeditor/ckeditor5-utils/src/dom/isrange';\nimport isElement from '@ckeditor/ckeditor5-utils/src/lib/lodash/isElement';\nimport toUnit from '@ckeditor/ckeditor5-utils/src/dom/tounit';\nimport preventDefault from '../../bindings/preventdefault.js';\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\n\nconst toPx = toUnit( 'px' );\nconst defaultLimiterElement = global.document.body;\n\n/**\n * The balloon panel view class.\n *\n * @extends module:ui/view~View\n */\nexport default class BalloonPanelView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * The absolute top position of the balloon panel in pixels.\n\t\t *\n\t\t * @observable\n\t\t * @default 0\n\t\t * @member {Number} #top\n\t\t */\n\t\tthis.set( 'top', 0 );\n\n\t\t/**\n\t\t * The absolute left position of the balloon panel in pixels.\n\t\t *\n\t\t * @observable\n\t\t * @default 0\n\t\t * @member {Number} #left\n\t\t */\n\t\tthis.set( 'left', 0 );\n\n\t\t/**\n\t\t * Balloon panel's current position. The position name is reflected in the CSS class set\n\t\t * to the balloon, i.e. `.ck-balloon-panel_arrow_ne` for \"arrow_ne\" position. The class\n\t\t * controls the minor aspects of the balloon's visual appearance like placement\n\t\t * of the \"arrow\". To support a new position, an additional CSS must be created.\n\t\t *\n\t\t * Default position names correspond with\n\t\t * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n\t\t *\n\t\t * See {@link #attachTo} to learn about custom balloon positions.\n\t\t *\n\t\t * See {@link #withArrow}.\n\t\t *\n\t\t * @observable\n\t\t * @default 'arrow_ne'\n\t\t * @member {'arrow_ne'|'arrow_nw'|'arrow_se'|'arrow_sw'} #position\n\t\t */\n\t\tthis.set( 'position', 'arrow_ne' );\n\n\t\t/**\n\t\t * Controls whether the balloon panel is visible or not.\n\t\t *\n\t\t * @observable\n\t\t * @default false\n\t\t * @member {Boolean} #isVisible\n\t\t */\n\t\tthis.set( 'isVisible', false );\n\n\t\t/**\n\t\t * Controls whether the balloon panel has an arrow. The presence of the arrow\n\t\t * is reflected in `ck-balloon-panel_with-arrow` CSS class.\n\t\t *\n\t\t * @observable\n\t\t * @default true\n\t\t * @member {Boolean} #withArrow\n\t\t */\n\t\tthis.set( 'withArrow', true );\n\n\t\t/**\n\t\t * Additional css class added to the {#element}.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #className\n\t\t */\n\t\tthis.set( 'className' );\n\n\t\t/**\n\t\t * A callback that starts pining the panel when {@link #isVisible} gets\n\t\t * `true`. Used by {@link #pin}.\n\t\t *\n\t\t * @private\n\t\t * @member {Function} #_pinWhenIsVisibleCallback\n\t\t */\n\n\t\t/**\n\t\t * Collection of the child views which creates balloon panel contents.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.content = this.createCollection();\n\n\t\tthis.template = new Template( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-balloon-panel',\n\t\t\t\t\tbind.to( 'position', value => `ck-balloon-panel_${ value }` ),\n\t\t\t\t\tbind.if( 'isVisible', 'ck-balloon-panel_visible' ),\n\t\t\t\t\tbind.if( 'withArrow', 'ck-balloon-panel_with-arrow' ),\n\t\t\t\t\tbind.to( 'className' )\n\t\t\t\t],\n\n\t\t\t\tstyle: {\n\t\t\t\t\ttop: bind.to( 'top', toPx ),\n\t\t\t\t\tleft: bind.to( 'left', toPx )\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tchildren: this.content,\n\n\t\t\ton: {\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/206\n\t\t\t\tmousedown: preventDefault( this )\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Shows the balloon panel.\n\t *\n\t * See {@link #isVisible}.\n\t */\n\tshow() {\n\t\tthis.isVisible = true;\n\t}\n\n\t/**\n\t * Hides the balloon panel.\n\t *\n\t * See {@link #isVisible}.\n\t */\n\thide() {\n\t\tthis.isVisible = false;\n\t}\n\n\t/**\n\t * Attaches the balloon panel to a specified DOM element or range with a smart heuristics.\n\t *\n\t * See {@link @link module:utils/dom/position~getOptimalPosition}.\n\t *\n\t * TODO: More docs and examples.\n\t *\n\t * @param {module:utils/dom/position~Options} options Positioning options compatible with\n\t * {@link module:utils/dom/position~getOptimalPosition}. Default `positions` array is\n\t * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n\t */\n\tattachTo( options ) {\n\t\tthis.show();\n\n\t\tconst defaultPositions = BalloonPanelView.defaultPositions;\n\t\tconst positionOptions = Object.assign( {}, {\n\t\t\telement: this.element,\n\t\t\tpositions: [\n\t\t\t\tdefaultPositions.southEastArrowNorthEast,\n\t\t\t\tdefaultPositions.southWestArrowNorthEast,\n\t\t\t\tdefaultPositions.northEastArrowSouthWest,\n\t\t\t\tdefaultPositions.northWestArrowSouthEast\n\t\t\t],\n\t\t\tlimiter: defaultLimiterElement,\n\t\t\tfitInViewport: true\n\t\t}, options );\n\n\t\tconst { top, left, name: position } = getOptimalPosition( positionOptions );\n\n\t\tObject.assign( this, { top, left, position } );\n\t}\n\n\t/**\n\t * Works the same way as {module:ui/panel/balloon/balloonpanelview~BalloonPanelView.attachTo}\n\t * except that the position of the panel is continuously updated when any ancestor of the\n\t * {@link module:utils/dom/position~Options#target} or {@link module:utils/dom/position~Options#limiter}\n\t * is being scrolled or when the browser window is being resized.\n\t *\n\t * Thanks to this, the panel always sticks to the {@link module:utils/dom/position~Options#target}.\n\t *\n\t * See: {@link #unpin}.\n\t *\n\t * @param {module:utils/dom/position~Options} options Positioning options compatible with\n\t * {@link module:utils/dom/position~getOptimalPosition}. Default `positions` array is\n\t * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n\t */\n\tpin( options ) {\n\t\tthis.unpin();\n\n\t\tthis._pinWhenIsVisibleCallback = () => {\n\t\t\tif ( this.isVisible ) {\n\t\t\t\tthis._startPinning( options );\n\t\t\t} else {\n\t\t\t\tthis._stopPinning();\n\t\t\t}\n\t\t};\n\n\t\tthis._startPinning( options );\n\n\t\t// Control the state of the listeners depending on whether the panel is visible\n\t\t// or not.\n\t\t// TODO: Use on() (https://github.com/ckeditor/ckeditor5-utils/issues/144).\n\t\tthis.listenTo( this, 'change:isVisible', this._pinWhenIsVisibleCallback );\n\t}\n\n\t/**\n\t * Stops pinning the panel, as set up by {@link #pin}.\n\t */\n\tunpin() {\n\t\tif ( this._pinWhenIsVisibleCallback ) {\n\t\t\t// Deactivate listeners attached by pin().\n\t\t\tthis._stopPinning();\n\n\t\t\t// Deactivate the panel pin() control logic.\n\t\t\t// TODO: Use off() (https://github.com/ckeditor/ckeditor5-utils/issues/144).\n\t\t\tthis.stopListening( this, 'change:isVisible', this._pinWhenIsVisibleCallback );\n\n\t\t\tthis._pinWhenIsVisibleCallback = null;\n\n\t\t\tthis.hide();\n\t\t}\n\t}\n\n\t/**\n\t * Starts managing the pinned state of the panel. See {@link #pin}.\n\t *\n\t * @private\n\t * @param {module:utils/dom/position~Options} options Positioning options compatible with\n\t * {@link module:utils/dom/position~getOptimalPosition}.\n\t */\n\t_startPinning( options ) {\n\t\tthis.attachTo( options );\n\n\t\tconst limiter = options.limiter || defaultLimiterElement;\n\t\tlet targetElement = null;\n\n\t\t// We need to take HTMLElement related to the target if it is possible.\n\t\tif ( isElement( options.target ) ) {\n\t\t\ttargetElement = options.target;\n\t\t} else if ( isRange( options.target ) ) {\n\t\t\ttargetElement = options.target.commonAncestorContainer;\n\t\t}\n\n\t\t// Then we need to listen on scroll event of eny element in the document.\n\t\tthis.listenTo( global.document, 'scroll', ( evt, domEvt ) => {\n\t\t\tconst scrollTarget = domEvt.target;\n\n\t\t\t// The position needs to be updated if the positioning target is within the scrolled element.\n\t\t\tconst isWithinScrollTarget = targetElement && scrollTarget.contains( targetElement );\n\n\t\t\t// The position needs to be updated if the positioning limiter is within the scrolled element.\n\t\t\tconst isLimiterWithinScrollTarget = scrollTarget.contains( limiter );\n\n\t\t\t// The positioning target can be a Rect, object etc.. There's no way to optimize the listener then.\n\t\t\tif ( isWithinScrollTarget || isLimiterWithinScrollTarget || !targetElement ) {\n\t\t\t\tthis.attachTo( options );\n\t\t\t}\n\t\t}, { useCapture: true } );\n\n\t\t// We need to listen on window resize event and update position.\n\t\tthis.listenTo( global.window, 'resize', () => {\n\t\t\tthis.attachTo( options );\n\t\t} );\n\t}\n\n\t/**\n\t * Stops managing the pinned state of the panel. See {@link #pin}.\n\t *\n\t * @private\n\t */\n\t_stopPinning() {\n\t\tthis.stopListening( global.document, 'scroll' );\n\t\tthis.stopListening( global.window, 'resize' );\n\t}\n}\n\n/**\n * A horizontal offset of the arrow tip from the edge of the balloon. Controlled by CSS.\n *\n *\t\t +-----|---------...\n *\t\t |     |\n *\t\t |     |\n *\t\t |     |\n *\t\t |     |\n *\t\t +--+  |  +------...\n *\t\t     \\ | /\n *\t\t      \\|/\n *\t    >|-----|<---------------- horizontal offset\n *\n * @default 30\n * @member {Number} module:ui/panel/balloon/balloonpanelview~BalloonPanelView.arrowHorizontalOffset\n */\nBalloonPanelView.arrowHorizontalOffset = 30;\n\n/**\n * A vertical offset of the arrow from the edge of the balloon. Controlled by CSS.\n *\n *\t\t +-------------...\n *\t\t |\n *\t\t |\n *\t\t |                      /-- vertical offset\n *\t\t |                     V\n *\t\t +--+    +-----...    ---------\n *\t\t     \\  /              |\n *\t\t      \\/               |\n *\t\t-------------------------------\n *\t\t                       ^\n *\n * @default 15\n * @member {Number} module:ui/panel/balloon/balloonpanelview~BalloonPanelView.arrowVerticalOffset\n */\nBalloonPanelView.arrowVerticalOffset = 15;\n\n/**\n * A default set of positioning functions used by the balloon panel view\n * when attaching using {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#attachTo} method.\n *\n * The available positioning functions are as follows:\n *\n * * South east (arrow north west):\n *\n *\t\t[ Target ]\n *\t\t    ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n *\n * * South west (arrow north east):\n *\n *\t\t         [ Target ]\n *\t\t              ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n *\n * * North east (arrow south west):\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t    V\n *\t\t[ Target ]\n *\n *\n * * North west (arrow south east):\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t              V\n *\t\t         [ Target ]\n *\n *\n * * South east (arrow north):\n *\n * \t\t      [ Target ]\n * \t\t           ^\n * \t\t  +-----------------+\n * \t\t  |     Balloon     |\n * \t\t  +-----------------+\n *\n *\n * * North east (arrow south):\n *\n * \t\t  +-----------------+\n * \t\t  |     Balloon     |\n * \t\t  +-----------------+\n * \t\t           V\n * \t\t      [ Target ]\n *\n *\n * * North west (arrow south):\n *\n * \t\t+-----------------+\n * \t\t|     Balloon     |\n * \t\t+-----------------+\n * \t\t         V\n * \t\t    [ Target ]\n *\n *\n * * South west (arrow north):\n *\n * \t\t    [ Target ]\n * \t\t         ^\n * \t\t+-----------------+\n * \t\t|     Balloon     |\n * \t\t+-----------------+\n *\n * * South (arrow north):\n *\n * \t\t     [ Target ]\n * \t\t         ^\n * \t\t+-----------------+\n * \t\t|     Balloon     |\n * \t\t+-----------------+\n *\n * * North (arrow south):\n *\n * \t\t+-----------------+\n * \t\t|     Balloon     |\n * \t\t+-----------------+\n * \t\t        V\n * \t\t    [ Target ]\n *\n * See {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#attachTo}.\n *\n * Positioning functions must be compatible with {@link module:utils/dom/position~Position}.\n *\n * The name that position function returns will be reflected in balloon panel's class that\n * controls the placement of the \"arrow\". See {@link #position} to learn more.\n *\n * @member {Object} module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions\n */\nBalloonPanelView.defaultPositions = {\n\tsouthEastArrowNorthEast: targetRect => ( {\n\t\ttop: targetRect.bottom + BalloonPanelView.arrowVerticalOffset,\n\t\tleft: targetRect.left + targetRect.width / 2 - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_ne'\n\t} ),\n\n\tsouthWestArrowNorthEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: targetRect.bottom + BalloonPanelView.arrowVerticalOffset,\n\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_nw'\n\t} ),\n\n\tnorthEastArrowSouthWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: targetRect.top - balloonRect.height - BalloonPanelView.arrowVerticalOffset,\n\t\tleft: targetRect.left + targetRect.width / 2 - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_se'\n\t} ),\n\n\tnorthWestArrowSouthEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: targetRect.top - balloonRect.height - BalloonPanelView.arrowVerticalOffset,\n\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_sw'\n\t} ),\n\n\tsouthEastArrowNorth: ( targetRect, balloonRect ) => ( {\n\t\ttop: targetRect.bottom + BalloonPanelView.arrowVerticalOffset,\n\t\tleft: targetRect.right - balloonRect.width / 2,\n\t\tname: 'arrow_n'\n\t} ),\n\n\tnorthEastArrowSouth: ( targetRect, balloonRect ) => ( {\n\t\ttop: targetRect.top - balloonRect.height - BalloonPanelView.arrowVerticalOffset,\n\t\tleft: targetRect.right - balloonRect.width / 2,\n\t\tname: 'arrow_s'\n\t} ),\n\n\tnorthWestArrowSouth: ( targetRect, balloonRect ) => ( {\n\t\ttop: targetRect.top - balloonRect.height - BalloonPanelView.arrowVerticalOffset,\n\t\tleft: targetRect.left - balloonRect.width / 2,\n\t\tname: 'arrow_s'\n\t} ),\n\n\tsouthWestArrowNorth: ( targetRect, balloonRect ) => ( {\n\t\ttop: targetRect.bottom + BalloonPanelView.arrowVerticalOffset,\n\t\tleft: targetRect.left - balloonRect.width / 2,\n\t\tname: 'arrow_n'\n\t} ),\n\n\tsouthArrowNorth: ( targetRect, balloonRect ) => ( {\n\t\ttop: targetRect.bottom + BalloonPanelView.arrowVerticalOffset,\n\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width / 2,\n\t\tname: 'arrow_n'\n\t} ),\n\n\tnorthArrowSouth: ( targetRect, balloonRect ) => ( {\n\t\ttop: targetRect.top - balloonRect.height - BalloonPanelView.arrowVerticalOffset,\n\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width / 2,\n\t\tname: 'arrow_s'\n\t} )\n};\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-ui/src/panel/balloon/balloonpanelview.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/toolbar/toolbarview\n */\n\nimport View from '../view';\nimport Template from '../template';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport FocusCycler from '../focuscycler';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\nimport ToolbarSeparatorView from './toolbarseparatorview';\nimport preventDefault from '../bindings/preventdefault.js';\n\n/**\n * The toolbar view class.\n *\n * @extends module:ui/view~View\n */\nexport default class ToolbarView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * Collection of the toolbar items (like buttons).\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.items = this.createCollection();\n\n\t\t/**\n\t\t * Tracks information about DOM focus in the list.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\t/**\n\t\t * Helps cycling over focusable {@link #items} in the toolbar.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/focuscycler~FocusCycler}\n\t\t */\n\t\tthis._focusCycler = new FocusCycler( {\n\t\t\tfocusables: this.items,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate toolbar items backwards using the arrow[left,up] keys.\n\t\t\t\tfocusPrevious: [ 'arrowleft', 'arrowup' ],\n\n\t\t\t\t// Navigate toolbar items forwards using the arrow[right,down] keys.\n\t\t\t\tfocusNext: [ 'arrowright', 'arrowdown' ]\n\t\t\t}\n\t\t} );\n\n\t\tthis.template = new Template( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-toolbar'\n\t\t\t\t]\n\t\t\t},\n\n\t\t\tchildren: this.items,\n\n\t\t\ton: {\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/206\n\t\t\t\tmousedown: preventDefault( this )\n\t\t\t}\n\t\t} );\n\n\t\tthis.items.on( 'add', ( evt, item ) => {\n\t\t\tthis.focusTracker.add( item.element );\n\t\t} );\n\n\t\tthis.items.on( 'remove', ( evt, item ) => {\n\t\t\tthis.focusTracker.remove( item.element );\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\t// Start listening for the keystrokes coming from #element.\n\t\tthis.keystrokes.listenTo( this.element );\n\n\t\treturn super.init();\n\t}\n\n\t/**\n\t * Focuses the first focusable in {@link #items}.\n\t */\n\tfocus() {\n\t\tthis._focusCycler.focusFirst();\n\t}\n\n\t/**\n\t * A utility which expands a plain toolbar configuration into\n\t * {@link module:ui/toolbar/toolbarview~ToolbarView#items} using a given component factory.\n\t *\n\t * @param {Array} config The toolbar config.\n\t * @param {module:ui/componentfactory~ComponentFactory} factory A factory producing toolbar items.\n\t * @returns {Promise} A promise resolved when created toolbar items are initialized.\n\t */\n\tfillFromConfig( config, factory ) {\n\t\tif ( !config ) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn Promise.all( config.map( name => {\n\t\t\tconst component = name == '|' ? new ToolbarSeparatorView() : factory.create( name );\n\n\t\t\treturn this.items.add( component );\n\t\t} ) );\n\t}\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-ui/src/toolbar/toolbarview.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module undo/basecommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command/command';\n\n/**\n * Base class for undo feature commands: {@link module:undo/undocommand~UndoCommand} and {@link module:undo/redocommand~RedoCommand}.\n *\n * @protected\n * @extends module:core/command/command~Command\n */\nexport default class BaseCommand extends Command {\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * Stack of items stored by the command. These are pairs of:\n\t\t *\n\t\t * * {@link module:engine/model/batch~Batch batch} saved by the command,\n\t\t * * {@link module:engine/model/selection~Selection selection} state at the moment of saving the batch.\n\t\t *\n\t\t * @protected\n\t\t * @member {Array} #_stack\n\t\t */\n\t\tthis._stack = [];\n\n\t\t/**\n\t\t * Stores all batches that were created by this command.\n\t\t *\n\t\t * @protected\n\t\t * @member {WeakSet.<module:engine/model/batch~Batch>} #_createdBatches\n\t\t */\n\t\tthis._createdBatches = new WeakSet();\n\n\t\t// Refresh state, so command is inactive just after initialization.\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Stores a batch in the command, together with the selection state of the {@link module:engine/model/document~Document document}\n\t * created by the editor which this command is registered to.\n\t *\n\t * @param {module:engine/model/batch~Batch} batch The batch to add.\n\t */\n\taddBatch( batch ) {\n\t\tconst selection = {\n\t\t\tranges: Array.from( this.editor.document.selection.getRanges() ),\n\t\t\tisBackward: this.editor.document.selection.isBackward\n\t\t};\n\n\t\tthis._stack.push( { batch, selection } );\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Removes all items from the stack.\n\t */\n\tclearStack() {\n\t\tthis._stack = [];\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_checkEnabled() {\n\t\treturn this._stack.length > 0;\n\t}\n\n\t/**\n\t * Restores the {@link module:engine/model/document~Document#selection document selection} state after a batch was undone.\n\t *\n\t * @protected\n\t * @param {Array.<module:engine/model/range~Range>} ranges Ranges to be restored.\n\t * @param {Boolean} isBackward A flag describing whether the restored range was selected forward or backward.\n\t */\n\t_restoreSelection( ranges, isBackward, deltas ) {\n\t\tconst document = this.editor.document;\n\n\t\t// This will keep the transformed selection ranges.\n\t\tconst selectionRanges = [];\n\n\t\t// Transform all ranges from the restored selection.\n\t\tfor ( const range of ranges ) {\n\t\t\tconst transformedRanges = transformSelectionRange( range, deltas );\n\n\t\t\t// For each `range` from `ranges`, we take only one transformed range.\n\t\t\t// This is because we want to prevent situation where single-range selection\n\t\t\t// got transformed to multi-range selection. We will take the first range that\n\t\t\t// is not in the graveyard.\n\t\t\tconst transformedRange = transformedRanges.find(\n\t\t\t\trange => range.start.root != document.graveyard\n\t\t\t);\n\n\t\t\t// `transformedRange` might be `undefined` if transformed range ended up in graveyard.\n\t\t\tif ( transformedRange ) {\n\t\t\t\tselectionRanges.push( transformedRange );\n\t\t\t}\n\t\t}\n\n\t\t// `selectionRanges` may be empty if all ranges ended up in graveyard. If that is the case, do not restore selection.\n\t\tif ( selectionRanges.length ) {\n\t\t\tdocument.selection.setRanges( selectionRanges, isBackward );\n\t\t}\n\t}\n}\n\n// Transforms given range `range` by deltas from `document` history, starting from a delta with given `baseVersion`.\n// Returns an array containing one or more ranges, which are result of the transformation.\nfunction transformSelectionRange( range, deltas ) {\n\t// The range will be transformed by history deltas that happened after the selection got stored.\n\t// Note, that at this point, the document history is already updated by undo command execution. We will\n\t// not transform the range by deltas that got undone or their reversing counterparts.\n\tconst transformed = transformRangesByDeltas( [ range ], deltas );\n\n\t// After `range` got transformed, we have an array of ranges. Some of those\n\t// ranges may be \"touching\" -- they can be next to each other and could be merged.\n\t// First, we have to sort those ranges because they don't have to be in an order.\n\ttransformed.sort( ( a, b ) => a.start.isBefore( b.start ) ? -1 : 1 );\n\n\t// Then, we check if two consecutive ranges are touching.\n\tfor ( let i = 1; i < transformed.length; i++ ) {\n\t\tconst a = transformed[ i - 1 ];\n\t\tconst b = transformed[ i ];\n\n\t\tif ( a.end.isTouching( b.start ) ) {\n\t\t\ta.end = b.end;\n\t\t\ttransformed.splice( i, 1 );\n\t\t\ti--;\n\t\t}\n\t}\n\n\treturn transformed;\n}\n\n// Transforms given set of `ranges` by given set of `deltas`. Returns transformed `ranges`.\nexport function transformRangesByDeltas( ranges, deltas ) {\n\tfor ( const delta of deltas ) {\n\t\tfor ( const operation of delta.operations ) {\n\t\t\t// We look through all operations from all deltas.\n\n\t\t\tfor ( let i = 0; i < ranges.length; i++ ) {\n\t\t\t\t// We transform every range by every operation.\n\t\t\t\tlet result;\n\n\t\t\t\tswitch ( operation.type ) {\n\t\t\t\t\tcase 'insert':\n\t\t\t\t\t\tresult = ranges[ i ]._getTransformedByInsertion(\n\t\t\t\t\t\t\toperation.position,\n\t\t\t\t\t\t\toperation.nodes.maxOffset,\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'move':\n\t\t\t\t\tcase 'remove':\n\t\t\t\t\tcase 'reinsert':\n\t\t\t\t\t\tresult = ranges[ i ]._getTransformedByMove(\n\t\t\t\t\t\t\toperation.sourcePosition,\n\t\t\t\t\t\t\toperation.targetPosition,\n\t\t\t\t\t\t\toperation.howMany,\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// If we have a transformation result, we substitute transformed range with it in `transformed` array.\n\t\t\t\t// Keep in mind that the result is an array and may contain multiple ranges.\n\t\t\t\tif ( result ) {\n\t\t\t\t\tranges.splice( i, 1, ...result );\n\n\t\t\t\t\t// Fix iterator.\n\t\t\t\t\ti = i + result.length - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn ranges;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-undo/src/basecommand.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/count\n */\n\n/**\n * Returns the number of items return by the iterator.\n *\n *\t\tcount( [ 1, 2, 3, 4, 5 ] ); // 5;\n *\n * @param {Iterable.<*>} iterator Any iterator.\n * @returns {Number} Number of items returned by that iterator.\n */\nexport default function count( iterator ) {\n\tlet count = 0;\n\n\tfor ( const _ of iterator ) { // eslint-disable-line no-unused-vars\n\t\tcount++;\n\t}\n\n\treturn count;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/count.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/diff\n */\n\n// The following code is based on the \"O(NP) Sequence Comparison Algorithm\"\n// by Sun Wu, Udi Manber, Gene Myers, Webb Miller.\n\n/**\n * Calculates the difference between two arrays or strings producing an array containing a list of changes\n * necessary to transform input into output.\n *\n *\t\tdiff( 'aba', 'acca' ); // [ 'equal', 'insert', 'insert', 'delete', 'equal' ]\n *\n * @param {Array|String} a Input array or string.\n * @param {Array|String} b Output array or string.\n * @param {Function} [cmp] Optional function used to compare array values, by default === is used.\n * @returns {Array} Array of changes.\n */\nexport default function diff( a, b, cmp ) {\n\t// Set the comparator function.\n\tcmp = cmp || function( a, b ) {\n\t\treturn a === b;\n\t};\n\n\t// Temporary action type statics.\n\tlet _insert, _delete;\n\n\t// Swapped the arrays to use the shorter one as the first one.\n\tif ( b.length < a.length ) {\n\t\tconst tmp = a;\n\n\t\ta = b;\n\t\tb = tmp;\n\n\t\t// We swap the action types as well.\n\t\t_insert = 'delete';\n\t\t_delete = 'insert';\n\t} else {\n\t\t_insert = 'insert';\n\t\t_delete = 'delete';\n\t}\n\n\tconst m = a.length;\n\tconst n = b.length;\n\tconst delta = n - m;\n\n\t// Edit scripts, for each diagonal.\n\tconst es = {};\n\t// Furthest points, the furthest y we can get on each diagonal.\n\tconst fp = {};\n\n\tfunction snake( k ) {\n\t\t// We use -1 as an alternative below to handle initial values ( instead of filling the fp with -1 first ).\n\t\t// Furthest points (y) on the diagonal below k.\n\t\tconst y1 = ( fp[ k - 1 ] !== undefined ? fp[ k - 1 ] : -1 ) + 1;\n\t\t// Furthest points (y) on the diagonal above k.\n\t\tconst y2 = fp[ k + 1 ] !== undefined ? fp[ k + 1 ] : -1;\n\t\t// The way we should go to get further.\n\t\tconst dir = y1 > y2 ? -1 : 1;\n\n\t\t// Clone previous changes array (if any).\n\t\tif ( es[ k + dir ] ) {\n\t\t\tes[ k ] = es[ k + dir ].slice( 0 );\n\t\t}\n\n\t\t// Create changes array.\n\t\tif ( !es[ k ] ) {\n\t\t\tes[ k ] = [];\n\t\t}\n\n\t\t// Push the action.\n\t\tes[ k ].push( y1 > y2 ? _insert : _delete );\n\n\t\t// Set the beginning coordinates.\n\t\tlet y = Math.max( y1, y2 );\n\t\tlet x = y - k;\n\n\t\t// Traverse the diagonal as long as the values match.\n\t\twhile ( x < m && y < n && cmp( a[ x ], b[ y ] ) ) {\n\t\t\tx++;\n\t\t\ty++;\n\t\t\t// Push no change action.\n\t\t\tes[ k ].push( 'equal' );\n\t\t}\n\n\t\treturn y;\n\t}\n\n\tlet p = 0;\n\tlet k;\n\n\t// Traverse the graph until we reach the end of the longer string.\n\tdo {\n\t\t// Updates furthest points and edit scripts for diagonals below delta.\n\t\tfor ( k = -p; k < delta; k++ ) {\n\t\t\tfp[ k ] = snake( k );\n\t\t}\n\n\t\t// Updates furthest points and edit scripts for diagonals above delta.\n\t\tfor ( k = delta + p; k > delta; k-- ) {\n\t\t\tfp[ k ] = snake( k );\n\t\t}\n\n\t\t// Updates furthest point and edit script for the delta diagonal.\n\t\t// note that the delta diagonal is the one which goes through the sink (m, n).\n\t\tfp[ delta ] = snake( delta );\n\n\t\tp++;\n\t} while ( fp[ delta ] !== n );\n\n\t// Return the final list of edit changes.\n\t// We remove the first item that represents the action for the injected nulls.\n\treturn es[ delta ].slice( 1 );\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/diff.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* globals Node */\n\n/**\n * @module utils/dom/getancestors\n */\n\n/**\n * Returns all ancestors of given DOM node, starting from the top-most (root). Includes the given node itself. If the\n * node is a part of `DocumentFragment` that `DocumentFragment` will be returned. In contrary, if the node is\n * appended to a `Document`, that `Document` will not be returned (algorithms operating on DOM tree care for `Document#documentElement`\n * at most, which will be returned).\n *\n * @param {Node} node DOM node.\n * @returns {Array.<Node|DocumentFragment>} Array of given `node` parents.\n */\nexport default function getAncestors( node ) {\n\tconst nodes = [];\n\n\t// We are interested in `Node`s `DocumentFragment`s only.\n\twhile ( node && node.nodeType != Node.DOCUMENT_NODE ) {\n\t\tnodes.unshift( node );\n\t\tnode = node.parentNode;\n\t}\n\n\treturn nodes;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/dom/getancestors.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/isrange\n */\n\n/**\n * Checks if the object is a native DOM Range.\n *\n * @param {*} obj\n * @returns {Boolean}\n */\nexport default function isRange( obj ) {\n\treturn Object.prototype.toString.apply( obj ) == '[object Range]';\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/dom/isrange.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/tounit\n */\n\n/**\n * Returns a helper function, which adds a desired trailing\n * `unit` to the passed value.\n *\n * @param {String} unit An unit like \"px\" or \"em\".\n * @returns {module:utils/dom/tounit~helper}\n */\nexport default function toUnit( unit ) {\n\t/**\n\t * A function, which adds a pre–defined trailing `unit`\n\t * to the passed `value`.\n\t *\n\t * @function helper\n \t * @param {*} value A value to be given the unit.\n \t * @returns {String} A value with the trailing unit.\n\t */\n\treturn value => value + unit;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/dom/tounit.js","import getNative from './_getNative';\nimport root from './_root';\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nexport default Map;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_Map.js","import getNative from './_getNative';\nimport root from './_root';\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nexport default Set;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_Set.js","import root from './_root';\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nexport default Uint8Array;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_Uint8Array.js","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  var length = args.length;\n  switch (length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nexport default apply;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_apply.js","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nexport default arrayReduce;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_arrayReduce.js","import Stack from './_Stack';\nimport arrayEach from './_arrayEach';\nimport assignValue from './_assignValue';\nimport baseAssign from './_baseAssign';\nimport cloneBuffer from './_cloneBuffer';\nimport copyArray from './_copyArray';\nimport copySymbols from './_copySymbols';\nimport getAllKeys from './_getAllKeys';\nimport getTag from './_getTag';\nimport initCloneArray from './_initCloneArray';\nimport initCloneByTag from './_initCloneByTag';\nimport initCloneObject from './_initCloneObject';\nimport isArray from './isArray';\nimport isBuffer from './isBuffer';\nimport isHostObject from './_isHostObject';\nimport isObject from './isObject';\nimport keys from './keys';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  // Recursively populate clone (susceptible to call stack limits).\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport default baseClone;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseClone.js","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {Function} predicate The function invoked per iteration.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromRight) {\n  var length = array.length,\n      index = fromRight ? length : -1;\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default baseFindIndex;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseFindIndex.js","import getPrototype from './_getPrototype';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n  // that are composed entirely of index properties, return `false` for\n  // `hasOwnProperty` checks of them.\n  return hasOwnProperty.call(object, key) ||\n    (typeof object == 'object' && key in object && getPrototype(object) === null);\n}\n\nexport default baseHas;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseHas.js","import castPath from './_castPath';\nimport isIndex from './_isIndex';\nimport isKey from './_isKey';\nimport last from './last';\nimport parent from './_parent';\nimport toKey from './_toKey';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * The base implementation of `_.pullAt` without support for individual\n * indexes or capturing the removed elements.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {number[]} indexes The indexes of elements to remove.\n * @returns {Array} Returns `array`.\n */\nfunction basePullAt(array, indexes) {\n  var length = array ? indexes.length : 0,\n      lastIndex = length - 1;\n\n  while (length--) {\n    var index = indexes[length];\n    if (length == lastIndex || index !== previous) {\n      var previous = index;\n      if (isIndex(index)) {\n        splice.call(array, index, 1);\n      }\n      else if (!isKey(index, array)) {\n        var path = castPath(index),\n            object = parent(array, path);\n\n        if (object != null) {\n          delete object[toKey(last(path))];\n        }\n      }\n      else {\n        delete array[toKey(index)];\n      }\n    }\n  }\n  return array;\n}\n\nexport default basePullAt;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_basePullAt.js","import eq from './eq';\n\n/**\n * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseSortedUniq(array, iteratee) {\n  var index = -1,\n      length = array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    if (!index || !eq(computed, seen)) {\n      var seen = computed;\n      result[resIndex++] = value === 0 ? 0 : value;\n    }\n  }\n  return result;\n}\n\nexport default baseSortedUniq;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseSortedUniq.js","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nexport default baseTimes;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseTimes.js","/**\n * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n *\n * @private\n * @param {Array} props The property identifiers.\n * @param {Array} values The property values.\n * @param {Function} assignFunc The function to assign values.\n * @returns {Object} Returns the new object.\n */\nfunction baseZipObject(props, values, assignFunc) {\n  var index = -1,\n      length = props.length,\n      valsLength = values.length,\n      result = {};\n\n  while (++index < length) {\n    var value = index < valsLength ? values[index] : undefined;\n    assignFunc(result, props[index], value);\n  }\n  return result;\n}\n\nexport default baseZipObject;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseZipObject.js","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nexport default copyArray;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_copyArray.js","import SetCache from './_SetCache';\nimport arraySome from './_arraySome';\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!seen.has(othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n              return seen.add(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, customizer, bitmask, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  return result;\n}\n\nexport default equalArrays;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_equalArrays.js","/** Built-in value references. */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nfunction getSymbols(object) {\n  // Coerce `object` to an object to avoid non-object errors in V8.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=3443 for more details.\n  return getOwnPropertySymbols(Object(object));\n}\n\n// Fallback for IE < 11.\nif (!getOwnPropertySymbols) {\n  getSymbols = function() {\n    return [];\n  };\n}\n\nexport default getSymbols;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_getSymbols.js","import baseTimes from './_baseTimes';\nimport isArguments from './isArguments';\nimport isArray from './isArray';\nimport isLength from './isLength';\nimport isString from './isString';\n\n/**\n * Creates an array of index keys for `object` values of arrays,\n * `arguments` objects, and strings, otherwise `null` is returned.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array|null} Returns index keys, else `null`.\n */\nfunction indexKeys(object) {\n  var length = object ? object.length : undefined;\n  if (isLength(length) &&\n      (isArray(object) || isString(object) || isArguments(object))) {\n    return baseTimes(length, String);\n  }\n  return null;\n}\n\nexport default indexKeys;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_indexKeys.js","/**\n * Gets the index at which the first occurrence of `NaN` is found in `array`.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n */\nfunction indexOfNaN(array, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 0 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    var other = array[index];\n    if (other !== other) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default indexOfNaN;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_indexOfNaN.js","import isObject from './isObject';\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nexport default isStrictComparable;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_isStrictComparable.js","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nexport default matchesStrictComparable;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_matchesStrictComparable.js","/** Used to resolve the decompiled source of functions. */\nvar funcToString = Function.prototype.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nexport default toSource;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_toSource.js","import baseSlice from './_baseSlice';\nimport isIterateeCall from './_isIterateeCall';\nimport toInteger from './toInteger';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * Creates an array of elements split into groups the length of `size`.\n * If `array` can't be split evenly, the final chunk will be the remaining\n * elements.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to process.\n * @param {number} [size=1] The length of each chunk\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the new array of chunks.\n * @example\n *\n * _.chunk(['a', 'b', 'c', 'd'], 2);\n * // => [['a', 'b'], ['c', 'd']]\n *\n * _.chunk(['a', 'b', 'c', 'd'], 3);\n * // => [['a', 'b', 'c'], ['d']]\n */\nfunction chunk(array, size, guard) {\n  if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n    size = 1;\n  } else {\n    size = nativeMax(toInteger(size), 0);\n  }\n  var length = array ? array.length : 0;\n  if (!length || size < 1) {\n    return [];\n  }\n  var index = 0,\n      resIndex = 0,\n      result = Array(nativeCeil(length / size));\n\n  while (index < length) {\n    result[resIndex++] = baseSlice(array, index, (index += size));\n  }\n  return result;\n}\n\nexport default chunk;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/chunk.js","/**\n * Creates an array with all falsey values removed. The values `false`, `null`,\n * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to compact.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.compact([0, 1, false, 2, '', 3]);\n * // => [1, 2, 3]\n */\nfunction compact(array) {\n  var index = -1,\n      length = array ? array.length : 0,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default compact;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/compact.js","import arrayPush from './_arrayPush';\nimport baseFlatten from './_baseFlatten';\nimport copyArray from './_copyArray';\nimport isArray from './isArray';\n\n/**\n * Creates a new array concatenating `array` with any additional arrays\n * and/or values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to concatenate.\n * @param {...*} [values] The values to concatenate.\n * @returns {Array} Returns the new concatenated array.\n * @example\n *\n * var array = [1];\n * var other = _.concat(array, 2, [3], [[4]]);\n *\n * console.log(other);\n * // => [1, 2, 3, [4]]\n *\n * console.log(array);\n * // => [1]\n */\nfunction concat() {\n  var length = arguments.length,\n      args = Array(length ? length - 1 : 0),\n      array = arguments[0],\n      index = length;\n\n  while (index--) {\n    args[index - 1] = arguments[index];\n  }\n  return length\n    ? arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1))\n    : [];\n}\n\nexport default concat;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/concat.js","import baseDifference from './_baseDifference';\nimport baseFlatten from './_baseFlatten';\nimport isArrayLikeObject from './isArrayLikeObject';\nimport rest from './rest';\n\n/**\n * Creates an array of unique `array` values not included in the other given\n * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons. The order of result values is determined by the\n * order they occur in the first array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([3, 2, 1], [4, 2]);\n * // => [3, 1]\n */\nvar difference = rest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nexport default difference;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/difference.js","import baseDifference from './_baseDifference';\nimport baseFlatten from './_baseFlatten';\nimport baseIteratee from './_baseIteratee';\nimport isArrayLikeObject from './isArrayLikeObject';\nimport last from './last';\nimport rest from './rest';\n\n/**\n * This method is like `_.difference` except that it accepts `iteratee` which\n * is invoked for each element of `array` and `values` to generate the criterion\n * by which they're compared. Result values are chosen from the first array.\n * The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @param {Array|Function|Object|string} [iteratee=_.identity]\n *  The iteratee invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.differenceBy([3.1, 2.2, 1.3], [4.4, 2.5], Math.floor);\n * // => [3.1, 1.3]\n *\n * // The `_.property` iteratee shorthand.\n * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n * // => [{ 'x': 2 }]\n */\nvar differenceBy = rest(function(array, values) {\n  var iteratee = last(values);\n  if (isArrayLikeObject(iteratee)) {\n    iteratee = undefined;\n  }\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), baseIteratee(iteratee))\n    : [];\n});\n\nexport default differenceBy;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/differenceBy.js","import baseDifference from './_baseDifference';\nimport baseFlatten from './_baseFlatten';\nimport isArrayLikeObject from './isArrayLikeObject';\nimport last from './last';\nimport rest from './rest';\n\n/**\n * This method is like `_.difference` except that it accepts `comparator`\n * which is invoked to compare elements of `array` to `values`. Result values\n * are chosen from the first array. The comparator is invoked with two arguments:\n * (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n *\n * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n * // => [{ 'x': 2, 'y': 1 }]\n */\nvar differenceWith = rest(function(array, values) {\n  var comparator = last(values);\n  if (isArrayLikeObject(comparator)) {\n    comparator = undefined;\n  }\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n    : [];\n});\n\nexport default differenceWith;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/differenceWith.js","import baseIteratee from './_baseIteratee';\nimport baseWhile from './_baseWhile';\n\n/**\n * Creates a slice of `array` excluding elements dropped from the end.\n * Elements are dropped until `predicate` returns falsey. The predicate is\n * invoked with three arguments: (value, index, array).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {Array|Function|Object|string} [predicate=_.identity]\n *  The function invoked per iteration.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': true },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': false }\n * ];\n *\n * _.dropRightWhile(users, function(o) { return !o.active; });\n * // => objects for ['barney']\n *\n * // The `_.matches` iteratee shorthand.\n * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n * // => objects for ['barney', 'fred']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.dropRightWhile(users, ['active', false]);\n * // => objects for ['barney']\n *\n * // The `_.property` iteratee shorthand.\n * _.dropRightWhile(users, 'active');\n * // => objects for ['barney', 'fred', 'pebbles']\n */\nfunction dropRightWhile(array, predicate) {\n  return (array && array.length)\n    ? baseWhile(array, baseIteratee(predicate, 3), true, true)\n    : [];\n}\n\nexport default dropRightWhile;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/dropRightWhile.js","import baseIteratee from './_baseIteratee';\nimport baseWhile from './_baseWhile';\n\n/**\n * Creates a slice of `array` excluding elements dropped from the beginning.\n * Elements are dropped until `predicate` returns falsey. The predicate is\n * invoked with three arguments: (value, index, array).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {Array|Function|Object|string} [predicate=_.identity]\n *  The function invoked per iteration.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.dropWhile(users, function(o) { return !o.active; });\n * // => objects for ['pebbles']\n *\n * // The `_.matches` iteratee shorthand.\n * _.dropWhile(users, { 'user': 'barney', 'active': false });\n * // => objects for ['fred', 'pebbles']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.dropWhile(users, ['active', false]);\n * // => objects for ['pebbles']\n *\n * // The `_.property` iteratee shorthand.\n * _.dropWhile(users, 'active');\n * // => objects for ['barney', 'fred', 'pebbles']\n */\nfunction dropWhile(array, predicate) {\n  return (array && array.length)\n    ? baseWhile(array, baseIteratee(predicate, 3), true)\n    : [];\n}\n\nexport default dropWhile;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/dropWhile.js","import baseFill from './_baseFill';\nimport isIterateeCall from './_isIterateeCall';\n\n/**\n * Fills elements of `array` with `value` from `start` up to, but not\n * including, `end`.\n *\n * **Note:** This method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 3.2.0\n * @category Array\n * @param {Array} array The array to fill.\n * @param {*} value The value to fill `array` with.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [1, 2, 3];\n *\n * _.fill(array, 'a');\n * console.log(array);\n * // => ['a', 'a', 'a']\n *\n * _.fill(Array(3), 2);\n * // => [2, 2, 2]\n *\n * _.fill([4, 6, 8, 10], '*', 1, 3);\n * // => [4, '*', '*', 10]\n */\nfunction fill(array, value, start, end) {\n  var length = array ? array.length : 0;\n  if (!length) {\n    return [];\n  }\n  if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n    start = 0;\n    end = length;\n  }\n  return baseFill(array, value, start, end);\n}\n\nexport default fill;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/fill.js","import baseFindIndex from './_baseFindIndex';\nimport baseIteratee from './_baseIteratee';\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to search.\n * @param {Array|Function|Object|string} [predicate=_.identity]\n *  The function invoked per iteration.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate) {\n  return (array && array.length)\n    ? baseFindIndex(array, baseIteratee(predicate, 3))\n    : -1;\n}\n\nexport default findIndex;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/findIndex.js","import baseFindIndex from './_baseFindIndex';\nimport baseIteratee from './_baseIteratee';\n\n/**\n * This method is like `_.findIndex` except that it iterates over elements\n * of `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to search.\n * @param {Array|Function|Object|string} [predicate=_.identity]\n *  The function invoked per iteration.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': true },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': false }\n * ];\n *\n * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n * // => 2\n *\n * // The `_.matches` iteratee shorthand.\n * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n * // => 0\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findLastIndex(users, ['active', false]);\n * // => 2\n *\n * // The `_.property` iteratee shorthand.\n * _.findLastIndex(users, 'active');\n * // => 0\n */\nfunction findLastIndex(array, predicate) {\n  return (array && array.length)\n    ? baseFindIndex(array, baseIteratee(predicate, 3), true)\n    : -1;\n}\n\nexport default findLastIndex;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/findLastIndex.js","export { default } from './head'\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/first.js","import baseFlatten from './_baseFlatten';\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array ? array.length : 0;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nexport default flatten;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/flatten.js","import baseFlatten from './_baseFlatten';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Recursively flattens `array`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flattenDeep([1, [2, [3, [4]], 5]]);\n * // => [1, 2, 3, 4, 5]\n */\nfunction flattenDeep(array) {\n  var length = array ? array.length : 0;\n  return length ? baseFlatten(array, INFINITY) : [];\n}\n\nexport default flattenDeep;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/flattenDeep.js","import baseFlatten from './_baseFlatten';\nimport toInteger from './toInteger';\n\n/**\n * Recursively flatten `array` up to `depth` times.\n *\n * @static\n * @memberOf _\n * @since 4.4.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @param {number} [depth=1] The maximum recursion depth.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * var array = [1, [2, [3, [4]], 5]];\n *\n * _.flattenDepth(array, 1);\n * // => [1, 2, [3, [4]], 5]\n *\n * _.flattenDepth(array, 2);\n * // => [1, 2, 3, [4], 5]\n */\nfunction flattenDepth(array, depth) {\n  var length = array ? array.length : 0;\n  if (!length) {\n    return [];\n  }\n  depth = depth === undefined ? 1 : toInteger(depth);\n  return baseFlatten(array, depth);\n}\n\nexport default flattenDepth;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/flattenDepth.js","/**\n * The inverse of `_.toPairs`; this method returns an object composed\n * from key-value `pairs`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} pairs The key-value pairs.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.fromPairs([['fred', 30], ['barney', 40]]);\n * // => { 'fred': 30, 'barney': 40 }\n */\nfunction fromPairs(pairs) {\n  var index = -1,\n      length = pairs ? pairs.length : 0,\n      result = {};\n\n  while (++index < length) {\n    var pair = pairs[index];\n    result[pair[0]] = pair[1];\n  }\n  return result;\n}\n\nexport default fromPairs;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/fromPairs.js","import baseGet from './_baseGet';\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is used in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nexport default get;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/get.js","/**\n * This method returns the first argument given to it.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nexport default identity;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/identity.js","import baseIndexOf from './_baseIndexOf';\nimport toInteger from './toInteger';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Gets the index at which the first occurrence of `value` is found in `array`\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons. If `fromIndex` is negative, it's used as the\n * offset from the end of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to search.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.indexOf([1, 2, 1, 2], 2);\n * // => 1\n *\n * // Search from the `fromIndex`.\n * _.indexOf([1, 2, 1, 2], 2, 2);\n * // => 3\n */\nfunction indexOf(array, value, fromIndex) {\n  var length = array ? array.length : 0;\n  if (!length) {\n    return -1;\n  }\n  fromIndex = toInteger(fromIndex);\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return baseIndexOf(array, value, fromIndex);\n}\n\nexport default indexOf;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/indexOf.js","import dropRight from './dropRight';\n\n/**\n * Gets all but the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.initial([1, 2, 3]);\n * // => [1, 2]\n */\nfunction initial(array) {\n  return dropRight(array, 1);\n}\n\nexport default initial;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/initial.js","import arrayMap from './_arrayMap';\nimport baseIntersection from './_baseIntersection';\nimport castArrayLikeObject from './_castArrayLikeObject';\nimport rest from './rest';\n\n/**\n * Creates an array of unique values that are included in all given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons. The order of result values is determined by the\n * order they occur in the first array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * _.intersection([2, 1], [4, 2], [1, 2]);\n * // => [2]\n */\nvar intersection = rest(function(arrays) {\n  var mapped = arrayMap(arrays, castArrayLikeObject);\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped)\n    : [];\n});\n\nexport default intersection;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/intersection.js","import arrayMap from './_arrayMap';\nimport baseIntersection from './_baseIntersection';\nimport baseIteratee from './_baseIteratee';\nimport castArrayLikeObject from './_castArrayLikeObject';\nimport last from './last';\nimport rest from './rest';\n\n/**\n * This method is like `_.intersection` except that it accepts `iteratee`\n * which is invoked for each element of each `arrays` to generate the criterion\n * by which they're compared. Result values are chosen from the first array.\n * The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Array|Function|Object|string} [iteratee=_.identity]\n *  The iteratee invoked per element.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * _.intersectionBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n * // => [2.1]\n *\n * // The `_.property` iteratee shorthand.\n * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }]\n */\nvar intersectionBy = rest(function(arrays) {\n  var iteratee = last(arrays),\n      mapped = arrayMap(arrays, castArrayLikeObject);\n\n  if (iteratee === last(mapped)) {\n    iteratee = undefined;\n  } else {\n    mapped.pop();\n  }\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped, baseIteratee(iteratee))\n    : [];\n});\n\nexport default intersectionBy;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/intersectionBy.js","import arrayMap from './_arrayMap';\nimport baseIntersection from './_baseIntersection';\nimport castArrayLikeObject from './_castArrayLikeObject';\nimport last from './last';\nimport rest from './rest';\n\n/**\n * This method is like `_.intersection` except that it accepts `comparator`\n * which is invoked to compare elements of `arrays`. Result values are chosen\n * from the first array. The comparator is invoked with two arguments:\n * (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.intersectionWith(objects, others, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }]\n */\nvar intersectionWith = rest(function(arrays) {\n  var comparator = last(arrays),\n      mapped = arrayMap(arrays, castArrayLikeObject);\n\n  if (comparator === last(mapped)) {\n    comparator = undefined;\n  } else {\n    mapped.pop();\n  }\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped, undefined, comparator)\n    : [];\n});\n\nexport default intersectionWith;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/intersectionWith.js","import isObjectLike from './isObjectLike';\nimport isPlainObject from './isPlainObject';\n\n/**\n * Checks if `value` is likely a DOM element.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a DOM element,\n *  else `false`.\n * @example\n *\n * _.isElement(document.body);\n * // => true\n *\n * _.isElement('<body>');\n * // => false\n */\nfunction isElement(value) {\n  return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n}\n\nexport default isElement;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/isElement.js","import isFunction from './isFunction';\nimport isHostObject from './_isHostObject';\nimport isObject from './isObject';\nimport toSource from './_toSource';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default isNative;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/isNative.js","/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeJoin = arrayProto.join;\n\n/**\n * Converts all elements in `array` into a string separated by `separator`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to convert.\n * @param {string} [separator=','] The element separator.\n * @returns {string} Returns the joined string.\n * @example\n *\n * _.join(['a', 'b', 'c'], '~');\n * // => 'a~b~c'\n */\nfunction join(array, separator) {\n  return array ? nativeJoin.call(array, separator) : '';\n}\n\nexport default join;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/join.js","import indexOfNaN from './_indexOfNaN';\nimport toInteger from './toInteger';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * This method is like `_.indexOf` except that it iterates over elements of\n * `array` from right to left.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to search.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=array.length-1] The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.lastIndexOf([1, 2, 1, 2], 2);\n * // => 3\n *\n * // Search from the `fromIndex`.\n * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n * // => 1\n */\nfunction lastIndexOf(array, value, fromIndex) {\n  var length = array ? array.length : 0;\n  if (!length) {\n    return -1;\n  }\n  var index = length;\n  if (fromIndex !== undefined) {\n    index = toInteger(fromIndex);\n    index = (\n      index < 0\n        ? nativeMax(length + index, 0)\n        : nativeMin(index, length - 1)\n    ) + 1;\n  }\n  if (value !== value) {\n    return indexOfNaN(array, index, true);\n  }\n  while (index--) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default lastIndexOf;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/lastIndexOf.js","import baseNth from './_baseNth';\nimport toInteger from './toInteger';\n\n/**\n * Gets the element at `n` index of `array`. If `n` is negative, the nth\n * element from the end is returned.\n *\n * @static\n * @memberOf _\n * @since 4.11.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=0] The index of the element to return.\n * @returns {*} Returns the nth element of `array`.\n * @example\n *\n * var array = ['a', 'b', 'c', 'd'];\n *\n * _.nth(array, 1);\n * // => 'b'\n *\n * _.nth(array, -2);\n * // => 'c';\n */\nfunction nth(array, n) {\n  return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n}\n\nexport default nth;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/nth.js","import pullAll from './pullAll';\nimport rest from './rest';\n\n/**\n * Removes all given values from `array` using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n * to remove elements from an array by predicate.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {...*} [values] The values to remove.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [1, 2, 3, 1, 2, 3];\n *\n * _.pull(array, 2, 3);\n * console.log(array);\n * // => [1, 1]\n */\nvar pull = rest(pullAll);\n\nexport default pull;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/pull.js","import baseIteratee from './_baseIteratee';\nimport basePullAll from './_basePullAll';\n\n/**\n * This method is like `_.pullAll` except that it accepts `iteratee` which is\n * invoked for each element of `array` and `values` to generate the criterion\n * by which they're compared. The iteratee is invoked with one argument: (value).\n *\n * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @param {Array|Function|Object|string} [iteratee=_.identity]\n *  The iteratee invoked per element.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n *\n * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n * console.log(array);\n * // => [{ 'x': 2 }]\n */\nfunction pullAllBy(array, values, iteratee) {\n  return (array && array.length && values && values.length)\n    ? basePullAll(array, values, baseIteratee(iteratee))\n    : array;\n}\n\nexport default pullAllBy;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/pullAllBy.js","import basePullAll from './_basePullAll';\n\n/**\n * This method is like `_.pullAll` except that it accepts `comparator` which\n * is invoked to compare elements of `array` to `values`. The comparator is\n * invoked with two arguments: (arrVal, othVal).\n *\n * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 4.6.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n *\n * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n * console.log(array);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n */\nfunction pullAllWith(array, values, comparator) {\n  return (array && array.length && values && values.length)\n    ? basePullAll(array, values, undefined, comparator)\n    : array;\n}\n\nexport default pullAllWith;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/pullAllWith.js","import arrayMap from './_arrayMap';\nimport baseAt from './_baseAt';\nimport baseFlatten from './_baseFlatten';\nimport basePullAt from './_basePullAt';\nimport compareAscending from './_compareAscending';\nimport isIndex from './_isIndex';\nimport rest from './rest';\n\n/**\n * Removes elements from `array` corresponding to `indexes` and returns an\n * array of removed elements.\n *\n * **Note:** Unlike `_.at`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n * @returns {Array} Returns the new array of removed elements.\n * @example\n *\n * var array = [5, 10, 15, 20];\n * var evens = _.pullAt(array, 1, 3);\n *\n * console.log(array);\n * // => [5, 15]\n *\n * console.log(evens);\n * // => [10, 20]\n */\nvar pullAt = rest(function(array, indexes) {\n  indexes = baseFlatten(indexes, 1);\n\n  var length = array ? array.length : 0,\n      result = baseAt(array, indexes);\n\n  basePullAt(array, arrayMap(indexes, function(index) {\n    return isIndex(index, length) ? +index : index;\n  }).sort(compareAscending));\n\n  return result;\n});\n\nexport default pullAt;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/pullAt.js","import baseIteratee from './_baseIteratee';\nimport basePullAt from './_basePullAt';\n\n/**\n * Removes all elements from `array` that `predicate` returns truthy for\n * and returns an array of the removed elements. The predicate is invoked\n * with three arguments: (value, index, array).\n *\n * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n * to pull elements from an array by value.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Array|Function|Object|string} [predicate=_.identity]\n *  The function invoked per iteration.\n * @returns {Array} Returns the new array of removed elements.\n * @example\n *\n * var array = [1, 2, 3, 4];\n * var evens = _.remove(array, function(n) {\n *   return n % 2 == 0;\n * });\n *\n * console.log(array);\n * // => [1, 3]\n *\n * console.log(evens);\n * // => [2, 4]\n */\nfunction remove(array, predicate) {\n  var result = [];\n  if (!(array && array.length)) {\n    return result;\n  }\n  var index = -1,\n      indexes = [],\n      length = array.length;\n\n  predicate = baseIteratee(predicate, 3);\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result.push(value);\n      indexes.push(index);\n    }\n  }\n  basePullAt(array, indexes);\n  return result;\n}\n\nexport default remove;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/remove.js","/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeReverse = arrayProto.reverse;\n\n/**\n * Reverses `array` so that the first element becomes the last, the second\n * element becomes the second to last, and so on.\n *\n * **Note:** This method mutates `array` and is based on\n * [`Array#reverse`](https://mdn.io/Array/reverse).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [1, 2, 3];\n *\n * _.reverse(array);\n * // => [3, 2, 1]\n *\n * console.log(array);\n * // => [3, 2, 1]\n */\nfunction reverse(array) {\n  return array ? nativeReverse.call(array) : array;\n}\n\nexport default reverse;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/reverse.js","import baseSlice from './_baseSlice';\nimport isIterateeCall from './_isIterateeCall';\nimport toInteger from './toInteger';\n\n/**\n * Creates a slice of `array` from `start` up to, but not including, `end`.\n *\n * **Note:** This method is used instead of\n * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n * returned.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction slice(array, start, end) {\n  var length = array ? array.length : 0;\n  if (!length) {\n    return [];\n  }\n  if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n    start = 0;\n    end = length;\n  }\n  else {\n    start = start == null ? 0 : toInteger(start);\n    end = end === undefined ? length : toInteger(end);\n  }\n  return baseSlice(array, start, end);\n}\n\nexport default slice;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/slice.js","import baseSortedIndex from './_baseSortedIndex';\n\n/**\n * Uses a binary search to determine the lowest index at which `value`\n * should be inserted into `array` in order to maintain its sort order.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n * @example\n *\n * _.sortedIndex([30, 50], 40);\n * // => 1\n *\n * _.sortedIndex([4, 5], 4);\n * // => 0\n */\nfunction sortedIndex(array, value) {\n  return baseSortedIndex(array, value);\n}\n\nexport default sortedIndex;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/sortedIndex.js","import baseIteratee from './_baseIteratee';\nimport baseSortedIndexBy from './_baseSortedIndexBy';\n\n/**\n * This method is like `_.sortedIndex` except that it accepts `iteratee`\n * which is invoked for `value` and each element of `array` to compute their\n * sort ranking. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @param {Array|Function|Object|string} [iteratee=_.identity]\n *  The iteratee invoked per element.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n * @example\n *\n * var dict = { 'thirty': 30, 'forty': 40, 'fifty': 50 };\n *\n * _.sortedIndexBy(['thirty', 'fifty'], 'forty', _.propertyOf(dict));\n * // => 1\n *\n * // The `_.property` iteratee shorthand.\n * _.sortedIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');\n * // => 0\n */\nfunction sortedIndexBy(array, value, iteratee) {\n  return baseSortedIndexBy(array, value, baseIteratee(iteratee));\n}\n\nexport default sortedIndexBy;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/sortedIndexBy.js","import baseSortedIndex from './_baseSortedIndex';\nimport eq from './eq';\n\n/**\n * This method is like `_.indexOf` except that it performs a binary\n * search on a sorted `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to search.\n * @param {*} value The value to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.sortedIndexOf([1, 1, 2, 2], 2);\n * // => 2\n */\nfunction sortedIndexOf(array, value) {\n  var length = array ? array.length : 0;\n  if (length) {\n    var index = baseSortedIndex(array, value);\n    if (index < length && eq(array[index], value)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default sortedIndexOf;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/sortedIndexOf.js","import baseSortedIndex from './_baseSortedIndex';\n\n/**\n * This method is like `_.sortedIndex` except that it returns the highest\n * index at which `value` should be inserted into `array` in order to\n * maintain its sort order.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n * @example\n *\n * _.sortedLastIndex([4, 5], 4);\n * // => 1\n */\nfunction sortedLastIndex(array, value) {\n  return baseSortedIndex(array, value, true);\n}\n\nexport default sortedLastIndex;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/sortedLastIndex.js","import baseIteratee from './_baseIteratee';\nimport baseSortedIndexBy from './_baseSortedIndexBy';\n\n/**\n * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n * which is invoked for `value` and each element of `array` to compute their\n * sort ranking. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @param {Array|Function|Object|string} [iteratee=_.identity]\n *  The iteratee invoked per element.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n * @example\n *\n * // The `_.property` iteratee shorthand.\n * _.sortedLastIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');\n * // => 1\n */\nfunction sortedLastIndexBy(array, value, iteratee) {\n  return baseSortedIndexBy(array, value, baseIteratee(iteratee), true);\n}\n\nexport default sortedLastIndexBy;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/sortedLastIndexBy.js","import baseSortedIndex from './_baseSortedIndex';\nimport eq from './eq';\n\n/**\n * This method is like `_.lastIndexOf` except that it performs a binary\n * search on a sorted `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to search.\n * @param {*} value The value to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.sortedLastIndexOf([1, 1, 2, 2], 2);\n * // => 3\n */\nfunction sortedLastIndexOf(array, value) {\n  var length = array ? array.length : 0;\n  if (length) {\n    var index = baseSortedIndex(array, value, true) - 1;\n    if (eq(array[index], value)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default sortedLastIndexOf;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/sortedLastIndexOf.js","import baseSortedUniq from './_baseSortedUniq';\n\n/**\n * This method is like `_.uniq` except that it's designed and optimized\n * for sorted arrays.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.sortedUniq([1, 1, 2]);\n * // => [1, 2]\n */\nfunction sortedUniq(array) {\n  return (array && array.length)\n    ? baseSortedUniq(array)\n    : [];\n}\n\nexport default sortedUniq;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/sortedUniq.js","import baseIteratee from './_baseIteratee';\nimport baseSortedUniq from './_baseSortedUniq';\n\n/**\n * This method is like `_.uniqBy` except that it's designed and optimized\n * for sorted arrays.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n * // => [1.1, 2.3]\n */\nfunction sortedUniqBy(array, iteratee) {\n  return (array && array.length)\n    ? baseSortedUniq(array, baseIteratee(iteratee))\n    : [];\n}\n\nexport default sortedUniqBy;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/sortedUniqBy.js","import drop from './drop';\n\n/**\n * Gets all but the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.tail([1, 2, 3]);\n * // => [2, 3]\n */\nfunction tail(array) {\n  return drop(array, 1);\n}\n\nexport default tail;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/tail.js","import baseSlice from './_baseSlice';\nimport toInteger from './toInteger';\n\n/**\n * Creates a slice of `array` with `n` elements taken from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to take.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.take([1, 2, 3]);\n * // => [1]\n *\n * _.take([1, 2, 3], 2);\n * // => [1, 2]\n *\n * _.take([1, 2, 3], 5);\n * // => [1, 2, 3]\n *\n * _.take([1, 2, 3], 0);\n * // => []\n */\nfunction take(array, n, guard) {\n  if (!(array && array.length)) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  return baseSlice(array, 0, n < 0 ? 0 : n);\n}\n\nexport default take;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/take.js","import baseSlice from './_baseSlice';\nimport toInteger from './toInteger';\n\n/**\n * Creates a slice of `array` with `n` elements taken from the end.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to take.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.takeRight([1, 2, 3]);\n * // => [3]\n *\n * _.takeRight([1, 2, 3], 2);\n * // => [2, 3]\n *\n * _.takeRight([1, 2, 3], 5);\n * // => [1, 2, 3]\n *\n * _.takeRight([1, 2, 3], 0);\n * // => []\n */\nfunction takeRight(array, n, guard) {\n  var length = array ? array.length : 0;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  n = length - n;\n  return baseSlice(array, n < 0 ? 0 : n, length);\n}\n\nexport default takeRight;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/takeRight.js","import baseIteratee from './_baseIteratee';\nimport baseWhile from './_baseWhile';\n\n/**\n * Creates a slice of `array` with elements taken from the end. Elements are\n * taken until `predicate` returns falsey. The predicate is invoked with\n * three arguments: (value, index, array).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {Array|Function|Object|string} [predicate=_.identity]\n *  The function invoked per iteration.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': true },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': false }\n * ];\n *\n * _.takeRightWhile(users, function(o) { return !o.active; });\n * // => objects for ['fred', 'pebbles']\n *\n * // The `_.matches` iteratee shorthand.\n * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n * // => objects for ['pebbles']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.takeRightWhile(users, ['active', false]);\n * // => objects for ['fred', 'pebbles']\n *\n * // The `_.property` iteratee shorthand.\n * _.takeRightWhile(users, 'active');\n * // => []\n */\nfunction takeRightWhile(array, predicate) {\n  return (array && array.length)\n    ? baseWhile(array, baseIteratee(predicate, 3), false, true)\n    : [];\n}\n\nexport default takeRightWhile;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/takeRightWhile.js","import baseIteratee from './_baseIteratee';\nimport baseWhile from './_baseWhile';\n\n/**\n * Creates a slice of `array` with elements taken from the beginning. Elements\n * are taken until `predicate` returns falsey. The predicate is invoked with\n * three arguments: (value, index, array).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {Array|Function|Object|string} [predicate=_.identity]\n *  The function invoked per iteration.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false},\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.takeWhile(users, function(o) { return !o.active; });\n * // => objects for ['barney', 'fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.takeWhile(users, { 'user': 'barney', 'active': false });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.takeWhile(users, ['active', false]);\n * // => objects for ['barney', 'fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.takeWhile(users, 'active');\n * // => []\n */\nfunction takeWhile(array, predicate) {\n  return (array && array.length)\n    ? baseWhile(array, baseIteratee(predicate, 3))\n    : [];\n}\n\nexport default takeWhile;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/takeWhile.js","import isFunction from './isFunction';\nimport isObject from './isObject';\nimport isSymbol from './isSymbol';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = isFunction(value.valueOf) ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/toNumber.js","import baseFlatten from './_baseFlatten';\nimport baseUniq from './_baseUniq';\nimport isArrayLikeObject from './isArrayLikeObject';\nimport rest from './rest';\n\n/**\n * Creates an array of unique values, in order, from all given arrays using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.union([2, 1], [4, 2], [1, 2]);\n * // => [2, 1, 4]\n */\nvar union = rest(function(arrays) {\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n});\n\nexport default union;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/union.js","import baseFlatten from './_baseFlatten';\nimport baseIteratee from './_baseIteratee';\nimport baseUniq from './_baseUniq';\nimport isArrayLikeObject from './isArrayLikeObject';\nimport last from './last';\nimport rest from './rest';\n\n/**\n * This method is like `_.union` except that it accepts `iteratee` which is\n * invoked for each element of each `arrays` to generate the criterion by\n * which uniqueness is computed. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Array|Function|Object|string} [iteratee=_.identity]\n *  The iteratee invoked per element.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.unionBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n * // => [2.1, 1.2, 4.3]\n *\n * // The `_.property` iteratee shorthand.\n * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nvar unionBy = rest(function(arrays) {\n  var iteratee = last(arrays);\n  if (isArrayLikeObject(iteratee)) {\n    iteratee = undefined;\n  }\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), baseIteratee(iteratee));\n});\n\nexport default unionBy;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/unionBy.js","import baseFlatten from './_baseFlatten';\nimport baseUniq from './_baseUniq';\nimport isArrayLikeObject from './isArrayLikeObject';\nimport last from './last';\nimport rest from './rest';\n\n/**\n * This method is like `_.union` except that it accepts `comparator` which\n * is invoked to compare elements of `arrays`. The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.unionWith(objects, others, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n */\nvar unionWith = rest(function(arrays) {\n  var comparator = last(arrays);\n  if (isArrayLikeObject(comparator)) {\n    comparator = undefined;\n  }\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n});\n\nexport default unionWith;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/unionWith.js","import baseUniq from './_baseUniq';\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each\n * element is kept.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length)\n    ? baseUniq(array)\n    : [];\n}\n\nexport default uniq;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/uniq.js","import baseIteratee from './_baseIteratee';\nimport baseUniq from './_baseUniq';\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Array|Function|Object|string} [iteratee=_.identity]\n *  The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length)\n    ? baseUniq(array, baseIteratee(iteratee))\n    : [];\n}\n\nexport default uniqBy;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/uniqBy.js","import baseUniq from './_baseUniq';\n\n/**\n * This method is like `_.uniq` except that it accepts `comparator` which\n * is invoked to compare elements of `array`. The comparator is invoked with\n * two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 },  { 'x': 1, 'y': 2 }];\n *\n * _.uniqWith(objects, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n */\nfunction uniqWith(array, comparator) {\n  return (array && array.length)\n    ? baseUniq(array, undefined, comparator)\n    : [];\n}\n\nexport default uniqWith;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/uniqWith.js","import baseDifference from './_baseDifference';\nimport isArrayLikeObject from './isArrayLikeObject';\nimport rest from './rest';\n\n/**\n * Creates an array excluding all given values using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...*} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.difference, _.xor\n * @example\n *\n * _.without([1, 2, 1, 3], 1, 2);\n * // => [3]\n */\nvar without = rest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, values)\n    : [];\n});\n\nexport default without;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/without.js","import arrayFilter from './_arrayFilter';\nimport baseXor from './_baseXor';\nimport isArrayLikeObject from './isArrayLikeObject';\nimport rest from './rest';\n\n/**\n * Creates an array of unique values that is the\n * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n * of the given arrays. The order of result values is determined by the order\n * they occur in the arrays.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.difference, _.without\n * @example\n *\n * _.xor([2, 1], [4, 2]);\n * // => [1, 4]\n */\nvar xor = rest(function(arrays) {\n  return baseXor(arrayFilter(arrays, isArrayLikeObject));\n});\n\nexport default xor;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/xor.js","import arrayFilter from './_arrayFilter';\nimport baseIteratee from './_baseIteratee';\nimport baseXor from './_baseXor';\nimport isArrayLikeObject from './isArrayLikeObject';\nimport last from './last';\nimport rest from './rest';\n\n/**\n * This method is like `_.xor` except that it accepts `iteratee` which is\n * invoked for each element of each `arrays` to generate the criterion by\n * which by which they're compared. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Array|Function|Object|string} [iteratee=_.identity]\n *  The iteratee invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.xorBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n * // => [1.2, 4.3]\n *\n * // The `_.property` iteratee shorthand.\n * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 2 }]\n */\nvar xorBy = rest(function(arrays) {\n  var iteratee = last(arrays);\n  if (isArrayLikeObject(iteratee)) {\n    iteratee = undefined;\n  }\n  return baseXor(arrayFilter(arrays, isArrayLikeObject), baseIteratee(iteratee));\n});\n\nexport default xorBy;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/xorBy.js","import arrayFilter from './_arrayFilter';\nimport baseXor from './_baseXor';\nimport isArrayLikeObject from './isArrayLikeObject';\nimport last from './last';\nimport rest from './rest';\n\n/**\n * This method is like `_.xor` except that it accepts `comparator` which is\n * invoked to compare elements of `arrays`. The comparator is invoked with\n * two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.xorWith(objects, others, _.isEqual);\n * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n */\nvar xorWith = rest(function(arrays) {\n  var comparator = last(arrays);\n  if (isArrayLikeObject(comparator)) {\n    comparator = undefined;\n  }\n  return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n});\n\nexport default xorWith;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/xorWith.js","import rest from './rest';\nimport unzip from './unzip';\n\n/**\n * Creates an array of grouped elements, the first of which contains the\n * first elements of the given arrays, the second of which contains the\n * second elements of the given arrays, and so on.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to process.\n * @returns {Array} Returns the new array of grouped elements.\n * @example\n *\n * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n * // => [['fred', 30, true], ['barney', 40, false]]\n */\nvar zip = rest(unzip);\n\nexport default zip;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/zip.js","import assignValue from './_assignValue';\nimport baseZipObject from './_baseZipObject';\n\n/**\n * This method is like `_.fromPairs` except that it accepts two arrays,\n * one of property identifiers and one of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 0.4.0\n * @category Array\n * @param {Array} [props=[]] The property identifiers.\n * @param {Array} [values=[]] The property values.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.zipObject(['a', 'b'], [1, 2]);\n * // => { 'a': 1, 'b': 2 }\n */\nfunction zipObject(props, values) {\n  return baseZipObject(props || [], values || [], assignValue);\n}\n\nexport default zipObject;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/zipObject.js","import baseSet from './_baseSet';\nimport baseZipObject from './_baseZipObject';\n\n/**\n * This method is like `_.zipObject` except that it supports property paths.\n *\n * @static\n * @memberOf _\n * @since 4.1.0\n * @category Array\n * @param {Array} [props=[]] The property identifiers.\n * @param {Array} [values=[]] The property values.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n */\nfunction zipObjectDeep(props, values) {\n  return baseZipObject(props || [], values || [], baseSet);\n}\n\nexport default zipObjectDeep;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/zipObjectDeep.js","import rest from './rest';\nimport unzipWith from './unzipWith';\n\n/**\n * This method is like `_.zip` except that it accepts `iteratee` to specify\n * how grouped values should be combined. The iteratee is invoked with the\n * elements of each group: (...group).\n *\n * @static\n * @memberOf _\n * @since 3.8.0\n * @category Array\n * @param {...Array} [arrays] The arrays to process.\n * @param {Function} [iteratee=_.identity] The function to combine grouped values.\n * @returns {Array} Returns the new array of grouped elements.\n * @example\n *\n * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n *   return a + b + c;\n * });\n * // => [111, 222]\n */\nvar zipWith = rest(function(arrays) {\n  var length = arrays.length,\n      iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n  iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n  return unzipWith(arrays, iteratee);\n});\n\nexport default zipWith;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/zipWith.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/objecttomap\n */\n\n/**\n * Transforms object to map.\n *\n *\t\tconst map = objectToMap( { 'foo': 1, 'bar': 2 } );\n *\t\tmap.get( 'foo' ); // 1\n *\n * @param {Object} obj Object to transform.\n * @returns {Map} Map created from object.\n */\nexport default function objectToMap( obj ) {\n\tconst map = new Map();\n\n\tfor ( const key in obj ) {\n\t\tmap.set( key, obj[ key ] );\n\t}\n\n\treturn map;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/objecttomap.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * Set of utils to handle unicode characters.\n *\n * @module utils/unicode\n */\n\n/**\n * Checks whether given `character` is a combining mark.\n *\n * @param {String} character Character to check.\n * @returns {Boolean}\n */\nexport function isCombiningMark( character ) {\n\treturn !!character && character.length == 1 && /[\\u0300-\\u036f\\u1ab0-\\u1aff\\u1dc0-\\u1dff\\u20d0-\\u20ff\\ufe20-\\ufe2f]/.test( character );\n}\n\n/**\n * Checks whether given `character` is a high half of surrogate pair.\n *\n * Using UTF-16 terminology, a surrogate pair denotes UTF-16 character using two UTF-8 characters. The surrogate pair\n * consist of high surrogate pair character followed by low surrogate pair character.\n *\n * @param {String} character Character to check.\n * @returns {Boolean}\n */\nexport function isHighSurrogateHalf( character ) {\n\treturn !!character && character.length == 1 && /[\\ud800-\\udbff]/.test( character );\n}\n\n/**\n * Checks whether given `character` is a low half of surrogate pair.\n *\n * Using UTF-16 terminology, a surrogate pair denotes UTF-16 character using two UTF-8 characters. The surrogate pair\n * consist of high surrogate pair character followed by low surrogate pair character.\n *\n * @param {String} character Character to check.\n * @returns {Boolean}\n */\nexport function isLowSurrogateHalf( character ) {\n\treturn !!character && character.length == 1 && /[\\udc00-\\udfff]/.test( character );\n}\n\n/**\n * Checks whether given offset in a string is inside a surrogate pair (between two surrogate halves).\n *\n * @param {String} string String to check.\n * @param {Number} offset Offset to check.\n * @returns {Boolean}\n */\nexport function isInsideSurrogatePair( string, offset ) {\n\treturn isHighSurrogateHalf( string.charAt( offset - 1 ) ) && isLowSurrogateHalf( string.charAt( offset ) );\n}\n\n/**\n * Checks whether given offset in a string is between base character and combining mark or between two combining marks.\n *\n * @param {String} string String to check.\n * @param {Number} offset Offset to check.\n * @returns {Boolean}\n */\nexport function isInsideCombinedSymbol( string, offset ) {\n\treturn isCombiningMark( string.charAt( offset ) );\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/unicode.js","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    if (typeof global.process === \"object\" && global.process.domain) {\n      invoke = global.process.domain.bind(invoke);\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // Among the various tricks for obtaining a reference to the global\n  // object, this seems to be the most reliable technique that does not\n  // use indirect eval (which violates Content Security Policy).\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this\n);\n\n\n\n// WEBPACK FOOTER //\n// /Users/pomek/Projects/ckeditor/ckeditor5/~/regenerator-runtime/runtime.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\nimport ClassicEditorBase from '@ckeditor/ckeditor5-editor-classic/src/classic';\nimport EssentialsPlugin from '@ckeditor/ckeditor5-presets/src/essentials';\nimport AutoformatPlugin from '@ckeditor/ckeditor5-autoformat/src/autoformat';\nimport BoldPlugin from '@ckeditor/ckeditor5-basic-styles/src/bold';\nimport ItalicPlugin from '@ckeditor/ckeditor5-basic-styles/src/italic';\nimport BlockquotePlugin from '@ckeditor/ckeditor5-block-quote/src/blockquote';\nimport HeadingPlugin from '@ckeditor/ckeditor5-heading/src/heading';\nimport ImagePlugin from '@ckeditor/ckeditor5-image/src/image';\nimport ImagecaptionPlugin from '@ckeditor/ckeditor5-image/src/imagecaption';\nimport ImagestylePlugin from '@ckeditor/ckeditor5-image/src/imagestyle';\nimport ImagetoolbarPlugin from '@ckeditor/ckeditor5-image/src/imagetoolbar';\nimport LinkPlugin from '@ckeditor/ckeditor5-link/src/link';\nimport ListPlugin from '@ckeditor/ckeditor5-list/src/list';\nimport ParagraphPlugin from '@ckeditor/ckeditor5-paragraph/src/paragraph';\n\nexport class ClassicEditor extends ClassicEditorBase {}\n\nClassicEditor.build = {\n\tplugins: [\n\t\tEssentialsPlugin,\n\t\tAutoformatPlugin,\n\t\tBoldPlugin,\n\t\tItalicPlugin,\n\t\tBlockquotePlugin,\n\t\tHeadingPlugin,\n\t\tImagePlugin,\n\t\tImagecaptionPlugin,\n\t\tImagestylePlugin,\n\t\tImagetoolbarPlugin,\n\t\tLinkPlugin,\n\t\tListPlugin,\n\t\tParagraphPlugin\n\t],\n\tconfig: {\n\t\ttoolbar: [\n\t\t\t'headings',\n\t\t\t'bold',\n\t\t\t'italic',\n\t\t\t'link',\n\t\t\t'unlink',\n\t\t\t'bulletedList',\n\t\t\t'numberedList',\n\t\t\t'blockQuote',\n\t\t\t'undo',\n\t\t\t'redo'\n\t\t],\n\t\timage: {\n\t\t\ttoolbar: [\n\t\t\t\t'imageStyleFull',\n\t\t\t\t'imageStyleSide',\n\t\t\t\t'|',\n\t\t\t\t'imageTextAlternative'\n\t\t\t]\n\t\t}\n\t}\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ckeditor.js","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/pomek/Projects/ckeditor/ckeditor5/~/style-loader/fixUrls.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module autoformat/autoformat\n */\n\nimport BlockAutoformatEngine from './blockautoformatengine';\nimport InlineAutoformatEngine from './inlineautoformatengine';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\n/**\n * Includes a set of predefined autoformatting actions.\n *\n * ## Bulleted list\n *\n * You can create a bulleted list by staring a line with:\n *\n * * `* `\n * * `- `\n *\n * ## Numbered list\n *\n * You can create a numbered list by staring a line with:\n *\n * * `1. `\n * * `1) `\n *\n * ## Headings\n *\n * You can create a heading by starting a line with:\n *\n * `# ` – will create Heading 1,\n * `## ` – will create Heading 2,\n * `### ` – will create Heading 3.\n *\n * ## Bold and italic\n *\n * You can apply bold or italic to a text by typing Markdown formatting:\n *\n * * `**foo bar**` or `__foo bar__` – will bold the text,\n * * `*foo bar*` or `_foo bar_` – will italicize the text,\n *\n * NOTE: Remember to add proper features to the editor configuration. Autoformatting will be enabled only for those\n * commands that are included in the actual configuration. For example: `bold` autoformatting will not work if there is no\n * `bold` command registered in the editor.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Autoformat extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'autoformat/autoformat';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tafterInit() {\n\t\tthis._addListAutoformats();\n\t\tthis._addBasicStylesAutoformats();\n\t\tthis._addHeadingAutoformats();\n\t\tthis._addBlockQuoteAutoformats();\n\t}\n\n\t/**\n\t * Adds autoformatting related to the {@link module:list/list~List}.\n\t *\n\t * When typed:\n\t * - `* ` or `- ` - a paragraph will be changed to a bulleted list,\n\t * - `1. ` or `1) ` - a paragraph will be changed to a numbered list (\"1\" can be any digit or list of digits).\n\t *\n\t * @private\n\t */\n\t_addListAutoformats() {\n\t\tconst commands = this.editor.commands;\n\n\t\tif ( commands.has( 'bulletedList' ) ) {\n\t\t\t// eslint-disable-next-line no-new\n\t\t\tnew BlockAutoformatEngine( this.editor, /^[*-]\\s$/, 'bulletedList' );\n\t\t}\n\n\t\tif ( commands.has( 'numberedList' ) ) {\n\t\t\t// eslint-disable-next-line no-new\n\t\t\tnew BlockAutoformatEngine( this.editor, /^\\d+[.|)]?\\s$/, 'numberedList' );\n\t\t}\n\t}\n\n\t/**\n\t * Adds autoformatting related to the {@link module:basic-styles/bold~Bold} and\n\t * {@link module:basic-styles/italic~Italic}.\n\t *\n\t * When typed:\n\t * - `**foobar**`: `**` characters are removed, and `foobar` is set to bold,\n\t * - `__foobar__`: `__` characters are removed, and `foobar` is set to bold,\n\t * - `*foobar*`: `*` characters are removed, and `foobar` is set to italic,\n\t * - `_foobar_`: `_` characters are removed, and `foobar` is set to italic.\n\t *\n\t * @private\n\t */\n\t_addBasicStylesAutoformats() {\n\t\tconst commands = this.editor.commands;\n\n\t\tif ( commands.has( 'bold' ) ) {\n\t\t\t/* eslint-disable no-new */\n\t\t\tnew InlineAutoformatEngine( this.editor, /(\\*\\*)([^*]+)(\\*\\*)$/g, 'bold' );\n\t\t\tnew InlineAutoformatEngine( this.editor, /(__)([^_]+)(__)$/g, 'bold' );\n\t\t\t/* eslint-enable no-new */\n\t\t}\n\n\t\tif ( commands.has( 'italic' ) ) {\n\t\t\t// The italic autoformatter cannot be triggered by the bold markers, so we need to check the\n\t\t\t// text before the pattern (e.g. `(?:^|[^\\*])`).\n\n\t\t\t/* eslint-disable no-new */\n\t\t\tnew InlineAutoformatEngine( this.editor, /(?:^|[^*])(\\*)([^*_]+)(\\*)$/g, 'italic' );\n\t\t\tnew InlineAutoformatEngine( this.editor, /(?:^|[^_])(_)([^_]+)(_)$/g, 'italic' );\n\t\t\t/* eslint-enable no-new */\n\t\t}\n\t}\n\n\t/**\n\t * Adds autoformatting related to {@link module:heading/heading~Heading}.\n\t *\n\t * It is using a number at the end of the command name to associate it with the proper trigger:\n\t * * `heading1` will be executed when typing `#`,\n\t * * `heading2` will be executed when typing `##`,\n\t * * `heading3` will be executed when typing `###`.\n\t *\n\t * @private\n\t */\n\t_addHeadingAutoformats() {\n\t\tconst commands = this.editor.commands;\n\t\tconst options = this.editor.config.get( 'heading.options' );\n\n\t\tif ( options ) {\n\t\t\tfor ( const option of options ) {\n\t\t\t\tconst commandName = option.modelElement;\n\t\t\t\tlet match;\n\n\t\t\t\tif ( commands.has( commandName ) && ( match = commandName.match( /\\d+$/ ) ) ) {\n\t\t\t\t\tconst level = match[ 0 ];\n\t\t\t\t\tconst regExp = new RegExp( `^(#{${ level }})\\\\s$` );\n\n\t\t\t\t\t// eslint-disable-next-line no-new\n\t\t\t\t\tnew BlockAutoformatEngine( this.editor, regExp, context => {\n\t\t\t\t\t\tconst { batch } = context;\n\n\t\t\t\t\t\tthis.editor.execute( commandName, { batch } );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Adds autoformatting related to {@link module:block-quote/blockquote~BlockQuote}.\n\t * When typed:\n\t * * `> ` - a paragraph will be changed to a block quote.\n\t *\n\t * @private\n\t */\n\t_addBlockQuoteAutoformats() {\n\t\tif ( this.editor.commands.has( 'blockQuote' ) ) {\n\t\t\t// eslint-disable-next-line no-new\n\t\t\tnew BlockAutoformatEngine( this.editor, /^>\\s$/, 'blockQuote' );\n\t\t}\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-autoformat/src/autoformat.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module autoformat/blockautoformatengine\n */\n\nimport Range from '@ckeditor/ckeditor5-engine/src/model/range';\nimport TextProxy from '@ckeditor/ckeditor5-engine/src/model/textproxy';\n\n/**\n * The block autoformatting engine. Allows to format various block patterns. For example,\n * it can be configured to make a paragraph starting with \"* \" a list item.\n *\n * The autoformatting operation is integrated with the undo manager,\n * so the autoformatting step can be undone, if the user's intention wasn't to format the text.\n *\n * See the constructors documentation to learn how to create custom inline autoformatters. You can also use\n * the {@link module:autoformat/autoformat~Autoformat} feature which enables a set of default autoformatters\n * (lists, headings, bold and italic).\n */\nexport default class BlockAutoformatEngine {\n\t/**\n\t * Creates listener triggered on `change` event in document.\n\t * Calls callback when inserted text matches regular expression or command name\n\t * if provided instead of callback.\n\t *\n\t * Examples of usage:\n\t *\n\t * To convert paragraph to heading1 when `- ` is typed, using just commmand name:\n\t *\n\t *\t\tnew BlockAutoformatEngine( editor, /^\\- $/, 'heading1' );\n\t *\n\t * To convert paragraph to heading1 when `- ` is typed, using just callback:\n\t *\n\t *\t\tnew BlockAutoformatEngine( editor, /^\\- $/, ( context ) => {\n\t *\t\t\tconst { batch, match } = context;\n\t *\t\t\tconst headingLevel = match[ 1 ].length;\n\t *\n\t *\t\t\teditor.execute( 'heading', {\n\t *\t\t\t\tbatch,\n\t *\t\t\t\tformatId: `heading${ headingLevel }`\n\t *\t\t\t} );\n\t * \t\t} );\n\t *\n\t * @param {module:core/editor/editor~Editor} editor Editor instance.\n\t * @param {RegExp} pattern Regular expression to exec on just inserted text.\n\t * @param {Function|String} callbackOrCommand Callback to execute or command to run when text is matched.\n\t * In case of providing callback it receives following parameters:\n\t * * {module:engine/model/batch~Batch} batch Newly created batch for autoformat changes.\n\t * * {Object} match RegExp.exec() result of matching pattern to inserted text.\n\t */\n\tconstructor( editor, pattern, callbackOrCommand ) {\n\t\tlet callback;\n\n\t\tif ( typeof callbackOrCommand == 'function' ) {\n\t\t\tcallback = callbackOrCommand;\n\t\t} else {\n\t\t\t// We assume that the actual command name was provided.\n\t\t\tconst command = callbackOrCommand;\n\n\t\t\tcallback = context => {\n\t\t\t\tconst { batch } = context;\n\n\t\t\t\t// Create new batch for removal and command execution.\n\t\t\t\teditor.execute( command, { batch } );\n\t\t\t};\n\t\t}\n\n\t\teditor.document.on( 'change', ( event, type, changes ) => {\n\t\t\tif ( type != 'insert' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Take the first element. Typing shouldn't add more than one element at once.\n\t\t\t// And if it is not typing (e.g. paste), Autoformat should not be fired.\n\t\t\tconst value = changes.range.getItems().next().value;\n\n\t\t\tif ( !( value instanceof TextProxy ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst textNode = value.textNode;\n\t\t\tconst text = textNode.data;\n\n\t\t\t// Run matching only on non-empty paragraphs.\n\t\t\tif ( textNode.parent.name !== 'paragraph' || !text ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst match = pattern.exec( text );\n\n\t\t\tif ( !match ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\teditor.document.enqueueChanges( () => {\n\t\t\t\t// Create new batch to separate typing batch from the Autoformat changes.\n\t\t\t\tconst batch = editor.document.batch();\n\n\t\t\t\t// Matched range.\n\t\t\t\tconst range = Range.createFromParentsAndOffsets( textNode.parent, 0, textNode.parent, match[ 0 ].length );\n\n\t\t\t\t// Remove matched text.\n\t\t\t\tbatch.remove( range );\n\n\t\t\t\tcallback( { batch, match } );\n\t\t\t} );\n\t\t} );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-autoformat/src/blockautoformatengine.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module autoformat/inlineautoformatengine\n */\n\nimport LiveRange from '@ckeditor/ckeditor5-engine/src/model/liverange';\nimport getSchemaValidRanges from '@ckeditor/ckeditor5-core/src/command/helpers/getschemavalidranges';\n\n/**\n * The inline autoformatting engine. Allows to format various inline patterns. For example,\n * it can be configured to make \"foo\" bold when typed `**foo**` (the `**` markers will be removed).\n *\n * The autoformatting operation is integrated with the undo manager,\n * so the autoformatting step can be undone, if the user's intention wasn't to format the text.\n *\n * See the constructors documentation to learn how to create custom inline autoformatters. You can also use\n * the {@link module:autoformat/autoformat~Autoformat} feature which enables a set of default autoformatters\n * (lists, headings, bold and italic).\n */\nexport default class InlineAutoformatEngine {\n\t/**\n\t * Enables autoformatting mechanism on a given {@link module:core/editor/editor~Editor}.\n\t *\n\t * It formats the matched text by applying given model attribute or by running the provided formatting callback.\n\t * Each time data model changes text from given node (from the beginning of the current node to the collapsed\n\t * selection location) will be tested.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor Editor instance.\n\t * @param {Function|RegExp} testRegexpOrCallback RegExp or callback to execute on text.\n\t * Provided RegExp *must* have three capture groups. First and third capture groups\n\t * should match opening/closing delimiters. Second capture group should match text to format.\n\t *\n\t *\t\t// Matches `**bold text**` pattern.\n\t *\t\t// There are three capturing groups:\n\t *\t\t// - first to match starting `**` delimiter,\n\t *\t\t// - second to match text to format,\n\t *\t\t// - third to match ending `**` delimiter.\n\t *\t\tnew InlineAutoformatEngine( this.editor, /(\\*\\*)([^\\*]+?)(\\*\\*)$/g, 'bold' );\n\t *\n\t * When function is provided instead of RegExp, it will be executed with text to match as a parameter. Function\n\t * should return proper \"ranges\" to delete and format.\n\t *\n\t *\t\t{\n\t *\t\t\tremove: [\n\t *\t\t\t\t[ 0, 1 ],\t// Remove first letter from the given text.\n\t *\t\t\t\t[ 5, 6 ]\t// Remove 6th letter from the given text.\n\t *\t\t\t],\n\t *\t\t\tformat: [\n\t *\t\t\t\t[ 1, 5 ]\t// Format all letters from 2nd to 5th.\n\t *\t\t\t]\n\t *\t\t}\n\t *\n\t * @param {Function|String} attributeOrCallback Name of attribute to apply on matching text or callback for manual\n\t * formatting.\n\t *\n\t *\t\t// Use attribute name:\n\t *\t\tnew InlineAutoformatEngine( this.editor, /(\\*\\*)([^\\*]+?)(\\*\\*)$/g, 'bold' );\n\t *\n\t *\t\t// Use formatting callback:\n\t *\t\tnew InlineAutoformatEngine( this.editor, /(\\*\\*)([^\\*]+?)(\\*\\*)$/g, ( batch, validRanges ) => {\n\t *\t\t\tfor ( let range of validRanges ) {\n\t *\t\t\t\tbatch.setAttribute( range, command, true );\n\t *\t\t\t}\n\t *\t\t} );\n\t */\n\tconstructor( editor, testRegexpOrCallback, attributeOrCallback ) {\n\t\tthis.editor = editor;\n\n\t\tlet regExp;\n\t\tlet command;\n\t\tlet testCallback;\n\t\tlet formatCallback;\n\n\t\tif ( testRegexpOrCallback instanceof RegExp ) {\n\t\t\tregExp = testRegexpOrCallback;\n\t\t} else {\n\t\t\ttestCallback = testRegexpOrCallback;\n\t\t}\n\n\t\tif ( typeof attributeOrCallback == 'string' ) {\n\t\t\tcommand = attributeOrCallback;\n\t\t} else {\n\t\t\tformatCallback = attributeOrCallback;\n\t\t}\n\n\t\t// A test callback run on changed text.\n\t\ttestCallback = testCallback || ( text => {\n\t\t\tlet result;\n\t\t\tconst remove = [];\n\t\t\tconst format = [];\n\n\t\t\twhile ( ( result = regExp.exec( text ) ) !== null ) {\n\t\t\t\t// There should be full match and 3 capture groups.\n\t\t\t\tif ( result && result.length < 4 ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlet {\n\t\t\t\t\tindex,\n\t\t\t\t\t'1': leftDel,\n\t\t\t\t\t'2': content,\n\t\t\t\t\t'3': rightDel\n\t\t\t\t} = result;\n\n\t\t\t\t// Real matched string - there might be some non-capturing groups so we need to recalculate starting index.\n\t\t\t\tconst found = leftDel + content + rightDel;\n\t\t\t\tindex += result[ 0 ].length - found.length;\n\n\t\t\t\t// Start and End offsets of delimiters to remove.\n\t\t\t\tconst delStart = [\n\t\t\t\t\tindex,\n\t\t\t\t\tindex + leftDel.length\n\t\t\t\t];\n\t\t\t\tconst delEnd = [\n\t\t\t\t\tindex + leftDel.length + content.length,\n\t\t\t\t\tindex + leftDel.length + content.length + rightDel.length\n\t\t\t\t];\n\n\t\t\t\tremove.push( delStart );\n\t\t\t\tremove.push( delEnd );\n\n\t\t\t\tformat.push( [ index + leftDel.length, index + leftDel.length + content.length ] );\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tremove,\n\t\t\t\tformat\n\t\t\t};\n\t\t} );\n\n\t\t// A format callback run on matched text.\n\t\tformatCallback = formatCallback || ( ( batch, validRanges ) => {\n\t\t\tfor ( const range of validRanges ) {\n\t\t\t\tbatch.setAttribute( range, command, true );\n\t\t\t}\n\t\t} );\n\n\t\teditor.document.on( 'change', ( evt, type ) => {\n\t\t\tif ( type !== 'insert' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selection = this.editor.document.selection;\n\n\t\t\tif ( !selection.isCollapsed || !selection.focus || !selection.focus.parent ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst block = selection.focus.parent;\n\t\t\tconst text = getText( block ).slice( 0, selection.focus.offset );\n\t\t\tconst ranges = testCallback( text );\n\t\t\tconst rangesToFormat = [];\n\n\t\t\t// Apply format before deleting text.\n\t\t\tranges.format.forEach( range => {\n\t\t\t\tif ( range[ 0 ] === undefined || range[ 1 ] === undefined ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\trangesToFormat.push( LiveRange.createFromParentsAndOffsets(\n\t\t\t\t\tblock, range[ 0 ],\n\t\t\t\t\tblock, range[ 1 ]\n\t\t\t\t) );\n\t\t\t} );\n\n\t\t\tconst rangesToRemove = [];\n\n\t\t\t// Reverse order to not mix the offsets while removing.\n\t\t\tranges.remove.slice().reverse().forEach( range => {\n\t\t\t\tif ( range[ 0 ] === undefined || range[ 1 ] === undefined ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\trangesToRemove.push( LiveRange.createFromParentsAndOffsets(\n\t\t\t\t\tblock, range[ 0 ],\n\t\t\t\t\tblock, range[ 1 ]\n\t\t\t\t) );\n\t\t\t} );\n\n\t\t\tif ( !( rangesToFormat.length && rangesToRemove.length ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst batch = editor.document.batch();\n\n\t\t\teditor.document.enqueueChanges( () => {\n\t\t\t\tconst validRanges = getSchemaValidRanges( command, rangesToFormat, editor.document.schema );\n\n\t\t\t\t// Apply format.\n\t\t\t\tformatCallback( batch, validRanges );\n\n\t\t\t\t// Remove delimiters.\n\t\t\t\tfor ( const range of rangesToRemove ) {\n\t\t\t\t\tbatch.remove( range );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n}\n\n// Returns whole text from parent element by adding all data from text nodes together.\n//\n// @private\n// @param {module:engine/model/element~Element} element\n// @returns {String}\nfunction getText( element ) {\n\treturn Array.from( element.getChildren() ).reduce( ( a, b ) => a + b.data, '' );\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-autoformat/src/inlineautoformatengine.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module basic-styles/bold\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport BoldEngine from './boldengine';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport boldIcon from '../theme/icons/bold.svg';\n\n/**\n * The bold feature. It introduces the Bold button and the <kbd>Ctrl+B</kbd> keystroke.\n *\n * It uses the {@link module:basic-styles/boldengine~BoldEngine bold engine feature}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Bold extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ BoldEngine ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'basic-styles/bold';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\t\tconst command = editor.commands.get( 'bold' );\n\t\tconst keystroke = 'CTRL+B';\n\n\t\t// Add bold button to feature components.\n\t\teditor.ui.componentFactory.add( 'bold', locale => {\n\t\t\tconst view = new ButtonView( locale );\n\n\t\t\tview.set( {\n\t\t\t\tlabel: t( 'Bold' ),\n\t\t\t\ticon: boldIcon,\n\t\t\t\tkeystroke,\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\tview.bind( 'isOn', 'isEnabled' ).to( command, 'value', 'isEnabled' );\n\n\t\t\t// Execute command.\n\t\t\tthis.listenTo( view, 'execute', () => editor.execute( 'bold' ) );\n\n\t\t\treturn view;\n\t\t} );\n\n\t\t// Set the Ctrl+B keystroke.\n\t\teditor.keystrokes.set( keystroke, 'bold' );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-basic-styles/src/bold.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module basic-styles/boldengine\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport buildModelConverter from '@ckeditor/ckeditor5-engine/src/conversion/buildmodelconverter';\nimport buildViewConverter from '@ckeditor/ckeditor5-engine/src/conversion/buildviewconverter';\nimport ToggleAttributeCommand from '@ckeditor/ckeditor5-core/src/command/toggleattributecommand';\n\nconst BOLD = 'bold';\n\n/**\n * The bold engine feature.\n *\n * It registers the `bold` command and introduces the `bold` attribute in the model which renders to the view\n * as a `<strong>` element.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class BoldEngine extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst data = editor.data;\n\t\tconst editing = editor.editing;\n\n\t\t// Allow bold attribute on all inline nodes.\n\t\teditor.document.schema.allow( { name: '$inline', attributes: [ BOLD ], inside: '$block' } );\n\n\t\t// Build converter from model to view for data and editing pipelines.\n\t\tbuildModelConverter().for( data.modelToView, editing.modelToView )\n\t\t\t.fromAttribute( BOLD )\n\t\t\t.toElement( 'strong' );\n\n\t\t// Build converter from view to model for data pipeline.\n\t\tbuildViewConverter().for( data.viewToModel )\n\t\t\t.fromElement( 'strong' )\n\t\t\t.fromElement( 'b' )\n\t\t\t.fromAttribute( 'style', { 'font-weight': 'bold' } )\n\t\t\t.toAttribute( BOLD, true );\n\n\t\t// Create bold command.\n\t\teditor.commands.set( BOLD, new ToggleAttributeCommand( editor, BOLD ) );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-basic-styles/src/boldengine.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module basic-styles/italic\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ItalicEngine from './italicengine';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport italicIcon from '../theme/icons/italic.svg';\n\n/**\n * The italic feature. It introduces the Italic button and the <kbd>Ctrl+I</kbd> keystroke.\n *\n * It uses the {@link module:basic-styles/italicengine~ItalicEngine italic engine feature}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Italic extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ItalicEngine ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'basic-styles/italic';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\t\tconst command = editor.commands.get( 'italic' );\n\t\tconst keystroke = 'CTRL+I';\n\n\t\t// Add bold button to feature components.\n\t\teditor.ui.componentFactory.add( 'italic', locale => {\n\t\t\tconst view = new ButtonView( locale );\n\n\t\t\tview.set( {\n\t\t\t\tlabel: t( 'Italic' ),\n\t\t\t\ticon: italicIcon,\n\t\t\t\tkeystroke,\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\tview.bind( 'isOn', 'isEnabled' ).to( command, 'value', 'isEnabled' );\n\n\t\t\t// Execute command.\n\t\t\tthis.listenTo( view, 'execute', () => editor.execute( 'italic' ) );\n\n\t\t\treturn view;\n\t\t} );\n\n\t\t// Set the Ctrl+I keystroke.\n\t\teditor.keystrokes.set( keystroke, 'italic' );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-basic-styles/src/italic.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module basic-styles/italicengine\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport buildModelConverter from '@ckeditor/ckeditor5-engine/src/conversion/buildmodelconverter';\nimport buildViewConverter from '@ckeditor/ckeditor5-engine/src/conversion/buildviewconverter';\nimport ToggleAttributeCommand from '@ckeditor/ckeditor5-core/src/command/toggleattributecommand';\n\nconst ITALIC = 'italic';\n\n/**\n * The italic engine feature.\n *\n * It registers the `italic` command and introduces the `italic` attribute in the model which renders to the view\n * as an `<em>` element.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ItalicEngine extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst data = editor.data;\n\t\tconst editing = editor.editing;\n\n\t\t// Allow italic attribute on all inline nodes.\n\t\teditor.document.schema.allow( { name: '$inline', attributes: [ ITALIC ], inside: '$block' } );\n\n\t\t// Build converter from model to view for data and editing pipelines.\n\t\tbuildModelConverter().for( data.modelToView, editing.modelToView )\n\t\t\t.fromAttribute( ITALIC )\n\t\t\t.toElement( 'i' );\n\n\t\t// Build converter from view to model for data pipeline.\n\t\tbuildViewConverter().for( data.viewToModel )\n\t\t\t.fromElement( 'em' )\n\t\t\t.fromElement( 'i' )\n\t\t\t.fromAttribute( 'style', { 'font-style': 'italic' } )\n\t\t\t.toAttribute( ITALIC, true );\n\n\t\t// Create italic command.\n\t\teditor.commands.set( ITALIC, new ToggleAttributeCommand( editor, ITALIC ) );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-basic-styles/src/italicengine.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module block-quote/blockquote\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport BlockQuoteEngine from './blockquoteengine';\n\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\n\nimport quoteIcon from '@ckeditor/ckeditor5-core/theme/icons/quote.svg';\nimport '../theme/theme.scss';\n\n/**\n * The block quote plugin.\n *\n * It introduces the `'blockQuote'` button and requires {@link module:block-quote/blockquoteengine~BlockQuoteEngine}\n * plugin. It also changes <kbd>Enter</kbd> key behavior so it escapes block quotes when pressed in an\n * empty quoted block.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class BlockQuote extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ BlockQuoteEngine ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'block-quote/blockquote';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\t\tconst command = editor.commands.get( 'blockQuote' );\n\n\t\teditor.ui.componentFactory.add( 'blockQuote', locale => {\n\t\t\tconst buttonView = new ButtonView( locale );\n\n\t\t\tbuttonView.set( {\n\t\t\t\tlabel: t( 'Block quote' ),\n\t\t\t\ticon: quoteIcon,\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\t// Bind button model to command.\n\t\t\tbuttonView.bind( 'isOn', 'isEnabled' ).to( command, 'value', 'isEnabled' );\n\n\t\t\t// Execute command.\n\t\t\tthis.listenTo( buttonView, 'execute', () => editor.execute( 'blockQuote' ) );\n\n\t\t\treturn buttonView;\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tafterInit() {\n\t\tconst editor = this.editor;\n\t\tconst command = editor.commands.get( 'blockQuote' );\n\n\t\t// Overwrite default enter key behavior.\n\t\t// If enter key is pressed with selection collapsed in empty block inside a quote, break the quote.\n\t\t// This listener is added in afterInit in order to register it after list's feature listener.\n\t\t// We can't use a priority for this, because 'low' is already used by the enter feature, unless\n\t\t// we'd use numeric priority in this case.\n\t\tthis.listenTo( this.editor.editing.view, 'enter', ( evt, data ) => {\n\t\t\tconst doc = this.editor.document;\n\t\t\tconst positionParent = doc.selection.getLastPosition().parent;\n\n\t\t\tif ( doc.selection.isCollapsed && positionParent.isEmpty && command.value ) {\n\t\t\t\tthis.editor.execute( 'blockQuote' );\n\n\t\t\t\tdata.preventDefault();\n\t\t\t\tevt.stop();\n\t\t\t}\n\t\t} );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-block-quote/src/blockquote.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module block-quote/blockquotecommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command/command';\nimport Position from '@ckeditor/ckeditor5-engine/src/model/position';\nimport Element from '@ckeditor/ckeditor5-engine/src/model/element';\nimport Range from '@ckeditor/ckeditor5-engine/src/model/range';\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n\n/**\n * The block quote command.\n *\n * @extends module:core/command/command~Command\n */\nexport default class BlockQuoteCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * Flag indicating whether the command is active. It's on when the selection starts\n\t\t * in a quoted block.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #value\n\t\t */\n\t\tthis.set( 'value', false );\n\n\t\t// Update current value each time changes are done to the document.\n\t\tthis.listenTo( editor.document, 'changesDone', () => {\n\t\t\tthis.refreshValue();\n\t\t\tthis.refreshState();\n\t\t} );\n\t}\n\n\t/**\n\t * Updates command's {@link #value} based on the current selection.\n\t */\n\trefreshValue() {\n\t\tconst firstBlock = first( this.editor.document.selection.getSelectedBlocks() );\n\n\t\t// In the current implementation, the block quote must be an immediate parent of a block element.\n\t\tthis.value = !!( firstBlock && findQuote( firstBlock ) );\n\t}\n\n\t/**\n\t * Executes the command. When the command {@link #value is on}, then all block quotes within\n\t * the selection will be removed. If it's off, then all selected blocks will be wrapped with\n\t * a block quote.\n\t *\n\t * @protected\n\t * @param {Object} [options] Options for executed command.\n\t * @param {module:engine/model/batch~Batch} [options.batch] Batch to collect all the change steps.\n\t * New batch will be created if this option is not set.\n\t */\n\t_doExecute( options = {} ) {\n\t\tconst doc = this.editor.document;\n\t\tconst schema = doc.schema;\n\t\tconst batch = options.batch || doc.batch();\n\t\tconst blocks = Array.from( doc.selection.getSelectedBlocks() );\n\n\t\tdoc.enqueueChanges( () => {\n\t\t\tif ( this.value ) {\n\t\t\t\tthis._removeQuote( batch, blocks.filter( findQuote ) );\n\t\t\t} else {\n\t\t\t\tconst blocksToQuote = blocks.filter( block => {\n\t\t\t\t\t// Already quoted blocks needs to be considered while quoting too\n\t\t\t\t\t// in order to reuse their <bQ> elements.\n\t\t\t\t\treturn findQuote( block ) || checkCanBeQuoted( schema, block );\n\t\t\t\t} );\n\n\t\t\t\tthis._applyQuote( batch, blocksToQuote );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_checkEnabled() {\n\t\tif ( this.value ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst selection = this.editor.document.selection;\n\t\tconst schema = this.editor.document.schema;\n\n\t\tconst firstBlock = first( selection.getSelectedBlocks() );\n\n\t\tif ( !firstBlock ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn checkCanBeQuoted( schema, firstBlock );\n\t}\n\n\t/**\n\t * Removes the quote from the given blocks.\n\t *\n\t * If blocks which are supposed to be \"unquoted\" are in the middle of a quote,\n\t * start it or end it, then the quote will be split (if needed) and the blocks\n\t * will be moved out of it, so other quoted blocks remained quoted.\n\t *\n\t * @param {module:engine/model/batch~Batch} batch\n\t * @param {Array.<module:engine/model/element~Element>} blocks\n\t */\n\t_removeQuote( batch, blocks ) {\n\t\t// Unquote all groups of block. Iterate in the reverse order to not break following ranges.\n\t\tgetRangesOfBlockGroups( blocks ).reverse().forEach( groupRange => {\n\t\t\tif ( groupRange.start.isAtStart && groupRange.end.isAtEnd ) {\n\t\t\t\tbatch.unwrap( groupRange.start.parent );\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// The group of blocks are at the beginning of an <bQ> so let's move them left (out of the <bQ>).\n\t\t\tif ( groupRange.start.isAtStart ) {\n\t\t\t\tconst positionBefore = Position.createBefore( groupRange.start.parent );\n\n\t\t\t\tbatch.move( groupRange, positionBefore );\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// The blocks are in the middle of an <bQ> so we need to split the <bQ> after the last block\n\t\t\t// so we move the items there.\n\t\t\tif ( !groupRange.end.isAtEnd ) {\n\t\t\t\tbatch.split( groupRange.end );\n\t\t\t}\n\n\t\t\t// Now we are sure that groupRange.end.isAtEnd is true, so let's move the blocks right.\n\n\t\t\tconst positionAfter = Position.createAfter( groupRange.end.parent );\n\n\t\t\tbatch.move( groupRange, positionAfter );\n\t\t} );\n\t}\n\n\t/**\n\t * Applies the quote to the given blocks.\n\t *\n\t * @param {module:engine/model/batch~Batch} batch\n\t * @param {Array.<module:engine/model/element~Element>} blocks\n\t */\n\t_applyQuote( batch, blocks ) {\n\t\tconst quotesToMerge = [];\n\n\t\t// Quote all groups of block. Iterate in the reverse order to not break following ranges.\n\t\tgetRangesOfBlockGroups( blocks ).reverse().forEach( groupRange => {\n\t\t\tlet quote = findQuote( groupRange.start );\n\n\t\t\tif ( !quote ) {\n\t\t\t\tquote = new Element( 'blockQuote' );\n\n\t\t\t\tbatch.wrap( groupRange, quote );\n\t\t\t}\n\n\t\t\tquotesToMerge.push( quote );\n\t\t} );\n\n\t\t// Merge subsequent <bQ> elements. Reverse the order again because this time we want to go through\n\t\t// the <bQ> elements in the source order (due to how merge works – it moves the right element's content\n\t\t// to the first element and removes the right one. Since we may need to merge a couple of subsequent `<bQ>` elements\n\t\t// we want to keep the reference to the first (furthest left) one.\n\t\tquotesToMerge.reverse().reduce( ( currentQuote, nextQuote ) => {\n\t\t\tif ( currentQuote.nextSibling == nextQuote ) {\n\t\t\t\tbatch.merge( Position.createAfter( currentQuote ) );\n\n\t\t\t\treturn currentQuote;\n\t\t\t}\n\n\t\t\treturn nextQuote;\n\t\t} );\n\t}\n}\n\nfunction findQuote( elementOrPosition ) {\n\treturn elementOrPosition.parent.name == 'blockQuote' ? elementOrPosition.parent : null;\n}\n\n// Returns a minimal array of ranges containing groups of subsequent blocks.\n//\n// content:         abcdefgh\n// blocks:          [ a, b, d , f, g, h ]\n// output ranges:   [ab]c[d]e[fgh]\n//\n// @param {Array.<module:engine/model/element~Element>} blocks\n// @returns {Array.<module:engine/model/range~Range>}\nfunction getRangesOfBlockGroups( blocks ) {\n\tlet startPosition;\n\tlet i = 0;\n\tconst ranges = [];\n\n\twhile ( i < blocks.length ) {\n\t\tconst block = blocks[ i ];\n\t\tconst nextBlock = blocks[ i + 1 ];\n\n\t\tif ( !startPosition ) {\n\t\t\tstartPosition = Position.createBefore( block );\n\t\t}\n\n\t\tif ( !nextBlock || block.nextSibling != nextBlock ) {\n\t\t\tranges.push( new Range( startPosition, Position.createAfter( block ) ) );\n\t\t\tstartPosition = null;\n\t\t}\n\n\t\ti++;\n\t}\n\n\treturn ranges;\n}\n\n// Checks whether <bQ> can wrap the block.\nfunction checkCanBeQuoted( schema, block ) {\n\tconst isBQAllowed = schema.check( {\n\t\tname: 'blockQuote',\n\t\tinside: Position.createBefore( block )\n\t} );\n\tconst isBlockAllowedInBQ = schema.check( {\n\t\tname: block.name,\n\t\tattributes: Array.from( block.getAttributeKeys() ),\n\t\tinside: 'blockQuote'\n\t} );\n\n\treturn isBQAllowed && isBlockAllowedInBQ;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-block-quote/src/blockquotecommand.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module block-quote/blockquoteengine\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport BlockQuoteCommand from './blockquotecommand';\n\nimport buildViewConverter from '@ckeditor/ckeditor5-engine/src/conversion/buildviewconverter';\nimport buildModelConverter from '@ckeditor/ckeditor5-engine/src/conversion/buildmodelconverter';\n\n/**\n * The block quote engine.\n *\n * Introduces the `'blockQuote'` command and `'blockQuote'` model element.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class BlockQuoteEngine extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst schema = editor.document.schema;\n\n\t\teditor.commands.set( 'blockQuote', new BlockQuoteCommand( editor ) );\n\n\t\tschema.registerItem( 'blockQuote' );\n\t\tschema.allow( { name: 'blockQuote', inside: '$root' } );\n\t\tschema.allow( { name: '$block', inside: 'blockQuote' } );\n\n\t\tbuildViewConverter().for( editor.data.viewToModel )\n\t\t\t.fromElement( 'blockquote' )\n\t\t\t.toElement( 'blockQuote' );\n\n\t\tbuildModelConverter().for( editor.data.modelToView, editor.editing.modelToView )\n\t\t\t.fromElement( 'blockQuote' )\n\t\t\t.toElement( 'blockquote' );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tafterInit() {\n\t\tconst schema = this.editor.document.schema;\n\n\t\t// TODO\n\t\t// Workaround for https://github.com/ckeditor/ckeditor5-engine/issues/532#issuecomment-280924650.\n\t\tif ( schema.hasItem( 'listItem' ) ) {\n\t\t\tschema.allow( {\n\t\t\t\tname: 'listItem',\n\t\t\t\tinside: 'blockQuote',\n\t\t\t\tattributes: [ 'type', 'indent' ]\n\t\t\t} );\n\t\t}\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-block-quote/src/blockquoteengine.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module clipboard/clipboard\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport ClipboardObserver from './clipboardobserver';\n\nimport plainTextToHtml from './utils/plaintexttohtml';\nimport normalizeClipboardHtml from './utils/normalizeclipboarddata';\nimport viewToPlainText from './utils/viewtoplaintext.js';\n\nimport HtmlDataProcessor from '@ckeditor/ckeditor5-engine/src/dataprocessor/htmldataprocessor';\n\n/**\n * The clipboard feature. Currently, it's responsible for intercepting the `paste` and `drop` events and\n * passing the pasted content through the clipboard pipeline.\n *\n * # Clipboard input pipeline\n *\n * The feature creates the clipboard input pipeline which allows processing clipboard content\n * before it gets inserted into the editor. The pipeline consists of two events on which\n * the features can listen in order to modify or totally override the default behavior.\n *\n * ## On {@link module:engine/view/document~Document#event:paste} and {@link module:engine/view/document~Document#event:drop}\n *\n * The default action is to:\n *\n * 1. get HTML or plain text from the clipboard,\n * 2. prevent the default action of the native `paste` or `drop` event,\n * 3. fire {@link module:engine/view/document~Document#event:clipboardInput} with a\n * {@link module:clipboard/datatransfer~DataTransfer `dataTransfer`} property.\n * 4. fire {@link module:clipboard/clipboard~Clipboard#event:inputTransformation} with a `data` containing the clipboard data parsed to\n * a {@link module:engine/view/documentfragment~DocumentFragment view document fragment}.\n *\n * These action are performed by a low priority listeners, so they can be overridden by a normal ones\n * when a deeper change in pasting behavior is needed. For example, a feature which wants to differently read\n * data from the clipboard (the {@link module:clipboard/datatransfer~DataTransfer `DataTransfer`}).\n * should plug a listener at this stage.\n *\n * ## On {@link module:engine/view/document~Document#event:clipboardInput}\n *\n * This action is performed by a low priority listener, so it can be overridden by a normal one.\n *\n * At this stage the dataTransfer object can be processed by the features, which want to transform the original dataTransform.\n *\n *\t\tthis.listenTo( editor.editing.view, 'clipboardInput', ( evt, data ) => {\n *\t\t\tconst content = customTransform( data.dataTransfer.get( 'text/html' ) );\n *\t\t\tconst transformedContent = transform( content );\n *\t\t\tdata.dataTransfer.set( 'text/html', transformedContent );\n *\t\t} );\n *\n * ## On {@link module:clipboard/clipboard~Clipboard#event:inputTransformation}\n *\n * The default action is to insert the content (`data.content`, represented by a\n * {@link module:engine/view/documentfragment~DocumentFragment}) to an editor if the data is not empty.\n *\n * This action is performed by a low priority listener, so it can be overridden by a normal one.\n *\n * At this stage the pasted content can be processed by the features. E.g. a feature which wants to transform\n * a pasted text into a link can be implemented in this way:\n *\n *\t\tthis.listenTo( editor.plugins.get( 'clipboard/clipboard' ), 'inputTransformation', ( evt, data ) => {\n *\t\t\tif ( data.content.childCount == 1 && isUrlText( data.content.getChild( 0 ) ) ) {\n *\t\t\t\tconst linkUrl = data.content.getChild( 0 ).data;\n *\n *\t\t\t\tdata.content = new ViewDocumentFragment( [\n *\t\t\t\t\tViewElement(\n *\t\t\t\t\t\t'a',\n *\t\t\t\t\t\t{ href: linkUrl },\n *\t\t\t\t\t\t[ new ViewText( linkUrl ) ]\n *\t\t\t\t\t)\n *\t\t\t\t] );\n *\t\t\t}\n *\t\t} );\n *\n * # Clipboard output pipeline\n *\n * The output pipeline is the equivalent of the input pipeline but for the copy and cut operations.\n * It allows to process the content which will be then put into the clipboard or to override the whole process.\n *\n * ## On {@link module:engine/view/document~Document#event:copy} and {@link module:engine/view/document~Document#event:cut}\n *\n * The default action is to:\n *\n * 1. {@link module:engine/controller/datacontroller~DataController#getSelectedContent get selected content} from the editor,\n * 2. prevent the default action of the native `copy` or `cut` event,\n * 3. fire {@link module:engine/view/document~Document#event:clipboardOutput} with a clone of the selected content\n * converted to a {@link module:engine/view/documentfragment~DocumentFragment view document fragment}.\n *\n * ## On {@link module:engine/view/document~Document#event:clipboardOutput}\n *\n * The default action is to put the content (`data.content`, represented by a\n * {@link module:engine/view/documentfragment~DocumentFragment}) to the clipboard as HTML. In case of the cut operation,\n * the selected content is also deleted from the editor.\n *\n * This action is performed by a low priority listener, so it can be overridden by a normal one.\n *\n * At this stage the copied/cut content can be processed by the features.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Clipboard extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'clipboard/clipboard';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst doc = editor.document;\n\t\tconst editingView = editor.editing.view;\n\n\t\t/**\n\t\t * Data processor used to convert pasted HTML to a view structure.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/dataprocessor/htmldataprocessor~HtmlDataProcessor} #_htmlDataProcessor\n\t\t */\n\t\tthis._htmlDataProcessor = new HtmlDataProcessor();\n\n\t\teditingView.addObserver( ClipboardObserver );\n\n\t\t// The clipboard paste pipeline.\n\n\t\tthis.listenTo( editingView, 'clipboardInput', ( evt, data ) => {\n\t\t\tconst dataTransfer = data.dataTransfer;\n\t\t\tlet content = '';\n\n\t\t\tif ( dataTransfer.getData( 'text/html' ) ) {\n\t\t\t\tcontent = normalizeClipboardHtml( dataTransfer.getData( 'text/html' ) );\n\t\t\t} else if ( dataTransfer.getData( 'text/plain' ) ) {\n\t\t\t\tcontent = plainTextToHtml( dataTransfer.getData( 'text/plain' ) );\n\t\t\t}\n\n\t\t\tcontent = this._htmlDataProcessor.toView( content );\n\n\t\t\tthis.fire( 'inputTransformation', { content } );\n\t\t}, { priority: 'low' } );\n\n\t\tthis.listenTo( this, 'inputTransformation', ( evt, data ) => {\n\t\t\tif ( !data.content.isEmpty ) {\n\t\t\t\tconst dataController = this.editor.data;\n\n\t\t\t\t// Convert the pasted content to a model document fragment.\n\t\t\t\t// Conversion is contextual, but in this case we need an \"all allowed\" context and for that\n\t\t\t\t// we use the $clipboardHolder item.\n\t\t\t\tconst modelFragment = dataController.toModel( data.content, '$clipboardHolder' );\n\n\t\t\t\tdoc.enqueueChanges( () => {\n\t\t\t\t\tdataController.insertContent( modelFragment, doc.selection );\n\t\t\t\t} );\n\t\t\t}\n\t\t}, { priority: 'low' } );\n\n\t\t// The clipboard copy/cut pipeline.\n\n\t\tconst onCopyCut = ( evt, data ) => {\n\t\t\tconst dataTransfer = data.dataTransfer;\n\t\t\tconst content = editor.data.toView( editor.data.getSelectedContent( doc.selection ) );\n\n\t\t\tdata.preventDefault();\n\n\t\t\teditingView.fire( 'clipboardOutput', { dataTransfer, content, method: evt.name } );\n\t\t};\n\n\t\tthis.listenTo( editingView, 'copy', onCopyCut, { priority: 'low' } );\n\t\tthis.listenTo( editingView, 'cut', onCopyCut, { priority: 'low' } );\n\n\t\tthis.listenTo( editingView, 'clipboardOutput', ( evt, data ) => {\n\t\t\tif ( !data.content.isEmpty ) {\n\t\t\t\tdata.dataTransfer.setData( 'text/html', this._htmlDataProcessor.toData( data.content ) );\n\t\t\t\tdata.dataTransfer.setData( 'text/plain', viewToPlainText( data.content ) );\n\t\t\t}\n\n\t\t\tif ( data.method == 'cut' ) {\n\t\t\t\tdoc.enqueueChanges( () => {\n\t\t\t\t\teditor.data.deleteContent( doc.selection, doc.batch(), { merge: true } );\n\t\t\t\t} );\n\t\t\t}\n\t\t}, { priority: 'low' } );\n\t}\n}\n\n/**\n * Fired with a `content`, which comes from the clipboard (was pasted or dropped) and\n * should be processed in order to be inserted into the editor.\n * It's part of the {@link module:clipboard/clipboard~Clipboard \"clipboard pipeline\"}.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @see module:clipboard/clipboard~Clipboard\n * @event module:clipboard/clipboard~Clipboard#event:inputTransformation\n * @param {Object} data Event data.\n * @param {module:engine/view/documentfragment~DocumentFragment} data.content Event data. Content to be inserted into the editor.\n * It can be modified by the event listeners. Read more about the clipboard pipelines in {@link module:clipboard/clipboard~Clipboard}\n */\n\n/**\n * Fired on {@link module:engine/view/document~Document#event:copy} and {@link module:engine/view/document~Document#event:cut}\n * with a copy of selected content. The content can be processed before it ends up in the clipboard.\n * It's part of the {@link module:clipboard/clipboard~Clipboard \"clipboard pipeline\"}.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @see module:clipboard/clipboard~Clipboard\n * @event module:engine/view/document~Document#event:clipboardOutput\n * @param {module:clipboard/clipboard~ClipboardOutputEventData} data Event data.\n */\n\n/**\n * The value of the {@link module:engine/view/document~Document#event:clipboardOutput} event.\n *\n * @class module:clipboard/clipboard~ClipboardOutputEventData\n */\n\n/**\n * Data transfer instance.\n *\n * @readonly\n * @member {module:clipboard/datatransfer~DataTransfer} module:clipboard/clipboard~ClipboardOutputEventData#dataTransfer\n */\n\n/**\n * Content to be put into the clipboard. It can be modified by the event listeners.\n * Read more about the clipboard pipelines in {@link module:clipboard/clipboard~Clipboard}.\n *\n * @member {module:engine/view/documentfragment~DocumentFragment} module:clipboard/clipboard~ClipboardOutputEventData#content\n */\n\n/**\n * Whether the event was triggered by copy or cut operation.\n *\n * @member {'copy'|'cut'} module:clipboard/clipboard~ClipboardOutputEventData#method\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-clipboard/src/clipboard.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module clipboard/clipboardobserver\n */\n\nimport DomEventObserver from '@ckeditor/ckeditor5-engine/src/view/observer/domeventobserver';\nimport DataTransfer from './datatransfer';\n\n/**\n * {@link module:engine/view/document~Document#event:paste Paste} event observer.\n *\n * Note that this observer is not available by default. To make it available it needs to be added to\n * {@link module:engine/view/document~Document} by the {@link module:engine/view/document~Document#addObserver} method.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nexport default class ClipboardObserver extends DomEventObserver {\n\tconstructor( doc ) {\n\t\tsuper( doc );\n\n\t\tthis.domEventType = [ 'paste', 'copy', 'cut', 'drop' ];\n\n\t\tthis.listenTo( doc, 'paste', handleInput, { priority: 'low' } );\n\t\tthis.listenTo( doc, 'drop', handleInput, { priority: 'low' } );\n\n\t\tfunction handleInput( evt, data ) {\n\t\t\tdata.preventDefault();\n\n\t\t\tdoc.fire( 'clipboardInput', { dataTransfer: data.dataTransfer } );\n\t\t}\n\t}\n\n\tonDomEvent( domEvent ) {\n\t\tthis.fire( domEvent.type, domEvent, {\n\t\t\tdataTransfer: new DataTransfer( domEvent.clipboardData ? domEvent.clipboardData : domEvent.dataTransfer )\n\t\t} );\n\t}\n}\n\n/**\n * Fired with a `dataTransfer` which comes from the clipboard (was {@link module:engine/view/document~Document#event:paste pasted}\n * or {@link module:engine/view/document~Document#event:drop dropped}) and\n * should be processed in order to be inserted into the editor.\n * It's part of the {@link module:clipboard/clipboard~Clipboard \"clipboard pipeline\"}.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @see module:clipboard/clipboard~Clipboard\n * @event module:engine/view/document~Document#event:clipboardInput\n * @param {Object} data Event data.\n * @param {module:clipboard/datatransfer~DataTransfer} data.dataTransfer Data transfer instance.\n */\n\n/**\n * Fired when user dropped content into one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/document~Document#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @event module:engine/view/document~Document#event:drop\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * Fired when user pasted content into one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/document~Document#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @event module:engine/view/document~Document#event:paste\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * Fired when user copied content from one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/document~Document#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @event module:engine/view/document~Document#event:copy\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * Fired when user cut content from one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/document~Document#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @event module:engine/view/document~Document#event:cut\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * The value of the {@link module:engine/view/document~Document#event:paste},\n * {@link module:engine/view/document~Document#event:copy} and {@link module:engine/view/document~Document#event:cut} events.\n *\n * In order to access clipboard data use `dataTransfer` property.\n *\n * @class module:clipboard/clipboardobserver~ClipboardEventData\n * @extends module:engine/view/observer/domeventdata~DomEventData\n */\n\n/**\n * Data transfer instance.\n *\n * @readonly\n * @member {module:clipboard/datatransfer~DataTransfer} module:clipboard/clipboardobserver~ClipboardEventData#dataTransfer\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-clipboard/src/clipboardobserver.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module clipboard/datatransfer\n */\n\n/**\n * Facade over the native [`DataTransfer`](https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer) object.\n */\nexport default class DataTransfer {\n\tconstructor( nativeDataTransfer ) {\n\t\t/**\n\t\t * The array of files created from the native `DataTransfer#files` or `DataTransfer#items`.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Array.<File>} #files\n\t\t */\n\t\tthis.files = getFiles( nativeDataTransfer );\n\n\t\t/**\n\t\t * The native DataTransfer object.\n\t\t *\n\t\t * @private\n\t\t * @member {DataTransfer} #_native\n\t\t */\n\t\tthis._native = nativeDataTransfer;\n\t}\n\n\t/**\n\t * Returns an array of available native content types.\n\t *\n\t * @returns {Array.<String>}\n\t */\n\tget types() {\n\t\treturn this._native.types;\n\t}\n\n\t/**\n\t * Gets data from the data transfer by its mime type.\n\t *\n\t *\t\tdataTransfer.getData( 'text/plain' );\n\t *\n\t * @param {String} type The mime type. E.g. `text/html` or `text/plain`.\n\t * @returns {String}\n\t */\n\tgetData( type ) {\n\t\treturn this._native.getData( type );\n\t}\n\n\t/**\n\t * Sets data in the data transfer.\n\t *\n\t * @param {String} type The mime type. E.g. `text/html` or `text/plain`.\n\t * @param {String} data\n\t */\n\tsetData( type, data ) {\n\t\tthis._native.setData( type, data );\n\t}\n}\n\nfunction getFiles( nativeDataTransfer ) {\n\t// DataTransfer.files and items are Array-like and might not have an iterable interface.\n\tconst files = nativeDataTransfer.files ? Array.from( nativeDataTransfer.files ) : [];\n\tconst items = nativeDataTransfer.items ? Array.from( nativeDataTransfer.items ) : [];\n\n\tif ( files.length ) {\n\t\treturn files;\n\t}\n\t// Chrome have empty DataTransfer.files, but let get files through the items interface.\n\treturn items\n\t\t.filter( item => item.kind === 'file' )\n\t\t.map( item => item.getAsFile() );\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-clipboard/src/datatransfer.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module clipboard/utils/normalizeclipboarddata\n */\n\n/**\n * Removes some popular browser quirks out of the clipboard data (HTML).\n *\n * @param {String} data The HTML data to normalize.\n * @returns {String} Normalized HTML.\n */\nexport default function normalizeClipboardData( data ) {\n\treturn data\n\t\t.replace( /<span class=\"Apple-converted-space\">(\\s+)<\\/span>/g, ( fullMatch, spaces ) => {\n\t\t\t// Handle the most popular and problematic case when even a single space becomes an nbsp;.\n\t\t\t// Decode those to normal spaces. Read more in https://github.com/ckeditor/ckeditor5-clipboard/issues/2.\n\t\t\tif ( spaces.length == 1 ) {\n\t\t\t\treturn ' ';\n\t\t\t}\n\n\t\t\treturn spaces;\n\t\t} );\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-clipboard/src/utils/normalizeclipboarddata.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module clipboard/utils/plaintexttohtml\n */\n\n/**\n * Converts plain text to its HTML-ized version.\n *\n * @param {String} text The plain text to convert.\n * @returns {String} HTML generated from the plain text.\n */\nexport default function plainTextToHtml( text ) {\n\ttext = text\n\t\t// Encode <>.\n\t\t.replace( /</g, '&lt;' )\n\t\t.replace( />/g, '&gt;' )\n\t\t// Creates paragraphs for double line breaks and change single line breaks to spaces.\n\t\t// In the future single line breaks may be converted into <br>s.\n\t\t.replace( /\\n\\n/g, '</p><p>' )\n\t\t.replace( /\\n/g, ' ' )\n\t\t// Preserve trailing spaces (only the first and last one – the rest is handled below).\n\t\t.replace( /^\\s/, '&nbsp;' )\n\t\t.replace( /\\s$/, '&nbsp;' )\n\t\t// Preserve other subsequent spaces now.\n\t\t.replace( /\\s\\s/g, ' &nbsp;' );\n\n\tif ( text.indexOf( '</p><p>' ) > -1 ) {\n\t\t// If we created paragraphs above, add the trailing ones.\n\t\ttext = `<p>${ text }</p>`;\n\t}\n\n\t// TODO:\n\t// * What about '\\nfoo' vs ' foo'?\n\n\treturn text;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-clipboard/src/utils/plaintexttohtml.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module clipboard/utils/viewtoplaintext\n */\n\n// Elements which should not have empty-line padding.\n// Most `view.ContainerElement` want to be separate by new-line, but some are creating one structure\n// together (like `<li>`) so it is better to separate them by only one \"\\n\".\nconst smallPaddingElements = [ 'figcaption', 'li' ];\n\n/**\n * Converts {@link module:engine/view/item~Item view item} and all of its children to plain text.\n *\n * @param {module:engine/view/item~Item} viewItem View item to convert.\n * @returns {String} Plain text representation of `viewItem`.\n */\nexport default function viewToPlainText( viewItem ) {\n\tlet text = '';\n\n\tif ( viewItem.is( 'text' ) || viewItem.is( 'textProxy' ) ) {\n\t\t// If item is `Text` or `TextProxy` simple take its text data.\n\t\ttext = viewItem.data;\n\t} else if ( viewItem.is( 'img' ) && viewItem.hasAttribute( 'alt' ) ) {\n\t\t// Special case for images - use alt attribute if it is provided.\n\t\ttext = viewItem.getAttribute( 'alt' );\n\t} else {\n\t\t// Other elements are document fragments, attribute elements or container elements.\n\t\t// They don't have their own text value, so convert their children.\n\t\tlet prev = null;\n\n\t\tfor ( const child of viewItem.getChildren() ) {\n\t\t\tconst childText = viewToPlainText( child );\n\n\t\t\t// Separate container element children with one or more new-line characters.\n\t\t\tif ( prev && ( prev.is( 'containerElement' ) || child.is( 'containerElement' ) ) ) {\n\t\t\t\tif ( smallPaddingElements.includes( prev.name ) || smallPaddingElements.includes( child.name ) ) {\n\t\t\t\t\ttext += '\\n';\n\t\t\t\t} else {\n\t\t\t\t\ttext += '\\n\\n';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttext += childText;\n\t\t\tprev = child;\n\t\t}\n\t}\n\n\treturn text;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-clipboard/src/utils/viewtoplaintext.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module core/editingkeystrokehandler\n */\n\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\n\n/**\n * A keystroke handler for editor editing. Its instance is available\n * in {@link module:core/editor/standardeditor~StandardEditor#keystrokes} so plugins\n * can register their keystrokes.\n *\n * E.g. an undo plugin would do this:\n *\n *\t\teditor.keystrokes.set( 'ctrl + Z', 'undo' );\n *\t\teditor.keystrokes.set( 'ctrl + shift + Z', 'redo' );\n *\t\teditor.keystrokes.set( 'ctrl + Y', 'redo' );\n *\n * @extends utils/keystrokehandler~KeystrokeHandler\n */\nexport default class EditingKeystrokeHandler extends KeystrokeHandler {\n\t/**\n\t * Creates an instance of the keystroke handler.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor\n\t */\n\tconstructor( editor ) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The editor instance.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/editor/editor~Editor}\n\t\t */\n\t\tthis.editor = editor;\n\t}\n\n\t/**\n\t * Registers a handler for the specified keystroke.\n\t *\n\t * * The handler can be specified as a command name or a callback.\n\t *\n\t * @param {String|Array.<String|Number>} keystroke Keystroke defined in a format accepted by\n\t * the {@link module:utils/keyboard~parseKeystroke} function.\n\t * @param {Function} callback If a string is passed, then the keystroke will\n\t * {@link module:core/editor/editor~Editor#execute execute a command}.\n\t * If a function, then it will be called with the\n\t * {@link module:engine/view/observer/keyobserver~KeyEventData key event data} object and\n\t * a helper to both `preventDefault` and `stopPropagation` of the event.\n\t */\n\tset( keystroke, callback ) {\n\t\tif ( typeof callback == 'string' ) {\n\t\t\tconst commandName = callback;\n\n\t\t\tcallback = () => {\n\t\t\t\tthis.editor.execute( commandName );\n\t\t\t};\n\t\t}\n\n\t\tsuper.set( keystroke, callback );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tlistenTo( emitter ) {\n\t\tthis._listener.listenTo( emitter, 'keydown', ( evt, data ) => {\n\t\t\tconst handled = this.press( data );\n\n\t\t\tif ( handled ) {\n\t\t\t\tdata.preventDefault();\n\t\t\t}\n\t\t} );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-core/src/editingkeystrokehandler.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module core/editor/editor\n */\n\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport Config from '@ckeditor/ckeditor5-utils/src/config';\nimport PluginCollection from '../plugincollection';\nimport Locale from '@ckeditor/ckeditor5-utils/src/locale';\nimport DataController from '@ckeditor/ckeditor5-engine/src/controller/datacontroller';\nimport Document from '@ckeditor/ckeditor5-engine/src/model/document';\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * Class representing a basic editor. It contains a base architecture, without much additional logic.\n *\n * See also {@link module:core/editor/standardeditor~StandardEditor}.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\nexport default class Editor {\n\t/**\n\t * Creates a new instance of the Editor class.\n\t *\n\t * @param {Object} config The editor config.\n\t */\n\tconstructor( config ) {\n\t\tconst availablePlugins = this.constructor.build && this.constructor.build.plugins;\n\n\t\t/**\n\t\t * Holds all configurations specific to this editor instance.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/config~Config}\n\t\t */\n\t\tthis.config = new Config( config, this.constructor.build && this.constructor.build.config );\n\n\t\tthis.config.define( 'plugins', availablePlugins );\n\n\t\t/**\n\t\t * The plugins loaded and in use by this editor instance.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/plugin~PluginCollection}\n\t\t */\n\t\tthis.plugins = new PluginCollection( this, availablePlugins );\n\n\t\t/**\n\t\t * Commands registered to the editor.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Map.<module:core/command/command~Command>}\n\t\t */\n\t\tthis.commands = new Map();\n\n\t\t/**\n\t\t * @readonly\n\t\t * @member {module:utils/locale~Locale}\n\t\t */\n\t\tthis.locale = new Locale( this.config.get( 'lang' ) );\n\n\t\t/**\n\t\t * Shorthand for {@link module:utils/locale~Locale#t}.\n\t\t *\n\t\t * @see module:utils/locale~Locale#t\n\t\t * @method #t\n\t\t */\n\t\tthis.t = this.locale.t;\n\n\t\t/**\n\t\t * Tree Model document managed by this editor.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/document~Document}\n\t\t */\n\t\tthis.document = new Document();\n\n\t\t/**\n\t\t * Instance of the {@link module:engine/controller/datacontroller~DataController data controller}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/controller/datacontroller~DataController}\n\t\t */\n\t\tthis.data = new DataController( this.document );\n\n\t\t/**\n\t\t * Instance of the {@link module:engine/controller/editingcontroller~EditingController editing controller}.\n\t\t *\n\t\t * This property is set by more specialized editor classes (such as {@link module:core/editor/standardeditor~StandardEditor}),\n\t\t * however, it's required for features to work as their engine-related parts will try to connect converters.\n\t\t *\n\t\t * When defining a virtual editor class, like one working in Node.js, it's possible to plug a virtual\n\t\t * editing controller which only instantiates necessary properties, but without any observers and listeners.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/controller/editingcontroller~EditingController} #editing\n\t\t */\n\t}\n\n\t/**\n\t * Loads and initializes plugins specified in the config.\n\t *\n\t * @returns {Promise} A promise which resolves once the initialization is completed.\n\t */\n\tinitPlugins() {\n\t\tconst that = this;\n\t\tconst config = this.config;\n\n\t\treturn loadPlugins()\n\t\t\t.then( loadedPlugins => {\n\t\t\t\treturn initPlugins( loadedPlugins, 'init' )\n\t\t\t\t\t.then( () => initPlugins( loadedPlugins, 'afterInit' ) );\n\t\t\t} )\n\t\t\t.then( () => this.fire( 'pluginsReady' ) );\n\n\t\tfunction loadPlugins() {\n\t\t\tconst plugins = config.get( 'plugins' ) || [];\n\t\t\tconst removePlugins = config.get( 'removePlugins' ) || [];\n\n\t\t\treturn that.plugins.load( plugins, removePlugins );\n\t\t}\n\n\t\tfunction initPlugins( loadedPlugins, method ) {\n\t\t\treturn loadedPlugins.reduce( ( promise, plugin ) => {\n\t\t\t\tif ( !plugin[ method ] ) {\n\t\t\t\t\treturn promise;\n\t\t\t\t}\n\n\t\t\t\treturn promise.then( plugin[ method ].bind( plugin ) );\n\t\t\t}, Promise.resolve() );\n\t\t}\n\t}\n\n\t/**\n\t * Destroys the editor instance, releasing all resources used by it.\n\t *\n\t * @fires module:core/editor/editor~Editor#destroy\n\t * @returns {Promise} A promise that resolves once the editor instance is fully destroyed.\n\t */\n\tdestroy() {\n\t\tthis.fire( 'destroy' );\n\t\tthis.stopListening();\n\n\t\treturn Promise.resolve()\n\t\t\t.then( () => {\n\t\t\t\tthis.document.destroy();\n\t\t\t\tthis.data.destroy();\n\t\t\t} );\n\t}\n\n\t/**\n\t * Executes specified command with given parameter.\n\t *\n\t * @param {String} commandName Name of command to execute.\n\t * @param {*} [commandParam] If set, command will be executed with this parameter.\n\t */\n\texecute( commandName, commandParam ) {\n\t\tconst command = this.commands.get( commandName );\n\n\t\tif ( !command ) {\n\t\t\t/**\n\t\t\t * Specified command has not been added to the editor.\n\t\t\t *\n\t\t\t * @error editor-command-not-found\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'editor-command-not-found: Specified command has not been added to the editor.' );\n\t\t}\n\n\t\tcommand._execute( commandParam );\n\t}\n\n\t/**\n\t * Creates a basic editor instance.\n\t *\n\t * @param {Object} config See {@link module:core/editor/editor~Editor}'s param.\n\t * @returns {Promise} Promise resolved once editor is ready.\n\t * @returns {module:core/editor/editor~Editor} return.editor The editor instance.\n\t */\n\tstatic create( config ) {\n\t\treturn new Promise( resolve => {\n\t\t\tconst editor = new this( config );\n\n\t\t\tresolve(\n\t\t\t\teditor.initPlugins()\n\t\t\t\t\t.then( () => {\n\t\t\t\t\t\teditor.fire( 'dataReady' );\n\t\t\t\t\t\teditor.fire( 'ready' );\n\t\t\t\t\t} )\n\t\t\t\t\t.then( () => editor )\n\t\t\t);\n\t\t} );\n\t}\n}\n\nmix( Editor, EmitterMixin );\n\n/**\n * Fired after {@link #initPlugins plugins are initialized}.\n *\n * @event pluginsReady\n */\n\n/**\n * Fired when the editor UI is ready. This event won't be fired if the editor has no UI.\n *\n * @event uiReady\n */\n\n/**\n * Fired when the data loaded to the editor is ready. If a specific editor doesn't load\n * any data initially, this event will be fired right before {@link #event:ready}.\n *\n * @event dataReady\n */\n\n/**\n * Fired when {@link #event:pluginsReady plugins}, {@link #event:uiReady UI} and {@link #event:dataReady data} and all additional\n * editor components are ready.\n *\n * @event ready\n */\n\n/**\n * Fired when this editor instance is destroyed. The editor at this point is not usable and this event should be used to\n * perform the clean-up in any plugin.\n *\n * @event destroy\n */\n\n/**\n * Additional data built into the editor class. It's used while bundling the editor in order to provide\n * the default set of plugins and config options which are later used during editor initialization.\n *\n * Two properties are supported:\n *\n * * `plugins` – an array of plugin constructors. They will be automatically initialized by the editor, unless listed\n * in `config.removePlugins` or unless `config.plugins` is passed.\n * * `config` – the defalt config options.\n *\n * @static\n * @member {Object} module:core/editor/editor~Editor.build\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-core/src/editor/editor.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module core/editor/standardeditor\n */\n\nimport Editor from './editor';\nimport EditingKeystrokeHandler from '../editingkeystrokehandler';\nimport EditingController from '@ckeditor/ckeditor5-engine/src/controller/editingcontroller';\n\nimport getDataFromElement from '@ckeditor/ckeditor5-utils/src/dom/getdatafromelement';\nimport setDataInElement from '@ckeditor/ckeditor5-utils/src/dom/setdatainelement';\n\n/**\n * Class representing a typical browser-based editor. It handles a single source element and\n * uses {@link module:engine/controller/editingcontroller~EditingController}.\n */\nexport default class StandardEditor extends Editor {\n\t/**\n\t * Creates a new instance of the standard editor.\n\t *\n\t * @param {HTMLElement} element The DOM element that will be the source\n\t * for the created editor.\n\t * @param {Object} config The editor config.\n\t */\n\tconstructor( element, config ) {\n\t\tsuper( config );\n\n\t\t/**\n\t\t * The element on which the editor has been initialized.\n\t\t *\n\t\t * @readonly\n\t\t * @member {HTMLElement}\n\t\t */\n\t\tthis.element = element;\n\n\t\t// Documented in Editor.\n\t\tthis.editing = new EditingController( this.document );\n\n\t\t/**\n\t\t * Instance of the {@link module:core/editingkeystrokehandler~EditingKeystrokeHandler}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/editingkeystrokehandler~EditingKeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new EditingKeystrokeHandler( this );\n\n\t\t/**\n\t\t * Editor UI instance.\n\t\t *\n\t\t * This property is set by more specialized editor constructors. However, it's required\n\t\t * for plugins to work (their UI-related part will try to interact with editor UI),\n\t\t * so every editor class which is meant to work with default plugins should set this property.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/editor/editorui~EditorUI} #ui\n\t\t */\n\n\t\tthis.keystrokes.listenTo( this.editing.view );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\treturn Promise.resolve()\n\t\t\t.then( () => this.keystrokes.destroy() )\n\t\t\t.then( () => this.editing.destroy() )\n\t\t\t.then( super.destroy() );\n\t}\n\n\t/**\n\t * Sets the data in the editor's main root.\n\t *\n\t * @param {*} data The data to load.\n\t */\n\tsetData( data ) {\n\t\tthis.data.set( data );\n\t}\n\n\t/**\n\t * Gets the data from the editor's main root.\n\t */\n\tgetData() {\n\t\treturn this.data.get();\n\t}\n\n\t/**\n\t * Updates the {@link #element editor element}'s content with the data.\n\t */\n\tupdateEditorElement() {\n\t\tsetDataInElement( this.element, this.getData() );\n\t}\n\n\t/**\n\t * Loads the data from the {@link #element editor element} to the main root.\n\t */\n\tloadDataFromEditorElement() {\n\t\tthis.setData( getDataFromElement( this.element ) );\n\t}\n\n\t/**\n\t * Creates a standard editor instance.\n\t *\n\t * @param {HTMLElement} element See {@link module:core/editor/standardeditor~StandardEditor}'s param.\n\t * @param {Object} config See {@link module:core/editor/standardeditor~StandardEditor}'s param.\n\t * @returns {Promise} Promise resolved once editor is ready.\n\t * @returns {module:core/editor/standardeditor~StandardEditor} return.editor The editor instance.\n\t */\n\tstatic create( element, config ) {\n\t\treturn new Promise( resolve => {\n\t\t\tconst editor = new this( element, config );\n\n\t\t\tresolve(\n\t\t\t\teditor.initPlugins()\n\t\t\t\t\t.then( () => {\n\t\t\t\t\t\teditor.fire( 'dataReady' );\n\t\t\t\t\t\teditor.fire( 'ready' );\n\t\t\t\t\t} )\n\t\t\t\t\t.then( () => editor )\n\t\t\t);\n\t\t} );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-core/src/editor/standardeditor.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module core/plugincollection\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\n\n/**\n * Manages a list of CKEditor plugins, including loading, resolving dependencies and initialization.\n */\nexport default class PluginCollection {\n\t/**\n\t * Creates an instance of the PluginCollection class.\n\t * Allows loading and initializing plugins and their dependencies.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor\n\t * @param {Array.<Function>} [availablePlugins] Plugins (constructors) which the collection will be able to use\n\t * when {@link module:core/plugincollection~PluginCollection#load} is used with plugin names (strings, instead of constructors).\n\t * Usually, the editor will pass its built-in plugins to the collection so they can later be\n\t * used in `config.plugins` or `config.removePlugins` by names.\n\t */\n\tconstructor( editor, availablePlugins = [] ) {\n\t\t/**\n\t\t * @protected\n\t\t * @member {module:core/editor/editor~Editor} module:core/plugin~PluginCollection#_editor\n\t\t */\n\t\tthis._editor = editor;\n\n\t\t/**\n\t\t * Map of plugin constructors which can be retrieved by their names.\n\t\t *\n\t\t * @protected\n\t\t * @member {Map.<String|Function,Function>} module:core/plugin~PluginCollection#_availablePlugins\n\t\t */\n\t\tthis._availablePlugins = new Map();\n\n\t\t/**\n\t\t * @protected\n\t\t * @member {Map} module:core/plugin~PluginCollection#_plugins\n\t\t */\n\t\tthis._plugins = new Map();\n\n\t\tfor ( const PluginConstructor of availablePlugins ) {\n\t\t\tthis._availablePlugins.set( PluginConstructor, PluginConstructor );\n\n\t\t\tif ( PluginConstructor.pluginName ) {\n\t\t\t\tthis._availablePlugins.set( PluginConstructor.pluginName, PluginConstructor );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Collection iterator. Returns `[ PluginConstructor, pluginInstance ]` pairs.\n\t */\n\t* [ Symbol.iterator ]() {\n\t\tfor ( const entry of this._plugins ) {\n\t\t\tif ( typeof entry[ 0 ] == 'function' ) {\n\t\t\t\tyield entry;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets the plugin instance by its constructor or name.\n\t *\n\t * @param {Function|String} key The plugin constructor or {@link module:core/plugin~PluginInterface.pluginName name}.\n\t * @returns {module:core/plugin~PluginInterface}\n\t */\n\tget( key ) {\n\t\treturn this._plugins.get( key );\n\t}\n\n\t/**\n\t * Loads a set of plugins and adds them to the collection.\n\t *\n\t * @param {Array.<Function|String>} plugins An array of {@link module:core/plugin~PluginInterface plugin constructors}\n\t * or {@link module:core/plugin~PluginInterface.pluginName plugin names}. The second option (names) work only if\n\t * `availablePlugins` were passed to the {@link #constructor}.\n\t * @param {Array.<String|Function>} [removePlugins] Names of plugins or plugin constructors\n\t * which should not be loaded (despite being specified in the `plugins` array).\n\t * @returns {Promise} A promise which gets resolved once all plugins are loaded and available into the\n\t * collection.\n\t * @returns {Promise.<Array.<module:core/plugin~PluginInterface>>} returns.loadedPlugins The array of loaded plugins.\n\t */\n\tload( plugins, removePlugins = [] ) {\n\t\tconst that = this;\n\t\tconst editor = this._editor;\n\t\tconst loading = new Set();\n\t\tconst loaded = [];\n\n\t\tconst pluginConstructors = mapToAvailableConstructors( plugins );\n\t\tconst removePluginConstructors = mapToAvailableConstructors( removePlugins );\n\t\tconst missingPlugins = getMissingPluginNames( plugins );\n\n\t\tif ( missingPlugins ) {\n\t\t\t// TODO update this error docs with links to docs because it will be a frequent problem.\n\n\t\t\t/**\n\t\t\t * Some plugins are not available and could not be loaded.\n\t\t\t *\n\t\t\t * Plugin classes (constructors) need to be provided to the editor before they can be loaded by name.\n\t\t\t * This is usually done by the builder by setting the {@link module:core/editor/editor~Editor.build}\n\t\t\t * property.\n\t\t\t *\n\t\t\t * @error plugincollection-plugin-not-found\n\t\t\t * @param {Array.<String>} plugins The name of the plugins which could not be loaded.\n\t\t\t */\n\t\t\tconst errorMsg = 'plugincollection-plugin-not-found: Some plugins are not available and could not be loaded.';\n\n\t\t\t// Log the error so it's more visible on the console. Hopefuly, for better DX.\n\t\t\tlog.error( errorMsg, { plugins: missingPlugins } );\n\n\t\t\treturn Promise.reject( new CKEditorError( errorMsg, { plugins: missingPlugins } ) );\n\t\t}\n\n\t\treturn Promise.all( pluginConstructors.map( loadPlugin ) )\n\t\t\t.then( () => loaded );\n\n\t\tfunction loadPlugin( PluginConstructor ) {\n\t\t\tif ( removePluginConstructors.includes( PluginConstructor ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// The plugin is already loaded or being loaded - do nothing.\n\t\t\tif ( that.get( PluginConstructor ) || loading.has( PluginConstructor ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn instantiatePlugin( PluginConstructor )\n\t\t\t\t.catch( err => {\n\t\t\t\t\t/**\n\t\t\t\t\t * It was not possible to load the plugin.\n\t\t\t\t\t *\n\t\t\t\t\t * @error plugincollection-load\n\t\t\t\t\t * @param {String} plugin The name of the plugin that could not be loaded.\n\t\t\t\t\t */\n\t\t\t\t\tlog.error( 'plugincollection-load: It was not possible to load the plugin.', { plugin: PluginConstructor } );\n\n\t\t\t\t\tthrow err;\n\t\t\t\t} );\n\t\t}\n\n\t\tfunction instantiatePlugin( PluginConstructor ) {\n\t\t\treturn new Promise( resolve => {\n\t\t\t\tloading.add( PluginConstructor );\n\n\t\t\t\tif ( PluginConstructor.requires ) {\n\t\t\t\t\tPluginConstructor.requires.forEach( RequiredPluginConstructorOrName => {\n\t\t\t\t\t\tconst RequiredPluginConstructor = getPluginConstructor( RequiredPluginConstructorOrName );\n\n\t\t\t\t\t\tif ( removePlugins.includes( RequiredPluginConstructor ) ) {\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * Cannot load a plugin because one of its dependencies is listed in the `removePlugins` option.\n\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t * @error plugincollection-required\n\t\t\t\t\t\t\t * @param {Function} plugin The required plugin.\n\t\t\t\t\t\t\t * @param {Function} requiredBy The parent plugin.\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t\t\t\t'plugincollection-required: Cannot load a plugin because one of its dependencies is listed in' +\n\t\t\t\t\t\t\t\t'the `removePlugins` option.',\n\t\t\t\t\t\t\t\t{ plugin: RequiredPluginConstructor, requiredBy: PluginConstructor }\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tloadPlugin( RequiredPluginConstructor );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\tconst plugin = new PluginConstructor( editor );\n\t\t\t\tthat._add( PluginConstructor, plugin );\n\t\t\t\tloaded.push( plugin );\n\n\t\t\t\tresolve();\n\t\t\t} );\n\t\t}\n\n\t\tfunction getPluginConstructor( PluginConstructorOrName ) {\n\t\t\tif ( typeof PluginConstructorOrName == 'function' ) {\n\t\t\t\treturn PluginConstructorOrName;\n\t\t\t}\n\n\t\t\treturn that._availablePlugins.get( PluginConstructorOrName );\n\t\t}\n\n\t\tfunction getMissingPluginNames( plugins ) {\n\t\t\tconst missingPlugins = [];\n\n\t\t\tfor ( const pluginNameOrConstructor of plugins ) {\n\t\t\t\tif ( !getPluginConstructor( pluginNameOrConstructor ) ) {\n\t\t\t\t\tmissingPlugins.push( pluginNameOrConstructor );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn missingPlugins.length ? missingPlugins : null;\n\t\t}\n\n\t\tfunction mapToAvailableConstructors( plugins ) {\n\t\t\treturn plugins\n\t\t\t\t.map( pluginNameOrConstructor => getPluginConstructor( pluginNameOrConstructor ) )\n\t\t\t\t.filter( PluginConstructor => !!PluginConstructor );\n\t\t}\n\t}\n\n\t/**\n\t * Adds the plugin to the collection. Exposed mainly for testing purposes.\n\t *\n\t * @protected\n\t * @param {Function} PluginConstructor The plugin constructor.\n\t * @param {module:core/plugin~PluginInterface} plugin The instance of the plugin.\n\t */\n\t_add( PluginConstructor, plugin ) {\n\t\tthis._plugins.set( PluginConstructor, plugin );\n\n\t\tif ( PluginConstructor.pluginName ) {\n\t\t\tthis._plugins.set( PluginConstructor.pluginName, plugin );\n\t\t}\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-core/src/plugincollection.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module editor-classic/classic\n */\n\nimport StandardEditor from '@ckeditor/ckeditor5-core/src/editor/standardeditor';\nimport HtmlDataProcessor from '@ckeditor/ckeditor5-engine/src/dataprocessor/htmldataprocessor';\nimport ClassicEditorUI from './classiceditorui';\nimport ClassicEditorUIView from './classiceditoruiview';\nimport ElementReplacer from '@ckeditor/ckeditor5-utils/src/elementreplacer';\n\nimport '../theme/theme.scss';\n\n/**\n * Classic editor. Uses inline editable and sticky toolbar, all\n * enclosed in a boxed UI.\n *\n * @extends module:core/editor/standardeditor~StandardEditor\n */\nexport default class ClassicEditor extends StandardEditor {\n\t/**\n\t * Creates an instance of the classic editor.\n\t *\n\t * @param {HTMLElement} element The DOM element that will be the source for the created editor.\n\t * The data will be loaded from it and loaded back to it once the editor is destroyed.\n\t * @param {Object} config The editor configuration.\n\t */\n\tconstructor( element, config ) {\n\t\tsuper( element, config );\n\n\t\tthis.document.createRoot();\n\t\tthis.data.processor = new HtmlDataProcessor();\n\t\tthis.ui = new ClassicEditorUI( this, new ClassicEditorUIView( this.locale ) );\n\n\t\t/**\n\t\t * The element replacer instance used to hide the editor element.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:utils/elementreplacer~ElementReplacer}\n\t\t */\n\t\tthis._elementReplacer = new ElementReplacer();\n\t}\n\n\t/**\n\t * Destroys the editor instance, releasing all resources used by it.\n\t *\n\t * Updates the original editor element with the data.\n\t *\n\t * @returns {Promise}\n\t */\n\tdestroy() {\n\t\tthis.updateEditorElement();\n\t\tthis._elementReplacer.restore();\n\n\t\treturn this.ui.destroy()\n\t\t\t.then( () => super.destroy() );\n\t}\n\n\t/**\n\t * Creates a classic editor instance.\n\t *\n\t *\t\tClassicEditor.create( document.querySelector( '#editor' ), {\n\t *\t\t\tplugins: [ Delete, Enter, Typing, Paragraph, Undo, Bold, Italic ],\n\t *\t\t\ttoolbar: [ 'bold', 'italic', 'undo', 'redo' ]\n\t *\t\t} )\n\t *\t\t.then( editor => {\n\t *\t\t\tconsole.log( 'Editor was initialized', editor );\n\t *\t\t} )\n\t *\t\t.catch( err => {\n\t *\t\t\tconsole.error( err.stack );\n\t *\t\t} );\n\t *\n\t * @param {HTMLElement} element See {@link module:editor-classic/classic~ClassicEditor#constructor}'s parameters.\n\t * @param {Object} config See {@link module:editor-classic/classic~ClassicEditor#constructor}'s parameters.\n\t * @returns {Promise} A promise resolved once the editor is ready.\n\t * @returns {module:core/editor/standardeditor~StandardEditor} return.editor The editor instance.\n\t */\n\tstatic create( element, config ) {\n\t\treturn new Promise( resolve => {\n\t\t\tconst editor = new this( element, config );\n\n\t\t\tresolve(\n\t\t\t\teditor.initPlugins()\n\t\t\t\t\t.then( () => editor._elementReplacer.replace( element, editor.ui.view.element ) )\n\t\t\t\t\t.then( () => editor.ui.init() )\n\t\t\t\t\t.then( () => editor.fire( 'uiReady' ) )\n\t\t\t\t\t.then( () => editor.editing.view.attachDomRoot( editor.ui.view.editableElement ) )\n\t\t\t\t\t.then( () => editor.loadDataFromEditorElement() )\n\t\t\t\t\t.then( () => {\n\t\t\t\t\t\teditor.fire( 'dataReady' );\n\t\t\t\t\t\teditor.fire( 'ready' );\n\t\t\t\t\t} )\n\t\t\t\t\t.then( () => editor )\n\t\t\t);\n\t\t} );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-editor-classic/src/classic.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module editor-classic/classiceditorui\n */\n\nimport ComponentFactory from '@ckeditor/ckeditor5-ui/src/componentfactory';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport enableToolbarKeyboardFocus from '@ckeditor/ckeditor5-ui/src/toolbar/enabletoolbarkeyboardfocus';\n\n/**\n * The classic editor UI class.\n *\n * @implements module:core/editor/editorui~EditorUI\n */\nexport default class ClassicEditorUI {\n\t/**\n\t * Creates an instance of the editor UI class.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor The editor instance.\n\t * @param {module:ui/editorui/editoruiview~EditorUIView} view View of the ui.\n\t */\n\tconstructor( editor, view ) {\n\t\t/**\n\t\t * @inheritDoc\n\t\t */\n\t\tthis.editor = editor;\n\n\t\t/**\n\t\t * @inheritDoc\n\t\t */\n\t\tthis.view = view;\n\n\t\t/**\n\t\t * @inheritDoc\n\t\t */\n\t\tthis.componentFactory = new ComponentFactory( editor );\n\n\t\t/**\n\t\t * @inheritDoc\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t// Set–up the view.\n\t\tview.set( 'width', editor.config.get( 'ui.width' ) );\n\t\tview.set( 'height', editor.config.get( 'ui.height' ) );\n\n\t\t// Set–up the toolbar.\n\t\tview.toolbar.bind( 'isActive' ).to( this.focusTracker, 'isFocused' );\n\t\tview.toolbar.limiterElement = view.element;\n\n\t\t// Setup the editable.\n\t\tconst editingRoot = editor.editing.createRoot( 'div' );\n\t\tview.editable.bind( 'isReadOnly' ).to( editingRoot );\n\t\tview.editable.bind( 'isFocused' ).to( editor.editing.view );\n\t\tview.editable.name = editingRoot.rootName;\n\t\tthis.focusTracker.add( view.editableElement );\n\t}\n\n\t/**\n\t * Initializes the UI.\n\t *\n\t * @returns {Promise} A Promise resolved when the initialization process is finished.\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\treturn this.view.init()\n\t\t\t.then( () => {\n\t\t\t\treturn this.view.toolbar.fillFromConfig( editor.config.get( 'toolbar' ), this.componentFactory );\n\t\t\t} )\n\t\t\t.then( () => {\n\t\t\t\tenableToolbarKeyboardFocus( {\n\t\t\t\t\torigin: editor.editing.view,\n\t\t\t\t\toriginFocusTracker: this.focusTracker,\n\t\t\t\t\toriginKeystrokeHandler: editor.keystrokes,\n\t\t\t\t\ttoolbar: this.view.toolbar\n\t\t\t\t} );\n\t\t\t} );\n\t}\n\n\t/**\n\t * Destroys the UI.\n\t *\n\t * @returns {Promise} A Promise resolved when the destruction process is finished.\n\t */\n\tdestroy() {\n\t\treturn this.view.destroy();\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-editor-classic/src/classiceditorui.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module editor-classic/classiceditoruiview\n */\n\nimport BoxedEditorUIView from '@ckeditor/ckeditor5-ui/src/editorui/boxed/boxededitoruiview';\nimport InlineEditableUIView from '@ckeditor/ckeditor5-ui/src/editableui/inline/inlineeditableuiview';\nimport StickyToolbarView from '@ckeditor/ckeditor5-ui/src/toolbar/sticky/stickytoolbarview';\nimport Template from '@ckeditor/ckeditor5-ui/src/template';\n\n/**\n * Classic editor UI view. Uses inline editable and sticky toolbar, all\n * enclosed in a boxed UI view.\n *\n * @extends module:ui/editorui/boxed/boxededitoruiview~BoxedEditorUIView\n */\nexport default class ClassicEditorUIView extends BoxedEditorUIView {\n\t/**\n\t * Creates an instance of the classic editor UI view.\n\t *\n\t * @param {module:utils/locale~Locale} locale The {@link module:core/editor/editor~Editor#locale} instance.\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * A sticky toolbar view instance.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/toolbar/sticky/stickytoolbarview~StickyToolbarView}\n\t\t */\n\t\tthis.toolbar = new StickyToolbarView( locale );\n\n\t\tTemplate.extend( this.toolbar.template, {\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-editor-toolbar'\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * Editable UI view.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/editableui/inline/inlineeditableuiview~InlineEditableUIView}\n\t\t */\n\t\tthis.editable = new InlineEditableUIView( locale );\n\n\t\tthis.top.add( this.toolbar );\n\t\tthis.main.add( this.editable );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget editableElement() {\n\t\treturn this.editable.element;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-editor-classic/src/classiceditoruiview.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/controller/datacontroller\n */\n\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\n\nimport Mapper from '../conversion/mapper';\n\nimport ModelConversionDispatcher from '../conversion/modelconversiondispatcher';\nimport { insertText } from '../conversion/model-to-view-converters';\n\nimport ViewConversionDispatcher from '../conversion/viewconversiondispatcher';\nimport { convertText, convertToModelFragment } from '../conversion/view-to-model-converters';\n\nimport ViewDocumentFragment from '../view/documentfragment';\n\nimport ModelRange from '../model/range';\nimport ModelPosition from '../model/position';\n\nimport insertContent from './insertcontent';\nimport deleteContent from './deletecontent';\nimport modifySelection from './modifyselection';\nimport getSelectedContent from './getselectedcontent';\n\n/**\n * Controller for the data pipeline. The data pipeline controls how data is retrieved from the document\n * and set inside it. Hence, the controller features two methods which allow to {@link ~DataController#get get}\n * and {@link ~DataController#set set} data of the {@link ~DataController#model model}\n * using given:\n *\n * * {@link module:engine/dataprocessor/dataprocessor~DataProcessor data processor},\n * * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher model to view} and\n * * {@link module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher view to model} converters.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\nexport default class DataController {\n\t/**\n\t * Creates data controller instance.\n\t *\n\t * @param {module:engine/model/document~Document} model Document model.\n\t * @param {module:engine/dataprocessor/dataprocessor~DataProcessor} [dataProcessor] Data processor which should used by the controller.\n\t */\n\tconstructor( model, dataProcessor ) {\n\t\t/**\n\t\t * Document model.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/document~Document}\n\t\t */\n\t\tthis.model = model;\n\n\t\t/**\n\t\t * Data processor used during the conversion.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/dataProcessor~DataProcessor}\n\t\t */\n\t\tthis.processor = dataProcessor;\n\n\t\t/**\n\t\t * Mapper used for the conversion. It has no permanent bindings, because they are created when getting data and\n\t\t * cleared directly after data are converted. However, the mapper is defined as class property, because\n\t\t * it needs to be passed to the `ModelConversionDispatcher` as a conversion API.\n\t\t *\n\t\t * @member {module:engine/conversion/mapper~Mapper}\n\t\t */\n\t\tthis.mapper = new Mapper();\n\n\t\t/**\n\t\t * Model to view conversion dispatcher used by the {@link #get get method}.\n\t\t * To attach model to view converter to the data pipeline you need to add lister to this property:\n\t\t *\n\t\t *\t\tdata.modelToView( 'insert:$element', customInsertConverter );\n\t\t *\n\t\t * Or use {@link module:engine/conversion/buildmodelconverter~ModelConverterBuilder}:\n\t\t *\n\t\t *\t\tbuildModelConverter().for( data.modelToView ).fromAttribute( 'bold' ).toElement( 'b' );\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher}\n\t\t */\n\t\tthis.modelToView = new ModelConversionDispatcher( this.model, {\n\t\t\tmapper: this.mapper\n\t\t} );\n\t\tthis.modelToView.on( 'insert:$text', insertText(), { priority: 'lowest' } );\n\n\t\t/**\n\t\t * View to model conversion dispatcher used by the {@link #set set method}.\n\t\t * To attach view to model converter to the data pipeline you need to add lister to this property:\n\t\t *\n\t\t *\t\tdata.viewToModel( 'element', customElementConverter );\n\t\t *\n\t\t * Or use {@link module:engine/conversion/buildviewconverter~ViewConverterBuilder}:\n\t\t *\n\t\t *\t\tbuildViewConverter().for( data.viewToModel ).fromElement( 'b' ).toAttribute( 'bold', 'true' );\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher}\n\t\t */\n\t\tthis.viewToModel = new ViewConversionDispatcher( {\n\t\t\tschema: model.schema\n\t\t} );\n\n\t\t// Define default converters for text and elements.\n\t\t//\n\t\t// Note that if there is no default converter for the element it will be skipped, for instance `<b>foo</b>` will be\n\t\t// converted to nothing. We add `convertToModelFragment` as a last converter so it converts children of that\n\t\t// element to the document fragment so `<b>foo</b>` will be converted to `foo` if there is no converter for `<b>`.\n\t\tthis.viewToModel.on( 'text', convertText(), { priority: 'lowest' } );\n\t\tthis.viewToModel.on( 'element', convertToModelFragment(), { priority: 'lowest' } );\n\t\tthis.viewToModel.on( 'documentFragment', convertToModelFragment(), { priority: 'lowest' } );\n\n\t\tthis.on( 'insertContent', ( evt, data ) => insertContent( this, data.content, data.selection, data.batch ) );\n\t\tthis.on( 'deleteContent', ( evt, data ) => deleteContent( data.selection, data.batch, data.options ) );\n\t\tthis.on( 'modifySelection', ( evt, data ) => modifySelection( this, data.selection, data.options ) );\n\t\tthis.on( 'getSelectedContent', ( evt, data ) => {\n\t\t\tdata.content = getSelectedContent( data.selection );\n\t\t} );\n\t}\n\n\t/**\n\t * Returns model's data converted by the {@link #modelToView model to view converters} and\n\t * formatted by the {@link #processor data processor}.\n\t *\n\t * @param {String} [rootName='main'] Root name.\n\t * @returns {String} Output data.\n\t */\n\tget( rootName = 'main' ) {\n\t\t// Get model range.\n\t\treturn this.stringify( this.model.getRoot( rootName ) );\n\t}\n\n\t/**\n\t * Returns the content of the given {@link module:engine/model/element~Element model's element} or\n\t * {@link module:engine/model/documentfragment~DocumentFragment model document fragment} converted by the\n\t * {@link #modelToView model to view converters} and formatted by the\n\t * {@link #processor data processor}.\n\t *\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} modelElementOrFragment\n\t * Element which content will be stringified.\n\t * @returns {String} Output data.\n\t */\n\tstringify( modelElementOrFragment ) {\n\t\t// model -> view\n\t\tconst viewDocumentFragment = this.toView( modelElementOrFragment );\n\n\t\t// view -> data\n\t\treturn this.processor.toData( viewDocumentFragment );\n\t}\n\n\t/**\n\t * Returns the content of the given {@link module:engine/model/element~Element model element} or\n\t * {@link module:engine/model/documentfragment~DocumentFragment model document fragment} converted by the\n\t * {@link #modelToView model to view converters} to a\n\t * {@link module:engine/view/documentfragment~DocumentFragment view document fragment}.\n\t *\n\t * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} modelElementOrFragment\n\t * Element or document fragment which content will be converted.\n\t * @returns {module:engine/view/documentfragment~DocumentFragment} Output view DocumentFragment.\n\t */\n\ttoView( modelElementOrFragment ) {\n\t\tconst modelRange = ModelRange.createIn( modelElementOrFragment );\n\n\t\tconst viewDocumentFragment = new ViewDocumentFragment();\n\t\tthis.mapper.bindElements( modelElementOrFragment, viewDocumentFragment );\n\n\t\tthis.modelToView.convertInsertion( modelRange );\n\n\t\tthis.mapper.clearBindings();\n\n\t\treturn viewDocumentFragment;\n\t}\n\n\t/**\n\t * Sets input data parsed by the {@link #processor data processor} and\n\t * converted by the {@link #viewToModel view to model converters}.\n\t *\n\t * This method also creates a batch with all the changes applied. If all you need is to parse data use\n\t * the {@link #parse} method.\n\t *\n\t * @param {String} data Input data.\n\t * @param {String} [rootName='main'] Root name.\n\t */\n\tset( data, rootName = 'main' ) {\n\t\t// Save to model.\n\t\tconst modelRoot = this.model.getRoot( rootName );\n\n\t\tthis.model.enqueueChanges( () => {\n\t\t\t// Clearing selection is a workaround for ticket #569 (LiveRange loses position after removing data from document).\n\t\t\t// After fixing it this code should be removed.\n\t\t\tthis.model.selection.removeAllRanges();\n\t\t\tthis.model.selection.clearAttributes();\n\n\t\t\t// Initial batch should be ignored by features like undo, etc.\n\t\t\tthis.model.batch( 'transparent' )\n\t\t\t\t.remove( ModelRange.createIn( modelRoot ) )\n\t\t\t\t.insert( ModelPosition.createAt( modelRoot, 0 ), this.parse( data ) );\n\t\t} );\n\t}\n\n\t/**\n\t * Returns data parsed by the {@link #processor data processor} and then\n\t * converted by the {@link #viewToModel view to model converters}.\n\t *\n\t * @see #set\n\t * @param {String} data Data to parse.\n\t * @param {String} [context='$root'] Base context in which the view will be converted to the model. See:\n\t * {@link module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher#convert}.\n\t * @returns {module:engine/model/documentfragment~DocumentFragment} Parsed data.\n\t */\n\tparse( data, context = '$root' ) {\n\t\t// data -> view\n\t\tconst viewDocumentFragment = this.processor.toView( data );\n\n\t\t// view -> model\n\t\treturn this.toModel( viewDocumentFragment, context );\n\t}\n\n\t/**\n\t * Returns wrapped by {module:engine/model/documentfragment~DocumentFragment} result of the given\n\t * {@link module:engine/view/element~Element view element} or\n\t * {@link module:engine/view/documentfragment~DocumentFragment view document fragment} converted by the\n\t * {@link #viewToModel view to model converters}.\n\t *\n\t * When marker stamps were converted during conversion process then will be set as DocumentFragment's\n\t * {@link module:engine/model/documentfragment~DocumentFragment#markers static markers map}.\n\t *\n\t * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} viewElementOrFragment\n\t * Element or document fragment which content will be converted.\n\t * @param {String} [context='$root'] Base context in which the view will be converted to the model. See:\n\t * {@link module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher#convert}.\n\t * @returns {module:engine/model/documentfragment~DocumentFragment} Output document fragment.\n\t */\n\ttoModel( viewElementOrFragment, context = '$root' ) {\n\t\treturn this.viewToModel.convert( viewElementOrFragment, { context: [ context ] } );\n\t}\n\n\t/**\n\t * Removes all event listeners set by the DataController.\n\t */\n\tdestroy() {}\n\n\t/**\n\t * See {@link module:engine/controller/insertcontent~insertContent}.\n\t *\n\t * @fires insertContent\n\t * @param {module:engine/model/documentfragment~DocumentFragment|module:engine/model/item~Item} content The content to insert.\n\t * @param {module:engine/model/selection~Selection} selection Selection into which the content should be inserted.\n\t * @param {module:engine/model/batch~Batch} [batch] Batch to which deltas will be added. If not specified, then\n\t * changes will be added to a new batch.\n\t */\n\tinsertContent( content, selection, batch ) {\n\t\tthis.fire( 'insertContent', { content, selection, batch } );\n\t}\n\n\t/**\n\t * See {@link module:engine/controller/deletecontent~deleteContent}.\n\t *\n\t * Note: For the sake of predictability, the resulting selection should always be collapsed.\n\t * In cases where a feature wants to modify deleting behavior so selection isn't collapsed\n\t * (e.g. a table feature may want to keep row selection after pressing <kbd>Backspace</kbd>),\n\t * then that behavior should be implemented in the view's listener. At the same time, the table feature\n\t * will need to modify this method's behavior too, e.g. to \"delete contents and then collapse\n\t * the selection inside the last selected cell\" or \"delete the row and collapse selection somewhere near\".\n\t * That needs to be done in order to ensure that other features which use `deleteContent()` will work well with tables.\n\t *\n\t * @fires deleteContent\n\t * @param {module:engine/model/selection~Selection} selection Selection of which the content should be deleted.\n\t * @param {module:engine/model/batch~Batch} batch Batch to which deltas will be added.\n\t * @param {Object} options See {@link module:engine/controller/deletecontent~deleteContent}'s options.\n\t */\n\tdeleteContent( selection, batch, options ) {\n\t\tthis.fire( 'deleteContent', { batch, selection, options } );\n\t}\n\n\t/**\n\t * See {@link module:engine/controller/modifyselection~modifySelection}.\n\t *\n\t * @fires modifySelection\n\t * @param {module:engine/model/selection~Selection} selection The selection to modify.\n\t * @param {Object} options See {@link module:engine/controller/modifyselection~modifySelection}'s options.\n\t */\n\tmodifySelection( selection, options ) {\n\t\tthis.fire( 'modifySelection', { selection, options } );\n\t}\n\n\t/**\n\t * See {@link module:engine/controller/getselectedcontent~getSelectedContent}.\n\t *\n\t * @fires module:engine/controller/datacontroller~DataController#getSelectedContent\n\t * @param {module:engine/model/selection~Selection} selection The selection of which content will be retrieved.\n\t * @returns {module:engine/model/documentfragment~DocumentFragment} Document fragment holding the clone of the selected content.\n\t */\n\tgetSelectedContent( selection ) {\n\t\tconst evtData = { selection };\n\n\t\tthis.fire( 'getSelectedContent', evtData );\n\n\t\treturn evtData.content;\n\t}\n}\n\nmix( DataController, EmitterMixin );\n\n/**\n * Event fired when {@link #insertContent} method is called.\n * The {@link #insertContent default action of that method} is implemented as a\n * listener to this event so it can be fully customized by the features.\n *\n * @event insertContent\n * @param {Object} data\n * @param {module:engine/view/documentfragment~DocumentFragment|module:engine/model/item~Item} data.content The content to insert.\n * @param {module:engine/model/selection~Selection} data.selection Selection into which the content should be inserted.\n * @param {module:engine/model/batch~Batch} [data.batch] Batch to which deltas will be added.\n */\n\n/**\n * Event fired when {@link #deleteContent} method is called.\n * The {@link module:engine/controller/deletecontent~deleteContent default action of that method} is implemented as a\n * listener to this event so it can be fully customized by the features.\n *\n * @event deleteContent\n * @param {Object} data\n * @param {module:engine/model/batch~Batch} data.batch\n * @param {module:engine/model/selection~Selection} data.selection\n * @param {Object} data.options See {@link module:engine/controller/deletecontent~deleteContent}'s options.\n */\n\n/**\n * Event fired when {@link #modifySelection} method is called.\n * The {@link module:engine/controller/modifyselection~modifySelection default action of that method} is implemented as a\n * listener to this event so it can be fully customized by the features.\n *\n * @event modifySelection\n * @param {Object} data\n * @param {module:engine/model/selection~Selection} data.selection\n * @param {Object} data.options See {@link module:engine/controller/modifyselection~modifySelection}'s options.\n */\n\n/**\n * Event fired when {@link module:engine/controller/datacontroller~DataController#getSelectedContent} method is called.\n * The {@link module:engine/controller/getselectedcontent~getSelectedContent default action of that method} is implemented as a\n * listener to this event so it can be fully customized by the features.\n *\n * @event module:engine/controller/datacontroller~DataController#getSelectedContent\n * @param {Object} data\n * @param {module:engine/model/selection~Selection} data.selection\n * @param {module:engine/model/documentfragment~DocumentFragment} data.content The document fragment to return\n * (holding a clone of the selected content).\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/controller/datacontroller.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/controller/deletecontent\n */\n\nimport LivePosition from '../model/liveposition';\nimport Position from '../model/position';\nimport Range from '../model/range';\nimport Element from '../model/element';\n\n/**\n * Deletes content of the selection and merge siblings. The resulting selection is always collapsed.\n *\n * @param {module:engine/model/selection~Selection} selection Selection of which the content should be deleted.\n * @param {module:engine/model/batch~Batch} batch Batch to which the deltas will be added.\n * @param {Object} [options]\n * @param {Boolean} [options.merge=false] Merge elements after removing the contents of the selection.\n * For example, `<h>x[x</h><p>y]y</p>` will become: `<h>x^y</h>` with the option enabled\n * and: `<h>x^</h><p>y</p>` without it.\n * Note: {@link module:engine/model/schema~Schema#objects object} and {@link module:engine/model/schema~Schema#limits limit}\n * elements will not be merged.\n */\nexport default function deleteContent( selection, batch, options = {} ) {\n\tif ( selection.isCollapsed ) {\n\t\treturn;\n\t}\n\n\tconst selRange = selection.getFirstRange();\n\n\tconst startPos = selRange.start;\n\tconst endPos = LivePosition.createFromPosition( selRange.end );\n\n\t// 1. Remove the contents if there are any.\n\tif ( !selRange.start.isTouching( selRange.end ) ) {\n\t\tbatch.remove( selRange );\n\t}\n\n\t// 2. Merge elements in the right branch to the elements in the left branch.\n\t// The only reasonable (in terms of data and selection correctness) case in which we need to do that is:\n\t//\n\t// <heading type=1>Fo[</heading><paragraph>]ar</paragraph> => <heading type=1>Fo^ar</heading>\n\t//\n\t// However, the algorithm supports also merging deeper structures (up to the depth of the shallower branch),\n\t// as it's hard to imagine what should actually be the default behavior. Usually, specific features will\n\t// want to override that behavior anyway.\n\tif ( options.merge ) {\n\t\tmergeBranches( batch, startPos, endPos );\n\t}\n\n\tselection.collapse( startPos );\n\n\t// 3. Autoparagraphing.\n\t// Check if a text is allowed in the new container. If not, try to create a new paragraph (if it's allowed here).\n\tif ( shouldAutoparagraph( batch.document, startPos ) ) {\n\t\tconst paragraph = new Element( 'paragraph' );\n\t\tbatch.insert( startPos, paragraph );\n\n\t\tselection.collapse( paragraph );\n\t}\n\n\tendPos.detach();\n}\n\n// This function is a result of reaching the Ballmer's peak for just the right amount of time.\n// Even I had troubles documenting it after a while and after reading it again I couldn't believe that it really works.\nfunction mergeBranches( batch, startPos, endPos ) {\n\tconst startParent = startPos.parent;\n\tconst endParent = endPos.parent;\n\n\t// If both positions ended up in the same parent, then there's nothing more to merge:\n\t// <$root><p>x[]</p><p>{}y</p></$root> => <$root><p>xy</p>[]{}</$root>\n\tif ( startParent == endParent ) {\n\t\treturn;\n\t}\n\n\t// If one of the positions is a root, then there's nothing more to merge (at least in the current state of implementation).\n\t// Theoretically in this case we could unwrap the <p>: <$root>x[]<p>{}y</p></$root>, but we don't need to support it yet\n\t// so let's just abort.\n\tif ( !startParent.parent || !endParent.parent ) {\n\t\treturn;\n\t}\n\n\t// Check if operations we'll need to do won't need to cross object or limit boundaries.\n\t// E.g., we can't merge endParent into startParent in this case:\n\t// <limit><startParent>x[]</startParent></limit><endParent>{}</endParent>\n\tif ( !checkCanBeMerged( startPos, endPos ) ) {\n\t\treturn;\n\t}\n\n\t// Remember next positions to merge. For example:\n\t// <a><b>x[]</b></a><c><d>{}y</d></c>\n\t// will become:\n\t// <a><b>xy</b>[]</a><c>{}</c>\n\tstartPos = Position.createAfter( startParent );\n\tendPos = Position.createBefore( endParent );\n\n\tif ( endParent.isEmpty ) {\n\t\tbatch.remove( endParent );\n\t} else {\n\t\t// At the moment, next startPos is also the position to which the endParent\n\t\t// needs to be moved:\n\t\t// <a><b>x[]</b></a><c><d>{}y</d></c>\n\t\t// becomes:\n\t\t// <a><b>x</b>[]<d>y</d></a><c>{}</c>\n\n\t\t// Move the end parent only if needed.\n\t\t// E.g. not in this case: <p>ab</p>[]{}<p>cd</p>\n\t\tif ( !endPos.isEqual( startPos ) ) {\n\t\t\tbatch.move( endParent, startPos );\n\t\t}\n\n\t\t// To then become:\n\t\t// <a><b>xy</b>[]</a><c>{}</c>\n\t\tbatch.merge( startPos );\n\t}\n\n\t// Removes empty end ancestors:\n\t// <a>fo[o</a><b><a><c>bar]</c></a></b>\n\t// becomes:\n\t// <a>fo[]</a><b><a>{}</a></b>\n\t// So we can remove <a> and <b>.\n\twhile ( endPos.parent.isEmpty ) {\n\t\tconst parentToRemove = endPos.parent;\n\n\t\tendPos = Position.createBefore( parentToRemove );\n\n\t\tbatch.remove( parentToRemove );\n\t}\n\n\t// Continue merging next level.\n\tmergeBranches( batch, startPos, endPos );\n}\n\nfunction shouldAutoparagraph( doc, position ) {\n\tconst isTextAllowed = doc.schema.check( { name: '$text', inside: position } );\n\tconst isParagraphAllowed = doc.schema.check( { name: 'paragraph', inside: position } );\n\n\treturn !isTextAllowed && isParagraphAllowed;\n}\n\n// Check if parents of two positions can be merged by checking if there are no limit/object\n// boundaries between those two positions.\n//\n// E.g. in <bQ><p>x[]</p></bQ><widget><caption>{}</caption></widget>\n// we'll check <p>, <bQ>, <widget> and <caption>.\n// Usually, widget and caption are marked as objects/limits in the schema, so in this case merging will be blocked.\nfunction checkCanBeMerged( leftPos, rightPos ) {\n\tconst schema = leftPos.root.document.schema;\n\tconst rangeToCheck = new Range( leftPos, rightPos );\n\n\tfor ( const value of rangeToCheck.getWalker() ) {\n\t\tif ( schema.objects.has( value.item.name ) || schema.limits.has( value.item.name ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/controller/deletecontent.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/controller/editingcontroller\n */\n\nimport ViewDocument from '../view/document';\nimport Mapper from '../conversion/mapper';\nimport ModelConversionDispatcher from '../conversion/modelconversiondispatcher';\nimport {\n\tinsertText,\n\tremove\n} from '../conversion/model-to-view-converters';\nimport { convertSelectionChange } from '../conversion/view-selection-to-model-converters';\nimport {\n\tconvertRangeSelection,\n\tconvertCollapsedSelection,\n\tclearAttributes,\n\tclearFakeSelection\n} from '../conversion/model-selection-to-view-converters';\n\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\n\n/**\n * Controller for the editing pipeline. The editing pipeline controls {@link ~EditingController#model model} rendering,\n * including selection handling. It also creates {@link ~EditingController#view view document} which build a\n * browser-independent virtualization over the DOM elements. Editing controller also attach default converters.\n */\nexport default class EditingController {\n\t/**\n\t * Creates editing controller instance.\n\t *\n\t * @param {module:engine/model/document~Document} model Document model.\n\t */\n\tconstructor( model ) {\n\t\t/**\n\t\t * Document model.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/document~Document}\n\t\t */\n\t\tthis.model = model;\n\n\t\t/**\n\t\t * View document.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/document~Document}\n\t\t */\n\t\tthis.view = new ViewDocument();\n\n\t\t/**\n\t\t * Mapper which describes model-view binding.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/conversion/mapper~Mapper}\n\t\t */\n\t\tthis.mapper = new Mapper();\n\n\t\t/**\n\t\t * Model to view conversion dispatcher, which converts changes from the model to\n\t\t * {@link #view editing view}.\n\t\t *\n\t\t * To attach model to view converter to the editing pipeline you need to add lister to this property:\n\t\t *\n\t\t *\t\tediting.modelToView( 'insert:$element', customInsertConverter );\n\t\t *\n\t\t * Or use {@link module:engine/conversion/buildmodelconverter~ModelConverterBuilder}:\n\t\t *\n\t\t *\t\tbuildModelConverter().for( editing.modelToView ).fromAttribute( 'bold' ).toElement( 'b' );\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher} #modelToView\n\t\t */\n\t\tthis.modelToView = new ModelConversionDispatcher( this.model, {\n\t\t\tmapper: this.mapper,\n\t\t\tviewSelection: this.view.selection\n\t\t} );\n\n\t\t/**\n\t\t * Property keeping all listenters attached by controller on other objects, so it can\n\t\t * stop listening on {@link #destroy}.\n\t\t *\n\t\t * @private\n\t\t * @member {utils.EmitterMixin} #_listenter\n\t\t */\n\t\tthis._listener = Object.create( EmitterMixin );\n\n\t\t// Convert changes in model to view.\n\t\tthis._listener.listenTo( this.model, 'change', ( evt, type, changes ) => {\n\t\t\tthis.modelToView.convertChange( type, changes );\n\t\t}, { priority: 'low' } );\n\n\t\t// Convert model selection to view.\n\t\tthis._listener.listenTo( this.model, 'changesDone', () => {\n\t\t\tconst selection = this.model.selection;\n\n\t\t\tthis.modelToView.convertSelection( selection );\n\t\t\tthis.view.render();\n\t\t}, { priority: 'low' } );\n\n\t\t// Convert model markers changes.\n\t\tthis._listener.listenTo( this.model.markers, 'add', ( evt, marker ) => {\n\t\t\tthis.modelToView.convertMarker( 'addMarker', marker.name, marker.getRange() );\n\t\t} );\n\n\t\tthis._listener.listenTo( this.model.markers, 'remove', ( evt, marker ) => {\n\t\t\tthis.modelToView.convertMarker( 'removeMarker', marker.name, marker.getRange() );\n\t\t} );\n\n\t\t// Convert view selection to model.\n\t\tthis._listener.listenTo( this.view, 'selectionChange', convertSelectionChange( this.model, this.mapper ) );\n\n\t\t// Attach default content converters.\n\t\tthis.modelToView.on( 'insert:$text', insertText(), { priority: 'lowest' } );\n\t\tthis.modelToView.on( 'remove', remove(), { priority: 'low' } );\n\n\t\t// Attach default selection converters.\n\t\tthis.modelToView.on( 'selection', clearAttributes(), { priority: 'low' } );\n\t\tthis.modelToView.on( 'selection', clearFakeSelection(), { priority: 'low' } );\n\t\tthis.modelToView.on( 'selection', convertRangeSelection(), { priority: 'low' } );\n\t\tthis.modelToView.on( 'selection', convertCollapsedSelection(), { priority: 'low' } );\n\t}\n\n\t/**\n\t * {@link module:engine/view/document~Document#createRoot Creates} a view root\n\t * and {@link module:engine/conversion/mapper~Mapper#bindElements binds}\n\t * the model root with view root and and view root with DOM element:\n\t *\n\t *\t\tediting.createRoot( document.querySelector( div#editor ) );\n\t *\n\t * If the DOM element is not available at the time you want to create a view root, for instance it is iframe body\n\t * element, it is possible to create view element and bind the DOM element later:\n\t *\n\t *\t\tediting.createRoot( 'body' );\n\t *\t\tediting.view.attachDomRoot( iframe.contentDocument.body );\n\t *\n\t * @param {Element|String} domRoot DOM root element or the name of view root element if the DOM element will be\n\t * attached later.\n\t * @param {String} [name='main'] Root name.\n\t * @returns {module:engine/view/containerelement~ContainerElement} View root element.\n\t */\n\tcreateRoot( domRoot, name = 'main' ) {\n\t\tconst viewRoot = this.view.createRoot( domRoot, name );\n\t\tconst modelRoot = this.model.getRoot( name );\n\n\t\tthis.mapper.bindElements( modelRoot, viewRoot );\n\n\t\treturn viewRoot;\n\t}\n\n\t/**\n\t * Removes all event listeners attached to the `EditingController`. Destroys all objects created\n\t * by `EditingController` that need to be destroyed.\n\t */\n\tdestroy() {\n\t\tthis.view.destroy();\n\t\tthis._listener.stopListening();\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/controller/editingcontroller.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/controller/getselectedcontent\n */\n\nimport DocumentFragment from '../model/documentfragment';\nimport Range from '../model/range';\nimport Position from '../model/position';\nimport Text from '../model/text';\nimport { remove } from '../model/writer';\n\n/**\n * Gets a clone of the selected content.\n *\n * For example, for the following selection:\n *\n *\t\t<p>x</p><quote><p>y</p><h>fir[st</h></quote><p>se]cond</p><p>z</p>\n *\n * It will return a document fragment with such a content:\n *\n *\t\t<quote><h>st</h></quote><p>se</p>\n *\n * @param {module:engine/model/selection~Selection} selection The selection of which content will be returned.\n * @returns {module:engine/model/documentfragment~DocumentFragment}\n */\nexport default function getSelectedContent( selection ) {\n\tconst frag = new DocumentFragment();\n\tconst range = selection.getFirstRange();\n\n\tif ( !range || range.isCollapsed ) {\n\t\treturn frag;\n\t}\n\n\tconst root = range.start.root;\n\tconst commonPath = range.start.getCommonPath( range.end );\n\tconst commonParent = root.getNodeByPath( commonPath );\n\n\t// ## 1st step\n\t//\n\t// First, we'll clone a fragment represented by a minimal flat range\n\t// containing the original range to be cloned.\n\t// E.g. let's consider such a range:\n\t//\n\t// <p>x</p><quote><p>y</p><h>fir[st</h></quote><p>se]cond</p><p>z</p>\n\t//\n\t// A minimal flat range containing this one is:\n\t//\n\t// <p>x</p>[<quote><p>y</p><h>first</h></quote><p>second</p>]<p>z</p>\n\t//\n\t// We can easily clone this structure, preserving e.g. the <quote> element.\n\tlet flatSubtreeRange;\n\n\tif ( range.start.parent == range.end.parent ) {\n\t\t// The original range is flat, so take it.\n\t\tflatSubtreeRange = range;\n\t} else {\n\t\tflatSubtreeRange = Range.createFromParentsAndOffsets(\n\t\t\tcommonParent, range.start.path[ commonPath.length ],\n\t\t\tcommonParent, range.end.path[ commonPath.length ] + 1\n\t\t);\n\t}\n\n\tconst howMany = flatSubtreeRange.end.offset - flatSubtreeRange.start.offset;\n\n\t// Clone the whole contents.\n\tfor ( const item of flatSubtreeRange.getItems( { shallow: true } ) ) {\n\t\tif ( item.is( 'textProxy' ) ) {\n\t\t\tfrag.appendChildren( new Text( item.data, item.getAttributes() ) );\n\t\t} else {\n\t\t\tfrag.appendChildren( item.clone( true ) );\n\t\t}\n\t}\n\n\t// ## 2nd step\n\t//\n\t// If the original range wasn't flat, then we need to remove the excess nodes from the both ends of the cloned fragment.\n\t//\n\t// For example, for the range shown in the 1st step comment, we need to remove these pieces:\n\t//\n\t// <quote>[<p>y</p>]<h>[fir]st</h></quote><p>se[cond]</p>\n\t//\n\t// So this will be the final copied content:\n\t//\n\t// <quote><h>st</h></quote><p>se</p>\n\t//\n\t// In order to do that, we remove content from these two ranges:\n\t//\n\t// [<quote><p>y</p><h>fir]st</h></quote><p>se[cond</p>]\n\tif ( flatSubtreeRange != range ) {\n\t\t// Find the position of the original range in the cloned fragment.\n\t\tconst newRange = range._getTransformedByMove( flatSubtreeRange.start, Position.createAt( frag, 0 ), howMany )[ 0 ];\n\n\t\tconst leftExcessRange = new Range( Position.createAt( frag ), newRange.start );\n\t\tconst rightExcessRange = new Range( newRange.end, Position.createAt( frag, 'end' ) );\n\n\t\tremoveRangeContent( rightExcessRange );\n\t\tremoveRangeContent( leftExcessRange );\n\t}\n\n\treturn frag;\n}\n\n// After https://github.com/ckeditor/ckeditor5-engine/issues/690 is fixed,\n// this function will, most likely, be able to rewritten using getMinimalFlatRanges().\nfunction removeRangeContent( range ) {\n\tconst parentsToCheck = [];\n\n\tArray.from( range.getItems( { direction: 'backward' } ) )\n\t\t// We should better store ranges because text proxies will lose integrity\n\t\t// with the text nodes when we'll start removing content.\n\t\t.map( item => Range.createOn( item ) )\n\t\t// Filter only these items which are fully contained in the passed range.\n\t\t//\n\t\t// E.g. for the following range: [<quote><p>y</p><h>fir]st</h>\n\t\t// the walker will return the entire <h> element, when only the \"fir\" item inside it is fully contained.\n\t\t.filter( itemRange => {\n\t\t\t// We should be able to use Range.containsRange, but https://github.com/ckeditor/ckeditor5-engine/issues/691.\n\t\t\tconst contained =\n\t\t\t\t( itemRange.start.isAfter( range.start ) || itemRange.start.isEqual( range.start ) ) &&\n\t\t\t\t( itemRange.end.isBefore( range.end ) || itemRange.end.isEqual( range.end ) );\n\n\t\t\treturn contained;\n\t\t} )\n\t\t.forEach( itemRange => {\n\t\t\tparentsToCheck.push( itemRange.start.parent );\n\n\t\t\tremove( itemRange );\n\t\t} );\n\n\t// Remove ancestors of the removed items if they turned to be empty now\n\t// (their whole content was contained in the range).\n\tparentsToCheck.forEach( parentToCheck => {\n\t\tlet parent = parentToCheck;\n\n\t\twhile ( parent.parent && parent.isEmpty ) {\n\t\t\tconst removeRange = Range.createOn( parent );\n\n\t\t\tparent = parent.parent;\n\n\t\t\tremove( removeRange );\n\t\t}\n\t} );\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/controller/getselectedcontent.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/controller/insertcontent\n */\n\nimport Position from '../model/position';\nimport LivePosition from '../model/liveposition';\nimport Element from '../model/element';\nimport Range from '../model/range';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\n\n/**\n * Inserts content into the editor (specified selection) as one would expect the paste\n * functionality to work.\n *\n * **Note:** Use {@link module:engine/controller/datacontroller~DataController#insertContent} instead of this function.\n * This function is only exposed to be reusable in algorithms\n * which change the {@link module:engine/controller/datacontroller~DataController#insertContent}\n * method's behavior.\n *\n * @param {module:engine/controller/datacontroller~DataController} dataController The data controller in context of which the insertion\n * should be performed.\n * @param {module:engine/model/documentfragment~DocumentFragment|module:engine/model/item~Item} content The content to insert.\n * @param {module:engine/model/selection~Selection} selection Selection into which the content should be inserted.\n * @param {module:engine/model/batch~Batch} [batch] Batch to which deltas will be added. If not specified, then\n * changes will be added to a new batch.\n */\nexport default function insertContent( dataController, content, selection, batch ) {\n\tif ( !batch ) {\n\t\tbatch = dataController.model.batch();\n\t}\n\n\tif ( !selection.isCollapsed ) {\n\t\tdataController.deleteContent( selection, batch, {\n\t\t\tmerge: true\n\t\t} );\n\t}\n\n\tconst insertion = new Insertion( dataController, batch, selection.anchor );\n\n\tlet nodesToInsert;\n\n\tif ( content.is( 'documentFragment' ) ) {\n\t\tnodesToInsert = content.getChildren();\n\t} else {\n\t\tnodesToInsert = [ content ];\n\t}\n\n\tinsertion.handleNodes( nodesToInsert, {\n\t\t// The set of children being inserted is the only set in this context\n\t\t// so it's the first and last (it's a hack ;)).\n\t\tisFirst: true,\n\t\tisLast: true\n\t} );\n\n\tconst newRange = insertion.getSelectionRange();\n\n\t/* istanbul ignore else */\n\tif ( newRange ) {\n\t\tselection.setRanges( [ newRange ] );\n\t} else {\n\t\t// We are not testing else because it's a safe check for unpredictable edge cases:\n\t\t// an insertion without proper range to select.\n\n\t\t/**\n\t\t * Cannot determine a proper selection range after insertion.\n\t\t *\n\t\t * @warning insertcontent-no-range\n\t\t */\n\t\tlog.warn( 'insertcontent-no-range: Cannot determine a proper selection range after insertion.' );\n\t}\n}\n\n/**\n * Utility class for performing content insertion.\n *\n * @private\n */\nclass Insertion {\n\tconstructor( dataController, batch, position ) {\n\t\t/**\n\t\t * The data controller in context of which the insertion should be performed.\n\t\t *\n\t\t * @member {module:engine/controller/datacontroller~DataController} #dataController\n\t\t */\n\t\tthis.dataController = dataController;\n\n\t\t/**\n\t\t * Batch to which deltas will be added.\n\t\t *\n\t\t * @member {module:engine/controller/batch~Batch} #batch\n\t\t */\n\t\tthis.batch = batch;\n\n\t\t/**\n\t\t * The position at which (or near which) the next node will be inserted.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} #position\n\t\t */\n\t\tthis.position = position;\n\n\t\t/**\n\t\t * Elements with which the inserted elements can be merged.\n\t\t *\n\t\t *\t\t<p>x^</p><p>y</p> + <p>z</p> (can merge to <p>x</p>)\n\t\t *\t\t<p>x</p><p>^y</p> + <p>z</p> (can merge to <p>y</p>)\n\t\t *\t\t<p>x^y</p> + <p>z</p> (can merge to <p>xy</p> which will be split during the action,\n\t\t *\t\t\t\t\t\t\t\tso both its pieces will be added to this set)\n\t\t *\n\t\t *\n\t\t * @member {Set} #canMergeWith\n\t\t */\n\t\tthis.canMergeWith = new Set( [ this.position.parent ] );\n\n\t\t/**\n\t\t * Schema of the model.\n\t\t *\n\t\t * @member {module:engine/model/schema~Schema} #schema\n\t\t */\n\t\tthis.schema = dataController.model.schema;\n\t}\n\n\t/**\n\t * Handles insertion of a set of nodes.\n\t *\n\t * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes to insert.\n\t * @param {Object} parentContext Context in which parent of these nodes was supposed to be inserted.\n\t * If the parent context is passed it means that the parent element was stripped (was not allowed).\n\t */\n\thandleNodes( nodes, parentContext ) {\n\t\tnodes = Array.from( nodes );\n\n\t\tfor ( let i = 0; i < nodes.length; i++ ) {\n\t\t\tconst node = nodes[ i ];\n\n\t\t\tthis._handleNode( node, {\n\t\t\t\tisFirst: i === 0 && parentContext.isFirst,\n\t\t\t\tisLast: ( i === ( nodes.length - 1 ) ) && parentContext.isLast\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Returns range to be selected after insertion.\n\t * Returns null if there is no valid range to select after insertion.\n\t *\n\t * @returns {module:engine/model/range~Range|null}\n\t */\n\tgetSelectionRange() {\n\t\tif ( this.nodeToSelect ) {\n\t\t\treturn Range.createOn( this.nodeToSelect );\n\t\t}\n\n\t\treturn this.dataController.model.getNearestSelectionRange( this.position );\n\t}\n\n\t/**\n\t * Handles insertion of a single node.\n\t *\n\t * @param {module:engine/model/node~Node} node\n\t * @param {Object} context\n\t * @param {Boolean} context.isFirst Whether the given node is the first one in the content to be inserted.\n\t * @param {Boolean} context.isLast Whether the given node is the last one in the content to be inserted.\n\t */\n\t_handleNode( node, context ) {\n\t\t// Let's handle object in a special way.\n\t\t// * They should never be merged with other elements.\n\t\t// * If they are not allowed in any of the selection ancestors, they could be either autoparagraphed or totally removed.\n\t\tif ( this._checkIsObject( node ) ) {\n\t\t\tthis._handleObject( node, context );\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Try to find a place for the given node.\n\t\t// Split the position.parent's branch up to a point where the node can be inserted.\n\t\t// If it isn't allowed in the whole branch, then of course don't split anything.\n\t\tconst isAllowed = this._checkAndSplitToAllowedPosition( node, context );\n\n\t\tif ( !isAllowed ) {\n\t\t\tthis._handleDisallowedNode( node, context );\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis._insert( node );\n\n\t\t// After the node was inserted we may try to merge it with its siblings.\n\t\t// This should happen only if it was the first and/or last of the nodes (so only with boundary nodes)\n\t\t// and only if the selection was in those elements initially.\n\t\t//\n\t\t// E.g.:\n\t\t// <p>x^</p> + <p>y</p> => <p>x</p><p>y</p> => <p>xy[]</p>\n\t\t// and:\n\t\t// <p>x^y</p> + <p>z</p> => <p>x</p>^<p>y</p> + <p>z</p> => <p>x</p><p>y</p><p>z</p> => <p>xy[]z</p>\n\t\t// but:\n\t\t// <p>x</p><p>^</p><p>z</p> + <p>y</p> => <p>x</p><p>y</p><p>z</p> (no merging)\n\t\t// <p>x</p>[<img>]<p>z</p> + <p>y</p> => <p>x</p><p>y</p><p>z</p> (no merging, note: after running deletetContents\n\t\t//\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t it's exactly the same case as above)\n\t\tthis._mergeSiblingsOf( node, context );\n\t}\n\n\t/**\n\t * @param {module:engine/model/element~Element} node The object element.\n\t * @param {Object} context\n\t */\n\t_handleObject( node, context ) {\n\t\t// Try finding it a place in the tree.\n\t\tif ( this._checkAndSplitToAllowedPosition( node ) ) {\n\t\t\tthis._insert( node );\n\t\t}\n\t\t// Try autoparagraphing.\n\t\telse {\n\t\t\tthis._tryAutoparagraphing( node, context );\n\t\t}\n\t}\n\n\t/**\n\t * @param {module:engine/model/node~Node} node The disallowed node which needs to be handled.\n\t * @param {Object} context\n\t */\n\t_handleDisallowedNode( node, context ) {\n\t\t// Try inserting its children (strip the parent).\n\t\tif ( node.is( 'element' ) ) {\n\t\t\tthis.handleNodes( node.getChildren(), context );\n\t\t}\n\t\t// Try autoparagraphing.\n\t\telse {\n\t\t\tthis._tryAutoparagraphing( node, context );\n\t\t}\n\t}\n\n\t/**\n\t * @param {module:engine/model/node~Node} node The node to insert.\n\t */\n\t_insert( node ) {\n\t\t/* istanbul ignore if */\n\t\tif ( !this._checkIsAllowed( node, [ this.position.parent ] ) ) {\n\t\t\t// Algorithm's correctness check. We should never end up here but it's good to know that we did.\n\t\t\t// Note that it would often be a silent issue if we insert node in a place where it's not allowed.\n\t\t\tlog.error(\n\t\t\t\t'insertcontent-wrong-position: The node cannot be inserted on the given position.',\n\t\t\t\t{ node, position: this.position }\n\t\t\t);\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst livePos = LivePosition.createFromPosition( this.position );\n\n\t\tthis.batch.insert( this.position, node );\n\n\t\tthis.position = Position.createFromPosition( livePos );\n\t\tlivePos.detach();\n\n\t\t// The last inserted object should be selected because we can't put a collapsed selection after it.\n\t\tif ( this._checkIsObject( node ) && !this.schema.check( { name: '$text', inside: [ this.position.parent ] } ) ) {\n\t\t\tthis.nodeToSelect = node;\n\t\t} else {\n\t\t\tthis.nodeToSelect = null;\n\t\t}\n\t}\n\n\t/**\n\t * @param {module:engine/model/node~Node} node The node which could potentially be merged.\n\t * @param {Object} context\n\t */\n\t_mergeSiblingsOf( node, context ) {\n\t\tif ( !( node instanceof Element ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst mergeLeft = context.isFirst && ( node.previousSibling instanceof Element ) && this.canMergeWith.has( node.previousSibling );\n\t\tconst mergeRight = context.isLast && ( node.nextSibling instanceof Element ) && this.canMergeWith.has( node.nextSibling );\n\t\tconst mergePosLeft = LivePosition.createBefore( node );\n\t\tconst mergePosRight = LivePosition.createAfter( node );\n\n\t\tif ( mergeLeft ) {\n\t\t\tconst position = LivePosition.createFromPosition( this.position );\n\n\t\t\tthis.batch.merge( mergePosLeft );\n\n\t\t\tthis.position = Position.createFromPosition( position );\n\t\t\tposition.detach();\n\t\t}\n\n\t\tif ( mergeRight ) {\n\t\t\t/* istanbul ignore if */\n\t\t\tif ( !this.position.isEqual( mergePosRight ) ) {\n\t\t\t\t// Algorithm's correctness check. We should never end up here but it's good to know that we did.\n\t\t\t\t// At this point the insertion position should be after the node we'll merge. If it isn't,\n\t\t\t\t// it should need to be secured as in the left merge case.\n\t\t\t\tlog.error( 'insertcontent-wrong-position-on-merge: The insertion position should equal the merge position' );\n\t\t\t}\n\n\t\t\t// Move the position to the previous node, so it isn't moved to the graveyard on merge.\n\t\t\t// <p>x</p>[]<p>y</p> => <p>x[]</p><p>y</p>\n\t\t\tthis.position = Position.createAt( mergePosRight.nodeBefore, 'end' );\n\n\t\t\t// OK:  <p>xx[]</p> + <p>yy</p> => <p>xx[]yy</p> (when sticks to previous)\n\t\t\t// NOK: <p>xx[]</p> + <p>yy</p> => <p>xxyy[]</p> (when sticks to next)\n\t\t\tconst position = new LivePosition( this.position.root, this.position.path, 'sticksToPrevious' );\n\n\t\t\tthis.batch.merge( mergePosRight );\n\n\t\t\tthis.position = Position.createFromPosition( position );\n\t\t\tposition.detach();\n\t\t}\n\n\t\tmergePosLeft.detach();\n\t\tmergePosRight.detach();\n\t}\n\n\t/**\n\t * Tries wrapping the node in a new paragraph and inserting it this way.\n\t *\n\t * @param {module:engine/model/node~Node} node The node which needs to be autoparagraphed.\n\t * @param {Object} context\n\t */\n\t_tryAutoparagraphing( node, context ) {\n\t\tconst paragraph = new Element( 'paragraph' );\n\n\t\t// Do not autoparagraph if the paragraph won't be allowed there,\n\t\t// cause that would lead to an infinite loop. The paragraph would be rejected in\n\t\t// the next _handleNode() call and we'd be here again.\n\t\tif ( this._getAllowedIn( paragraph, this.position.parent ) && this._checkIsAllowed( node, [ paragraph ] ) ) {\n\t\t\tparagraph.appendChildren( node );\n\n\t\t\tthis._handleNode( paragraph, context );\n\t\t}\n\t}\n\n\t/**\n\t * @param {module:engine/model/node~Node} node\n\t * @returns {Boolean} Whether an allowed position was found.\n\t * `false` is returned if the node isn't allowed at any position up in the tree, `true` if was.\n\t */\n\t_checkAndSplitToAllowedPosition( node ) {\n\t\tconst allowedIn = this._getAllowedIn( node, this.position.parent );\n\n\t\tif ( !allowedIn ) {\n\t\t\treturn false;\n\t\t}\n\n\t\twhile ( allowedIn != this.position.parent ) {\n\t\t\t// If a parent which we'd need to leave is a limit element, break.\n\t\t\tif ( this.schema.limits.has( this.position.parent.name ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif ( this.position.isAtStart ) {\n\t\t\t\tconst parent = this.position.parent;\n\t\t\t\tthis.position = Position.createBefore( parent );\n\n\t\t\t\t// Special case – parent is empty (<p>^</p>) so isAtStart == isAtEnd == true.\n\t\t\t\t// We can remove the element after moving selection out of it.\n\t\t\t\tif ( parent.isEmpty ) {\n\t\t\t\t\tthis.batch.remove( parent );\n\t\t\t\t}\n\t\t\t} else if ( this.position.isAtEnd ) {\n\t\t\t\tthis.position = Position.createAfter( this.position.parent );\n\t\t\t} else {\n\t\t\t\tconst tempPos = Position.createAfter( this.position.parent );\n\n\t\t\t\tthis.batch.split( this.position );\n\n\t\t\t\tthis.position = tempPos;\n\n\t\t\t\tthis.canMergeWith.add( this.position.nodeAfter );\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Gets the element in which the given node is allowed. It checks the passed element and all its ancestors.\n\t *\n\t * @param {module:engine/model/node~Node} node The node to check.\n\t * @param {module:engine/model/element~Element} element The element in which the node's correctness should be checked.\n\t * @returns {module:engine/model/element~Element|null}\n\t */\n\t_getAllowedIn( node, element ) {\n\t\tif ( this._checkIsAllowed( node, [ element ] ) ) {\n\t\t\treturn element;\n\t\t}\n\n\t\tif ( element.parent ) {\n\t\t\treturn this._getAllowedIn( node, element.parent );\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Check whether the given node is allowed in the specified schema path.\n\t *\n\t * @param {module:engine/model/node~Node} node\n\t * @param {module:engine/model/schema~SchemaPath} path\n\t */\n\t_checkIsAllowed( node, path ) {\n\t\treturn this.schema.check( {\n\t\t\tname: this._getNodeSchemaName( node ),\n\t\t\tattributes: Array.from( node.getAttributeKeys() ),\n\t\t\tinside: path\n\t\t} );\n\t}\n\n\t/**\n\t * Checks wether according to the schema this is an object type element.\n\t *\n\t * @param {module:engine/model/node~Node} node The node to check.\n\t */\n\t_checkIsObject( node ) {\n\t\treturn this.schema.objects.has( this._getNodeSchemaName( node ) );\n\t}\n\n\t/**\n\t * Gets a name under which we should check this node in the schema.\n\t *\n\t * @param {module:engine/model/node~Node} node The node.\n\t */\n\t_getNodeSchemaName( node ) {\n\t\tif ( node.is( 'text' ) ) {\n\t\t\treturn '$text';\n\t\t}\n\n\t\treturn node.name;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/controller/insertcontent.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/controller/modifyselection\n */\n\nimport Position from '../model/position';\nimport TreeWalker from '../model/treewalker';\nimport Range from '../model/range';\nimport { isInsideSurrogatePair, isInsideCombinedSymbol } from '@ckeditor/ckeditor5-utils/src/unicode';\n\n/**\n * Modifies the selection. Currently, the supported modifications are:\n *\n * * Extending. The selection focus is moved in the specified `options.direction` with a step specified in `options.unit`.\n * Possible values for `unit` are:\n *  * `'character'` (default) - moves selection by one user-perceived character. In most cases this means moving by one\n *  character in `String` sense. However, unicode also defines \"combing marks\". These are special symbols, that combines\n *  with a symbol before it (\"base character\") to create one user-perceived character. For example, `q̣̇` is a normal\n *  letter `q` with two \"combining marks\": upper dot (`Ux0307`) and lower dot (`Ux0323`). For most actions, i.e. extending\n *  selection by one position, it is correct to include both \"base character\" and all of it's \"combining marks\". That is\n *  why `'character'` value is most natural and common method of modifying selection.\n *  * `'codePoint'` - moves selection by one unicode code point. In contrary to, `'character'` unit, this will insert\n *  selection between \"base character\" and \"combining mark\", because \"combining marks\" have their own unicode code points.\n *  However, for technical reasons, unicode code points with values above `UxFFFF` are represented in native `String` by\n *  two characters, called \"surrogate pairs\". Halves of \"surrogate pairs\" have a meaning only when placed next to each other.\n *  For example `𨭎` is represented in `String` by `\\uD862\\uDF4E`. Both `\\uD862` and `\\uDF4E` do not have any meaning\n *  outside the pair (are rendered as ? when alone). Position between them would be incorrect. In this case, selection\n *  extension will include whole \"surrogate pair\".\n *\n * **Note:** if you extend a forward selection in a backward direction you will in fact shrink it.\n *\n * @param {module:engine/controller/datacontroller~DataController} dataController The data controller in context of which\n * the selection modification should be performed.\n * @param {module:engine/model/selection~Selection} selection The selection to modify.\n * @param {Object} [options]\n * @param {'forward'|'backward'} [options.direction='forward'] The direction in which the selection should be modified.\n * @param {'character'|'codePoint'} [options.unit='character'] The unit by which selection should be modified.\n */\nexport default function modifySelection( dataController, selection, options = {} ) {\n\tconst schema = dataController.model.schema;\n\tconst isForward = options.direction != 'backward';\n\tconst unit = options.unit ? options.unit : 'character';\n\n\tconst focus = selection.focus;\n\tconst walker = new TreeWalker( {\n\t\tboundaries: getSearchRange( focus, isForward ),\n\t\tsingleCharacters: true,\n\t\tdirection: isForward ? 'forward' : 'backward'\n\t} );\n\n\tconst data = { walker, schema, isForward, unit };\n\n\tlet next;\n\n\twhile ( ( next = walker.next() ) ) {\n\t\tif ( next.done ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst position = tryExtendingTo( data, next.value );\n\n\t\tif ( position ) {\n\t\t\tselection.setFocus( position );\n\n\t\t\treturn;\n\t\t}\n\t}\n}\n\n// Checks whether the selection can be extended to the the walker's next value (next position).\nfunction tryExtendingTo( data, value ) {\n\t// If found text, we can certainly put the focus in it. Let's just find a correct position\n\t// based on the unit.\n\tif ( value.type == 'text' ) {\n\t\treturn getCorrectPosition( data.walker, data.unit );\n\t}\n\n\t// Entering an element.\n\tif ( value.type == ( data.isForward ? 'elementStart' : 'elementEnd' ) ) {\n\t\t// If it's an object, we can select it now.\n\t\tif ( data.schema.objects.has( value.item.name ) ) {\n\t\t\treturn Position.createAt( value.item, data.isForward ? 'after' : 'before' );\n\t\t}\n\n\t\t// If text allowed on this position, extend to this place.\n\t\tif ( data.schema.check( { name: '$text', inside: value.nextPosition } ) ) {\n\t\t\treturn value.nextPosition;\n\t\t}\n\t}\n\t// Leaving an element.\n\telse {\n\t\t// If leaving a limit element, stop.\n\t\tif ( data.schema.limits.has( value.item.name ) ) {\n\t\t\t// NOTE: Fast-forward the walker until the end.\n\t\t\tdata.walker.skip( () => true );\n\n\t\t\treturn;\n\t\t}\n\n\t\t// If text allowed on this position, extend to this place.\n\t\tif ( data.schema.check( { name: '$text', inside: value.nextPosition } ) ) {\n\t\t\treturn value.nextPosition;\n\t\t}\n\t}\n}\n\n// Finds a correct position by walking in a text node and checking whether selection can be extended to given position\n// or should be extended further.\nfunction getCorrectPosition( walker, unit ) {\n\tconst textNode = walker.position.textNode;\n\n\tif ( textNode ) {\n\t\tconst data = textNode.data;\n\t\tlet offset = walker.position.offset - textNode.startOffset;\n\n\t\twhile ( isInsideSurrogatePair( data, offset ) || ( unit == 'character' && isInsideCombinedSymbol( data, offset ) ) ) {\n\t\t\twalker.next();\n\n\t\t\toffset = walker.position.offset - textNode.startOffset;\n\t\t}\n\t}\n\n\treturn walker.position;\n}\n\nfunction getSearchRange( start, isForward ) {\n\tconst root = start.root;\n\tconst searchEnd = Position.createAt( root, isForward ? 'end' : 0 );\n\n\tif ( isForward ) {\n\t\treturn new Range( start, searchEnd );\n\t} else {\n\t\treturn new Range( searchEnd, start );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/controller/modifyselection.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/conversion/modelconsumable\n */\n\nimport TextProxy from '../model/textproxy';\n\n/**\n * Manages a list of consumable values for {@link module:engine/model/item~Item model items}.\n *\n * Consumables are various aspects of the model. A model item can be broken down into singular properties that might be\n * taken into consideration when converting that item.\n *\n * `ModelConsumable` is used by {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher} while analyzing changed\n * parts of {@link module:engine/model/document~Document the document}. The added / changed / removed model items are broken down\n * into singular properties (the item itself and it's attributes). All those parts are saved in `ModelConsumable`. Then,\n * during conversion, when given part of model item is converted (i.e. the view element has been inserted into the view,\n * but without attributes), consumable value is removed from `ModelConsumable`.\n *\n * For model items, `ModelConsumable` stores consumable values of one of following types: `insert`, `addAttribute:<attributeKey>`,\n * `changeAttribute:<attributeKey>`, `removeAttribute:<attributeKey>`.\n *\n * In most cases, it is enough to let {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher}\n * gather consumable values, so there is no need to use\n * @link module:engine/conversion/modelconsumable~ModelConsumable#add add method} directly.\n * However, it is important to understand how consumable values can be\n * {@link module:engine/conversion/modelconsumable~ModelConsumable#consume consumed}.\n * See {@link module:engine/conversion/model-selection-to-view-converters default model to view converters} for more information.\n *\n * Keep in mind, that one conversion event may have multiple callbacks (converters) attached to it. Each of those is\n * able to convert one or more parts of the model. However, when one of those callbacks actually converts\n * something, other should not, because they would duplicate the results. Using `ModelConsumable` helps avoiding\n * this situation, because callbacks should only convert those values, which were not yet consumed from `ModelConsumable`.\n *\n * Consuming multiple values in a single callback:\n *\n *\t\t// Converter for custom `image` element that might have a `caption` element inside which changes\n *\t\t// how the image is displayed in the view:\n *\t\t//\n *\t\t// Model:\n *\t\t//\n *\t\t// [image]\n *\t\t//   └─ [caption]\n *\t\t//       └─ foo\n *\t\t//\n *\t\t// View:\n *\t\t//\n *\t\t// <figure>\n *\t\t//   ├─ <img />\n *\t\t//   └─ <caption>\n *\t\t//       └─ foo\n *\t\tmodelConversionDispatcher.on( 'insert:image', ( evt, data, consumable, conversionApi ) => {\n *\t\t\t// First, consume the `image` element.\n *\t\t\tconsumable.consume( data.item, 'insert' );\n *\n *\t\t\t// Just create normal image element for the view.\n *\t\t\t// Maybe it will be \"decorated\" later.\n *\t\t\tconst viewImage = new ViewElement( 'img' );\n *\t\t\tconst insertPosition = conversionApi.mapper.toViewPosition( data.range.start );\n *\n *\t\t\t// Check if the `image` element has children.\n *\t\t\tif ( data.item.childCount > 0 ) {\n *\t\t\t\tconst modelCaption = data.item.getChild( 0 );\n *\n *\t\t\t\t// `modelCaption` insertion change is consumed from consumable values.\n *\t\t\t\t// It will not be converted by other converters, but it's children (probably some text) will be.\n *\t\t\t\t// Through mapping, converters for text will know where to insert contents of `modelCaption`.\n *\t\t\t\tif ( consumable.consume( modelCaption, 'insert' ) ) {\n *\t\t\t\t\tconst viewCaption = new ViewElement( 'figcaption' );\n *\n *\t\t\t\t\tconst viewImageHolder = new ViewElement( 'figure', null, [ viewImage, viewCaption ] );\n *\n *\t\t\t\t\tconversionApi.mapper.bindElements( modelCaption, viewCaption );\n *\t\t\t\t\tconversionApi.mapper.bindElements( data.item, viewImageHolder );\n *\t\t\t\t\tviewWriter.insert( insertPosition, viewImageHolder );\n *\t\t\t\t}\n *\t\t\t} else {\n *\t\t\t\tconversionApi.mapper.bindElements( data.item, viewImage );\n *\t\t\t\tviewWriter.insert( insertPosition, viewImage );\n *\t\t\t}\n *\n *\t\t\tevt.stop();\n *\t\t} );\n */\nexport default class ModelConsumable {\n\t/**\n\t * Creates an empty consumables list.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Contains list of consumable values.\n\t\t *\n\t\t * @private\n\t\t * @member {Map} module:engine/conversion/modelconsumable~ModelConsumable#_consumable\n\t\t */\n\t\tthis._consumable = new Map();\n\n\t\t/**\n\t\t * For each {@link module:engine/model/textproxy~TextProxy} added to `ModelConsumable`, this registry holds parent\n\t\t * of that `TextProxy` and start and end indices of that `TextProxy`. This allows identification of `TextProxy`\n\t\t * instances that points to the same part of the model but are different instances. Each distinct `TextProxy`\n\t\t * is given unique `Symbol` which is then registered as consumable. This process is transparent for `ModelConsumable`\n\t\t * API user because whenever `TextProxy` is added, tested, consumed or reverted, internal mechanisms of\n\t\t * `ModelConsumable` translates `TextProxy` to that unique `Symbol`.\n\t\t *\n\t\t * @private\n\t\t * @member {Map} module:engine/conversion/modelconsumable~ModelConsumable#_textProxyRegistry\n\t\t */\n\t\tthis._textProxyRegistry = new Map();\n\t}\n\n\t/**\n\t * Adds a consumable value to the consumables list and links it with given model item.\n\t *\n\t *\t\tmodelConsumable.add( modelElement, 'insert' ); // Add `modelElement` insertion change to consumable values.\n\t *\t\tmodelConsumable.add( modelElement, 'addAttribute:bold' ); // Add `bold` attribute insertion on `modelElement` change.\n\t *\t\tmodelConsumable.add( modelElement, 'removeAttribute:bold' ); // Add `bold` attribute removal on `modelElement` change.\n\t *\t\tmodelConsumable.add( modelSelection, 'selection' ); // Add `modelSelection` to consumable values.\n\t *\t\tmodelConsumable.add( modelSelection, 'selectionAttribute:bold' ); // Add `bold` attribute on `modelSelection` to consumables.\n\t *\t\tmodelConsumable.add( modelRange, 'range' ); // Add `modelRange` to consumable values.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\n\t * Model item, range or selection that has the consumable.\n\t * @param {String} type Consumable type.\n\t */\n\tadd( item, type ) {\n\t\tif ( item instanceof TextProxy ) {\n\t\t\titem = this._getSymbolForTextProxy( item );\n\t\t}\n\n\t\tif ( !this._consumable.has( item ) ) {\n\t\t\tthis._consumable.set( item, new Map() );\n\t\t}\n\n\t\tthis._consumable.get( item ).set( type, true );\n\t}\n\n\t/**\n\t * Removes given consumable value from given model item.\n\t *\n\t *\t\tmodelConsumable.consume( modelElement, 'insert' ); // Remove `modelElement` insertion change from consumable values.\n\t *\t\tmodelConsumable.consume( modelElement, 'addAttribute:bold' ); // Remove `bold` attribute insertion on `modelElement` change.\n\t *\t\tmodelConsumable.consume( modelElement, 'removeAttribute:bold' ); // Remove `bold` attribute removal on `modelElement` change.\n\t *\t\tmodelConsumable.consume( modelSelection, 'selection' ); // Remove `modelSelection` from consumable values.\n\t *\t\tmodelConsumable.consume( modelSelection, 'selectionAttribute:bold' ); // Remove `bold` on `modelSelection` from consumables.\n\t *\t\tmodelConsumable.consume( modelRange, 'range' ); // Remove 'modelRange' from consumable values.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\n\t * Model item, range or selection from which consumable will be consumed.\n\t * @param {String} type Consumable type.\n\t * @returns {Boolean} `true` if consumable value was available and was consumed, `false` otherwise.\n\t */\n\tconsume( item, type ) {\n\t\tif ( item instanceof TextProxy ) {\n\t\t\titem = this._getSymbolForTextProxy( item );\n\t\t}\n\n\t\tif ( this.test( item, type ) ) {\n\t\t\tthis._consumable.get( item ).set( type, false );\n\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Tests whether there is a consumable value of given type connected with given model item.\n\t *\n\t *\t\tmodelConsumable.test( modelElement, 'insert' ); // Check for `modelElement` insertion change.\n\t *\t\tmodelConsumable.test( modelElement, 'addAttribute:bold' ); // Check for `bold` attribute insertion on `modelElement` change.\n\t *\t\tmodelConsumable.test( modelElement, 'removeAttribute:bold' ); // Check for `bold` attribute removal on `modelElement` change.\n\t *\t\tmodelConsumable.test( modelSelection, 'selection' ); // Check if `modelSelection` is consumable.\n\t *\t\tmodelConsumable.test( modelSelection, 'selectionAttribute:bold' ); // Check if `bold` on `modelSelection` is consumable.\n\t *\t\tmodelConsumable.test( modelRange, 'range' ); // Check if `modelRange` is consumable.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\n\t * Model item, range or selection to be tested.\n\t * @param {String} type Consumable type.\n\t * @returns {null|Boolean} `null` if such consumable was never added, `false` if the consumable values was\n\t * already consumed or `true` if it was added and not consumed yet.\n\t */\n\ttest( item, type ) {\n\t\tif ( item instanceof TextProxy ) {\n\t\t\titem = this._getSymbolForTextProxy( item );\n\t\t}\n\n\t\tconst itemConsumables = this._consumable.get( item );\n\n\t\tif ( itemConsumables === undefined ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst value = itemConsumables.get( type );\n\n\t\tif ( value === undefined ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * Reverts consuming of consumable value.\n\t *\n\t *\t\tmodelConsumable.revert( modelElement, 'insert' ); // Revert consuming `modelElement` insertion change.\n\t *\t\tmodelConsumable.revert( modelElement, 'addAttribute:bold' ); // Revert consuming `bold` attribute insert from `modelElement`.\n\t *\t\tmodelConsumable.revert( modelElement, 'removeAttribute:bold' ); // Revert consuming `bold` attribute remove from `modelElement`.\n\t *\t\tmodelConsumable.revert( modelSelection, 'selection' ); // Revert consuming `modelSelection`.\n\t *\t\tmodelConsumable.revert( modelSelection, 'selectionAttribute:bold' ); // Revert consuming `bold` from `modelSelection`.\n\t *\t\tmodelConsumable.revert( modelRange, 'range' ); // Revert consuming `modelRange`.\n\t *\n\t * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\n\t * Model item, range or selection to be reverted.\n\t * @param {String} type Consumable type.\n\t * @returns {null|Boolean} `true` if consumable has been reversed, `false` otherwise. `null` if the consumable has\n\t * never been added.\n\t */\n\trevert( item, type ) {\n\t\tif ( item instanceof TextProxy ) {\n\t\t\titem = this._getSymbolForTextProxy( item );\n\t\t}\n\n\t\tconst test = this.test( item, type );\n\n\t\tif ( test === false ) {\n\t\t\tthis._consumable.get( item ).set( type, true );\n\n\t\t\treturn true;\n\t\t} else if ( test === true ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Gets a unique symbol for passed {@link module:engine/model/textproxy~TextProxy} instance. All `TextProxy` instances that\n\t * have same parent, same start index and same end index will get the same symbol.\n\t *\n\t * Used internally to correctly consume `TextProxy` instances.\n\t *\n\t * @private\n\t * @param {module:engine/model/textproxy~TextProxy} textProxy `TextProxy` instance to get a symbol for.\n\t * @returns {Symbol} Symbol representing all equal instances of `TextProxy`.\n\t */\n\t_getSymbolForTextProxy( textProxy ) {\n\t\tlet symbol = null;\n\n\t\tconst startMap = this._textProxyRegistry.get( textProxy.startOffset );\n\n\t\tif ( startMap ) {\n\t\t\tconst endMap = startMap.get( textProxy.endOffset );\n\n\t\t\tif ( endMap ) {\n\t\t\t\tsymbol = endMap.get( textProxy.parent );\n\t\t\t}\n\t\t}\n\n\t\tif ( !symbol ) {\n\t\t\tsymbol = this._addSymbolForTextProxy( textProxy.startOffset, textProxy.endOffset, textProxy.parent );\n\t\t}\n\n\t\treturn symbol;\n\t}\n\n\t/**\n\t * Adds a symbol for given properties that characterizes a {@link module:engine/model/textproxy~TextProxy} instance.\n\t *\n\t * Used internally to correctly consume `TextProxy` instances.\n\t *\n\t * @private\n\t * @param {Number} startIndex Text proxy start index in it's parent.\n\t * @param {Number} endIndex Text proxy end index in it's parent.\n\t * @param {module:engine/model/element~Element} parent Text proxy parent.\n\t * @returns {Symbol} Symbol generated for given properties.\n\t */\n\t_addSymbolForTextProxy( start, end, parent ) {\n\t\tconst symbol = Symbol( 'textProxySymbol' );\n\t\tlet startMap, endMap;\n\n\t\tstartMap = this._textProxyRegistry.get( start );\n\n\t\tif ( !startMap ) {\n\t\t\tstartMap = new Map();\n\t\t\tthis._textProxyRegistry.set( start, startMap );\n\t\t}\n\n\t\tendMap = startMap.get( end );\n\n\t\tif ( !endMap ) {\n\t\t\tendMap = new Map();\n\t\t\tstartMap.set( end, endMap );\n\t\t}\n\n\t\tendMap.set( parent, symbol );\n\n\t\treturn symbol;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/conversion/modelconsumable.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * Contains {@link module:engine/view/selection~Selection view selection}\n * to {@link module:engine/model/selection~Selection model selection} conversion helpers.\n *\n * @module engine/conversion/view-selection-to-model-converters\n */\n\nimport ModelSelection from '../model/selection';\n\n/**\n * Function factory, creates a callback function which converts a {@link module:engine/view/selection~Selection view selection} taken\n * from the {@link module:engine/view/document~Document#event:selectionChange} event\n * and sets in on the {@link module:engine/model/document~Document#selection model}.\n *\n * **Note**: because there is no view selection change dispatcher nor any other advanced view selection to model\n * conversion mechanism, the callback should be set directly on view document.\n *\n *\t\tview.document.on( 'selectionChange', convertSelectionChange( modelDocument, mapper ) );\n *\n * @param {module:engine/model/document~Document} modelDocument Model document on which selection should be updated.\n * @param {module:engine/conversion/mapper~Mapper} mapper Conversion mapper.\n * @returns {Function} {@link module:engine/view/document~Document#event:selectionChange} callback function.\n */\nexport function convertSelectionChange( modelDocument, mapper ) {\n\treturn ( evt, data ) => {\n\t\tconst viewSelection = data.newSelection;\n\t\tconst modelSelection = new ModelSelection();\n\n\t\tconst ranges = [];\n\n\t\tfor ( const viewRange of viewSelection.getRanges() ) {\n\t\t\tranges.push( mapper.toModelRange( viewRange ) );\n\t\t}\n\n\t\tmodelSelection.setRanges( ranges, viewSelection.isBackward );\n\n\t\tif ( !modelSelection.isEqual( modelDocument.selection ) ) {\n\t\t\tmodelDocument.enqueueChanges( () => {\n\t\t\t\tmodelDocument.selection.setTo( modelSelection );\n\t\t\t} );\n\t\t}\n\t};\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/conversion/view-selection-to-model-converters.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\nimport ModelDocumentFragment from '../model/documentfragment';\nimport ModelText from '../model/text';\nimport { normalizeNodes } from '../model/writer';\n\n/**\n * Contains {@link module:engine/view/view view} to {@link module:engine/model/model model} converters for\n * {@link module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher}.\n *\n * @module engine/conversion/view-to-model-converters\n */\n\n/**\n * Function factory, creates a converter that converts {@link module:engine/view/documentfragment~DocumentFragment view document fragment}\n * or all children of {@link module:engine/view/element~Element} into\n * {@link module:engine/model/documentfragment~DocumentFragment model document fragment}.\n * This is the \"entry-point\" converter for view to model conversion. This converter starts the conversion of all children\n * of passed view document fragment. Those children {@link module:engine/view/node~Node view nodes} are then handled by other converters.\n *\n * This also a \"default\", last resort converter for all view elements that has not been converted by other converters.\n * When a view element is being converted to the model but it does not have converter specified, that view element\n * will be converted to {@link module:engine/model/documentfragment~DocumentFragment model document fragment} and returned.\n *\n * @returns {Function} Universal converter for view {@link module:engine/view/documentfragment~DocumentFragment fragments} and\n * {@link module:engine/view/element~Element elements} that returns\n * {@link module:engine/model/documentfragment~DocumentFragment model fragment} with children of converted view item.\n */\nexport function convertToModelFragment() {\n\treturn ( evt, data, consumable, conversionApi ) => {\n\t\t// Second argument in `consumable.consume` is discarded for ViewDocumentFragment but is needed for ViewElement.\n\t\tif ( !data.output && consumable.consume( data.input, { name: true } ) ) {\n\t\t\tconst convertedChildren = conversionApi.convertChildren( data.input, consumable, data );\n\n\t\t\tdata.output = new ModelDocumentFragment( normalizeNodes( convertedChildren ) );\n\t\t}\n\t};\n}\n\n/**\n * Function factory, creates a converter that converts {@link module:engine/view/text~Text} to {@link module:engine/model/text~Text}.\n *\n * @returns {Function} {@link module:engine/view/text~Text View text} converter.\n */\nexport function convertText() {\n\treturn ( evt, data, consumable, conversionApi ) => {\n\t\tconst schemaQuery = {\n\t\t\tname: '$text',\n\t\t\tinside: data.context\n\t\t};\n\n\t\tif ( conversionApi.schema.check( schemaQuery ) ) {\n\t\t\tif ( consumable.consume( data.input ) ) {\n\t\t\t\tdata.output = new ModelText( data.input.data );\n\t\t\t}\n\t\t}\n\t};\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/conversion/view-to-model-converters.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/conversion/viewconsumable\n */\n\nimport isArray from '@ckeditor/ckeditor5-utils/src/lib/lodash/isArray';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Class used for handling consumption of view {@link module:engine/view/element~Element elements},\n * {@link module:engine/view/text~Text text nodes} and {@link module:engine/view/documentfragment~DocumentFragment document fragments}.\n * Element's name and its parts (attributes, classes and styles) can be consumed separately. Consuming an element's name\n * does not consume its attributes, classes and styles.\n * To add items for consumption use {@link module:engine/conversion/viewconsumable~ViewConsumable#add add method}.\n * To test items use {@link module:engine/conversion/viewconsumable~ViewConsumable#test test method}.\n * To consume items use {@link module:engine/conversion/viewconsumable~ViewConsumable#consume consume method}.\n * To revert already consumed items use {@link module:engine/conversion/viewconsumable~ViewConsumable#revert revert method}.\n *\n *\t\tviewConsumable.add( element, { name: true } ); // Adds element's name as ready to be consumed.\n *\t\tviewConsumable.add( textNode ); // Adds text node for consumption.\n *\t\tviewConsumable.add( docFragment ); // Adds document fragment for consumption.\n *\t\tviewConsumable.test( element, { name: true }  ); // Tests if element's name can be consumed.\n *\t\tviewConsumable.test( textNode ); // Tests if text node can be consumed.\n *\t\tviewConsumable.test( docFragment ); // Tests if document fragment can be consumed.\n *\t\tviewConsumable.consume( element, { name: true }  ); // Consume element's name.\n *\t\tviewConsumable.consume( textNode ); // Consume text node.\n *\t\tviewConsumable.consume( docFragment ); // Consume document fragment.\n *\t\tviewConsumable.revert( element, { name: true }  ); // Revert already consumed element's name.\n *\t\tviewConsumable.revert( textNode ); // Revert already consumed text node.\n *\t\tviewConsumable.revert( docFragment ); // Revert already consumed document fragment.\n */\nexport default class ViewConsumable {\n\t/**\n\t * Creates new ViewConsumable.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Map of consumable elements. If {@link module:engine/view/element~Element element} is used as a key,\n\t\t * {@link module:engine/conversion/viewconsumable~ViewElementConsumables ViewElementConsumables} instance is stored as value.\n\t\t * For {@link module:engine/view/text~Text text nodes} and\n\t\t * {@link module:engine/view/documentfragment~DocumentFragment document fragments} boolean value is stored as value.\n\t\t *\n\t\t * @protected\n\t\t * @member {Map.<module:engine/conversion/viewconsumable~ViewElementConsumables|Boolean>}\n\t\t*/\n\t\tthis._consumables = new Map();\n\t}\n\n\t/**\n\t * Adds {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\n\t * {@link module:engine/view/documentfragment~DocumentFragment document fragment} as ready to be consumed.\n\t *\n\t *\t\tviewConsumable.add( p, { name: true } ); // Adds element's name to consume.\n\t *\t\tviewConsumable.add( p, { attribute: 'name' } ); // Adds element's attribute.\n\t *\t\tviewConsumable.add( p, { class: 'foobar' } ); // Adds element's class.\n\t *\t\tviewConsumable.add( p, { style: 'color' } ); // Adds element's style\n\t *\t\tviewConsumable.add( p, { attribute: 'name', style: 'color' } ); // Adds attribute and style.\n\t *\t\tviewConsumable.add( p, { class: [ 'baz', 'bar' ] } ); // Multiple consumables can be provided.\n\t *\t\tviewConsumable.add( textNode ); // Adds text node to consume.\n\t *\t\tviewConsumable.add( docFragment ); // Adds document fragment to consume.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `viewconsumable-invalid-attribute` when `class` or `style`\n\t * attribute is provided - it should be handled separately by providing actual style/class.\n\t *\n\t *\t\tviewConsumable.add( p, { attribute: 'style' } ); // This call will throw an exception.\n\t *\t\tviewConsumable.add( p, { style: 'color' } ); // This is properly handled style.\n\t *\n\t * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\n\t * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\n\t * @param {Boolean} consumables.name If set to true element's name will be included.\n\t * @param {String|Array.<String>} consumables.attribute Attribute name or array of attribute names.\n\t * @param {String|Array.<String>} consumables.class Class name or array of class names.\n\t * @param {String|Array.<String>} consumables.style Style name or array of style names.\n\t */\n\tadd( element, consumables ) {\n\t\tlet elementConsumables;\n\n\t\t// For text nodes and document fragments just mark them as consumable.\n\t\tif ( element.is( 'text' ) || element.is( 'documentFragment' ) ) {\n\t\t\tthis._consumables.set( element, true );\n\n\t\t\treturn;\n\t\t}\n\n\t\t// For elements create new ViewElementConsumables or update already existing one.\n\t\tif ( !this._consumables.has( element ) ) {\n\t\t\telementConsumables = new ViewElementConsumables();\n\t\t\tthis._consumables.set( element, elementConsumables );\n\t\t} else {\n\t\t\telementConsumables = this._consumables.get( element );\n\t\t}\n\n\t\telementConsumables.add( consumables );\n\t}\n\n\t/**\n\t * Tests if {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\n\t * {@link module:engine/view/documentfragment~DocumentFragment document fragment} can be consumed.\n\t * It returns `true` when all items included in method's call can be consumed. Returns `false` when\n\t * first already consumed item is found and `null` when first non-consumable item is found.\n\t *\n\t *\t\tviewConsumable.test( p, { name: true } ); // Tests element's name.\n\t *\t\tviewConsumable.test( p, { attribute: 'name' } ); // Tests attribute.\n\t *\t\tviewConsumable.test( p, { class: 'foobar' } ); // Tests class.\n\t *\t\tviewConsumable.test( p, { style: 'color' } ); // Tests style.\n\t *\t\tviewConsumable.test( p, { attribute: 'name', style: 'color' } ); // Tests attribute and style.\n\t *\t\tviewConsumable.test( p, { class: [ 'baz', 'bar' ] } ); // Multiple consumables can be tested.\n\t *\t\tviewConsumable.test( textNode ); // Tests text node.\n\t *\t\tviewConsumable.test( docFragment ); // Tests document fragment.\n\t *\n\t * Testing classes and styles as attribute will test if all added classes/styles can be consumed.\n\t *\n\t *\t\tviewConsumable.test( p, { attribute: 'class' } ); // Tests if all added classes can be consumed.\n\t *\t\tviewConsumable.test( p, { attribute: 'style' } ); // Tests if all added styles can be consumed.\n\t *\n\t * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\n\t * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\n\t * @param {Boolean} consumables.name If set to true element's name will be included.\n\t * @param {String|Array.<String>} consumables.attribute Attribute name or array of attribute names.\n\t * @param {String|Array.<String>} consumables.class Class name or array of class names.\n\t * @param {String|Array.<String>} consumables.style Style name or array of style names.\n\t * @returns {Boolean|null} Returns `true` when all items included in method's call can be consumed. Returns `false`\n\t * when first already consumed item is found and `null` when first non-consumable item is found.\n\t */\n\ttest( element, consumables ) {\n\t\tconst elementConsumables = this._consumables.get( element );\n\n\t\tif ( elementConsumables === undefined ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// For text nodes and document fragments return stored boolean value.\n\t\tif ( element.is( 'text' ) || element.is( 'documentFragment' ) ) {\n\t\t\treturn elementConsumables;\n\t\t}\n\n\t\t// For elements test consumables object.\n\t\treturn elementConsumables.test( consumables );\n\t}\n\n\t/**\n\t * Consumes {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\n\t * {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\n\t * It returns `true` when all items included in method's call can be consumed, otherwise returns `false`.\n\t *\n\t *\t\tviewConsumable.consume( p, { name: true } ); // Consumes element's name.\n\t *\t\tviewConsumable.consume( p, { attribute: 'name' } ); // Consumes element's attribute.\n\t *\t\tviewConsumable.consume( p, { class: 'foobar' } ); // Consumes element's class.\n\t *\t\tviewConsumable.consume( p, { style: 'color' } ); // Consumes element's style.\n\t *\t\tviewConsumable.consume( p, { attribute: 'name', style: 'color' } ); // Consumes attribute and style.\n\t *\t\tviewConsumable.consume( p, { class: [ 'baz', 'bar' ] } ); // Multiple consumables can be consumed.\n\t *\t\tviewConsumable.consume( textNode ); // Consumes text node.\n\t *\t\tviewConsumable.consume( docFragment ); // Consumes document fragment.\n\t *\n\t * Consuming classes and styles as attribute will test if all added classes/styles can be consumed.\n\t *\n\t *\t\tviewConsumable.consume( p, { attribute: 'class' } ); // Consume only if all added classes can be consumed.\n\t *\t\tviewConsumable.consume( p, { attribute: 'style' } ); // Consume only if all added styles can be consumed.\n\t *\n\t * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\n\t * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\n\t * @param {Boolean} consumables.name If set to true element's name will be included.\n\t * @param {String|Array.<String>} consumables.attribute Attribute name or array of attribute names.\n\t * @param {String|Array.<String>} consumables.class Class name or array of class names.\n\t * @param {String|Array.<String>} consumables.style Style name or array of style names.\n\t * @returns {Boolean} Returns `true` when all items included in method's call can be consumed,\n\t * otherwise returns `false`.\n\t */\n\tconsume( element, consumables ) {\n\t\tif ( this.test( element, consumables ) ) {\n\t\t\tif ( element.is( 'text' ) || element.is( 'documentFragment' ) ) {\n\t\t\t\t// For text nodes and document fragments set value to false.\n\t\t\t\tthis._consumables.set( element, false );\n\t\t\t} else {\n\t\t\t\t// For elements - consume consumables object.\n\t\t\t\tthis._consumables.get( element ).consume( consumables );\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Reverts {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\n\t * {@link module:engine/view/documentfragment~DocumentFragment document fragment} so they can be consumed once again.\n\t * Method does not revert items that were never previously added for consumption, even if they are included in\n\t * method's call.\n\t *\n\t *\t\tviewConsumable.revert( p, { name: true } ); // Reverts element's name.\n\t *\t\tviewConsumable.revert( p, { attribute: 'name' } ); // Reverts element's attribute.\n\t *\t\tviewConsumable.revert( p, { class: 'foobar' } ); // Reverts element's class.\n\t *\t\tviewConsumable.revert( p, { style: 'color' } ); // Reverts element's style.\n\t *\t\tviewConsumable.revert( p, { attribute: 'name', style: 'color' } ); // Reverts attribute and style.\n\t *\t\tviewConsumable.revert( p, { class: [ 'baz', 'bar' ] } ); // Multiple names can be reverted.\n\t *\t\tviewConsumable.revert( textNode ); // Reverts text node.\n\t *\t\tviewConsumable.revert( docFragment ); // Reverts document fragment.\n\t *\n\t * Reverting classes and styles as attribute will revert all classes/styles that were previously added for\n\t * consumption.\n\t *\n\t *\t\tviewConsumable.revert( p, { attribute: 'class' } ); // Reverts all classes added for consumption.\n\t *\t\tviewConsumable.revert( p, { attribute: 'style' } ); // Reverts all styles added for consumption.\n\t *\n\t * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\n\t * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\n\t * @param {Boolean} consumables.name If set to true element's name will be included.\n\t * @param {String|Array.<String>} consumables.attribute Attribute name or array of attribute names.\n\t * @param {String|Array.<String>} consumables.class Class name or array of class names.\n\t * @param {String|Array.<String>} consumables.style Style name or array of style names.\n\t */\n\trevert( element, consumables ) {\n\t\tconst elementConsumables = this._consumables.get( element );\n\n\t\tif ( elementConsumables !== undefined ) {\n\t\t\tif ( element.is( 'text' ) || element.is( 'documentFragment' ) ) {\n\t\t\t\t// For text nodes and document fragments - set consumable to true.\n\t\t\t\tthis._consumables.set( element, true );\n\t\t\t} else {\n\t\t\t\t// For elements - revert items from consumables object.\n\t\t\t\telementConsumables.revert( consumables );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates consumable object from {@link module:engine/view/element~Element view element}. Consumable object will include\n\t * element's name and all its attributes, classes and styles.\n\t *\n\t * @static\n\t * @param {module:engine/view/element~Element} element\n\t * @returns {Object} consumables\n\t */\n\tstatic consumablesFromElement( element ) {\n\t\tconst consumables = {\n\t\t\tname: true,\n\t\t\tattribute: [],\n\t\t\tclass: [],\n\t\t\tstyle: []\n\t\t};\n\n\t\tconst attributes = element.getAttributeKeys();\n\n\t\tfor ( const attribute of attributes ) {\n\t\t\t// Skip classes and styles - will be added separately.\n\t\t\tif ( attribute == 'style' || attribute == 'class' ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconsumables.attribute.push( attribute );\n\t\t}\n\n\t\tconst classes = element.getClassNames();\n\n\t\tfor ( const className of classes ) {\n\t\t\tconsumables.class.push( className );\n\t\t}\n\n\t\tconst styles = element.getStyleNames();\n\n\t\tfor ( const style of styles ) {\n\t\t\tconsumables.style.push( style );\n\t\t}\n\n\t\treturn consumables;\n\t}\n\n\t/**\n\t * Creates {@link module:engine/conversion/viewconsumable~ViewConsumable ViewConsumable} instance from\n\t * {@link module:engine/view/node~Node node} or {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\n\t * Instance will contain all elements, child nodes, attributes, styles and classes added for consumption.\n\t *\n\t * @static\n\t * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} from View node or document fragment\n\t * from which `ViewConsumable` will be created.\n\t * @param {module:engine/conversion/viewconsumable~ViewConsumable} [instance] If provided, given `ViewConsumable` instance will be used\n\t * to add all consumables. It will be returned instead of a new instance.\n\t */\n\tstatic createFrom( from, instance ) {\n\t\tif ( !instance ) {\n\t\t\tinstance = new ViewConsumable();\n\t\t}\n\n\t\tif ( from.is( 'text' ) ) {\n\t\t\tinstance.add( from );\n\n\t\t\treturn instance;\n\t\t}\n\n\t\t// Add `from` itself, if it is an element.\n\t\tif ( from.is( 'element' ) ) {\n\t\t\tinstance.add( from, ViewConsumable.consumablesFromElement( from ) );\n\t\t}\n\n\t\tif ( from.is( 'documentFragment' ) ) {\n\t\t\tinstance.add( from );\n\t\t}\n\n\t\tfor ( const child of from.getChildren() ) {\n\t\t\tinstance = ViewConsumable.createFrom( child, instance );\n\t\t}\n\n\t\treturn instance;\n\t}\n}\n\n/**\n * This is a private helper-class for {@link module:engine/conversion/viewconsumable~ViewConsumable}.\n * It represents and manipulates consumable parts of a single {@link module:engine/view/element~Element}.\n *\n * @private\n */\nclass ViewElementConsumables {\n\n\t/**\n\t * Creates ViewElementConsumables instance.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Flag indicating if name of the element can be consumed.\n\t\t *\n\t\t * @private\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis._canConsumeName = null;\n\n\t\t/**\n\t\t * Contains maps of element's consumables: attributes, classes and styles.\n\t\t *\n\t\t * @private\n\t\t * @member {Object}\n\t\t */\n\t\tthis._consumables = {\n\t\t\tattribute: new Map(),\n\t\t\tstyle: new Map(),\n\t\t\tclass: new Map()\n\t\t};\n\t}\n\n\t/**\n\t * Adds consumable parts of the {@link module:engine/view/element~Element view element}.\n\t * Element's name itself can be marked to be consumed (when element's name is consumed its attributes, classes and\n\t * styles still could be consumed):\n\t *\n\t *\t\tconsumables.add( { name: true } );\n\t *\n\t * Attributes classes and styles:\n\t *\n\t *\t\tconsumables.add( { attribute: 'title', class: 'foo', style: 'color' } );\n\t *\t\tconsumables.add( { attribute: [ 'title', 'name' ], class: [ 'foo', 'bar' ] );\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `viewconsumable-invalid-attribute` when `class` or `style`\n\t * attribute is provided - it should be handled separately by providing `style` and `class` in consumables object.\n\t *\n\t * @param {Object} consumables Object describing which parts of the element can be consumed.\n\t * @param {Boolean} consumables.name If set to `true` element's name will be added as consumable.\n\t * @param {String|Array.<String>} consumables.attribute Attribute name or array of attribute names to add as consumable.\n\t * @param {String|Array.<String>} consumables.class Class name or array of class names to add as consumable.\n\t * @param {String|Array.<String>} consumables.style Style name or array of style names to add as consumable.\n\t */\n\tadd( consumables ) {\n\t\tif ( consumables.name ) {\n\t\t\tthis._canConsumeName = true;\n\t\t}\n\n\t\tfor ( const type in this._consumables ) {\n\t\t\tif ( type in consumables ) {\n\t\t\t\tthis._add( type, consumables[ type ] );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Tests if parts of the {@link module:engine/view/node~Node view node} can be consumed.\n\t *\n\t * Element's name can be tested:\n\t *\n\t *\t\tconsumables.test( { name: true } );\n\t *\n\t * Attributes classes and styles:\n\t *\n\t *\t\tconsumables.test( { attribute: 'title', class: 'foo', style: 'color' } );\n\t *\t\tconsumables.test( { attribute: [ 'title', 'name' ], class: [ 'foo', 'bar' ] );\n\t *\n\t * @param {Object} consumables Object describing which parts of the element should be tested.\n\t * @param {Boolean} consumables.name If set to `true` element's name will be tested.\n\t * @param {String|Array.<String>} consumables.attribute Attribute name or array of attribute names to test.\n\t * @param {String|Array.<String>} consumables.class Class name or array of class names to test.\n\t * @param {String|Array.<String>} consumables.style Style name or array of style names to test.\n\t * @returns {Boolean|null} `true` when all tested items can be consumed, `null` when even one of the items\n\t * was never marked for consumption and `false` when even one of the items was already consumed.\n\t */\n\ttest( consumables ) {\n\t\t// Check if name can be consumed.\n\t\tif ( consumables.name && !this._canConsumeName ) {\n\t\t\treturn this._canConsumeName;\n\t\t}\n\n\t\tfor ( const type in this._consumables ) {\n\t\t\tif ( type in consumables ) {\n\t\t\t\tconst value = this._test( type, consumables[ type ] );\n\n\t\t\t\tif ( value !== true ) {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Return true only if all can be consumed.\n\t\treturn true;\n\t}\n\n\t/**\n\t * Consumes parts of {@link module:engine/view/element~Element view element}. This function does not check if consumable item\n\t * is already consumed - it consumes all consumable items provided.\n\t * Element's name can be consumed:\n\t *\n\t *\t\tconsumables.consume( { name: true } );\n\t *\n\t * Attributes classes and styles:\n\t *\n\t *\t\tconsumables.consume( { attribute: 'title', class: 'foo', style: 'color' } );\n\t *\t\tconsumables.consume( { attribute: [ 'title', 'name' ], class: [ 'foo', 'bar' ] );\n\t *\n\t * @param {Object} consumables Object describing which parts of the element should be consumed.\n\t * @param {Boolean} consumables.name If set to `true` element's name will be consumed.\n\t * @param {String|Array.<String>} consumables.attribute Attribute name or array of attribute names to consume.\n\t * @param {String|Array.<String>} consumables.class Class name or array of class names to consume.\n\t * @param {String|Array.<String>} consumables.style Style name or array of style names to consume.\n\t */\n\tconsume( consumables ) {\n\t\tif ( consumables.name ) {\n\t\t\tthis._canConsumeName = false;\n\t\t}\n\n\t\tfor ( const type in this._consumables ) {\n\t\t\tif ( type in consumables ) {\n\t\t\t\tthis._consume( type, consumables[ type ] );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Revert already consumed parts of {@link module:engine/view/element~Element view Element}, so they can be consumed once again.\n\t * Element's name can be reverted:\n\t *\n\t *\t\tconsumables.revert( { name: true } );\n\t *\n\t * Attributes classes and styles:\n\t *\n\t *\t\tconsumables.revert( { attribute: 'title', class: 'foo', style: 'color' } );\n\t *\t\tconsumables.revert( { attribute: [ 'title', 'name' ], class: [ 'foo', 'bar' ] );\n\t *\n\t * @param {Object} consumables Object describing which parts of the element should be reverted.\n\t * @param {Boolean} consumables.name If set to `true` element's name will be reverted.\n\t * @param {String|Array.<String>} consumables.attribute Attribute name or array of attribute names to revert.\n\t * @param {String|Array.<String>} consumables.class Class name or array of class names to revert.\n\t * @param {String|Array.<String>} consumables.style Style name or array of style names to revert.\n\t */\n\trevert( consumables ) {\n\t\tif ( consumables.name ) {\n\t\t\tthis._canConsumeName = true;\n\t\t}\n\n\t\tfor ( const type in this._consumables ) {\n\t\t\tif ( type in consumables ) {\n\t\t\t\tthis._revert( type, consumables[ type ] );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Helper method that adds consumables of a given type: attribute, class or style.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `viewconsumable-invalid-attribute` when `class` or `style`\n\t * type is provided - it should be handled separately by providing actual style/class type.\n\t *\n\t * @private\n\t * @param {String} type Type of the consumable item: `attribute`, `class` or `style`.\n\t * @param {String|Array.<String>} item Consumable item or array of items.\n\t */\n\t_add( type, item ) {\n\t\tconst items = isArray( item ) ? item : [ item ];\n\t\tconst consumables = this._consumables[ type ];\n\n\t\tfor ( const name of items ) {\n\t\t\tif ( type === 'attribute' && ( name === 'class' || name === 'style' ) ) {\n\t\t\t\t/**\n\t\t\t\t * Class and style attributes should be handled separately.\n\t\t\t\t *\n\t\t\t\t * @error viewconsumable-invalid-attribute\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'viewconsumable-invalid-attribute: Classes and styles should be handled separately.' );\n\t\t\t}\n\n\t\t\tconsumables.set( name, true );\n\t\t}\n\t}\n\n\t/**\n\t * Helper method that tests consumables of a given type: attribute, class or style.\n\t *\n\t * @private\n\t * @param {String} type Type of the consumable item: `attribute`, `class` or `style`.\n\t * @param {String|Array.<String>} item Consumable item or array of items.\n\t * @returns {Boolean|null} Returns `true` if all items can be consumed, `null` when one of the items cannot be\n\t * consumed and `false` when one of the items is already consumed.\n\t */\n\t_test( type, item ) {\n\t\tconst items = isArray( item ) ? item : [ item ];\n\t\tconst consumables = this._consumables[ type ];\n\n\t\tfor ( const name of items ) {\n\t\t\tif ( type === 'attribute' && ( name === 'class' || name === 'style' ) ) {\n\t\t\t\t// Check all classes/styles if class/style attribute is tested.\n\t\t\t\tconst value = this._test( name, [ ...this._consumables[ name ].keys() ] );\n\n\t\t\t\tif ( value !== true ) {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst value = consumables.get( name );\n\t\t\t\t// Return null if attribute is not found.\n\t\t\t\tif ( value === undefined ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tif ( !value ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Helper method that consumes items of a given type: attribute, class or style.\n\t *\n\t * @private\n\t * @param {String} type Type of the consumable item: `attribute`, `class` or `style`.\n\t * @param {String|Array.<String>} item Consumable item or array of items.\n\t */\n\t_consume( type, item ) {\n\t\tconst items = isArray( item ) ? item : [ item ];\n\t\tconst consumables = this._consumables[ type ];\n\n\t\tfor ( const name of items ) {\n\t\t\tif ( type === 'attribute' && ( name === 'class' || name === 'style' ) ) {\n\t\t\t\t// If class or style is provided for consumption - consume them all.\n\t\t\t\tthis._consume( name, [ ...this._consumables[ name ].keys() ] );\n\t\t\t} else {\n\t\t\t\tconsumables.set( name, false );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Helper method that reverts items of a given type: attribute, class or style.\n\t *\n\t * @private\n\t * @param {String} type Type of the consumable item: `attribute`, `class` or , `style`.\n\t * @param {String|Array.<String>} item Consumable item or array of items.\n\t */\n\t_revert( type, item ) {\n\t\tconst items = isArray( item ) ? item : [ item ];\n\t\tconst consumables = this._consumables[ type ];\n\n\t\tfor ( const name of items ) {\n\t\t\tif ( type === 'attribute' && ( name === 'class' || name === 'style' ) ) {\n\t\t\t\t// If class or style is provided for reverting - revert them all.\n\t\t\t\tthis._revert( name, [ ...this._consumables[ name ].keys() ] );\n\t\t\t} else {\n\t\t\t\tconst value = consumables.get( name );\n\n\t\t\t\tif ( value === false ) {\n\t\t\t\t\tconsumables.set( name, true );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/conversion/viewconsumable.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/conversion/viewconversiondispatcher\n */\n\nimport ViewConsumable from './viewconsumable';\nimport ModelRange from '../model/range';\nimport ModelPosition from '../model/position';\nimport ModelTreeWalker from '../model/treewalker';\nimport ModelNode from '../model/node';\nimport ModelDocumentFragment from '../model/documentfragment';\nimport { remove } from '../model/writer';\n\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport extend from '@ckeditor/ckeditor5-utils/src/lib/lodash/extend';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\n\n/**\n * `ViewConversionDispatcher` is a central point of {@link module:engine/view/view view} conversion, which is a process of\n * converting given {@link module:engine/view/documentfragment~DocumentFragment view document fragment} or\n * {@link module:engine/view/element~Element}\n * into another structure. In default application, {@link module:engine/view/view view} is converted to {@link module:engine/model/model}.\n *\n * During conversion process, for all {@link module:engine/view/node~Node view nodes} from the converted view document fragment,\n * `ViewConversionDispatcher` fires corresponding events. Special callbacks called \"converters\" should listen to\n * `ViewConversionDispatcher` for those events.\n *\n * Each callback, as a first argument, is passed a special object `data` that has `input` and `output` properties.\n * `input` property contains {@link module:engine/view/node~Node view node} or\n * {@link module:engine/view/documentfragment~DocumentFragment view document fragment}\n * that is converted at the moment and might be handled by the callback. `output` property should be used to save the result\n * of conversion. Keep in mind that the `data` parameter is customizable and may contain other values - see\n * {@link ~ViewConversionDispatcher#convert}. It is also shared by reference by all callbacks\n * listening to given event. **Note**: in view to model conversion - `data` contains `context` property that is an array\n * of {@link module:engine/model/element~Element model elements}. These are model elements that will be the parent of currently\n * converted view item. `context` property is used in examples below.\n *\n * The second parameter passed to a callback is an instance of {@link module:engine/conversion/viewconsumable~ViewConsumable}. It stores\n * information about what parts of processed view item are still waiting to be handled. After a piece of view item\n * was converted, appropriate consumable value should be {@link module:engine/conversion/viewconsumable~ViewConsumable#consume consumed}.\n *\n * The third parameter passed to a callback is an instance of {@link ~ViewConversionDispatcher}\n * which provides additional tools for converters.\n *\n * Examples of providing callbacks for `ViewConversionDispatcher`:\n *\n *\t\t// Converter for paragraphs (<p>).\n *\t\tviewDispatcher.on( 'element:p', ( evt, data, consumable, conversionApi ) => {\n *\t\t\tconst paragraph = new ModelElement( 'paragraph' );\n *\t\t\tconst schemaQuery = {\n *\t\t\t\tname: 'paragraph',\n *\t\t\t\tinside: data.context\n *\t\t\t};\n *\n *\t\t\tif ( conversionApi.schema.check( schemaQuery ) ) {\n *\t\t\t\tif ( !consumable.consume( data.input, { name: true } ) ) {\n *\t\t\t\t\t// Before converting this paragraph's children we have to update their context by this paragraph.\n *\t\t\t\t\tdata.context.push( paragraph );\n *\t\t\t\t\tconst children = conversionApi.convertChildren( data.input, consumable, data );\n *\t\t\t\t\tdata.context.pop();\n *\t\t\t\t\tparagraph.appendChildren( children );\n *\t\t\t\t\tdata.output = paragraph;\n *\t\t\t\t}\n *\t\t\t}\n *\t\t} );\n *\n *\t\t// Converter for links (<a>).\n *\t\tviewDispatcher.on( 'element:a', ( evt, data, consumable, conversionApi ) => {\n *\t\t\tif ( consumable.consume( data.input, { name: true, attributes: [ 'href' ] } ) ) {\n *\t\t\t\t// <a> element is inline and is represented by an attribute in the model.\n *\t\t\t\t// This is why we are not updating `context` property.\n *\t\t\t\tdata.output = conversionApi.convertChildren( data.input, consumable, data );\n *\n *\t\t\t\tfor ( let item of Range.createFrom( data.output ) ) {\n *\t\t\t\t\tconst schemaQuery = {\n *\t\t\t\t\t\tname: item.name || '$text',\n *\t\t\t\t\t\tattribute: 'link',\n *\t\t\t\t\t\tinside: data.context\n *\t\t\t\t\t};\n *\n *\t\t\t\t\tif ( conversionApi.schema.check( schemaQuery ) ) {\n *\t\t\t\t\t\titem.setAttribute( 'link', data.input.getAttribute( 'href' ) );\n *\t\t\t\t\t}\n *\t\t\t\t}\n *\t\t\t}\n *\t\t} );\n *\n *\t\t// Fire conversion.\n *\t\t// Always take care where the converted model structure will be appended to. If this `viewDocumentFragment`\n *\t\t// is going to be appended directly to a '$root' element, use that in `context`.\n *\t\tviewDispatcher.convert( viewDocumentFragment, { context: [ '$root' ] } );\n *\n * Before each conversion process, `ViewConversionDispatcher` fires {@link ~ViewConversionDispatcher#event:viewCleanup}\n * event which can be used to prepare tree view for conversion.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n * @fires viewCleanup\n * @fires element\n * @fires text\n * @fires documentFragment\n */\nexport default class ViewConversionDispatcher {\n\t/**\n\t * Creates a `ViewConversionDispatcher` that operates using passed API.\n\t *\n\t * @see module:engine/conversion/viewconversiondispatcher~ViewConversionApi\n\t * @param {Object} [conversionApi] Additional properties for interface that will be passed to events fired\n\t * by `ViewConversionDispatcher`.\n\t */\n\tconstructor( conversionApi = {} ) {\n\t\t/**\n\t\t * Interface passed by dispatcher to the events callbacks.\n\t\t *\n\t\t * @member {module:engine/conversion/viewconversiondispatcher~ViewConversionApi}\n\t\t */\n\t\tthis.conversionApi = extend( {}, conversionApi );\n\n\t\t// `convertItem` and `convertChildren` are bound to this `ViewConversionDispatcher` instance and\n\t\t// set on `conversionApi`. This way only a part of `ViewConversionDispatcher` API is exposed.\n\t\tthis.conversionApi.convertItem = this._convertItem.bind( this );\n\t\tthis.conversionApi.convertChildren = this._convertChildren.bind( this );\n\t}\n\n\t/**\n\t * Starts the conversion process. The entry point for the conversion.\n\t *\n\t * @fires element\n\t * @fires text\n\t * @fires documentFragment\n\t * @param {module:engine/view/documentfragment~DocumentFragment|module:engine/view/element~Element} viewItem\n\t * Part of the view to be converted.\n\t * @param {Object} [additionalData] Additional data to be passed in `data` argument when firing `ViewConversionDispatcher`\n\t * events. See also {@link ~ViewConversionDispatcher#event:element element event}.\n\t * @returns {module:engine/model/documentfragment~DocumentFragment} Model data that is a result of the conversion process\n\t * wrapped in `DocumentFragment`. Converted marker stamps will be set as that document fragment's\n\t * {@link module:engine/model/documentfragment~DocumentFragment#markers static markers map}.\n\t */\n\tconvert( viewItem, additionalData = {} ) {\n\t\tthis.fire( 'viewCleanup', viewItem );\n\n\t\tconst consumable = ViewConsumable.createFrom( viewItem );\n\t\tlet conversionResult = this._convertItem( viewItem, consumable, additionalData );\n\n\t\t// We can get a null here if conversion failed (see _convertItem())\n\t\t// or simply if an item could not be converted (e.g. due to the schema).\n\t\tif ( !conversionResult ) {\n\t\t\treturn new ModelDocumentFragment();\n\t\t}\n\n\t\t// When conversion result is not a document fragment we need to wrap it in document fragment.\n\t\tif ( !conversionResult.is( 'documentFragment' ) ) {\n\t\t\tconversionResult = new ModelDocumentFragment( [ conversionResult ] );\n\t\t}\n\n\t\t// Extract temporary markers stamp from model and set as static markers collection.\n\t\tconversionResult.markers = extractMarkersFromModelFragment( conversionResult );\n\n\t\treturn conversionResult;\n\t}\n\n\t/**\n\t * @private\n\t * @see module:engine/conversion/viewconversiondispatcher~ViewConversionApi#convertItem\n\t */\n\t_convertItem( input, consumable, additionalData = {} ) {\n\t\tconst data = extend( {}, additionalData, {\n\t\t\tinput,\n\t\t\toutput: null\n\t\t} );\n\n\t\tif ( input.is( 'element' ) ) {\n\t\t\tthis.fire( 'element:' + input.name, data, consumable, this.conversionApi );\n\t\t} else if ( input.is( 'text' ) ) {\n\t\t\tthis.fire( 'text', data, consumable, this.conversionApi );\n\t\t} else {\n\t\t\tthis.fire( 'documentFragment', data, consumable, this.conversionApi );\n\t\t}\n\n\t\t// Handle incorrect `data.output`.\n\t\tif ( data.output && !( data.output instanceof ModelNode || data.output instanceof ModelDocumentFragment ) ) {\n\t\t\t/**\n\t\t\t * Dropped incorrect conversion result.\n\t\t\t *\n\t\t\t * Item may be converted to either {@link module:engine/model/node~Node model node} or\n\t\t\t * {@link module:engine/model/documentfragment~DocumentFragment model document fragment}.\n\t\t\t *\n\t\t\t * @error view-conversion-dispatcher-incorrect-result\n\t\t\t */\n\t\t\tlog.warn( 'view-conversion-dispatcher-incorrect-result: Dropped incorrect conversion result.', [ input, data.output ] );\n\n\t\t\treturn null;\n\t\t}\n\n\t\treturn data.output;\n\t}\n\n\t/**\n\t * @private\n\t * @see module:engine/conversion/viewconversiondispatcher~ViewConversionApi#convertChildren\n\t */\n\t_convertChildren( input, consumable, additionalData = {} ) {\n\t\t// Get all children of view input item.\n\t\tconst viewChildren = Array.from( input.getChildren() );\n\n\t\t// 1. Map those children to model.\n\t\t// 2. Filter out items that has not been converted or for which conversion returned wrong result (for those warning is logged).\n\t\t// 3. Extract children from document fragments to flatten results.\n\t\tconst convertedChildren = viewChildren\n\t\t\t.map( viewChild => this._convertItem( viewChild, consumable, additionalData ) )\n\t\t\t.filter( converted => converted instanceof ModelNode || converted instanceof ModelDocumentFragment )\n\t\t\t.reduce( ( result, filtered ) => {\n\t\t\t\treturn result.concat(\n\t\t\t\t\tfiltered.is( 'documentFragment' ) ? Array.from( filtered.getChildren() ) : filtered\n\t\t\t\t);\n\t\t\t}, [] );\n\n\t\t// Normalize array to model document fragment.\n\t\treturn new ModelDocumentFragment( convertedChildren );\n\t}\n\n\t/**\n\t * Fired before the first conversion event, at the beginning of view to model conversion process.\n\t *\n\t * @event viewCleanup\n\t * @param {module:engine/view/documentfragment~DocumentFragment|module:engine/view/element~Element}\n\t * viewItem Part of the view to be converted.\n\t */\n\n\t/**\n\t * Fired when {@link module:engine/view/element~Element} is converted.\n\t *\n\t * `element` is a namespace event for a class of events. Names of actually called events follow this pattern:\n\t * `element:<elementName>` where `elementName` is the name of converted element. This way listeners may listen to\n\t * all elements conversion or to conversion of specific elements.\n\t *\n\t * @event element\n\t * @param {Object} data Object containing conversion input and a placeholder for conversion output and possibly other\n\t * values (see {@link #convert}).\n\t * Keep in mind that this object is shared by reference between all callbacks that will be called.\n\t * This means that callbacks can add their own values if needed,\n\t * and those values will be available in other callbacks.\n\t * @param {module:engine/view/element~Element} data.input Converted element.\n\t * @param {*} data.output The current state of conversion result. Every change to converted element should\n\t * be reflected by setting or modifying this property.\n\t * @param {module:engine/model/schema~SchemaPath} data.context The conversion context.\n\t * @param {module:engine/conversion/viewconsumable~ViewConsumable} consumable Values to consume.\n\t * @param {Object} conversionApi Conversion interface to be used by callback, passed in `ViewConversionDispatcher` constructor.\n\t * Besides of properties passed in constructor, it also has `convertItem` and `convertChildren` methods which are references\n\t * to {@link #_convertItem} and\n\t * {@link ~ViewConversionDispatcher#_convertChildren}. Those methods are needed to convert\n\t * the whole view-tree they were exposed in `conversionApi` for callbacks.\n\t */\n\n\t/**\n\t * Fired when {@link module:engine/view/text~Text} is converted.\n\t *\n\t * @event text\n\t * @see #event:element\n\t */\n\n\t/**\n\t * Fired when {@link module:engine/view/documentfragment~DocumentFragment} is converted.\n\t *\n\t * @event documentFragment\n\t * @see #event:element\n\t */\n}\n\nmix( ViewConversionDispatcher, EmitterMixin );\n\n// Traverses given model item and searches elements which marks marker range. Found element is removed from\n// DocumentFragment but path of this element is stored in a Map which is then returned.\n//\n// @param {module:engine/view/documentfragment~DocumentFragment|module:engine/view/node~Node} modelItem Fragment of model.\n// @returns {Map<String, module:engine/model/range~Range>} List of static markers.\nfunction extractMarkersFromModelFragment( modelItem ) {\n\tconst markerStamps = new Set();\n\tconst markers = new Map();\n\n\t// Create ModelTreeWalker.\n\tconst walker = new ModelTreeWalker( {\n\t\tstartPosition: ModelPosition.createAt( modelItem, 0 ),\n\t\tignoreElementEnd: true\n\t} );\n\n\t// Walk through DocumentFragment and collect marker elements.\n\tfor ( const value of walker ) {\n\t\t// Check if current element is a marker stamp.\n\t\tif ( value.item.name == '$marker' ) {\n\t\t\tmarkerStamps.add( value.item );\n\t\t}\n\t}\n\n\t// Walk through collected marker elements store its path and remove its from the DocumentFragment.\n\tfor ( const stamp of markerStamps ) {\n\t\tconst markerName = stamp.getAttribute( 'data-name' );\n\t\tconst currentPosition = ModelPosition.createBefore( stamp );\n\n\t\t// When marker of given name is not stored it means that we have found the beginning of the range.\n\t\tif ( !markers.has( markerName ) ) {\n\t\t\tmarkers.set( markerName, new ModelRange( ModelPosition.createFromPosition( currentPosition ) ) );\n\t\t// Otherwise is means that we have found end of the marker range.\n\t\t} else {\n\t\t\tmarkers.get( markerName ).end = ModelPosition.createFromPosition( currentPosition );\n\t\t}\n\n\t\t// Remove marker stamp element from DocumentFragment.\n\t\tremove( ModelRange.createOn( stamp ) );\n\t}\n\n\treturn markers;\n}\n\n/**\n * Conversion interface that is registered for given {@link module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher}\n * and is passed as one of parameters when {@link module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher dispatcher}\n * fires it's events.\n *\n * `ViewConversionApi` object is built by {@link module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher} constructor.\n * The exact list of properties of this object is determined by the object passed to the constructor.\n *\n * @interface ViewConversionApi\n */\n\n/**\n * Starts conversion of given item by firing an appropriate event.\n *\n * Every fired event is passed (as first parameter) an object with `output` property. Every event may set and/or\n * modify that property. When all callbacks are done, the final value of `output` property is returned by this method.\n * The `output` must be either {@link module:engine/model/node~Node model node} or\n * {@link module:engine/model/documentfragment~DocumentFragment model document fragment} or `null` (as set by default).\n *\n * @method #convertItem\n * @fires module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher#event:element\n * @fires module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher#event:text\n * @fires module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher#event:documentFragment\n * @param {module:engine/view/documentfragment~DocumentFragment|module:engine/view/element~Element|module:engine/view/text~Text}\n * input Item to convert.\n * @param {module:engine/conversion/viewconsumable~ViewConsumable} consumable Values to consume.\n * @param {Object} [additionalData] Additional data to be passed in `data` argument when firing `ViewConversionDispatcher`\n * events. See also {@link module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher#event:element element event}.\n * @returns {module:engine/model/node~Node|module:engine/model/documentfragment~DocumentFragment|null} The result of item conversion,\n * created and modified by callbacks attached to fired event, or `null` if the conversion result was incorrect.\n */\n\n/**\n * Starts conversion of all children of given item by firing appropriate events for all those children.\n *\n * @method #convertChildren\n * @fires module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher#event:element\n * @fires module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher#event:text\n * @fires module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher#event:documentFragment\n * @param {module:engine/view/documentfragment~DocumentFragment|module:engine/view/element~Element}\n * input Item which children will be converted.\n * @param {module:engine/conversion/viewconsumable~ViewConsumable} consumable Values to consume.\n * @param {Object} [additionalData] Additional data to be passed in `data` argument when firing `ViewConversionDispatcher`\n * events. See also {@link module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher#event:element element event}.\n * @returns {module:engine/model/documentfragment~DocumentFragment} Model document fragment containing results of conversion\n * of all children of given item.\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/conversion/viewconversiondispatcher.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/dataprocessor/basichtmlwriter\n */\n\n/* globals document */\n\n/**\n * Basic HTML writer, it uses the native `innerHTML` property for basic conversion\n * from DocumentFragment to an HTML string.\n *\n * @implements module:engine/dataprocessor/htmlwriter~HtmlWriter\n */\nexport default class BasicHtmlWriter {\n\t/**\n\t * Returns HTML string created from DocumentFragment.\n\t *\n\t * @param {DocumentFragment} fragment\n\t * @returns {String}\n\t */\n\tgetHtml( fragment ) {\n\t\tconst doc = document.implementation.createHTMLDocument( '' );\n\t\tconst container = doc.createElement( 'div' );\n\t\tcontainer.appendChild( fragment );\n\n\t\treturn container.innerHTML;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/dataprocessor/basichtmlwriter.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/delta/basic-deltas\n */\n\n// Deltas require `register` method that require `Batch` class and is defined in batch-base.js.\n// We would like to group all deltas files in one place, so we would only have to include batch.js\n// which would already have all default deltas registered.\n\n// Import default suite of deltas so a feature have to include only Batch class file.\n/* eslint-disable no-unused-vars */\nimport d01 from './attributedelta';\nimport d02 from './insertdelta';\nimport d03 from './mergedelta';\nimport d04 from './movedelta';\nimport d05 from './removedelta';\nimport d06 from './renamedelta';\nimport d07 from './splitdelta';\nimport d08 from './unwrapdelta';\nimport d09 from './weakinsertdelta';\nimport d10 from './wrapdelta';\n/* eslint-enable no-unused-vars */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/delta/basic-deltas.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/delta/basic-transformations\n */\n\nimport deltaTransform from './transform';\nconst addTransformationCase = deltaTransform.addTransformationCase;\nconst defaultTransform = deltaTransform.defaultTransform;\n\nimport Range from '../range';\nimport Position from '../position';\n\nimport NoOperation from '../operation/nooperation';\nimport AttributeOperation from '../operation/attributeoperation';\nimport InsertOperation from '../operation/insertoperation';\nimport ReinsertOperation from '../operation/reinsertoperation';\n\nimport Delta from './delta';\nimport AttributeDelta from './attributedelta';\nimport InsertDelta from './insertdelta';\nimport MarkerDelta from './markerdelta';\nimport MergeDelta from './mergedelta';\nimport MoveDelta from './movedelta';\nimport SplitDelta from './splitdelta';\nimport WeakInsertDelta from './weakinsertdelta';\nimport WrapDelta from './wrapdelta';\nimport UnwrapDelta from './unwrapdelta';\nimport RenameDelta from './renamedelta';\nimport RemoveDelta from './removedelta';\n\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\n\n// Provide transformations for default deltas.\n\n// Add special case for AttributeDelta x WeakInsertDelta transformation.\naddTransformationCase( AttributeDelta, WeakInsertDelta, ( a, b, isStrong ) => {\n\t// If nodes are weak-inserted into attribute delta range, we need to apply changes from attribute delta on them.\n\t// So first we do the normal transformation and if this special cases happens, we will add an extra delta.\n\tconst deltas = defaultTransform( a, b, isStrong );\n\n\tif ( a.range.containsPosition( b.position ) ) {\n\t\tdeltas.push( _getComplementaryAttrDelta( b, a ) );\n\t}\n\n\treturn deltas;\n} );\n\n// Add special case for AttributeDelta x SplitDelta transformation.\naddTransformationCase( AttributeDelta, SplitDelta, ( a, b, isStrong ) => {\n\tconst splitPosition = new Position( b.position.root, b.position.path.slice( 0, -1 ) );\n\n\tconst deltas = defaultTransform( a, b, isStrong );\n\n\tfor ( const operation of a.operations ) {\n\t\t// If a node that has been split has it's attribute updated, we should also update attribute of\n\t\t// the node created during splitting.\n\t\tif ( operation.range.containsPosition( splitPosition ) || operation.range.start.isEqual( splitPosition ) ) {\n\t\t\tconst additionalAttributeDelta = new AttributeDelta();\n\n\t\t\tconst rangeStart = splitPosition.getShiftedBy( 1 );\n\t\t\tconst rangeEnd = Position.createFromPosition( rangeStart );\n\t\t\trangeEnd.path.push( 0 );\n\n\t\t\tconst oldValue = b._cloneOperation.nodes.getNode( 0 ).getAttribute( operation.key );\n\n\t\t\tadditionalAttributeDelta.addOperation( new AttributeOperation(\n\t\t\t\tnew Range( rangeStart, rangeEnd ),\n\t\t\t\toperation.key,\n\t\t\t\toldValue === undefined ? null : oldValue,\n\t\t\t\toperation.newValue,\n\t\t\t\t0\n\t\t\t) );\n\n\t\t\tdeltas.push( additionalAttributeDelta );\n\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn deltas;\n} );\n\n// Add special case for InsertDelta x MergeDelta transformation.\naddTransformationCase( InsertDelta, MergeDelta, ( a, b, isStrong ) => {\n\t// If insert is applied at the same position where merge happened, we reverse the merge (we treat it like it\n\t// didn't happen) and then apply the original insert operation. This is \"mirrored\" in MergeDelta x InsertDelta\n\t// transformation below, where we simply do not apply MergeDelta.\n\tif ( a.position.isEqual( b.position ) ) {\n\t\treturn [\n\t\t\tb.getReversed(),\n\t\t\ta.clone()\n\t\t];\n\t}\n\n\treturn defaultTransform( a, b, isStrong );\n} );\n\nfunction transformMarkerDelta( a, b ) {\n\tconst transformedDelta = a.clone();\n\tconst transformedOp = transformedDelta.operations[ 0 ];\n\n\tif ( transformedOp.oldRange ) {\n\t\ttransformedOp.oldRange = transformedOp.oldRange.getTransformedByDelta( b )[ 0 ];\n\t}\n\n\tif ( transformedOp.newRange ) {\n\t\ttransformedOp.newRange = transformedOp.newRange.getTransformedByDelta( b )[ 0 ];\n\t}\n\n\treturn [ transformedDelta ];\n}\n\naddTransformationCase( MarkerDelta, SplitDelta, transformMarkerDelta );\naddTransformationCase( MarkerDelta, MergeDelta, transformMarkerDelta );\naddTransformationCase( MarkerDelta, WrapDelta, transformMarkerDelta );\naddTransformationCase( MarkerDelta, UnwrapDelta, transformMarkerDelta );\naddTransformationCase( MarkerDelta, MoveDelta, transformMarkerDelta );\naddTransformationCase( MarkerDelta, RenameDelta, transformMarkerDelta );\n\n// Add special case for MoveDelta x MergeDelta transformation.\naddTransformationCase( MoveDelta, MergeDelta, ( a, b, isStrong ) => {\n\t// If move delta is supposed to move a node that has been merged, we reverse the merge (we treat it like it\n\t// didn't happen) and then apply the original move operation. This is \"mirrored\" in MergeDelta x MoveDelta\n\t// transformation below, where we simply do not apply MergeDelta.\n\n\tconst operateInSameParent =\n\t\ta.sourcePosition.root == b.position.root &&\n\t\tcompareArrays( a.sourcePosition.getParentPath(), b.position.getParentPath() ) === 'same';\n\n\tconst mergeInsideMoveRange = a.sourcePosition.offset <= b.position.offset && a.sourcePosition.offset + a.howMany > b.position.offset;\n\n\tif ( operateInSameParent && mergeInsideMoveRange ) {\n\t\treturn [\n\t\t\tb.getReversed(),\n\t\t\ta.clone()\n\t\t];\n\t}\n\n\treturn defaultTransform( a, b, isStrong );\n} );\n\n// Add special case for MergeDelta x InsertDelta transformation.\naddTransformationCase( MergeDelta, InsertDelta, ( a, b, isStrong ) => {\n\t// If merge is applied at the same position where we inserted a range of nodes we cancel the merge as it's results\n\t// may be unexpected and very weird. Even if we do some \"magic\" we don't know what really are users' expectations.\n\tif ( a.position.isEqual( b.position ) ) {\n\t\treturn [ noDelta() ];\n\t}\n\n\treturn defaultTransform( a, b, isStrong );\n} );\n\n// Add special case for MergeDelta x MoveDelta transformation.\naddTransformationCase( MergeDelta, MoveDelta, ( a, b, isStrong ) => {\n\t// If merge is applied at the position between moved nodes we cancel the merge as it's results may be unexpected and\n\t// very weird. Even if we do some \"magic\" we don't know what really are users' expectations.\n\n\tconst operateInSameParent =\n\t\ta.position.root == b.sourcePosition.root &&\n\t\tcompareArrays( a.position.getParentPath(), b.sourcePosition.getParentPath() ) === 'same';\n\n\tconst mergeInsideMoveRange = b.sourcePosition.offset <= a.position.offset && b.sourcePosition.offset + b.howMany > a.position.offset;\n\n\tif ( operateInSameParent && mergeInsideMoveRange ) {\n\t\treturn [ noDelta() ];\n\t}\n\n\treturn defaultTransform( a, b, isStrong );\n} );\n\n// Add special case for SplitDelta x SplitDelta transformation.\naddTransformationCase( SplitDelta, SplitDelta, ( a, b, isStrong ) => {\n\tconst pathA = a.position.getParentPath();\n\tconst pathB = b.position.getParentPath();\n\n\t// The special case is for splits inside the same parent.\n\tif ( compareArrays( pathA, pathB ) == 'same' ) {\n\t\tif ( a.position.offset == b.position.offset ) {\n\t\t\t// We are applying split at the position where split already happened. Additional split is not needed.\n\t\t\treturn [ noDelta() ];\n\t\t} else if ( a.position.offset < b.position.offset ) {\n\t\t\t// Incoming split delta splits at closer offset. So we simply have to once again split the same node,\n\t\t\t// but since it was already split (at further offset) there are less child nodes in the split node.\n\t\t\t// This means that we have to update `howMany` parameter of `MoveOperation` for that delta.\n\n\t\t\tconst delta = a.clone();\n\t\t\tdelta._moveOperation.howMany = b.position.offset - a.position.offset;\n\n\t\t\t// If both SplitDeltas are taking their nodes from graveyard, we have to transform their ReinsertOperations.\n\t\t\tif (\n\t\t\t\ta._cloneOperation instanceof ReinsertOperation &&\n\t\t\t\tb._cloneOperation instanceof ReinsertOperation &&\n\t\t\t\ta._cloneOperation.sourcePosition.offset > b._cloneOperation.sourcePosition.offset\n\t\t\t) {\n\t\t\t\tdelta._cloneOperation.sourcePosition.offset--;\n\t\t\t}\n\n\t\t\treturn [ delta ];\n\t\t} else {\n\t\t\t// Incoming split delta splits at further offset. We have to simulate that we are not splitting the\n\t\t\t// original split node but the node after it, which got created by the other split delta.\n\t\t\t// To do so, we increment offsets so it looks like the split delta was created in the next node.\n\n\t\t\tconst delta = a.clone();\n\n\t\t\tdelta._cloneOperation.position.offset++;\n\t\t\tdelta._moveOperation.sourcePosition.path[ delta._moveOperation.sourcePosition.path.length - 2 ]++;\n\t\t\tdelta._moveOperation.targetPosition.path[ delta._moveOperation.targetPosition.path.length - 2 ]++;\n\t\t\tdelta._moveOperation.sourcePosition.offset = a.position.offset - b.position.offset;\n\n\t\t\t// If both SplitDeltas are taking their nodes from graveyard, we have to transform their ReinsertOperations.\n\t\t\tif (\n\t\t\t\ta._cloneOperation instanceof ReinsertOperation &&\n\t\t\t\tb._cloneOperation instanceof ReinsertOperation &&\n\t\t\t\ta._cloneOperation.sourcePosition.offset > b._cloneOperation.sourcePosition.offset\n\t\t\t) {\n\t\t\t\tdelta._cloneOperation.sourcePosition.offset--;\n\t\t\t}\n\n\t\t\treturn [ delta ];\n\t\t}\n\t}\n\n\treturn defaultTransform( a, b, isStrong );\n} );\n\n// Add special case for SplitDelta x UnwrapDelta transformation.\naddTransformationCase( SplitDelta, UnwrapDelta, ( a, b, isStrong ) => {\n\t// If incoming split delta tries to split a node that just got unwrapped, there is actually nothing to split,\n\t// so we discard that delta.\n\tif ( compareArrays( b.position.path, a.position.getParentPath() ) === 'same' ) {\n\t\treturn [ noDelta() ];\n\t}\n\n\treturn defaultTransform( a, b, isStrong );\n} );\n\n// Add special case for SplitDelta x WrapDelta transformation.\naddTransformationCase( SplitDelta, WrapDelta, ( a, b, isStrong ) => {\n\t// If split is applied at the position between wrapped nodes, we cancel the split as it's results may be unexpected and\n\t// very weird. Even if we do some \"magic\" we don't know what really are users' expectations.\n\n\tconst operateInSameParent = compareArrays( a.position.getParentPath(), b.range.start.getParentPath() ) === 'same';\n\tconst splitInsideWrapRange = b.range.start.offset < a.position.offset && b.range.end.offset >= a.position.offset;\n\n\tif ( operateInSameParent && splitInsideWrapRange ) {\n\t\treturn [ noDelta() ];\n\t} else if ( compareArrays( a.position.getParentPath(), b.range.end.getShiftedBy( -1 ).path ) === 'same' ) {\n\t\t// Split position is directly inside the last node from wrap range.\n\t\t// If that's the case, we manually change split delta so it will \"target\" inside the wrapping element.\n\t\t// By doing so we will be inserting split node right to the original node which feels natural and is a good UX.\n\t\tconst delta = a.clone();\n\n\t\t// 1. Fix insert operation position.\n\t\t// Node to split is the last children of the wrapping element.\n\t\t// Wrapping element is the element inserted by WrapDelta (re)insert operation.\n\t\t// It is inserted after the wrapped range, but the wrapped range will be moved inside it.\n\t\t// Having this in mind, it is correct to use wrapped range start position as the position before wrapping element.\n\t\tconst splitNodePos = Position.createFromPosition( b.range.start );\n\t\t// Now, `splitNodePos` points before wrapping element.\n\t\t// To get a position before last children of that element, we expand position's `path` member by proper offset.\n\t\tsplitNodePos.path.push( b.howMany - 1 );\n\n\t\t// SplitDelta insert operation position should be right after the node we split.\n\t\tconst insertPos = splitNodePos.getShiftedBy( 1 );\n\t\tdelta._cloneOperation.position = insertPos;\n\n\t\t// 2. Fix move operation source position.\n\t\t// Nodes moved by SplitDelta will be moved from new position, modified by WrapDelta.\n\t\t// To obtain that new position, `splitNodePos` will be used, as this is the node we are extracting children from.\n\t\tconst sourcePos = Position.createFromPosition( splitNodePos );\n\t\t// Nothing changed inside split node so it is correct to use the original split position offset.\n\t\tsourcePos.path.push( a.position.offset );\n\t\tdelta._moveOperation.sourcePosition = sourcePos;\n\n\t\t// 3. Fix move operation target position.\n\t\t// SplitDelta move operation target position should be inside the node inserted by operation above.\n\t\t// Since the node is empty, we will insert at offset 0.\n\t\tconst targetPos = Position.createFromPosition( insertPos );\n\t\ttargetPos.path.push( 0 );\n\t\tdelta._moveOperation.targetPosition = targetPos;\n\n\t\treturn [ delta ];\n\t}\n\n\treturn defaultTransform( a, b, isStrong );\n} );\n\n// Add special case for SplitDelta x WrapDelta transformation.\naddTransformationCase( SplitDelta, AttributeDelta, ( a, b ) => {\n\ta = a.clone();\n\n\tconst splitPosition = new Position( a.position.root, a.position.path.slice( 0, -1 ) );\n\n\tif ( a._cloneOperation instanceof InsertOperation ) {\n\t\t// If element to split had it's attribute changed, we have to reflect this change in an element\n\t\t// that is in SplitDelta's InsertOperation.\n\t\tfor ( const operation of b.operations ) {\n\t\t\tif ( operation.range.containsPosition( splitPosition ) || operation.range.start.isEqual( splitPosition ) ) {\n\t\t\t\tif ( operation.newValue !== null ) {\n\t\t\t\t\ta._cloneOperation.nodes.getNode( 0 ).setAttribute( operation.key, operation.newValue );\n\t\t\t\t} else {\n\t\t\t\t\ta._cloneOperation.nodes.getNode( 0 ).removeAttribute( operation.key );\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn [ a ];\n} );\n\n// Add special case for UnwrapDelta x SplitDelta transformation.\naddTransformationCase( UnwrapDelta, SplitDelta, ( a, b, isStrong ) => {\n\t// If incoming unwrap delta tries to unwrap node that got split we should unwrap the original node and the split copy.\n\t// This can be achieved either by reverting split and applying unwrap to singular node, or creating additional unwrap delta.\n\tif ( compareArrays( a.position.path, b.position.getParentPath() ) === 'same' ) {\n\t\tconst transformed = [\n\t\t\tb.getReversed(),\n\t\t\ta.clone()\n\t\t];\n\n\t\t// It's a kind of magic-magic-magic-maaaaagiiic!\n\t\ttransformed[ 1 ].operations[ 1 ].targetPosition.path[ 0 ]++;\n\t\t// But seriously, we have to fix RemoveOperation in the second delta because reversed UnwrapDelta creates\n\t\t// MergeDelta which also has RemoveOperation. Those two operations cannot point to the same \"holder\" element\n\t\t// in the graveyard, so we fix it by hand. This is the only case where it happens in \"special\" transformation\n\t\t// cases, and it won't happen for \"default\" transformation apart of RemoveDelta, where it is okay.\n\n\t\treturn transformed;\n\t}\n\n\treturn defaultTransform( a, b, isStrong );\n} );\n\n// Add special case for WeakInsertDelta x AttributeDelta transformation.\naddTransformationCase( WeakInsertDelta, AttributeDelta, ( a, b ) => {\n\t// If nodes are weak-inserted into attribute delta range, we need to apply changes from attribute delta on them.\n\tconst deltas = [ a.clone() ];\n\n\tif ( b.range.containsPosition( a.position ) ) {\n\t\tdeltas.push( _getComplementaryAttrDelta( a, b ) );\n\t}\n\n\treturn deltas;\n} );\n\n// Add special case for WrapDelta x SplitDelta transformation.\naddTransformationCase( WrapDelta, SplitDelta, ( a, b, isStrong ) => {\n\t// If incoming wrap delta tries to wrap range that contains split position, we have to cancel the split and apply\n\t// the wrap. Since split was already applied, we have to revert it.\n\n\tconst operateInSameParent = compareArrays( a.range.start.getParentPath(), b.position.getParentPath() ) === 'same';\n\tconst splitInsideWrapRange = a.range.start.offset < b.position.offset && a.range.end.offset >= b.position.offset;\n\n\tif ( operateInSameParent && splitInsideWrapRange ) {\n\t\treturn [\n\t\t\tb.getReversed(),\n\t\t\ta.clone()\n\t\t];\n\t} else if ( compareArrays( b.position.getParentPath(), a.range.end.getShiftedBy( -1 ).path ) === 'same' ) {\n\t\tconst delta = a.clone();\n\n\t\t// Move wrapping element insert position one node further so it is after the split node insertion.\n\t\tdelta._insertOperation.position.offset++;\n\n\t\t// Include the split node copy.\n\t\tdelta._moveOperation.howMany++;\n\n\t\t// Change the path to wrapping element in move operation.\n\t\tdelta._moveOperation.targetPosition.path[ delta._moveOperation.targetPosition.path.length - 2 ]++;\n\n\t\treturn [ delta ];\n\t}\n\n\treturn defaultTransform( a, b, isStrong );\n} );\n\n// Add special case for RenameDelta x SplitDelta transformation.\naddTransformationCase( RenameDelta, SplitDelta, ( a, b, isStrong ) => {\n\tconst splitPosition = new Position( b.position.root, b.position.path.slice( 0, -1 ) );\n\n\tconst deltas = defaultTransform( a, b, isStrong );\n\n\tif ( a.operations[ 0 ].position.isEqual( splitPosition ) ) {\n\t\t// If a node that has been split has it's name changed, we should also change name of\n\t\t// the node created during splitting.\n\t\tconst additionalRenameDelta = a.clone();\n\t\tadditionalRenameDelta.operations[ 0 ].position = a.operations[ 0 ].position.getShiftedBy( 1 );\n\n\t\tdeltas.push( additionalRenameDelta );\n\t}\n\n\treturn deltas;\n} );\n\n// Add special case for SplitDelta x RenameDelta transformation.\naddTransformationCase( SplitDelta, RenameDelta, ( a, b ) => {\n\ta = a.clone();\n\n\tconst splitPosition = new Position( a.position.root, a.position.path.slice( 0, -1 ) );\n\n\tif ( a._cloneOperation instanceof InsertOperation ) {\n\t\t// If element to split had it's name changed, we have to reflect this change in an element\n\t\t// that is in SplitDelta's InsertOperation.\n\t\tif ( b.operations[ 0 ].position.isEqual( splitPosition ) ) {\n\t\t\ta._cloneOperation.nodes.getNode( 0 ).name = b.operations[ 0 ].newName;\n\t\t}\n\t}\n\n\treturn [ a ];\n} );\n\n// Add special case for RemoveDelta x SplitDelta transformation.\naddTransformationCase( RemoveDelta, SplitDelta, ( a, b, isStrong ) => {\n\tconst deltas = defaultTransform( a, b, isStrong );\n\tconst insertPosition = b._cloneOperation.position;\n\n\t// In case if `defaultTransform` returned more than one delta.\n\tfor ( const delta of deltas ) {\n\t\tfor ( const operation of delta.operations ) {\n\t\t\tconst rangeEnd = operation.sourcePosition.getShiftedBy( operation.howMany );\n\n\t\t\tif ( rangeEnd.isEqual( insertPosition ) ) {\n\t\t\t\toperation.howMany += 1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn deltas;\n} );\n\n// Add special case for SplitDelta x RemoveDelta transformation.\naddTransformationCase( SplitDelta, RemoveDelta, ( a, b, isStrong ) => {\n\tb = b.clone();\n\n\tconst insertPosition = a._cloneOperation.position;\n\n\tfor ( const operation of b.operations ) {\n\t\tconst rangeEnd = operation.sourcePosition.getShiftedBy( operation.howMany );\n\n\t\tif ( rangeEnd.isEqual( insertPosition ) ) {\n\t\t\toperation.howMany += 1;\n\t\t}\n\t}\n\n\treturn defaultTransform( a, b, isStrong );\n} );\n\n// Helper function for `AttributeDelta` class transformations.\n// Creates an attribute delta that sets attribute from given `attributeDelta` on nodes from given `weakInsertDelta`.\nfunction _getComplementaryAttrDelta( weakInsertDelta, attributeDelta ) {\n\tconst complementaryAttrDelta = new AttributeDelta();\n\tconst nodes = weakInsertDelta.nodes;\n\n\t// At the beginning we store the attribute value from the first node on `weakInsertDelta` node list.\n\tlet val = nodes.getNode( 0 ).getAttribute( attributeDelta.key );\n\n\t// This stores the last index of `weakInsertDelta` node list where the attribute value was different\n\t// than in the previous node. We need it to create separate `AttributeOperation`s for nodes with different attributes.\n\tlet lastOffset = 0;\n\t// Sum of offsets of already processed nodes.\n\tlet offsetSum = nodes.getNode( 0 ).offsetSize;\n\n\tfor ( let i = 1; i < nodes.length; i++ ) {\n\t\tconst node = nodes.getNode( i );\n\t\tconst nodeAttrVal = node.getAttribute( attributeDelta.key );\n\n\t\t// If previous node has different attribute value, we will create an operation to the point before current node.\n\t\t// So all nodes with the same attributes up to this point will be included in one `AttributeOperation`.\n\t\tif ( nodeAttrVal != val ) {\n\t\t\t// New operation is created only when it is needed. If given node already has proper value for this\n\t\t\t// attribute we simply skip it without adding a new operation.\n\t\t\tif ( val != attributeDelta.value ) {\n\t\t\t\taddOperation();\n\t\t\t}\n\n\t\t\tval = nodeAttrVal;\n\t\t\tlastOffset = offsetSum;\n\t\t}\n\n\t\toffsetSum = offsetSum + node.offsetSize;\n\t}\n\n\t// At the end we have to add additional `AttributeOperation` for the last part of node list. If all nodes on the\n\t// node list had same attributes, this will be the only operation added to the delta.\n\taddOperation();\n\n\treturn complementaryAttrDelta;\n\n\tfunction addOperation() {\n\t\tconst range = new Range(\n\t\t\tweakInsertDelta.position.getShiftedBy( lastOffset ),\n\t\t\tweakInsertDelta.position.getShiftedBy( offsetSum )\n\t\t);\n\n\t\tconst attrOperation = new AttributeOperation( range, attributeDelta.key, val, attributeDelta.value, 0 );\n\t\tcomplementaryAttrDelta.addOperation( attrOperation );\n\t}\n}\n\n// This is \"no-op\" delta, it has no type and only no-operation, it basically does nothing.\n// It is used when we don't want to apply changes but still we need to return a delta.\nfunction noDelta() {\n\tconst noDelta = new Delta();\n\n\t// BaseVersion will be fixed later anyway.\n\tnoDelta.addOperation( new NoOperation( 0 ) );\n\n\treturn noDelta;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/delta/basic-transformations.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/delta/markerdelta\n */\n\nimport Delta from './delta';\nimport DeltaFactory from './deltafactory';\nimport { register } from '../batch';\nimport MarkerOperation from '../operation/markeroperation';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * @classdesc\n * To provide specific OT behavior and better collisions solving, the {@link module:engine/model/batch~Batch#setMarker Batch#setMarker}\n * and {@link module:engine/model/batch~Batch#removeMarker Batch#removeMarker} methods use the `MarkerDelta` class which inherits\n * from the `Delta` class and may overwrite some methods.\n */\nexport default class MarkerDelta extends Delta {\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\treturn 'marker';\n\t}\n\n\t/**\n\t * A class that will be used when creating reversed delta.\n\t *\n\t * @private\n\t * @type {Function}\n\t */\n\tget _reverseDeltaClass() {\n\t\treturn MarkerDelta;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'engine.model.delta.MarkerDelta';\n\t}\n}\n\n/**\n * Adds or updates {@link module:engine/model/markercollection~Marker marker} with given name to given `range`.\n *\n * If passed name is a name of already existing marker (or {@link module:engine/model/markercollection~Marker Marker} instance\n * is passed), `range` parameter may be omitted. In this case marker will not be updated in\n * {@link module:engine/model/document~Document#markers document marker collection}. However the marker will be added to\n * the document history. This may be important for other features, like undo. From document history point of view, it will\n * look like the marker was created and added to the document at the moment when it is set using this method.\n *\n * This is useful if the marker is created before it can be added to document history (e.g. a feature creating the marker\n * is waiting for additional data, etc.). In this case, the marker may be first created directly through\n * {@link module:engine/model/markercollection~MarkerCollection MarkerCollection API} and only later added using `Batch` API.\n *\n * @chainable\n * @method module:engine/model/batch~Batch#setMarker\n * @param {module:engine/model/markercollection~Marker|String} markerOrName Marker or marker name to add or update.\n * @param {module:engine/model/range~Range} [newRange] Marker range.\n */\nregister( 'setMarker', function( markerOrName, newRange ) {\n\tconst name = typeof markerOrName == 'string' ? markerOrName : markerOrName.name;\n\tconst currentMarker = this.document.markers.get( name );\n\n\tif ( !newRange && !currentMarker ) {\n\t\t/**\n\t\t * Range parameter is required when adding a new marker.\n\t\t *\n\t\t * @error batch-setMarker-no-range\n\t\t */\n\t\tthrow new CKEditorError( 'batch-setMarker-no-range: Range parameter is required when adding a new marker.' );\n\t}\n\n\tconst currentRange = currentMarker ? currentMarker.getRange() : null;\n\n\tif ( !newRange ) {\n\t\t// If `newRange` is not given, treat this as synchronizing existing marker.\n\t\t// Create `MarkerOperation` with `oldRange` set to `null`, so reverse operation will remove the marker.\n\t\taddOperation( this, name, null, currentRange );\n\t} else {\n\t\t// Just change marker range.\n\t\taddOperation( this, name, currentRange, newRange );\n\t}\n\n\treturn this;\n} );\n\n/**\n * Removes given {@link module:engine/model/markercollection~Marker marker} or marker with given name.\n *\n * @chainable\n * @method module:engine/model/batch~Batch#removeMarker\n * @param {module:engine/model/markercollection~Marker|String} markerOrName Marker or marker name to remove.\n */\nregister( 'removeMarker', function( markerOrName ) {\n\tconst name = typeof markerOrName == 'string' ? markerOrName : markerOrName.name;\n\n\tif ( !this.document.markers.has( name ) ) {\n\t\t/**\n\t\t * Trying to remove marker that does not exist.\n\t\t *\n\t\t * @error batch-removeMarker-no-marker\n\t\t */\n\t\tthrow new CKEditorError( 'batch-removeMarker-no-marker: Trying to remove marker that does not exist.' );\n\t}\n\n\tconst oldRange = this.document.markers.get( name ).getRange();\n\n\taddOperation( this, name, oldRange, null );\n\n\treturn this;\n} );\n\nfunction addOperation( batch, name, oldRange, newRange ) {\n\tconst doc = batch.document;\n\tconst delta = new MarkerDelta();\n\n\tconst operation = new MarkerOperation( name, oldRange, newRange, doc.markers, doc.version );\n\n\tbatch.addDelta( delta );\n\tdelta.addOperation( operation );\n\tdoc.applyOperation( operation );\n}\n\nDeltaFactory.register( MarkerDelta );\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/delta/markerdelta.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/document\n */\n\n// Load all basic deltas and transformations, they register themselves, but they need to be imported somewhere.\n/* eslint-disable no-unused-vars */\nimport deltas from './delta/basic-deltas';\nimport transformations from './delta/basic-transformations';\n/* eslint-enable no-unused-vars */\n\nimport Range from './range';\nimport Position from './position';\nimport RootElement from './rootelement';\nimport Batch from './batch';\nimport History from './history';\nimport LiveSelection from './liveselection';\nimport Schema from './schema';\nimport TreeWalker from './treewalker';\nimport MarkerCollection from './markercollection';\nimport clone from '@ckeditor/ckeditor5-utils/src/lib/lodash/clone';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport { isInsideSurrogatePair, isInsideCombinedSymbol } from '@ckeditor/ckeditor5-utils/src/unicode';\n\nconst graveyardName = '$graveyard';\n\n/**\n * Document tree model describes all editable data in the editor. It may contain multiple\n * {@link module:engine/model/document~Document#roots root elements}, for example if the editor have multiple editable areas,\n * each area will be represented by the separate root.\n *\n * All changes in the document are done by {@link module:engine/model/operation/operation~Operation operations}. To create operations in\n * a simple way, use the {@link module:engine/model/batch~Batch} API, for example:\n *\n *\t\tdoc.batch().insert( position, nodes ).split( otherPosition );\n *\n * @see module:engine/model/document~Document#batch\n * @mixes module:utils/emittermixin~EmitterMixin\n */\nexport default class Document {\n\t/**\n\t * Creates an empty document instance with no {@link #roots} (other than\n\t * the {@link #graveyard graveyard root}).\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Document version. It starts from `0` and every operation increases the version number. It is used to ensure that\n\t\t * operations are applied on the proper document version.\n\t\t * If the {@link module:engine/model/operation/operation~Operation#baseVersion} will not match document version the\n\t\t * {@link module:utils/ckeditorerror~CKEditorError model-document-applyOperation-wrong-version} error is thrown.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number}\n\t\t */\n\t\tthis.version = 0;\n\n\t\t/**\n\t\t * Schema for this document.\n\t\t *\n\t\t * @member {module:engine/model/schema~Schema}\n\t\t */\n\t\tthis.schema = new Schema();\n\n\t\t/**\n\t\t * Document's history.\n\t\t *\n\t\t * **Note:** Be aware that deltas applied to the document might get removed or changed.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/history~History}\n\t\t */\n\t\tthis.history = new History( this );\n\n\t\t/**\n\t\t * Document's markers' collection.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/markercollection~MarkerCollection}\n\t\t */\n\t\tthis.markers = new MarkerCollection();\n\n\t\t/**\n\t\t * Selection done on this document.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/liveselection~LiveSelection}\n\t\t */\n\t\tthis.selection = new LiveSelection( this );\n\n\t\t/**\n\t\t * Array of pending changes. See: {@link #enqueueChanges}.\n\t\t *\n\t\t * @private\n\t\t * @member {Array.<Function>}\n\t\t */\n\t\tthis._pendingChanges = [];\n\n\t\t/**\n\t\t * List of roots that are owned and managed by this document. Use {@link #createRoot} and\n\t\t * {@link #getRoot} to manipulate it.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Map}\n\t\t */\n\t\tthis.roots = new Map();\n\n\t\t// Add events that will ensure selection correctness.\n\t\tthis.selection.on( 'change:range', () => {\n\t\t\tfor ( const range of this.selection.getRanges() ) {\n\t\t\t\tif ( !this._validateSelectionRange( range ) ) {\n\t\t\t\t\t/**\n\t\t\t\t\t * Range from document selection starts or ends at incorrect position.\n\t\t\t\t\t *\n\t\t\t\t\t * @error document-selection-wrong-position\n\t\t\t\t\t * @param {module:engine/model/range~Range} range\n\t\t\t\t\t */\n\t\t\t\t\tthrow new CKEditorError( 'document-selection-wrong-position: ' +\n\t\t\t\t\t\t'Range from document selection starts or ends at incorrect position.', { range } );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t// Graveyard tree root. Document always have a graveyard root, which stores removed nodes.\n\t\tthis.createRoot( '$root', graveyardName );\n\t}\n\n\t/**\n\t * Graveyard tree root. Document always have a graveyard root, which stores removed nodes.\n\t *\n\t * @readonly\n\t * @member {module:engine/model/rootelement~RootElement}\n\t */\n\tget graveyard() {\n\t\treturn this.getRoot( graveyardName );\n\t}\n\n\t/**\n\t * This is the entry point for all document changes. All changes on the document are done using\n\t * {@link module:engine/model/operation/operation~Operation operations}. To create operations in the simple way use the\n\t * {@link module:engine/model/batch~Batch} API available via {@link #batch} method.\n\t *\n\t * @fires event:change\n\t * @param {module:engine/model/operation/operation~Operation} operation Operation to be applied.\n\t */\n\tapplyOperation( operation ) {\n\t\tif ( operation.baseVersion !== this.version ) {\n\t\t\t/**\n\t\t\t * Only operations with matching versions can be applied.\n\t\t\t *\n\t\t\t * @error document-applyOperation-wrong-version\n\t\t\t * @param {module:engine/model/operation/operation~Operation} operation\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-document-applyOperation-wrong-version: Only operations with matching versions can be applied.',\n\t\t\t\t{ operation } );\n\t\t}\n\n\t\tconst changes = operation._execute();\n\n\t\tthis.version++;\n\n\t\tthis.history.addDelta( operation.delta );\n\n\t\tif ( changes ) {\n\t\t\t// `NoOperation` returns no changes, do not fire event for it.\n\t\t\tthis.fire( 'change', operation.type, changes, operation.delta.batch, operation.delta.type );\n\t\t}\n\t}\n\n\t/**\n\t * Creates a {@link module:engine/model/batch~Batch} instance which allows to change the document.\n\t *\n\t * @param {String} [type] Batch type. See {@link module:engine/model/batch~Batch#type}.\n\t * @returns {module:engine/model/batch~Batch} Batch instance.\n\t */\n\tbatch( type ) {\n\t\treturn new Batch( this, type );\n\t}\n\n\t/**\n\t * Creates a new top-level root.\n\t *\n\t * @param {String} [elementName='$root'] Element name. Defaults to `'$root'` which also have\n\t * some basic schema defined (`$block`s are allowed inside the `$root`). Make sure to define a proper\n\t * schema if you use a different name.\n\t * @param {String} [rootName='main'] Unique root name.\n\t * @returns {module:engine/model/rootelement~RootElement} Created root.\n\t */\n\tcreateRoot( elementName = '$root', rootName = 'main' ) {\n\t\tif ( this.roots.has( rootName ) ) {\n\t\t\t/**\n\t\t\t * Root with specified name already exists.\n\t\t\t *\n\t\t\t * @error document-createRoot-name-exists\n\t\t\t * @param {module:engine/model/document~Document} doc\n\t\t\t * @param {String} name\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-document-createRoot-name-exists: Root with specified name already exists.',\n\t\t\t\t{ name: rootName }\n\t\t\t);\n\t\t}\n\n\t\tconst root = new RootElement( this, elementName, rootName );\n\t\tthis.roots.set( rootName, root );\n\n\t\treturn root;\n\t}\n\n\t/**\n\t * Removes all events listeners set by document instance.\n\t */\n\tdestroy() {\n\t\tthis.selection.destroy();\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Enqueues document changes. Any changes to be done on document (mostly using {@link #batch}\n\t * should be placed in the queued callback. If no other plugin is changing document at the moment, the callback will be\n\t * called immediately. Otherwise it will wait for all previously queued changes to finish happening. This way\n\t * queued callback will not interrupt other callbacks.\n\t *\n\t * When all queued changes are done {@link #event:changesDone} event is fired.\n\t *\n\t * @fires changesDone\n\t * @param {Function} callback Callback to enqueue.\n\t */\n\tenqueueChanges( callback ) {\n\t\tthis._pendingChanges.push( callback );\n\n\t\tif ( this._pendingChanges.length == 1 ) {\n\t\t\twhile ( this._pendingChanges.length ) {\n\t\t\t\tthis._pendingChanges[ 0 ]();\n\t\t\t\tthis._pendingChanges.shift();\n\t\t\t}\n\n\t\t\tthis.fire( 'changesDone' );\n\t\t}\n\t}\n\n\t/**\n\t * Returns top-level root by its name.\n\t *\n\t * @param {String} [name='main'] Unique root name.\n\t * @returns {module:engine/model/rootelement~RootElement} Root registered under given name.\n\t */\n\tgetRoot( name = 'main' ) {\n\t\tif ( !this.roots.has( name ) ) {\n\t\t\t/**\n\t\t\t * Root with specified name does not exist.\n\t\t\t *\n\t\t\t * @error document-getRoot-root-not-exist\n\t\t\t * @param {String} name\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'model-document-getRoot-root-not-exist: Root with specified name does not exist.',\n\t\t\t\t{ name }\n\t\t\t);\n\t\t}\n\n\t\treturn this.roots.get( name );\n\t}\n\n\t/**\n\t * Checks if root with given name is defined.\n\t *\n\t * @param {String} name Name of root to check.\n\t * @returns {Boolean}\n\t */\n\thasRoot( name ) {\n\t\treturn this.roots.has( name );\n\t}\n\n\t/**\n\t * Returns array with names of all roots (without the {@link #graveyard}) added to the document.\n\t *\n\t * @returns {Array.<String>} Roots names.\n\t */\n\tgetRootNames() {\n\t\treturn Array.from( this.roots.keys() ).filter( name => name != graveyardName );\n\t}\n\n\t/**\n\t * Basing on given `position`, finds and returns a {@link module:engine/model/range~Range Range} instance that is\n\t * nearest to that `position` and is a correct range for selection.\n\t *\n\t * Correct selection range might be collapsed - when it's located in position where text node can be placed.\n\t * Non-collapsed range is returned when selection can be placed around element marked as \"object\" in\n\t * {@link module:engine/model/schema~Schema schema}.\n\t *\n\t * Direction of searching for nearest correct selection range can be specified as:\n\t * * `both` - searching will be performed in both ways,\n\t * * `forward` - searching will be performed only forward,\n\t * * `backward` - searching will be performed only backward.\n\t *\n\t * When valid selection range cannot be found, `null` is returned.\n\t *\n\t * @param {module:engine/model/position~Position} position Reference position where new selection range should be looked for.\n\t * @param {'both'|'forward'|'backward'} [direction='both'] Search direction.\n\t * @returns {module:engine/model/range~Range|null} Nearest selection range or `null` if one cannot be found.\n\t */\n\tgetNearestSelectionRange( position, direction = 'both' ) {\n\t\t// Return collapsed range if provided position is valid.\n\t\tif ( this.schema.check( { name: '$text', inside: position } ) ) {\n\t\t\treturn new Range( position );\n\t\t}\n\n\t\tlet backwardWalker, forwardWalker;\n\n\t\tif ( direction == 'both' || direction == 'backward' ) {\n\t\t\tbackwardWalker = new TreeWalker( { startPosition: position, direction: 'backward' } );\n\t\t}\n\n\t\tif ( direction == 'both' || direction == 'forward' ) {\n\t\t\tforwardWalker = new TreeWalker( { startPosition: position } );\n\t\t}\n\n\t\tfor ( const data of combineWalkers( backwardWalker, forwardWalker ) ) {\n\t\t\tconst type = ( data.walker == backwardWalker ? 'elementEnd' : 'elementStart' );\n\t\t\tconst value = data.value;\n\n\t\t\tif ( value.type == type && this.schema.objects.has( value.item.name ) ) {\n\t\t\t\treturn Range.createOn( value.item );\n\t\t\t}\n\n\t\t\tif ( this.schema.check( { name: '$text', inside: value.nextPosition } ) ) {\n\t\t\t\treturn new Range( value.nextPosition );\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Custom toJSON method to solve child-parent circular dependencies.\n\t *\n\t * @returns {Object} Clone of this object with the document property changed to string.\n\t */\n\ttoJSON() {\n\t\tconst json = clone( this );\n\n\t\t// Due to circular references we need to remove parent reference.\n\t\tjson.selection = '[engine.model.LiveSelection]';\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * Returns default root for this document which is either the first root that was added to the the document using\n\t * {@link #createRoot} or the {@link #graveyard graveyard root} if no other roots were created.\n\t *\n\t * @protected\n\t * @returns {module:engine/model/rootelement~RootElement} The default root for this document.\n\t */\n\t_getDefaultRoot() {\n\t\tfor ( const root of this.roots.values() ) {\n\t\t\tif ( root !== this.graveyard ) {\n\t\t\t\treturn root;\n\t\t\t}\n\t\t}\n\n\t\treturn this.graveyard;\n\t}\n\n\t/**\n\t * Returns a default range for this selection. The default range is a collapsed range that starts and ends\n\t * at the beginning of this selection's document's {@link #_getDefaultRoot default root}.\n\t *\n\t * @protected\n\t * @returns {module:engine/model/range~Range}\n\t */\n\t_getDefaultRange() {\n\t\tconst defaultRoot = this._getDefaultRoot();\n\n\t\t// Find the first position where the selection can be put.\n\t\tconst position = new Position( defaultRoot, [ 0 ] );\n\t\tconst nearestRange = this.getNearestSelectionRange( position );\n\n\t\t// If valid selection range is not found - return range collapsed at the beginning of the root.\n\t\treturn nearestRange || new Range( position );\n\t}\n\n\t/**\n\t * Checks whether given {@link module:engine/model/range~Range range} is a valid range for\n\t * {@link #selection document's selection}.\n\t *\n\t * @private\n\t * @param {module:engine/model/range~Range} range Range to check.\n\t * @returns {Boolean} `true` if `range` is valid, `false` otherwise.\n\t */\n\t_validateSelectionRange( range ) {\n\t\treturn validateTextNodePosition( range.start ) && validateTextNodePosition( range.end );\n\t}\n\n\t/**\n\t * Fired when document changes by applying an operation.\n\t *\n\t * There are 5 types of change:\n\t *\n\t * * 'insert' when nodes are inserted,\n\t * * 'remove' when nodes are removed,\n\t * * 'reinsert' when remove is undone,\n\t * * 'move' when nodes are moved,\n\t * * 'addAttribute' when attributes are added,\n\t * * 'removeAttribute' when attributes are removed,\n\t * * 'changeAttribute' when attributes change,\n\t * * 'addRootAttribute' when attribute for root is added,\n\t * * 'removeRootAttribute' when attribute for root is removed,\n\t * * 'changeRootAttribute' when attribute for root changes.\n\t *\n\t * @event change\n\t * @param {String} type Change type, possible option: 'insert', 'remove', 'reinsert', 'move', 'attribute'.\n\t * @param {Object} data Additional information about the change.\n\t * @param {module:engine/model/range~Range} data.range Range in model containing changed nodes. Note that the range state is\n\t * after changes has been done, i.e. for 'remove' the range will be in the {@link #graveyard graveyard root}.\n\t * This is `undefined` for \"...root...\" types.\n\t * @param {module:engine/model/position~Position} [data.sourcePosition] Change source position.\n\t * Exists for 'remove', 'reinsert' and 'move'.\n\t * Note that this position state is before changes has been done, i.e. for 'reinsert' the source position will be in the\n\t * {@link #graveyard graveyard root}.\n\t * @param {String} [data.key] Only for attribute types. Key of changed / inserted / removed attribute.\n\t * @param {*} [data.oldValue] Only for 'removeAttribute', 'removeRootAttribute', 'changeAttribute' or\n\t * 'changeRootAttribute' type.\n\t * @param {*} [data.newValue] Only for 'addAttribute', 'addRootAttribute', 'changeAttribute' or\n\t * 'changeRootAttribute' type.\n\t * @param {module:engine/model/rootelement~RootElement} [changeInfo.root] Root element which attributes got changed. This is defined\n\t * only for root types.\n\t * @param {module:engine/model/batch~Batch} batch A {@link module:engine/model/batch~Batch batch}\n\t * of changes which this change is a part of.\n\t */\n\n\t/**\n\t * Fired when all queued document changes are done. See {@link #enqueueChanges}.\n\t *\n\t * @event changesDone\n\t */\n}\n\nmix( Document, EmitterMixin );\n\n// Checks whether given range boundary position is valid for document selection, meaning that is not between\n// unicode surrogate pairs or base character and combining marks.\nfunction validateTextNodePosition( rangeBoundary ) {\n\tconst textNode = rangeBoundary.textNode;\n\n\tif ( textNode ) {\n\t\tconst data = textNode.data;\n\t\tconst offset = rangeBoundary.offset - textNode.startOffset;\n\n\t\treturn !isInsideSurrogatePair( data, offset ) && !isInsideCombinedSymbol( data, offset );\n\t}\n\n\treturn true;\n}\n\n// Generator function returning values from provided walkers, switching between them at each iteration. If only one walker\n// is provided it will return data only from that walker.\n//\n// @param {module:engine/module/treewalker~TreeWalker} [backward] Walker iterating in backward direction.\n// @param {module:engine/module/treewalker~TreeWalker} [forward] Walker iterating in forward direction.\n// @returns {Iterable.<Object>} Object returned at each iteration contains `value` and `walker` (informing which walker returned\n// given value) fields.\nfunction* combineWalkers( backward, forward ) {\n\tlet done = false;\n\n\twhile ( !done ) {\n\t\tdone = true;\n\n\t\tif ( backward ) {\n\t\t\tconst step = backward.next();\n\n\t\t\tif ( !step.done ) {\n\t\t\t\tdone = false;\n\t\t\t\tyield{\n\t\t\t\t\twalker: backward,\n\t\t\t\t\tvalue: step.value\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( forward ) {\n\t\t\tconst step = forward.next();\n\n\t\t\tif ( !step.done ) {\n\t\t\t\tdone = false;\n\t\t\t\tyield{\n\t\t\t\t\twalker: forward,\n\t\t\t\t\tvalue: step.value\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/document.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/history\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * `History` keeps the track of all the deltas applied to the {@link module:engine/model/document~Document document}. Deltas stored in\n * `History` might get updated, split into more deltas or even removed. This is used mostly to compress history, instead\n * of keeping all deltas in a state in which they were applied.\n *\n * **Note:** deltas kept in `History` should be used only to transform deltas. It's not advised to use `History` to get\n * original delta basing on it's {@link module:engine/model/delta/delta~Delta#baseVersion baseVersion}. Also, after transforming a\n * delta by deltas from `History`,\n * fix it's base version accordingly (set it to {@link module:engine/model/document~Document#version document version}).\n */\nexport default class History {\n\t/**\n\t * Creates an empty History instance.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Deltas added to the history.\n\t\t *\n\t\t * @protected\n\t\t * @member {Array.<module:engine/model/delta/delta~Delta>} module:engine/model/history~History#_deltas\n\t\t */\n\t\tthis._deltas = [];\n\n\t\t/**\n\t\t * Helper structure that maps added delta's base version to the index in {@link module:engine/model/history~History#_deltas}\n\t\t * at which the delta was added.\n\t\t *\n\t\t * @protected\n\t\t * @member {Map} module:engine/model/history~History#_historyPoints\n\t\t */\n\t\tthis._historyPoints = new Map();\n\t}\n\n\t/**\n\t * Adds delta to the history.\n\t *\n\t * @param {module:engine/model/delta/delta~Delta} delta Delta to add.\n\t */\n\taddDelta( delta ) {\n\t\tif ( delta.operations.length > 0 && !this._historyPoints.has( delta.baseVersion ) ) {\n\t\t\tconst index = this._deltas.length;\n\n\t\t\tthis._deltas[ index ] = delta;\n\t\t\tthis._historyPoints.set( delta.baseVersion, index );\n\t\t}\n\t}\n\n\t/**\n\t * Returns deltas added to the history.\n\t *\n\t * @param {Number} [from=0] Base version from which deltas should be returned (inclusive). Defaults to `0`, which means\n\t * that deltas from the first one will be returned.\n\t * @param {Number} [to=Number.POSITIVE_INFINITY] Base version up to which deltas should be returned (exclusive).\n\t * Defaults to `Number.POSITIVE_INFINITY` which means that deltas up to the last one will be returned.\n\t * @returns {Iterator.<module:engine/model/delta/delta~Delta>} Deltas added to the history.\n\t */\n\t* getDeltas( from = 0, to = Number.POSITIVE_INFINITY ) {\n\t\t// No deltas added, nothing to yield.\n\t\tif ( this._deltas.length === 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Will throw if base version is incorrect.\n\t\tlet fromIndex = this._getIndex( from );\n\n\t\t// Base version is too low or too high and is not found in history.\n\t\tif ( fromIndex == -1 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// We have correct `fromIndex` so let's iterate starting from it.\n\t\twhile ( fromIndex < this._deltas.length ) {\n\t\t\tconst delta = this._deltas[ fromIndex++ ];\n\n\t\t\tif ( delta.baseVersion >= to ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tyield delta;\n\t\t}\n\t}\n\n\t/**\n\t * Returns one or more deltas from history that bases on given `baseVersion`. Most often it will be just\n\t * one delta, but if that delta got updated by multiple deltas, all of those updated deltas will be returned.\n\t *\n\t * @see module:engine/model/history~History#updateDelta\n\t * @param {Number} baseVersion Base version of the delta to retrieve.\n\t * @returns {Array.<module:engine/model/delta/delta~Delta>|null} Delta with given base version or null if no such delta is in history.\n\t */\n\tgetDelta( baseVersion ) {\n\t\tlet index = this._historyPoints.get( baseVersion );\n\n\t\tif ( index === undefined ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst deltas = [];\n\n\t\tfor ( index; index < this._deltas.length; index++ ) {\n\t\t\tconst delta = this._deltas[ index ];\n\n\t\t\tif ( delta.baseVersion != baseVersion ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tdeltas.push( delta );\n\t\t}\n\n\t\treturn deltas.length === 0 ? null : deltas;\n\t}\n\n\t/**\n\t * Removes delta from the history. This happens i.e., when a delta is undone by another delta. Both undone delta and\n\t * undoing delta should be removed so they won't have an impact on transforming other deltas.\n\t *\n\t * **Note:** using this method does not change the state of {@link module:engine/model/document~Document model}. It just affects\n\t * the state of `History`.\n\t *\n\t * **Note:** when some deltas are removed, deltas between them should probably get updated. See\n\t * {@link module:engine/model/history~History#updateDelta}.\n\t *\n\t * **Note:** if delta with `baseVersion` got {@link module:engine/model/history~History#updateDelta updated} by multiple\n\t * deltas, all updated deltas will be removed.\n\t *\n\t * @param {Number} baseVersion Base version of a delta to be removed.\n\t */\n\tremoveDelta( baseVersion ) {\n\t\tthis.updateDelta( baseVersion, [] );\n\t}\n\n\t/**\n\t * Substitutes delta in history by one or more given deltas.\n\t *\n\t * **Note:** if delta with `baseVersion` was already updated by multiple deltas, all updated deltas will be removed\n\t * and new deltas will be inserted at their position.\n\t *\n\t * **Note:** removed delta won't get updated.\n\t *\n\t * @param {Number} baseVersion Base version of a delta to update.\n\t * @param {Iterable.<module:engine/model/delta/delta~Delta>} updatedDeltas Deltas to be inserted in place of updated delta.\n\t */\n\tupdateDelta( baseVersion, updatedDeltas ) {\n\t\tconst deltas = this.getDelta( baseVersion );\n\n\t\t// If there are no deltas, stop executing function as there is nothing to update.\n\t\tif ( deltas === null ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that every updated delta has correct `baseVersion`.\n\t\t// This is crucial for algorithms in `History` and algorithms using `History`.\n\t\tfor ( const delta of updatedDeltas ) {\n\t\t\tdelta.baseVersion = baseVersion;\n\t\t}\n\n\t\t// Put updated deltas in place of old deltas.\n\t\tthis._deltas.splice( this._getIndex( baseVersion ), deltas.length, ...updatedDeltas );\n\n\t\t// Update history points.\n\t\tconst changeBy = updatedDeltas.length - deltas.length;\n\n\t\tfor ( const key of this._historyPoints.keys() ) {\n\t\t\tif ( key > baseVersion ) {\n\t\t\t\tthis._historyPoints.set( key, this._historyPoints.get( key ) + changeBy );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets an index in {@link module:engine/model/history~History#_deltas} where delta with given `baseVersion` is added.\n\t *\n\t * @private\n\t * @param {Number} baseVersion Base version of delta.\n\t */\n\t_getIndex( baseVersion ) {\n\t\tconst index = this._historyPoints.get( baseVersion );\n\n\t\t// Base version not found - it is either too high or too low, or is in the middle of delta.\n\t\tif ( index === undefined ) {\n\t\t\tconst lastDelta = this._deltas[ this._deltas.length - 1 ];\n\t\t\tconst nextBaseVersion = lastDelta.baseVersion + lastDelta.operations.length;\n\n\t\t\tif ( baseVersion < 0 || baseVersion >= nextBaseVersion ) {\n\t\t\t\t// Base version is too high or too low - it's acceptable situation.\n\t\t\t\t// Return -1 because `baseVersion` was correct.\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Given base version points to the middle of a delta.\n\t\t\t *\n\t\t\t * @error history-wrong-version\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-history-wrong-version: Given base version points to the middle of a delta.' );\n\t\t}\n\n\t\treturn index;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/history.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/liveselection\n */\n\nimport Position from './position';\nimport Range from './range';\nimport LiveRange from './liverange';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport toMap from '@ckeditor/ckeditor5-utils/src/tomap';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\n\nimport Selection from './selection';\n\nconst storePrefix = 'selection:';\n\nconst attrOpTypes = new Set(\n\t[ 'addAttribute', 'removeAttribute', 'changeAttribute', 'addRootAttribute', 'removeRootAttribute', 'changeRootAttribute' ]\n);\n\n/**\n * `LiveSelection` is a type of {@link module:engine/model/selection~Selection selection} that listens to changes on a\n * {@link module:engine/model/document~Document document} and has it ranges updated accordingly. Internal implementation of this\n * mechanism bases on {@link module:engine/model/liverange~LiveRange live ranges}.\n *\n * Differences between {@link module:engine/model/selection~Selection} and `LiveSelection` are:\n * * there is always a range in `LiveSelection` - even if no ranges were added there is a\n * {@link module:engine/model/liveselection~LiveSelection#_getDefaultRange \"default range\"} present in the selection,\n * * ranges added to this selection updates automatically when the document changes,\n * * attributes of `LiveSelection` are updated automatically according to selection ranges.\n *\n * Since `LiveSelection` uses {@link module:engine/model/liverange~LiveRange live ranges}\n * and is updated when {@link module:engine/model/document~Document document}\n * changes, it cannot be set on {@link module:engine/model/node~Node nodes}\n * that are inside {@link module:engine/model/documentfragment~DocumentFragment document fragment}.\n * If you need to represent a selection in document fragment,\n * use {@link module:engine/model/selection~Selection Selection class} instead.\n *\n * @extends module:engine/model/selection~Selection\n */\nexport default class LiveSelection extends Selection {\n\t/**\n\t * Creates an empty live selection for given {@link module:engine/model/document~Document}.\n\t *\n\t * @param {module:engine/model/document~Document} document Document which owns this selection.\n\t */\n\tconstructor( document ) {\n\t\tsuper();\n\n\t\t/**\n\t\t * Document which owns this selection.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:engine/model/document~Document} module:engine/model/liveselection~LiveSelection#_document\n\t\t */\n\t\tthis._document = document;\n\n\t\t/**\n\t\t * Keeps mapping of attribute name to priority with which the attribute got modified (added/changed/removed)\n\t\t * last time. Possible values of priority are: `'low'` and `'normal'`.\n\t\t *\n\t\t * Priorities are used by internal `LiveSelection` mechanisms. All attributes set using `LiveSelection`\n\t\t * attributes API are set with `'normal'` priority.\n\t\t *\n\t\t * @private\n\t\t * @member {Map} module:engine/model/liveselection~LiveSelection#_attributePriority\n\t\t */\n\t\tthis._attributePriority = new Map();\n\n\t\t// Whenever attribute operation is performed on document, update selection attributes.\n\t\t// This is not the most efficient way to update selection attributes, but should be okay for now.\n\t\tthis.listenTo( this._document, 'change', ( evt, type ) => {\n\t\t\tif ( attrOpTypes.has( type ) ) {\n\t\t\t\tthis._updateAttributes( false );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget isCollapsed() {\n\t\tconst length = this._ranges.length;\n\n\t\treturn length === 0 ? true : super.isCollapsed;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget anchor() {\n\t\treturn super.anchor || this._document._getDefaultRange().start;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget focus() {\n\t\treturn super.focus || this._document._getDefaultRange().start;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget rangeCount() {\n\t\treturn this._ranges.length ? this._ranges.length : 1;\n\t}\n\n\t/**\n\t * Unbinds all events previously bound by document selection.\n\t */\n\tdestroy() {\n\t\tfor ( let i = 0; i < this._ranges.length; i++ ) {\n\t\t\tthis._ranges[ i ].detach();\n\t\t}\n\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t* getRanges() {\n\t\tif ( this._ranges.length ) {\n\t\t\tyield* super.getRanges();\n\t\t} else {\n\t\t\tyield this._document._getDefaultRange();\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tgetFirstRange() {\n\t\treturn super.getFirstRange() || this._document._getDefaultRange();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tgetLastRange() {\n\t\treturn super.getLastRange() || this._document._getDefaultRange();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\taddRange( range, isBackward = false ) {\n\t\tsuper.addRange( range, isBackward );\n\t\tthis.refreshAttributes();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tremoveAllRanges() {\n\t\tsuper.removeAllRanges();\n\t\tthis.refreshAttributes();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tsetRanges( newRanges, isLastBackward = false ) {\n\t\tsuper.setRanges( newRanges, isLastBackward );\n\t\tthis.refreshAttributes();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tsetAttribute( key, value ) {\n\t\t// Store attribute in parent element if the selection is collapsed in an empty node.\n\t\tif ( this.isCollapsed && this.anchor.parent.childCount === 0 ) {\n\t\t\tthis._storeAttribute( key, value );\n\t\t}\n\n\t\tif ( this._setAttribute( key, value ) ) {\n\t\t\t// Fire event with exact data.\n\t\t\tconst attributeKeys = [ key ];\n\t\t\tthis.fire( 'change:attribute', { attributeKeys, directChange: true } );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tremoveAttribute( key ) {\n\t\t// Remove stored attribute from parent element if the selection is collapsed in an empty node.\n\t\tif ( this.isCollapsed && this.anchor.parent.childCount === 0 ) {\n\t\t\tthis._removeStoredAttribute( key );\n\t\t}\n\n\t\tif ( this._removeAttribute( key ) ) {\n\t\t\t// Fire event with exact data.\n\t\t\tconst attributeKeys = [ key ];\n\t\t\tthis.fire( 'change:attribute', { attributeKeys, directChange: true } );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tsetAttributesTo( attrs ) {\n\t\tattrs = toMap( attrs );\n\n\t\tif ( this.isCollapsed && this.anchor.parent.childCount === 0 ) {\n\t\t\tthis._setStoredAttributesTo( attrs );\n\t\t}\n\n\t\tconst changed = this._setAttributesTo( attrs );\n\n\t\tif ( changed.size > 0 ) {\n\t\t\t// Fire event with exact data (fire only if anything changed).\n\t\t\tconst attributeKeys = Array.from( changed );\n\t\t\tthis.fire( 'change:attribute', { attributeKeys, directChange: true } );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tclearAttributes() {\n\t\tthis.setAttributesTo( [] );\n\t}\n\n\t/**\n\t * Removes all attributes from the selection and sets attributes according to the surrounding nodes.\n\t */\n\trefreshAttributes() {\n\t\tthis._updateAttributes( true );\n\t}\n\n\t/**\n\t * Creates and returns an instance of `LiveSelection` that is a clone of given selection, meaning that it has same\n\t * ranges and same direction as this selection.\n\t *\n\t * @params {module:engine/model/selection~Selection} otherSelection Selection to be cloned.\n\t * @returns {module:engine/model/liveselection~LiveSelection} `Selection` instance that is a clone of given selection.\n\t */\n\tstatic createFromSelection( otherSelection ) {\n\t\tconst selection = new this( otherSelection._document );\n\t\tselection.setTo( otherSelection );\n\n\t\treturn selection;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_popRange() {\n\t\tthis._ranges.pop().detach();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_pushRange( range ) {\n\t\tconst liveRange = this._prepareRange( range );\n\n\t\t// `undefined` is returned when given `range` is in graveyard root.\n\t\tif ( liveRange ) {\n\t\t\tthis._ranges.push( liveRange );\n\t\t}\n\t}\n\n\t/**\n\t * Prepares given range to be added to selection. Checks if it is correct,\n\t * converts it to {@link module:engine/model/liverange~LiveRange LiveRange}\n\t * and sets listeners listening to the range's change event.\n\t *\n\t * @private\n\t * @param {module:engine/model/range~Range} range\n\t */\n\t_prepareRange( range ) {\n\t\tif ( !( range instanceof Range ) ) {\n\t\t\t/**\n\t\t\t * Trying to add an object that is not an instance of Range.\n\t\t\t *\n\t\t\t * @error model-selection-added-not-range\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-selection-added-not-range: Trying to add an object that is not an instance of Range.' );\n\t\t}\n\n\t\tif ( range.root == this._document.graveyard ) {\n\t\t\t/**\n\t\t\t * Trying to add a Range that is in the graveyard root. Range rejected.\n\t\t\t *\n\t\t\t * @warning model-selection-range-in-graveyard\n\t\t\t */\n\t\t\tlog.warn( 'model-selection-range-in-graveyard: Trying to add a Range that is in the graveyard root. Range rejected.' );\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis._checkRange( range );\n\n\t\tconst liveRange = LiveRange.createFromRange( range );\n\t\tthis.listenTo( liveRange, 'change', ( evt, oldRange ) => {\n\t\t\tif ( liveRange.root == this._document.graveyard ) {\n\t\t\t\tthis._fixGraveyardSelection( liveRange, oldRange );\n\t\t\t}\n\n\t\t\tthis.fire( 'change:range', { directChange: false } );\n\t\t} );\n\n\t\treturn liveRange;\n\t}\n\n\t/**\n\t * Updates this selection attributes according to its ranges and the {@link module:engine/model/document~Document model document}.\n\t *\n\t * @protected\n\t * @param {Boolean} clearAll\n\t * @fires change:attribute\n\t */\n\t_updateAttributes( clearAll ) {\n\t\tconst newAttributes = toMap( this._getSurroundingAttributes() );\n\t\tconst oldAttributes = toMap( this.getAttributes() );\n\n\t\tif ( clearAll ) {\n\t\t\t// If `clearAll` remove all attributes and reset priorities.\n\t\t\tthis._attributePriority = new Map();\n\t\t\tthis._attrs = new Map();\n\t\t} else {\n\t\t\t// If not, remove only attributes added with `low` priority.\n\t\t\tfor ( const [ key, priority ] of this._attributePriority ) {\n\t\t\t\tif ( priority == 'low' ) {\n\t\t\t\t\tthis._attrs.delete( key );\n\t\t\t\t\tthis._attributePriority.delete( key );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._setAttributesTo( newAttributes, false );\n\n\t\t// Let's evaluate which attributes really changed.\n\t\tconst changed = [];\n\n\t\t// First, loop through all attributes that are set on selection right now.\n\t\t// Check which of them are different than old attributes.\n\t\tfor ( const [ newKey, newValue ] of this.getAttributes() ) {\n\t\t\tif ( !oldAttributes.has( newKey ) || oldAttributes.get( newKey ) !== newValue ) {\n\t\t\t\tchanged.push( newKey );\n\t\t\t}\n\t\t}\n\n\t\t// Then, check which of old attributes got removed.\n\t\tfor ( const [ oldKey ] of oldAttributes ) {\n\t\t\tif ( !this.hasAttribute( oldKey ) ) {\n\t\t\t\tchanged.push( oldKey );\n\t\t\t}\n\t\t}\n\n\t\t// Fire event with exact data (fire only if anything changed).\n\t\tif ( changed.length > 0 ) {\n\t\t\tthis.fire( 'change:attribute', { attributeKeys: changed, directChange: false } );\n\t\t}\n\t}\n\n\t/**\n\t * Generates and returns an attribute key for selection attributes store, basing on original attribute key.\n\t *\n\t * @protected\n\t * @param {String} key Attribute key to convert.\n\t * @returns {String} Converted attribute key, applicable for selection store.\n\t */\n\tstatic _getStoreAttributeKey( key ) {\n\t\treturn storePrefix + key;\n\t}\n\n\t/**\n\t * Internal method for setting `LiveSelection` attribute. Supports attribute priorities (through `directChange`\n\t * parameter).\n\t *\n\t * @private\n\t * @param {String} key Attribute key.\n\t * @param {*} value Attribute value.\n\t * @param {Boolean} [directChange=true] `true` if the change is caused by `Selection` API, `false` if change\n\t * is caused by `Batch` API.\n\t * @returns {Boolean} Whether value has changed.\n\t */\n\t_setAttribute( key, value, directChange = true ) {\n\t\tconst priority = directChange ? 'normal' : 'low';\n\n\t\tif ( priority == 'low' && this._attributePriority.get( key ) == 'normal' ) {\n\t\t\t// Priority too low.\n\t\t\treturn false;\n\t\t}\n\n\t\tconst oldValue = super.getAttribute( key );\n\n\t\t// Don't do anything if value has not changed.\n\t\tif ( oldValue === value ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._attrs.set( key, value );\n\n\t\t// Update priorities map.\n\t\tthis._attributePriority.set( key, priority );\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Internal method for removing `LiveSelection` attribute. Supports attribute priorities (through `directChange`\n\t * parameter).\n\t *\n\t * @private\n\t * @param {String} key Attribute key.\n\t * @param {Boolean} [directChange=true] `true` if the change is caused by `Selection` API, `false` if change\n\t * is caused by `Batch` API.\n\t * @returns {Boolean} Whether attribute was removed. May not be true if such attributes didn't exist or the\n\t * existing attribute had higher priority.\n\t */\n\t_removeAttribute( key, directChange = true ) {\n\t\tconst priority = directChange ? 'normal' : 'low';\n\n\t\tif ( priority == 'low' && this._attributePriority.get( key ) == 'normal' ) {\n\t\t\t// Priority too low.\n\t\t\treturn false;\n\t\t}\n\n\t\t// Don't do anything if value has not changed.\n\t\tif ( !super.hasAttribute( key ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._attrs.delete( key );\n\n\t\t// Update priorities map.\n\t\tthis._attributePriority.set( key, priority );\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Internal method for setting multiple `LiveSelection` attributes. Supports attribute priorities (through\n\t * `directChange` parameter).\n\t *\n\t * @private\n\t * @param {Iterable|Object} attrs Iterable object containing attributes to be set.\n\t * @param {Boolean} [directChange=true] `true` if the change is caused by `Selection` API, `false` if change\n\t * is caused by `Batch` API.\n\t * @returns {Set.<String>} Changed attribute keys.\n\t */\n\t_setAttributesTo( attrs, directChange = true ) {\n\t\tconst changed = new Set();\n\n\t\tfor ( const [ oldKey, oldValue ] of this.getAttributes() ) {\n\t\t\t// Do not remove attribute if attribute with same key and value is about to be set.\n\t\t\tif ( attrs.get( oldKey ) === oldValue ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Attribute still might not get removed because of priorities.\n\t\t\tif ( this._removeAttribute( oldKey, directChange ) ) {\n\t\t\t\tchanged.add( oldKey );\n\t\t\t}\n\t\t}\n\n\t\tfor ( const [ key, value ] of attrs ) {\n\t\t\t// Attribute may not be set because of attributes or because same key/value is already added.\n\t\t\tconst gotAdded = this._setAttribute( key, value, directChange );\n\n\t\t\tif ( gotAdded ) {\n\t\t\t\tchanged.add( key );\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n\n\t/**\n\t * Returns an iterator that iterates through all selection attributes stored in current selection's parent.\n\t *\n\t * @private\n\t * @returns {Iterable.<*>}\n\t */\n\t* _getStoredAttributes() {\n\t\tconst selectionParent = this.getFirstPosition().parent;\n\n\t\tif ( this.isCollapsed && selectionParent.childCount === 0 ) {\n\t\t\tfor ( const key of selectionParent.getAttributeKeys() ) {\n\t\t\t\tif ( key.indexOf( storePrefix ) === 0 ) {\n\t\t\t\t\tconst realKey = key.substr( storePrefix.length );\n\n\t\t\t\t\tyield [ realKey, selectionParent.getAttribute( key ) ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Removes attribute with given key from attributes stored in current selection's parent node.\n\t *\n\t * @private\n\t * @param {String} key Key of attribute to remove.\n\t */\n\t_removeStoredAttribute( key ) {\n\t\tconst storeKey = LiveSelection._getStoreAttributeKey( key );\n\n\t\tthis._document.batch().removeAttribute( this.anchor.parent, storeKey );\n\t}\n\n\t/**\n\t * Stores given attribute key and value in current selection's parent node.\n\t *\n\t * @private\n\t * @param {String} key Key of attribute to set.\n\t * @param {*} value Attribute value.\n\t */\n\t_storeAttribute( key, value ) {\n\t\tconst storeKey = LiveSelection._getStoreAttributeKey( key );\n\n\t\tthis._document.batch().setAttribute( this.anchor.parent, storeKey, value );\n\t}\n\n\t/**\n\t * Sets selection attributes stored in current selection's parent node to given set of attributes.\n\t *\n\t * @private\n\t * @param {Iterable|Object} attrs Iterable object containing attributes to be set.\n\t */\n\t_setStoredAttributesTo( attrs ) {\n\t\tconst selectionParent = this.anchor.parent;\n\t\tconst batch = this._document.batch();\n\n\t\tfor ( const [ oldKey ] of this._getStoredAttributes() ) {\n\t\t\tconst storeKey = LiveSelection._getStoreAttributeKey( oldKey );\n\n\t\t\tbatch.removeAttribute( selectionParent, storeKey );\n\t\t}\n\n\t\tfor ( const [ key, value ] of attrs ) {\n\t\t\tconst storeKey = LiveSelection._getStoreAttributeKey( key );\n\n\t\t\tbatch.setAttribute( selectionParent, storeKey, value );\n\t\t}\n\t}\n\n\t/**\n\t * Checks model text nodes that are closest to the selection's first position and returns attributes of first\n\t * found element. If there are no text nodes in selection's first position parent, it returns selection\n\t * attributes stored in that parent.\n\t *\n\t * @private\n\t * @returns {Iterable.<*>} Collection of attributes.\n\t */\n\t_getSurroundingAttributes() {\n\t\tconst position = this.getFirstPosition();\n\n\t\tlet attrs = null;\n\n\t\tif ( !this.isCollapsed ) {\n\t\t\t// 1. If selection is a range...\n\t\t\tconst range = this.getFirstRange();\n\n\t\t\t// ...look for a first character node in that range and take attributes from it.\n\t\t\tfor ( const item of range ) {\n\t\t\t\t// This is not an optimal solution because of https://github.com/ckeditor/ckeditor5-engine/issues/454.\n\t\t\t\t// It can be done better by using `break;` instead of checking `attrs === null`.\n\t\t\t\tif ( item.type == 'text' && attrs === null ) {\n\t\t\t\t\tattrs = item.item.getAttributes();\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// 2. If the selection is a caret or the range does not contain a character node...\n\n\t\t\tconst nodeBefore = position.textNode ? position.textNode : position.nodeBefore;\n\t\t\tconst nodeAfter = position.textNode ? position.textNode : position.nodeAfter;\n\n\t\t\t// ...look at the node before caret and take attributes from it if it is a character node.\n\t\t\tattrs = getAttrsIfCharacter( nodeBefore );\n\n\t\t\t// 3. If not, look at the node after caret...\n\t\t\tif ( !attrs ) {\n\t\t\t\tattrs = getAttrsIfCharacter( nodeAfter );\n\t\t\t}\n\n\t\t\t// 4. If not, try to find the first character on the left, that is in the same node.\n\t\t\tif ( !attrs ) {\n\t\t\t\tlet node = nodeBefore;\n\n\t\t\t\twhile ( node && !attrs ) {\n\t\t\t\t\tnode = node.previousSibling;\n\t\t\t\t\tattrs = getAttrsIfCharacter( node );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 5. If not found, try to find the first character on the right, that is in the same node.\n\t\t\tif ( !attrs ) {\n\t\t\t\tlet node = nodeAfter;\n\n\t\t\t\twhile ( node && !attrs ) {\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t\tattrs = getAttrsIfCharacter( node );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 6. If not found, selection should retrieve attributes from parent.\n\t\t\tif ( !attrs ) {\n\t\t\t\tattrs = this._getStoredAttributes();\n\t\t\t}\n\t\t}\n\n\t\treturn attrs;\n\t}\n\n\t/**\n\t * Fixes a selection range after it ends up in graveyard root.\n\t *\n\t * @private\n\t * @param {module:engine/model/liverange~LiveRange} gyRange The range added in selection, that ended up in graveyard root.\n\t * @param {module:engine/model/range~Range} oldRange The state of that range before it was added to graveyard root.\n\t */\n\t_fixGraveyardSelection( gyRange, oldRange ) {\n\t\tconst gyPath = gyRange.start.path;\n\n\t\tconst newPathLength = oldRange.start.path.length - ( gyPath.length - 2 );\n\t\tconst newPath = oldRange.start.path.slice( 0, newPathLength );\n\t\tnewPath[ newPath.length - 1 ] -= gyPath[ 1 ];\n\n\t\tconst newPosition = new Position( oldRange.root, newPath );\n\t\tlet selectionRange = this._document.getNearestSelectionRange( newPosition );\n\n\t\t// If nearest valid selection range cannot be found - use one created at root beginning.\n\t\tif ( !selectionRange ) {\n\t\t\tselectionRange = new Range( new Position( newPosition.root, [ 0 ] ) );\n\t\t}\n\n\t\tconst newRange = this._prepareRange( selectionRange );\n\t\tconst index = this._ranges.indexOf( gyRange );\n\t\tgyRange.detach();\n\n\t\tthis._ranges.splice( index, 1, newRange );\n\t}\n}\n\n/**\n * @event change:attribute\n */\n\n// Helper function for {@link module:engine/model/liveselection~LiveSelection#_updateAttributes}. It takes model item, checks whether\n// it is a text node (or text proxy) and if so, returns it's attributes. If not, returns `null`.\n//\n// @param {module:engine/model/item~Item|null}  node\n// @returns {Boolean}\nfunction getAttrsIfCharacter( node ) {\n\tif ( node instanceof TextProxy || node instanceof Text ) {\n\t\treturn node.getAttributes();\n\t}\n\n\treturn null;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/liveselection.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/markercollection\n */\n\nimport LiveRange from './liverange';\nimport Position from './position';\nimport Range from './range';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * Creates, stores and manages {@link ~Marker markers}.\n *\n * Markers are created by {@link ~MarkerCollection#set setting} a name for a {@link module:engine/model/liverange~LiveRange live range}\n * in `MarkerCollection`. Name is used to group and identify markers. Names have to be unique, but markers can be grouped by\n * using common prefixes, separated with `:`, for example: `user:john` or `search:3`.\n *\n * Since markers are based on {@link module:engine/model/liverange~LiveRange live ranges}, for efficiency reasons, it's\n * best to create and keep at least markers as possible.\n */\nexport default class MarkerCollection {\n\t/**\n\t * Creates a markers collection.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Stores {@link ~Marker markers} added to the collection.\n\t\t *\n\t\t * @private\n\t\t * @member {Map} #_markers\n\t\t */\n\t\tthis._markers = new Map();\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all {@link ~Marker markers} added to the collection.\n\t *\n\t * @returns {Iterator}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this._markers.values();\n\t}\n\n\t/**\n\t * Checks if marker with given `markerName` is in the collection.\n\t *\n\t * @param {String} markerName Marker name.\n\t * @returns {Boolean} `true` if marker with given `markerName` is in the collection, `false` otherwise.\n\t */\n\thas( markerName ) {\n\t\treturn this._markers.has( markerName );\n\t}\n\n\t/**\n\t * Returns {@link ~Marker marker} with given `markerName`.\n\t *\n\t * @param {String} markerName Name of marker to get.\n\t * @returns {module:engine/model/markercollection~Marker|null} Marker with given name or `null` if such marker was\n\t * not added to the collection.\n\t */\n\tget( markerName ) {\n\t\treturn this._markers.get( markerName ) || null;\n\t}\n\n\t/**\n\t * Creates and adds a {@link ~Marker marker} to the `MarkerCollection` with given name on given\n\t * {@link module:engine/model/range~Range range}.\n\t *\n\t * If `MarkerCollection` already had a marker with given name (or {@link ~Marker marker} was passed) and the range to\n\t * set is different, the marker in collection is removed and then new marker is added. If the range was same, nothing\n\t * happens and `false` is returned.\n\t *\n\t * @fires module:engine/model/markercollection~MarkerCollection#event:add\n\t * @fires module:engine/model/markercollection~MarkerCollection#event:remove\n\t * @param {String|module:engine/model/markercollection~Marker} markerOrName Name of marker to add or Marker instance to update.\n\t * @param {module:engine/model/range~Range} range Marker range.\n\t * @returns {module:engine/model/markercollection~Marker} `Marker` instance added to the collection.\n\t */\n\tset( markerOrName, range ) {\n\t\tconst markerName = markerOrName instanceof Marker ? markerOrName.name : markerOrName;\n\t\tconst oldMarker = this._markers.get( markerName );\n\n\t\tif ( oldMarker ) {\n\t\t\tconst oldRange = oldMarker.getRange();\n\n\t\t\tif ( oldRange.isEqual( range ) ) {\n\t\t\t\treturn oldMarker;\n\t\t\t}\n\n\t\t\tthis.remove( markerName );\n\t\t}\n\n\t\tconst liveRange = LiveRange.createFromRange( range );\n\t\tconst marker = new Marker( markerName, liveRange );\n\n\t\tthis._markers.set( markerName, marker );\n\t\tthis.fire( 'add:' + markerName, marker );\n\n\t\treturn marker;\n\t}\n\n\t/**\n\t * Removes given {@link ~Marker marker} or a marker with given name from the `MarkerCollection`.\n\t *\n\t * @param {String} markerOrName Marker or name of a marker to remove.\n\t * @returns {Boolean} `true` if marker was found and removed, `false` otherwise.\n\t */\n\tremove( markerOrName ) {\n\t\tconst markerName = markerOrName instanceof Marker ? markerOrName.name : markerOrName;\n\t\tconst oldMarker = this._markers.get( markerName );\n\n\t\tif ( oldMarker ) {\n\t\t\tthis._markers.delete( markerName );\n\t\t\tthis.fire( 'remove:' + markerName, oldMarker );\n\n\t\t\tthis._destroyMarker( oldMarker );\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns iterator that iterates over all markers, which ranges contain given {@link module:engine/model/position~Position position}.\n\t *\n\t * @param {module:engine/model/position~Position} position\n\t * @returns {Iterator.<module:engine/model/markercollection~Marker>}\n\t */\n\t* getMarkersAtPosition( position ) {\n\t\tfor ( const marker of this ) {\n\t\t\tif ( marker.getRange().containsPosition( position ) ) {\n\t\t\t\tyield marker;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Destroys markers collection.\n\t */\n\tdestroy() {\n\t\tfor ( const marker of this._markers.values() ) {\n\t\t\tthis._destroyMarker( marker );\n\t\t}\n\n\t\tthis._markers = null;\n\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Iterates over all markers that starts with given `prefix`.\n\t *\n\t *\t\tconst markerFooA = markersCollection.set( 'foo:a', rangeFooA );\n\t *\t\tconst markerFooB = markersCollection.set( 'foo:b', rangeFooB );\n\t *\t\tconst markerBarA = markersCollection.set( 'bar:a', rangeBarA );\n\t *\t\tconst markerFooBarA = markersCollection.set( 'foobar:a', rangeFooBarA );\n\t *\t\tArray.from( markersCollection.getMarkersGroup( 'foo' ) ); // [ markerFooA, markerFooB ]\n\t *\t\tArray.from( markersCollection.getMarkersGroup( 'a' ) ); // []\n\t *\n\t * @param prefix\n\t * @returns {Iterator.<module:engine/model/markercollection~Marker>}\n\t */\n\t* getMarkersGroup( prefix ) {\n\t\tfor ( const marker of this._markers.values() ) {\n\t\t\tif ( marker.name.startsWith( prefix + ':' ) ) {\n\t\t\t\tyield marker;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Destroys marker.\n\t *\n\t * @private\n\t * @param {module:engine/model/markercollection~Marker} marker Marker to destroy.\n\t */\n\t_destroyMarker( marker ) {\n\t\tmarker.stopListening();\n\t\tmarker._liveRange.detach();\n\t\tmarker._liveRange = null;\n\t}\n\n\t/**\n\t * Fired whenever marker is added to `MarkerCollection`.\n\t *\n\t * @event add\n\t * @param {module:engine/model/markercollection~Marker} The added marker.\n\t */\n\n\t/**\n\t * Fired whenever marker is removed from `MarkerCollection`.\n\t *\n\t * @event remove\n\t * @param {module:engine/model/markercollection~Marker} marker The removed marker.\n\t */\n}\n\nmix( MarkerCollection, EmitterMixin );\n\n/**\n * `Marker` is a continuous parts of model (like a range), is named and represent some kind of information about marked\n * part of model document. In contrary to {@link module:engine/model/node~Node nodes}, which are building blocks of\n * model document tree, markers are not stored directly in document tree. Still, they are document data, by giving\n * additional meaning to the part of a model document between marker start and marker end.\n *\n * In this sense, markers are similar to adding and converting attributes on nodes. The difference is that attribute is\n * connected with a given node (e.g. a character is bold no matter if it gets moved or content around it changes).\n * Markers on the other hand are continuous ranges and are characterised by their start and end position. This means that\n * any character in the marker is marked by the marker. For example, if a character is moved outside of marker it stops being\n * \"special\" and the marker is shrunk. Similarly, when a character is moved into the marker from other place in document\n * model, it starts being \"special\" and the marker is enlarged.\n *\n * Since markers are based on {@link module:engine/model/liverange~LiveRange live ranges}, for efficiency reasons, it's\n * best to create and keep at least markers as possible.\n *\n * Markers can be converted to view by adding appropriate converters for\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:addMarker addMarker} and\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:removeMarker removeMarker}\n * events, or by building converters for {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher}\n * using {@link module:engine/conversion/buildmodelconverter~buildModelConverter model converter builder}.\n *\n * Another upside of markers is that finding marked part of document is fast and easy. Using attributes to mark some nodes\n * and then trying to find that part of document would require traversing whole document tree. Marker gives instant access\n * to the range which it is marking at the moment.\n *\n * `Marker` instances are created and destroyed only by {@link ~MarkerCollection MarkerCollection}.\n */\nclass Marker {\n\t/**\n\t * Creates a marker instance.\n\t *\n\t * @param {String} name Marker name.\n\t * @param {module:engine/model/liverange~LiveRange} liveRange Range marked by the marker.\n\t */\n\tconstructor( name, liveRange ) {\n\t\t/**\n\t\t * Marker name.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String} #name\n\t\t */\n\t\tthis.name = name;\n\n\t\t/**\n\t\t * Range marked by the marker.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:engine/model/liverange~LiveRange} #_liveRange\n\t\t */\n\t\tthis._liveRange = liveRange;\n\n\t\tthis._liveRange.delegate( 'change' ).to( this );\n\t}\n\n\t/**\n\t * Returns current marker start position.\n\t *\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tgetStart() {\n\t\tif ( !this._liveRange ) {\n\t\t\t/**\n\t\t\t * Operating on destroyed marker instance.\n\t\t\t *\n\t\t\t * @error marker-destroyed\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'marker-destroyed: Operating on destroyed marker instance.' );\n\t\t}\n\n\t\treturn Position.createFromPosition( this._liveRange.start );\n\t}\n\n\t/**\n\t * Returns current marker end position.\n\t *\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tgetEnd() {\n\t\tif ( !this._liveRange ) {\n\t\t\t/**\n\t\t\t * Operating on destroyed marker instance.\n\t\t\t *\n\t\t\t * @error marker-destroyed\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'marker-destroyed: Operating on destroyed marker instance.' );\n\t\t}\n\n\t\treturn Position.createFromPosition( this._liveRange.end );\n\t}\n\n\t/**\n\t * Returns a range that represents current state of marker.\n\t *\n\t * Keep in mind that returned value is a {@link module:engine/model/range~Range Range}, not a\n\t * {@link module:engine/model/liverange~LiveRange LiveRange}. This means that it is up-to-date and relevant only\n\t * until next model document change. Do not store values returned by this method. Instead, store {@link ~Marker#name}\n\t * and get `Marker` instance from {@link module:engine/model/markercollection~MarkerCollection MarkerCollection} every\n\t * time there is a need to read marker properties. This will guarantee that the marker has not been removed and\n\t * that it's data is up-to-date.\n\t *\n\t * @returns {module:engine/model/range~Range}\n\t */\n\tgetRange() {\n\t\tif ( !this._liveRange ) {\n\t\t\t/**\n\t\t\t * Operating on destroyed marker instance.\n\t\t\t *\n\t\t\t * @error marker-destroyed\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'marker-destroyed: Operating on destroyed marker instance.' );\n\t\t}\n\n\t\treturn Range.createFromRange( this._liveRange );\n\t}\n\n\t/**\n\t * Fired whenever {@link ~Marker#_liveRange marker range} is changed due to changes on {@link module:engine/model/document~Document}.\n\t * This is actually a delegated {@link module:engine/model/liverange~LiveRange#event:change LiveRange change event}.\n\t *\n\t * When marker is removed from {@link module:engine/model/markercollection~MarkerCollection MarkerCollection},\n\t * all event listeners listening to it should be removed. It is best to do it on\n\t * {@link module:engine/model/markercollection~MarkerCollection#event:remove MarkerCollection remove event}.\n\t *\n\t * @see module:engine/model/liverange~LiveRange#event:change\n\t * @event change\n\t * @param {module:engine/model/range~Range} oldRange Range with start and end position equal to start and end position of\n\t * this marker range before it got changed.\n\t */\n}\n\nmix( Marker, EmitterMixin );\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/markercollection.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/operationfactory\n */\n\nimport AttributeOperation from '../operation/attributeoperation';\nimport InsertOperation from '../operation/insertoperation';\nimport MarkerOperation from '../operation/markeroperation';\nimport MoveOperation from '../operation/moveoperation';\nimport NoOperation from '../operation/nooperation';\nimport Operation from '../operation/operation';\nimport ReinsertOperation from '../operation/reinsertoperation';\nimport RemoveOperation from '../operation/removeoperation';\nimport RenameOperation from '../operation/renameoperation';\nimport RootAttributeOperation from '../operation/rootattributeoperation';\n\nconst operations = {};\noperations[ AttributeOperation.className ] = AttributeOperation;\noperations[ InsertOperation.className ] = InsertOperation;\noperations[ MarkerOperation.className ] = MarkerOperation;\noperations[ MoveOperation.className ] = MoveOperation;\noperations[ NoOperation.className ] = NoOperation;\noperations[ Operation.className ] = Operation;\noperations[ ReinsertOperation.className ] = ReinsertOperation;\noperations[ RemoveOperation.className ] = RemoveOperation;\noperations[ RenameOperation.className ] = RenameOperation;\noperations[ RootAttributeOperation.className ] = RootAttributeOperation;\n\n/**\n * A factory class for creating operations.\n *\n * @abstract\n */\nexport default class OperationFactory {\n\t/**\n\t * Creates concrete `Operation` object from deserilized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/operation~Operation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\treturn operations[ json.__className ].fromJSON( json, document );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/operation/operationfactory.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/transform\n */\n\nimport InsertOperation from './insertoperation';\nimport AttributeOperation from './attributeoperation';\nimport RootAttributeOperation from './rootattributeoperation';\nimport RenameOperation from './renameoperation';\nimport MarkerOperation from './markeroperation';\nimport MoveOperation from './moveoperation';\nimport RemoveOperation from './removeoperation';\nimport NoOperation from './nooperation';\nimport Range from '../range';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\n\n/**\n * Transforms given {@link module:engine/model/operation/operation~Operation operation}\n * by another {@link module:engine/model/operation/operation~Operation operation}\n * and returns the result of that transformation as an array containing\n * one or more {@link module:engine/model/operation/operation~Operation operations}.\n *\n * Operations work on specified positions, passed to them when they are created.\n * Whenever {@link module:engine/model/document~Document document}\n * changes, we have to reflect those modifications by updating or \"transforming\" operations which are not yet applied.\n * When an operation is transformed, its parameters may change based on the operation by which it is transformed.\n * If the transform-by operation applied any modifications to the Tree Data Model which affect positions or nodes\n * connected with transformed operation, those changes will be reflected in the parameters of the returned operation(s).\n *\n * Whenever the {@link module:engine/model/document~Document document}\n * has different {@link module:engine/model/document~Document#version}\n * than the operation you want to {@link module:engine/model/document~Document#applyOperation apply}, you need to transform that\n * operation by all operations which were already applied to the {@link module:engine/model/document~Document document} and have greater\n * {@link module:engine/model/document~Document#version} than the operation being applied. Transform them in the same order as those\n * operations which were applied. This way all modifications done to the Tree Data Model will be reflected\n * in the operation parameters and the operation will \"operate\" on \"up-to-date\" version of the Tree Data Model.\n * This is mostly the case with Operational Transformations but it might be needed in particular features as well.\n *\n * In some cases, when given operation apply changes to the same nodes as this operation, two or more operations need\n * to be created as one would not be able to reflect the combination of these operations.\n * This is why an array is returned instead of a single object. All returned operations have to be applied\n * (or further transformed) to get an effect which was intended in pre-transformed operation.\n *\n * Sometimes two operations are in conflict. This happens when they modify the same node in a different way, i.e.\n * set different value for the same attribute or move the node into different positions. When this happens,\n * we need to decide which operation is more important. We can't assume that operation `a` or operation `b` is always\n * more important. In Operational Transformations algorithms we often need to get a result of transforming\n * `a` by `b` and also `b` by `a`. In both transformations the same operation has to be the important one. If we assume\n * that first or the second passed operation is always more important we won't be able to solve this case.\n *\n * @external module:engine/model/model.operation\n * @function module:engine/model/operation/transform~transform\n * @param {module:engine/model/operation/operation~Operation} a Operation that will be transformed.\n * @param {module:engine/model/operation/operation~Operation} b Operation to transform by.\n * @param {Boolean} isAMoreImportantThanB Flag indicating whether the operation which will be transformed (`a`) should be treated\n * as more important when resolving conflicts.\n * @returns {Array.<module:engine/model/operation/operation~Operation>} Result of the transformation.\n */\n\nexport default transform;\n\nconst ot = {\n\tInsertOperation: {\n\t\t// Transforms InsertOperation `a` by InsertOperation `b`. Accepts a flag stating whether `a` is more important\n\t\t// than `b` when it comes to resolving conflicts. Returns results as an array of operations.\n\t\tInsertOperation( a, b, isStrong ) {\n\t\t\t// Transformed operations are always new instances, not references to the original operations.\n\t\t\tconst transformed = a.clone();\n\n\t\t\t// Transform insert position by the other operation position.\n\t\t\ttransformed.position = transformed.position._getTransformedByInsertion( b.position, b.nodes.maxOffset, !isStrong );\n\n\t\t\treturn [ transformed ];\n\t\t},\n\n\t\tAttributeOperation: doNotUpdate,\n\n\t\tRootAttributeOperation: doNotUpdate,\n\n\t\tRenameOperation: doNotUpdate,\n\n\t\tMarkerOperation: doNotUpdate,\n\n\t\t// Transforms InsertOperation `a` by MoveOperation `b`. Accepts a flag stating whether `a` is more important\n\t\t// than `b` when it comes to resolving conflicts. Returns results as an array of operations.\n\t\tMoveOperation( a, b, isStrong ) {\n\t\t\tconst transformed = a.clone();\n\n\t\t\t// Transform insert position by the other operation parameters.\n\t\t\ttransformed.position = a.position._getTransformedByMove( b.sourcePosition, b.targetPosition, b.howMany, !isStrong, b.isSticky );\n\n\t\t\treturn [ transformed ];\n\t\t}\n\t},\n\n\tAttributeOperation: {\n\t\t// Transforms AttributeOperation `a` by InsertOperation `b`. Returns results as an array of operations.\n\t\tInsertOperation( a, b ) {\n\t\t\t// Transform this operation's range.\n\t\t\tconst ranges = a.range._getTransformedByInsertion( b.position, b.nodes.maxOffset, true, false );\n\n\t\t\t// Map transformed range(s) to operations and return them.\n\t\t\treturn ranges.reverse().map( range => {\n\t\t\t\treturn new AttributeOperation( range, a.key, a.oldValue, a.newValue, a.baseVersion );\n\t\t\t} );\n\t\t},\n\n\t\t// Transforms AttributeOperation `a` by AttributeOperation `b`. Accepts a flag stating whether `a` is more important\n\t\t// than `b` when it comes to resolving conflicts. Returns results as an array of operations.\n\t\tAttributeOperation( a, b, isStrong ) {\n\t\t\tif ( a.key === b.key ) {\n\t\t\t\t// If operations attributes are in conflict, check if their ranges intersect and manage them properly.\n\n\t\t\t\t// First, we want to apply change to the part of a range that has not been changed by the other operation.\n\t\t\t\tconst operations = a.range.getDifference( b.range ).map( range => {\n\t\t\t\t\treturn new AttributeOperation( range, a.key, a.oldValue, a.newValue, a.baseVersion );\n\t\t\t\t} );\n\n\t\t\t\t// Then we take care of the common part of ranges.\n\t\t\t\tconst common = a.range.getIntersection( b.range );\n\n\t\t\t\tif ( common ) {\n\t\t\t\t\t// If this operation is more important, we also want to apply change to the part of the\n\t\t\t\t\t// original range that has already been changed by the other operation. Since that range\n\t\t\t\t\t// got changed we also have to update `oldValue`.\n\t\t\t\t\tif ( isStrong ) {\n\t\t\t\t\t\toperations.push( new AttributeOperation( common, b.key, b.newValue, a.newValue, a.baseVersion ) );\n\t\t\t\t\t} else if ( operations.length === 0 ) {\n\t\t\t\t\t\toperations.push( new NoOperation( 0 ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn operations;\n\t\t\t} else {\n\t\t\t\t// If operations don't conflict, simply return an array containing just a clone of this operation.\n\t\t\t\treturn [ a.clone() ];\n\t\t\t}\n\t\t},\n\n\t\tRootAttributeOperation: doNotUpdate,\n\n\t\tRenameOperation: doNotUpdate,\n\n\t\tMarkerOperation: doNotUpdate,\n\n\t\t// Transforms AttributeOperation `a` by MoveOperation `b`. Returns results as an array of operations.\n\t\tMoveOperation( a, b ) {\n\t\t\t// Convert MoveOperation properties into a range.\n\t\t\tconst rangeB = Range.createFromPositionAndShift( b.sourcePosition, b.howMany );\n\n\t\t\t// This will aggregate transformed ranges.\n\t\t\tlet ranges = [];\n\n\t\t\t// Special case when MoveOperation is in fact a RemoveOperation. RemoveOperation not only moves nodes but also\n\t\t\t// creates a \"holder\" element for them in graveyard. If there was a RemoveOperation pointing to an offset\n\t\t\t// before this AttributeOperation, we have to increment AttributeOperation's offset.\n\t\t\tif ( b instanceof RemoveOperation && b._needsHolderElement &&\n\t\t\t\ta.range.root == b.targetPosition.root && a.range.start.path[ 0 ] >= b._holderElementOffset\n\t\t\t) {\n\t\t\t\t// Do not change original operation!\n\t\t\t\ta = a.clone();\n\t\t\t\ta.range.start.path[ 0 ]++;\n\t\t\t\ta.range.end.path[ 0 ]++;\n\t\t\t}\n\n\t\t\t// Difference is a part of changed range that is modified by AttributeOperation but is not affected\n\t\t\t// by MoveOperation. This can be zero, one or two ranges (if moved range is inside changed range).\n\t\t\t// Right now we will make a simplification and join difference ranges and transform them as one. We will cover rangeB later.\n\t\t\tconst difference = joinRanges( a.range.getDifference( rangeB ) );\n\n\t\t\t// Common is a range of nodes that is affected by MoveOperation. So it got moved to other place.\n\t\t\tconst common = a.range.getIntersection( rangeB );\n\n\t\t\tif ( difference !== null ) {\n\t\t\t\t// MoveOperation removes nodes from their original position. We acknowledge this by proper transformation.\n\t\t\t\t// Take the start and the end of the range and transform them by deletion of moved nodes.\n\t\t\t\t// Note that if rangeB was inside AttributeOperation range, only difference.end will be transformed.\n\t\t\t\t// This nicely covers the joining simplification we did in the previous step.\n\t\t\t\tdifference.start = difference.start._getTransformedByDeletion( b.sourcePosition, b.howMany );\n\t\t\t\tdifference.end = difference.end._getTransformedByDeletion( b.sourcePosition, b.howMany );\n\n\t\t\t\t// MoveOperation pastes nodes into target position. We acknowledge this by proper transformation.\n\t\t\t\t// Note that since we operate on transformed difference range, we should transform by\n\t\t\t\t// previously transformed target position.\n\t\t\t\t// Note that we do not use Position._getTransformedByMove on range boundaries because we need to\n\t\t\t\t// transform by insertion a range as a whole, since newTargetPosition might be inside that range.\n\t\t\t\tranges = difference._getTransformedByInsertion( b.getMovedRangeStart(), b.howMany, true, false ).reverse();\n\t\t\t}\n\n\t\t\tif ( common !== null ) {\n\t\t\t\t// Here we do not need to worry that newTargetPosition is inside moved range, because that\n\t\t\t\t// would mean that the MoveOperation targets into itself, and that is incorrect operation.\n\t\t\t\t// Instead, we calculate the new position of that part of original range.\n\t\t\t\tcommon.start = common.start._getCombined( b.sourcePosition, b.getMovedRangeStart() );\n\t\t\t\tcommon.end = common.end._getCombined( b.sourcePosition, b.getMovedRangeStart() );\n\n\t\t\t\tranges.push( common );\n\t\t\t}\n\n\t\t\t// Map transformed range(s) to operations and return them.\n\t\t\treturn ranges.map( range => {\n\t\t\t\treturn new AttributeOperation( range, a.key, a.oldValue, a.newValue, a.baseVersion );\n\t\t\t} );\n\t\t}\n\t},\n\n\tRootAttributeOperation: {\n\t\tInsertOperation: doNotUpdate,\n\n\t\tAttributeOperation: doNotUpdate,\n\n\t\t// Transforms RootAttributeOperation `a` by RootAttributeOperation `b`. Accepts a flag stating whether `a` is more important\n\t\t// than `b` when it comes to resolving conflicts. Returns results as an array of operations.\n\t\tRootAttributeOperation( a, b, isStrong ) {\n\t\t\tif ( a.root === b.root && a.key === b.key ) {\n\t\t\t\tif ( ( a.newValue !== b.newValue && !isStrong ) || a.newValue === b.newValue ) {\n\t\t\t\t\treturn [ new NoOperation( a.baseVersion ) ];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn [ a.clone() ];\n\t\t},\n\n\t\tRenameOperation: doNotUpdate,\n\n\t\tMarkerOperation: doNotUpdate,\n\n\t\tMoveOperation: doNotUpdate\n\t},\n\n\tRenameOperation: {\n\t\t// Transforms RenameOperation `a` by InsertOperation `b`. Returns results as an array of operations.\n\t\tInsertOperation( a, b ) {\n\t\t\t// Clone the operation, we don't want to alter the original operation.\n\t\t\tconst clone = a.clone();\n\n\t\t\t// Transform this operation's position.\n\t\t\tclone.position = clone.position._getTransformedByInsertion( b.position, b.nodes.maxOffset, true );\n\n\t\t\treturn [ clone ];\n\t\t},\n\n\t\tAttributeOperation: doNotUpdate,\n\n\t\tRootAttributeOperation: doNotUpdate,\n\n\t\t// Transforms RenameOperation `a` by RenameOperation `b`. Accepts a flag stating whether `a` is more important\n\t\t// than `b` when it comes to resolving conflicts. Returns results as an array of operations.\n\t\tRenameOperation( a, b, isStrong ) {\n\t\t\t// Clone the operation, we don't want to alter the original operation.\n\t\t\tconst clone = a.clone();\n\n\t\t\tif ( a.position.isEqual( b.position ) ) {\n\t\t\t\tif ( isStrong ) {\n\t\t\t\t\tclone.oldName = b.newName;\n\t\t\t\t} else {\n\t\t\t\t\treturn [ new NoOperation( a.baseVersion ) ];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn [ clone ];\n\t\t},\n\n\t\tMarkerOperation: doNotUpdate,\n\n\t\t// Transforms RenameOperation `a` by MoveOperation `b`. Returns results as an array of operations.\n\t\tMoveOperation( a, b ) {\n\t\t\tconst clone = a.clone();\n\t\t\tconst isSticky = clone.position.isEqual( b.sourcePosition );\n\n\t\t\tclone.position = clone.position._getTransformedByMove( b.sourcePosition, b.targetPosition, b.howMany, true, isSticky );\n\n\t\t\treturn [ clone ];\n\t\t}\n\t},\n\n\tMarkerOperation: {\n\t\t// Transforms MarkerOperation `a` by InsertOperation `b`. Returns results as an array of operations.\n\t\tInsertOperation( a, b ) {\n\t\t\t// Clone the operation, we don't want to alter the original operation.\n\t\t\tconst clone = a.clone();\n\n\t\t\tif ( clone.oldRange ) {\n\t\t\t\tclone.oldRange = clone.oldRange._getTransformedByInsertion( b.position, b.nodes.maxOffset, false, false )[ 0 ];\n\t\t\t}\n\n\t\t\tif ( clone.newRange ) {\n\t\t\t\tclone.newRange = clone.newRange._getTransformedByInsertion( b.position, b.nodes.maxOffset, false, false )[ 0 ];\n\t\t\t}\n\n\t\t\treturn [ clone ];\n\t\t},\n\n\t\tAttributeOperation: doNotUpdate,\n\n\t\tRootAttributeOperation: doNotUpdate,\n\n\t\tRenameOperation: doNotUpdate,\n\n\t\t// Transforms MarkerOperation `a` by MarkerOperation `b`. Accepts a flag stating whether `a` is more important\n\t\t// than `b` when it comes to resolving conflicts. Returns results as an array of operations.\n\t\tMarkerOperation( a, b, isStrong ) {\n\t\t\t// Clone the operation, we don't want to alter the original operation.\n\t\t\tconst clone = a.clone();\n\n\t\t\tif ( a.name == b.name ) {\n\t\t\t\tif ( isStrong ) {\n\t\t\t\t\tclone.oldRange = b.newRange;\n\t\t\t\t} else {\n\t\t\t\t\treturn [ new NoOperation( a.baseVersion ) ];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn [ clone ];\n\t\t},\n\n\t\t// Transforms MarkerOperation `a` by MoveOperation `b`. Returns results as an array of operations.\n\t\tMoveOperation( a, b ) {\n\t\t\t// Clone the operation, we don't want to alter the original operation.\n\t\t\tconst clone = a.clone();\n\n\t\t\tif ( clone.oldRange ) {\n\t\t\t\tconst oldRanges = clone.oldRange._getTransformedByMove( b.sourcePosition, b.targetPosition, b.howMany );\n\t\t\t\tclone.oldRange = Range.createFromRanges( oldRanges );\n\t\t\t}\n\n\t\t\tif ( clone.newRange ) {\n\t\t\t\tconst newRanges = clone.newRange._getTransformedByMove( b.sourcePosition, b.targetPosition, b.howMany );\n\t\t\t\tclone.newRange = Range.createFromRanges( newRanges );\n\t\t\t}\n\n\t\t\treturn [ clone ];\n\t\t}\n\t},\n\n\tMoveOperation: {\n\t\t// Transforms MoveOperation `a` by InsertOperation `b`. Accepts a flag stating whether `a` is more important\n\t\t// than `b` when it comes to resolving conflicts. Returns results as an array of operations.\n\t\tInsertOperation( a, b, isStrong ) {\n\t\t\t// Create range from MoveOperation properties and transform it by insertion.\n\t\t\tlet range = Range.createFromPositionAndShift( a.sourcePosition, a.howMany );\n\t\t\trange = range._getTransformedByInsertion( b.position, b.nodes.maxOffset, false, a.isSticky )[ 0 ];\n\n\t\t\tconst result = new a.constructor(\n\t\t\t\trange.start,\n\t\t\t\trange.end.offset - range.start.offset,\n\t\t\t\ta instanceof RemoveOperation ?\n\t\t\t\t\ta.baseVersion :\n\t\t\t\t\ta.targetPosition._getTransformedByInsertion( b.position, b.nodes.maxOffset, !isStrong ),\n\t\t\t\ta instanceof RemoveOperation ? undefined : a.baseVersion\n\t\t\t);\n\n\t\t\tresult.isSticky = a.isSticky;\n\n\t\t\tif ( a instanceof RemoveOperation ) {\n\t\t\t\tresult._needsHolderElement = a._needsHolderElement;\n\t\t\t\tresult._holderElementOffset = a._holderElementOffset;\n\t\t\t}\n\n\t\t\treturn [ result ];\n\t\t},\n\n\t\tAttributeOperation: doNotUpdate,\n\n\t\tRootAttributeOperation: doNotUpdate,\n\n\t\tRenameOperation: doNotUpdate,\n\n\t\tMarkerOperation: doNotUpdate,\n\n\t\t// Transforms MoveOperation `a` by MoveOperation `b`. Accepts a flag stating whether `a` is more important\n\t\t// than `b` when it comes to resolving conflicts. Returns results as an array of operations.\n\t\tMoveOperation( a, b, isStrong ) {\n\t\t\t// Special case when both move operations' target positions are inside nodes that are\n\t\t\t// being moved by the other move operation. So in other words, we move ranges into inside of each other.\n\t\t\t// This case can't be solved reasonably (on the other hand, it should not happen often).\n\t\t\tif ( moveTargetIntoMovedRange( a, b ) && moveTargetIntoMovedRange( b, a ) ) {\n\t\t\t\t// Instead of transforming operation, we return a reverse of the operation that we transform by.\n\t\t\t\t// So when the results of this \"transformation\" will be applied, `b` MoveOperation will get reversed.\n\t\t\t\treturn [ b.getReversed() ];\n\t\t\t}\n\n\t\t\t// Special case when operation transformed by is RemoveOperation. RemoveOperation not only moves nodes but also\n\t\t\t// (usually) creates a \"holder\" element for them in graveyard. This has to be taken into consideration when\n\t\t\t// transforming operations that operate in graveyard root.\n\t\t\tif ( b instanceof RemoveOperation && b._needsHolderElement ) {\n\t\t\t\ta = a.clone();\n\n\t\t\t\tconst aSourceOffset = a.sourcePosition.path[ 0 ];\n\t\t\t\tconst aTargetOffset = a.targetPosition.path[ 0 ];\n\n\t\t\t\t// We can't use Position#_getTransformedByInsertion because it works a bit differently and we would get wrong results.\n\t\t\t\t// That's because `sourcePosition`/`targetPosition` is, for example, `[ 1, 0 ]`, while `insertionPosition` is\n\t\t\t\t// `[ 1 ]`. In this case, `sourcePosition`/`targetPosition` would always be transformed but in fact, only\n\t\t\t\t// \"holderElement\" offsets should be looked at (so `[ 1 ]` in case of `sourcePosition`/`targetPosition`, not `[ 1, 0 ]` ).\n\t\t\t\t// This is why we are doing it \"by hand\".\n\t\t\t\tif ( a.sourcePosition.root == b.targetPosition.root ) {\n\t\t\t\t\tif ( aSourceOffset > b._holderElementOffset || aSourceOffset == b._holderElementOffset ) {\n\t\t\t\t\t\ta.sourcePosition.path[ 0 ]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( a.targetPosition.root == b.targetPosition.root ) {\n\t\t\t\t\tif ( aTargetOffset > b._holderElementOffset || ( aTargetOffset == b._holderElementOffset && isStrong ) ) {\n\t\t\t\t\t\ta.targetPosition.path[ 0 ]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If only one of operations is a remove operation, we force remove operation to be the \"stronger\" one\n\t\t\t// to provide more expected results.\n\t\t\tif ( a instanceof RemoveOperation && !( b instanceof RemoveOperation ) ) {\n\t\t\t\tisStrong = true;\n\t\t\t} else if ( !( a instanceof RemoveOperation ) && b instanceof RemoveOperation ) {\n\t\t\t\tisStrong = false;\n\t\t\t}\n\n\t\t\t// Create ranges from MoveOperations properties.\n\t\t\tconst rangeA = Range.createFromPositionAndShift( a.sourcePosition, a.howMany );\n\t\t\tconst rangeB = Range.createFromPositionAndShift( b.sourcePosition, b.howMany );\n\n\t\t\t// This will aggregate transformed ranges.\n\t\t\tconst ranges = [];\n\n\t\t\t// All the other non-special cases are treated by generic algorithm below.\n\t\t\tconst difference = joinRanges( rangeA.getDifference( rangeB ) );\n\n\t\t\tif ( difference ) {\n\t\t\t\tdifference.start = difference.start._getTransformedByMove(\n\t\t\t\t\tb.sourcePosition,\n\t\t\t\t\tb.targetPosition,\n\t\t\t\t\tb.howMany,\n\t\t\t\t\t!a.isSticky,\n\t\t\t\t\tfalse\n\t\t\t\t);\n\t\t\t\tdifference.end = difference.end._getTransformedByMove(\n\t\t\t\t\tb.sourcePosition,\n\t\t\t\t\tb.targetPosition,\n\t\t\t\t\tb.howMany,\n\t\t\t\t\ta.isSticky,\n\t\t\t\t\tfalse\n\t\t\t\t);\n\n\t\t\t\tranges.push( difference );\n\t\t\t}\n\n\t\t\t// Then, we have to manage the common part of both move ranges.\n\t\t\tconst common = rangeA.getIntersection( rangeB );\n\n\t\t\t// If MoveOperations has common range it can be one of two:\n\t\t\t// * on the same tree level - it means that we move the same nodes into different places\n\t\t\t// * on deeper tree level - it means that we move nodes that are inside moved nodes\n\t\t\t// The operations are conflicting only if they try to move exactly same nodes, so only in the first case.\n\t\t\t// That means that we transform common part in two cases:\n\t\t\t// * `rangeA` is \"deeper\" than `rangeB` so it does not collide\n\t\t\t// * `rangeA` is at the same level but is stronger than `rangeB`.\n\t\t\tconst aCompB = compareArrays( a.sourcePosition.getParentPath(), b.sourcePosition.getParentPath() );\n\n\t\t\t// If the `b` MoveOperation points inside the `a` MoveOperation range, the common part will be included in\n\t\t\t// range(s) that (is) are results of processing `difference`. If that's the case, we cannot include it again.\n\t\t\tconst bTargetsToA = rangeA.containsPosition( b.targetPosition ) ||\n\t\t\t\t( rangeA.start.isEqual( b.targetPosition ) && a.isSticky ) ||\n\t\t\t\t( rangeA.end.isEqual( b.targetPosition ) && a.isSticky );\n\n\t\t\t// If the `b` MoveOperation range contains both whole `a` range and target position we do an exception and\n\t\t\t// transform `a` operation. Normally, when same nodes are moved, we stick with stronger operation's target.\n\t\t\t// Here it is a move inside larger range so there is no conflict because after all, all nodes from\n\t\t\t// smaller range will be moved to larger range target. The effect of this transformation feels natural.\n\t\t\t// Also if we wouldn't do that, we would get different results on both sides of transformation (i.e. in\n\t\t\t// collaborative editing).\n\t\t\tconst aIsInside = rangeB.containsRange( rangeA ) &&\n\t\t\t\t(\n\t\t\t\t\trangeB.containsPosition( a.targetPosition ) ||\n\t\t\t\t\trangeB.start.isEqual( a.targetPosition ) ||\n\t\t\t\t\trangeB.end.isEqual( a.targetPosition )\n\t\t\t\t);\n\n\t\t\tif ( common !== null && ( aCompB === 'extension' || ( aCompB === 'same' && isStrong ) || aIsInside ) && !bTargetsToA ) {\n\t\t\t\t// Here we do not need to worry that newTargetPosition is inside moved range, because that\n\t\t\t\t// would mean that the MoveOperation targets into itself, and that is incorrect operation.\n\t\t\t\t// Instead, we calculate the new position of that part of original range.\n\t\t\t\tcommon.start = common.start._getCombined( b.sourcePosition, b.getMovedRangeStart() );\n\t\t\t\tcommon.end = common.end._getCombined( b.sourcePosition, b.getMovedRangeStart() );\n\n\t\t\t\t// We have to take care of proper range order.\n\t\t\t\tif ( difference && rangeA.start.isBefore( rangeB.start ) ) {\n\t\t\t\t\tranges.push( common );\n\t\t\t\t} else {\n\t\t\t\t\tranges.unshift( common );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ranges.length === 0 ) {\n\t\t\t\t// At this point we transformed this operation's source ranges it means that nothing should be changed.\n\t\t\t\t// But since we need to return an instance of Operation we return an array with NoOperation.\n\n\t\t\t\tif ( a instanceof RemoveOperation ) {\n\t\t\t\t\t// If `a` operation was RemoveOperation, we cannot convert it to NoOperation.\n\t\t\t\t\t// This is because RemoveOperation creates a holder in graveyard.\n\t\t\t\t\t// Even if we \"remove nothing\" we need a RemoveOperation to create holder element\n\t\t\t\t\t// so that the tree structure is synchronised between clients.\n\t\t\t\t\t// Note that this can happen only if both operations are remove operations, because in\n\t\t\t\t\t// other case RemoveOperation would be forced to be stronger and there would be a common range to move.\n\t\t\t\t\ta = a.clone();\n\t\t\t\t\ta.howMany = 0;\n\t\t\t\t\ta.sourcePosition = b.targetPosition;\n\n\t\t\t\t\treturn [ a ];\n\t\t\t\t} else {\n\t\t\t\t\treturn [ new NoOperation( a.baseVersion ) ];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Target position also could be affected by the other MoveOperation. We will transform it.\n\t\t\tconst newTargetPosition = a.targetPosition._getTransformedByMove(\n\t\t\t\tb.sourcePosition,\n\t\t\t\tb.targetPosition,\n\t\t\t\tb.howMany,\n\t\t\t\t!isStrong,\n\t\t\t\tb.isSticky || aIsInside\n\t\t\t);\n\n\t\t\t// Map transformed range(s) to operations and return them.\n\t\t\treturn ranges.reverse().map( ( range, i ) => {\n\t\t\t\t// We want to keep correct operation class.\n\t\t\t\tconst result = new a.constructor(\n\t\t\t\t\trange.start,\n\t\t\t\t\trange.end.offset - range.start.offset,\n\t\t\t\t\ta instanceof RemoveOperation ? a.baseVersion : newTargetPosition,\n\t\t\t\t\ta instanceof RemoveOperation ? undefined : a.baseVersion\n\t\t\t\t);\n\n\t\t\t\tresult.isSticky = a.isSticky;\n\n\t\t\t\tif ( a instanceof RemoveOperation ) {\n\t\t\t\t\t// Transformed `RemoveOperation` needs graveyard holder only when the original operation needed it.\n\t\t\t\t\t// If `RemoveOperation` got split into two or more operations, only first operation needs graveyard holder.\n\t\t\t\t\tresult._needsHolderElement = a._needsHolderElement && i === 0;\n\t\t\t\t\tresult._holderElementOffset = a._holderElementOffset;\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t} );\n\t\t}\n\t}\n};\n\nfunction transform( a, b, isStrong ) {\n\tlet group, algorithm;\n\n\tif ( a instanceof InsertOperation ) {\n\t\tgroup = ot.InsertOperation;\n\t} else if ( a instanceof AttributeOperation ) {\n\t\tgroup = ot.AttributeOperation;\n\t} else if ( a instanceof RootAttributeOperation ) {\n\t\tgroup = ot.RootAttributeOperation;\n\t} else if ( a instanceof RenameOperation ) {\n\t\tgroup = ot.RenameOperation;\n\t} else if ( a instanceof MarkerOperation ) {\n\t\tgroup = ot.MarkerOperation;\n\t} else if ( a instanceof MoveOperation ) {\n\t\tgroup = ot.MoveOperation;\n\t} else {\n\t\talgorithm = doNotUpdate;\n\t}\n\n\tif ( group ) {\n\t\tif ( b instanceof InsertOperation ) {\n\t\t\talgorithm = group.InsertOperation;\n\t\t} else if ( b instanceof AttributeOperation ) {\n\t\t\talgorithm = group.AttributeOperation;\n\t\t} else if ( b instanceof RootAttributeOperation ) {\n\t\t\talgorithm = group.RootAttributeOperation;\n\t\t} else if ( b instanceof RenameOperation ) {\n\t\t\talgorithm = group.RenameOperation;\n\t\t} else if ( b instanceof MarkerOperation ) {\n\t\t\talgorithm = group.MarkerOperation;\n\t\t} else if ( b instanceof MoveOperation ) {\n\t\t\talgorithm = group.MoveOperation;\n\t\t} else {\n\t\t\talgorithm = doNotUpdate;\n\t\t}\n\t}\n\n\tconst transformed = algorithm( a, b, isStrong );\n\n\treturn updateBaseVersions( a.baseVersion, transformed );\n}\n\n// When we don't want to update an operation, we create and return a clone of it.\n// Returns the operation in \"unified format\" - wrapped in an Array.\nfunction doNotUpdate( operation ) {\n\treturn [ operation.clone() ];\n}\n\n// Takes an Array of operations and sets consecutive base versions for them, starting from given base version.\n// Returns the passed array.\nfunction updateBaseVersions( baseVersion, operations ) {\n\tfor ( let i = 0; i < operations.length; i++ ) {\n\t\toperations[ i ].baseVersion = baseVersion + i + 1;\n\t}\n\n\treturn operations;\n}\n\n// Checks whether MoveOperation targetPosition is inside a node from the moved range of the other MoveOperation.\nfunction moveTargetIntoMovedRange( a, b ) {\n\treturn a.targetPosition._getTransformedByDeletion( b.sourcePosition, b.howMany ) === null;\n}\n\n// Gets an array of Ranges and produces one Range out of it. The root of a new range will be same as\n// the root of the first range in the array. If any of given ranges has different root than the first range,\n// it will be discarded.\nfunction joinRanges( ranges ) {\n\tif ( ranges.length === 0 ) {\n\t\treturn null;\n\t} else if ( ranges.length == 1 ) {\n\t\treturn ranges[ 0 ];\n\t} else {\n\t\tranges[ 0 ].end = ranges[ ranges.length - 1 ].end;\n\n\t\treturn ranges[ 0 ];\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/operation/transform.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/rootelement\n */\n\nimport Element from './element';\n\n/**\n * Type of {@link module:engine/model/element~Element} that is a root of a model tree.\n * @extends module:engine/model/element~Element\n */\nexport default class RootElement extends Element {\n\t/**\n\t * Creates root element.\n\t *\n\t * @param {module:engine/model/document~Document} doc Document that is an owner of this root.\n\t * @param {String} name Node name.\n\t * @param {String} [rootName='main'] Unique root name used to identify this root\n\t * element by {@link module:engine/model/document~Document}.\n\t */\n\tconstructor( doc, name, rootName = 'main' ) {\n\t\tsuper( name );\n\n\t\t/**\n\t\t * Document that is an owner of this root.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/document~Document}\n\t\t */\n\t\tthis._doc = doc;\n\n\t\t/**\n\t\t * Unique root name used to identify this root element by {@link module:engine/model/document~Document}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.rootName = rootName;\n\t}\n\n\t/**\n\t * {@link module:engine/model/document~Document Document} that owns this root element.\n\t *\n\t * In contrary, to {@link module:engine/model/node~Node node}, root element always have a `document`.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/document~Document|null}\n\t */\n\tget document() {\n\t\treturn this._doc;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tis( type, name ) {\n\t\tif ( !name ) {\n\t\t\treturn type == 'rootElement' || super.is( type );\n\t\t} else {\n\t\t\treturn ( type == 'rootElement' && name == this.name ) || super.is( type, name );\n\t\t}\n\t}\n\n\t/**\n\t * Converts `RootElement` instance to `String` containing it's name.\n\t *\n\t * @returns {String} `RootElement` instance converted to `String`.\n\t */\n\ttoJSON() {\n\t\treturn this.rootName;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/rootelement.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/schema\n */\n\nimport Position from './position';\nimport Element from './element';\nimport clone from '@ckeditor/ckeditor5-utils/src/lib/lodash/clone';\nimport isArray from '@ckeditor/ckeditor5-utils/src/lib/lodash/isArray';\nimport isString from '@ckeditor/ckeditor5-utils/src/lib/lodash/isString';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Schema is a definition of the structure of the document. It allows to define which tree model items (element, text, etc.)\n * can be nested within which ones and which attributes can be applied to them. It's created during the run-time of the application,\n * typically by features. Also, the features can query the schema to learn what structure is allowed and act accordingly.\n *\n * For instance, if a feature wants to define that an attribute bold is allowed on the text it needs to register this rule like this:\n *\n *\t\teditor.document.schema.allow( '$text', 'bold' );\n *\n * Note: items prefixed with `$` are special group of items. By default, `Schema` defines three special items:\n *\n * * `$inline` represents all inline elements,\n * * `$text` is a sub-group of `$inline` and represents text nodes,\n * * `$block` represents block elements,\n * * `$root` represents default editing roots (those that allow only `$block`s inside them).\n *\n * When registering an item it's possible to tell that this item should inherit from some other existing item.\n * E.g. `p` can inherit from `$block`, so whenever given attribute is allowed on the `$block` it will automatically be\n * also allowed on the `p` element. By default, `$text` item already inherits from `$inline`.\n */\nexport default class Schema {\n\t/**\n\t * Creates Schema instance.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Names of elements which have \"object\" nature. This means that these\n\t\t * elements should be treated as whole, never merged, can be selected from outside, etc.\n\t\t * Just like images, placeholder widgets, etc.\n\t\t *\n\t\t * @member {Set.<String>} module:engine/model/schema~Schema#objects\n\t\t */\n\t\tthis.objects = new Set();\n\n\t\t/**\n\t\t * Names of elements to which editing operations should be limited.\n\t\t * For example, the <kbd>Enter</kbd> should not split such elements and\n\t\t * <kbd>Backspace</kbd> should not be able to leave or modify such elements.\n\t\t *\n\t\t * @member {Set.<String>} module:engine/model/schema~Schema#limits\n\t\t */\n\t\tthis.limits = new Set();\n\n\t\t/**\n\t\t * Schema items registered in the schema.\n\t\t *\n\t\t * @private\n\t\t * @member {Map} module:engine/model/schema~Schema#_items\n\t\t */\n\t\tthis._items = new Map();\n\n\t\t/**\n\t\t * Description of what entities are a base for given entity.\n\t\t *\n\t\t * @private\n\t\t * @member {Map} module:engine/model/schema~Schema#_extensionChains\n\t\t */\n\t\tthis._extensionChains = new Map();\n\n\t\t// Register some default abstract entities.\n\t\tthis.registerItem( '$root' );\n\t\tthis.registerItem( '$block' );\n\t\tthis.registerItem( '$inline' );\n\t\tthis.registerItem( '$text', '$inline' );\n\n\t\tthis.allow( { name: '$block', inside: '$root' } );\n\t\tthis.allow( { name: '$inline', inside: '$block' } );\n\n\t\t// TMP!\n\t\t// Create an \"all allowed\" context in the schema for processing the pasted content.\n\t\t// Read: https://github.com/ckeditor/ckeditor5-engine/issues/638#issuecomment-255086588\n\n\t\tthis.registerItem( '$clipboardHolder', '$root' );\n\t\tthis.allow( { name: '$inline', inside: '$clipboardHolder' } );\n\t}\n\n\t/**\n\t * Allows given query in the schema.\n\t *\n\t *\t\t// Allow text with bold attribute in all P elements.\n\t *\t\tschema.registerItem( 'p', '$block' );\n\t *\t\tschema.allow( { name: '$text', attributes: 'bold', inside: 'p' } );\n\t *\n\t *\t\t// Allow header in Ps that are in DIVs\n\t *\t\tschema.registerItem( 'header', '$block' );\n\t *\t\tschema.registerItem( 'div', '$block' );\n\t *\t\tschema.allow( { name: 'header', inside: 'div p' } ); // inside: [ 'div', 'p' ] would also work.\n\t *\n\t * @param {module:engine/model/schema~SchemaQuery} query Allowed query.\n\t */\n\tallow( query ) {\n\t\tthis._getItem( query.name ).allow( Schema._normalizeQueryPath( query.inside ), query.attributes );\n\t}\n\n\t/**\n\t * Disallows given query in the schema.\n\t *\n\t * @see #allow\n\t * @param {module:engine/model/schema~SchemaQuery} query Disallowed query.\n\t */\n\tdisallow( query ) {\n\t\tthis._getItem( query.name ).disallow( Schema._normalizeQueryPath( query.inside ), query.attributes );\n\t}\n\n\t/**\n\t * Makes a requirement in schema that entity represented by given item has to have given set of attributes. Some\n\t * elements in the model might require some attributes to be set. If multiple sets of attributes are required it\n\t * is enough that the entity fulfills only one set.\n\t *\n\t *\t\t// \"a\" element must either have \"href\" attribute or \"name\" attribute\n\t *\t\tschema.requireAttributes( 'a', [ 'href' ] );\n\t *\t\tschema.requireAttributes( 'a', [ 'name' ] );\n\t *\t\t// \"img\" element must have both \"src\" and \"alt\" attributes\n\t *\t\tschema.requireAttributes( 'img', [ 'src', 'alt' ] );\n\t *\n\t * @param {String} name Entity name.\n\t * @param {Array.<String>} attributes Attributes that has to be set on the entity to make it valid.\n\t */\n\trequireAttributes( name, attributes ) {\n\t\tthis._getItem( name ).requireAttributes( attributes );\n\t}\n\n\t/**\n\t * Checks whether given query is allowed in schema.\n\t *\n\t *\t\t// Check whether bold text is allowed in header element.\n\t *\t\tlet query = {\n\t *\t\t\tname: '$text',\n\t *\t\t\tattributes: 'bold',\n\t *\t\t\tinside: 'header'\n\t *\t\t};\n\t *\t\tif ( schema.check( query ) ) { ... }\n\t *\n\t *\t\t// Check whether bold and italic text can be placed at caret position.\n\t *\t\tlet caretPos = editor.document.selection.getFirstPosition();\n\t *\t\tlet query = {\n\t *\t\t\tname: '$text',\n\t *\t\t\tattributes: [ 'bold', 'italic' ],\n\t *\t\t\tinside: caretPos\n\t *\t\t};\n\t *\t\tif ( schema.check( query ) ) { ... }\n\t *\n\t *\t\t// Check whether image with alt, src and title is allowed in given elements path.\n\t *\t\tlet quoteElement = new Element( 'quote' );\n\t *\t\tlet query = {\n\t *\t\t\tname: 'img',\n\t *\t\t\tattributes: [ 'alt', 'src', 'title' ],\n\t *\t\t\t// It is possible to mix strings with elements.\n\t *\t\t\t// Query will check whether \"img\" can be inside \"quoteElement\" that is inside a block element.\n\t *\t\t\tinside: [ '$block', quoteElement ]\n\t *\t\t};\n\t *\t\tif ( schema.check( query ) ) { ... }\n\t *\n\t * @param {module:engine/model/schema~SchemaQuery} query Query to check.\n\t * @returns {Boolean} `true` if given query is allowed in schema, `false` otherwise.\n\t */\n\tcheck( query ) {\n\t\tif ( !this.hasItem( query.name ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If attributes property is a string or undefined, wrap it in an array for easier processing.\n\t\tif ( !isArray( query.attributes ) ) {\n\t\t\tquery.attributes = [ query.attributes ];\n\t\t} else if ( query.attributes.length === 0 ) {\n\t\t\t// To simplify algorithms, when a SchemaItem path is added \"without\" attribute, it is added with\n\t\t\t// attribute equal to undefined. This means that algorithms can work the same way for specified attributes\n\t\t\t// and no-atrtibutes, but we have to fill empty array with \"fake\" undefined value for algorithms reasons.\n\t\t\tquery.attributes.push( undefined );\n\t\t}\n\n\t\t// Normalize the path to an array of strings.\n\t\tconst path = Schema._normalizeQueryPath( query.inside );\n\n\t\t// Get extension chain of given item and retrieve all schema items that are extended by given item.\n\t\tconst schemaItems = this._extensionChains.get( query.name ).map( name => {\n\t\t\treturn this._getItem( name );\n\t\t} );\n\n\t\t// First check if the query meets at required attributes for this item.\n\t\tif ( !this._getItem( query.name )._checkRequiredAttributes( query.attributes ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If there is matching disallow path, this query is not valid with schema.\n\t\tfor ( const attribute of query.attributes ) {\n\t\t\tfor ( const schemaItem of schemaItems ) {\n\t\t\t\tif ( schemaItem._hasMatchingPath( 'disallow', path, attribute ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point, the query is not disallowed.\n\t\t// If there are correct allow paths that match the query, this query is valid with schema.\n\t\t// Since we are supporting multiple attributes, we have to make sure that if attributes are set,\n\t\t// we have allowed paths for all of them.\n\t\t// Keep in mind that if the query has no attributes, query.attribute was converted to an array\n\t\t// with a single `undefined` value. This fits the algorithm well.\n\t\tfor ( const attribute of query.attributes ) {\n\t\t\tlet matched = false;\n\n\t\t\tfor ( const schemaItem of schemaItems ) {\n\t\t\t\tif ( schemaItem._hasMatchingPath( 'allow', path, attribute ) ) {\n\t\t\t\t\tmatched = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The attribute has not been matched, so it is not allowed by any schema item.\n\t\t\t// The query is disallowed.\n\t\t\tif ( !matched ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Checks whether there is an item registered under given name in schema.\n\t *\n\t * @param itemName\n\t * @returns {Boolean}\n\t */\n\thasItem( itemName ) {\n\t\treturn this._items.has( itemName );\n\t}\n\n\t/**\n\t * Registers given item name in schema.\n\t *\n\t *\t\t// Register P element that should be treated like all block elements.\n\t *\t\tschema.registerItem( 'p', '$block' );\n\t *\n\t * @param {String} itemName Name to register.\n\t * @param [isExtending] If set, new item will extend item with given name.\n\t */\n\tregisterItem( itemName, isExtending ) {\n\t\tif ( this.hasItem( itemName ) ) {\n\t\t\t/**\n\t\t\t * Item with specified name already exists in schema.\n\t\t\t *\n\t\t\t * @error model-schema-item-exists\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-schema-item-exists: Item with specified name already exists in schema.' );\n\t\t}\n\n\t\tif ( !!isExtending && !this.hasItem( isExtending ) ) {\n\t\t\t/**\n\t\t\t * Item with specified name does not exist in schema.\n\t\t\t *\n\t\t\t * @error model-schema-no-item\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-schema-no-item: Item with specified name does not exist in schema.' );\n\t\t}\n\n\t\t// Create new SchemaItem and add it to the items store.\n\t\tthis._items.set( itemName, new SchemaItem( this ) );\n\n\t\t// Create an extension chain.\n\t\t// Extension chain has all item names that should be checked when that item is on path to check.\n\t\t// This simply means, that if item is not extending anything, it should have only itself in it's extension chain.\n\t\t// Since extending is not dynamic, we can simply get extension chain of extended item and expand it with registered name,\n\t\t// if the registered item is extending something.\n\t\tconst chain = this.hasItem( isExtending ) ? this._extensionChains.get( isExtending ).concat( itemName ) : [ itemName ];\n\t\tthis._extensionChains.set( itemName, chain );\n\t}\n\n\t/**\n\t * Checks whether item of given name is extending item of another given name.\n\t *\n\t * @param {String} childItemName Name of the child item.\n\t * @param {String} parentItemName Name of the parent item.\n\t * @returns {Boolean} `true` if child item extends parent item, `false` otherwise.\n\t */\n\titemExtends( childItemName, parentItemName ) {\n\t\tif ( !this.hasItem( childItemName ) || !this.hasItem( parentItemName ) ) {\n\t\t\t/**\n\t\t\t * Item with specified name does not exist in schema.\n\t\t\t *\n\t\t\t * @error model-schema-no-item\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-schema-no-item: Item with specified name does not exist in schema.' );\n\t\t}\n\n\t\tconst chain = this._extensionChains.get( childItemName );\n\n\t\treturn chain.some( itemName => itemName == parentItemName );\n\t}\n\n\t/**\n\t * Returns {@link module:engine/model/schema~SchemaItem schema item} that was registered in the schema under given name.\n\t * If item has not been found, throws error.\n\t *\n\t * @private\n\t * @param {String} itemName Name to look for in schema.\n\t * @returns {module:engine/model/schema~SchemaItem} Schema item registered under given name.\n\t */\n\t_getItem( itemName ) {\n\t\tif ( !this.hasItem( itemName ) ) {\n\t\t\t/**\n\t\t\t * Item with specified name does not exist in schema.\n\t\t\t *\n\t\t\t * @error model-schema-no-item\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'model-schema-no-item: Item with specified name does not exist in schema.' );\n\t\t}\n\n\t\treturn this._items.get( itemName );\n\t}\n\n\t/**\n\t * Normalizes a path to an entity by converting it from {@link module:engine/model/schema~SchemaPath} to an array of strings.\n\t *\n\t * @protected\n\t * @param {module:engine/model/schema~SchemaPath} path Path to normalize.\n\t * @returns {Array.<String>} Normalized path.\n\t */\n\tstatic _normalizeQueryPath( path ) {\n\t\tlet normalized = [];\n\n\t\tif ( isArray( path ) ) {\n\t\t\tfor ( const pathItem of path ) {\n\t\t\t\tif ( pathItem instanceof Element ) {\n\t\t\t\t\tnormalized.push( pathItem.name );\n\t\t\t\t} else if ( isString( pathItem ) ) {\n\t\t\t\t\tnormalized.push( pathItem );\n\t\t\t\t}\n\t\t\t}\n\t\t} else if ( path instanceof Position ) {\n\t\t\tlet parent = path.parent;\n\n\t\t\twhile ( parent !== null ) {\n\t\t\t\tnormalized.push( parent.name );\n\t\t\t\tparent = parent.parent;\n\t\t\t}\n\n\t\t\tnormalized.reverse();\n\t\t} else if ( isString( path ) ) {\n\t\t\tnormalized = path.split( ' ' );\n\t\t}\n\n\t\treturn normalized;\n\t}\n}\n\n/**\n * SchemaItem is a singular registry item in {@link module:engine/model/schema~Schema} that groups and holds allow/disallow rules for\n * one entity. This class is used internally in {@link module:engine/model/schema~Schema} and should not be used outside it.\n *\n * @see module:engine/model/schema~Schema\n * @protected\n */\nexport class SchemaItem {\n\t/**\n\t * Creates SchemaItem instance.\n\t *\n\t * @param {module:engine/model/schema~Schema} schema Schema instance that owns this item.\n\t */\n\tconstructor( schema ) {\n\t\t/**\n\t\t * Schema instance that owns this item.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/schema~Schema} module:engine/model/schema~SchemaItem#_schema\n\t\t */\n\t\tthis._schema = schema;\n\n\t\t/**\n\t\t * Paths in which the entity, represented by this item, is allowed.\n\t\t *\n\t\t * @private\n\t\t * @member {Array} module:engine/model/schema~SchemaItem#_allowed\n\t\t */\n\t\tthis._allowed = [];\n\n\t\t/**\n\t\t * Paths in which the entity, represented by this item, is disallowed.\n\t\t *\n\t\t * @private\n\t\t * @member {Array} module:engine/model/schema~SchemaItem#_disallowed\n\t\t */\n\t\tthis._disallowed = [];\n\n\t\t/**\n\t\t * Attributes that are required by the entity represented by this item.\n\t\t *\n\t\t * @protected\n\t\t * @member {Array} module:engine/model/schema~SchemaItem#_requiredAttributes\n\t\t */\n\t\tthis._requiredAttributes = [];\n\t}\n\n\t/**\n\t * Allows entity, represented by this item, to be in given path.\n\t *\n\t * @param {Array.<String>} path Path in which entity is allowed.\n\t * @param {Array.<String>|String} [attributes] If set, this path will be used only for entities that have attribute(s) with this key.\n\t */\n\tallow( path, attributes ) {\n\t\tthis._addPath( '_allowed', path, attributes );\n\t}\n\n\t/**\n\t * Disallows entity, represented by this item, to be in given path.\n\t *\n\t * @param {Array.<String>} path Path in which entity is disallowed.\n\t * @param {Array.<String>|String} [attributes] If set, this path will be used only for entities that have an attribute(s) with this key.\n\t */\n\tdisallow( path, attributes ) {\n\t\tthis._addPath( '_disallowed', path, attributes );\n\t}\n\n\t/**\n\t * Specifies that the entity, to be valid, requires given attributes set. It is possible to register multiple\n\t * different attributes set. If there are more than one attributes set required, the entity will be valid if\n\t * at least one of them is fulfilled.\n\t *\n\t * @param {Array.<String>} attributes Attributes that has to be set on the entity to make it valid.\n\t */\n\trequireAttributes( attributes ) {\n\t\tthis._requiredAttributes.push( attributes );\n\t}\n\n\t/**\n\t * Adds path to the SchemaItem instance.\n\t *\n\t * @private\n\t * @param {String} member Name of the array member into which the path will be added. Possible values are `_allowed` or `_disallowed`.\n\t * @param {Array.<String>} path Path to add.\n\t * @param {Array.<String>|String} [attributes] If set, this path will be used only for entities that have attribute(s) with this key.\n\t */\n\t_addPath( member, path, attributes ) {\n\t\tpath = path.slice();\n\n\t\tif ( !isArray( attributes ) ) {\n\t\t\tattributes = [ attributes ];\n\t\t}\n\n\t\tfor ( const attribute of attributes ) {\n\t\t\tthis[ member ].push( { path, attribute } );\n\t\t}\n\t}\n\n\t/**\n\t * Returns all paths of given type that were previously registered in the item.\n\t *\n\t * @private\n\t * @param {String} type Paths' type. Possible values are `allow` or `disallow`.\n\t * @param {String} [attribute] If set, only paths registered for given attribute will be returned.\n\t * @returns {Array} Paths registered in the item.\n\t */\n\t_getPaths( type, attribute ) {\n\t\tconst source = type === 'allow' ? this._allowed : this._disallowed;\n\t\tconst paths = [];\n\n\t\tfor ( const item of source ) {\n\t\t\tif ( item.attribute === attribute ) {\n\t\t\t\tpaths.push( item.path );\n\t\t\t}\n\t\t}\n\n\t\treturn paths;\n\t}\n\n\t/**\n\t * Checks whether given set of attributes fulfills required attributes of this item.\n\t *\n\t * @protected\n\t * @see module:engine/model/schema~SchemaItem#requireAttributes\n\t * @param {Array.<String>} attributesToCheck Attributes to check.\n\t * @returns {Boolean} `true` if given set or attributes fulfills required attributes, `false` otherwise.\n\t */\n\t_checkRequiredAttributes( attributesToCheck ) {\n\t\tlet found = true;\n\n\t\tfor ( const attributeSet of this._requiredAttributes ) {\n\t\t\tfound = true;\n\n\t\t\tfor ( const attribute of attributeSet ) {\n\t\t\t\tif ( attributesToCheck.indexOf( attribute ) == -1 ) {\n\t\t\t\t\tfound = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( found ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn found;\n\t}\n\n\t/**\n\t * Checks whether this item has any registered path of given type that matches the provided path.\n\t *\n\t * @protected\n\t * @param {String} type Paths' type. Possible values are `allow` or `disallow`.\n\t * @param {Array.<String>} pathToCheck Path to check.\n\t * @param {String} [attribute] If set, only paths registered for given attribute will be checked.\n\t * @returns {Boolean} `true` if item has any registered matching path, `false` otherwise.\n\t */\n\t_hasMatchingPath( type, pathToCheck, attribute ) {\n\t\tconst registeredPaths = this._getPaths( type, attribute );\n\n\t\tfor ( const registeredPathPath of registeredPaths ) {\n\t\t\tif ( matchPaths( this._schema, pathToCheck, registeredPathPath ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Custom toJSON method to solve child-parent circular dependencies.\n\t *\n\t * @returns {Object} Clone of this object with the parent property replaced with its name.\n\t */\n\ttoJSON() {\n\t\tconst json = clone( this );\n\n\t\t// Due to circular references we need to remove parent reference.\n\t\tjson._schema = '[model.Schema]';\n\n\t\treturn json;\n\t}\n}\n\n/**\n * Object with query used by {@link module:engine/model/schema~Schema} to query schema or add allow/disallow rules to schema.\n *\n * @typedef {Object} module:engine/model/schema~SchemaQuery\n * @property {String} name Entity name.\n * @property {module:engine/model/schema~SchemaPath} inside Path inside which the entity is placed.\n * @property {Array.<String>|String} [attributes] If set, the query applies only to entities that has attribute(s) with given key.\n */\n\n/**\n * Path to an entity, begins from the top-most ancestor. Can be passed in multiple formats. Internally, normalized to\n * an array of strings. If string is passed, entities from the path should be divided by ` ` (space character). If\n * an array is passed, unrecognized items are skipped. If position is passed, it is assumed that the entity is at given position.\n *\n * @typedef {String|Array.<String|module:engine/model/element~Element>|module:engine/model/position~Position}\n * module:engine/model/schema~SchemaPath\n */\n\n// Checks whether the given pathToCheck and registeredPath right ends match.\n//\n// pathToCheck: C, D\n// registeredPath: A, B, C, D\n// result: OK\n//\n// pathToCheck: A, B, C\n// registeredPath: A, B, C, D\n// result: NOK\n//\n// Note – when matching paths, element extension chains (inheritance) are taken into consideration.\n//\n// @param {Schema} schema\n// @param {Array.<String>} pathToCheck\n// @param {Array.<String>} registeredPath\nfunction matchPaths( schema, pathToCheck, registeredPath ) {\n\t// Start checking from the right end of both tables.\n\tlet registeredPathIndex = registeredPath.length - 1;\n\tlet pathToCheckIndex = pathToCheck.length - 1;\n\n\t// And finish once reaching an end of the shorter table.\n\twhile ( registeredPathIndex >= 0 && pathToCheckIndex >= 0 ) {\n\t\tconst checkName = pathToCheck[ pathToCheckIndex ];\n\n\t\t// Fail when checking a path which contains element which aren't even registered to the schema.\n\t\tif ( !schema.hasItem( checkName ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst extChain = schema._extensionChains.get( checkName );\n\n\t\tif ( extChain.includes( registeredPath[ registeredPathIndex ] ) ) {\n\t\t\tregisteredPathIndex--;\n\t\t\tpathToCheckIndex--;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/model/schema.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/document\n */\n\nimport Selection from './selection';\nimport Renderer from './renderer';\nimport DomConverter from './domconverter';\nimport RootEditableElement from './rooteditableelement';\nimport { injectQuirksHandling } from './filler';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\nimport MutationObserver from './observer/mutationobserver';\nimport SelectionObserver from './observer/selectionobserver';\nimport FocusObserver from './observer/focusobserver';\nimport KeyObserver from './observer/keyobserver';\nimport FakeSelectionObserver from './observer/fakeselectionobserver';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\n\n/**\n * Document class creates an abstract layer over the content editable area.\n * It combines the actual tree of view elements, tree of DOM elements,\n * {@link module:engine/view/domconverter~DomConverter DOM Converter}, {@link module:engine/view/renderer~Renderer renderer} and all\n * {@link module:engine/view/observer/observer~Observer observers}.\n *\n * If you want to only transform the tree of view elements to the DOM elements you can use the\n * {@link module:engine/view/domconverter~DomConverter DomConverter}.\n *\n * Note that the following observers are added by the class constructor and are always available:\n *\n * * {@link module:engine/view/observer/mutationobserver~MutationObserver},\n * * {@link module:engine/view/observer/selectionobserver~SelectionObserver},\n * * {@link module:engine/view/observer/focusobserver~FocusObserver},\n * * {@link module:engine/view/observer/keyobserver~KeyObserver},\n * * {@link module:engine/view/observer/fakeselectionobserver~FakeSelectionObserver}.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class Document {\n\t/**\n\t * Creates a Document instance.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Roots of the DOM tree. Map on the `HTMLElement`s with roots names as keys.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Map} module:engine/view/document~Document#domRoots\n\t\t */\n\t\tthis.domRoots = new Map();\n\n\t\t/**\n\t\t * Selection done on this document.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/selection~Selection} module:engine/view/document~Document#selection\n\t\t */\n\t\tthis.selection = new Selection();\n\n\t\t/**\n\t\t * Instance of the {@link module:engine/view/domconverter~DomConverter domConverter} use by\n\t\t * {@link module:engine/view/document~Document#renderer renderer}\n\t\t * and {@link module:engine/view/observer/observer~Observer observers}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/domconverter~DomConverter} module:engine/view/document~Document#domConverter\n\t\t */\n\t\tthis.domConverter = new DomConverter();\n\n\t\t/**\n\t\t * Roots of the view tree. Map of the {module:engine/view/element~Element view elements} with roots names as keys.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Map} module:engine/view/document~Document#roots\n\t\t */\n\t\tthis.roots = new Map();\n\n\t\t/**\n\t\t * True if document is focused.\n\t\t *\n\t\t * This property is updated by the {@link module:engine/view/observer/focusobserver~FocusObserver}.\n\t\t * If the {@link module:engine/view/observer/focusobserver~FocusObserver} is disabled this property will not change.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} module:engine/view/document~Document#isFocused\n\t\t */\n\t\tthis.set( 'isFocused', false );\n\n\t\t/**\n\t\t * Instance of the {@link module:engine/view/document~Document#renderer renderer}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/renderer~Renderer} module:engine/view/document~Document#renderer\n\t\t */\n\t\tthis.renderer = new Renderer( this.domConverter, this.selection );\n\t\tthis.renderer.bind( 'isFocused' ).to( this, 'isFocused' );\n\n\t\t/**\n\t\t * Map of registered {@link module:engine/view/observer/observer~Observer observers}.\n\t\t *\n\t\t * @private\n\t\t * @member {Map.<Function, module:engine/view/observer/observer~Observer>} module:engine/view/document~Document#_observers\n\t\t */\n\t\tthis._observers = new Map();\n\n\t\t// Add default observers.\n\t\tthis.addObserver( MutationObserver );\n\t\tthis.addObserver( SelectionObserver );\n\t\tthis.addObserver( FocusObserver );\n\t\tthis.addObserver( KeyObserver );\n\t\tthis.addObserver( FakeSelectionObserver );\n\n\t\tinjectQuirksHandling( this );\n\n\t\t// Listens `render` event on default priority.\n\t\t// This way we can attach other listeners before or after rendering execution.\n\t\tthis.on( 'render', () => {\n\t\t\tthis.disableObservers();\n\t\t\tthis.renderer.render();\n\t\t\tthis.enableObservers();\n\t\t} );\n\t}\n\n\t/**\n\t * Creates observer of the given type if not yet created, {@link module:engine/view/observer/observer~Observer#enable enables} it\n\t * and {@link module:engine/view/observer/observer~Observer#observe attaches} to all existing and future\n\t * {@link module:engine/view/document~Document#domRoots DOM roots}.\n\t *\n\t * Note: Observers are recognized by their constructor (classes). A single observer will be instantiated and used only\n\t * when registered for the first time. This means that features and other components can register a single observer\n\t * multiple times without caring whether it has been already added or not.\n\t *\n\t * @param {Function} Observer The constructor of an observer to add.\n\t * Should create an instance inheriting from {@link module:engine/view/observer/observer~Observer}.\n\t * @returns {module:engine/view/observer/observer~Observer} Added observer instance.\n\t */\n\taddObserver( Observer ) {\n\t\tlet observer = this._observers.get( Observer );\n\n\t\tif ( observer ) {\n\t\t\treturn observer;\n\t\t}\n\n\t\tobserver = new Observer( this );\n\n\t\tthis._observers.set( Observer, observer );\n\n\t\tfor ( const [ name, domElement ] of this.domRoots ) {\n\t\t\tobserver.observe( domElement, name );\n\t\t}\n\n\t\tobserver.enable();\n\n\t\treturn observer;\n\t}\n\n\t/**\n\t * Returns observer of the given type or `undefined` if such observer has not been added yet.\n\t *\n\t * @param {Function} Observer The constructor of an observer to get.\n\t * @returns {module:engine/view/observer/observer~Observer|undefined} Observer instance or undefined.\n\t */\n\tgetObserver( Observer ) {\n\t\treturn this._observers.get( Observer );\n\t}\n\n\t/**\n\t * Creates a {@link module:engine/view/document~Document#roots view root element}.\n\t *\n\t * If the DOM element is passed as a first parameter it will be automatically\n\t * {@link module:engine/view/document~Document#attachDomRoot attached}:\n\t *\n\t *\t\tdocument.createRoot( document.querySelector( 'div#editor' ) ); // Will call document.attachDomRoot.\n\t *\n\t * However, if the string is passed, then only the view element will be created and the DOM element have to be\n\t * attached separately:\n\t *\n\t *\t\tdocument.createRoot( 'body' );\n\t *\t\tdocument.attachDomRoot( document.querySelector( 'body#editor' ) );\n\t *\n\t * In both cases, {@link module:engine/view/rooteditableelement~RootEditableElement#rootName element name} is always\n\t * transformed to lower\n\t * case.\n\t *\n\t * @param {Element|String} domRoot DOM root element or the tag name of view root element if the DOM element will be\n\t * attached later.\n\t * @param {String} [name='main'] Name of the root.\n\t * @returns {module:engine/view/rooteditableelement~RootEditableElement} The created view root element.\n\t */\n\tcreateRoot( domRoot, name = 'main' ) {\n\t\tconst rootTag = typeof domRoot == 'string' ? domRoot : domRoot.tagName;\n\n\t\tconst viewRoot = new RootEditableElement( rootTag.toLowerCase(), name );\n\t\tviewRoot.document = this;\n\n\t\tthis.roots.set( name, viewRoot );\n\n\t\t// Mark changed nodes in the renderer.\n\t\tviewRoot.on( 'change:children', ( evt, node ) => this.renderer.markToSync( 'children', node ) );\n\t\tviewRoot.on( 'change:attributes', ( evt, node ) => this.renderer.markToSync( 'attributes', node ) );\n\t\tviewRoot.on( 'change:text', ( evt, node ) => this.renderer.markToSync( 'text', node ) );\n\n\t\tif ( this.domConverter.isElement( domRoot ) ) {\n\t\t\tthis.attachDomRoot( domRoot, name );\n\t\t}\n\n\t\treturn viewRoot;\n\t}\n\n\t/**\n\t * Attaches DOM root element to the view element and enable all observers on that element. This method also\n\t * {@link module:engine/view/renderer~Renderer#markToSync mark element} to be synchronized with the view what means that all child\n\t * nodes will be removed and replaced with content of the view root.\n\t *\n\t * Note that {@link module:engine/view/document~Document#createRoot} will call this method automatically if the DOM element is\n\t * passed to it.\n\t *\n\t * @param {Element|String} domRoot DOM root element.\n\t * @param {String} [name='main'] Name of the root.\n\t */\n\tattachDomRoot( domRoot, name = 'main' ) {\n\t\tconst viewRoot = this.getRoot( name );\n\n\t\tthis.domRoots.set( name, domRoot );\n\n\t\tthis.domConverter.bindElements( domRoot, viewRoot );\n\n\t\tthis.renderer.markToSync( 'children', viewRoot );\n\t\tthis.renderer.domDocuments.add( domRoot.ownerDocument );\n\n\t\tfor ( const observer of this._observers.values() ) {\n\t\t\tobserver.observe( domRoot, name );\n\t\t}\n\t}\n\n\t/**\n\t * Gets a {@link module:engine/view/document~Document#roots view root element} with the specified name. If the name is not\n\t * specific \"main\" root is returned.\n\t *\n\t * @param {String} [name='main'] Name of the root.\n\t * @returns {module:engine/view/rooteditableelement~RootEditableElement} The view root element with the specified name.\n\t */\n\tgetRoot( name = 'main' ) {\n\t\treturn this.roots.get( name );\n\t}\n\n\t/**\n\t * Gets DOM root element.\n\t *\n\t * @param {String} [name='main']  Name of the root.\n\t * @returns {Element} DOM root element instance.\n\t */\n\tgetDomRoot( name = 'main' ) {\n\t\treturn this.domRoots.get( name );\n\t}\n\n\t/**\n\t * Renders all changes. In order to avoid triggering the observers (e.g. mutations) all observers are disabled\n\t * before rendering and re-enabled after that.\n\t *\n\t * @fires render\n\t */\n\trender() {\n\t\tthis.fire( 'render' );\n\t}\n\n\t/**\n\t * Focuses document. It will focus {@link module:engine/view/editableelement~EditableElement EditableElement} that is currently having\n\t * selection inside.\n\t */\n\tfocus() {\n\t\tif ( !this.isFocused ) {\n\t\t\tconst editable = this.selection.editableElement;\n\n\t\t\tif ( editable ) {\n\t\t\t\tthis.domConverter.focus( editable );\n\t\t\t\tthis.render();\n\t\t\t} else {\n\t\t\t\t/**\n\t\t\t\t * Before focusing view document, selection should be placed inside one of the view's editables.\n\t\t\t\t * Normally its selection will be converted from model document (which have default selection), but\n\t\t\t\t * when using view document on its own, we need to manually place selection before focusing it.\n\t\t\t\t *\n\t\t\t\t * @error view-focus-no-selection\n\t\t\t\t */\n\t\t\t\tlog.warn( 'view-focus-no-selection: There is no selection in any editable to focus.' );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Disables all added observers.\n\t */\n\tdisableObservers() {\n\t\tfor ( const observer of this._observers.values() ) {\n\t\t\tobserver.disable();\n\t\t}\n\t}\n\n\t/**\n\t * Enables all added observers.\n\t */\n\tenableObservers() {\n\t\tfor ( const observer of this._observers.values() ) {\n\t\t\tobserver.enable();\n\t\t}\n\t}\n\n\t/**\n\t * Destroys all observers created by view `Document`.\n\t */\n\tdestroy() {\n\t\tfor ( const observer of this._observers.values() ) {\n\t\t\tobserver.destroy();\n\t\t}\n\t}\n}\n\nmix( Document, ObservableMixin );\n\n/**\n * Enum representing type of the change.\n *\n * Possible values:\n *\n * * `children` - for child list changes,\n * * `attributes` - for element attributes changes,\n * * `text` - for text nodes changes.\n *\n * @typedef {String} module:engine/view/document~ChangeType\n */\n\n/**\n * Fired when {@link #render render} method is called. Actual rendering is executed as a listener to\n * this event with default priority. This way other listeners can be used to run code before or after rendering.\n *\n * @event render\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/view/document.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/observer/clickobserver\n */\n\nimport DomEventObserver from './domeventobserver';\n\n/**\n * {@link module:engine/view/document~Document#event:click Click} event observer.\n *\n * Note that this observer is not available by default. To make it available it needs to be added to\n * {@link module:engine/view/document~Document}\n * by a {@link module:engine/view/document~Document#addObserver} method.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nexport default class ClickObserver extends DomEventObserver {\n\tconstructor( document ) {\n\t\tsuper( document );\n\n\t\tthis.domEventType = 'click';\n\t}\n\n\tonDomEvent( domEvent ) {\n\t\tthis.fire( domEvent.type, domEvent );\n\t}\n}\n\n/**\n * Fired when one of the editables has been clicked.\n *\n * Introduced by {@link module:engine/view/observer/clickobserver~ClickObserver}.\n *\n * Note that this event is not available by default. To make it available\n * {@link module:engine/view/observer/clickobserver~ClickObserver} needs to be added\n * to {@link module:engine/view/document~Document} by a {@link module:engine/view/document~Document#addObserver} method.\n *\n * @see module:engine/view/observer/clickobserver~ClickObserver\n * @event module:engine/view/document~Document#event:click\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/view/observer/clickobserver.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/observer/fakeselectionobserver\n */\n\nimport Observer from './observer';\nimport ViewSelection from '../selection';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport debounce from '@ckeditor/ckeditor5-utils/src/lib/lodash/debounce';\n\n/**\n * Fake selection observer class. If view selection is fake it is placed in dummy DOM container. This observer listens\n * on {@link module:engine/view/document~Document#event:keydown keydown} events and handles moving fake view selection to the correct place\n * if arrow keys are pressed.\n * Fires {@link module:engine/view/document~Document#event:selectionChange selectionChange event} simulating natural behaviour of\n * {@link module:engine/view/observer/selectionobserver~SelectionObserver SelectionObserver}.\n *\n * @extends module:engine/view/observer/observer~Observer.Observer\n */\nexport default class FakeSelectionObserver extends Observer {\n\t/**\n\t * Creates new FakeSelectionObserver instance.\n\t *\n\t * @param {module:engine/view/document~Document} document\n\t */\n\tconstructor( document ) {\n\t\tsuper( document );\n\n\t\t/**\n\t\t * Fires debounced event `selectionChangeDone`. It uses `lodash#debounce` method to delay function call.\n\t\t *\n\t\t * @private\n\t\t * @param {Object} data Selection change data.\n\t\t * @method #_fireSelectionChangeDoneDebounced\n\t\t */\n\t\tthis._fireSelectionChangeDoneDebounced = debounce( data => this.document.fire( 'selectionChangeDone', data ), 200 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tobserve() {\n\t\tconst document = this.document;\n\n\t\tdocument.on( 'keydown', ( eventInfo, data ) => {\n\t\t\tconst selection = document.selection;\n\n\t\t\tif ( selection.isFake && _isArrowKeyCode( data.keyCode ) && this.isEnabled ) {\n\t\t\t\t// Prevents default key down handling - no selection change will occur.\n\t\t\t\tdata.preventDefault();\n\n\t\t\t\tthis._handleSelectionMove( data.keyCode );\n\t\t\t}\n\t\t}, { priority: 'lowest' } );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\tthis._fireSelectionChangeDoneDebounced.cancel();\n\t}\n\n\t/**\n\t * Handles collapsing view selection according to given key code. If left or up key is provided - new selection will be\n\t * collapsed to left. If right or down key is pressed - new selection will be collapsed to right.\n\t *\n\t * This method fires {@link module:engine/view/document~Document#event:selectionChange} and\n\t * {@link module:engine/view/document~Document#event:selectionChangeDone} events imitating behaviour of\n\t * {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\n\t *\n\t * @private\n\t * @param {Number} keyCode\n\t * @fires module:engine/view/document~Document#event:selectionChange\n\t * @fires module:engine/view/document~Document#event:selectionChangeDone\n\t */\n\t_handleSelectionMove( keyCode ) {\n\t\tconst selection = this.document.selection;\n\t\tconst newSelection = ViewSelection.createFromSelection( selection );\n\t\tnewSelection.setFake( false );\n\n\t\t// Left or up arrow pressed - move selection to start.\n\t\tif ( keyCode == keyCodes.arrowleft || keyCode == keyCodes.arrowup ) {\n\t\t\tnewSelection.collapseToStart();\n\t\t}\n\n\t\t// Right or down arrow pressed - move selection to end.\n\t\tif ( keyCode == keyCodes.arrowright || keyCode == keyCodes.arrowdown ) {\n\t\t\tnewSelection.collapseToEnd();\n\t\t}\n\n\t\tconst data = {\n\t\t\toldSelection: selection,\n\t\t\tnewSelection,\n\t\t\tdomSelection: null\n\t\t};\n\n\t\t// Fire dummy selection change event.\n\t\tthis.document.fire( 'selectionChange', data );\n\n\t\t// Call` #_fireSelectionChangeDoneDebounced` every time when `selectionChange` event is fired.\n\t\t// This function is debounced what means that `selectionChangeDone` event will be fired only when\n\t\t// defined int the function time will elapse since the last time the function was called.\n\t\t// So `selectionChangeDone` will be fired when selection will stop changing.\n\t\tthis._fireSelectionChangeDoneDebounced( data );\n\t}\n}\n\n// Checks if one of the arrow keys is pressed.\n//\n// @private\n// @param {Number} keyCode\n// @returns {Boolean}\nfunction _isArrowKeyCode( keyCode ) {\n\treturn keyCode == keyCodes.arrowright ||\n\t\tkeyCode == keyCodes.arrowleft ||\n\t\tkeyCode == keyCodes.arrowup ||\n\t\tkeyCode == keyCodes.arrowdown;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/view/observer/fakeselectionobserver.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/observer/focusobserver\n */\n\n/* globals setTimeout, clearTimeout */\n\nimport DomEventObserver from './domeventobserver';\n\n/**\n * {@link module:engine/view/document~Document#event:focus Focus}\n * and {@link module:engine/view/document~Document#event:blur blur} events observer.\n * Focus observer handle also {@link module:engine/view/rooteditableelement~RootEditableElement#isFocused isFocused} property of the\n * {@link module:engine/view/rooteditableelement~RootEditableElement root elements}.\n *\n * Note that this observer is attached by the {@link module:engine/view/document~Document} and is available by default.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nexport default class FocusObserver extends DomEventObserver {\n\tconstructor( document ) {\n\t\tsuper( document );\n\n\t\tthis.domEventType = [ 'focus', 'blur' ];\n\t\tthis.useCapture = true;\n\n\t\tdocument.on( 'focus', () => {\n\t\t\tdocument.isFocused = true;\n\n\t\t\t// Unfortunately native `selectionchange` event is fired asynchronously.\n\t\t\t// We need to wait until `SelectionObserver` handle the event and then render. Otherwise rendering will\n\t\t\t// overwrite new DOM selection with selection from the view.\n\t\t\t// See https://github.com/ckeditor/ckeditor5-engine/issues/795 for more details.\n\t\t\tthis._renderTimeoutId = setTimeout( () => document.render(), 0 );\n\t\t} );\n\n\t\tdocument.on( 'blur', ( evt, data ) => {\n\t\t\tconst selectedEditable = document.selection.editableElement;\n\n\t\t\tif ( selectedEditable === null || selectedEditable === data.target ) {\n\t\t\t\tdocument.isFocused = false;\n\n\t\t\t\t// Re-render the document to update view elements.\n\t\t\t\tdocument.render();\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * Identifier of the timeout currently used by focus listener to delay rendering execution.\n\t\t *\n\t\t * @private\n\t\t * @member {Number} #_renderTimeoutId\n\t\t */\n\t}\n\n\tonDomEvent( domEvent ) {\n\t\tthis.fire( domEvent.type, domEvent );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tif ( this._renderTimeoutId ) {\n\t\t\tclearTimeout( this._renderTimeoutId );\n\t\t}\n\n\t\tsuper.destroy();\n\t}\n}\n\n/**\n * Fired when one of the editables gets focus.\n *\n * Introduced by {@link module:engine/view/observer/focusobserver~FocusObserver}.\n *\n * Note that because {@link module:engine/view/observer/focusobserver~FocusObserver} is attached by the\n * {@link module:engine/view/document~Document}\n * this event is available by default.\n *\n * @see module:engine/view/observer/focusobserver~FocusObserver\n * @event module:engine/view/document~Document#event:focus\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n/**\n * Fired when one of the editables loses focus.\n *\n * Introduced by {@link module:engine/view/observer/focusobserver~FocusObserver}.\n *\n * Note that because {@link module:engine/view/observer/focusobserver~FocusObserver} is attached by the\n * {@link module:engine/view/document~Document}\n * this event is available by default.\n *\n * @see module:engine/view/observer/focusobserver~FocusObserver\n * @event module:engine/view/document~Document#event:blur\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/view/observer/focusobserver.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/observer/keyobserver\n */\n\nimport DomEventObserver from './domeventobserver';\nimport { getCode } from '@ckeditor/ckeditor5-utils/src/keyboard';\n\n/**\n * {@link module:engine/view/document~Document#event:keydown Key down} event observer.\n *\n * Note that this observer is attached by the {@link module:engine/view/document~Document} and is available by default.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nexport default class KeyObserver extends DomEventObserver {\n\tconstructor( document ) {\n\t\tsuper( document );\n\n\t\tthis.domEventType = 'keydown';\n\t}\n\n\tonDomEvent( domEvt ) {\n\t\tthis.fire( 'keydown', domEvt, {\n\t\t\tkeyCode: domEvt.keyCode,\n\n\t\t\taltKey: domEvt.altKey,\n\t\t\tctrlKey: domEvt.ctrlKey || domEvt.metaKey,\n\t\t\tshiftKey: domEvt.shiftKey,\n\n\t\t\tget keystroke() {\n\t\t\t\treturn getCode( this );\n\t\t\t}\n\t\t} );\n\t}\n}\n\n/**\n * Fired when a key has been pressed.\n *\n * Introduced by {@link module:engine/view/observer/keyobserver~KeyObserver}.\n *\n * Note that because {@link module:engine/view/observer/keyobserver~KeyObserver} is attached by the\n * {@link module:engine/view/document~Document}\n * this event is available by default.\n *\n * @see module:engine/view/observer/keyobserver~KeyObserver\n * @event module:engine/view/document~Document#event:keydown\n * @param {module:engine/view/observer/keyobserver~KeyEventData} keyEventData\n */\n\n/**\n * The value of the {@link module:engine/view/document~Document#event:keydown} event.\n *\n * @class module:engine/view/observer/keyobserver~KeyEventData\n * @extends module:engine/view/observer/domeventdata~DomEventData\n * @implements module:utils/keyboard~KeystrokeInfo\n */\n\n/**\n * Code of the whole keystroke. See {@link module:utils/keyboard~getCode}.\n *\n * @readonly\n * @member {Number} module:engine/view/observer/keyobserver~KeyEventData#keystroke\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/view/observer/keyobserver.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/observer/mouseobserver\n */\n\nimport DomEventObserver from './domeventobserver';\n\n/**\n * Mouse events observer.\n *\n * Note that this observer is not available by default. To make it available it needs to be added to\n * {@link module:engine/view/document~Document}\n * by {@link module:engine/view/document~Document#addObserver} method.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nexport default class MouseObserver extends DomEventObserver {\n\tconstructor( document ) {\n\t\tsuper( document );\n\n\t\tthis.domEventType = 'mousedown';\n\t}\n\n\tonDomEvent( domEvent ) {\n\t\tthis.fire( domEvent.type, domEvent );\n\t}\n}\n\n/**\n * Fired when mouse button is pressed down on one of the editables.\n *\n * Introduced by {@link module:engine/view/observer/mouseobserver~MouseObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:engine/view/observer/mouseobserver~MouseObserver}\n * needs to be added to {@link module:engine/view/document~Document} by a {@link module:engine/view/document~Document#addObserver} method.\n *\n * @see module:engine/view/observer/mouseobserver~MouseObserver\n * @event module:engine/view/document~Document#event:mousedown\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/view/observer/mouseobserver.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/observer/selectionobserver\n */\n\n/* global setInterval, clearInterval */\n\nimport Observer from './observer';\nimport MutationObserver from './mutationobserver';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\nimport debounce from '@ckeditor/ckeditor5-utils/src/lib/lodash/debounce';\n\n/**\n * Selection observer class observes selection changes in the document. If selection changes on the document this\n * observer checks if there are any mutations and if DOM selection is different than the\n * {@link module:engine/view/document~Document#selection view selection}. Selection observer fires\n * {@link module:engine/view/document~Document#event:selectionChange} event only if selection change was the only change in the document\n * and DOM selection is different then the view selection.\n *\n * Note that this observer is attached by the {@link module:engine/view/document~Document} and is available by default.\n *\n * @see module:engine/view/observer/mutationobserver~MutationObserver\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class SelectionObserver extends Observer {\n\tconstructor( document ) {\n\t\tsuper( document );\n\n\t\t/**\n\t\t * Instance of the mutation observer. Selection observer calls\n\t\t * {@link module:engine/view/observer/mutationobserver~MutationObserver#flush} to ensure that the mutations will be handled\n\t\t * before the {@link module:engine/view/document~Document#event:selectionChange} event is fired.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/observer/mutationobserver~MutationObserver}\n\t\t * module:engine/view/observer/selectionobserver~SelectionObserver#mutationObserver\n\t\t */\n\t\tthis.mutationObserver = document.getObserver( MutationObserver );\n\n\t\t/**\n\t\t * Reference to the {@link module:engine/view/document~Document} object.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/document~Document} module:engine/view/observer/selectionobserver~SelectionObserver#document\n\t\t */\n\t\tthis.document = document;\n\n\t\t/**\n\t\t * Reference to the view {@link module:engine/view/selection~Selection} object used to compare new selection with it.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/selection~Selection} module:engine/view/observer/selectionobserver~SelectionObserver#selection\n\t\t */\n\t\tthis.selection = document.selection;\n\n\t\t/* eslint-disable max-len */\n\t\t/**\n\t\t * Reference to the {@link module:engine/view/document~Document#domConverter}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/domconverter~DomConverter} module:engine/view/observer/selectionobserver~SelectionObserver#domConverter\n\t\t */\n\t\t/* eslint-enable max-len */\n\t\tthis.domConverter = document.domConverter;\n\n\t\t/**\n\t\t * Set of documents which have added \"selectionchange\" listener to avoid adding listener twice to the same\n\t\t * document.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakSet.<Document>} module:engine/view/observer/selectionobserver~SelectionObserver#_documents\n\t\t */\n\t\tthis._documents = new WeakSet();\n\n\t\t/**\n\t\t * Fires debounced event `selectionChangeDone`. It uses `lodash#debounce` method to delay function call.\n\t\t *\n\t\t * @private\n\t\t * @param {Object} data Selection change data.\n\t\t * @method #_fireSelectionChangeDoneDebounced\n\t\t */\n\t\tthis._fireSelectionChangeDoneDebounced = debounce( data => this.document.fire( 'selectionChangeDone', data ), 200 );\n\n\t\tthis._clearInfiniteLoopInterval = setInterval( () => this._clearInfiniteLoop(), 1000 );\n\n\t\t/**\n\t\t * Private property to check if the code does not enter infinite loop.\n\t\t *\n\t\t * @private\n\t\t * @member {Number} module:engine/view/observer/selectionobserver~SelectionObserver#_loopbackCounter\n\t\t */\n\t\tthis._loopbackCounter = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tobserve( domElement ) {\n\t\tconst domDocument = domElement.ownerDocument;\n\n\t\t// Add listener once per each document.\n\t\tif ( this._documents.has( domDocument ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.listenTo( domDocument, 'selectionchange', () => {\n\t\t\tthis._handleSelectionChange( domDocument );\n\t\t} );\n\n\t\tthis._documents.add( domDocument );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\tclearInterval( this._clearInfiniteLoopInterval );\n\t\tthis._fireSelectionChangeDoneDebounced.cancel();\n\t}\n\n\t/**\n\t * Selection change listener. {@link module:engine/view/observer/mutationobserver~MutationObserver#flush Flush} mutations, check if\n\t * selection changes and fires {@link module:engine/view/document~Document#event:selectionChange} event on every change\n\t * and {@link module:engine/view/document~Document#event:selectionChangeDone} when selection stop changing.\n\t *\n\t * @private\n\t * @param {Document} domDocument DOM document.\n\t */\n\t_handleSelectionChange( domDocument ) {\n\t\tif ( !this.isEnabled || !this.document.isFocused ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ensure the mutation event will be before selection event on all browsers.\n\t\tthis.mutationObserver.flush();\n\n\t\t// If there were mutations then the view will be re-rendered by the mutation observer and selection\n\t\t// will be updated, so selections will equal and event will not be fired, as expected.\n\t\tconst domSelection = domDocument.defaultView.getSelection();\n\t\tconst newViewSelection = this.domConverter.domSelectionToView( domSelection );\n\n\t\tif ( this.selection.isEqual( newViewSelection ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ensure we are not in the infinite loop (#400).\n\t\t// This counter is reset each second. 60 selection changes in 1 second is enough high number\n\t\t// to be very difficult (impossible) to achieve using just keyboard keys (during normal editor use).\n\t\tif ( ++this._loopbackCounter > 60 ) {\n\t\t\t/**\n\t\t\t * Selection change observer detected an infinite rendering loop.\n\t\t\t * Most probably you try to put the selection in the position which is not allowed\n\t\t\t * by the browser and browser fixes it automatically what causes `selectionchange` event on\n\t\t\t * which a loopback through a model tries to re-render the wrong selection and again.\n\t\t\t *\n\t\t\t * @error selectionchange-infinite-loop\n\t\t\t */\n\t\t\tlog.warn( 'selectionchange-infinite-loop: Selection change observer detected an infinite rendering loop.' );\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst data = {\n\t\t\toldSelection: this.selection,\n\t\t\tnewSelection: newViewSelection,\n\t\t\tdomSelection\n\t\t};\n\n\t\t// Should be fired only when selection change was the only document change.\n\t\tthis.document.fire( 'selectionChange', data );\n\n\t\t// Call` #_fireSelectionChangeDoneDebounced` every time when `selectionChange` event is fired.\n\t\t// This function is debounced what means that `selectionChangeDone` event will be fired only when\n\t\t// defined int the function time will elapse since the last time the function was called.\n\t\t// So `selectionChangeDone` will be fired when selection will stop changing.\n\t\tthis._fireSelectionChangeDoneDebounced( data );\n\t}\n\n\t/**\n\t * Clears `SelectionObserver` internal properties connected with preventing infinite loop.\n\t *\n\t * @protected\n\t */\n\t_clearInfiniteLoop() {\n\t\tthis._loopbackCounter = 0;\n\t}\n}\n\n/**\n * Fired when selection has changed. This event is fired only when the selection change was the only change that happened\n * in the document, and old selection is different then the new selection.\n *\n * Introduced by {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\n *\n * Note that because {@link module:engine/view/observer/selectionobserver~SelectionObserver} is attached by the\n * {@link module:engine/view/document~Document}\n * this event is available by default.\n *\n * @see module:engine/view/observer/selectionobserver~SelectionObserver\n * @event module:engine/view/document~Document#event:selectionChange\n * @param {Object} data\n * @param {module:engine/view/selection~Selection} data.oldSelection Old View selection which is\n * {@link module:engine/view/document~Document#selection}.\n * @param {module:engine/view/selection~Selection} data.newSelection New View selection which is converted DOM selection.\n * @param {Selection} data.domSelection Native DOM selection.\n */\n\n/**\n * Fired when selection stops changing.\n *\n * Introduced by {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\n *\n * Note that because {@link module:engine/view/observer/selectionobserver~SelectionObserver} is attached by the\n * {@link module:engine/view/document~Document}\n * this event is available by default.\n *\n * @see module:engine/view/observer/selectionobserver~SelectionObserver\n * @event module:engine/view/document~Document#event:selectionChangeDone\n * @param {Object} data\n * @param {module:engine/view/selection~Selection} data.oldSelection Old View selection which is\n * {@link module:engine/view/document~Document#selection}.\n * @param {module:engine/view/selection~Selection} data.newSelection New View selection which is converted DOM selection.\n * @param {Selection} data.domSelection Native DOM selection.\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/view/observer/selectionobserver.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/placeholder\n */\n\nimport extend from '@ckeditor/ckeditor5-utils/src/lib/lodash/extend';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport '../../theme/placeholder.scss';\n\nconst listener = {};\nextend( listener, EmitterMixin );\n\n// Each document stores information about its placeholder elements and check functions.\nconst documentPlaceholders = new WeakMap();\n\n/**\n * Attaches placeholder to provided element and updates it's visibility. To change placeholder simply call this method\n * once again with new parameters.\n *\n * @param {module:engine/view/element~Element} element Element to attach placeholder to.\n * @param {String} placeholderText Placeholder text to use.\n * @param {Function} [checkFunction] If provided it will be called before checking if placeholder should be displayed.\n * If function returns `false` placeholder will not be showed.\n */\nexport function attachPlaceholder( element, placeholderText, checkFunction ) {\n\tconst document = element.document;\n\n\tif ( !document ) {\n\t\t/**\n\t\t * Provided element is not placed in any {@link module:engine/view/document~Document}.\n\t\t *\n\t\t * @error view-placeholder-element-is-detached\n\t\t */\n\t\tthrow new CKEditorError( 'view-placeholder-element-is-detached: Provided element is not placed in document.' );\n\t}\n\n\t// Detach placeholder if was used before.\n\tdetachPlaceholder( element );\n\n\t// Single listener per document.\n\tif ( !documentPlaceholders.has( document ) ) {\n\t\tdocumentPlaceholders.set( document, new Map() );\n\t\tlistener.listenTo( document, 'render', () => updateAllPlaceholders( document ), { priority: 'high' } );\n\t}\n\n\t// Store text in element's data attribute.\n\t// This data attribute is used in CSS class to show the placeholder.\n\telement.setAttribute( 'data-placeholder', placeholderText );\n\n\t// Store information about placeholder.\n\tdocumentPlaceholders.get( document ).set( element, checkFunction );\n\n\t// Update right away too.\n\tupdateSinglePlaceholder( element, checkFunction );\n}\n\n/**\n * Removes placeholder functionality from given element.\n *\n * @param {module:engine/view/element~Element} element\n */\nexport function detachPlaceholder( element ) {\n\tconst document = element.document;\n\n\telement.removeClass( 'ck-placeholder' );\n\telement.removeAttribute( 'data-placeholder' );\n\n\tif ( documentPlaceholders.has( document ) ) {\n\t\tdocumentPlaceholders.get( document ).delete( element );\n\t}\n}\n\n// Updates all placeholders of given document.\n//\n// @private\n// @param {module:engine/view/document~Document} document\nfunction updateAllPlaceholders( document ) {\n\tconst placeholders = documentPlaceholders.get( document );\n\n\tfor ( const [ element, checkFunction ] of placeholders ) {\n\t\tupdateSinglePlaceholder( element, checkFunction );\n\t}\n}\n\n// Updates placeholder class of given element.\n//\n// @private\n// @param {module:engine/view/element~Element} element\n// @param {Function} checkFunction\nfunction updateSinglePlaceholder( element, checkFunction ) {\n\tconst document = element.document;\n\n\t// Element was removed from document.\n\tif ( !document ) {\n\t\treturn;\n\t}\n\n\tconst viewSelection = document.selection;\n\tconst anchor = viewSelection.anchor;\n\n\t// If checkFunction is provided and returns false - remove placeholder.\n\tif ( checkFunction && !checkFunction() ) {\n\t\telement.removeClass( 'ck-placeholder' );\n\n\t\treturn;\n\t}\n\n\t// If element is empty and editor is blurred.\n\tif ( !document.isFocused && !element.childCount ) {\n\t\telement.addClass( 'ck-placeholder' );\n\n\t\treturn;\n\t}\n\n\t// It there are no child elements and selection is not placed inside element.\n\tif ( !element.childCount && anchor && anchor.parent !== element ) {\n\t\telement.addClass( 'ck-placeholder' );\n\t} else {\n\t\telement.removeClass( 'ck-placeholder' );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/view/placeholder.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/renderer\n */\n\nimport ViewText from './text';\nimport ViewPosition from './position';\nimport Selection from './selection';\nimport { INLINE_FILLER, INLINE_FILLER_LENGTH, startsWithFiller, isInlineFiller, isBlockFiller } from './filler';\n\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport diff from '@ckeditor/ckeditor5-utils/src/diff';\nimport insertAt from '@ckeditor/ckeditor5-utils/src/dom/insertat';\nimport remove from '@ckeditor/ckeditor5-utils/src/dom/remove';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Renderer updates DOM structure and selection, to make them a reflection of the view structure and selection.\n *\n * View nodes which may need to be rendered needs to be {@link module:engine/view/renderer~Renderer#markToSync marked}.\n * Then, on {@link module:engine/view/renderer~Renderer#render render}, renderer compares the view nodes with the DOM nodes\n * in order to check which ones really need to be refreshed. Finally, it creates DOM nodes from these view nodes,\n * {@link module:engine/view/domconverter~DomConverter#bindElements binds} them and inserts into the DOM tree.\n *\n * Every time {@link module:engine/view/renderer~Renderer#render render} is called, renderer additionally checks if\n * {@link module:engine/view/renderer~Renderer#selection selection} needs update and updates it if so.\n *\n * Renderer uses {@link module:engine/view/domconverter~DomConverter} to transform and bind nodes.\n */\nexport default class Renderer {\n\t/**\n\t * Creates a renderer instance.\n\t *\n\t * @param {module:engine/view/domconverter~DomConverter} domConverter Converter instance.\n\t * @param {module:engine/view/selection~Selection} selection View selection.\n\t */\n\tconstructor( domConverter, selection ) {\n\t\t/**\n\t\t * Set of DOM Documents instances.\n\t\t *\n\t\t * @member {Set.<Document>}\n\t\t */\n\t\tthis.domDocuments = new Set();\n\n\t\t/**\n\t\t * Converter instance.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/domconverter~DomConverter}\n\t\t */\n\t\tthis.domConverter = domConverter;\n\n\t\t/**\n\t\t * Set of nodes which attributes changed and may need to be rendered.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Set.<module:engine/view/node~Node>}\n\t\t */\n\t\tthis.markedAttributes = new Set();\n\n\t\t/**\n\t\t * Set of elements which child lists changed and may need to be rendered.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Set.<module:engine/view/node~Node>}\n\t\t */\n\t\tthis.markedChildren = new Set();\n\n\t\t/**\n\t\t * Set of text nodes which text data changed and may need to be rendered.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Set.<module:engine/view/node~Node>}\n\t\t */\n\t\tthis.markedTexts = new Set();\n\n\t\t/**\n\t\t * View selection. Renderer updates DOM Selection to make it match this one.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/selection~Selection}\n\t\t */\n\t\tthis.selection = selection;\n\n\t\t/**\n\t\t * The text node in which the inline filler was rendered.\n\t\t *\n\t\t * @private\n\t\t * @member {Text}\n\t\t */\n\t\tthis._inlineFiller = null;\n\n\t\t/**\n\t\t * Indicates if view document is focused and selection can be rendered. Selection will not be rendered if\n\t\t * this is set to `false`.\n\t\t *\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis.isFocused = false;\n\n\t\t/**\n\t\t * DOM element containing fake selection.\n\t\t *\n\t\t * @private\n\t\t * @type {null|HTMLElement}\n\t\t */\n\t\tthis._fakeSelectionContainer = null;\n\t}\n\n\t/**\n\t * Mark node to be synchronized.\n\t *\n\t * Note that only view nodes which parents have corresponding DOM elements need to be marked to be synchronized.\n\t *\n\t * @see #markedAttributes\n\t * @see #markedChildren\n\t * @see #markedTexts\n\t *\n\t * @param {module:engine/view/document~ChangeType} type Type of the change.\n\t * @param {module:engine/view/node~Node} node Node to be marked.\n\t */\n\tmarkToSync( type, node ) {\n\t\tif ( type === 'text' ) {\n\t\t\tif ( this.domConverter.getCorrespondingDom( node.parent ) ) {\n\t\t\t\tthis.markedTexts.add( node );\n\t\t\t}\n\t\t} else {\n\t\t\t// If the node has no DOM element it is not rendered yet,\n\t\t\t// its children/attributes do not need to be marked to be sync.\n\t\t\tif ( !this.domConverter.getCorrespondingDom( node ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( type === 'attributes' ) {\n\t\t\t\tthis.markedAttributes.add( node );\n\t\t\t} else if ( type === 'children' ) {\n\t\t\t\tthis.markedChildren.add( node );\n\t\t\t} else {\n\t\t\t\t/**\n\t\t\t\t * Unknown type passed to Renderer.markToSync.\n\t\t\t\t *\n\t\t\t\t * @error renderer-unknown-type\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'view-renderer-unknown-type: Unknown type passed to Renderer.markToSync.' );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Render method checks {@link #markedAttributes},\n\t * {@link #markedChildren} and {@link #markedTexts} and updates all\n\t * nodes which need to be updated. Then it clears all three sets. Also, every time render is called it compares and\n\t * if needed updates the selection.\n\t *\n\t * Renderer tries not to break text composition (e.g. IME) and x-index of the selection,\n\t * so it does as little as it is needed to update the DOM.\n\t *\n\t * For attributes it adds new attributes to DOM elements, updates values and removes\n\t * attributes which do not exist in the view element.\n\t *\n\t * For text nodes it updates the text string if it is different. Note that if parent element is marked as an element\n\t * which changed child list, text node update will not be done, because it may not be possible do find a\n\t * {@link module:engine/view/domconverter~DomConverter#getCorrespondingDomText corresponding DOM text}. The change will be handled\n\t * in the parent element.\n\t *\n\t * For elements, which child lists have changed, it calculates a {@link module:utils/diff~diff} and adds or removes children which have\n\t * changed.\n\t *\n\t * Rendering also handles {@link module:engine/view/filler fillers}. Especially, it checks if the inline filler is needed\n\t * at selection position and adds or removes it. To prevent breaking text composition inline filler will not be\n\t * removed as long selection is in the text node which needed it at first.\n\t */\n\trender() {\n\t\tlet inlineFillerPosition;\n\n\t\t// There was inline filler rendered in the DOM but it's not\n\t\t// at the selection position any more, so we can remove it\n\t\t// (cause even if it's needed, it must be placed in another location).\n\t\tif ( this._inlineFiller && !this._isSelectionInInlineFiller() ) {\n\t\t\tthis._removeInlineFiller();\n\t\t}\n\n\t\t// If we've got the filler, let's try to guess its position in the view.\n\t\tif ( this._inlineFiller ) {\n\t\t\tinlineFillerPosition = this._getInlineFillerPosition();\n\t\t}\n\t\t// Othewise, if it's needed, create it at the selection position.\n\t\telse if ( this._needsInlineFillerAtSelection() ) {\n\t\t\tinlineFillerPosition = this.selection.getFirstPosition();\n\n\t\t\t// Do not use `markToSync` so it will be added even if the parent is already added.\n\t\t\tthis.markedChildren.add( inlineFillerPosition.parent );\n\t\t}\n\n\t\tfor ( const node of this.markedTexts ) {\n\t\t\tif ( !this.markedChildren.has( node.parent ) && this.domConverter.getCorrespondingDom( node.parent ) ) {\n\t\t\t\tthis._updateText( node, { inlineFillerPosition } );\n\t\t\t}\n\t\t}\n\n\t\tfor ( const element of this.markedAttributes ) {\n\t\t\tthis._updateAttrs( element );\n\t\t}\n\n\t\tfor ( const element of this.markedChildren ) {\n\t\t\tthis._updateChildren( element, { inlineFillerPosition } );\n\t\t}\n\n\t\tthis._updateSelection();\n\t\tthis._updateFocus();\n\n\t\tthis.markedTexts.clear();\n\t\tthis.markedAttributes.clear();\n\t\tthis.markedChildren.clear();\n\n\t\t// Remember the filler by its node.\n\t\tthis._inlineFiller = this._getInlineFillerNode( inlineFillerPosition );\n\t}\n\n\t/**\n\t * Gets the text node in which the inline filler is kept.\n\t *\n\t * @private\n\t * @param {module:engine/view/position~Position} fillerPosition The position on which the filler is needed in the view.\n\t * @returns {Text} The text node with the filler.\n\t */\n\t_getInlineFillerNode( fillerPosition ) {\n\t\tif ( !fillerPosition ) {\n\t\t\tthis._inlineFiller = null;\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst domPosition = this.domConverter.viewPositionToDom( fillerPosition );\n\n\t\t/* istanbul ignore if */\n\t\tif ( !domPosition || !startsWithFiller( domPosition.parent ) ) {\n\t\t\t/**\n\t\t\t * Cannot find filler node by its position.\n\t\t\t *\n\t\t\t * @error view-renderer-cannot-find-filler\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-renderer-cannot-find-filler: Cannot find filler node by its position.' );\n\t\t}\n\n\t\treturn domPosition.parent;\n\t}\n\n\t/**\n\t * Gets the position of the inline filler based on the current selection.\n\t * Here, we assume that we know that the filler is needed and\n\t * {@link #_isSelectionInInlineFiller is at the selection position}, and, since it's needed,\n\t * it's somewhere at the selection postion.\n\t *\n\t * Note: we cannot restore the filler position based on the filler's DOM text node, because\n\t * when this method is called (before rendering) the bindings will often be broken. View to DOM\n\t * bindings are only dependable after rendering.\n\t *\n\t * @private\n\t * @returns {module:engine/view/position~Position}\n\t */\n\t_getInlineFillerPosition() {\n\t\tconst firstPos = this.selection.getFirstPosition();\n\n\t\tif ( firstPos.parent.is( 'text' ) ) {\n\t\t\treturn ViewPosition.createBefore( this.selection.getFirstPosition().parent );\n\t\t} else {\n\t\t\treturn firstPos;\n\t\t}\n\t}\n\n\t/**\n\t * Returns `true` if the selection hasn't left the inline filler's text node.\n\t * If it is `true` it means that the filler had been added for a reason and the selection does not\n\t * left the filler's text node. E.g. the user can be in the middle of a composition so it should not be touched.\n\t *\n\t * @private\n\t * @returns {Boolean} True if the inline filler and selection are in the same place.\n\t */\n\t_isSelectionInInlineFiller() {\n\t\tif ( this.selection.rangeCount != 1 || !this.selection.isCollapsed ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Note, we can't check if selection's position equals position of the\n\t\t// this._inlineFiller node, because of #663. We may not be able to calculate\n\t\t// the filler's position in the view at this stage.\n\t\t// Instead, we check it the other way – whether selection is anchored in\n\t\t// that text node or next to it.\n\n\t\t// Possible options are:\n\t\t// \"FILLER{}\"\n\t\t// \"FILLERadded-text{}\"\n\t\tconst selectionPosition = this.selection.getFirstPosition();\n\t\tconst position = this.domConverter.viewPositionToDom( selectionPosition );\n\n\t\tif ( position && this.domConverter.isText( position.parent ) && startsWithFiller( position.parent ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Removes the inline filler.\n\t *\n\t * @private\n\t */\n\t_removeInlineFiller() {\n\t\tconst domFillerNode = this._inlineFiller;\n\n\t\t// Something weird happened and the stored node doesn't contain the filler's text.\n\t\tif ( !startsWithFiller( domFillerNode ) ) {\n\t\t\t/**\n\t\t\t * The inline filler node was lost. Most likely, something overwrote the filler text node\n\t\t\t * in the DOM.\n\t\t\t *\n\t\t\t * @error view-renderer-filler-was-lost\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-renderer-filler-was-lost: The inline filler node was lost.' );\n\t\t}\n\n\t\tif ( isInlineFiller( domFillerNode ) ) {\n\t\t\tdomFillerNode.parentNode.removeChild( domFillerNode );\n\t\t} else {\n\t\t\tdomFillerNode.data = domFillerNode.data.substr( INLINE_FILLER_LENGTH );\n\t\t}\n\n\t\tthis._inlineFiller = null;\n\t}\n\n\t/**\n\t * Checks if the inline {@link module:engine/view/filler filler} should be added.\n\t *\n\t * @private\n\t * @returns {Boolean} True if the inline fillers should be added.\n\t */\n\t_needsInlineFillerAtSelection() {\n\t\tif ( this.selection.rangeCount != 1 || !this.selection.isCollapsed ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst selectionPosition = this.selection.getFirstPosition();\n\t\tconst selectionParent = selectionPosition.parent;\n\t\tconst selectionOffset = selectionPosition.offset;\n\n\t\t// If there is no DOM root we do not care about fillers.\n\t\tif ( !this.domConverter.getCorrespondingDomElement( selectionParent.root ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( !( selectionParent.is( 'element' ) ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// We have block filler, we do not need inline one.\n\t\tif ( selectionOffset === selectionParent.getFillerOffset() ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst nodeBefore = selectionPosition.nodeBefore;\n\t\tconst nodeAfter = selectionPosition.nodeAfter;\n\n\t\tif ( nodeBefore instanceof ViewText || nodeAfter instanceof ViewText ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Checks if text needs to be updated and possibly updates it.\n\t *\n\t * @private\n\t * @param {module:engine/view/text~Text} viewText View text to update.\n\t * @param {Object} options\n\t * @param {module:engine/view/position~Position} options.inlineFillerPosition The position on which the inline\n\t * filler should be rendered.\n\t */\n\t_updateText( viewText, options ) {\n\t\tconst domText = this.domConverter.getCorrespondingDom( viewText );\n\t\tconst newDomText = this.domConverter.viewToDom( viewText, domText.ownerDocument );\n\n\t\tconst actualText = domText.data;\n\t\tlet expectedText = newDomText.data;\n\n\t\tconst filler = options.inlineFillerPosition;\n\n\t\tif ( filler && filler.parent == viewText.parent && filler.offset == viewText.index ) {\n\t\t\texpectedText = INLINE_FILLER + expectedText;\n\t\t}\n\n\t\tif ( actualText != expectedText ) {\n\t\t\tdomText.data = expectedText;\n\t\t}\n\t}\n\n\t/**\n\t * Checks if attributes list needs to be updated and possibly updates it.\n\t *\n\t * @private\n\t * @param {module:engine/view/element~Element} viewElement View element to update.\n\t */\n\t_updateAttrs( viewElement ) {\n\t\tconst domElement = this.domConverter.getCorrespondingDom( viewElement );\n\t\tconst domAttrKeys = Array.from( domElement.attributes ).map( attr => attr.name );\n\t\tconst viewAttrKeys = viewElement.getAttributeKeys();\n\n\t\t// Add or overwrite attributes.\n\t\tfor ( const key of viewAttrKeys ) {\n\t\t\tdomElement.setAttribute( key, viewElement.getAttribute( key ) );\n\t\t}\n\n\t\t// Remove from DOM attributes which do not exists in the view.\n\t\tfor ( const key of domAttrKeys ) {\n\t\t\tif ( !viewElement.hasAttribute( key ) ) {\n\t\t\t\tdomElement.removeAttribute( key );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if elements child list needs to be updated and possibly updates it.\n\t *\n\t * @private\n\t * @param {module:engine/view/element~Element} viewElement View element to update.\n\t * @param {Object} options\n\t * @param {module:engine/view/position~Position} options.inlineFillerPosition The position on which the inline\n\t * filler should be rendered.\n\t */\n\t_updateChildren( viewElement, options ) {\n\t\tconst domConverter = this.domConverter;\n\t\tconst domElement = domConverter.getCorrespondingDom( viewElement );\n\n\t\tif ( !domElement ) {\n\t\t\t// If there is no `domElement` it means that it was already removed from DOM.\n\t\t\t// There is no need to update it. It will be updated when re-inserted.\n\t\t\treturn;\n\t\t}\n\n\t\tconst domDocument = domElement.ownerDocument;\n\n\t\tconst filler = options.inlineFillerPosition;\n\n\t\tconst actualDomChildren = domElement.childNodes;\n\t\tconst expectedDomChildren = Array.from( domConverter.viewChildrenToDom( viewElement, domDocument, { bind: true } ) );\n\n\t\tif ( filler && filler.parent == viewElement ) {\n\t\t\tconst expectedNodeAfterFiller = expectedDomChildren[ filler.offset ];\n\n\t\t\tif ( this.domConverter.isText( expectedNodeAfterFiller ) ) {\n\t\t\t\texpectedNodeAfterFiller.data = INLINE_FILLER + expectedNodeAfterFiller.data;\n\t\t\t} else {\n\t\t\t\texpectedDomChildren.splice( filler.offset, 0, domDocument.createTextNode( INLINE_FILLER ) );\n\t\t\t}\n\t\t}\n\n\t\tconst actions = diff( actualDomChildren, expectedDomChildren, sameNodes );\n\n\t\tlet i = 0;\n\n\t\tfor ( const action of actions ) {\n\t\t\tif ( action === 'insert' ) {\n\t\t\t\tinsertAt( domElement, i, expectedDomChildren[ i ] );\n\t\t\t\ti++;\n\t\t\t} else if ( action === 'delete' ) {\n\t\t\t\t// Whenever element is removed from DOM, unbind it and all of its children.\n\t\t\t\tthis.domConverter.unbindDomElement( actualDomChildren[ i ] );\n\t\t\t\tremove( actualDomChildren[ i ] );\n\t\t\t} else { // 'equal'\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\n\t\tfunction sameNodes( actualDomChild, expectedDomChild ) {\n\t\t\t// Elements.\n\t\t\tif ( actualDomChild === expectedDomChild ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t// Texts.\n\t\t\telse if ( domConverter.isText( actualDomChild ) && domConverter.isText( expectedDomChild ) ) {\n\t\t\t\treturn actualDomChild.data === expectedDomChild.data;\n\t\t\t}\n\t\t\t// Block fillers.\n\t\t\telse if ( isBlockFiller( actualDomChild, domConverter.blockFiller ) &&\n\t\t\t\tisBlockFiller( expectedDomChild, domConverter.blockFiller ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Not matching types.\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Checks if selection needs to be updated and possibly updates it.\n\t *\n\t * @private\n\t */\n\t_updateSelection() {\n\t\t// If there is no selection - remove DOM and fake selections.\n\t\tif ( this.selection.rangeCount === 0 ) {\n\t\t\tthis._removeDomSelection();\n\t\t\tthis._removeFakeSelection();\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst domRoot = this.domConverter.getCorrespondingDomElement( this.selection.editableElement );\n\n\t\t// Do nothing if there is no focus, or there is no DOM element corresponding to selection's editable element.\n\t\tif ( !this.isFocused || !domRoot ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Render selection.\n\t\tif ( this.selection.isFake ) {\n\t\t\tthis._updateFakeSelection( domRoot );\n\t\t} else {\n\t\t\tthis._removeFakeSelection();\n\t\t\tthis._updateDomSelection( domRoot );\n\t\t}\n\t}\n\n\t/**\n\t * Updates fake selection.\n\t *\n\t * @private\n\t * @param {HTMLElement} domRoot Valid DOM root where fake selection container should be added.\n\t */\n\t_updateFakeSelection( domRoot ) {\n\t\tconst domDocument = domRoot.ownerDocument;\n\n\t\t// Create fake selection container if one does not exist.\n\t\tif ( !this._fakeSelectionContainer ) {\n\t\t\tthis._fakeSelectionContainer = domDocument.createElement( 'div' );\n\t\t\tthis._fakeSelectionContainer.style.position = 'fixed';\n\t\t\tthis._fakeSelectionContainer.style.top = 0;\n\t\t\tthis._fakeSelectionContainer.style.left = '-9999px';\n\t\t\tthis._fakeSelectionContainer.appendChild( domDocument.createTextNode( '\\u00A0' ) );\n\t\t}\n\n\t\t// Add fake container if not already added.\n\t\tif ( !this._fakeSelectionContainer.parentElement ) {\n\t\t\tdomRoot.appendChild( this._fakeSelectionContainer );\n\t\t}\n\n\t\t// Update contents.\n\t\tconst content = this.selection.fakeSelectionLabel || '\\u00A0';\n\t\tthis._fakeSelectionContainer.firstChild.data = content;\n\n\t\t// Update selection.\n\t\tconst domSelection = domDocument.getSelection();\n\t\tdomSelection.removeAllRanges();\n\n\t\tconst domRange = domDocument.createRange();\n\t\tdomRange.selectNodeContents( this._fakeSelectionContainer );\n\t\tdomSelection.addRange( domRange );\n\n\t\t// Bind fake selection container with current selection.\n\t\tthis.domConverter.bindFakeSelection( this._fakeSelectionContainer, this.selection );\n\t}\n\n\t/**\n\t * Updates DOM selection.\n\t *\n\t * @private\n\t * @param {HTMLElement} domRoot Valid DOM root where DOM selection should be rendered.\n\t */\n\t_updateDomSelection( domRoot ) {\n\t\tconst domSelection = domRoot.ownerDocument.defaultView.getSelection();\n\t\tconst oldViewSelection = domSelection && this.domConverter.domSelectionToView( domSelection );\n\n\t\tif ( oldViewSelection && this.selection.isEqual( oldViewSelection ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( oldViewSelection && areSimilarSelections( oldViewSelection, this.selection ) ) {\n\t\t\tconst data = {\n\t\t\t\toldSelection: oldViewSelection,\n\t\t\t\tcurrentSelection: this.selection\n\t\t\t};\n\n\t\t\tlog.warn(\n\t\t\t\t'renderer-skipped-selection-rendering: The selection was not rendered due to its similarity to the current one.',\n\t\t\t\tdata\n\t\t\t);\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Multi-range selection is not available in most browsers, and, at least in Chrome, trying to\n\t\t// set such selection, that is not continuous, throws an error. Because of that, we will just use anchor\n\t\t// and focus of view selection.\n\t\t// Since we are not supporting multi-range selection, we also do not need to check if proper editable is\n\t\t// selected. If there is any editable selected, it is okay (editable is taken from selection anchor).\n\t\tconst anchor = this.domConverter.viewPositionToDom( this.selection.anchor );\n\t\tconst focus = this.domConverter.viewPositionToDom( this.selection.focus );\n\n\t\tdomSelection.collapse( anchor.parent, anchor.offset );\n\t\tdomSelection.extend( focus.parent, focus.offset );\n\t}\n\n\t/**\n\t * Removes DOM selection.\n\t *\n\t * @private\n\t */\n\t_removeDomSelection() {\n\t\tfor ( const doc of this.domDocuments ) {\n\t\t\tconst domSelection = doc.getSelection();\n\n\t\t\tif ( domSelection.rangeCount ) {\n\t\t\t\tconst activeDomElement = doc.activeElement;\n\t\t\t\tconst viewElement = this.domConverter.getCorrespondingViewElement( activeDomElement );\n\n\t\t\t\tif ( activeDomElement && viewElement ) {\n\t\t\t\t\tdoc.getSelection().removeAllRanges();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Removes fake selection.\n\t *\n\t * @private\n\t */\n\t_removeFakeSelection() {\n\t\tconst container = this._fakeSelectionContainer;\n\n\t\tif ( container ) {\n\t\t\tcontainer.remove();\n\t\t}\n\t}\n\n\t/**\n\t * Checks if focus needs to be updated and possibly updates it.\n\t *\n\t * @private\n\t */\n\t_updateFocus() {\n\t\tif ( this.isFocused ) {\n\t\t\tconst editable = this.selection.editableElement;\n\n\t\t\tif ( editable ) {\n\t\t\t\tthis.domConverter.focus( editable );\n\t\t\t}\n\t\t}\n\t}\n}\n\nmix( Renderer, ObservableMixin );\n\n// Checks if two given selections are similar. Selections are considered similar if they are non-collapsed\n// and their trimmed (see {@link #_trimSelection}) representations are equal.\n//\n// @private\n// @param {module:engine/view/selection~Selection} selection1\n// @param {module:engine/view/selection~Selection} selection2\n// @returns {Boolean}\nfunction areSimilarSelections( selection1, selection2 ) {\n\treturn !selection1.isCollapsed && trimSelection( selection1 ).isEqual( trimSelection( selection2 ) );\n}\n\n// Creates a copy of a given selection with all of its ranges\n// trimmed (see {@link module:engine/view/range~Range#getTrimmed getTrimmed}).\n//\n// @private\n// @param {module:engine/view/selection~Selection} selection\n// @returns {module:engine/view/selection~Selection} Selection copy with all ranges trimmed.\nfunction trimSelection( selection ) {\n\tconst newSelection = Selection.createFromSelection( selection );\n\tconst ranges = newSelection.getRanges();\n\n\tconst trimmedRanges = [];\n\n\tfor ( const range of ranges ) {\n\t\ttrimmedRanges.push( range.getTrimmed() );\n\t}\n\n\tnewSelection.setRanges( trimmedRanges, newSelection.isBackward );\n\n\treturn newSelection;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/view/renderer.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/textproxy\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * TextProxy is a wrapper for substring of {@link module:engine/view/text~Text}. Instance of this class is created by\n * {@link module:engine/view/treewalker~TreeWalker} when only a part of {@link module:engine/view/text~Text} needs to be returned.\n *\n * `TextProxy` has an API similar to {@link module:engine/view/text~Text Text} and allows to do most of the common tasks performed\n * on view nodes.\n *\n * **Note:** Some `TextProxy` instances may represent whole text node, not just a part of it.\n * See {@link module:engine/view/textproxy~TextProxy#isPartial}.\n *\n * **Note:** `TextProxy` is a readonly interface.\n *\n * **Note:** `TextProxy` instances are created on the fly basing on the current state of parent {@link module:engine/view/text~Text}.\n * Because of this it is highly unrecommended to store references to `TextProxy instances because they might get\n * invalidated due to operations on Document. Also TextProxy is not a {@link module:engine/view/node~Node} so it can not be\n * inserted as a child of {@link module:engine/view/element~Element}.\n *\n * `TextProxy` instances are created by {@link module:engine/view/treewalker~TreeWalker view tree walker}. You should not need to create\n * an instance of this class by your own.\n */\nexport default class TextProxy {\n\t/**\n\t * Creates a text proxy.\n\t *\n\t * @protected\n\t * @param {module:engine/view/text~Text} textNode Text node which part is represented by this text proxy.\n\t * @param {Number} offsetInText Offset in {@link module:engine/view/textproxy~TextProxy#textNode text node}\n\t * from which the text proxy starts.\n\t * @param {Number} length Text proxy length, that is how many text node's characters, starting from `offsetInText` it represents.\n\t * @constructor\n\t */\n\tconstructor( textNode, offsetInText, length ) {\n\t\t/**\n\t\t * Reference to the {@link module:engine/view/text~Text} element which TextProxy is a substring.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/text~Text} module:engine/view/textproxy~TextProxy#textNode\n\t\t */\n\t\tthis.textNode = textNode;\n\n\t\tif ( offsetInText < 0 || offsetInText > textNode.data.length ) {\n\t\t\t/**\n\t\t\t * Given offsetInText value is incorrect.\n\t\t\t *\n\t\t\t * @error view-textproxy-wrong-offsetintext\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-textproxy-wrong-offsetintext: Given offsetInText value is incorrect.' );\n\t\t}\n\n\t\tif ( length < 0 || offsetInText + length > textNode.data.length ) {\n\t\t\t/**\n\t\t\t * Given length value is incorrect.\n\t\t\t *\n\t\t\t * @error view-textproxy-wrong-length\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-textproxy-wrong-length: Given length value is incorrect.' );\n\t\t}\n\n\t\t/**\n\t\t * Text data represented by this text proxy.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String} module:engine/view/textproxy~TextProxy#data\n\t\t */\n\t\tthis.data = textNode.data.substring( offsetInText, offsetInText + length );\n\n\t\t/**\n\t\t * Offset in the `textNode` where this `TextProxy` instance starts.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} module:engine/view/textproxy~TextProxy#offsetInText\n\t\t */\n\t\tthis.offsetInText = offsetInText;\n\t}\n\n\t/**\n\t * Flag indicating whether `TextProxy` instance covers only part of the original {@link module:engine/view/text~Text text node}\n\t * (`true`) or the whole text node (`false`).\n\t *\n\t * This is `false` when text proxy starts at the very beginning of {@link module:engine/view/textproxy~TextProxy#textNode textNode}\n\t * ({@link module:engine/view/textproxy~TextProxy#offsetInText offsetInText} equals `0`) and text proxy sizes is equal to\n\t * text node size.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isPartial() {\n\t\treturn this.data.length !== this.textNode.data.length;\n\t}\n\n\t/**\n\t * Parent of this text proxy, which is same as parent of text node represented by this text proxy.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|null}\n\t */\n\tget parent() {\n\t\treturn this.textNode.parent;\n\t}\n\n\t/**\n\t * Root of this text proxy, which is same as root of text node represented by this text proxy.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\treturn this.textNode.root;\n\t}\n\n\t/**\n\t * {@link module:engine/view/document~Document View document} that owns this text proxy, or `null` if the text proxy is inside\n\t * {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/document~Document|null}\n\t */\n\tget document() {\n\t\treturn this.textNode.document;\n\t}\n\n\t/**\n\t * Checks whether given view tree object is of given type.\n\t *\n\t * Read more in {@link module:engine/view/node~Node#is}.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type == 'textProxy';\n\t}\n\n\t/**\n\t * Returns ancestors array of this text proxy.\n\t *\n\t * @param {Object} options Options object.\n\t * @param {Boolean} [options.includeNode=false] When set to `true` {#textNode} will be also included in parent's array.\n\t * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from text proxy parent to\n\t * root element, otherwise root element will be the first item in the array.\n\t * @returns {Array} Array with ancestors.\n\t */\n\tgetAncestors( options = { includeNode: false, parentFirst: false } ) {\n\t\tconst ancestors = [];\n\t\tlet parent = options.includeNode ? this.textNode : this.parent;\n\n\t\twhile ( parent !== null ) {\n\t\t\tancestors[ options.parentFirst ? 'push' : 'unshift' ]( parent );\n\t\t\tparent = parent.parent;\n\t\t}\n\n\t\treturn ancestors;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-engine/src/view/textproxy.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module enter/enter\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport EnterCommand from './entercommand';\nimport EnterObserver from './enterobserver';\n\n/**\n * The Enter feature. Handles the <kbd>Enter</kbd> and <kbd>Shift + Enter</kbd> keys in the editor.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Enter extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'enter/enter';\n\t}\n\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst editingView = editor.editing.view;\n\n\t\teditingView.addObserver( EnterObserver );\n\n\t\teditor.commands.set( 'enter', new EnterCommand( editor ) );\n\n\t\t// TODO We may use the keystroke handler for that.\n\t\tthis.listenTo( editingView, 'enter', ( evt, data ) => {\n\t\t\teditor.execute( 'enter' );\n\t\t\tdata.preventDefault();\n\t\t}, { priority: 'low' } );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-enter/src/enter.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module enter/entercommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command/command';\nimport Position from '@ckeditor/ckeditor5-engine/src/model/position';\n\n/**\n * Enter command. It is used by the {@link module:enter/enter~Enter Enter feature} to handle the <kbd>Enter</kbd> key.\n *\n * @extends modue:core/command/command~Command\n */\nexport default class EnterCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\t_doExecute() {\n\t\tconst doc = this.editor.document;\n\t\tconst batch = doc.batch();\n\n\t\tdoc.enqueueChanges( () => {\n\t\t\tenterBlock( this.editor.data, batch, doc.selection, doc.schema );\n\n\t\t\tthis.fire( 'afterExecute', { batch } );\n\t\t} );\n\t}\n}\n\n// Creates a new block in the way that the <kbd>Enter</kbd> key is expected to work.\n//\n// @param {engine.controller.DataController} dataController\n// @param {module:engine/model/batch~Batch} batch A batch to which the deltas will be added.\n// @param {module:engine/model/selection~Selection} selection Selection on which the action should be performed.\n// @param {module:engine/model/schema~Schema} schema\nfunction enterBlock( dataController, batch, selection, schema ) {\n\tconst isSelectionEmpty = selection.isCollapsed;\n\tconst range = selection.getFirstRange();\n\tconst startElement = range.start.parent;\n\tconst endElement = range.end.parent;\n\n\t// Do nothing if selection starts or ends inside `limit` elements.\n\tif ( schema.limits.has( startElement.name ) || schema.limits.has( endElement.name ) ) {\n\t\treturn;\n\t}\n\n\t// Don't touch the root.\n\tif ( startElement.root == startElement ) {\n\t\tif ( !isSelectionEmpty ) {\n\t\t\tdataController.deleteContent( selection, batch );\n\t\t}\n\n\t\treturn;\n\t}\n\n\tif ( isSelectionEmpty ) {\n\t\tsplitBlock( batch, selection, range.start );\n\t} else {\n\t\tconst shouldMerge = range.start.isAtStart && range.end.isAtEnd;\n\t\tconst isContainedWithinOneElement = ( startElement == endElement );\n\n\t\tdataController.deleteContent( selection, batch, { merge: shouldMerge } );\n\n\t\tif ( !shouldMerge ) {\n\t\t\t// Partially selected elements.\n\t\t\t//\n\t\t\t// <h>x[xx]x</h>\t\t-> <h>x^x</h>\t\t\t-> <h>x</h><h>^x</h>\n\t\t\tif ( isContainedWithinOneElement ) {\n\t\t\t\tsplitBlock( batch, selection, selection.focus );\n\t\t\t}\n\t\t\t// Selection over multiple elements.\n\t\t\t//\n\t\t\t// <h>x[x</h><p>y]y<p>\t-> <h>x^</h><p>y</p>\t-> <h>x</h><p>^y</p>\n\t\t\telse {\n\t\t\t\tselection.collapse( endElement );\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction splitBlock( batch, selection, splitPos ) {\n\tif ( splitPos.isAtEnd ) {\n\t\t// If the split is at the end of element, instead of splitting, just create a clone of position's parent\n\t\t// element and insert it after cloned element. The result is the same but less operations are taken\n\t\t// and it's more semantically correct (when it comes to operational transformation).\n\t\tconst oldElement = splitPos.parent;\n\t\tconst newElement = new oldElement.constructor( oldElement.name, oldElement.getAttributes() );\n\n\t\tbatch.insert( Position.createAfter( splitPos.parent ), newElement );\n\t} else {\n\t\tbatch.split( splitPos );\n\t}\n\n\tselection.collapse( splitPos.parent.nextSibling );\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-enter/src/entercommand.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module enter/enterobserver\n */\n\nimport Observer from '@ckeditor/ckeditor5-engine/src/view/observer/observer';\nimport DomEventData from '@ckeditor/ckeditor5-engine/src/view/observer/domeventdata';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\n\n/**\n * Enter observer introduces the {@link module:engine/view/document~Document#event:enter} event.\n *\n * @extends module:engine/view/observer~Observer\n */\nexport default class EnterObserver extends Observer {\n\tconstructor( document ) {\n\t\tsuper( document );\n\n\t\tdocument.on( 'keydown', ( evt, data ) => {\n\t\t\tif ( this.isEnabled && data.keyCode == keyCodes.enter ) {\n\t\t\t\tdocument.fire( 'enter', new DomEventData( document, data.domEvent ) );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tobserve() {}\n}\n\n/**\n * Event fired when the user presses the <kbd>Enter</kbd> key.\n *\n * Note: This event is fired by the {@link module:enter/enterobserver~EnterObserver observer}\n * (usually registered by the {@link module:enter/enter~Enter Enter feature}).\n *\n * @event module:engine/view/document~Document#event:enter\n * @param {module:engine/view/observer/domeventdata~DomEventData} data\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-enter/src/enterobserver.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module heading/heading\n */\n\nimport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\nimport HeadingEngine from './headingengine';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Model from '@ckeditor/ckeditor5-ui/src/model';\nimport createListDropdown from '@ckeditor/ckeditor5-ui/src/dropdown/list/createlistdropdown';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport Template from '@ckeditor/ckeditor5-ui/src/template';\n\nimport '../theme/theme.scss';\n\n/**\n * The headings feature. It introduces the `headings` drop-down list and the `heading` command which allow\n * to convert paragraphs into headings.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Heading extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ Paragraph, HeadingEngine ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'heading/heading';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst dropdownItems = new Collection();\n\t\tconst options = this._getLocalizedOptions();\n\t\tconst commands = [];\n\t\tconst t = editor.t;\n\t\tconst defaultTitle = t( 'Choose heading' );\n\t\tconst dropdownTooltip = t( 'Heading' );\n\n\t\tfor ( const option of options ) {\n\t\t\tconst command = editor.commands.get( option.modelElement );\n\t\t\tconst itemModel = new Model( {\n\t\t\t\tcommandName: option.modelElement,\n\t\t\t\tlabel: option.title,\n\t\t\t\tclass: option.class\n\t\t\t} );\n\n\t\t\titemModel.bind( 'isActive' ).to( command, 'value' );\n\n\t\t\t// Add the option to the collection.\n\t\t\tdropdownItems.add( itemModel );\n\n\t\t\tcommands.push( command );\n\t\t}\n\n\t\t// Create dropdown model.\n\t\tconst dropdownModel = new Model( {\n\t\t\twithText: true,\n\t\t\titems: dropdownItems,\n\t\t\ttooltip: dropdownTooltip\n\t\t} );\n\n\t\tdropdownModel.bind( 'isEnabled' ).to(\n\t\t\t// Bind to #isEnabled of each command...\n\t\t\t...getCommandsBindingTargets( commands, 'isEnabled' ),\n\t\t\t// ...and set it true if any command #isEnabled is true.\n\t\t\t( ...areEnabled ) => areEnabled.some( isEnabled => isEnabled )\n\t\t);\n\n\t\tdropdownModel.bind( 'label' ).to(\n\t\t\t// Bind to #value of each command...\n\t\t\t...getCommandsBindingTargets( commands, 'value' ),\n\t\t\t// ...and chose the title of the first one which #value is true.\n\t\t\t( ...areActive ) => {\n\t\t\t\tconst index = areActive.findIndex( value => value );\n\n\t\t\t\t// If none of the commands is active, display default title.\n\t\t\t\treturn options[ index ] ? options[ index ].title : defaultTitle;\n\t\t\t}\n\t\t);\n\n\t\t// Register UI component.\n\t\teditor.ui.componentFactory.add( 'headings', locale => {\n\t\t\tconst dropdown = createListDropdown( dropdownModel, locale );\n\n\t\t\tTemplate.extend( dropdown.template, {\n\t\t\t\tattributes: {\n\t\t\t\t\tclass: [\n\t\t\t\t\t\t'ck-heading-dropdown'\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Execute command when an item from the dropdown is selected.\n\t\t\tthis.listenTo( dropdown, 'execute', evt => {\n\t\t\t\teditor.execute( evt.source.commandName );\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\treturn dropdown;\n\t\t} );\n\t}\n\n\t/**\n\t * Returns heading options as defined in `config.heading.options` but processed to consider\n\t * editor localization, i.e. to display {@link module:heading/headingcommand~HeadingOption}\n\t * in the correct language.\n\t *\n\t * Note: The reason behind this method is that there's no way to use {@link module:utils/locale~Locale#t}\n\t * when the user config is defined because the editor does not exist yet.\n\t *\n\t * @private\n\t * @returns {Array.<module:heading/headingcommand~HeadingOption>}.\n\t */\n\t_getLocalizedOptions() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\t\tconst localizedTitles = {\n\t\t\tParagraph: t( 'Paragraph' ),\n\t\t\t'Heading 1': t( 'Heading 1' ),\n\t\t\t'Heading 2': t( 'Heading 2' ),\n\t\t\t'Heading 3': t( 'Heading 3' )\n\t\t};\n\n\t\treturn editor.config.get( 'heading.options' ).map( option => {\n\t\t\tconst title = localizedTitles[ option.title ];\n\n\t\t\tif ( title && title != option.title ) {\n\t\t\t\t// Clone the option to avoid altering the original `config.heading.options`.\n\t\t\t\toption = Object.assign( {}, option, { title } );\n\t\t\t}\n\n\t\t\treturn option;\n\t\t} );\n\t}\n}\n\n// Returns an array of binding components for\n// {@link module:utils/observablemixin~Observable#bind} from a set of iterable\n// commands.\n//\n// @private\n// @param {Iterable.<module:core/command/command~Command>} commands\n// @param {String} attribute\n// @returns {Array.<String>}\nfunction getCommandsBindingTargets( commands, attribute ) {\n\treturn Array.prototype.concat( ...commands.map( c => [ c, attribute ] ) );\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-heading/src/heading.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module heading/headingcommand\n */\n\nimport Range from '@ckeditor/ckeditor5-engine/src/model/range';\nimport Command from '@ckeditor/ckeditor5-core/src/command/command';\nimport Selection from '@ckeditor/ckeditor5-engine/src/model/selection';\nimport Position from '@ckeditor/ckeditor5-engine/src/model/position';\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n\n/**\n * The heading command. It is used by the {@link module:heading/heading~Heading heading feature} to apply headings.\n *\n * @extends module:core/command/command~Command\n */\nexport default class HeadingCommand extends Command {\n\t/**\n\t * Creates an instance of the command.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor Editor instance.\n\t * @param {module:heading/headingcommand~HeadingOption} option An option to be used by the command instance.\n\t */\n\tconstructor( editor, option ) {\n\t\tsuper( editor );\n\n\t\tObject.assign( this, option );\n\n\t\t/**\n\t\t * Value of the command, indicating whether it is applied in the context\n\t\t * of current {@link module:engine/model/document~Document#selection selection}.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis.set( 'value', false );\n\n\t\t// Update current value each time changes are done on document.\n\t\tthis.listenTo( editor.document, 'changesDone', () => {\n\t\t\tthis.refreshValue();\n\t\t\tthis.refreshState();\n\t\t} );\n\n\t\t/**\n\t\t * Unique identifier of the command, also element's name in the model.\n\t\t * See {@link module:heading/headingcommand~HeadingOption}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String} #modelElement\n\t\t */\n\n\t\t/**\n\t\t * Element this command creates in the view.\n\t\t * See {@link module:heading/headingcommand~HeadingOption}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String} #viewElement\n\t\t */\n\n\t\t/**\n\t\t * User-readable title of the command.\n\t\t * See {@link module:heading/headingcommand~HeadingOption}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String} #title\n\t\t */\n\t}\n\n\t/**\n\t * Executes command.\n\t *\n\t * @protected\n\t * @param {Object} [options] Options for executed command.\n\t * @param {module:engine/model/batch~Batch} [options.batch] Batch to collect all the change steps.\n\t * New batch will be created if this option is not set.\n\t */\n\t_doExecute( options = {} ) {\n\t\tconst editor = this.editor;\n\t\tconst document = editor.document;\n\n\t\t// If current option is same as new option - toggle already applied option back to default one.\n\t\tconst shouldRemove = this.value;\n\n\t\tdocument.enqueueChanges( () => {\n\t\t\tconst batch = options.batch || document.batch();\n\n\t\t\tfor ( const block of document.selection.getSelectedBlocks() ) {\n\t\t\t\t// When removing applied option.\n\t\t\t\tif ( shouldRemove ) {\n\t\t\t\t\tif ( block.is( this.modelElement ) ) {\n\t\t\t\t\t\t// Apply paragraph to the selection withing that particular block only instead\n\t\t\t\t\t\t// of working on the entire document selection.\n\t\t\t\t\t\tconst selection = new Selection();\n\t\t\t\t\t\tselection.addRange( Range.createIn( block ) );\n\n\t\t\t\t\t\t// Share the batch with the paragraph command.\n\t\t\t\t\t\teditor.execute( 'paragraph', { selection, batch } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// When applying new option.\n\t\t\t\telse if ( !block.is( this.modelElement ) ) {\n\t\t\t\t\tbatch.rename( block, this.modelElement );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Updates command's {@link #value value} based on current selection.\n\t */\n\trefreshValue() {\n\t\tconst block = first( this.editor.document.selection.getSelectedBlocks() );\n\n\t\tthis.value = !!block && block.is( this.modelElement );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_checkEnabled() {\n\t\tconst block = first( this.editor.document.selection.getSelectedBlocks() );\n\n\t\treturn !!block && this.editor.document.schema.check( {\n\t\t\tname: this.modelElement,\n\t\t\tinside: Position.createBefore( block )\n\t\t} );\n\t}\n}\n\n/**\n * Heading option descriptor.\n *\n * @typedef {Object} module:heading/headingcommand~HeadingOption\n * @property {String} modelElement Element's name in the model.\n * @property {String} viewElement The name of the view element that will be used to represent the model element in the view.\n * @property {String} title The user-readable title of the option.\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-heading/src/headingcommand.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module heading/headingengine\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport buildModelConverter from '@ckeditor/ckeditor5-engine/src/conversion/buildmodelconverter';\nimport buildViewConverter from '@ckeditor/ckeditor5-engine/src/conversion/buildviewconverter';\nimport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\nimport HeadingCommand from './headingcommand';\n\nconst defaultModelElement = 'paragraph';\n\n/**\n * The headings engine feature. It handles switching between block formats &ndash; headings and paragraph.\n * This class represents the engine part of the heading feature. See also {@link module:heading/heading~Heading}.\n *\n * @extends modules:core/plugin~Plugin\n */\nexport default class HeadingEngine extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t// TODO: This needs proper documentation, i.e. why paragraph entry does not need\n\t\t// more properties (https://github.com/ckeditor/ckeditor5/issues/403).\n\t\t// TODO: Document CSS classes as well.\n\t\teditor.config.define( 'heading', {\n\t\t\toptions: [\n\t\t\t\t{ modelElement: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },\n\t\t\t\t{ modelElement: 'heading1', viewElement: 'h2', title: 'Heading 1', class: 'ck-heading_heading1' },\n\t\t\t\t{ modelElement: 'heading2', viewElement: 'h3', title: 'Heading 2', class: 'ck-heading_heading2' },\n\t\t\t\t{ modelElement: 'heading3', viewElement: 'h4', title: 'Heading 3', class: 'ck-heading_heading3' }\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ Paragraph ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst data = editor.data;\n\t\tconst editing = editor.editing;\n\t\tconst options = editor.config.get( 'heading.options' );\n\n\t\tfor ( const option of options ) {\n\t\t\t// Skip paragraph - it is defined in required Paragraph feature.\n\t\t\tif ( option.modelElement !== defaultModelElement ) {\n\t\t\t\t// Schema.\n\t\t\t\teditor.document.schema.registerItem( option.modelElement, '$block' );\n\n\t\t\t\t// Build converter from model to view for data and editing pipelines.\n\t\t\t\tbuildModelConverter().for( data.modelToView, editing.modelToView )\n\t\t\t\t\t.fromElement( option.modelElement )\n\t\t\t\t\t.toElement( option.viewElement );\n\n\t\t\t\t// Build converter from view to model for data pipeline.\n\t\t\t\tbuildViewConverter().for( data.viewToModel )\n\t\t\t\t\t.fromElement( option.viewElement )\n\t\t\t\t\t.toElement( option.modelElement );\n\n\t\t\t\t// Register the heading command for this option.\n\t\t\t\teditor.commands.set( option.modelElement, new HeadingCommand( editor, option ) );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tafterInit() {\n\t\t// If the enter command is added to the editor, alter its behavior.\n\t\t// Enter at the end of a heading element should create a paragraph.\n\t\tconst editor = this.editor;\n\t\tconst enterCommand = editor.commands.get( 'enter' );\n\t\tconst options = editor.config.get( 'heading.options' );\n\n\t\tif ( enterCommand ) {\n\t\t\tthis.listenTo( enterCommand, 'afterExecute', ( evt, data ) => {\n\t\t\t\tconst positionParent = editor.document.selection.getFirstPosition().parent;\n\t\t\t\tconst batch = data.batch;\n\t\t\t\tconst isHeading = options.some( option => positionParent.is( option.modelElement ) );\n\n\t\t\t\tif ( isHeading && !positionParent.is( defaultModelElement ) && positionParent.childCount === 0 ) {\n\t\t\t\t\tbatch.rename( positionParent, defaultModelElement );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-heading/src/headingengine.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module image/image\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ImageEngine from './image/imageengine';\nimport Widget from '@ckeditor/ckeditor5-widget/src/widget';\nimport ImageTextAlternative from './imagetextalternative';\nimport { isImageWidget } from './image/utils';\n\nimport '../theme/theme.scss';\n\n/**\n * The image plugin.\n *\n * Uses {@link module:image/image/imageengine~ImageEngine}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Image extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ImageEngine, Widget, ImageTextAlternative ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'image/image';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst contextualToolbar = editor.plugins.get( 'ui/contextualtoolbar' );\n\n\t\t// If `ContextualToolbar` plugin is loaded, it should be disabled for images\n\t\t// which have their own toolbar to avoid duplication.\n\t\t// https://github.com/ckeditor/ckeditor5-image/issues/110\n\t\tif ( contextualToolbar ) {\n\t\t\tthis.listenTo( contextualToolbar, 'beforeShow', ( evt, stop ) => {\n\t\t\t\tconst selectedElement = editor.editing.view.selection.getSelectedElement();\n\n\t\t\t\tif ( selectedElement && isImageWidget( selectedElement ) ) {\n\t\t\t\t\tstop();\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-image/src/image.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module image/image/converters\n */\n\nimport ModelPosition from '@ckeditor/ckeditor5-engine/src/model/position';\nimport ModelDocumentFragment from '@ckeditor/ckeditor5-engine/src/model/documentfragment';\nimport modelWriter from '@ckeditor/ckeditor5-engine/src/model/writer';\n\n/**\n * Returns function that converts image view representation:\n *\n *\t\t<figure class=\"image\"><img src=\"...\" alt=\"...\"></img></figure>\n *\n * to model representation:\n *\n *\t\t<image src=\"...\" alt=\"...\"></image>\n *\n * The entire contents of `<figure>` except the first `<img>` is being converted as children\n * of the `<image>` model element.\n *\n * @returns {Function}\n */\nexport function viewFigureToModel() {\n\treturn ( evt, data, consumable, conversionApi ) => {\n\t\t// Do not convert if this is not an \"image figure\".\n\t\tif ( !consumable.test( data.input, { name: true, class: 'image' } ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not convert if image cannot be placed in model at this context.\n\t\tif ( !conversionApi.schema.check( { name: 'image', inside: data.context, attributes: 'src' } ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Find an image element inside the figure element.\n\t\tconst viewImage = Array.from( data.input.getChildren() ).find( viewChild => viewChild.is( 'img' ) );\n\n\t\t// Do not convert if image element is absent, is missing src attribute or was already converted.\n\t\tif ( !viewImage || !viewImage.hasAttribute( 'src' ) || !consumable.test( viewImage, { name: true } ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Convert view image to model image.\n\t\tconst modelImage = conversionApi.convertItem( viewImage, consumable, data );\n\n\t\t// Convert rest of figure element's children, but in the context of model image, because those converted\n\t\t// children will be added as model image children.\n\t\tdata.context.push( modelImage );\n\n\t\tconst modelChildren = conversionApi.convertChildren( data.input, consumable, data );\n\n\t\tdata.context.pop();\n\n\t\t// Add converted children to model image.\n\t\tmodelWriter.insert( ModelPosition.createAt( modelImage ), modelChildren );\n\n\t\t// Set model image as conversion result.\n\t\tdata.output = modelImage;\n\t};\n}\n\n/**\n * Creates image attribute converter for provided model conversion dispatchers.\n *\n * @param {Array.<module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher>} dispatchers\n * @param {String} attributeName\n */\nexport function createImageAttributeConverter( dispatchers, attributeName ) {\n\tfor ( const dispatcher of dispatchers ) {\n\t\tdispatcher.on( `addAttribute:${ attributeName }:image`, modelToViewAttributeConverter );\n\t\tdispatcher.on( `changeAttribute:${ attributeName }:image`, modelToViewAttributeConverter );\n\t\tdispatcher.on( `removeAttribute:${ attributeName }:image`, modelToViewAttributeConverter );\n\t}\n}\n\n// Model to view image converter converting given attribute, and adding it to `img` element nested inside `figure` element.\n//\n// @private\nfunction modelToViewAttributeConverter( evt, data, consumable, conversionApi ) {\n\tconst parts = evt.name.split( ':' );\n\tconst consumableType = parts[ 0 ] + ':' + parts[ 1 ];\n\n\tif ( !consumable.consume( data.item, consumableType ) ) {\n\t\treturn;\n\t}\n\n\tconst figure = conversionApi.mapper.toViewElement( data.item );\n\tconst img = figure.getChild( 0 );\n\n\tif ( parts[ 0 ] == 'removeAttribute' ) {\n\t\timg.removeAttribute( data.attributeKey );\n\t} else {\n\t\timg.setAttribute( data.attributeKey, data.attributeNewValue );\n\t}\n}\n\n// Holds all images that were converted for autohoisting.\nconst autohoistedImages = new WeakSet();\n\n/**\n * Converter which converts `<img>` {@link module:engine/view/element~Element view elements} that can be hoisted.\n *\n * If an `<img>` view element has not been converted, this converter checks if that element could be converted in any\n * context \"above\". If it could, the converter converts the `<img>` element even though it is not allowed in current\n * context and marks it to be autohoisted. Then {@link module:image/image/converters~hoistImageThroughElement another converter}\n * moves the converted element to the correct location.\n */\nexport function convertHoistableImage( evt, data, consumable, conversionApi ) {\n\tconst img = data.input;\n\n\t// If the image has not been consumed (converted)...\n\tif ( !consumable.test( img, { name: true, attribute: [ 'src' ] } ) ) {\n\t\treturn;\n\t}\n\t// At this point the image has not been converted because it was not allowed by schema. It might be in wrong\n\t// context or missing an attribute, but above we already checked whether the image has mandatory src attribute.\n\n\t// If the image would be allowed if it was in one of its ancestors...\n\tconst allowedContext = _findAllowedContext( { name: 'image', attributes: [ 'src' ] }, data.context, conversionApi.schema );\n\n\tif ( !allowedContext ) {\n\t\treturn;\n\t}\n\n\t// Convert it in that context...\n\tconst newData = Object.assign( {}, data );\n\tnewData.context = allowedContext;\n\n\tdata.output = conversionApi.convertItem( img, consumable, newData );\n\n\t// And mark that image to be hoisted.\n\tautohoistedImages.add( data.output );\n}\n\n// Basing on passed `context`, searches for \"closest\" context in which model element represented by `modelData`\n// would be allowed by `schema`.\n//\n// @private\n// @param {Object} modelData Object describing model element to check. Has two properties: `name` with model element name\n// and `attributes` with keys of attributes of that model element.\n// @param {Array} context Context in which original conversion was supposed to take place.\n// @param {module:engine/model/schema~Schema} schema Schema to check with.\n// @returns {Array|null} Context in which described model element would be allowed by `schema` or `null` if such context\n// could not been found.\nfunction _findAllowedContext( modelData, context, schema ) {\n\t// Copy context array so we won't modify original array.\n\tcontext = context.slice();\n\n\t// Prepare schema query to check with schema.\n\t// Since `inside` property is passed as reference to `context` variable, we don't need to modify `schemaQuery`.\n\tconst schemaQuery = {\n\t\tname: modelData.name,\n\t\tattributes: modelData.attributes,\n\t\tinside: context\n\t};\n\n\t// Try out all possible contexts.\n\twhile ( context.length && !schema.check( schemaQuery ) ) {\n\t\tconst parent = context.pop();\n\t\tconst parentName = typeof parent === 'string' ? parent : parent.name;\n\n\t\t// Do not try to autohoist \"above\" limiting element.\n\t\tif ( schema.limits.has( parentName ) ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// If `context` has any items it means that image is allowed in that context. Return that context.\n\t// If `context` has no items it means that image was not allowed in any of possible contexts. Return `null`.\n\treturn context.length ? context : null;\n}\n\n/**\n * Converter which hoists `image` {@link module:engine/model/element~Element model elements} to allowed context.\n *\n * Looks through all children of converted {@link module:engine/view/element~Element view element} if it\n * has been converted to model element. Breaks model element if `image` to-be-hoisted is found.\n *\n *\t\t<div><paragraph>x<image src=\"foo.jpg\"></image>x</paragraph></div> ->\n *\t\t<div><paragraph>x</paragraph></div><image src=\"foo.jpg\"></image><div><paragraph>x</paragraph></div>\n *\n * This works deeply, as shown in the example. This converter added for `paragraph` element will break `paragraph` element and\n * pass {@link module:engine/model/documentfragment~DocumentFragment document fragment} in `data.output`. Then,\n * `div` will be handled by this converter and will be once again broken to hoist `image` up to the root.\n *\n * **Note:** This converter should be executed only after the view element has been already converted, meaning that\n * `data.output` for that view element should be already generated when this converter is fired.\n */\nexport function hoistImageThroughElement( evt, data ) {\n\t// If this element has been properly converted...\n\tif ( !data.output ) {\n\t\treturn;\n\t}\n\n\t// And it is an element...\n\t// (If it is document fragment autohoisting does not have to break anything anyway.)\n\t// (And if it is text there are no children here.)\n\tif ( !data.output.is( 'element' ) ) {\n\t\treturn;\n\t}\n\n\t// This will hold newly generated output. At the beginning it is only the original element.\n\tconst newOutput = [];\n\n\t// Check if any of its children is to be hoisted...\n\t// Start from the last child - it is easier to break that way.\n\tfor ( let i = data.output.childCount - 1; i >= 0; i-- ) {\n\t\tconst child = data.output.getChild( i );\n\n\t\tif ( autohoistedImages.has( child ) ) {\n\t\t\t// Break autohoisted element's parent:\n\t\t\t// <parent>{ left-children... }<authoistedElement />{ right-children... }</parent>   --->\n\t\t\t// <parent>{ left-children... }</parent><autohoistedElement /><parent>{ right-children... }</parent>\n\t\t\t//\n\t\t\t// or\n\t\t\t//\n\t\t\t// <parent>{ left-children... }<autohoistedElement /></parent> --->\n\t\t\t// <parent>{ left-children... }</parent><autohoistedElement />\n\t\t\t//\n\t\t\t// or\n\t\t\t//\n\t\t\t// <parent><autohoistedElement />{ right-children... }</parent> --->\n\t\t\t// <autohoistedElement /><parent>{ right-children... }</parent>\n\t\t\t//\n\t\t\t// or\n\t\t\t//\n\t\t\t// <parent><autohoistedElement /></parent> ---> <autohoistedElement />\n\n\t\t\t// Check how many right-children there are.\n\t\t\tconst rightChildrenCount = data.output.childCount - i - 1;\n\t\t\tlet rightParent = null;\n\n\t\t\t// If there are any right-children, clone the prent element and insert those children there.\n\t\t\tif ( rightChildrenCount > 0 ) {\n\t\t\t\trightParent = data.output.clone( false );\n\t\t\t\trightParent.appendChildren( data.output.removeChildren( i + 1, rightChildrenCount ) );\n\t\t\t}\n\n\t\t\t// Remove the autohoisted element from its parent.\n\t\t\tchild.remove();\n\n\t\t\t// Break \"leading\" `data.output` in `newOutput` into one or more pieces:\n\t\t\t// Remove \"leading\" `data.output` (note that `data.output` is always first item in `newOutput`).\n\t\t\tnewOutput.shift();\n\n\t\t\t// Add the newly created parent of the right-children at the beginning.\n\t\t\tif ( rightParent ) {\n\t\t\t\tnewOutput.unshift( rightParent );\n\t\t\t}\n\n\t\t\t// Add autohoisted element at the beginning.\n\t\t\tnewOutput.unshift( child );\n\n\t\t\t// Add `data.output` at the beginning, if there is anything left in it.\n\t\t\tif ( data.output.childCount > 0 ) {\n\t\t\t\tnewOutput.unshift( data.output );\n\t\t\t}\n\t\t}\n\t}\n\n\t// If the output has changed pass it further.\n\tif ( newOutput.length ) {\n\t\tdata.output = new ModelDocumentFragment( newOutput );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-image/src/image/converters.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module image/imagecaption\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ImageCaptionEngine from './imagecaption/imagecaptionengine';\nimport '../theme/imagecaption/theme.scss';\n\n/**\n * The image caption plugin.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageCaption extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ImageCaptionEngine ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'image/imagecaption';\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-image/src/imagecaption.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module image/imagecaption/imagecaptionengine\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ModelTreeWalker from '@ckeditor/ckeditor5-engine/src/model/treewalker';\nimport ModelElement from '@ckeditor/ckeditor5-engine/src/model/element';\nimport ViewContainerElement from '@ckeditor/ckeditor5-engine/src/view/containerelement';\nimport ViewElement from '@ckeditor/ckeditor5-engine/src/view/element';\nimport viewWriter from '@ckeditor/ckeditor5-engine/src/view/writer';\nimport ModelPosition from '@ckeditor/ckeditor5-engine/src/model/position';\nimport ViewPosition from '@ckeditor/ckeditor5-engine/src/view/position';\nimport buildViewConverter from '@ckeditor/ckeditor5-engine/src/conversion/buildviewconverter';\nimport { isImage, isImageWidget } from '../image/utils';\nimport {\n\tcaptionElementCreator,\n\tisCaption,\n\tgetCaptionFromImage,\n\tmatchImageCaption\n} from './utils';\n\n/**\n * The image caption engine plugin.\n *\n * Registers proper converters. Takes care of adding caption element if image without it is inserted to model document.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageCaptionEngine extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst document = editor.document;\n\t\tconst viewDocument = editor.editing.view;\n\t\tconst schema = document.schema;\n\t\tconst data = editor.data;\n\t\tconst editing = editor.editing;\n\t\tconst t = editor.t;\n\n\t\t/**\n\t\t * Last selected caption editable.\n\t\t * It is used for hiding editable when is empty and image widget is no longer selected.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/view/editableelement~EditableElement} #_lastSelectedCaption\n\t\t */\n\n\t\t/**\n\t\t * Function used to create editable caption element in the editing view.\n\t\t *\n\t\t * @private\n\t\t * @member {Function}\n\t\t */\n\t\tthis._createCaption = captionElementCreator( viewDocument, t( 'Enter image caption' ) );\n\n\t\t// Schema configuration.\n\t\tschema.registerItem( 'caption', '$block' );\n\t\tschema.allow( { name: '$inline', inside: 'caption' } );\n\t\tschema.allow( { name: 'caption', inside: 'image' } );\n\t\tschema.limits.add( 'caption' );\n\n\t\t// Add caption element to each image inserted without it.\n\t\tdocument.on( 'change', insertMissingModelCaptionElement );\n\n\t\t// View to model converter for the data pipeline.\n\t\tbuildViewConverter()\n\t\t\t.for( data.viewToModel )\n\t\t\t.from( matchImageCaption )\n\t\t\t.toElement( 'caption' );\n\n\t\t// Model to view converter for the data pipeline.\n\t\tdata.modelToView.on( 'insert:caption', captionModelToView( new ViewContainerElement( 'figcaption' ), false ) );\n\n\t\t// Model to view converter for the editing pipeline.\n\t\tediting.modelToView.on( 'insert:caption', captionModelToView( this._createCaption ) );\n\n\t\t// Always show caption in view when something is inserted in model.\n\t\tediting.modelToView.on( 'insert', ( evt, data ) => this._fixCaptionVisibility( data.item ), { priority: 'high' } );\n\n\t\t// Hide caption when everything is removed from it.\n\t\tediting.modelToView.on( 'remove', ( evt, data ) => this._fixCaptionVisibility( data.sourcePosition.parent ), { priority: 'high' } );\n\n\t\t// Update view before each rendering.\n\t\tthis.listenTo( viewDocument, 'render', () => this._updateCaptionVisibility(), { priority: 'high' } );\n\t}\n\n\t/**\n\t * Updates view before each rendering, making sure that empty captions (so unnecessary ones) are hidden\n\t * and then visible when the image is selected.\n\t *\n\t * @private\n\t */\n\t_updateCaptionVisibility() {\n\t\tconst mapper = this.editor.editing.mapper;\n\t\tconst viewSelection = this.editor.editing.view.selection;\n\t\tconst selectedElement = viewSelection.getSelectedElement();\n\t\tlet viewCaption;\n\n\t\t// Hide last selected caption if have no child elements.\n\t\tif ( this._lastSelectedCaption && !this._lastSelectedCaption.childCount ) {\n\t\t\tthis._lastSelectedCaption.addClass( 'ck-hidden' );\n\t\t}\n\n\t\t// If whole image widget is selected.\n\t\tif ( selectedElement && isImageWidget( selectedElement ) ) {\n\t\t\tconst modelImage = mapper.toModelElement( selectedElement );\n\t\t\tconst modelCaption = getCaptionFromImage( modelImage );\n\t\t\tviewCaption = mapper.toViewElement( modelCaption );\n\t\t}\n\n\t\t// If selection is placed inside caption.\n\t\tif ( isCaption( viewSelection.editableElement ) ) {\n\t\t\tviewCaption = viewSelection.editableElement;\n\t\t}\n\n\t\tif ( viewCaption ) {\n\t\t\tviewCaption.removeClass( 'ck-hidden' );\n\t\t\tthis._lastSelectedCaption = viewCaption;\n\t\t}\n\t}\n\n\t/**\n\t * Fixes caption visibility during model to view conversion.\n\t * Checks if changed node is placed inside caption element and fixes it's visibility in the view.\n\t *\n\t * @private\n\t * @param {module:engine/model/node~Node} node\n\t */\n\t_fixCaptionVisibility( node ) {\n\t\tconst modelCaption = getParentCaption( node );\n\t\tconst mapper = this.editor.editing.mapper;\n\n\t\tif ( modelCaption ) {\n\t\t\tconst viewCaption = mapper.toViewElement( modelCaption );\n\n\t\t\tif ( viewCaption ) {\n\t\t\t\tif ( modelCaption.childCount ) {\n\t\t\t\t\tviewCaption.removeClass( 'ck-hidden' );\n\t\t\t\t} else {\n\t\t\t\t\tviewCaption.addClass( 'ck-hidden' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Checks whether data inserted to the model document have image element that has no caption element inside it.\n// If there is none - adds it to the image element.\n//\n// @private\nfunction insertMissingModelCaptionElement( evt, changeType, data, batch ) {\n\tif ( changeType !== 'insert' ) {\n\t\treturn;\n\t}\n\n\tconst walker = new ModelTreeWalker( {\n\t\tboundaries: data.range,\n\t\tignoreElementEnd: true\n\t} );\n\n\tfor ( const value of walker ) {\n\t\tconst item = value.item;\n\n\t\tif ( value.type == 'elementStart' && isImage( item ) && !getCaptionFromImage( item ) ) {\n\t\t\tbatch.document.enqueueChanges( () => {\n\t\t\t\t// Make sure that the image does not have caption already.\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-image/issues/78\n\t\t\t\tif ( !getCaptionFromImage( item ) ) {\n\t\t\t\t\tbatch.insert( ModelPosition.createAt( item, 'end' ), new ModelElement( 'caption' ) );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}\n}\n// Creates a converter that converts image caption model element to view element.\n//\n// @private\n// @param {Function|module:engine/view/element~Element} elementCreator\n// @param {Boolean} [hide=true] When set to `false` view element will not be inserted when it's empty.\n// @return {Function}\nfunction captionModelToView( elementCreator, hide = true ) {\n\treturn ( evt, data, consumable, conversionApi ) => {\n\t\tconst captionElement = data.item;\n\n\t\t// Return if element shouldn't be present when empty.\n\t\tif ( !captionElement.childCount && !hide ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( isImage( captionElement.parent ) ) {\n\t\t\tif ( !consumable.consume( data.item, 'insert' ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst viewImage = conversionApi.mapper.toViewElement( data.range.start.parent );\n\t\t\tconst viewCaption = ( elementCreator instanceof ViewElement ) ?\n\t\t\t\telementCreator.clone( true ) :\n\t\t\t\telementCreator();\n\n\t\t\t// Hide if empty.\n\t\t\tif ( !captionElement.childCount ) {\n\t\t\t\tviewCaption.addClass( 'ck-hidden' );\n\t\t\t}\n\n\t\t\tinsertViewCaptionAndBind( viewCaption, data.item, viewImage, conversionApi.mapper );\n\t\t}\n\t};\n}\n\n// Inserts `viewCaption` at the end of `viewImage` and binds it to `modelCaption`.\n//\n// @private\n// @param {module:engine/view/containerelement~ContainerElement} viewCaption\n// @param {module:engine/model/element~Element} modelCaption\n// @param {module:engine/view/containerelement~ContainerElement} viewImage\n// @param {module:engine/conversion/mapper~Mapper} mapper\nfunction insertViewCaptionAndBind( viewCaption, modelCaption, viewImage, mapper ) {\n\tconst viewPosition = ViewPosition.createAt( viewImage, 'end' );\n\n\tviewWriter.insert( viewPosition, viewCaption );\n\tmapper.bindElements( modelCaption, viewCaption );\n}\n\n/**\n * Checks if provided node or one of its ancestors is caption element and returns it.\n *\n * @param {module:engine/model/node~Node} node\n * @returns {module:engine/model/element~Element|null}\n */\nfunction getParentCaption( node ) {\n\tconst ancestors = node.getAncestors( { includeNode: true } );\n\tconst caption = ancestors.find( ancestor => ancestor.name == 'caption' );\n\n\tif ( caption && caption.parent && caption.parent.name == 'image' ) {\n\t\treturn caption;\n\t}\n\n\treturn null;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-image/src/imagecaption/imagecaptionengine.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module image/imagecaption/utils\n */\n\nimport ModelElement from '@ckeditor/ckeditor5-engine/src/model/element';\nimport ViewEditableElement from '@ckeditor/ckeditor5-engine/src/view/editableelement';\nimport { attachPlaceholder } from '@ckeditor/ckeditor5-engine/src/view/placeholder';\nimport { toWidgetEditable } from '@ckeditor/ckeditor5-widget/src/utils';\n\nconst captionSymbol = Symbol( 'imageCaption' );\n\n/**\n * Returns a function that creates caption editable element for the given {@link module:engine/view/document~Document}.\n *\n * @param {module:engine/view/document~Document} viewDocument\n * @param {String} placeholderText Text to be displayed when caption is empty.\n * @return {Function}\n */\nexport function captionElementCreator( viewDocument, placeholderText ) {\n\treturn () => {\n\t\tconst editable = new ViewEditableElement( 'figcaption' );\n\t\teditable.document = viewDocument;\n\t\teditable.setCustomProperty( captionSymbol, true );\n\t\tattachPlaceholder( editable, placeholderText );\n\n\t\treturn toWidgetEditable( editable );\n\t};\n}\n\n/**\n * Returns `true` if given view element is image's caption editable.\n *\n * @param {module:engine/view/element~Element} viewElement\n * @return {Boolean}\n */\nexport function isCaption( viewElement ) {\n\treturn !!viewElement.getCustomProperty( captionSymbol );\n}\n\n/**\n * Returns caption model element from given image element. Returns `null` if no caption is found.\n *\n * @param {module:engine/model/element~Element} imageModelElement\n * @return {module:engine/model/element~Element|null}\n */\nexport function getCaptionFromImage( imageModelElement ) {\n\tfor ( const node of imageModelElement.getChildren() ) {\n\t\tif ( node instanceof ModelElement && node.name == 'caption' ) {\n\t\t\treturn node;\n\t\t}\n\t}\n\n\treturn null;\n}\n\n/**\n * {@link module:engine/view/matcher~Matcher} pattern. Checks if given element is `figcaption` element and is placed\n * inside image `figure` element.\n *\n * @param {module:engine/view/element~Element} element\n * @returns {Object|null} Returns object accepted by {@link module:engine/view/matcher~Matcher} or `null` if element\n * cannot be matched.\n */\nexport function matchImageCaption( element ) {\n\tconst parent = element.parent;\n\n\t// Convert only captions for images.\n\tif ( element.name == 'figcaption' && parent && parent.name == 'figure' && parent.hasClass( 'image' ) ) {\n\t\treturn { name: true };\n\t}\n\n\treturn null;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-image/src/imagecaption/utils.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module image/imagestyle\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ImageStyleEngine from './imagestyle/imagestyleengine';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\n\n/**\n * The image style plugin.\n *\n * Uses {@link module:image/imagestyle/imagestyleengine~ImageStyleEngine}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageStyle extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ImageStyleEngine ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'image/imagestyle';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst styles = this.editor.config.get( 'image.styles' );\n\n\t\tfor ( const style of styles ) {\n\t\t\tthis._createButton( style );\n\t\t}\n\t}\n\n\t/**\n\t * Creates button for each style and stores it in editor's {@link module:ui/componentfactory~ComponentFactory ComponentFactory}.\n\t *\n\t * @private\n\t * @param {module:image/imagestyle/imagestyleengine~ImageStyleFormat} style\n\t */\n\t_createButton( style ) {\n\t\tconst editor = this.editor;\n\t\tconst command = editor.commands.get( style.name );\n\n\t\teditor.ui.componentFactory.add( style.name, locale => {\n\t\t\tconst view = new ButtonView( locale );\n\n\t\t\tview.set( {\n\t\t\t\tlabel: style.title,\n\t\t\t\ticon: style.icon,\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\tview.bind( 'isEnabled' ).to( command, 'isEnabled' );\n\t\t\tview.bind( 'isOn' ).to( command, 'value' );\n\n\t\t\tthis.listenTo( view, 'execute', () => editor.execute( style.name ) );\n\n\t\t\treturn view;\n\t\t} );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-image/src/imagestyle.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module image/imagestyle/converters\n */\n\nimport { isImage } from '../image/utils';\n\n/**\n * Returns converter for the `imageStyle` attribute. It can be used for adding, changing and removing the attribute.\n *\n * @param {Object} styles Object containing available styles. See {@link module:image/imagestyle/imagestyleengine~ImageStyleFormat}\n * for more details.\n * @returns {Function} Model to view attribute converter.\n */\nexport function modelToViewStyleAttribute( styles ) {\n\treturn ( evt, data, consumable, conversionApi ) => {\n\t\tconst eventType = evt.name.split( ':' )[ 0 ];\n\t\tconst consumableType = eventType + ':imageStyle';\n\n\t\tif ( !consumable.test( data.item, consumableType ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Check if there is class name associated with given value.\n\t\tconst newStyle = getStyleByValue( data.attributeNewValue, styles );\n\t\tconst oldStyle = getStyleByValue( data.attributeOldValue, styles );\n\t\tconst viewElement = conversionApi.mapper.toViewElement( data.item );\n\n\t\tif ( handleRemoval( eventType, oldStyle, viewElement ) || handleAddition( eventType, newStyle, viewElement ) ) {\n\t\t\tconsumable.consume( data.item, consumableType );\n\t\t}\n\t};\n}\n\n/**\n * Returns view to model converter converting image CSS classes to proper value in the model.\n *\n * @param {Array.<module:image/imagestyle/imagestyleengine~ImageStyleFormat>} styles Styles for which converter is created.\n * @returns {Function} View to model converter.\n */\nexport function viewToModelStyleAttribute( styles ) {\n\t// Convert only styles without `null` value.\n\tconst filteredStyles = styles.filter( style => style.value !== null );\n\n\treturn ( evt, data, consumable, conversionApi ) => {\n\t\tfor ( const style of filteredStyles ) {\n\t\t\tviewToModelImageStyle( style, data, consumable, conversionApi );\n\t\t}\n\t};\n}\n\n// Converter from view to model converting single style.\n// For more information see {@link module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher};\n//\n// @param {module:image/imagestyle/imagestyleengine~ImageStyleFormat} style\n// @param {Object} data\n// @param {module:engine/conversion/viewconsumable~ViewConsumable} consumable\n// @param {Object} conversionApi\nfunction viewToModelImageStyle( style, data, consumable, conversionApi ) {\n\tconst viewFigureElement = data.input;\n\tconst modelImageElement = data.output;\n\n\t// *** Step 1: Validate conversion.\n\t// Check if view element has proper class to consume.\n\tif ( !consumable.test( viewFigureElement, { class: style.className } ) ) {\n\t\treturn;\n\t}\n\n\t// Check if figure is converted to image.\n\tif ( !isImage( modelImageElement ) ) {\n\t\treturn;\n\t}\n\n\t// Check if image element can be placed in current context wit additional attribute.\n\tconst attributes = [ ...modelImageElement.getAttributeKeys(), 'imageStyle' ];\n\n\tif ( !conversionApi.schema.check( { name: 'image', inside: data.context, attributes } ) ) {\n\t\treturn;\n\t}\n\n\t// *** Step2: Convert to model.\n\tconsumable.consume( viewFigureElement, { class: style.className } );\n\tmodelImageElement.setAttribute( 'imageStyle', style.value );\n}\n\n// Returns style with given `value` from array of styles.\n//\n// @param {String} value\n// @param {Array.<module:image/imagestyle/imagestyleengine~ImageStyleFormat> } styles\n// @return {module:image/imagestyle/imagestyleengine~ImageStyleFormat|undefined}\nfunction getStyleByValue( value, styles ) {\n\tfor ( const style of styles ) {\n\t\tif ( style.value === value ) {\n\t\t\treturn style;\n\t\t}\n\t}\n}\n\n// Handles converting removal of the attribute.\n// Returns `true` when handling was processed correctly and further conversion can be performed.\n//\n// @param {String} eventType Type of the event.\n// @param {module:image/imagestyle/imagestyleengine~ImageStyleFormat} style\n// @param {module:engine/view/element~Element} viewElement\n// @returns {Boolean} Whether the change was handled.\nfunction handleRemoval( eventType, style, viewElement ) {\n\tif ( style && ( eventType == 'changeAttribute' || eventType == 'removeAttribute' ) ) {\n\t\tviewElement.removeClass( style.className );\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n// Handles converting addition of the attribute.\n// Returns `true` when handling was processed correctly and further conversion can be performed.\n//\n// @param {String} eventType Type of the event.\n// @param {module:image/imagestyle/imagestyleengine~ImageStyleFormat} style\n// @param {module:engine/view/element~Element} viewElement\n// @returns {Boolean} Whether the change was handled.\nfunction handleAddition( evenType, style, viewElement ) {\n\tif ( style && ( evenType == 'addAttribute' || evenType == 'changeAttribute' ) ) {\n\t\tviewElement.addClass( style.className );\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-image/src/imagestyle/converters.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module image/imagestyle/imagestylecommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command/command';\nimport { isImage } from '../image/utils';\n\n/**\n * The image style command. It is used to apply different image styles.\n *\n * @extends module:core/command/command~Command\n */\nexport default class ImageStyleCommand extends Command {\n\t/**\n\t * Creates instance of the image style command. Each command instance is handling one style.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor Editor instance.\n\t * @param {module:image/imagestyle/imagestyleengine~ImageStyleFormat} styles Style to apply by this command.\n\t */\n\tconstructor( editor, style ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The current command value - `true` if style handled by the command is applied on currently selected image,\n\t\t * `false` otherwise.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #value\n\t\t */\n\t\tthis.set( 'value', false );\n\n\t\t/**\n\t\t * Style handled by this command.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:image/imagestyle/imagestyleengine~ImageStyleFormat} #style\n\t\t */\n\t\tthis.style = style;\n\n\t\t// Update current value and refresh state each time something change in model document.\n\t\tthis.listenTo( editor.document, 'changesDone', () => {\n\t\t\tthis._updateValue();\n\t\t\tthis.refreshState();\n\t\t} );\n\t}\n\n\t/**\n\t * Updates command's value.\n\t *\n\t * @private\n\t */\n\t_updateValue() {\n\t\tconst doc = this.editor.document;\n\t\tconst element = doc.selection.getSelectedElement();\n\n\t\tif ( !element ) {\n\t\t\tthis.value = false;\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.style.value === null ) {\n\t\t\tthis.value = !element.hasAttribute( 'imageStyle' );\n\t\t} else {\n\t\t\tthis.value = ( element.getAttribute( 'imageStyle' ) == this.style.value );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_checkEnabled() {\n\t\tconst element = this.editor.document.selection.getSelectedElement();\n\n\t\treturn isImage( element );\n\t}\n\n\t/**\n\t * Executes command.\n\t *\n\t * @protected\n\t * @param {Object} options\n\t * @param {module:engine/model/batch~Batch} [options.batch] Batch to collect all the change steps. New batch will be\n\t * created if this option is not set.\n\t */\n\t_doExecute( options = {} ) {\n\t\t// Stop if style is already applied.\n\t\tif ( this.value ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editor = this.editor;\n\t\tconst doc = editor.document;\n\t\tconst selection = doc.selection;\n\t\tconst imageElement = selection.getSelectedElement();\n\n\t\tdoc.enqueueChanges( () => {\n\t\t\tconst batch = options.batch || doc.batch();\n\n\t\t\tbatch.setAttribute( imageElement, 'imageStyle', this.style.value );\n\t\t} );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-image/src/imagestyle/imagestylecommand.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module image/imagestyle/imagestyleengine\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ImageStyleCommand from './imagestylecommand';\nimport ImageEngine from '../image/imageengine';\nimport { viewToModelStyleAttribute, modelToViewStyleAttribute } from './converters';\nimport fullSizeIcon from '@ckeditor/ckeditor5-core/theme/icons/object-center.svg';\nimport sideIcon from '@ckeditor/ckeditor5-core/theme/icons/object-right.svg';\n\n/**\n * The image style engine plugin. Sets default configuration, creates converters and registers\n * {@link module:image/imagestyle/imagestylecommand~ImageStyleCommand ImageStyleCommand}.\n *\n * @extends {module:core/plugin~Plugin}\n */\nexport default class ImageStyleEngine extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ImageEngine ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\t\tconst doc = editor.document;\n\t\tconst schema = doc.schema;\n\t\tconst data = editor.data;\n\t\tconst editing = editor.editing;\n\n\t\t// Define default configuration.\n\t\teditor.config.define( 'image.styles', [\n\t\t\t// This option is equal to situation when no style is applied.\n\t\t\t{ name: 'imageStyleFull', title: t( 'Full size image' ), icon: fullSizeIcon, value: null },\n\n\t\t\t// This represents side image.\n\t\t\t{ name: 'imageStyleSide', title: t( 'Side image' ), icon: sideIcon, value: 'side', className: 'image-style-side' }\n\t\t] );\n\n\t\t// Get configuration.\n\t\tconst styles = editor.config.get( 'image.styles' );\n\n\t\t// Allow imageStyle attribute in image.\n\t\t// We could call it 'style' but https://github.com/ckeditor/ckeditor5-engine/issues/559.\n\t\tschema.allow( { name: 'image', attributes: 'imageStyle', inside: '$root' } );\n\n\t\t// Converters for imageStyle attribute from model to view.\n\t\tconst modelToViewConverter = modelToViewStyleAttribute( styles );\n\t\tediting.modelToView.on( 'addAttribute:imageStyle:image', modelToViewConverter );\n\t\tdata.modelToView.on( 'addAttribute:imageStyle:image', modelToViewConverter );\n\t\tediting.modelToView.on( 'changeAttribute:imageStyle:image', modelToViewConverter );\n\t\tdata.modelToView.on( 'changeAttribute:imageStyle:image', modelToViewConverter );\n\t\tediting.modelToView.on( 'removeAttribute:imageStyle:image', modelToViewConverter );\n\t\tdata.modelToView.on( 'removeAttribute:imageStyle:image', modelToViewConverter );\n\n\t\t// Converter for figure element from view to model.\n\t\tdata.viewToModel.on( 'element:figure', viewToModelStyleAttribute( styles ), { priority: 'low' } );\n\n\t\t// Register separate command for each style.\n\t\tfor ( const style of styles ) {\n\t\t\teditor.commands.set( style.name, new ImageStyleCommand( editor, style ) );\n\t\t}\n\t}\n}\n\n/**\n * Image style format descriptor.\n *\n *\timport fullIcon from 'path/to/icon.svg`;\n *\n *\tconst imageStyleFormat = {\n *\t\tname: 'fullSizeImage',\n *\t\tvalue: 'full',\n *\t\ticon: fullIcon,\n *\t\ttitle: `Full size image`,\n *\t\tclass: `image-full-size`\n *\t}\n *\n * @typedef {Object} module:image/imagestyle/imagestyleengine~ImageStyleFormat\n * @property {String} name Name of the style. It will be used to:\n * * register {@link module:core/command/command~Command command} which will apply this style,\n * * store style's button in editor's {@link module:ui/componentfactory~ComponentFactory ComponentFactory}.\n * @property {String} value Value used to store this style in model attribute.\n * When value is `null` style will be used as default one. Default style does not apply any CSS class to the view element.\n * @property {String} icon SVG icon representation to use when creating style's button.\n * @property {String} title Style's title.\n * @property {String} className CSS class used to represent style in view.\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-image/src/imagestyle/imagestyleengine.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module image/imagetextalternative\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport ImageTextAlternativeEngine from './imagetextalternative/imagetextalternativeengine';\nimport escPressHandler from '@ckeditor/ckeditor5-ui/src/bindings/escpresshandler';\nimport clickOutsideHandler from '@ckeditor/ckeditor5-ui/src/bindings/clickoutsidehandler';\nimport ImageToolbar from './imagetoolbar';\nimport TextAlternativeFormView from './imagetextalternative/ui/textalternativeformview';\nimport ImageBalloonPanel from './image/ui/imageballoonpanelview';\n\nimport textAlternativeIcon from '@ckeditor/ckeditor5-core/theme/icons/low-vision.svg';\nimport '../theme/imagetextalternative/theme.scss';\n\n/**\n * The image text alternative plugin.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageTextAlternative extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ImageTextAlternativeEngine ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'image/imagetextalternative';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tthis._createButton();\n\n\t\treturn this._createBalloonPanel().then( panel => {\n\t\t\t/**\n\t\t\t * Balloon panel containing text alternative change form.\n\t\t\t *\n\t\t\t * @member {module:image/image/ui/imageballoonpanel~ImageBalloonPanelView} #baloonPanel\n\t\t\t */\n\t\t\tthis.balloonPanel = panel;\n\n\t\t\t/**\n\t\t\t * Form containing textarea and buttons, used to change `alt` text value.\n\t\t\t *\n\t\t\t * @member {module:image/imagetextalternative/ui/textalternativeformview~TextAlternativeFormView} #form\n\t\t\t */\n\t\t\tthis.form = panel.content.get( 0 );\n\t\t} );\n\t}\n\n\t/**\n\t * Creates button showing text alternative change balloon panel and registers it in\n\t * editor's {@link module:ui/componentfactory~ComponentFactory ComponentFactory}.\n\t *\n\t * @private\n\t */\n\t_createButton() {\n\t\tconst editor = this.editor;\n\t\tconst command = editor.commands.get( 'imageTextAlternative' );\n\t\tconst t = editor.t;\n\n\t\teditor.ui.componentFactory.add( 'imageTextAlternative', locale => {\n\t\t\tconst view = new ButtonView( locale );\n\n\t\t\tview.set( {\n\t\t\t\tlabel: t( 'Change image text alternative' ),\n\t\t\t\ticon: textAlternativeIcon,\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\tview.bind( 'isEnabled' ).to( command, 'isEnabled' );\n\n\t\t\tthis.listenTo( view, 'execute', () => this._showBalloonPanel() );\n\n\t\t\treturn view;\n\t\t} );\n\t}\n\n\t/**\n\t * Creates balloon panel.\n\t *\n\t * @private\n\t * @return {Promise.<module:image/image/ui/imageballoonpanel~ImageBalloonPanelView>}\n\t */\n\t_createBalloonPanel() {\n\t\tconst editor = this.editor;\n\n\t\tconst panel = new ImageBalloonPanel( editor );\n\t\tconst form = new TextAlternativeFormView( editor.locale );\n\n\t\tthis.listenTo( form, 'submit', () => {\n\t\t\teditor.execute( 'imageTextAlternative', { newValue: form.lebeledInput.inputView.element.value } );\n\t\t\tthis._hideBalloonPanel();\n\t\t} );\n\n\t\t// If image toolbar is present - hide it when text alternative balloon is visible.\n\t\tconst imageToolbar = editor.plugins.get( ImageToolbar );\n\n\t\tif ( imageToolbar ) {\n\t\t\tthis.listenTo( panel, 'change:isVisible', () => {\n\t\t\t\tif ( panel.isVisible ) {\n\t\t\t\t\timageToolbar.hide();\n\t\t\t\t\timageToolbar.isEnabled = false;\n\t\t\t\t} else {\n\t\t\t\t\timageToolbar.show();\n\t\t\t\t\timageToolbar.isEnabled = true;\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\tthis.listenTo( form, 'cancel', () => this._hideBalloonPanel() );\n\n\t\t// Close on `ESC` press.\n\t\tescPressHandler( {\n\t\t\temitter: panel,\n\t\t\tactivator: () => panel.isVisible,\n\t\t\tcallback: () => this._hideBalloonPanel()\n\t\t} );\n\n\t\t// Close on click outside of balloon panel element.\n\t\tclickOutsideHandler( {\n\t\t\temitter: panel,\n\t\t\tactivator: () => panel.isVisible,\n\t\t\tcontextElement: panel.element,\n\t\t\tcallback: () => this._hideBalloonPanel()\n\t\t} );\n\n\t\treturn Promise.all( [\n\t\t\tpanel.content.add( form ),\n\t\t\teditor.ui.view.body.add( panel )\n\t\t] ).then( () => panel );\n\t}\n\n\t/**\n\t * Shows the balloon panel.\n\t *\n\t * @private\n\t */\n\t_showBalloonPanel() {\n\t\tconst editor = this.editor;\n\t\tconst command = editor.commands.get( 'imageTextAlternative' );\n\t\tthis.form.lebeledInput.value = command.value || '';\n\t\tthis.balloonPanel.attach();\n\t\tthis.form.lebeledInput.select();\n\t}\n\n\t/**\n\t * Hides the balloon panel.\n\t *\n\t * @private\n\t */\n\t_hideBalloonPanel() {\n\t\tconst editor = this.editor;\n\t\tthis.balloonPanel.detach();\n\t\teditor.editing.view.focus();\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-image/src/imagetextalternative.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module image/imagelaternatetext/imagetextalternativecommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command/command';\nimport { isImage } from '../image/utils';\n\n/**\n * The image text alternative command. It is used to change `alt` attribute on `image` elements.\n *\n * @extends module:core/command/command~Command\n */\nexport default class ImageTextAlternativeCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The current command value - `false` if there is no `alt` attribute, otherwise contains string with `alt`\n\t\t * attribute value.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {String|Boolean} #value\n\t\t */\n\t\tthis.set( 'value', false );\n\n\t\t// Update current value and refresh state each time something change in model document.\n\t\tthis.listenTo( editor.document, 'changesDone', () => {\n\t\t\tthis._updateValue();\n\t\t\tthis.refreshState();\n\t\t} );\n\t}\n\n\t/**\n\t * Updates command's value.\n\t *\n\t * @private\n\t */\n\t_updateValue() {\n\t\tconst doc = this.editor.document;\n\t\tconst element = doc.selection.getSelectedElement();\n\n\t\tif ( isImage( element ) && element.hasAttribute( 'alt' ) ) {\n\t\t\tthis.value = element.getAttribute( 'alt' );\n\t\t} else {\n\t\t\tthis.value = false;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_checkEnabled() {\n\t\tconst element = this.editor.document.selection.getSelectedElement();\n\n\t\treturn isImage( element );\n\t}\n\n\t/**\n\t * Executes command.\n\t *\n\t * @protected\n\t * @param {Object} options\n\t * @param {String} options.newValue New value of `alt` attribute to set.\n\t * @param {module:engine/model/batch~Batch} [options.batch] Batch to collect all the change steps. New batch will be\n\t * created if this option is not set.\n\t */\n\t_doExecute( options ) {\n\t\tconst editor = this.editor;\n\t\tconst doc = editor.document;\n\t\tconst imageElement = doc.selection.getSelectedElement();\n\n\t\tdoc.enqueueChanges( () => {\n\t\t\tconst batch = options.batch || doc.batch();\n\n\t\t\tbatch.setAttribute( imageElement, 'alt', options.newValue );\n\t\t} );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-image/src/imagetextalternative/imagetextalternativecommand.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module image/imagetextalternative/imagetextalternativeengine\n */\n\nimport ImageTextAlternativeCommand from './imagetextalternativecommand';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\n/**\n * The ImageTextAlternativeEngine plugin.\n * Registers `imageTextAlternative` command.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageTextAlternativeEngine extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tthis.editor.commands.set( 'imageTextAlternative', new ImageTextAlternativeCommand( this.editor ) );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-image/src/imagetextalternative/imagetextalternativeengine.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module image/imagetextalternative/ui/textalternativeformview\n */\n\nimport View from '@ckeditor/ckeditor5-ui/src/view';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport Template from '@ckeditor/ckeditor5-ui/src/template';\nimport LabeledInputView from '@ckeditor/ckeditor5-ui/src/labeledinput/labeledinputview';\nimport InputTextView from '@ckeditor/ckeditor5-ui/src/inputtext/inputtextview';\nimport submitHandler from '@ckeditor/ckeditor5-ui/src/bindings/submithandler';\n\n/**\n * TextAlternativeFormView class.\n *\n * @extends module:ui/view~View\n */\nexport default class TextAlternativeFormView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst t = this.locale.t;\n\n\t\t/**\n\t\t * Text area with label.\n\t\t *\n\t\t * @member {module:ui/labeledinput/labeledinputview~LabeledInputView} #labeledTextarea\n\t\t */\n\t\tthis.lebeledInput = this._createLabeledInputView();\n\n\t\t/**\n\t\t * Button used to submit the form.\n\t\t *\n\t\t * @member {module:ui/button/buttonview~ButtonView} #saveButtonView\n\t\t */\n\t\tthis.saveButtonView = this._createButton( t( 'Save' ) );\n\t\tthis.saveButtonView.type = 'submit';\n\n\t\t/**\n\t\t * Button used to cancel the form.\n\t\t *\n\t\t * @member {module:ui/button/buttonview~ButtonView} #cancelButtonView\n\t\t */\n\t\tthis.cancelButtonView = this._createButton( t( 'Cancel' ), 'cancel' );\n\n\t\tTemplate.extend( this.saveButtonView.template, {\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-button-action'\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\n\t\tthis.template = new Template( {\n\t\t\ttag: 'form',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'cke-text-alternative-form',\n\t\t\t\t]\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\tthis.lebeledInput,\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t'cke-text-alternative-form__actions'\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\tthis.saveButtonView,\n\t\t\t\t\t\tthis.cancelButtonView\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\t\tsubmitHandler( {\n\t\t\tview: this\n\t\t} );\n\t}\n\n\t/**\n\t * Creates button view.\n\t *\n\t * @private\n\t * @param {String} label Button label\n\t * @param {String} [eventName] Event name which ButtonView#execute event will be delegated to.\n\t * @returns {module:ui/button/buttonview~ButtonView} Button view instance.\n\t */\n\t_createButton( label, eventName ) {\n\t\tconst button = new ButtonView( this.locale );\n\n\t\tbutton.label = label;\n\t\tbutton.withText = true;\n\n\t\tif ( eventName ) {\n\t\t\tbutton.delegate( 'execute' ).to( this, eventName );\n\t\t}\n\n\t\treturn button;\n\t}\n\n\t/**\n\t * Creates input with label.\n\t *\n\t * @private\n\t * @return {module:ui/labeledinput/labeledinputview~LabeledInputView}\n\t */\n\t_createLabeledInputView() {\n\t\tconst t = this.locale.t;\n\t\tconst labeledInput = new LabeledInputView( this.locale, InputTextView );\n\t\tlabeledInput.label = t( 'Text alternative' );\n\n\t\treturn labeledInput;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-image/src/imagetextalternative/ui/textalternativeformview.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module link/link\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ClickObserver from '@ckeditor/ckeditor5-engine/src/view/observer/clickobserver';\nimport Range from '@ckeditor/ckeditor5-engine/src/view/range';\nimport LinkEngine from './linkengine';\nimport LinkElement from './linkelement';\nimport ContextualBalloon from '@ckeditor/ckeditor5-ui/src/panel/balloon/contextualballoon';\n\nimport clickOutsideHandler from '@ckeditor/ckeditor5-ui/src/bindings/clickoutsidehandler';\n\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport LinkFormView from './ui/linkformview';\n\nimport linkIcon from '../theme/icons/link.svg';\nimport unlinkIcon from '../theme/icons/unlink.svg';\n\nimport '../theme/theme.scss';\n\n/**\n * The link plugin. It introduces the Link and Unlink buttons and the <kbd>Ctrl+K</kbd> keystroke.\n *\n * It uses the {@link module:link/linkengine~LinkEngine link engine plugin} and the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon plugin}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Link extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ LinkEngine, ContextualBalloon ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'link/link';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tthis.editor.editing.view.addObserver( ClickObserver );\n\n\t\t/**\n\t\t * The form view displayed inside of the balloon.\n\t\t *\n\t\t * @member {module:link/ui/linkformview~LinkFormView}\n\t\t */\n\t\tthis.formView = this._createForm();\n\n\t\t/**\n\t\t * The contextual balloon plugin instance.\n\t\t *\n\t\t * @private\n\t\t * @member {module:ui/panel/balloon/contextualballoon~ContextualBalloon}\n\t\t */\n\t\tthis._balloon = this.editor.plugins.get( ContextualBalloon );\n\n\t\t// Create toolbar buttons.\n\t\tthis._createToolbarLinkButton();\n\t\tthis._createToolbarUnlinkButton();\n\n\t\t// Attach lifecycle actions to the the balloon.\n\t\tthis._attachActions();\n\t}\n\n\t/**\n\t * Creates the {@link module:link/ui/linkformview~LinkFormView} instance.\n\t *\n\t * @private\n\t * @returns {module:link/ui/linkformview~LinkFormView} Link form instance.\n\t */\n\t_createForm() {\n\t\tconst editor = this.editor;\n\t\tconst formView = new LinkFormView( editor.locale );\n\n\t\tformView.urlInputView.bind( 'value' ).to( editor.commands.get( 'link' ), 'value' );\n\n\t\t// Execute link command after clicking on formView `Save` button.\n\t\tthis.listenTo( formView, 'submit', () => {\n\t\t\teditor.execute( 'link', formView.urlInputView.inputView.element.value );\n\t\t\tthis._hidePanel( true );\n\t\t} );\n\n\t\t// Execute unlink command after clicking on formView `Unlink` button.\n\t\tthis.listenTo( formView, 'unlink', () => {\n\t\t\teditor.execute( 'unlink' );\n\t\t\tthis._hidePanel( true );\n\t\t} );\n\n\t\t// Hide the panel after clicking on formView `Cancel` button.\n\t\tthis.listenTo( formView, 'cancel', () => this._hidePanel( true ) );\n\n\t\t// Close the panel on esc key press when the form has focus.\n\t\tformView.keystrokes.set( 'Esc', ( data, cancel ) => {\n\t\t\tthis._hidePanel( true );\n\t\t\tcancel();\n\t\t} );\n\n\t\treturn formView;\n\t}\n\n\t/**\n\t * Creates a toolbar link button. Clicking this button will show\n\t * {@link #_balloon} attached to the selection.\n\t *\n\t * @private\n\t */\n\t_createToolbarLinkButton() {\n\t\tconst editor = this.editor;\n\t\tconst linkCommand = editor.commands.get( 'link' );\n\t\tconst t = editor.t;\n\n\t\t// Handle `Ctrl+K` keystroke and show the panel.\n\t\teditor.keystrokes.set( 'CTRL+K', () => this._showPanel( true ) );\n\n\t\teditor.ui.componentFactory.add( 'link', locale => {\n\t\t\tconst button = new ButtonView( locale );\n\n\t\t\tbutton.isEnabled = true;\n\t\t\tbutton.label = t( 'Link' );\n\t\t\tbutton.icon = linkIcon;\n\t\t\tbutton.keystroke = 'CTRL+K';\n\t\t\tbutton.tooltip = true;\n\n\t\t\t// Bind button to the command.\n\t\t\tbutton.bind( 'isEnabled' ).to( linkCommand, 'isEnabled' );\n\n\t\t\t// Show the panel on button click.\n\t\t\tthis.listenTo( button, 'execute', () => this._showPanel( true ) );\n\n\t\t\treturn button;\n\t\t} );\n\t}\n\n\t/**\n\t * Creates a toolbar unlink button. Clicking this button will unlink\n\t * the selected link.\n\t *\n\t * @private\n\t */\n\t_createToolbarUnlinkButton() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\t\tconst unlinkCommand = editor.commands.get( 'unlink' );\n\n\t\teditor.ui.componentFactory.add( 'unlink', locale => {\n\t\t\tconst button = new ButtonView( locale );\n\n\t\t\tbutton.isEnabled = false;\n\t\t\tbutton.label = t( 'Unlink' );\n\t\t\tbutton.icon = unlinkIcon;\n\t\t\tbutton.tooltip = true;\n\n\t\t\t// Bind button to the command.\n\t\t\tbutton.bind( 'isEnabled' ).to( unlinkCommand, 'isEnabled' );\n\n\t\t\t// Execute unlink command and hide panel, if open on button click.\n\t\t\tthis.listenTo( button, 'execute', () => editor.execute( 'unlink' ) );\n\n\t\t\treturn button;\n\t\t} );\n\t}\n\n\t/**\n\t * Attaches actions which control whether the balloon panel containing the\n\t * {@link #formView} is visible or not.\n\t *\n\t * @private\n\t */\n\t_attachActions() {\n\t\tconst viewDocument = this.editor.editing.view;\n\n\t\t// Handle click on view document and show panel when selection is placed inside the link element.\n\t\t// Keep panel open until selection will be inside the same link element.\n\t\tthis.listenTo( viewDocument, 'click', () => {\n\t\t\tconst parentLink = this._getSelectedLinkElement();\n\n\t\t\tif ( parentLink ) {\n\t\t\t\t// Then show panel but keep focus inside editor editable.\n\t\t\t\tthis._showPanel();\n\t\t\t}\n\t\t} );\n\n\t\t// Focus the form if the balloon is visible and the Tab key has been pressed.\n\t\tthis.editor.keystrokes.set( 'Tab', ( data, cancel ) => {\n\t\t\tif ( this._balloon.visibleView === this.formView && !this.formView.focusTracker.isFocused ) {\n\t\t\t\tthis.formView.focus();\n\t\t\t\tcancel();\n\t\t\t}\n\t\t} );\n\n\t\t// Close the panel on the Esc key press when the editable has focus and the balloon is visible.\n\t\tthis.editor.keystrokes.set( 'Esc', ( data, cancel ) => {\n\t\t\tif ( this._balloon.visibleView === this.formView ) {\n\t\t\t\tthis._hidePanel();\n\t\t\t\tcancel();\n\t\t\t}\n\t\t} );\n\n\t\t// Close on click outside of balloon panel element.\n\t\tclickOutsideHandler( {\n\t\t\temitter: this.formView,\n\t\t\tactivator: () => this._balloon.hasView( this.formView ),\n\t\t\tcontextElement: this._balloon.view.element,\n\t\t\tcallback: () => this._hidePanel()\n\t\t} );\n\t}\n\n\t/**\n\t * Adds the {@link #formView} to the {@link #_balloon}.\n\t * When view is already added then try to focus it `focusInput` parameter is set as true.\n\t *\n\t * @protected\n\t * @param {Boolean} [focusInput=false] When `true`, link form will be focused on panel show.\n\t * @return {Promise} A promise resolved when the {@link #formView} {@link module:ui/view~View#init} is done.\n\t */\n\t_showPanel( focusInput ) {\n\t\tconst editor = this.editor;\n\t\tconst command = editor.commands.get( 'link' );\n\t\tconst editing = editor.editing;\n\t\tconst showViewDocument = editing.view;\n\t\tconst showIsCollapsed = showViewDocument.selection.isCollapsed;\n\t\tconst showSelectedLink = this._getSelectedLinkElement();\n\n\t\t// https://github.com/ckeditor/ckeditor5-link/issues/53\n\t\tthis.formView.unlinkButtonView.isVisible = !!showSelectedLink;\n\n\t\t// Make sure that each time the panel shows up, the URL field remains in sync with the value of\n\t\t// the command. If the user typed in the input, then canceled the balloon (`urlInputView#value` stays\n\t\t// unaltered) and re-opened it without changing the value of the link command (e.g. because they\n\t\t// clicked the same link), they would see the old value instead of the actual value of the command.\n\t\t// https://github.com/ckeditor/ckeditor5-link/issues/78\n\t\t// https://github.com/ckeditor/ckeditor5-link/issues/123\n\t\tthis.formView.urlInputView.inputView.element.value = command.value || '';\n\n\t\tthis.listenTo( showViewDocument, 'render', () => {\n\t\t\tconst renderSelectedLink = this._getSelectedLinkElement();\n\t\t\tconst renderIsCollapsed = showViewDocument.selection.isCollapsed;\n\t\t\tconst hasSellectionExpanded = showIsCollapsed && !renderIsCollapsed;\n\n\t\t\t// Hide the panel if:\n\t\t\t//   * the selection went out of the original link element\n\t\t\t//     (e.g. paragraph containing the link was removed),\n\t\t\t//   * the selection has expanded\n\t\t\t// upon the #render event.\n\t\t\tif ( hasSellectionExpanded || showSelectedLink !== renderSelectedLink ) {\n\t\t\t\tthis._hidePanel( true );\n\t\t\t}\n\t\t\t// Update the position of the panel when:\n\t\t\t//  * the selection remains in the original link element,\n\t\t\t//  * there was no link element in the first place, i.e. creating a new link\n\t\t\telse {\n\t\t\t\t// If still in a link element, simply update the position of the balloon.\n\t\t\t\tif ( renderSelectedLink ) {\n\t\t\t\t\tthis._balloon.updatePosition();\n\t\t\t\t}\n\t\t\t\t// If there was no link, upon #render, the balloon must be moved\n\t\t\t\t// to the new position in the editing view (a new native DOM range).\n\t\t\t\telse {\n\t\t\t\t\tthis._balloon.updatePosition( this._getBalloonPositionData() );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\tif ( this._balloon.hasView( this.formView ) ) {\n\t\t\t// Check if formView should be focused and focus it if is visible.\n\t\t\tif ( focusInput && this._balloon.visibleView === this.formView ) {\n\t\t\t\tthis.formView.urlInputView.select();\n\t\t\t}\n\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn this._balloon.add( {\n\t\t\t\tview: this.formView,\n\t\t\t\tposition: this._getBalloonPositionData()\n\t\t\t} ).then( () => {\n\t\t\t\tif ( focusInput ) {\n\t\t\t\t\tthis.formView.urlInputView.select();\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Removes the {@link #formView} from the {@link #_balloon}.\n\t *\n\t * See {@link #_showPanel}.\n\t *\n\t * @protected\n\t * @param {Boolean} [focusEditable=false] When `true`, editable focus will be restored on panel hide.\n\t */\n\t_hidePanel( focusEditable ) {\n\t\tthis.stopListening( this.editor.editing.view, 'render' );\n\n\t\tif ( !this._balloon.hasView( this.formView ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( focusEditable ) {\n\t\t\tthis.editor.editing.view.focus();\n\t\t}\n\n\t\tthis.stopListening( this.editor.editing.view, 'render' );\n\t\tthis._balloon.remove( this.formView );\n\t}\n\n\t/**\n\t * Returns positioning options for the {@link #_balloon}. They control the way balloon is attached\n\t * to the target element or selection.\n\t *\n\t * If the selection is collapsed and inside a link element, then the panel will be attached to the\n\t * entire link element. Otherwise, it will be attached to the selection.\n\t *\n\t * @private\n\t * @returns {module:utils/dom/position~Options}\n\t */\n\t_getBalloonPositionData() {\n\t\tconst viewDocument = this.editor.editing.view;\n\t\tconst targetLink = this._getSelectedLinkElement();\n\n\t\tconst target = targetLink ?\n\t\t\t// When selection is inside link element, then attach panel to this element.\n\t\t\tviewDocument.domConverter.getCorrespondingDomElement( targetLink ) :\n\t\t\t// Otherwise attach panel to the selection.\n\t\t\tviewDocument.domConverter.viewRangeToDom( viewDocument.selection.getFirstRange() );\n\n\t\treturn {\n\t\t\ttarget,\n\t\t\tlimiter: viewDocument.domConverter.getCorrespondingDomElement( viewDocument.selection.editableElement )\n\t\t};\n\t}\n\n\t/**\n\t * Returns the {@link module:link/linkelement~LinkElement} under\n\t * {@link module:engine/view/document~Document editing view's} selection or `null`\n\t * if there's none.\n\t *\n\t * **Note**: For non–collapsed selection the `LinkElement` is only returned when **fully**\n\t * selected and the **only** element within the selection boundaries.\n\t *\n\t * @private\n\t * @returns {module:link/linkelement~LinkElement|null}\n\t */\n\t_getSelectedLinkElement() {\n\t\tconst selection = this.editor.editing.view.selection;\n\n\t\tif ( selection.isCollapsed ) {\n\t\t\treturn findLinkElementAncestor( selection.getFirstPosition() );\n\t\t} else {\n\t\t\t// The range for fully selected link is usually anchored in adjacent text nodes.\n\t\t\t// Trim it to get closer to the actual LinkElement.\n\t\t\tconst range = selection.getFirstRange().getTrimmed();\n\t\t\tconst startLink = findLinkElementAncestor( range.start );\n\t\t\tconst endLink = findLinkElementAncestor( range.end );\n\n\t\t\tif ( !startLink || startLink != endLink ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Check if the LinkElement is fully selected.\n\t\t\tif ( Range.createIn( startLink ).getTrimmed().isEqual( range ) ) {\n\t\t\t\treturn startLink;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Returns a `LinkElement` if there's one among the ancestors of the provided `Position`.\n//\n// @private\n// @param {module:engine/view/position~Position} View position to analyze.\n// @returns {module:link/linkelement~LinkElement|null} LinkElement at the position or null.\nfunction findLinkElementAncestor( position ) {\n\treturn position.getAncestors().find( ancestor => ancestor instanceof LinkElement );\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-link/src/link.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module link/linkcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command/command';\nimport Text from '@ckeditor/ckeditor5-engine/src/model/text';\nimport Range from '@ckeditor/ckeditor5-engine/src/model/range';\nimport getSchemaValidRanges from '@ckeditor/ckeditor5-core/src/command/helpers/getschemavalidranges';\nimport isAttributeAllowedInSelection from '@ckeditor/ckeditor5-core/src/command/helpers/isattributeallowedinselection';\nimport findLinkRange from './findlinkrange';\n\n/**\n * The link command. It is used by the {@link module:link/link~Link link feature}.\n *\n * @extends module:core/command/command~Command\n */\nexport default class LinkCommand extends Command {\n\t/**\n\t * @see module:core/command/command~Command\n\t * @param {module:core/editor/editor~Editor} editor\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * Currently selected `linkHref` attribute value.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} module:core/command/toggleattributecommand~ToggleAttributeCommand#value\n\t\t */\n\t\tthis.set( 'value', undefined );\n\n\t\t// Checks whether the command should be enabled or disabled.\n\t\tthis.listenTo( editor.document, 'changesDone', () => {\n\t\t\tthis.refreshState();\n\t\t\tthis.refreshValue();\n\t\t} );\n\t}\n\n\t/**\n\t * Updates command's {@link #value} based on the current selection.\n\t */\n\trefreshValue() {\n\t\tthis.value = this.editor.document.selection.getAttribute( 'linkHref' );\n\t}\n\n\t/**\n\t * Checks if {@link module:engine/model/document~Document#schema} allows to create attribute in {@link\n\t * module:engine/model/document~Document#selection}\n\t *\n\t * @protected\n\t * @returns {Boolean}\n\t */\n\t_checkEnabled() {\n\t\tconst document = this.editor.document;\n\n\t\treturn isAttributeAllowedInSelection( 'linkHref', document.selection, document.schema );\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * When selection is non-collapsed, then `linkHref` attribute will be applied to nodes inside selection, but only to\n\t * those nodes where `linkHref` attribute is allowed (disallowed nodes will be omitted).\n\t *\n\t * When selection is collapsed and is not inside text with `linkHref` attribute, then\n\t * new {@link module:engine/model/text~Text Text node} with `linkHref` attribute will be inserted in place of caret, but only if such\n\t * an element is allowed in this place. `_data` of the inserted text will equal `href` parameter. Selection will be updated to\n\t * wrap just inserted text node.\n\t *\n\t * When selection is collapsed and inside text with `linkHref` attribute, the attribute value will be updated.\n\t *\n\t * @protected\n\t * @param {String} href Link destination.\n\t */\n\t_doExecute( href ) {\n\t\tconst document = this.editor.document;\n\t\tconst selection = document.selection;\n\n\t\tdocument.enqueueChanges( () => {\n\t\t\t// Keep it as one undo step.\n\t\t\tconst batch = document.batch();\n\n\t\t\t// If selection is collapsed then update selected link or insert new one at the place of caret.\n\t\t\tif ( selection.isCollapsed ) {\n\t\t\t\tconst position = selection.getFirstPosition();\n\t\t\t\tconst parent = position.parent;\n\n\t\t\t\t// When selection is inside text with `linkHref` attribute.\n\t\t\t\tif ( selection.hasAttribute( 'linkHref' ) ) {\n\t\t\t\t\t// Then update `linkHref` value.\n\t\t\t\t\tconst linkRange = findLinkRange( selection.getFirstPosition(), selection.getAttribute( 'linkHref' ) );\n\n\t\t\t\t\tbatch.setAttribute( linkRange, 'linkHref', href );\n\n\t\t\t\t\t// Create new range wrapping changed link.\n\t\t\t\t\tselection.setRanges( [ linkRange ] );\n\t\t\t\t}\n\t\t\t\t// If not then insert text node with `linkHref` attribute in place of caret.\n\t\t\t\telse if ( document.schema.check( { name: '$text', attributes: 'linkHref', inside: parent.name } ) ) {\n\t\t\t\t\tconst node = new Text( href, { linkHref: href } );\n\n\t\t\t\t\tbatch.insert( position, node );\n\n\t\t\t\t\t// Create new range wrapping created node.\n\t\t\t\t\tselection.setRanges( [ Range.createOn( node ) ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// If selection has non-collapsed ranges, we change attribute on nodes inside those ranges\n\t\t\t\t// omitting nodes where `linkHref` attribute is disallowed.\n\t\t\t\tconst ranges = getSchemaValidRanges( 'linkHref', selection.getRanges(), document.schema );\n\n\t\t\t\tfor ( const range of ranges ) {\n\t\t\t\t\tbatch.setAttribute( range, 'linkHref', href );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-link/src/linkcommand.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module link/linkengine\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport buildModelConverter from '@ckeditor/ckeditor5-engine/src/conversion/buildmodelconverter';\nimport buildViewConverter from '@ckeditor/ckeditor5-engine/src/conversion/buildviewconverter';\nimport LinkElement from './linkelement';\nimport LinkCommand from './linkcommand';\nimport UnlinkCommand from './unlinkcommand';\n\n/**\n * The link engine feature.\n *\n * It introduces the `linkHref=\"url\"` attribute in the model which renders to the view as a `<a href=\"url\">` element.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class LinkEngine extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst data = editor.data;\n\t\tconst editing = editor.editing;\n\n\t\t// Allow link attribute on all inline nodes.\n\t\teditor.document.schema.allow( { name: '$inline', attributes: 'linkHref', inside: '$block' } );\n\n\t\t// Build converter from model to view for data and editing pipelines.\n\t\tbuildModelConverter().for( data.modelToView, editing.modelToView )\n\t\t\t.fromAttribute( 'linkHref' )\n\t\t\t.toElement( linkHref => new LinkElement( 'a', { href: linkHref } ) );\n\n\t\t// Build converter from view to model for data pipeline.\n\t\tbuildViewConverter().for( data.viewToModel )\n\t\t\t.fromElement( 'a' )\n\t\t\t.toAttribute( viewElement => ( {\n\t\t\t\tkey: 'linkHref',\n\t\t\t\tvalue: viewElement.getAttribute( 'href' )\n\t\t\t} ) );\n\n\t\t// Create linking commands.\n\t\teditor.commands.set( 'link', new LinkCommand( editor ) );\n\t\teditor.commands.set( 'unlink', new UnlinkCommand( editor ) );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-link/src/linkengine.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module link/ui/linkformview\n */\n\nimport View from '@ckeditor/ckeditor5-ui/src/view';\nimport Template from '@ckeditor/ckeditor5-ui/src/template';\nimport ViewCollection from '@ckeditor/ckeditor5-ui/src/viewcollection';\n\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport LabeledInputView from '@ckeditor/ckeditor5-ui/src/labeledinput/labeledinputview';\nimport InputTextView from '@ckeditor/ckeditor5-ui/src/inputtext/inputtextview';\n\nimport submitHandler from '@ckeditor/ckeditor5-ui/src/bindings/submithandler';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport FocusCycler from '@ckeditor/ckeditor5-ui/src/focuscycler';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\n\n/**\n * The link form view controller class.\n *\n * See {@link module:link/ui/linkformview~LinkFormView}.\n *\n * @extends module:ui/view~View\n */\nexport default class LinkFormView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst t = locale.t;\n\n\t\t/**\n\t\t * Tracks information about DOM focus in the form.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\t/**\n\t\t * The url input view.\n\t\t *\n\t\t * @member {module:ui/labeledinput/labeledinputview~LabeledInputView}\n\t\t */\n\t\tthis.urlInputView = this._createUrlInput();\n\n\t\t/**\n\t\t * The save button view.\n\t\t *\n\t\t * @member {module:ui/button/buttonview~ButtonView}\n\t\t */\n\t\tthis.saveButtonView = this._createButton( t( 'Save' ) );\n\t\tthis.saveButtonView.type = 'submit';\n\n\t\t/**\n\t\t * The cancel button view.\n\t\t *\n\t\t * @member {module:ui/button/buttonview~ButtonView}\n\t\t */\n\t\tthis.cancelButtonView = this._createButton( t( 'Cancel' ), 'cancel' );\n\n\t\t/**\n\t\t * The unlink button view.\n\t\t *\n\t\t * @member {module:ui/button/buttonview~ButtonView}\n\t\t */\n\t\tthis.unlinkButtonView = this._createButton( t( 'Unlink' ), 'unlink' );\n\n\t\t/**\n\t\t * A collection of views which can be focused in the form.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis._focusables = new ViewCollection();\n\n\t\t/**\n\t\t * Helps cycling over {@link #_focusables} in the form.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/focuscycler~FocusCycler}\n\t\t */\n\t\tthis._focusCycler = new FocusCycler( {\n\t\t\tfocusables: this._focusables,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate form fields backwards using the shift + tab keystroke.\n\t\t\t\tfocusPrevious: 'shift + tab',\n\n\t\t\t\t// Navigate form fields forwards using the tab key.\n\t\t\t\tfocusNext: 'tab'\n\t\t\t}\n\t\t} );\n\n\t\tTemplate.extend( this.saveButtonView.template, {\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-button-action'\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\n\t\tthis.template = new Template( {\n\t\t\ttag: 'form',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-link-form',\n\t\t\t\t],\n\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-link/issues/90\n\t\t\t\ttabindex: '-1'\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\tthis.urlInputView,\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t'ck-link-form__actions'\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\tthis.saveButtonView,\n\t\t\t\t\t\tthis.cancelButtonView,\n\t\t\t\t\t\tthis.unlinkButtonView\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\t\tsubmitHandler( {\n\t\t\tview: this\n\t\t} );\n\n\t\tconst childViews = [\n\t\t\tthis.urlInputView,\n\t\t\tthis.saveButtonView,\n\t\t\tthis.cancelButtonView,\n\t\t\tthis.unlinkButtonView\n\t\t];\n\n\t\tchildViews.forEach( v => {\n\t\t\t// Register the view as focusable.\n\t\t\tthis._focusables.add( v );\n\n\t\t\t// Register the view in the focus tracker.\n\t\t\tthis.focusTracker.add( v.element );\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\t// Start listening for the keystrokes coming from #element.\n\t\tthis.keystrokes.listenTo( this.element );\n\n\t\treturn super.init();\n\t}\n\n\t/**\n\t * Focuses the fist {@link #_focusables} in the form.\n\t */\n\tfocus() {\n\t\tthis._focusCycler.focusFirst();\n\t}\n\n\t/**\n\t * Create labeled input view.\n\t *\n\t * @private\n\t * @returns {module:ui/labeledinput/labeledinputview~LabeledInputView} Labeled input view instance.\n\t */\n\t_createUrlInput() {\n\t\tconst t = this.locale.t;\n\n\t\tconst labeledInput = new LabeledInputView( this.locale, InputTextView );\n\n\t\tlabeledInput.label = t( 'Link URL' );\n\t\tlabeledInput.inputView.placeholder = t( 'http://example.com' );\n\n\t\treturn labeledInput;\n\t}\n\n\t/**\n\t * Creates button View.\n\t *\n\t * @private\n\t * @param {String} label Button label\n\t * @param {String} [eventName] Event name which ButtonView#execute event will be delegated to.\n\t * @returns {module:ui/button/buttonview~ButtonView} Button view instance.\n\t */\n\t_createButton( label, eventName ) {\n\t\tconst button = new ButtonView( this.locale );\n\n\t\tbutton.label = label;\n\t\tbutton.withText = true;\n\n\t\tif ( eventName ) {\n\t\t\tbutton.delegate( 'execute' ).to( this, eventName );\n\t\t}\n\n\t\treturn button;\n\t}\n}\n\n/**\n * Fired when the form view is submitted (when one of the child triggered submit event).\n * E.g. click on {@link #saveButtonView}.\n *\n * @event submit\n */\n\n/**\n * Fired when the form view is canceled, e.g. click on {@link #cancelButtonView}.\n *\n * @event cancel\n */\n\n/**\n * Fired when the {@link #unlinkButtonView} is clicked.\n *\n * @event unlink\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-link/src/ui/linkformview.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module link/unlinkcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command/command';\nimport findLinkRange from './findlinkrange';\n\n/**\n * The unlink command. It is used by the {@link module:link/link~Link link plugin}.\n *\n * @extends module:core/command/command~Command\n */\nexport default class UnlinkCommand extends Command {\n\t/**\n\t * @see module:core/command/command~Command\n\t * @param {module:core/editor/editor~Editor} editor\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t// Checks whether the command should be enabled or disabled.\n\t\tthis.listenTo( editor.document, 'changesDone', () => {\n\t\t\tthis.refreshState();\n\t\t} );\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * When the selection is collapsed, removes `linkHref` attribute from each node with the same `linkHref` attribute value.\n\t * When the selection is non-collapsed, removes `linkHref` from each node in selected ranges.\n\t *\n\t * @protected\n\t */\n\t_doExecute() {\n\t\tconst document = this.editor.document;\n\t\tconst selection = document.selection;\n\n\t\tdocument.enqueueChanges( () => {\n\t\t\t// Get ranges to unlink.\n\t\t\tconst rangesToUnlink = selection.isCollapsed ?\n\t\t\t\t[ findLinkRange( selection.getFirstPosition(), selection.getAttribute( 'linkHref' ) ) ] : selection.getRanges();\n\n\t\t\t// Keep it as one undo step.\n\t\t\tconst batch = document.batch();\n\n\t\t\t// Remove `linkHref` attribute from specified ranges.\n\t\t\tfor ( const range of rangesToUnlink ) {\n\t\t\t\tbatch.removeAttribute( range, 'linkHref' );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Checks if selection has `linkHref` attribute.\n\t *\n\t * @protected\n\t * @returns {Boolean}\n\t */\n\t_checkEnabled() {\n\t\treturn this.editor.document.selection.hasAttribute( 'linkHref' );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-link/src/unlinkcommand.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module list/converters\n */\n\nimport ViewListItemElement from './viewlistitemelement';\n\nimport ModelDocumentFragment from '@ckeditor/ckeditor5-engine/src/model/documentfragment';\nimport ModelElement from '@ckeditor/ckeditor5-engine/src/model/element';\nimport ModelPosition from '@ckeditor/ckeditor5-engine/src/model/position';\nimport modelWriter from '@ckeditor/ckeditor5-engine/src/model/writer';\n\nimport ViewContainerElement from '@ckeditor/ckeditor5-engine/src/view/containerelement';\nimport ViewPosition from '@ckeditor/ckeditor5-engine/src/view/position';\nimport ViewRange from '@ckeditor/ckeditor5-engine/src/view/range';\nimport ViewTreeWalker from '@ckeditor/ckeditor5-engine/src/view/treewalker';\nimport viewWriter from '@ckeditor/ckeditor5-engine/src/view/writer';\n\n/**\n * Model to view converter for `listItem` model element insertion.\n *\n * It creates `<ul><li></li><ul>` (or `<ol>`) view structure out of `listItem` model element, inserts it at correct\n * position, and merges the list with surrounding lists (if able).\n *\n * @see module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:insert\n * @param {module:utils/eventinfo~EventInfo} evt Object containing information about the fired event.\n * @param {Object} data Additional information about the change.\n * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n * @param {Object} conversionApi Conversion interface.\n */\nexport function modelViewInsertion( evt, data, consumable, conversionApi ) {\n\tif ( !consumable.test( data.item, 'insert' ) ||\n\t\t!consumable.test( data.item, 'addAttribute:type' ) ||\n\t\t!consumable.test( data.item, 'addAttribute:indent' )\n\t) {\n\t\treturn;\n\t}\n\n\tconsumable.consume( data.item, 'insert' );\n\tconsumable.consume( data.item, 'addAttribute:type' );\n\tconsumable.consume( data.item, 'addAttribute:indent' );\n\n\tconst modelItem = data.item;\n\tconst viewItem = generateLiInUl( modelItem, conversionApi.mapper );\n\n\t// Providing kind of \"default\" insert position in case of converting incorrect model.\n\tconst insertPosition = conversionApi.mapper.toViewPosition( ModelPosition.createBefore( modelItem ) );\n\n\tinjectViewList( modelItem, viewItem, conversionApi.mapper, insertPosition );\n}\n\n/**\n * Model to view converter for `type` attribute change on `listItem` model element.\n *\n * This change means that `<li>`s parent changes from `<ul>` to `<ol>` (or vice versa). This is accomplished by breaking\n * view elements, changing their name and merging them.\n *\n * @see module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:changeAttribute\n * @param {module:utils/eventinfo~EventInfo} evt Object containing information about the fired event.\n * @param {Object} data Additional information about the change.\n * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n * @param {Object} conversionApi Conversion interface.\n */\nexport function modelViewChangeType( evt, data, consumable, conversionApi ) {\n\tif ( !consumable.consume( data.item, 'changeAttribute:type' ) ) {\n\t\treturn;\n\t}\n\n\tconst viewItem = conversionApi.mapper.toViewElement( data.item );\n\n\t// 1. Break the container after and before the list item.\n\t// This will create a view list with one view list item -- the one that changed type.\n\tviewWriter.breakContainer( ViewPosition.createBefore( viewItem ) );\n\tviewWriter.breakContainer( ViewPosition.createAfter( viewItem ) );\n\n\t// 2. Change name of the view list that holds the changed view item.\n\t// We cannot just change name property, because that would not render properly.\n\tlet viewList = viewItem.parent;\n\tconst listName = data.attributeNewValue == 'numbered' ? 'ol' : 'ul';\n\tviewList = viewWriter.rename( viewList, listName );\n\n\t// 3. Merge the changed view list with other lists, if possible.\n\tmergeViewLists( viewList, viewList.nextSibling );\n\tmergeViewLists( viewList.previousSibling, viewList );\n}\n\n/**\n * Model to view converter for `listItem` model element remove.\n *\n * @see module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:remove\n * @param {module:utils/eventinfo~EventInfo} evt Object containing information about the fired event.\n * @param {Object} data Additional information about the change.\n * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n * @param {Object} conversionApi Conversion interface.\n */\nexport function modelViewRemove( evt, data, consumable, conversionApi ) {\n\tif ( !consumable.consume( data.item, 'remove' ) ) {\n\t\treturn;\n\t}\n\n\tconst viewPosition = conversionApi.mapper.toViewPosition( data.sourcePosition );\n\tconst viewItem = viewPosition.nodeAfter.is( 'li' ) ? viewPosition.nodeAfter : viewPosition.nodeAfter.getChild( 0 );\n\n\t// 1. Break the container after and before the list item.\n\t// This will create a view list with one view list item -- the one that changed type.\n\tviewWriter.breakContainer( ViewPosition.createBefore( viewItem ) );\n\tviewWriter.breakContainer( ViewPosition.createAfter( viewItem ) );\n\n\t// 2. Remove the UL that contains just the removed <li>.\n\tconst viewList = viewItem.parent;\n\tconst viewListPrev = viewList.previousSibling;\n\tconst removeRange = ViewRange.createOn( viewList );\n\tviewWriter.remove( removeRange );\n\n\tif ( viewListPrev && viewListPrev.nextSibling ) {\n\t\tmergeViewLists( viewListPrev, viewListPrev.nextSibling );\n\t}\n\n\t// 3. Bring back nested list that was in the removed <li>.\n\thoistNestedLists( data.item.getAttribute( 'indent' ) + 1, data.sourcePosition, removeRange.start, viewItem, conversionApi.mapper );\n\n\t// Unbind this element only if it was moved to graveyard.\n\t// See #847.\n\tif ( data.item.root.rootName == '$graveyard' ) {\n\t\tconversionApi.mapper.unbindModelElement( data.item );\n\t}\n}\n\n/**\n * Model to view converter for `indent` attribute change on `listItem` model element.\n *\n * @see module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:changeAttribute\n * @param {module:utils/eventinfo~EventInfo} evt Object containing information about the fired event.\n * @param {Object} data Additional information about the change.\n * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n * @param {Object} conversionApi Conversion interface.\n */\nexport function modelViewChangeIndent( evt, data, consumable, conversionApi ) {\n\tif ( !consumable.consume( data.item, 'changeAttribute:indent' ) ) {\n\t\treturn;\n\t}\n\n\tconst viewItem = conversionApi.mapper.toViewElement( data.item );\n\n\t// 1. Break the container after and before the list item.\n\t// This will create a view list with one view list item -- the one that changed type.\n\tviewWriter.breakContainer( ViewPosition.createBefore( viewItem ) );\n\tviewWriter.breakContainer( ViewPosition.createAfter( viewItem ) );\n\n\t// 2. Extract view list with changed view list item and merge \"hole\" possibly created by breaking and removing elements.\n\tconst viewList = viewItem.parent;\n\tconst viewListPrev = viewList.previousSibling;\n\tconst removeRange = ViewRange.createOn( viewList );\n\tviewWriter.remove( removeRange );\n\n\t// TODO: get rid of `removePosition` when conversion is done on `changesDone`.\n\tlet removePosition;\n\n\tif ( viewListPrev && viewListPrev.nextSibling ) {\n\t\tremovePosition = mergeViewLists( viewListPrev, viewListPrev.nextSibling );\n\t}\n\n\tif ( !removePosition ) {\n\t\tremovePosition = removeRange.start;\n\t}\n\n\t// 3. Bring back nested list that was in the removed <li>.\n\thoistNestedLists( data.attributeOldValue + 1, data.range.start, removeRange.start, viewItem, conversionApi.mapper );\n\n\t// 4. Inject view list like it is newly inserted.\n\tinjectViewList( data.item, viewItem, conversionApi.mapper, removePosition );\n}\n\n/**\n * A special model to view converter introduced by {@link module:list/list~List List feature}. This converter is fired for\n * insert change of every model item, and should be fired before actual converter. The converter checks whether inserted\n * model item is a non-`listItem` element. If it is, and it is inserted inside a view list, the converter breaks the\n * list so the model element is inserted to the view parent element corresponding to its model parent element.\n *\n * The converter prevents such situations:\n *\n *\t\t// Model:                        // View:\n *\t\t<listItem>foo</listItem>         <ul>\n *\t\t<listItem>bar</listItem>             <li>foo</li>\n *\t\t                                     <li>bar</li>\n *\t\t                                 </ul>\n *\n *\t\t// After change:                 // Correct view guaranteed by this converter:\n *\t\t<listItem>foo</listItem>         <ul><li>foo</li></ul><p>xxx</p><ul><li>bar</li></ul>\n *\t\t<paragraph>xxx</paragraph>       // Instead of this wrong view state:\n *\t\t<listItem>bar</listItem>         <ul><li>foo</li><p>xxx</p><li>bar</li></ul>\n *\n * @see module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:insert\n * @param {module:utils/eventinfo~EventInfo} evt Object containing information about the fired event.\n * @param {Object} data Additional information about the change.\n * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n * @param {Object} conversionApi Conversion interface.\n */\nexport function modelViewSplitOnInsert( evt, data, consumable, conversionApi ) {\n\tif ( data.item.name != 'listItem' ) {\n\t\tlet viewPosition = conversionApi.mapper.toViewPosition( data.range.start );\n\n\t\tconst lists = [];\n\n\t\t// Break multiple ULs/OLs if there are.\n\t\t//\n\t\t// Imagine following list:\n\t\t//\n\t\t// 1 --------\n\t\t//   1.1 --------\n\t\t//     1.1.1 --------\n\t\t//     1.1.2 --------\n\t\t//     1.1.3 --------\n\t\t//       1.1.3.1 --------\n\t\t//   1.2 --------\n\t\t//     1.2.1 --------\n\t\t// 2 --------\n\t\t//\n\t\t// Insert paragraph after item 1.1.1:\n\t\t//\n\t\t// 1 --------\n\t\t//   1.1 --------\n\t\t//     1.1.1 --------\n\t\t//\n\t\t// Lorem ipsum.\n\t\t//\n\t\t//     1.1.2 --------\n\t\t//     1.1.3 --------\n\t\t//       1.1.3.1 --------\n\t\t//   1.2 --------\n\t\t//     1.2.1 --------\n\t\t// 2 --------\n\t\t//\n\t\t// In this case 1.1.2 has to become beginning of a new list.\n\t\t// We need to break list before 1.1.2 (obvious), then we need to break list also before 1.2.\n\t\t// Then we need to move those broken pieces one after another and merge:\n\t\t//\n\t\t// 1 --------\n\t\t//   1.1 --------\n\t\t//     1.1.1 --------\n\t\t//\n\t\t// Lorem ipsum.\n\t\t//\n\t\t// 1.1.2 --------\n\t\t//   1.1.3 --------\n\t\t//     1.1.3.1 --------\n\t\t// 1.2 --------\n\t\t//   1.2.1 --------\n\t\t// 2 --------\n\t\t//\n\t\twhile ( viewPosition.parent.name == 'ul' || viewPosition.parent.name == 'ol' ) {\n\t\t\tviewPosition = viewWriter.breakContainer( viewPosition );\n\n\t\t\tif ( viewPosition.parent.name != 'li' ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Remove lists that are after inserted element.\n\t\t\t// They will be brought back later, below the inserted element.\n\t\t\tconst removeStart = viewPosition;\n\t\t\tconst removeEnd = ViewPosition.createAt( viewPosition.parent, 'end' );\n\n\t\t\t// Don't remove if there is nothing to remove.\n\t\t\tif ( !removeStart.isEqual( removeEnd ) ) {\n\t\t\t\tconst removed = viewWriter.remove( new ViewRange( removeStart, removeEnd ) );\n\t\t\t\tlists.push( removed );\n\t\t\t}\n\n\t\t\tviewPosition = ViewPosition.createAfter( viewPosition.parent );\n\t\t}\n\n\t\t// Bring back removed lists.\n\t\tif ( lists.length > 0 ) {\n\t\t\tfor ( let i = 0; i < lists.length; i++ ) {\n\t\t\t\tconst previousList = viewPosition.nodeBefore;\n\t\t\t\tconst insertedRange = viewWriter.insert( viewPosition, lists[ i ] );\n\t\t\t\tviewPosition = insertedRange.end;\n\n\t\t\t\t// Don't merge first list! We want a split in that place (this is why this converter is introduced).\n\t\t\t\tif ( i > 0 ) {\n\t\t\t\t\tconst mergePos = mergeViewLists( previousList, previousList.nextSibling );\n\n\t\t\t\t\t// If `mergePos` is in `previousList` it means that the lists got merged.\n\t\t\t\t\t// In this case, we need to fix insert position.\n\t\t\t\t\tif ( mergePos && mergePos.parent == previousList ) {\n\t\t\t\t\t\tviewPosition.offset--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Merge last inserted list with element after it.\n\t\t\tmergeViewLists( viewPosition.nodeBefore, viewPosition.nodeAfter );\n\t\t}\n\t}\n}\n\n/**\n * A special model to view converter introduced by {@link module:list/list~List List feature}. This converter takes care of\n * merging view lists after something is removed or moved from near them.\n *\n * Example:\n *\n *\t\t// Model:                        // View:\n *\t\t<listItem>foo</listItem>         <ul><li>foo</li></ul>\n *\t\t<paragraph>xxx</paragraph>       <p>xxx</p>\n *\t\t<listItem>bar</listItem>         <ul><li>bar</li></ul>\n *\n *\t\t// After change:                 // Correct view guaranteed by this converter:\n *\t\t<listItem>foo</listItem>         <ul>\n *\t\t<listItem>bar</listItem>             <li>foo</li>\n *\t\t                                     <li>bar</li>\n *\t\t                                 </ul>\n *\n * @see module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:remove\n * @param {module:utils/eventinfo~EventInfo} evt Object containing information about the fired event.\n * @param {Object} data Additional information about the change.\n * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n * @param {Object} conversionApi Conversion interface.\n */\nexport function modelViewMergeAfter( evt, data, consumable, conversionApi ) {\n\tif ( !data.item.is( 'listItem' ) ) {\n\t\tconst viewPosition = conversionApi.mapper.toViewPosition( data.sourcePosition );\n\t\tconst viewItemPrev = viewPosition.nodeBefore;\n\t\tconst viewItemNext = viewPosition.nodeAfter;\n\n\t\t// Merge lists if something (remove, move) was done from inside of list.\n\t\t// Merging will be done only if both items are view lists of the same type.\n\t\t// The check is done inside the helper function.\n\t\tmergeViewLists( viewItemPrev, viewItemNext );\n\t}\n}\n\n/**\n * View to model converter that converts view `<li>` elements into `listItem` model elements.\n *\n * To set correct values of `type` and `indent` attribute the converter:\n * * checks `<li>`'s parent,\n * * passes `data.indent` value when `<li>`'s sub-items are converted.\n *\n * @see module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher#event:element\n * @param {module:utils/eventinfo~EventInfo} evt Object containing information about the fired event.\n * @param {Object} data Object containing conversion input and a placeholder for conversion output and possibly other values.\n * @param {module:engine/conversion/viewconsumable~ViewConsumable} consumable Values to consume.\n * @param {Object} conversionApi Conversion interface to be used by callback.\n */\nexport function viewModelConverter( evt, data, consumable, conversionApi ) {\n\tif ( consumable.consume( data.input, { name: true } ) ) {\n\t\t// 1. Create `listItem` model element.\n\t\tconst listItem = new ModelElement( 'listItem' );\n\n\t\t// 2. Handle `listItem` model element attributes.\n\t\tdata.indent = data.indent ? data.indent : 0;\n\n\t\tconst type = data.input.parent.name == 'ul' ? 'bulleted' : 'numbered';\n\t\tlistItem.setAttribute( 'type', type );\n\t\tlistItem.setAttribute( 'indent', data.indent );\n\n\t\t// 3. Handle `<li>` children.\n\t\tdata.context.push( listItem );\n\n\t\t// `listItem`s created recursively should have bigger indent.\n\t\tdata.indent++;\n\n\t\t// `listItem`s will be kept in flat structure.\n\t\tconst items = new ModelDocumentFragment();\n\t\titems.appendChildren( listItem );\n\n\t\t// Check all children of the converted `<li>`.\n\t\t// At this point we assume there are no \"whitespace\" view text nodes in view list, between view list items.\n\t\t// This should be handled by `<ul>` and `<ol>` converters.\n\t\tfor ( const child of data.input.getChildren() ) {\n\t\t\t// Let's convert the child.\n\t\t\tconst converted = conversionApi.convertItem( child, consumable, data );\n\n\t\t\t// If this is a view list element, we will convert it and concat the result (`listItem` model elements)\n\t\t\t// with already gathered results (in `items` array). `converted` should be a `ModelDocumentFragment`.\n\t\t\tif ( child.name == 'ul' || child.name == 'ol' ) {\n\t\t\t\titems.appendChildren( Array.from( converted.getChildren() ) );\n\t\t\t}\n\t\t\t// If it was not a list it was a \"regular\" list item content. Just append it to `listItem`.\n\t\t\telse {\n\t\t\t\tmodelWriter.insert( ModelPosition.createAt( listItem, 'end' ), converted );\n\t\t\t}\n\t\t}\n\n\t\tdata.indent--;\n\t\tdata.context.pop();\n\n\t\tdata.output = items;\n\t}\n}\n\n/**\n * View to model converter for `<ul>` and `<ol>` view elements, that cleans the input view out of garbage.\n * This is mostly to clean white spaces from between `<li>` view elements inside the view list element, however also\n * incorrect data can be cleared if the view was incorrect.\n *\n * @see module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher#event:element\n * @param {module:utils/eventinfo~EventInfo} evt Object containing information about the fired event.\n * @param {Object} data Object containing conversion input and a placeholder for conversion output and possibly other values.\n * @param {module:engine/conversion/viewconsumable~ViewConsumable} consumable Values to consume.\n */\nexport function cleanList( evt, data, consumable ) {\n\tif ( consumable.test( data.input, { name: true } ) ) {\n\t\t// Caching children because when we start removing them iterating fails.\n\t\tconst children = Array.from( data.input.getChildren() );\n\n\t\tfor ( const child of children ) {\n\t\t\tif ( !child.is( 'li' ) ) {\n\t\t\t\tchild.remove();\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * View to model converter for `<li>`, that cleans white space formatting from the input view.\n *\n * @see module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher#event:element\n * @param {module:utils/eventinfo~EventInfo} evt Object containing information about the fired event.\n * @param {Object} data Object containing conversion input and a placeholder for conversion output and possibly other values.\n * @param {module:engine/conversion/viewconsumable~ViewConsumable} consumable Values to consume.\n */\nexport function cleanListItem( evt, data, consumable ) {\n\tif ( consumable.test( data.input, { name: true } ) ) {\n\t\tif ( data.input.childCount === 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst children = [ ...data.input.getChildren() ];\n\n\t\tlet foundList = false;\n\t\tlet firstNode = true;\n\n\t\tfor ( const child of children ) {\n\t\t\tif ( foundList && !child.is( 'ul' ) && !child.is( 'ol' ) ) {\n\t\t\t\tchild.remove();\n\t\t\t}\n\n\t\t\tif ( child.is( 'text' ) ) {\n\t\t\t\t// If this is the first node and it's a text node, left-trim it.\n\t\t\t\tif ( firstNode ) {\n\t\t\t\t\tchild.data = child.data.replace( /^\\s+/, '' );\n\t\t\t\t}\n\n\t\t\t\t// If this is the last text node before <ul> or <ol>, right-trim it.\n\t\t\t\tif ( !child.nextSibling || ( child.nextSibling.is( 'ul' ) || child.nextSibling.is( 'ol' ) ) ) {\n\t\t\t\t\tchild.data = child.data.replace( /\\s+$/, '' );\n\t\t\t\t}\n\t\t\t} else if ( child.is( 'ul' ) || child.is( 'ol' ) ) {\n\t\t\t\t// If this is a <ul> or <ol>, do not process it, just mark that we already visited list element.\n\t\t\t\tfoundList = true;\n\t\t\t}\n\n\t\t\tfirstNode = false;\n\t\t}\n\t}\n}\n\n/**\n * Callback for model position to view position mapping for {@link module:engine/conversion/mapper~Mapper}. The callback fixes positions\n * between `listItem` elements, that would be incorrectly mapped because of how list items are represented in model\n * and view.\n *\n * @see module:engine/conversion/mapper~Mapper#event:modelToViewPosition\n * @param {module:utils/eventinfo~EventInfo} evt Object containing information about the fired event.\n * @param {Object} data Object containing additional data and placeholder for mapping result.\n */\nexport function modelToViewPosition( evt, data ) {\n\tconst modelItem = data.modelPosition.nodeBefore;\n\n\tif ( modelItem && modelItem.is( 'listItem' ) ) {\n\t\tconst viewItem = data.mapper.toViewElement( modelItem );\n\t\tconst topmostViewList = viewItem.getAncestors().find( element => element.is( 'ul' ) || element.is( 'ol' ) );\n\t\tconst walker = new ViewTreeWalker( {\n\t\t\tstartPosition: ViewPosition.createAt( viewItem, 0 )\n\t\t} );\n\n\t\tfor ( const value of walker ) {\n\t\t\tif ( value.type == 'elementStart' && value.item.is( 'li' ) ) {\n\t\t\t\tdata.viewPosition = value.previousPosition;\n\n\t\t\t\tbreak;\n\t\t\t} else if ( value.type == 'elementEnd' && value.item == topmostViewList ) {\n\t\t\t\tdata.viewPosition = value.nextPosition;\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Callback for view position to model position mapping for {@link module:engine/conversion/mapper~Mapper}. The callback fixes positions\n * between `<li>` elements, that would be incorrectly mapped because of how list items are represented in model\n * and view.\n *\n * @see module:engine/conversion/mapper~Mapper#event:viewToModelPosition\n * @param {module:utils/eventinfo~EventInfo} evt Object containing information about the fired event.\n * @param {Object} data Object containing additional data and placeholder for mapping result.\n */\nexport function viewToModelPosition( evt, data ) {\n\tconst viewPos = data.viewPosition;\n\tconst viewParent = viewPos.parent;\n\tconst mapper = data.mapper;\n\n\tif ( viewParent.name == 'ul' || viewParent.name == 'ol' ) {\n\t\t// Position is directly in <ul> or <ol>.\n\t\tif ( !viewPos.isAtEnd ) {\n\t\t\t// If position is not at the end, it must be before <li>.\n\t\t\t// Get that <li>, map it to `listItem` and set model position before that `listItem`.\n\t\t\tconst modelNode = mapper.toModelElement( viewPos.nodeAfter );\n\n\t\t\tdata.modelPosition = ModelPosition.createBefore( modelNode );\n\t\t} else {\n\t\t\t// Position is at the end of <ul> or <ol>, so there is no <li> after it to be mapped.\n\t\t\t// There is <li> before the position, but we cannot just map it to `listItem` and set model position after it,\n\t\t\t// because that <li> may contain nested items.\n\t\t\t// We will check \"model length\" of that <li>, in other words - how many `listItem`s are in that <li>.\n\t\t\tconst modelNode = mapper.toModelElement( viewPos.nodeBefore );\n\t\t\tconst modelLength = mapper.getModelLength( viewPos.nodeBefore );\n\n\t\t\t// Then we get model position before mapped `listItem` and shift it accordingly.\n\t\t\tdata.modelPosition = ModelPosition.createBefore( modelNode ).getShiftedBy( modelLength );\n\t\t}\n\n\t\tevt.stop();\n\t} else if ( viewParent.name == 'li' && viewPos.nodeBefore && ( viewPos.nodeBefore.name == 'ul' || viewPos.nodeBefore.name == 'ol' ) ) {\n\t\t// In most cases when view position is in <li> it is in text and this is a correct position.\n\t\t// However, if position is after <ul> or <ol> we have to fix it -- because in model <ul>/<ol> are not in the `listItem`.\n\t\tconst modelNode = mapper.toModelElement( viewParent );\n\n\t\t// Check all <ul>s and <ol>s that are in the <li> but before mapped position.\n\t\t// Get model length of those elements and then add it to the offset of `listItem` mapped to the original <li>.\n\t\tlet modelLength = 1; // Starts from 1 because the original <li> has to be counted in too.\n\t\tlet viewList = viewPos.nodeBefore;\n\n\t\twhile ( viewList && ( viewList.is( 'ul' ) || viewList.is( 'ol' ) ) ) {\n\t\t\tmodelLength += mapper.getModelLength( viewList );\n\n\t\t\tviewList = viewList.previousSibling;\n\t\t}\n\n\t\tdata.modelPosition = ModelPosition.createBefore( modelNode ).getShiftedBy( modelLength );\n\n\t\tevt.stop();\n\t}\n}\n\n/**\n * Post fixer that reacts to changes on document and fixed incorrect model states.\n *\n * Example:\n *\n *\t\t<listItem type=\"bulleted\" indent=0>Item 1</listItem>\n *\t\t<listItem type=\"bulleted\" indent=1>Item 2</listItem>   <--- this is removed.\n *\t\t<listItem type=\"bulleted\" indent=2>Item 3</listItem>\n *\n * Should become:\n *\n *\t\t<listItem type=\"bulleted\" indent=0>Item 1</listItem>\n *\t\t<listItem type=\"bulleted\" indent=1>Item 3</listItem>   <--- note that indent got postfixed.\n *\n * @param {module:engine/model/document~Document} document Document to observe.\n * @returns {Function} Callback to be attached to {@link module:engine/model/document~Document#event:change document change event}.\n */\nexport function modelChangePostFixer( document ) {\n\treturn ( evt, type, changes, batch ) => {\n\t\tif ( type == 'remove' ) {\n\t\t\t// Fix list items after the cut-out range.\n\t\t\t// This fix is needed if items in model after cut-out range have now wrong indents compared to their previous siblings.\n\t\t\t_fixItemsIndent( changes.sourcePosition, document, batch );\n\t\t\t// This fix is needed if two different nested lists got merged, change types of list items \"below\".\n\t\t\t_fixItemsType( changes.sourcePosition, false, document, batch );\n\t\t} else if ( type == 'move' ) {\n\t\t\t// Fix list items after the cut-out range.\n\t\t\t// This fix is needed if items in model after cut-out range have now wrong indents compared to their previous siblings.\n\t\t\t_fixItemsIndent( changes.sourcePosition, document, batch );\n\t\t\t// This fix is needed if two different nested lists got merged, change types of list items \"below\".\n\t\t\t_fixItemsType( changes.sourcePosition, false, document, batch );\n\n\t\t\t// Fix items in moved range.\n\t\t\t// This fix is needed if inserted items are too deeply intended.\n\t\t\t_fixItemsIndent( changes.range.start, document, batch );\n\t\t\t// This fix is needed if one or more first inserted items have different type.\n\t\t\t_fixItemsType( changes.range.start, false, document, batch );\n\n\t\t\t// Fix list items after inserted range.\n\t\t\t// This fix is needed if items in model after inserted range have wrong indents.\n\t\t\t_fixItemsIndent( changes.range.end, document, batch );\n\t\t\t// This fix is needed if one or more last inserted items have different type.\n\t\t\t_fixItemsType( changes.range.end, true, document, batch );\n\t\t} else if ( type == 'rename' && changes.oldName == 'listItem' && changes.newName != 'listItem' ) {\n\t\t\tconst element = changes.element;\n\n\t\t\t// Element name is changed from list to something else. Remove useless attributes.\n\t\t\tdocument.enqueueChanges( () => {\n\t\t\t\tbatch.removeAttribute( element, 'indent' ).removeAttribute( element, 'type' );\n\t\t\t} );\n\n\t\t\tconst changePos = ModelPosition.createAfter( changes.element );\n\n\t\t\t// Fix list items after the renamed element.\n\t\t\t// This fix is needed if there are items after renamed element, those items should start from indent = 0.\n\t\t\t_fixItemsIndent( changePos, document, batch );\n\t\t} else if ( type == 'insert' ) {\n\t\t\t// Fix list items in inserted range.\n\t\t\t// This fix is needed if inserted items are too deeply intended.\n\t\t\t_fixItemsIndent( changes.range.start, document, batch );\n\t\t\t// This fix is needed if one or more first inserted items have different type.\n\t\t\t_fixItemsType( changes.range.start, false, document, batch );\n\n\t\t\t// Fix list items after inserted range.\n\t\t\t// This fix is needed if items in model after inserted range have wrong indents.\n\t\t\t_fixItemsIndent( changes.range.end, document, batch );\n\t\t\t// This fix is needed if one or more last inserted items have different type.\n\t\t\t_fixItemsType( changes.range.end, true, document, batch );\n\t\t}\n\t};\n}\n\n// Helper function for post fixer callback. Performs fixing of model `listElement` items indent attribute. Checks the model at the\n// `changePosition`. Looks at the node before position where change occurred and uses that node as a reference for following list items.\nfunction _fixItemsIndent( changePosition, document, batch ) {\n\tlet nextItem = changePosition.nodeAfter;\n\n\tif ( nextItem && nextItem.name == 'listItem' ) {\n\t\tdocument.enqueueChanges( () => {\n\t\t\tconst prevItem = nextItem.previousSibling;\n\t\t\t// This is the maximum indent that following model list item may have.\n\t\t\tconst maxIndent = prevItem && prevItem.is( 'listItem' ) ? prevItem.getAttribute( 'indent' ) + 1 : 0;\n\n\t\t\t// Check how much the next item needs to be outdented.\n\t\t\tlet outdentBy = nextItem.getAttribute( 'indent' ) - maxIndent;\n\t\t\tconst items = [];\n\n\t\t\twhile ( nextItem && nextItem.name == 'listItem' && nextItem.getAttribute( 'indent' ) > maxIndent ) {\n\t\t\t\tif ( outdentBy > nextItem.getAttribute( 'indent' ) ) {\n\t\t\t\t\toutdentBy = nextItem.getAttribute( 'indent' );\n\t\t\t\t}\n\n\t\t\t\tconst newIndent = nextItem.getAttribute( 'indent' ) - outdentBy;\n\n\t\t\t\titems.push( { item: nextItem, indent: newIndent } );\n\n\t\t\t\tnextItem = nextItem.nextSibling;\n\t\t\t}\n\n\t\t\tif ( items.length > 0 ) {\n\t\t\t\t// Since we are outdenting list items, it is safer to start from the last one (it will maintain correct model state).\n\t\t\t\tfor ( const item of items.reverse() ) {\n\t\t\t\t\tbatch.setAttribute( item.item, 'indent', item.indent );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n}\n\n// Helper function for post fixer callback. Performs fixing of model nested `listElement` items type attribute.\n// Checks the model at the `changePosition`. Looks at nodes after/before that position and changes those items type\n// to the same as node before/after `changePosition`.\nfunction _fixItemsType( changePosition, fixPrevious, document, batch ) {\n\tlet item = changePosition[ fixPrevious ? 'nodeBefore' : 'nodeAfter' ];\n\n\tif ( !item || !item.is( 'listItem' ) || item.getAttribute( 'indent' ) === 0 ) {\n\t\t// !item - when last item got removed.\n\t\t// !item.is( 'listItem' ) - when first element to fix is not a list item already.\n\t\t// indent === 0 - do not fix if changes are done on top level lists.\n\t\treturn;\n\t}\n\n\tdocument.enqueueChanges( () => {\n\t\tconst refItem = _getBoundaryItemOfSameList( item, !fixPrevious );\n\n\t\tif ( !refItem || refItem == item ) {\n\t\t\t// !refItem - happens if first list item is inserted.\n\t\t\t// refItem == item - happens if last item is inserted.\n\t\t\treturn;\n\t\t}\n\n\t\tconst refIndent = refItem.getAttribute( 'indent' );\n\t\tconst refType = refItem.getAttribute( 'type' );\n\n\t\twhile ( item && item.is( 'listItem' ) && item.getAttribute( 'indent' ) >= refIndent ) {\n\t\t\tif ( item.getAttribute( 'type' ) != refType && item.getAttribute( 'indent' ) == refIndent ) {\n\t\t\t\tbatch.setAttribute( item, 'type', refType );\n\t\t\t}\n\n\t\t\titem = item[ fixPrevious ? 'previousSibling' : 'nextSibling' ];\n\t\t}\n\t} );\n}\n\n/**\n * Fixer for pasted content that includes list items.\n *\n * Fixes indent of pasted list items so the pasted items match correctly to the context they are pasted into.\n *\n * Example:\n *\n *\t\t<listItem type=\"bulleted\" indent=0>A</listItem>\n *\t\t<listItem type=\"bulleted\" indent=1>B^</listItem>\n *\t\t// At ^ paste:  <listItem type=\"bulleted\" indent=4>X</listItem>\n *\t\t//              <listItem type=\"bulleted\" indent=5>Y</listItem>\n *\t\t<listItem type=\"bulleted\" indent=2>C</listItem>\n *\n * Should become:\n *\n *\t\t<listItem type=\"bulleted\" indent=0>A</listItem>\n *\t\t<listItem type=\"bulleted\" indent=1>BX</listItem>\n *\t\t<listItem type=\"bulleted\" indent=2>Y/listItem>\n *\t\t<listItem type=\"bulleted\" indent=2>C</listItem>\n *\n * @param {module:engine/model/document~Document} document Document to observe.\n * @returns {Function} Callback to be attached to {@link module:engine/model/document~Document#event:change document change event}.\n */\nexport function modelIndentPasteFixer( evt, data ) {\n\t// Check whether inserted content starts from a `listItem`. If it does not, it means that there are some other\n\t// elements before it and there is no need to fix indents, because even if we insert that content into a list,\n\t// that list will be broken.\n\tlet item = data.content.getChild( 0 );\n\n\tif ( item.is( 'listItem' ) ) {\n\t\t// Get a reference list item. Inserted list items will be fixed according to that item.\n\t\tconst pos = data.selection.getFirstPosition();\n\t\tlet refItem = null;\n\n\t\tif ( pos.parent.is( 'listItem' ) ) {\n\t\t\trefItem = pos.parent;\n\t\t} else if ( pos.nodeBefore && pos.nodeBefore.is( 'listItem' ) ) {\n\t\t\trefItem = pos.nodeBefore;\n\t\t}\n\n\t\t// If there is `refItem` it means that we do insert list items into an existing list.\n\t\tif ( refItem ) {\n\t\t\t// First list item in `data` has indent equal to 0 (it is a first list item). It should have indent equal\n\t\t\t// to the indent of reference item. We have to fix the first item and all of it's children and following siblings.\n\t\t\t// Indent of all those items has to be adjusted to reference item.\n\t\t\tconst indentChange = refItem.getAttribute( 'indent' );\n\n\t\t\t// Fix only if there is anything to fix.\n\t\t\tif ( indentChange > 0 ) {\n\t\t\t\t// Adjust indent of all \"first\" list items in inserted data.\n\t\t\t\twhile ( item && item.is( 'listItem' ) ) {\n\t\t\t\t\titem.setAttribute( 'indent', item.getAttribute( 'indent' ) + indentChange );\n\n\t\t\t\t\titem = item.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Helper function that creates a `<ul><li></li></ul>` or (`<ol>`) structure out of given `modelItem` model `listItem` element.\n// Then, it binds created view list item (<li>) with model `listItem` element.\n// The function then returns created view list item (<li>).\nfunction generateLiInUl( modelItem, mapper ) {\n\tconst listType = modelItem.getAttribute( 'type' ) == 'numbered' ? 'ol' : 'ul';\n\tconst viewItem = new ViewListItemElement();\n\n\tconst viewList = new ViewContainerElement( listType, null );\n\tviewList.appendChildren( viewItem );\n\n\tmapper.bindElements( modelItem, viewItem );\n\n\treturn viewItem;\n}\n\n// Helper function that seeks for a list item sibling of given model item (or position) which meets given criteria.\n// `options` object may contain one or more of given values (by default they are `false`):\n// `options.getNext` - whether next or previous siblings should be checked (default = previous)\n// `options.checkAllSiblings` - whether all siblings or just the first one should be checked (default = only one),\n// `options.sameIndent` - whether sought sibling should have same indent (default = no),\n// `options.biggerIndent` - whether sought sibling should have bigger indent (default = no).\n// `options.smallerIndent` - whether sought sibling should have smaller indent (default = no).\n// `options.isMapped` - whether sought sibling must be mapped to view (default = no).\n// `options.mapper` - used to map model elements when `isMapped` option is set to true.\n// `options.indent` - used as reference item when first parameter is a position\n// Either `options.sameIndent` or `options.biggerIndent` should be set to `true`.\nfunction getSiblingListItem( modelItemOrPosition, options ) {\n\tconst direction = options.getNext ? 'nextSibling' : 'previousSibling';\n\tconst posDirection = options.getNext ? 'nodeAfter' : 'nodeBefore';\n\tconst checkAllSiblings = !!options.checkAllSiblings;\n\tconst sameIndent = !!options.sameIndent;\n\tconst biggerIndent = !!options.biggerIndent;\n\tconst smallerIndent = !!options.smallerIndent;\n\tconst isMapped = !!options.isMapped;\n\n\tconst indent = modelItemOrPosition instanceof ModelElement ? modelItemOrPosition.getAttribute( 'indent' ) : options.indent;\n\tlet item = modelItemOrPosition instanceof ModelElement ? modelItemOrPosition[ direction ] : modelItemOrPosition[ posDirection ];\n\n\twhile ( item && item.name == 'listItem' ) {\n\t\tconst itemIndent = item.getAttribute( 'indent' );\n\n\t\tif (\n\t\t\t( sameIndent && indent == itemIndent ) ||\n\t\t\t( biggerIndent && indent < itemIndent ) ||\n\t\t\t( smallerIndent && indent > itemIndent )\n\t\t) {\n\t\t\tif ( !isMapped || options.mapper.toViewElement( item ) ) {\n\t\t\t\treturn item;\n\t\t\t} else {\n\t\t\t\titem = item[ direction ];\n\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tif ( !checkAllSiblings ) {\n\t\t\treturn null;\n\t\t}\n\n\t\titem = item[ direction ];\n\t}\n\n\treturn null;\n}\n\n// Helper function that takes two parameters, that are expected to be view list elements, and merges them.\n// The merge happen only if both parameters are UL or OL elements.\nfunction mergeViewLists( firstList, secondList ) {\n\tif ( firstList && secondList && ( firstList.name == 'ul' || firstList.name == 'ol' ) && firstList.name == secondList.name ) {\n\t\treturn viewWriter.mergeContainers( ViewPosition.createAfter( firstList ) );\n\t}\n\n\treturn null;\n}\n\n// Helper function that takes model list item element `modelItem`, corresponding view list item element `injectedItem`\n// that is not added to the view and is inside a view list element (`ul` or `ol`) and is that's list only child.\n// The list is inserted at correct position (element breaking may be needed) and then merged with it's siblings.\n// See comments below to better understand the algorithm.\nfunction injectViewList( modelItem, injectedItem, mapper, removePosition ) {\n\tconst injectedList = injectedItem.parent;\n\n\t// Position where view list will be inserted.\n\tlet insertPosition;\n\n\t// 1. Find previous list item that has same or smaller indent. Basically we are looking for a first model item\n\t// that is \"parent\" or \"sibling\" if injected model item.\n\t// If there is no such list item, it means that injected list item is the first item in \"its list\".\n\tlet prevItem = getSiblingListItem( modelItem, { sameIndent: true, smallerIndent: true, checkAllSiblings: true } );\n\n\tif ( prevItem && prevItem.getAttribute( 'indent' ) == modelItem.getAttribute( 'indent' ) ) {\n\t\t// There is a list item with same indent - we found same-level sibling.\n\t\t// Break the list after it. Inserted view item will be inserted in the broken space.\n\t\tconst viewItem = mapper.toViewElement( prevItem );\n\t\tinsertPosition = viewWriter.breakContainer( ViewPosition.createAfter( viewItem ) );\n\t} else {\n\t\t// There is no list item with same indent. Check previous model item.\n\t\tprevItem = modelItem.previousSibling;\n\n\t\tif ( prevItem && prevItem.name == 'listItem' ) {\n\t\t\t// // If it is a list item, it has to have lower indent.\n\t\t\t// // It means that inserted item should be added to it as its nested item.\n\t\t\t// insertPosition = mapper.toViewPosition( ModelPosition.createAt( prevItem, 'end' ) );\n\t\t\t// ^ ACTUALLY NOT BECAUSE FIXING DOES NOT WORK PROPERLY.\n\t\t\t// TODO: fix this part of code when conversion from model to view is done on `changesDone` event or post/prefixing is better.\n\t\t\tif ( prevItem.getAttribute( 'indent' ) < modelItem.getAttribute( 'indent' ) ) {\n\t\t\t\t// Lower indent, correct model, previous item is a parent and this model item is its nested item.\n\t\t\t\tinsertPosition = mapper.toViewPosition( ModelPosition.createAt( prevItem, 'end' ) );\n\t\t\t} else {\n\t\t\t\t// Higher indent, incorrect model that is probably being fixed. Inject the view list where it was.\n\t\t\t\t// TODO: get rid of `removePosition` when conversion is done on `changesDone`.\n\t\t\t\tif ( removePosition.parent.is( 'ul' ) || removePosition.parent.is( 'ol' ) ) {\n\t\t\t\t\tinsertPosition = viewWriter.breakContainer( removePosition );\n\t\t\t\t} else {\n\t\t\t\t\tinsertPosition = removePosition;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Previous item is not a list item (or does not exist at all).\n\t\t\t// Just map the position and insert the view item at mapped position.\n\t\t\tinsertPosition = mapper.toViewPosition( ModelPosition.createBefore( modelItem ) );\n\t\t}\n\t}\n\n\t// Insert the view item.\n\tviewWriter.insert( insertPosition, injectedList );\n\n\t// 2. Handle possible children of injected model item.\n\t// We have to check if next list item in model has bigger indent. If it has, it means that it and possibly\n\t// some following list items should be nested in the injected view item.\n\t// Look only after model elements that are already mapped to view. Some following model items might not be mapped\n\t// if multiple items in model were inserted/moved at once.\n\tconst nextItem = getSiblingListItem(\n\t\tmodelItem,\n\t\t{ biggerIndent: true, getNext: true, isMapped: true, mapper }\n\t);\n\n\tif ( nextItem ) {\n\t\tconst viewItem = mapper.toViewElement( nextItem );\n\n\t\t// Break the list between found view item and its preceding `<li>`s.\n\t\tviewWriter.breakContainer( ViewPosition.createBefore( viewItem ) );\n\n\t\t// The broken (\"lower\") part will be moved as nested children of the inserted view item.\n\t\tconst sourceStart = ViewPosition.createBefore( viewItem.parent );\n\n\t\tconst lastModelItem = _getBoundaryItemOfSameList( nextItem, false );\n\t\tconst lastViewItem = mapper.toViewElement( lastModelItem );\n\t\tconst sourceEnd = viewWriter.breakContainer( ViewPosition.createAfter( lastViewItem ) );\n\t\tconst sourceRange = new ViewRange( sourceStart, sourceEnd );\n\n\t\tconst targetPosition = ViewPosition.createAt( injectedItem, 'end' );\n\t\tviewWriter.move( sourceRange, targetPosition );\n\t}\n\n\t// Merge inserted view list with its possible neighbour lists.\n\tmergeViewLists( injectedList, injectedList.nextSibling );\n\tmergeViewLists( injectedList.previousSibling, injectedList );\n}\n\n// Helper function that takes all children of given `viewRemovedItem` and moves them in a correct place, according\n// to other given parameters.\nfunction hoistNestedLists( nextIndent, modelRemoveStartPosition, viewRemoveStartPosition, viewRemovedItem, mapper ) {\n\t// Find correct previous model list item element.\n\t// The element has to have either same or smaller indent than given reference indent.\n\t// This will be the model element which will get nested items (if it has smaller indent) or sibling items (if it has same indent).\n\t// Keep in mind that such element might not be found, if removed item was the first item.\n\tconst prevModelItem = getSiblingListItem( modelRemoveStartPosition, {\n\t\tsameIndent: true,\n\t\tsmallerIndent: true,\n\t\tcheckAllSiblings: true,\n\t\tindent: nextIndent\n\t} );\n\n\t// Indent of found element or `null` if the element has not been found.\n\tconst prevIndent = prevModelItem ? prevModelItem.getAttribute( 'indent' ) : null;\n\n\tlet insertPosition;\n\n\tif ( !prevModelItem ) {\n\t\t// If element has not been found, simply insert lists at the position where the removed item was:\n\t\t//\n\t\t// Lorem ipsum.\n\t\t// 1 --------           <--- this is removed, no previous list item, put nested items in place of removed item.\n\t\t//   1.1 --------       <--- this is reference indent.\n\t\t//     1.1.1 --------\n\t\t//     1.1.2 --------\n\t\t//   1.2 --------\n\t\t//\n\t\t// Becomes:\n\t\t//\n\t\t// Lorem ipsum.\n\t\t// 1.1 --------\n\t\t//   1.1.1 --------\n\t\t//   1.1.2 --------\n\t\t// 1.2 --------\n\t\tinsertPosition = viewRemoveStartPosition;\n\t} else if ( prevIndent == nextIndent ) {\n\t\t// If element has been found and has same indent as reference indent it means that nested items should\n\t\t// become siblings of found element:\n\t\t//\n\t\t// 1 --------\n\t\t//   1.1 --------\n\t\t//   1.2 --------       <--- this is `prevModelItem`.\n\t\t// 2 --------           <--- this is removed, previous list item has indent same as reference indent.\n\t\t//   2.1 --------       <--- this is reference indent, this and 2.2 should become siblings of 1.2.\n\t\t//   2.2 --------\n\t\t//\n\t\t// Becomes:\n\t\t//\n\t\t// 1 --------\n\t\t//   1.1 --------\n\t\t//   1.2 --------\n\t\t//   2.1 --------\n\t\t//   2.2 --------\n\t\tconst prevViewList = mapper.toViewElement( prevModelItem ).parent;\n\t\tinsertPosition = ViewPosition.createAfter( prevViewList );\n\t} else {\n\t\t// If element has been found and has smaller indent as reference indent it means that nested items\n\t\t// should become nested items of found item:\n\t\t//\n\t\t// 1 --------           <--- this is `prevModelItem`.\n\t\t//   1.1 --------       <--- this is removed, previous list item has indent smaller than reference indent.\n\t\t//     1.1.1 --------   <--- this is reference indent, this and 1.1.1 should become nested items of 1.\n\t\t//     1.1.2 --------\n\t\t//   1.2 --------\n\t\t//\n\t\t// Becomes:\n\t\t//\n\t\t// 1 --------\n\t\t//   1.1.1 --------\n\t\t//   1.1.2 --------\n\t\t//   1.2 --------\n\t\t//\n\t\t// Note: in this case 1.1.1 have indent 2 while 1 have indent 0. In model that should not be possible,\n\t\t// because following item may have indent bigger only by one. But this is fixed by postfixer.\n\t\tconst modelPosition = ModelPosition.createAt( prevModelItem, 'end' );\n\t\tinsertPosition = mapper.toViewPosition( modelPosition );\n\t}\n\n\t// Handle multiple lists. This happens if list item has nested numbered and bulleted lists. Following lists\n\t// are inserted after the first list (no need to recalculate insertion position for them).\n\tfor ( const child of [ ...viewRemovedItem.getChildren() ] ) {\n\t\tif ( child.is( 'ul' ) || child.is( 'ol' ) ) {\n\t\t\tinsertPosition = viewWriter.move( ViewRange.createOn( child ), insertPosition ).end;\n\n\t\t\tmergeViewLists( child, child.nextSibling );\n\t\t\tmergeViewLists( child.previousSibling, child );\n\t\t}\n\t}\n}\n\n// Helper function to obtain the first or the last model list item which is in on the same indent level as given `item`.\nfunction _getBoundaryItemOfSameList( item, getFirst ) {\n\tconst indent = item.getAttribute( 'indent' );\n\tconst direction = getFirst ? 'previousSibling' : 'nextSibling';\n\n\tlet result = item;\n\n\twhile ( item[ direction ] && item[ direction ].is( 'listItem' ) && item[ direction ].getAttribute( 'indent' ) >= indent ) {\n\t\titem = item[ direction ];\n\n\t\tif ( item.getAttribute( 'indent' ) == indent ) {\n\t\t\tresult = item;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-list/src/converters.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module list/indentcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command/command';\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n\n/**\n * The list indent command. It is used by the {@link module:list/list~List list feature}.\n *\n * @extends core.command.Command\n */\nexport default class IndentCommand extends Command {\n\t/**\n\t * Creates an instance of the command.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor Editor instance.\n\t * @param {'forward'|'backward'} indentDirection Direction of indent. If it is equal to `backward`, the command\n\t * will outdent a list item.\n\t */\n\tconstructor( editor, indentDirection ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * By how much the command will change list item's indent attribute.\n\t\t *\n\t\t * @readonly\n\t\t * @private\n\t\t * @member {Number}\n\t\t */\n\t\tthis._indentBy = indentDirection == 'forward' ? 1 : -1;\n\n\t\tthis.listenTo( editor.document, 'changesDone', () => {\n\t\t\tthis.refreshState();\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_doExecute() {\n\t\tconst doc = this.editor.document;\n\t\tconst batch = doc.batch();\n\t\tlet itemsToChange = Array.from( doc.selection.getSelectedBlocks() );\n\n\t\tdoc.enqueueChanges( () => {\n\t\t\tconst lastItem = itemsToChange[ itemsToChange.length - 1 ];\n\n\t\t\t// Indenting a list item should also indent all the items that are already sub-items of indented item.\n\t\t\tlet next = lastItem.nextSibling;\n\n\t\t\t// Check all items after last indented item, as long as their indent is bigger than indent of that item.\n\t\t\twhile ( next && next.name == 'listItem' && next.getAttribute( 'indent' ) > lastItem.getAttribute( 'indent' ) ) {\n\t\t\t\titemsToChange.push( next );\n\n\t\t\t\tnext = next.nextSibling;\n\t\t\t}\n\n\t\t\t// We need to be sure to keep model in correct state after each small change, because converters\n\t\t\t// bases on that state and assumes that model is correct.\n\t\t\t// Because of that, if the command outdents items, we will outdent them starting from the last item, as\n\t\t\t// it is safer.\n\t\t\tif ( this._indentBy < 0 ) {\n\t\t\t\titemsToChange = itemsToChange.reverse();\n\t\t\t}\n\n\t\t\tfor ( const item of itemsToChange ) {\n\t\t\t\tconst indent = item.getAttribute( 'indent' ) + this._indentBy;\n\n\t\t\t\t// If indent is lower than 0, it means that the item got outdented when it was not indented.\n\t\t\t\t// This means that we need to convert that list item to paragraph.\n\t\t\t\tif ( indent < 0 ) {\n\t\t\t\t\t// To keep the model as correct as possible, first rename listItem, then remove attributes,\n\t\t\t\t\t// as listItem without attributes is very incorrect and will cause problems in converters.\n\t\t\t\t\t// No need to remove attributes, will be removed by post fixer.\n\t\t\t\t\tbatch.rename( item, 'paragraph' );\n\t\t\t\t}\n\t\t\t\t// If indent is >= 0, change the attribute value.\n\t\t\t\telse {\n\t\t\t\t\tbatch.setAttribute( item, 'indent', indent );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check whether some of changed list items' type should not be fixed.\n\t\t\t// But first, reverse `itemsToChange` again -- we always want to perform those fixes starting from first item (source-wise).\n\t\t\tif ( this._indentBy < 0 ) {\n\t\t\t\titemsToChange = itemsToChange.reverse();\n\t\t\t}\n\n\t\t\tfor ( const item of itemsToChange ) {\n\t\t\t\t_fixType( item, batch );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_checkEnabled() {\n\t\t// Check whether any of position's ancestor is a list item.\n\t\tconst listItem = first( this.editor.document.selection.getSelectedBlocks() );\n\n\t\t// If selection is not in a list item, the command is disabled.\n\t\tif ( !listItem || !listItem.is( 'listItem' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( this._indentBy > 0 ) {\n\t\t\t// Cannot indent first item in it's list. Check if before `listItem` is a list item that is in same list.\n\t\t\t// To be in the same list, the item has to have same attributes and cannot be \"split\" by an item with lower indent.\n\t\t\tconst indent = listItem.getAttribute( 'indent' );\n\t\t\tconst type = listItem.getAttribute( 'type' );\n\n\t\t\tlet prev = listItem.previousSibling;\n\n\t\t\twhile ( prev && prev.is( 'listItem' ) && prev.getAttribute( 'indent' ) >= indent ) {\n\t\t\t\tif ( prev.getAttribute( 'indent' ) == indent ) {\n\t\t\t\t\t// The item is on the same level.\n\t\t\t\t\t// If it has same type, it means that we found a preceding sibling from the same list.\n\t\t\t\t\t// If it does not have same type, it means that `listItem` is on different list (this can happen only\n\t\t\t\t\t// on top level lists, though).\n\t\t\t\t\treturn prev.getAttribute( 'type' ) == type;\n\t\t\t\t}\n\n\t\t\t\tprev = prev.previousSibling;\n\t\t\t}\n\n\t\t\t// Could not find similar list item, this means that `listItem` is first in its list.\n\t\t\treturn false;\n\t\t}\n\n\t\t// If we are outdenting it is enough to be in list item. Every list item can always be outdented.\n\t\treturn true;\n\t}\n}\n\n// Fixes type of `item` element after it was indented/outdented. Looks for a sibling of `item` that has the same\n// indent and sets `item`'s type to the same as that sibling.\nfunction _fixType( item, batch ) {\n\t// Find a preceding sibling of `item` that is a list item of the same list as `item`.\n\tconst prev = _seekListItem( item, false );\n\n\t// If found, fix type.\n\tif ( prev ) {\n\t\tbatch.setAttribute( item, 'type', prev.getAttribute( 'type' ) );\n\n\t\treturn;\n\t}\n\n\t// If not found, find a following sibling of `item` that is a list item of the same list as `item`.\n\tconst next = _seekListItem( item, true );\n\n\t// If found, fix type.\n\tif ( next ) {\n\t\tbatch.setAttribute( item, 'type', next.getAttribute( 'type' ) );\n\t}\n}\n\n// Seeks for a list item that has same indent as given `item`. May look through next siblings (`seekForward = true`) or\n// previous siblings (`seekForward = false`). Returns found list item or `null` if item has not been found.\nfunction _seekListItem( item, seekForward ) {\n\tlet result = item[ seekForward ? 'nextSibling' : 'previousSibling' ];\n\n\t// Look for the previous/next sibling that has same indent and is before a list item element with lower indent.\n\t// If elements are split by an element with lower indent, they are on different lists.\n\twhile ( result && result.is( 'listItem' ) && result.getAttribute( 'indent' ) >= item.getAttribute( 'indent' ) ) {\n\t\tif ( result.getAttribute( 'indent' ) == item.getAttribute( 'indent' ) ) {\n\t\t\t// We found sibling that is on the same list.\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = result[ seekForward ? 'nextSibling' : 'previousSibling' ];\n\t}\n\n\treturn null;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-list/src/indentcommand.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module list/list\n */\n\nimport ListEngine from './listengine';\n\nimport numberedListIcon from '../theme/icons/numberedlist.svg';\nimport bulletedListIcon from '../theme/icons/bulletedlist.svg';\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport { parseKeystroke } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\n\n/**\n * The lists feature. It introduces the `numberedList` and `bulletedList` buttons which\n * allows to convert paragraphs to/from list items and indent/outdent them.\n *\n * See also {@link module:list/listengine~ListEngine}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class List extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ListEngine ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'list/list';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\t// Create two buttons and link them with numberedList and bulletedList commands.\n\t\tconst t = this.editor.t;\n\t\tthis._addButton( 'numberedList', t( 'Numbered List' ), numberedListIcon );\n\t\tthis._addButton( 'bulletedList', t( 'Bulleted List' ), bulletedListIcon );\n\n\t\t// Overwrite default enter key behavior.\n\t\t// If enter key is pressed with selection collapsed in empty list item, outdent it instead of breaking it.\n\t\tthis.listenTo( this.editor.editing.view, 'enter', ( evt, data ) => {\n\t\t\tconst doc = this.editor.document;\n\t\t\tconst positionParent = doc.selection.getLastPosition().parent;\n\n\t\t\tif ( doc.selection.isCollapsed && positionParent.name == 'listItem' && positionParent.isEmpty ) {\n\t\t\t\tthis.editor.execute( 'outdentList' );\n\n\t\t\t\tdata.preventDefault();\n\t\t\t\tevt.stop();\n\t\t\t}\n\t\t} );\n\n\t\t// Add tab key support.\n\t\t// When in list item, pressing tab should indent list item, if possible.\n\t\t// Pressing Shift+Tab shout outdent list item.\n\t\tthis.listenTo( this.editor.editing.view, 'keydown', ( evt, data ) => {\n\t\t\tlet commandName;\n\n\t\t\tif ( data.keystroke == parseKeystroke( 'Tab' ) ) {\n\t\t\t\tcommandName = 'indentList';\n\t\t\t} else if ( data.keystroke == parseKeystroke( 'Shift+Tab' ) ) {\n\t\t\t\tcommandName = 'outdentList';\n\t\t\t}\n\n\t\t\tif ( commandName ) {\n\t\t\t\tconst command = this.editor.commands.get( commandName );\n\n\t\t\t\tif ( command.isEnabled ) {\n\t\t\t\t\tthis.editor.execute( commandName );\n\n\t\t\t\t\tdata.preventDefault();\n\t\t\t\t\tevt.stop();\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Helper method for initializing a button and linking it with an appropriate command.\n\t *\n\t * @private\n\t * @param {String} commandName Name of the command.\n\t * @param {Object} label Button label.\n\t * @param {String} icon Source of the icon.\n\t */\n\t_addButton( commandName, label, icon ) {\n\t\tconst editor = this.editor;\n\t\tconst command = editor.commands.get( commandName );\n\n\t\teditor.ui.componentFactory.add( commandName, locale => {\n\t\t\tconst buttonView = new ButtonView( locale );\n\n\t\t\tbuttonView.set( {\n\t\t\t\tlabel,\n\t\t\t\ticon,\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\t// Bind button model to command.\n\t\t\tbuttonView.bind( 'isOn', 'isEnabled' ).to( command, 'value', 'isEnabled' );\n\n\t\t\t// Execute command.\n\t\t\tthis.listenTo( buttonView, 'execute', () => editor.execute( commandName ) );\n\n\t\t\treturn buttonView;\n\t\t} );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-list/src/list.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module list/listcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command/command';\nimport Position from '@ckeditor/ckeditor5-engine/src/model/position';\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n\n/**\n * The list command. It is used by the {@link module:list/list~List list feature}.\n *\n * @extends module:core/command/command~Command\n */\nexport default class ListCommand extends Command {\n\t/**\n\t * Creates an instance of the command.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor Editor instance.\n\t * @param {'numbered'|'bulleted'} type List type that will be handled by this command.\n\t */\n\tconstructor( editor, type ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The type of list created by the command.\n\t\t *\n\t\t * @readonly\n\t\t * @member {'numbered'|'bulleted'}\n\t\t */\n\t\tthis.type = type == 'bulleted' ? 'bulleted' : 'numbered';\n\n\t\t/**\n\t\t * Flag indicating whether the command is active, which means that selection starts in a list of the same type.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #value\n\t\t */\n\t\tthis.set( 'value', false );\n\n\t\t// Listen on selection and document changes and set the current command's value.\n\t\tthis.listenTo( editor.document, 'changesDone', () => {\n\t\t\tthis.refreshValue();\n\t\t\tthis.refreshState();\n\t\t} );\n\t}\n\n\t/**\n\t * Sets command's value based on the document selection.\n\t */\n\trefreshValue() {\n\t\t// Check whether closest `listItem` ancestor of the position has a correct type.\n\t\tconst listItem = first( this.editor.document.selection.getSelectedBlocks() );\n\n\t\tthis.value = listItem && listItem.is( 'listItem' ) && listItem.getAttribute( 'type' ) == this.type;\n\t}\n\n\t/**\n\t * Executes command.\n\t *\n\t * @protected\n\t * @param {Object} [options] Options for executed command.\n\t * @param {module:engine/model/batch~Batch} [options.batch] Batch to collect all the change steps.\n\t * New batch will be created if this option is not set.\n\t */\n\t_doExecute( options = {} ) {\n\t\tconst document = this.editor.document;\n\t\tconst blocks = Array.from( document.selection.getSelectedBlocks() );\n\n\t\t// Whether we are turning off some items.\n\t\tconst turnOff = this.value === true;\n\t\t// If we are turning off items, we are going to rename them to paragraphs.\n\n\t\tdocument.enqueueChanges( () => {\n\t\t\tconst batch = options.batch || document.batch();\n\n\t\t\t// If part of a list got turned off, we need to handle (outdent) all of sub-items of the last turned-off item.\n\t\t\t// To be sure that model is all the time in a good state, we first fix items below turned-off item.\n\t\t\tif ( turnOff ) {\n\t\t\t\t// Start from the model item that is just after the last turned-off item.\n\t\t\t\tlet next = blocks[ blocks.length - 1 ].nextSibling;\n\t\t\t\tlet currentIndent = Number.POSITIVE_INFINITY;\n\t\t\t\tlet changes = [];\n\n\t\t\t\t// Correct indent of all items after the last turned off item.\n\t\t\t\t// Rules that should be followed:\n\t\t\t\t// 1. All direct sub-items of turned-off item should become indent 0, because the first item after it\n\t\t\t\t//    will be the first item of a new list. Other items are at the same level, so should have same 0 index.\n\t\t\t\t// 2. All items with indent lower than indent of turned-off item should become indent 0, because they\n\t\t\t\t//    should not end up as a child of any of list items that they were not children of before.\n\t\t\t\t// 3. All other items should have their indent changed relatively to it's parent.\n\t\t\t\t//\n\t\t\t\t// For example:\n\t\t\t\t// 1  * --------\n\t\t\t\t// 2     * --------\n\t\t\t\t// 3        * --------\t\t\t<-- this is turned off.\n\t\t\t\t// 4           * --------\t\t<-- this has to become indent = 0, because it will be first item on a new list.\n\t\t\t\t// 5              * --------\t<-- this should be still be a child of item above, so indent = 1.\n\t\t\t\t// 6        * --------\t\t\t<-- this has to become indent = 0, because it should not be a child of any of items above.\n\t\t\t\t// 7           * --------\t\t<-- this should be still be a child of item above, so indent = 1.\n\t\t\t\t// 8     * --------\t\t\t\t<-- this has to become indent = 0.\n\t\t\t\t// 9        * --------\t\t\t<-- this should still be a child of item above, so indent = 1.\n\t\t\t\t// 10          * --------\t\t<-- this should still be a child of item above, so indent = 2.\n\t\t\t\t// 11          * --------\t\t<-- this should still be at the same level as item above, so indent = 2.\n\t\t\t\t// 12 * --------\t\t\t\t<-- this and all below are left unchanged.\n\t\t\t\t// 13    * --------\n\t\t\t\t// 14       * --------\n\t\t\t\t//\n\t\t\t\t// After turning off 3 the list becomes:\n\t\t\t\t//\n\t\t\t\t// 1  * --------\n\t\t\t\t// 2     * --------\n\t\t\t\t//\n\t\t\t\t// 3  --------\n\t\t\t\t//\n\t\t\t\t// 4  * --------\n\t\t\t\t// 5     * --------\n\t\t\t\t// 6  * --------\n\t\t\t\t// 7     * --------\n\t\t\t\t// 8  * --------\n\t\t\t\t// 9     * --------\n\t\t\t\t// 10       * --------\n\t\t\t\t// 11       * --------\n\t\t\t\t// 12 * --------\n\t\t\t\t// 13    * --------\n\t\t\t\t// 14       * --------\n\t\t\t\t//\n\t\t\t\t// Thanks to this algorithm no lists are mismatched and no items get unexpected children/parent, while\n\t\t\t\t// those parent-child connection which are possible to maintain are still maintained. It's worth noting\n\t\t\t\t// that this is the same effect that we would be get by multiple use of outdent command. However doing\n\t\t\t\t// it like this is much more efficient because it's less operation (less memory usage, easier OT) and\n\t\t\t\t// less conversion (faster).\n\t\t\t\twhile ( next && next.name == 'listItem' && next.getAttribute( 'indent' ) !== 0 ) {\n\t\t\t\t\t// Check each next list item, as long as its indent is bigger than 0.\n\t\t\t\t\t// If the indent is 0 we are not going to change anything anyway.\n\t\t\t\t\tconst indent = next.getAttribute( 'indent' );\n\n\t\t\t\t\t// We check if that's item indent is lower as current relative indent.\n\t\t\t\t\tif ( indent < currentIndent ) {\n\t\t\t\t\t\t// If it is, current relative indent becomes that indent.\n\t\t\t\t\t\tcurrentIndent = indent;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fix indent relatively to current relative indent.\n\t\t\t\t\t// Note, that if we just changed the current relative indent, the newIndent will be equal to 0.\n\t\t\t\t\tconst newIndent = indent - currentIndent;\n\n\t\t\t\t\t// Save the entry in changes array. We do not apply it at the moment, because we will need to\n\t\t\t\t\t// reverse the changes so the last item is changed first.\n\t\t\t\t\t// This is to keep model in correct state all the time.\n\t\t\t\t\tchanges.push( { element: next, indent: newIndent } );\n\n\t\t\t\t\t// Find next item.\n\t\t\t\t\tnext = next.nextSibling;\n\t\t\t\t}\n\n\t\t\t\tchanges = changes.reverse();\n\n\t\t\t\tfor ( const item of changes ) {\n\t\t\t\t\tbatch.setAttribute( item.element, 'indent', item.indent );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we are turning on, we might change some items that are already `listItem`s but with different type.\n\t\t\t// Changing one nested list item to other type should also trigger changing all its siblings so the\n\t\t\t// whole nested list is of the same type.\n\t\t\t// Example (assume changing to numbered list):\n\t\t\t// * ------\t\t\t\t<-- do not fix, top level item\n\t\t\t//   * ------\t\t\t<-- fix, because latter list item of this item's list is changed\n\t\t\t//      * ------\t\t<-- do not fix, item is not affected (different list)\n\t\t\t//   * ------\t\t\t<-- fix, because latter list item of this item's list is changed\n\t\t\t//      * ------\t\t<-- fix, because latter list item of this item's list is changed\n\t\t\t//      * ---[--\t\t<-- already in selection\n\t\t\t//   * ------\t\t\t<-- already in selection\n\t\t\t//   * ------\t\t\t<-- already in selection\n\t\t\t// * ------\t\t\t\t<-- already in selection, but does not cause other list items to change because is top-level\n\t\t\t//   * ---]--\t\t\t<-- already in selection\n\t\t\t//   * ------\t\t\t<-- fix, because preceding list item of this item's list is changed\n\t\t\t//      * ------\t\t<-- do not fix, item is not affected (different list)\n\t\t\t// * ------\t\t\t\t<-- do not fix, top level item\n\t\t\tif ( !turnOff ) {\n\t\t\t\t// Find lowest indent among selected items. This will be indicator what is the indent of\n\t\t\t\t// top-most list affected by the command.\n\t\t\t\tlet lowestIndent = Number.POSITIVE_INFINITY;\n\n\t\t\t\tfor ( const item of blocks ) {\n\t\t\t\t\tif ( item.is( 'listItem' ) && item.getAttribute( 'indent' ) < lowestIndent ) {\n\t\t\t\t\t\tlowestIndent = item.getAttribute( 'indent' );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Do not execute the fix for top-level lists.\n\t\t\t\tlowestIndent = lowestIndent === 0 ? 1 : lowestIndent;\n\n\t\t\t\t// Fix types of list items that are \"before\" the selected blocks.\n\t\t\t\t_fixType( blocks, true, lowestIndent );\n\n\t\t\t\t// Fix types of list items that are \"after\" the selected blocks.\n\t\t\t\t_fixType( blocks, false, lowestIndent );\n\t\t\t}\n\n\t\t\t// Phew! Now it will be easier :).\n\t\t\t// For each block element that was in the selection, we will either: turn it to list item,\n\t\t\t// turn it to paragraph, or change it's type. Or leave it as it is.\n\t\t\t// Do it in reverse as there might be multiple blocks (same as with changing indents).\n\t\t\tfor ( const element of blocks.reverse() ) {\n\t\t\t\tif ( turnOff && element.name == 'listItem' ) {\n\t\t\t\t\t// We are turning off and the element is a `listItem` - it should be converted to `paragraph`.\n\t\t\t\t\t// List item specific attributes are removed by post fixer.\n\t\t\t\t\tbatch.rename( element, 'paragraph' );\n\t\t\t\t} else if ( !turnOff && element.name != 'listItem' ) {\n\t\t\t\t\t// We are turning on and the element is not a `listItem` - it should be converted to `listItem`.\n\t\t\t\t\t// The order of operations is important to keep model in correct state.\n\t\t\t\t\tbatch.setAttribute( element, 'type', this.type ).setAttribute( element, 'indent', 0 ).rename( element, 'listItem' );\n\t\t\t\t} else if ( !turnOff && element.name == 'listItem' && element.getAttribute( 'type' ) != this.type ) {\n\t\t\t\t\t// We are turning on and the element is a `listItem` but has different type - change it's type and\n\t\t\t\t\t// type of it's all siblings that have same indent.\n\t\t\t\t\tbatch.setAttribute( element, 'type', this.type );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_checkEnabled() {\n\t\t// If command value is true it means that we are in list item, so the command should be enabled.\n\t\tif ( this.value ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst selection = this.editor.document.selection;\n\t\tconst schema = this.editor.document.schema;\n\n\t\tconst firstBlock = first( selection.getSelectedBlocks() );\n\n\t\tif ( !firstBlock ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Otherwise, check if list item can be inserted at the position start.\n\t\treturn schema.check( {\n\t\t\tname: 'listItem',\n\t\t\tattributes: [ 'type', 'indent' ],\n\t\t\tinside: Position.createBefore( firstBlock )\n\t\t} );\n\t}\n}\n\n// Helper function used when one or more list item have their type changed. Fixes type of other list items\n// that are affected by the change (are in same lists) but are not directly in selection. The function got extracted\n// not to duplicated code, as same fix has to be performed before and after selection.\n//\n// @param {Array.<module:engine/model/node~Node>} blocks Blocks that are in selection.\n// @param {Boolean} isBackward Specified whether fix will be applied for blocks before first selected block (`true`)\n// or blocks after last selected block (`false`).\n// @param {Number} lowestIndent Lowest indent among selected blocks.\nfunction _fixType( blocks, isBackward, lowestIndent ) {\n\t// We need to check previous sibling of first changed item and next siblings of last changed item.\n\tconst startingItem = isBackward ? blocks[ 0 ] : blocks[ blocks.length - 1 ];\n\n\tif ( startingItem.is( 'listItem' ) ) {\n\t\tlet item = startingItem[ isBackward ? 'previousSibling' : 'nextSibling' ];\n\t\t// During processing items, keeps the lowest indent of already processed items.\n\t\t// This saves us from changing too many items.\n\t\t// Following example is for going forward as it is easier to read, however same applies to going backward.\n\t\t// * ------\n\t\t//   * ------\n\t\t//     * --[---\n\t\t//   * ------\t\t<-- `lowestIndent` should be 1\n\t\t//     * --]---\t\t<-- `startingItem`, `currentIndent` = 2, `lowestIndent` == 1\n\t\t//     * ------\t\t<-- should be fixed, `indent` == 2 == `currentIndent`\n\t\t//   * ------\t\t<-- should be fixed, set `currentIndent` to 1, `indent` == 1 == `currentIndent`\n\t\t//     * ------\t\t<-- should not be fixed, item is in different list, `indent` = 2, `indent` != `currentIndent`\n\t\t//   * ------\t\t<-- should be fixed, `indent` == 1 == `currentIndent`\n\t\t// * ------\t\t\t<-- break loop (`indent` < `lowestIndent`)\n\t\tlet currentIndent = startingItem.getAttribute( 'indent' );\n\n\t\t// Look back until a list item with indent lower than reference `lowestIndent`.\n\t\t// That would be the parent of nested sublist which contains item having `lowestIndent`.\n\t\twhile ( item && item.is( 'listItem' ) && item.getAttribute( 'indent' ) >= lowestIndent ) {\n\t\t\tif ( currentIndent > item.getAttribute( 'indent' ) ) {\n\t\t\t\tcurrentIndent = item.getAttribute( 'indent' );\n\t\t\t}\n\n\t\t\t// Found an item that is in the same nested sublist.\n\t\t\tif ( item.getAttribute( 'indent' ) == currentIndent ) {\n\t\t\t\t// Just add the item to selected blocks like it was selected by the user.\n\t\t\t\tblocks[ isBackward ? 'unshift' : 'push' ]( item );\n\t\t\t}\n\n\t\t\titem = item[ isBackward ? 'previousSibling' : 'nextSibling' ];\n\t\t}\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-list/src/listcommand.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module list/listengine\n */\n\nimport ListCommand from './listcommand';\nimport IndentCommand from './indentcommand';\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\n\nimport {\n\tcleanList,\n\tcleanListItem,\n\tmodelViewInsertion,\n\tmodelViewChangeType,\n\tmodelViewMergeAfter,\n\tmodelViewRemove,\n\tmodelViewSplitOnInsert,\n\tmodelViewChangeIndent,\n\tmodelChangePostFixer,\n\tmodelIndentPasteFixer,\n\tviewModelConverter,\n\tmodelToViewPosition,\n\tviewToModelPosition\n} from './converters';\n\n/**\n * The engine of the lists feature. It handles creating, editing and removing lists and list items.\n * It registers the `numberedList`, `bulletedList`, `indentList` and `outdentList` commands.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ListEngine extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ Paragraph ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\t// Schema.\n\t\t// Note: in case `$block` will be ever allowed in `listItem`, keep in mind that this feature\n\t\t// uses `Selection#getSelectedBlocks()` without any additional processing to obtain all selected list items.\n\t\t// If there are blocks allowed inside list item, algorithms using `getSelectedBlocks()` will have to be modified.\n\t\tconst schema = editor.document.schema;\n\t\tschema.registerItem( 'listItem', '$block' );\n\t\tschema.allow( {\n\t\t\tname: 'listItem',\n\t\t\tinside: '$root',\n\t\t\tattributes: [ 'type', 'indent' ]\n\t\t} );\n\t\tschema.requireAttributes( 'listItem', [ 'type', 'indent' ] );\n\n\t\t// Converters.\n\t\tconst data = editor.data;\n\t\tconst editing = editor.editing;\n\n\t\tthis.editor.document.on( 'change', modelChangePostFixer( this.editor.document ), { priority: 'high' } );\n\n\t\t// Unbind all moved model elements before conversion happens. This is important for converters.\n\t\t// TODO: fix this when changes are converted on `changesDone`.\n\t\tthis.editor.document.on( 'change', ( evt, type, changes ) => {\n\t\t\tif ( type == 'move' ) {\n\t\t\t\tfor ( const item of changes.range.getItems() ) {\n\t\t\t\t\tif ( item.is( 'listItem' ) ) {\n\t\t\t\t\t\tediting.mapper.unbindModelElement( item );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, { priority: 'high' } );\n\n\t\tediting.mapper.registerViewToModelLength( 'li', getViewListItemLength );\n\t\tdata.mapper.registerViewToModelLength( 'li', getViewListItemLength );\n\n\t\tediting.mapper.on( 'modelToViewPosition', modelToViewPosition );\n\t\tediting.mapper.on( 'viewToModelPosition', viewToModelPosition );\n\t\tdata.mapper.on( 'modelToViewPosition', modelToViewPosition );\n\n\t\tediting.modelToView.on( 'insert', modelViewSplitOnInsert, { priority: 'high' } );\n\t\tediting.modelToView.on( 'insert:listItem', modelViewInsertion );\n\t\tdata.modelToView.on( 'insert', modelViewSplitOnInsert, { priority: 'high' } );\n\t\tdata.modelToView.on( 'insert:listItem', modelViewInsertion );\n\n\t\t// Only change converter is needed. List item's type attribute is required, so it's adding is handled when\n\t\t// list item is added and you cannot remove it.\n\t\tediting.modelToView.on( 'changeAttribute:type:listItem', modelViewChangeType );\n\t\tdata.modelToView.on( 'changeAttribute:type:listItem', modelViewChangeType );\n\n\t\tediting.modelToView.on( 'remove:listItem', modelViewRemove );\n\t\tediting.modelToView.on( 'remove', modelViewMergeAfter, { priority: 'low' } );\n\t\tdata.modelToView.on( 'remove:listItem', modelViewRemove );\n\t\tdata.modelToView.on( 'remove', modelViewMergeAfter, { priority: 'low' } );\n\n\t\tediting.modelToView.on( 'changeAttribute:indent:listItem', modelViewChangeIndent );\n\t\tdata.modelToView.on( 'changeAttribute:indent:listItem', modelViewChangeIndent );\n\n\t\tdata.viewToModel.on( 'element:ul', cleanList, { priority: 'high' } );\n\t\tdata.viewToModel.on( 'element:ol', cleanList, { priority: 'high' } );\n\t\tdata.viewToModel.on( 'element:li', cleanListItem, { priority: 'high' } );\n\t\tdata.viewToModel.on( 'element:li', viewModelConverter );\n\n\t\t// Fix indentation of pasted items.\n\t\tdata.on( 'insertContent', modelIndentPasteFixer, { priority: 'high' } );\n\n\t\t// Register commands for numbered and bulleted list.\n\t\teditor.commands.set( 'numberedList', new ListCommand( editor, 'numbered' ) );\n\t\teditor.commands.set( 'bulletedList', new ListCommand( editor, 'bulleted' ) );\n\n\t\t// Register commands for indenting.\n\t\teditor.commands.set( 'indentList', new IndentCommand( editor, 'forward' ) );\n\t\teditor.commands.set( 'outdentList', new IndentCommand( editor, 'backward' ) );\n\t}\n}\n\nfunction getViewListItemLength( element ) {\n\tlet length = 1;\n\n\tfor ( const child of element.getChildren() ) {\n\t\tif ( child.name == 'ul' || child.name == 'ol' ) {\n\t\t\tfor ( const item of child.getChildren() ) {\n\t\t\t\tlength += getViewListItemLength( item );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn length;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-list/src/listengine.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module list/viewlistitemelement\n */\n\nimport ViewContainerElement from '@ckeditor/ckeditor5-engine/src/view/containerelement';\n\n/**\n * View element class representing list item (`<li>`). It extends {@link module:engine/view/containerelement~ContainerElement}\n * and overwrites {@link module:list/viewlistitemelement~ViewListItemElement#getFillerOffset evaluating whether filler offset}\n * is needed.\n *\n * @extends module:engine/view/containerelement~ContainerElement\n */\nexport default class ViewListItemElement extends ViewContainerElement {\n\t/**\n\t * Creates `<li>` view item.\n\t *\n\t * @param {Object|Iterable} [attrs] Collection of attributes.\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children] List of nodes to be inserted\n\t * into created element.\n\t */\n\tconstructor( attrs, children ) {\n\t\tsuper( 'li', attrs, children );\n\n\t\t/**\n\t\t * @inheritDoc\n\t\t */\n\t\tthis.getFillerOffset = getFillerOffset;\n\t}\n}\n\n// Implementation of getFillerOffset for ViewListItemElements.\n//\n// @returns {Number|null} Block filler offset or `null` if block filler is not needed.\nfunction getFillerOffset() {\n\tconst hasOnlyLists = !this.isEmpty && ( this.getChild( 0 ).name == 'ul' || this.getChild( 0 ).name == 'ol' );\n\n\treturn this.isEmpty || hasOnlyLists ? 0 : null;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-list/src/viewlistitemelement.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module paragraph/paragraphcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command/command';\nimport Position from '@ckeditor/ckeditor5-engine/src/model/position';\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n\n/**\n * The paragraph command.\n *\n * @extends module:core/command/command~Command\n */\nexport default class ParagraphCommand extends Command {\n\t/**\n\t * Creates an instance of the command.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor Editor instance.\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * Value of the command, indicating whether it is applied in the context\n\t\t * of current {@link module:engine/model/document~Document#selection selection}.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis.set( 'value', false );\n\n\t\t// Update current value each time changes are done on document.\n\t\tthis.listenTo( editor.document, 'changesDone', () => {\n\t\t\tthis.refreshValue();\n\t\t\tthis.refreshState();\n\t\t} );\n\t}\n\n\t/**\n\t * Executes the command. All the blocks (see {@link module:engine/model/schema~Schema}) in the selection\n\t * will be turned to paragraphs.\n\t *\n\t * @protected\n\t * @param {Object} [options] Options for executed command.\n\t * @param {module:engine/model/batch~Batch} [options.batch] Batch to collect all the change steps.\n\t * New batch will be created if this option is not set.\n\t * @param {module:engine/model/selection~Selection} [options.selection] Selection the command should be applied to.\n\t * By default, if not provided, the command is applied to {@link module:engine/model/document~Document#selection}.\n\t */\n\t_doExecute( options = {} ) {\n\t\tconst document = this.editor.document;\n\n\t\tdocument.enqueueChanges( () => {\n\t\t\tconst batch = options.batch || document.batch();\n\t\t\tconst blocks = ( options.selection || document.selection ).getSelectedBlocks();\n\n\t\t\tfor ( const block of blocks ) {\n\t\t\t\tif ( !block.is( 'paragraph' ) ) {\n\t\t\t\t\tbatch.rename( block, 'paragraph' );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Updates command's {@link #value value} based on current selection.\n\t */\n\trefreshValue() {\n\t\tconst block = first( this.editor.document.selection.getSelectedBlocks() );\n\n\t\tthis.value = !!block && block.is( 'paragraph' );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_checkEnabled() {\n\t\tconst block = first( this.editor.document.selection.getSelectedBlocks() );\n\n\t\treturn !!block && this.editor.document.schema.check( {\n\t\t\tname: 'paragraph',\n\t\t\tinside: Position.createBefore( block )\n\t\t} );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-paragraph/src/paragraphcommand.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module presets/essentials\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport Clipboard from '@ckeditor/ckeditor5-clipboard/src/clipboard';\nimport Enter from '@ckeditor/ckeditor5-enter/src/enter';\nimport Typing from '@ckeditor/ckeditor5-typing/src/typing';\nimport Undo from '@ckeditor/ckeditor5-undo/src/undo';\n\n/**\n * Essential editing features preset. Represents a set of features which enable in the editor\n * similar functionalities to a `<textarea>`.\n *\n * It includes: {@link module:clipboard/clipboard~Clipboard}, {@link module:enter/enter~Enter},\n * {@link module:typing/typing~Typing}, {@link module:undo/undo~Undo}.\n *\n * This preset does not define any block-level containers (such as {@link module:paragraph/paragraph~Paragraph}).\n * If your editor is supposed to handle block content, make sure to include it. You can also inlcude\n * the {@link module:presets/article~Article article preset}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Essentials extends Plugin {\n\tstatic get requires() {\n\t\treturn [ Clipboard, Enter, Typing, Undo ];\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-presets/src/essentials.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module typing/delete\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport DeleteCommand from './deletecommand';\nimport DeleteObserver from './deleteobserver';\n\n/**\n * The delete and backspace feature. Handles the <kbd>Delete</kbd> and <kbd>Backspace</kbd> keys in the editor.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Delete extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'typing/delete';\n\t}\n\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst editingView = editor.editing.view;\n\n\t\teditingView.addObserver( DeleteObserver );\n\n\t\teditor.commands.set( 'forwardDelete', new DeleteCommand( editor, 'forward' ) );\n\t\teditor.commands.set( 'delete', new DeleteCommand( editor, 'backward' ) );\n\n\t\tthis.listenTo( editingView, 'delete', ( evt, data ) => {\n\t\t\teditor.execute( data.direction == 'forward' ? 'forwardDelete' : 'delete', { unit: data.unit } );\n\t\t\tdata.preventDefault();\n\t\t} );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-typing/src/delete.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module typing/deletecommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command/command';\nimport Selection from '@ckeditor/ckeditor5-engine/src/model/selection';\nimport ChangeBuffer from './changebuffer';\nimport count from '@ckeditor/ckeditor5-utils/src/count';\n\n/**\n * The delete command. Used by the {@link module:typing/delete~Delete delete feature} to handle the <kbd>Delete</kbd> and\n * <kbd>Backspace</kbd> keys.\n *\n * @extends core.command.Command\n */\nexport default class DeleteCommand extends Command {\n\t/**\n\t * Creates an instance of the command.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor\n\t * @param {'forward'|'backward'} direction The directionality of the delete describing in what direction it\n\t * should consume the content when the selection is collapsed.\n\t */\n\tconstructor( editor, direction ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The directionality of the delete describing in what direction it should\n\t\t * consume the content when the selection is collapsed.\n\t\t *\n\t\t * @readonly\n\t\t * @member {'forward'|'backward'} #direction\n\t\t */\n\t\tthis.direction = direction;\n\n\t\t/**\n\t\t * Delete's change buffer used to group subsequent changes into batches.\n\t\t *\n\t\t * @readonly\n\t\t * @private\n\t\t * @member {typing.ChangeBuffer} #buffer\n\t\t */\n\t\tthis._buffer = new ChangeBuffer( editor.document, editor.config.get( 'typing.undoStep' ) );\n\t}\n\n\t/**\n\t * Executes the delete command. Depending on whether the selection is collapsed or not, deletes its content\n\t * or a piece of content in the {@link #direction defined direction}.\n\t *\n\t * @param {Object} [options] The command options.\n\t * @param {'character'} [options.unit='character'] See {@link module:engine/controller/modifyselection~modifySelection}'s\n\t * options.\n\t */\n\t_doExecute( options = {} ) {\n\t\tconst doc = this.editor.document;\n\t\tconst dataController = this.editor.data;\n\n\t\tdoc.enqueueChanges( () => {\n\t\t\tthis._buffer.lock();\n\n\t\t\tconst selection = Selection.createFromSelection( doc.selection );\n\n\t\t\t// Try to extend the selection in the specified direction.\n\t\t\tif ( selection.isCollapsed ) {\n\t\t\t\tdataController.modifySelection( selection, { direction: this.direction, unit: options.unit } );\n\t\t\t}\n\n\t\t\t// If selection is still collapsed, then there's nothing to delete.\n\t\t\tif ( selection.isCollapsed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet changeCount = 0;\n\n\t\t\tselection.getFirstRange().getMinimalFlatRanges().forEach( range => {\n\t\t\t\tchangeCount += count(\n\t\t\t\t\trange.getWalker( { singleCharacters: true, ignoreElementEnd: true, shallow: true } )\n\t\t\t\t);\n\t\t\t} );\n\n\t\t\tdataController.deleteContent( selection, this._buffer.batch, { merge: true } );\n\t\t\tthis._buffer.input( changeCount );\n\n\t\t\tdoc.selection.setRanges( selection.getRanges(), selection.isBackward );\n\n\t\t\tthis._buffer.unlock();\n\t\t} );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-typing/src/deletecommand.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module typing/deleteobserver\n */\n\nimport Observer from '@ckeditor/ckeditor5-engine/src/view/observer/observer';\nimport DomEventData from '@ckeditor/ckeditor5-engine/src/view/observer/domeventdata';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\n\n/**\n * Delete observer introduces the {@link module:engine/view/document~Document#event:delete} event.\n *\n * @extends engine.view.observer.Observer\n */\nexport default class DeleteObserver extends Observer {\n\tconstructor( document ) {\n\t\tsuper( document );\n\n\t\tdocument.on( 'keydown', ( evt, data ) => {\n\t\t\tconst deleteData = {};\n\n\t\t\tif ( data.keyCode == keyCodes.delete ) {\n\t\t\t\tdeleteData.direction = 'forward';\n\t\t\t\tdeleteData.unit = 'character';\n\t\t\t} else if ( data.keyCode == keyCodes.backspace ) {\n\t\t\t\tdeleteData.direction = 'backward';\n\t\t\t\tdeleteData.unit = 'codePoint';\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdeleteData.unit = data.altKey ? 'word' : deleteData.unit;\n\n\t\t\tdocument.fire( 'delete', new DomEventData( document, data.domEvent, deleteData ) );\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tobserve() {}\n}\n\n/**\n * Event fired when the user tries to delete content (e.g. presses <kbd>Delete</kbd> or <kbd>Backspace</kbd>).\n *\n * Note: This event is fired by the {@link module:typing/deleteobserver~DeleteObserver observer}\n * (usually registered by the {@link module:typing/delete~Delete delete feature}).\n *\n * @event module:engine/view/document~Document#event:delete\n * @param {module:engine/view/observer/domeventdata~DomEventData} data\n * @param {'forward'|'delete'} data.direction The direction in which the deletion should happen.\n * @param {'character'|'word'} data.unit The \"amount\" of content that should be deleted.\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-typing/src/deleteobserver.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module typing/input\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ModelRange from '@ckeditor/ckeditor5-engine/src/model/range';\nimport ViewPosition from '@ckeditor/ckeditor5-engine/src/view/position';\nimport ViewText from '@ckeditor/ckeditor5-engine/src/view/text';\nimport diff from '@ckeditor/ckeditor5-utils/src/diff';\nimport diffToChanges from '@ckeditor/ckeditor5-utils/src/difftochanges';\nimport { getCode } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport InputCommand from './inputcommand';\n\n/**\n * Handles text input coming from the keyboard or other input methods.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Input extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'typing/input';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst editingView = editor.editing.view;\n\t\tconst inputCommand = new InputCommand( editor, editor.config.get( 'typing.undoStep' ) || 20 );\n\n\t\t// TODO The above default configuration value should be defined using editor.config.define() once it's fixed.\n\n\t\teditor.commands.set( 'input', inputCommand );\n\n\t\tthis.listenTo( editingView, 'keydown', ( evt, data ) => {\n\t\t\tthis._handleKeydown( data, inputCommand.buffer );\n\t\t}, { priority: 'lowest' } );\n\n\t\tthis.listenTo( editingView, 'mutations', ( evt, mutations, viewSelection ) => {\n\t\t\tthis._handleMutations( mutations, viewSelection );\n\t\t} );\n\t}\n\n\t/**\n\t * Handles the keydown event. We need to guess whether such keystroke is going to result\n\t * in typing. If so, then before character insertion happens, any selected content needs\n\t * to be deleted. Otherwise the default browser deletion mechanism would be\n\t * triggered, resulting in:\n\t *\n\t * * Hundreds of mutations which could not be handled.\n\t * * But most importantly, loss of control over how the content is being deleted.\n\t *\n\t * The method is used in a low-priority listener, hence allowing other listeners (e.g. delete or enter features)\n\t * to handle the event.\n\t *\n\t * @private\n\t * @param {module:engine/view/observer/keyobserver~KeyEventData} evtData\n\t * @param {module:typing/changebuffer~ChangeBuffer} buffer\n\t */\n\t_handleKeydown( evtData, buffer ) {\n\t\tconst doc = this.editor.document;\n\n\t\tif ( isSafeKeystroke( evtData ) || doc.selection.isCollapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tbuffer.lock();\n\n\t\tdoc.enqueueChanges( () => {\n\t\t\tthis.editor.data.deleteContent( doc.selection, buffer.batch );\n\t\t} );\n\n\t\tbuffer.unlock();\n\t}\n\n\t/**\n\t * Handles DOM mutations.\n\t *\n\t * @private\n\t * @param {Array.<module:engine/view/document~MutatatedText|module:engine/view/document~MutatatedChildren>} mutations\n\t * @param {module:engine/view/selection~Selection|null} viewSelection\n\t */\n\t_handleMutations( mutations, viewSelection ) {\n\t\tnew MutationHandler( this.editor ).handle( mutations, viewSelection );\n\t}\n}\n\n/**\n * Helper class for translating DOM mutations into model changes.\n *\n * @private\n */\nclass MutationHandler {\n\t/**\n\t * Creates an instance of the mutation handler.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor\n\t */\n\tconstructor( editor ) {\n\t\t/**\n\t\t * Editor instance for which mutations are handled.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/editor/editor~Editor} #editor\n\t\t */\n\t\tthis.editor = editor;\n\n\t\t/**\n\t\t * The editing controller.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/controller/editingcontroller~EditingController} #editing\n\t\t */\n\t\tthis.editing = this.editor.editing;\n\t}\n\n\t/**\n\t * Handles given mutations.\n\t *\n\t * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n\t * module:engine/view/observer/mutationobserver~MutatatedChildren>} mutations\n\t * @param {module:engine/view/selection~Selection|null} viewSelection\n\t */\n\thandle( mutations, viewSelection ) {\n\t\tfor ( const mutation of mutations ) {\n\t\t\t// Fortunately it will never be both.\n\t\t\tthis._handleTextMutation( mutation, viewSelection );\n\t\t\tthis._handleTextNodeInsertion( mutation );\n\t\t}\n\t}\n\n\t_handleTextMutation( mutation, viewSelection ) {\n\t\tif ( mutation.type != 'text' ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Replace &nbsp; inserted by the browser with normal space.\n\t\t// We want only normal spaces in the model and in the view. Renderer and DOM Converter will be then responsible\n\t\t// for rendering consecutive spaces using &nbsp;, but the model and the view has to be clear.\n\t\t// Other feature may introduce inserting non-breakable space on specific key stroke (for example shift + space).\n\t\t// However then it will be handled outside of mutations, like enter key is.\n\t\t// The replacing is here because it has to be done before `diff` and `diffToChanges` functions, as they\n\t\t// take `newText` and compare it to (cleaned up) view.\n\t\t// It could also be done in mutation observer too, however if any outside plugin would like to\n\t\t// introduce additional events for mutations, they would get already cleaned up version (this may be good or not).\n\t\tconst newText = mutation.newText.replace( /\\u00A0/g, ' ' );\n\t\t// To have correct `diffResult`, we also compare view node text data with &nbsp; replaced by space.\n\t\tconst oldText = mutation.oldText.replace( /\\u00A0/g, ' ' );\n\n\t\tconst diffResult = diff( oldText, newText );\n\n\t\t// Index where the first change happens. Used to set the position from which nodes will be removed and where will be inserted.\n\t\tlet firstChangeAt = null;\n\t\t// Index where the last change happens. Used to properly count how many characters have to be removed and inserted.\n\t\tlet lastChangeAt = null;\n\n\t\t// Get `firstChangeAt` and `lastChangeAt`.\n\t\tfor ( let i = 0; i < diffResult.length; i++ ) {\n\t\t\tconst change = diffResult[ i ];\n\n\t\t\tif ( change != 'equal' ) {\n\t\t\t\tfirstChangeAt = firstChangeAt === null ? i : firstChangeAt;\n\t\t\t\tlastChangeAt = i;\n\t\t\t}\n\t\t}\n\n\t\t// How many characters, starting from `firstChangeAt`, should be removed.\n\t\tlet deletions = 0;\n\t\t// How many characters, starting from `firstChangeAt`, should be inserted (basing on mutation.newText).\n\t\tlet insertions = 0;\n\n\t\tfor ( let i = firstChangeAt; i <= lastChangeAt; i++ ) {\n\t\t\t// If there is no change (equal) or delete, the character is existing in `oldText`. We count it for removing.\n\t\t\tif ( diffResult[ i ] != 'insert' ) {\n\t\t\t\tdeletions++;\n\t\t\t}\n\n\t\t\t// If there is no change (equal) or insert, the character is existing in `newText`. We count it for inserting.\n\t\t\tif ( diffResult[ i ] != 'delete' ) {\n\t\t\t\tinsertions++;\n\t\t\t}\n\t\t}\n\n\t\t// Try setting new model selection according to passed view selection.\n\t\tlet modelSelectionRange = null;\n\n\t\tif ( viewSelection ) {\n\t\t\tmodelSelectionRange = this.editing.mapper.toModelRange( viewSelection.getFirstRange() );\n\t\t}\n\n\t\t// Get the position in view and model where the changes will happen.\n\t\tconst viewPos = new ViewPosition( mutation.node, firstChangeAt );\n\t\tconst modelPos = this.editing.mapper.toModelPosition( viewPos );\n\t\tconst removeRange = ModelRange.createFromPositionAndShift( modelPos, deletions );\n\t\tconst insertText = newText.substr( firstChangeAt, insertions );\n\n\t\tthis.editor.execute( 'input', {\n\t\t\ttext: insertText,\n\t\t\trange: removeRange,\n\t\t\tresultRange: modelSelectionRange\n\t\t} );\n\t}\n\n\t_handleTextNodeInsertion( mutation ) {\n\t\tif ( mutation.type != 'children' ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// One new node.\n\t\tif ( mutation.newChildren.length - mutation.oldChildren.length != 1 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Which is text.\n\t\tconst diffResult = diff( mutation.oldChildren, mutation.newChildren, compareChildNodes );\n\t\tconst changes = diffToChanges( diffResult, mutation.newChildren );\n\n\t\t// In case of [ delete, insert, insert ] the previous check will not exit.\n\t\tif ( changes.length > 1 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst change = changes[ 0 ];\n\n\t\t// Which is text.\n\t\tif ( !( change.values[ 0 ] instanceof ViewText ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewPos = new ViewPosition( mutation.node, change.index );\n\t\tconst modelPos = this.editing.mapper.toModelPosition( viewPos );\n\t\tconst insertedText = change.values[ 0 ].data;\n\n\t\tthis.editor.execute( 'input', {\n\t\t\t// Replace &nbsp; inserted by the browser with normal space.\n\t\t\t// See comment in `_handleTextMutation`.\n\t\t\t// In this case we don't need to do this before `diff` because we diff whole nodes.\n\t\t\t// Just change &nbsp; in case there are some.\n\t\t\ttext: insertedText.replace( /\\u00A0/g, ' ' ),\n\t\t\trange: new ModelRange( modelPos )\n\t\t} );\n\t}\n}\n\nconst safeKeycodes = [\n\tgetCode( 'arrowUp' ),\n\tgetCode( 'arrowRight' ),\n\tgetCode( 'arrowDown' ),\n\tgetCode( 'arrowLeft' ),\n\t9,  // Tab\n\t16, // Shift\n\t17, // Ctrl\n\t18, // Alt\n\t20, // CapsLock\n\t27, // Escape\n\t33, // PageUp\n\t34, // PageDown\n\t35, // Home\n\t36, // End\n\t229 // Composition start key\n];\n\n// Function keys.\nfor ( let code = 112; code <= 135; code++ ) {\n\tsafeKeycodes.push( code );\n}\n\n// Returns `true` if a keystroke should not cause any content change caused by \"typing\".\n//\n// Note: This implementation is very simple and will need to be refined with time.\n//\n// @param {engine.view.observer.keyObserver.KeyEventData} keyData\n// @returns {Boolean}\nfunction isSafeKeystroke( keyData ) {\n\t// Keystrokes which contain Ctrl don't represent typing.\n\tif ( keyData.ctrlKey ) {\n\t\treturn true;\n\t}\n\n\treturn safeKeycodes.includes( keyData.keyCode );\n}\n\n// Helper function that compares whether two given view nodes are same. It is used in `diff` when it's passed an array\n// with child nodes.\nfunction compareChildNodes( oldChild, newChild ) {\n\tif ( oldChild instanceof ViewText && newChild instanceof ViewText ) {\n\t\treturn oldChild.data === newChild.data;\n\t} else {\n\t\treturn oldChild === newChild;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-typing/src/input.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module typing/inputcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command/command';\nimport ChangeBuffer from './changebuffer';\n\n/**\n * The input command. Used by the {@link module:typing/input~Input input feature} to handle typing.\n *\n * @extends module:core/command/command~Command\n */\nexport default class InputCommand extends Command {\n\t/**\n\t * Creates an instance of the command.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor\n\t * @param {Number} undoStepSize The maximum number of atomic changes\n\t * which can be contained in one batch in the command buffer.\n\t */\n\tconstructor( editor, undoStepSize ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * Typing's change buffer used to group subsequent changes into batches.\n\t\t *\n\t\t * @readonly\n\t\t * @private\n\t\t * @member {module:typing/changebuffer~ChangeBuffer} #_buffer\n\t\t */\n\t\tthis._buffer = new ChangeBuffer( editor.document, undoStepSize );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\tthis._buffer.destroy();\n\t\tthis._buffer = null;\n\t}\n\n\t/**\n\t * The current change buffer.\n\t *\n\t * @type {module:typing/changebuffer~ChangeBuffer}\n\t */\n\tget buffer() {\n\t\treturn this._buffer;\n\t}\n\n\t/**\n\t * Executes the input command. It replaces the content within the given range with the given text.\n\t * Replacing is a two step process, first content within the range is removed and then new text is inserted\n\t * on the beginning of the range (which after removal is a collapsed range).\n\t *\n\t * @param {Object} [options] The command options.\n\t * @param {String} [options.text=''] Text to be inserted.\n\t * @param {module:engine/model/range~Range} [options.range] Range in which the text is inserted. Defaults\n\t * to the first range in the current selection.\n\t * @param {module:engine/model/range~Range} [options.resultRange] Range at which the selection\n\t * should be placed after the insertion. If not specified, the selection will be placed right after\n\t * the inserted text.\n\t */\n\t_doExecute( options = {} ) {\n\t\tconst doc = this.editor.document;\n\t\tconst text = options.text || '';\n\t\tconst textInsertions = text.length;\n\t\tconst range = options.range || doc.selection.getFirstRange();\n\t\tconst resultRange = options.resultRange;\n\n\t\tdoc.enqueueChanges( () => {\n\t\t\tconst isCollapsedRange = range.isCollapsed;\n\n\t\t\tthis._buffer.lock();\n\n\t\t\tif ( !isCollapsedRange ) {\n\t\t\t\tthis._buffer.batch.remove( range );\n\t\t\t}\n\n\t\t\tthis._buffer.batch.weakInsert( range.start, text );\n\n\t\t\tif ( resultRange ) {\n\t\t\t\tthis.editor.data.model.selection.setRanges( [ resultRange ] );\n\t\t\t} else if ( isCollapsedRange ) {\n\t\t\t\t// If range was collapsed just shift the selection by the number of inserted characters.\n\t\t\t\tthis.editor.data.model.selection.collapse( range.start.getShiftedBy( textInsertions ) );\n\t\t\t}\n\n\t\t\tthis._buffer.unlock();\n\n\t\t\tthis._buffer.input( textInsertions );\n\t\t} );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-typing/src/inputcommand.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module typing/typing\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Input from './input';\nimport Delete from './delete';\n\n/**\n * The typing feature. Handles typing.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Typing extends Plugin {\n\tstatic get requires() {\n\t\treturn [ Input, Delete ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'typing/typing';\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-typing/src/typing.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/bindings/escpresshandler\n */\n\n/* global document */\n\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\n\n/**\n * Detects <kbd>Esc</kbd> `keydown` DOM event and fires an action.\n *\n * @param {Object} options Configuration options.\n * @param {module:utils/dom/emittermixin~Emitter} options.emitter The emitter to which this behavior should be added.\n * @param {Function} options.activator Function returning a `Boolean`, to determine whether handler is active.\n * @param {Function} options.callback Function fired after <kbd>Esc</kbd> is pressed.\n */\nexport default function escPressHandler( { emitter, activator, callback } ) {\n\temitter.listenTo( document, 'keydown', ( evt, { keyCode } ) => {\n\t\tif ( keyCode == keyCodes.esc && activator() ) {\n\t\t\tcallback();\n\t\t}\n\t} );\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-ui/src/bindings/escpresshandler.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/componentfactory\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Class implementing the UI component factory.\n *\n * Factories of specific UI components can be registered under their unique names. Registered\n * components can be later instantiated by providing the name of the component.\n *\n * The main use case for the component factory is the {@link module:core/editor/editorui~EditorUI#componentFactory} factory.\n */\nexport default class ComponentFactory {\n\t/**\n\t * Creates ComponentFactory instance.\n\t *\n\t * @constructor\n\t * @param {module:core/editor/editor~Editor} editor The editor instance.\n\t */\n\tconstructor( editor ) {\n\t\t/**\n\t\t * The editor instance.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/editor/editor~Editor}\n\t\t */\n\t\tthis.editor = editor;\n\n\t\t/**\n\t\t * Registered component factories.\n\t\t *\n\t\t * @private\n\t\t * @member {Map}\n\t\t */\n\t\tthis._components = new Map();\n\t}\n\n\t/**\n\t * Registers a component factory.\n\t *\n\t * @param {String} name The name of the component.\n\t * @param {Function} ControllerClass The component controller constructor.\n\t * @param {Function} ViewClass The component view constructor.\n\t * @param {Function} [callback] The callback to process the view instance,\n\t * i.e. to set attribute values, create attribute bindings, etc.\n\t */\n\tadd( name, callback ) {\n\t\tif ( this._components.get( name ) ) {\n\t\t\t/**\n\t\t\t * The item already exists in the component factory.\n\t\t\t *\n\t\t\t * @error componentfactory-item-exists\n\t\t\t * @param {String} name The name of the component.\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'componentfactory-item-exists: The item already exists in the component factory.', { name }\n\t\t\t);\n\t\t}\n\n\t\tthis._components.set( name, callback );\n\t}\n\n\t/**\n\t * Creates a component view instance.\n\t *\n\t * @param {String} name The name of the component.\n\t * @returns {module:ui/view~View} The instantiated component view.\n\t */\n\tcreate( name ) {\n\t\tconst component = this._components.get( name );\n\n\t\tif ( !component ) {\n\t\t\t/**\n\t\t\t * There is no such UI component in the factory.\n\t\t\t *\n\t\t\t * @error componentfactory-item-missing\n\t\t\t * @param {String} name The name of the missing component.\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'componentfactory-item-missing: There is no such UI component in the factory.', { name }\n\t\t\t);\n\t\t}\n\n\t\treturn component( this.editor.locale );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-ui/src/componentfactory.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/dropdown/createdropdown\n */\n\nimport ButtonView from '../button/buttonview';\nimport DropdownView from './dropdownview';\nimport DropdownPanelView from './dropdownpanelview';\n\n/**\n * Creates an instance of {@link module:ui/dropdown/dropdownview~DropdownView} class using\n * defined model.\n *\n * @param {module:ui/dropdown/dropdownmodel~DropdownModel} model Model of this dropdown.\n * @param {module:utils/locale~Locale} locale The locale instance.\n * @returns {module:ui/dropdown/dropdownview~DropdownView} The dropdown view instance.\n */\nexport default function createDropdown( model, locale ) {\n\tconst buttonView = new ButtonView( locale );\n\tbuttonView.bind( 'label', 'isOn', 'isEnabled', 'withText', 'keystroke', 'tooltip' ).to( model );\n\n\tconst panelView = new DropdownPanelView( locale );\n\n\treturn new DropdownView( locale, buttonView, panelView );\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-ui/src/dropdown/createdropdown.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/dropdown/dropdownpanelview\n */\n\nimport View from '../view';\nimport Template from '../template';\n\n/**\n * The dropdown panel view class.\n *\n * @extends module:ui/view~View\n */\nexport default class DropdownPanelView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * Controls whether the panel is visible.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isVisible\n\t\t */\n\t\tthis.set( 'isVisible', false );\n\n\t\t/**\n\t\t * Collection of the child views.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.children = this.createCollection();\n\n\t\tthis.template = new Template( {\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-reset',\n\t\t\t\t\t'ck-dropdown__panel',\n\t\t\t\t\tbind.if( 'isVisible', 'ck-dropdown__panel-visible' )\n\t\t\t\t]\n\t\t\t},\n\n\t\t\tchildren: this.children\n\t\t} );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-ui/src/dropdown/dropdownpanelview.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/dropdown/dropdownview\n */\n\nimport View from '../view';\nimport Template from '../template';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\n\n/**\n * The dropdown view class.\n *\n * @extends module:ui/view~View\n */\nexport default class DropdownView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale, buttonView, panelView ) {\n\t\tsuper( locale );\n\n\t\t// Extend button's template before it's registered as a child of the dropdown because\n\t\t// by doing so, its #element is rendered and any post–render template extension will\n\t\t// not be reflected in DOM.\n\t\tTemplate.extend( buttonView.template, {\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-dropdown__button'\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * Button of this dropdown view.\n\t\t *\n\t\t * @readonly\n\t\t * @member {ui.button.ButtonView} #buttonView\n\t\t */\n\t\tthis.buttonView = buttonView;\n\n\t\t/**\n\t\t * Panel of this dropdown view.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/dropdown/dropdownpanelview~DropdownPanelView} #panelView\n\t\t */\n\t\tthis.panelView = panelView;\n\n\t\t/**\n\t\t * Controls whether the dropdown view is open, which also means its\n\t\t * {@link #panelView panel} is visible.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isOpen\n\t\t */\n\t\tthis.set( 'isOpen', false );\n\n\t\t/**\n\t\t * Tracks information about DOM focus in the list.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\tthis.template = new Template( {\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-dropdown'\n\t\t\t\t]\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\tbuttonView,\n\t\t\t\tpanelView\n\t\t\t]\n\t\t} );\n\n\t\t// Toggle the the dropdown when it's button has been clicked.\n\t\tthis.listenTo( buttonView, 'execute', () => {\n\t\t\tthis.isOpen = !this.isOpen;\n\t\t} );\n\n\t\t// Toggle the visibility of the panel when the dropdown becomes open.\n\t\tpanelView.bind( 'isVisible' ).to( this, 'isOpen' );\n\n\t\t/**\n\t\t * The label of the dropdown.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #label\n\t\t */\n\n\t\t/**\n\t\t * Controls whether the dropdown is enabled (can be clicked).\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isEnabled\n\t\t */\n\n\t\t/**\n\t\t * Controls whether the {@link #buttonView} is \"pushed\".\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isOn\n\t\t */\n\n\t\t/**\n\t\t * (Optional) Whether the label of the dropdown is visible. See {@link module:ui/button/buttonview~ButtonView#withText}.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #withText\n\t\t */\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\t// Listen for keystrokes coming from within #element.\n\t\tthis.keystrokes.listenTo( this.element );\n\n\t\t// Register #element in the focus tracker.\n\t\tthis.focusTracker.add( this.element );\n\n\t\tconst closeDropdown = ( data, cancel ) => {\n\t\t\tif ( this.isOpen ) {\n\t\t\t\tthis.buttonView.focus();\n\t\t\t\tthis.isOpen = false;\n\t\t\t\tcancel();\n\t\t\t}\n\t\t};\n\n\t\t// Open the dropdown panel using the arrow down key, just like with return or space.\n\t\tthis.keystrokes.set( 'arrowdown', ( data, cancel ) => {\n\t\t\tif ( !this.isOpen ) {\n\t\t\t\tthis.isOpen = true;\n\t\t\t\tcancel();\n\t\t\t}\n\t\t} );\n\n\t\t// Block the right arrow key (until nested dropdowns are implemented).\n\t\tthis.keystrokes.set( 'arrowright', ( data, cancel ) => {\n\t\t\tif ( this.isOpen ) {\n\t\t\t\tcancel();\n\t\t\t}\n\t\t} );\n\n\t\t// Close the dropdown using the arrow left/escape key.\n\t\tthis.keystrokes.set( 'arrowleft', closeDropdown );\n\t\tthis.keystrokes.set( 'esc', closeDropdown );\n\n\t\treturn super.init();\n\t}\n\n\t/**\n\t * Focuses the {@link #buttonView}.\n\t */\n\tfocus() {\n\t\tthis.buttonView.focus();\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-ui/src/dropdown/dropdownview.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/dropdown/list/createlistdropdown\n */\n\n/* global document */\n\nimport ListView from '../../list/listview';\nimport ListItemView from '../../list/listitemview';\nimport createDropdown from '../createdropdown';\n\n/**\n * Creates an instance of {@link module:ui/dropdown/list/listdropdownview~ListDropdownView} class using\n * defined model.\n *\n * @param {module:ui/dropdown/list/listdropdownmodel~ListDropdownModel} model Model of this list dropdown.\n * @param {module:utils/locale~Locale} locale The locale instance.\n * @returns {module:ui/dropdown/list/listdropdownview~ListDropdownView} The list dropdown view instance.\n */\nexport default function createListDropdown( model, locale ) {\n\tconst dropdownView = createDropdown( model, locale );\n\n\tconst listView = dropdownView.listView = new ListView( locale );\n\n\tlistView.items.bindTo( model.items ).using( itemModel => {\n\t\tconst item = new ListItemView( locale );\n\n\t\t// Bind all attributes of the model to the item view.\n\t\titem.bind( ...Object.keys( itemModel ) ).to( itemModel );\n\n\t\treturn item;\n\t} );\n\n\t// TODO: Delegate all events instead of just execute.\n\tlistView.items.delegate( 'execute' ).to( dropdownView );\n\n\tdropdownView.panelView.children.add( listView );\n\n\tdropdownView.on( 'change:isOpen', ( evt, name, value ) => {\n\t\tif ( value ) {\n\t\t\tattachDocumentClickListener( dropdownView );\n\t\t} else {\n\t\t\tdropdownView.stopListening( document );\n\t\t}\n\t} );\n\n\t// Close the dropdown when one of the list items has been executed.\n\tdropdownView.on( 'execute', () => {\n\t\tdropdownView.isOpen = false;\n\t} );\n\n\t// If the dropdown panel is already open, the arrow down key should\n\t// focus the first element in list.\n\tdropdownView.keystrokes.set( 'arrowdown', ( data, cancel ) => {\n\t\tif ( dropdownView.isOpen ) {\n\t\t\tlistView.focus();\n\t\t\tcancel();\n\t\t}\n\t} );\n\n\t// If the dropdown panel is already open, the arrow up key should\n\t// focus the last element in the list.\n\tdropdownView.keystrokes.set( 'arrowup', ( data, cancel ) => {\n\t\tif ( dropdownView.isOpen ) {\n\t\t\tlistView.focusLast();\n\t\t\tcancel();\n\t\t}\n\t} );\n\n\treturn dropdownView;\n}\n\n// Attaches a \"click\" listener in DOM to check if any element outside\n// the dropdown has been clicked.\n//\n// @private\n// @param {module:ui/dropdown/listdropdownview~ListDropdownView} dropdownView\nfunction attachDocumentClickListener( dropdownView ) {\n\t// TODO: It will probably be focus/blur-based rather than click. It should be bound\n\t// to focusmanager of some sort.\n\tdropdownView.listenTo( document, 'click', ( evtInfo, { target: domEvtTarget } ) => {\n\t\t// Collapse the dropdown when the webpage outside of the component is clicked.\n\t\tif ( dropdownView.element != domEvtTarget && !dropdownView.element.contains( domEvtTarget ) ) {\n\t\t\tdropdownView.isOpen = false;\n\t\t}\n\t} );\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-ui/src/dropdown/list/createlistdropdown.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/editableui/editableuiview\n */\n\nimport View from '../view';\nimport Template from '../template';\n\n/**\n * The editable UI view class.\n *\n * @extends module:ui/view~View\n */\nexport default class EditableUIView extends View {\n\t/**\n\t * Creates an instance of EditableUIView class.\n\t *\n\t * @param {module:utils/locale~Locale} [locale] The locale instance.\n\t * @param {HTMLElement} [editableElement] The editable element. If not specified, this view\n\t * should create it. Otherwise, the existing element should be used.\n\t */\n\tconstructor( locale, editableElement ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tif ( editableElement ) {\n\t\t\tthis.element = this.editableElement = editableElement;\n\t\t}\n\n\t\tthis.template = new Template( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\tbind.to( 'isFocused', value => value ? 'ck-focused' : 'ck-blurred' ),\n\t\t\t\t\t'ck-editor__editable'\n\t\t\t\t],\n\t\t\t\tcontenteditable: bind.to( 'isReadOnly', value => !value ),\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * Controls whether the editable is writable or not.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isReadOnly\n\t\t */\n\t\tthis.set( 'isReadOnly', false );\n\n\t\t/**\n\t\t * Controls whether the editable is focused, i.e. the user is typing in it.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isFocused\n\t\t */\n\t\tthis.set( 'isFocused', false );\n\n\t\t/**\n\t\t * An external {@link #editableElement} passed into the constructor, which also means\n\t\t * the view will not render its {@link #template}.\n\t\t *\n\t\t * @member {HTMLElement} #externalElement\n\t\t */\n\t\tthis.externalElement = editableElement;\n\n\t\t/**\n\t\t * The element which is the main editable element (usually the one with `contentEditable=\"true\"`).\n\t\t *\n\t\t * @readonly\n\t\t * @member {HTMLElement} #editableElement\n\t\t */\n\t}\n\n\t/**\n\t * Initializes the view by either applying the {@link #template} to the existing\n\t * {@link #editableElement} or assigning {@link #element} as {@link #editableElement}.\n\t *\n\t * @returns {Promise}\n\t */\n\tinit() {\n\t\tif ( this.externalElement ) {\n\t\t\tthis.template.apply( this.externalElement );\n\t\t} else {\n\t\t\tthis.editableElement = this.element;\n\t\t}\n\n\t\treturn super.init();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tif ( this.externalElement ) {\n\t\t\tthis.template.revert( this.externalElement );\n\t\t}\n\n\t\treturn super.destroy();\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-ui/src/editableui/editableuiview.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/editableui/inline/inlineeditableuiview\n */\n\nimport EditableUIView from '../../editableui/editableuiview';\nimport Template from '../../template';\n\n/**\n * The inline editable UI class implementing an inline {@link module:ui/editableui/editableuiview~EditableUIView}.\n *\n * @extends module:ui/editableui/editableuiview~EditableUIView\n */\nexport default class InlineEditableUIView extends EditableUIView {\n\t/**\n\t * Creates an instance of the InlineEditableUIView class.\n\t *\n\t * @param {module:utils/locale~Locale} [locale] The locale instance.\n\t * @param {HTMLElement} [editableElement] The editable element. If not specified, the\n\t * {@link module:ui/editableui/editableuiview~EditableUIView}\n\t * should create it. Otherwise, the existing element should be used.\n\t */\n\tconstructor( locale, editableElement ) {\n\t\tsuper( locale, editableElement );\n\n\t\tconst bind = this.bindTemplate;\n\t\tconst t = this.t;\n\n\t\t/**\n\t\t * The name of the editable UI view.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #name\n\t\t */\n\t\tthis.set( 'name', null );\n\n\t\tconst getLabel = value => {\n\t\t\treturn t( 'Rich Text Editor, %0', [ value ] );\n\t\t};\n\n\t\tTemplate.extend( this.template, {\n\t\t\tattributes: {\n\t\t\t\trole: 'textbox',\n\t\t\t\t'aria-label': bind.to( 'name', getLabel ),\n\t\t\t\tclass: 'ck-editor__editable_inline'\n\t\t\t}\n\t\t} );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-ui/src/editableui/inline/inlineeditableuiview.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/editorui/boxed/boxededitoruiview\n */\n\nimport EditorUIView from '../../editorui/editoruiview';\nimport uid from '@ckeditor/ckeditor5-utils/src/uid';\nimport Template from '../../template';\n\n/**\n * The boxed editor UI view class. This class represents an editor interface\n * consisting of a toolbar and an editable area, enclosed within a box.\n *\n * @extends module:ui/editorui/editoruiview~EditorUIView\n */\nexport default class BoxedEditorUIView extends EditorUIView {\n\t/**\n\t * Creates an instance of the boxed editor UI view class.\n\t *\n\t * @param {module:utils/locale~Locale} locale The locale instance..\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst t = this.t;\n\t\tconst ariaLabelUid = uid();\n\n\t\t/**\n\t\t * The UI's width.\n\t\t *\n\t\t * @observable\n\t\t * @member {Number} #width\n\t\t */\n\t\tthis.set( 'width', null );\n\n\t\t/**\n\t\t * The UI's height.\n\t\t *\n\t\t * @observable\n\t\t * @member {Number} #height\n\t\t */\n\t\tthis.set( 'height', null );\n\n\t\t/**\n\t\t * Collection of the child views located in the top (`.ck-editor__top`)\n\t\t * area of the UI.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.top = this.createCollection();\n\n\t\t/**\n\t\t * Collection of the child views located in the main (`.ck-editor__main`)\n\t\t * area of the UI.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.main = this.createCollection();\n\n\t\tthis.template = new Template( {\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-reset',\n\t\t\t\t\t'ck-editor',\n\t\t\t\t\t'ck-rounded-corners'\n\t\t\t\t],\n\t\t\t\trole: 'application',\n\t\t\t\tdir: 'ltr',\n\t\t\t\tlang: locale.lang,\n\t\t\t\t'aria-labelledby': `cke-editor__aria-label_${ ariaLabelUid }`\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttag: 'span',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tid: `cke-editor__aria-label_${ ariaLabelUid }`,\n\t\t\t\t\t\tclass: 'cke-voice-label'\n\t\t\t\t\t},\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\t// TODO: Editor name?\n\t\t\t\t\t\tt( 'Rich Text Editor' )\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: 'ck-editor__top ck-reset_all',\n\t\t\t\t\t\trole: 'presentation'\n\t\t\t\t\t},\n\t\t\t\t\tchildren: this.top\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: 'ck-editor__main',\n\t\t\t\t\t\trole: 'presentation'\n\t\t\t\t\t},\n\t\t\t\t\tchildren: this.main\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-ui/src/editorui/boxed/boxededitoruiview.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/editorui/editoruiview\n */\n\n/* globals document */\n\nimport View from '../view';\nimport Template from '../template';\n\n/**\n * The editor UI view class. Base class for the editor main views.\n *\n * @extends module:ui/view~View\n */\nexport default class EditorUIView extends View {\n\t/**\n\t * Creates an instance of the editor UI view class.\n\t *\n\t * @param {module:utils/locale~Locale} [locale] The locale instance.\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * Collection of the child views, detached from the DOM\n\t\t * structure of the editor, like panels, icons etc.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection} #body\n\t\t */\n\t\tthis.body = this.createCollection();\n\n\t\t/**\n\t\t * The element holding elements of the 'body' region.\n\t\t *\n\t\t * @private\n\t\t * @member {HTMLElement} #_bodyCollectionContainer\n\t\t */\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\treturn Promise.resolve()\n\t\t\t.then( () => this._renderBodyCollection() )\n\t\t\t.then( () => super.init() );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tthis._bodyCollectionContainer.remove();\n\n\t\treturn super.destroy();\n\t}\n\n\t/**\n\t * Creates and appends to `<body>` the {@link #body} collection container.\n\t *\n\t * @private\n\t */\n\t_renderBodyCollection() {\n\t\tconst bodyElement = this._bodyCollectionContainer = new Template( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-body',\n\t\t\t\t\t'ck-rounded-corners',\n\t\t\t\t\t'ck-reset_all'\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: this.body\n\t\t} ).render();\n\n\t\tdocument.body.appendChild( bodyElement );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-ui/src/editorui/editoruiview.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* global DOMParser */\n\n/**\n * @module ui/icon/iconview\n */\n\nimport View from '../view';\nimport Template from '../template';\n\n/**\n * The icon view class.\n *\n * @extends module:ui/view~View\n */\nexport default class IconView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * The SVG source of the icon.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #content\n\t\t */\n\t\tthis.set( 'content' );\n\n\t\t/**\n\t\t * This attribute specifies the boundaries to which the\n\t\t * icon content should stretch.\n\t\t *\n\t\t * @observable\n\t\t * @default '0 0 20 20'\n\t\t * @member {String} #viewBox\n\t\t */\n\t\tthis.set( 'viewBox', '0 0 20 20' );\n\n\t\tthis.template = new Template( {\n\t\t\ttag: 'svg',\n\t\t\tns: 'http://www.w3.org/2000/svg',\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-icon',\n\t\t\t\tviewBox: bind.to( 'viewBox' )\n\t\t\t}\n\t\t} );\n\n\t\t// This is a hack for lack of innerHTML binding.\n\t\t// See: https://github.com/ckeditor/ckeditor5-ui/issues/99.\n\t\tthis.on( 'change:content', ( evt, name, value ) => {\n\t\t\tconst svg = new DOMParser()\n\t\t\t\t.parseFromString( value.trim(), 'image/svg+xml' )\n\t\t\t\t.firstChild;\n\n\t\t\twhile ( svg.childNodes.length > 0 ) {\n\t\t\t\tthis.element.appendChild( svg.childNodes[ 0 ] );\n\t\t\t}\n\t\t} );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-ui/src/icon/iconview.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/label/labelview\n */\n\nimport View from '../view';\nimport Template from '../template';\n\n/**\n * The label view class.\n *\n * @extends module:ui/view~View\n */\nexport default class LabelView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * The text of the label.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #text\n\t\t */\n\t\tthis.set( 'text' );\n\n\t\t/**\n\t\t * The `for` attribute of the label (i.e. to pair with an `<input>` element).\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #for\n\t\t */\n\t\tthis.set( 'for' );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.template = new Template( {\n\t\t\ttag: 'label',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-label'\n\t\t\t\t],\n\t\t\t\tfor: bind.to( 'for' )\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttext: bind.to( 'text' )\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-ui/src/label/labelview.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/list/listitemview\n */\n\nimport View from '../view';\nimport Template from '../template';\n\n/**\n * The list item view class.\n *\n * @extends module:ui/view~View\n */\nexport default class ListItemView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\t/**\n\t\t * Controls the `tabindex` attribute of the item.\n\t\t *\n\t\t * @observable\n\t\t * @default -1\n\t\t * @member {String} #tabindex\n\t\t */\n\t\tthis.set( 'tabindex', -1 );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.template = new Template( {\n\t\t\ttag: 'li',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-list__item',\n\t\t\t\t\tbind.to( 'class' ),\n\t\t\t\t\tbind.if( 'isActive', 'ck-list__item_active' )\n\t\t\t\t],\n\t\t\t\tstyle: bind.to( 'style' ),\n\t\t\t\ttabindex: bind.to( 'tabindex' )\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttext: bind.to( 'label' )\n\t\t\t\t}\n\t\t\t],\n\n\t\t\ton: {\n\t\t\t\tclick: bind.to( 'execute' )\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * The label of the list item.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #label\n\t\t */\n\n\t\t/**\n\t\t * (Optional) The DOM style attribute of the list item.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #style\n\t\t */\n\n\t\t/**\n\t\t * (Optional) The additional class set on the {@link #element}.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #class\n\t\t */\n\n\t\t/**\n\t\t * (Optional) When set, it marks the item as active among the others.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isActive\n\t\t */\n\n\t\t/**\n\t\t * Fired when the list item has been clicked.\n\t\t *\n\t\t * @event #execute\n\t\t */\n\t}\n\n\t/**\n\t * Focuses the list item.\n\t */\n\tfocus() {\n\t\tthis.element.focus();\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-ui/src/list/listitemview.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/list/listview\n */\n\nimport View from '../view';\nimport Template from '../template';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport FocusCycler from '../focuscycler';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\n\n/**\n * The list view class.\n *\n * @extends module:ui/view~View\n */\nexport default class ListView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\t/**\n\t\t * Collection of the child list views.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.items = this.createCollection();\n\n\t\t/**\n\t\t * Tracks information about DOM focus in the list.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\t/**\n\t\t * Helps cycling over focusable {@link #items} in the list.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/focuscycler~FocusCycler}\n\t\t */\n\t\tthis._focusCycler = new FocusCycler( {\n\t\t\tfocusables: this.items,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate list items backwards using the arrowup key.\n\t\t\t\tfocusPrevious: 'arrowup',\n\n\t\t\t\t// Navigate toolbar items forwards using the arrowdown key.\n\t\t\t\tfocusNext: 'arrowdown',\n\t\t\t}\n\t\t} );\n\n\t\tthis.template = new Template( {\n\t\t\ttag: 'ul',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-reset',\n\t\t\t\t\t'ck-list'\n\t\t\t\t]\n\t\t\t},\n\n\t\t\tchildren: this.items\n\t\t} );\n\n\t\tthis.items.on( 'add', ( evt, item ) => {\n\t\t\tthis.focusTracker.add( item.element );\n\t\t} );\n\n\t\tthis.items.on( 'remove', ( evt, item ) => {\n\t\t\tthis.focusTracker.remove( item.element );\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\t// Start listening for the keystrokes coming from #element.\n\t\tthis.keystrokes.listenTo( this.element );\n\n\t\treturn super.init();\n\t}\n\n\t/**\n\t * Focuses the first focusable in {@link #items}.\n\t */\n\tfocus() {\n\t\tthis._focusCycler.focusFirst();\n\t}\n\n\t/**\n\t * Focuses the last focusable in {@link #items}.\n\t */\n\tfocusLast() {\n\t\tthis._focusCycler.focusLast();\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-ui/src/list/listview.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/model\n */\n\nimport extend from '@ckeditor/ckeditor5-utils/src/lib/lodash/extend';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\n\n/**\n * The base MVC model class.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class Model {\n\t/**\n\t * Creates a new Model instance.\n\t *\n\t * @param {Object} [attributes] The model state attributes to be defined during the instance creation.\n\t * @param {Object} [properties] The (out of state) properties to be appended to the instance during creation.\n\t */\n\tconstructor( attributes, properties ) {\n\t\t// Extend this instance with the additional (out of state) properties.\n\t\tif ( properties ) {\n\t\t\textend( this, properties );\n\t\t}\n\n\t\t// Initialize the attributes.\n\t\tif ( attributes ) {\n\t\t\tthis.set( attributes );\n\t\t}\n\t}\n}\n\nmix( Model, ObservableMixin );\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-ui/src/model.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/panel/balloon/contextualballoon\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport BalloonPanelView from './balloonpanelview';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * Provides the common contextual balloon panel for the editor.\n *\n * This plugin allows reusing a single {module:ui/panel/balloon/balloonpanelview~BalloonPanelView} instance\n * to display multiple contextual balloon panels in the editor.\n *\n * Child views of such a panel are stored in the stack and the last one in the stack is visible. When the\n * visible view is removed from the stack, the previous view becomes visible, etc. If there are no more\n * views in the stack, the balloon panel will hide.\n *\n * It simplifies managing the views and helps\n * avoid the unnecessary complexity of handling multiple {module:ui/panel/balloon/balloonpanelview~BalloonPanelView}\n * instances in the editor.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ContextualBalloon extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ui/contextualballoon';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\t/**\n\t\t * The common balloon panel view.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/panel/balloon/balloonpanelview~BalloonPanelView} #view\n\t\t */\n\t\tthis.view = new BalloonPanelView();\n\n\t\t/**\n\t\t * Stack of the views injected into the balloon. Last one in the stack is displayed\n\t\t * as a content of {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon#view}.\n\t\t *\n\t\t * @private\n\t\t * @member {Map} #_stack\n\t\t */\n\t\tthis._stack = new Map();\n\n\t\t// Editor should be focused when contextual balloon is focused.\n\t\tthis.editor.ui.focusTracker.add( this.view.element );\n\n\t\t// Add balloon panel view to editor `body` collection and wait until view will be ready.\n\t\treturn this.editor.ui.view.body.add( this.view );\n\t}\n\n\t/**\n\t * Returns the currently visible view or `null` when there are no\n\t * views in the stack.\n\t *\n\t * @returns {module:ui/view~View|null}\n\t */\n\tget visibleView() {\n\t\tconst item = this._stack.get( this.view.content.get( 0 ) );\n\n\t\treturn item ? item.view : null;\n\t}\n\n\t/**\n\t * Returns `true` when the given view is in the stack. Otherwise returns `false`.\n\t *\n\t * @param {module:ui/view~View} view\n\t * @returns {Boolean}\n\t */\n\thasView( view ) {\n\t\treturn this._stack.has( view );\n\t}\n\n\t/**\n\t * Adds a new view to the stack and makes it visible.\n\t *\n\t * @param {Object} data Configuration of the view.\n\t * @param {module:ui/view~View} [data.view] Content of the balloon.\n\t * @param {module:utils/dom/position~Options} [data.position] Positioning options.\n\t * @param {String} [data.balloonClassName] Additional css class for {@link #view} added when given view is visible.\n\t * @returns {Promise} A Promise resolved when the child {@link module:ui/view~View#init} is done.\n\t */\n\tadd( data ) {\n\t\tif ( this.hasView( data.view ) ) {\n\t\t\t/**\n\t\t\t * Trying to add configuration of the same view more than once.\n\t\t\t *\n\t\t\t * @error contextualballoon-add-view-exist\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'contextualballoon-add-view-exist: Cannot add configuration of the same view twice.' );\n\t\t}\n\n\t\t// When adding view to the not empty balloon.\n\t\tif ( this.visibleView ) {\n\t\t\t// Remove displayed content from the view.\n\t\t\tthis.view.content.remove( this.visibleView );\n\t\t}\n\n\t\t// Add new view to the stack.\n\t\tthis._stack.set( data.view, data );\n\t\t// And display it.\n\t\treturn this._show( data );\n\t}\n\n\t/**\n\t * Removes the given view from the stack. If the removed view was visible,\n\t * then the view preceding it in the stack will become visible instead.\n\t * When there is no view in the stack then balloon will hide.\n\t *\n\t * @param {module:ui/view~View} view A view to be removed from the balloon.\n\t * @returns {Promise} A Promise resolved when the preceding view is ready.\n\t */\n\tremove( view ) {\n\t\tif ( !this.hasView( view ) ) {\n\t\t\t/**\n\t\t\t * Trying to remove configuration of the view not defined in the stack.\n\t\t\t *\n\t\t\t * @error contextualballoon-remove-view-not-exist\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'contextualballoon-remove-view-not-exist: Cannot remove configuration of not existing view.' );\n\t\t}\n\n\t\t// A Promise resolved when the preceding view is ready.\n\t\tlet promise = Promise.resolve();\n\n\t\t// When visible view is being removed.\n\t\tif ( this.visibleView === view ) {\n\t\t\t// We need to remove it from the view content.\n\t\t\tthis.view.content.remove( view );\n\n\t\t\t// And then remove from the stack.\n\t\t\tthis._stack.delete( view );\n\n\t\t\t// Next we need to check if there is other view in stack to show.\n\t\t\tconst last = Array.from( this._stack.values() ).pop();\n\n\t\t\t// If it is some other view.\n\t\t\tif ( last ) {\n\t\t\t\t// Just show it.\n\t\t\t\tpromise = this._show( last );\n\t\t\t} else {\n\t\t\t\t// Hide the balloon panel.\n\t\t\t\tthis.view.hide();\n\t\t\t}\n\t\t} else {\n\t\t\t// Just remove given view from the stack.\n\t\t\tthis._stack.delete( view );\n\t\t}\n\n\t\treturn promise;\n\t}\n\n\t/**\n\t * Updates the position of the balloon panel according to the given position data\n\t * or position data of the first view in the stack.\n\t *\n\t * @param {module:utils/dom/position~Options} [position] position options.\n\t */\n\tupdatePosition( position ) {\n\t\tif ( position ) {\n\t\t\tthis._stack.values().next().value.position = position;\n\t\t}\n\n\t\tthis.view.attachTo( this._getBalloonPosition() );\n\t}\n\n\t/**\n\t * Sets the view as a content of the balloon and attaches balloon using position\n\t * options of the first view.\n\t *\n\t * @private\n\t * @param {Object} data Configuration.\n\t * @param {module:ui/view~View} [data.view] View to show in the balloon.\n\t * @param {String} [data.balloonClassName=''] Additional class name which will added to the {#_balloon} view.\n\t */\n\t_show( { view, balloonClassName = '' } ) {\n\t\tthis.view.className = balloonClassName;\n\n\t\treturn this.view.content.add( view ).then( () => {\n\t\t\tthis.view.pin( this._getBalloonPosition() );\n\t\t} );\n\t}\n\n\t/**\n\t * Returns position options of the first view in the stack.\n\t * This keeps the balloon in the same position when view is changed.\n\t *\n\t * @private\n\t * @returns {module:utils/dom/position~Options}\n\t */\n\t_getBalloonPosition() {\n\t\treturn this._stack.values().next().value.position;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tthis.editor.ui.view.body.remove( this.view );\n\t\tthis.view.destroy();\n\t\tthis._stack.clear();\n\t\tsuper.destroy();\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-ui/src/panel/balloon/contextualballoon.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/toolbar/enabletoolbarkeyboardfocus\n */\n\n/**\n * Enables focus/blur toolbar navigation using `Alt+F10` and `Esc` keystrokes.\n *\n * @param {Object} options Options of the utility.\n * @param {*} options.origin A view to which the focus will return when `Esc` is pressed and\n * `options.toolbar` is focused.\n * @param {module:utils/keystrokehandler~KeystrokeHandler} options.originKeystrokeHandler A keystroke\n * handler to register `Alt+F10` keystroke.\n * @param {module:utils/focustracker~FocusTracker} options.originFocusTracker A focus tracker\n * for `options.origin`.\n * @param {module:ui/toolbar/toolbarview~ToolbarView} options.toolbar A toolbar which is to gain\n * focus when `Alt+F10` is pressed.\n */\nexport default function enableToolbarKeyboardFocus( {\n\torigin,\n\toriginKeystrokeHandler,\n\toriginFocusTracker,\n\ttoolbar\n} ) {\n\t// Because toolbar items can get focus, the overall state of the toolbar must\n\t// also be tracked.\n\toriginFocusTracker.add( toolbar.element );\n\n\t// Focus the toolbar on the keystroke, if not already focused.\n\toriginKeystrokeHandler.set( 'Alt+F10', ( data, cancel ) => {\n\t\tif ( originFocusTracker.isFocused && !toolbar.focusTracker.isFocused ) {\n\t\t\ttoolbar.focus();\n\t\t\tcancel();\n\t\t}\n\t} );\n\n\t// Blur the toolbar and bring the focus back to origin.\n\ttoolbar.keystrokes.set( 'Esc', ( data, cancel ) => {\n\t\tif ( toolbar.focusTracker.isFocused ) {\n\t\t\torigin.focus();\n\t\t\tcancel();\n\t\t}\n\t} );\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-ui/src/toolbar/enabletoolbarkeyboardfocus.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/toolbar/sticky/stickytoolbarview\n */\n\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\nimport Template from '../../template';\nimport ToolbarView from '../toolbarview';\nimport toUnit from '@ckeditor/ckeditor5-utils/src/dom/tounit';\n\nconst toPx = toUnit( 'px' );\n\n/**\n * The sticky toolbar view class.\n *\n * @extends module:ui/toolbar/toolbarview~ToolbarView\n */\nexport default class StickyToolbarView extends ToolbarView {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * Controls whether the sticky toolbar should be active. When any editable\n\t\t * is focused in the editor, toolbar becomes active.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #isActive\n\t\t */\n\t\tthis.set( 'isActive', false );\n\n\t\t/**\n\t\t * Controls whether the sticky toolbar is in the \"sticky\" state.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #isSticky\n\t\t */\n\t\tthis.set( 'isSticky', false );\n\n\t\t/**\n\t\t * The limiter element for the sticky toolbar instance. Its bounding rect limits\n\t\t * the \"stickyness\" of the toolbar, i.e. when the toolbar reaches the bottom\n\t\t * edge of the limiter, it becomes sticky to that edge and does not float\n\t\t * off the limiter. It is mandatory for the toolbar to work properly and once\n\t\t * set, it cannot be changed.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {HTMLElement} #limiterElement\n\t\t */\n\t\tthis.set( 'limiterElement', null );\n\n\t\t/**\n\t\t * The offset from the bottom edge of {@link #limiterElement}\n\t\t * which stops the toolbar from stickying any further to prevent limiter's content\n\t\t * from being completely covered.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @default 50\n\t\t * @member {Number} #limiterOffset\n\t\t */\n\t\tthis.set( 'limiterOffset', 50 );\n\n\t\t/**\n\t\t * Controls the `margin-left` CSS style of the toolbar.\n\t\t *\n\t\t * @protected\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {String} #_marginLeft\n\t\t */\n\t\tthis.set( '_marginLeft', null );\n\n\t\t/**\n\t\t * Set `true` if the sticky toolbar reached the bottom edge of the\n\t\t * {@link #limiterElement}.\n\t\t *\n\t\t * @protected\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #_isStickyToTheLimiter\n\t\t */\n\t\tthis.set( '_isStickyToTheLimiter', false );\n\n\t\t/**\n\t\t * The DOM bounding client rect of the {@link module:ui/view~View#element} of the toolbar.\n\t\t *\n\t\t * @protected\n\t\t * @member {Object} #_toolbarRect\n\t\t */\n\n\t\t/**\n\t\t * The DOM bounding client rect of the {@link #limiterElement}\n\t\t * of the toolbar.\n\t\t *\n\t\t * @protected\n\t\t * @member {Object} #_limiterRect\n\t\t */\n\n\t\tTemplate.extend( this.template, {\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t// Toggle class of the toolbar when \"sticky\" state changes in the view.\n\t\t\t\t\tbind.if( 'isSticky', 'ck-toolbar_sticky' ),\n\t\t\t\t\tbind.if( '_isStickyToTheLimiter', 'ck-toolbar_sticky_bottom-limit' ),\n\t\t\t\t],\n\t\t\t\tstyle: {\n\t\t\t\t\twidth: bind.to( 'isSticky', isSticky => {\n\t\t\t\t\t\treturn isSticky ? toPx( this._elementPlaceholder.getBoundingClientRect().width ) : null;\n\t\t\t\t\t} ),\n\n\t\t\t\t\tbottom: bind.to( '_isStickyToTheLimiter', _isStickyToTheLimiter => {\n\t\t\t\t\t\treturn _isStickyToTheLimiter ? toPx( this.limiterOffset ) : null;\n\t\t\t\t\t} ),\n\n\t\t\t\t\tmarginLeft: bind.to( '_marginLeft' )\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * A dummy element which visually fills the space as long as the\n\t\t * actual toolbar is sticky. It prevents flickering of the UI.\n\t\t *\n\t\t * @private\n\t\t * @property {HTMLElement}\n\t\t */\n\t\tthis._elementPlaceholder = new Template( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-toolbar__placeholder'\n\t\t\t\t],\n\t\t\t\tstyle: {\n\t\t\t\t\tdisplay: bind.to( 'isSticky', isSticky => isSticky ? 'block' : 'none' ),\n\t\t\t\t\theight: bind.to( 'isSticky', isSticky => {\n\t\t\t\t\t\treturn isSticky ? toPx( this._toolbarRect.height ) : null;\n\t\t\t\t\t} )\n\t\t\t\t}\n\t\t\t}\n\t\t} ).render();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tsuper.init();\n\n\t\tthis.element.parentNode.insertBefore( this._elementPlaceholder, this.element );\n\n\t\t// Update sticky state of the toolbar as the window is being scrolled.\n\t\tthis.listenTo( global.window, 'scroll', () => {\n\t\t\tthis._checkIfShouldBeSticky();\n\t\t} );\n\n\t\t// Synchronize with `model.isActive` because sticking an inactive toolbar is pointless.\n\t\tthis.listenTo( this, 'change:isActive', () => {\n\t\t\tthis._checkIfShouldBeSticky();\n\t\t} );\n\t}\n\n\t/**\n\t * Destroys the toolbar and removes the {@link #_elementPlaceholder}.\n\t */\n\tdestroy() {\n\t\treturn super.destroy().then( () => {\n\t\t\tthis._elementPlaceholder.remove();\n\t\t} );\n\t}\n\n\t/**\n\t * Analyzes the environment to decide whether the toolbar should\n\t * be sticky or not.\n\t *\n\t * @protected\n\t */\n\t_checkIfShouldBeSticky() {\n\t\tconst limiterRect = this._limiterRect = this.limiterElement.getBoundingClientRect();\n\t\tconst toolbarRect = this._toolbarRect = this.element.getBoundingClientRect();\n\n\t\t// The toolbar must be active to become sticky.\n\t\tthis.isSticky = this.isActive &&\n\t\t\t// The limiter's top edge must be beyond the upper edge of the visible viewport.\n\t\t\tlimiterRect.top < 0 &&\n\t\t\t// The model#limiterElement's height mustn't be smaller than the toolbar's height and model#limiterOffset.\n\t\t\t// There's no point in entering the sticky mode if the model#limiterElement is very, very small, because\n\t\t\t// it would immediately set model#_isStickyToTheLimiter true and, given model#limiterOffset, the toolbar\n\t\t\t// would be positioned before the model#limiterElement.\n\t\t\tthis._toolbarRect.height + this.limiterOffset < limiterRect.height;\n\n\t\t// Stick the toolbar to the top edge of the viewport simulating CSS position:sticky.\n\t\t// TODO: Possibly replaced by CSS in the future http://caniuse.com/#feat=css-sticky\n\t\tif ( this.isSticky ) {\n\t\t\tthis._isStickyToTheLimiter = limiterRect.bottom < toolbarRect.height + this.limiterOffset;\n\t\t\tthis._marginLeft = this._isStickyToTheLimiter ? null : toPx( -global.window.scrollX );\n\t\t}\n\t\t// Detach the toolbar from the top edge of the viewport.\n\t\telse {\n\t\t\tthis._isStickyToTheLimiter = false;\n\t\t\tthis._marginLeft = null;\n\t\t}\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-ui/src/toolbar/sticky/stickytoolbarview.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/toolbar/toolbarseparatorview\n */\n\nimport View from '../view';\nimport Template from '../template';\n\n/**\n * The toolbar separator view class.\n *\n * @extends module:ui/view~View\n */\nexport default class ToolbarSeparatorView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tthis.template = new Template( {\n\t\t\ttag: 'span',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-toolbar__separator'\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-ui/src/toolbar/toolbarseparatorview.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module undo/redocommand\n */\n\nimport BaseCommand from './basecommand';\nimport deltaTransform from '@ckeditor/ckeditor5-engine/src/model/delta/transform';\n\n/**\n * The redo command stores {@link module:engine/model/batch~Batch batches} that were used to undo a batch by\n * {@link module:undo/undocommand~UndoCommand}. It is able to redo a previously undone batch by reversing the undoing\n * batches created by `UndoCommand`. The reversed batch is also transformed by batches from\n * {@link module:engine/model/document~Document#history history} that happened after it and are not other redo batches.\n *\n * The redo command also takes care of restoring the {@link module:engine/model/document~Document#selection document selection}\n * to the state before an undone batch was applied.\n *\n * @extends module:undo/basecommand~BaseCommand\n */\nexport default class RedoCommand extends BaseCommand {\n\t/**\n\t * Executes the command. This method reverts the last {@link module:engine/model/batch~Batch batch} added to\n\t * the command's stack, applies the reverted and transformed version on the\n\t * {@link module:engine/model/document~Document document} and removes the batch from the stack.\n\t * Then, it restores the {@link module:engine/model/document~Document#selection document selection}.\n\t *\n\t * @protected\n\t */\n\t_doExecute() {\n\t\tconst item = this._stack.pop();\n\n\t\t// All changes have to be done in one `enqueueChanges` callback so other listeners will not\n\t\t// step between consecutive deltas, or won't do changes to the document before selection is properly restored.\n\t\tthis.editor.document.enqueueChanges( () => {\n\t\t\tconst lastDelta = item.batch.deltas[ item.batch.deltas.length - 1 ];\n\t\t\tconst nextBaseVersion = lastDelta.baseVersion + lastDelta.operations.length;\n\n\t\t\t// Selection state is from the moment after undo happened. It needs to be transformed by all the deltas\n\t\t\t// that happened after the selection state got saved. Unfortunately it is tricky, because those deltas\n\t\t\t// are already compressed in the history (they are removed).\n\t\t\t// Because of that we will transform the selection only by non-redo deltas\n\t\t\tconst deltas = Array.from( this.editor.document.history.getDeltas( nextBaseVersion ) ).filter( delta => {\n\t\t\t\treturn !this._createdBatches.has( delta.batch );\n\t\t\t} );\n\n\t\t\tthis._restoreSelection( item.selection.ranges, item.selection.isBackward, deltas );\n\t\t\tthis._redo( item.batch );\n\t\t} );\n\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Redoes a batch by reversing the batch that has undone it, transforming that batch and applying it. This is\n\t * a helper method for {@link #_doExecute}.\n\t *\n\t * @private\n\t * @param {module:engine/model/batch~Batch} storedBatch The batch whose deltas will be reversed, transformed and applied.\n\t */\n\t_redo( storedBatch ) {\n\t\tconst document = this.editor.document;\n\n\t\t// All changes done by the command execution will be saved as one batch.\n\t\tconst redoingBatch = document.batch();\n\t\tthis._createdBatches.add( redoingBatch );\n\n\t\tconst deltasToRedo = storedBatch.deltas.slice();\n\t\tdeltasToRedo.reverse();\n\n\t\t// We will process each delta from `storedBatch`, in reverse order. If there was deltas A, B and C in stored batch,\n\t\t// we need to revert them in reverse order, so first reverse C, then B, then A.\n\t\tfor ( const deltaToRedo of deltasToRedo ) {\n\t\t\t// Keep in mind that all algorithms return arrays. That's because the transformation might result in multiple\n\t\t\t// deltas, so we need arrays to handle them anyway. To simplify algorithms, it is better to always have arrays\n\t\t\t// in mind. For simplicity reasons, we will use singular form in descriptions and names.\n\n\t\t\tconst nextBaseVersion = deltaToRedo.baseVersion + deltaToRedo.operations.length;\n\n\t\t\t// As stated above, convert delta to array of deltas.\n\t\t\tlet reversedDelta = [ deltaToRedo.getReversed() ];\n\n\t\t\t// 1. Transform that delta by deltas from history that happened after it.\n\t\t\t// Omit deltas from \"redo\" batches, because reversed delta already bases on them. Transforming by them\n\t\t\t// again will result in incorrect deltas.\n\t\t\tfor ( const historyDelta of document.history.getDeltas( nextBaseVersion ) ) {\n\t\t\t\tif ( !this._createdBatches.has( historyDelta.batch ) ) {\n\t\t\t\t\treversedDelta = deltaTransform.transformDeltaSets( reversedDelta, [ historyDelta ], true ).deltasA;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 2. After reversed delta has been transformed by all history deltas, apply it.\n\t\t\tfor ( const delta of reversedDelta ) {\n\t\t\t\t// Fix base version.\n\t\t\t\tdelta.baseVersion = document.version;\n\n\t\t\t\t// Before applying, add the delta to the `redoingBatch`.\n\t\t\t\tredoingBatch.addDelta( delta );\n\n\t\t\t\t// Now, apply all operations of the delta.\n\t\t\t\tfor ( const operation of delta.operations ) {\n\t\t\t\t\tdocument.applyOperation( operation );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-undo/src/redocommand.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module undo/undo\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport UndoEngine from './undoengine';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\n\nimport undoIcon from '../theme/icons/undo.svg';\nimport redoIcon from '../theme/icons/redo.svg';\n\n/**\n * The undo feature. It introduces the Undo and Redo buttons to the editor.\n *\n * Below is the explanation of the undo mechanism working together with {@link module:engine/model/history~History History}:\n *\n * Whenever a {@link module:engine/model/delta/delta~Delta delta} is applied to the\n * {@link module:engine/model/document~Document document}, it is saved to `History` as is.\n * The {@link module:engine/model/batch~Batch batch} that owns that delta is also saved, in\n * {@link module:undo/undocommand~UndoCommand}, together with the selection that was present in the document before the\n * delta was applied. A batch is saved instead of the delta because changes are undone batch-by-batch, not delta-by-delta\n * and a batch is seen as one undo step.\n *\n * After some changes happen to the document, the `History` and `UndoCommand` stack can be represented as follows:\n *\n *\t\t  History                           Undo stack\n *\t\t===========             ==================================\n *\t\t[delta A1]              [batch A with selection before A1]\n *\t\t[delta B1]              [batch B with selection before B1]\n *\t\t[delta B2]              [batch C with selection before C1]\n *\t\t[delta C1]\n *\t\t[delta C2]\n *\t\t[delta B3]\n *\t\t[delta C3]\n *\n * Where deltas starting with the same letter are from same batch.\n *\n * Undoing a batch means that a set of deltas which will reverse the effects of that batch needs to be generated. For example, if a batch\n * added several letters, undoing the batch should remove them. It is important to apply undoing deltas in the reversed order,\n * so if a batch has delta `X`, `Y`, `Z`, reversed deltas `Zr`, `Yr` and `Xr` need to be applied. Otherwise reversed delta\n * `Xr` would operate on a wrong document state, because delta `X` does not know that deltas `Y` and `Z` happened.\n *\n * After deltas from an undone batch got {@link module:engine/model/delta/delta~Delta#getReversed reversed},\n * one needs to make sure if they are ready to be applied. In the scenario above, delta `C3` is the last delta and `C3r`\n * bases on up-to-date document state, so it can be applied to the document.\n *\n *\t\t  History                           Undo stack\n *\t\t===========             ==================================\n *\t\t[delta A1 ]             [batch A with selection before A1]\n *\t\t[delta B1 ]             [batch B with selection before B1]\n *\t\t[delta B2 ]             [   processing undoing batch C   ]\n *\t\t[delta C1 ]\n *\t\t[delta C2 ]\n *\t\t[delta B3 ]\n *\t\t[delta C3 ]\n *\t\t[delta C3r]\n *\n * Next is delta `C2`, reversed to `C2r`. `C2r` bases on `C2`, so it bases on the wrong document state. It needs to be\n * transformed by deltas from history that happened after it, so it \"knows\" about them. Let us assume that `C2' = C2r * B3 * C3 * C3r`,\n * where `*` means \"transformed by\". As can be seen, `C2r` is transformed by a delta which is undone afterwards anyway.\n * This brings two problems: lower effectiveness (obvious) and incorrect results. Bad results come from the fact that\n * operational transformation algorithms assume there is no connection between two transformed operations when resolving\n * conflicts, which is true for example for collaborative editing, but is not true for the undo algorithm.\n *\n * To prevent both problems, `History` introduces an API to {@link module:engine/model/history~History#removeDelta remove}\n * deltas from history. It is used to remove undone and undoing deltas after they are applied. It feels right &mdash; since when a\n * delta is undone or reversed, it is \"removed\" and there should be no sign of it in the history (fig. 1).\n *\n * Notes:\n *\n * * `---` symbolizes a removed delta.\n * * `'` symbolizes a reversed delta that was later transformed.\n *\n *\t\tHistory (fig. 1)            History (fig. 2)            History (fig. 3)\n *\t\t================            ================            ================\n *\t\t   [delta A1]                  [delta A1]                  [delta A1]\n *\t\t   [delta B1]                  [delta B1]                  [delta B1]\n *\t\t   [delta B2]                  [delta B2]                  [delta B2]\n *\t\t   [delta C1]                  [delta C1]                  [---C1---]\n *\t\t   [delta C2]                  [---C2---]                  [---C2---]\n *\t\t   [delta B3]                  [delta B3]                  [delta B3]\n *\t\t   [---C3---]                  [---C3---]                  [---C3---]\n *\t\t   [---C3r--]                  [---C3r--]                  [---C3r--]\n *\t\t                               [---C2'--]                  [---C2'--]\n *\t\t                                                           [---C1'--]\n *\n * `C2r` can now be transformed only by `B3` and both `C2'` and `C2` can be removed (fig. 2). Same with `C1` (fig. 3).\n *\n * But what about that selection? For batch `C`, undo feature remembers the selection just before `C1` was applied. It can be\n * visualized between delta `B2` and `B3` (see fig. 3). As can be seen, some operations were applied to the document since the selection\n * state was remembered. Setting the document selection as it was remembered would be incorrect. It feels natural that\n * the selection state should also be transformed by deltas from history. The same pattern applies as with transforming deltas &mdash;\n * ranges should not be transformed by undone and undoing deltas. Thankfully, those deltas are already removed from history.\n *\n * Unfortunately, a problem appears with delta `B3`. It still remembers the context of deltas `C2` and `C1` on which it bases.\n * It is an obvious error &mdash; transforming by that delta would lead to incorrect results or \"repeating\" history would\n * produce a different document than the actual one.\n *\n * To prevent this situation, `B3` needs to also be {@link module:engine/model/history~History#updateDelta updated} in history.\n * It should be kept in a state that \"does not remember\" deltas that were removed from history. It is easily\n * achieved while transforming the reversed delta. For example, when `C2r` is transformed by `B3`, at the same time `B3` is\n * transformed by `C2r`. Transforming `B3` that remembers `C2` by a delta reversing `C2` effectively makes `B3` \"forget\" about `C2`.\n * By doing these transformations you effectively make `B3` base on `B2` which is the correct state of history (fig. 4).\n *\n *\t\t     History (fig. 4)                         History (fig. 5)\n *\t\t===========================            ===============================\n *\t\t        [delta A1]                               [---A1---]\n *\t\t        [delta B1]                         [delta B1 \"without A1\"]\n *\t\t        [delta B2]                         [delta B2 \"without A1\"]\n *\t\t        [---C1---]                               [---C1---]\n *\t\t        [---C2---]                               [---C2---]\n *\t\t[delta B3 \"without C2, C1\"]            [delta B3 \"without C2, C1, A1\"]\n *\t\t        [---C3---]                               [---C3---]\n *\t\t        [---C3r--]                               [---C3r--]\n *\t\t        [---C2'--]                               [---C2'--]\n *\t\t        [---C1'--]                               [---C1'--]\n *\t\t                                                 [---A1'--]\n *\n * Selective undo works on the same basis, however, instead of undoing the last batch in the undo stack, any batch can be undone.\n * The same algorithm applies: deltas from a batch (i.e. `A1`) are reversed and then transformed by deltas stored in history,\n * simultaneously updating them. Then deltas are applied to the document and removed from history (fig. 5).\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Undo extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ UndoEngine ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'undo/undo';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\n\t\tthis._addButton( 'undo', t( 'Undo' ), 'CTRL+Z', undoIcon );\n\t\tthis._addButton( 'redo', t( 'Redo' ), 'CTRL+Y', redoIcon );\n\n\t\teditor.keystrokes.set( 'CTRL+Z', 'undo' );\n\t\teditor.keystrokes.set( 'CTRL+Y', 'redo' );\n\t\teditor.keystrokes.set( 'CTRL+SHIFT+Z', 'redo' );\n\t}\n\n\t/**\n\t * Creates a button for the specified command.\n\t *\n\t * @private\n\t * @param {String} name Command name.\n\t * @param {String} label Button label.\n\t * @param {String} keystroke Command keystroke.\n\t * @param {String} Icon Source of the icon.\n\t */\n\t_addButton( name, label, keystroke, Icon ) {\n\t\tconst editor = this.editor;\n\t\tconst command = editor.commands.get( name );\n\n\t\teditor.ui.componentFactory.add( name, locale => {\n\t\t\tconst view = new ButtonView( locale );\n\n\t\t\tview.set( {\n\t\t\t\tlabel,\n\t\t\t\ticon: Icon,\n\t\t\t\tkeystroke,\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\tview.bind( 'isEnabled' ).to( command, 'isEnabled' );\n\n\t\t\tthis.listenTo( view, 'execute', () => editor.execute( name ) );\n\n\t\t\treturn view;\n\t\t} );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-undo/src/undo.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module undo/undocommand\n */\n\nimport { default as BaseCommand, transformRangesByDeltas } from './basecommand';\nimport deltaTransform from '@ckeditor/ckeditor5-engine/src/model/delta/transform';\n\n/**\n * The undo command stores {@link module:engine/model/batch~Batch batches} applied to the\n * {@link module:engine/model/document~Document document} and is able to undo a batch by reversing it and transforming by\n * other batches from {@link module:engine/model/document~Document#history history} that happened after the reversed batch.\n *\n * The undo command also takes care of restoring the {@link module:engine/model/document~Document#selection document selection}\n * to the state before the undone batch was applied.\n *\n * @extends module:undo/basecommand~BaseCommand\n */\nexport default class UndoCommand extends BaseCommand {\n\t/**\n\t * Executes the command. This method reverts a {@link module:engine/model/batch~Batch batch} added to the command's stack, transforms\n\t * and applies the reverted version on the {@link module:engine/model/document~Document document} and removes the batch from the stack.\n\t * Then, it restores the {@link module:engine/model/document~Document#selection document selection}.\n\t *\n\t * @protected\n\t * @fires revert\n\t * @param {module:engine/model/batch~Batch} [batch] A batch that should be undone. If not set, the last added batch will be undone.\n\t */\n\t_doExecute( batch = null ) {\n\t\t// If batch is not given, set `batchIndex` to the last index in command stack.\n\t\tconst batchIndex = batch ? this._stack.findIndex( a => a.batch == batch ) : this._stack.length - 1;\n\n\t\tconst item = this._stack.splice( batchIndex, 1 )[ 0 ];\n\n\t\t// All changes has to be done in one `enqueueChanges` callback so other listeners will not\n\t\t// step between consecutive deltas, or won't do changes to the document before selection is properly restored.\n\t\tthis.editor.document.enqueueChanges( () => {\n\t\t\tconst undoingBatch = this._undo( item.batch );\n\n\t\t\tconst deltas = this.editor.document.history.getDeltas( item.batch.baseVersion );\n\t\t\tthis._restoreSelection( item.selection.ranges, item.selection.isBackward, deltas );\n\n\t\t\tthis.fire( 'revert', item.batch, undoingBatch );\n\t\t} );\n\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Returns an index in {@link module:undo/basecommand~BaseCommand#_stack} pointing to the item that is storing a\n\t * batch that has a given {@link module:engine/model/batch~Batch#baseVersion}.\n\t *\n\t * @private\n\t * @param {Number} baseVersion The base version of the batch to find.\n\t * @returns {Number|null}\n\t */\n\t_getItemIndexFromBaseVersion( baseVersion ) {\n\t\tfor ( let i = 0; i < this._stack.length; i++ ) {\n\t\t\tif ( this._stack[ i ].batch.baseVersion == baseVersion ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Undoes a batch by reversing a batch from history, transforming that reversed batch and applying it. This is\n\t * a helper method for {@link #_doExecute}.\n\t *\n\t * @private\n\t * @param {module:engine/model/batch~Batch} batchToUndo A batch whose deltas will be reversed, transformed and applied.\n\t */\n\t_undo( batchToUndo ) {\n\t\tconst document = this.editor.document;\n\n\t\t// All changes done by the command execution will be saved as one batch.\n\t\tconst undoingBatch = document.batch();\n\t\tthis._createdBatches.add( undoingBatch );\n\n\t\tconst history = document.history;\n\t\tconst deltasToUndo = batchToUndo.deltas.slice();\n\t\tdeltasToUndo.reverse();\n\n\t\t// We will process each delta from `batchToUndo`, in reverse order. If there was deltas A, B and C in undone batch,\n\t\t// we need to revert them in reverse order, so first reverse C, then B, then A.\n\t\tfor ( const deltaToUndo of deltasToUndo ) {\n\t\t\t// Keep in mind that all algorithms return arrays. That's because the transformation might result in multiple\n\t\t\t// deltas, so we need arrays to handle them anyway. To simplify algorithms, it is better to always have arrays\n\t\t\t// in mind. For simplicity reasons, we will use singular form in descriptions and names.\n\t\t\tconst baseVersion = deltaToUndo.baseVersion;\n\t\t\tconst nextBaseVersion = baseVersion + deltaToUndo.operations.length;\n\n\t\t\t// 1. Get updated version of the delta from the history.\n\t\t\t// Batch stored in the undo command might have an outdated version of the delta that should be undone.\n\t\t\t// To prevent errors, we will take an updated version of it from the history, basing on delta's `baseVersion`.\n\t\t\tconst updatedDeltaToUndo = history.getDelta( baseVersion );\n\n\t\t\t// This is a safe valve in case of not finding delta to undo in history. This may come up if that delta\n\t\t\t// got updated into no deltas, or removed from history.\n\t\t\tif ( updatedDeltaToUndo === null ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// 2. Reverse delta from the history.\n\t\t\tupdatedDeltaToUndo.reverse();\n\t\t\tlet reversedDelta = [];\n\n\t\t\tfor ( const delta of updatedDeltaToUndo ) {\n\t\t\t\treversedDelta.push( delta.getReversed() );\n\t\t\t}\n\n\t\t\t// Stores history deltas transformed by `deltaToUndo`. Will be used later for updating document history.\n\t\t\tconst updatedHistoryDeltas = {};\n\n\t\t\t// 3. Transform reversed delta by history deltas that happened after delta to undo. We have to bring\n\t\t\t// reversed delta to the current state of document. While doing this, we will also update history deltas\n\t\t\t// to the state which \"does not remember\" delta that we undo.\n\t\t\tfor ( const historyDelta of history.getDeltas( nextBaseVersion ) ) {\n\t\t\t\t// 3.1. Transform selection range stored with history batch by reversed delta.\n\t\t\t\t// It is important to keep stored selection ranges updated. As we are removing and updating deltas in the history,\n\t\t\t\t// selection ranges would base on outdated history state.\n\t\t\t\tconst itemIndex = this._getItemIndexFromBaseVersion( historyDelta.baseVersion );\n\n\t\t\t\t// `itemIndex` will be `null` for `historyDelta` if it is not the first delta in it's batch.\n\t\t\t\t// This is fine, because we want to transform each selection only once, before transforming reversed delta\n\t\t\t\t// by the first delta of the batch connected with the ranges.\n\t\t\t\tif ( itemIndex !== null ) {\n\t\t\t\t\tthis._stack[ itemIndex ].selection.ranges = transformRangesByDeltas(\n\t\t\t\t\t\tthis._stack[ itemIndex ].selection.ranges, reversedDelta\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// 3.2. Transform reversed delta by history delta and vice-versa.\n\t\t\t\tconst results = deltaTransform.transformDeltaSets( reversedDelta, [ historyDelta ], true );\n\n\t\t\t\treversedDelta = results.deltasA;\n\t\t\t\tconst updatedHistoryDelta = results.deltasB;\n\n\t\t\t\t// 3.3. Store updated history delta. Later, it will be updated in `history`.\n\t\t\t\tif ( !updatedHistoryDeltas[ historyDelta.baseVersion ] ) {\n\t\t\t\t\tupdatedHistoryDeltas[ historyDelta.baseVersion ] = [];\n\t\t\t\t}\n\n\t\t\t\tconst mergedHistoryDeltas = updatedHistoryDeltas[ historyDelta.baseVersion ].concat( updatedHistoryDelta );\n\t\t\t\tupdatedHistoryDeltas[ historyDelta.baseVersion ] = mergedHistoryDeltas;\n\t\t\t}\n\n\t\t\t// 4. After reversed delta has been transformed by all history deltas, apply it.\n\t\t\tfor ( const delta of reversedDelta ) {\n\t\t\t\t// Fix base version.\n\t\t\t\tdelta.baseVersion = document.version;\n\n\t\t\t\t// Before applying, add the delta to the `undoingBatch`.\n\t\t\t\tundoingBatch.addDelta( delta );\n\n\t\t\t\t// Now, apply all operations of the delta.\n\t\t\t\tfor ( const operation of delta.operations ) {\n\t\t\t\t\tdocument.applyOperation( operation );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 5. Remove reversed delta from the history.\n\t\t\thistory.removeDelta( baseVersion );\n\n\t\t\t// And all deltas that are reversing it.\n\t\t\t// So the history looks like both original and reversing deltas never happened.\n\t\t\t// That's why we have to update history deltas - some of them might have been basing on deltas that we are now removing.\n\t\t\tfor ( const delta of reversedDelta ) {\n\t\t\t\thistory.removeDelta( delta.baseVersion );\n\t\t\t}\n\n\t\t\t// 6. Update history deltas in history.\n\t\t\tfor ( const historyBaseVersion in updatedHistoryDeltas ) {\n\t\t\t\thistory.updateDelta( Number( historyBaseVersion ), updatedHistoryDeltas[ historyBaseVersion ] );\n\t\t\t}\n\t\t}\n\n\t\treturn undoingBatch;\n\t}\n}\n\n/**\n * Fired when execution of the command reverts some batch.\n *\n * @event revert\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-undo/src/undocommand.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module undo/undoengine\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport UndoCommand from './undocommand';\nimport RedoCommand from './redocommand';\n\n/**\n * The undo engine feature.\n *\n * Undo brings in possibility to undo and redo changes done in the model by deltas through\n * the {@link module:engine/model/document~Document#batch Batch API}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class UndoEngine extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The command that manages undo {@link module:engine/model/batch~Batch batches} stack (history).\n\t\t * Created and registered during the {@link #init feature initialization}.\n\t\t *\n\t\t * @private\n\t\t * @member {undo.UndoEngineCommand} #_undoCommand\n\t\t */\n\n\t\t/**\n\t\t * The command that manages redo {@link module:engine/model/batch~Batch batches} stack (history).\n\t\t * Created and registered during the {@link #init feature initialization}.\n\t\t *\n\t\t * @private\n\t\t * @member {undo.UndoEngineCommand} #_redoCommand\n\t\t */\n\n\t\t/**\n\t\t * Keeps track of which batches were registered in undo.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakSet.<module:engine/model/batch~Batch>}\n\t\t */\n\t\tthis._batchRegistry = new WeakSet();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\t// Create commands.\n\t\tthis._undoCommand = new UndoCommand( this.editor );\n\t\tthis._redoCommand = new RedoCommand( this.editor );\n\n\t\t// Register command to the editor.\n\t\tthis.editor.commands.set( 'undo', this._undoCommand );\n\t\tthis.editor.commands.set( 'redo', this._redoCommand );\n\n\t\tthis.listenTo( this.editor.document, 'change', ( evt, type, changes, batch ) => {\n\t\t\t// If changes are not a part of a batch or this is not a new batch, omit those changes.\n\t\t\tif ( this._batchRegistry.has( batch ) || batch.type == 'transparent' ) {\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tif ( this._redoCommand._createdBatches.has( batch ) ) {\n\t\t\t\t\t// If this batch comes from `redoCommand`, add it to `undoCommand` stack.\n\t\t\t\t\tthis._undoCommand.addBatch( batch );\n\t\t\t\t} else if ( !this._undoCommand._createdBatches.has( batch ) ) {\n\t\t\t\t\t// A default batch - these are new changes in the document, not introduced by undo feature.\n\t\t\t\t\t// Add them to `undoCommand` stack and clear `redoCommand` stack.\n\t\t\t\t\tthis._undoCommand.addBatch( batch );\n\t\t\t\t\tthis._redoCommand.clearStack();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add the batch to the registry so it will not be processed again.\n\t\t\tthis._batchRegistry.add( batch );\n\t\t}, { priority: 'highest' } );\n\n\t\tthis.listenTo( this._undoCommand, 'revert', ( evt, undoneBatch, undoingBatch ) => {\n\t\t\tthis._redoCommand.addBatch( undoingBatch );\n\t\t} );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-undo/src/undoengine.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/config\n */\n\nimport isPlainObject from './lib/lodash/isPlainObject';\n\n/**\n * Handles a configuration dictionary.\n */\nexport default class Config {\n\t/**\n\t * Creates an instance of the {@link ~Config} class.\n\t *\n\t * @param {Object} [configurations] The initial configurations to be set. Usually, provided by the user.\n\t * @param {Object} [defaultConfigurations] The default configurations. Usually, provided by the system.\n\t */\n\tconstructor( configurations, defaultConfigurations ) {\n\t\t/**\n\t\t * Store for the whole configuration.\n\t\t *\n\t\t * @private\n\t\t * @member {Object}\n\t\t */\n\t\tthis._config = {};\n\n\t\t// Set default configuration.\n\t\tif ( defaultConfigurations ) {\n\t\t\tthis.define( defaultConfigurations );\n\t\t}\n\n\t\t// Set initial configuration.\n\t\tif ( configurations ) {\n\t\t\tthis._setObjectToTarget( this._config, configurations );\n\t\t}\n\t}\n\n\t/**\n\t * Set configuration values.\n\t *\n\t * It accepts both a name/value pair or an object, which properties and values will be used to set\n\t * configurations.\n\t *\n\t * It also accepts setting a \"deep configuration\" by using dots in the name. For example, `'resize.width'` sets\n\t * the value for the `width` configuration in the `resize` subset.\n\t *\n\t *\t\tconfig.set( 'width', 500 );\n\t *\t\tconfig.set( 'toolbar.collapsed', true );\n\t *\n\t *\t\t// Equivalent to:\n\t *\t\tconfig.set( {\n\t *\t\t\twidth: 500\n\t *\t\t\ttoolbar: {\n\t *\t\t\t\tcollapsed: true\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * Passing an object as the value will amend the configuration, not replace it.\n\t *\n\t *\t\tconfig.set( 'toolbar', {\n\t *\t\t\tcollapsed: true,\n\t *\t\t} );\n\t *\n\t *\t\tconfig.set( 'toolbar', {\n\t *\t\t\tcolor: 'red',\n\t *\t\t} );\n\t *\n\t *\t\tconfig.get( 'toolbar.collapsed' ); // true\n\t *\t\tconfig.get( 'toolbar.color' ); // 'red'\n\t *\n\t * @param {String|Object} name The configuration name or an object from which take properties as\n\t * configuration entries. Configuration names are case-sensitive.\n\t * @param {*} value The configuration value. Used if a name is passed.\n\t */\n\tset( name, value ) {\n\t\tthis._setToTarget( this._config, name, value );\n\t}\n\n\t/**\n\t * Does exactly the same as {@link #set} with one exception – passed configuration extends\n\t * existing one, but does not overwrite already defined values.\n\t *\n\t * This method is supposed to be called by plugin developers to setup plugin's configurations. It would be\n\t * rarely used for other needs.\n\t *\n\t * @param {String|Object} name The configuration name or an object from which take properties as\n\t * configuration entries. Configuration names are case-sensitive.\n\t * @param {*} value The configuration value. Used if a name is passed.\n\t */\n\tdefine( name, value ) {\n\t\tconst isDefine = true;\n\n\t\tthis._setToTarget( this._config, name, value, isDefine );\n\t}\n\n\t/**\n\t * Gets the value for a configuration entry.\n\t *\n\t *\t\tconfig.get( 'name' );\n\t *\n\t * Deep configurations can be retrieved by separating each part with a dot.\n\t *\n\t *\t\tconfig.get( 'toolbar.collapsed' );\n\t *\n\t * @param {String} name The configuration name. Configuration names are case-sensitive.\n\t * @returns {*} The configuration value or `undefined` if the configuration entry was not found.\n\t */\n\tget( name ) {\n\t\treturn this._getFromSource( this._config, name );\n\t}\n\n\t/**\n\t * Saves passed configuration to the specified target (nested object).\n\t *\n\t * @private\n\t * @param {Object} target Nested config object.\n\t * @param {String|Object} name The configuration name or an object from which take properties as\n\t * configuration entries. Configuration names are case-sensitive.\n\t * @param {*} value The configuration value. Used if a name is passed.\n\t * @param {Boolean} [isDefine=false] Define if passed configuration should overwrite existing one.\n\t */\n\t_setToTarget( target, name, value, isDefine = false ) {\n\t\t// In case of an object, iterate through it and call `_setToTarget` again for each property.\n\t\tif ( isPlainObject( name ) ) {\n\t\t\tthis._setObjectToTarget( target, name, isDefine );\n\n\t\t\treturn;\n\t\t}\n\n\t\t// The configuration name should be split into parts if it has dots. E.g. `resize.width` -> [`resize`, `width`].\n\t\tconst parts = name.split( '.' );\n\n\t\t// Take the name of the configuration out of the parts. E.g. `resize.width` -> `width`.\n\t\tname = parts.pop();\n\n\t\t// Iterate over parts to check if currently stored configuration has proper structure.\n\t\tfor ( const part of parts ) {\n\t\t\t// If there is no object for specified part then create one.\n\t\t\tif ( !isPlainObject( target[ part ] ) ) {\n\t\t\t\ttarget[ part ] = {};\n\t\t\t}\n\n\t\t\t// Nested object becomes a target.\n\t\t\ttarget = target[ part ];\n\t\t}\n\n\t\t// In case of value is an object.\n\t\tif ( isPlainObject( value ) ) {\n\t\t\t// We take care of proper config structure.\n\t\t\tif ( !isPlainObject( target[ name ] ) ) {\n\t\t\t\ttarget[ name ] = {};\n\t\t\t}\n\n\t\t\ttarget = target[ name ];\n\n\t\t\t// And iterate through this object calling `_setToTarget` again for each property.\n\t\t\tthis._setObjectToTarget( target, value, isDefine );\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Do nothing if we are defining configuration for non empty name.\n\t\tif ( isDefine && typeof target[ name ] != 'undefined' ) {\n\t\t\treturn;\n\t\t}\n\n\t\ttarget[ name ] = value;\n\t}\n\n\t/**\n\t * Get specified configuration from specified source (nested object).\n\t *\n\t * @private\n\t * @param {Object} source level of nested object.\n\t * @param {String} name The configuration name. Configuration names are case-sensitive.\n\t * @returns {*} The configuration value or `undefined` if the configuration entry was not found.\n\t */\n\t_getFromSource( source, name ) {\n\t\t// The configuration name should be split into parts if it has dots. E.g. `resize.width` -> [`resize`, `width`].\n\t\tconst parts = name.split( '.' );\n\n\t\t// Take the name of the configuration out of the parts. E.g. `resize.width` -> `width`.\n\t\tname = parts.pop();\n\n\t\t// Iterate over parts to check if currently stored configuration has proper structure.\n\t\tfor ( const part of parts ) {\n\t\t\tif ( !isPlainObject( source[ part ] ) ) {\n\t\t\t\tsource = null;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Nested object becomes a source.\n\t\t\tsource = source[ part ];\n\t\t}\n\n\t\t// Always returns undefined for non existing configuration\n\t\treturn source ? source[ name ] : undefined;\n\t}\n\n\t/**\n\t * Iterates through passed object and calls {@link #_setToTarget} method with object key and value for each property.\n\t *\n\t * @private\n\t * @param {Object} target Nested config object.\n\t * @param {Object} configuration Configuration data set\n\t * @param {Boolean} [isDefine] Defines if passed configuration is default configuration or not.\n\t */\n\t_setObjectToTarget( target, configuration, isDefine ) {\n\t\tObject.keys( configuration ).forEach( key => {\n\t\t\tthis._setToTarget( target, key, configuration[ key ], isDefine );\n\t\t} );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/config.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/difftochanges\n */\n\n/**\n * Creates a set of changes which need to be applied to the input in order to transform\n * it into the output. This function can be used with strings or arrays.\n *\n *\t\tconst input = Array.from( 'abc' );\n *\t\tconst output = Array.from( 'xaby' );\n *\t\tconst changes = diffToChanges( diff( input, output ), output );\n *\n *\t\tchanges.forEach( change => {\n *\t\t\tif ( change.type == 'insert' ) {\n *\t\t\t\tinput.splice( change.index, 0, ...change.values );\n *\t\t\t} else if ( change.type == 'delete' ) {\n *\t\t\t\tinput.splice( change.index, change.howMany );\n *\t\t\t}\n *\t\t} );\n *\n *\t\tinput.join( '' ) == output.join( '' ); // -> true\n *\n * @param {Array.<'equal'|'insert'|'delete'>} diff Result of {@link module:utils/diff~diff}.\n * @param {String|Array} output The string or array which was passed as diff's output.\n * @returns {Array.<Object>} Set of changes (insert or delete) which need to be applied to the input\n * in order to transform it into the output.\n */\nexport default function diffToChanges( diff, output ) {\n\tconst changes = [];\n\tlet index = 0;\n\tlet lastOperation;\n\n\tdiff.forEach( change => {\n\t\tif ( change == 'equal' ) {\n\t\t\tpushLast();\n\n\t\t\tindex++;\n\t\t} else if ( change == 'insert' ) {\n\t\t\tif ( isContinuationOf( 'insert' ) ) {\n\t\t\t\tlastOperation.values.push( output[ index ] );\n\t\t\t} else {\n\t\t\t\tpushLast();\n\n\t\t\t\tlastOperation = {\n\t\t\t\t\ttype: 'insert',\n\t\t\t\t\tindex,\n\t\t\t\t\tvalues: [ output[ index ] ]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tindex++;\n\t\t} else /* if ( change == 'delete' ) */ {\n\t\t\tif ( isContinuationOf( 'delete' ) ) {\n\t\t\t\tlastOperation.howMany++;\n\t\t\t} else {\n\t\t\t\tpushLast();\n\n\t\t\t\tlastOperation = {\n\t\t\t\t\ttype: 'delete',\n\t\t\t\t\tindex,\n\t\t\t\t\thowMany: 1\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t} );\n\n\tpushLast();\n\n\treturn changes;\n\n\tfunction pushLast() {\n\t\tif ( lastOperation ) {\n\t\t\tchanges.push( lastOperation );\n\t\t\tlastOperation = null;\n\t\t}\n\t}\n\n\tfunction isContinuationOf( expected ) {\n\t\treturn lastOperation && lastOperation.type == expected;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/difftochanges.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/getcommonancestor\n */\n\nimport getAncestors from './getancestors';\n\n/**\n * Searches and returns the lowest common ancestor of two given nodes.\n *\n * @param {Node} nodeA First node.\n * @param {Node} nodeB Second node.\n * @returns {Node|DocumentFragment|Document|null} Lowest common ancestor of both nodes or `null` if nodes do not have a common ancestor.\n */\nexport default function getCommonAncestor( nodeA, nodeB ) {\n\tconst ancestorsA = getAncestors( nodeA );\n\tconst ancestorsB = getAncestors( nodeB );\n\n\tlet i = 0;\n\n\t// It does not matter which array is shorter.\n\twhile ( ancestorsA[ i ] == ancestorsB[ i ] && ancestorsA[ i ] ) {\n\t\ti++;\n\t}\n\n\treturn i === 0 ? null : ancestorsA[ i - 1 ];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/dom/getcommonancestor.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* globals HTMLTextAreaElement */\n\n/**\n * @module utils/dom/getdatafromelement\n */\n\n/**\n * Gets data from a given source element.\n *\n * @param {HTMLElement} el The element from which the data will be retrieved.\n * @returns {String} The data string.\n */\nexport default function getDataFromElement( el ) {\n\tif ( el instanceof HTMLTextAreaElement ) {\n\t\treturn el.value;\n\t}\n\n\treturn el.innerHTML;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/dom/getdatafromelement.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/getpositionedancestor\n */\n\nimport global from './global';\n\n/**\n * For a given element, returns the nearest ancestor element which CSS position is not \"static\".\n *\n * @param {HTMLElement} element Native DOM element to be checked.\n * @returns {HTMLElement|null}\n */\nexport default function getPositionedAncestor( element ) {\n\twhile ( element && element.tagName.toLowerCase() != 'html' ) {\n\t\tif ( global.window.getComputedStyle( element ).position != 'static' ) {\n\t\t\treturn element;\n\t\t}\n\n\t\telement = element.parentElement;\n\t}\n\n\treturn null;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/dom/getpositionedancestor.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/indexof\n */\n\n/**\n * Returns index of the node in the parent element.\n *\n * @param {Node} node Node which index is tested.\n * @returns {Number} Index of the node in the parent element. Returns 0 if node has no parent.\n */\nexport default function indexOf( node ) {\n\tlet index = 0;\n\n\twhile ( node.previousSibling ) {\n\t\tnode = node.previousSibling;\n\t\tindex++;\n\t}\n\n\treturn index;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/dom/indexof.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/insertat\n */\n\n/**\n * Inserts node to the parent at given index.\n *\n * @param {Element} parentElement Parent element.\n * @param {Number} index Insertions index.\n * @param {Node} nodeToInsert Node to insert.\n */\nexport default function insertAt( parentElement, index, nodeToInsert ) {\n\tparentElement.insertBefore( nodeToInsert, parentElement.childNodes[ index ] || null );\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/dom/insertat.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/position\n */\n\nimport global from './global';\nimport Rect from './rect';\nimport getPositionedAncestor from './getpositionedancestor';\n\n/**\n * Calculates the `position: absolute` coordinates of a given element so it can be positioned with respect to the\n * target in the visually most efficient way, taking various restrictions like viewport or limiter geometry\n * into consideration.\n *\n *\t\t// The element which is to be positioned.\n *\t\tconst element = document.body.querySelector( '#toolbar' );\n *\n *\t\t// A target to which the element is positioned relatively.\n *\t\tconst target = document.body.querySelector( '#container' );\n *\n *\t\t// Finding the optimal coordinates for the positioning.\n *\t\tconst { left, top, name } = getOptimalPosition( {\n *\t\t\telement: element,\n *\t\t\ttarget: target,\n *\n * \t\t\t// The algorithm will chose among these positions to meet the requirements such\n * \t\t\t// as \"limiter\" element or \"fitInViewport\", set below. The positions are considered\n * \t\t\t// in the order of the array.\n *\t\t\tpositions: [\n *\t\t\t\t//\n *\t\t\t \t//\t[ Target ]\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\t|     Element     |\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\n *\t\t\t\ttargetRect => ( {\n *\t\t\t\t\ttop: targetRect.bottom,\n *\t\t\t\t\tleft: targetRect.left,\n *\t\t\t\t\tname: 'mySouthEastPosition'\n *\t\t\t\t} ),\n *\n *\t\t\t\t//\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\t|     Element     |\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\t[ Target ]\n *\t\t\t\t//\n *\t\t\t\t( targetRect, elementRect ) => ( {\n *\t\t\t\t\ttop: targetRect.top - elementRect.height,\n *\t\t\t\t\tleft: targetRect.left,\n *\t\t\t\t\tname: 'myNorthEastPosition'\n *\t\t\t\t} )\n *\t\t\t],\n *\n *\t\t\t// Find a position such guarantees the element remains within visible boundaries of <body>.\n *\t\t\tlimiter: document.body,\n *\n *\t\t\t// Find a position such guarantees the element remains within visible boundaries of the browser viewport.\n *\t\t\tfitInViewport: true\n *\t\t} );\n *\n *\t\t// The best position which fits into document.body and the viewport. May be useful\n *\t\t// to set proper class on the `element`.\n *\t\tconsole.log( name ); -> \"myNorthEastPosition\"\n *\n *\t\t// Using the absolute coordinates which has been found to position the element\n *\t\t// as in the diagram depicting the \"myNorthEastPosition\" position.\n *\t\telement.style.top = top;\n *\t\telement.style.left = left;\n *\n * @param {module:utils/dom/position~Options} options Positioning options object.\n * @returns {module:utils/dom/position~Position}\n */\nexport function getOptimalPosition( { element, target, positions, limiter, fitInViewport } ) {\n\t// If the {@link module:utils/dom/position~Options#target} is a function, use what it returns.\n\t// https://github.com/ckeditor/ckeditor5-utils/issues/157\n\tif ( typeof target == 'function' ) {\n\t\ttarget = target();\n\t}\n\n\tconst positionedElementAncestor = getPositionedAncestor( element.parentElement );\n\tconst elementRect = new Rect( element );\n\tconst targetRect = new Rect( target );\n\n\tlet bestPosition;\n\tlet name;\n\n\t// If there are no limits, just grab the very first position and be done with that drama.\n\tif ( !limiter && !fitInViewport ) {\n\t\t[ name, bestPosition ] = getPosition( positions[ 0 ], targetRect, elementRect );\n\t} else {\n\t\tconst limiterRect = limiter && new Rect( limiter ).getVisible();\n\t\tconst viewportRect = fitInViewport && Rect.getViewportRect();\n\n\t\t[ name, bestPosition ] =\n\t\t\tgetBestPosition( positions, targetRect, elementRect, limiterRect, viewportRect ) ||\n\t\t\t// If there's no best position found, i.e. when all intersections have no area because\n\t\t\t// rects have no width or height, then just use the first available position.\n\t\t\tgetPosition( positions[ 0 ], targetRect, elementRect );\n\t}\n\n\tlet { left, top } = getAbsoluteRectCoordinates( bestPosition );\n\n\tif ( positionedElementAncestor ) {\n\t\tconst ancestorPosition = getAbsoluteRectCoordinates( new Rect( positionedElementAncestor ) );\n\t\tconst ancestorComputedStyles = global.window.getComputedStyle( positionedElementAncestor );\n\n\t\t// (https://github.com/ckeditor/ckeditor5-ui-default/issues/126)\n\t\t// If there's some positioned ancestor of the panel, then its `Rect` must be taken into\n\t\t// consideration. `Rect` is always relative to the viewport while `position: absolute` works\n\t\t// with respect to that positioned ancestor.\n\t\tleft -= ancestorPosition.left;\n\t\ttop -= ancestorPosition.top;\n\n\t\t// (https://github.com/ckeditor/ckeditor5-utils/issues/139)\n\t\t// If there's some positioned ancestor of the panel, not only its position must be taken into\n\t\t// consideration (see above) but also its internal scrolls. Scroll have an impact here because `Rect`\n\t\t// is relative to the viewport (it doesn't care about scrolling), while `position: absolute`\n\t\t// must compensate that scrolling.\n\t\tleft += positionedElementAncestor.scrollLeft;\n\t\ttop += positionedElementAncestor.scrollTop;\n\n\t\t// (https://github.com/ckeditor/ckeditor5-utils/issues/139)\n\t\t// If there's some positioned ancestor of the panel, then its `Rect` includes its CSS `borderWidth`\n\t\t// while `position: absolute` positioning does not consider it.\n\t\t// E.g. `{ position: absolute, top: 0, left: 0 }` means upper left corner of the element,\n\t\t// not upper-left corner of its border.\n\t\tleft -= parseInt( ancestorComputedStyles.borderLeftWidth, 10 );\n\t\ttop -= parseInt( ancestorComputedStyles.borderTopWidth, 10 );\n\t}\n\n\treturn { left, top, name };\n}\n\n// For given position function, returns a corresponding `Rect` instance.\n//\n// @private\n// @param {Function} position A function returning {@link module:utils/dom/position~Position}.\n// @param {utils/dom/rect~Rect} targetRect A rect of the target.\n// @param {utils/dom/rect~Rect} elementRect A rect of positioned element.\n// @returns {Array} An array containing position name and its Rect.\nfunction getPosition( position, targetRect, elementRect ) {\n\tconst { left, top, name } = position( targetRect, elementRect );\n\n\treturn [ name, elementRect.clone().moveTo( left, top ) ];\n}\n\n// For a given array of positioning functions, returns such that provides the best\n// fit of the `elementRect` into the `limiterRect` and `viewportRect`.\n//\n// @private\n// @param {module:utils/dom/position~Options#positions} positions Functions returning\n// {@link module:utils/dom/position~Position} to be checked, in the order of preference.\n// @param {utils/dom/rect~Rect} targetRect A rect of the {@link module:utils/dom/position~Options#target}.\n// @param {utils/dom/rect~Rect} elementRect A rect of positioned {@link module:utils/dom/position~Options#element}.\n// @param {utils/dom/rect~Rect} limiterRect A rect of the {@link module:utils/dom/position~Options#limiter}.\n// @param {utils/dom/rect~Rect} viewportRect A rect of the viewport.\n// @returns {Array} An array containing the name of the position and it's rect.\nfunction getBestPosition( positions, targetRect, elementRect, limiterRect, viewportRect ) {\n\tlet maxLimiterIntersectArea = 0;\n\tlet maxViewportIntersectArea = 0;\n\tlet bestPositionRect;\n\tlet bestPositionName;\n\n\t// This is when element is fully visible.\n\tconst elementRectArea = elementRect.getArea();\n\n\tpositions.some( position => {\n\t\tconst [ positionName, positionRect ] = getPosition( position, targetRect, elementRect );\n\t\tlet limiterIntersectArea;\n\t\tlet viewportIntersectArea;\n\n\t\tif ( limiterRect ) {\n\t\t\tif ( viewportRect ) {\n\t\t\t\t// Consider only the part of the limiter which is visible in the viewport. So the limiter is getting limited.\n\t\t\t\tconst limiterViewportIntersectRect = limiterRect.getIntersection( viewportRect );\n\n\t\t\t\tif ( limiterViewportIntersectRect ) {\n\t\t\t\t\t// If the limiter is within the viewport, then check the intersection between that part of the\n\t\t\t\t\t// limiter and actual position.\n\t\t\t\t\tlimiterIntersectArea = limiterViewportIntersectRect.getIntersectionArea( positionRect );\n\t\t\t\t} else {\n\t\t\t\t\tlimiterIntersectArea = 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlimiterIntersectArea = limiterRect.getIntersectionArea( positionRect );\n\t\t\t}\n\t\t}\n\n\t\tif ( viewportRect ) {\n\t\t\tviewportIntersectArea = viewportRect.getIntersectionArea( positionRect );\n\t\t}\n\n\t\t// The only criterion: intersection with the viewport.\n\t\tif ( viewportRect && !limiterRect ) {\n\t\t\tif ( viewportIntersectArea > maxViewportIntersectArea ) {\n\t\t\t\tsetBestPosition();\n\t\t\t}\n\t\t}\n\t\t// The only criterion: intersection with the limiter.\n\t\telse if ( !viewportRect && limiterRect ) {\n\t\t\tif ( limiterIntersectArea > maxLimiterIntersectArea ) {\n\t\t\t\tsetBestPosition();\n\t\t\t}\n\t\t}\n\t\t// Two criteria: intersection with the viewport and the limiter visible in the viewport.\n\t\telse {\n\t\t\tif ( viewportIntersectArea > maxViewportIntersectArea && limiterIntersectArea >= maxLimiterIntersectArea ) {\n\t\t\t\tsetBestPosition();\n\t\t\t} else if ( viewportIntersectArea >= maxViewportIntersectArea && limiterIntersectArea > maxLimiterIntersectArea ) {\n\t\t\t\tsetBestPosition();\n\t\t\t}\n\t\t}\n\n\t\tfunction setBestPosition() {\n\t\t\tmaxViewportIntersectArea = viewportIntersectArea;\n\t\t\tmaxLimiterIntersectArea = limiterIntersectArea;\n\t\t\tbestPositionRect = positionRect;\n\t\t\tbestPositionName = positionName;\n\t\t}\n\n\t\t// If a such position is found that element is fully container by the limiter then, obviously,\n\t\t// there will be no better one, so finishing.\n\t\treturn limiterIntersectArea === elementRectArea;\n\t} );\n\n\treturn bestPositionRect ? [ bestPositionName, bestPositionRect ] : null;\n}\n\n// DOMRect (also Rect) works in a scroll–independent geometry but `position: absolute` doesn't.\n// This function converts Rect to `position: absolute` coordinates.\n//\n// @private\n// @param {utils/dom/rect~Rect} rect A rect to be converted.\n// @returns {Object} Object containing `left` and `top` properties, in absolute coordinates.\nfunction getAbsoluteRectCoordinates( { left, top } ) {\n\tconst { scrollX, scrollY } = global.window;\n\n\treturn {\n\t\tleft: left + scrollX,\n\t\ttop: top + scrollY,\n\t};\n}\n\n/**\n * The `getOptimalPosition` helper options.\n *\n * @interface module:utils/dom/position~Options\n */\n\n/**\n * Element that is to be positioned.\n *\n * @member {HTMLElement} #element\n */\n\n/**\n * Target with respect to which the `element` is to be positioned.\n *\n * @member {HTMLElement|Range|ClientRect|Function} #target\n */\n\n/**\n * An array of functions which return {@link module:utils/dom/position~Position} relative\n * to the `target`, in the order of preference.\n *\n * @member {Array.<Function>} #positions\n */\n\n/**\n * When set, the algorithm will chose position which fits the most in the\n * limiter's bounding rect.\n *\n * @member {HTMLElement|Range|ClientRect} #limiter\n */\n\n/**\n * When set, the algorithm will chose such a position which fits `element`\n * the most inside visible viewport.\n *\n * @member {Boolean} #fitInViewport\n */\n\n/**\n * An object describing a position in `position: absolute` coordinate\n * system, along with position name.\n *\n * @typedef {Object} module:utils/dom/position~Position\n *\n * @property {Number} top Top position offset.\n * @property {Number} left Left position offset.\n * @property {String} name Name of the position.\n */\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/dom/position.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/rect\n */\n\nimport global from './global';\nimport isRange from './isrange';\nimport isElement from '../lib/lodash/isElement';\n\n/**\n * A helper class representing a `ClientRect` object, e.g. value returned by\n * the native `object.getBoundingClientRect()` method. Provides a set of methods\n * to manipulate the rect and compare it against other `Rect` instances.\n */\nexport default class Rect {\n\t/**\n\t * Creates an instance of rect.\n\t *\n\t *\t\t// Rect of an HTMLElement.\n\t *\t\tconst rectA = new Rect( document.body );\n\t *\n\t *\t\t// Rect of a DOM Range.\n\t *\t\tconst rectB = new Rect( document.getSelection().getRangeAt( 0 ) );\n\t *\n\t *\t\t// Rect out of an object.\n\t *\t\tconst rectC = new Rect( { top: 0, right: 10, bottom: 10, left: 0, width: 10, height: 10 } );\n\t *\n\t *\t\t// Rect out of another Rect instance.\n\t *\t\tconst rectD = new Rect( rectC );\n\t *\n\t *\t\t// Rect out of a ClientRect.\n\t *\t\tconst rectE = new Rect( document.body.getClientRects().item( 0 ) );\n\t *\n\t * @param {HTMLElement|Range|ClientRect|module:utils/dom/rect~Rect|Object} source A source object to create the rect.\n\t */\n\tconstructor( source ) {\n\t\t/**\n\t\t * The object this rect is for.\n\t\t *\n\t\t * @protected\n\t\t * @readonly\n\t\t * @member {HTMLElement|Range|ClientRect|module:utils/dom/rect~Rect|Object} #_source\n\t\t */\n\t\tObject.defineProperty( this, '_source', {\n\t\t\t// source._source if already the Rect instance\n\t\t\tvalue: source._source || source,\n\t\t\twritable: false,\n\t\t\tenumerable: false\n\t\t} );\n\n\t\tif ( isElement( source ) ) {\n\t\t\tcopyRectProperties( this, source.getBoundingClientRect() );\n\t\t} else if ( isRange( source ) ) {\n\t\t\t// Use getClientRects() when the range is collapsed.\n\t\t\t// https://github.com/ckeditor/ckeditor5-utils/issues/153\n\t\t\tif ( source.collapsed ) {\n\t\t\t\tconst rects = source.getClientRects();\n\n\t\t\t\tif ( rects.length ) {\n\t\t\t\t\tcopyRectProperties( this, rects[ 0 ] );\n\t\t\t\t}\n\t\t\t\t// If there's no client rects for the Range, use parent container's bounding\n\t\t\t\t// rect instead and adjust rect's width to simulate the actual geometry of such\n\t\t\t\t// range.\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-utils/issues/153\n\t\t\t\telse {\n\t\t\t\t\tcopyRectProperties( this, source.startContainer.getBoundingClientRect() );\n\t\t\t\t\tthis.width = 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcopyRectProperties( this, source.getBoundingClientRect() );\n\t\t\t}\n\t\t} else {\n\t\t\tcopyRectProperties( this, source );\n\t\t}\n\n\t\t/**\n\t\t * The \"top\" value of the rect.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #top\n\t\t */\n\n\t\t/**\n\t\t * The \"right\" value of the rect.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #right\n\t\t */\n\n\t\t/**\n\t\t * The \"bottom\" value of the rect.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #bottom\n\t\t */\n\n\t\t/**\n\t\t * The \"left\" value of the rect.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #left\n\t\t */\n\n\t\t/**\n\t\t * The \"width\" value of the rect.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #width\n\t\t */\n\n\t\t/**\n\t\t * The \"height\" value of the rect.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #height\n\t\t */\n\t}\n\n\t/**\n\t * Returns a clone of the rect.\n\t *\n\t * @returns {module:utils/dom/rect~Rect} A cloned rect.\n\t */\n\tclone() {\n\t\treturn new Rect( this );\n\t}\n\n\t/**\n\t * Moves the rect so that its upper–left corner lands in desired `[ x, y ]` location.\n\t *\n\t * @param {Number} x Desired horizontal location.\n\t * @param {Number} y Desired vertical location.\n\t * @returns {module:utils/dom/rect~Rect} A rect which has been moved.\n\t */\n\tmoveTo( x, y ) {\n\t\tthis.top = y;\n\t\tthis.right = x + this.width;\n\t\tthis.bottom = y + this.height;\n\t\tthis.left = x;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Moves the rect in–place by a dedicated offset.\n\t *\n\t * @param {Number} x A horizontal offset.\n\t * @param {Number} y A vertical offset\n\t * @returns {module:utils/dom/rect~Rect} A rect which has been moved.\n\t */\n\tmoveBy( x, y ) {\n\t\tthis.top += y;\n\t\tthis.right += x;\n\t\tthis.left += x;\n\t\tthis.bottom += y;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a new rect a a result of intersection with another rect.\n\t *\n\t * @param {module:utils/dom/rect~Rect} anotherRect\n\t * @returns {module:utils/dom/rect~Rect}\n\t */\n\tgetIntersection( anotherRect ) {\n\t\tconst rect = {\n\t\t\ttop: Math.max( this.top, anotherRect.top ),\n\t\t\tright: Math.min( this.right, anotherRect.right ),\n\t\t\tbottom: Math.min( this.bottom, anotherRect.bottom ),\n\t\t\tleft: Math.max( this.left, anotherRect.left )\n\t\t};\n\n\t\trect.width = rect.right - rect.left;\n\t\trect.height = rect.bottom - rect.top;\n\n\t\tif ( rect.width < 0 || rect.height < 0 ) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn new Rect( rect );\n\t\t}\n\t}\n\n\t/**\n\t * Returns the area of intersection with another rect.\n\t *\n\t * @param {module:utils/dom/rect~Rect} anotherRect [description]\n\t * @returns {Number} Area of intersection.\n\t */\n\tgetIntersectionArea( anotherRect ) {\n\t\tconst rect = this.getIntersection( anotherRect );\n\n\t\tif ( rect ) {\n\t\t\treturn rect.getArea();\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the area of the rect.\n\t *\n\t * @returns {Number}\n\t */\n\tgetArea() {\n\t\treturn this.width * this.height;\n\t}\n\n\t/**\n\t * Returns a new rect, a part of the original rect, which is actually visible to the user,\n\t * e.g. an original rect cropped by parent element rects which have `overflow` set in CSS\n\t * other than `\"visible\"`.\n\t *\n\t * If there's no such visible rect, which is when the rect is limited by one or many of\n\t * the ancestors, `null` is returned.\n\t *\n\t * @returns {module:utils/dom/rect~Rect|null} A visible rect instance or `null`, if there's none.\n\t */\n\tgetVisible() {\n\t\tconst source = this._source;\n\t\tlet visibleRect = this.clone();\n\n\t\t// There's no ancestor to crop <body> with the overflow.\n\t\tif ( source != global.document.body ) {\n\t\t\tlet parent = source.parentNode || source.commonAncestorContainer;\n\n\t\t\t// Check the ancestors all the way up to the <body>.\n\t\t\twhile ( parent && parent != global.document.body ) {\n\t\t\t\tconst parentRect = new Rect( parent );\n\t\t\t\tconst intersectionRect = visibleRect.getIntersection( parentRect );\n\n\t\t\t\tif ( intersectionRect ) {\n\t\t\t\t\tif ( intersectionRect.getArea() < visibleRect.getArea() ) {\n\t\t\t\t\t\t// Reduce the visible rect to the intersection.\n\t\t\t\t\t\tvisibleRect = intersectionRect;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// There's no intersection, the rect is completely invisible.\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tparent = parent.parentNode;\n\t\t\t}\n\t\t}\n\n\t\treturn visibleRect;\n\t}\n\n\t/**\n\t * Returns a rect of the web browser viewport.\n\t *\n\t * @returns {module:utils/dom/rect~Rect} A viewport rect.\n\t */\n\tstatic getViewportRect() {\n\t\tconst { innerWidth, innerHeight } = global.window;\n\n\t\treturn new Rect( {\n\t\t\ttop: 0,\n\t\t\tright: innerWidth,\n\t\t\tbottom: innerHeight,\n\t\t\tleft: 0,\n\t\t\twidth: innerWidth,\n\t\t\theight: innerHeight\n\t\t} );\n\t}\n}\n\nconst rectProperties = [ 'top', 'right', 'bottom', 'left', 'width', 'height' ];\n\n// Acquires all the rect properties from the passed source.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} rect\n// @param {ClientRect|module:utils/dom/rect~Rect|Object} source\nfunction copyRectProperties( rect, source ) {\n\tfor ( const p of rectProperties ) {\n\t\trect[ p ] = source[ p ];\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/dom/rect.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/remove\n */\n\n/**\n * Removes given node from parent.\n *\n * @param {Node} node Node to remove.\n */\nexport default function remove( node ) {\n\tconst parent = node.parentNode;\n\n\tif ( parent ) {\n\t\tparent.removeChild( node );\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/dom/remove.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/setdatainelement\n */\n\n/* globals HTMLTextAreaElement */\n\n/**\n * Sets data in a given element.\n *\n * @param {HTMLElement} el The element in which the data will be set.\n * @param {String} data The data string.\n */\nexport default function setDataInElement( el, data ) {\n\tif ( el instanceof HTMLTextAreaElement ) {\n\t\tel.value = data;\n\t}\n\n\tel.innerHTML = data;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/dom/setdatainelement.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/elementreplacer\n */\n\n/**\n * Utility class allowing to hide existing HTML elements or replace them with given ones in a way that doesn't remove\n * the original elements from the DOM.\n */\nexport default class ElementReplacer {\n\tconstructor() {\n\t\t/**\n\t\t * The elements replaced by {@link #replace} and their replacements.\n\t\t *\n\t\t * @private\n\t\t * @member {Array.<Object>}\n\t\t */\n\t\tthis._replacedElements = [];\n\t}\n\n\t/**\n\t * Hides the `element` and, if specified, inserts the the given element next to it.\n\t *\n\t * The effect of this method can be reverted by {@link #restore}.\n\t *\n\t * @param {HTMLElement} element The element to replace.\n\t * @param {HTMLElement} [newElement] The replacement element. If not passed, then the `element` will just be hidden.\n\t */\n\treplace( element, newElement ) {\n\t\tthis._replacedElements.push( { element, newElement } );\n\n\t\telement.style.display = 'none';\n\n\t\tif ( newElement ) {\n\t\t\telement.parentNode.insertBefore( newElement, element.nextSibling );\n\t\t}\n\t}\n\n\t/**\n\t * Restores what {@link #replace} did.\n\t */\n\trestore() {\n\t\tthis._replacedElements.forEach( ( { element, newElement } ) => {\n\t\t\telement.style.display = '';\n\n\t\t\tif ( newElement ) {\n\t\t\t\tnewElement.remove();\n\t\t\t}\n\t\t} );\n\n\t\tthis._replacedElements = [];\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/elementreplacer.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* globals navigator:false */\n\n/**\n * @module utils/env\n */\n\nconst userAgent = navigator.userAgent.toLowerCase();\n\n/**\n * A namespace containing environment and browser information.\n *\n * @namespace\n */\nconst env = {\n\t/**\n\t * Indicates that application is running on Macintosh.\n\t *\n\t * @static\n\t * @member {Boolean} module:utils/env~env#mac\n\t */\n\tmac: isMac( userAgent )\n};\n\nexport default env;\n\n/**\n * Checks if User Agent represented by the string is running on Macintosh.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is running on Macintosh or not.\n */\nexport function isMac( userAgent ) {\n\treturn userAgent.indexOf( 'macintosh' ) > -1;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/env.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/eventinfo\n */\n\nimport spy from './spy';\n\n/**\n * The event object passed to event callbacks. It is used to provide information about the event as well as a tool to\n * manipulate it.\n */\nexport default class EventInfo {\n\t/**\n\t * @param {Object} source The emitter.\n\t * @param {String} name The event name.\n\t */\n\tconstructor( source, name ) {\n\t\t/**\n\t\t * The object that fired the event.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Object}\n\t\t */\n\t\tthis.source = source;\n\n\t\t/**\n\t\t * The event name.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.name = name;\n\n\t\t/**\n\t\t * Path this event has followed. See {@link module:utils/emittermixin~EmitterMixin#delegate}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Array.<Object>}\n\t\t */\n\t\tthis.path = [];\n\n\t\t// The following methods are defined in the constructor because they must be re-created per instance.\n\n\t\t/**\n\t\t * Stops the event emitter to call further callbacks for this event interaction.\n\t\t *\n\t\t * @method #stop\n\t\t */\n\t\tthis.stop = spy();\n\n\t\t/**\n\t\t * Removes the current callback from future interactions of this event.\n\t\t *\n\t\t * @method #off\n\t\t */\n\t\tthis.off = spy();\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/eventinfo.js","import getNative from './_getNative';\nimport root from './_root';\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nexport default DataView;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_DataView.js","import hashClear from './_hashClear';\nimport hashDelete from './_hashDelete';\nimport hashGet from './_hashGet';\nimport hashHas from './_hashHas';\nimport hashSet from './_hashSet';\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nexport default Hash;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_Hash.js","import getNative from './_getNative';\nimport root from './_root';\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nexport default Promise;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_Promise.js","import root from './_root';\n\n/** Built-in value references. */\nvar Reflect = root.Reflect;\n\nexport default Reflect;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_Reflect.js","import getNative from './_getNative';\nimport root from './_root';\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nexport default WeakMap;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_WeakMap.js","/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `Map#set` because it doesn't return the map instance in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\nexport default addMapEntry;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_addMapEntry.js","/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  set.add(value);\n  return set;\n}\n\nexport default addSetEntry;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_addSetEntry.js","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_arrayEach.js","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default arraySome;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_arraySome.js","import copyObject from './_copyObject';\nimport keys from './keys';\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nexport default baseAssign;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseAssign.js","import get from './get';\n\n/**\n * The base implementation of `_.at` without support for individual paths.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {string[]} paths The property paths of elements to pick.\n * @returns {Array} Returns the picked elements.\n */\nfunction baseAt(object, paths) {\n  var index = -1,\n      isNil = object == null,\n      length = paths.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = isNil ? undefined : get(object, paths[index]);\n  }\n  return result;\n}\n\nexport default baseAt;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseAt.js","/**\n * The base implementation of `_.clamp` which doesn't coerce arguments to numbers.\n *\n * @private\n * @param {number} number The number to clamp.\n * @param {number} [lower] The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the clamped number.\n */\nfunction baseClamp(number, lower, upper) {\n  if (number === number) {\n    if (upper !== undefined) {\n      number = number <= upper ? number : upper;\n    }\n    if (lower !== undefined) {\n      number = number >= lower ? number : lower;\n    }\n  }\n  return number;\n}\n\nexport default baseClamp;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseClamp.js","import isObject from './isObject';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\nexport default baseCreate;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseCreate.js","import toInteger from './toInteger';\nimport toLength from './toLength';\n\n/**\n * The base implementation of `_.fill` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to fill.\n * @param {*} value The value to fill `array` with.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns `array`.\n */\nfunction baseFill(array, value, start, end) {\n  var length = array.length;\n\n  start = toInteger(start);\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = (end === undefined || end > length) ? length : toInteger(end);\n  if (end < 0) {\n    end += length;\n  }\n  end = start > end ? 0 : toLength(end);\n  while (start < end) {\n    array[start++] = value;\n  }\n  return array;\n}\n\nexport default baseFill;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseFill.js","import arrayPush from './_arrayPush';\nimport isArray from './isArray';\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nexport default baseGetAllKeys;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseGetAllKeys.js","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return key in Object(object);\n}\n\nexport default baseHasIn;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseHasIn.js","/**\n * This function is like `baseIndexOf` except that it accepts a comparator.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOfWith(array, value, fromIndex, comparator) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (comparator(array[index], value)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default baseIndexOfWith;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseIndexOfWith.js","import Stack from './_Stack';\nimport equalArrays from './_equalArrays';\nimport equalByTag from './_equalByTag';\nimport equalObjects from './_equalObjects';\nimport getTag from './_getTag';\nimport isArray from './isArray';\nimport isHostObject from './_isHostObject';\nimport isTypedArray from './isTypedArray';\n\n/** Used to compose bitmasks for comparison styles. */\nvar PARTIAL_COMPARE_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = arrayTag,\n      othTag = arrayTag;\n\n  if (!objIsArr) {\n    objTag = getTag(object);\n    objTag = objTag == argsTag ? objectTag : objTag;\n  }\n  if (!othIsArr) {\n    othTag = getTag(other);\n    othTag = othTag == argsTag ? objectTag : othTag;\n  }\n  var objIsObj = objTag == objectTag && !isHostObject(object),\n      othIsObj = othTag == objectTag && !isHostObject(other),\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n      : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n  }\n  if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n}\n\nexport default baseIsEqualDeep;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseIsEqualDeep.js","import Stack from './_Stack';\nimport baseIsEqual from './_baseIsEqual';\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nexport default baseIsMatch;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseIsMatch.js","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = Object.keys;\n\n/**\n * The base implementation of `_.keys` which doesn't skip the constructor\n * property of prototypes or treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  return nativeKeys(Object(object));\n}\n\nexport default baseKeys;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseKeys.js","import Reflect from './_Reflect';\nimport iteratorToArray from './_iteratorToArray';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar enumerate = Reflect ? Reflect.enumerate : undefined,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * The base implementation of `_.keysIn` which doesn't skip the constructor\n * property of prototypes or treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  object = object == null ? object : Object(object);\n\n  var result = [];\n  for (var key in object) {\n    result.push(key);\n  }\n  return result;\n}\n\n// Fallback for IE < 9 with es6-shim.\nif (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {\n  baseKeysIn = function(object) {\n    return iteratorToArray(enumerate(object));\n  };\n}\n\nexport default baseKeysIn;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseKeysIn.js","import baseIsMatch from './_baseIsMatch';\nimport getMatchData from './_getMatchData';\nimport matchesStrictComparable from './_matchesStrictComparable';\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nexport default baseMatches;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseMatches.js","import baseIsEqual from './_baseIsEqual';\nimport get from './get';\nimport hasIn from './hasIn';\nimport isKey from './_isKey';\nimport isStrictComparable from './_isStrictComparable';\nimport matchesStrictComparable from './_matchesStrictComparable';\nimport toKey from './_toKey';\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n  };\n}\n\nexport default baseMatchesProperty;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseMatchesProperty.js","import isIndex from './_isIndex';\n\n/**\n * The base implementation of `_.nth` which doesn't coerce `n` to an integer.\n *\n * @private\n * @param {Array} array The array to query.\n * @param {number} n The index of the element to return.\n * @returns {*} Returns the nth element of `array`.\n */\nfunction baseNth(array, n) {\n  var length = array.length;\n  if (!length) {\n    return;\n  }\n  n += n < 0 ? length : 0;\n  return isIndex(n, length) ? array[n] : undefined;\n}\n\nexport default baseNth;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseNth.js","import baseGet from './_baseGet';\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nexport default basePropertyDeep;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_basePropertyDeep.js","import assignValue from './_assignValue';\nimport castPath from './_castPath';\nimport isIndex from './_isIndex';\nimport isKey from './_isKey';\nimport isObject from './isObject';\nimport toKey from './_toKey';\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]);\n    if (isObject(nested)) {\n      var newValue = value;\n      if (index != lastIndex) {\n        var objValue = nested[key];\n        newValue = customizer ? customizer(objValue, key, nested) : undefined;\n        if (newValue === undefined) {\n          newValue = objValue == null\n            ? (isIndex(path[index + 1]) ? [] : {})\n            : objValue;\n        }\n      }\n      assignValue(nested, key, newValue);\n    }\n    nested = nested[key];\n  }\n  return object;\n}\n\nexport default baseSet;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseSet.js","import arrayMap from './_arrayMap';\n\n/**\n * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n * of key-value pairs for `object` corresponding to the property names of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the key-value pairs.\n */\nfunction baseToPairs(object, props) {\n  return arrayMap(props, function(key) {\n    return [key, object[key]];\n  });\n}\n\nexport default baseToPairs;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseToPairs.js","import Symbol from './_Symbol';\nimport isSymbol from './isSymbol';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_baseToString.js","/**\n * Checks if `value` is a global object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {null|Object} Returns `value` if it's a global object, else `null`.\n */\nfunction checkGlobal(value) {\n  return (value && value.Object === Object) ? value : null;\n}\n\nexport default checkGlobal;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_checkGlobal.js","/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\nexport default cloneBuffer;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_cloneBuffer.js","import cloneArrayBuffer from './_cloneArrayBuffer';\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexport default cloneDataView;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_cloneDataView.js","import addMapEntry from './_addMapEntry';\nimport arrayReduce from './_arrayReduce';\nimport mapToArray from './_mapToArray';\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\nexport default cloneMap;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_cloneMap.js","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexport default cloneRegExp;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_cloneRegExp.js","import addSetEntry from './_addSetEntry';\nimport arrayReduce from './_arrayReduce';\nimport setToArray from './_setToArray';\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\nexport default cloneSet;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_cloneSet.js","import Symbol from './_Symbol';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_cloneSymbol.js","import cloneArrayBuffer from './_cloneArrayBuffer';\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexport default cloneTypedArray;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_cloneTypedArray.js","import isSymbol from './isSymbol';\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nexport default compareAscending;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_compareAscending.js","import copyObject from './_copyObject';\nimport getSymbols from './_getSymbols';\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nexport default copySymbols;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_copySymbols.js","import isIterateeCall from './_isIterateeCall';\nimport rest from './rest';\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return rest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nexport default createAssigner;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_createAssigner.js","import Set from './_Set';\nimport noop from './noop';\nimport setToArray from './_setToArray';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nexport default createSet;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_createSet.js","import baseToPairs from './_baseToPairs';\nimport getTag from './_getTag';\nimport mapToArray from './_mapToArray';\nimport setToPairs from './_setToPairs';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/**\n * Creates a `_.toPairs` or `_.toPairsIn` function.\n *\n * @private\n * @param {Function} keysFunc The function to get the keys of a given object.\n * @returns {Function} Returns the new pairs function.\n */\nfunction createToPairs(keysFunc) {\n  return function(object) {\n    var tag = getTag(object);\n    if (tag == mapTag) {\n      return mapToArray(object);\n    }\n    if (tag == setTag) {\n      return setToPairs(object);\n    }\n    return baseToPairs(object, keysFunc(object));\n  };\n}\n\nexport default createToPairs;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_createToPairs.js","import Symbol from './_Symbol';\nimport Uint8Array from './_Uint8Array';\nimport equalArrays from './_equalArrays';\nimport mapToArray from './_mapToArray';\nimport setToArray from './_setToArray';\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n      // Coerce dates and booleans to numbers, dates to milliseconds and\n      // booleans to `1` or `0` treating invalid dates coerced to `NaN` as\n      // not equal.\n      return +object == +other;\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case numberTag:\n      // Treat `NaN` vs. `NaN` as equal.\n      return (object != +object) ? other != +other : object == +other;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/6.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= UNORDERED_COMPARE_FLAG;\n      stack.set(object, other);\n\n      // Recursively compare objects (susceptible to call stack limits).\n      return equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nexport default equalByTag;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_equalByTag.js","import baseHas from './_baseHas';\nimport keys from './keys';\n\n/** Used to compose bitmasks for comparison styles. */\nvar PARTIAL_COMPARE_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      objProps = keys(object),\n      objLength = objProps.length,\n      othProps = keys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : baseHas(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  return result;\n}\n\nexport default equalObjects;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_equalObjects.js","import baseGetAllKeys from './_baseGetAllKeys';\nimport getSymbols from './_getSymbols';\nimport keys from './keys';\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nexport default getAllKeys;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_getAllKeys.js","import baseProperty from './_baseProperty';\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a\n * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects\n * Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\nexport default getLength;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_getLength.js","import isStrictComparable from './_isStrictComparable';\nimport toPairs from './toPairs';\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = toPairs(object),\n      length = result.length;\n\n  while (length--) {\n    result[length][2] = isStrictComparable(result[length][1]);\n  }\n  return result;\n}\n\nexport default getMatchData;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_getMatchData.js","import castPath from './_castPath';\nimport isArguments from './isArguments';\nimport isArray from './isArray';\nimport isIndex from './_isIndex';\nimport isKey from './_isKey';\nimport isLength from './isLength';\nimport isString from './isString';\nimport toKey from './_toKey';\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var result,\n      index = -1,\n      length = path.length;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result) {\n    return result;\n  }\n  var length = object ? object.length : 0;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isString(object) || isArguments(object));\n}\n\nexport default hasPath;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_hasPath.js","import nativeCreate from './_nativeCreate';\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\nexport default hashClear;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_hashClear.js","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\nexport default hashDelete;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_hashDelete.js","import nativeCreate from './_nativeCreate';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexport default hashGet;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_hashGet.js","import nativeCreate from './_nativeCreate';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nexport default hashHas;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_hashHas.js","import nativeCreate from './_nativeCreate';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexport default hashSet;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_hashSet.js","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nexport default initCloneArray;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_initCloneArray.js","import cloneArrayBuffer from './_cloneArrayBuffer';\nimport cloneDataView from './_cloneDataView';\nimport cloneMap from './_cloneMap';\nimport cloneRegExp from './_cloneRegExp';\nimport cloneSet from './_cloneSet';\nimport cloneSymbol from './_cloneSymbol';\nimport cloneTypedArray from './_cloneTypedArray';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_initCloneByTag.js","import baseCreate from './_baseCreate';\nimport getPrototype from './_getPrototype';\nimport isPrototype from './_isPrototype';\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nexport default initCloneObject;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_initCloneObject.js","import isArguments from './isArguments';\nimport isArray from './isArray';\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value);\n}\n\nexport default isFlattenable;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_isFlattenable.js","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nexport default isKeyable;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_isKeyable.js","/**\n * Converts `iterator` to an array.\n *\n * @private\n * @param {Object} iterator The iterator to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction iteratorToArray(iterator) {\n  var data,\n      result = [];\n\n  while (!(data = iterator.next()).done) {\n    result.push(data.value);\n  }\n  return result;\n}\n\nexport default iteratorToArray;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_iteratorToArray.js","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\nexport default listCacheClear;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_listCacheClear.js","import assocIndexOf from './_assocIndexOf';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\nexport default listCacheDelete;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_listCacheDelete.js","import assocIndexOf from './_assocIndexOf';\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nexport default listCacheGet;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_listCacheGet.js","import assocIndexOf from './_assocIndexOf';\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nexport default listCacheHas;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_listCacheHas.js","import assocIndexOf from './_assocIndexOf';\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nexport default listCacheSet;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_listCacheSet.js","import Hash from './_Hash';\nimport ListCache from './_ListCache';\nimport Map from './_Map';\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nexport default mapCacheClear;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_mapCacheClear.js","import getMapData from './_getMapData';\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\nexport default mapCacheDelete;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_mapCacheDelete.js","import getMapData from './_getMapData';\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nexport default mapCacheGet;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_mapCacheGet.js","import getMapData from './_getMapData';\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nexport default mapCacheHas;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_mapCacheHas.js","import getMapData from './_getMapData';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\nexport default mapCacheSet;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_mapCacheSet.js","import baseGet from './_baseGet';\nimport baseSlice from './_baseSlice';\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nexport default parent;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_parent.js","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nexport default setCacheAdd;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_setCacheAdd.js","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nexport default setCacheHas;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_setCacheHas.js","/**\n * Converts `set` to its value-value pairs.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the value-value pairs.\n */\nfunction setToPairs(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = [value, value];\n  });\n  return result;\n}\n\nexport default setToPairs;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_setToPairs.js","import ListCache from './_ListCache';\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\nexport default stackClear;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_stackClear.js","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\nexport default stackDelete;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_stackDelete.js","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nexport default stackGet;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_stackGet.js","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nexport default stackHas;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_stackHas.js","import ListCache from './_ListCache';\nimport MapCache from './_MapCache';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache && cache.__data__.length == LARGE_ARRAY_SIZE) {\n    cache = this.__data__ = new MapCache(cache.__data__);\n  }\n  cache.set(key, value);\n  return this;\n}\n\nexport default stackSet;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_stackSet.js","import memoize from './memoize';\nimport toString from './toString';\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  var result = [];\n  toString(string).replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nexport default stringToPath;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/_stringToPath.js","import chunk from './chunk';\nimport compact from './compact';\nimport concat from './concat';\nimport difference from './difference';\nimport differenceBy from './differenceBy';\nimport differenceWith from './differenceWith';\nimport drop from './drop';\nimport dropRight from './dropRight';\nimport dropRightWhile from './dropRightWhile';\nimport dropWhile from './dropWhile';\nimport fill from './fill';\nimport findIndex from './findIndex';\nimport findLastIndex from './findLastIndex';\nimport first from './first';\nimport flatten from './flatten';\nimport flattenDeep from './flattenDeep';\nimport flattenDepth from './flattenDepth';\nimport fromPairs from './fromPairs';\nimport head from './head';\nimport indexOf from './indexOf';\nimport initial from './initial';\nimport intersection from './intersection';\nimport intersectionBy from './intersectionBy';\nimport intersectionWith from './intersectionWith';\nimport join from './join';\nimport last from './last';\nimport lastIndexOf from './lastIndexOf';\nimport nth from './nth';\nimport pull from './pull';\nimport pullAll from './pullAll';\nimport pullAllBy from './pullAllBy';\nimport pullAllWith from './pullAllWith';\nimport pullAt from './pullAt';\nimport remove from './remove';\nimport reverse from './reverse';\nimport slice from './slice';\nimport sortedIndex from './sortedIndex';\nimport sortedIndexBy from './sortedIndexBy';\nimport sortedIndexOf from './sortedIndexOf';\nimport sortedLastIndex from './sortedLastIndex';\nimport sortedLastIndexBy from './sortedLastIndexBy';\nimport sortedLastIndexOf from './sortedLastIndexOf';\nimport sortedUniq from './sortedUniq';\nimport sortedUniqBy from './sortedUniqBy';\nimport tail from './tail';\nimport take from './take';\nimport takeRight from './takeRight';\nimport takeRightWhile from './takeRightWhile';\nimport takeWhile from './takeWhile';\nimport union from './union';\nimport unionBy from './unionBy';\nimport unionWith from './unionWith';\nimport uniq from './uniq';\nimport uniqBy from './uniqBy';\nimport uniqWith from './uniqWith';\nimport unzip from './unzip';\nimport unzipWith from './unzipWith';\nimport without from './without';\nimport xor from './xor';\nimport xorBy from './xorBy';\nimport xorWith from './xorWith';\nimport zip from './zip';\nimport zipObject from './zipObject';\nimport zipObjectDeep from './zipObjectDeep';\nimport zipWith from './zipWith';\n\nexport default {\n  chunk, compact, concat, difference, differenceBy,\n  differenceWith, drop, dropRight, dropRightWhile, dropWhile,\n  fill, findIndex, findLastIndex, first, flatten,\n  flattenDeep, flattenDepth, fromPairs, head, indexOf,\n  initial, intersection, intersectionBy, intersectionWith, join,\n  last, lastIndexOf, nth, pull, pullAll,\n  pullAllBy, pullAllWith, pullAt, remove, reverse,\n  slice, sortedIndex, sortedIndexBy, sortedIndexOf, sortedLastIndex,\n  sortedLastIndexBy, sortedLastIndexOf, sortedUniq, sortedUniqBy, tail,\n  take, takeRight, takeRightWhile, takeWhile, union,\n  unionBy, unionWith, uniq, uniqBy, uniqWith,\n  unzip, unzipWith, without, xor, xorBy,\n  xorWith, zip, zipObject, zipObjectDeep, zipWith\n};\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/array.default.js","export { default as chunk } from './chunk';\nexport { default as compact } from './compact';\nexport { default as concat } from './concat';\nexport { default as difference } from './difference';\nexport { default as differenceBy } from './differenceBy';\nexport { default as differenceWith } from './differenceWith';\nexport { default as drop } from './drop';\nexport { default as dropRight } from './dropRight';\nexport { default as dropRightWhile } from './dropRightWhile';\nexport { default as dropWhile } from './dropWhile';\nexport { default as fill } from './fill';\nexport { default as findIndex } from './findIndex';\nexport { default as findLastIndex } from './findLastIndex';\nexport { default as first } from './first';\nexport { default as flatten } from './flatten';\nexport { default as flattenDeep } from './flattenDeep';\nexport { default as flattenDepth } from './flattenDepth';\nexport { default as fromPairs } from './fromPairs';\nexport { default as head } from './head';\nexport { default as indexOf } from './indexOf';\nexport { default as initial } from './initial';\nexport { default as intersection } from './intersection';\nexport { default as intersectionBy } from './intersectionBy';\nexport { default as intersectionWith } from './intersectionWith';\nexport { default as join } from './join';\nexport { default as last } from './last';\nexport { default as lastIndexOf } from './lastIndexOf';\nexport { default as nth } from './nth';\nexport { default as pull } from './pull';\nexport { default as pullAll } from './pullAll';\nexport { default as pullAllBy } from './pullAllBy';\nexport { default as pullAllWith } from './pullAllWith';\nexport { default as pullAt } from './pullAt';\nexport { default as remove } from './remove';\nexport { default as reverse } from './reverse';\nexport { default as slice } from './slice';\nexport { default as sortedIndex } from './sortedIndex';\nexport { default as sortedIndexBy } from './sortedIndexBy';\nexport { default as sortedIndexOf } from './sortedIndexOf';\nexport { default as sortedLastIndex } from './sortedLastIndex';\nexport { default as sortedLastIndexBy } from './sortedLastIndexBy';\nexport { default as sortedLastIndexOf } from './sortedLastIndexOf';\nexport { default as sortedUniq } from './sortedUniq';\nexport { default as sortedUniqBy } from './sortedUniqBy';\nexport { default as tail } from './tail';\nexport { default as take } from './take';\nexport { default as takeRight } from './takeRight';\nexport { default as takeRightWhile } from './takeRightWhile';\nexport { default as takeWhile } from './takeWhile';\nexport { default as union } from './union';\nexport { default as unionBy } from './unionBy';\nexport { default as unionWith } from './unionWith';\nexport { default as uniq } from './uniq';\nexport { default as uniqBy } from './uniqBy';\nexport { default as uniqWith } from './uniqWith';\nexport { default as unzip } from './unzip';\nexport { default as unzipWith } from './unzipWith';\nexport { default as without } from './without';\nexport { default as xor } from './xor';\nexport { default as xorBy } from './xorBy';\nexport { default as xorWith } from './xorWith';\nexport { default as zip } from './zip';\nexport { default as zipObject } from './zipObject';\nexport { default as zipObjectDeep } from './zipObjectDeep';\nexport { default as zipWith } from './zipWith';\nexport { default as default } from './array.default';\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/array.js","import assignValue from './_assignValue';\nimport copyObject from './_copyObject';\nimport createAssigner from './_createAssigner';\nimport isArrayLike from './isArrayLike';\nimport isPrototype from './_isPrototype';\nimport keysIn from './keysIn';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\nvar nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\n/**\n * This method is like `_.assign` except that it iterates over own and\n * inherited source properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extend\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assign\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * function Bar() {\n *   this.d = 4;\n * }\n *\n * Foo.prototype.c = 3;\n * Bar.prototype.e = 5;\n *\n * _.assignIn({ 'a': 1 }, new Foo, new Bar);\n * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5 }\n */\nvar assignIn = createAssigner(function(object, source) {\n  if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keysIn(source), object);\n    return;\n  }\n  for (var key in source) {\n    assignValue(object, key, source[key]);\n  }\n});\n\nexport default assignIn;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/assignIn.js","import baseClone from './_baseClone';\n\n/**\n * This method is like `_.cloneWith` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @param {Function} [customizer] The function to customize cloning.\n * @returns {*} Returns the deep cloned value.\n * @see _.cloneWith\n * @example\n *\n * function customizer(value) {\n *   if (_.isElement(value)) {\n *     return value.cloneNode(true);\n *   }\n * }\n *\n * var el = _.cloneDeepWith(document.body, customizer);\n *\n * console.log(el === document.body);\n * // => false\n * console.log(el.nodeName);\n * // => 'BODY'\n * console.log(el.childNodes.length);\n * // => 20\n */\nfunction cloneDeepWith(value, customizer) {\n  return baseClone(value, true, true, customizer);\n}\n\nexport default cloneDeepWith;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/cloneDeepWith.js","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var object = { 'user': 'fred' };\n * var getter = _.constant(object);\n *\n * getter() === object;\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nexport default constant;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/constant.js","import baseHasIn from './_baseHasIn';\nimport hasPath from './_hasPath';\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nexport default hasIn;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/hasIn.js","import constant from './constant';\nimport root from './_root';\n\n/** Used to determine if values are of the language type `Object`. */\nvar objectTypes = {\n  'function': true,\n  'object': true\n};\n\n/** Detect free variable `exports`. */\nvar freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType)\n  ? exports\n  : undefined;\n\n/** Detect free variable `module`. */\nvar freeModule = (objectTypes[typeof module] && module && !module.nodeType)\n  ? module\n  : undefined;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = (freeModule && freeModule.exports === freeExports)\n  ? freeExports\n  : undefined;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = !Buffer ? constant(false) : function(value) {\n  return value instanceof Buffer;\n};\n\nexport default isBuffer;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/isBuffer.js","import baseIsEqual from './_baseIsEqual';\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are **not** supported.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent,\n *  else `false`.\n * @example\n *\n * var object = { 'user': 'fred' };\n * var other = { 'user': 'fred' };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nexport default isEqual;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/isEqual.js","import isLength from './isLength';\nimport isObjectLike from './isObjectLike';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n *  else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nfunction isTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n}\n\nexport default isTypedArray;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/isTypedArray.js","import baseKeysIn from './_baseKeysIn';\nimport indexKeys from './_indexKeys';\nimport isIndex from './_isIndex';\nimport isPrototype from './_isPrototype';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  var index = -1,\n      isProto = isPrototype(object),\n      props = baseKeysIn(object),\n      propsLength = props.length,\n      indexes = indexKeys(object),\n      skipIndexes = !!indexes,\n      result = indexes || [],\n      length = result.length;\n\n  while (++index < propsLength) {\n    var key = props[index];\n    if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default keysIn;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/keysIn.js","import MapCache from './_MapCache';\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\nexport default memoize;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/memoize.js","/**\n * A no-operation function that returns `undefined` regardless of the\n * arguments it receives.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.noop(object) === undefined;\n * // => true\n */\nfunction noop() {\n  // No operation performed.\n}\n\nexport default noop;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/noop.js","/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @type {Function}\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred function to be invoked.\n */\nvar now = Date.now;\n\nexport default now;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/now.js","import baseProperty from './_baseProperty';\nimport basePropertyDeep from './_basePropertyDeep';\nimport isKey from './_isKey';\nimport toKey from './_toKey';\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nexport default property;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/property.js","import debounce from './debounce';\nimport isObject from './isObject';\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide an options object to indicate whether\n * `func` should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nexport default throttle;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/throttle.js","import toNumber from './toNumber';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexport default toFinite;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/toFinite.js","import baseClamp from './_baseClamp';\nimport toInteger from './toInteger';\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/**\n * Converts `value` to an integer suitable for use as the length of an\n * array-like object.\n *\n * **Note:** This method is based on\n * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toLength(3.2);\n * // => 3\n *\n * _.toLength(Number.MIN_VALUE);\n * // => 0\n *\n * _.toLength(Infinity);\n * // => 4294967295\n *\n * _.toLength('3.2');\n * // => 3\n */\nfunction toLength(value) {\n  return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n}\n\nexport default toLength;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/toLength.js","import createToPairs from './_createToPairs';\nimport keys from './keys';\n\n/**\n * Creates an array of own enumerable string keyed-value pairs for `object`\n * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n * entries are returned.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias entries\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the key-value pairs.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.toPairs(new Foo);\n * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n */\nvar toPairs = createToPairs(keys);\n\nexport default toPairs;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/toPairs.js","import baseToString from './_baseToString';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/lib/lodash/toString.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/locale\n */\n\nimport { translate } from './translation-service';\n\n/**\n * Represents the localization services.\n */\nexport default class Locale {\n\t/**\n\t * Creates a new instance of the Locale class.\n\t *\n\t * @param {String} [lang='en'] The language code in [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.\n\t */\n\tconstructor( lang ) {\n\t\t/**\n\t\t * The language code in [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.lang = lang || 'en';\n\n\t\t/**\n\t\t * Translates the given string to the {@link #lang}. This method is also availble in {@link module:core/editor/editor~Editor#t} and\n\t\t * {@link module:ui/view~View#t}.\n\t\t *\n\t\t * The strings may contain placeholders (`%<index>`) for values which are passed as the second argument.\n\t\t * `<index>` is the index in the `values` array.\n\t\t *\n\t\t *\t\teditor.t( 'Created file \"%0\" in %1ms.', [ fileName, timeTaken ] );\n\t\t *\n\t\t * This method's context is statically bound to Locale instance,\n\t\t * so it can be called as a function:\n\t\t *\n\t\t *\t\tconst t = this.t;\n\t\t *\t\tt( 'Label' );\n\t\t *\n\t\t * @method #t\n\t\t * @param {String} str The string to translate.\n\t\t * @param {String[]} values Values that should be used to interpolate the string.\n\t\t */\n\t\tthis.t = ( ...args ) => this._t( ...args );\n\t}\n\n\t/**\n\t * Base for the {@link #t} method.\n\t *\n\t * @private\n\t */\n\t_t( str, values ) {\n\t\tlet translatedString = translate( this.lang, str );\n\n\t\tif ( values ) {\n\t\t\ttranslatedString = translatedString.replace( /%(\\d+)/g, ( match, index ) => {\n\t\t\t\treturn ( index < values.length ) ? values[ index ] : match;\n\t\t\t} );\n\t\t}\n\n\t\treturn translatedString;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/locale.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/mapsequal\n */\n\n/**\n * Checks whether given {Map}s are equal, that is has same size and same key-value pairs.\n *\n * @returns {Boolean} `true` if given maps are equal, `false` otherwise.\n */\nexport default function mapsEqual( mapA, mapB ) {\n\tif ( mapA.size != mapB.size ) {\n\t\treturn false;\n\t}\n\n\tfor ( const attr of mapA.entries() ) {\n\t\tconst valA = JSON.stringify( attr[ 1 ] );\n\t\tconst valB = JSON.stringify( mapB.get( attr[ 0 ] ) );\n\n\t\tif ( valA !== valB ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/mapsequal.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/priorities\n */\n\n/**\n * String representing a priority value.\n *\n * @typedef {'highest'|'high'|'normal'|'low'|'lowest'} module:utils/priorities~PriorityString\n */\n\n/**\n * Provides group of constants to use instead of hardcoding numeric priority values.\n *\n * @namespace\n */\nconst priorities = {\n\t/**\n\t * Converts a string with priority name to it's numeric value. If `Number` is given, it just returns it.\n\t *\n\t * @static\n\t * @param {module:utils/priorities~PriorityString|Number} priority Priority to convert.\n\t * @returns {Number} Converted priority.\n\t */\n\tget( priority ) {\n\t\tif ( typeof priority != 'number' ) {\n\t\t\treturn this[ priority ] || this.normal;\n\t\t} else {\n\t\t\treturn priority;\n\t\t}\n\t},\n\n\thighest: 100000,\n\thigh: 1000,\n\tnormal: 0,\n\tlow: -1000,\n\tlowest: -100000\n};\n\nexport default priorities;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/priorities.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/spy\n */\n\n/**\n * Creates a spy function (ala Sinon.js) that can be used to inspect call to it.\n *\n * The following are the present features:\n *\n * * spy.called: property set to `true` if the function has been called at least once.\n *\n * @returns {Function} The spy function.\n */\nfunction spy() {\n\treturn function spy() {\n\t\tspy.called = true;\n\t};\n}\n\nexport default spy;\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/spy.js","/**\n * @license Copyright (c) 2003-2016, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/translation-service\n */\n\nlet dictionaries = {};\n\n/**\n * Adds package translations to existing ones.\n * These translations will later be available for {@link module:utils/translation-service~translate translate}.\n *\n *\t\tadd( 'pl', {\n *\t\t\t'OK': 'OK',\n *\t\t\t'Cancel [context: reject]': 'Anuluj'\n *\t\t} );\n *\n * @param {String} lang Target language.\n * @param {Object.<String, String>} translations Translations which will be added to the dictionary.\n */\nexport function add( lang, translations ) {\n\tdictionaries[ lang ] = dictionaries[ lang ] || {};\n\n\tObject.assign( dictionaries[ lang ], translations );\n}\n\n/**\n * Translates string if the translation of the string was previously {@link module:utils/translation-service~add added}\n * to the dictionary. This happens in a multi-language mode were translation modules are created by the bundler.\n *\n * When no translation is defined in the dictionary or the dictionary doesn't exist this function returns\n * the original string without the `'[context: ]'` (happens in development and single-language modes).\n *\n * In a single-language mode (when values passed to `t()` were replaced with target languange strings) the dictionary\n * is left empty, so this function will return the original strings always.\n *\n *\t\ttranslate( 'pl', 'Cancel [context: reject]' );\n *\n * @param {String} lang Target language.\n * @param {String} translationKey String which is going to be translated.\n * @returns {String} Translated sentence.\n */\nexport function translate( lang, translationKey ) {\n\tif ( !hasTranslation( lang, translationKey ) ) {\n\t\treturn translationKey.replace( / \\[context: [^\\]]+\\]$/, '' );\n\t}\n\n\treturn dictionaries[ lang ][ translationKey ];\n}\n\n// Checks whether the dictionary exists and translaiton in that dictionary exists.\nfunction hasTranslation( lang, translationKey ) {\n\treturn (\n\t\t( lang in dictionaries ) &&\n\t\t( translationKey in dictionaries[ lang ] )\n\t);\n}\n\n/**\n * Clears dictionaries for test purposes.\n *\n * @protected\n */\nexport function _clear() {\n\tdictionaries = {};\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-utils/src/translation-service.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module widget/widget\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport MouseObserver from '@ckeditor/ckeditor5-engine/src/view/observer/mouseobserver';\nimport ModelRange from '@ckeditor/ckeditor5-engine/src/model/range';\nimport ModelSelection from '@ckeditor/ckeditor5-engine/src/model/selection';\nimport ModelElement from '@ckeditor/ckeditor5-engine/src/model/element';\nimport ViewEditableElement from '@ckeditor/ckeditor5-engine/src/view/editableelement';\nimport RootEditableElement from '@ckeditor/ckeditor5-engine/src/view/rooteditableelement';\nimport { isWidget, WIDGET_SELECTED_CLASS_NAME, getLabel } from './utils';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\n\nimport '../theme/theme.scss';\n\n/**\n * The widget plugin.\n * Registers model to view selection converter for editing pipeline. It is hooked after default selection conversion.\n * If converted selection is placed around widget element, selection is marked as fake. Additionally, proper CSS class\n * is added to indicate that widget has been selected.\n * Adds default {@link module:engine/view/document~Document#event:mousedown mousedown} handling on widget elements.\n *\n * @extends module:core/plugin~Plugin.\n */\nexport default class Widget extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'widget/widget';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst viewDocument = this.editor.editing.view;\n\n\t\tlet previouslySelected;\n\n\t\t// Model to view selection converter.\n\t\t// Converts selection placed over widget element to fake selection\n\t\tthis.editor.editing.modelToView.on( 'selection', ( evt, data, consumable, conversionApi ) => {\n\t\t\t// Remove selected class from previously selected widget.\n\t\t\tif ( previouslySelected && previouslySelected.hasClass( WIDGET_SELECTED_CLASS_NAME ) ) {\n\t\t\t\tpreviouslySelected.removeClass( WIDGET_SELECTED_CLASS_NAME );\n\t\t\t}\n\n\t\t\tconst viewSelection = conversionApi.viewSelection;\n\n\t\t\t// Check if widget was clicked or some sub-element.\n\t\t\tconst selectedElement = viewSelection.getSelectedElement();\n\n\t\t\tif ( !selectedElement || !isWidget( selectedElement ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tviewSelection.setFake( true, { label: getLabel( selectedElement ) } );\n\t\t\tselectedElement.addClass( WIDGET_SELECTED_CLASS_NAME );\n\t\t\tpreviouslySelected = selectedElement;\n\t\t}, { priority: 'low' } );\n\n\t\t// If mouse down is pressed on widget - create selection over whole widget.\n\t\tviewDocument.addObserver( MouseObserver );\n\t\tthis.listenTo( viewDocument, 'mousedown', ( ...args ) => this._onMousedown( ...args ) );\n\n\t\t// Handle custom keydown behaviour.\n\t\tthis.listenTo( viewDocument, 'keydown', ( ...args ) => this._onKeydown( ...args ), { priority: 'high' } );\n\t}\n\n\t/**\n\t * Handles {@link module:engine/view/document~Document#event:mousedown mousedown} events on widget elements.\n\t *\n\t * @private\n\t * @param {module:utils/eventinfo~EventInfo} eventInfo\n\t * @param {module:engine/view/observer/domeventdata~DomEventData} domEventData\n\t */\n\t_onMousedown( eventInfo, domEventData ) {\n\t\tconst editor = this.editor;\n\t\tconst viewDocument = editor.editing.view;\n\t\tlet element = domEventData.target;\n\n\t\t// Do nothing if inside nested editable.\n\t\tif ( isInsideNestedEditable( element ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If target is not a widget element - check if one of the ancestors is.\n\t\tif ( !isWidget( element ) ) {\n\t\t\telement = element.findAncestor( isWidget );\n\n\t\t\tif ( !element ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tdomEventData.preventDefault();\n\n\t\t// Focus editor if is not focused already.\n\t\tif ( !viewDocument.isFocused ) {\n\t\t\tviewDocument.focus();\n\t\t}\n\n\t\t// Create model selection over widget.\n\t\tconst modelElement = editor.editing.mapper.toModelElement( element );\n\n\t\teditor.document.enqueueChanges( ( ) => {\n\t\t\tthis._setSelectionOverElement( modelElement );\n\t\t} );\n\t}\n\n\t/**\n\t * Handles {@link module:engine/view/document~Document#event:keydown keydown} events.\n\t *\n\t * @private\n\t * @param {module:utils/eventinfo~EventInfo} eventInfo\n\t * @param {module:engine/view/observer/domeventdata~DomEventData} domEventData\n\t */\n\t_onKeydown( eventInfo, domEventData ) {\n\t\tconst keyCode = domEventData.keyCode;\n\t\tconst isForward = keyCode == keyCodes.delete || keyCode == keyCodes.arrowdown || keyCode == keyCodes.arrowright;\n\n\t\t// Checks if delete/backspace or arrow keys were handled and then prevents default event behaviour and stops\n\t\t// event propagation.\n\t\tif ( ( isDeleteKeyCode( keyCode ) && this._handleDelete( isForward ) ) ||\n\t\t\t( isArrowKeyCode( keyCode ) && this._handleArrowKeys( isForward ) ) ) {\n\t\t\tdomEventData.preventDefault();\n\t\t\teventInfo.stop();\n\t\t}\n\t}\n\n\t/**\n\t * Handles delete keys: backspace and delete.\n\t *\n\t * @private\n\t * @param {Boolean} isForward Set to true if delete was performed in forward direction.\n\t * @returns {Boolean|undefined} Returns `true` if keys were handled correctly.\n\t */\n\t_handleDelete( isForward ) {\n\t\tconst modelDocument = this.editor.document;\n\t\tconst modelSelection = modelDocument.selection;\n\n\t\t// Do nothing on non-collapsed selection.\n\t\tif ( !modelSelection.isCollapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst objectElement = this._getObjectElementNextToSelection( isForward );\n\n\t\tif ( objectElement ) {\n\t\t\tmodelDocument.enqueueChanges( () => {\n\t\t\t\t// Remove previous element if empty.\n\t\t\t\tconst previousNode = modelSelection.anchor.parent;\n\n\t\t\t\tif ( previousNode.isEmpty ) {\n\t\t\t\t\tconst batch = modelDocument.batch();\n\t\t\t\t\tbatch.remove( previousNode );\n\t\t\t\t}\n\n\t\t\t\tthis._setSelectionOverElement( objectElement );\n\t\t\t} );\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * Handles arrow keys.\n\t *\n\t * @param {Boolean} isForward Set to true if arrow key should be handled in forward direction.\n\t * @returns {Boolean|undefined} Returns `true` if keys were handled correctly.\n\t */\n\t_handleArrowKeys( isForward ) {\n\t\tconst modelDocument = this.editor.document;\n\t\tconst schema = modelDocument.schema;\n\t\tconst modelSelection = modelDocument.selection;\n\t\tconst objectElement = modelSelection.getSelectedElement();\n\n\t\t// if object element is selected.\n\t\tif ( objectElement && schema.objects.has( objectElement.name ) ) {\n\t\t\tconst position = isForward ? modelSelection.getLastPosition() : modelSelection.getFirstPosition();\n\t\t\tconst newRange = modelDocument.getNearestSelectionRange( position, isForward ? 'forward' : 'backward' );\n\n\t\t\tif ( newRange ) {\n\t\t\t\tmodelDocument.enqueueChanges( () => {\n\t\t\t\t\tmodelSelection.setRanges( [ newRange ] );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\t// If selection is next to object element.\n\t\t// Return if not collapsed.\n\t\tif ( !modelSelection.isCollapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst objectElement2 = this._getObjectElementNextToSelection( isForward );\n\n\t\tif ( objectElement2 instanceof ModelElement && modelDocument.schema.objects.has( objectElement2.name ) ) {\n\t\t\tmodelDocument.enqueueChanges( () => {\n\t\t\t\tthis._setSelectionOverElement( objectElement2 );\n\t\t\t} );\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * Sets {@link module:engine/model/selection~Selection document's selection} over given element.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} element\n\t */\n\t_setSelectionOverElement( element ) {\n\t\tthis.editor.document.selection.setRanges( [ ModelRange.createOn( element ) ] );\n\t}\n\n\t/**\n\t * Checks if {@link module:engine/model/element~Element element} placed next to the current\n\t * {@link module:engine/model/selection~Selection model selection} exists and is marked in\n\t * {@link module:engine/model/schema~Schema schema} as `object`.\n\t *\n\t * @private\n\t * @param {Boolean} forward Direction of checking.\n\t * @returns {module:engine/model/element~Element|null}\n\t */\n\t_getObjectElementNextToSelection( forward ) {\n\t\tconst modelDocument = this.editor.document;\n\t\tconst schema = modelDocument.schema;\n\t\tconst modelSelection = modelDocument.selection;\n\t\tconst dataController = this.editor.data;\n\n\t\t// Clone current selection to use it as a probe. We must leave default selection as it is so it can return\n\t\t// to its current state after undo.\n\t\tconst probe = ModelSelection.createFromSelection( modelSelection );\n\t\tdataController.modifySelection( probe, { direction: forward ? 'forward' : 'backward' } );\n\t\tconst objectElement = forward ? probe.focus.nodeBefore : probe.focus.nodeAfter;\n\n\t\tif ( objectElement instanceof ModelElement && schema.objects.has( objectElement.name ) ) {\n\t\t\treturn objectElement;\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\n// Returns 'true' if provided key code represents one of the arrow keys.\n//\n// @param {Number} keyCode\n// @returns {Boolean}\nfunction isArrowKeyCode( keyCode ) {\n\treturn keyCode == keyCodes.arrowright ||\n\t\tkeyCode == keyCodes.arrowleft ||\n\t\tkeyCode == keyCodes.arrowup ||\n\t\tkeyCode == keyCodes.arrowdown;\n}\n\n// Returns 'true' if provided key code represents one of the delete keys: delete or backspace.\n//\n// @param {Number} keyCode\n// @returns {Boolean}\nfunction isDeleteKeyCode( keyCode ) {\n\treturn keyCode == keyCodes.delete || keyCode == keyCodes.backspace;\n}\n\n// Returns `true` when element is a nested editable or is placed inside one.\n//\n// @param {module:engine/view/element~Element}\n// @returns {Boolean}\nfunction isInsideNestedEditable( element ) {\n\twhile ( element ) {\n\t\tif ( element instanceof ViewEditableElement && !( element instanceof RootEditableElement ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\telement = element.parent;\n\t}\n\n\treturn false;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../ckeditor5-widget/src/widget.js","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \"blockquote{border-left:5px solid #ccc;padding-left:20px;margin-left:0;font-style:italic}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/pomek/Projects/ckeditor/ckeditor5/~/css-loader?{\"minimize\":true}!/Users/pomek/Projects/ckeditor/ckeditor5/~/sass-loader/lib/loader.js!../ckeditor5-block-quote/theme/theme.scss\n// module id = 512\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".ck-hidden{display:none!important}.ck-reset,.ck-reset_all,.ck-reset_all *,.ck-reset_all a,.ck-reset_all textarea{box-sizing:border-box;width:auto;height:auto;position:static}svg.ck-icon{min-width:20px;min-height:20px;font-size:1em;vertical-align:middle}svg.ck-icon,svg.ck-icon *{color:inherit;cursor:inherit}svg.ck-icon *{fill:currentColor}[data-ck-tooltip]:after,[data-ck-tooltip]:before{visibility:hidden;opacity:0;display:none;position:absolute;z-index:999;pointer-events:none;-webkit-backface-visibility:hidden}[data-ck-tooltip]:after{content:attr(data-ck-tooltip)}[data-ck-tooltip]:before{content:\\\"\\\";width:0;height:0}.ck-button,a.ck-button{display:inline-block;position:relative;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none}.ck-button:after,.ck-button:before,a.ck-button:after,a.ck-button:before{display:block}.ck-button:hover:after,.ck-button:hover:before,a.ck-button:hover:after,a.ck-button:hover:before{visibility:visible;opacity:1}.ck-button .ck-button__label,.ck-button:focus:not(:hover):after,.ck-button:focus:not(:hover):before,a.ck-button .ck-button__label,a.ck-button:focus:not(:hover):after,a.ck-button:focus:not(:hover):before{display:none}.ck-toolbar__separator{display:inline-block}.ck-toolbar__newline{display:block;clear:left}.ck-dropdown{display:inline-block;position:relative}.ck-dropdown:after{content:\\\"\\\";width:0;height:0;pointer-events:none;z-index:1;position:absolute;top:50%;transform:translateY(-50%)}.ck-dropdown__panel{-webkit-backface-visibility:hidden;display:none;z-index:999;position:absolute;left:0;transform:translateY(100%)}.ck-dropdown__panel-visible{display:inline-block}.ck-label,.ck-list__item{display:block}.cke-voice-label{display:none}.ck-balloon-panel{-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;display:none;position:absolute;z-index:999}.ck-balloon-panel.ck-balloon-panel_with-arrow:after,.ck-balloon-panel.ck-balloon-panel_with-arrow:before{content:\\\"\\\";position:absolute}.ck-balloon-panel.ck-balloon-panel_with-arrow:before{z-index:1}.ck-balloon-panel.ck-balloon-panel_with-arrow:after{z-index:2}.ck-balloon-panel.ck-balloon-panel_arrow_n:before,.ck-balloon-panel.ck-balloon-panel_arrow_ne:before,.ck-balloon-panel.ck-balloon-panel_arrow_nw:before{z-index:1}.ck-balloon-panel.ck-balloon-panel_arrow_n:after,.ck-balloon-panel.ck-balloon-panel_arrow_ne:after,.ck-balloon-panel.ck-balloon-panel_arrow_nw:after{z-index:2}.ck-balloon-panel.ck-balloon-panel_arrow_s:before,.ck-balloon-panel.ck-balloon-panel_arrow_se:before,.ck-balloon-panel.ck-balloon-panel_arrow_sw:before{z-index:1}.ck-balloon-panel.ck-balloon-panel_arrow_s:after,.ck-balloon-panel.ck-balloon-panel_arrow_se:after,.ck-balloon-panel.ck-balloon-panel_arrow_sw:after{z-index:2}.ck-balloon-panel_visible{display:block}.ck-editor .ck-toolbar.ck-toolbar_sticky{position:fixed;top:0}.ck-editor .ck-toolbar.ck-toolbar_sticky.ck-toolbar_sticky_bottom-limit{top:auto;position:absolute}.ck-reset,.ck-reset_all,.ck-reset_all *,.ck-reset_all a,.ck-reset_all textarea{margin:0;padding:0;border:0;background:transparent;text-decoration:none;vertical-align:middle;transition:none}.ck-reset_all,.ck-reset_all *,.ck-reset_all a,.ck-reset_all textarea{border-collapse:collapse;font:normal normal normal 12px Helvetica,Arial,Tahoma,Verdana,Sans-Serif;color:#333;text-align:left;white-space:nowrap;cursor:auto;float:none}.ck-reset_all .ck-rtl *{text-align:right}.ck-reset_all iframe{vertical-align:inherit}.ck-reset_all textarea{white-space:pre-wrap}.ck-reset_all input[type=password],.ck-reset_all input[type=text],.ck-reset_all textarea{cursor:text}.ck-reset_all input[type=password][disabled],.ck-reset_all input[type=text][disabled],.ck-reset_all textarea[disabled]{cursor:default}.ck-reset_all fieldset{padding:10px;border:2px groove #e0dfe3}.ck-reset_all button::-moz-focus-inner{padding:0;border:0}svg.ck-icon{width:1.66667em;height:1.66667em}[data-ck-tooltip]:after,[data-ck-tooltip]:before{left:50%;transition:opacity .2s ease-in-out .2s}[data-ck-tooltip]:after{border-radius:2px;color:#fff;font-size:.7rem;background:#333;padding:.4em .64em}[data-ck-tooltip]:before{border-style:solid}.ck-tooltip_s:after{bottom:-4px;transform:translate(-50%,100%)}.ck-tooltip_s:before{bottom:0;transform:translate(-50%,100%);border-color:transparent transparent #333;border-width:0 5px 5px}.ck-tooltip_n:after{top:-4px;transform:translate(-50%,-100%)}.ck-tooltip_n:before{top:0;transform:translate(-50%,-100%);border-color:#333 transparent transparent;border-width:5px 5px 0}.ck-button,a.ck-button{background:#fff;border:1px solid #bfbfbf;white-space:nowrap;cursor:default;vertical-align:middle;padding:.4em;line-height:1.66667}.ck-button:not(.ck-disabled):focus,.ck-button:not(.ck-disabled):hover,a.ck-button:not(.ck-disabled):focus,a.ck-button:not(.ck-disabled):hover{background:#e6e6e6;border-color:#a6a6a6}.ck-button:not(.ck-disabled):active,a.ck-button:not(.ck-disabled):active{background:#d9d9d9;border-color:#999;box-shadow:inset 0 2px 2px #bfbfbf}.ck-button.ck-rounded-corners,.ck-rounded-corners .ck-button,.ck-rounded-corners a.ck-button,a.ck-button.ck-rounded-corners{border-radius:2px}.ck-button:focus,a.ck-button:focus{outline:none;border:1px solid #6ab5f9;box-shadow:0 0 3px 2px #9bcdfb}.ck-button .ck-icon,a.ck-button .ck-icon{float:left}.ck-button.ck-disabled .ck-icon,a.ck-button.ck-disabled .ck-icon{opacity:.5}.ck-button.ck-button_with-text,a.ck-button.ck-button_with-text{padding:.4em .8em}.ck-button.ck-button_with-text .ck-icon,a.ck-button.ck-button_with-text .ck-icon{margin-left:-.4em;margin-right:.4em}.ck-button.ck-button_with-text .ck-button__label,a.ck-button.ck-button_with-text .ck-button__label{display:block}.ck-button.ck-on,a.ck-button.ck-on{background:#f7f7f7;border-color:#b9b9b9}.ck-button.ck-on:not(.ck-disabled):focus,.ck-button.ck-on:not(.ck-disabled):hover,a.ck-button.ck-on:not(.ck-disabled):focus,a.ck-button.ck-on:not(.ck-disabled):hover{background:#dedede;border-color:#a1a1a1}.ck-button.ck-on:not(.ck-disabled):active,a.ck-button.ck-on:not(.ck-disabled):active{background:#d2d2d2;border-color:#949494;box-shadow:inset 0 2px 2px #b9b9b9}.ck-button-action,a.ck-button-action{background:#61b145;border-color:#498534;text-shadow:0 -1px #4e8e37;color:#fff}.ck-button-action:not(.ck-disabled):focus,.ck-button-action:not(.ck-disabled):hover,a.ck-button-action:not(.ck-disabled):focus,a.ck-button-action:not(.ck-disabled):hover{background:#579f3e;border-color:#3f732d}.ck-button-action:not(.ck-disabled):active,a.ck-button-action:not(.ck-disabled):active{background:#52963b;border-color:#3a6a29;box-shadow:inset 0 2px 2px #498534}.ck-button-action:active,.ck-button-action:focus,.ck-button-action:hover,a.ck-button-action:active,a.ck-button-action:focus,a.ck-button-action:hover{text-shadow:0 -1px #3a6a29}.ck-button-bold,a.ck-button-bold{font-weight:700}.ck-button .ck-icon use,.ck-button .ck-icon use *,a.ck-button .ck-icon use,a.ck-button .ck-icon use *{color:inherit}.ck-button .ck-button__label,a.ck-button .ck-button__label{float:left;line-height:inherit;font-size:inherit;font-weight:inherit;color:inherit;cursor:inherit}.ck-toolbar{line-height:1;padding:.4em;border:1px solid #bfbfbf;white-space:normal;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none}.ck-toolbar_floating{white-space:nowrap}.ck-rounded-corners .ck-toolbar,.ck-toolbar.ck-rounded-corners{border-radius:2px}.ck-toolbar__separator{width:1px;height:2.28em;vertical-align:middle;background:#bfbfbf}.ck-toolbar__newline{height:.4em}.ck-toolbar>*{margin-right:.4em}.ck-toolbar>:last-child{margin-right:0}.ck-toolbar-container .ck-toolbar{border:0}.ck-dropdown:after{border-style:solid;border-width:.4em .4em 0;border-color:#707070 transparent;right:.8em}.ck-dropdown .ck-button.ck-dropdown__button{padding-right:1.6em}.ck-dropdown .ck-button.ck-dropdown__button.ck-disabled{background:#fff;border-color:#d9d9d9}.ck-dropdown .ck-button.ck-dropdown__button.ck-disabled:not(.ck-disabled):focus,.ck-dropdown .ck-button.ck-dropdown__button.ck-disabled:not(.ck-disabled):hover{background:#fff;border-color:#bfbfbf}.ck-dropdown .ck-button.ck-dropdown__button.ck-disabled:not(.ck-disabled):active{background:#f2f2f2;border-color:#b3b3b3;box-shadow:inset 0 2px 2px #d9d9d9}.ck-dropdown .ck-button.ck-dropdown__button.ck-disabled .ck-button__label{opacity:.5}.ck-dropdown .ck-button.ck-dropdown__button .ck-button__label{width:7em;overflow:hidden;text-overflow:ellipsis}.ck-dropdown__panel{border:1px solid #b9b9b9;bottom:1px;background:#fff;box-shadow:0 1px 2px 0 rgba(0,0,0,.2)}.ck-dropdown__panel.ck-rounded-corners,.ck-rounded-corners .ck-dropdown__panel{border-radius:2px}.ck-list{-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;list-style-type:none;background:#fff}.ck-list.ck-rounded-corners,.ck-rounded-corners .ck-list{border-radius:2px}.ck-list__item{padding:.64em;cursor:default;min-width:12em}.ck-list__item:focus,.ck-list__item:hover{background:#f7f7f7}.ck-list__item:focus{box-shadow:0 0 3px 2px #9bcdfb;position:relative;z-index:1;outline:none}.ck-list__item:last-of-type{border:none}.ck-list__item_active{background:#1a8bf1;color:#fff}.ck-list__item_active:focus,.ck-list__item_active:hover{background:#0e7ee2}.ck-label{font-weight:700}.ck-input-text{box-shadow:inset 2px 2px 3px #e6e6e6;border:1px solid #b9b9b9;padding:.64em;min-width:250px}.ck-input-text.ck-rounded-corners,.ck-rounded-corners .ck-input-text{border-radius:2px}.ck-input-text:focus{outline:none;border:1px solid #6ab5f9;box-shadow:0 0 3px 2px #9bcdfb,inset 2px 2px 3px #e6e6e6}.ck-balloon-panel{box-shadow:0 1px 2px 0 rgba(0,0,0,.2);min-height:15px;background:#fff;border:1px solid #b9b9b9}.ck-balloon-panel.ck-rounded-corners,.ck-rounded-corners .ck-balloon-panel{border-radius:2px}.ck-balloon-panel.ck-balloon-panel_with-arrow:after,.ck-balloon-panel.ck-balloon-panel_with-arrow:before{width:0;height:0;border-style:solid}.ck-balloon-panel.ck-balloon-panel_arrow_n:after,.ck-balloon-panel.ck-balloon-panel_arrow_n:before,.ck-balloon-panel.ck-balloon-panel_arrow_ne:after,.ck-balloon-panel.ck-balloon-panel_arrow_ne:before,.ck-balloon-panel.ck-balloon-panel_arrow_nw:after,.ck-balloon-panel.ck-balloon-panel_arrow_nw:before{border-width:0 10px 15px}.ck-balloon-panel.ck-balloon-panel_arrow_n:before,.ck-balloon-panel.ck-balloon-panel_arrow_ne:before,.ck-balloon-panel.ck-balloon-panel_arrow_nw:before{border-color:transparent transparent #b9b9b9}.ck-balloon-panel.ck-balloon-panel_arrow_n:after,.ck-balloon-panel.ck-balloon-panel_arrow_ne:after,.ck-balloon-panel.ck-balloon-panel_arrow_nw:after{border-color:transparent transparent #fff;margin-top:2px}.ck-balloon-panel.ck-balloon-panel_arrow_s:after,.ck-balloon-panel.ck-balloon-panel_arrow_s:before,.ck-balloon-panel.ck-balloon-panel_arrow_se:after,.ck-balloon-panel.ck-balloon-panel_arrow_se:before,.ck-balloon-panel.ck-balloon-panel_arrow_sw:after,.ck-balloon-panel.ck-balloon-panel_arrow_sw:before{border-width:15px 10px 0}.ck-balloon-panel.ck-balloon-panel_arrow_s:before,.ck-balloon-panel.ck-balloon-panel_arrow_se:before,.ck-balloon-panel.ck-balloon-panel_arrow_sw:before{border-color:#b9b9b9 transparent transparent}.ck-balloon-panel.ck-balloon-panel_arrow_s:after,.ck-balloon-panel.ck-balloon-panel_arrow_se:after,.ck-balloon-panel.ck-balloon-panel_arrow_sw:after{border-color:#fff transparent transparent;margin-bottom:2px}.ck-balloon-panel.ck-balloon-panel_arrow_n:after,.ck-balloon-panel.ck-balloon-panel_arrow_n:before{left:50%;margin-left:-10px;top:-15px}.ck-balloon-panel.ck-balloon-panel_arrow_ne:after,.ck-balloon-panel.ck-balloon-panel_arrow_ne:before{left:20px;top:-15px}.ck-balloon-panel.ck-balloon-panel_arrow_nw:after,.ck-balloon-panel.ck-balloon-panel_arrow_nw:before{right:20px;top:-15px}.ck-balloon-panel.ck-balloon-panel_arrow_s:after,.ck-balloon-panel.ck-balloon-panel_arrow_s:before{left:50%;margin-left:-10px;bottom:-15px}.ck-balloon-panel.ck-balloon-panel_arrow_se:after,.ck-balloon-panel.ck-balloon-panel_arrow_se:before{left:20px;bottom:-15px}.ck-balloon-panel.ck-balloon-panel_arrow_sw:after,.ck-balloon-panel.ck-balloon-panel_arrow_sw:before{right:20px;bottom:-15px}.ck-editor-toolbar{border-radius:0}.ck-editor-toolbar .ck-button{border-width:0}.ck-editor-toolbar .ck-button.ck-disabled,.ck-editor-toolbar .ck-button:not(:hover):not(:focus):not(.ck-on){background:#f7f7f7}.ck-editor-toolbar .ck-button.ck-on{background:#dedede;border-color:#a1a1a1}.ck-editor-toolbar .ck-button.ck-on:not(.ck-disabled):focus,.ck-editor-toolbar .ck-button.ck-on:not(.ck-disabled):hover{background:#c6c6c6;border-color:#888}.ck-editor-toolbar .ck-button.ck-on:not(.ck-disabled):active{background:#b9b9b9;border-color:#7c7c7c;box-shadow:inset 0 2px 2px #a1a1a1}.ck-editor-toolbar .ck-dropdown__button{border-width:1px}.ck-editor-toolbar .ck-dropdown__button:not(:hover):not(:focus):not(.ck-on){background:#fff}.ck-toolbar-container .ck-editor-toolbar{background:#f7f7f7}.ck-editor-toolbar-container.ck-balloon-panel_arrow_n:after,.ck-editor-toolbar-container.ck-balloon-panel_arrow_ne:after,.ck-editor-toolbar-container.ck-balloon-panel_arrow_nw:after{border-bottom-color:#f7f7f7}.ck-editor-toolbar-container.ck-balloon-panel_arrow_s:after,.ck-editor-toolbar-container.ck-balloon-panel_arrow_se:after,.ck-editor-toolbar-container.ck-balloon-panel_arrow_sw:after{border-top-color:#f7f7f7}.ck-editor .ck-toolbar.ck-toolbar_sticky{box-shadow:0 1px 2px 0 rgba(0,0,0,.2);border:1px solid #bfbfbf;border-width:0 0 1px;background:#f7f7f7}.ck-editor{position:relative}.ck-editor.ck-rounded-corners,.ck-rounded-corners .ck-editor{border-radius:2px}.ck-editor .ck-editor__top .ck-toolbar{border-top:0;border-left:0;border-right:0}.ck-editor .ck-editor__main{background:#fff}.ck-editor .ck-editor__bottom{border-bottom:0;border-left:0;border-right:0;padding:.8em}.ck-editor .ck-editor__editable.ck-focused{outline:1px solid #6ab5f9;box-shadow:inset 2px 2px 3px #e6e6e6}.ck-editor .ck-editor__editable_inline{overflow:auto;padding:0 .8em}.ck-editor,.ck-editor-bottom{background:#f7f7f7;border:1px solid #b9b9b9}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/pomek/Projects/ckeditor/ckeditor5/~/css-loader?{\"minimize\":true}!/Users/pomek/Projects/ckeditor/ckeditor5/~/sass-loader/lib/loader.js!../ckeditor5-editor-classic/theme/theme.scss\n// module id = 513\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".ck-placeholder:before{content:attr(data-placeholder);cursor:text;color:#c2c2c2}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/pomek/Projects/ckeditor/ckeditor5/~/css-loader?{\"minimize\":true}!/Users/pomek/Projects/ckeditor/ckeditor5/~/sass-loader/lib/loader.js!../ckeditor5-engine/theme/placeholder.scss\n// module id = 514\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".ck-heading_heading1{font-size:1.5em}.ck-heading_heading2{font-size:1.3em}.ck-heading_heading3{font-size:1.1em}[class*=ck-heading_]{line-height:21.6px;padding:9.6px}[class*=ck-heading_heading]{font-weight:700}.ck-dropdown.ck-heading-dropdown .ck-dropdown__button .ck-button__label{width:8em}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/pomek/Projects/ckeditor/ckeditor5/~/css-loader?{\"minimize\":true}!/Users/pomek/Projects/ckeditor/ckeditor5/~/sass-loader/lib/loader.js!../ckeditor5-heading/theme/theme.scss\n// module id = 515\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".ck-editor__editable .image>figcaption{background-color:#f7f7f7;padding:.8em;font-size:.75rem;color:#858585;outline-offset:-1px}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/pomek/Projects/ckeditor/ckeditor5/~/css-loader?{\"minimize\":true}!/Users/pomek/Projects/ckeditor/ckeditor5/~/sass-loader/lib/loader.js!../ckeditor5-image/theme/imagecaption/theme.scss\n// module id = 516\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".cke-text-alternative-form{padding:1.2em;overflow:hidden}.cke-text-alternative-form .ck-label{margin-bottom:.4em}.cke-text-alternative-form__actions{clear:both;padding-top:1.2em}.cke-text-alternative-form__actions .ck-button{float:right}.cke-text-alternative-form__actions .ck-button+.ck-button{margin-right:.64em}.cke-text-alternative-form__actions .ck-button+.ck-button+.ck-button{float:left}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/pomek/Projects/ckeditor/ckeditor5/~/css-loader?{\"minimize\":true}!/Users/pomek/Projects/ckeditor/ckeditor5/~/sass-loader/lib/loader.js!../ckeditor5-image/theme/imagetextalternative/theme.scss\n// module id = 517\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".ck-editor__editable .image{text-align:center;clear:both}.ck-editor__editable .image.image-style-side{float:right;margin-left:.8em;max-width:50%}.ck-editor__editable .image>img{display:block;margin:0 auto;max-width:100%}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/pomek/Projects/ckeditor/ckeditor5/~/css-loader?{\"minimize\":true}!/Users/pomek/Projects/ckeditor/ckeditor5/~/sass-loader/lib/loader.js!../ckeditor5-image/theme/theme.scss\n// module id = 518\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".ck-link-form{padding:1.2em;overflow:hidden}.ck-link-form:focus{outline:none}.ck-link-form .ck-label{margin-bottom:.4em}.ck-link-form__actions{clear:both;padding-top:1.2em}.ck-link-form__actions .ck-button{float:right}.ck-link-form__actions .ck-button+.ck-button{margin-right:.64em}.ck-link-form__actions .ck-button+.ck-button+.ck-button{float:left}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/pomek/Projects/ckeditor/ckeditor5/~/css-loader?{\"minimize\":true}!/Users/pomek/Projects/ckeditor/ckeditor5/~/sass-loader/lib/loader.js!../ckeditor5-link/theme/theme.scss\n// module id = 519\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".ck-widget{margin:.8em 0;padding:0}.ck-widget.ck-widget_selected,.ck-widget.ck-widget_selected:hover{outline:3px solid #6ab5f9}.ck-editor__editable.ck-blurred .ck-widget.ck-widget_selected{outline:3px solid #ddd}.ck-widget:hover{outline:3px solid #ffd25c}.ck-widget .ck-editable.ck-editable_focused,.ck-widget .ck-editable:focus{outline:1px solid #6ab5f9;box-shadow:inset 2px 2px 3px #e6e6e6;background-color:#fff}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/pomek/Projects/ckeditor/ckeditor5/~/css-loader?{\"minimize\":true}!/Users/pomek/Projects/ckeditor/ckeditor5/~/sass-loader/lib/loader.js!../ckeditor5-widget/theme/theme.scss\n// module id = 520\n// module chunks = 0","module.exports = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<svg width=\\\"20px\\\" height=\\\"20px\\\" viewBox=\\\"0 0 20 20\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\n    <!-- Generator: Sketch 3.5.2 (25235) - http://www.bohemiancoding.com/sketch -->\\n    <title>bold</title>\\n    <desc>Created with Sketch.</desc>\\n    <defs></defs>\\n    <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\n        <g id=\\\"bold\\\" sketch:type=\\\"MSArtboardGroup\\\" fill=\\\"#454545\\\">\\n            <g id=\\\"icon:bold\\\" sketch:type=\\\"MSLayerGroup\\\" transform=\\\"translate(4.000000, 3.000000)\\\">\\n                <path d=\\\"M11.135257,7.40877709 C11.4960763,7.65684034 11.7892376,7.96832419 12.0147496,8.34323798 C12.2402617,8.71815176 12.353016,9.15930309 12.353016,9.66670521 C12.353016,10.2755877 12.2247579,10.7900294 11.968238,11.2100456 C11.711718,11.6300618 11.343857,11.9612776 10.8646439,12.2037031 C10.3572418,12.463042 9.77232867,12.6462677 9.10988702,12.753386 C8.44744538,12.8605042 7.66803104,12.9140625 6.77162064,12.9140625 L0.5390625,12.9140625 L0.5390625,12.254443 C0.713834339,12.2375296 0.933705291,12.2121599 1.19868195,12.1783331 C1.46365861,12.1445063 1.64970326,12.1050423 1.75682149,12.0599399 C1.96542013,11.9753729 2.10777248,11.864028 2.1838828,11.7259018 C2.25999311,11.5877757 2.2980477,11.4087782 2.2980477,11.1889039 L2.2980477,2.73224432 C2.2980477,2.52928347 2.26704026,2.36015197 2.20502445,2.22484474 C2.14300863,2.08953751 1.99360914,1.97114546 1.75682149,1.86966504 C1.58204965,1.79637362 1.37909184,1.73576817 1.14794199,1.68784686 C0.916792141,1.63992554 0.713834339,1.60187096 0.5390625,1.57368195 L0.5390625,0.9140625 L7.05914707,0.9140625 C8.69974724,0.9140625 9.88366774,1.13957117 10.6109441,1.59059527 C11.3382205,2.04161937 11.7018532,2.70686994 11.7018532,3.58636694 C11.7018532,3.99228863 11.6201063,4.34887421 11.4566101,4.65613438 C11.2931138,4.96339455 11.0591486,5.22977666 10.7547073,5.45528872 C10.4784551,5.66388736 10.1486486,5.8442943 9.76527814,5.99651493 C9.38190766,6.14873557 8.97035434,6.27558419 8.53060584,6.37706461 L8.53060584,6.53774115 C8.97035434,6.58284356 9.42700939,6.68009417 9.9005847,6.8294959 C10.37416,6.97889764 10.7857133,7.17198943 11.135257,7.40877709 L11.135257,7.40877709 Z M8.41221261,3.79778343 C8.41221261,3.13252288 8.22475853,2.61385294 7.84984474,2.24175806 C7.47493096,1.86966318 6.91256872,1.68361853 6.16274115,1.68361853 C6.05562292,1.68361853 5.91608943,1.68784681 5.7441365,1.69630351 C5.57218356,1.70476022 5.42419349,1.71180736 5.30016187,1.71744516 L5.30016187,6.16564812 L5.73990817,6.16564812 C6.65323197,6.16564812 7.32693912,5.95282432 7.76104982,5.52717032 C8.19516051,5.10151633 8.41221261,4.52505979 8.41221261,3.79778343 L8.41221261,3.79778343 Z M9.00417878,9.55676863 C9.00417878,8.72237404 8.75611924,8.0824932 8.25999273,7.6371069 C7.76386622,7.1917206 7.05069506,6.96903079 6.12045785,6.96903079 C6.01333962,6.96903079 5.87098728,6.97325908 5.69339654,6.98171578 C5.5158058,6.99017248 5.38472888,6.99721962 5.30016187,7.00285743 L5.30016187,11.3918638 C5.35090208,11.6004624 5.50875814,11.7766411 5.7737348,11.920405 C6.03871146,12.0641689 6.36006132,12.1360498 6.737794,12.1360498 C7.40869235,12.1360498 7.95414144,11.9105411 8.37415764,11.459517 C8.79417383,11.0084929 9.00417878,10.3742498 9.00417878,9.55676863 L9.00417878,9.55676863 Z\\\" id=\\\"B\\\" sketch:type=\\\"MSShapeGroup\\\"></path>\\n            </g>\\n        </g>\\n    </g>\\n</svg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-basic-styles/theme/icons/bold.svg\n// module id = 521\n// module chunks = 0","module.exports = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<svg width=\\\"20px\\\" height=\\\"20px\\\" viewBox=\\\"0 0 20 20\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\n    <!-- Generator: Sketch 3.5.2 (25235) - http://www.bohemiancoding.com/sketch -->\\n    <title>italic</title>\\n    <desc>Created with Sketch.</desc>\\n    <defs></defs>\\n    <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\n        <g id=\\\"italic\\\" sketch:type=\\\"MSArtboardGroup\\\" fill=\\\"#454545\\\">\\n            <g id=\\\"icon:italic\\\" sketch:type=\\\"MSLayerGroup\\\" transform=\\\"translate(5.000000, 3.000000)\\\">\\n                <path d=\\\"M8.82538319,0.9140625 L8.6985333,1.47220203 C8.52376146,1.47783984 8.29543393,1.50320956 8.01354387,1.54831197 C7.73165381,1.59341438 7.52305829,1.63569726 7.38775106,1.67516187 C7.1509634,1.74845328 6.9818319,1.86120762 6.88035148,2.01342825 C6.77887106,2.16564888 6.70558074,2.33196153 6.66047833,2.51237117 L4.63088002,11.2819272 C4.61960442,11.3213918 4.61114784,11.3664935 4.60551004,11.4172337 C4.59987224,11.467974 4.59705338,11.5130757 4.59705338,11.5525403 C4.59705338,11.6822097 4.62524197,11.7921452 4.68161998,11.88235 C4.73799799,11.9725548 4.83947689,12.0514829 4.98605973,12.1191365 C5.07062674,12.1586011 5.2566714,12.2051123 5.54419926,12.2586714 C5.83172712,12.3122305 6.04596036,12.3446474 6.18690539,12.355923 L6.0600555,12.9140625 L0.65625,12.9140625 L0.783099894,12.355923 C0.94095833,12.3446474 1.166467,12.3277342 1.45963266,12.305183 C1.75279833,12.2826318 1.96139385,12.2488055 2.08542548,12.2037031 C2.30529973,12.1247739 2.47161237,12.0162478 2.58436839,11.8781217 C2.69712442,11.7399956 2.77323359,11.5722735 2.8126982,11.3749504 L4.83383985,2.59693776 C4.84511545,2.54619755 4.85357203,2.4954581 4.85920983,2.44471789 C4.86484763,2.39397768 4.86766649,2.34323823 4.86766649,2.29249802 C4.86766649,2.17974199 4.84370619,2.08108195 4.79578488,1.99651493 C4.74786357,1.91194791 4.6477941,1.83583874 4.49557347,1.76818512 C4.34335283,1.70053151 4.13616674,1.63710719 3.87400899,1.57791028 C3.61185123,1.51871337 3.41875943,1.48347764 3.2947278,1.47220203 L3.4215777,0.9140625 L8.82538319,0.9140625 Z\\\" id=\\\"I\\\" sketch:type=\\\"MSShapeGroup\\\"></path>\\n            </g>\\n        </g>\\n    </g>\\n</svg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-basic-styles/theme/icons/italic.svg\n// module id = 522\n// module chunks = 0","module.exports = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?><svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 20 20\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xml:space=\\\"preserve\\\" style=\\\"fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;\\\"><path d=\\\"M5.414,6.749l-2.511,-2.512c-0.192,-0.191 -0.192,-0.502 0,-0.694c0.192,-0.192 0.503,-0.192 0.694,0l2.797,2.797c0.695,-0.251 1.407,-0.428 2.127,-0.53c0.366,-0.051 0.734,-0.081 1.103,-0.095c0.137,-0.003 0.275,-0.005 0.412,-0.004c0.371,0.006 0.742,0.029 1.112,0.074c1.109,0.134 2.204,0.449 3.243,0.936c0.743,0.347 1.464,0.782 2.12,1.331c0.276,0.231 0.542,0.484 0.784,0.766c0.18,0.211 0.349,0.439 0.488,0.692c0.169,0.307 0.301,0.664 0.301,1.039c0,0.375 -0.132,0.732 -0.301,1.039c-0.139,0.252 -0.308,0.481 -0.488,0.691c-0.242,0.283 -0.508,0.535 -0.784,0.767c-0.647,0.542 -1.359,0.973 -2.092,1.318l2.196,2.197c0.192,0.191 0.192,0.503 0,0.694c-0.191,0.192 -0.503,0.192 -0.694,0l-2.485,-2.484l-0.008,0.003l-0.931,-0.931l0.009,-0.003l-6.215,-6.215c-0.321,0.131 -0.636,0.278 -0.945,0.444l6.239,6.24l-0.006,0.005l0.78,0.78c-0.388,0.094 -0.78,0.166 -1.174,0.215l-1.11,-1.11l0.011,0l-5.603,-5.603c-0.229,0.157 -0.452,0.328 -0.665,0.514c-0.038,0.032 -0.075,0.065 -0.112,0.098l4.897,4.897l-0.005,0.006l1.276,1.276c-0.494,-0.003 -0.987,-0.042 -1.477,-0.117l-0.479,-0.479l-0.009,0.009l-4.863,-4.863c-0.007,0.01 -0.015,0.021 -0.022,0.031c-0.044,0.065 -0.086,0.131 -0.124,0.2c-0.026,0.047 -0.05,0.095 -0.071,0.145c-0.014,0.031 -0.026,0.063 -0.037,0.096c-0.013,0.042 -0.026,0.087 -0.028,0.133c-0.001,0.024 0.003,0.049 0.008,0.072c0.009,0.041 0.022,0.082 0.036,0.12c0.014,0.036 0.029,0.072 0.046,0.106c0.031,0.065 0.066,0.126 0.103,0.186c0.041,0.067 0.085,0.131 0.131,0.193l3.463,3.594c-0.281,-0.097 -0.56,-0.206 -0.835,-0.326c-0.44,-0.193 -0.872,-0.417 -1.29,-0.674c-0.35,-0.215 -0.69,-0.454 -1.015,-0.721c-0.281,-0.23 -0.551,-0.482 -0.798,-0.764c-0.184,-0.21 -0.357,-0.438 -0.502,-0.69c-0.184,-0.319 -0.329,-0.693 -0.329,-1.089c0,-0.375 0.131,-0.732 0.301,-1.039c0.139,-0.253 0.307,-0.481 0.488,-0.692c0.225,-0.263 0.471,-0.5 0.728,-0.719c0.647,-0.552 1.36,-0.99 2.096,-1.341l0.019,-0.009l0,0Zm6.674,0.401c1.069,0.849 1.755,2.16 1.755,3.63c0,0.833 -0.224,1.648 -0.647,2.362l0.345,0.344c0.015,-0.006 0.03,-0.012 0.046,-0.018c0.695,-0.285 1.372,-0.649 2,-1.112c0.252,-0.186 0.497,-0.388 0.727,-0.613c0.137,-0.134 0.27,-0.277 0.392,-0.431c0.072,-0.091 0.141,-0.185 0.203,-0.286c0.037,-0.06 0.072,-0.121 0.103,-0.186c0.016,-0.034 0.032,-0.07 0.045,-0.106c0.015,-0.039 0.028,-0.079 0.036,-0.12c0.005,-0.023 0.009,-0.048 0.008,-0.072c-0.002,-0.046 -0.014,-0.091 -0.028,-0.133c-0.01,-0.033 -0.023,-0.065 -0.036,-0.096c-0.022,-0.05 -0.046,-0.098 -0.071,-0.145c-0.039,-0.069 -0.081,-0.135 -0.125,-0.2c-0.081,-0.118 -0.17,-0.229 -0.263,-0.335c-0.166,-0.19 -0.345,-0.362 -0.53,-0.523c-0.333,-0.29 -0.689,-0.543 -1.054,-0.768c-0.601,-0.369 -1.232,-0.664 -1.879,-0.891c-0.338,-0.119 -0.681,-0.219 -1.027,-0.301Zm-2.85,0.21c-0.023,0 -0.046,0.001 -0.069,0.002c-0.092,0.01 -0.18,0.041 -0.254,0.097c-0.163,0.123 -0.234,0.34 -0.175,0.535c0.016,0.051 0.04,0.1 0.071,0.144c0.036,0.05 0.082,0.093 0.133,0.126c0.059,0.038 0.124,0.061 0.193,0.073c0.023,0.003 0.022,0.003 0.045,0.005c0.091,0.003 0.181,0.003 0.272,0.012c0.158,0.016 0.315,0.048 0.467,0.094c0.496,0.151 0.937,0.462 1.246,0.878c0.124,0.167 0.224,0.349 0.304,0.541c0.024,0.061 0.043,0.125 0.069,0.185c0.038,0.077 0.089,0.144 0.159,0.194c0.085,0.062 0.188,0.093 0.291,0.093l0.008,0c0.077,-0.002 0.154,-0.021 0.224,-0.059c0.047,-0.026 0.09,-0.059 0.126,-0.099c0.042,-0.045 0.075,-0.098 0.097,-0.155c0.022,-0.057 0.034,-0.119 0.033,-0.18c0,-0.077 -0.022,-0.147 -0.048,-0.219c-0.015,-0.043 -0.031,-0.085 -0.048,-0.127c-0.084,-0.209 -0.189,-0.409 -0.312,-0.596c-0.436,-0.664 -1.102,-1.164 -1.862,-1.395c-0.214,-0.066 -0.434,-0.11 -0.657,-0.132c-0.09,-0.009 -0.181,-0.014 -0.272,-0.016c-0.009,0 -0.018,0 -0.028,-0.001l-0.013,0Z\\\"/></svg>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-core/theme/icons/low-vision.svg\n// module id = 523\n// module chunks = 0","module.exports = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?><svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 20 20\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xml:space=\\\"preserve\\\"><path d=\\\"M2,16l16,0l0,1l-16,0l0,-1Zm15,-2l-14,0l0,-8l14,0l0,8Zm-1,-7l-12,0l0,6l12,0l0,-6Zm-14,-4l16,0l0,1l-16,0l0,-1Z\\\"/></svg>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-core/theme/icons/object-center.svg\n// module id = 524\n// module chunks = 0","module.exports = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?><svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 20 20\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xml:space=\\\"preserve\\\"><path id=\\\"_-Curves-\\\" d=\\\"M18,16l-16,0l0,-1l16,0l0,1Zm-11.022,-3l-4.978,0l0,-1l4.978,0l0,1Zm11.022,-7l0,7l-9,0l0,-7l9,0Zm-1,6l0,-5l-7,0l0,5l7,0Zm-10.022,-2l-4.978,0l0,-1l4.978,0l0,1Zm0,-3l-4.978,0l0,-1l4.978,0l0,1Zm11.022,-3l-16,0l0,-1l16,0l0,1Z\\\"/></svg>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-core/theme/icons/object-right.svg\n// module id = 525\n// module chunks = 0","module.exports = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<svg width=\\\"20px\\\" height=\\\"20px\\\" viewBox=\\\"0 0 20 20\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\n    <!-- Generator: Sketch 3.5.2 (25235) - http://www.bohemiancoding.com/sketch -->\\n    <title>quote</title>\\n    <desc>Created with Sketch.</desc>\\n    <defs></defs>\\n    <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\n        <g id=\\\"quote\\\" sketch:type=\\\"MSArtboardGroup\\\" fill=\\\"#454545\\\">\\n            <g id=\\\"icon:blockquote\\\" sketch:type=\\\"MSLayerGroup\\\" transform=\\\"translate(2.000000, 4.000000)\\\">\\n                <path d=\\\"M6.04296875,0.887157207 L6.04296875,1.76899314 C4.64843053,2.61665363 3.69824472,3.40277858 3.19238281,4.12739158 C2.82324034,4.66059737 2.63867188,5.28949733 2.63867188,6.01411033 C2.63867188,6.45161252 2.7207023,6.77289837 2.88476562,6.97797752 C3.035157,7.18305667 3.2128896,7.28559471 3.41796875,7.28559471 C3.55468818,7.28559471 3.74609252,7.23774362 3.9921875,7.14204002 C4.36132997,7.01899253 4.66210821,6.95746971 4.89453125,6.95746971 C5.44140898,6.95746971 5.92675569,7.16254578 6.35058594,7.57270408 C6.77441618,7.98286238 6.98632812,8.49555257 6.98632812,9.11079002 C6.98632812,9.80805913 6.77441618,10.3480928 6.35058594,10.7309072 C5.76269237,11.2504411 5.07910546,11.5102041 4.29980469,11.5102041 C3.37011254,11.5102041 2.54297237,11.1205595 1.81835938,10.3412588 C1.09374638,9.561958 0.731445312,8.59810045 0.731445312,7.44965721 C0.731445312,5.83636789 1.3330018,4.36665602 2.53613281,3.04047752 C3.34277747,2.16547314 4.51171109,1.44770688 6.04296875,0.887157207 L6.04296875,0.887157207 Z M14.429297,0.887157207 L14.429297,1.76899314 C13.0347587,2.61665363 12.0845729,3.40277858 11.578711,4.12739158 C11.2095686,4.66059737 11.0250001,5.28949733 11.0250001,6.01411033 C11.0250001,6.45161252 11.1070305,6.77289837 11.2710938,6.97797752 C11.4214852,7.18305667 11.5992178,7.28559471 11.804297,7.28559471 C11.9410164,7.28559471 12.1324207,7.23774362 12.3785157,7.14204002 C12.7476582,7.01899253 13.0484364,6.95746971 13.2808595,6.95746971 C13.8277372,6.95746971 14.3130839,7.16254578 14.7369142,7.57270408 C15.1607444,7.98286238 15.3726563,8.49555257 15.3726563,9.11079002 C15.3726563,9.80805913 15.1607444,10.3480928 14.7369142,10.7309072 C14.1490206,11.2504411 13.4654337,11.5102041 12.6861329,11.5102041 C11.7564408,11.5102041 10.9293006,11.1205595 10.2046876,10.3412588 C9.4800746,9.561958 9.11777353,8.59810045 9.11777353,7.44965721 C9.11777353,5.83636789 9.71933002,4.36665602 10.922461,3.04047752 C11.7291057,2.16547314 12.8980393,1.44770688 14.429297,0.887157207 L14.429297,0.887157207 Z\\\" id=\\\"‘‘\\\" sketch:type=\\\"MSShapeGroup\\\" transform=\\\"translate(8.052051, 6.198681) rotate(-180.000000) translate(-8.052051, -6.198681) \\\"></path>\\n            </g>\\n        </g>\\n    </g>\\n</svg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-core/theme/icons/quote.svg\n// module id = 526\n// module chunks = 0","module.exports = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<svg width=\\\"20px\\\" height=\\\"20px\\\" viewBox=\\\"0 0 20 20\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\n    <!-- Generator: Sketch 3.5.2 (25235) - http://www.bohemiancoding.com/sketch -->\\n    <title>link</title>\\n    <desc>Created with Sketch.</desc>\\n    <defs></defs>\\n    <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\n        <g id=\\\"link\\\" sketch:type=\\\"MSArtboardGroup\\\" fill=\\\"#222222\\\">\\n            <g id=\\\"icon:link\\\" sketch:type=\\\"MSLayerGroup\\\">\\n                <g id=\\\"Rectangle-18-+-Rectangle-18-Copy-+-Path-28\\\" transform=\\\"translate(9.646447, 9.853553) rotate(-315.000000) translate(-9.646447, -9.853553) translate(5.646447, 0.853553)\\\" sketch:type=\\\"MSShapeGroup\\\">\\n                    <path d=\\\"M8,6.55919636 L8,4.82450549 C8,2.61334348 6.2104719,0.828427125 4,0.828427125 C1.79353398,0.828427125 -3.20810045e-12,2.61822724 -3.20810045e-12,4.82450549 L-3.20810045e-12,7.75542568 C-3.20810045e-12,9.96658769 1.7895281,11.751504 4,11.751504 C4.5511606,11.751504 5.07655559,11.6398264 5.55466651,11.437876 L5.12132034,11.437876 L5.12132034,10.5346402 C4.77469964,10.6745028 4.39616036,10.751504 4,10.751504 C2.34314575,10.751504 1,9.41562927 1,7.75542568 L1,4.82450549 C1,3.1698171 2.34651712,1.82842712 4,1.82842712 C5.65685425,1.82842712 7,3.1643019 7,4.82450549 L7,6.55919636 L8,6.55919636 Z\\\" id=\\\"Shape\\\"></path>\\n                    <path d=\\\"M2.63603897,6.90151354 C3.06184352,6.74698845 3.52119959,6.66270951 4,6.66270951 C6.2104719,6.66270951 8,8.44762587 8,10.6587879 L8,13.5897081 C8,15.7959863 6.20646602,17.5857864 4,17.5857864 C1.7895281,17.5857864 -2.32347475e-12,15.8008701 -2.32347475e-12,13.5897081 L-2.32347475e-12,11.6627095 L1,11.6627095 L1,13.5897081 C1,15.2499117 2.34314575,16.5857864 4,16.5857864 C5.65348288,16.5857864 7,15.2443965 7,13.5897081 L7,10.6587879 C7,8.99858429 5.65685425,7.66270951 4,7.66270951 C3.5092458,7.66270951 3.04553235,7.78087311 2.63603897,7.99032058 L2.63603897,6.90151354 Z\\\" id=\\\"Shape\\\"></path>\\n                </g>\\n            </g>\\n        </g>\\n    </g>\\n</svg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-link/theme/icons/link.svg\n// module id = 527\n// module chunks = 0","module.exports = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<svg width=\\\"20px\\\" height=\\\"20px\\\" viewBox=\\\"0 0 20 20\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\n    <!-- Generator: Sketch 3.5.2 (25235) - http://www.bohemiancoding.com/sketch -->\\n    <title>unlink</title>\\n    <desc>Created with Sketch.</desc>\\n    <defs></defs>\\n    <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\n        <g id=\\\"unlink\\\" sketch:type=\\\"MSArtboardGroup\\\" fill=\\\"#222222\\\">\\n            <g id=\\\"icon:unlink\\\" sketch:type=\\\"MSLayerGroup\\\">\\n                <g id=\\\"Rectangle-18-+-Rectangle-18-Copy-+-Path-28-Copy\\\" transform=\\\"translate(12.828427, 13.035534) rotate(-315.000000) translate(-12.828427, -13.035534) translate(4.328427, 4.035534)\\\" sketch:type=\\\"MSShapeGroup\\\">\\n                    <path d=\\\"M8,6.55919636 L8,4.82450549 C8,2.61334348 6.2104719,0.828427125 4,0.828427125 C1.79353398,0.828427125 -3.20454774e-12,2.61822724 -3.20454774e-12,4.82450549 L-3.20454774e-12,7.75542568 C-3.20454774e-12,9.96658769 1.7895281,11.751504 4,11.751504 C4.5511606,11.751504 5.07655559,11.6398264 5.55466651,11.437876 L5.12132034,11.437876 L5.12132034,10.5346402 C4.77469964,10.6745028 4.39616036,10.751504 4,10.751504 C2.34314575,10.751504 1,9.41562927 1,7.75542568 L1,4.82450549 C1,3.1698171 2.34651712,1.82842712 4,1.82842712 C5.65685425,1.82842712 7,3.1643019 7,4.82450549 L7,6.55919636 L8,6.55919636 Z\\\" id=\\\"Shape\\\"></path>\\n                    <path d=\\\"M12.1301896,9.691731 L12.1301896,6.07623654 L11.1099103,6.07623654 L11.1099103,9.691731 L7.79324873,9.691731 L7.79324873,10.7120103 L11.1099103,10.7120103 L11.1099103,14.3275047 L12.1301896,14.3275047 L12.1301896,10.7120103 L16.0445169,10.7120103 L16.0445169,9.691731 L12.1301896,9.691731 Z M7.52584209,8.6418508 C6.80172121,7.49371533 5.53005392,6.73384534 4.08111717,6.73384534 C3.59260703,6.73384534 3.12393555,6.82077136 2.68949598,6.98014985 L2.68949598,8.10315471 C3.10729359,7.8871288 3.58041083,7.76525387 4.08111717,7.76525387 C5.2472836,7.76525387 6.26112906,8.4209623 6.77783518,9.38985772 L7.52584209,8.6418508 Z M8.16223435,12.3942945 L8.16223435,13.8784107 C8.16223435,16.1539849 6.33232877,18 4.08111717,18 C1.82581847,18 -8.17124146e-14,16.1590221 -8.17124146e-14,13.8784107 L-8.17124146e-14,11.890888 L1.02027929,11.890888 L1.02027929,13.8784107 C1.02027929,15.5907588 2.39066309,16.9685915 4.08111717,16.9685915 C5.76813152,16.9685915 7.14195505,15.5850704 7.14195505,13.8784107 L7.14195505,11.3740152 L8.16223435,12.3942945 Z\\\" id=\\\"Shape\\\"></path>\\n                </g>\\n            </g>\\n        </g>\\n    </g>\\n</svg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-link/theme/icons/unlink.svg\n// module id = 528\n// module chunks = 0","module.exports = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<svg width=\\\"20px\\\" height=\\\"20px\\\" viewBox=\\\"0 0 20 20\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\n    <!-- Generator: Sketch 3.5.2 (25235) - http://www.bohemiancoding.com/sketch -->\\n    <title>bulletedlist</title>\\n    <desc>Created with Sketch.</desc>\\n    <defs></defs>\\n    <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\n        <g id=\\\"bulletedlist\\\" sketch:type=\\\"MSArtboardGroup\\\" fill=\\\"#454545\\\">\\n            <g id=\\\"icon:bulletedlist\\\" sketch:type=\\\"MSLayerGroup\\\" transform=\\\"translate(1.000000, 3.000000)\\\">\\n                <path d=\\\"M5,13 L5,14 L15,14 L15,13 L5,13 L5,13 Z M5,1 L5,2 L17,2 L17,1 L5,1 L5,1 Z M5,7 L5,8 L16,8 L16,7 L5,7 L5,7 Z M0,1.5 C0,0.671572875 0.665797234,0 1.5,0 L1.5,0 C2.32842712,0 3,0.665797234 3,1.5 L3,1.5 C3,2.32842712 2.33420277,3 1.5,3 L1.5,3 C0.671572875,3 0,2.33420277 0,1.5 L0,1.5 Z M0,7.5 C0,6.67157288 0.665797234,6 1.5,6 L1.5,6 C2.32842712,6 3,6.66579723 3,7.5 L3,7.5 C3,8.32842712 2.33420277,9 1.5,9 L1.5,9 C0.671572875,9 0,8.33420277 0,7.5 L0,7.5 Z M0,13.5 C0,12.6715729 0.665797234,12 1.5,12 L1.5,12 C2.32842712,12 3,12.6657972 3,13.5 L3,13.5 C3,14.3284271 2.33420277,15 1.5,15 L1.5,15 C0.671572875,15 0,14.3342028 0,13.5 L0,13.5 Z\\\" id=\\\"path4634\\\" sketch:type=\\\"MSShapeGroup\\\"></path>\\n            </g>\\n        </g>\\n    </g>\\n</svg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-list/theme/icons/bulletedlist.svg\n// module id = 529\n// module chunks = 0","module.exports = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<svg width=\\\"20px\\\" height=\\\"20px\\\" viewBox=\\\"0 0 20 20\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\n    <!-- Generator: Sketch 3.5.2 (25235) - http://www.bohemiancoding.com/sketch -->\\n    <title>numberedlist</title>\\n    <desc>Created with Sketch.</desc>\\n    <defs></defs>\\n    <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\n        <g id=\\\"numberedlist\\\" sketch:type=\\\"MSArtboardGroup\\\" fill=\\\"#454545\\\">\\n            <g id=\\\"icon:numberedlist\\\" sketch:type=\\\"MSLayerGroup\\\" transform=\\\"translate(2.000000, 2.000000)\\\">\\n                <path d=\\\"M5,15 L15,15 L15,14 L5,14 L5,15 Z M4,2 L4,3 L17,3 L17,2 L4,2 L4,2 Z M5,8 L5,9 L16,9 L16,8 L5,8 L5,8 Z\\\" id=\\\"path4634\\\" sketch:type=\\\"MSShapeGroup\\\"></path>\\n                <g id=\\\"path4712-path-+-path4712-path-+-path4712-path-copy\\\" sketch:type=\\\"MSShapeGroup\\\">\\n                    <path d=\\\"M0,0.5 C0,0.77699 0.223,1 0.5,1 L1,1 L1,4.5 C1,4.77699 1.223,5 1.5,5 C1.777,5 2,4.77699 2,4.5 L2,0.5 C2,0.223 1.777,0 1.5,0 L0.5,0 C0.223,0 0,0.223 0,0.5 Z\\\" id=\\\"path4712-path\\\"></path>\\n                    <path d=\\\"M0.5,6 C0.223,6 0,6.223 0,6.5 C0,6.77699 0.223,7 0.5,7 L2,7 L2,8 L0.5,8 C0.223,8 0,8.223 0,8.5 L0,10.5 C0,10.77699 0.223,11 0.5,11 L2.5,11 C2.777,11 3,10.77699 3,10.5 C3,10.223 2.777,10 2.5,10 L1,10 L1,9 L2.5,9 C2.5693,9 2.62764,8.994 2.6875,8.9688 C2.81468,8.9278 2.9182,8.82667 2.96875,8.68755 C2.99395,8.62765 2.99995,8.5693 2.99995,8.50005 L2.99995,6.50005 C2.99995,6.43075 2.99395,6.3724 2.96875,6.31255 C2.91825,6.17342 2.81468,6.07227 2.6875,6.0313 C2.6471,6.0142 2.6076,6.006 2.5625,6.0001 L2.5,6.0001 L0.5,6.0001 L0.5,6 Z\\\" id=\\\"path4712-path\\\"></path>\\n                    <path d=\\\"M2.85209534,16.8526748 C2.94267961,16.7627344 3,16.6389489 3,16.5023012 L3,12.4976988 C3,12.3570579 2.94465639,12.2332311 2.85505992,12.1442682 C2.76454727,12.057652 2.64101746,12 2.50461102,12 L0.495388985,12 C0.215752602,12 0,12.2238576 0,12.5 C0,12.7680664 0.221793203,13 0.495388985,13 L2,13 L2,14 L0.495388985,14 C0.215752602,14 0,14.2238576 0,14.5 C0,14.7680664 0.221793203,15 0.495388985,15 L2,15 L2,16 L0.495388985,16 C0.215752602,16 0,16.2238576 0,16.5 C0,16.7680664 0.221793203,17 0.495388985,17 L2.50461102,17 C2.6440432,17 2.76759251,16.9443442 2.85643212,16.854302 Z\\\" id=\\\"Rectangle-403\\\"></path>\\n                </g>\\n            </g>\\n        </g>\\n    </g>\\n</svg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-list/theme/icons/numberedlist.svg\n// module id = 530\n// module chunks = 0","module.exports = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<svg width=\\\"20px\\\" height=\\\"20px\\\" viewBox=\\\"0 0 20 20\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <!-- Generator: Sketch 3.8.2 (29753) - http://www.bohemiancoding.com/sketch -->\\n    <title>redo</title>\\n    <desc>Created with Sketch.</desc>\\n    <defs></defs>\\n    <g id=\\\"Mockups\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <g id=\\\"redo\\\" fill=\\\"#454545\\\">\\n            <g id=\\\"undo\\\">\\n                <path d=\\\"M10.00002,15.99998 L11,12.0184937 C7.58334,12.0184937 2.38444,12.88666 1,16 C1,10.01667 7.60112,8.03985596 11,8.03985596 C10.99998,7.18907596 9.99999,4.71945 10,4 L18,10 L10.00002,15.99998 Z\\\"></path>\\n            </g>\\n        </g>\\n    </g>\\n</svg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-undo/theme/icons/redo.svg\n// module id = 531\n// module chunks = 0","module.exports = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<svg width=\\\"20px\\\" height=\\\"20px\\\" viewBox=\\\"0 0 20 20\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <!-- Generator: Sketch 3.8.2 (29753) - http://www.bohemiancoding.com/sketch -->\\n    <title>undo</title>\\n    <desc>Created with Sketch.</desc>\\n    <defs></defs>\\n    <g id=\\\"Mockups\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <g id=\\\"undo\\\" fill=\\\"#454545\\\">\\n            <g>\\n                <path d=\\\"M2,10 L9.99998,15.99998 L9,12.0184937 C12.41666,12.0184937 17.61556,12.88666 19,16 C19,10.01667 12.39888,8.03985596 9,8.03985596 C9.00002,7.18907596 10.00001,4.71945 10,4 L2,10 Z\\\"></path>\\n            </g>\\n        </g>\\n    </g>\\n</svg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-undo/theme/icons/undo.svg\n// module id = 532\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-block-quote/theme/theme.scss\n// module id = 533\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-editor-classic/theme/theme.scss\n// module id = 534\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./placeholder.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./placeholder.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./placeholder.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/theme/placeholder.scss\n// module id = 535\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-heading/theme/theme.scss\n// module id = 536\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js??ref--2-1!../../../../node_modules/sass-loader/lib/loader.js!./theme.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js??ref--2-1!../../../../node_modules/sass-loader/lib/loader.js!./theme.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js??ref--2-1!../../../../node_modules/sass-loader/lib/loader.js!./theme.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-image/theme/imagecaption/theme.scss\n// module id = 537\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js??ref--2-1!../../../../node_modules/sass-loader/lib/loader.js!./theme.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js??ref--2-1!../../../../node_modules/sass-loader/lib/loader.js!./theme.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js??ref--2-1!../../../../node_modules/sass-loader/lib/loader.js!./theme.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-image/theme/imagetextalternative/theme.scss\n// module id = 538\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-image/theme/theme.scss\n// module id = 539\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-link/theme/theme.scss\n// module id = 540\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-widget/theme/theme.scss\n// module id = 541\n// module chunks = 0"],"sourceRoot":""}