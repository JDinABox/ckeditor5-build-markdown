{"version":3,"sources":["webpack:///../ckeditor5-engine/src/view/writer.js","webpack:///../ckeditor5-utils/src/lib/lodash/rest.js","webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 26aef4647347afd7ebd5","webpack:///../ckeditor5-utils/src/ckeditorerror.js","webpack:///../ckeditor5-engine/src/model/position.js","webpack:///../ckeditor5-core/src/plugin.js","webpack:///../ckeditor5-engine/src/model/range.js","webpack:///../ckeditor5-utils/src/mix.js","webpack:///../ckeditor5-ui/src/template.js","webpack:///../ckeditor5-engine/src/model/element.js","webpack:///../ckeditor5-ui/src/view.js","webpack:///../ckeditor5-utils/src/emittermixin.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseIteratee.js","webpack:///../ckeditor5-core/src/command.js","webpack:///../ckeditor5-utils/src/lib/lodash/isArray.js","webpack:///../ckeditor5-utils/src/lib/lodash/isArrayLikeObject.js","webpack:///../ckeditor5-utils/src/lib/lodash/toInteger.js","webpack:///../ckeditor5-engine/src/model/batch.js","webpack:///../ckeditor5-engine/src/model/delta/deltafactory.js","webpack:///../ckeditor5-utils/src/lib/lodash/isObject.js","webpack:///../ckeditor5-utils/src/lib/lodash/last.js","webpack:///../ckeditor5-utils/src/observablemixin.js","webpack:///../ckeditor5-engine/src/model/delta/delta.js","webpack:///../ckeditor5-engine/src/model/writer.js","webpack:///../ckeditor5-engine/src/view/position.js","webpack:///../ckeditor5-ui/src/button/buttonview.js","webpack:///../ckeditor5-utils/src/keyboard.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseFlatten.js","webpack:///../ckeditor5-engine/src/model/operation/moveoperation.js","webpack:///../ckeditor5-engine/src/model/text.js","webpack:///../ckeditor5-engine/src/view/element.js","webpack:///../ckeditor5-utils/src/lib/lodash/_arrayMap.js","webpack:////workspace/ckeditor5/~/css-loader/lib/css-base.js","webpack:///../ckeditor5-engine/src/view/text.js","webpack:///../ckeditor5-utils/src/lib/lodash/_root.js","webpack:////workspace/ckeditor5/~/style-loader/addStyles.js","webpack:///../ckeditor5-engine/src/conversion/buildviewconverter.js","webpack:///../ckeditor5-engine/src/model/documentfragment.js","webpack:///../ckeditor5-engine/src/model/operation/operation.js","webpack:///../ckeditor5-engine/src/model/operation/removeoperation.js","webpack:///../ckeditor5-engine/src/view/range.js","webpack:///../ckeditor5-image/src/image/utils.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseSlice.js","webpack:///../ckeditor5-utils/src/lib/lodash/_isIndex.js","webpack:///../ckeditor5-utils/src/log.js","webpack:///../ckeditor5-engine/src/conversion/buildmodelconverter.js","webpack:///../ckeditor5-engine/src/model/operation/insertoperation.js","webpack:///../ckeditor5-engine/src/view/containerelement.js","webpack:///../ckeditor5-utils/src/dom/global.js","webpack:///../ckeditor5-utils/src/isiterable.js","webpack:///../ckeditor5-utils/src/keystrokehandler.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseUniq.js","webpack:///../ckeditor5-utils/src/lib/lodash/extend.js","webpack:///../ckeditor5-utils/src/lib/lodash/isObjectLike.js","webpack:///../ckeditor5-utils/src/lib/lodash/isSymbol.js","webpack:///../ckeditor5-engine/src/model/treewalker.js","webpack:///../ckeditor5-engine/src/view/observer/observer.js","webpack:///../ckeditor5-engine/src/view/treewalker.js","webpack:///../ckeditor5-utils/src/comparearrays.js","webpack:///../ckeditor5-utils/src/lib/lodash/_getNative.js","webpack:///../ckeditor5-utils/src/lib/lodash/_isKey.js","webpack:///../ckeditor5-utils/src/lib/lodash/_toKey.js","webpack:///../ckeditor5-utils/src/lib/lodash/eq.js","webpack:///../ckeditor5-engine/src/model/node.js","webpack:///../ckeditor5-engine/src/model/operation/nooperation.js","webpack:///../ckeditor5-engine/src/model/textproxy.js","webpack:///../ckeditor5-engine/src/view/filler.js","webpack:///../ckeditor5-engine/src/view/observer/domeventobserver.js","webpack:///../ckeditor5-utils/src/first.js","webpack:///../ckeditor5-utils/src/focustracker.js","webpack:///../ckeditor5-utils/src/lib/lodash/_assignValue.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseDifference.js","webpack:///../ckeditor5-utils/src/lib/lodash/clone.js","webpack:///../ckeditor5-utils/src/lib/lodash/keys.js","webpack:///../ckeditor5-utils/src/uid.js","webpack:///../ckeditor5-engine/src/model/delta/mergedelta.js","webpack:///../ckeditor5-engine/src/model/delta/movedelta.js","webpack:///../ckeditor5-engine/src/model/delta/removedelta.js","webpack:///../ckeditor5-engine/src/model/delta/splitdelta.js","webpack:///../ckeditor5-engine/src/model/delta/unwrapdelta.js","webpack:///../ckeditor5-engine/src/model/delta/wrapdelta.js","webpack:///../ckeditor5-engine/src/model/nodelist.js","webpack:///../ckeditor5-engine/src/model/operation/attributeoperation.js","webpack:///../ckeditor5-engine/src/model/selection.js","webpack:///../ckeditor5-engine/src/view/editableelement.js","webpack:///../ckeditor5-engine/src/view/node.js","webpack:///../ckeditor5-engine/src/view/selection.js","webpack:///../ckeditor5-paragraph/src/paragraph.js","webpack:///../ckeditor5-utils/src/collection.js","webpack:///../ckeditor5-utils/src/dom/emittermixin.js","webpack:///../ckeditor5-utils/src/lib/lodash/_ListCache.js","webpack:///../ckeditor5-utils/src/lib/lodash/_SetCache.js","webpack:///../ckeditor5-utils/src/lib/lodash/_arrayFilter.js","webpack:///../ckeditor5-utils/src/lib/lodash/_arrayPush.js","webpack:///../ckeditor5-utils/src/lib/lodash/_assocIndexOf.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseIsEqual.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseSortedIndex.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseWhile.js","webpack:///../ckeditor5-utils/src/lib/lodash/_castPath.js","webpack:///../ckeditor5-utils/src/lib/lodash/_getMapData.js","webpack:///../ckeditor5-utils/src/lib/lodash/_isHostObject.js","webpack:///../ckeditor5-utils/src/lib/lodash/_isIterateeCall.js","webpack:///../ckeditor5-utils/src/lib/lodash/_isPrototype.js","webpack:///../ckeditor5-utils/src/lib/lodash/_nativeCreate.js","webpack:///../ckeditor5-utils/src/lib/lodash/_setToArray.js","webpack:///../ckeditor5-utils/src/lib/lodash/isArrayLike.js","webpack:///../ckeditor5-utils/src/lib/lodash/isLength.js","webpack:///../ckeditor5-utils/src/lib/lodash/isPlainObject.js","webpack:///../ckeditor5-utils/src/lib/lodash/unzip.js","webpack:///(webpack)/buildin/module.js","webpack:///../ckeditor5-engine/src/conversion/model-to-view-converters.js","webpack:///../ckeditor5-engine/src/model/delta/attributedelta.js","webpack:///../ckeditor5-engine/src/model/delta/insertdelta.js","webpack:///../ckeditor5-engine/src/model/delta/renamedelta.js","webpack:///../ckeditor5-engine/src/model/liverange.js","webpack:///../ckeditor5-engine/src/model/operation/markeroperation.js","webpack:///../ckeditor5-engine/src/model/operation/reinsertoperation.js","webpack:///../ckeditor5-engine/src/model/operation/renameoperation.js","webpack:///../ckeditor5-engine/src/model/operation/rootattributeoperation.js","webpack:///../ckeditor5-engine/src/view/attributeelement.js","webpack:///../ckeditor5-engine/src/view/documentfragment.js","webpack:///../ckeditor5-engine/src/view/domconverter.js","webpack:///../ckeditor5-engine/src/view/observer/domeventdata.js","webpack:///../ckeditor5-engine/src/view/uielement.js","webpack:///../ckeditor5-ui/src/focuscycler.js","webpack:///../ckeditor5-ui/src/panel/balloon/contextualballoon.js","webpack:///../ckeditor5-ui/src/viewcollection.js","webpack:///../ckeditor5-utils/src/count.js","webpack:///../ckeditor5-utils/src/lib/lodash/_MapCache.js","webpack:///../ckeditor5-utils/src/lib/lodash/_Stack.js","webpack:///../ckeditor5-utils/src/lib/lodash/_Symbol.js","webpack:///../ckeditor5-utils/src/lib/lodash/_arrayIncludes.js","webpack:///../ckeditor5-utils/src/lib/lodash/_arrayIncludesWith.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseGet.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseIndexOf.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseIntersection.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseProperty.js","webpack:///../ckeditor5-utils/src/lib/lodash/_basePullAll.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseSortedIndexBy.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseUnary.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseXor.js","webpack:///../ckeditor5-utils/src/lib/lodash/_cacheHas.js","webpack:///../ckeditor5-utils/src/lib/lodash/_castArrayLikeObject.js","webpack:///../ckeditor5-utils/src/lib/lodash/_cloneArrayBuffer.js","webpack:///../ckeditor5-utils/src/lib/lodash/_copyObject.js","webpack:///../ckeditor5-utils/src/lib/lodash/_getPrototype.js","webpack:///../ckeditor5-utils/src/lib/lodash/_getTag.js","webpack:///../ckeditor5-utils/src/lib/lodash/_mapToArray.js","webpack:///../ckeditor5-utils/src/lib/lodash/drop.js","webpack:///../ckeditor5-utils/src/lib/lodash/dropRight.js","webpack:///../ckeditor5-utils/src/lib/lodash/head.js","webpack:///../ckeditor5-utils/src/lib/lodash/isArguments.js","webpack:///../ckeditor5-utils/src/lib/lodash/isFunction.js","webpack:///../ckeditor5-utils/src/lib/lodash/isString.js","webpack:///../ckeditor5-utils/src/lib/lodash/pullAll.js","webpack:///../ckeditor5-utils/src/lib/lodash/unzipWith.js","webpack:///../ckeditor5-utils/src/tomap.js","webpack:///../ckeditor5-widget/src/utils.js","webpack:///(webpack)/buildin/global.js","webpack:///../ckeditor5-basic-styles/src/attributecommand.js","webpack:///../ckeditor5-engine/src/conversion/mapper.js","webpack:///../ckeditor5-engine/src/conversion/model-selection-to-view-converters.js","webpack:///../ckeditor5-engine/src/conversion/modelconversiondispatcher.js","webpack:///../ckeditor5-engine/src/dataprocessor/htmldataprocessor.js","webpack:///../ckeditor5-engine/src/model/delta/transform.js","webpack:///../ckeditor5-engine/src/model/delta/weakinsertdelta.js","webpack:///../ckeditor5-engine/src/model/liveposition.js","webpack:///../ckeditor5-engine/src/view/emptyelement.js","webpack:///../ckeditor5-engine/src/view/matcher.js","webpack:///../ckeditor5-engine/src/view/observer/mutationobserver.js","webpack:///../ckeditor5-engine/src/view/rooteditableelement.js","webpack:///../ckeditor5-image/src/image/imageengine.js","webpack:///../ckeditor5-image/src/image/ui/utils.js","webpack:///../ckeditor5-link/src/findlinkrange.js","webpack:///../ckeditor5-link/src/linkelement.js","webpack:///../ckeditor5-typing/src/changebuffer.js","webpack:///../ckeditor5-ui/src/bindings/clickoutsidehandler.js","webpack:///../ckeditor5-ui/src/bindings/preventdefault.js","webpack:///../ckeditor5-ui/src/bindings/submithandler.js","webpack:///../ckeditor5-ui/src/inputtext/inputtextview.js","webpack:///../ckeditor5-ui/src/labeledinput/labeledinputview.js","webpack:///../ckeditor5-ui/src/panel/balloon/balloonpanelview.js","webpack:///../ckeditor5-ui/src/toolbar/toolbarview.js","webpack:///../ckeditor5-undo/src/basecommand.js","webpack:///../ckeditor5-utils/src/diff.js","webpack:///../ckeditor5-utils/src/dom/getancestors.js","webpack:///../ckeditor5-utils/src/dom/isrange.js","webpack:///../ckeditor5-utils/src/dom/tounit.js","webpack:///../ckeditor5-utils/src/lib/lodash/_Map.js","webpack:///../ckeditor5-utils/src/lib/lodash/_Set.js","webpack:///../ckeditor5-utils/src/lib/lodash/_Uint8Array.js","webpack:///../ckeditor5-utils/src/lib/lodash/_apply.js","webpack:///../ckeditor5-utils/src/lib/lodash/_arrayReduce.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseClone.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseFindIndex.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseHas.js","webpack:///../ckeditor5-utils/src/lib/lodash/_basePullAt.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseSortedUniq.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseTimes.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseZipObject.js","webpack:///../ckeditor5-utils/src/lib/lodash/_copyArray.js","webpack:///../ckeditor5-utils/src/lib/lodash/_equalArrays.js","webpack:///../ckeditor5-utils/src/lib/lodash/_getSymbols.js","webpack:///../ckeditor5-utils/src/lib/lodash/_indexKeys.js","webpack:///../ckeditor5-utils/src/lib/lodash/_indexOfNaN.js","webpack:///../ckeditor5-utils/src/lib/lodash/_isStrictComparable.js","webpack:///../ckeditor5-utils/src/lib/lodash/_matchesStrictComparable.js","webpack:///../ckeditor5-utils/src/lib/lodash/_toSource.js","webpack:///../ckeditor5-utils/src/lib/lodash/chunk.js","webpack:///../ckeditor5-utils/src/lib/lodash/compact.js","webpack:///../ckeditor5-utils/src/lib/lodash/concat.js","webpack:///../ckeditor5-utils/src/lib/lodash/debounce.js","webpack:///../ckeditor5-utils/src/lib/lodash/difference.js","webpack:///../ckeditor5-utils/src/lib/lodash/differenceBy.js","webpack:///../ckeditor5-utils/src/lib/lodash/differenceWith.js","webpack:///../ckeditor5-utils/src/lib/lodash/dropRightWhile.js","webpack:///../ckeditor5-utils/src/lib/lodash/dropWhile.js","webpack:///../ckeditor5-utils/src/lib/lodash/fill.js","webpack:///../ckeditor5-utils/src/lib/lodash/findIndex.js","webpack:///../ckeditor5-utils/src/lib/lodash/findLastIndex.js","webpack:///../ckeditor5-utils/src/lib/lodash/first.js","webpack:///../ckeditor5-utils/src/lib/lodash/flatten.js","webpack:///../ckeditor5-utils/src/lib/lodash/flattenDeep.js","webpack:///../ckeditor5-utils/src/lib/lodash/flattenDepth.js","webpack:///../ckeditor5-utils/src/lib/lodash/fromPairs.js","webpack:///../ckeditor5-utils/src/lib/lodash/get.js","webpack:///../ckeditor5-utils/src/lib/lodash/identity.js","webpack:///../ckeditor5-utils/src/lib/lodash/indexOf.js","webpack:///../ckeditor5-utils/src/lib/lodash/initial.js","webpack:///../ckeditor5-utils/src/lib/lodash/intersection.js","webpack:///../ckeditor5-utils/src/lib/lodash/intersectionBy.js","webpack:///../ckeditor5-utils/src/lib/lodash/intersectionWith.js","webpack:///../ckeditor5-utils/src/lib/lodash/isElement.js","webpack:///../ckeditor5-utils/src/lib/lodash/isNative.js","webpack:///../ckeditor5-utils/src/lib/lodash/join.js","webpack:///../ckeditor5-utils/src/lib/lodash/lastIndexOf.js","webpack:///../ckeditor5-utils/src/lib/lodash/nth.js","webpack:///../ckeditor5-utils/src/lib/lodash/pull.js","webpack:///../ckeditor5-utils/src/lib/lodash/pullAllBy.js","webpack:///../ckeditor5-utils/src/lib/lodash/pullAllWith.js","webpack:///../ckeditor5-utils/src/lib/lodash/pullAt.js","webpack:///../ckeditor5-utils/src/lib/lodash/remove.js","webpack:///../ckeditor5-utils/src/lib/lodash/reverse.js","webpack:///../ckeditor5-utils/src/lib/lodash/slice.js","webpack:///../ckeditor5-utils/src/lib/lodash/sortedIndex.js","webpack:///../ckeditor5-utils/src/lib/lodash/sortedIndexBy.js","webpack:///../ckeditor5-utils/src/lib/lodash/sortedIndexOf.js","webpack:///../ckeditor5-utils/src/lib/lodash/sortedLastIndex.js","webpack:///../ckeditor5-utils/src/lib/lodash/sortedLastIndexBy.js","webpack:///../ckeditor5-utils/src/lib/lodash/sortedLastIndexOf.js","webpack:///../ckeditor5-utils/src/lib/lodash/sortedUniq.js","webpack:///../ckeditor5-utils/src/lib/lodash/sortedUniqBy.js","webpack:///../ckeditor5-utils/src/lib/lodash/tail.js","webpack:///../ckeditor5-utils/src/lib/lodash/take.js","webpack:///../ckeditor5-utils/src/lib/lodash/takeRight.js","webpack:///../ckeditor5-utils/src/lib/lodash/takeRightWhile.js","webpack:///../ckeditor5-utils/src/lib/lodash/takeWhile.js","webpack:///../ckeditor5-utils/src/lib/lodash/toNumber.js","webpack:///../ckeditor5-utils/src/lib/lodash/union.js","webpack:///../ckeditor5-utils/src/lib/lodash/unionBy.js","webpack:///../ckeditor5-utils/src/lib/lodash/unionWith.js","webpack:///../ckeditor5-utils/src/lib/lodash/uniq.js","webpack:///../ckeditor5-utils/src/lib/lodash/uniqBy.js","webpack:///../ckeditor5-utils/src/lib/lodash/uniqWith.js","webpack:///../ckeditor5-utils/src/lib/lodash/without.js","webpack:///../ckeditor5-utils/src/lib/lodash/xor.js","webpack:///../ckeditor5-utils/src/lib/lodash/xorBy.js","webpack:///../ckeditor5-utils/src/lib/lodash/xorWith.js","webpack:///../ckeditor5-utils/src/lib/lodash/zip.js","webpack:///../ckeditor5-utils/src/lib/lodash/zipObject.js","webpack:///../ckeditor5-utils/src/lib/lodash/zipObjectDeep.js","webpack:///../ckeditor5-utils/src/lib/lodash/zipWith.js","webpack:///../ckeditor5-utils/src/objecttomap.js","webpack:///../ckeditor5-utils/src/unicode.js","webpack:////workspace/ckeditor5/~/regenerator-runtime/runtime.js","webpack:///./ckeditor.js","webpack:////workspace/ckeditor5/~/style-loader/fixUrls.js","webpack:///../ckeditor5-autoformat/src/autoformat.js","webpack:///../ckeditor5-autoformat/src/blockautoformatengine.js","webpack:///../ckeditor5-autoformat/src/inlineautoformatengine.js","webpack:///../ckeditor5-basic-styles/src/bold.js","webpack:///../ckeditor5-basic-styles/src/boldengine.js","webpack:///../ckeditor5-basic-styles/src/italic.js","webpack:///../ckeditor5-basic-styles/src/italicengine.js","webpack:///../ckeditor5-block-quote/src/blockquote.js","webpack:///../ckeditor5-block-quote/src/blockquotecommand.js","webpack:///../ckeditor5-block-quote/src/blockquoteengine.js","webpack:///../ckeditor5-clipboard/src/clipboard.js","webpack:///../ckeditor5-clipboard/src/clipboardobserver.js","webpack:///../ckeditor5-clipboard/src/datatransfer.js","webpack:///../ckeditor5-clipboard/src/utils/normalizeclipboarddata.js","webpack:///../ckeditor5-clipboard/src/utils/plaintexttohtml.js","webpack:///../ckeditor5-clipboard/src/utils/viewtoplaintext.js","webpack:///../ckeditor5-core/src/commandcollection.js","webpack:///../ckeditor5-core/src/editingkeystrokehandler.js","webpack:///../ckeditor5-core/src/editor/editor.js","webpack:///../ckeditor5-core/src/editor/standardeditor.js","webpack:///../ckeditor5-core/src/plugincollection.js","webpack:///../ckeditor5-editor-classic/src/classiceditor.js","webpack:///../ckeditor5-editor-classic/src/classiceditorui.js","webpack:///../ckeditor5-editor-classic/src/classiceditoruiview.js","webpack:///../ckeditor5-engine/src/controller/datacontroller.js","webpack:///../ckeditor5-engine/src/controller/deletecontent.js","webpack:///../ckeditor5-engine/src/controller/editingcontroller.js","webpack:///../ckeditor5-engine/src/controller/getselectedcontent.js","webpack:///../ckeditor5-engine/src/controller/insertcontent.js","webpack:///../ckeditor5-engine/src/controller/modifyselection.js","webpack:///../ckeditor5-engine/src/conversion/modelconsumable.js","webpack:///../ckeditor5-engine/src/conversion/view-selection-to-model-converters.js","webpack:///../ckeditor5-engine/src/conversion/view-to-model-converters.js","webpack:///../ckeditor5-engine/src/conversion/viewconsumable.js","webpack:///../ckeditor5-engine/src/conversion/viewconversiondispatcher.js","webpack:///../ckeditor5-engine/src/dataprocessor/basichtmlwriter.js","webpack:///../ckeditor5-engine/src/model/delta/basic-deltas.js","webpack:///../ckeditor5-engine/src/model/delta/basic-transformations.js","webpack:///../ckeditor5-engine/src/model/delta/markerdelta.js","webpack:///../ckeditor5-engine/src/model/document.js","webpack:///../ckeditor5-engine/src/model/documentselection.js","webpack:///../ckeditor5-engine/src/model/history.js","webpack:///../ckeditor5-engine/src/model/markercollection.js","webpack:///../ckeditor5-engine/src/model/operation/operationfactory.js","webpack:///../ckeditor5-engine/src/model/operation/transform.js","webpack:///../ckeditor5-engine/src/model/rootelement.js","webpack:///../ckeditor5-engine/src/model/schema.js","webpack:///../ckeditor5-engine/src/view/document.js","webpack:///../ckeditor5-engine/src/view/observer/clickobserver.js","webpack:///../ckeditor5-engine/src/view/observer/fakeselectionobserver.js","webpack:///../ckeditor5-engine/src/view/observer/focusobserver.js","webpack:///../ckeditor5-engine/src/view/observer/keyobserver.js","webpack:///../ckeditor5-engine/src/view/observer/mouseobserver.js","webpack:///../ckeditor5-engine/src/view/observer/selectionobserver.js","webpack:///../ckeditor5-engine/src/view/placeholder.js","webpack:///../ckeditor5-engine/src/view/renderer.js","webpack:///../ckeditor5-engine/src/view/textproxy.js","webpack:///../ckeditor5-enter/src/enter.js","webpack:///../ckeditor5-enter/src/entercommand.js","webpack:///../ckeditor5-enter/src/enterobserver.js","webpack:///../ckeditor5-heading/src/heading.js","webpack:///../ckeditor5-heading/src/headingcommand.js","webpack:///../ckeditor5-heading/src/headingengine.js","webpack:///../ckeditor5-image/src/image.js","webpack:///../ckeditor5-image/src/image/converters.js","webpack:///../ckeditor5-image/src/imagecaption.js","webpack:///../ckeditor5-image/src/imagecaption/imagecaptionengine.js","webpack:///../ckeditor5-image/src/imagecaption/utils.js","webpack:///../ckeditor5-image/src/imagestyle.js","webpack:///../ckeditor5-image/src/imagestyle/converters.js","webpack:///../ckeditor5-image/src/imagestyle/imagestylecommand.js","webpack:///../ckeditor5-image/src/imagestyle/imagestyleengine.js","webpack:///../ckeditor5-image/src/imagetextalternative.js","webpack:///../ckeditor5-image/src/imagetextalternative/imagetextalternativecommand.js","webpack:///../ckeditor5-image/src/imagetextalternative/imagetextalternativeengine.js","webpack:///../ckeditor5-image/src/imagetextalternative/ui/textalternativeformview.js","webpack:///../ckeditor5-image/src/imagetoolbar.js","webpack:///../ckeditor5-link/src/link.js","webpack:///../ckeditor5-link/src/linkcommand.js","webpack:///../ckeditor5-link/src/linkengine.js","webpack:///../ckeditor5-link/src/ui/linkformview.js","webpack:///../ckeditor5-link/src/unlinkcommand.js","webpack:///../ckeditor5-list/src/converters.js","webpack:///../ckeditor5-list/src/indentcommand.js","webpack:///../ckeditor5-list/src/list.js","webpack:///../ckeditor5-list/src/listcommand.js","webpack:///../ckeditor5-list/src/listengine.js","webpack:///../ckeditor5-list/src/viewlistitemelement.js","webpack:///../ckeditor5-paragraph/src/paragraphcommand.js","webpack:///../ckeditor5-presets/src/essentials.js","webpack:///../ckeditor5-typing/src/delete.js","webpack:///../ckeditor5-typing/src/deletecommand.js","webpack:///../ckeditor5-typing/src/deleteobserver.js","webpack:///../ckeditor5-typing/src/input.js","webpack:///../ckeditor5-typing/src/inputcommand.js","webpack:///../ckeditor5-typing/src/typing.js","webpack:///../ckeditor5-ui/src/componentfactory.js","webpack:///../ckeditor5-ui/src/dropdown/createdropdown.js","webpack:///../ckeditor5-ui/src/dropdown/dropdownpanelview.js","webpack:///../ckeditor5-ui/src/dropdown/dropdownview.js","webpack:///../ckeditor5-ui/src/dropdown/list/createlistdropdown.js","webpack:///../ckeditor5-ui/src/editableui/editableuiview.js","webpack:///../ckeditor5-ui/src/editableui/inline/inlineeditableuiview.js","webpack:///../ckeditor5-ui/src/editorui/boxed/boxededitoruiview.js","webpack:///../ckeditor5-ui/src/editorui/editoruiview.js","webpack:///../ckeditor5-ui/src/icon/iconview.js","webpack:///../ckeditor5-ui/src/label/labelview.js","webpack:///../ckeditor5-ui/src/list/listitemview.js","webpack:///../ckeditor5-ui/src/list/listview.js","webpack:///../ckeditor5-ui/src/model.js","webpack:///../ckeditor5-ui/src/toolbar/enabletoolbarkeyboardfocus.js","webpack:///../ckeditor5-ui/src/toolbar/normalizetoolbarconfig.js","webpack:///../ckeditor5-ui/src/toolbar/sticky/stickytoolbarview.js","webpack:///../ckeditor5-ui/src/toolbar/toolbarseparatorview.js","webpack:///../ckeditor5-ui/src/tooltip/tooltipview.js","webpack:///../ckeditor5-undo/src/redocommand.js","webpack:///../ckeditor5-undo/src/undo.js","webpack:///../ckeditor5-undo/src/undocommand.js","webpack:///../ckeditor5-undo/src/undoengine.js","webpack:///../ckeditor5-utils/src/config.js","webpack:///../ckeditor5-utils/src/difftochanges.js","webpack:///../ckeditor5-utils/src/dom/getcommonancestor.js","webpack:///../ckeditor5-utils/src/dom/getdatafromelement.js","webpack:///../ckeditor5-utils/src/dom/getpositionedancestor.js","webpack:///../ckeditor5-utils/src/dom/indexof.js","webpack:///../ckeditor5-utils/src/dom/insertat.js","webpack:///../ckeditor5-utils/src/dom/position.js","webpack:///../ckeditor5-utils/src/dom/rect.js","webpack:///../ckeditor5-utils/src/dom/remove.js","webpack:///../ckeditor5-utils/src/dom/setdatainelement.js","webpack:///../ckeditor5-utils/src/elementreplacer.js","webpack:///../ckeditor5-utils/src/env.js","webpack:///../ckeditor5-utils/src/eventinfo.js","webpack:///../ckeditor5-utils/src/lib/lodash/_DataView.js","webpack:///../ckeditor5-utils/src/lib/lodash/_Hash.js","webpack:///../ckeditor5-utils/src/lib/lodash/_Promise.js","webpack:///../ckeditor5-utils/src/lib/lodash/_Reflect.js","webpack:///../ckeditor5-utils/src/lib/lodash/_WeakMap.js","webpack:///../ckeditor5-utils/src/lib/lodash/_addMapEntry.js","webpack:///../ckeditor5-utils/src/lib/lodash/_addSetEntry.js","webpack:///../ckeditor5-utils/src/lib/lodash/_arrayEach.js","webpack:///../ckeditor5-utils/src/lib/lodash/_arraySome.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseAssign.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseAt.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseClamp.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseCreate.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseFill.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseGetAllKeys.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseHasIn.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseIndexOfWith.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseIsEqualDeep.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseIsMatch.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseKeys.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseKeysIn.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseMatches.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseMatchesProperty.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseNth.js","webpack:///../ckeditor5-utils/src/lib/lodash/_basePropertyDeep.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseSet.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseToPairs.js","webpack:///../ckeditor5-utils/src/lib/lodash/_baseToString.js","webpack:///../ckeditor5-utils/src/lib/lodash/_checkGlobal.js","webpack:///../ckeditor5-utils/src/lib/lodash/_cloneBuffer.js","webpack:///../ckeditor5-utils/src/lib/lodash/_cloneDataView.js","webpack:///../ckeditor5-utils/src/lib/lodash/_cloneMap.js","webpack:///../ckeditor5-utils/src/lib/lodash/_cloneRegExp.js","webpack:///../ckeditor5-utils/src/lib/lodash/_cloneSet.js","webpack:///../ckeditor5-utils/src/lib/lodash/_cloneSymbol.js","webpack:///../ckeditor5-utils/src/lib/lodash/_cloneTypedArray.js","webpack:///../ckeditor5-utils/src/lib/lodash/_compareAscending.js","webpack:///../ckeditor5-utils/src/lib/lodash/_copySymbols.js","webpack:///../ckeditor5-utils/src/lib/lodash/_createAssigner.js","webpack:///../ckeditor5-utils/src/lib/lodash/_createSet.js","webpack:///../ckeditor5-utils/src/lib/lodash/_createToPairs.js","webpack:///../ckeditor5-utils/src/lib/lodash/_equalByTag.js","webpack:///../ckeditor5-utils/src/lib/lodash/_equalObjects.js","webpack:///../ckeditor5-utils/src/lib/lodash/_getAllKeys.js","webpack:///../ckeditor5-utils/src/lib/lodash/_getLength.js","webpack:///../ckeditor5-utils/src/lib/lodash/_getMatchData.js","webpack:///../ckeditor5-utils/src/lib/lodash/_hasPath.js","webpack:///../ckeditor5-utils/src/lib/lodash/_hashClear.js","webpack:///../ckeditor5-utils/src/lib/lodash/_hashDelete.js","webpack:///../ckeditor5-utils/src/lib/lodash/_hashGet.js","webpack:///../ckeditor5-utils/src/lib/lodash/_hashHas.js","webpack:///../ckeditor5-utils/src/lib/lodash/_hashSet.js","webpack:///../ckeditor5-utils/src/lib/lodash/_initCloneArray.js","webpack:///../ckeditor5-utils/src/lib/lodash/_initCloneByTag.js","webpack:///../ckeditor5-utils/src/lib/lodash/_initCloneObject.js","webpack:///../ckeditor5-utils/src/lib/lodash/_isFlattenable.js","webpack:///../ckeditor5-utils/src/lib/lodash/_isKeyable.js","webpack:///../ckeditor5-utils/src/lib/lodash/_iteratorToArray.js","webpack:///../ckeditor5-utils/src/lib/lodash/_listCacheClear.js","webpack:///../ckeditor5-utils/src/lib/lodash/_listCacheDelete.js","webpack:///../ckeditor5-utils/src/lib/lodash/_listCacheGet.js","webpack:///../ckeditor5-utils/src/lib/lodash/_listCacheHas.js","webpack:///../ckeditor5-utils/src/lib/lodash/_listCacheSet.js","webpack:///../ckeditor5-utils/src/lib/lodash/_mapCacheClear.js","webpack:///../ckeditor5-utils/src/lib/lodash/_mapCacheDelete.js","webpack:///../ckeditor5-utils/src/lib/lodash/_mapCacheGet.js","webpack:///../ckeditor5-utils/src/lib/lodash/_mapCacheHas.js","webpack:///../ckeditor5-utils/src/lib/lodash/_mapCacheSet.js","webpack:///../ckeditor5-utils/src/lib/lodash/_parent.js","webpack:///../ckeditor5-utils/src/lib/lodash/_setCacheAdd.js","webpack:///../ckeditor5-utils/src/lib/lodash/_setCacheHas.js","webpack:///../ckeditor5-utils/src/lib/lodash/_setToPairs.js","webpack:///../ckeditor5-utils/src/lib/lodash/_stackClear.js","webpack:///../ckeditor5-utils/src/lib/lodash/_stackDelete.js","webpack:///../ckeditor5-utils/src/lib/lodash/_stackGet.js","webpack:///../ckeditor5-utils/src/lib/lodash/_stackHas.js","webpack:///../ckeditor5-utils/src/lib/lodash/_stackSet.js","webpack:///../ckeditor5-utils/src/lib/lodash/_stringToPath.js","webpack:///../ckeditor5-utils/src/lib/lodash/array.default.js","webpack:///../ckeditor5-utils/src/lib/lodash/array.js","webpack:///../ckeditor5-utils/src/lib/lodash/assignIn.js","webpack:///../ckeditor5-utils/src/lib/lodash/cloneDeepWith.js","webpack:///../ckeditor5-utils/src/lib/lodash/constant.js","webpack:///../ckeditor5-utils/src/lib/lodash/hasIn.js","webpack:///../ckeditor5-utils/src/lib/lodash/isBuffer.js","webpack:///../ckeditor5-utils/src/lib/lodash/isEqual.js","webpack:///../ckeditor5-utils/src/lib/lodash/isEqualWith.js","webpack:///../ckeditor5-utils/src/lib/lodash/isTypedArray.js","webpack:///../ckeditor5-utils/src/lib/lodash/keysIn.js","webpack:///../ckeditor5-utils/src/lib/lodash/memoize.js","webpack:///../ckeditor5-utils/src/lib/lodash/noop.js","webpack:///../ckeditor5-utils/src/lib/lodash/now.js","webpack:///../ckeditor5-utils/src/lib/lodash/property.js","webpack:///../ckeditor5-utils/src/lib/lodash/toFinite.js","webpack:///../ckeditor5-utils/src/lib/lodash/toLength.js","webpack:///../ckeditor5-utils/src/lib/lodash/toPairs.js","webpack:///../ckeditor5-utils/src/lib/lodash/toString.js","webpack:///../ckeditor5-utils/src/locale.js","webpack:///../ckeditor5-utils/src/mapsequal.js","webpack:///../ckeditor5-utils/src/priorities.js","webpack:///../ckeditor5-utils/src/spy.js","webpack:///../ckeditor5-utils/src/translation-service.js","webpack:///../ckeditor5-widget/src/widget.js","webpack:///../ckeditor5-block-quote/theme/theme.scss","webpack:///../ckeditor5-editor-classic/theme/theme.scss","webpack:///../ckeditor5-engine/theme/placeholder.scss","webpack:///../ckeditor5-heading/theme/theme.scss","webpack:///../ckeditor5-image/theme/imagecaption/theme.scss","webpack:///../ckeditor5-image/theme/imagetextalternative/theme.scss","webpack:///../ckeditor5-image/theme/theme.scss","webpack:///../ckeditor5-link/theme/theme.scss","webpack:///../ckeditor5-widget/theme/theme.scss","webpack:///../ckeditor5-basic-styles/theme/icons/bold.svg","webpack:///../ckeditor5-basic-styles/theme/icons/italic.svg","webpack:///../ckeditor5-core/theme/icons/low-vision.svg","webpack:///../ckeditor5-core/theme/icons/object-center.svg","webpack:///../ckeditor5-core/theme/icons/object-right.svg","webpack:///../ckeditor5-core/theme/icons/quote.svg","webpack:///../ckeditor5-link/theme/icons/link.svg","webpack:///../ckeditor5-link/theme/icons/unlink.svg","webpack:///../ckeditor5-list/theme/icons/bulletedlist.svg","webpack:///../ckeditor5-list/theme/icons/numberedlist.svg","webpack:///../ckeditor5-undo/theme/icons/redo.svg","webpack:///../ckeditor5-undo/theme/icons/undo.svg","webpack:///../ckeditor5-block-quote/theme/theme.scss?ce68","webpack:///../ckeditor5-editor-classic/theme/theme.scss?b68b","webpack:///../ckeditor5-engine/theme/placeholder.scss?4bb3","webpack:///../ckeditor5-heading/theme/theme.scss?a11a","webpack:///../ckeditor5-image/theme/imagecaption/theme.scss?85fe","webpack:///../ckeditor5-image/theme/imagetextalternative/theme.scss?6372","webpack:///../ckeditor5-image/theme/theme.scss?d070","webpack:///../ckeditor5-link/theme/theme.scss?91f4","webpack:///../ckeditor5-widget/theme/theme.scss?5d52"],"names":[],"mappings":";;;;oCAwrBA,sDC1oBA,sBC9CA,cACA,8BACA,uCACA,8CACA,cACA,OACA,OACA,6DACA,EACA,CAAC,mBACD,kBCTA,cAMA,MACA,eAGA,mBACA,GACA,EACA,KAIA,mDAGA,KAGA,OACA,OAIA,IAzBA,iBA4BA,MAGA,iBAA2C,OAAc,EAGzD,qBACA,OACA,8BACA,CACA,gBACA,kBAGA,GAGA,iBACA,YACA,qBAA2B,UAA0B,UACrD,YAAiC,OAAe,EAChD,mBACA,GACA,CAGA,mBAAsD,+CAA+D,EAGrH,MAGA,8BChEA,aAQA,eAAiD,kBAA0C,wBAA4D,qCAEvJ,eAAiD,KAAa,2BAAyF,sHAAuF,EAE9O,eAA0C,0BAA+D,8FAAuG,6CAAyE,aAAe,mCAA6E,oFAAuH,EAqB5e,CA/BA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAAE,iBA4BjjB,gBAeA,QAEA,GACA,0BAMA,mEAEA,kBAOA,uBACA,EACA,CAUA,YA/BA,aAgCA,KACA,mCACA,oBACA,EAGA,KACA,CAAC,SAED,U,mBCzFA,aAmCA,aAAsC,0BAAuC,SAAgB,GAE7F,eAAiD,kBAA0C,wBAA4D,oCAwBvJ,CA3DA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAS/iB,QAEA,QAEA,OAEA,QAEA,OAEA,QAEA,OAEA,OAEA,OAEA,uBAmCA,gBACA,WAEA,2BAMA,wCAGA,iFAOA,yHAA+H,MAI/H,yBACA,OASA,eA+BA,YACA,CAUA,aACA,KASA,+BACA,iBACA,WAGA,4CAEA,YAEA,SADA,EAGA,OACA,aAEA,SACA,gBAGA,4BACA,GAEA,SAGA,OAwBE,GACF,KACA,2CACA,2DAEA,sBAEA,yBACA,iBAEA,KACA,QAWE,GACF,KACA,gCACA,2BACA,EAQE,GACF,KACA,+BACA,uBACA,0BAEA,iCAAqC,CAErC,gBAUE,GACF,KACA,iCACA,iBACA,KAIA,yCAEA,oEAEA,2BACA,EAUE,GACF,KACA,qCACA,gBACA,mBAEA,iBAEA,gBACA,IAGA,yBACA,EAUE,GACF,KACA,gCACA,4BAEA,iBACA,wBAEA,EACA,CAWE,GACF,KACA,2BACA,OACA,4BAkCE,GACF,KACA,4BACA,OACA,6BASE,GACF,KACA,2BACA,OACA,2BAaE,GACF,KACA,8BACA,OACA,OACA,wBAEA,UACA,OACA,OAEA,aACA,gCACA,6BACA,GAEA,UACA,+BACA,0BACA,MAEA,MACA,QAIA,sBAEA,oCACA,cACA,GAGA,wCACA,iBACA,UAGA,gCACA,OACA,SACA,QAAK,KACL,IACA,aAGA,gCACA,EACA,CACA,CAYE,GACF,KACA,+CACA,4BAGA,sBACA,WAGA,MAEA,uFAEA,oBAEA,aAGA,gBAEA,CACI,0EAEJ,qBAEA,4BAEA,yBAGA,SAGA,iBAEA,CACA,CAEA,OACA,EAcE,GACF,KACA,kDACA,4BAGA,sBACA,WAGA,MAEA,4GAGA,eAEI,2EAEJ,qBAEA,sBAGA,gBAEA,EAEA,OACA,EAiBE,GACF,KACA,iDAEA,wCAGA,0CAEA,4BAGA,uBAIA,oCAGA,GACA,CA8BE,GACF,KACA,kCACA,qBAGA,yBAKA,2CAIA,8CAEA,IACA,CAsBE,GACF,KACA,uBACA,0BACA,KAMA,iBACA,+BACA,CAeE,GACF,KACA,uBACA,gBAEA,OAAkB,qBAA0B,EAC5C,2CAGA,WACA,EAWE,GACF,KACA,sBACA,uCACA,OAUE,GACF,KACA,yBACA,iCAEA,kEACA,IASE,GACF,KACA,0BACA,8DACA,IASE,GACF,KACA,2BACA,gEACA,IASE,GACF,KACA,0BACA,OACA,gBASE,GACF,KACA,wBACA,iCACA,SACE,KACF,KACA,8BACA,gBACA,kCAEA,SAEA,KACA,aACK,kBACL,qCACK,MACL,mCACK,GACL,MAGA,2CAEA,EASE,GACF,KACA,+BACA,OAOA,8FAA2G,MAG3G,qDACA,UASE,GACF,KACA,gCACA,OAOA,gGAA6G,MAG7G,qDACA,YAUE,GACF,KACA,+CACA,4BAMA,wCAGA,uGAEA,wBAEA,mBACA,EASE,GACF,KACA,sCACA,+BACA,QASE,GACF,KACA,8BACA,IACA,iDAGA,sBAOA,2IAAyJ,YAGzJ,wCACA,KAGA,KACA,CAOA,IAGA,U,mBC14BA,aAuBA,aAAsC,0BAAuC,SAAgB,GAE7F,eAAiD,kBAA0C,wBAA4D,oCAQvJ,CA/BA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAS/iB,QAEA,QAEA,OAEA,sBAgBA,cACA,QAQA,eACA,CAOA,aACA,KACA,0BACA,MACA,eAGA,KACA,CAAC,IAED,YAGA,kBAqHA,0BCxLA,aA2BA,aAAsC,0BAAuC,SAAgB,GAE7F,aAAkC,qBAA0B,uBAA0C,YAAgB,OAAO,WAAoB,SAAa,EAAS,mBAA0B,GAEjM,eAAiD,kBAA0C,wBAA4D,oCAKvJ,CAlCA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAS/iB,QAEA,OAEA,OAEA,QAEA,OAEA,sBAoBA,cACA,8DAEA,YAQA,2CAQA,2EACA,EAgBA,aACA,YACA,mDACA,2CAEA,wBACA,UACA,wCAA+D,iBAA2C,2BAE1G,OACA,OACA,eAGA,QAAI,IACJ,KASE,IACF,KAUA,oCACA,+CACA,IAYE,GACF,KACA,iCACA,4DAEA,KACA,cAGA,oEACA,6DAEA,eACA,CASE,GACF,KACA,2BACA,wDACA,IASE,GACF,KACA,kCACA,uDACA,MAyBE,GACF,KACA,iCACA,IAEA,iCAGA,4BAGA,kCAGA,gCAGA,8BAIA,gCAGA,OACA,CAmBE,GACF,KACA,mCACA,2BAGA,YACA,aAEA,mCAGA,aAGA,+BAGA,WAGA,aACA,EAGA,OACA,KA0CE,GACF,KACA,uCACA,QACA,2CAEA,2CACA,WAGA,yBACA,mBAEA,OACA,oCAGA,4BACA,KACA,aAIA,iDACA,mCACA,SAEA,OACA,oCAGA,cACA,cACA,EAEA,OACA,EAYE,GACF,KACA,4BACA,2DAEA,0BAEA,mBACA,EAkBE,GACF,KACA,qDACA,2DAEA,kBAEA,4CAEA,wBACA,UACA,gBACA,OAEA,oCACA,GACA,KACA,KACA,gBACA,aAEA,gBACA,0BACA,QACA,GACA,KAEA,YACA,aACA,KAEA,SACA,IACA,YACA,EAEA,UACA,WACA,GAEA,UACA,WACA,mBACA,GACA,SAEA,OACA,WACA,UAEA,SACA,UAGA,aACA,cAEA,MACA,QACA,GACA,KAEA,MAEA,OACA,oBAEA,QACA,oBAEA,QACA,QACA,eAGA,QAAI,+BACJ,KAgBE,IACF,KACA,yDACA,2DAEA,kBAEA,4CAEA,wBACA,UACA,uBAEA,qBACA,UACA,IAEA,aACA,GACA,KACA,KACA,gBACA,aAEA,gBACA,0BACA,QACA,GACA,KAEA,YACA,aACA,KAEA,iBACA,IACA,YACA,EAEA,UACA,WACA,GAEA,UACA,WACA,mBACA,GACA,SAEA,OACA,WACA,UAEA,SACA,UAGA,aACA,cAEA,MACA,QACA,GACA,KAEA,MAEA,OACA,oBAEA,QACA,oBAEA,QACA,QACA,eAGA,QAAI,+BACJ,KAaE,IACF,KACA,yCACA,0BAGA,YAEA,4CACA,KACA,KAEA,KACA,2CAAsE,qBAAmE,MACzI,YAEA,cACA,gBAAqB,QAAmB,OACxC,qHAEA,gDAEA,iBAIA,CAAI,SACJ,CACA,OACA,CAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CAEA,OACA,EAaE,GACF,KACA,0CACA,0BAEA,OACA,KACA,KAEA,KACA,gCAA4D,qBAAmE,WAC/H,KAEA,gBAAqB,QAAoB,OACzC,iCAEA,mCACA,iBAEA,CAMA,CAAI,SACJ,CACA,OACA,CAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CAEA,WAAkB,QAAmB,WACrC,KAEA,eAAuB,QAAmB,OAC1C,QAEA,sDACA,gBAGA,EAEA,OACA,EASE,GACF,KACA,oCACA,0CACA,IAcE,GACF,KACA,2DACA,IACA,qDAEA,8CAGA,uFAKA,6CAWA,+FACA,+DACA,yCAEA,wBACA,GAMA,oHACA,4CACA,iEAEA,mBACA,GAEA,uCAEA,EAsCE,GACF,KACA,gDACA,4DACA,0DAEA,+BAKA,sHAEA,uCAEA,0BACA,qBAEA,wDACA,8CAEA,IAEA,EAaE,GACF,KACA,6CACA,qBACA,4CAEA,sBACA,GAEA,8BAIA,yBACA,KAEA,4BAEA,GAPA,EASA,mGACI,IAEJ,sEAGA,yCAEA,YACA,mCAKA,aACA,2EAGA,KACA,CAWE,GACF,KACA,4BACA,gCACA,IASE,GACF,KACA,uBACA,qCACA,MAQE,GACF,KACA,qBACA,mBACA,IACE,KACF,KACA,gDACA,OACA,mBAEA,uCACA,EAYE,GACF,KACA,qDACA,gGACA,GASE,GACF,KACA,mCACA,2BACA,IAUE,GACF,KACA,4BACA,iDACA,UASE,GACF,KACA,4BACA,oEACA,WAkBE,GACF,KACA,oCACA,IAMA,iCACI,sFACJ,0CAMA,YAGA,uBACA,oCACA,CAGA,uBAKA,wBAIA,SAA6B,EAAQ,yBAErC,OADA,8CAUA,mBAA+B,MAAqB,6BAEpD,KADA,4CAQA,WACA,EAUE,GACF,KACA,8BACA,wEACA,GAGA,KACA,CAAC,IAED,U,iBC9hCA,aAEA,qCACA,CACC,WACD,EAgCA,QACA,WACA,iDAAsF,IAAa,EACnG,qBAGA,wBACA,0FACA,aAIA,oDACA,KAEA,kDACA,GACA,EACA,E,mBCvDA,aA0DA,cAAsC,6BAAuC,SAAgB,IAE7F,cAAkC,sBAA0B,0BAA0C,cAAgB,OAAO,eAAoB,UAAa,GAAS,mBAA0B,IAEjM,iBAAiD,KAAa,4BAAyF,0HAAuF,GAE9O,iBAA0C,2BAA+D,+FAAuG,iDAAyE,aAAe,oCAA6E,wFAAuH,IAE5e,iBAAiD,mBAA0C,yBAA4D,oCAEvJ,CAskCA,cACA,SAWA,SACA,cAGA,qBACA,aACE,mBAKF,KAQY,CACZ,iBACA,2BAEA,qBACA,gBAIA,IACA,EACA,EAOgG,CAChG,oBACA,WAEA,aAMA,oCACA,OAEA,eAGA,MACA,OAEA,gBAEA,GAOa,CACb,cACA,OACA,iBACA,gBACA,EACA,mBACA,gBACA,EAEA,EASa,CACb,oBACA,OACA,iBACA,yBACA,GACA,mBACA,yBACA,GAEA,EAQa,CACb,iBACA,OACA,iBACA,cACA,EACA,mBACA,cACA,IAEA,EAKa,CACb,cACA,sCAYA,2CACA,WAEA,GAEA,SACA,GAWmD,CACnD,cACA,IACA,yBACE,OACF,QAGA,OACA,4BAGA,cAGA,aACA,IACA,iBAGA,0BAEA,cACA,iBACA,oBACI,cACJ,IACA,OACA,MAEA,MACA,2CAAmE,0BAAmE,MACtI,YAEA,eACA,WAEA,kBAGA,IAAK,UACL,CACA,SACA,EAAK,QACL,IACA,SACA,WAEA,QAAM,QACN,IACA,QAEA,GACA,CACA,CAGA,aACA,EAEA,OACA,GAsBkB,CAClB,cACA,cACA,WACA,sCAGA,aAEA,GAmBoB,CACpB,cACA,cACA,SAGA,UACA,GAWmD,CACnD,cACA,OACA,OAEA,IAgBiD,CACjD,cACA,kBACA,oBAEA,MAiBkB,CAClB,iBACA,kBACA,kBAEA,KAOa,CACb,iBACA,UACA,IACE,KACF,IAEA,UAEA,EAea,CACb,iBACA,cACA,cACA,IAEA,mCACA,KACA,gBAGA,GAMiD,CACjD,iBACA,OACA,iBACA,gBAGA,kCAGA,gBACA,qBACA,oBAGA,0CAGA,yBACA,IAEA,oCACA,MAEA,oCACA,oCAMA,4BAGA,8GAEA,EACA,MACA,MAEA,MACA,2CAAiE,0BAAmE,MACpI,YAEA,8BAEA,GAAG,UACH,CACA,SACA,EAAG,QACH,IACA,SACA,WAEA,QAAI,QACJ,IACA,QAEA,GACA,CACA,CACA,CAMa,CACb,cACA,YACA,MAKa,CACb,cACA,yBACA,OAKa,CACb,cACA,qBACA,GAKa,CACb,cACA,yBACA,OAKA,CACA,YACA,OACA,CACA,YACA,YAEA,cAMkB,CAClB,cACA,oBACA,WAkPA,CA92DA,qCACA,CACC,WACD,iEAEA,2BAAqD,yBAAkD,qDAA8D,mBAA0B,8BAA4C,UAAkD,2BAA0C,GAAE,aAA4B,cAA4B,gBAAuB,UAAgD,4BAAgC,GAExe,cAAkC,mBAAiC,IAAe,OAAe,MAAgB,MAAoB,MAAM,kCAA0C,uBAA+B,mBAAkC,yBAAqC,KAA1D,OAA4D,UAAc,CAAW,SAAU,EAAE,QAAU,IAAM,uBAAyC,WAAE,QAAU,YAAkB,GAAE,CAAE,OAAa,GAAE,uBAA2B,kBAA0B,UAAc,iCAA2C,iBAAuC,wBAA+E,uDAAG,CAEnpB,gBAAgC,mBAA2C,YAAgB,WAAkB,OAAO,WAA2B,qBAAwD,kBAAgC,kCAAuD,6CAA6D,GAAE,0BAAyD,4BAAqE,cAA6D,IAAoB,EAAG,CAW/iB,QAEA,QAEA,QAEA,QAEA,SAEA,QAEA,SAEA,SAEA,SAEA,QAEA,SAEA,UAEA,SAEA,UAEA,SAEA,SAEA,SAEA,0BA+CA,gBACA,QAEA,2BAUA,WAiDA,gCACA,IAWA,cACA,KACA,yBACA,yBACA,CAGA,8BAEA,eACA,EAqCE,GACF,KACA,0BACA,yBAEA,qBACA,MACA,GACA,8BAGA,cACA,EASE,GACF,KACA,2BACA,UAMA,iCAGA,wIACA,YAkBE,GACF,KASA,gCACA,IAEA,aAEA,oBAGA,8BAGA,KAOA,wBAGA,mHACA,sBAEA,wBAEA,GASE,GACF,KACA,mCACA,WAEA,WACA,mDAtOA,oCAyOA,6BACA,gCACA,yBAEA,IACA,EASE,GACF,KACA,gCACA,WAGA,WACA,0BAEA,+CAaA,WACA,6BACA,aACA,eACA,SAUA,mCAGA,IACA,EASE,GACF,KACA,sCACA,YACA,GACA,GACA,GAEA,WAIA,sBACA,WAEA,0BAEA,iCAGA,uBAGA,IACA,uBAUA,gDAmBA,WAQA,uBAIA,SACA,gBAGA,2BACA,QACA,mBACA,SAEA,IASA,kBACA,wDAmBA,eACA,gBAGA,OAUA,mBACA,wBACA,EAEA,yBACA,kBACA,GAEA,eAEA,MACA,6BAIA,KA6BE,GACF,KACA,6CACA,WAEA,sBACA,WAQA,MACA,2BACA,SACA,iBACA,SAWA,kBAEA,EACA,CASE,GACF,KACA,2CACA,WACA,0DACA,SACA,cAEA,EACA,MACA,MAEA,MACA,6CAAiE,0BAAgE,MACjI,eAEA,QACA,YACA,cAEA,OACA,OACA,MAEA,aACA,kCAA+D,0BAAmE,MAClI,YAEA,wBAEA,QAAQ,UACR,CACA,SACA,EAAQ,QACR,IACA,SACA,WAEA,QAAS,QACT,IACA,QAEA,GACA,CACA,CACM,YACN,IACA,sBAGA,oBACA,WACA,cAEA,qBAEA,mBACA,oBACA,MACA,yBAEA,IACA,wBAIA,SAAI,UACJ,CACA,SACA,EAAI,QACJ,IACA,SACA,WAEA,QAAK,QACL,IACA,QAEA,GACA,CAEA,IACA,6BAEA,GAUE,GACF,KACA,oCACA,QAEA,aAIA,mCACA,8CACA,iBACA,aACA,SACA,SAEA,4CACA,GAEA,MACA,wCAEA,GAEA,qBACA,kBAEA,IAeE,GACF,KACA,sCACA,WACA,aACA,cAEA,WAGA,mBAEA,WAEA,sBACA,UACA,GAEA,sBACA,WACA,UAIA,mBACA,2CACA,GAEA,GACA,qBAEA,GAYE,GACF,KACA,+CACA,IACA,OACA,MAEA,MACA,2CAAyE,uBAAmE,YAC5I,WAYA,MACA,MACA,MAEA,aACA,kCAA+D,0BAAmE,MAClI,YAEA,MAEA,IAAM,UACN,CACA,SACA,EAAM,QACN,IACA,SACA,WAEA,QAAO,QACP,IACA,QAEA,GACA,CACA,CACA,CAAI,UACJ,CACA,SACA,EAAI,QACJ,IACA,SACA,WAEA,QAAK,QACL,IACA,QAEA,GACA,CAEA,OACA,KAKA,8BAHA,kCAIA,sBAGA,IACA,6BAEA,uBAEA,GAEA,YAAkB,iBAAgC,OAClD,gEAEA,IACE,KACF,KACA,4BACA,OACA,mBACA,eACA,qBACA,aACA,qCAEA,IACA,uBACA,eACA,+DAEA,IAEA,EAyDE,GACF,KACA,8BACA,IAQA,6BAGA,qGACA,KAGA,KACA,EAAC,IAED,aAGA,qBAMA,SAEA,mCAMA,gBACA,QAEA,uBA8BA,GAYA,cACA,KACA,6BACA,6BAEA,qDACA,EAgBE,GACF,KACA,oDACA,QAEA,kBACA,gBACA,GAEA,wEAGA,cACA,+DACA,GACA,CAGA,KACA,EAcA,uCACA,cAGA,eAEA,gEACA,WAEA,aANA,UAOA,K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A,qDACA,UACA,SACA,EASE,GACF,KACA,uCACA,OAEA,mBACA,eACA,IACA,MACA,KAEA,KACA,yCAAkE,sBAAgE,MAClI,UAEA,mBACA,iBAEA,MAGA,GAAM,UACN,CACA,OACA,EAAM,QACN,IACA,OACA,UAEA,QAAO,QACP,IACA,OAEA,EACA,CACA,CACA,CAEA,QACA,SACE,GACF,KACA,wBACA,aACA,cAIA,cACA,eAKA,mDACA,UAHA,IAIA,iBACA,eACA,CAUE,GACF,KACA,6BACA,aACA,mBAGA,qDACA,KAGA,KACA,CAAC,IAED,YAGA,2BACA,kB,0BVtaA,aAcA,aAAsC,0BAAuC,SAAgB,EAG7F,CAfA,qCACA,CACC,WAED,QAEA,SAEA,OAEA,sBAmEA,E,QAhCA,aACA,IACA,8BAEA,WA/BA,yEAgCA,aACA,WACA,aACA,iBACA,WAEA,OACA,YAEA,UACA,OACA,sBACA,OACA,2BACA,OACA,gCAEA,kBACA,UACA,MACA,UAEA,eACA,uBACA,EACA,oBW7EA,aAwBA,aAAsC,0BAAuC,SAAgB,GAE7F,aAAkC,qBAA0B,uBAA0C,YAAgB,OAAO,WAAoB,SAAa,EAAS,mBAA0B,EASjM,CAweA,eACA,GACA,kBAEA,WAOA,CACA,aACA,UACA,EAIA,CACA,aACA,UACA,2CACA,CAIA,aACA,OAEA,CACA,YACA,OACA,CACA,aAEA,eAMA,CACA,eACA,SAGA,SAWA,cAEA,IAGA,KAKA,KACA,WAQA,SAEA,aAGA,IACA,yBAGA,KAEA,6BAGA,gBAKA,IACA,MACA,KAEA,KACA,gCAAkE,wBAAmE,MACrI,WAEA,kCAIA,OAAG,UACH,CACA,OACA,EAAG,QACH,IACA,OACA,UAEA,QAAI,QACJ,IACA,OAEA,EACA,CAEA,uBACA,EACA,EAKA,CACA,eACA,YAEA,OACA,EAGA,sBAEA,aAAgB,oBAAkC,OAClD,wBAEA,eAGA,SACA,EAIA,CACA,eACA,IAEA,mDAGA,SAUA,WARA,8CAGA,OAIA,IAQuB,CACvB,iBACA,IACA,MACA,KAEA,KACA,gCAAgE,mBAAmE,WACnI,SAEA,YAEA,QACA,QAE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xI,SAEA,oBAEA,GAAI,SACJ,CACA,OACA,CAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CACA,CASE,GACF,KACA,mCACA,OACA,EACE,KACF,KACA,0BACA,OACA,0BAGA,KACA,CAAC,IAED,YAGA,mB,oBCnRA,aAwCA,aAAsC,0BAAuC,SAAgB,EAkB7F,CA2BA,eACA,KAGA,gCACA,aACA,UAAE,EACF,OAGA,SACA,WAIA,gCAGA,WACA,YAEA,kCACA,GAQA,CACA,aACA,OAMA,mBAGA,iIAGA,WACA,WAGA,8DAIA,0BAEA,OACA,CAQA,CACA,eACA,OAMA,mBAGA,iIAIA,qEAEA,sBACA,EAQA,CACA,iBAEA,KACA,WAGA,QACA,MACA,KAEA,KACA,4CAAkE,sBAAgE,WAClI,WAKA,wCAEA,GACA,4BAMA,qBAJA,kBAKA,MAGA,CAAE,UACF,CACA,OACA,EAAE,QACF,IACA,QACA,WAEA,QAAG,QACH,IACA,OAEA,EACA,CAEA,sBACA,MAOA,CACA,eACA,uBACA,KAQA,CACA,aACA,IAEA,kBACA,YAIA,cAAgB,MAAkB,OAClC,OACA,6CACG,8BACH,4CACG,6EACH,IACA,MACA,KAEA,YACA,oCAA8D,yBAAmE,MACjI,WAEA,aAEA,GAAI,UACJ,CACA,OACA,EAAI,QACJ,IACA,QACA,WAEA,QAAK,QACL,IACA,OAEA,EACA,CACA,CAAG,uBACH,kBAMA,eAAiB,OAAwB,YACzC,UACA,YAEA,0DAEA,uDACA,kBAEA,KAEA,OACA,EAYA,CACA,eACA,oBACA,gBAGA,+CAEA,qCAGA,sCAGA,wBACA,EACA,CASA,CACA,aACA,SACA,aAEA,YACA,kBACA,gBAEA,yBAEA,4CACA,qDAEA,uCACA,IACA,CAUA,CACA,eACA,SACA,oBAEA,gBACA,KACA,KAEA,MACA,iCAA6D,yBAAmE,WAChI,UAEA,gCACA,IAGA,WACA,MACA,CAAE,UACF,CACA,QACA,EAAE,QACF,IACA,QACA,WAEA,QAAG,QACH,IACA,OAEA,GACA,CAEA,iBACA,IAmBA,CA5ZA,qCACA,CACC,WACD,WACA,WACA,SACA,iBACA,oBACA,mBAEA,QAEA,QAEA,OAEA,QAEA,OAEA,QAEA,OAEA,OAEA,OAEA,QAEA,OAEA,QAEA,OAEA,UAoCA,EASA,QAxBA,QACA,SACA,OACA,eACA,kBACA,iBAQA,oBCxEA,aA+BA,aAAsC,0BAAuC,SAAgB,GAE7F,eAAiD,kBAA0C,wBAA4D,oCAKvJ,CApCA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAS/iB,QAEA,QAEA,OAEA,QAEA,OAEA,OAEA,OAEA,uBAgBA,gBACA,QAQA,eAOA,cACA,CAWA,aACA,KASA,gCACA,4BAEA,iBACA,wBAEA,EACA,CAmBE,GACF,KACA,2CACA,2DAEA,sBAEA,yBACA,iBAEA,KACA,QAQE,GACF,KACA,+BACA,uBACA,0BAEA,iCAAqC,CAErC,gBAUE,GACF,KACA,qCACA,gBACA,mBAEA,iBAEA,gBACA,IAGA,yBACA,EASE,GACF,KACA,2BACA,8CACA,MAaE,GACF,KACA,4BACA,OACA,6BAaE,GACF,KACA,2BACA,OACA,4BAUE,GACF,KACA,+BACA,iBACA,SAIA,0BACA,8CAIA,mBACA,mBAGA,iCAEA,GAEA,SACA,OAEA,SAEA,gBACA,oBACA,EAEA,UACA,uBACA,EAEA,MACA,YAIA,WACA,SACA,SAGA,sBACA,qBAEA,2BACA,OAAI,iBACJ,iBAEA,2BACA,OAEA,iBAGA,0BACA,OAqBE,GACF,KACA,0BACA,uBACA,QAGA,wCACA,IAUE,GACF,KACA,2BACA,uBACA,QAGA,0CACA,IASE,GACF,KACA,0BACA,OACA,gBASE,GACF,KACA,wBACA,kEAEA,gCACA,CASE,GACF,KACA,qBACA,oBACA,IASE,GACF,KACA,gCACA,gBAEA,wBACA,eACA,WAEA,kBAIA,YACA,EACE,KACF,KACA,8BACA,gBACA,kCAEA,SAEA,KACA,wCACK,mBACL,qCACK,MACL,mCACK,GACL,MAGA,kBAEA,EASE,GACF,KACA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F,KACA,0DACA,2CAEA,wBACA,UACA,qDAEA,OACA,8BACA,QACA,EACA,KAEA,eACA,6BAEA,cACA,6BACA,QACA,EACA,KAEA,eACA,6BAEA,cACA,OACA,eAGA,QAAI,IACJ,KASE,IACF,KACA,gCACA,IACA,iBACA,uDAMA,0BACA,wBACA,OAEA,GACA,KACA,KAEA,KACA,4CAAoE,sBAAmE,WACvI,WAEA,cAEA,SACA,SAEA,gBACA,GACA,CAAM,UACN,CACA,OACA,EAAM,QACN,IACA,QACA,WAEA,QAAO,QACP,IACA,OAEA,EACA,CAEA,OACA,EAEA,CACA,MAEA,wBACA,EASE,GACF,KACA,gCACA,OACA,WAGA,qBACA,WAGA,oCACA,EAUE,GACF,KACA,kCACA,+BAEA,MACA,2BACI,GACJ,0BAEA,qBAEA,EAYE,GACF,KACA,oCACA,6BACA,YAEA,MAEA,MACA,MACA,KAEA,MACA,iCAA2D,yBAAmE,MAC9H,WAEA,gBAEA,+BACA,IACA,IAEA,GAAI,UACJ,CACA,QACA,EAAI,QACJ,IACA,QACA,WAEA,QAAK,QACL,IACA,OAEA,GACA,CAEA,OACA,EAUE,GACF,KACA,mCACA,sCAGA,MACA,cACA,sCASA,YACA,cACA,oCASA,+BACA,EAWE,GACF,KACA,kCACA,8DAEA,8BAEA,gBAAsB,MAAqB,EAC3C,6BAGA,oCACA,EAWE,GACF,KACA,6BACA,kBACA,IAIA,mBACA,EAIA,yBACA,KAIA,kHACA,KAIA,YACA,MACA,KAEA,KACA,0CAAiE,qBAAmE,WACpI,WAEA,cAEA,SACA,SAEA,4CACA,GAEA,QAGA,CAAI,UACJ,CACA,OACA,EAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CAEA,IACA,OACA,MAEA,MACA,6CAAmE,0BAAmE,MACtI,eAEA,sBACA,IAKA,QAAI,UACJ,CACA,SACA,EAAI,QACJ,IACA,SACA,WAEA,QAAK,QACL,IACA,QAEA,GACA,CAEA,IACA,OACA,MAEA,MACA,4CAAkE,uBAAmE,YACrI,WAEA,cAEA,SACA,SAEA,8CACA,GAEA,QACA,CAAI,UACJ,CACA,SACA,EAAI,QACJ,IACA,SACA,WAEA,QAAK,QACL,IACA,QAEA,GACA,CAEA,CACA,QAYE,GACF,KACA,2BACA,OAEA,mCAEA,8CAAuE,IAAa,EACpF,mBAGA,wBACA,uBACA,EACA,EAYE,GACF,KACA,8BACA,OAEA,mCAEA,8CAA0E,IAAe,EACzF,mBAGA,wBACA,0BACA,EACA,EAYE,GACF,KACA,2BACA,yCAA0E,IAAe,EACzF,mBAGA,MACA,MACA,KAEA,MACA,iCAA+D,yBAAmE,MAClI,cAEA,yBACA,IAGA,QAAI,UACJ,CACA,QACA,EAAI,QACJ,IACA,QACA,WAEA,QAAK,QACL,IACA,OAEA,GACA,CAEA,CACA,QAQE,GACF,KACA,gCACA,sBACA,MAgBE,GACF,KACA,8BACA,kCAEA,uBACA,mBAEA,GACA,KACA,KAEA,MACA,iCAA2D,yBAAmE,MAC9H,WAEA,4BAEA,IAAK,UACL,CACA,QACA,EAAK,QACL,IACA,QACA,WAEA,QAAM,QACN,IACA,OAEA,GACA,CACA,CACA,yBAEA,EAUE,GACF,KACA,4BACA,yBACA,EAQE,GACF,KACA,gCACA,qBACA,MAYE,GACF,KACA,2BACA,yCAAyE,IAAe,EACxF,mBAGA,MACA,MACA,KAEA,MACA,iCAAgE,yBAAsE,MACtI,cAEA,wBACA,IAGA,QAAI,UACJ,CACA,QACA,EAAI,QACJ,IACA,QACA,WAEA,QAAK,QACL,IACA,OAEA,GACA,CAEA,CACA,QAYE,GACF,KACA,8BACA,OAEA,mCAEA,8CAAyE,IAAe,EACxF,mBAGA,wBACA,yBACA,EACA,EAYE,GACF,KACA,+BACA,yCAAyE,IAAe,EACxF,mBAGA,uEACA,YAEA,UACA,YACA,SAGA,OACA,MAEA,OACA,KAUE,GACF,KACA,uCACA,8BACA,EASE,GACF,KACA,qCACA,mCACA,EASE,GACF,KACA,wCACA,sCACA,EASE,GACF,KACA,gEACA,2CAEA,wBACA,UACA,gEAEA,OACA,OACA,eAGA,QAAI,IACJ,KASE,IACF,KACA,2BACA,uBACA,MASE,GACF,KACA,wBACA,OACA,0BAGA,KACA,CAAC,IAMiB,SAGlB,2BCjqCA,aAEA,qCACA,CAUA,WAYA,E,QAXA,aACA,YACA,MACA,eAEA,OACA,iBAEA,SACA,iBCnBA,aA6CsC,eACrC,IAAI,GAAU,EAAK,IACnB,GAAI,EAAa,EACjB,MAAI,CACH,QAGD,MAAI,GAAgC,UAAhB,QAAO,MAC1B,IAAI,GAAgB,EACpB,GAAI,EAAa,EAAW,QAAQ,IAAc,WACjD,OAAO,iBAAmB,EAAW,WAAa,EAClD,KAED,SAAO,CAAC,GAAS,OAAO,GAAY,OAAO,CAAC,IAAgB,KAC5D,KAED,OAAO,CAAC,GAAS,KACjB,KAED,CACmB,aAElB,IAAI,GAAS,KAAK,SAAS,mBAAmB,KAAK,UAC/C,YAEY,QAFL,+DAEX,GACA,K,CAtED,EAAO,QAAmB,WACzB,IAGA,eAAK,SAAoB,UACxB,OAAO,MAAK,IAAc,WACzB,IAAI,GAAU,EAAuB,EACrC,SAAG,GACF,GAAO,UAAY,EAAK,GAAK,IAAM,EAEnC,IAED,CAPM,GAOJ,KACH,GAGD,IAAK,EAAsB,aAC1B,CAAsB,QAAnB,QAAO,KACT,EAAU,CAAC,CAAC,KAAM,EACnB,UACI,GAAJ,MAAQ,EAAI,IAAG,EAAI,KAAK,OACnB,MAAK,KAAK,GACd,GAAiB,QAAd,QAAO,KACT,EAEF,WAAI,EAAI,EAAG,EAAI,EAAQ,OAAQ,IAC9B,IAAI,GAAO,EAKX,GAAkC,QAA/B,QAAO,GAAK,IAAoB,EAAuB,EACzD,MAAG,GAAc,CAAC,EACjB,KAAK,GACC,EACN,MAAK,GAAK,IAAM,EAAK,GAAK,UAAY,EAEvC,OAAK,KAEN,GACD,CACD,EACA,CA1CD,mBCLA,aAcA,eAAiD,kBAA0C,wBAA4D,qCAEvJ,eAAiD,KAAa,2BAAyF,sHAAuF,EAE9O,eAA0C,0BAA+D,8FAAuG,6CAAyE,aAAe,mCAA6E,oFAAuH,EAc5e,CA9BA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAE/iB,QAEA,MAEA,WAAsC,0BAAuC,SAAgB,oBAqB7F,cAQA,QAUA,6DAEA,sBACA,EACA,CASA,YAxBA,QAyBA,KACA,wBACA,mBACA,KAME,GACF,KACA,sBACA,OACA,SAQE,GACF,KAUA,6BACA,sBAIA,8BACA,KACE,GACF,KACA,qBACA,aACA,KACA,iBACA,yBAEA,iBACA,CAGA,KACA,CAAC,aAED,U,8CCvHA,CAEA,qCACA,CACC,WAED,6EAAoG,cAAmB,EAAE,aAAmB,kGAA8H,EAE1Q,MAEA,OAEA,WAAsC,0BAAuC,SAAgB,EAG7F,KAMA,oDAGA,mCAGA,mFAGA,oEAGA,2EAGA,0BAQA,+EAEA,U,6CC3CA,CA6EA,eACA,WAAe,MAAmB,WAClC,SACA,SACA,SACA,GACA,iBAAiB,YAA2B,OAC5C,uBAEA,IAAQ,eAAuB,OAC/B,8BAEA,GAAG,KACH,QACA,QAAiB,YAAuB,OACxC,wBAEA,aAA2B,qBAC3B,EACA,CACA,EAEA,aACA,QACA,MACA,OAAe,MAAiB,WAChC,SACA,OACA,OACA,OACA,OACA,MAAc,wBACd,KACA,mBAGA,gBAHgC,YAEhC,IAEA,OACA,GAEA,eACA,WACA,gBACA,kBAEA,mIACA,MACA,mBACA,IAEA,+BAEA,2BAEA,sBALG,mBAMD,WACF,oCAEA,wBAEA,4EAEA,aACA,0BACA,mBACA,GACA,iBAEA,GAEA,aACA,8BACA,6BAEA,iBACA,WACA,GACA,EAEA,aACA,8BACA,4BACA,uBAEA,mBACA,WACA,GACA,EAEA,eACA,mCACA,oBACA,GACA,GAEA,eACA,SAEA,iBACA,OACA,cACA,oBACA,sBACA,KAAE,QACF,WACA,wBACA,wCACA,wCACA,yBACA,6BACA,mBACA,eACA,GACA,KACA,4BACA,KAEA,QACA,iBACA,eACA,GACA,EAGA,YAEA,cACA,MACA,sDACA,UACA,WACA,EACA,KAEA,IACA,EAWA,mBACA,cAEA,SACA,oCACE,OACF,+BACA,OACA,iCACA,MACA,0BAEA,kBAEA,EACA,EAEA,eACA,SACA,QAEA,SACA,0BAGA,KACA,gCACE,MACF,QACA,4BAEA,kDACA,GACA,EAEA,iBACA,SACA,QAOA,8CAEA,4BACA,SAGA,IAEA,OAAuD,6GAGvD,0BAA6B,MAE7B,iBAEA,gCAEA,GACA,uBACA,GA7RA,GACA,mBACA,IACA,oBACA,8CACA,YACA,CACA,CACA,YAMA,gDACA,IACA,gBACA,IACA,wBACA,OACA,4CAEA,MACA,EACA,CAAE,aACF,+BACA,EACA,KACA,OACA,EACA,cAEA,uBACA,+BACA,iDAGA,kEACA,yCAIA,uDAGA,qDAGA,oDAEA,kBACA,cAEA,cACA,QACA,QAAgB,MAAmB,WACnC,SACA,SACA,MACA,cACA,EACA,MACA,SACA,OACA,EACA,WAAgB,QAAsB,OACtC,WACA,cACA,WAAkB,YAA2B,OAC7C,YACA,gBACA,GAEA,CACA,GA2IA,gBACA,IAEA,0BACA,aACA,yBACA,KACA,CAAC,qBChOD,aAyCA,aAAsC,0BAAuC,SAAgB,GAE7F,eAAiD,kBAA0C,wBAA4D,oCAuEvJ,CA0jBA,mBACA,qBACA,IACA,MACA,KAEA,KACA,gCAA6D,qBAAmE,MAChI,SAEA,cAEA,EAAG,SACH,CACA,OACA,CAAG,QACH,IACA,OACA,UAEA,QAAI,QACJ,IACA,OAEA,EACA,CAEA,CACA,MAEA,oBACA,6BAEA,WACA,cACA,mBACA,WAGA,wBACA,2BAEA,MAMA,CA1tBA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAO/iB,IAEA,UA8sBA,UACA,WACA,E,EA9sBA,QAEA,SAEA,OAEA,OAEA,OAEA,OAEA,OAEA,QAEA,OAEA,OAEA,OAEA,uBA+EA,aACA,QAQA,QAQA,qBACA,QAWA,aACA,KACA,sBACA,yCAAyE,IAAa,EACtF,mBAGA,4BAEA,EACA,IAYE,GACF,KACA,+BACA,kBAAqB,MACrB,GAaE,GACF,KACA,iCACA,8DAEA,KAEA,kBACA,iBAEA,KACA,4BAGA,uBAEA,0BACA,SACA,EACA,oBACA,kBAGA,IACA,IAiBE,GACF,KACA,wBACA,uBACA,0BAGA,oBACA,SACA,EACA,oBAGA,OACA,IAgCE,GACF,KACA,6BACA,oCACA,oBAEA,EACA,IAyBE,GACF,KACA,gCACA,oCACA,qBAEA,EACA,IAiBE,GACF,KACA,6BACA,8BACA,yBAGA,4BAGA,UAKA,MACA,MACA,KAEA,KACA,iCAA8D,sBAAgE,WAC9H,WAGA,wDAGA,MAKA,yBAEA,sCAAwC,qCAKxC,2CAMA,uBAGA,uCACA,4BACA,2BAGA,cAGA,eAGA,GACA,OACA,CAAM,UACN,CACA,OACA,EAAM,QACN,IACA,QACA,WAEA,QAAO,QACP,IACA,OAEA,EACA,CACA,EACA,CAEA,EACA,SAoBE,GACF,KACA,iCACA,8BACA,yBAGA,4BAGA,UAKA,MACA,MACA,KAEA,MACA,iCAAgE,yBAAmE,MACnI,cAGA,wCAMA,UACA,8CAIA,eAEA,oBACA,cAOA,KACA,mCAKA,8BAXA,QACA,GAGA,uBAUA,GAEA,MAAM,UACN,CACA,QACA,EAAM,QACN,IACA,QACA,WAEA,QAAO,QACP,IACA,OAEA,GACA,CACA,EACA,CAEA,EACA,MAoCE,GACF,KACA,4BACA,8BACA,uBAGA,4BAGA,UAIA,MAGA,oBACA,cAGA,+BAAuD,kCAIvD,kCACA,iEAIA,uFACA,MACA,KAEA,KACA,iCAAgE,yBAAmE,MACnI,cAGA,wCAIA,iBAGA,EAEA,MAAM,UACN,CACA,OACA,EAAM,QACN,IACA,QACA,WAEA,QAAO,QACP,IACA,OAEA,EACA,CACA,EACA,CAEA,EACA,SAUE,GACF,KACA,kCAEA,IACA,MACA,KAEA,KACA,yCAAgE,mBAAmE,WACnI,SAIA,kBACA,kCACA,cAEA,4BAGA,SACA,MACA,MAEA,aACA,iDAAyE,0BAAmE,MAC5I,YAEA,gBAAgD,UAEhD,IAAM,UACN,CACA,SACA,EAAM,QACN,IACA,SACA,WAEA,QAAO,QACP,IACA,QAEA,GACA,CACA,CACA,CAAI,UACJ,CACA,OACA,EAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CACA,CAGA,KACA,CAGA,qBCzqBA,aA+BA,aAAsC,0BAAuC,SAAgB,GAE7F,eAAiD,kBAA0C,wBAA4D,oCAUvJ,CAwcA,aAEA,OACA,kCAGA,mBACA,QAIA,iCACA,2CACA,CACA,G,CA/fA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAS/iB,QAEA,QAEA,OAEA,OAEA,OAEA,QAEA,OAEA,uBAqBA,cACA,QASA,mBAQA,0BAEA,QACA,yBAEA,EASA,aACA,YACA,yBACA,aACA,aASE,GACF,KAWA,sBACA,OACA,qBASE,GACF,KACA,4BACA,+BACA,EAQE,GACF,KACA,8BACA,8BACA,WASE,GACF,KACA,iCACA,oCACA,EAWE,GACF,KACA,uCACA,0CACA,EAQE,GACF,KACA,0BACA,CACA,QAcE,GACF,KACA,iCACA,OAEA,KACA,KACA,KAEA,KACA,gCAAgE,qBAAgE,MAChI,SAEA,mCAEA,GAAI,SACJ,CACA,OACA,CAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CAEA,OACA,EAsBE,GACF,KACA,iCACA,qCACA,EAQE,GACF,KACA,kCACA,qCACA,EAUE,GACF,KACA,oCACA,KAEA,MACA,MACA,KAEA,KACA,gCAA2D,qBAAmE,MAC9H,SAEA,eAEA,IAAI,SACJ,CACA,OACA,CAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CAEA,8BACA,EAWE,GACF,KACA,kCACA,8DAEA,iCAEA,GACA,KACA,KAEA,KACA,gCAA2D,qBAAmE,MAC9H,SAEA,eAEA,IAAI,SACJ,CACA,OACA,CAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CAEA,OACA,EASE,GACF,KACA,yBACA,IAEA,MACA,KACA,KAEA,KACA,6CAAoE,qBAAmE,MACvI,SAEA,eAEA,SAAI,SACJ,CACA,OACA,CAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CAEA,OACA,EAUE,GACF,KACA,2BACA,uBACA,MASE,GACF,KACA,0BACA,uBACA,SASE,GACF,KACA,wBACA,OACA,oBASE,GACF,KACA,qBACA,OACA,KASE,GACF,KACA,uBACA,OACA,KACE,KACF,KACA,4BACA,IAEA,MACA,KACA,KAEA,KACA,gCAA0D,qBAAmE,MAC7H,SAEA,QAEA,+BAGA,8BAGA,GAAI,SACJ,CACA,OACA,CAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CAEA,cACA,EAGA,KACA,CAKY,IAGZ,6BClfA,aAqBA,eAAiD,kBAA0C,wBAA4D,oCAOvJ,CA1BA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAS/iB,QAEA,MAEA,WAAsC,0BAAuC,SAAgB,mBAc7F,cACA,QAUA,oBA8CA,CAUA,aACA,KACA,yBACA,qBAEA,+CAGA,mBAEA,MACA,CAQE,KACF,KAUA,4BACA,mBACA,YACE,GACF,KACA,0BACA,OACA,kCAGA,KACA,CAAC,IAED,U,mBC/IA,aAgBA,aAAsC,0BAAuC,SAAgB,GAE7F,eAAiD,kBAA0C,wBAA4D,qCAEvJ,eAAiD,KAAa,2BAAyF,sHAAuF,EAE9O,eAA0C,0BAA+D,8FAAuG,6CAAyE,aAAe,mCAA6E,oFAAuH,EAY5e,CAhCA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAE/iB,QAEA,QAEA,OAEA,yBAqBA,aAGA,eAEA,6DACA,WAEA,YANA,QAOA,KAQA,8BACA,+EAEA,wFACA,EAME,GACF,KAKA,qBACA,OACA,QACE,KACF,KACA,0BACA,OACA,wCAGA,KACA,CAAC,aAED,U,mBCjFA,aAuBA,aAAsC,0BAAuC,SAAgB,GAE7F,eAAiD,kBAA0C,wBAA4D,oCAKvJ,CAwoBA,aACA,iDAKA,Y,CA1qBA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAS/iB,QAEA,QAEA,OAEA,uBAkBA,cACA,8DAEA,YAOA,2CAOA,2EACA,EAeA,aACA,YACA,mDACA,2CAEA,wBACA,UACA,wCAA+D,iBAA2C,2BAE1G,OACA,OACA,eAGA,QAAI,IACJ,KAQE,IACF,KAmBA,8BACA,4CAAoE,WACpE,gDAGA,iCACA,uCAGA,gCACA,oCAGA,iBACA,EAmBE,GACF,KACA,6BACA,0CAEA,0CACA,oBAGA,4CAAgE,WAChE,iBACA,cAGA,0BACA,4BAGA,YACA,mCAGA,iBACA,EASE,GACF,KACA,2BACA,iEACA,IAUE,GACF,KACA,oCACA,+CACA,IAaE,GACF,KACA,iCACA,4DAEA,KACA,cAGA,oEACA,6DAEA,eACA,CA+BE,GACF,KACA,iCACA,IAEA,iCAGA,4BAGA,kCAGA,gCAGA,8BAIA,gCAGA,OACA,CAwBE,GACF,KACA,mCACA,2BAGA,YACA,aAEA,mCAGA,aAGA,+BAGA,WAGA,aACA,EAGA,OACA,KAYE,GACF,KACA,4BACA,2DAEA,0BAEA,mBACA,EASE,GACF,KACA,oCACA,0CACA,IAiBE,GACF,KACA,qDACA,2DAEA,kBAEA,4CAEA,wBACA,UACA,gBACA,OAEA,oCACA,GACA,KACA,KACA,gBACA,aAEA,gBACA,0BACA,QACA,GACA,KAEA,YACA,aACA,KAEA,SACA,IACA,YACA,EAEA,UACA,WACA,GAEA,UACA,WACA,mBACA,GACA,SAEA,OACA,WACA,UAEA,SACA,UAGA,aACA,cAEA,MACA,QACA,GACA,KAEA,MAEA,OACA,oBAEA,QACA,oBAEA,QACA,QACA,eAGA,QAAI,+BACJ,KAgBE,IACF,KACA,yDACA,2DAEA,kBAEA,4CAEA,wBACA,UACA,uBAEA,qBACA,UACA,IAEA,aACA,GACA,KACA,KACA,gBACA,aAEA,gBACA,0BACA,QACA,GACA,KAEA,YACA,aACA,KAEA,iBACA,IACA,YACA,EAEA,UACA,WACA,GAEA,UACA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,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAS/iB,QAEA,SAEA,OAEA,sBA6CA,cACA,QAUA,eAQA,+BACA,EAaA,aACA,KAQA,wBACA,mBACA,OAmBE,GACF,KACA,0BACA,QACA,QAEA,OACA,oBACA,iBAGA,aACA,EAYE,GACF,KACA,+BACA,kEAAsF,gBAEtF,gBACA,+BAEA,OACA,qCACA,OAGA,aACA,EAaE,GACF,KACA,qCACA,+DAEA,0BACA,oBAEA,KAEA,gBACA,IAGA,yBACA,EAME,GACF,KACA,yBACA,iCACA,MASE,GACF,KACA,gCACA,wBACA,EASE,GACF,KACA,gCACA,wBACA,EAWE,GACF,KACA,gCACA,oBACA,SAQE,GACF,KACA,mCACA,oBACA,MASE,GACF,KACA,kCACA,mBACA,EAQE,GACF,KACA,mCACA,2BACA,EASE,GACF,KACA,mCACA,2BACA,EAME,GACF,KACA,kCACA,aACA,OAQE,GACF,KACA,yBACA,IAEA,yBACA,qCAGA,UACA,CAsBE,GACF,KACA,sBACA,IAEA,YACA,aAGA,SAMA,+DAGA,wFACA,EAaE,GACF,KACA,4BACA,IAEA,YACA,aAGA,SAMA,qEAGA,wFACA,EAYE,GACF,KACA,2BACA,OACA,EAWE,GACF,KACA,0BACA,aACA,6BAIA,WADA,IAUE,GACF,KACA,4BACA,YAEA,kDACA,IASE,GACF,KACA,gCACA,YAEA,kDACA,IAUE,GACF,KACA,qBACA,WAEA,OACA,YAGA,aACA,EAUE,GACF,KACA,yBAEA,mBACA,KAIA,yBACA,IAGA,KACA,CAAC,IAED,U,mBC5fA,aAcA,eAAiD,kBAA0C,wBAA4D,qCAEvJ,eAAiD,KAAa,2BAAyF,sHAAuF,EAE9O,eAA0C,0BAA+D,8FAAuG,6CAAyE,aAAe,mCAA6E,oFAAuH,EAmB5e,CAnCA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAE/iB,QAEA,MAEA,WAAsC,0BAAuC,SAAgB,oBA0B7F,aAGA,eAEA,6DACA,WAEA,YANA,QAOA,KAOA,wBACA,mBACA,YAQE,GACF,KACA,8BACA,+BACA,EAME,GACF,KACA,4BAQE,KACF,KACA,0BACA,OACA,oCAGA,KACA,CAAC,aAED,U,mBC9FA,aAqBA,eAAiD,kBAA0C,wBAA4D,oCA+BvJ,CAlDA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAS/iB,QAEA,KAEA,WAAsC,0BAAuC,SAAgB,mBA4C7F,kBACA,WAQA,iBAEA,WAMA,+BAGA,4FAMA,+BASA,iGAQA,qBACA,CAWA,aACA,KAWA,sBACA,OACA,cASE,GACF,KACA,0BACA,qBAEA,gBACA,kCAGA,cACA,CAYE,GACF,KACA,+BACA,kEAAsF,gBAEtF,gBACA,+BAEA,OACA,qCACA,OAGA,aACA,EASE,GACF,KACA,gCACA,mCACA,EASE,GACF,KACA,gCACA,mCACA,EAWE,GACF,KACA,gCACA,sBACA,eAQE,GACF,KACA,mCACA,sBACA,kBACE,GACF,KACA,4BACA,yCACA,gDAUE,GACF,KACA,2BACA,kBACA,MAUE,GACF,KACA,0BACA,gCACA,qCAcE,GACF,KACA,0BACA,wCACA,UASE,GACF,KACA,uBACA,sBACA,MASE,GACF,KACA,qBACA,sBACA,IAUE,GACF,KACA,yBACA,sBACA,QAGA,KACA,CAAC,IAED,U,mBCvUA,aAmGA,aACA,gDACA,CAUA,CA0DA,eACA,oCACA,6CAEA,6DACA,uBACA,iCAEA,qBACA,gBAEA,EACA,CACA,C,CApLA,qCACA,CACC,WACD,wEACA,qBACA,iBAyGA,WACA,4BACA,EAWA,EArHA,uBAsHA,WACA,UACA,gBAEA,KAEA,IAEA,EA7HA,gBA0IA,aACA,aAEA,SACA,gBACA,kBAGA,kBACA,EAOA,EAzJA,EAEA,qBAwJA,WACA,gBACA,EAEA,EApFA,YAnCA,6BACA,u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A,EAgBA,aACA,KAUA,2BACA,uBACA,WACI,YACJ,oBAGA,kEACA,OAGA,YACA,MACA,KAEA,KACA,2CAAgE,mBAAgE,WAChI,UAEA,MAEA,MACA,MACA,MAEA,aACA,yCAA8E,0BAAmE,MACjJ,eAEA,qBACA,CACA,MACA,KAEA,CAAM,UACN,CACA,SACA,EAAM,QACN,IACA,SACA,WAEA,QAAO,QACP,IACA,QAEA,GACA,CAEA,KACA,GAEA,QACA,CAAI,UACJ,CACA,OACA,EAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CAEA,CACA,QAQE,GACF,KACA,sDACA,eAEA,6CAEA,0BACA,UACA,GACA,KACA,KACA,iBACA,wBAEA,gBACA,0BACA,SACA,GACA,KAEA,YACA,cACA,4BAEA,OACA,GACA,aACA,EAEA,UACA,YACA,GAEA,UACA,YACA,qBACA,GACA,UAEA,OACA,YACA,WAEA,SACA,UAGA,aACA,eAEA,MACA,SACA,GACA,KAEA,MAEA,OACA,qBAEA,QACA,qBAEA,QACA,QACA,gBAGA,QAAI,+BACJ,KAaE,IACF,KACA,gCACA,OAEA,KACA,KACA,KAEA,KACA,2CAAkE,sBAAmE,MACrI,UAEA,+BACA,YAGA,GAAI,UACJ,CACA,OACA,EAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CAEA,uCACA,IAaE,GACF,KACA,+BACA,OAEA,KACA,KACA,KAEA,KACA,2CAAkE,sBAAmE,MACrI,UAEA,4BACA,UAGA,GAAI,UACJ,CACA,OACA,EAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CAEA,uCACA,IAYE,GACF,KACA,mCACA,YAEA,+DACA,IAYE,GACF,KACA,kCACA,YAEA,4DACA,IAmBE,GACF,KACA,4BACA,4DAEA,mBACA,6BAEA,2BAA8B,CAC9B,iBAQE,GACF,KACA,kCACA,CACA,6BACA,4CAA+B,CAE/B,kBAcE,GACF,KACA,6BACA,OAEA,4DAEA,gBAGA,4BACA,sBACA,6BAGA,iIACA,mBACA,GACA,EAGA,sCAIA,QAEA,sBACA,MACA,KAEA,MACA,iCAA+D,yBAAmE,MAClI,WAEA,sBAEA,GAAI,UACJ,CACA,QACA,EAAI,QACJ,IACA,QACA,WAEA,QAAK,QACL,IACA,OAEA,GACA,CAEA,2BAEA,2BAA8B,CAC9B,kBAQE,GACF,KACA,yBACA,gCACA,WAaE,GACF,KACA,8BACA,4BACA,qBAEA,mBACA,GAUE,GACF,KACA,kCACA,YAEA,mBACA,0CAEA,IAUE,GACF,KACA,gCACA,YAEA,kBACA,0CAEA,IAaE,GACF,KACA,8BACA,IAMA,uCAGA,kIAEA,MAIA,8CAEA,oBACA,aAGA,YACA,yDAEA,qCAEA,IASE,GACF,KACA,gCACA,wBACA,EAWE,GACF,KACA,gCACA,oBACA,SAQE,GACF,KACA,mCACA,oBACA,MASE,GACF,KACA,gCACA,wBACA,EAWE,GACF,KACA,kCACA,uBACA,8BACA,oBAEA,qCAAmC,iBACnC,iBACA,CAYE,GACF,KACA,mCACA,mBACA,wBAEA,gCAAmC,mBAEnC,kBAaE,GACF,KACA,kCACA,wBACA,sBAEA,gCAAmC,mBAEnC,kBAYE,GACF,KACA,mCACA,oBAEA,iCAEA,kEAEA,UACA,KACA,KAEA,KACA,gCAA4D,qBAAmE,WAC/H,WAEA,cAEA,SACA,SAGA,yBACA,aAEA,GACA,CAAK,UACL,CACA,OACA,EAAK,QACL,IACA,OACA,UAEA,QAAM,QACN,IACA,OAEA,EACA,CAEA,aAEA,+BAAmC,6BACnC,iBACA,CAUE,GACF,KACA,qCACA,IACA,0BAGA,iBACA,0BACA,kBAEA,iDACA,IA+BE,GACF,KACA,8DACA,yCAEA,8CAEA,0BACA,UACA,QACA,SACA,KACA,KACA,iBACA,4BAEA,gBACA,0BACA,SACA,GACA,KAEA,SACA,oBAEA,OACA,SACA,GACA,KAEA,gBACA,GAEA,OACA,IACA,MACA,MACA,kBACA,4BAEA,gBACA,8BACA,SACA,GACA,KAEA,UAEA,6CACA,SACA,GACA,KAEA,gBACA,MAEA,SACA,IACA,cACA,GAEA,UACA,YACA,GAEA,UACA,YACA,qBACA,IA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,GACA,KACA,KACA,gBACA,wBAEA,gBACA,0BACA,QACA,GACA,KAEA,YACA,aACA,4BAEA,OACA,GACA,YACA,EAEA,UACA,WACA,GAEA,UACA,WACA,mBACA,GACA,SAEA,OACA,WACA,UAEA,SACA,UAGA,aACA,cAEA,MACA,QACA,GACA,KAEA,MAEA,OACA,oBAEA,QACA,oBAEA,QACA,QACA,eAGA,QAAI,+BACJ,KAWE,IACF,KACA,gCACA,OAEA,KACA,KACA,KAEA,KACA,2CAAkE,qBAAmE,MACrI,SAEA,8BACA,YAGA,EAAI,SACJ,CACA,OACA,CAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CAEA,uCACA,IAUE,GACF,KACA,+BACA,OAEA,KACA,KACA,KAEA,KACA,2CAAkE,qBAAmE,MACrI,SAEA,2BACA,UAGA,EAAI,SACJ,CACA,OACA,CAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CAEA,uCACA,IAUE,GACF,KACA,mCACA,YAEA,+DACA,IAUE,GACF,KACA,kCACA,YAEA,4DACA,IAUE,GACF,KACA,2BACA,mBACA,OAGA,oDACA,mBAGA,+BACA,WACI,YACJ,oBAGA,kEACA,OAGA,YACA,MACA,KAEA,KACA,2CAAkE,mBAAmE,WACrI,SAEA,MAEA,KACA,KACA,KAEA,YACA,yCAA8E,yBAAmE,MACjJ,cAEA,oBACA,CACA,KACA,KAEA,CAAM,UACN,CACA,OACA,EAAM,QACN,IACA,QACA,WAEA,QAAO,QACP,IACA,OAEA,EACA,CAEA,KACA,EAEA,QACA,CAAI,UACJ,CACA,OACA,EAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CAEA,CACA,QAWE,GACF,KACA,6BACA,uBACA,WAGA,kCACA,+BAGA,mBACA,EAIA,YACA,KAIA,YACA,MACA,KAEA,KACA,+CAAsE,qBAAmE,WACzI,KAEA,UAEA,gBAEA,MACA,KACA,MAEA,aACA,6CAAkF,yBAAmE,MACrJ,cAEA,YAEA,8DACA,CACA,KACA,KAIA,CAAM,UACN,CACA,SACA,EAAM,QACN,IACA,QACA,WAEA,QAAO,QACP,IACA,QAEA,GACA,CAEA,KACA,EAEA,QAGA,CAAI,UACJ,CACA,OACA,EAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CAEA,CACA,QAQE,GACF,KACA,kCACA,cACA,cACA,qBAEA,UAaE,GACF,KACA,+BACA,MAEA,cACA,MACA,KAEA,KACA,gCAA+D,qBAAmE,WAClI,QAEA,uBACA,6BAGA,gEACA,EACA,CAAI,SACJ,CACA,OACA,CAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CAEA,2BACA,YACA,SAQE,GACF,KACA,yBACA,gBACA,mCAEA,mDACA,WAaE,GACF,KACA,8BACA,4BACA,qBAEA,mBACA,GAUE,GACF,KACA,kCACA,YAEA,mBACA,0CAEA,IAUE,GACF,KACA,gCACA,YAEA,kBACA,0CAEA,IAaE,GACF,KACA,8BACA,IAMA,uCAGA,iIAEA,MAIA,8CAEA,oBAEA,MACA,yDAEA,qCAEA,IAUE,GACF,KACA,qCACA,IACA,0BAGA,iBACA,0BACA,kBAEA,iDACA,IAUE,GACF,KAYA,8BACA,IACA,MACA,KAEA,KACA,2CAAkE,qBAAmE,MACrI,YAEA,uBAQA,mIAAsJ,gCAGtJ,GAAI,SACJ,CACA,OACA,CAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CAEA,6CACA,GACE,GACF,KACA,uBACA,aACA,OASE,GACF,KACA,mCACA,aACA,mBAYE,GACF,KACA,uBACA,kBACA,aAEA,6CACA,qCAEA,0CACA,EASE,GACF,KACA,sBACA,kBACA,aAEA,6CACA,uCAEA,wCACA,EASE,GACF,KACA,4BACA,6CACA,WAQE,GACF,KACA,2BACA,qBACA,MAQE,GACF,KACA,2BACA,+BACA,kBASE,GACF,KACA,gCACA,aACA,mBAGA,gBACA,IACE,KACF,KACA,uCACA,UACA,kBAEA,GACA,CAGA,KACA,CAAC,IAED,YAGA,kBAMA,0BvFr7BA,aA+DA,cAAsC,6BAAuC,SAAgB,IAE7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,QACF,IACA,SACA,WAEA,QAAG,QACH,IACA,QAEA,GACA,CAEA,wDACA,GAUA,CACA,cACA,WAEA,wBACA,wCAGA,kBAEA,2BACA,yBAGA,GACA,EASkD,CAClD,cACA,8BACA,6DAGA,MACA,8DAIA,sCAGA,wDAGA,yEAGA,oDACA,EAOkD,CAClD,iBAEA,gBACA,0BACA,QAEA,0BACA,GASqB,CACrB,iBAEA,wCACA,SAIA,YACA,OACA,MAEA,MACA,qDAA8E,0BAAmE,MACjJ,gBAGA,oBAKA,0EACA,IAKA,QAAE,UACF,CACA,SACA,EAAE,QACF,IACA,SACA,WAEA,QAAG,QACH,IACA,QAEA,GACA,CAEA,IACA,OACA,MAEA,MACA,kDAA2E,0BAAmE,MAC9I,eAEA,qDACA,IAKA,QAAE,UACF,CACA,SACA,EAAE,QACF,IACA,SACA,WAEA,QAAG,QACH,IACA,QAEA,GACA,CAEA,IACA,OACA,MAEA,MACA,qDAA8E,0BAAmE,MACjJ,aAGA,oBAKA,gCACA,wCAGA,KAAE,UACF,CACA,SACA,EAAE,QACF,IACA,SACA,WAEA,QAAG,QACH,IACA,QAEA,GACA,CAEA,IACA,OACA,MAEA,MACA,kDAA2E,0BAAmE,MAC9I,YAEA,kBACA,gCAGA,IAAE,UACF,CACA,SACA,EAAE,QACF,IACA,SACA,WAEA,QAAG,QACH,IACA,QAEA,GACA,CAEA,IACA,OACA,MAEA,MACA,kDAA2E,0BAAmE,MAC9I,YAEA,kBACA,iBAGA,GAAE,UACF,CACA,SACA,EAAE,QACF,IACA,SACA,WAEA,QAAG,QACH,IACA,QAEA,GACA,CAEA,CACA,QAOqB,CACrB,iBAEA,wCACA,SAIA,YACA,OACA,MAEA,MACA,qDAAgF,0BAAsE,MACtJ,gBAGA,oBAKA,4EACA,KAKA,QAAE,UACF,CACA,SACA,EAAE,QACF,IACA,SACA,WAEA,QAAG,QACH,IACA,QAEA,GACA,CAEA,+BACA,kBAIA,YACA,OACA,MAEA,MACA,kDAA6E,0BAAsE,MACnJ,eAGA,sDACA,IAKA,QAAE,UACF,CACA,SACA,EAAE,QACF,IACA,SACA,WAE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/iB,QAEA,OAEA,OAEA,OAEA,OAEA,QAEA,OAEA,sBAyBA,cACA,QAQA,QAQA,2BAQA,uCAYA,0CAYA,8CASA,QASA,aACA,KAcA,yBACA,YAGA,YAFA,YAGA,QAEA,GAMA,uCAGA,yCAMA,uBAEA,qCACA,kBAIA,cACA,yBACI,qCAMJ,wBAGA,mEAEA,uBAEA,qBAEA,GACA,IASE,GACF,KACA,uBACA,IAEA,MACA,uCACI,WACJ,iCAOA,4BAGA,oEACA,IAUE,GACF,KACA,4BACA,IAEA,YACA,qCAEA,GAGA,sBACA,EAUE,GACF,KACA,0BACA,IAIA,aAEA,YALA,EACA,EACA,KAIA,sBACA,sBACA,MAEA,EACA,0BAEI,KACJ,sBACA,gBACA,MAEA,EACA,QAGA,QACA,MACA,yBACA,+BAGA,IAMA,sBAGA,+DACA,wBAEA,+CACA,mDACA,4CAEA,sBAEA,GACA,CAYE,GACF,KACA,yBACA,0BACA,EAYE,GACF,KACA,0BACA,2BACA,EAYE,GACF,KACA,4BACA,6BACA,EAOE,GACF,KACA,wBACA,UACA,4CACA,0CAGA,WACA,oBAEA,EAkFE,GACF,KACA,0BACA,OAEA,aAMA,sCAGA,2GAEA,EAOA,eACA,kCACA,cACA,EACA,EAUA,mBACA,CACA,sDACA,UACA,EAEA,oCACA,UACA,EAEA,EAEA,EASE,GACF,KACA,uCACA,OAEA,YAKA,mCACA,4BACA,uCAMA,SACA,uCACA,wCACK,OACL,SAEA,wCACA,wCAEA,WACA,EACA,CAGA,EACA,KACA,KAEA,KACA,gCAAsE,qBAAgE,MACtI,SAEA,aAIA,EAAI,SACJ,CACA,OACA,CAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CAEA,uBAGA,yCACA,0CAEA,GACA,YAEA,EACA,EAME,GACF,YACA,yBACA,2BACA,WAgBE,GACF,KACA,uBACA,oBACA,MAGA,KACA,CAAC,IAED,YAGA,kB,0BChmBA,aAsBA,aAAsC,0BAAuC,SAAgB,GAE7F,eAAiD,kBAA0C,wBAA4D,oCA+BvJ,CA6PA,aACA,yDACA,WAMoB,CACpB,aACA,2B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CA,QAEA,GACA,CACA,CAEA,OAEA,GAaE,GACF,KACA,oEACA,4DAEA,2BAEA,8CAEA,0BACA,UACA,6BACA,qBACA,EACA,MACA,MACA,kBACA,6BAEA,gBACA,6BACA,SACA,GACA,KAEA,UAEA,cACA,SACA,GACA,KAEA,gBACA,oBAEA,QACA,mBACA,wBAEA,QAEA,IAEA,SACA,IACA,cACA,EAEA,UACA,YACA,GAEA,UACA,YACA,qBACA,GACA,YAEA,OACA,YACA,WAEA,WACA,WAGA,aACA,eAEA,OACA,SACA,GACA,KAEA,MAEA,QACA,qBAEA,QACA,qBAEA,QACA,eACA,SACA,GACA,KAEA,gBACA,oBAEA,QACA,QACA,gBAGA,QAAI,gCACJ,KAUE,IACF,KACA,mCACA,kCACA,oCAEA,iBACA,8CACA,+BAEA,QACA,EAcE,GACF,KACA,sCACA,WAEA,wBACA,sCAEA,QAEA,SAGA,gBAEA,oCACA,YAGA,sBAAY,kBACZ,GAEA,IACA,IACA,GAEA,oBACA,yBAEA,KAEA,SAGA,uBACA,EAAK,KACL,WAEA,sFAEA,aAEA,SAGA,YACA,iBACA,WAIA,4CACA,UAAa,oBAGb,oDAEA,QAAY,kBAEZ,GAiBE,GACF,KACA,8BACA,4DAEA,qCACA,mBAIA,6CAEA,sBACA,SAGA,uBACA,yBACA,UAEA,0CAEA,qCAEA,GAAI,mBACJ,UAEA,2BACA,6BAGA,OAEA,+BAEA,aAEA,WACA,oCAEK,QAEL,kDACA,+BAEA,OACA,2BAIA,kBAEA,wBAAmC,EAAQ,MAC3C,wCAEA,MAEA,8CACA,IACA,OACA,MAEA,MACA,6DAAgG,0BAAmE,MACnK,YAEA,wBAEA,GAAM,UACN,CACA,SACA,EAAM,QACN,IACA,SACA,WAEA,QAAO,QACP,IACA,QAEA,GACA,CACA,CAEA,OAEA,GAYE,GACF,KACA,iEACA,4DACA,YACA,8CAEA,0BACA,UACA,MAEA,MACA,iCACA,SACA,GACA,KAEA,qBACA,yBAEA,cACA,SACA,EACA,KAEA,gBACA,EAEA,OACA,GACA,aACA,EAEA,UACA,QACA,gBAGA,QAAI,KACJ,KAUE,IACF,KACA,uCAGA,sBACA,yBAGA,2BACA,YAGA,4CAEA,OACA,SAEA,GAEA,kBACA,uCAEA,OAAkB,QAA6B,gBAE/C,sBACA,2BAEA,IACA,mBAEA,GAEA,OACA,GAUE,GACF,KACA,mCACA,oDACA,0DAEA,sBACA,oBAGA,IACA,IAkBE,GACF,KACA,yCACA,gCACA,uEAIA,8BAEA,iBACA,2CAGA,uBACA,yBACA,8DAGA,2CACA,OAEA,SACA,4BAIA,YACA,+BAGA,qBACA,KANA,IASA,WACA,0BAEA,OACA,2BAEA,EAAM,KACN,yBACA,2EAGA,cACA,+CAEA,EAEA,OAEA,KAcE,GACF,KACA,iCACA,gEACA,GAuBE,GACF,KACA,8CACA,yBACA,UAIA,qCAEA,OACA,SAGA,cAGA,sBACA,oBAEA,UAGA,+BAEA,UACA,WAGA,mCACA,WAEA,YAEA,IACA,CAEA,KACA,6BAEA,kBACA,oBAGA,0BACA,QAEA,GAEA,IACA,CAEA,OACA,KAaE,GACF,KACA,iCACA,mCACA,GAkBE,GACF,KACA,6CACA,WAGA,6CACA,0BAIA,iDACA,gDAGA,GACA,IAQE,GACF,KACA,0BACA,0BAEA,+CAEA,kBACA,aACA,cAEA,QAIA,uBACA,WACA,iBAGA,sBACA,IAEA,MAMA,yBACA,WACA,gBACA,SACA,SAEA,iBACA,gBACA,EAIA,gCACA,GACA,CASE,GACF,KACA,2BACA,8BACA,SASE,GACF,KACA,8BACA,8BACA,YASE,GACF,KACA,uCACA,8BACA,sBASE,GACF,KACA,8BACA,8BACA,YASE,GACF,KACA,2CACA,OACA,YAKA,yBAEA,2CACA,wCAEA,uBAEA,oBAEA,SACA,EAUE,GACF,KACA,uCACA,sBAGA,WAEA,iBACA,WACA,oCAEA,iBACA,mBAEA,GAEA,OACA,KAaE,GACF,KACA,0CACA,gIACA,YAWE,GACF,KACA,sDAEA,sDAEA,qBAGA,qEAEA,KAGA,kCAIA,qBAKA,kBAiBE,GACF,KACA,6CACA,QAEA,WAIA,2CACA,mCACA,KACA,SAGA,yCACA,wCAIA,0BAEA,+BAMA,eACA,2DAUA,uBAAsC,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ACA,KACA,mCAGA,wBAIA,kDAIA,2DAKA,qDACA,sCACI,OACJ,8CACI,OACJ,kDACI,gDACJ,wEACI,UACJ,4CAEA,SAgBE,GACF,KACA,oCAEA,oCAGA,GACA,KACA,KAEA,KACA,gCAAyD,mBAAgE,WACzH,SAEA,UACA,iEACA,UACA,MACA,QAGA,gCAKA,MACA,OACA,MAEA,aACA,oDAA+E,0BAAmE,MAClJ,YAEA,qBACA,uBACA,wCAEA,2CAEA,EAAM,UACN,CACA,SACA,EAAM,QACN,IACA,SACA,WAEA,QAAO,QACP,IACA,QAEA,GACA,CACA,CACA,CAAI,UACJ,CACA,OACA,EAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CAEA,IACA,OACA,MAEA,MACA,2DAAiF,uBAAmE,YACpJ,WAEA,YAGA,iCACA,kEAIA,oBACA,+CAEA,GACA,CAAI,UACJ,CACA,SACA,EAAI,QACJ,IACA,SACA,WAEA,QAAK,QACL,IACA,QAEA,GACA,CACA,CAaE,GACF,KACA,iCAEA,wBACA,uBAEA,mEAEA,6BACA,EACA,2BACA,yBAEA,EAaE,GACF,KACA,mCACA,wCAEA,UACA,KACA,KAEA,KACA,sBAA0C,CAAgB,gCAA6B,mBAAmE,WAC1J,SAEA,iCACA,gBACA,OAGA,GACA,EACA,CAAI,SACJ,CACA,OACA,CAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CACA,CAiBE,GACF,KACA,4CAEA,8CAGA,GACA,KACA,KAEA,KACA,gCAA2D,mBAAmE,WAC9H,UAEA,YACA,oEACA,kCACA,MACA,SACA,gBACA,oBACA,oBAGA,GACA,EACA,CAAI,UACJ,CACA,OACA,EAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CACA,CAaE,GACF,KACA,mCAEA,SACA,iBAGA,mFAGA,gBACA,yBAEA,mEACA,6CACA,GAYE,GACF,KACA,oCACA,qEACA,yDAEA,yBAA2B,WAAuB,UAElD,kBACA,MACA,KAEA,KACA,gCAA6D,mBAAmE,WAChI,SAEA,QACA,WACA,SAGA,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aACA,WAGA,EAAK,SACL,CACA,OACA,CAAK,QACL,IACA,OACA,UAEA,QAAM,QACN,IACA,OAEA,EACA,CAEA,IACA,mBAEA,KAAI,oBACJ,UAEA,cAGA,KAAE,SACF,CACA,OACA,CAAE,QACF,IACA,OACA,UAEA,QAAG,QACH,IACA,OAEA,EACA,CAEA,OACA,EAOwB,CACxB,eACA,IAEA,qBACA,SAEA,oBACA,kBAEA,kBACA,mBACA,UAEA,cAEI,mBACJ,SAEA,cAEA,KACA,YAEA,KAEA,OACA,E,CArjBA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAAE,gBAwBjjB,aACA,QAEA,QAEA,iCACA,UAmFA,aACA,KACA,sBACA,yCAAqE,IAAa,EAClF,mBAGA,MACA,MACA,KAEA,KACA,gCAA2D,qBAAgE,MAC3H,SAGA,uCACA,aAAc,MAId,0DACA,sBAGA,4BAEA,EAAI,SACJ,CACA,OACA,CAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CACA,CAgCE,GACF,KACA,wBACA,yCAAwE,IAAe,EACvF,mBAGA,MACA,MACA,KAEA,KACA,gCAA6D,mBAAmE,WAChI,SACA,MACA,KACA,KAEA,YACA,6CAAsE,mBAAmE,WACzI,SAEA,YAEA,MACA,QACA,SACA,UACA,QAGA,EACA,CAAM,SACN,CACA,OACA,CAAM,QACN,IACA,OACA,UAEA,QAAO,QACP,IACA,OAEA,EACA,CACA,CACA,CAAI,SACJ,CACA,OACA,CAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CAEA,OACA,KAaE,GACF,KACA,2BACA,QAEA,sCAAwE,IAAe,EACvF,mBAGA,MACA,MACA,KAEA,KACA,gCAA6D,mBAAmE,WAChI,SACA,MACA,KACA,KAEA,YACA,6CAAsE,mBAAmE,WACzI,SAEA,YAEA,GACA,UACA,SACA,UACA,QAGA,GACA,CAAM,SACN,CACA,OACA,CAAM,QACN,IACA,OACA,UAEA,QAAO,QACP,IACA,OAEA,EACA,CACA,CACA,CAAI,SACJ,CACA,OACA,CAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CAEA,qBACA,IASE,GACF,KACA,iCACA,IACA,gCAGA,2BACA,OAEA,6DACA,IAGA,KACA,CAOyB,IAGzB,6BC/WA,aAwBA,aAAsC,0BAAuC,SAAgB,GAE7F,eAAiD,kBAA0C,wBAA4D,qCAEvJ,eAAiD,KAAa,2BAAyF,sHAAuF,EAE9O,eAA0C,0BAA+D,8FAAuG,6CAAyE,aAAe,mCAA6E,oFAAuH,EA2B5e,CAvDA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAE/iB,uBAAqD,uBAAkD,mDAA8D,iBAA0B,6BAA4C,SAAkD,uBAA0C,EAAE,aAA4B,YAA4B,cAAuB,UAAgD,0BAAgC,EAExe,MAEA,QAEA,OAEA,QAEA,OAEA,QAEA,yBAoCA,cAGA,QAQA,kEAEA,qBACA,CACA,aACA,iBACA,yBAQA,6BAOA,0BAQA,WAQA,oFACA,IACA,CAQA,YAxDA,QAyDA,KACA,wBACA,0CACA,cAME,GACF,KACA,2BACA,wBAEA,QACA,iDAEA,QAME,GACF,KACA,yBACA,iFAEA,SACA,MACA,KAEA,KACA,gDAAqE,qBAAgE,MACrI,SAEA,4CAEA,QAAI,SACJ,CACA,OACA,CAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CACA,CAME,GACF,KACA,0BACA,kFAEA,6BACA,YAME,GACF,KACA,0BACA,kFAEA,6BACA,YASE,GACF,KACA,gCAEA,kBA8MA,mBAKA,gBAIA,yBACA,sBAKA,IACA,IA1NA,yBAGA,kBACA,UAIA,KACA,KACA,KAEA,KACA,gCAAkE,qBAAmE,MACrI,YAEA,2BACA,wBAGA,mBACA,aAGA,qCACA,UAEA,EAIA,CAAI,UACJ,CACA,OACA,EAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CAEA,IACA,MACA,KAEA,MACA,iCAAkE,sBAAmE,WACrI,WAEA,0BAGA,qBAIA,yCACA,uCAEA,sBAGA,iBACA,MACA,kBACA,2CACA,aAMA,oCACA,wCAEA,YACA,CAMA,CAAI,UACJ,CACA,QACA,EAAI,QACJ,IACA,QACA,WAEA,QAAK,QACL,IACA,OAEA,GACA,CAEA,IAEA,OACA,MACA,MAEA,MACA,0CAA2E,0BAAmE,MAC9I,YAEA,yCACA,cAEA,GAAI,UACJ,CACA,SACA,EAAI,QACJ,IACA,SACA,WAEA,QAAK,QACL,IACA,QAEA,GACA,CAEA,IACA,OACA,MAEA,MACA,iCAAqE,uBAAmE,YACxI,WAEA,wBACA,qBACA,iDAIA,yBACA,yCAEA,YACA,MACA,uBACA,eACA,QAGA,KAIA,CAAI,UACJ,CACA,SACA,EAAI,QACJ,IACA,SACA,WAEA,QAAK,QACL,IACA,QAEA,GACA,CAEA,kCAEA,kBAEA,0BAMA,6CACA,qDAGA,iBACA,cACA,oBACA,gBAEA,IAEA,mCAIA,kBAEA,SA8BE,GACF,KACA,sCACA,OAGA,6DACA,uEACA,CAIA,qCACA,KAGA,KACA,CAAC,IAiDD,SAGA,U,mBC7fA,aAgBA,eAAiD,kBAA0C,wBAA4D,qCAEvJ,eAAiD,KAAa,2BAAyF,sHAAuF,EAE9O,eAA0C,0BAA+D,8FAAuG,6CAAyE,aAAe,mCAA6E,oFAAuH,EAS5e,CA3BA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAE/iB,uBAAqD,uBAAkD,mDAA8D,iBAA0B,6BAA4C,SAAkD,uBAA0C,EAAE,aAA4B,YAA4B,cAAuB,UAAgD,0BAAgC,EAExe,MAEA,MAEA,WAAsC,0BAAuC,SAAgB,gBA0B7F,yBACA,cASA,QAQA,kEAEA,sBACA,OACA,CAOA,YApBA,QAqBA,KACA,sBACA,8DAEA,WACA,sHAIA,sGAFA,EAGE,GACF,KACA,yBACA,+BACA,EACA,iBACA,0BACA,EAGA,KACA,CAAC,aAED,U,mBC7FA,aAoCA,aACA,0BAA0C,SAC1C,GACA,eACA,kBACA,wBAEA,qCACA,eACA,KACA,2BAEA,sHACA,EACA,eACA,0BACA,8FAEA,6CACA,aACA,OACA,EACA,cACA,YAGA,mBACA,iEACA,EAeA,CAyGA,YACA,+BAAqD,OAAiB,uBACtE,O,CAzLA,qCAA8C,CAAc,WAC5D,gBACA,gBACA,WAAuB,QAAkB,OACzC,QACA,kBACA,iBACA,yBACA,OACA,2CAEA,EACA,uBACA,OACA,kBACA,GACA,OACA,GACA,CACA,CAAC,IACD,2BACA,QACA,OACA,OACA,QACA,OACA,QACA,OACA,SACA,QACA,OACA,OACA,QACA,OACA,yBA6CA,aAEA,eACA,6DACA,WACA,YAJA,QAKA,KAIA,uBACA,YACA,WACA,aACA,WACA,SACA,YAEA,iBACA,6BACA,yBACA,MACA,QAKA,yCAEA,wBAEA,qFACA,OACA,IAEA,+EACA,iCACA,gBACA,uCACA,GACA,cACA,aACA,2CACA,GACA,cACA,aAEA,2CACA,GACA,cACA,oCACA,CACA,wCAGA,gCAEA,QAEA,2CACA,MACA,gBAAgC,KACf,4BACjB,8BAA2D,oBAC3D,QACA,0DAAuF,UACvF,8DAAsF,UAItF,gDACA,MACA,gBAAgC,KACf,iBAAa,CAAqB,2CACnD,OACA,KACA,2BAEA,OAEA,2CACA,MACA,gBAAgC,QACf,iBAAa,CAAwB,8CACtD,OACA,KACA,8BAEA,UAEA,0CACA,qBAEA,KACA,CAAC,IAQW,SACZ,6BCvLA,aAoDA,aACA,iBACA,iBAEA,uBACA,6CACA,qDAEA,iB,CA1DA,qCACA,CACC,WACD,8BA2BA,WACA,iBACA,qBACA,mCAEA,kDACA,SAEA,oBACA,EACA,CASA,EA7CA,2BAEA,QAEA,OAIA,WAAsC,0BAAuC,SAAgB,EAgB7F,EAlBA,4BCZA,aAeA,aAAsC,0BAAuC,SAAgB,EAiB7F,CAaA,iBAGA,yCAEA,aAEA,oCACA,KACA,0BAGA,8DACA,C,CAxDA,qCACA,CACC,WACD,UA6BA,aACA,oCACA,MAQmD,EArCnD,QAEA,OAEA,O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SAAgB,EAU7F,KAmBA,E,QAlBA,aACA,YACA,MACA,SACA,EAEA,YACA,SACA,YAEA,6BACA,OACA,iBACA,CACA,CACA,OACA,mBCrCA,aAEA,qCACA,CAUA,WAWA,E,QAVA,aACA,YACA,UAEA,OACA,UAEA,SACA,mBCtBA,aAEA,qCACA,CAUA,WAcA,E,QAbA,eACA,YACA,MACA,WACA,OAEA,WACA,WACA,mBAEA,SACA,mBCzBA,aAEA,qCACA,CASA,WAYA,E,QAXA,aACA,QACA,MAEA,uBACA,QACA,UAEA,SACA,qBCtBA,aAcA,aAAsC,0BAAuC,SAAgB,EAG7F,CAfA,qCACA,CACC,WAED,QAEA,QAEA,OAEA,YA2EA,E,QArDA,qBACA,OACA,EAHA,MAIA,WAEA,uBACA,GAGA,qBACA,MACA,YAEA,SACA,EACA,SA/BA,QAiCA,2BAGA,UACA,SACA,OAEA,MACA,qCAEA,iBACA,IACA,EAEA,SACA,KACA,KAEA,IACA,oCACA,iCACA,iBAEA,EAAO,GACP,CACA,KACA,KACK,iCACL,CACA,KACA,KACA,CACA,oBACA,GACA,kBCrFA,aAeA,aAGA,iBACA,GAGA,CApBA,qCACA,CAEA,WACA,aAQA,sBASA,gBACA,CACA,QACA,GAEA,U,mBC5BA,aA0BA,aAAsC,0BAAuC,SAAgB,EAS7F,CAjCA,qCACA,CACC,WAED,QAEA,SAEA,OAEA,SAEA,OAEA,QAEA,OAEA,SAEA,OAEA,YAoBA,E,QARA,WACA,WACA,yFACA,oBAEA,QACA,qBC1CA,aAEA,qCACA,CAUA,WAcA,E,QAbA,eACA,aACA,iBAEA,eACA,UACA,OACA,QAGA,UACA,oBCzBA,aAEA,qCACA,CACC,WAED,QAEA,MAEA,WAAsC,0BAAuC,SAAgB,EAS7F,KAKA,E,QAJA,WACA,8BACA,mBCtBA,aAEA,qCACA,CAUA,WAUA,E,QATA,aACA,mBACA,OAGA,6CACA,GACA,kBCrBA,aAEA,qCACA,CAEA,WACA,yBAQA,SAaA,E,QAZA,WACA,YACA,IACA,eACA,EAAK,UACL,IACA,UACA,EAAK,UACL,CACA,OACA,qBCzBA,aAkBA,aAA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ACA,eACA,0BACA,8FAEA,6CACA,aACA,OACA,EACA,cACA,YAGA,mBACA,iEACA,EAgBA,CAzEA,qCAA8C,CAAc,WAC5D,gBACA,gBACA,WAAuB,QAAkB,OACzC,QACA,kBACA,iBACA,yBACA,OACA,2CAEA,EACA,uBACA,OACA,kBACA,GACA,OACA,GACA,CACA,CACA,QACA,OACA,OACA,SACA,OACA,QACA,OACA,YACA,OA8CA,iBACA,aAEA,eACA,6DACA,WACA,YAJA,OAKA,CACA,KAIA,uBACA,OACA,YACA,WACA,mBACA,gEACA,qBACA,gBACA,SACA,sBACA,QAGA,qDAEA,8CACA,kBACA,aACA,GACA,CACA,EAIA,GACA,KACA,4BACA,OACA,YACA,wBAMA,0EACA,gBACA,yCACA,6CACA,yBACA,gBACA,mBAEA,OACA,EAEA,IACA,CACA,KAIA,yBACA,UACA,QAIA,GACA,KACA,2BACA,OACA,YAGA,KACA,CAAC,aACD,U,mBC1JA,aA4BA,aAAsC,0BAAuC,SAAgB,GAE7F,eAAiD,kBAA0C,wBAA4D,qCAEvJ,eAAiD,KAAa,2BAAyF,sHAAuF,EAE9O,eAA0C,0BAA+D,8FAAuG,6CAAyE,aAAe,mCAA6E,oFAAuH,EAc5e,CA0MA,aACA,4CACA,IASa,CACb,aACA,WAEA,EAEA,KAHA,cAIA,SACA,SAEA,GACA,6BAGA,sBACA,iDACA,OAGA,MACA,GAEA,OACA,EAEA,CACA,eACA,eACA,MACA,2CAEA,eACA,QACA,6BACA,2BAGA,yBACA,C,CAzSA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAE/iB,QAEA,QAEA,OAEA,OAEA,OAEA,OAEA,OAEA,OAEA,OAEA,wBAuBA,aAGA,eAEA,6DACA,WAEA,YANA,QAOA,KAaA,0BACA,iBACA,gCACA,eAaE,GACF,KACA,0BACA,OAEA,2DAEA,oBACA,aACA,oBACA,iCAEA,gDACA,MACA,gCACK,QACL,2BAGA,kBACA,EAEA,mBACA,EACA,CACA,EASE,GACF,KACA,4BACA,oDAGA,mCACA,GASE,GACF,KACA,gCACA,SACA,MAGA,oCACA,iCAEA,yBAEA,6BAIA,OACA,EAcE,GACF,KACA,kCAEA,mCACA,6BACA,QAMA,6BAJA,6BAKA,sCAEA,QAGA,qBADA,EAKA,OACA,mBAKA,uCAEA,iBACA,EACA,EAUE,GACF,KACA,iCACA,IAGA,wCACA,WAEA,OACA,oBAEA,uBAGA,WACA,EAMA,mCACA,uBACA,iCAEA,IAGA,GACA,CACA,EAGA,KACA,CAAC,aAED,6BCvPA,aAwBA,aAAsC,0BAAuC,SAAgB,GAE7F,eAAiD,kBAA0C,wBAA4D,qCAEvJ,eAAiD,KAAa,2BAAyF,sHAAuF,EAE9O,eAA0C,0BAA+D,8FAAuG,6CAAyE,aAAe,mCAA6E,oFAAuH,EAgB5e,CA5CA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAE/iB,QAEA,OAEA,OAEA,SAEA,OAEA,QAEA,OAEA,wBAyBA,aAGA,eAEA,6DACA,WAEA,YANA,QAOA,KAKA,uBACA,YACA,oBAEA,iDAEA,mBACA,sBAAiB,0BACjB,kBAAiB,sBAEjB,2FAEA,gHACA,aAME,GACF,KACA,4BACA,4BAIA,iBACA,qBACA,MACA,kBACA,aAGA,8BAGA,KACA,CAAC,aAED,U,mBCpGA,aAgCA,aAAsC,0BAAuC,SAAgB,GAE7F,eAAiD,kBAA0C,wBAA4D,qCAEvJ,eAAiD,KAAa,2BAAyF,sHAAuF,EAE9O,eAA0C,0BAA+D,8FAAuG,6CAAyE,aAAe,mCAA6E,oFAAuH,EAiG5e,CArIA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAE/iB,QAEA,OAEA,OAEA,SAEA,OAEA,SAEA,OAEA,SAEA,OAEA,SAEA,OAEA,yBA0GA,aAGA,eAEA,6DACA,WAEA,YANA,QAOA,KAMA,uBACA,gBAyDA,SACA,yDAEA,cAEA,0CAA6C,mCAC7C,MAEA,OA/DA,YACA,WACA,qBAQA,mCAEA,wBAIA,uDAGA,OAIA,oBACA,eAEA,aACA,uCACS,wBACT,0CAGA,8CAEA,gCAA4C,SAC5C,IAAO,EAAG,UAEV,8DACA,uBACA,gBAKA,2BAEA,+CACA,qBACA,UACA,EACA,CAAO,EAAG,UAIV,iCASqD,UACrD,2CAGA,GACA,aAEA,qBAEA,EAAO,EAAG,UAEV,uDACA,WACA,2EACA,8DAGA,WACA,4CACA,oCACA,QAEA,EAAO,EAAG,UACV,OACG,KACH,KAKA,2BACA,OACA,WAGA,KACA,CAAC,IAkDD,SAGA,U,mBClTA,aAgBA,aAAsC,0BAAuC,SAAgB,GAE7F,eAAiD,kBAA0C,wBAA4D,qCAEvJ,eAAiD,KAAa,2BAAyF,sHAAuF,EAE9O,eAA0C,0BAA+D,8FAAuG,6CAAyE,aAAe,mCAA6E,oFAAuH,EAiB5e,CA+CA,eACA,gBACA,kBACA,YACA,QAGA,wDACA,6BAGA,KACA,kBACA,yCACA,eAGA,cACA,gCAEA,eAEA,eAgGA,CA1MA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAE/iB,QAEA,QAEA,OAEA,yBA0BA,cAGA,gBAUA,GAEA,wEAEA,qCACA,gBACA,0BAEA,GACA,QAjBA,kEAEA,aAEA,kEAA+C,UAC/C,8BAA8C,UAE9C,QAWA,CAEA,YAvBA,QAwBA,KACA,8BACA,OACA,8DAGA,eACA,6CAGA,uBACA,EAGA,KACA,CAAC,aAED,2BCnFA,aAQA,eAAiD,kBAA0C,wBAA4D,oCAcvJ,CAqEA,aAEA,4BACA,iCAEA,mBACA,OAGA,sBACA,OACA,eAAE,kBACF,UACA,WACA,E,CAvGA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAAE,gBAiBjjB,cACA,QAQA,gBAQA,gBACA,CASA,aACA,KAWA,2BACA,6BACA,EASE,GACF,KACA,6BACA,wBACA,EACE,GACF,KACA,sBACA,qBACA,KAGA,KACA,CAAC,IAED,2BCxFA,aAEA,qCACA,CACC,WACD,EAeA,QACA,WACA,yFAGA,OACA,aAGA,IACA,CACA,E,iBC/BA,aAEA,qCACA,CACC,WACD,EAeA,QACA,WACA,UAEA,eAAqB,qBAGrB,iDAEA,mBAAwB,wBAExB,0BAEA,YAEA,mCAMA,QACA,C,iBC1CA,aA0BA,aACA,OAEA,yBAEA,iBACE,yCAEF,wBACE,WAGF,OAEA,KACA,KACA,KAEA,KACA,8CAAyE,mBAAgE,WACzI,SAEA,UAGA,sCACA,wDACA,SAEA,QAIA,WACA,IACA,CACA,CAAG,SACH,CACA,OACA,CAAG,QACH,IACA,OACA,UAEA,QAAI,QACJ,IACA,OAEA,EACA,CACA,CAEA,OACA,E,CA7EA,qCACA,CACC,WACD,UAYA,EACA,GAOA,wCCzBA,aAqBA,eAAiD,kBAA0C,wBAA4D,oCAKvJ,CAxBA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAS/iB,QAEA,KAEA,WAAsC,0BAAuC,SAAgB,mBAW7F,aACA,QAQA,qBACA,IAUA,aACA,KACA,yBACA,sBACA,EASE,GACF,KACA,uBACA,2BACA,EAQE,GACF,KACA,2BACA,gBAEA,OAOA,qFAAuG,aAGvG,oDAAqF,IAAa,EAClG,qBAGA,qBACA,EAQE,GACF,KACA,kDACA,2CAEA,wBACA,UACA,qDAEA,OACA,OACA,eAGA,QAAI,IACJ,KAQE,IACF,KACA,qDACA,2CAEA,wBACA,UACA,uDAEA,OACA,OACA,eAGA,QAAI,IACJ,KAME,IACF,YACA,yBACA,8BACA,WAME,GACF,KACA,0BACA,IACA,MACA,KAEA,KACA,8CAAmE,qBAAgE,MACnI,SAEA,QAEA,SAAI,SACJ,CACA,OACA,CAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CACA,CAGA,KACA,CAAC,IAED,U,mBC9LA,aAgBA,eAAiD,kBAA0C,wBAA4D,qCAEvJ,eAAiD,KAAa,2BAAyF,sHAAuF,EAE9O,eAA0C,0BAA+D,8FAAuG,6CAAyE,aAAe,mCAA6E,oFAAuH,EAsB5e,CAxCA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAE/iB,uBAAqD,uBAAkD,mDAA8D,iBAA0B,6BAA4C,SAAkD,uBAA0C,EAAE,aAA4B,YAA4B,cAAuB,UAAgD,0BAAgC,EAExe,MAEA,MAEA,WAAsC,0BAAuC,SAAgB,oBA6B7F,cAQA,QAQA,6DAEA,uBACA,EACA,CAiBA,YA9BA,QA+BA,KACA,yBACA,OAEA,2BACA,OAEA,iBACA,kBACA,GACA,GACA,CAEA,qFACA,EAGA,KACA,CAAC,aAED,U,mBCrGA,aA+CA,aAAsC,0BAAuC,SAAgB,GAE7F,eAAiD,kBAA0C,wBAA4D,oCASvJ,CAxDA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAS/iB,QAEA,SAEA,OAEA,SAEA,OAEA,SAEA,OAEA,SAEA,OAEA,SAEA,OAEA,SAEA,OAEA,QAEA,OAEA,sBAmBA,cACA,QAEA,wDAQA,mFAEA,qCAQA,mCAQA,uBAMA,kDAQA,4BAmBA,sBAQA,qCAWA,mBAcA,gBASA,aACA,KACA,8BACA,gBAqBA,8BACA,UACA,oBAIA,IADA,CACK,UACL,UACA,OA3BA,OACA,YAEA,wBASA,aACA,uBAEA,6CACA,EAEA,oBAdA,mCACA,YACA,YACA,EAAI,kBACJ,eACA,eAEA,EAyBE,GACF,KACA,0BACA,OAEA,sBAEA,gBAEA,8BAEA,gDACA,YACA,iBACA,SACA,EAaE,GACF,KACA,0BACA,IAEA,qCACA,UAWE,KACF,KACA,0BACA,OAEA,mCACA,aAEA,oCACA,QACA,oBACA,QAAK,kBACL,OACA,EACA,GACA,EAGA,KACA,CAAC,IAED,YAGA,kBA+CA,0BCrUA,aA8BA,aAAsC,0BAAuC,SAAgB,GAE7F,eAAiD,kBAA0C,wBAA4D,qCAEvJ,eAAiD,KAAa,2BAAyF,sHAAuF,EAE9O,eAA0C,0BAA+D,8FAAuG,6CAAyE,aAAe,mCAA6E,oFAAuH,EAa5e,CA/CA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAE/iB,uBAAqD,uBAAkD,mDAA8D,iBAA0B,6BAA4C,SAAkD,uBAA0C,EAAE,aAA4B,YAA4B,cAAuB,UAAgD,0BAAgC,EAExe,MAEA,SAEA,OAEA,SAEA,OAEA,SAEA,OAEA,SAEA,OAEA,yBAsBA,gBAUA,QAQA,kEAEA,qBAGA,4BACA,+CAQA,8BAaA,mCACA,MACA,CAOA,YA7CA,QA8CA,KACA,0BACA,OAEA,6CACA,qBACA,SAAI,kBACJ,kBACA,SAAI,yFACJ,MAQE,GACF,KACA,2BACA,eACA,EAME,GACF,KACA,0BACA,kBACA,KAME,GACF,KACA,sCACA,iCACA,UAME,GACF,KACA,4CACA,iCACA,SAYE,KACF,KACA,4BACA,OAEA,mCACA,eAEA,oCACA,QACA,oBACA,QAAK,kBACL,OACA,EACA,GACA,EAGA,KACA,CAAC,aAED,U,mBC7LA,aAyBA,aAAsC,0BAAuC,SAAgB,GAE7F,eAAiD,kBAA0C,wBAA4D,oCAKvJ,CA9BA,qCACA,CACC,WAED,gBAAkC,gBAAiC,IAAe,MAAe,KAAgB,KAAoB,KAAM,gCAA0C,mBAA+B,iBAAkC,uBAAqC,IAA1D,MAA4D,SAAc,CAAW,OAAU,CAAE,QAAU,IAAM,oBAAyC,WAAE,QAAU,WAAkB,EAAE,CAAE,OAAa,EAAE,qBAA2B,kBAA0B,SAAc,gCAA2C,cAAuC,uBAA+E,uDAAG,CAEnpB,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAS/iB,QAEA,OAEA,OAEA,uBAoBA,cACA,2DAEA,aAMA,gBAQA,4BAMA,sBAEA,QACA,MACA,KAEA,KACA,gCAAmE,qBAAgE,MACnI,SAEA,mCAEA,KACA,oDAGA,EAAG,SACH,CACA,OACA,CAAG,QACH,IACA,OACA,UAEA,QAAI,QACJ,IACA,OAEA,EACA,CACA,CAOA,aACA,YACA,mDACA,eAEA,4CAEA,wBACA,UACA,GACA,KACA,KACA,gBACA,yBAEA,gBACA,0BACA,QACA,GACA,KAEA,QAEA,8BACA,QACA,GACA,KAEA,eACA,GAEA,MACA,IACA,YACA,EAEA,UACA,WACA,GAEA,UACA,WACA,mBACA,GACA,SAEA,OACA,WACA,UAEA,SACA,UAGA,aACA,cAEA,MACA,QACA,GACA,KAEA,MAEA,OACA,oBAEA,QACA,oBAEA,QACA,QACA,eAGA,QAAI,+BACJ,KASE,IACF,KACA,uBACA,0BACA,EAeE,GACF,KACA,wBACA,cAqCA,mBAKA,oBAIA,gCAOA,wFAA4F,QAE5F,IACA,CACA,EAEA,cACA,+BACA,OAEA,KACA,wCACA,SAEA,iBAQA,iJAA2K,qBAG3K,MACA,EAGA,eACA,YACA,UAEA,GACA,GACA,EAEA,cACA,OACA,qBAGA,0BACA,EAEA,cAkCA,yBACA,UACA,EAAK,qBACL,SACA,CACA,EACA,2DAxIA,QACA,YACA,aACA,KAEA,SACA,OACA,gBA0FA,IAEA,MACA,KACA,KAEA,KACA,iCAA8D,yBAAmE,MACjI,WAEA,QACA,YAGA,GAAK,UACL,CACA,OACA,EAAK,QACL,IACA,QACA,WAEA,QAAM,QACN,IACA,OAEA,EACA,CAEA,mBACA,IAEA,EAxHA,QAaA,OAGA,sHAAmC,SAEnC,mCAAiE,SACjE,IAEA,6CACA,OACA,EAEA,EA8GE,GACF,KACA,0BACA,uCACA,WACA,OAEA,SACA,EAAI,qBACJ,OACA,4BAAI,kBACJ,UACA,SAEA,sBACA,EAUE,GACF,KACA,0BACA,qBAEA,WAEA,WAIA,sBAWA,uGAA8G,+DAE9G,wBAEA,GAGA,KACA,CAAC,IAED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A,MACA,kBACA,kCAEA,gBACA,6BACA,SACA,GACA,KAEA,UAEA,wBACA,SACA,GACA,KAEA,uBACA,gBACA,uBAEA,SACA,IACA,cACA,EAEA,UACA,YACA,GAEA,UACA,YACA,qBACA,GACA,YAEA,OACA,YACA,WAEA,WACA,WAGA,aACA,eAEA,OACA,SACA,GACA,KAEA,MAEA,QACA,qBAEA,QACA,qBAEA,QACA,QACA,gBAGA,QAAI,gCACJ,KASE,IACF,KACA,2CACA,iCAEA,8DACA,GAUE,GACF,KACA,uCACA,iCAEA,8DACA,GASE,GACF,KACA,2CACA,oBACA,yBAEA,QACA,MACA,MAEA,MACA,2DAAiF,uBAAmE,YACpJ,WAEA,cAEA,SAEA,+BAEA,0BACA,GACA,CAAI,UACJ,CACA,SACA,EAAI,QACJ,IACA,SACA,WAEA,QAAK,QACL,IACA,QAEA,GACA,CAEA,IACA,OACA,MAEA,MACA,kCAA2D,uBAAmE,YAC9H,WAEA,cAEA,SACA,SAEA,+BAEA,0BACA,GACA,CAAI,UACJ,CACA,SACA,EAAI,QACJ,IACA,SACA,WAEA,QAAK,QACL,IACA,QAEA,GACA,CACA,CAWE,GACF,KACA,4CACA,aACA,qCAEA,UAEA,0BAEA,aAGA,gBACA,MACA,MAEA,MACA,kCAA4D,0BAAmE,cAI/H,sDAMA,QATA,uBAUA,sBAGA,gBAAK,UACL,CACA,SACA,EAAK,QACL,IACA,SACA,WAEA,QAAM,QACN,IACA,QAEA,GACA,CACA,CAAI,KAGJ,mCACA,yCAGA,kBAGA,IACA,UAIA,MACA,cAEA,QACA,UACA,qBAKA,QACA,cAEA,QACA,UACA,iBAKA,IACA,aAEA,uBAEA,OACA,GAUE,GACF,KACA,8CAGA,wCAGA,kDAIA,4BACA,8BACA,MAGA,YAEA,2BAGA,6BACA,GAIA,0BAA8B,CAC9B,iBACE,GACF,KACA,4BACA,qBAEA,+IACA,KAME,GACF,KACA,uBACA,wHACA,KAME,GACF,KACA,sBACA,uHACA,GAME,GACF,KACA,2BACA,gDACA,CACE,KACF,KACA,sCAQA,qBACA,iFACE,GACF,KACA,0CACA,UACA,EAGA,KACA,EAAC,IAWY,SAGb,6BC/mCA,aAqBA,eAAiD,kBAA0C,wBAA4D,oCAKvJ,CAxBA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAS/iB,QAEA,KAEA,WAAsC,0BAAuC,SAAgB,mBAW7F,aACA,QAQA,QASA,kCAYA,wBAQA,2BACA,IASA,aACA,KACA,4BACA,mEACA,oBAEA,uBACA,wCACA,EACA,CAYE,GACF,KACA,sDACA,8DACA,wDACA,8BACA,4CAEA,wBACA,UACA,8BACA,QACA,EACA,KAEA,iBAEA,cAGA,uBAIA,SACA,QACA,EACA,KAEA,iBAEA,cACA,+BACA,QACA,GACA,KAEA,mBAEA,yBACA,QACA,EACA,KAEA,yBAEA,QACA,iBACA,GAEA,MACA,WACA,EAEA,UACA,QACA,eAGA,QAAI,IACJ,KASE,IACF,KACA,4BACA,+BAEA,uCACA,EAUE,GACF,KACA,sCACA,uBACA,0BACA,EASE,GACF,KACA,kCACA,4BACA,EASE,GACF,KACA,iCACA,+BACA,EAUE,GACF,KACA,kCACA,4BACA,EASE,GACF,KACA,6BACA,+BAGA,iBACA,wCACA,gCAEA,kBAEA,SAQA,sBACA,mFAEA,OACA,EAGA,KACA,CAAC,IAED,U,mBC5QA,aAuCA,aAAsC,0BAAuC,SAAgB,GAE7F,eAAiD,kBAA0C,wBAA4D,oCAYvJ,CAnDA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAS/iB,QAEA,SAEA,OAEA,OAEA,OAEA,OAEA,OAEA,OAEA,OAEA,OAEA,OAEA,sBAoBA,aACA,QAQA,oBACA,IASA,aACA,YACA,yBACA,sBACA,QASE,GACF,KACA,uBACA,0BACA,EAUE,GACF,KACA,uBACA,8BACA,IAiBE,GACF,KACA,yBACA,6BACA,sBAEA,QACA,SAEA,wBACA,SAGA,eACA,EAEA,iCACA,aAEA,8BACA,sBAEA,GACA,CASE,GACF,KACA,0BACA,6BACA,sBAEA,WACA,yBACA,yBAEA,uBAMA,MASE,GACF,KACA,kEACA,eAEA,4CAEA,wBACA,UACA,GACA,KACA,KACA,gBACA,gBAEA,gBACA,0BACA,QACA,GACA,KAEA,QAEA,wCACA,QACA,GACA,KAEA,eACA,GAEA,MACA,IACA,YACA,EAEA,UACA,WACA,GAEA,UACA,WACA,mBACA,GACA,SAEA,OACA,WACA,UAEA,SACA,UAGA,aACA,cAEA,MACA,QACA,GACA,KAEA,MAEA,OACA,oBAEA,QACA,oBAEA,QACA,QACA,eAGA,QAAI,+BACJ,KAME,IACF,KACA,0BACA,IACA,MACA,KAEA,KACA,qDAA4E,qBAAmE,MAC/I,SAEA,0BAEA,EAAI,SACJ,CACA,OACA,CAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CAEA,eAEA,UACA,eAgBE,GACF,KACA,6DACA,eAEA,4CAEA,wBACA,UACA,GACA,KACA,KACA,gBACA,kCAEA,gBACA,0BACA,QACA,GACA,KAEA,QAEA,gCACA,QACA,GACA,KAEA,eACA,GAEA,MACA,IACA,YACA,EAEA,UACA,WACA,GAEA,UACA,WACA,mBACA,GACA,SAEA,OACA,WACA,UAEA,SACA,UAGA,aACA,cAEA,MACA,QACA,GACA,KAEA,MAEA,OACA,oBAEA,QACA,oBAEA,QACA,QACA,eAGA,QAAI,+BACJ,KASE,IACF,KACA,kCACA,GACA,6BACA,sBACA,IAkBA,KACA,CAAC,IAED,YAGA,kBA6BA,SAEA,gBAOA,gBACA,QAQA,aAQA,kBAEA,wCACA,KASA,aACA,KACA,2BACA,UAMA,+BAGA,iHACA,MAQE,GACF,KACA,yBACA,UAMA,+BAGA,iHACA,IAeE,GACF,KACA,2BACA,UAMA,+BAGA,mGACA,WAkBA,KACA,CAAC,IAED,kB,0BC/jBA,aAuDA,aAAsC,0BAAuC,SAAgB,GAE7F,eAAiD,kBAA0C,wBAA4D,oCAEvJ,CAzDA,qCACA,CACC,W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A,SACA,WAEA,QAAO,QACP,IACA,QAEA,GACA,CACA,CAQA,CAAI,UACJ,CACA,OACA,EAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CAEA,IACA,OACA,MAEA,MACA,4CAAsE,uBAAmE,YACzI,WAEA,MAEA,MACA,MACA,MAEA,aACA,iCAAmE,0BAAmE,MACtI,eAEA,wCACA,CACA,MACA,KAKA,CAAM,UACN,CACA,SACA,EAAM,QACN,IACA,SACA,WAEA,QAAO,QACP,IACA,QAEA,GACA,CAEA,KACA,GAEA,QACA,CAAI,UACJ,CACA,SACA,EAAI,QACJ,IACA,SACA,WAEA,QAAK,QACL,IACA,QAEA,GACA,CAEA,CACA,QASE,GACF,KACA,2BACA,wBACA,EAYE,GACF,KACA,kCACA,iBAMA,uBAGA,sGAMA,uBAIA,oGAOA,qEACA,+BACA,EAUE,GACF,KACA,iCACA,oCAMA,uBAGA,4GAEA,4BACA,WACA,CACA,EAcE,GACF,KACA,+CACA,MAEA,8BAAuB,qDAEvB,YAGA,YACA,KACA,KAEA,KACA,gCAA6D,mBAAmE,WAChI,SACA,MACA,MACA,MAEA,aACA,iCAA8D,uBAAmE,YACjI,WAGA,uBAEA,sBAAwB,+CAExB,IAEA,QACA,CAAO,UACP,CACA,SACA,EAAO,QACP,IACA,SACA,WAEA,QAAQ,QACR,IACA,QAEA,GACA,CACA,CACA,CAAK,UACL,CACA,OACA,EAAK,QACL,IACA,OACA,UAEA,QAAM,QACN,IACA,OAEA,EACA,CAIA,CACA,QAUE,GACF,KACA,oCACA,IAEA,MACA,KACA,KAEA,KACA,gCAA4D,mBAAmE,WAC/H,SAEA,WACA,WACA,WAEA,IACA,MACA,MAEA,aACA,6CAAyE,uBAAmE,YAC5I,WAEA,uBACA,qCAEA,iBAAwB,8BACxB,kBACA,6BAGA,WAGA,oBACA,YACA,CAAM,UACN,CACA,SACA,EAAM,QACN,IACA,SACA,WAEA,QAAO,QACP,IACA,QAEA,GACA,CAEA,iBACA,6BAEA,IACA,CAAI,UACJ,CACA,OACA,EAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CAEA,OACA,EAUE,GACF,KACA,mCAEA,yDACA,OACA,yBAIA,uBADA,mBACI,EAEJ,yBACA,SACA,YAMA,aACA,EAWE,GACF,KACA,4BACA,kBAMA,uBAGA,mGACA,EAUE,KACF,KACA,uCACA,IAEA,0BACA,IACA,MACA,KAEA,KACA,gCAA2D,qBAAmE,MAC9H,SAEA,qBACA,iBACO,oBACP,WAGA,EAAK,UACL,CACA,OACA,EAAK,QACL,IACA,OACA,UAEA,QAAM,QACN,IACA,OAEA,EACA,CACA,CAAI,gCACJ,aAEA,OACA,mBACA,UAGA,SACA,SAAI,mBACJ,eAGA,YACA,EAGA,KACA,CAQA,IAGA,YAEA,6BAMA,cACA,QAQA,gBAQA,OAQA,iBAQA,oBACA,sBAUA,aACA,KACA,2BACA,4BACA,EASE,GACF,KACA,8BACA,+BACA,EAUE,GACF,KACA,qCACA,+BACA,EAQE,GACF,KACA,yBACA,qBAGA,uBAEA,iBACA,CAWE,GACF,KACA,gCACA,KAEA,sBACA,QAGA,OACA,MACA,KAEA,KACA,gCAAkE,qBAAsE,MACxI,SAEA,mBAAwB,kBAExB,GAAI,UACJ,CACA,OACA,EAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CACA,CAWE,GACF,KACA,+BACA,sCACA,YAEA,KACA,KACA,KAEA,KACA,gCAA8D,sBAAsE,MACpI,UAEA,qBACA,aAGA,KAAI,UACJ,CACA,OACA,EAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CAEA,OACA,EAWE,GACF,KACA,4CACA,IAEA,MACA,KACA,KAEA,KACA,uDAAgF,qBAAsE,WACtJ,KAEA,MAEA,QACA,MACA,MAEA,aACA,iCAAsE,yBAAsE,MAC5I,cAEA,wBACA,CACA,KACA,KAEA,CAAM,UACN,CACA,SACA,EAAM,QACN,IACA,QACA,WAEA,QAAO,QACP,IACA,QAEA,GACA,CAEA,IACA,EAEA,KACA,CAAI,UACJ,CACA,OACA,EAAI,QACJ,IACA,OACA,UAEA,QAAK,QACL,IACA,O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CAOA,uBAGA,wFACA,4BAEA,0BAGA,yCACA,IASE,GACF,KACA,gDACA,kDACA,YAGA,8BACA,uBACA,WAGA,4CACA,MAGA,kBACA,WAIA,kBACA,kBAGA,iBACA,eAEA,wDAKA,aAYE,GACF,KACA,iCACA,kDACA,qCAEA,mBACA,SAEA,UAEA,2DACA,0BAGA,MACA,WAEA,EASE,GACF,KACA,gCACA,sCACA,8CACA,WACA,IACA,OAGA,mBACA,KACA,KAEA,MACA,iCAAkE,yBAAmE,MACrI,WAEA,uCAIA,IAAI,UACJ,CACA,QACA,EAAI,QACJ,IACA,QACA,WAEA,QAAK,QACL,IACA,OAEA,GACA,CAEA,IACA,OACA,MAEA,MACA,iCAAiE,0BAAmE,MACpI,YAEA,qBACA,uBAGA,GAAI,UACJ,CACA,SACA,EAAI,QACJ,IACA,SACA,WAEA,QAAK,QACL,IACA,QAEA,GACA,CACA,CAYE,GACF,KACA,qCACA,kBA6FA,aAIA,4BACA,iBAGA,qEAMA,aACA,YA3GA,8BAEA,MAMA,WACA,mBACA,0BACA,iDAAkG,CAKlG,0BACA,iCAGA,mCAEA,MACA,QAEA,KACA,MACA,MAEA,MACA,kCAA6D,0BAAmE,MAChI,YAEA,MACA,qCACA,KACM,MACN,yBACA,sBAGA,MAOA,IAAI,UACJ,CACA,SACA,EAAI,QACJ,IACA,SACA,WAEA,QAAK,QACL,IACA,QAEA,GACA,CAEA,IACA,OACA,MAEA,MACA,kCAAmE,0BAAmE,MACtI,YAEA,SACA,+CAGA,GAAI,UACJ,CACA,SACA,EAAI,QACJ,IACA,SACA,WAEA,QAAK,QACL,IACA,QAEA,GACA,CAEA,EAyBE,GACF,KACA,mCAEA,IACA,8BAMA,YALA,gCAEA,2EAMA,iCAKA,mBACA,iCAEA,SACA,gDAEA,IASE,GACF,KACA,wCACA,SAGA,mBACA,uEACA,mDACA,+CACA,0CACA,oEAIA,uCACA,kCAIA,kEACA,oDAGA,UACA,iBAEA,0BACA,wCACA,oCAGA,yEACA,UASE,GACF,KACA,uCACA,mCAGA,gDASA,6DACA,6DAEA,6BACA,4BACA,QAUE,GACF,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A,kBACA,wBAEA,qCACA,eACA,KACA,2BAEA,sHACA,EACA,eACA,0BACA,8FAEA,6CACA,aACA,OACA,EACA,cACA,YAGA,mBACA,iEACA,EAaA,CA2JA,eACA,IACA,+DACA,OACA,CACA,EAEA,EACA,IAkEA,CA3TA,qCAA8C,CAAc,WAC5D,gBACA,gBACA,WAAuB,QAAkB,OACzC,QACA,kBACA,iBACA,yBACA,OACA,2CAEA,EACA,uBACA,OACA,kBACA,GACA,OACA,GACA,CACA,CACA,QACA,QACA,OACA,SACA,OACA,OACA,OACA,SACA,OACA,SACA,OACA,QACA,OACA,UACA,OAqDA,iBACA,aAEA,eACA,6DACA,WACA,YAJA,OAKA,CACA,KAIA,uBACA,OACA,YACA,eACA,eACA,uBACA,WACA,QACA,wBACA,WACA,MACA,UACA,MACA,iCAA2E,uBAAgE,YAC3I,WACA,2BACA,+BACA,gBACA,sBACA,eAEA,kCAEA,eACA,YACA,GACA,CAAiB,UACjB,CACA,SACA,EAAiB,QACjB,IACA,SACA,WAEA,QAAqB,QACrB,IACA,QAEA,GACA,CACA,sBACA,CACA,kBACA,UAEA,qEACA,WACA,6CAA6F,KAAa,GAC1G,sBAEA,+BACA,OACA,GACA,EACA,6DACA,WACA,6CAA+F,KAAe,GAC9G,sBAEA,oCACA,OACA,GAEA,4BACA,EAEA,sDACA,yBACA,wCAAkE,YAAc,CAEhF,qEACA,qBACA,4BACA,OACA,GACA,EACA,EAYA,GACA,KACA,uCACA,YACA,WACA,IACA,aACA,2BACA,2BACA,2BAEA,oEACA,WACA,sBAEA,iBAAiD,YAAW,OAE5D,KACA,CACA,EAEA,IACA,CACA,KAIA,yBACA,OACA,GACA,UAEA,QAIA,GACA,KACA,2BACA,OACA,SAGA,KACA,CAAC,IAQY,SACb,6BCjPA,aAoBA,aAAsC,0BAAuC,SAAgB,GAE7F,eAAiD,kBAA0C,wBAA4D,qCAEvJ,eAAiD,KAAa,2BAAyF,sHAAuF,EAE9O,eAA0C,0BAA+D,8FAAuG,6CAAyE,aAAe,mCAA6E,oFAAuH,EAc5e,CAoHA,iBACA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ACA,0BACA,OACA,oBACA,IACA,SACA,IACA,EACA,CACA,QACA,OACA,OACA,QACA,OACA,OACA,OACA,QACA,OACA,QACA,OACA,QACA,OACA,OACA,OACA,QACA,OACA,QACA,OACA,0BA8CA,cAEA,eACA,gEACA,WACA,aAJA,QAKA,CACA,KAIA,uBACA,QACA,aACA,aACA,uBACA,WACA,aACA,WACA,cAcA,wDAEA,kDACA,mBACA,MACA,iBAEA,qBACA,MACA,iBAEA,wBAEA,0BAEA,2EAEA,8DAEA,6DAEA,2DACA,oCACA,KAAiB,EAAG,UAEpB,mDACA,mDACA,OAAiB,EAAG,UAEpB,6CACA,WACA,0BAAiB,EAAG,UACpB,QAOA,GACA,KACA,2CACA,4BACA,mCACA,gBACA,qBAEA,4DACA,+CAGA,yCACA,0BACA,iCACA,wBACA,GAEA,oBACA,yBAEA,iBACA,oBACA,uCAEA,GAQA,GACA,KACA,0CACA,UACA,2BACA,aACA,yBACA,IACA,QACA,0BAEA,yBAGA,aACA,CAGA,KACA,EAAC,IAID,SACA,6BCvNA,aAsBA,aAAsC,0BAAuC,SAAgB,EAW7F,CA/BA,qCACA,CACC,WACD,wBAqCA,aACA,kBACA,qBACA,gCACA,sBACA,gCAEA,0BACA,EACA,CAOA,EApDA,YAqDA,WACA,6BACA,EAOA,EA7DA,sBA8DA,WACA,IACA,MACA,KAEA,KACA,8CAAmF,qBAAgE,MACnJ,YAEA,8BACA,wBAGA,EAAG,SACH,CACA,OACA,CAAG,QACH,IACA,OACA,UAEA,QAAK,QACL,IACA,OAEA,EACA,CAEA,OACA,KASA,EAnGA,oBAoGA,WACA,SAGA,mEACA,SAAY,CAGZ,SACA,I,EA3GA,QAEA,OAEA,OAEA,QAEA,OAEA,uBAqBA,iCCzCA,aAoBA,aAAsC,0BAAuC,SAAgB,GAE7F,eAAiD,kBAA0C,wBAA4D,qCAEvJ,eAAiD,KAAa,2BAAyF,sHAAuF,EAE9O,eAA0C,0BAA+D,8FAAuG,6CAAyE,aAAe,mCAA6E,oFAAuH,EAgB5e,CAxCA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAE/iB,QAEA,OAEA,OAEA,SAEA,OAEA,wBAyBA,aAGA,eAEA,6DACA,WAEA,YANA,QAOA,KAMA,uBACA,8BAEA,gBACA,KACA,KAEA,KACA,gCAA8D,qBAAgE,MAC9H,SAEA,yBAEA,EAAO,SACP,CACA,OACA,CAAO,QACP,IACA,OACA,UAEA,QAAS,QACT,IACA,OAEA,EACA,CACA,CASG,GACH,KACA,iCACA,OAEA,YACA,0BAEA,kDACA,qBAEA,gBACA,SACA,aACA,KAGA,sCACA,iCAEA,0CACA,oBACA,KAEA,GACA,CACA,EACG,KACH,KAKA,yBACA,UACA,QAMG,GACH,KACA,2BACA,OACA,YAGA,KACA,CAAC,IAwCD,SAGA,U,mBC1LA,aAUA,aAAkC,qBAA0B,uBAA0C,YAAgB,OAAO,WAAoB,SAAa,EAAS,mBAA0B,EAejM,CAoEA,mBACA,SACA,UAIA,mBAA0C,SAK1C,2BAKA,wBAEA,mDAAkC,0CAKlC,kBAAwC,SACxC,0CACA,QAMY,CACZ,eACA,IACA,MACA,KAEA,KACA,gCAA0D,qBAAmE,MAC7H,YAEA,gBACA,QAGA,EAAE,SACF,CACA,OACA,CAAE,QACF,IACA,OACA,UAEA,QAAG,QACH,IACA,OAEA,EACA,CACA,CAQqB,CACrB,iBACA,kCACA,wCAMA,cAQqB,CACrB,iBACA,+BACA,qCAMA,c,CAxLA,qCACA,CACC,WACD,4BAqBA,WACA,yBACA,yBACA,OAEA,+BAKA,gCACA,2BACA,8BAEA,uBACA,sBAEA,GACA,CAOA,EA7CA,4BA8CA,WAEA,2BACA,OACA,eAEA,2BACA,IACA,MACA,KAEA,KACA,gCAAiE,qBAAgE,MACjI,SAEA,cAEA,EAAG,SACH,CACA,OACA,CAAG,QACH,IACA,OACA,UAEA,QAAI,QACJ,IACA,OAEA,EACA,CACA,CACA,CAQkB,EApFlB,6BCRA,aAgBA,eAAiD,kBAA0C,wBAA4D,qCAEvJ,eAAiD,KAAa,2BAAyF,sHAAuF,EAE9O,eAA0C,0BAA+D,8FAAuG,6CAAyE,aAAe,mCAA6E,oFAAuH,EAc5e,CAhCA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAE/iB,QAEA,MAIA,WAAsC,0BAAuC,SAAgB,IAF7F,wBAuBA,gBASA,QAiBA,kEAEA,mBACA,EACA,CAOA,YA7BA,QA8BA,KACA,0BACA,sCAEA,kDAEA,gBAEI,IACJ,wCAEA,uDAEA,MAWE,GACF,KACA,0BACA,OAEA,2DAEA,eAIA,yBACA,uBAEA,gDACA,kBAEA,8CACA,MACA,GAGA,KACA,CAAC,aAED,U,mBC1HA,aAgCA,aACA,0BAA0C,SAC1C,GACA,eACA,kBACA,wBAEA,qCACA,eACA,KACA,2BAEA,sHACA,EACA,eACA,0BACA,8FAEA,6CACA,aACA,OACA,EACA,cACA,YAGA,mBACA,iEACA,EAcA,CAzEA,qCAA8C,CAAc,WAC5D,gBACA,gBACA,WAAuB,QAAkB,OACzC,QACA,kBACA,iBACA,yBACA,OACA,2CAEA,EACA,uBACA,OACA,kBACA,GACA,OACA,GACA,CACA,CACA,QACA,OACA,OACA,SACA,OACA,SACA,OACA,SACA,SACA,OACA,yBA4CA,aAEA,eACA,6DACA,WACA,YAJA,QAKA,KAIA,uBACA,YACA,WACA,MACA,aACA,WACA,SAEA,uCAEA,CACA,MACA,yBACA,0BACA,cAGA,MACA,MACA,yBACA,qBACA,cACA,iBAIA,yCAGA,wBACA,MACA,mBACA,oBAGA,gDACA,oDACA,oDACA,uDACA,uDACA,uDACA,uDAEA,wEAA2G,UAE3G,WACA,MACA,KACA,KACA,iCAA0E,yBAAgE,MAC1I,WACA,6CAEA,IAAiB,UACjB,CACA,OACA,EAAiB,QACjB,IACA,QACA,WAEA,QAAqB,QACrB,IACA,OAEA,EACA,CACA,CACS,KACT,KAIA,yBACA,UACA,QAEA,KACA,CAAC,IAuBD,SACA,U,mBC3LA,aAqCA,aACA,0BAA0C,SAC1C,GACA,eACA,kBACA,wBAEA,qCACA,eACA,KACA,2BAEA,sHACA,EACA,eACA,0BACA,8FAEA,6CACA,aACA,OACA,EACA,cACA,YAGA,mBACA,iEACA,EAcA,CA9EA,qCAA8C,CAAc,WAC5D,gBACA,gBACA,WAAuB,QAAkB,OACzC,QACA,kBACA,iBACA,yBACA,OACA,2CAEA,EACA,uBACA,OACA,kBACA,GACA,OACA,GACA,CACA,CACA,QACA,OACA,OACA,QACA,OACA,SACA,OACA,SACA,OACA,SACA,OACA,SACA,OACA,SACA,YACA,OA4CA,iBACA,aAEA,eACA,6DACA,WACA,YAJA,OAKA,CACA,KAIA,uBACA,MACA,qBACA,aAOA,GACA,KACA,gCACA,OACA,YACA,wBACA,4BACA,8DACA,qBACA,gBACA,SACA,wCACA,QAEA,sCACA,8CACA,UACA,WACA,GACA,CACA,EAOA,GACA,KACA,8BACA,OACA,YACA,mBAOA,2CAMA,gDACA,oDACA,kCAA4D,iDAC5D,UACA,aACA,+CACA,GACA,aAEA,gDACA,GACA,cACA,GAEA,sCACA,GACA,8CAEA,EAAiB,EAAG,UAEpB,0EACA,CACA,KAEA,WAAiB,EAAG,UAEpB,sBACA,cACA,0BACA,UACA,UACA,8BACA,4BACA,UACA,WAEA,GAMA,GACA,KACA,4BACA,UAGA,uBACA,wBACA,qCACA,wCACA,0BACA,WACA,4CAQA,gDACA,2BACA,SAOA,GACA,KACA,6BACA,MAGA,uCACA,OACA,4BAEA,QAQA,GACA,KACA,2BACA,wCACA,KAEA,IACA,CACA,KAIA,yBACA,OACA,GACA,UAEA,QAIA,GACA,KACA,2BACA,OACA,sBAGA,KACA,CAAC,aACD,U,mBC1QA,aAgBA,eAAiD,kBAA0C,wBAA4D,qCAEvJ,eAAiD,KAAa,2BAAyF,sHAAuF,EAE9O,eAA0C,0BAA+D,8FAAuG,6CAAyE,aAAe,mCAA6E,oFAAuH,EAc5e,CAhCA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CA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IACA,SACA,IACA,EACA,CACA,QACA,OACA,OACA,SACA,OACA,QACA,OACA,SACA,OACA,SACA,OACA,SACA,OACA,SACA,OACA,QACA,OACA,SACA,OACA,SACA,OACA,YACA,OAqCA,MASA,sBACA,cAEA,eACA,gEACA,WACA,aAJA,QAKA,CACA,KAIA,uBACA,wCAMA,4BAOA,sDAEA,cACA,gCAEA,kCACA,gBAOA,GACA,KACA,8BACA,QACA,aACA,2BACA,2BACA,2BACA,qDAEA,0EACA,QACA,EACA,0CACA,6CAEA,wCACA,qDACA,UACA,cAEA,uCACA,YACA,aACA,cAEA,uCACA,WACA,cAEA,0CACA,IACA,eACA,IACA,GACA,EAOA,GACA,KACA,2CACA,QACA,aACA,0BACA,cAEA,gCACA,IACA,cAEA,cACA,iDACA,sBACA,cACA,yBACA,kBACA,qBACA,KAEA,sCAEA,gDACA,WACA,cACA,GACA,EACA,EAOA,GACA,KACA,6CACA,QACA,aACA,aACA,qBACA,0DACA,sBACA,cACA,yBACA,oBACA,WAEA,sCAEA,gDACA,mBACA,SACA,GACA,EACA,EAOA,GACA,KACA,iCACA,QACA,4BAGA,wCACA,WACA,0BAEA,OAEA,YAEA,mDACA,iEACA,wBACA,QAEA,KAEA,mDACA,8BACA,cACA,aAEA,KAEA,iBACA,cACA,6BACA,+BACA,SACA,sCACA,4BACA,WACA,YAEA,GAOA,GACA,KACA,+BACA,QACA,aACA,0BACA,2BACA,gBACA,cACA,qBACA,oBAEA,sEAOA,uEACA,uCACA,WACA,0CACA,iBAMA,SACA,MAMA,eACA,eAIA,+CAGA,0BACA,8BAEA,+CACA,qCAGA,4BACA,WACA,uBAEA,4BACA,+BAGA,SASA,GACA,KACA,+BACA,6CACA,qCAGA,YACA,6BAEA,oDACA,oCACA,UAWA,GACA,KACA,0CACA,4BACA,aACA,6BACA,gCACA,gDACA,uBACA,QACA,qDAEA,iBAYA,GACA,KACA,0CACA,iCACA,gBACA,wBAIA,8CACA,qBACA,eACA,oBACA,+CAIA,IAEA,GAGA,KANA,IAQA,IACA,CACA,KAIA,yBACA,OACA,GACA,UAEA,QAIA,GACA,KACA,2BACA,OACA,MAGA,KACA,EAAC,IAKqD,SACtD,6BC/bA,aAwBA,aAAsC,0BAAuC,SAAgB,GAE7F,eAAiD,kBAA0C,wBAA4D,qCAEvJ,eAAiD,KAAa,2BAAyF,sHAAuF,EAE9O,eAA0C,0BAA+D,8FAAuG,6CAAyE,aAAe,mCAA6E,oFAAuH,EAc5e,CA1CA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAE/iB,QAEA,QAEA,OAEA,QAEA,OAEA,OAEA,OAEA,yBAuBA,aAGA,eAEA,6DACA,WAEA,YANA,QAOA,KAaA,0BACA,mBAEA,6CACA,0EACA,WAmBE,GACF,KACA,2BACA,mBACA,aAEA,qCAEA,SAGA,yBACA,SAGA,iDAEA,yDAEA,yCAGA,gBACA,GAEA,KACA,uBAA4C,UAE5C,eAGA,mCACA,IACA,CAAK,KAGL,6CAEA,YACA,KACA,KAEA,KACA,gCAA4D,qBAAgE,MAC5H,SAEA,kCAEA,EAAM,UACN,CACA,OACA,EAAM,QACN,IACA,OACA,UAEA,QAAO,QACP,IACA,OAEA,EACA,CACA,CACA,CACA,EAGA,KACA,CAAC,aAED,U,mBCjKA,aAgCA,aAAsC,0BAAuC,SAAgB,GAE7F,eAAiD,kBAA0C,wBAA4D,qCAEvJ,eAAiD,KAAa,2BAAyF,sHAAuF,EAE9O,eAA0C,0BAA+D,8FAAuG,6CAAyE,aAAe,mCAA6E,oFAAuH,EAgB5e,CApDA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAE/iB,QAEA,OAEA,OAEA,QAEA,OAEA,QAEA,OAEA,SAEA,OAEA,SAEA,OAEA,yBAyBA,aAGA,eAEA,6DACA,WAEA,YANA,QAOA,KAKA,uBACA,YACA,WACA,SAGA,gCAAiC,6CAEjC,mCAAiC,6CAGjC,qHACA,yBAAsD,MAGtD,sBAEA,EACA,CAGA,yBAEA,kBAAU,oBAAwB,MAAe,+BACjD,OACA,KACA,gCAEA,QAGA,uCACA,0CACA,GAGA,KACA,CAAC,aAED,U,mBC5GA,aA8DA,aACA,0BAA0C,SAC1C,GACA,eACA,kBACA,wBAEA,qCACA,eACA,KACA,2BAEA,sHACA,EACA,eACA,0BACA,8FAEA,6CACA,aACA,OACA,EACA,cACA,YAGA,mBACA,iEACA,EAeA,CAxGA,qCAA8C,CAAc,WAC5D,gBACA,gBACA,WAAuB,SAAkB,OACzC,SACA,oBACA,kBACA,yBACA,SACA,4CAEA,GACA,uBACA,OACA,kBACA,GACA,OACA,GACA,CACA,CACA,uBACA,CACA,sBACA,oDACA,kBACA,8BACA,SAGA,yBAEA,EAAK,aACL,cAEA,gBACA,UAGA,4BAEA,EACA,MACA,OACA,OACA,OACA,OACA,SACA,OACA,QACA,OACA,SACA,OACA,SACA,OACA,SACA,OACA,QACA,OACA,SACA,OACA,wBA6CA,cAKA,QACA,kEACA,SAOA,uBAOA,2BAMA,yBAMA,sDACA,+BAMA,yDAMA,0DAQA,8BAQA,qCACA,cACA,2BACA,gCACA,mBAEA,eAEA,wBAGA,oDAAkE,YAAc,CAChF,uDACA,KACA,kBACA,CAEA,gCAEA,eACA,GACA,aACA,KACA,iBAAiC,CACjC,0CACA,GACA,iBACA,mBAKA,oCAAsC,MACtC,WACA,GACA,eACA,iBACA,mBAEA,gDAEA,mBAEA,0BACA,QACA,GACA,CAIA,YA5GA,OA6GA,CACA,KACA,uBAEA,sCACA,uFACA,KAIA,GACA,KACA,wBACA,mBACA,YAOA,GACA,KACA,kCACA,mBACA,iCACA,2BACA,qCACA,sBACA,EASA,GACA,KACA,oCACA,2BACA,wBACA,KACA,YACA,mCAEA,IACA,EAGA,KACA,CAAC,IAgBD,SACA,U,mBChSA,aAgBA,aAAsC,0BAAuC,SAAgB,GAE7F,eAAiD,kBAA0C,wBAA4D,qCAEvJ,eAAiD,KAAa,2BAAyF,sHAAuF,EAE9O,eAA0C,0BAA+D,8FAAuG,6CAAyE,aAAe,mCAA6E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,iCAGA,MACA,eAGA,CACA,QAGA,CACA,QAGA,KACA,CAAC,IAGD,SAGA,6BC3OA,aAgCA,aACA,0BAA0C,SAC1C,GACA,eACA,kBACA,wBAEA,qCACA,eACA,KACA,2BAEA,sHACA,EACA,eACA,0BACA,8FAEA,6CACA,aACA,OACA,EACA,cACA,YAGA,mBACA,iEACA,EAgBA,CA3EA,qCAA8C,CAAc,WAC5D,gBACA,gBACA,WAAuB,QAAkB,OACzC,QACA,kBACA,iBACA,yBACA,OACA,2CAEA,EACA,uBACA,OACA,kBACA,GACA,OACA,GACA,CACA,CACA,QACA,SACA,OACA,SACA,OACA,SACA,OACA,OACA,OACA,QACA,wBA8CA,aAEA,eACA,6DACA,WACA,YAJA,OAKA,CACA,KAIA,uBACA,OAEA,mBACA,sDACA,6DAGA,qEACA,gBACA,yCACA,sDACA,2BACA,iBACA,mBAEA,OAIA,iEACA,IACA,wCACA,SACqB,+CACrB,iBAEA,iBACA,6BACA,KACA,6BACA,KACA,mBAEA,OACA,CACA,EASA,GACA,KACA,kCACA,OACA,YACA,wBACA,0CACA,qBACA,gBACA,OACA,OACA,EAGA,qDAEA,8CACA,kBACA,EACA,GACA,CACA,EAEA,IACA,CACA,KAIA,yBACA,UACA,QAIA,GACA,KACA,2BACA,OACA,MAGA,KACA,CAAC,aACD,U,mBCjLA,aAoBA,aAAsC,0BAAuC,SAAgB,GAE7F,eAAiD,kBAA0C,wBAA4D,qCAEvJ,eAAiD,KAAa,2BAAyF,sHAAuF,EAE9O,eAA0C,0BAA+D,8FAAuG,6CAAyE,aAAe,mCAA6E,oFAAuH,EAc5e,CAsVA,iBAEA,yBAEA,WACA,4CAcA,gCAIA,yDACA,oBACA,6BAIA,qCAEA,yBAGA,2BAGA,cAOa,CACb,eACA,gBACA,MACA,WACA,2DAEA,I,CA/aA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAE/iB,QAEA,QAEA,OAEA,OAEA,OAEA,wBAuBA,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BAGA,2BACA,+BACA,mBAEA,GACA,EAGA,YACA,gBAEA,SAEA,OACA,OACA,EAAE,KACF,2BACA,4BAEA,8BAGA,aAEA,SAEA,OACA,OACA,EAEA,SACA,OACA,UAEA,SACA,wBACA,yCAMA,SACA,YAOA,SACA,iBAOA,yCACA,mCACA,GAEA,OAAS,oBACT,EAQmB,EAlKnB,QAEA,QAEA,OAEA,SAEA,OAEA,6BC3BA,aA2BA,aAAsC,0BAAuC,SAAgB,GAE7F,eAAiD,kBAA0C,wBAA4D,oCAOvJ,CA6UA,eACA,IACA,MACA,KAEA,KACA,gCAAkE,qBAAmE,MACrI,SAEA,aAEA,EAAE,SACF,CACA,OACA,CAAE,QACF,IACA,OACA,UAEA,QAAG,QACH,IACA,OAEA,EACA,CACA,C,CAxYA,qCACA,CACC,WAED,gBAAgC,gBAA2C,WAAgB,QAAkB,OAAO,QAA2B,kBAAwD,iBAAgC,gCAAuD,2CAA6D,EAAE,uBAAyD,yBAAqE,UAA6D,GAAoB,CAAG,CAS/iB,QAEA,QAEA,OAEA,SAEA,OAEA,wBAgCA,cACA,QASA,wCAEA,kBACA,EACA,YAGA,8BACA,YACG,uCACH,gCAEA,WA4CA,EASA,aACA,KACA,wBACA,cACA,KAUE,GACF,KACA,4BACA,iBACA,oBACA,yBACA,iBAEA,EACA,IAUE,GACF,KACA,4BACA,kBACA,cACA,aACA,eAEA,EACA,IASE,GACF,KACA,mCACA,OACA,yBACA,iCACA,qCACA,kCAGA,gCACA,yBAEA,eACA,WAEA,WAEA,EASE,GACF,KACA,uCACA,4BAEA,SACA,KAEA,UAEA,CAQE,GACF,KACA,0BACA,wBACA,MAaE,GACF,KACA,6BACA,YACA,eAGA,iCACA,+BAGA,uDACA,aACA,uBAEA,MACA,gBAEA,cAIA,cAGA,UACA,UAGA,OACA,EAQE,KACF,KACA,kCACA,iBACA,WACA,eAGA,yBACA,KACA,QACA,SACA,OACA,QACA,SAEA,GASE,GACF,KACA,oCACA,IAEA,qBAEA,8BACA,IACA,MACA,KAEA,KACA,gCAAgE,qBAAgE,MAChI,SAEA,mBAEA,GAAK,SACL,CACA,O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A,QAJA,sCAMA,mBACA,GACA,uBCpCA,aAcA,aAAsC,0BAAuC,SAAgB,EAG7F,CAfA,qCACA,CACC,WAED,QAEA,SAEA,OAEA,cAQA,wEASA,sCACA,IACA,wDACA,+BACA,EACA,GACA,CAAC,GAED,U,mBCrCA,aA0QA,cAAsC,6BAAuC,SAAgB,IAxQ7F,qcAIA,UACA,wFACA,yGACA,6FACA,uGACA,iHACA,yFACA,mGACA,qHACA,wHACA,qGACA,8FACA,yFACA,mGACA,0BC1RA,aAwlBA,cAAsC,6BAAuC,SAAgB,G,CAtlB7F,qCACA,CACC,WAED,aAEA,gCACA,CACA,4BACA,aACA,OACC,IAED,aAEA,kCACA,CACA,4BACA,aACA,OACC,IAED,aAEA,iCACA,CACA,4BACA,aACA,OACC,IAED,aAEA,qCACA,CACA,4BACA,aACA,OACC,IAED,aAEA,uCACA,CACA,4BACA,aACA,OACC,IAED,aAEA,yCACA,CACA,4BACA,aACA,OACC,IAED,aAEA,+BACA,CACA,4BACA,aACA,OACC,IAED,aAEA,oCACA,CACA,4BACA,aACA,OACC,IAED,aAEA,yCACA,CACA,4BACA,aACA,OACC,IAED,aAEA,oCACA,CACA,4BACA,aACA,OACC,IAED,aAEA,+BACA,CACA,4BACA,aACA,OACC,IAED,aAEA,oCACA,CACA,4BACA,aACA,OACC,IAED,aAEA,wCACA,CACA,4BACA,aACA,OACC,IAED,aAEA,gCACA,CACA,4BACA,aACA,OACC,IAED,aAEA,kCACA,CACA,4BACA,aACA,OACC,IAED,aAEA,sCACA,CACA,4BACA,aACA,OACC,IAED,aAEA,uCACA,CACA,4BACA,aACA,OACC,IAED,aAEA,oCACA,CACA,4BACA,aACA,OACC,IAED,aAEA,+BACA,CACA,4BACA,aACA,OACC,IAED,aAEA,kCACA,CACA,4BACA,aACA,OACC,IAED,aAEA,kCACA,CACA,4BACA,aACA,OACC,IAED,aAEA,uCACA,CACA,4BACA,aACA,OACC,IAED,aAEA,yCACA,CACA,4BACA,aACA,OACC,IAED,aAEA,2CACA,CACA,4BACA,aACA,OACC,IAED,aAEA,+BACA,CACA,4BACA,aACA,OACC,IAED,YAEA,+BACA,CACA,4BACA,aACA,OACC,IAED,aAEA,sCACA,CACA,4BACA,aACA,OACC,IAED,aAEA,8BACA,CACA,4BACA,aACA,OACC,IAED,aAEA,+BACA,CACA,4BACA,aACA,OACC,IAED,aAEA,kCACA,CACA,4BACA,aACA,OACC,IAED,cAEA,oCACA,CACA,4BACA,cACA,OACC,IAED,cAEA,sCACA,CACA,4BACA,cACA,OACC,IAED,cAEA,iCACA,CACA,4BACA,cACA,OACC,IAED,cAEA,iCACA,CACA,4BACA,cACA,OACC,IAED,cAEA,kCACA,CACA,4BACA,cACA,OACC,IAED,cAEA,gCACA,CACA,4BACA,cACA,OACC,IAED,cAEA,sCACA,CACA,4BACA,cACA,OACC,IAED,cAEA,wCACA,CACA,4BACA,cACA,OACC,IAED,cAEA,wCACA,CACA,4BACA,cACA,OACC,IAED,cAEA,0CACA,CACA,4BACA,cACA,OACC,IAED,cAEA,4CACA,CACA,4BACA,cACA,OACC,IAED,cAEA,4CACA,CACA,4BACA,cACA,OACC,IAED,cAEA,qCACA,CACA,4BACA,cACA,OACC,IAED,cAEA,uCACA,CACA,4BACA,cACA,OACC,IAED,cAEA,+BACA,CACA,4BACA,cACA,OACC,IAED,cAEA,+BACA,CACA,4BACA,cACA,OACC,IAED,cAEA,oCACA,CACA,4BACA,cACA,OACC,IAED,cAEA,yCACA,CACA,4BACA,cACA,OACC,IAED,cAEA,oCACA,CACA,4BACA,cACA,OACC,IAED,cAEA,gCACA,CACA,4BACA,cACA,OACC,IAED,cAEA,kCACA,CACA,4BACA,cACA,OACC,IAED,cAEA,oCACA,CACA,4BACA,cACA,OACC,IAED,cAEA,+BACA,CACA,4BACA,cACA,OACC,IAED,cAEA,iCACA,CACA,4BACA,cACA,OACC,IAED,cAEA,mCACA,CACA,4BACA,cACA,OACC,IAED,cAEA,gCACA,CACA,4BACA,cAC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","file":"ckeditor.compat.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.breakAttributes = breakAttributes;\nexports.breakContainer = breakContainer;\nexports.mergeAttributes = mergeAttributes;\nexports.mergeContainers = mergeContainers;\nexports.breakViewRangePerContainer = breakViewRangePerContainer;\nexports.insert = insert;\nexports.remove = remove;\nexports.clear = clear;\nexports.move = move;\nexports.wrap = wrap;\nexports.wrapPosition = wrapPosition;\nexports.unwrap = unwrap;\nexports.rename = rename;\n\nvar _position = require('./position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _containerelement = require('./containerelement');\n\nvar _containerelement2 = _interopRequireDefault(_containerelement);\n\nvar _attributeelement = require('./attributeelement');\n\nvar _attributeelement2 = _interopRequireDefault(_attributeelement);\n\nvar _emptyelement = require('./emptyelement');\n\nvar _emptyelement2 = _interopRequireDefault(_emptyelement);\n\nvar _uielement = require('./uielement');\n\nvar _uielement2 = _interopRequireDefault(_uielement);\n\nvar _text = require('./text');\n\nvar _text2 = _interopRequireDefault(_text);\n\nvar _range = require('./range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _treewalker = require('./treewalker');\n\nvar _treewalker2 = _interopRequireDefault(_treewalker);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nvar _documentfragment = require('./documentfragment');\n\nvar _documentfragment2 = _interopRequireDefault(_documentfragment);\n\nvar _isiterable = require('@ckeditor/ckeditor5-utils/src/isiterable');\n\nvar _isiterable2 = _interopRequireDefault(_isiterable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /**\n                                                                                                                                                                                                     * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                     * For licensing, see LICENSE.md.\n                                                                                                                                                                                                     */\n\n/**\n * @module module:engine/view/writer\n */\n\n/**\n * Contains functions used for composing view tree.\n *\n * @namespace writer\n */\n\nvar writer = {\n\tbreakAttributes: breakAttributes,\n\tbreakContainer: breakContainer,\n\tmergeAttributes: mergeAttributes,\n\tmergeContainers: mergeContainers,\n\tinsert: insert,\n\tremove: remove,\n\tclear: clear,\n\tmove: move,\n\twrap: wrap,\n\twrapPosition: wrapPosition,\n\tunwrap: unwrap,\n\trename: rename,\n\tbreakViewRangePerContainer: breakViewRangePerContainer\n};\n\nexports.default = writer;\n\n/**\n * Breaks attribute nodes at provided position or at boundaries of provided range. It breaks attribute elements inside\n * up to a container element.\n *\n * In following examples `<p>` is a container, `<b>` and `<u>` are attribute nodes:\n *\n *\t\t<p>foo<b><u>bar{}</u></b></p> -> <p>foo<b><u>bar</u></b>[]</p>\n *\t\t<p>foo<b><u>{}bar</u></b></p> -> <p>foo{}<b><u>bar</u></b></p>\n *\t\t<p>foo<b><u>b{}ar</u></b></p> -> <p>foo<b><u>b</u></b>[]<b><u>ar</u></b></p>\n *\t\t<p><b>fo{o</b><u>ba}r</u></p> -> <p><b>fo</b><b>o</b><u>ba</u><u>r</u></b></p>\n *\n * **Note:** {@link module:engine/view/documentfragment~DocumentFragment DocumentFragment} is treated like a container.\n *\n * **Note:** Difference between {@link module:engine/view/writer~writer.breakAttributes breakAttributes} and\n * {@link module:engine/view/writer~writer.breakContainer breakContainer} is that `breakAttributes` breaks all\n * {@link module:engine/view/attributeelement~AttributeElement attribute elements} that are ancestors of given `position`, up to the first\n * encountered {@link module:engine/view/containerelement~ContainerElement container element}. `breakContainer` assumes that given\n * `position`\n * is directly in container element and breaks that container element.\n *\n * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container`\n * when {@link module:engine/view/range~Range#start start}\n * and {@link module:engine/view/range~Range#end end} positions of a passed range are not placed inside same parent container.\n *\n * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-empty-element`\n * when trying to break attributes\n * inside {@link module:engine/view/emptyelement~EmptyElement EmptyElement}.\n *\n * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-ui-element`\n * when trying to break attributes\n * inside {@link module:engine/view/uielement~UIElement UIElement}.\n *\n * @see module:engine/view/attributeelement~AttributeElement\n * @see module:engine/view/containerelement~ContainerElement\n * @see module:engine/view/writer~writer.breakContainer\n * @function module:engine/view/writer~writer.breakAttributes\n * @param {module:engine/view/position~Position|module:engine/view/range~Range} positionOrRange Position where to break attribute elements.\n * @returns {module:engine/view/position~Position|module:engine/view/range~Range} New position or range, after breaking the attribute\n * elements.\n */\n\nfunction breakAttributes(positionOrRange) {\n\tif (positionOrRange instanceof _position2.default) {\n\t\treturn _breakAttributes(positionOrRange);\n\t} else {\n\t\treturn _breakAttributesRange(positionOrRange);\n\t}\n}\n\n/**\n * Breaks {@link module:engine/view/containerelement~ContainerElement container view element} into two, at the given position. Position\n * has to be directly inside container element and cannot be in root. Does not break if position is at the beginning\n * or at the end of it's parent element.\n *\n *\t\t<p>foo^bar</p> -> <p>foo</p><p>bar</p>\n *\t\t<div><p>foo</p>^<p>bar</p></div> -> <div><p>foo</p></div><div><p>bar</p></div>\n *\t\t<p>^foobar</p> -> ^<p>foobar</p>\n *\t\t<p>foobar^</p> -> <p>foobar</p>^\n *\n * **Note:** Difference between {@link module:engine/view/writer~writer.breakAttributes breakAttributes} and\n * {@link module:engine/view/writer~writer.breakContainer breakContainer} is that `breakAttributes` breaks all\n * {@link module:engine/view/attributeelement~AttributeElement attribute elements} that are ancestors of given `position`, up to the first\n * encountered {@link module:engine/view/containerelement~ContainerElement container element}. `breakContainer` assumes that given\n * `position`\n * is directly in container element and breaks that container element.\n *\n * @see module:engine/view/attributeelement~AttributeElement\n * @see module:engine/view/containerelement~ContainerElement\n * @see module:engine/view/writer~writer.breakAttributes\n * @function module:engine/view/writer~writer.breakContainer\n * @param {module:engine/view/position~Position} position Position where to break element.\n * @returns {module:engine/view/position~Position} Position between broken elements. If element has not been broken, the returned position\n * is placed either before it or after it.\n */\nfunction breakContainer(position) {\n\tvar element = position.parent;\n\n\tif (!element.is('containerElement')) {\n\t\t/**\n   * Trying to break an element which is not a container element.\n   *\n   * @error view-writer-break-non-container-element\n   */\n\t\tthrow new _ckeditorerror2.default('view-writer-break-non-container-element: Trying to break an element which is not a container element.');\n\t}\n\n\tif (!element.parent) {\n\t\t/**\n   * Trying to break root element.\n   *\n   * @error view-writer-break-root\n   */\n\t\tthrow new _ckeditorerror2.default('view-writer-break-root: Trying to break root element.');\n\t}\n\n\tif (position.isAtStart) {\n\t\treturn _position2.default.createBefore(element);\n\t} else if (!position.isAtEnd) {\n\t\tvar newElement = element.clone(false);\n\n\t\tinsert(_position2.default.createAfter(element), newElement);\n\n\t\tvar sourceRange = new _range2.default(position, _position2.default.createAt(element, 'end'));\n\t\tvar targetPosition = new _position2.default(newElement, 0);\n\n\t\tmove(sourceRange, targetPosition);\n\t}\n\n\treturn _position2.default.createAfter(element);\n}\n\n/**\n * Merges {@link module:engine/view/attributeelement~AttributeElement attribute elements}. It also merges text nodes if needed.\n * Only {@link module:engine/view/attributeelement~AttributeElement#isSimilar similar} attribute elements can be merged.\n *\n * In following examples `<p>` is a container and `<b>` is an attribute element:\n *\n *\t\t<p>foo[]bar</p> -> <p>foo{}bar</p>\n *\t\t<p><b>foo</b>[]<b>bar</b></p> -> <p><b>foo{}bar</b></p>\n *\t\t<p><b foo=\"bar\">a</b>[]<b foo=\"baz\">b</b></p> -> <p><b foo=\"bar\">a</b>[]<b foo=\"baz\">b</b></p>\n *\n * It will also take care about empty attributes when merging:\n *\n *\t\t<p><b>[]</b></p> -> <p>[]</p>\n *\t\t<p><b>foo</b><i>[]</i><b>bar</b></p> -> <p><b>foo{}bar</b></p>\n *\n * **Note:** Difference between {@link module:engine/view/writer~writer.mergeAttributes mergeAttributes} and\n * {@link module:engine/view/writer~writer.mergeContainers mergeContainers} is that `mergeAttributes` merges two\n * {@link module:engine/view/attributeelement~AttributeElement attribute elements} or {@link module:engine/view/text~Text text nodes}\n * while `mergeContainer` merges two {@link module:engine/view/containerelement~ContainerElement container elements}.\n *\n * @see module:engine/view/attributeelement~AttributeElement\n * @see module:engine/view/containerelement~ContainerElement\n * @see module:engine/view/writer~writer.mergeContainers\n * @function module:engine/view/writer~writer.mergeAttributes\n * @param {module:engine/view/position~Position} position Merge position.\n * @returns {module:engine/view/position~Position} Position after merge.\n */\nfunction mergeAttributes(position) {\n\tvar positionOffset = position.offset;\n\tvar positionParent = position.parent;\n\n\t// When inside text node - nothing to merge.\n\tif (positionParent.is('text')) {\n\t\treturn position;\n\t}\n\n\t// When inside empty attribute - remove it.\n\tif (positionParent.is('attributeElement') && positionParent.childCount === 0) {\n\t\tvar parent = positionParent.parent;\n\t\tvar offset = positionParent.index;\n\t\tpositionParent.remove();\n\n\t\treturn mergeAttributes(new _position2.default(parent, offset));\n\t}\n\n\tvar nodeBefore = positionParent.getChild(positionOffset - 1);\n\tvar nodeAfter = positionParent.getChild(positionOffset);\n\n\t// Position should be placed between two nodes.\n\tif (!nodeBefore || !nodeAfter) {\n\t\treturn position;\n\t}\n\n\t// When position is between two text nodes.\n\tif (nodeBefore.is('text') && nodeAfter.is('text')) {\n\t\treturn mergeTextNodes(nodeBefore, nodeAfter);\n\t}\n\t// When selection is between two same attribute elements.\n\telse if (nodeBefore.is('attributeElement') && nodeAfter.is('attributeElement') && nodeBefore.isSimilar(nodeAfter)) {\n\t\t\t// Move all children nodes from node placed after selection and remove that node.\n\t\t\tvar count = nodeBefore.childCount;\n\t\t\tnodeBefore.appendChildren(nodeAfter.getChildren());\n\t\t\tnodeAfter.remove();\n\n\t\t\t// New position is located inside the first node, before new nodes.\n\t\t\t// Call this method recursively to merge again if needed.\n\t\t\treturn mergeAttributes(new _position2.default(nodeBefore, count));\n\t\t}\n\n\treturn position;\n}\n\n/**\n * Merges two {@link module:engine/view/containerelement~ContainerElement container elements} that are before and after given position.\n * Precisely, the element after the position is removed and it's contents are moved to element before the position.\n *\n *\t\t<p>foo</p>^<p>bar</p> -> <p>foo^bar</p>\n *\t\t<div>foo</div>^<p>bar</p> -> <div>foo^bar</div>\n *\n * **Note:** Difference between {@link module:engine/view/writer~writer.mergeAttributes mergeAttributes} and\n * {@link module:engine/view/writer~writer.mergeContainers mergeContainers} is that `mergeAttributes` merges two\n * {@link module:engine/view/attributeelement~AttributeElement attribute elements} or {@link module:engine/view/text~Text text nodes}\n * while `mergeContainer` merges two {@link module:engine/view/containerelement~ContainerElement container elements}.\n *\n * @see module:engine/view/attributeelement~AttributeElement\n * @see module:engine/view/containerelement~ContainerElement\n * @see module:engine/view/writer~writer.mergeAttributes\n * @function module:engine/view/writer~writer.mergeContainers\n * @param {module:engine/view/position~Position} position Merge position.\n * @returns {module:engine/view/position~Position} Position after merge.\n */\nfunction mergeContainers(position) {\n\tvar prev = position.nodeBefore;\n\tvar next = position.nodeAfter;\n\n\tif (!prev || !next || !prev.is('containerElement') || !next.is('containerElement')) {\n\t\t/**\n   * Element before and after given position cannot be merged.\n   *\n   * @error view-writer-merge-containers-invalid-position\n   */\n\t\tthrow new _ckeditorerror2.default('view-writer-merge-containers-invalid-position: ' + 'Element before and after given position cannot be merged.');\n\t}\n\n\tvar lastChild = prev.getChild(prev.childCount - 1);\n\tvar newPosition = lastChild instanceof _text2.default ? _position2.default.createAt(lastChild, 'end') : _position2.default.createAt(prev, 'end');\n\n\tmove(_range2.default.createIn(next), _position2.default.createAt(prev, 'end'));\n\tremove(_range2.default.createOn(next));\n\n\treturn newPosition;\n}\n\n/**\n * Breaks given `range` on a set of {@link module:engine/view/range~Range ranges}, that each are contained within a\n * {@link module:engine/view/containerelement~ContainerElement container element}. After `range` is broken, it's \"pieces\" can\n * be used by other {@link module:engine/view/writer~writer} methods (which expect that passed ranges are contained within\n * one container element).\n *\n * @function module:engine/view/writer~writer.breakViewRangePerContainer\n * @param {module:engine/view/range~Range} range Range to break.\n * @returns {Array.<module:engine/view/range~Range>} Ranges that combine into passed `viewRange`.\n */\nfunction breakViewRangePerContainer(range) {\n\tvar ranges = [];\n\tvar walker = new _treewalker2.default({ boundaries: range });\n\n\tvar start = range.start;\n\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = walker[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar value = _step.value;\n\n\t\t\tif (value.item.is('containerElement')) {\n\t\t\t\tif (!start.isEqual(value.previousPosition)) {\n\t\t\t\t\tranges.push(new _range2.default(start, value.previousPosition));\n\t\t\t\t}\n\n\t\t\t\tstart = value.nextPosition;\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n\n\tranges.push(new _range2.default(start, range.end));\n\n\treturn ranges;\n}\n\n/**\n * Insert node or nodes at specified position. Takes care about breaking attributes before insertion\n * and merging them afterwards.\n *\n * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-insert-invalid-node` when nodes to insert\n * contains instances that are not {@link module:engine/view/text~Text Texts},\n * {@link module:engine/view/attributeelement~AttributeElement AttributeElements},\n * {@link module:engine/view/containerelement~ContainerElement ContainerElements},\n * {@link module:engine/view/emptyelement~EmptyElement EmptyElements} or\n * {@link module:engine/view/uielement~UIElement UIElements}.\n *\n * @function insert\n * @param {module:engine/view/position~Position} position Insertion position.\n * @param {module:engine/view/text~Text|module:engine/view/attributeelement~AttributeElement|\n * module:engine/view/containerelement~ContainerElement|module:engine/view/emptyelement~EmptyElement|\n * module:engine/view/uielement~UIElement|Iterable.<module:engine/view/text~Text|\n * module:engine/view/attributeelement~AttributeElement|module:engine/view/containerelement~ContainerElement|\n * module:engine/view/emptyelement~EmptyElement|module:engine/view/uielement~UIElement>} nodes Node or nodes to insert.\n * @returns {module:engine/view/range~Range} Range around inserted nodes.\n */\nfunction insert(position, nodes) {\n\tnodes = (0, _isiterable2.default)(nodes) ? [].concat(_toConsumableArray(nodes)) : [nodes];\n\n\t// Check if nodes to insert are instances of AttributeElements, ContainerElements, EmptyElements, UIElements or Text.\n\tvalidateNodesToInsert(nodes);\n\n\tvar container = getParentContainer(position);\n\n\tif (!container) {\n\t\t/**\n   * Position's parent container cannot be found.\n   *\n   * @error view-writer-invalid-position-container\n   */\n\t\tthrow new _ckeditorerror2.default('view-writer-invalid-position-container');\n\t}\n\n\tvar insertionPosition = _breakAttributes(position, true);\n\n\tvar length = container.insertChildren(insertionPosition.offset, nodes);\n\tvar endPosition = insertionPosition.getShiftedBy(length);\n\tvar start = mergeAttributes(insertionPosition);\n\n\t// When no nodes were inserted - return collapsed range.\n\tif (length === 0) {\n\t\treturn new _range2.default(start, start);\n\t} else {\n\t\t// If start position was merged - move end position.\n\t\tif (!start.isEqual(insertionPosition)) {\n\t\t\tendPosition.offset--;\n\t\t}\n\n\t\tvar end = mergeAttributes(endPosition);\n\n\t\treturn new _range2.default(start, end);\n\t}\n}\n\n/**\n * Removes provided range from the container.\n *\n * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n * same parent container.\n *\n * @function module:engine/view/writer~writer.remove\n * @param {module:engine/view/range~Range} range Range to remove from container. After removing, it will be updated\n * to a collapsed range showing the new position.\n * @returns {module:engine/view/documentfragment~DocumentFragment} Document fragment containing removed nodes.\n */\nfunction remove(range) {\n\tvalidateRangeContainer(range);\n\n\t// If range is collapsed - nothing to remove.\n\tif (range.isCollapsed) {\n\t\treturn new _documentfragment2.default();\n\t}\n\n\t// Break attributes at range start and end.\n\n\tvar _breakAttributesRange2 = _breakAttributesRange(range, true),\n\t    breakStart = _breakAttributesRange2.start,\n\t    breakEnd = _breakAttributesRange2.end;\n\n\tvar parentContainer = breakStart.parent;\n\n\tvar count = breakEnd.offset - breakStart.offset;\n\n\t// Remove nodes in range.\n\tvar removed = parentContainer.removeChildren(breakStart.offset, count);\n\n\t// Merge after removing.\n\tvar mergePosition = mergeAttributes(breakStart);\n\trange.start = mergePosition;\n\trange.end = _position2.default.createFromPosition(mergePosition);\n\n\t// Return removed nodes.\n\treturn new _documentfragment2.default(removed);\n}\n\n/**\n * Removes matching elements from given range.\n *\n * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n * same parent container.\n *\n * @function module:engine/view/writer~writer.clear\n * @param {module:engine/view/range~Range} range Range to clear.\n * @param {module:engine/view/element~Element} element Element to remove.\n */\nfunction clear(range, element) {\n\tvalidateRangeContainer(range);\n\n\t// Create walker on given range.\n\t// We walk backward because when we remove element during walk it modifies range end position.\n\tvar walker = range.getWalker({\n\t\tdirection: 'backward',\n\t\tignoreElementEnd: true\n\t});\n\n\t// Let's walk.\n\tvar _iteratorNormalCompletion2 = true;\n\tvar _didIteratorError2 = false;\n\tvar _iteratorError2 = undefined;\n\n\ttry {\n\t\tfor (var _iterator2 = walker[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\tvar current = _step2.value;\n\n\t\t\tvar item = current.item;\n\t\t\tvar rangeToRemove = void 0;\n\n\t\t\t// When current item matches to the given element.\n\t\t\tif (item.is('element') && element.isSimilar(item)) {\n\t\t\t\t// Create range on this element.\n\t\t\t\trangeToRemove = _range2.default.createOn(item);\n\t\t\t\t// When range starts inside Text or TextProxy element.\n\t\t\t} else if (!current.nextPosition.isAfter(range.start) && (item.is('text') || item.is('textProxy'))) {\n\t\t\t\t// We need to check if parent of this text matches to given element.\n\t\t\t\tvar parentElement = item.getAncestors().find(function (ancestor) {\n\t\t\t\t\treturn ancestor.is('element') && element.isSimilar(ancestor);\n\t\t\t\t});\n\n\t\t\t\t// If it is then create range inside this element.\n\t\t\t\tif (parentElement) {\n\t\t\t\t\trangeToRemove = _range2.default.createIn(parentElement);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we have found element to remove.\n\t\t\tif (rangeToRemove) {\n\t\t\t\t// We need to check if element range stick out of the given range and truncate if it is.\n\t\t\t\tif (rangeToRemove.end.isAfter(range.end)) {\n\t\t\t\t\trangeToRemove.end = range.end;\n\t\t\t\t}\n\n\t\t\t\tif (rangeToRemove.start.isBefore(range.start)) {\n\t\t\t\t\trangeToRemove.start = range.start;\n\t\t\t\t}\n\n\t\t\t\t// At the end we remove range with found element.\n\t\t\t\tremove(rangeToRemove);\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError2 = true;\n\t\t_iteratorError2 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t_iterator2.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError2) {\n\t\t\t\tthrow _iteratorError2;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Moves nodes from provided range to target position.\n *\n * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n * same parent container.\n *\n * @function module:engine/view/writer~writer.move\n * @param {module:engine/view/range~Range} sourceRange Range containing nodes to move.\n * @param {module:engine/view/position~Position} targetPosition Position to insert.\n * @returns {module:engine/view/range~Range} Range in target container. Inserted nodes are placed between\n * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions.\n */\nfunction move(sourceRange, targetPosition) {\n\tvar nodes = void 0;\n\n\tif (targetPosition.isAfter(sourceRange.end)) {\n\t\ttargetPosition = _breakAttributes(targetPosition, true);\n\n\t\tvar parent = targetPosition.parent;\n\t\tvar countBefore = parent.childCount;\n\n\t\tsourceRange = _breakAttributesRange(sourceRange, true);\n\n\t\tnodes = remove(sourceRange);\n\n\t\ttargetPosition.offset += parent.childCount - countBefore;\n\t} else {\n\t\tnodes = remove(sourceRange);\n\t}\n\n\treturn insert(targetPosition, nodes);\n}\n\n/**\n * Wraps elements within range with provided {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\n *\n * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-invalid-range-container`\n * when {@link module:engine/view/range~Range#start}\n * and {@link module:engine/view/range~Range#end} positions are not placed inside same parent container.\n * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-invalid-attribute` when passed attribute element is not\n * an instance of {module:engine/view/attributeelement~AttributeElement AttributeElement}.\n *\n * @function module:engine/view/writer~writer.wrap\n * @param {module:engine/view/range~Range} range Range to wrap.\n * @param {module:engine/view/attributeelement~AttributeElement} attribute Attribute element to use as wrapper.\n */\nfunction wrap(range, attribute) {\n\tif (!(attribute instanceof _attributeelement2.default)) {\n\t\t/**\n   * Attribute element need to be instance of attribute element.\n   *\n   * @error view-writer-wrap-invalid-attribute\n   */\n\t\tthrow new _ckeditorerror2.default('view-writer-wrap-invalid-attribute');\n\t}\n\n\tvalidateRangeContainer(range);\n\n\t// If range is collapsed - nothing to wrap.\n\tif (range.isCollapsed) {\n\t\treturn range;\n\t}\n\n\t// Range around one element.\n\tif (range.end.isEqual(range.start.getShiftedBy(1))) {\n\t\tvar node = range.start.nodeAfter;\n\n\t\tif (node instanceof _attributeelement2.default && wrapAttributeElement(attribute, node)) {\n\t\t\treturn range;\n\t\t}\n\t}\n\n\t// Range is inside single attribute and spans on all children.\n\tif (rangeSpansOnAllChildren(range) && wrapAttributeElement(attribute, range.start.parent)) {\n\t\tvar parent = range.start.parent.parent;\n\t\tvar index = range.start.parent.index;\n\n\t\treturn _range2.default.createFromParentsAndOffsets(parent, index, parent, index + 1);\n\t}\n\n\t// Break attributes at range start and end.\n\n\tvar _breakAttributesRange3 = _breakAttributesRange(range, true),\n\t    breakStart = _breakAttributesRange3.start,\n\t    breakEnd = _breakAttributesRange3.end;\n\n\tvar parentContainer = breakStart.parent;\n\n\t// Unwrap children located between break points.\n\tvar unwrappedRange = unwrapChildren(parentContainer, breakStart.offset, breakEnd.offset, attribute);\n\n\t// Wrap all children with attribute.\n\tvar newRange = wrapChildren(parentContainer, unwrappedRange.start.offset, unwrappedRange.end.offset, attribute);\n\n\t// Merge attributes at the both ends and return a new range.\n\tvar start = mergeAttributes(newRange.start);\n\n\t// If start position was merged - move end position back.\n\tif (!start.isEqual(newRange.start)) {\n\t\tnewRange.end.offset--;\n\t}\n\tvar end = mergeAttributes(newRange.end);\n\n\treturn new _range2.default(start, end);\n}\n\n/**\n * Wraps position with provided attribute. Returns new position after wrapping. This method will also merge newly\n * added attribute with its siblings whenever possible.\n *\n * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-invalid-attribute` when passed attribute element is not\n * an instance of {module:engine/view/attributeelement~AttributeElement AttributeElement}.\n *\n * @param {module:engine/view/position~Position} position\n * @param {module:engine/view/attributeelement~AttributeElement} attribute\n * @returns {module:engine/view/position~Position} New position after wrapping.\n */\nfunction wrapPosition(position, attribute) {\n\tif (!(attribute instanceof _attributeelement2.default)) {\n\t\t/**\n   * Attribute element need to be instance of attribute element.\n   *\n   * @error view-writer-wrap-invalid-attribute\n   */\n\t\tthrow new _ckeditorerror2.default('view-writer-wrap-invalid-attribute');\n\t}\n\n\t// Return same position when trying to wrap with attribute similar to position parent.\n\tif (attribute.isSimilar(position.parent)) {\n\t\treturn movePositionToTextNode(_position2.default.createFromPosition(position));\n\t}\n\n\t// When position is inside text node - break it and place new position between two text nodes.\n\tif (position.parent.is('text')) {\n\t\tposition = breakTextNode(position);\n\t}\n\n\t// Create fake element that will represent position, and will not be merged with other attributes.\n\tvar fakePosition = new _attributeelement2.default();\n\tfakePosition.priority = Number.POSITIVE_INFINITY;\n\tfakePosition.isSimilar = function () {\n\t\treturn false;\n\t};\n\n\t// Insert fake element in position location.\n\tposition.parent.insertChildren(position.offset, fakePosition);\n\n\t// Range around inserted fake attribute element.\n\tvar wrapRange = new _range2.default(position, position.getShiftedBy(1));\n\n\t// Wrap fake element with attribute (it will also merge if possible).\n\twrap(wrapRange, attribute);\n\n\t// Remove fake element and place new position there.\n\tvar newPosition = new _position2.default(fakePosition.parent, fakePosition.index);\n\tfakePosition.remove();\n\n\t// If position is placed between text nodes - merge them and return position inside.\n\tvar nodeBefore = newPosition.nodeBefore;\n\tvar nodeAfter = newPosition.nodeAfter;\n\n\tif (nodeBefore instanceof _text2.default && nodeAfter instanceof _text2.default) {\n\t\treturn mergeTextNodes(nodeBefore, nodeAfter);\n\t}\n\n\t// If position is next to text node - move position inside.\n\treturn movePositionToTextNode(newPosition);\n}\n\n/**\n * Unwraps nodes within provided range from attribute element.\n *\n * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n * same parent container.\n *\n * @param {module:engine/view/range~Range} range\n * @param {module:engine/view/attributeelement~AttributeElement} element\n */\nfunction unwrap(range, attribute) {\n\tif (!(attribute instanceof _attributeelement2.default)) {\n\t\t/**\n   * Attribute element need to be instance of attribute element.\n   *\n   * @error view-writer-unwrap-invalid-attribute\n   */\n\t\tthrow new _ckeditorerror2.default('view-writer-unwrap-invalid-attribute');\n\t}\n\n\tvalidateRangeContainer(range);\n\n\t// If range is collapsed - nothing to unwrap.\n\tif (range.isCollapsed) {\n\t\treturn range;\n\t}\n\n\t// Range around one element - check if AttributeElement can be unwrapped partially when it's not similar.\n\t// For example:\n\t// <b class=\"foo bar\" title=\"baz\"></b> unwrap with:\t<b class=\"foo\"></p> result: <b class\"bar\" title=\"baz\"></b>\n\tif (range.end.isEqual(range.start.getShiftedBy(1))) {\n\t\tvar node = range.start.nodeAfter;\n\n\t\t// Unwrap single attribute element.\n\t\tif (!attribute.isSimilar(node) && node instanceof _attributeelement2.default && unwrapAttributeElement(attribute, node)) {\n\t\t\treturn range;\n\t\t}\n\t}\n\n\t// Break attributes at range start and end.\n\n\tvar _breakAttributesRange4 = _breakAttributesRange(range, true),\n\t    breakStart = _breakAttributesRange4.start,\n\t    breakEnd = _breakAttributesRange4.end;\n\n\tvar parentContainer = breakStart.parent;\n\n\t// Unwrap children located between break points.\n\tvar newRange = unwrapChildren(parentContainer, breakStart.offset, breakEnd.offset, attribute);\n\n\t// Merge attributes at the both ends and return a new range.\n\tvar start = mergeAttributes(newRange.start);\n\n\t// If start position was merged - move end position back.\n\tif (!start.isEqual(newRange.start)) {\n\t\tnewRange.end.offset--;\n\t}\n\tvar end = mergeAttributes(newRange.end);\n\n\treturn new _range2.default(start, end);\n}\n\n/**\n * Renames element by creating a copy of renamed element but with changed name and then moving contents of the\n * old element to the new one. Keep in mind that this will invalidate all {@link module:engine/view/position~Position positions} which\n * has renamed element as {@link module:engine/view/position~Position#parent a parent}.\n *\n * New element has to be created because `Element#tagName` property in DOM is readonly.\n *\n * Since this function creates a new element and removes the given one, the new element is returned to keep reference.\n *\n * @param {module:engine/view/containerelement~ContainerElement} viewElement Element to be renamed.\n * @param {String} newName New name for element.\n */\nfunction rename(viewElement, newName) {\n\tvar newElement = new _containerelement2.default(newName, viewElement.getAttributes());\n\n\tinsert(_position2.default.createAfter(viewElement), newElement);\n\tmove(_range2.default.createIn(viewElement), _position2.default.createAt(newElement));\n\tremove(_range2.default.createOn(viewElement));\n\n\treturn newElement;\n}\n\n// Returns first parent container of specified {@link module:engine/view/position~Position Position}.\n// Position's parent node is checked as first, then next parents are checked.\n// Note that {@link module:engine/view/documentfragment~DocumentFragment DocumentFragment} is treated like a container.\n//\n// @param {module:engine/view/position~Position} position Position used as a start point to locate parent container.\n// @returns {module:engine/view/containerelement~ContainerElement|module:engine/view/documentfragment~DocumentFragment|undefined}\n// Parent container element or `undefined` if container is not found.\nfunction getParentContainer(position) {\n\tvar parent = position.parent;\n\n\twhile (!isContainerOrFragment(parent)) {\n\t\tif (!parent) {\n\t\t\treturn undefined;\n\t\t}\n\t\tparent = parent.parent;\n\t}\n\n\treturn parent;\n}\n\n// Function used by both public breakAttributes (without splitting text nodes) and by other methods (with\n// splitting text nodes).\n//\n// @param {module:engine/view/range~Range} range Range which `start` and `end` positions will be used to break attributes.\n// @param {Boolean} [forceSplitText = false] If set to `true`, will break text nodes even if they are directly in\n// container element. This behavior will result in incorrect view state, but is needed by other view writing methods\n// which then fixes view state. Defaults to `false`.\n// @returns {module:engine/view/range~Range} New range with located at break positions.\nfunction _breakAttributesRange(range) {\n\tvar forceSplitText = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n\tvar rangeStart = range.start;\n\tvar rangeEnd = range.end;\n\n\tvalidateRangeContainer(range);\n\n\t// Break at the collapsed position. Return new collapsed range.\n\tif (range.isCollapsed) {\n\t\tvar position = _breakAttributes(range.start, forceSplitText);\n\n\t\treturn new _range2.default(position, position);\n\t}\n\n\tvar breakEnd = _breakAttributes(rangeEnd, forceSplitText);\n\tvar count = breakEnd.parent.childCount;\n\tvar breakStart = _breakAttributes(rangeStart, forceSplitText);\n\n\t// Calculate new break end offset.\n\tbreakEnd.offset += breakEnd.parent.childCount - count;\n\n\treturn new _range2.default(breakStart, breakEnd);\n}\n\n// Function used by public breakAttributes (without splitting text nodes) and by other methods (with\n// splitting text nodes).\n//\n// Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-empty-element` when break position\n// is placed inside {@link module:engine/view/emptyelement~EmptyElement EmptyElement}.\n//\n// Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-ui-element` when break position\n// is placed inside {@link module:engine/view/uielement~UIElement UIElement}.\n//\n// @param {module:engine/view/position~Position} position Position where to break attributes.\n// @param {Boolean} [forceSplitText = false] If set to `true`, will break text nodes even if they are directly in\n// container element. This behavior will result in incorrect view state, but is needed by other view writing methods\n// which then fixes view state. Defaults to `false`.\n// @returns {module:engine/view/position~Position} New position after breaking the attributes.\nfunction _breakAttributes(position) {\n\tvar forceSplitText = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n\tvar positionOffset = position.offset;\n\tvar positionParent = position.parent;\n\n\t// If position is placed inside EmptyElement - throw an exception as we cannot break inside.\n\tif (position.parent.is('emptyElement')) {\n\t\t/**\n   * Cannot break inside EmptyElement instance.\n   *\n   * @error view-writer-cannot-break-empty-element\n   */\n\t\tthrow new _ckeditorerror2.default('view-writer-cannot-break-empty-element');\n\t}\n\n\t// If position is placed inside UIElement - throw an exception as we cannot break inside.\n\tif (position.parent.is('uiElement')) {\n\t\t/**\n   * Cannot break inside UIElement instance.\n   *\n   * @error view-writer-cannot-break-ui-element\n   */\n\t\tthrow new _ckeditorerror2.default('view-writer-cannot-break-ui-element');\n\t}\n\n\t// There are no attributes to break and text nodes breaking is not forced.\n\tif (!forceSplitText && positionParent.is('text') && isContainerOrFragment(positionParent.parent)) {\n\t\treturn _position2.default.createFromPosition(position);\n\t}\n\n\t// Position's parent is container, so no attributes to break.\n\tif (isContainerOrFragment(positionParent)) {\n\t\treturn _position2.default.createFromPosition(position);\n\t}\n\n\t// Break text and start again in new position.\n\tif (positionParent.is('text')) {\n\t\treturn _breakAttributes(breakTextNode(position), forceSplitText);\n\t}\n\n\tvar length = positionParent.childCount;\n\n\t// <p>foo<b><u>bar{}</u></b></p>\n\t// <p>foo<b><u>bar</u>[]</b></p>\n\t// <p>foo<b><u>bar</u></b>[]</p>\n\tif (positionOffset == length) {\n\t\tvar newPosition = new _position2.default(positionParent.parent, positionParent.index + 1);\n\n\t\treturn _breakAttributes(newPosition, forceSplitText);\n\t} else\n\t\t// <p>foo<b><u>{}bar</u></b></p>\n\t\t// <p>foo<b>[]<u>bar</u></b></p>\n\t\t// <p>foo{}<b><u>bar</u></b></p>\n\t\tif (positionOffset === 0) {\n\t\t\tvar _newPosition = new _position2.default(positionParent.parent, positionParent.index);\n\n\t\t\treturn _breakAttributes(_newPosition, forceSplitText);\n\t\t}\n\t\t// <p>foo<b><u>b{}ar</u></b></p>\n\t\t// <p>foo<b><u>b[]ar</u></b></p>\n\t\t// <p>foo<b><u>b</u>[]<u>ar</u></b></p>\n\t\t// <p>foo<b><u>b</u></b>[]<b><u>ar</u></b></p>\n\t\telse {\n\t\t\t\tvar offsetAfter = positionParent.index + 1;\n\n\t\t\t\t// Break element.\n\t\t\t\tvar clonedNode = positionParent.clone();\n\n\t\t\t\t// Insert cloned node to position's parent node.\n\t\t\t\tpositionParent.parent.insertChildren(offsetAfter, clonedNode);\n\n\t\t\t\t// Get nodes to move.\n\t\t\t\tvar count = positionParent.childCount - positionOffset;\n\t\t\t\tvar nodesToMove = positionParent.removeChildren(positionOffset, count);\n\n\t\t\t\t// Move nodes to cloned node.\n\t\t\t\tclonedNode.appendChildren(nodesToMove);\n\n\t\t\t\t// Create new position to work on.\n\t\t\t\tvar _newPosition2 = new _position2.default(positionParent.parent, offsetAfter);\n\n\t\t\t\treturn _breakAttributes(_newPosition2, forceSplitText);\n\t\t\t}\n}\n\n// Unwraps children from provided `attribute`. Only children contained in `parent` element between\n// `startOffset` and `endOffset` will be unwrapped.\n//\n// @param {module:engine/view/element~Element} parent\n// @param {Number} startOffset\n// @param {Number} endOffset\n// @param {module:engine/view/element~Element} attribute\nfunction unwrapChildren(parent, startOffset, endOffset, attribute) {\n\tvar i = startOffset;\n\tvar unwrapPositions = [];\n\n\t// Iterate over each element between provided offsets inside parent.\n\twhile (i < endOffset) {\n\t\tvar child = parent.getChild(i);\n\n\t\t// If attributes are the similar, then unwrap.\n\t\tif (child.isSimilar(attribute)) {\n\t\t\tvar unwrapped = child.getChildren();\n\t\t\tvar count = child.childCount;\n\n\t\t\t// Replace wrapper element with its children\n\t\t\tchild.remove();\n\t\t\tparent.insertChildren(i, unwrapped);\n\n\t\t\t// Save start and end position of moved items.\n\t\t\tunwrapPositions.push(new _position2.default(parent, i), new _position2.default(parent, i + count));\n\n\t\t\t// Skip elements that were unwrapped. Assuming that there won't be another element to unwrap in child\n\t\t\t// elements.\n\t\t\ti += count;\n\t\t\tendOffset += count - 1;\n\t\t} else {\n\t\t\t// If other nested attribute is found start unwrapping there.\n\t\t\tif (child.is('attributeElement')) {\n\t\t\t\tunwrapChildren(child, 0, child.childCount, attribute);\n\t\t\t}\n\n\t\t\ti++;\n\t\t}\n\t}\n\n\t// Merge at each unwrap.\n\tvar offsetChange = 0;\n\n\tvar _iteratorNormalCompletion3 = true;\n\tvar _didIteratorError3 = false;\n\tvar _iteratorError3 = undefined;\n\n\ttry {\n\t\tfor (var _iterator3 = unwrapPositions[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\tvar position = _step3.value;\n\n\t\t\tposition.offset -= offsetChange;\n\n\t\t\t// Do not merge with elements outside selected children.\n\t\t\tif (position.offset == startOffset || position.offset == endOffset) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar newPosition = mergeAttributes(position);\n\n\t\t\t// If nodes were merged - other merge offsets will change.\n\t\t\tif (!newPosition.isEqual(position)) {\n\t\t\t\toffsetChange++;\n\t\t\t\tendOffset--;\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError3 = true;\n\t\t_iteratorError3 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t_iterator3.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError3) {\n\t\t\t\tthrow _iteratorError3;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _range2.default.createFromParentsAndOffsets(parent, startOffset, parent, endOffset);\n}\n\n// Wraps children with provided `attribute`. Only children contained in `parent` element between\n// `startOffset` and `endOffset` will be wrapped.\n//\n// @param {module:engine/view/element~Element} parent\n// @param {Number} startOffset\n// @param {Number} endOffset\n// @param {module:engine/view/element~Element} attribute\nfunction wrapChildren(parent, startOffset, endOffset, attribute) {\n\tvar i = startOffset;\n\tvar wrapPositions = [];\n\n\twhile (i < endOffset) {\n\t\tvar child = parent.getChild(i);\n\t\tvar isText = child.is('text');\n\t\tvar isAttribute = child.is('attributeElement');\n\t\tvar isEmpty = child.is('emptyElement');\n\t\tvar isUI = child.is('uiElement');\n\n\t\t// Wrap text, empty elements, ui elements or attributes with higher or equal priority.\n\t\tif (isText || isEmpty || isUI || isAttribute && attribute.priority <= child.priority) {\n\t\t\t// Clone attribute.\n\t\t\tvar newAttribute = attribute.clone();\n\n\t\t\t// Wrap current node with new attribute;\n\t\t\tchild.remove();\n\t\t\tnewAttribute.appendChildren(child);\n\t\t\tparent.insertChildren(i, newAttribute);\n\n\t\t\twrapPositions.push(new _position2.default(parent, i));\n\t\t}\n\t\t// If other nested attribute is found start wrapping there.\n\t\telse if (isAttribute) {\n\t\t\t\twrapChildren(child, 0, child.childCount, attribute);\n\t\t\t}\n\n\t\ti++;\n\t}\n\n\t// Merge at each wrap.\n\tvar offsetChange = 0;\n\n\tvar _iteratorNormalCompletion4 = true;\n\tvar _didIteratorError4 = false;\n\tvar _iteratorError4 = undefined;\n\n\ttry {\n\t\tfor (var _iterator4 = wrapPositions[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\tvar position = _step4.value;\n\n\t\t\tposition.offset -= offsetChange;\n\n\t\t\t// Do not merge with elements outside selected children.\n\t\t\tif (position.offset == startOffset) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar newPosition = mergeAttributes(position);\n\n\t\t\t// If nodes were merged - other merge offsets will change.\n\t\t\tif (!newPosition.isEqual(position)) {\n\t\t\t\toffsetChange++;\n\t\t\t\tendOffset--;\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError4 = true;\n\t\t_iteratorError4 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t_iterator4.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError4) {\n\t\t\t\tthrow _iteratorError4;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _range2.default.createFromParentsAndOffsets(parent, startOffset, parent, endOffset);\n}\n\n// Returns new position that is moved to near text node. Returns same position if there is no text node before of after\n// specified position.\n//\n//\t\t<p>foo[]</p>  ->  <p>foo{}</p>\n//\t\t<p>[]foo</p>  ->  <p>{}foo</p>\n//\n// @param {module:engine/view/position~Position} position\n// @returns {module:engine/view/position~Position} Position located inside text node or same position if there is no text nodes\n// before or after position location.\nfunction movePositionToTextNode(position) {\n\tvar nodeBefore = position.nodeBefore;\n\n\tif (nodeBefore && nodeBefore.is('text')) {\n\t\treturn new _position2.default(nodeBefore, nodeBefore.data.length);\n\t}\n\n\tvar nodeAfter = position.nodeAfter;\n\n\tif (nodeAfter && nodeAfter.is('text')) {\n\t\treturn new _position2.default(nodeAfter, 0);\n\t}\n\n\treturn position;\n}\n\n// Breaks text node into two text nodes when possible.\n//\n//\t\t<p>foo{}bar</p> -> <p>foo[]bar</p>\n//\t\t<p>{}foobar</p> -> <p>[]foobar</p>\n//\t\t<p>foobar{}</p> -> <p>foobar[]</p>\n//\n// @param {module:engine/view/position~Position} position Position that need to be placed inside text node.\n// @returns {module:engine/view/position~Position} New position after breaking text node.\nfunction breakTextNode(position) {\n\tif (position.offset == position.parent.data.length) {\n\t\treturn new _position2.default(position.parent.parent, position.parent.index + 1);\n\t}\n\n\tif (position.offset === 0) {\n\t\treturn new _position2.default(position.parent.parent, position.parent.index);\n\t}\n\n\t// Get part of the text that need to be moved.\n\tvar textToMove = position.parent.data.slice(position.offset);\n\n\t// Leave rest of the text in position's parent.\n\tposition.parent.data = position.parent.data.slice(0, position.offset);\n\n\t// Insert new text node after position's parent text node.\n\tposition.parent.parent.insertChildren(position.parent.index + 1, new _text2.default(textToMove));\n\n\t// Return new position between two newly created text nodes.\n\treturn new _position2.default(position.parent.parent, position.parent.index + 1);\n}\n\n// Merges two text nodes into first node. Removes second node and returns merge position.\n//\n// @param {module:engine/view/text~Text} t1 First text node to merge. Data from second text node will be moved at the end of\n// this text node.\n// @param {module:engine/view/text~Text} t2 Second text node to merge. This node will be removed after merging.\n// @returns {module:engine/view/position~Position} Position after merging text nodes.\nfunction mergeTextNodes(t1, t2) {\n\t// Merge text data into first text node and remove second one.\n\tvar nodeBeforeLength = t1.data.length;\n\tt1.data += t2.data;\n\tt2.remove();\n\n\treturn new _position2.default(t1, nodeBeforeLength);\n}\n\n// Wraps one {@link module:engine/view/attributeelement~AttributeElement AttributeElement} into another by merging them if possible.\n// Two AttributeElements can be merged when there is no attribute or style conflicts between them.\n// When merging is possible - all attributes, styles and classes are moved from wrapper element to element being\n// wrapped.\n//\n// @param {module:engine/view/attributeelement~AttributeElement} wrapper Wrapper AttributeElement.\n// @param {module:engine/view/attributeelement~AttributeElement} toWrap AttributeElement to wrap using wrapper element.\n// @returns {Boolean} Returns `true` if elements are merged.\nfunction wrapAttributeElement(wrapper, toWrap) {\n\t// Can't merge if name or priority differs.\n\tif (wrapper.name !== toWrap.name || wrapper.priority !== toWrap.priority) {\n\t\treturn false;\n\t}\n\n\t// Check if attributes can be merged.\n\tvar _iteratorNormalCompletion5 = true;\n\tvar _didIteratorError5 = false;\n\tvar _iteratorError5 = undefined;\n\n\ttry {\n\t\tfor (var _iterator5 = wrapper.getAttributeKeys()[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t\t\tvar key = _step5.value;\n\n\t\t\t// Classes and styles should be checked separately.\n\t\t\tif (key === 'class' || key === 'style') {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If some attributes are different we cannot wrap.\n\t\t\tif (toWrap.hasAttribute(key) && toWrap.getAttribute(key) !== wrapper.getAttribute(key)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Check if styles can be merged.\n\t} catch (err) {\n\t\t_didIteratorError5 = true;\n\t\t_iteratorError5 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t\t\t\t_iterator5.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError5) {\n\t\t\t\tthrow _iteratorError5;\n\t\t\t}\n\t\t}\n\t}\n\n\tvar _iteratorNormalCompletion6 = true;\n\tvar _didIteratorError6 = false;\n\tvar _iteratorError6 = undefined;\n\n\ttry {\n\t\tfor (var _iterator6 = wrapper.getStyleNames()[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t\t\tvar _key = _step6.value;\n\n\t\t\tif (toWrap.hasStyle(_key) && toWrap.getStyle(_key) !== wrapper.getStyle(_key)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Move all attributes/classes/styles from wrapper to wrapped AttributeElement.\n\t} catch (err) {\n\t\t_didIteratorError6 = true;\n\t\t_iteratorError6 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion6 && _iterator6.return) {\n\t\t\t\t_iterator6.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError6) {\n\t\t\t\tthrow _iteratorError6;\n\t\t\t}\n\t\t}\n\t}\n\n\tvar _iteratorNormalCompletion7 = true;\n\tvar _didIteratorError7 = false;\n\tvar _iteratorError7 = undefined;\n\n\ttry {\n\t\tfor (var _iterator7 = wrapper.getAttributeKeys()[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n\t\t\tvar _key2 = _step7.value;\n\n\t\t\t// Classes and styles should be checked separately.\n\t\t\tif (_key2 === 'class' || _key2 === 'style') {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Move only these attributes that are not present - other are similar.\n\t\t\tif (!toWrap.hasAttribute(_key2)) {\n\t\t\t\ttoWrap.setAttribute(_key2, wrapper.getAttribute(_key2));\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError7 = true;\n\t\t_iteratorError7 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion7 && _iterator7.return) {\n\t\t\t\t_iterator7.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError7) {\n\t\t\t\tthrow _iteratorError7;\n\t\t\t}\n\t\t}\n\t}\n\n\tvar _iteratorNormalCompletion8 = true;\n\tvar _didIteratorError8 = false;\n\tvar _iteratorError8 = undefined;\n\n\ttry {\n\t\tfor (var _iterator8 = wrapper.getStyleNames()[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n\t\t\tvar _key3 = _step8.value;\n\n\t\t\tif (!toWrap.hasStyle(_key3)) {\n\t\t\t\ttoWrap.setStyle(_key3, wrapper.getStyle(_key3));\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError8 = true;\n\t\t_iteratorError8 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion8 && _iterator8.return) {\n\t\t\t\t_iterator8.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError8) {\n\t\t\t\tthrow _iteratorError8;\n\t\t\t}\n\t\t}\n\t}\n\n\tvar _iteratorNormalCompletion9 = true;\n\tvar _didIteratorError9 = false;\n\tvar _iteratorError9 = undefined;\n\n\ttry {\n\t\tfor (var _iterator9 = wrapper.getClassNames()[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n\t\t\tvar _key4 = _step9.value;\n\n\t\t\tif (!toWrap.hasClass(_key4)) {\n\t\t\t\ttoWrap.addClass(_key4);\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError9 = true;\n\t\t_iteratorError9 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion9 && _iterator9.return) {\n\t\t\t\t_iterator9.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError9) {\n\t\t\t\tthrow _iteratorError9;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\n// Unwraps {@link module:engine/view/attributeelement~AttributeElement AttributeElement} from another by removing corresponding attributes,\n// classes and styles. All attributes, classes and styles from wrapper should be present inside element being unwrapped.\n//\n// @param {module:engine/view/attributeelement~AttributeElement} wrapper Wrapper AttributeElement.\n// @param {module:engine/view/attributeelement~AttributeElement} toUnwrap AttributeElement to unwrap using wrapper element.\n// @returns {Boolean} Returns `true` if elements are unwrapped.\nfunction unwrapAttributeElement(wrapper, toUnwrap) {\n\t// Can't unwrap if name or priority differs.\n\tif (wrapper.name !== toUnwrap.name || wrapper.priority !== toUnwrap.priority) {\n\t\treturn false;\n\t}\n\n\t// Check if AttributeElement has all wrapper attributes.\n\tvar _iteratorNormalCompletion10 = true;\n\tvar _didIteratorError10 = false;\n\tvar _iteratorError10 = undefined;\n\n\ttry {\n\t\tfor (var _iterator10 = wrapper.getAttributeKeys()[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n\t\t\tvar key = _step10.value;\n\n\t\t\t// Classes and styles should be checked separately.\n\t\t\tif (key === 'class' || key === 'style') {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If some attributes are missing or different we cannot unwrap.\n\t\t\tif (!toUnwrap.hasAttribute(key) || toUnwrap.getAttribute(key) !== wrapper.getAttribute(key)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Check if AttributeElement has all wrapper classes.\n\t} catch (err) {\n\t\t_didIteratorError10 = true;\n\t\t_iteratorError10 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion10 && _iterator10.return) {\n\t\t\t\t_iterator10.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError10) {\n\t\t\t\tthrow _iteratorError10;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!toUnwrap.hasClass.apply(toUnwrap, _toConsumableArray(wrapper.getClassNames()))) {\n\t\treturn false;\n\t}\n\n\t// Check if AttributeElement has all wrapper styles.\n\tvar _iteratorNormalCompletion11 = true;\n\tvar _didIteratorError11 = false;\n\tvar _iteratorError11 = undefined;\n\n\ttry {\n\t\tfor (var _iterator11 = wrapper.getStyleNames()[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n\t\t\tvar _key5 = _step11.value;\n\n\t\t\t// If some styles are missing or different we cannot unwrap.\n\t\t\tif (!toUnwrap.hasStyle(_key5) || toUnwrap.getStyle(_key5) !== wrapper.getStyle(_key5)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Remove all wrapper's attributes from unwrapped element.\n\t} catch (err) {\n\t\t_didIteratorError11 = true;\n\t\t_iteratorError11 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion11 && _iterator11.return) {\n\t\t\t\t_iterator11.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError11) {\n\t\t\t\tthrow _iteratorError11;\n\t\t\t}\n\t\t}\n\t}\n\n\tvar _iteratorNormalCompletion12 = true;\n\tvar _didIteratorError12 = false;\n\tvar _iteratorError12 = undefined;\n\n\ttry {\n\t\tfor (var _iterator12 = wrapper.getAttributeKeys()[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n\t\t\tvar _key6 = _step12.value;\n\n\t\t\t// Classes and styles should be checked separately.\n\t\t\tif (_key6 === 'class' || _key6 === 'style') {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttoUnwrap.removeAttribute(_key6);\n\t\t}\n\n\t\t// Remove all wrapper's classes from unwrapped element.\n\t} catch (err) {\n\t\t_didIteratorError12 = true;\n\t\t_iteratorError12 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion12 && _iterator12.return) {\n\t\t\t\t_iterator12.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError12) {\n\t\t\t\tthrow _iteratorError12;\n\t\t\t}\n\t\t}\n\t}\n\n\ttoUnwrap.removeClass.apply(toUnwrap, _toConsumableArray(wrapper.getClassNames()));\n\n\t// Remove all wrapper's styles from unwrapped element.\n\ttoUnwrap.removeStyle.apply(toUnwrap, _toConsumableArray(wrapper.getStyleNames()));\n\n\treturn true;\n}\n\n// Returns `true` if range is located in same {@link module:engine/view/attributeelement~AttributeElement AttributeElement}\n// (`start` and `end` positions are located inside same {@link module:engine/view/attributeelement~AttributeElement AttributeElement}),\n// starts on 0 offset and ends after last child node.\n//\n// @param {module:engine/view/range~Range} Range\n// @returns {Boolean}\nfunction rangeSpansOnAllChildren(range) {\n\treturn range.start.parent == range.end.parent && range.start.parent.is('attributeElement') && range.start.offset === 0 && range.end.offset === range.start.parent.childCount;\n}\n\n// Checks if provided nodes are valid to insert. Checks if each node is an instance of\n// {@link module:engine/view/text~Text Text} or {@link module:engine/view/attributeelement~AttributeElement AttributeElement},\n// {@link module:engine/view/containerelement~ContainerElement ContainerElement},\n// {@link module:engine/view/emptyelement~EmptyElement EmptyElement} or\n// {@link module:engine/view/uielement~UIElement UIElement}.\n//\n// Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-insert-invalid-node` when nodes to insert\n// contains instances that are not {@link module:engine/view/text~Text Texts},\n// {@link module:engine/view/emptyelement~EmptyElement EmptyElements},\n// {@link module:engine/view/uielement~UIElement UIElements},\n// {@link module:engine/view/attributeelement~AttributeElement AttributeElements} or\n// {@link module:engine/view/containerelement~ContainerElement ContainerElements}.\n//\n// @param Iterable.<module:engine/view/text~Text|module:engine/view/attributeelement~AttributeElement\n// |module:engine/view/containerelement~ContainerElement> nodes\nfunction validateNodesToInsert(nodes) {\n\tvar _loop = function _loop(node) {\n\t\tif (!validNodesToInsert.some(function (validNode) {\n\t\t\treturn node instanceof validNode;\n\t\t})) {\n\t\t\t// eslint-disable-line no-use-before-define\n\t\t\t/**\n    * Inserted nodes should be valid to insert. of {@link module:engine/view/attributeelement~AttributeElement AttributeElement},\n    * {@link module:engine/view/containerelement~ContainerElement ContainerElement},\n    * {@link module:engine/view/emptyelement~EmptyElement EmptyElement},\n    * {@link module:engine/view/uielement~UIElement UIElement}, {@link module:engine/view/text~Text Text}.\n    *\n    * @error view-writer-insert-invalid-node\n    */\n\t\t\tthrow new _ckeditorerror2.default('view-writer-insert-invalid-node');\n\t\t}\n\n\t\tif (!node.is('text')) {\n\t\t\tvalidateNodesToInsert(node.getChildren());\n\t\t}\n\t};\n\n\tvar _iteratorNormalCompletion13 = true;\n\tvar _didIteratorError13 = false;\n\tvar _iteratorError13 = undefined;\n\n\ttry {\n\t\tfor (var _iterator13 = nodes[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n\t\t\tvar node = _step13.value;\n\n\t\t\t_loop(node);\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError13 = true;\n\t\t_iteratorError13 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion13 && _iterator13.return) {\n\t\t\t\t_iterator13.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError13) {\n\t\t\t\tthrow _iteratorError13;\n\t\t\t}\n\t\t}\n\t}\n}\n\nvar validNodesToInsert = [_text2.default, _attributeelement2.default, _containerelement2.default, _emptyelement2.default, _uielement2.default];\n\n// Checks if node is ContainerElement or DocumentFragment, because in most cases they should be treated the same way.\n//\n// @param {module:engine/view/node~Node} node\n// @returns {Boolean} Returns `true` if node is instance of ContainerElement or DocumentFragment.\nfunction isContainerOrFragment(node) {\n\treturn node && (node.is('containerElement') || node.is('documentFragment'));\n}\n\n// Checks if {@link module:engine/view/range~Range#start range start} and {@link module:engine/view/range~Range#end range end} are placed\n// inside same {@link module:engine/view/containerelement~ContainerElement container element}.\n// Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when validation fails.\n//\n// @param {module:engine/view/range~Range} range\nfunction validateRangeContainer(range) {\n\tvar startContainer = getParentContainer(range.start);\n\tvar endContainer = getParentContainer(range.end);\n\n\tif (!startContainer || !endContainer || startContainer !== endContainer) {\n\t\t/**\n   * Range container is invalid. This can happen if {@link module:engine/view/range~Range#start range start} and\n   * {@link module:engine/view/range~Range#end range end} positions are not placed inside same container or\n   * parent container for these positions cannot be found.\n   *\n   * @error view-writer-invalid-range-container\n   */\n\t\tthrow new _ckeditorerror2.default('view-writer-invalid-range-container');\n\t}\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/view/writer.js\n// module id = 85\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _apply = require('./_apply');\n\nvar _apply2 = _interopRequireDefault(_apply);\n\nvar _toInteger = require('./toInteger');\n\nvar _toInteger2 = _interopRequireDefault(_toInteger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that invokes `func` with the `this` binding of the\n * created function and arguments from `start` and beyond provided as\n * an array.\n *\n * **Note:** This method is based on the\n * [rest parameter](https://mdn.io/rest_parameters).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Function\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var say = _.rest(function(what, names) {\n *   return what + ' ' + _.initial(names).join(', ') +\n *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n * });\n *\n * say('hello', 'fred', 'barney', 'pebbles');\n * // => 'hello fred, barney, & pebbles'\n */\nfunction rest(func, start) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  start = nativeMax(start === undefined ? func.length - 1 : (0, _toInteger2.default)(start), 0);\n  return function () {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    switch (start) {\n      case 0:\n        return func.call(this, array);\n      case 1:\n        return func.call(this, args[0], array);\n      case 2:\n        return func.call(this, args[0], args[1], array);\n    }\n    var otherArgs = Array(start + 1);\n    index = -1;\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = array;\n    return (0, _apply2.default)(func, this, otherArgs);\n  };\n}\n\nexports.default = rest;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/rest.js\n// module id = 8\n// module chunks = 0","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 542);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 26aef4647347afd7ebd5","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/ckeditorerror\n */\n\n/**\n * The CKEditor error class.\n *\n * All errors will be shortened during the minification process in order to reduce the code size.\n * Therefore, all error messages should be documented in the same way as those in {@link module:utils/log}.\n *\n * Read more in the {@link module:utils/log} module.\n *\n * @extends Error\n */\nvar CKEditorError = function (_Error) {\n\t_inherits(CKEditorError, _Error);\n\n\t/**\n  * Creates an instance of the CKEditorError class.\n  *\n  * Read more about error logging in the {@link module:utils/log} module.\n  *\n  * @param {String} message The error message in an `error-name: Error message.` format.\n  * During the minification process the \"Error message\" part will be removed to limit the code size\n  * and a link to this error documentation will be added to the `message`.\n  * @param {Object} [data] Additional data describing the error. A stringified version of this object\n  * will be appended to the error message, so the data are quickly visible in the console. The original\n  * data object will also be later available under the {@link #data} property.\n  */\n\tfunction CKEditorError(message, data) {\n\t\t_classCallCheck(this, CKEditorError);\n\n\t\tif (data) {\n\t\t\tmessage += ' ' + JSON.stringify(data);\n\t\t}\n\n\t\t/**\n   * @member {String}\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (CKEditorError.__proto__ || Object.getPrototypeOf(CKEditorError)).call(this, message));\n\n\t\t_this.name = 'CKEditorError';\n\n\t\t/**\n   * The additional error data passed to the constructor.\n   *\n   * @member {Object}\n   */\n\t\t_this.data = data;\n\t\treturn _this;\n\t}\n\n\t/**\n  * Checks if error is an instance of CKEditorError class.\n  *\n  * @param {Object} error Object to check.\n  * @returns {Boolean}\n  */\n\n\n\t_createClass(CKEditorError, null, [{\n\t\tkey: 'isCKEditorError',\n\t\tvalue: function isCKEditorError(error) {\n\t\t\treturn error instanceof CKEditorError;\n\t\t}\n\t}]);\n\n\treturn CKEditorError;\n}(Error);\n\nexports.default = CKEditorError;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/ckeditorerror.js\n// module id = 0\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */\n\n/**\n * @module engine/model/position\n */\n\nvar _treewalker = require('./treewalker');\n\nvar _treewalker2 = _interopRequireDefault(_treewalker);\n\nvar _last = require('@ckeditor/ckeditor5-utils/src/lib/lodash/last');\n\nvar _last2 = _interopRequireDefault(_last);\n\nvar _comparearrays = require('@ckeditor/ckeditor5-utils/src/comparearrays');\n\nvar _comparearrays2 = _interopRequireDefault(_comparearrays);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nvar _text = require('./text');\n\nvar _text2 = _interopRequireDefault(_text);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Represents a position in the model tree.\n *\n * **Note:** Position is based on offsets, not indexes. This means that position in element containing two text nodes\n * with data `foo` and `bar`, position between them has offset `3`, not `1`.\n * See {@link module:engine/model/position~Position#path} for more.\n *\n * Since position in a model is represented by a {@link module:engine/model/position~Position#root position root} and\n * {@link module:engine/model/position~Position#path position path} it is possible to create positions placed in non-existing elements.\n * This requirement is important for {@link module:engine/model/operation/transform~transform operational transformation}.\n *\n * Also, {@link module:engine/model/operation/operation~Operation operations}\n * kept in {@link module:engine/model/document~Document#history document history}\n * are storing positions (and ranges) which were correct when those operations were applied, but may not be correct\n * after document got changed.\n *\n * When changes are applied to model, it may also happen that {@link module:engine/model/position~Position#parent position parent}\n * will change even if position path has not changed. Keep in mind, that if a position leads to non-existing element,\n * {@link module:engine/model/position~Position#parent} and some other properties and methods will throw errors.\n *\n * In most cases, position with wrong path is caused by an error in code, but it is sometimes needed, as described above.\n */\nvar Position = function () {\n\t/**\n  * Creates a position.\n  *\n  * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} root Root of the position.\n  * @param {Array.<Number>} path Position path. See {@link module:engine/model/position~Position#path}.\n  */\n\tfunction Position(root, path) {\n\t\t_classCallCheck(this, Position);\n\n\t\tif (!root.is('element') && !root.is('documentFragment')) {\n\t\t\t/**\n    * Position root invalid.\n    *\n    * @error position-root-invalid.\n    */\n\t\t\tthrow new _ckeditorerror2.default('model-position-root-invalid: Position root invalid.');\n\t\t}\n\n\t\tif (!(path instanceof Array) || path.length === 0) {\n\t\t\t/**\n    * Position path must be an Array with at least one item.\n    *\n    * @error position-path-incorrect\n    * @param path\n    */\n\t\t\tthrow new _ckeditorerror2.default('model-position-path-incorrect: Position path must be an Array with at least one item.', { path: path });\n\t\t}\n\n\t\t// Normalize the root and path (if element was passed).\n\t\tpath = root.getPath().concat(path);\n\t\troot = root.root;\n\n\t\t/**\n   * Root of the position path.\n   *\n   * @readonly\n   * @member {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment}\n   * module:engine/model/position~Position#root\n   */\n\t\tthis.root = root;\n\n\t\t/**\n   * Position of the node in the tree. **Path contains offsets, not indexes.**\n   *\n   * Position can be placed before, after or in a {@link module:engine/model/node~Node node} if that node has\n   * {@link module:engine/model/node~Node#offsetSize} greater than `1`. Items in position path are\n   * {@link module:engine/model/node~Node#startOffset starting offsets} of position ancestors, starting from direct root children,\n   * down to the position offset in it's parent.\n   *\n   *\t\t ROOT\n   *\t\t  |- P            before: [ 0 ]         after: [ 1 ]\n   *\t\t  |- UL           before: [ 1 ]         after: [ 2 ]\n   *\t\t     |- LI        before: [ 1, 0 ]      after: [ 1, 1 ]\n   *\t\t     |  |- foo    before: [ 1, 0, 0 ]   after: [ 1, 0, 3 ]\n   *\t\t     |- LI        before: [ 1, 1 ]      after: [ 1, 2 ]\n   *\t\t        |- bar    before: [ 1, 1, 0 ]   after: [ 1, 1, 3 ]\n   *\n   * `foo` and `bar` are representing {@link module:engine/model/text~Text text nodes}. Since text nodes has offset size\n   * greater than `1` you can place position offset between their start and end:\n   *\n   *\t\t ROOT\n   *\t\t  |- P\n   *\t\t  |- UL\n   *\t\t     |- LI\n   *\t\t     |  |- f^o|o  ^ has path: [ 1, 0, 1 ]   | has path: [ 1, 0, 2 ]\n   *\t\t     |- LI\n   *\t\t        |- b^a|r  ^ has path: [ 1, 1, 1 ]   | has path: [ 1, 1, 2 ]\n   *\n   * @member {Array.<Number>} module:engine/model/position~Position#path\n   */\n\t\tthis.path = path;\n\t}\n\n\t/**\n  * Offset at which this position is located in its {@link module:engine/model/position~Position#parent parent}. It is equal\n  * to the last item in position {@link module:engine/model/position~Position#path path}.\n  *\n  * @type {Number}\n  */\n\n\n\t_createClass(Position, [{\n\t\tkey: 'compareWith',\n\n\n\t\t/**\n   * Checks whether this position is before or after given position.\n   *\n   * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n   * @returns {module:engine/model/position~PositionRelation}\n   */\n\t\tvalue: function compareWith(otherPosition) {\n\t\t\tif (this.root != otherPosition.root) {\n\t\t\t\treturn 'different';\n\t\t\t}\n\n\t\t\tvar result = (0, _comparearrays2.default)(this.path, otherPosition.path);\n\n\t\t\tswitch (result) {\n\t\t\t\tcase 'same':\n\t\t\t\t\treturn 'same';\n\n\t\t\t\tcase 'prefix':\n\t\t\t\t\treturn 'before';\n\n\t\t\t\tcase 'extension':\n\t\t\t\t\treturn 'after';\n\n\t\t\t\tdefault:\n\t\t\t\t\tif (this.path[result] < otherPosition.path[result]) {\n\t\t\t\t\t\treturn 'before';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn 'after';\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Gets the farthest position which matches the callback using\n   * {@link module:engine/model/treewalker~TreeWalker TreeWalker}.\n   *\n   * For example:\n   *\n   * \t\tgetLastMatchingPosition( value => value.type == 'text' );\n   * \t\t// <paragraph>[]foo</paragraph> -> <paragraph>foo[]</paragraph>\n   *\n   * \t\tgetLastMatchingPosition( value => value.type == 'text', { direction: 'backward' } );\n   * \t\t// <paragraph>foo[]</paragraph> -> <paragraph>[]foo</paragraph>\n   *\n   * \t\tgetLastMatchingPosition( value => false );\n   * \t\t// Do not move the position.\n   *\n   * @param {Function} skip Callback function. Gets {@link module:engine/model/treewalker~TreeWalkerValue} and should\n   * return `true` if the value should be skipped or `false` if not.\n   * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\n   *\n   * @returns {module:engine/model/position~Position} The position after the last item which matches the `skip` callback test.\n   */\n\n\t}, {\n\t\tkey: 'getLastMatchingPosition',\n\t\tvalue: function getLastMatchingPosition(skip) {\n\t\t\tvar options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\t\toptions.startPosition = this;\n\n\t\t\tvar treeWalker = new _treewalker2.default(options);\n\t\t\ttreeWalker.skip(skip);\n\n\t\t\treturn treeWalker.position;\n\t\t}\n\n\t\t/**\n   * Returns a path to this position's parent. Parent path is equal to position {@link module:engine/model/position~Position#path path}\n   * but without the last item.\n   *\n   * This method returns the parent path even if the parent does not exists.\n   *\n   * @returns {Array.<Number>} Path to the parent.\n   */\n\n\t}, {\n\t\tkey: 'getParentPath',\n\t\tvalue: function getParentPath() {\n\t\t\treturn this.path.slice(0, -1);\n\t\t}\n\n\t\t/**\n   * Returns ancestors array of this position, that is this position's parent and its ancestors.\n   *\n   * @returns {Array.<module:engine/model/item~Item>} Array with ancestors.\n   */\n\n\t}, {\n\t\tkey: 'getAncestors',\n\t\tvalue: function getAncestors() {\n\t\t\tif (this.parent.is('documentFragment')) {\n\t\t\t\treturn [this.parent];\n\t\t\t} else {\n\t\t\t\treturn this.parent.getAncestors({ includeSelf: true });\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Returns the slice of two position {@link #path paths} which is identical. The {@link #root roots}\n   * of these two paths must be identical.\n   *\n   * @param {module:engine/model/position~Position} position The second position.\n   * @returns {Array.<Number>} The common path.\n   */\n\n\t}, {\n\t\tkey: 'getCommonPath',\n\t\tvalue: function getCommonPath(position) {\n\t\t\tif (this.root != position.root) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\t// We find on which tree-level start and end have the lowest common ancestor\n\t\t\tvar cmp = (0, _comparearrays2.default)(this.path, position.path);\n\t\t\t// If comparison returned string it means that arrays are same.\n\t\t\tvar diffAt = typeof cmp == 'string' ? Math.min(this.path.length, position.path.length) : cmp;\n\n\t\t\treturn this.path.slice(0, diffAt);\n\t\t}\n\n\t\t/**\n   * Returns an {@link module:engine/model/element~Element} or {@link module:engine/model/documentfragment~DocumentFragment}\n   * which is a common ancestor of both positions. The {@link #root roots} of these two positions must be identical.\n   *\n   * @param {module:engine/model/position~Position} position The second position.\n   * @returns {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n   */\n\n\t}, {\n\t\tkey: 'getCommonAncestor',\n\t\tvalue: function getCommonAncestor(position) {\n\t\t\tvar ancestorsA = this.getAncestors();\n\t\t\tvar ancestorsB = position.getAncestors();\n\n\t\t\tvar i = 0;\n\n\t\t\twhile (ancestorsA[i] == ancestorsB[i] && ancestorsA[i]) {\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\treturn i === 0 ? null : ancestorsA[i - 1];\n\t\t}\n\n\t\t/**\n   * Returns a new instance of `Position`, that has same {@link #parent parent} but it's offset\n   * is shifted by `shift` value (can be a negative value).\n   *\n   * @param {Number} shift Offset shift. Can be a negative value.\n   * @returns {module:engine/model/position~Position} Shifted position.\n   */\n\n\t}, {\n\t\tkey: 'getShiftedBy',\n\t\tvalue: function getShiftedBy(shift) {\n\t\t\tvar shifted = Position.createFromPosition(this);\n\n\t\t\tvar offset = shifted.offset + shift;\n\t\t\tshifted.offset = offset < 0 ? 0 : offset;\n\n\t\t\treturn shifted;\n\t\t}\n\n\t\t/**\n   * Checks whether this position is after given position.\n   *\n   * @see module:engine/model/position~Position#isBefore\n   *\n   * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n   * @returns {Boolean} True if this position is after given position.\n   */\n\n\t}, {\n\t\tkey: 'isAfter',\n\t\tvalue: function isAfter(otherPosition) {\n\t\t\treturn this.compareWith(otherPosition) == 'after';\n\t\t}\n\n\t\t/**\n   * Checks whether this position is before given position.\n   *\n   * **Note:** watch out when using negation of the value returned by this method, because the negation will also\n   * be `true` if positions are in different roots and you might not expect this. You should probably use\n   * `a.isAfter( b ) || a.isEqual( b )` or `!a.isBefore( p ) && a.root == b.root` in most scenarios. If your\n   * condition uses multiple `isAfter` and `isBefore` checks, build them so they do not use negated values, i.e.:\n   *\n   *\t\tif ( a.isBefore( b ) && c.isAfter( d ) ) {\n   *\t\t\t// do A.\n   *\t\t} else {\n   *\t\t\t// do B.\n   *\t\t}\n   *\n   * or, if you have only one if-branch:\n   *\n   *\t\tif ( !( a.isBefore( b ) && c.isAfter( d ) ) {\n   *\t\t\t// do B.\n   *\t\t}\n   *\n   * rather than:\n   *\n   *\t\tif ( !a.isBefore( b ) || && !c.isAfter( d ) ) {\n   *\t\t\t// do B.\n   *\t\t} else {\n   *\t\t\t// do A.\n   *\t\t}\n   *\n   * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n   * @returns {Boolean} True if this position is before given position.\n   */\n\n\t}, {\n\t\tkey: 'isBefore',\n\t\tvalue: function isBefore(otherPosition) {\n\t\t\treturn this.compareWith(otherPosition) == 'before';\n\t\t}\n\n\t\t/**\n   * Checks whether this position is equal to given position.\n   *\n   * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n   * @returns {Boolean} True if positions are same.\n   */\n\n\t}, {\n\t\tkey: 'isEqual',\n\t\tvalue: function isEqual(otherPosition) {\n\t\t\treturn this.compareWith(otherPosition) == 'same';\n\t\t}\n\n\t\t/**\n   * Checks whether this position is touching given position. Positions touch when there are no text nodes\n   * or empty nodes in a range between them. Technically, those positions are not equal but in many cases\n   * they are very similar or even indistinguishable.\n   *\n   * **Note:** this method traverses model document so it can be only used when range is up-to-date with model document.\n   *\n   * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n   * @returns {Boolean} True if positions touch.\n   */\n\n\t}, {\n\t\tkey: 'isTouching',\n\t\tvalue: function isTouching(otherPosition) {\n\t\t\tvar left = null;\n\t\t\tvar right = null;\n\t\t\tvar compare = this.compareWith(otherPosition);\n\n\t\t\tswitch (compare) {\n\t\t\t\tcase 'same':\n\t\t\t\t\treturn true;\n\n\t\t\t\tcase 'before':\n\t\t\t\t\tleft = Position.createFromPosition(this);\n\t\t\t\t\tright = Position.createFromPosition(otherPosition);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'after':\n\t\t\t\t\tleft = Position.createFromPosition(otherPosition);\n\t\t\t\t\tright = Position.createFromPosition(this);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Cached for optimization purposes.\n\t\t\tvar leftParent = left.parent;\n\n\t\t\twhile (left.path.length + right.path.length) {\n\t\t\t\tif (left.isEqual(right)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tif (left.path.length > right.path.length) {\n\t\t\t\t\tif (left.offset !== leftParent.maxOffset) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tleft.path = left.path.slice(0, -1);\n\t\t\t\t\tleftParent = leftParent.parent;\n\t\t\t\t\tleft.offset++;\n\t\t\t\t} else {\n\t\t\t\t\tif (right.offset !== 0) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tright.path = right.path.slice(0, -1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Returns a copy of this position that is updated by removing `howMany` nodes starting from `deletePosition`.\n   * It may happen that this position is in a removed node. If that is the case, `null` is returned instead.\n   *\n   * @protected\n   * @param {module:engine/model/position~Position} deletePosition Position before the first removed node.\n   * @param {Number} howMany How many nodes are removed.\n   * @returns {module:engine/model/position~Position|null} Transformed position or `null`.\n   */\n\n\t}, {\n\t\tkey: '_getTransformedByDeletion',\n\t\tvalue: function _getTransformedByDeletion(deletePosition, howMany) {\n\t\t\tvar transformed = Position.createFromPosition(this);\n\n\t\t\t// This position can't be affected if deletion was in a different root.\n\t\t\tif (this.root != deletePosition.root) {\n\t\t\t\treturn transformed;\n\t\t\t}\n\n\t\t\tif ((0, _comparearrays2.default)(deletePosition.getParentPath(), this.getParentPath()) == 'same') {\n\t\t\t\t// If nodes are removed from the node that is pointed by this position...\n\t\t\t\tif (deletePosition.offset < this.offset) {\n\t\t\t\t\t// And are removed from before an offset of that position...\n\t\t\t\t\tif (deletePosition.offset + howMany > this.offset) {\n\t\t\t\t\t\t// Position is in removed range, it's no longer in the tree.\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Decrement the offset accordingly.\n\t\t\t\t\t\ttransformed.offset -= howMany;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if ((0, _comparearrays2.default)(deletePosition.getParentPath(), this.getParentPath()) == 'prefix') {\n\t\t\t\t// If nodes are removed from a node that is on a path to this position...\n\t\t\t\tvar i = deletePosition.path.length - 1;\n\n\t\t\t\tif (deletePosition.offset <= this.path[i]) {\n\t\t\t\t\t// And are removed from before next node of that path...\n\t\t\t\t\tif (deletePosition.offset + howMany > this.path[i]) {\n\t\t\t\t\t\t// If the next node of that path is removed return null\n\t\t\t\t\t\t// because the node containing this position got removed.\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Otherwise, decrement index on that path.\n\t\t\t\t\t\ttransformed.path[i] -= howMany;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn transformed;\n\t\t}\n\n\t\t/**\n   * Returns a copy of this position that is updated by inserting `howMany` nodes at `insertPosition`.\n   *\n   * @protected\n   * @param {module:engine/model/position~Position} insertPosition Position where nodes are inserted.\n   * @param {Number} howMany How many nodes are inserted.\n   * @param {Boolean} insertBefore Flag indicating whether nodes are inserted before or after `insertPosition`.\n   * This is important only when `insertPosition` and this position are same. If that is the case and the flag is\n   * set to `true`, this position will get transformed. If the flag is set to `false`, it won't.\n   * @returns {module:engine/model/position~Position} Transformed position.\n   */\n\n\t}, {\n\t\tkey: '_getTransformedByInsertion',\n\t\tvalue: function _getTransformedByInsertion(insertPosition, howMany, insertBefore) {\n\t\t\tvar transformed = Position.createFromPosition(this);\n\n\t\t\t// This position can't be affected if insertion was in a different root.\n\t\t\tif (this.root != insertPosition.root) {\n\t\t\t\treturn transformed;\n\t\t\t}\n\n\t\t\tif ((0, _comparearrays2.default)(insertPosition.getParentPath(), this.getParentPath()) == 'same') {\n\t\t\t\t// If nodes are inserted in the node that is pointed by this position...\n\t\t\t\tif (insertPosition.offset < this.offset || insertPosition.offset == this.offset && insertBefore) {\n\t\t\t\t\t// And are inserted before an offset of that position...\n\t\t\t\t\t// \"Push\" this positions offset.\n\t\t\t\t\ttransformed.offset += howMany;\n\t\t\t\t}\n\t\t\t} else if ((0, _comparearrays2.default)(insertPosition.getParentPath(), this.getParentPath()) == 'prefix') {\n\t\t\t\t// If nodes are inserted in a node that is on a path to this position...\n\t\t\t\tvar i = insertPosition.path.length - 1;\n\n\t\t\t\tif (insertPosition.offset <= this.path[i]) {\n\t\t\t\t\t// And are inserted before next node of that path...\n\t\t\t\t\t// \"Push\" the index on that path.\n\t\t\t\t\ttransformed.path[i] += howMany;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn transformed;\n\t\t}\n\n\t\t/**\n   * Returns a copy of this position that is updated by moving `howMany` nodes from `sourcePosition` to `targetPosition`.\n   *\n   * @protected\n   * @param {module:engine/model/position~Position} sourcePosition Position before the first element to move.\n   * @param {module:engine/model/position~Position} targetPosition Position where moved elements will be inserted.\n   * @param {Number} howMany How many consecutive nodes to move, starting from `sourcePosition`.\n   * @param {Boolean} insertBefore Flag indicating whether moved nodes are pasted before or after `insertPosition`.\n   * This is important only when `targetPosition` and this position are same. If that is the case and the flag is\n   * set to `true`, this position will get transformed by range insertion. If the flag is set to `false`, it won't.\n   * @param {Boolean} [sticky] Flag indicating whether this position \"sticks\" to range, that is if it should be moved\n   * with the moved range if it is equal to one of range's boundaries.\n   * @returns {module:engine/model/position~Position} Transformed position.\n   */\n\n\t}, {\n\t\tkey: '_getTransformedByMove',\n\t\tvalue: function _getTransformedByMove(sourcePosition, targetPosition, howMany, insertBefore, sticky) {\n\t\t\t// Moving a range removes nodes from their original position. We acknowledge this by proper transformation.\n\t\t\tvar transformed = this._getTransformedByDeletion(sourcePosition, howMany);\n\n\t\t\t// Then we update target position, as it could be affected by nodes removal too.\n\t\t\ttargetPosition = targetPosition._getTransformedByDeletion(sourcePosition, howMany);\n\n\t\t\tif (transformed === null || sticky && transformed.isEqual(sourcePosition)) {\n\t\t\t\t// This position is inside moved range (or sticks to it).\n\t\t\t\t// In this case, we calculate a combination of this position, move source position and target position.\n\t\t\t\ttransformed = this._getCombined(sourcePosition, targetPosition);\n\t\t\t} else {\n\t\t\t\t// This position is not inside a removed range.\n\t\t\t\t// In next step, we simply reflect inserting `howMany` nodes, which might further affect the position.\n\t\t\t\ttransformed = transformed._getTransformedByInsertion(targetPosition, howMany, insertBefore);\n\t\t\t}\n\n\t\t\treturn transformed;\n\t\t}\n\n\t\t/**\n   * Returns a new position that is a combination of this position and given positions.\n   *\n   * The combined position is a copy of this position transformed by moving a range starting at `source` position\n   * to the `target` position. It is expected that this position is inside the moved range.\n   *\n   * Example:\n   *\n   *\t\tlet original = new Position( root, [ 2, 3, 1 ] );\n   *\t\tlet source = new Position( root, [ 2, 2 ] );\n   *\t\tlet target = new Position( otherRoot, [ 1, 1, 3 ] );\n   *\t\toriginal._getCombined( source, target ); // path is [ 1, 1, 4, 1 ], root is `otherRoot`\n   *\n   * Explanation:\n   *\n   * We have a position `[ 2, 3, 1 ]` and move some nodes from `[ 2, 2 ]` to `[ 1, 1, 3 ]`. The original position\n   * was inside moved nodes and now should point to the new place. The moved nodes will be after\n   * positions `[ 1, 1, 3 ]`, `[ 1, 1, 4 ]`, `[ 1, 1, 5 ]`. Since our position was in the second moved node,\n   * the transformed position will be in a sub-tree of a node at `[ 1, 1, 4 ]`. Looking at original path, we\n   * took care of `[ 2, 3 ]` part of it. Now we have to add the rest of the original path to the transformed path.\n   * Finally, the transformed position will point to `[ 1, 1, 4, 1 ]`.\n   *\n   * @protected\n   * @param {module:engine/model/position~Position} source Beginning of the moved range.\n   * @param {module:engine/model/position~Position} target Position where the range is moved.\n   * @returns {module:engine/model/position~Position} Combined position.\n   */\n\n\t}, {\n\t\tkey: '_getCombined',\n\t\tvalue: function _getCombined(source, target) {\n\t\t\tvar i = source.path.length - 1;\n\n\t\t\t// The first part of a path to combined position is a path to the place where nodes were moved.\n\t\t\tvar combined = Position.createFromPosition(target);\n\n\t\t\t// Then we have to update the rest of the path.\n\n\t\t\t// Fix the offset because this position might be after `from` position and we have to reflect that.\n\t\t\tcombined.offset = combined.offset + this.path[i] - source.offset;\n\n\t\t\t// Then, add the rest of the path.\n\t\t\t// If this position is at the same level as `from` position nothing will get added.\n\t\t\tcombined.path = combined.path.concat(this.path.slice(i + 1));\n\n\t\t\treturn combined;\n\t\t}\n\n\t\t/**\n   * Creates position at the given location. The location can be specified as:\n   *\n   * * a {@link module:engine/model/position~Position position},\n   * * parent element and offset (offset defaults to `0`),\n   * * parent element and `'end'` (sets position at the end of that element),\n   * * {@link module:engine/model/item~Item model item} and `'before'` or `'after'` (sets position before or after given model item).\n   *\n   * This method is a shortcut to other constructors such as:\n   *\n   * * {@link module:engine/model/position~Position.createBefore},\n   * * {@link module:engine/model/position~Position.createAfter},\n   * * {@link module:engine/model/position~Position.createFromParentAndOffset},\n   * * {@link module:engine/model/position~Position.createFromPosition}.\n   *\n   * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n   * @param {Number|'end'|'before'|'after'} [offset=0] Offset or one of the flags. Used only when\n   * first parameter is a {@link module:engine/model/item~Item model item}.\n   */\n\n\t}, {\n\t\tkey: 'offset',\n\t\tget: function get() {\n\t\t\treturn (0, _last2.default)(this.path);\n\t\t}\n\n\t\t/**\n   * @param {Number} newOffset\n   */\n\t\t,\n\t\tset: function set(newOffset) {\n\t\t\tthis.path[this.path.length - 1] = newOffset;\n\t\t}\n\n\t\t/**\n   * Parent element of this position.\n   *\n   * Keep in mind that `parent` value is calculated when the property is accessed.\n   * If {@link module:engine/model/position~Position#path position path}\n   * leads to a non-existing element, `parent` property will throw error.\n   *\n   * Also it is a good idea to cache `parent` property if it is used frequently in an algorithm (i.e. in a long loop).\n   *\n   * @readonly\n   * @type {module:engine/model/element~Element}\n   */\n\n\t}, {\n\t\tkey: 'parent',\n\t\tget: function get() {\n\t\t\tvar parent = this.root;\n\n\t\t\tfor (var i = 0; i < this.path.length - 1; i++) {\n\t\t\t\tparent = parent.getChild(parent.offsetToIndex(this.path[i]));\n\t\t\t}\n\n\t\t\treturn parent;\n\t\t}\n\n\t\t/**\n   * Position {@link module:engine/model/position~Position#offset offset} converted to an index in position's parent node. It is\n   * equal to the {@link module:engine/model/node~Node#index index} of a node after this position. If position is placed\n   * in text node, position index is equal to the index of that text node.\n   *\n   * @readonly\n   * @type {Number}\n   */\n\n\t}, {\n\t\tkey: 'index',\n\t\tget: function get() {\n\t\t\treturn this.parent.offsetToIndex(this.offset);\n\t\t}\n\n\t\t/**\n   * Returns {@link module:engine/model/text~Text text node} instance in which this position is placed or `null` if this\n   * position is not in a text node.\n   *\n   * @readonly\n   * @type {module:engine/model/text~Text|null}\n   */\n\n\t}, {\n\t\tkey: 'textNode',\n\t\tget: function get() {\n\t\t\tvar node = this.parent.getChild(this.index);\n\n\t\t\treturn node instanceof _text2.default && node.startOffset < this.offset ? node : null;\n\t\t}\n\n\t\t/**\n   * Node directly after this position or `null` if this position is in text node.\n   *\n   * @readonly\n   * @type {module:engine/model/node~Node|null}\n   */\n\n\t}, {\n\t\tkey: 'nodeAfter',\n\t\tget: function get() {\n\t\t\treturn this.textNode === null ? this.parent.getChild(this.index) : null;\n\t\t}\n\n\t\t/**\n   * Node directly before this position or `null` if this position is in text node.\n   *\n   * @readonly\n   * @type {Node}\n   */\n\n\t}, {\n\t\tkey: 'nodeBefore',\n\t\tget: function get() {\n\t\t\treturn this.textNode === null ? this.parent.getChild(this.index - 1) : null;\n\t\t}\n\n\t\t/**\n   * Is `true` if position is at the beginning of its {@link module:engine/model/position~Position#parent parent}, `false` otherwise.\n   *\n   * @readonly\n   * @type {Boolean}\n   */\n\n\t}, {\n\t\tkey: 'isAtStart',\n\t\tget: function get() {\n\t\t\treturn this.offset === 0;\n\t\t}\n\n\t\t/**\n   * Is `true` if position is at the end of its {@link module:engine/model/position~Position#parent parent}, `false` otherwise.\n   *\n   * @readonly\n   * @type {Boolean}\n   */\n\n\t}, {\n\t\tkey: 'isAtEnd',\n\t\tget: function get() {\n\t\t\treturn this.offset == this.parent.maxOffset;\n\t\t}\n\t}], [{\n\t\tkey: 'createAt',\n\t\tvalue: function createAt(itemOrPosition, offset) {\n\t\t\tif (itemOrPosition instanceof Position) {\n\t\t\t\treturn this.createFromPosition(itemOrPosition);\n\t\t\t} else {\n\t\t\t\tvar node = itemOrPosition;\n\n\t\t\t\tif (offset == 'end') {\n\t\t\t\t\toffset = node.maxOffset;\n\t\t\t\t} else if (offset == 'before') {\n\t\t\t\t\treturn this.createBefore(node);\n\t\t\t\t} else if (offset == 'after') {\n\t\t\t\t\treturn this.createAfter(node);\n\t\t\t\t} else if (!offset) {\n\t\t\t\t\toffset = 0;\n\t\t\t\t}\n\n\t\t\t\treturn this.createFromParentAndOffset(node, offset);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Creates a new position, after given {@link module:engine/model/item~Item model item}.\n   *\n   * @param {module:engine/model/item~Item} item Item after which the position should be placed.\n   * @returns {module:engine/model/position~Position}\n   */\n\n\t}, {\n\t\tkey: 'createAfter',\n\t\tvalue: function createAfter(item) {\n\t\t\tif (!item.parent) {\n\t\t\t\t/**\n     * You can not make position after root.\n     *\n     * @error position-after-root\n     * @param {module:engine/model/item~Item} root\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('model-position-after-root: You can not make position after root.', { root: item });\n\t\t\t}\n\n\t\t\treturn this.createFromParentAndOffset(item.parent, item.endOffset);\n\t\t}\n\n\t\t/**\n   * Creates a new position, before the given {@link module:engine/model/item~Item model item}.\n   *\n   * @param {module:engine/model/item~Item} item Item before which the position should be placed.\n   * @returns {module:engine/model/position~Position}\n   */\n\n\t}, {\n\t\tkey: 'createBefore',\n\t\tvalue: function createBefore(item) {\n\t\t\tif (!item.parent) {\n\t\t\t\t/**\n     * You can not make position before root.\n     *\n     * @error position-before-root\n     * @param {module:engine/model/item~Item} root\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('model-position-before-root: You can not make position before root.', { root: item });\n\t\t\t}\n\n\t\t\treturn this.createFromParentAndOffset(item.parent, item.startOffset);\n\t\t}\n\n\t\t/**\n   * Creates a new position from the parent element and an offset in that element.\n   *\n   * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} parent Position's parent.\n   * @param {Number} offset Position's offset.\n   * @returns {module:engine/model/position~Position}\n   */\n\n\t}, {\n\t\tkey: 'createFromParentAndOffset',\n\t\tvalue: function createFromParentAndOffset(parent, offset) {\n\t\t\tif (!parent.is('element') && !parent.is('documentFragment')) {\n\t\t\t\t/**\n     * Position parent have to be a model element or model document fragment.\n     *\n     * @error position-parent-incorrect\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('model-position-parent-incorrect: Position parent have to be a element or document fragment.');\n\t\t\t}\n\n\t\t\tvar path = parent.getPath();\n\n\t\t\tpath.push(offset);\n\n\t\t\treturn new this(parent.root, path);\n\t\t}\n\n\t\t/**\n   * Creates a new position, which is equal to passed position.\n   *\n   * @param {module:engine/model/position~Position} position Position to be cloned.\n   * @returns {module:engine/model/position~Position}\n   */\n\n\t}, {\n\t\tkey: 'createFromPosition',\n\t\tvalue: function createFromPosition(position) {\n\t\t\treturn new this(position.root, position.path.slice());\n\t\t}\n\n\t\t/**\n   * Creates a `Position` instance from given plain object (i.e. parsed JSON string).\n   *\n   * @param {Object} json Plain object to be converted to `Position`.\n   * @returns {module:engine/model/position~Position} `Position` instance created using given plain object.\n   */\n\n\t}, {\n\t\tkey: 'fromJSON',\n\t\tvalue: function fromJSON(json, doc) {\n\t\t\tif (json.root === '$graveyard') {\n\t\t\t\treturn new Position(doc.graveyard, json.path);\n\t\t\t}\n\n\t\t\tif (!doc.hasRoot(json.root)) {\n\t\t\t\t/**\n     * Cannot create position for document. Root with specified name does not exist.\n     *\n     * @error position-fromjson-no-root\n     * @param {String} rootName\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('model-position-fromjson-no-root: Cannot create position for document. Root with specified name does not exist.', { rootName: json.root });\n\t\t\t}\n\n\t\t\treturn new Position(doc.getRoot(json.root), json.path);\n\t\t}\n\t}]);\n\n\treturn Position;\n}();\n\n/**\n * A flag indicating whether this position is `'before'` or `'after'` or `'same'` as given position.\n * If positions are in different roots `'different'` flag is returned.\n *\n * @typedef {String} module:engine/model/position~PositionRelation\n */\n\n\nexports.default = Position;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/position.js\n// module id = 1\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\nn\n/**\n * @module core/plugin\n */\n\nvar _observablemixin = require('@ckeditor/ckeditor5-utils/src/observablemixin');\n\nvar _observablemixin2 = _interopRequireDefault(_observablemixin);\n\nvar _mix = require('@ckeditor/ckeditor5-utils/src/mix');\n\nvar _mix2 = _interopRequireDefault(_mix);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * The base class for CKEditor plugin classes.\n *\n * @implements module:core/plugin~PluginInterface\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nvar Plugin = function () {\n  /**\n   * @inheritDoc\n   */\n  function Plugin(editor) {\n    _classCallCheck(this, Plugin);\n\n    /**\n     * The editor instance.\n     *\n     * @readonly\n     * @member {module:core/editor/editor~Editor} #editor\n     */\n    this.editor = editor;\n  }\n\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(Plugin, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.stopListening();\n    }\n  }]);\n\n  return Plugin;\n}();\n\nexports.default = Plugin;\n\n\n(0, _mix2.default)(Plugin, _observablemixin2.default);\n\n/**\n * The base interface for CKEditor plugins.\n *\n * In its minimal form it can be a simple function (it will be used as a constructor) which accepts\n * {@link module:core/editor/editor~Editor the editor} as a parm.\n * It can also implement a few methods which, when present, will be used to properly initialize and destroy the plugin.\n *\n *\t\t// A simple plugin which enables a data processor.\n *\t\tfunction MyPlugin( editor ) {\n *\t\t\teditor.data.processor = new MyDataProcessor();\n *\t\t}\n *\n * In most cases, however, you'll want to inherit from the {@link module:core/plugin~Plugin} class which implements the\n * {@link module:utils/observablemixin~ObservableMixin} and is, therefore, more convenient:\n *\n *\t\tclass MyPlugin extends Plugin {\n *\t\t\tinit() {\n *\t\t\t\t// `listenTo()` and `editor` are available thanks to `Plugin`.\n *\t\t\t\t// By using `listenTo()` you'll ensure that the listener will be removed when\n *\t\t\t\t// the plugin is destroyed.\n *\t\t\t\tthis.listenTo( this.editor, 'dataReady', () => {\n *\t\t\t\t\t// Do something when data is ready.\n *\t\t\t\t} );\n *\t\t\t}\n *\t\t}\n *\n * @interface PluginInterface\n */\n\n/**\n * Creates a new plugin instance. This is the first step of a plugin initialization.\n * See also {@link #init} and {@link #afterInit}.\n *\n * A plugin is always instantiated after its {@link module:core/plugin~PluginInterface.requires dependencies} and the\n * {@link #init} and {@link #afterInit} methods are called in the same order.\n *\n * Usually, you'll want to put your plugin's initialization code in the {@link #init} method.\n * The constructor can be understood as \"before init\" and used in special cases, just like\n * {@link #afterInit} servers for the special \"after init\" scenarios (e.g. code which depends on other\n * plugins, but which doesn't {@link module:core/plugin~PluginInterface.requires explicitly require} them).\n *\n * @method #constructor\n * @param {module:core/editor/editor~Editor} editor\n */\n\n/**\n * An array of plugins required by this plugin.\n *\n * To keep a plugin class definition tight it's recommended to define this property as a static getter:\n *\n *\t\timport Image from './image.js';\n *\n *\t\texport default class ImageCaption {\n *\t\t\tstatic get requires() {\n *\t\t\t\treturn [ Image ];\n *\t\t\t}\n *\t\t}\n *\n * @static\n * @readonly\n * @member {Array.<Function>|undefined} module:core/plugin~PluginInterface.requires\n */\n\n/**\n * Optional name of the plugin. If set, the plugin will be available in\n * {@link module:core/plugincollection~PluginCollection#get} by its\n * name and its constructor. If not, then only by its constructor.\n *\n * The name should reflect the constructor name.\n *\n * To keep a plugin class definition tight it's recommended to define this property as a static getter:\n *\n *\t\texport default class ImageCaption {\n *\t\t\tstatic get pluginName() {\n *\t\t\t\treturn 'ImageCaption';\n *\t\t\t}\n *\t\t}\n *\n * Note: The native `Function.name` property could not be used to keep the plugin name because\n * it will be mangled during code minification.\n *\n * @static\n * @readonly\n * @member {String|undefined} module:core/plugin~PluginInterface.pluginName\n */\n\n/**\n * The second stage (after plugin {@link #constructor}) of plugin initialization.\n * Unlike the plugin constructor this method can be asynchronous.\n *\n * A plugin's `init()` method is called after its {@link module:core/plugin~PluginInterface.requires dependencies} are initialized,\n * so in the same order as constructors of these plugins.\n *\n * **Note:** This method is optional. A plugin instance does not need to have to have it defined.\n *\n * @method #init\n * @returns {null|Promise}\n */\n\n/**\n * The third (and last) stage of plugin initialization. See also {@link #constructor} and {@link #init}.\n *\n * **Note:** This method is optional. A plugin instance does not need to have to have it defined.\n *\n * @method #afterInit\n * @returns {null|Promise}\n */\n\n/**\n * Destroys the plugin.\n *\n * **Note:** This method is optional. A plugin instance does not need to have to have it defined.\n *\n * @method #destroy\n * @returns {null|Promise}\n */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-core/src/plugin.js\n// module id = 2\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\nn\n/**\n * @module engine/model/range\n */\n\nvar _position = require('./position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _treewalker = require('./treewalker');\n\nvar _treewalker2 = _interopRequireDefault(_treewalker);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Range class. Range is iterable.\n */\nvar Range = function () {\n\t/**\n  * Creates a range spanning from `start` position to `end` position.\n  *\n  * **Note:** Constructor creates it's own {@link module:engine/model/position~Position Position} instances basing on passed values.\n  *\n  * @param {module:engine/model/position~Position} start Start position.\n  * @param {module:engine/model/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\n  */\n\tfunction Range(start) {\n\t\tvar end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\t\t_classCallCheck(this, Range);\n\n\t\t/**\n   * Start position.\n   *\n   * @readonly\n   * @member {module:engine/model/position~Position}\n   */\n\t\tthis.start = _position2.default.createFromPosition(start);\n\n\t\t/**\n   * End position.\n   *\n   * @readonly\n   * @member {module:engine/model/position~Position}\n   */\n\t\tthis.end = end ? _position2.default.createFromPosition(end) : _position2.default.createFromPosition(start);\n\t}\n\n\t/**\n  * Returns an iterator that iterates over all {@link module:engine/model/item~Item items} that are in this range and returns\n  * them together with additional information like length or {@link module:engine/model/position~Position positions},\n  * grouped as {@link module:engine/model/treewalker~TreeWalkerValue}.\n  * It iterates over all {@link module:engine/model/textproxy~TextProxy text contents} that are inside the range\n  * and all the {@link module:engine/model/element~Element}s that are entered into when iterating over this range.\n  *\n  * This iterator uses {@link module:engine/model/treewalker~TreeWalker} with `boundaries` set to this range\n  * and `ignoreElementEnd` option set to `true`.\n  *\n  * @returns {Iterable.<module:engine/model/treewalker~TreeWalkerValue>}\n  */\n\n\n\t_createClass(Range, [{\n\t\tkey: Symbol.iterator,\n\t\tvalue: regeneratorRuntime.mark(function value() {\n\t\t\treturn regeneratorRuntime.wrap(function value$(_context) {\n\t\t\t\twhile (1) {\n\t\t\t\t\tswitch (_context.prev = _context.next) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\treturn _context.delegateYield(new _treewalker2.default({ boundaries: this, ignoreElementEnd: true }), 't0', 1);\n\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcase 'end':\n\t\t\t\t\t\t\treturn _context.stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, value, this);\n\t\t})\n\n\t\t/**\n   * Returns whether the range is collapsed, that is if {@link #start} and\n   * {@link #end} positions are equal.\n   *\n   * @type {Boolean}\n   */\n\n\t}, {\n\t\tkey: 'containsPosition',\n\n\n\t\t/**\n   * Checks whether this range contains given {@link module:engine/model/position~Position position}.\n   *\n   * @param {module:engine/model/position~Position} position Position to check.\n   * @returns {Boolean} `true` if given {@link module:engine/model/position~Position position} is contained\n   * in this range,`false` otherwise.\n   */\n\t\tvalue: function containsPosition(position) {\n\t\t\treturn position.isAfter(this.start) && position.isBefore(this.end);\n\t\t}\n\n\t\t/**\n   * Checks whether this range contains given {@link ~Range range}.\n   *\n   * @param {module:engine/model/range~Range} otherRange Range to check.\n   * @param {Boolean} [loose=false] Whether the check is loose or strict. If the check is strict (`false`), compared range cannot\n   * start or end at the same position as this range boundaries. If the check is loose (`true`), compared range can start, end or\n   * even be equal to this range. Note that collapsed ranges are always compared in strict mode.\n   * @returns {Boolean} `true` if given {@link ~Range range} boundaries are contained by this range, `false` otherwise.\n   */\n\n\t}, {\n\t\tkey: 'containsRange',\n\t\tvalue: function containsRange(otherRange) {\n\t\t\tvar loose = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n\t\t\tif (otherRange.isCollapsed) {\n\t\t\t\tloose = false;\n\t\t\t}\n\n\t\t\tvar containsStart = this.containsPosition(otherRange.start) || loose && this.start.isEqual(otherRange.start);\n\t\t\tvar containsEnd = this.containsPosition(otherRange.end) || loose && this.end.isEqual(otherRange.end);\n\n\t\t\treturn containsStart && containsEnd;\n\t\t}\n\n\t\t/**\n   * Two ranges are equal if their {@link #start} and {@link #end} positions are equal.\n   *\n   * @param {module:engine/model/range~Range} otherRange Range to compare with.\n   * @returns {Boolean} `true` if ranges are equal, `false` otherwise.\n   */\n\n\t}, {\n\t\tkey: 'isEqual',\n\t\tvalue: function isEqual(otherRange) {\n\t\t\treturn this.start.isEqual(otherRange.start) && this.end.isEqual(otherRange.end);\n\t\t}\n\n\t\t/**\n   * Checks and returns whether this range intersects with given range.\n   *\n   * @param {module:engine/model/range~Range} otherRange Range to compare with.\n   * @returns {Boolean} `true` if ranges intersect, `false` otherwise.\n   */\n\n\t}, {\n\t\tkey: 'isIntersecting',\n\t\tvalue: function isIntersecting(otherRange) {\n\t\t\treturn this.start.isBefore(otherRange.end) && this.end.isAfter(otherRange.start);\n\t\t}\n\n\t\t/**\n   * Computes which part(s) of this {@link ~Range range} is not a part of given {@link ~Range range}.\n   * Returned array contains zero, one or two {@link ~Range ranges}.\n   *\n   * Examples:\n   *\n   *\t\tlet range = new Range( new Position( root, [ 2, 7 ] ), new Position( root, [ 4, 0, 1 ] ) );\n   *\t\tlet otherRange = new Range( new Position( root, [ 1 ] ), new Position( root, [ 5 ] ) );\n   *\t\tlet transformed = range.getDifference( otherRange );\n   *\t\t// transformed array has no ranges because `otherRange` contains `range`\n   *\n   *\t\totherRange = new Range( new Position( root, [ 1 ] ), new Position( root, [ 3 ] ) );\n   *\t\ttransformed = range.getDifference( otherRange );\n   *\t\t// transformed array has one range: from [ 3 ] to [ 4, 0, 1 ]\n   *\n   *\t\totherRange = new Range( new Position( root, [ 3 ] ), new Position( root, [ 4 ] ) );\n   *\t\ttransformed = range.getDifference( otherRange );\n   *\t\t// transformed array has two ranges: from [ 2, 7 ] to [ 3 ] and from [ 4 ] to [ 4, 0, 1 ]\n   *\n   * @param {module:engine/model/range~Range} otherRange Range to differentiate against.\n   * @returns {Array.<module:engine/model/range~Range>} The difference between ranges.\n   */\n\n\t}, {\n\t\tkey: 'getDifference',\n\t\tvalue: function getDifference(otherRange) {\n\t\t\tvar ranges = [];\n\n\t\t\tif (this.isIntersecting(otherRange)) {\n\t\t\t\t// Ranges intersect.\n\n\t\t\t\tif (this.containsPosition(otherRange.start)) {\n\t\t\t\t\t// Given range start is inside this range. This means that we have to\n\t\t\t\t\t// add shrunken range - from the start to the middle of this range.\n\t\t\t\t\tranges.push(new Range(this.start, otherRange.start));\n\t\t\t\t}\n\n\t\t\t\tif (this.containsPosition(otherRange.end)) {\n\t\t\t\t\t// Given range end is inside this range. This means that we have to\n\t\t\t\t\t// add shrunken range - from the middle of this range to the end.\n\t\t\t\t\tranges.push(new Range(otherRange.end, this.end));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Ranges do not intersect, return the original range.\n\t\t\t\tranges.push(Range.createFromRange(this));\n\t\t\t}\n\n\t\t\treturn ranges;\n\t\t}\n\n\t\t/**\n   * Returns an intersection of this {@link ~Range range} and given {@link ~Range range}.\n   * Intersection is a common part of both of those ranges. If ranges has no common part, returns `null`.\n   *\n   * Examples:\n   *\n   *\t\tlet range = new Range( new Position( root, [ 2, 7 ] ), new Position( root, [ 4, 0, 1 ] ) );\n   *\t\tlet otherRange = new Range( new Position( root, [ 1 ] ), new Position( root, [ 2 ] ) );\n   *\t\tlet transformed = range.getIntersection( otherRange ); // null - ranges have no common part\n   *\n   *\t\totherRange = new Range( new Position( root, [ 3 ] ), new Position( root, [ 5 ] ) );\n   *\t\ttransformed = range.getIntersection( otherRange ); // range from [ 3 ] to [ 4, 0, 1 ]\n   *\n   * @param {module:engine/model/range~Range} otherRange Range to check for intersection.\n   * @returns {module:engine/model/range~Range|null} A common part of given ranges or `null` if ranges have no common part.\n   */\n\n\t}, {\n\t\tkey: 'getIntersection',\n\t\tvalue: function getIntersection(otherRange) {\n\t\t\tif (this.isIntersecting(otherRange)) {\n\t\t\t\t// Ranges intersect, so a common range will be returned.\n\t\t\t\t// At most, it will be same as this range.\n\t\t\t\tvar commonRangeStart = this.start;\n\t\t\t\tvar commonRangeEnd = this.end;\n\n\t\t\t\tif (this.containsPosition(otherRange.start)) {\n\t\t\t\t\t// Given range start is inside this range. This means thaNt we have to\n\t\t\t\t\t// shrink common range to the given range start.\n\t\t\t\t\tcommonRangeStart = otherRange.start;\n\t\t\t\t}\n\n\t\t\t\tif (this.containsPosition(otherRange.end)) {\n\t\t\t\t\t// Given range end is inside this range. This means that we have to\n\t\t\t\t\t// shrink common range to the given range end.\n\t\t\t\t\tcommonRangeEnd = otherRange.end;\n\t\t\t\t}\n\n\t\t\t\treturn new Range(commonRangeStart, commonRangeEnd);\n\t\t\t}\n\n\t\t\t// Ranges do not intersect, so they do not have common part.\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n   * Computes and returns the smallest set of {@link #isFlat flat} ranges, that covers this range in whole.\n   *\n   * See an example of a model structure (`[` and `]` are range boundaries):\n   *\n   *\t\troot                                                            root\n   *\t\t |- element DIV                         DIV             P2              P3             DIV\n   *\t\t |   |- element H                   H        P1        f o o           b a r       H         P4\n   *\t\t |   |   |- \"fir[st\"             fir[st     lorem                               se]cond     ipsum\n   *\t\t |   |- element P1\n   *\t\t |   |   |- \"lorem\"                                              ||\n   *\t\t |- element P2                                                   ||\n   *\t\t |   |- \"foo\"                                                    VV\n   *\t\t |- element P3\n   *\t\t |   |- \"bar\"                                                   root\n   *\t\t |- element DIV                         DIV             [P2             P3]             DIV\n   *\t\t |   |- element H                   H       [P1]       f o o           b a r        H         P4\n   *\t\t |   |   |- \"se]cond\"            fir[st]    lorem                               [se]cond     ipsum\n   *\t\t |   |- element P4\n   *\t\t |   |   |- \"ipsum\"\n   *\n   * As it can be seen, letters contained in the range are: `stloremfoobarse`, spread across different parents.\n   * We are looking for minimal set of flat ranges that contains the same nodes.\n   *\n   * Minimal flat ranges for above range `( [ 0, 0, 3 ], [ 3, 0, 2 ] )` will be:\n   *\n   *\t\t( [ 0, 0, 3 ], [ 0, 0, 5 ] ) = \"st\"\n   *\t\t( [ 0, 1 ], [ 0, 2 ] ) = element P1 (\"lorem\")\n   *\t\t( [ 1 ], [ 3 ] ) = element P2, element P3 (\"foobar\")\n   *\t\t( [ 3, 0, 0 ], [ 3, 0, 2 ] ) = \"se\"\n   *\n   * **Note:** if an {@link module:engine/model/element~Element element} is not wholly contained in this range, it won't be returned\n   * in any of the returned flat ranges. See in the example how `H` elements at the beginning and at the end of the range\n   * were omitted. Only their parts that were wholly in the range were returned.\n   *\n   * **Note:** this method is not returning flat ranges that contain no nodes.\n   *\n   * @returns {Array.<module:engine/model/range~Range>} Array of flat ranges covering this range.\n   */\n\n\t}, {\n\t\tkey: 'getMinimalFlatRanges',\n\t\tvalue: function getMinimalFlatRanges() {\n\t\t\tvar ranges = [];\n\t\t\tvar diffAt = this.start.getCommonPath(this.end).length;\n\n\t\t\tvar pos = _position2.default.createFromPosition(this.start);\n\t\t\tvar posParent = pos.parent;\n\n\t\t\t// Go up.\n\t\t\twhile (pos.path.length > diffAt + 1) {\n\t\t\t\tvar howMany = posParent.maxOffset - pos.offset;\n\n\t\t\t\tif (howMany !== 0) {\n\t\t\t\t\tranges.push(new Range(pos, pos.getShiftedBy(howMany)));\n\t\t\t\t}\n\n\t\t\t\tpos.path = pos.path.slice(0, -1);\n\t\t\t\tpos.offset++;\n\t\t\t\tposParent = posParent.parent;\n\t\t\t}\n\n\t\t\t// Go down.\n\t\t\twhile (pos.path.length <= this.end.path.length) {\n\t\t\t\tvar offset = this.end.path[pos.path.length - 1];\n\t\t\t\tvar _howMany = offset - pos.offset;\n\n\t\t\t\tif (_howMany !== 0) {\n\t\t\t\t\tranges.push(new Range(pos, pos.getShiftedBy(_howMany)));\n\t\t\t\t}\n\n\t\t\t\tpos.offset = offset;\n\t\t\t\tpos.path.push(0);\n\t\t\t}\n\n\t\t\treturn ranges;\n\t\t}\n\n\t\t/**\n   * Creates a {@link module:engine/model/treewalker~TreeWalker TreeWalker} instance with this range as a boundary.\n   *\n   * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\n   * @param {module:engine/model/position~Position} [options.startPosition]\n   * @param {Boolean} [options.singleCharacters=false]\n   * @param {Boolean} [options.shallow=false]\n   * @param {Boolean} [options.ignoreElementEnd=false]\n   */\n\n\t}, {\n\t\tkey: 'getWalker',\n\t\tvalue: function getWalker() {\n\t\t\tvar options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\t\t\toptions.boundaries = this;\n\n\t\t\treturn new _treewalker2.default(options);\n\t\t}\n\n\t\t/**\n   * Returns an iterator that iterates over all {@link module:engine/model/item~Item items} that are in this range and returns\n   * them.\n   *\n   * This method uses {@link module:engine/model/treewalker~TreeWalker} with `boundaries` set to this range and `ignoreElementEnd` option\n   * set to `true`. However it returns only {@link module:engine/model/item~Item model items},\n   * not {@link module:engine/model/treewalker~TreeWalkerValue}.\n   *\n   * You may specify additional options for the tree walker. See {@link module:engine/model/treewalker~TreeWalker} for\n   * a full list of available options.\n   *\n   * @method getItems\n   * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\n   * @returns {Iterable.<module:engine/model/item~Item>}\n   */\n\n\t}, {\n\t\tkey: 'getItems',\n\t\tvalue: regeneratorRuntime.mark(function getItems() {\n\t\t\tvar options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\t\t\tvar treeWalker, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value;\n\n\t\t\treturn regeneratorRuntime.wrap(function getItems$(_context2) {\n\t\t\t\twhile (1) {\n\t\t\t\t\tswitch (_context2.prev = _context2.next) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\toptions.boundaries = this;\n\t\t\t\t\t\t\toptions.ignoreElementEnd = true;\n\n\t\t\t\t\t\t\ttreeWalker = new _treewalker2.default(options);\n\t\t\t\t\t\t\t_iteratorNormalCompletion = true;\n\t\t\t\t\t\t\t_didIteratorError = false;\n\t\t\t\t\t\t\t_iteratorError = undefined;\n\t\t\t\t\t\t\t_context2.prev = 6;\n\t\t\t\t\t\t\t_iterator = treeWalker[Symbol.iterator]();\n\n\t\t\t\t\t\tcase 8:\n\t\t\t\t\t\t\tif (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n\t\t\t\t\t\t\t\t_context2.next = 15;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_value = _step.value;\n\t\t\t\t\t\t\t_context2.next = 12;\n\t\t\t\t\t\t\treturn _value.item;\n\n\t\t\t\t\t\tcase 12:\n\t\t\t\t\t\t\t_iteratorNormalCompletion = true;\n\t\t\t\t\t\t\t_context2.next = 8;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 15:\n\t\t\t\t\t\t\t_context2.next = 21;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 17:\n\t\t\t\t\t\t\t_context2.prev = 17;\n\t\t\t\t\t\t\t_context2.t0 = _context2['catch'](6);\n\t\t\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t\t\t_iteratorError = _context2.t0;\n\n\t\t\t\t\t\tcase 21:\n\t\t\t\t\t\t\t_context2.prev = 21;\n\t\t\t\t\t\t\t_context2.prev = 22;\n\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase 24:\n\t\t\t\t\t\t\t_context2.prev = 24;\n\n\t\t\t\t\t\t\tif (!_didIteratorError) {\n\t\t\t\t\t\t\t\t_context2.next = 27;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthrow _iteratorError;\n\n\t\t\t\t\t\tcase 27:\n\t\t\t\t\t\t\treturn _context2.finish(24);\n\n\t\t\t\t\t\tcase 28:\n\t\t\t\t\t\t\treturn _context2.finish(21);\n\n\t\t\t\t\t\tcase 29:\n\t\t\t\t\t\tcase 'end':\n\t\t\t\t\t\t\treturn _context2.stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, getItems, this, [[6, 17, 21, 29], [22,, 24, 28]]);\n\t\t})\n\n\t\t/**\n   * Returns an iterator that iterates over all {@link module:engine/model/position~Position positions} that are boundaries or\n   * contained in this range.\n   *\n   * This method uses {@link module:engine/model/treewalker~TreeWalker} with `boundaries` set to this range. However it returns only\n   * {@link module:engine/model/position~Position positions}, not {@link module:engine/model/treewalker~TreeWalkerValue}.\n   *\n   * You may specify additional options for the tree walker. See {@link module:engine/model/treewalker~TreeWalker} for\n   * a full list of available options.\n   *\n   * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\n   * @returns {Iterable.<module:engine/model/position~Position>}\n   */\n\n\t}, {\n\t\tkey: 'getPositions',\n\t\tvalue: regeneratorRuntime.mark(function getPositions() {\n\t\t\tvar options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\t\t\tvar treeWalker, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _value2;\n\n\t\t\treturn regeneratorRuntime.wrap(function getPositions$(_context3) {\n\t\t\t\twhile (1) {\n\t\t\t\t\tswitch (_context3.prev = _context3.next) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\toptions.boundaries = this;\n\n\t\t\t\t\t\t\ttreeWalker = new _treewalker2.default(options);\n\t\t\t\t\t\t\t_context3.next = 4;\n\t\t\t\t\t\t\treturn treeWalker.position;\n\n\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t_iteratorNormalCompletion2 = true;\n\t\t\t\t\t\t\t_didIteratorError2 = false;\n\t\t\t\t\t\t\t_iteratorError2 = undefined;\n\t\t\t\t\t\t\t_context3.prev = 7;\n\t\t\t\t\t\t\t_iterator2 = treeWalker[Symbol.iterator]();\n\n\t\t\t\t\t\tcase 9:\n\t\t\t\t\t\t\tif (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n\t\t\t\t\t\t\t\t_context3.next = 16;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_value2 = _step2.value;\n\t\t\t\t\t\t\t_context3.next = 13;\n\t\t\t\t\t\t\treturn _value2.nextPosition;\n\n\t\t\t\t\t\tcase 13:\n\t\t\t\t\t\t\t_iteratorNormalCompletion2 = true;\n\t\t\t\t\t\t\t_context3.next = 9;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 16:\n\t\t\t\t\t\t\t_context3.next = 22;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 18:\n\t\t\t\t\t\t\t_context3.prev = 18;\n\t\t\t\t\t\t\t_context3.t0 = _context3['catch'](7);\n\t\t\t\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t\t\t\t_iteratorError2 = _context3.t0;\n\n\t\t\t\t\t\tcase 22:\n\t\t\t\t\t\t\t_context3.prev = 22;\n\t\t\t\t\t\t\t_context3.prev = 23;\n\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase 25:\n\t\t\t\t\t\t\t_context3.prev = 25;\n\n\t\t\t\t\t\t\tif (!_didIteratorError2) {\n\t\t\t\t\t\t\t\t_context3.next = 28;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthrow _iteratorError2;\n\n\t\t\t\t\t\tcase 28:\n\t\t\t\t\t\t\treturn _context3.finish(25);\n\n\t\t\t\t\t\tcase 29:\n\t\t\t\t\t\t\treturn _context3.finish(22);\n\n\t\t\t\t\t\tcase 30:\n\t\t\t\t\t\tcase 'end':\n\t\t\t\t\t\t\treturn _context3.stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, getPositions, this, [[7, 18, 22, 30], [23,, 25, 29]]);\n\t\t})\n\n\t\t/**\n   * Returns a range that is a result of transforming this range by given `delta`.\n   *\n   * **Note:** transformation may break one range into multiple ranges (e.g. when a part of the range is\n   * moved to a different part of document tree). For this reason, an array is returned by this method and it\n   * may contain one or more `Range` instances.\n   *\n   * @param {module:engine/model/delta/delta~Delta} delta Delta to transform range by.\n   * @returns {Array.<module:engine/model/range~Range>} Range which is the result of transformation.\n   */\n\n\t}, {\n\t\tkey: 'getTransformedByDelta',\n\t\tvalue: function getTransformedByDelta(delta) {\n\t\t\tvar ranges = [Range.createFromRange(this)];\n\n\t\t\t// Operation types that a range can be transformed by.\n\t\t\tvar supportedTypes = new Set(['insert', 'move', 'remove', 'reinsert']);\n\n\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\tvar _didIteratorError3 = false;\n\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator3 = delta.operations[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\tvar operation = _step3.value;\n\n\t\t\t\t\tif (supportedTypes.has(operation.type)) {\n\t\t\t\t\t\tfor (var i = 0; i < ranges.length; i++) {\n\t\t\t\t\t\t\tvar result = ranges[i]._getTransformedByDocumentChange(operation.type, delta.type, operation.targetPosition || operation.position, operation.howMany || operation.nodes.maxOffset, operation.sourcePosition);\n\n\t\t\t\t\t\t\tranges.splice.apply(ranges, [i, 1].concat(_toConsumableArray(result)));\n\n\t\t\t\t\t\t\ti += result.length - 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t_iteratorError3 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ranges;\n\t\t}\n\n\t\t/**\n   * Returns a range that is a result of transforming this range by multiple `deltas`.\n   *\n   * **Note:** transformation may break one range into multiple ranges (e.g. when a part of the range is\n   * moved to a different part of document tree). For this reason, an array is returned by this method and it\n   * may contain one or more `Range` instances.\n   *\n   * @param {Iterable.<module:engine/model/delta/delta~Delta>} deltas Deltas to transform the range by.\n   * @returns {Array.<module:engine/model/range~Range>} Range which is the result of transformation.\n   */\n\n\t}, {\n\t\tkey: 'getTransformedByDeltas',\n\t\tvalue: function getTransformedByDeltas(deltas) {\n\t\t\tvar ranges = [Range.createFromRange(this)];\n\n\t\t\tvar _iteratorNormalCompletion4 = true;\n\t\t\tvar _didIteratorError4 = false;\n\t\t\tvar _iteratorError4 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator4 = deltas[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\t\t\tvar delta = _step4.value;\n\n\t\t\t\t\tfor (var _i = 0; _i < ranges.length; _i++) {\n\t\t\t\t\t\tvar result = ranges[_i].getTransformedByDelta(delta);\n\n\t\t\t\t\t\tranges.splice.apply(ranges, [_i, 1].concat(_toConsumableArray(result)));\n\t\t\t\t\t\t_i += result.length - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// It may happen that a range is split into two, and then the part of second \"piece\" is moved into first\n\t\t\t\t// \"piece\". In this case we will have incorrect third range, which should not be included in the result --\n\t\t\t\t// because it is already included in the first \"piece\". In this loop we are looking for all such ranges that\n\t\t\t\t// are inside other ranges and we simply remove them.\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError4 = true;\n\t\t\t\t_iteratorError4 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t\t\t_iterator4.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError4) {\n\t\t\t\t\t\tthrow _iteratorError4;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < ranges.length; i++) {\n\t\t\t\tvar range = ranges[i];\n\n\t\t\t\tfor (var j = i + 1; j < ranges.length; j++) {\n\t\t\t\t\tvar next = ranges[j];\n\n\t\t\t\t\tif (range.containsRange(next) || next.containsRange(range) || range.isEqual(next)) {\n\t\t\t\t\t\tranges.splice(j, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ranges;\n\t\t}\n\n\t\t/**\n   * Returns an {@link module:engine/model/element~Element} or {@link module:engine/model/documentfragment~DocumentFragment}\n   * which is a common ancestor of the range's both ends (in which the entire range is contained).\n   *\n   * @returns {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n   */\n\n\t}, {\n\t\tkey: 'getCommonAncestor',\n\t\tvalue: function getCommonAncestor() {\n\t\t\treturn this.start.getCommonAncestor(this.end);\n\t\t}\n\n\t\t/**\n   * Returns a range that is a result of transforming this range by a change in the model document.\n   *\n   * @protected\n   * @param {'insert'|'move'|'remove'|'reinsert'} type Change type.\n   * @param {String} deltaType Type of delta that introduced the change.\n   * @param {module:engine/model/position~Position} targetPosition Position before the first changed node.\n   * @param {Number} howMany How many nodes has been changed.\n   * @param {module:engine/model/position~Position} sourcePosition Source position of changes.\n   * @returns {Array.<module:engine/model/range~Range>}\n   */\n\n\t}, {\n\t\tkey: '_getTransformedByDocumentChange',\n\t\tvalue: function _getTransformedByDocumentChange(type, deltaType, targetPosition, howMany, sourcePosition) {\n\t\t\tif (type == 'insert') {\n\t\t\t\treturn this._getTransformedByInsertion(targetPosition, howMany, false, false);\n\t\t\t} else {\n\t\t\t\tvar sourceRange = Range.createFromPositionAndShift(sourcePosition, howMany);\n\n\t\t\t\t// Edge case for merge delta.\n\t\t\t\tif (deltaType == 'merge' && this.isCollapsed && (this.start.isEqual(sourceRange.start) || this.start.isEqual(sourceRange.end))) {\n\t\t\t\t\t// Collapsed range is in merged element, at the beginning or at the end of it.\n\t\t\t\t\t// Without fix, the range would end up in the graveyard, together with removed element.\n\t\t\t\t\t// <p>foo</p><p>[]bar</p> -> <p>foobar</p><p>[]</p> -> <p>foobar</p> -> <p>foo[]bar</p>\n\t\t\t\t\t// <p>foo</p><p>bar[]</p>\n\t\t\t\t\treturn [new Range(targetPosition.getShiftedBy(this.start.offset))];\n\t\t\t\t}\n\t\t\t\t//\n\t\t\t\t// Other edge cases:\n\t\t\t\t//\n\t\t\t\t// In all examples `[]` is `this` and `{}` is `sourceRange`, while `^` is move target position.\n\t\t\t\t//\n\t\t\t\t// Example:\n\t\t\t\t// <p>xx</p>^<w>{<p>a[b</p>}</w><p>c]d</p>   -->   <p>xx</p><p>a[b</p><w></w><p>c]d</p>\n\t\t\t\t// ^<p>xx</p><w>{<p>a[b</p>}</w><p>c]d</p>   -->   <p>a[b</p><p>xx</p><w></w><p>c]d</p>  // Note <p>xx</p> inclusion.\n\t\t\t\t// <w>{<p>a[b</p>}</w>^<p>c]d</p>            -->   <w></w><p>a[b</p><p>c]d</p>\n\t\t\t\tif (sourceRange.containsPosition(this.start) && this.containsPosition(sourceRange.end) && this.end.isAfter(targetPosition)) {\n\t\t\t\t\tvar start = this.start._getCombined(sourcePosition, targetPosition._getTransformedByDeletion(sourcePosition, howMany));\n\t\t\t\t\tvar end = this.end._getTransformedByMove(sourcePosition, targetPosition, howMany, false, false);\n\n\t\t\t\t\treturn [new Range(start, end)];\n\t\t\t\t}\n\n\t\t\t\t// Example:\n\t\t\t\t// <p>c[d</p><w>{<p>a]b</p>}</w>^<p>xx</p>   -->   <p>c[d</p><w></w><p>a]b</p><p>xx</p>\n\t\t\t\t// <p>c[d</p><w>{<p>a]b</p>}</w><p>xx</p>^   -->   <p>c[d</p><w></w><p>xx</p><p>a]b</p>  // Note <p>xx</p> inclusion.\n\t\t\t\t// <p>c[d</p>^<w>{<p>a]b</p>}</w>            -->   <p>c[d</p><p>a]b</p><w></w>\n\t\t\t\tif ((sourceRange.containsPosition(this.end) || sourceRange.end.isEqual(this.end)) && this.containsPosition(sourceRange.start) && this.start.isBefore(targetPosition)) {\n\t\t\t\t\tvar _start = this.start._getTransformedByMove(sourcePosition, targetPosition, howMany, true, false);\n\t\t\t\t\tvar _end = this.end._getCombined(sourcePosition, targetPosition._getTransformedByDeletion(sourcePosition, howMany));\n\n\t\t\t\t\treturn [new Range(_start, _end)];\n\t\t\t\t}\n\n\t\t\t\treturn this._getTransformedByMove(sourcePosition, targetPosition, howMany);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Returns an array containing one or two {@link ~Range ranges} that are a result of transforming this\n   * {@link ~Range range} by inserting `howMany` nodes at `insertPosition`. Two {@link ~Range ranges} are\n   * returned if the insertion was inside this {@link ~Range range} and `spread` is set to `true`.\n   *\n   * Examples:\n   *\n   *\t\tlet range = new Range( new Position( root, [ 2, 7 ] ), new Position( root, [ 4, 0, 1 ] ) );\n   *\t\tlet transformed = range._getTransformedByInsertion( new Position( root, [ 1 ] ), 2 );\n   *\t\t// transformed array has one range from [ 4, 7 ] to [ 6, 0, 1 ]\n   *\n   *\t\ttransformed = range._getTransformedByInsertion( new Position( root, [ 4, 0, 0 ] ), 4 );\n   *\t\t// transformed array has one range from [ 2, 7 ] to [ 4, 0, 5 ]\n   *\n   *\t\ttransformed = range._getTransformedByInsertion( new Position( root, [ 3, 2 ] ), 4 );\n   *\t\t// transformed array has one range, which is equal to original range\n   *\n   *\t\ttransformed = range._getTransformedByInsertion( new Position( root, [ 3, 2 ] ), 4, true );\n   *\t\t// transformed array has two ranges: from [ 2, 7 ] to [ 3, 2 ] and from [ 3, 6 ] to [ 4, 0, 1 ]\n   *\n   *\t\ttransformed = range._getTransformedByInsertion( new Position( root, [ 4, 0, 1 ] ), 4, false, false );\n   *\t\t// transformed array has one range which is equal to original range because insertion is after the range boundary\n   *\n   *\t\ttransformed = range._getTransformedByInsertion( new Position( root, [ 4, 0, 1 ] ), 4, false, true );\n   *\t\t// transformed array has one range: from [ 2, 7 ] to [ 4, 0, 5 ] because range was expanded\n   *\n   * @protected\n   * @param {module:engine/model/position~Position} insertPosition Position where nodes are inserted.\n   * @param {Number} howMany How many nodes are inserted.\n   * @param {Boolean} [spread] Flag indicating whether this {~Range range} should be spread if insertion\n   * was inside the range. Defaults to `false`.\n   * @param {Boolean} [isSticky] Flag indicating whether insertion should expand a range if it is in a place of\n   * range boundary. Defaults to `false`.\n   * @returns {Array.<module:engine/model/range~Range>} Result of the transformation.\n   */\n\n\t}, {\n\t\tkey: '_getTransformedByInsertion',\n\t\tvalue: function _getTransformedByInsertion(insertPosition, howMany) {\n\t\t\tvar spread = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\t\t\tvar isSticky = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n\t\t\tif (spread && this.containsPosition(insertPosition)) {\n\t\t\t\t// Range has to be spread. The first part is from original start to the spread point.\n\t\t\t\t// The other part is from spread point to the original end, but transformed by\n\t\t\t\t// insertion to reflect insertion changes.\n\n\t\t\t\treturn [new Range(this.start, insertPosition), new Range(insertPosition._getTransformedByInsertion(insertPosition, howMany, true), this.end._getTransformedByInsertion(insertPosition, howMany, this.isCollapsed))];\n\t\t\t} else {\n\t\t\t\tvar range = Range.createFromRange(this);\n\n\t\t\t\tvar insertBeforeStart = range.isCollapsed ? true : !isSticky;\n\t\t\t\tvar insertBeforeEnd = range.isCollapsed ? true : isSticky;\n\n\t\t\t\trange.start = range.start._getTransformedByInsertion(insertPosition, howMany, insertBeforeStart);\n\t\t\t\trange.end = range.end._getTransformedByInsertion(insertPosition, howMany, insertBeforeEnd);\n\n\t\t\t\treturn [range];\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Returns an array containing {@link ~Range ranges} that are a result of transforming this\n   * {@link ~Range range} by moving `howMany` nodes from `sourcePosition` to `targetPosition`.\n   *\n   * @protected\n   * @param {module:engine/model/position~Position} sourcePosition Position from which nodes are moved.\n   * @param {module:engine/model/position~Position} targetPosition Position to where nodes are moved.\n   * @param {Number} howMany How many nodes are moved.\n   * @returns {Array.<module:engine/model/range~Range>} Result of the transformation.\n   */\n\n\t}, {\n\t\tkey: '_getTransformedByMove',\n\t\tvalue: function _getTransformedByMove(sourcePosition, targetPosition, howMany) {\n\t\t\tif (this.isCollapsed) {\n\t\t\t\tvar newPos = this.start._getTransformedByMove(sourcePosition, targetPosition, howMany, true, false);\n\n\t\t\t\treturn [new Range(newPos)];\n\t\t\t}\n\n\t\t\tvar result = void 0;\n\n\t\t\tvar moveRange = new Range(sourcePosition, sourcePosition.getShiftedBy(howMany));\n\n\t\t\tvar differenceSet = this.getDifference(moveRange);\n\t\t\tvar difference = null;\n\n\t\t\tvar common = this.getIntersection(moveRange);\n\n\t\t\tif (differenceSet.length == 1) {\n\t\t\t\t// `moveRange` and this range may intersect.\n\t\t\t\tdifference = new Range(differenceSet[0].start._getTransformedByDeletion(sourcePosition, howMany), differenceSet[0].end._getTransformedByDeletion(sourcePosition, howMany));\n\t\t\t} else if (differenceSet.length == 2) {\n\t\t\t\t// `moveRange` is inside this range.\n\t\t\t\tdifference = new Range(this.start, this.end._getTransformedByDeletion(sourcePosition, howMany));\n\t\t\t} // else, `moveRange` contains this range.\n\n\t\t\tvar insertPosition = targetPosition._getTransformedByDeletion(sourcePosition, howMany);\n\n\t\t\tif (difference) {\n\t\t\t\tresult = difference._getTransformedByInsertion(insertPosition, howMany, common !== null);\n\t\t\t} else {\n\t\t\t\tresult = [];\n\t\t\t}\n\n\t\t\tif (common) {\n\t\t\t\tresult.push(new Range(common.start._getCombined(moveRange.start, insertPosition), common.end._getCombined(moveRange.start, insertPosition)));\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n   * Creates a new range, spreading from specified {@link module:engine/model/position~Position position} to a position moved by\n   * given `shift`. If `shift` is a negative value, shifted position is treated as the beginning of the range.\n   *\n   * @param {module:engine/model/position~Position} position Beginning of the range.\n   * @param {Number} shift How long the range should be.\n   * @returns {module:engine/model/range~Range}\n   */\n\n\t}, {\n\t\tkey: 'isCollapsed',\n\t\tget: function get() {\n\t\t\treturn this.start.isEqual(this.end);\n\t\t}\n\n\t\t/**\n   * Returns whether this range is flat, that is if {@link #start} position and\n   * {@link #end} position are in the same {@link module:engine/model/position~Position#parent}.\n   *\n   * @type {Boolean}\n   */\n\n\t}, {\n\t\tkey: 'isFlat',\n\t\tget: function get() {\n\t\t\treturn this.start.parent === this.end.parent;\n\t\t}\n\n\t\t/**\n   * Range root element.\n   *\n   * @type {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment}\n   */\n\n\t}, {\n\t\tkey: 'root',\n\t\tget: function get() {\n\t\t\treturn this.start.root;\n\t\t}\n\t}], [{\n\t\tkey: 'createFromPositionAndShift',\n\t\tvalue: function createFromPositionAndShift(position, shift) {\n\t\t\tvar start = position;\n\t\t\tvar end = position.getShiftedBy(shift);\n\n\t\t\treturn shift > 0 ? new this(start, end) : new this(end, start);\n\t\t}\n\n\t\t/**\n   * Creates a range from given parents and offsets.\n   *\n   * @param {module:engine/model/element~Element} startElement Start position parent element.\n   * @param {Number} startOffset Start position offset.\n   * @param {module:engine/model/element~Element} endElement End position parent element.\n   * @param {Number} endOffset End position offset.\n   * @returns {module:engine/model/range~Range}\n   */\n\n\t}, {\n\t\tkey: 'createFromParentsAndOffsets',\n\t\tvalue: function createFromParentsAndOffsets(startElement, startOffset, endElement, endOffset) {\n\t\t\treturn new this(_position2.default.createFromParentAndOffset(startElement, startOffset), _position2.default.createFromParentAndOffset(endElement, endOffset));\n\t\t}\n\n\t\t/**\n   * Creates a new instance of `Range` which is equal to passed range.\n   *\n   * @param {module:engine/model/range~Range} range Range to clone.\n   * @returns {module:engine/model/range~Range}\n   */\n\n\t}, {\n\t\tkey: 'createFromRange',\n\t\tvalue: function createFromRange(range) {\n\t\t\treturn new this(range.start, range.end);\n\t\t}\n\n\t\t/**\n   * Creates a range inside an {@link module:engine/model/element~Element element} which starts before the first child of\n   * that element and ends after the last child of that element.\n   *\n   * @param {module:engine/model/element~Element} element Element which is a parent for the range.\n   * @returns {module:engine/model/range~Range}\n   */\n\n\t}, {\n\t\tkey: 'createIn',\n\t\tvalue: function createIn(element) {\n\t\t\treturn this.createFromParentsAndOffsets(element, 0, element, element.maxOffset);\n\t\t}\n\n\t\t/**\n   * Creates a range that starts before given {@link module:engine/model/item~Item model item} and ends after it.\n   *\n   * @param {module:engine/model/item~Item} item\n   * @returns {module:engine/model/range~Range}\n   */\n\n\t}, {\n\t\tkey: 'createOn',\n\t\tvalue: function createOn(item) {\n\t\t\treturn this.createFromPositionAndShift(_position2.default.createBefore(item), item.offsetSize);\n\t\t}\n\n\t\t/**\n   * Combines all ranges from the passed array into a one range. At least one range has to be passed.\n   * Passed ranges must not have common parts.\n   *\n   * The first range from the array is a reference range. If other ranges start or end on the exactly same position where\n   * the reference range, they get combined into one range.\n   *\n   *\t\t[  ][]  [    ][ ][             ][ ][]  [  ]  // Passed ranges, shown sorted\n   *\t\t[    ]                                       // The result of the function if the first range was a reference range.\n   *\t            [                           ]        // The result of the function if the third-to-seventh range was a reference range.\n   *\t                                           [  ]  // The result of the function if the last range was a reference range.\n   *\n   * @param {Array.<module:engine/model/range~Range>} ranges Ranges to combine.\n   * @returns {module:engine/model/range~Range} Combined range.\n   */\n\n\t}, {\n\t\tkey: 'createFromRanges',\n\t\tvalue: function createFromRanges(ranges) {\n\t\t\tif (ranges.length === 0) {\n\t\t\t\t/**\n     * At least one range has to be passed.\n     *\n     * @error range-create-from-ranges-empty-array\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('range-create-from-ranges-empty-array: At least one range has to be passed.');\n\t\t\t} else if (ranges.length == 1) {\n\t\t\t\treturn this.createFromRange(ranges[0]);\n\t\t\t}\n\n\t\t\t// 1. Set the first range in `ranges` array as a reference range.\n\t\t\t// If we are going to return just a one range, one of the ranges need to be the reference one.\n\t\t\t// Other ranges will be stuck to that range, if possible.\n\t\t\tvar ref = ranges[0];\n\n\t\t\t// 2. Sort all the ranges so it's easier to process them.\n\t\t\tranges.sort(function (a, b) {\n\t\t\t\treturn a.start.isAfter(b.start) ? 1 : -1;\n\t\t\t});\n\n\t\t\t// 3. Check at which index the reference range is now.\n\t\t\tvar refIndex = ranges.indexOf(ref);\n\n\t\t\t// 4. At this moment we don't need the original range.\n\t\t\t// We are going to modify the result and we need to return a new instance of Range.\n\t\t\t// We have to create a copy of the reference range.\n\t\t\tvar result = new this(ref.start, ref.end);\n\n\t\t\t// 5. Ranges should be checked and glued starting from the range that is closest to the reference range.\n\t\t\t// Since ranges are sorted, start with the range with index that is closest to reference range index.\n\t\t\tfor (var i = refIndex - 1; i >= 0; i++) {\n\t\t\t\tif (ranges[i].end.isEqual(result.start)) {\n\t\t\t\t\tresult.start = _position2.default.createFromPosition(ranges[i].start);\n\t\t\t\t} else {\n\t\t\t\t\t// If ranges are not starting/ending at the same position there is no point in looking further.\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 6. Ranges should be checked and glued starting from the range that is closest to the reference range.\n\t\t\t// Since ranges are sorted, start with the range with index that is closest to reference range index.\n\t\t\tfor (var _i2 = refIndex + 1; _i2 < ranges.length; _i2++) {\n\t\t\t\tif (ranges[_i2].start.isEqual(result.end)) {\n\t\t\t\t\tresult.end = _position2.default.createFromPosition(ranges[_i2].end);\n\t\t\t\t} else {\n\t\t\t\t\t// If ranges are not starting/ending at the same position there is no point in looking further.\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n   * Creates a `Range` instance from given plain object (i.e. parsed JSON string).\n   *\n   * @param {Object} json Plain object to be converted to `Range`.\n   * @param {module:engine/model/document~Document} doc Document object that will be range owner.\n   * @returns {module:engine/model/element~Element} `Range` instance created using given plain object.\n   */\n\n\t}, {\n\t\tkey: 'fromJSON',\n\t\tvalue: function fromJSON(json, doc) {\n\t\t\treturn new this(_position2.default.fromJSON(json.start, doc), _position2.default.fromJSON(json.end, doc));\n\t\t}\n\t}]);\n\n\treturn Range;\n}();\n\nexports.default = Range;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/range.js\n// module id = 3\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = mix;\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/mix\n */\n\n/**\n * Copies enumerable properties and symbols from the objects given as 2nd+ parameters to the\n * prototype of first object (a constructor).\n *\n *\t\tclass Editor {\n *\t\t\t...\n *\t\t}\n *\n *\t\tconst SomeMixin = {\n *\t\t\ta() {\n *\t\t\t\treturn 'a';\n *\t\t\t}\n *\t\t};\n *\n *\t\tmix( Editor, SomeMixin, ... );\n *\n *\t\tnew Editor().a(); // -> 'a'\n *\n * Note: Properties which already exist in the base class will not be overriden.\n *\n * @param {Function} [baseClass] Class which prototype will be extended.\n * @param {Object} [...mixins] Objects from which to get properties.\n */\nfunction mix(baseClass) {\n  for (var _len = arguments.length, mixins = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    mixins[_key - 1] = arguments[_key];\n  }\n\n  mixins.forEach(function (mixin) {\n    Object.getOwnPropertyNames(mixin).concat(Object.getOwnPropertySymbols(mixin)).forEach(function (key) {\n      if (key in baseClass.prototype) {\n        return;\n      }\n\n      var sourceDescriptor = Object.getOwnPropertyDescriptor(mixin, key);\n      sourceDescriptor.enumerable = false;\n\n      Object.defineProperty(baseClass.prototype, key, sourceDescriptor);\n    });\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/mix.js\n// module id = 4\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.TemplateIfBinding = exports.TemplateToBinding = exports.TemplateBinding = undefined;\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\nn\n/**\n * @module ui/template\n */\n\n/* global document */\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nvar _mix = require('@ckeditor/ckeditor5-utils/src/mix');\n\nvar _mix2 = _interopRequireDefault(_mix);\n\nvar _emittermixin = require('@ckeditor/ckeditor5-utils/src/emittermixin');\n\nvar _emittermixin2 = _interopRequireDefault(_emittermixin);\n\nvar _collection = require('@ckeditor/ckeditor5-utils/src/collection');\n\nvar _collection2 = _interopRequireDefault(_collection);\n\nvar _view = require('./view');\n\nvar _view2 = _interopRequireDefault(_view);\n\nvar _viewcollection = require('./viewcollection');\n\nvar _viewcollection2 = _interopRequireDefault(_viewcollection);\n\nvar _cloneDeepWith = require('@ckeditor/ckeditor5-utils/src/lib/lodash/cloneDeepWith');\n\nvar _cloneDeepWith2 = _interopRequireDefault(_cloneDeepWith);\n\nvar _isObject = require('@ckeditor/ckeditor5-utils/src/lib/lodash/isObject');\n\nvar _isObject2 = _interopRequireDefault(_isObject);\n\nvar _log = require('@ckeditor/ckeditor5-utils/src/log');\n\nvar _log2 = _interopRequireDefault(_log);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar xhtmlNs = 'http://www.w3.org/1999/xhtml';\n\n/**\n * A basic Template class. It renders DOM HTMLElement or Text from {@link module:ui/template~TemplateDefinition} and supports\n * element attributes, children, bindings to {@link module:utils/observablemixin~ObservableMixin} instances and DOM events\n * propagation. For example:\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tattributes: {\n *\t\t\t\tclass: 'foo',\n *\t\t\t\tstyle: {\n *\t\t\t\t\tbackgroundColor: 'yellow'\n *\t\t\t\t}\n *\t\t\t},\n *\t\t\tchildren: [\n *\t\t\t\t'A paragraph.'\n *\t\t\t]\n *\t\t} ).render();\n *\n * will render the following HTMLElement:\n *\n *\t\t<p class=\"foo\" style=\"background-color: yellow;\">A paragraph.</p>\n *\n * See {@link module:ui/template~TemplateDefinition} to know more about templates and complex template definitions.\n *\n* @mixes module:utils/emittermixin~EmitterMixin\n */\n\nvar Template = function () {\n\t/**\n  * Creates an instance of the {@link ~Template} class.\n  *\n  * @param {module:ui/template~TemplateDefinition} def The definition of the template.\n  */\n\tfunction Template(def) {\n\t\t_classCallCheck(this, Template);\n\n\t\tObject.assign(this, normalize(clone(def)));\n\n\t\t/**\n   * Indicates whether this particular Template instance has been\n   * {@link #render rendered}.\n   *\n   * @readonly\n   * @protected\n   * @member {Boolean}\n   */\n\t\tthis._isRendered = false;\n\n\t\t/**\n   * Tag of this template, i.e. `div`, indicating that the instance will render\n   * to an HTMLElement.\n   *\n   * @member {String} #tag\n   */\n\n\t\t/**\n   * Text of this template, indicating that the instance will render to a DOM Text.\n   *\n   * @member {Array.<String|module:ui/template~TemplateValueSchema>} #text\n   */\n\n\t\t/**\n   * Attributes of this template, i.e. `{ id: [ 'ck-id' ] }`, corresponding with\n   * HTML attributes on HTMLElement.\n   *\n   * Note: Only when {@link #tag} is defined.\n   *\n   * @member {Object} #attributes\n   */\n\n\t\t/**\n   * Children of this template; sub–templates. Each one is an independent\n   * instance of {@link ~Template}.\n   *\n   * Note: Only when {@link #tag} is defined.\n   *\n   * @member {module:utils/collection~Collection.<module:ui/template~Template>} #children\n   */\n\n\t\t/**\n   * DOM event listeners of this template.\n   *\n   * @member {Object} #eventListeners\n   */\n\n\t\t/**\n   * Data used by {@link #revert} method to restore a node\n   * to its original state.\n   *\n   * See: {@link #apply}.\n   *\n   * @readonly\n   * @protected\n   * @member {module:ui/template~RenderData}\n   */\n\t\tthis._revertData = null;\n\t}\n\n\t/**\n  * Renders a DOM Node (`HTMLElement` or `Text`) out of the template.\n  *\n  * @see #apply\n  *\n  * @returns {HTMLElement|Text}\n  */\n\n\n\t_createClass(Template, [{\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\tvar node = this._renderNode({\n\t\t\t\tintoFragment: true\n\t\t\t});\n\n\t\t\tthis._isRendered = true;\n\n\t\t\treturn node;\n\t\t}\n\n\t\t/**\n   * Applies the template to an existing DOM Node, either `HTMLElement` or `Text`.\n   *\n   * **Note:** No new DOM nodes (HTMLElement or Text) will be created. Applying extends attributes\n   * ({@link module:ui/template~TemplateDefinition attributes}) and listeners ({@link module:ui/template~TemplateDefinition on}) only.\n   *\n   * **Note:** Existing \"class\" and \"style\" attributes are extended when a template\n   * is applied to a Node, while other attributes and `textContent` are overridden.\n   *\n   * **Note:** The process of applying a template can be easily reverted using\n   * {@link module:ui/template~Template#revert} method.\n   *\n   *\t\tconst element = document.createElement( 'div' );\n   *\t\tconst bind = Template.bind( observableInstance, emitterInstance );\n   *\n   *\t\tnew Template( {\n   *\t\t\tattrs: {\n   *\t\t\t\tid: 'first-div',\n   *\t\t\t\tclass: bind.to( 'divClass' )\n   *\t\t\t},\n   *\t\t\ton: {\n   *\t\t\t\tclick: bind( 'elementClicked' ) // Will be fired by the observableInstance.\n   *\t\t\t}\n   *\t\t\tchildren: [\n   *\t\t\t\t'Div text.'\n   *\t\t\t]\n   *\t\t} ).apply( element );\n   *\n   *\t\telement.outerHTML == \"<div id=\"first-div\" class=\"my-div\">Div text.</div>\"\n   *\n   * @see module:ui/template~Template#render\n   * @see module:ui/template~Template#revert\n   * @param {Node} node Root node for the template to apply.\n   */\n\n\t}, {\n\t\tkey: 'apply',\n\t\tvalue: function apply(node) {\n\t\t\tthis._revertData = getEmptyRevertData();\n\n\t\t\tthis._renderNode({\n\t\t\t\tnode: node,\n\t\t\t\tisApplying: true,\n\t\t\t\trevertData: this._revertData\n\t\t\t});\n\n\t\t\treturn node;\n\t\t}\n\n\t\t/**\n   * Reverts a template {@link module:ui/template~Template#apply applied} to a DOM Node.\n   *\n   * @param {Node} node Root node for the template to revert. In most cases, it's the same node\n   * that {@link module:ui/template~Template#apply} has used.\n   */\n\n\t}, {\n\t\tkey: 'revert',\n\t\tvalue: function revert(node) {\n\t\t\tif (!this._revertData) {\n\t\t\t\t/**\n     * Attempting reverting a template which has not been applied yet.\n     *\n     * @error ui-template-revert-not-applied\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('ui-template-revert-not-applied: Attempting reverting a template which has not been applied yet.');\n\t\t\t}\n\n\t\t\tthis._revertTemplateFromNode(node, this._revertData);\n\t\t}\n\n\t\t/**\n   * An entry point to the interface which allows binding DOM nodes to {@link module:utils/observablemixin~ObservableMixin}.\n   * There are two types of bindings:\n   *\n   * * `HTMLElement` attributes or Text Node `textContent` can be synchronized with {@link module:utils/observablemixin~ObservableMixin}\n   * instance attributes. See {@link module:ui/template~BindChain#to} and {@link module:ui/template~BindChain#if}.\n   *\n   * * DOM events fired on `HTMLElement` can be propagated through {@link module:utils/observablemixin~ObservableMixin}.\n   * See {@link module:ui/template~BindChain#to}.\n   *\n   * @param {module:utils/observablemixin~ObservableMixin} observable An instance of ObservableMixin class.\n   * @param {module:utils/emittermixin~EmitterMixin} emitter An instance of `Emitter` class. It listens\n   * to `observable` attribute changes and DOM Events, depending on the binding. Usually {@link module:ui/view~View} instance.\n   * @returns {module:ui/template~BindChain}\n   */\n\n\t}, {\n\t\tkey: '_renderNode',\n\n\n\t\t/**\n   * Renders a DOM Node (either `HTMLElement` or `Text`) out of the template.\n   *\n   * @protected\n   * @param {module:ui/template~RenderData} data Rendering data.\n   */\n\t\tvalue: function _renderNode(data) {\n\t\t\tvar isInvalid = void 0;\n\n\t\t\tif (data.node) {\n\t\t\t\t// When applying, a definition cannot have \"tag\" and \"text\" at the same time.\n\t\t\t\tisInvalid = this.tag && this.text;\n\t\t\t} else {\n\t\t\t\t// When rendering, a definition must have either \"tag\" or \"text\": XOR( this.tag, this.text ).\n\t\t\t\tisInvalid = this.tag ? this.text : !this.text;\n\t\t\t}\n\n\t\t\tif (isInvalid) {\n\t\t\t\t/**\n     * Node definition cannot have \"tag\" and \"text\" properties at the same time.\n     * Node definition must have either \"tag\" or \"text\" when rendering new Node.\n     *\n     * @error ui-template-wrong-syntax\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('ui-template-wrong-syntax: Node definition must have either \"tag\" or \"text\" when rendering new Node.');\n\t\t\t}\n\n\t\t\tif (this.text) {\n\t\t\t\treturn this._renderText(data);\n\t\t\t} else {\n\t\t\t\treturn this._renderElement(data);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Renders an `HTMLElement` out of the template.\n   *\n   * @protected\n   * @param {module:ui/template~RenderData} data Rendering data.\n   */\n\n\t}, {\n\t\tkey: '_renderElement',\n\t\tvalue: function _renderElement(data) {\n\t\t\tvar node = data.node;\n\n\t\t\tif (!node) {\n\t\t\t\tnode = data.node = document.createElementNS(this.ns || xhtmlNs, this.tag);\n\t\t\t}\n\n\t\t\tthis._renderAttributes(data);\n\t\t\tthis._renderElementChildren(data);\n\t\t\tthis._setUpListeners(data);\n\n\t\t\treturn node;\n\t\t}\n\n\t\t/**\n   * Renders a `Text` node out of {@link module:ui/template~Template#text}.\n   *\n   * @protected\n   * @param {module:ui/template~RenderData} data Rendering data.\n   */\n\n\t}, {\n\t\tkey: '_renderText',\n\t\tvalue: function _renderText(data) {\n\t\t\tvar node = data.node;\n\n\t\t\t// Save the original textContent to revert it in #revert().\n\t\t\tif (node) {\n\t\t\t\tdata.revertData.text = node.textContent;\n\t\t\t} else {\n\t\t\t\tnode = data.node = document.createTextNode('');\n\t\t\t}\n\n\t\t\t// Check if this Text Node is bound to Observable. Cases:\n\t\t\t//\n\t\t\t//\t\ttext: [ Template.bind( ... ).to( ... ) ]\n\t\t\t//\n\t\t\t//\t\ttext: [\n\t\t\t//\t\t\t'foo',\n\t\t\t//\t\t\tTemplate.bind( ... ).to( ... ),\n\t\t\t//\t\t\t...\n\t\t\t//\t\t]\n\t\t\t//\n\t\t\tif (hasTemplateBinding(this.text)) {\n\t\t\t\tthis._bindToObservable({\n\t\t\t\t\tschema: this.text,\n\t\t\t\t\tupdater: getTextUpdater(node),\n\t\t\t\t\tdata: data\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Simply set text. Cases:\n\t\t\t//\n\t\t\t//\t\ttext: [ 'all', 'are', 'static' ]\n\t\t\t//\n\t\t\t//\t\ttext: [ 'foo' ]\n\t\t\t//\n\t\t\telse {\n\t\t\t\t\tnode.textContent = this.text.join('');\n\t\t\t\t}\n\n\t\t\treturn node;\n\t\t}\n\n\t\t/**\n   * Renders an `HTMLElement` attributes out of {@link module:ui/template~Template#attributes}.\n   *\n   * @protected\n   * @param {module:ui/template~RenderData} data Rendering data.\n   */\n\n\t}, {\n\t\tkey: '_renderAttributes',\n\t\tvalue: function _renderAttributes(data) {\n\t\t\tvar attrName = void 0,\n\t\t\t    attrValue = void 0,\n\t\t\t    domAttrValue = void 0,\n\t\t\t    attrNs = void 0;\n\n\t\t\tif (!this.attributes) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar node = data.node;\n\t\t\tvar revertData = data.revertData;\n\n\t\t\tfor (attrName in this.attributes) {\n\t\t\t\t// Current attribute value in DOM.\n\t\t\t\tdomAttrValue = node.getAttribute(attrName);\n\n\t\t\t\t// The value to be set.\n\t\t\t\tattrValue = this.attributes[attrName];\n\n\t\t\t\t// Save revert data.\n\t\t\t\tif (revertData) {\n\t\t\t\t\trevertData.attributes[attrName] = domAttrValue;\n\t\t\t\t}\n\n\t\t\t\t// Detect custom namespace:\n\t\t\t\t//\n\t\t\t\t//\t\tclass: {\n\t\t\t\t//\t\t\tns: 'abc',\n\t\t\t\t//\t\t\tvalue: Template.bind( ... ).to( ... )\n\t\t\t\t//\t\t}\n\t\t\t\t//\n\t\t\t\tattrNs = (0, _isObject2.default)(attrValue[0]) && attrValue[0].ns ? attrValue[0].ns : null;\n\n\t\t\t\t// Activate binding if one is found. Cases:\n\t\t\t\t//\n\t\t\t\t//\t\tclass: [\n\t\t\t\t//\t\t\tTemplate.bind( ... ).to( ... )\n\t\t\t\t//\t\t]\n\t\t\t\t//\n\t\t\t\t//\t\tclass: [\n\t\t\t\t//\t\t\t'bar',\n\t\t\t\t//\t\t\tTemplate.bind( ... ).to( ... ),\n\t\t\t\t//\t\t\t'baz'\n\t\t\t\t//\t\t]\n\t\t\t\t//\n\t\t\t\t//\t\tclass: {\n\t\t\t\t//\t\t\tns: 'abc',\n\t\t\t\t//\t\t\tvalue: Template.bind( ... ).to( ... )\n\t\t\t\t//\t\t}\n\t\t\t\t//\n\t\t\t\tif (hasTemplateBinding(attrValue)) {\n\t\t\t\t\t// Normalize attributes with additional data like namespace:\n\t\t\t\t\t//\n\t\t\t\t\t//\t\tclass: {\n\t\t\t\t\t//\t\t\tns: 'abc',\n\t\t\t\t\t//\t\t\tvalue: [ ... ]\n\t\t\t\t\t//\t\t}\n\t\t\t\t\t//\n\t\t\t\t\tvar valueToBind = attrNs ? attrValue[0].value : attrValue;\n\n\t\t\t\t\t// Extend the original value of attributes like \"style\" and \"class\",\n\t\t\t\t\t// don't override them.\n\t\t\t\t\tif (revertData && shouldExtend(attrName)) {\n\t\t\t\t\t\tvalueToBind.unshift(domAttrValue);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._bindToObservable({\n\t\t\t\t\t\tschema: valueToBind,\n\t\t\t\t\t\tupdater: getAttributeUpdater(node, attrName, attrNs),\n\t\t\t\t\t\tdata: data\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Style attribute could be an Object so it needs to be parsed in a specific way.\n\t\t\t\t//\n\t\t\t\t//\t\tstyle: {\n\t\t\t\t//\t\t\twidth: '100px',\n\t\t\t\t//\t\t\theight: Template.bind( ... ).to( ... )\n\t\t\t\t//\t\t}\n\t\t\t\t//\n\t\t\t\telse if (attrName == 'style' && typeof attrValue[0] !== 'string') {\n\t\t\t\t\t\tthis._renderStyleAttribute(attrValue[0], data);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Otherwise simply set the static attribute:\n\t\t\t\t\t//\n\t\t\t\t\t//\t\tclass: [ 'foo' ]\n\t\t\t\t\t//\n\t\t\t\t\t//\t\tclass: [ 'all', 'are', 'static' ]\n\t\t\t\t\t//\n\t\t\t\t\t//\t\tclass: [\n\t\t\t\t\t//\t\t\t{\n\t\t\t\t\t//\t\t\t\tns: 'abc',\n\t\t\t\t\t//\t\t\t\tvalue: [ 'foo' ]\n\t\t\t\t\t//\t\t\t}\n\t\t\t\t\t//\t\t]\n\t\t\t\t\t//\n\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Extend the original value of attributes like \"style\" and \"class\",\n\t\t\t\t\t\t\t// don't override them.\n\t\t\t\t\t\t\tif (revertData && domAttrValue && shouldExtend(attrName)) {\n\t\t\t\t\t\t\t\tattrValue.unshift(domAttrValue);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tattrValue = attrValue\n\t\t\t\t\t\t\t// Retrieve \"values\" from:\n\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t//\t\tclass: [\n\t\t\t\t\t\t\t//\t\t\t{\n\t\t\t\t\t\t\t//\t\t\t\tns: 'abc',\n\t\t\t\t\t\t\t//\t\t\t\tvalue: [ ... ]\n\t\t\t\t\t\t\t//\t\t\t}\n\t\t\t\t\t\t\t//\t\t]\n\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t.map(function (val) {\n\t\t\t\t\t\t\t\treturn val ? val.value || val : val;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t// Flatten the array.\n\t\t\t\t\t\t\t.reduce(function (prev, next) {\n\t\t\t\t\t\t\t\treturn prev.concat(next);\n\t\t\t\t\t\t\t}, [])\n\t\t\t\t\t\t\t// Convert into string.\n\t\t\t\t\t\t\t.reduce(arrayValueReducer, '');\n\n\t\t\t\t\t\t\tif (!isFalsy(attrValue)) {\n\t\t\t\t\t\t\t\tnode.setAttributeNS(attrNs, attrName, attrValue);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Renders `style` attribute of an `HTMLElement` based on {@link module:ui/template~Template#attributes}.\n   *\n   * Style attribute is an {Object} with static values:\n   *\n   *\t\tattributes: {\n   *\t\t\tstyle: {\n   *\t\t\t\tcolor: 'red'\n   *\t\t\t}\n   *\t\t}\n   *\n   * or values bound to {@link module:ui/model~Model} properties:\n   *\n   *\t\tattributes: {\n   *\t\t\tstyle: {\n   *\t\t\t\tcolor: bind.to( ... )\n   *\t\t\t}\n   *\t\t}\n   *\n   * Note: `style` attribute is rendered without setting the namespace. It does not seem to be\n   * needed.\n   *\n   * @private\n   * @param {Object} styles Styles located in `attributes.style` of {@link module:ui/template~TemplateDefinition}.\n   * @param {module:ui/template~RenderData} data Rendering data.\n   */\n\n\t}, {\n\t\tkey: '_renderStyleAttribute',\n\t\tvalue: function _renderStyleAttribute(styles, data) {\n\t\t\tvar node = data.node;\n\n\t\t\tfor (var styleName in styles) {\n\t\t\t\tvar styleValue = styles[styleName];\n\n\t\t\t\t// Cases:\n\t\t\t\t//\n\t\t\t\t//\t\tstyle: {\n\t\t\t\t//\t\t\tcolor: bind.to( 'attribute' )\n\t\t\t\t//\t\t}\n\t\t\t\t//\n\t\t\t\tif (hasTemplateBinding(styleValue)) {\n\t\t\t\t\tthis._bindToObservable({\n\t\t\t\t\t\tschema: [styleValue],\n\t\t\t\t\t\tupdater: getStyleUpdater(node, styleName),\n\t\t\t\t\t\tdata: data\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Cases:\n\t\t\t\t//\n\t\t\t\t//\t\tstyle: {\n\t\t\t\t//\t\t\tcolor: 'red'\n\t\t\t\t//\t\t}\n\t\t\t\t//\n\t\t\t\telse {\n\t\t\t\t\t\tnode.style[styleName] = styleValue;\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Recursively renders `HTMLElement` children from {@link module:ui/template~Template#children}.\n   *\n   * @protected\n   * @param {module:ui/template~RenderData} data Rendering data.\n   */\n\n\t}, {\n\t\tkey: '_renderElementChildren',\n\t\tvalue: function _renderElementChildren(data) {\n\t\t\tvar node = data.node;\n\t\t\tvar container = data.intoFragment ? document.createDocumentFragment() : node;\n\t\t\tvar isApplying = data.isApplying;\n\t\t\tvar childIndex = 0;\n\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = this.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar child = _step.value;\n\n\t\t\t\t\tif (isViewCollection(child)) {\n\t\t\t\t\t\tif (!isApplying) {\n\t\t\t\t\t\t\tchild.setParent(node);\n\n\t\t\t\t\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\t\t\t\t\tvar _didIteratorError2 = false;\n\t\t\t\t\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tfor (var _iterator2 = child[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\t\t\t\t\tvar view = _step2.value;\n\n\t\t\t\t\t\t\t\t\tcontainer.appendChild(view.element);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t\t\t\t\t_iteratorError2 = err;\n\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (isView(child)) {\n\t\t\t\t\t\tif (!isApplying) {\n\t\t\t\t\t\t\tcontainer.appendChild(child.element);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (isApplying) {\n\t\t\t\t\t\t\tvar revertData = data.revertData;\n\t\t\t\t\t\t\tvar childRevertData = getEmptyRevertData();\n\n\t\t\t\t\t\t\trevertData.children.push(childRevertData);\n\n\t\t\t\t\t\t\tchild._renderNode({\n\t\t\t\t\t\t\t\tnode: container.childNodes[childIndex++],\n\t\t\t\t\t\t\t\tisApplying: true,\n\t\t\t\t\t\t\t\trevertData: childRevertData\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontainer.appendChild(child.render());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (data.intoFragment) {\n\t\t\t\tnode.appendChild(container);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Activates `on` listeners in the {@link module:ui/template~TemplateDefinition}\n   * on a passed `HTMLElement`.\n   *\n   * @protected\n   * @param {module:ui/template~RenderData} data Rendering data.\n   */\n\n\t}, {\n\t\tkey: '_setUpListeners',\n\t\tvalue: function _setUpListeners(data) {\n\t\t\tvar _this = this;\n\n\t\t\tif (!this.eventListeners) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar _loop = function _loop(key) {\n\t\t\t\tvar revertBindings = _this.eventListeners[key].map(function (schemaItem) {\n\t\t\t\t\tvar _key$split = key.split('@'),\n\t\t\t\t\t    _key$split2 = _slicedToArray(_key$split, 2),\n\t\t\t\t\t    domEvtName = _key$split2[0],\n\t\t\t\t\t    domSelector = _key$split2[1];\n\n\t\t\t\t\treturn schemaItem.activateDomEventListener(domEvtName, domSelector, data);\n\t\t\t\t});\n\n\t\t\t\tif (data.revertData) {\n\t\t\t\t\tdata.revertData.bindings.push(revertBindings);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfor (var key in this.eventListeners) {\n\t\t\t\t_loop(key);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * For given {@link module:ui/template~TemplateValueSchema} containing {@link module:ui/template~TemplateBinding} it activates the\n   * binding and sets its initial value.\n   *\n   * Note: {@link module:ui/template~TemplateValueSchema} can be for HTMLElement attributes or Text Node `textContent`.\n   *\n   * @protected\n   * @param {Object} options Binding options.\n   * @param {module:ui/template~TemplateValueSchema} options.schema\n   * @param {Function} options.updater A function which updates DOM (like attribute or text).\n   * @param {module:ui/template~RenderData} options.data Rendering data.\n   */\n\n\t}, {\n\t\tkey: '_bindToObservable',\n\t\tvalue: function _bindToObservable(_ref) {\n\t\t\tvar schema = _ref.schema,\n\t\t\t    updater = _ref.updater,\n\t\t\t    data = _ref.data;\n\n\t\t\tvar revertData = data.revertData;\n\n\t\t\t// Set initial values.\n\t\t\tsyncValueSchemaValue(schema, updater, data);\n\n\t\t\tvar revertBindings = schema\n\t\t\t// Filter \"falsy\" (false, undefined, null, '') value schema components out.\n\t\t\t.filter(function (item) {\n\t\t\t\treturn !isFalsy(item);\n\t\t\t})\n\t\t\t// Filter inactive bindings from schema, like static strings ('foo'), numbers (42), etc.\n\t\t\t.filter(function (item) {\n\t\t\t\treturn item.observable;\n\t\t\t})\n\t\t\t// Once only the actual binding are left, let the emitter listen to observable change:attribute event.\n\t\t\t// TODO: Reduce the number of listeners attached as many bindings may listen\n\t\t\t// to the same observable attribute.\n\t\t\t.map(function (templateBinding) {\n\t\t\t\treturn templateBinding.activateAttributeListener(schema, updater, data);\n\t\t\t});\n\n\t\t\tif (revertData) {\n\t\t\t\trevertData.bindings.push(revertBindings);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Reverts {@link module:ui/template~RenderData#revertData template data} from a node to\n   * return it to the the original state.\n   *\n   * @protected\n   * @param {HTMLElement|Text} node A node to be reverted.\n   * @param {module:ui/template~RenderData#revertData} revertData Stores information about\n   * what changes have been made by {@link #apply} to the node.\n   */\n\n\t}, {\n\t\tkey: '_revertTemplateFromNode',\n\t\tvalue: function _revertTemplateFromNode(node, revertData) {\n\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\tvar _didIteratorError3 = false;\n\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator3 = revertData.bindings[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\tvar binding = _step3.value;\n\n\t\t\t\t\t// Each binding may consist of several observable+observable#attribute.\n\t\t\t\t\t// like the following has 2:\n\t\t\t\t\t//\n\t\t\t\t\t//\t\tclass: [\n\t\t\t\t\t//\t\t\t'x',\n\t\t\t\t\t//\t\t\tbind.to( 'foo' ),\n\t\t\t\t\t//\t\t\t'y',\n\t\t\t\t\t//\t\t\tbind.to( 'bar' )\n\t\t\t\t\t//\t\t]\n\t\t\t\t\t//\n\t\t\t\t\tvar _iteratorNormalCompletion4 = true;\n\t\t\t\t\tvar _didIteratorError4 = false;\n\t\t\t\t\tvar _iteratorError4 = undefined;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (var _iterator4 = binding[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\t\t\t\t\tvar revertBinding = _step4.value;\n\n\t\t\t\t\t\t\trevertBinding();\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t_didIteratorError4 = true;\n\t\t\t\t\t\t_iteratorError4 = err;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t\t\t\t\t_iterator4.return();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (_didIteratorError4) {\n\t\t\t\t\t\t\t\tthrow _iteratorError4;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t_iteratorError3 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (revertData.text) {\n\t\t\t\tnode.textContent = revertData.text;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var attrName in revertData.attributes) {\n\t\t\t\tvar attrValue = revertData.attributes[attrName];\n\n\t\t\t\t// When the attribute has **not** been set before #apply().\n\t\t\t\tif (attrValue === null) {\n\t\t\t\t\tnode.removeAttribute(attrName);\n\t\t\t\t} else {\n\t\t\t\t\tnode.setAttribute(attrName, attrValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < revertData.children.length; ++i) {\n\t\t\t\tthis._revertTemplateFromNode(node.childNodes[i], revertData.children[i]);\n\t\t\t}\n\t\t}\n\t}], [{\n\t\tkey: 'bind',\n\t\tvalue: function bind(observable, emitter) {\n\t\t\treturn {\n\t\t\t\tto: function to(eventNameOrFunctionOrAttribute, callback) {\n\t\t\t\t\treturn new TemplateToBinding({\n\t\t\t\t\t\teventNameOrFunction: eventNameOrFunctionOrAttribute,\n\t\t\t\t\t\tattribute: eventNameOrFunctionOrAttribute,\n\t\t\t\t\t\tobservable: observable, emitter: emitter, callback: callback\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tif: function _if(attribute, valueIfTrue, callback) {\n\t\t\t\t\treturn new TemplateIfBinding({\n\t\t\t\t\t\tobservable: observable, emitter: emitter, attribute: attribute, valueIfTrue: valueIfTrue, callback: callback\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t/**\n   * Extends {@link module:ui/template~Template} instance with additional content from {@link module:ui/template~TemplateDefinition}.\n   *\n   *\t\tconst bind = Template.bind( observable, emitterInstance );\n   *\t\tconst instance = new Template( {\n   *\t\t\ttag: 'p',\n   *\t\t\tattributes: {\n   *\t\t\t\tclass: 'a',\n   *\t\t\t\tdata-x: bind.to( 'foo' )\n   *\t\t\t},\n   *\t\t\tchildren: [\n   *\t\t\t\t{\n   *\t\t\t\t\ttag: 'span',\n   *\t\t\t\t\tattributes: {\n   *\t\t\t\t\t\tclass: 'b'\n   *\t\t\t\t\t},\n   *\t\t\t\t\tchildren: [\n   *\t\t\t\t\t\t'Span'\n   *\t\t\t\t\t]\n   *\t\t\t\t}\n   *\t\t\t]\n   *\t\t } );\n   *\n   *\t\t// Instance-level extension.\n   *\t\tTemplate.extend( instance, {\n   *\t\t\tattributes: {\n   *\t\t\t\tclass: 'b',\n   *\t\t\t\tdata-x: bind.to( 'bar' )\n   *\t\t\t},\n   *\t\t\tchildren: [\n   *\t\t\t\t{\n   *\t\t\t\t\tattributes: {\n   *\t\t\t\t\t\tclass: 'c'\n   *\t\t\t\t\t}\n   *\t\t\t\t}\n   *\t\t\t]\n   *\t\t} );\n   *\n   *\t\t// Child extension.\n   *\t\tTemplate.extend( instance.children.get( 0 ), {\n   *\t\t\tattributes: {\n   *\t\t\t\tclass: 'd'\n   *\t\t\t}\n   *\t\t} );\n   *\n   * the `instance.render().outerHTML` is\n   *\n   *\t\t<p class=\"a b\" data-x=\"{ observable.foo } { observable.bar }\">\n   *\t\t\t<span class=\"b c d\">Span</span>\n   *\t\t</p>\n   *\n   * @param {module:ui/template~Template} template Existing Template instance to be extended.\n   * @param {module:ui/template~TemplateDefinition} def An extension to existing an template instance.\n   */\n\n\t}, {\n\t\tkey: 'extend',\n\t\tvalue: function extend(template, def) {\n\t\t\tif (template._isRendered) {\n\t\t\t\t/**\n     * Extending a template after rendering may not work as expected. To make sure\n     * the {@link #extend extending} works for the rendered element, perform it\n     * before {@link #render} is called.\n     *\n     * @error template-extend-render\n     */\n\t\t\t\t_log2.default.warn('template-extend-render: Attempting to extend a template which has already been rendered.');\n\t\t\t}\n\n\t\t\textendTemplate(template, normalize(clone(def)));\n\t\t}\n\t}]);\n\n\treturn Template;\n}();\n\nexports.default = Template;\n\n\n(0, _mix2.default)(Template, _emittermixin2.default);\n\n/**\n * Describes a binding created by {@link module:ui/template~Template.bind} interface.\n *\n * @protected\n */\n\nvar TemplateBinding = exports.TemplateBinding = function () {\n\t/**\n  * Creates an instance of the {@link module:ui/template~TemplateBinding} class.\n  *\n  * @param {module:ui/template~TemplateDefinition} def The definition of the binding.\n  */\n\tfunction TemplateBinding(def) {\n\t\t_classCallCheck(this, TemplateBinding);\n\n\t\tObject.assign(this, def);\n\n\t\t/**\n   * An observable instance of the binding. It provides the attribute\n   * with the value or passes the event when a corresponding DOM event is fired.\n   *\n   * @member {module:utils/observablemixin~ObservableMixin} module:ui/template~TemplateBinding#observable\n   */\n\n\t\t/**\n   * An {@link module:utils/emittermixin~EmitterMixin} instance used by the binding\n   * to (either):\n   *\n   * * listen to the attribute change in the {@link module:ui/template~TemplateBinding#observable},\n   * * listen to the event in the DOM.\n   *\n   * @member {module:utils/emittermixin~EmitterMixin} module:ui/template~TemplateBinding#emitter\n   */\n\n\t\t/**\n   * The name of the attribute of {@link module:ui/template~TemplateBinding#observable} which is observed.\n   *\n   * @member {String} module:ui/template~TemplateBinding#attribute\n   */\n\n\t\t/**\n   * A custom function to process the value of {@link module:ui/template~TemplateBinding#attribute}.\n   *\n   * @member {Function} [module:ui/template~TemplateBinding#callback]\n   */\n\t}\n\n\t/**\n  * Returns the value of the binding, which is the value of {@link module:ui/template~TemplateBinding#attribute} in\n  * {@link module:ui/template~TemplateBinding#observable}.\n  *\n  * @param {Node} [node] A native DOM node, passed to the custom {@link module:ui/template~TemplateBinding#callback}.\n  * @returns {*} The value of {@link module:ui/template~TemplateBinding#attribute} in\n  * {@link module:ui/template~TemplateBinding#observable}.\n  */\n\n\n\t_createClass(TemplateBinding, [{\n\t\tkey: 'getValue',\n\t\tvalue: function getValue(node) {\n\t\t\tvar value = this.observable[this.attribute];\n\n\t\t\treturn this.callback ? this.callback(value, node) : value;\n\t\t}\n\n\t\t/**\n   * Activates the listener for the changes of {@link module:ui/template~TemplateBinding#attribute} in\n   * {@link module:ui/template~TemplateBinding#observable}, which then updates the DOM with the aggregated\n   * value of {@link module:ui/template~TemplateValueSchema}.\n   *\n   * For instance, the `class` attribute of the `Template` element can be be bound to\n   * the observable `foo` attribute in `ObservableMixin` instance.\n   *\n   * @param {module:ui/template~TemplateValueSchema} schema A full schema to generate an attribute or text in DOM.\n   * @param {Function} updater A DOM updater function used to update native DOM attribute or text.\n   * @param {module:ui/template~RenderData} data Rendering data.\n   * @returns {Function} A function to sever the listener binding.\n   */\n\n\t}, {\n\t\tkey: 'activateAttributeListener',\n\t\tvalue: function activateAttributeListener(schema, updater, data) {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar callback = function callback() {\n\t\t\t\treturn syncValueSchemaValue(schema, updater, data);\n\t\t\t};\n\n\t\t\tthis.emitter.listenTo(this.observable, 'change:' + this.attribute, callback);\n\n\t\t\t// Allows revert of the listener.\n\t\t\treturn function () {\n\t\t\t\t_this2.emitter.stopListening(_this2.observable, 'change:' + _this2.attribute, callback);\n\t\t\t};\n\t\t}\n\t}]);\n\n\treturn TemplateBinding;\n}();\n\n/**\n * Describes either:\n *\n * * a binding to {@link module:utils/observablemixin~ObservableMixin}\n * * or a native DOM event binding\n *\n * created by {@link module:ui/template~BindChain#to} method.\n *\n * @protected\n */\n\n\nvar TemplateToBinding = exports.TemplateToBinding = function (_TemplateBinding) {\n\t_inherits(TemplateToBinding, _TemplateBinding);\n\n\tfunction TemplateToBinding() {\n\t\t_classCallCheck(this, TemplateToBinding);\n\n\t\treturn _possibleConstructorReturn(this, (TemplateToBinding.__proto__ || Object.getPrototypeOf(TemplateToBinding)).apply(this, arguments));\n\t}\n\n\t_createClass(TemplateToBinding, [{\n\t\tkey: 'activateDomEventListener',\n\n\t\t/**\n   * Activates the listener for the native DOM event, which when fired, is propagated by\n   * the {@link module:ui/template~TemplateBinding#emitter}.\n   *\n   * @param {String} domEvtName A name of the native DOM event.\n   * @param {String} domSelector A selector in DOM to filter delegated events.\n   * @param {module:ui/template~RenderData} data Rendering data.\n   * @returns {Function} A function to sever the listener binding.\n   */\n\t\tvalue: function activateDomEventListener(domEvtName, domSelector, data) {\n\t\t\tvar _this4 = this;\n\n\t\t\tvar callback = function callback(evt, domEvt) {\n\t\t\t\tif (!domSelector || domEvt.target.matches(domSelector)) {\n\t\t\t\t\tif (typeof _this4.eventNameOrFunction == 'function') {\n\t\t\t\t\t\t_this4.eventNameOrFunction(domEvt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_this4.observable.fire(_this4.eventNameOrFunction, domEvt);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.emitter.listenTo(data.node, domEvtName, callback);\n\n\t\t\t// Allows revert of the listener.\n\t\t\treturn function () {\n\t\t\t\t_this4.emitter.stopListening(data.node, domEvtName, callback);\n\t\t\t};\n\t\t}\n\t}]);\n\n\treturn TemplateToBinding;\n}(TemplateBinding);\n\n/**\n * Describes a binding to {@link module:utils/observablemixin~ObservableMixin} created by {@link module:ui/template~BindChain#if}\n * method.\n *\n * @protected\n */\n\n\nvar TemplateIfBinding = exports.TemplateIfBinding = function (_TemplateBinding2) {\n\t_inherits(TemplateIfBinding, _TemplateBinding2);\n\n\tfunction TemplateIfBinding() {\n\t\t_classCallCheck(this, TemplateIfBinding);\n\n\t\treturn _possibleConstructorReturn(this, (TemplateIfBinding.__proto__ || Object.getPrototypeOf(TemplateIfBinding)).apply(this, arguments));\n\t}\n\n\t_createClass(TemplateIfBinding, [{\n\t\tkey: 'getValue',\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tvalue: function getValue(node) {\n\t\t\tvar value = _get(TemplateIfBinding.prototype.__proto__ || Object.getPrototypeOf(TemplateIfBinding.prototype), 'getValue', this).call(this, node);\n\n\t\t\treturn isFalsy(value) ? false : this.valueIfTrue || true;\n\t\t}\n\n\t\t/**\n   * The value of the DOM attribute/text to be set if the {@link module:ui/template~TemplateBinding#attribute} in\n   * {@link module:ui/template~TemplateBinding#observable} is `true`.\n   *\n   * @member {String} [module:ui/template~TemplateIfBinding#valueIfTrue]\n   */\n\n\t}]);\n\n\treturn TemplateIfBinding;\n}(TemplateBinding);\n\n// Checks whether given {@link module:ui/template~TemplateValueSchema} contains a\n// {@link module:ui/template~TemplateBinding}.\n//\n// @param {module:ui/template~TemplateValueSchema} schema\n// @returns {Boolean}\n\n\nfunction hasTemplateBinding(schema) {\n\tif (!schema) {\n\t\treturn false;\n\t}\n\n\t// Normalize attributes with additional data like namespace:\n\t//\n\t//\t\tclass: {\n\t//\t\t\tns: 'abc',\n\t//\t\t\tvalue: [ ... ]\n\t//\t\t}\n\t//\n\tif (schema.value) {\n\t\tschema = schema.value;\n\t}\n\n\tif (Array.isArray(schema)) {\n\t\treturn schema.some(hasTemplateBinding);\n\t} else if (schema instanceof TemplateBinding) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n// Assembles the value using {@link module:ui/template~TemplateValueSchema} and stores it in a form of\n// an Array. Each entry of an Array corresponds to one of {@link module:ui/template~TemplateValueSchema}\n// items.\n//\n// @param {module:ui/template~TemplateValueSchema} schema\n// @param {Node} node DOM Node updated when {@link module:utils/observablemixin~ObservableMixin} changes.\n// @return {Array}\nfunction getValueSchemaValue(schema, node) {\n\treturn schema.map(function (schemaItem) {\n\t\t// Process {@link module:ui/template~TemplateBinding} bindings.\n\t\tif (schemaItem instanceof TemplateBinding) {\n\t\t\treturn schemaItem.getValue(node);\n\t\t}\n\n\t\t// All static values like strings, numbers, and \"falsy\" values (false, null, undefined, '', etc.) just pass.\n\t\treturn schemaItem;\n\t});\n}\n\n// A function executed each time bound Observable attribute changes, which updates DOM with a value\n// constructed from {@link module:ui/template~TemplateValueSchema}.\n//\n// @param {module:ui/template~TemplateValueSchema} schema\n// @param {Function} updater A function which updates DOM (like attribute or text).\n// @param {Node} node DOM Node updated when {@link module:utils/observablemixin~ObservableMixin} changes.\nfunction syncValueSchemaValue(schema, updater, _ref2) {\n\tvar node = _ref2.node;\n\n\tvar value = getValueSchemaValue(schema, node);\n\n\t// Check if schema is a single Template.bind.if, like:\n\t//\n\t//\t\tclass: Template.bind.if( 'foo' )\n\t//\n\tif (schema.length == 1 && schema[0] instanceof TemplateIfBinding) {\n\t\tvalue = value[0];\n\t} else {\n\t\tvalue = value.reduce(arrayValueReducer, '');\n\t}\n\n\tif (isFalsy(value)) {\n\t\tupdater.remove();\n\t} else {\n\t\tupdater.set(value);\n\t}\n}\n\n// Returns an object consisting of `set` and `remove` functions, which\n// can be used in the context of DOM Node to set or reset `textContent`.\n// @see module:ui/view~View#_bindToObservable\n//\n// @param {Node} node DOM Node to be modified.\n// @returns {Object}\nfunction getTextUpdater(node) {\n\treturn {\n\t\tset: function set(value) {\n\t\t\tnode.textContent = value;\n\t\t},\n\t\tremove: function remove() {\n\t\t\tnode.textContent = '';\n\t\t}\n\t};\n}\n\n// Returns an object consisting of `set` and `remove` functions, which\n// can be used in the context of DOM Node to set or reset an attribute.\n// @see module:ui/view~View#_bindToObservable\n//\n// @param {Node} node DOM Node to be modified.\n// @param {String} attrName Name of the attribute to be modified.\n// @param {String} [ns=null] Namespace to use.\n// @returns {Object}\nfunction getAttributeUpdater(el, attrName, ns) {\n\treturn {\n\t\tset: function set(value) {\n\t\t\tel.setAttributeNS(ns, attrName, value);\n\t\t},\n\t\tremove: function remove() {\n\t\t\tel.removeAttributeNS(ns, attrName);\n\t\t}\n\t};\n}\n\n// Returns an object consisting of `set` and `remove` functions, which\n// can be used in the context of CSSStyleDeclaration to set or remove a style.\n// @see module:ui/view~View#_bindToObservable\n//\n// @param {Node} node DOM Node to be modified.\n// @param {String} styleName Name of the style to be modified.\n// @returns {Object}\nfunction getStyleUpdater(el, styleName) {\n\treturn {\n\t\tset: function set(value) {\n\t\t\tel.style[styleName] = value;\n\t\t},\n\t\tremove: function remove() {\n\t\t\tel.style[styleName] = null;\n\t\t}\n\t};\n}\n\n// Clones definition of the template.\n//\n// @param {module:ui/template~TemplateDefinition} def\n// @returns {module:ui/template~TemplateDefinition}\nfunction clone(def) {\n\tvar clone = (0, _cloneDeepWith2.default)(def, function (value) {\n\t\t// Don't clone the `Template.bind`* bindings because of the references to Observable\n\t\t// and DomEmitterMixin instances inside, which would also be traversed and cloned by greedy\n\t\t// cloneDeepWith algorithm. There's no point in cloning Observable/DomEmitterMixins\n\t\t// along with the definition.\n\t\t//\n\t\t// Don't clone Template instances if provided as a child. They're simply #render()ed\n\t\t// and nothing should interfere.\n\t\t//\n\t\t// Also don't clone View instances if provided as a child of the Template. The template\n\t\t// instance will be extracted from the View during the normalization and there's no need\n\t\t// to clone it.\n\t\tif (value && (value instanceof TemplateBinding || isTemplate(value) || isView(value) || isViewCollection(value))) {\n\t\t\treturn value;\n\t\t}\n\t});\n\n\treturn clone;\n}\n\n// Normalizes given {@link module:ui/template~TemplateDefinition}.\n//\n// See:\n//  * {@link normalizeAttributes}\n//  * {@link normalizeListeners}\n//  * {@link normalizePlainTextDefinition}\n//  * {@link normalizeTextDefinition}\n//\n// @param {module:ui/template~TemplateDefinition} def\n// @returns {module:ui/template~TemplateDefinition} Normalized definition.\nfunction normalize(def) {\n\tif (typeof def == 'string') {\n\t\tdef = normalizePlainTextDefinition(def);\n\t} else if (def.text) {\n\t\tnormalizeTextDefinition(def);\n\t}\n\n\tif (def.on) {\n\t\tdef.eventListeners = normalizeListeners(def.on);\n\n\t\t// Template mixes EmitterMixin, so delete #on to avoid collision.\n\t\tdelete def.on;\n\t}\n\n\tif (!def.text) {\n\t\tif (def.attributes) {\n\t\t\tnormalizeAttributes(def.attributes);\n\t\t}\n\n\t\tvar children = new _collection2.default();\n\n\t\tif (def.children) {\n\t\t\tif (isViewCollection(def.children)) {\n\t\t\t\tchildren.add(def.children);\n\t\t\t} else {\n\t\t\t\tvar _iteratorNormalCompletion5 = true;\n\t\t\t\tvar _didIteratorError5 = false;\n\t\t\t\tvar _iteratorError5 = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator5 = def.children[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t\t\t\t\t\tvar child = _step5.value;\n\n\t\t\t\t\t\tif (isTemplate(child) || isView(child)) {\n\t\t\t\t\t\t\tchildren.add(child);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tchildren.add(new Template(child));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError5 = true;\n\t\t\t\t\t_iteratorError5 = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t\t\t\t\t\t\t_iterator5.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError5) {\n\t\t\t\t\t\t\tthrow _iteratorError5;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdef.children = children;\n\t}\n\n\treturn def;\n}\n\n// Normalizes \"attributes\" section of {@link module:ui/template~TemplateDefinition}.\n//\n//\t\tattributes: {\n//\t\t\ta: 'bar',\n//\t\t\tb: {@link module:ui/template~TemplateBinding},\n//\t\t\tc: {\n//\t\t\t\tvalue: 'bar'\n//\t\t\t}\n//\t\t}\n//\n// becomes\n//\n//\t\tattributes: {\n//\t\t\ta: [ 'bar' ],\n//\t\t\tb: [ {@link module:ui/template~TemplateBinding} ],\n//\t\t\tc: {\n//\t\t\t\tvalue: [ 'bar' ]\n//\t\t\t}\n//\t\t}\n//\n// @param {Object} attrs\nfunction normalizeAttributes(attrs) {\n\tfor (var a in attrs) {\n\t\tif (attrs[a].value) {\n\t\t\tattrs[a].value = [].concat(attrs[a].value);\n\t\t}\n\n\t\tarrayify(attrs, a);\n\t}\n}\n\n// Normalizes \"on\" section of {@link module:ui/template~TemplateDefinition}.\n//\n//\t\ton: {\n//\t\t\ta: 'bar',\n//\t\t\tb: {@link module:ui/template~TemplateBinding},\n//\t\t\tc: [ {@link module:ui/template~TemplateBinding}, () => { ... } ]\n//\t\t}\n//\n// becomes\n//\n//\t\ton: {\n//\t\t\ta: [ 'bar' ],\n//\t\t\tb: [ {@link module:ui/template~TemplateBinding} ],\n//\t\t\tc: [ {@link module:ui/template~TemplateBinding}, () => { ... } ]\n//\t\t}\n//\n// @param {Object} listeners\n// @returns {Object} Object containing normalized listeners.\nfunction normalizeListeners(listeners) {\n\tfor (var l in listeners) {\n\t\tarrayify(listeners, l);\n\t}\n\n\treturn listeners;\n}\n\n// Normalizes \"string\" {@link module:ui/template~TemplateDefinition}.\n//\n//\t\t\"foo\"\n//\n// becomes\n//\n//\t\t{ text: [ 'foo' ] },\n//\n// @param {String} def\n// @returns {module:ui/template~TemplateDefinition} Normalized template definition.\nfunction normalizePlainTextDefinition(def) {\n\treturn {\n\t\ttext: [def]\n\t};\n}\n\n// Normalizes text {@link module:ui/template~TemplateDefinition}.\n//\n//\t\tchildren: [\n//\t\t\t{ text: 'def' },\n//\t\t\t{ text: {@link module:ui/template~TemplateBinding} }\n//\t\t]\n//\n// becomes\n//\n//\t\tchildren: [\n//\t\t\t{ text: [ 'def' ] },\n//\t\t\t{ text: [ {@link module:ui/template~TemplateBinding} ] }\n//\t\t]\n//\n// @param {module:ui/template~TemplateDefinition} def\nfunction normalizeTextDefinition(def) {\n\tif (!Array.isArray(def.text)) {\n\t\tdef.text = [def.text];\n\t}\n}\n\n// Wraps an entry in Object in an Array, if not already one.\n//\n//\t\t{\n//\t\t\tx: 'y',\n//\t\t\ta: [ 'b' ]\n//\t\t}\n//\n// becomes\n//\n//\t\t{\n//\t\t\tx: [ 'y' ],\n//\t\t\ta: [ 'b' ]\n//\t\t}\n//\n// @param {Object} obj\n// @param {String} key\nfunction arrayify(obj, key) {\n\tif (!Array.isArray(obj[key])) {\n\t\tobj[key] = [obj[key]];\n\t}\n}\n\n// A helper which concatenates the value avoiding unwanted\n// leading white spaces.\n//\n// @param {String} prev\n// @param {String} cur\n// @returns {String}\nfunction arrayValueReducer(prev, cur) {\n\tif (isFalsy(cur)) {\n\t\treturn prev;\n\t} else if (isFalsy(prev)) {\n\t\treturn cur;\n\t} else {\n\t\treturn prev + ' ' + cur;\n\t}\n}\n\n// Extends one object defined in the following format:\n//\n//\t\t{\n//\t\t\tkey1: [Array1],\n//\t\t\tkey2: [Array2],\n//\t\t\t...\n//\t\t\tkeyN: [ArrayN]\n//\t\t}\n//\n// with another object of the same data format.\n//\n// @param {Object} obj Base object.\n// @param {Object} ext Object extending base.\n// @returns {String}\nfunction extendObjectValueArray(obj, ext) {\n\tfor (var a in ext) {\n\t\tif (obj[a]) {\n\t\t\tvar _obj$a;\n\n\t\t\t(_obj$a = obj[a]).push.apply(_obj$a, _toConsumableArray(ext[a]));\n\t\t} else {\n\t\t\tobj[a] = ext[a];\n\t\t}\n\t}\n}\n\n// A helper for {@link module:ui/template~Template#extend}. Recursively extends {@link module:ui/template~Template} instance\n// with content from {module:ui/template~TemplateDefinition}. See {@link module:ui/template~Template#extend} to learn more.\n//\n// @param {module:ui/template~Template} def A template instance to be extended.\n// @param {module:ui/template~TemplateDefinition} def A definition which is to extend the template instance.\nfunction extendTemplate(template, def) {\n\tif (def.attributes) {\n\t\tif (!template.attributes) {\n\t\t\ttemplate.attributes = {};\n\t\t}\n\n\t\textendObjectValueArray(template.attributes, def.attributes);\n\t}\n\n\tif (def.eventListeners) {\n\t\tif (!template.eventListeners) {\n\t\t\ttemplate.eventListeners = {};\n\t\t}\n\n\t\textendObjectValueArray(template.eventListeners, def.eventListeners);\n\t}\n\n\tif (def.text) {\n\t\tvar _template$text;\n\n\t\t(_template$text = template.text).push.apply(_template$text, _toConsumableArray(def.text));\n\t}\n\n\tif (def.children && def.children.length) {\n\t\tif (template.children.length != def.children.length) {\n\t\t\t/**\n    * The number of children in extended definition does not match.\n    *\n    * @error ui-template-extend-children-mismatch\n    */\n\t\t\tthrow new _ckeditorerror2.default('ui-template-extend-children-mismatch: The number of children in extended definition does not match.');\n\t\t}\n\n\t\tvar childIndex = 0;\n\n\t\tvar _iteratorNormalCompletion6 = true;\n\t\tvar _didIteratorError6 = false;\n\t\tvar _iteratorError6 = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator6 = def.children[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t\t\t\tvar childDef = _step6.value;\n\n\t\t\t\textendTemplate(template.children.get(childIndex++), childDef);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t_didIteratorError6 = true;\n\t\t\t_iteratorError6 = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion6 && _iterator6.return) {\n\t\t\t\t\t_iterator6.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError6) {\n\t\t\t\t\tthrow _iteratorError6;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Checks if value is \"falsy\".\n// Note: 0 (Number) is not \"falsy\" in this context.\n//\n// @private\n// @param {*} value Value to be checked.\nfunction isFalsy(value) {\n\treturn !value && value !== 0;\n}\n\n// Checks if the item is an instance of {@link module:ui/view~View}\n//\n// @private\n// @param {*} value Value to be checked.\nfunction isView(item) {\n\treturn item instanceof _view2.default;\n}\n\n// Checks if the item is an instance of {@link module:ui/template~Template}\n//\n// @private\n// @param {*} value Value to be checked.\nfunction isTemplate(item) {\n\treturn item instanceof Template;\n}\n\n// Checks if the item is an instance of {@link module:ui/viewcollection~ViewCollection}\n//\n// @private\n// @param {*} value Value to be checked.\nfunction isViewCollection(item) {\n\treturn item instanceof _viewcollection2.default;\n}\n\n// Creates an empty skeleton for {@link module:ui/template~Template#revert}\n// data.\n//\n// @private\nfunction getEmptyRevertData() {\n\treturn {\n\t\tchildren: [],\n\t\tbindings: [],\n\t\tattributes: {}\n\t};\n}\n\n// Checks whether an attribute should be extended when\n// {@link module:ui/template~Template#apply} is called.\n//\n// @private\n// @param {String} attrName Attribute name to check.\nfunction shouldExtend(attrName) {\n\treturn attrName == 'class' || attrName == 'style';\n}\n\n/**\n * A definition of {@link module:ui/template~Template}.\n * See: {@link module:ui/template~TemplateValueSchema}.\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tchildren: [\n *\t\t\t\t{\n *\t\t\t\t\ttag: 'span',\n *\t\t\t\t\tattributes: { ... },\n *\t\t\t\t\tchildren: [ ... ],\n *\t\t\t\t\t...\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\ttext: 'static–text'\n *\t\t\t\t},\n *\t\t\t\t'also-static–text',\n *\t\t\t\t<{@link module:ui/view~View} instance>\n *\t\t\t\t<{@link module:ui/template~Template} instance>\n *\t\t\t\t...\n *\t\t\t],\n *\t\t\tattributes: {\n *\t\t\t\tclass: {@link module:ui/template~TemplateValueSchema},\n *\t\t\t\tid: {@link module:ui/template~TemplateValueSchema},\n *\t\t\t\tstyle: {@link module:ui/template~TemplateValueSchema}\n *\t\t\t\t...\n *\t\t\t},\n *\t\t\ton: {\n *\t\t\t\t'click': {@link module:ui/template~TemplateListenerSchema}\n *\t\t\t\t'keyup@.some-class': {@link module:ui/template~TemplateListenerSchema},\n *\t\t\t\t...\n *\t\t\t}\n *\t\t} );\n *\n *\t\t// An entire view collection can be used as a child in the definition.\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tchildren: <{@link module:ui/viewcollection~ViewCollection} instance>\n *\t\t} );\n *\n * @typedef module:ui/template~TemplateDefinition\n * @type Object\n * @property {String} tag\n * @property {Array.<module:ui/template~TemplateDefinition>} [children]\n * @property {Object.<String,module:ui/template~TemplateValueSchema>} [attributes]\n * @property {String|module:ui/template~TemplateValueSchema|Array.<String|module:ui/template~TemplateValueSchema>} [text]\n * @property {Object.<String,module:ui/template~TemplateListenerSchema>} [on]\n */\n\n/**\n * Describes a value of HTMLElement attribute or `textContent`. See:\n *  * {@link module:ui/template~TemplateDefinition},\n *  * {@link module:ui/template~Template.bind},\n *\n *\t\tconst bind = Template.bind( observableInstance, emitterInstance );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tattributes: {\n *\t\t\t\t// Plain String schema.\n *\t\t\t\tclass: 'static-text'\n *\n *\t\t\t\t// Object schema, an `ObservableMixin` binding.\n *\t\t\t\tclass: bind.to( 'foo' )\n *\n *\t\t\t\t// Array schema, combines the above.\n *\t\t\t\tclass: [\n *\t\t\t\t\t'static-text',\n *\t\t\t\t\tbind.to( 'bar', () => { ... } )\n *\t\t\t\t],\n *\n *\t\t\t\t// Array schema, with custom namespace.\n *\t\t\t\tclass: {\n *\t\t\t\t\tns: 'http://ns.url',\n *\t\t\t\t\tvalue: [\n *\t\t\t\t\t\tbind.if( 'baz', 'value-when-true' )\n *\t\t\t\t\t\t'static-text'\n *\t\t\t\t\t]\n *\t\t\t\t},\n *\n *\t\t\t\t// Object literal schema, specific for styles.\n *\t\t\t\tstyle: {\n *\t\t\t\t\tcolor: 'red',\n *\t\t\t\t\tbackgroundColor: bind.to( 'qux', () => { ... } )\n *\t\t\t\t}\n *\t\t\t}\n *\t\t} );\n *\n * @typedef module:ui/template~TemplateValueSchema\n * @type {Object|String|Array}\n */\n\n/**\n * Describes a listener attached to HTMLElement. See: {@link module:ui/template~TemplateDefinition}.\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\ton: {\n *\t\t\t\t// Plain String schema.\n *\t\t\t\tclick: 'clicked'\n *\n *\t\t\t\t// Object schema, an `ObservableMixin` binding.\n *\t\t\t\tclick: {@link module:ui/template~TemplateBinding}\n *\n *\t\t\t\t// Array schema, combines the above.\n *\t\t\t\tclick: [\n *\t\t\t\t\t'clicked',\n *\t\t\t\t\t{@link module:ui/template~TemplateBinding}\n *\t\t\t\t],\n *\n *\t\t\t\t// Array schema, with custom callback.\n *\t\t\t\t// Note: It will work for \"click\" event on class=\".foo\" children only.\n *\t\t\t\t'click@.foo': {\n *\t\t\t\t\t'clicked',\n *\t\t\t\t\t{@link module:ui/template~TemplateBinding},\n *\t\t\t\t\t() => { ... }\n *\t\t\t\t}\n *\t\t\t}\n *\t\t} );\n *\n * @typedef module:ui/template~TemplateListenerSchema\n * @type {Object|String|Array}\n */\n\n/**\n * The type of {@link ~Template.bind}'s return value.\n *\n * @interface module:ui/template~BindChain\n */\n\n/**\n * Binds {@link module:utils/observablemixin~ObservableMixin} instance to:\n *\n * * HTMLElement attribute or Text Node `textContent` so remains in sync with the Observable when it changes:\n * * HTMLElement DOM event, so the DOM events are propagated through Observable.\n *\n *\t\tconst bind = Template.bind( observableInstance, emitterInstance );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tattributes: {\n *\t\t\t\t// class=\"...\" attribute gets bound to `observableInstance#a`\n *\t\t\t\t'class': bind.to( 'a' )\n *\t\t\t},\n *\t\t\tchildren: [\n *\t\t\t\t// <p>...</p> gets bound to `observableInstance#b`; always `toUpperCase()`.\n *\t\t\t\t{ text: bind.to( 'b', ( value, node ) => value.toUpperCase() ) }\n *\t\t\t],\n *\t\t\ton: {\n *\t\t\t\tclick: [\n *\t\t\t\t\t// \"clicked\" event will be fired on `observableInstance` when \"click\" fires in DOM.\n *\t\t\t\t\tbind.to( 'clicked' ),\n *\n *\t\t\t\t\t// A custom callback function will be executed when \"click\" fires in DOM.\n *\t\t\t\t\tbind.to( () => {\n *\t\t\t\t\t\t...\n *\t\t\t\t\t} )\n *\t\t\t\t]\n *\t\t\t}\n *\t\t} ).render();\n *\n *\t\tconst bind = Template.bind( observableInstance, emitterInstance );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t} ).render();\n *\n * @method #to\n * @param {String|Function} eventNameOrFunctionOrAttribute An attribute name of\n * {@link module:utils/observablemixin~ObservableMixin} or a DOM event name or an event callback.\n * @param {Function} [callback] Allows processing of the value. Accepts `Node` and `value` as arguments.\n * @return {module:ui/template~TemplateBinding}\n */\n\n/**\n * Binds {@link module:utils/observablemixin~ObservableMixin} to HTMLElement attribute or Text Node `textContent`\n * so remains in sync with the Model when it changes. Unlike {@link module:ui/template~BindChain#to},\n * it controls the presence of the attribute/`textContent` depending on the \"falseness\" of\n * {@link module:utils/observablemixin~ObservableMixin} attribute.\n *\n *\t\tconst bind = Template.bind( observableInstance, emitterInstance );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'input',\n *\t\t\tattributes: {\n *\t\t\t\t// <input checked> when `observableInstance#a` is not undefined/null/false/''\n *\t\t\t\t// <input> when `observableInstance#a` is undefined/null/false\n *\t\t\t\tchecked: bind.if( 'a' )\n *\t\t\t},\n *\t\t\tchildren: [\n *\t\t\t\t{\n *\t\t\t\t\t// <input>\"b-is-not-set\"</input> when `observableInstance#b` is undefined/null/false/''\n *\t\t\t\t\t// <input></input> when `observableInstance#b` is not \"falsy\"\n *\t\t\t\t\ttext: bind.if( 'b', 'b-is-not-set', ( value, node ) => !value )\n *\t\t\t\t}\n *\t\t\t]\n *\t\t} ).render();\n *\n * @method #if\n * @param {String} attribute An attribute name of {@link module:utils/observablemixin~ObservableMixin} used in the binding.\n * @param {String} [valueIfTrue] Value set when {@link module:utils/observablemixin~ObservableMixin} attribute is not\n * undefined/null/false/''.\n * @param {Function} [callback] Allows processing of the value. Accepts `Node` and `value` as arguments.\n * @return {module:ui/template~TemplateBinding}\n */\n\n/**\n * The {@link module:ui/template~Template#_renderNode} configuration.\n *\n * @private\n * @interface module:ui/template~RenderData\n */\n\n/**\n * Tells {@link module:ui/template~Template#_renderNode} to render\n * children into `DocumentFragment` first and then append the fragment\n * to the parent element. It's a speed optimization.\n *\n * @member {Boolean} #intoFragment\n */\n\n/**\n * A node which is being rendered.\n *\n * @member {HTMLElement|Text} #node\n */\n\n/**\n * Indicates whether the {@module:ui/template~RenderNodeOptions#node} has\n * been provided by {@module:ui/template~Template#apply}.\n *\n * @member {Boolean} #isApplying\n */\n\n/**\n * An object storing the data that helps {@module:ui/template~Template#revert}\n * bringing back an element to its initial state, i.e. before\n * {@module:ui/template~Template#apply} was called.\n *\n * @member {Object} #revertData\n */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-ui/src/template.js\n// module id = 5\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _node = require('./node');\n\nvar _node2 = _interopRequireDefault(_node);\n\nvar _nodelist = require('./nodelist');\n\nvar _nodelist2 = _interopRequireDefault(_nodelist);\n\nvar _text = require('./text');\n\nvar _text2 = _interopRequireDefault(_text);\n\nvar _isiterable = require('@ckeditor/ckeditor5-utils/src/isiterable');\n\nvar _isiterable2 = _interopRequireDefault(_isiterable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/model/element\n */\n\n/**\n * Model element. Type of {@link module:engine/model/node~Node node} that has a {@link module:engine/model/element~Element#name name} and\n * {@link module:engine/model/element~Element#getChildren child nodes}.\n *\n * **Important**: see {@link module:engine/model/node~Node} to read about restrictions using `Element` and `Node` API.\n */\nvar Element = function (_Node) {\n\t_inherits(Element, _Node);\n\n\t/**\n  * Creates a model element.\n  *\n  * @param {String} name Element's name.\n  * @param {Object} [attrs] Element's attributes. See {@link module:utils/tomap~toMap} for a list of accepted values.\n  * @param {module:engine/model/node~Node|Iterable.<module:engine/model/node~Node>} [children]\n  * One or more nodes to be inserted as children of created element.\n  */\n\tfunction Element(name, attrs, children) {\n\t\t_classCallCheck(this, Element);\n\n\t\t/**\n   * Element name.\n   *\n   * @member {String} module:engine/model/element~Element#name\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (Element.__proto__ || Object.getPrototypeOf(Element)).call(this, attrs));\n\n\t\t_this.name = name;\n\n\t\t/**\n   * List of children nodes.\n   *\n   * @private\n   * @member {module:engine/model/nodelist~NodeList} module:engine/model/element~Element#_children\n   */\n\t\t_this._children = new _nodelist2.default();\n\n\t\tif (children) {\n\t\t\t_this.insertChildren(0, children);\n\t\t}\n\t\treturn _this;\n\t}\n\n\t/**\n  * Number of this element's children.\n  *\n  * @readonly\n  * @type {Number}\n  */\n\n\n\t_createClass(Element, [{\n\t\tkey: 'is',\n\n\n\t\t/**\n   * Checks whether given model tree object is of given type.\n   *\n   *\t\tobj.name; // 'listItem'\n   *\t\tobj instanceof Element; // true\n   *\n   *\t\tobj.is( 'element' ); // true\n   *\t\tobj.is( 'listItem' ); // true\n   *\t\tobj.is( 'element', 'listItem' ); // true\n   *\t\tobj.is( 'text' ); // false\n   *\t\tobj.is( 'element', 'image' ); // false\n   *\n   * Read more in {@link module:engine/model/node~Node#is}.\n   *\n   * @param {String} type Type to check when `name` parameter is present.\n   * Otherwise, it acts like the `name` parameter.\n   * @param {String} [name] Element name.\n   * @returns {Boolean}\n   */\n\t\tvalue: function is(type) {\n\t\t\tvar name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\t\t\tif (!name) {\n\t\t\t\treturn type == 'element' || type == this.name;\n\t\t\t} else {\n\t\t\t\treturn type == 'element' && name == this.name;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Gets the child at the given index.\n   *\n   * @param {Number} index Index of child.\n   * @returns {module:engine/model/node~Node} Child node.\n   */\n\n\t}, {\n\t\tkey: 'getChild',\n\t\tvalue: function getChild(index) {\n\t\t\treturn this._children.getNode(index);\n\t\t}\n\n\t\t/**\n   * Returns an iterator that iterates over all of this element's children.\n   *\n   * @returns {Iterable.<module:engine/model/node~Node>}\n   */\n\n\t}, {\n\t\tkey: 'getChildren',\n\t\tvalue: function getChildren() {\n\t\t\treturn this._children[Symbol.iterator]();\n\t\t}\n\n\t\t/**\n   * Returns an index of the given child node. Returns `null` if given node is not a child of this element.\n   *\n   * @param {module:engine/model/node~Node} node Child node to look for.\n   * @returns {Number} Child node's index in this element.\n   */\n\n\t}, {\n\t\tkey: 'getChildIndex',\n\t\tvalue: function getChildIndex(node) {\n\t\t\treturn this._children.getNodeIndex(node);\n\t\t}\n\n\t\t/**\n   * Returns the starting offset of given child. Starting offset is equal to the sum of\n   * {module:engine/model/node~Node#offsetSize offset sizes} of all node's siblings that are before it. Returns `null` if\n   * given node is not a child of this element.\n   *\n   * @param {module:engine/model/node~Node} node Child node to look for.\n   * @returns {Number} Child node's starting offset.\n   */\n\n\t}, {\n\t\tkey: 'getChildStartOffset',\n\t\tvalue: function getChildStartOffset(node) {\n\t\t\treturn this._children.getNodeStartOffset(node);\n\t\t}\n\n\t\t/**\n   * Creates a copy of this element and returns it. Created element has the same name and attributes as the original element.\n   * If clone is deep, the original element's children are also cloned. If not, then empty element is removed.\n   *\n   * @param {Boolean} [deep=false] If set to `true` clones element and all its children recursively. When set to `false`,\n   * element will be cloned without any child.\n   */\n\n\t}, {\n\t\tkey: 'clone',\n\t\tvalue: function clone() {\n\t\t\tvar deep = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n\t\t\tvar children = deep ? Array.from(this._children).map(function (node) {\n\t\t\t\treturn node.clone(true);\n\t\t\t}) : null;\n\n\t\t\treturn new Element(this.name, this.getAttributes(), children);\n\t\t}\n\n\t\t/**\n   * Returns index of a node that occupies given offset. If given offset is too low, returns `0`. If given offset is\n   * too high, returns {@link module:engine/model/element~Element#getChildIndex index after last child}.\n   *\n   *\t\tconst textNode = new Text( 'foo' );\n   *\t\tconst pElement = new Element( 'p' );\n   *\t\tconst divElement = new Element( [ textNode, pElement ] );\n   *\t\tdivElement.offsetToIndex( -1 ); // Returns 0, because offset is too low.\n   *\t\tdivElement.offsetToIndex( 0 ); // Returns 0, because offset 0 is taken by `textNode` which is at index 0.\n   *\t\tdivElement.offsetToIndex( 1 ); // Returns 0, because `textNode` has `offsetSize` equal to 3, so it occupies offset 1 too.\n   *\t\tdivElement.offsetToIndex( 2 ); // Returns 0.\n   *\t\tdivElement.offsetToIndex( 3 ); // Returns 1.\n   *\t\tdivElement.offsetToIndex( 4 ); // Returns 2. There are no nodes at offset 4, so last available index is returned.\n   *\n   * @param {Number} offset Offset to look for.\n   * @returns {Number}\n   */\n\n\t}, {\n\t\tkey: 'offsetToIndex',\n\t\tvalue: function offsetToIndex(offset) {\n\t\t\treturn this._children.offsetToIndex(offset);\n\t\t}\n\n\t\t/**\n   * {@link module:engine/model/element~Element#insertChildren Inserts} one or more nodes at the end of this element.\n   *\n   * @param {module:engine/model/node~Node|Iterable.<module:engine/model/node~Node>} nodes Nodes to be inserted.\n   */\n\n\t}, {\n\t\tkey: 'appendChildren',\n\t\tvalue: function appendChildren(nodes) {\n\t\t\tthis.insertChildren(this.childCount, nodes);\n\t\t}\n\n\t\t/**\n   * Inserts one or more nodes at the given index and sets {@link module:engine/model/node~Node#parent parent} of these nodes\n   * to this element.\n   *\n   * @param {Number} index Index at which nodes should be inserted.\n   * @param {module:engine/model/node~Node|Iterable.<module:engine/model/node~Node>} nodes Nodes to be inserted.\n   */\n\n\t}, {\n\t\tkey: 'insertChildren',\n\t\tvalue: function insertChildren(index, nodes) {\n\t\t\tnodes = normalize(nodes);\n\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = nodes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar node = _step.value;\n\n\t\t\t\t\tnode.parent = this;\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._children.insertNodes(index, nodes);\n\t\t}\n\n\t\t/**\n   * Removes one or more nodes starting at the given index and sets\n   * {@link module:engine/model/node~Node#parent parent} of these nodes to `null`.\n   *\n   * @param {Number} index Index of the first node to remove.\n   * @param {Number} [howMany=1] Number of nodes to remove.\n   * @returns {Array.<module:engine/model/node~Node>} Array containing removed nodes.\n   */\n\n\t}, {\n\t\tkey: 'removeChildren',\n\t\tvalue: function removeChildren(index) {\n\t\t\tvar howMany = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n\t\t\tvar nodes = this._children.removeNodes(index, howMany);\n\n\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\tvar _didIteratorError2 = false;\n\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator2 = nodes[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\tvar node = _step2.value;\n\n\t\t\t\t\tnode.parent = null;\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t_iteratorError2 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn nodes;\n\t\t}\n\n\t\t/**\n   * Returns a descendant node by its path relative to this element.\n   *\n   *\t\t// <this>a<b>c</b></this>\n   *\t\tthis.getNodeByPath( [ 0 ] );     // -> \"a\"\n   *\t\tthis.getNodeByPath( [ 1 ] );     // -> <b>\n   *\t\tthis.getNodeByPath( [ 1, 0 ] );  // -> \"c\"\n   *\n   * @param {Array.<Number>} relativePath Path of the node to find, relative to this element.\n   * @returns {module:engine/model/node~Node}\n   */\n\n\t}, {\n\t\tkey: 'getNodeByPath',\n\t\tvalue: function getNodeByPath(relativePath) {\n\t\t\tvar node = this; // eslint-disable-line consistent-this\n\n\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\tvar _didIteratorError3 = false;\n\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator3 = relativePath[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\tvar index = _step3.value;\n\n\t\t\t\t\tnode = node.getChild(node.offsetToIndex(index));\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t_iteratorError3 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn node;\n\t\t}\n\n\t\t/**\n   * Converts `Element` instance to plain object and returns it. Takes care of converting all of this element's children.\n   *\n   * @returns {Object} `Element` instance converted to plain object.\n   */\n\n\t}, {\n\t\tkey: 'toJSON',\n\t\tvalue: function toJSON() {\n\t\t\tvar json = _get(Element.prototype.__proto__ || Object.getPrototypeOf(Element.prototype), 'toJSON', this).call(this);\n\n\t\t\tjson.name = this.name;\n\n\t\t\tif (this._children.length > 0) {\n\t\t\t\tjson.children = [];\n\n\t\t\t\tvar _iteratorNormalCompletion4 = true;\n\t\t\t\tvar _didIteratorError4 = false;\n\t\t\t\tvar _iteratorError4 = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator4 = this._children[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\t\t\t\tvar node = _step4.value;\n\n\t\t\t\t\t\tjson.children.push(node.toJSON());\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError4 = true;\n\t\t\t\t\t_iteratorError4 = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t\t\t\t_iterator4.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError4) {\n\t\t\t\t\t\t\tthrow _iteratorError4;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn json;\n\t\t}\n\n\t\t/**\n   * Creates an `Element` instance from given plain object (i.e. parsed JSON string).\n   * Converts `Element` children to proper nodes.\n   *\n   * @param {Object} json Plain object to be converted to `Element`.\n   * @returns {module:engine/model/element~Element} `Element` instance created using given plain object.\n   */\n\n\t}, {\n\t\tkey: 'childCount',\n\t\tget: function get() {\n\t\t\treturn this._children.length;\n\t\t}\n\n\t\t/**\n   * Sum of {module:engine/model/node~Node#offsetSize offset sizes} of all of this element's children.\n   *\n   * @readonly\n   * @type {Number}\n   */\n\n\t}, {\n\t\tkey: 'maxOffset',\n\t\tget: function get() {\n\t\t\treturn this._children.maxOffset;\n\t\t}\n\n\t\t/**\n   * Is `true` if there are no nodes inside this element, `false` otherwise.\n   *\n   * @readonly\n   * @type {Boolean}\n   */\n\n\t}, {\n\t\tkey: 'isEmpty',\n\t\tget: function get() {\n\t\t\treturn this.childCount === 0;\n\t\t}\n\t}], [{\n\t\tkey: 'fromJSON',\n\t\tvalue: function fromJSON(json) {\n\t\t\tvar children = null;\n\n\t\t\tif (json.children) {\n\t\t\t\tchildren = [];\n\n\t\t\t\tvar _iteratorNormalCompletion5 = true;\n\t\t\t\tvar _didIteratorError5 = false;\n\t\t\t\tvar _iteratorError5 = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator5 = json.children[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t\t\t\t\t\tvar child = _step5.value;\n\n\t\t\t\t\t\tif (child.name) {\n\t\t\t\t\t\t\t// If child has name property, it is an Element.\n\t\t\t\t\t\t\tchildren.push(Element.fromJSON(child));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Otherwise, it is a Text node.\n\t\t\t\t\t\t\tchildren.push(_text2.default.fromJSON(child));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError5 = true;\n\t\t\t\t\t_iteratorError5 = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t\t\t\t\t\t\t_iterator5.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError5) {\n\t\t\t\t\t\t\tthrow _iteratorError5;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new Element(json.name, json.attributes, children);\n\t\t}\n\t}]);\n\n\treturn Element;\n}(_node2.default);\n\n// Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/model/node~Node|Iterable.<String|module:engine/model/node~Node>}\n// @return {Iterable.<module:engine/model/node~Node>}\n\n\nexports.default = Element;\nfunction normalize(nodes) {\n\t// Separate condition because string is iterable.\n\tif (typeof nodes == 'string') {\n\t\treturn [new _text2.default(nodes)];\n\t}\n\n\tif (!(0, _isiterable2.default)(nodes)) {\n\t\tnodes = [nodes];\n\t}\n\n\t// Array.from to enable .map() on non-arrays.\n\treturn Array.from(nodes).map(function (node) {\n\t\treturn typeof node == 'string' ? new _text2.default(node) : node;\n\t});\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/element.js\n// module id = 6\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\nn\n/**\n * @module ui/view\n */\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nvar _viewcollection = require('./viewcollection');\n\nvar _viewcollection2 = _interopRequireDefault(_viewcollection);\n\nvar _template = require('./template');\n\nvar _template2 = _interopRequireDefault(_template);\n\nvar _emittermixin = require('@ckeditor/ckeditor5-utils/src/dom/emittermixin');\n\nvar _emittermixin2 = _interopRequireDefault(_emittermixin);\n\nvar _observablemixin = require('@ckeditor/ckeditor5-utils/src/observablemixin');\n\nvar _observablemixin2 = _interopRequireDefault(_observablemixin);\n\nvar _collection = require('@ckeditor/ckeditor5-utils/src/collection');\n\nvar _collection2 = _interopRequireDefault(_collection);\n\nvar _mix = require('@ckeditor/ckeditor5-utils/src/mix');\n\nvar _mix2 = _interopRequireDefault(_mix);\n\nvar _isiterable = require('@ckeditor/ckeditor5-utils/src/isiterable');\n\nvar _isiterable2 = _interopRequireDefault(_isiterable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Basic View class.\n *\n *\t\tclass SampleView extends View {\n *\t\t\tconstructor( locale ) {\n *\t\t\t\tsuper( locale );\n *\n *\t\t\t\tthis.template = new Template( {\n *\t\t\t\t\ttag: 'p',\n *\t\t\t\t\tchildren: [\n *\t\t\t\t\t\t'Hello',\n *\t\t\t\t\t\t{\n *\t\t\t\t\t\t\ttag: 'b',\n *\t\t\t\t\t\t\tchildren: [\n *\t\t\t\t\t\t\t\t'world!'\n *\t\t\t\t\t\t\t]\n *\t\t\t\t\t\t}\n *\t\t\t\t\t],\n *\t\t\t\t\tattributes: {\n *\t\t\t\t\t\tclass: 'foo'\n *\t\t\t\t\t}\n *\t\t\t\t} );\n *\t\t\t}\n *\t\t}\n *\n *\t\tconst view = new SampleView( locale );\n *\n *\t\tview.init();\n *\n *\t\t// Will append <p class=\"foo\">Hello<b>world</b></p>\n *\t\tdocument.body.appendChild( view.element );\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nvar View = function () {\n\t/**\n  * Creates an instance of the {@link module:ui/view~View} class.\n  *\n  * @param {module:utils/locale~Locale} [locale] The {@link module:core/editor/editor~Editor editor's locale} instance.\n  */\n\tfunction View(locale) {\n\t\t_classCallCheck(this, View);\n\n\t\t/**\n   * A set of tools to localize the user interface. See {@link module:core/editor/editor~Editor}.\n   *\n   * @readonly\n   * @member {module:utils/locale~Locale}\n   */\n\t\tthis.locale = locale;\n\n\t\t/**\n   * Shorthand for {@link module:utils/locale~Locale#t}.\n   *\n   * Note: If locale instance hasn't been passed to the view this method may not be available.\n   *\n   * @see module:utils/locale~Locale#t\n   * @method\n   */\n\t\tthis.t = locale && locale.t;\n\n\t\t/**\n   * Set `true` after {@link #init}, which can be asynchronous.\n   *\n   * @readonly\n   * @observable\n   * @member {Boolean} #ready\n   */\n\t\tthis.set('ready', false);\n\n\t\t/**\n   * Collections registered with {@link #createCollection}.\n   *\n   * @protected\n   * @member {Set.<module:ui/viewcollection~ViewCollection>}\n   */\n\t\tthis._viewCollections = new _collection2.default();\n\n\t\t/**\n   * A collection of view instances, which have been added directly\n   * into the {@link module:ui/template~Template#children}.\n   *\n   * @protected\n   * @member {module:ui/viewcollection~ViewCollection}\n   */\n\t\tthis._unboundChildren = this.createCollection();\n\n\t\t// Pass parent locale to its children.\n\t\tthis._viewCollections.on('add', function (evt, collection) {\n\t\t\tcollection.locale = locale;\n\t\t});\n\n\t\t/**\n   * Template of this view.\n   *\n   * @member {module:ui/template~Template} #template\n   */\n\n\t\t/**\n   * Element of this view.\n   *\n   * @private\n   * @member {HTMLElement} #_element\n   */\n\n\t\t/**\n   * Cached {@link module:ui/template~Template} binder object specific for this instance.\n   * See {@link #bindTemplate}.\n   *\n   * @private\n   * @member {Object} #_bindTemplate\n   */\n\t}\n\n\t/**\n  * Element of this view. The element is rendered on first reference\n  * using {@link #template} definition.\n  *\n  * @type {HTMLElement}\n  */\n\n\n\t_createClass(View, [{\n\t\tkey: 'createCollection',\n\n\n\t\t/**\n   * Creates a new collection of views, which can be used in this view instance,\n   * e.g. as a member of {@link module:ui/template~TemplateDefinition TemplateDefinition} children.\n   *\n   *\t\tclass SampleView extends View {\n   *\t\t\tconstructor( locale ) {\n   *\t\t\t\tsuper( locale );\n   *\n   *\t\t\t\tthis.items = this.createCollection();\n  \t *\n   *\t\t\t\tthis.template = new Template( {\n   *\t\t\t\t\ttag: 'p',\n   *\n   *\t\t\t\t\t// `items` collection will render here.\n   *\t\t\t\t\tchildren: this.items\n   *\t\t\t\t} );\n   *\t\t\t}\n   *\t\t}\n   *\n   *\t\tconst view = new SampleView( locale );\n   *\t\tconst anotherView = new AnotherSampleView( locale );\n   *\n   *\t\tview.init();\n   *\n   *\t\t// Will append <p></p>\n   *\t\tdocument.body.appendChild( view.element );\n   *\n   *\t\t// `anotherView` becomes a child of the view, which is reflected in DOM\n   *\t\t// <p><anotherView#element></p>\n   *\t\tview.items.add( anotherView );\n   *\n   * @returns {module:ui/viewcollection~ViewCollection} A new collection of view instances.\n   */\n\t\tvalue: function createCollection() {\n\t\t\tvar collection = new _viewcollection2.default();\n\n\t\t\tthis._viewCollections.add(collection);\n\n\t\t\treturn collection;\n\t\t}\n\n\t\t/**\n   * Registers a new child view under this view instance. Once registered, a child\n   * view is managed by its parent, including initialization ({@link #init})\n   * and destruction ({@link #destroy}).\n   *\n   *\t\tclass SampleView extends View {\n   *\t\t\tconstructor( locale ) {\n   *\t\t\t\tsuper( locale );\n   *\n   *\t\t\t\tthis.childA = new SomeChildView( locale );\n   *\t\t\t\tthis.childB = new SomeChildView( locale );\n   *\n   *\t\t\t\tthis.template = new Template( { tag: 'p' } );\n   *\n   *\t\t\t\t// Register children.\n   *\t\t\t\tthis.addChildren( [ this.childA, this.childB ] );\n   *\t\t\t}\n   *\n   *\t\t\tinit() {\n   *\t\t\t\tthis.element.appendChild( this.childA.element );\n   *\t\t\t\tthis.element.appendChild( this.childB.element );\n   *\n   *\t\t\t\treturn super.init();\n   *\t\t\t}\n   *\t\t}\n   *\n   *\t\tconst view = new SampleView( locale );\n   *\n   *\t\tview.init();\n   *\n   *\t\t// Will append <p><childA#element><b></b><childB#element></p>\n   *\t\tdocument.body.appendChild( view.element );\n   *\n   * **Note**: There's no need to add child views if they're used in the\n   * {@link #template} explicitly:\n   *\n   *\t\tclass SampleView extends View {\n   *\t\t\tconstructor( locale ) {\n   *\t\t\t\tsuper( locale );\n   *\n   *\t\t\t\tthis.childA = new SomeChildView( locale );\n   *\t\t\t\tthis.childB = new SomeChildView( locale );\n   *\n   *\t\t\t\tthis.template = new Template( {\n   *\t\t\t\t\ttag: 'p',\n   *\n  \t *\t\t\t\t\t// These children will be added automatically. There's no\n  \t *\t\t\t\t\t// need to call {@link #addChildren} for any of them.\n   *\t\t\t\t\tchildren: [ this.childA, this.childB ]\n   *\t\t\t\t} );\n   *\t\t\t}\n   *\n   *\t\t\t...\n   *\t\t}\n   *\n   * @param {module:ui/view~View|Iterable.<module:ui/view~View>} children Children views to be registered.\n   */\n\n\t}, {\n\t\tkey: 'addChildren',\n\t\tvalue: function addChildren(children) {\n\t\t\tvar _this = this;\n\n\t\t\tif (!(0, _isiterable2.default)(children)) {\n\t\t\t\tchildren = [children];\n\t\t\t}\n\n\t\t\tchildren.map(function (c) {\n\t\t\t\treturn _this._unboundChildren.add(c);\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * Initializes the view and child views located in {@link #_viewCollections}.\n   */\n\n\t}, {\n\t\tkey: 'init',\n\t\tvalue: function init() {\n\t\t\tif (this.ready) {\n\t\t\t\t/**\n     * This View has already been initialized.\n     *\n     * @error ui-view-init-reinit\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('ui-view-init-reinit: This View has already been initialized.');\n\t\t\t}\n\n\t\t\t// Initialize collections in #_viewCollections.\n\t\t\tthis._viewCollections.map(function (c) {\n\t\t\t\treturn c.init();\n\t\t\t});\n\n\t\t\t// Spread the word that this view is ready!\n\t\t\tthis.ready = true;\n\t\t}\n\n\t\t/**\n   * Destroys the view instance and child views located in {@link #_viewCollections}.\n   */\n\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {\n\t\t\tthis.stopListening();\n\n\t\t\tthis._viewCollections.map(function (c) {\n\t\t\t\treturn c.destroy();\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * Recursively traverses {@link #template} in search of {@link module:ui/view~View}\n   * instances and automatically registers them using {@link #addChildren} method.\n   *\n   * @protected\n   */\n\n\t}, {\n\t\tkey: '_addTemplateChildren',\n\t\tvalue: function _addTemplateChildren() {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar search = function search(def) {\n\t\t\t\tif (def.children) {\n\t\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\t\tvar _didIteratorError = false;\n\t\t\t\t\tvar _iteratorError = undefined;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (var _iterator = def.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\t\tvar defOrView = _step.value;\n\n\t\t\t\t\t\t\tif (defOrView instanceof View) {\n\t\t\t\t\t\t\t\t_this2.addChildren(defOrView);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsearch(defOrView);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t\t_iteratorError = err;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tsearch(this.template);\n\t\t}\n\t}, {\n\t\tkey: 'element',\n\t\tget: function get() {\n\t\t\tif (this._element) {\n\t\t\t\treturn this._element;\n\t\t\t}\n\n\t\t\t// No template means no element (a virtual view).\n\t\t\tif (!this.template) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tthis._addTemplateChildren();\n\n\t\t\treturn this._element = this.template.render();\n\t\t},\n\t\tset: function set(el) {\n\t\t\tthis._element = el;\n\t\t}\n\n\t\t/**\n   * Shorthand for {@link module:ui/template~Template.bind}, bound to {@link ~View} on the first access.\n   *\n   * Cached {@link module:ui/template~Template.bind} object is stored in {@link #_bindTemplate}.\n   *\n   * @method #bindTemplate\n   */\n\n\t}, {\n\t\tkey: 'bindTemplate',\n\t\tget: function get() {\n\t\t\tif (this._bindTemplate) {\n\t\t\t\treturn this._bindTemplate;\n\t\t\t}\n\n\t\t\treturn this._bindTemplate = _template2.default.bind(this, this);\n\t\t}\n\t}]);\n\n\treturn View;\n}();\n\nexports.default = View;\n\n\n(0, _mix2.default)(View, _emittermixin2.default);\n(0, _mix2.default)(View, _observablemixin2.default);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-ui/src/view.js\n// module id = 7\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nexports._getEmitterListenedTo = _getEmitterListenedTo;\nexports._setEmitterId = _setEmitterId;\nexports._getEmitterId = _getEmitterId;\n\nvar _eventinfo = require('./eventinfo');\n\nvar _eventinfo2 = _interopRequireDefault(_eventinfo);\n\nvar _uid = require('./uid');\n\nvar _uid2 = _interopRequireDefault(_uid);\n\nvar _priorities = require('./priorities');\n\nvar _priorities2 = _interopRequireDefault(_priorities);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /**\n                                                                                                                                                                                                     * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                     * For licensing, see LICENSE.md.\n                                                                                                                                                                                                     */\n\n/**\n * @module utils/emittermixin\n */\n\nvar _listeningTo = Symbol('listeningTo');\nvar _emitterId = Symbol('emitterId');\n\n/**\n * Mixin that injects the events API into its host.\n *\n * @mixin EmitterMixin\n * @implements module:utils/emittermixin~Emitter\n */\nvar EmitterMixin = {\n\t/**\n  * Registers a callback function to be executed when an event is fired.\n  *\n  * Events can be grouped in namespaces using `:`.\n  * When namespaced event is fired, it additionaly fires all callbacks for that namespace.\n  *\n  *\t\tmyEmitter.on( 'myGroup', genericCallback );\n  *\t\tmyEmitter.on( 'myGroup:myEvent', specificCallback );\n  *\n  *\t\t// genericCallback is fired.\n  *\t\tmyEmitter.fire( 'myGroup' );\n  *\t\t// both genericCallback and specificCallback are fired.\n  *\t\tmyEmitter.fire( 'myGroup:myEvent' );\n  *\t\t// genericCallback is fired even though there are no callbacks for \"foo\".\n  *\t\tmyEmitter.fire( 'myGroup:foo' );\n  *\n  * An event callback can {@link module:utils/eventinfo~EventInfo#stop stop the event} and\n  * set the {@link module:utils/eventinfo~EventInfo#return return value} of the {@link #fire} method.\n  *\n  * @method #on\n  * @param {String} event The name of the event.\n  * @param {Function} callback The function to be called on event.\n  * @param {Object} [options={}] Additional options.\n  * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n  * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n  * order they were added.\n  * @param {Object} [options.context] The object that represents `this` in the callback. Defaults to the object firing the event.\n  */\n\ton: function on(event, callback) {\n\t\tvar options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n\t\tcreateEventNamespace(this, event);\n\t\tvar lists = getCallbacksListsForNamespace(this, event);\n\t\tvar priority = _priorities2.default.get(options.priority);\n\n\t\tcallback = {\n\t\t\tcallback: callback,\n\t\t\tcontext: options.context || this,\n\t\t\tpriority: priority\n\t\t};\n\n\t\t// Add the callback to all callbacks list.\n\t\tvar _iteratorNormalCompletion = true;\n\t\tvar _didIteratorError = false;\n\t\tvar _iteratorError = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator = lists[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\tvar callbacks = _step.value;\n\n\t\t\t\t// Add the callback to the list in the right priority position.\n\t\t\t\tvar added = false;\n\n\t\t\t\tfor (var i = 0; i < callbacks.length; i++) {\n\t\t\t\t\tif (callbacks[i].priority < priority) {\n\t\t\t\t\t\tcallbacks.splice(i, 0, callback);\n\t\t\t\t\t\tadded = true;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Add at the end, if right place was not found.\n\t\t\t\tif (!added) {\n\t\t\t\t\tcallbacks.push(callback);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t_didIteratorError = true;\n\t\t\t_iteratorError = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t_iterator.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\n\t/**\n  * Registers a callback function to be executed on the next time the event is fired only. This is similar to\n  * calling {@link #on} followed by {@link #off} in the callback.\n  *\n  * @method #once\n  * @param {String} event The name of the event.\n  * @param {Function} callback The function to be called on event.\n  * @param {Object} [options={}] Additional options.\n  * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n  * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n  * order they were added.\n  * @param {Object} [options.context] The object that represents `this` in the callback. Defaults to the object firing the event.\n  */\n\tonce: function once(event, callback, options) {\n\t\tvar onceCallback = function onceCallback(event) {\n\t\t\t// Go off() at the first call.\n\t\t\tevent.off();\n\n\t\t\t// Go with the original callback.\n\n\t\t\tfor (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t\t\t\targs[_key - 1] = arguments[_key];\n\t\t\t}\n\n\t\t\tcallback.call.apply(callback, [this, event].concat(args));\n\t\t};\n\n\t\t// Make a similar on() call, simply replacing the callback.\n\t\tthis.on(event, onceCallback, options);\n\t},\n\n\n\t/**\n  * Stops executing the callback on the given event.\n  *\n  * @method #off\n  * @param {String} event The name of the event.\n  * @param {Function} callback The function to stop being called.\n  * @param {Object} [context] The context object to be removed, pared with the given callback. To handle cases where\n  * the same callback is used several times with different contexts.\n  */\n\toff: function off(event, callback, context) {\n\t\tvar lists = getCallbacksListsForNamespace(this, event);\n\n\t\tvar _iteratorNormalCompletion2 = true;\n\t\tvar _didIteratorError2 = false;\n\t\tvar _iteratorError2 = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator2 = lists[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\tvar callbacks = _step2.value;\n\n\t\t\t\tfor (var i = 0; i < callbacks.length; i++) {\n\t\t\t\t\tif (callbacks[i].callback == callback) {\n\t\t\t\t\t\tif (!context || context == callbacks[i].context) {\n\t\t\t\t\t\t\t// Remove the callback from the list (fixing the next index).\n\t\t\t\t\t\t\tcallbacks.splice(i, 1);\n\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t_didIteratorError2 = true;\n\t\t\t_iteratorError2 = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t_iterator2.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\n\t/**\n  * Registers a callback function to be executed when an event is fired in a specific (emitter) object.\n  *\n  * @method #listenTo\n  * @param {module:utils/emittermixin~Emitter} emitter The object that fires the event.\n  * @param {String} event The name of the event.\n  * @param {Function} callback The function to be called on event.\n  * @param {Object} [options={}] Additional options.\n  * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n  * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n  * order they were added.\n  * @param {Object} [options.context] The object that represents `this` in the callback. Defaults to the object firing the event.\n  */\n\tlistenTo: function listenTo(emitter, event, callback, options) {\n\t\tvar emitterInfo = void 0,\n\t\t    eventCallbacks = void 0;\n\n\t\t// _listeningTo contains a list of emitters that this object is listening to.\n\t\t// This list has the following format:\n\t\t//\n\t\t// _listeningTo: {\n\t\t//     emitterId: {\n\t\t//         emitter: emitter,\n\t\t//         callbacks: {\n\t\t//             event1: [ callback1, callback2, ... ]\n\t\t//             ....\n\t\t//         }\n\t\t//     },\n\t\t//     ...\n\t\t// }\n\n\t\tif (!this[_listeningTo]) {\n\t\t\tthis[_listeningTo] = {};\n\t\t}\n\n\t\tvar emitters = this[_listeningTo];\n\n\t\tif (!_getEmitterId(emitter)) {\n\t\t\t_setEmitterId(emitter);\n\t\t}\n\n\t\tvar emitterId = _getEmitterId(emitter);\n\n\t\tif (!(emitterInfo = emitters[emitterId])) {\n\t\t\temitterInfo = emitters[emitterId] = {\n\t\t\t\temitter: emitter,\n\t\t\t\tcallbacks: {}\n\t\t\t};\n\t\t}\n\n\t\tif (!(eventCallbacks = emitterInfo.callbacks[event])) {\n\t\t\teventCallbacks = emitterInfo.callbacks[event] = [];\n\t\t}\n\n\t\teventCallbacks.push(callback);\n\n\t\t// Finally register the callback to the event.\n\t\temitter.on(event, callback, options);\n\t},\n\n\n\t/**\n  * Stops listening for events. It can be used at different levels:\n  *\n  * * To stop listening to a specific callback.\n  * * To stop listening to a specific event.\n  * * To stop listening to all events fired by a specific object.\n  * * To stop listening to all events fired by all object.\n  *\n  * @method #stopListening\n  * @param {module:utils/emittermixin~Emitter} [emitter] The object to stop listening to. If omitted, stops it for all objects.\n  * @param {String} [event] (Requires the `emitter`) The name of the event to stop listening to. If omitted, stops it\n  * for all events from `emitter`.\n  * @param {Function} [callback] (Requires the `event`) The function to be removed from the call list for the given\n  * `event`.\n  */\n\tstopListening: function stopListening(emitter, event, callback) {\n\t\tvar emitters = this[_listeningTo];\n\t\tvar emitterId = emitter && _getEmitterId(emitter);\n\t\tvar emitterInfo = emitters && emitterId && emitters[emitterId];\n\t\tvar eventCallbacks = emitterInfo && event && emitterInfo.callbacks[event];\n\n\t\t// Stop if nothing has been listened.\n\t\tif (!emitters || emitter && !emitterInfo || event && !eventCallbacks) {\n\t\t\treturn;\n\t\t}\n\n\t\t// All params provided. off() that single callback.\n\t\tif (callback) {\n\t\t\temitter.off(event, callback);\n\t\t}\n\t\t// Only `emitter` and `event` provided. off() all callbacks for that event.\n\t\telse if (eventCallbacks) {\n\t\t\t\twhile (callback = eventCallbacks.pop()) {\n\t\t\t\t\temitter.off(event, callback);\n\t\t\t\t}\n\t\t\t\tdelete emitterInfo.callbacks[event];\n\t\t\t}\n\t\t\t// Only `emitter` provided. off() all events for that emitter.\n\t\t\telse if (emitterInfo) {\n\t\t\t\t\tfor (event in emitterInfo.callbacks) {\n\t\t\t\t\t\tthis.stopListening(emitter, event);\n\t\t\t\t\t}\n\t\t\t\t\tdelete emitters[emitterId];\n\t\t\t\t}\n\t\t\t\t// No params provided. off() all emitters.\n\t\t\t\telse {\n\t\t\t\t\t\tfor (emitterId in emitters) {\n\t\t\t\t\t\t\tthis.stopListening(emitters[emitterId].emitter);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdelete this[_listeningTo];\n\t\t\t\t\t}\n\t},\n\n\n\t/**\n  * Fires an event, executing all callbacks registered for it.\n  *\n  * The first parameter passed to callbacks is an {@link module:utils/eventinfo~EventInfo} object,\n  * followed by the optional `args` provided in the `fire()` method call.\n  *\n  * @method #fire\n  * @param {String|module:utils/eventinfo~EventInfo} eventOrInfo The name of the event or `EventInfo` object if event is delegated.\n  * @param {...*} [args] Additional arguments to be passed to the callbacks.\n  * @returns {*} By default the method returns `undefined`. However, the return value can be changed by listeners\n  * through modification of the {@link module:utils/eventinfo~EventInfo#return}'s value (the event info\n  * is the first param of every callback).\n  */\n\tfire: function fire(eventOrInfo) {\n\t\tvar eventInfo = eventOrInfo instanceof _eventinfo2.default ? eventOrInfo : new _eventinfo2.default(this, eventOrInfo);\n\t\tvar event = eventInfo.name;\n\t\tvar callbacks = getCallbacksForEvent(this, event);\n\n\t\t// Record that the event passed this emitter on its path.\n\t\teventInfo.path.push(this);\n\n\t\t// Handle event listener callbacks first.\n\n\t\tfor (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n\t\t\targs[_key2 - 1] = arguments[_key2];\n\t\t}\n\n\t\tif (callbacks) {\n\t\t\t// Arguments passed to each callback.\n\t\t\tvar callbackArgs = [eventInfo].concat(_toConsumableArray(args));\n\n\t\t\t// Copying callbacks array is the easiest and most secure way of preventing infinite loops, when event callbacks\n\t\t\t// are added while processing other callbacks. Previous solution involved adding counters (unique ids) but\n\t\t\t// failed if callbacks were added to the queue before currently processed callback.\n\t\t\t// If this proves to be too inefficient, another method is to change `.on()` so callbacks are stored if same\n\t\t\t// event is currently processed. Then, `.fire()` at the end, would have to add all stored events.\n\t\t\tcallbacks = Array.from(callbacks);\n\n\t\t\tfor (var i = 0; i < callbacks.length; i++) {\n\t\t\t\tcallbacks[i].callback.apply(callbacks[i].context, callbackArgs);\n\n\t\t\t\t// Remove the callback from future requests if off() has been called.\n\t\t\t\tif (eventInfo.off.called) {\n\t\t\t\t\t// Remove the called mark for the next calls.\n\t\t\t\t\tdelete eventInfo.off.called;\n\n\t\t\t\t\tthis.off(event, callbacks[i].callback, callbacks[i].context);\n\t\t\t\t}\n\n\t\t\t\t// Do not execute next callbacks if stop() was called.\n\t\t\t\tif (eventInfo.stop.called) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Delegate event to other emitters if needed.\n\t\tif (this._delegations) {\n\t\t\tvar destinations = this._delegations.get(event);\n\t\t\tvar passAllDestinations = this._delegations.get('*');\n\n\t\t\tif (destinations) {\n\t\t\t\tfireDelegatedEvents(destinations, eventInfo, args);\n\t\t\t}\n\n\t\t\tif (passAllDestinations) {\n\t\t\t\tfireDelegatedEvents(passAllDestinations, eventInfo, args);\n\t\t\t}\n\t\t}\n\n\t\treturn eventInfo.return;\n\t},\n\n\n\t/**\n  * Delegates selected events to another {@link module:utils/emittermixin~Emitter}. For instance:\n  *\n  *\t\temitterA.delegate( 'eventX' ).to( emitterB );\n  *\t\temitterA.delegate( 'eventX', 'eventY' ).to( emitterC );\n  *\n  * then `eventX` is delegated (fired by) `emitterB` and `emitterC` along with `data`:\n  *\n  *\t\temitterA.fire( 'eventX', data );\n  *\n  * and `eventY` is delegated (fired by) `emitterC` along with `data`:\n  *\n  *\t\temitterA.fire( 'eventY', data );\n  *\n  * @method #delegate\n  * @param {...String} events Event names that will be delegated to another emitter.\n  * @returns {module:utils/emittermixin~EmitterMixinDelegateChain}\n  */\n\tdelegate: function delegate() {\n\t\tvar _this = this;\n\n\t\tfor (var _len3 = arguments.length, events = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n\t\t\tevents[_key3] = arguments[_key3];\n\t\t}\n\n\t\treturn {\n\t\t\tto: function to(emitter, nameOrFunction) {\n\t\t\t\tif (!_this._delegations) {\n\t\t\t\t\t_this._delegations = new Map();\n\t\t\t\t}\n\n\t\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\t\tvar _didIteratorError3 = false;\n\t\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator3 = events[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\t\tvar eventName = _step3.value;\n\n\t\t\t\t\t\tvar destinations = _this._delegations.get(eventName);\n\n\t\t\t\t\t\tif (!destinations) {\n\t\t\t\t\t\t\t_this._delegations.set(eventName, new Map([[emitter, nameOrFunction]]));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdestinations.set(emitter, nameOrFunction);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t\t_iteratorError3 = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t},\n\n\n\t/**\n  * Stops delegating events. It can be used at different levels:\n  *\n  * * To stop delegating all events.\n  * * To stop delegating a specific event to all emitters.\n  * * To stop delegating a specific event to a specific emitter.\n  *\n  * @method #stopDelegating\n  * @param {String} [event] The name of the event to stop delegating. If omitted, stops it all delegations.\n  * @param {module:utils/emittermixin~Emitter} [emitter] (requires `event`) The object to stop delegating a particular event to.\n  * If omitted, stops delegation of `event` to all emitters.\n  */\n\tstopDelegating: function stopDelegating(event, emitter) {\n\t\tif (!this._delegations) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!event) {\n\t\t\tthis._delegations.clear();\n\t\t} else if (!emitter) {\n\t\t\tthis._delegations.delete(event);\n\t\t} else {\n\t\t\tvar destinations = this._delegations.get(event);\n\n\t\t\tif (destinations) {\n\t\t\t\tdestinations.delete(emitter);\n\t\t\t}\n\t\t}\n\t}\n};\n\nexports.default = EmitterMixin;\n\n/**\n * Checks if `listeningEmitter` listens to an emitter with given `listenedToEmitterId` and if so, returns that emitter.\n * If not, returns `null`.\n *\n * @protected\n * @param {module:utils/emittermixin~EmitterMixin} listeningEmitter Emitter that listens.\n * @param {String} listenedToEmitterId Unique emitter id of emitter listened to.\n * @returns {module:utils/emittermixin~EmitterMixin|null}\n */\n\nfunction _getEmitterListenedTo(listeningEmitter, listenedToEmitterId) {\n\tif (listeningEmitter[_listeningTo] && listeningEmitter[_listeningTo][listenedToEmitterId]) {\n\t\treturn listeningEmitter[_listeningTo][listenedToEmitterId].emitter;\n\t}\n\n\treturn null;\n}\n\n/**\n * Sets emitter's unique id.\n *\n * **Note:** `_emitterId` can be set only once.\n *\n * @protected\n * @param {module:utils/emittermixin~EmitterMixin} emitter Emitter for which id will be set.\n * @param {String} [id] Unique id to set. If not passed, random unique id will be set.\n */\nfunction _setEmitterId(emitter, id) {\n\tif (!emitter[_emitterId]) {\n\t\temitter[_emitterId] = id || (0, _uid2.default)();\n\t}\n}\n\n/**\n * Returns emitter's unique id.\n *\n * @protected\n * @param {module:utils/emittermixin~EmitterMixin} emitter Emitter which id will be returned.\n */\nfunction _getEmitterId(emitter) {\n\treturn emitter[_emitterId];\n}\n\n// Gets the internal `_events` property of the given object.\n// `_events` property store all lists with callbacks for registered event names.\n// If there were no events registered on the object, empty `_events` object is created.\nfunction getEvents(source) {\n\tif (!source._events) {\n\t\tObject.defineProperty(source, '_events', {\n\t\t\tvalue: {}\n\t\t});\n\t}\n\n\treturn source._events;\n}\n\n// Creates event node for generic-specific events relation architecture.\nfunction makeEventNode() {\n\treturn {\n\t\tcallbacks: [],\n\t\tchildEvents: []\n\t};\n}\n\n// Creates an architecture for generic-specific events relation.\n// If needed, creates all events for given eventName, i.e. if the first registered event\n// is foo:bar:abc, it will create foo:bar:abc, foo:bar and foo event and tie them together.\n// It also copies callbacks from more generic events to more specific events when\n// specific events are created.\nfunction createEventNamespace(source, eventName) {\n\tvar events = getEvents(source);\n\n\t// First, check if the event we want to add to the structure already exists.\n\tif (events[eventName]) {\n\t\t// If it exists, we don't have to do anything.\n\t\treturn;\n\t}\n\n\t// In other case, we have to create the structure for the event.\n\t// Note, that we might need to create intermediate events too.\n\t// I.e. if foo:bar:abc is being registered and we only have foo in the structure,\n\t// we need to also register foo:bar.\n\n\t// Currently processed event name.\n\tvar name = eventName;\n\t// Name of the event that is a child event for currently processed event.\n\tvar childEventName = null;\n\n\t// Array containing all newly created specific events.\n\tvar newEventNodes = [];\n\n\t// While loop can't check for ':' index because we have to handle generic events too.\n\t// In each loop, we truncate event name, going from the most specific name to the generic one.\n\t// I.e. foo:bar:abc -> foo:bar -> foo.\n\twhile (name !== '') {\n\t\tif (events[name]) {\n\t\t\t// If the currently processed event name is already registered, we can be sure\n\t\t\t// that it already has all the structure created, so we can break the loop here\n\t\t\t// as no more events need to be registered.\n\t\t\tbreak;\n\t\t}\n\n\t\t// If this event is not yet registered, create a new object for it.\n\t\tevents[name] = makeEventNode();\n\t\t// Add it to the array with newly created events.\n\t\tnewEventNodes.push(events[name]);\n\n\t\t// Add previously processed event name as a child of this event.\n\t\tif (childEventName) {\n\t\t\tevents[name].childEvents.push(childEventName);\n\t\t}\n\n\t\tchildEventName = name;\n\t\t// If `.lastIndexOf()` returns -1, `.substr()` will return '' which will break the loop.\n\t\tname = name.substr(0, name.lastIndexOf(':'));\n\t}\n\n\tif (name !== '') {\n\t\t// If name is not empty, we found an already registered event that was a parent of the\n\t\t// event we wanted to register.\n\n\t\t// Copy that event's callbacks to newly registered events.\n\t\tvar _iteratorNormalCompletion4 = true;\n\t\tvar _didIteratorError4 = false;\n\t\tvar _iteratorError4 = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator4 = newEventNodes[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\t\tvar node = _step4.value;\n\n\t\t\t\tnode.callbacks = events[name].callbacks.slice();\n\t\t\t}\n\n\t\t\t// Add last newly created event to the already registered event.\n\t\t} catch (err) {\n\t\t\t_didIteratorError4 = true;\n\t\t\t_iteratorError4 = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t\t_iterator4.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError4) {\n\t\t\t\t\tthrow _iteratorError4;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tevents[name].childEvents.push(childEventName);\n\t}\n}\n\n// Gets an array containing callbacks list for a given event and it's more specific events.\n// I.e. if given event is foo:bar and there is also foo:bar:abc event registered, this will\n// return callback list of foo:bar and foo:bar:abc (but not foo).\n// Returns empty array if given event has not been yet registered.\nfunction getCallbacksListsForNamespace(source, eventName) {\n\tvar eventNode = getEvents(source)[eventName];\n\n\tif (!eventNode) {\n\t\treturn [];\n\t}\n\n\tvar callbacksLists = [eventNode.callbacks];\n\n\tfor (var i = 0; i < eventNode.childEvents.length; i++) {\n\t\tvar childCallbacksLists = getCallbacksListsForNamespace(source, eventNode.childEvents[i]);\n\n\t\tcallbacksLists = callbacksLists.concat(childCallbacksLists);\n\t}\n\n\treturn callbacksLists;\n}\n\n// Get the list of callbacks for a given event, but only if there any callbacks have been registered.\n// If there are no callbacks registered for given event, it checks if this is a specific event and looks\n// for callbacks for it's more generic version.\nfunction getCallbacksForEvent(source, eventName) {\n\tvar event = void 0;\n\n\tif (!source._events || !(event = source._events[eventName]) || !event.callbacks.length) {\n\t\t// There are no callbacks registered for specified eventName.\n\t\t// But this could be a specific-type event that is in a namespace.\n\t\tif (eventName.indexOf(':') > -1) {\n\t\t\t// If the eventName is specific, try to find callback lists for more generic event.\n\t\t\treturn getCallbacksForEvent(source, eventName.substr(0, eventName.lastIndexOf(':')));\n\t\t} else {\n\t\t\t// If this is a top-level generic event, return null;\n\t\t\treturn null;\n\t\t}\n\t}\n\n\treturn event.callbacks;\n}\n\n// Fires delegated events for given map of destinations.\n//\n// @private\n// * @param {Map.<utils.Emitter>} destinations A map containing `[ {@link utils.Emitter}, \"event name\" ]` pair destinations.\n// * @param {utils.EventInfo} eventInfo The original event info object.\n// * @param {Array.<*>} fireArgs Arguments the original event was fired with.\nfunction fireDelegatedEvents(destinations, eventInfo, fireArgs) {\n\tvar _iteratorNormalCompletion5 = true;\n\tvar _didIteratorError5 = false;\n\tvar _iteratorError5 = undefined;\n\n\ttry {\n\t\tfor (var _iterator5 = destinations[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t\t\tvar _ref = _step5.value;\n\n\t\t\tvar _ref2 = _slicedToArray(_ref, 2);\n\n\t\t\tvar emitter = _ref2[0];\n\t\t\tvar name = _ref2[1];\n\n\t\t\tif (!name) {\n\t\t\t\tname = eventInfo.name;\n\t\t\t} else if (typeof name == 'function') {\n\t\t\t\tname = name(eventInfo.name);\n\t\t\t}\n\n\t\t\tvar delegatedInfo = new _eventinfo2.default(eventInfo.source, name);\n\n\t\t\tdelegatedInfo.path = [].concat(_toConsumableArray(eventInfo.path));\n\n\t\t\temitter.fire.apply(emitter, [delegatedInfo].concat(_toConsumableArray(fireArgs)));\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError5 = true;\n\t\t_iteratorError5 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t\t\t\t_iterator5.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError5) {\n\t\t\t\tthrow _iteratorError5;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Interface representing classes which mix in {@link module:utils/emittermixin~EmitterMixin}.\n *\n * @interface Emitter\n */\n\n/**\n * The return value of {@link ~EmitterMixin#delegate}.\n *\n * @interface module:utils/emittermixin~EmitterMixinDelegateChain\n */\n\n/**\n * Selects destination for {@link module:utils/emittermixin~EmitterMixin#delegate} events.\n *\n * @method #to\n * @param {module:utils/emittermixin~Emitter} emitter An `EmitterMixin` instance which is the destination for delegated events.\n * @param {String|Function} nameOrFunction A custom event name or function which converts the original name string.\n */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/emittermixin.js\n// module id = 9\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _baseMatches = require('./_baseMatches');\n\nvar _baseMatches2 = _interopRequireDefault(_baseMatches);\n\nvar _baseMatchesProperty = require('./_baseMatchesProperty');\n\nvar _baseMatchesProperty2 = _interopRequireDefault(_baseMatchesProperty);\n\nvar _identity = require('./identity');\n\nvar _identity2 = _interopRequireDefault(_identity);\n\nvar _isArray = require('./isArray');\n\nvar _isArray2 = _interopRequireDefault(_isArray);\n\nvar _property = require('./property');\n\nvar _property2 = _interopRequireDefault(_property);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return _identity2.default;\n  }\n  if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) == 'object') {\n    return (0, _isArray2.default)(value) ? (0, _baseMatchesProperty2.default)(value[0], value[1]) : (0, _baseMatches2.default)(value);\n  }\n  return (0, _property2.default)(value);\n}\n\nexports.default = baseIteratee;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseIteratee.js\n// module id = 10\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\nn\n/**\n * @module core/command\n */\n\nvar _observablemixin = require('@ckeditor/ckeditor5-utils/src/observablemixin');\n\nvar _observablemixin2 = _interopRequireDefault(_observablemixin);\n\nvar _mix = require('@ckeditor/ckeditor5-utils/src/mix');\n\nvar _mix2 = _interopRequireDefault(_mix);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * The base class for CKEditor commands.\n *\n * Commands are the main way to manipulate editor contents and state. They are mostly used by UI elements (or by other\n * commands) to make changes in the model. Commands are available in every part of code that has access to\n * the {@link module:core/editor/editor~Editor editor} instance.\n *\n * Instances of registered commands can be retrieved from {@link module:core/editor/editor~Editor#commands}.\n * The easiest way to execute a command is through {@link module:core/editor/editor~Editor#execute}.\n *\n * By default commands are disabled when the editor is in {@link module:core/editor/editor~Editor#isReadOnly read-only} mode.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nvar Command = function () {\n\t/**\n  * Creates a new `Command` instance.\n  *\n  * @param {module:core/editor/editor~Editor} editor Editor on which this command will be used.\n  */\n\tfunction Command(editor) {\n\t\tvar _this = this;\n\n\t\t_classCallCheck(this, Command);\n\n\t\t/**\n   * The editor on which this command will be used.\n   *\n   * @readonly\n   * @member {module:core/editor/editor~Editor}\n   */\n\t\tthis.editor = editor;\n\n\t\t/**\n   * The value of a command. Concrete command class should define what it represents.\n   *\n   * For example, the `bold` command's value is whether the selection starts in a bolded text.\n   * And the value of the `link` command may be an object with links details.\n   *\n   * It's possible for a command to have no value (e.g. for stateless actions such as `uploadImage`).\n   *\n   * @observable\n   * @readonly\n   * @member #value\n   */\n\t\tthis.set('value', undefined);\n\n\t\t/**\n   * Flag indicating whether a command is enabled or disabled.\n   * A disabled command should do nothing when executed.\n   *\n   * @observable\n   * @readonly\n   * @member {Boolean} #isEnabled\n   */\n\t\tthis.set('isEnabled', false);\n\n\t\tthis.decorate('execute');\n\n\t\t// By default every command is refreshed when changes are applied to the model.\n\t\tthis.listenTo(this.editor.document, 'changesDone', function () {\n\t\t\t_this.refresh();\n\t\t});\n\n\t\tthis.on('execute', function (evt) {\n\t\t\tif (!_this.isEnabled) {\n\t\t\t\tevt.stop();\n\t\t\t}\n\t\t}, { priority: 'high' });\n\n\t\t// By default commands are disabled when the editor is in read-only mode.\n\t\tthis.listenTo(editor, 'change:isReadOnly', function (evt, name, value) {\n\t\t\tif (value) {\n\t\t\t\t// See a ticket about overriding observable properties\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-utils/issues/171.\n\t\t\t\t_this.on('change:isEnabled', forceDisable, { priority: 'lowest' });\n\t\t\t\t_this.isEnabled = false;\n\t\t\t} else {\n\t\t\t\t_this.off('change:isEnabled', forceDisable);\n\t\t\t\t_this.refresh();\n\t\t\t}\n\t\t});\n\n\t\tfunction forceDisable() {\n\t\t\tthis.isEnabled = false;\n\t\t}\n\t}\n\n\t/**\n  * Refreshes the command. The command should update its {@link #isEnabled} and {@link #value} property\n  * in this method.\n  *\n  * This method is automatically called when\n  * {@link module:engine/model/document~Document#event:changesDone any changes are applied to the model}.\n  */\n\n\n\t_createClass(Command, [{\n\t\tkey: 'refresh',\n\t\tvalue: function refresh() {\n\t\t\tthis.isEnabled = true;\n\t\t}\n\n\t\t/**\n   * Executes the command.\n   *\n   * A command may accept parameters. They will be passed from {@link module:core/editor/editor~Editor#execute}\n   * to the command.\n   *\n   * The `execute()` method will automatically abort when the command is disabled ({@link #isEnabled} is `false`).\n   * This behavior is implemented by a high priority listener to the {@link #event:execute} event.\n   *\n   * @fires execute\n   */\n\n\t}, {\n\t\tkey: 'execute',\n\t\tvalue: function execute() {}\n\n\t\t/**\n   * Destroys the command.\n   */\n\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {\n\t\t\tthis.stopListening();\n\t\t}\n\n\t\t/**\n   * Event fired by the {@link #execute} method. The command action is a listener to this event so it's\n   * possible to change/cancel the behavior of the command by listening to this event.\n   *\n   * See {@link module:utils/observablemixin~ObservableMixin.decorate} for more information and samples.\n   *\n   * **Note:** This event is fired even if command is disabled. However, it is automatically blocked\n   * by a high priority listener in order to prevent command execution.\n   *\n   * @event execute\n   */\n\n\t}]);\n\n\treturn Command;\n}();\n\nexports.default = Command;\n\n\n(0, _mix2.default)(Command, _observablemixin2.default);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-core/src/command.js\n// module id = 11\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @type {Function}\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n *  else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexports.default = isArray;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/isArray.js\n// module id = 12\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isArrayLike = require('./isArrayLike');\n\nvar _isArrayLike2 = _interopRequireDefault(_isArrayLike);\n\nvar _isObjectLike = require('./isObjectLike');\n\nvar _isObjectLike2 = _interopRequireDefault(_isObjectLike);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return (0, _isObjectLike2.default)(value) && (0, _isArrayLike2.default)(value);\n}\n\nexports.default = isArrayLikeObject;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/isArrayLikeObject.js\n// module id = 13\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _toFinite = require('./toFinite');\n\nvar _toFinite2 = _interopRequireDefault(_toFinite);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This function is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = (0, _toFinite2.default)(value),\n      remainder = result % 1;\n\n  return result === result ? remainder ? result - remainder : result : 0;\n}\n\nexports.default = toInteger;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/toInteger.js\n// module id = 14\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\nn\n/**\n * @module engine/model/batch\n */\n\nexports.register = register;\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * `Batch` instance groups document changes ({@link module:engine/model/delta/delta~Delta deltas}). All deltas grouped in a single `Batch`\n * can be reverted together, so you can think about `Batch` as of a single undo step. If you want to extend given undo step you\n * can call another method on the same `Batch` object. If you want to create a separate undo step you can create a new `Batch`.\n *\n * For example to create two separate undo steps you can call:\n *\n *\t\tdoc.batch().insert( firstPosition, 'foo' );\n *\t\tdoc.batch().insert( secondPosition, 'bar' );\n *\n * To create a single undo step:\n *\n *\t\tconst batch = doc.batch();\n *\t\tbatch.insert( firstPosition, 'foo' );\n *\t\tbatch.insert( secondPosition, 'bar' );\n *\n * Note that all document modification methods (insert, remove, split, etc.) are chainable so you can shorten code to:\n *\n *\t\tdoc.batch().insert( firstPosition, 'foo' ).insert( secondPosition, 'bar' );\n */\nvar Batch = function () {\n\t/**\n  * Creates `Batch` instance. Not recommended to use directly, use {@link module:engine/model/document~Document#batch} instead.\n  *\n  * @param {module:engine/model/document~Document} document Document which this Batch changes.\n  * @param {'transparent'|'default'} [type='default'] Type of the batch.\n  */\n\tfunction Batch(document) {\n\t\tvar type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n\n\t\t_classCallCheck(this, Batch);\n\n\t\t/**\n   * Document which this batch changes.\n   *\n   * @readonly\n   * @member {module:engine/model/document~Document} module:engine/model/batch~Batch#document\n   */\n\t\tthis.document = document;\n\n\t\t/**\n   * Array of deltas which compose this batch.\n   *\n   * @readonly\n   * @member {Array.<module:engine/model/delta/delta~Delta>} module:engine/model/batch~Batch#deltas\n   */\n\t\tthis.deltas = [];\n\n\t\t/**\n   * Type of the batch.\n   *\n   * Can be one of the following values:\n   * * `'default'` - all \"normal\" batches, most commonly used type.\n   * * `'transparent'` - batch that should be ignored by other features, i.e. initial batch or collaborative editing changes.\n   *\n   * @readonly\n   * @member {'transparent'|'default'} module:engine/model/batch~Batch#type\n   */\n\t\tthis.type = type;\n\t}\n\n\t/**\n  * Returns this batch base version, which is equal to the base version of first delta in the batch.\n  * If there are no deltas in the batch, it returns `null`.\n  *\n  * @readonly\n  * @type {Number|null}\n  */\n\n\n\t_createClass(Batch, [{\n\t\tkey: 'addDelta',\n\n\n\t\t/**\n   * Adds delta to the batch instance. All modification methods (insert, remove, split, etc.) use this method\n   * to add created deltas.\n   *\n   * @param {module:engine/model/delta/delta~Delta} delta Delta to add.\n   * @return {module:engine/model/delta/delta~Delta} Added delta.\n   */\n\t\tvalue: function addDelta(delta) {\n\t\t\tdelta.batch = this;\n\t\t\tthis.deltas.push(delta);\n\n\t\t\treturn delta;\n\t\t}\n\n\t\t/**\n   * Gets an iterable collection of operations.\n   *\n   * @returns {Iterable.<module:engine/model/operation/operation~Operation>}\n   */\n\n\t}, {\n\t\tkey: 'getOperations',\n\t\tvalue: regeneratorRuntime.mark(function getOperations() {\n\t\t\tvar _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, delta;\n\n\t\t\treturn regeneratorRuntime.wrap(function getOperations$(_context) {\n\t\t\t\twhile (1) {\n\t\t\t\t\tswitch (_context.prev = _context.next) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t_iteratorNormalCompletion = true;\n\t\t\t\t\t\t\t_didIteratorError = false;\n\t\t\t\t\t\t\t_iteratorError = undefined;\n\t\t\t\t\t\t\t_context.prev = 3;\n\t\t\t\t\t\t\t_iterator = this.deltas[Symbol.iterator]();\n\n\t\t\t\t\t\tcase 5:\n\t\t\t\t\t\t\tif (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n\t\t\t\t\t\t\t\t_context.next = 11;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tdelta = _step.value;\n\t\t\t\t\t\t\treturn _context.delegateYield(delta.operations, 't0', 8);\n\n\t\t\t\t\t\tcase 8:\n\t\t\t\t\t\t\t_iteratorNormalCompletion = true;\n\t\t\t\t\t\t\t_context.next = 5;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 11:\n\t\t\t\t\t\t\t_context.next = 17;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 13:\n\t\t\t\t\t\t\t_context.prev = 13;\n\t\t\t\t\t\t\t_context.t1 = _context['catch'](3);\n\t\t\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t\t\t_iteratorError = _context.t1;\n\n\t\t\t\t\t\tcase 17:\n\t\t\t\t\t\t\t_context.prev = 17;\n\t\t\t\t\t\t\t_context.prev = 18;\n\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase 20:\n\t\t\t\t\t\t\t_context.prev = 20;\n\n\t\t\t\t\t\t\tif (!_didIteratorError) {\n\t\t\t\t\t\t\t\t_context.next = 23;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthrow _iteratorError;\n\n\t\t\t\t\t\tcase 23:\n\t\t\t\t\t\t\treturn _context.finish(20);\n\n\t\t\t\t\t\tcase 24:\n\t\t\t\t\t\t\treturn _context.finish(17);\n\n\t\t\t\t\t\tcase 25:\n\t\t\t\t\t\tcase 'end':\n\t\t\t\t\t\t\treturn _context.stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, getOperations, this, [[3, 13, 17, 25], [18,, 20, 24]]);\n\t\t})\n\t}, {\n\t\tkey: 'baseVersion',\n\t\tget: function get() {\n\t\t\treturn this.deltas.length > 0 ? this.deltas[0].baseVersion : null;\n\t\t}\n\t}]);\n\n\treturn Batch;\n}();\n\n/**\n * Function to register batch methods. To make code scalable `Batch` do not have modification\n * methods built in. They can be registered using this method.\n *\n * This method checks if there is no naming collision and throws `batch-register-taken` if the method name\n * is already taken.\n *\n * Besides that no magic happens here, the method is added to the `Batch` class prototype.\n *\n * For example:\n *\n *\t\tBatch.register( 'insert', function( position, nodes ) {\n *\t\t\t// You can use a class inheriting from `Delta` if that class should handle OT in a special way.\n *\t\t\tconst delta = new Delta();\n *\n *\t\t\t// Add delta to the Batch instance. It is important to add a delta to the batch before applying any operation.\n *\t\t\tthis.addDelta( delta );\n *\n *\t\t\t// Create operations which should be components of this delta.\n *\t\t\tconst operation = new InsertOperation( position, nodes, this.document.version );\n *\n *\t\t\t// Add operation to the delta. It is important to add operation before applying it.\n *\t\t\tdelta.addOperation( operation );\n *\n *\t\t\t// Remember to apply every operation, no magic, you need to do it manually.\n *\t\t\tthis.document.applyOperation( operation );\n *\n *\t\t\t// Make this method chainable.\n *\t\t\treturn this;\n *\t\t} );\n *\n * @method module:engine/model/batch~Batch.register\n * @param {String} name Method name.\n * @param {Function} creator Method body.\n */\n\n\nexports.default = Batch;\nfunction register(name, creator) {\n\tif (Batch.prototype[name]) {\n\t\t/**\n   * This batch method name is already taken.\n   *\n   * @error batch-register-taken\n   * @param {String} name\n   */\n\t\tthrow new _ckeditorerror2.default('model-batch-register-taken: This batch method name is already taken.', { name: name });\n\t}\n\n\tBatch.prototype[name] = creator;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/batch.js\n// module id = 15\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */\n\n/**\n * @module engine/model/delta/deltafactory\n */\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nvar _operationfactory = require('../operation/operationfactory');\n\nvar _operationfactory2 = _interopRequireDefault(_operationfactory);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar deserializers = new Map();\n\n/**\n * A factory class for creating operations.\n *\n * Delta is a single, from the user action point of view, change in the editable document, like insert, split or\n * rename element. Delta is composed of operations, which are unit changes needed to be done to execute user action.\n *\n * Multiple deltas are grouped into a single {@link module:engine/model/batch~Batch}.\n */\n\nvar DeltaFactory = function () {\n\tfunction DeltaFactory() {\n\t\t_classCallCheck(this, DeltaFactory);\n\t}\n\n\t_createClass(DeltaFactory, null, [{\n\t\tkey: 'fromJSON',\n\n\t\t/**\n   * Creates InsertDelta from deserialized object, i.e. from parsed JSON string.\n   *\n   * @param {Object} json\n   * @param {module:engine/model/document~Document} doc Document on which this delta will be applied.\n   * @returns {module:engine/model/delta/insertdelta~InsertDelta}\n   */\n\t\tvalue: function fromJSON(json, doc) {\n\t\t\tif (!deserializers.has(json.__className)) {\n\t\t\t\t/**\n     * This delta has no defined deserializer.\n     *\n     * @error delta-fromjson-no-deserializer\n     * @param {String} name\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('delta-fromjson-no-deserializer: This delta has no defined deserializer', { name: json.__className });\n\t\t\t}\n\n\t\t\tvar Delta = deserializers.get(json.__className);\n\n\t\t\tvar delta = new Delta();\n\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = json.operations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar operation = _step.value;\n\n\t\t\t\t\tdelta.addOperation(_operationfactory2.default.fromJSON(operation, doc));\n\t\t\t\t}\n\n\t\t\t\t// Rewrite all other properties.\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var prop in json) {\n\t\t\t\tif (prop != '__className' && delta[prop] === undefined) {\n\t\t\t\t\tdelta[prop] = json[prop];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn delta;\n\t\t}\n\n\t\t/**\n   * Registers a class for delta factory.\n   *\n   * @param {Function} Delta A delta class to register.\n   */\n\n\t}, {\n\t\tkey: 'register',\n\t\tvalue: function register(Delta) {\n\t\t\tdeserializers.set(Delta.className, Delta);\n\t\t}\n\t}]);\n\n\treturn DeltaFactory;\n}();\n\nexports.default = DeltaFactory;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/delta/deltafactory.js\n// module id = 16\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);\n  return !!value && (type == 'object' || type == 'function');\n}\n\nexports.default = isObject;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/isObject.js\n// module id = 17\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array ? array.length : 0;\n  return length ? array[length - 1] : undefined;\n}\n\nexports.default = last;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/last.js\n// module id = 18\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /**\n                                                                                                                                                                                                                                                                               * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                               * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                               */\n\n/**\n * @module utils/observablemixin\n */\n\nvar _emittermixin = require('./emittermixin');\n\nvar _emittermixin2 = _interopRequireDefault(_emittermixin);\n\nvar _ckeditorerror = require('./ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nvar _extend = require('./lib/lodash/extend');\n\nvar _extend2 = _interopRequireDefault(_extend);\n\nvar _isObject = require('./lib/lodash/isObject');\n\nvar _isObject2 = _interopRequireDefault(_isObject);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar attributesSymbol = Symbol('attributes');\nvar boundObservablesSymbol = Symbol('boundObservables');\nvar boundAttributesSymbol = Symbol('boundAttributes');\n\n/**\n * Mixin that injects the \"observable attributes\" and data binding functionality.\n * Used mainly in the {@link module:ui/model~Model} class.\n *\n * @mixin ObservableMixin\n * @mixes module:utils/emittermixin~EmitterMixin\n * @implements module:utils/observablemixin~Observable\n */\nvar ObservableMixin = {\n\t/**\n  * Creates and sets the value of an observable attribute of this object. Such an attribute becomes a part\n  * of the state and is be observable.\n  *\n  * It accepts also a single object literal containing key/value pairs with attributes to be set.\n  *\n  * This method throws the observable-set-cannot-override error if the observable instance already\n  * have a property with a given attribute name. This prevents from mistakenly overriding existing\n  * properties and methods, but means that `foo.set( 'bar', 1 )` may be slightly slower than `foo.bar = 1`.\n  *\n  * @method #set\n  * @param {String} name The attributes name.\n  * @param {*} value The attributes value.\n  */\n\tset: function set(name, value) {\n\t\tvar _this = this;\n\n\t\t// If the first parameter is an Object, iterate over its properties.\n\t\tif ((0, _isObject2.default)(name)) {\n\t\t\tObject.keys(name).forEach(function (attr) {\n\t\t\t\t_this.set(attr, name[attr]);\n\t\t\t}, this);\n\n\t\t\treturn;\n\t\t}\n\n\t\tinitObservable(this);\n\n\t\tvar attributes = this[attributesSymbol];\n\n\t\tif (name in this && !attributes.has(name)) {\n\t\t\t/**\n    * Cannot override an existing property.\n    *\n    * This error is thrown when trying to {@link ~Observable#set set} an attribute with\n    * a name of an already existing property. For example:\n    *\n    *\t\tlet observable = new Model();\n    *\t\tobservable.property = 1;\n    *\t\tobservable.set( 'property', 2 );\t\t// throws\n    *\n    *\t\tobservable.set( 'attr', 1 );\n    *\t\tobservable.set( 'attr', 2 );\t\t\t// ok, because this is an existing attribute.\n    *\n    * @error observable-set-cannot-override\n    */\n\t\t\tthrow new _ckeditorerror2.default('observable-set-cannot-override: Cannot override an existing property.');\n\t\t}\n\n\t\tObject.defineProperty(this, name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\n\t\t\tget: function get() {\n\t\t\t\treturn attributes.get(name);\n\t\t\t},\n\t\t\tset: function set(value) {\n\t\t\t\tvar oldValue = attributes.get(name);\n\n\t\t\t\t// Allow undefined as an initial value like A.define( 'x', undefined ) (#132).\n\t\t\t\t// Note: When attributes map has no such own property, then its value is undefined.\n\t\t\t\tif (oldValue !== value || !attributes.has(name)) {\n\t\t\t\t\tattributes.set(name, value);\n\t\t\t\t\tthis.fire('change:' + name, name, value, oldValue);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis[name] = value;\n\t},\n\n\n\t/**\n  * Binds observable attributes to another objects implementing {@link ~ObservableMixin}\n  * interface (like {@link module:ui/model~Model}).\n  *\n  * Once bound, the observable will immediately share the current state of attributes\n  * of the observable it is bound to and react to the changes to these attributes\n  * in the future.\n  *\n  * **Note**: To release the binding use {@link module:utils/observablemixin~ObservableMixin#unbind}.\n  *\n  *\t\tA.bind( 'a' ).to( B );\n  *\t\tA.bind( 'a' ).to( B, 'b' );\n  *\t\tA.bind( 'a', 'b' ).to( B, 'c', 'd' );\n  *\t\tA.bind( 'a' ).to( B, 'b', C, 'd', ( b, d ) => b + d );\n  *\n  * @method #bind\n  * @param {...String} bindAttrs Observable attributes that will be bound to another observable(s).\n  * @returns {module:utils/observablemixin~BindChain}\n  */\n\tbind: function bind() {\n\t\tfor (var _len = arguments.length, bindAttrs = Array(_len), _key = 0; _key < _len; _key++) {\n\t\t\tbindAttrs[_key] = arguments[_key];\n\t\t}\n\n\t\tif (!bindAttrs.length || !isStringArray(bindAttrs)) {\n\t\t\t/**\n    * All attributes must be strings.\n    *\n    * @error observable-bind-wrong-attrs\n    */\n\t\t\tthrow new _ckeditorerror2.default('observable-bind-wrong-attrs: All attributes must be strings.');\n\t\t}\n\n\t\tif (new Set(bindAttrs).size !== bindAttrs.length) {\n\t\t\t/**\n    * Attributes must be unique.\n    *\n    * @error observable-bind-duplicate-attrs\n    */\n\t\t\tthrow new _ckeditorerror2.default('observable-bind-duplicate-attrs: Attributes must be unique.');\n\t\t}\n\n\t\tinitObservable(this);\n\n\t\tvar boundAttributes = this[boundAttributesSymbol];\n\n\t\tbindAttrs.forEach(function (attrName) {\n\t\t\tif (boundAttributes.has(attrName)) {\n\t\t\t\t/**\n     * Cannot bind the same attribute more that once.\n     *\n     * @error observable-bind-rebind\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('observable-bind-rebind: Cannot bind the same attribute more that once.');\n\t\t\t}\n\t\t});\n\n\t\tvar bindings = new Map();\n\n\t\t/**\n   * @typedef Binding\n   * @type Object\n   * @property {Array} attr Attribute which is bound.\n   * @property {Array} to Array of observable–attribute components of the binding (`{ observable: ..., attr: .. }`).\n   * @property {Array} callback A function which processes `to` components.\n   */\n\t\tbindAttrs.forEach(function (a) {\n\t\t\tvar binding = { attr: a, to: [] };\n\n\t\t\tboundAttributes.set(a, binding);\n\t\t\tbindings.set(a, binding);\n\t\t});\n\n\t\t/**\n   * @typedef BindChain\n   * @type Object\n   * @property {Function} to See {@link ~ObservableMixin#_bindTo}.\n   * @property {module:utils/observablemixin~Observable} _observable The observable which initializes the binding.\n   * @property {Array} _bindAttrs Array of `_observable` attributes to be bound.\n   * @property {Array} _to Array of `to()` observable–attributes (`{ observable: toObservable, attrs: ...toAttrs }`).\n   * @property {Map} _bindings Stores bindings to be kept in\n   *  {@link ~ObservableMixin#_boundAttributes}/{@link ~ObservableMixin#_boundObservables}\n   * initiated in this binding chain.\n   */\n\t\treturn {\n\t\t\tto: bindTo,\n\n\t\t\t_observable: this,\n\t\t\t_bindAttrs: bindAttrs,\n\t\t\t_to: [],\n\t\t\t_bindings: bindings\n\t\t};\n\t},\n\n\n\t/**\n  * Removes the binding created with {@link ~ObservableMixin#bind}.\n  *\n  *\t\tA.unbind( 'a' );\n  *\t\tA.unbind();\n  *\n  * @method #unbind\n  * @param {...String} [unbindAttrs] Observable attributes to be unbound. All the bindings will\n  * be released if no attributes provided.\n  */\n\tunbind: function unbind() {\n\t\tvar _this2 = this;\n\n\t\t// Nothing to do here if not inited yet.\n\t\tif (!(attributesSymbol in this)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar boundAttributes = this[boundAttributesSymbol];\n\t\tvar boundObservables = this[boundObservablesSymbol];\n\n\t\tfor (var _len2 = arguments.length, unbindAttrs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t\t\tunbindAttrs[_key2] = arguments[_key2];\n\t\t}\n\n\t\tif (unbindAttrs.length) {\n\t\t\tif (!isStringArray(unbindAttrs)) {\n\t\t\t\t/**\n     * Attributes must be strings.\n     *\n     * @error observable-unbind-wrong-attrs\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('observable-unbind-wrong-attrs: Attributes must be strings.');\n\t\t\t}\n\n\t\t\tunbindAttrs.forEach(function (attrName) {\n\t\t\t\tvar binding = boundAttributes.get(attrName);\n\t\t\t\tvar toObservable = void 0,\n\t\t\t\t    toAttr = void 0,\n\t\t\t\t    toAttrs = void 0,\n\t\t\t\t    toAttrBindings = void 0;\n\n\t\t\t\tbinding.to.forEach(function (to) {\n\t\t\t\t\t// TODO: ES6 destructuring.\n\t\t\t\t\ttoObservable = to[0];\n\t\t\t\t\ttoAttr = to[1];\n\t\t\t\t\ttoAttrs = boundObservables.get(toObservable);\n\t\t\t\t\ttoAttrBindings = toAttrs[toAttr];\n\n\t\t\t\t\ttoAttrBindings.delete(binding);\n\n\t\t\t\t\tif (!toAttrBindings.size) {\n\t\t\t\t\t\tdelete toAttrs[toAttr];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!Object.keys(toAttrs).length) {\n\t\t\t\t\t\tboundObservables.delete(toObservable);\n\t\t\t\t\t\t_this2.stopListening(toObservable, 'change');\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tboundAttributes.delete(attrName);\n\t\t\t});\n\t\t} else {\n\t\t\tboundObservables.forEach(function (bindings, boundObservable) {\n\t\t\t\t_this2.stopListening(boundObservable, 'change');\n\t\t\t});\n\n\t\t\tboundObservables.clear();\n\t\t\tboundAttributes.clear();\n\t\t}\n\t},\n\n\n\t/**\n  * Turns the given methods of this object into event-based ones. This means that the new method will fire an event\n  * (named after the method) and the original action will be plugged as a listener to that event.\n  *\n  * This is a very simplified method decoration. Itself it doesn't change the behavior of a method (expect adding the event),\n  * but it allows to modify it later on by listening to the method's event.\n  *\n  * For example, in order to cancel the method execution one can stop the event:\n  *\n  *\t\tclass Foo {\n  *\t\t\tconstructor() {\n  *\t\t\t\tthis.decorate( 'method' );\n  *\t\t\t}\n  *\n  *\t\t\tmethod() {\n  *\t\t\t\tconsole.log( 'called!' );\n  *\t\t\t}\n  *\t\t}\n  *\n  *\t\tconst foo = new Foo();\n  *\t\tfoo.on( 'method', ( evt ) => {\n  *\t\t\tevt.stop();\n  *\t\t}, { priority: 'high' } );\n  *\n  *\t\tfoo.method(); // Nothing is logged.\n  *\n  *\n  * Note: we used a high priority listener here to execute this callback before the one which\n  * calls the orignal method (which used the default priority).\n  *\n  * It's also possible to change the return value:\n  *\n  *\t\tfoo.on( 'method', ( evt ) => {\n  *\t\t\tevt.return = 'Foo!';\n  *\t\t} );\n  *\n  *\t\tfoo.method(); // -> 'Foo'\n  *\n  * Finally, it's possible to access and modify the parameters:\n  *\n  *\t\tmethod( a, b ) {\n  *\t\t\tconsole.log( `${ a }, ${ b }`  );\n  *\t\t}\n  *\n  *\t\t// ...\n  *\n  *\t\tfoo.on( 'method', ( evt, args ) => {\n  *\t\t\targs[ 0 ] = 3;\n  *\n  *\t\t\tconsole.log( args[ 1 ] ); // -> 2\n  *\t\t}, { priority: 'high' } );\n  *\n  *\t\tfoo.method( 1, 2 ); // -> '3, 2'\n  *\n  * @method #decorate\n  * @param {String} methodName Name of the method to decorate.\n  */\n\tdecorate: function decorate(methodName) {\n\t\tvar _this3 = this;\n\n\t\tvar originalMethod = this[methodName];\n\n\t\tif (!originalMethod) {\n\t\t\t/**\n    * Cannot decorate an undefined method.\n    *\n    * @error observablemixin-cannot-decorate-undefined\n    * @param {Object} object The object which method should be decorated.\n    * @param {String} methodName Name of the method which does not exist.\n    */\n\t\t\tthrow new _ckeditorerror2.default('observablemixin-cannot-decorate-undefined: Cannot decorate an undefined method.', { object: this, methodName: methodName });\n\t\t}\n\n\t\tthis.on(methodName, function (evt, args) {\n\t\t\tevt.return = originalMethod.apply(_this3, args);\n\t\t});\n\n\t\tthis[methodName] = function () {\n\t\t\tfor (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n\t\t\t\targs[_key3] = arguments[_key3];\n\t\t\t}\n\n\t\t\treturn this.fire(methodName, args);\n\t\t};\n\t}\n\n\t/**\n  * @private\n  * @member ~ObservableMixin#_boundAttributes\n  */\n\n\t/**\n  * @private\n  * @member ~ObservableMixin#_boundObservables\n  */\n\n\t/**\n  * @private\n  * @member ~ObservableMixin#_bindTo\n  */\n\n};\n\nexports.default = ObservableMixin;\n\n// Init symbol properties needed to for the observable mechanism to work.\n//\n// @private\n// @param {module:utils/observablemixin~ObservableMixin} observable\n\nfunction initObservable(observable) {\n\t// Do nothing if already inited.\n\tif (attributesSymbol in observable) {\n\t\treturn;\n\t}\n\n\t// The internal hash containing the observable's state.\n\t//\n\t// @private\n\t// @type {Map}\n\tObject.defineProperty(observable, attributesSymbol, {\n\t\tvalue: new Map()\n\t});\n\n\t// Map containing bindings to external observables. It shares the binding objects\n\t// (`{ observable: A, attr: 'a', to: ... }`) with {@link module:utils/observablemixin~ObservableMixin#_boundAttributes} and\n\t// it is used to observe external observables to update own attributes accordingly.\n\t// See {@link module:utils/observablemixin~ObservableMixin#bind}.\n\t//\n\t//\t\tA.bind( 'a', 'b', 'c' ).to( B, 'x', 'y', 'x' );\n\t//\t\tconsole.log( A._boundObservables );\n\t//\n\t//\t\t\tMap( {\n\t//\t\t\t\tB: {\n\t//\t\t\t\t\tx: Set( [\n\t//\t\t\t\t\t\t{ observable: A, attr: 'a', to: [ [ B, 'x' ] ] },\n\t//\t\t\t\t\t\t{ observable: A, attr: 'c', to: [ [ B, 'x' ] ] }\n\t//\t\t\t\t\t] ),\n\t//\t\t\t\t\ty: Set( [\n\t//\t\t\t\t\t\t{ observable: A, attr: 'b', to: [ [ B, 'y' ] ] },\n\t//\t\t\t\t\t] )\n\t//\t\t\t\t}\n\t//\t\t\t} )\n\t//\n\t//\t\tA.bind( 'd' ).to( B, 'z' ).to( C, 'w' ).as( callback );\n\t//\t\tconsole.log( A._boundObservables );\n\t//\n\t//\t\t\tMap( {\n\t//\t\t\t\tB: {\n\t//\t\t\t\t\tx: Set( [\n\t//\t\t\t\t\t\t{ observable: A, attr: 'a', to: [ [ B, 'x' ] ] },\n\t//\t\t\t\t\t\t{ observable: A, attr: 'c', to: [ [ B, 'x' ] ] }\n\t//\t\t\t\t\t] ),\n\t//\t\t\t\t\ty: Set( [\n\t//\t\t\t\t\t\t{ observable: A, attr: 'b', to: [ [ B, 'y' ] ] },\n\t//\t\t\t\t\t] ),\n\t//\t\t\t\t\tz: Set( [\n\t//\t\t\t\t\t\t{ observable: A, attr: 'd', to: [ [ B, 'z' ], [ C, 'w' ] ], callback: callback }\n\t//\t\t\t\t\t] )\n\t//\t\t\t\t},\n\t//\t\t\t\tC: {\n\t//\t\t\t\t\tw: Set( [\n\t//\t\t\t\t\t\t{ observable: A, attr: 'd', to: [ [ B, 'z' ], [ C, 'w' ] ], callback: callback }\n\t//\t\t\t\t\t] )\n\t//\t\t\t\t}\n\t//\t\t\t} )\n\t//\n\t// @private\n\t// @type {Map}\n\tObject.defineProperty(observable, boundObservablesSymbol, {\n\t\tvalue: new Map()\n\t});\n\n\t// Object that stores which attributes of this observable are bound and how. It shares\n\t// the binding objects (`{ observable: A, attr: 'a', to: ... }`) with {@link utils.ObservableMixin#_boundObservables}.\n\t// This data structure is a reverse of {@link utils.ObservableMixin#_boundObservables} and it is helpful for\n\t// {@link utils.ObservableMixin#unbind}.\n\t//\n\t// See {@link utils.ObservableMixin#bind}.\n\t//\n\t//\t\tA.bind( 'a', 'b', 'c' ).to( B, 'x', 'y', 'x' );\n\t//\t\tconsole.log( A._boundAttributes );\n\t//\n\t//\t\t\tMap( {\n\t//\t\t\t\ta: { observable: A, attr: 'a', to: [ [ B, 'x' ] ] },\n\t//\t\t\t\tb: { observable: A, attr: 'b', to: [ [ B, 'y' ] ] },\n\t//\t\t\t\tc: { observable: A, attr: 'c', to: [ [ B, 'x' ] ] }\n\t//\t\t\t} )\n\t//\n\t//\t\tA.bind( 'd' ).to( B, 'z' ).to( C, 'w' ).as( callback );\n\t//\t\tconsole.log( A._boundAttributes );\n\t//\n\t//\t\t\tMap( {\n\t//\t\t\t\ta: { observable: A, attr: 'a', to: [ [ B, 'x' ] ] },\n\t//\t\t\t\tb: { observable: A, attr: 'b', to: [ [ B, 'y' ] ] },\n\t//\t\t\t\tc: { observable: A, attr: 'c', to: [ [ B, 'x' ] ] },\n\t//\t\t\t\td: { observable: A, attr: 'd', to: [ [ B, 'z' ], [ C, 'w' ] ], callback: callback }\n\t//\t\t\t} )\n\t//\n\t// @private\n\t// @type {Map}\n\tObject.defineProperty(observable, boundAttributesSymbol, {\n\t\tvalue: new Map()\n\t});\n}\n\n// A chaining for {@link module:utils/observablemixin~ObservableMixin#bind} providing `.to()` interface.\n//\n// @private\n// @param {...[Observable|String|Function]} args Arguments of the `.to( args )` binding.\nfunction bindTo() {\n\tvar _this4 = this;\n\n\tvar parsedArgs = parseBindToArgs.apply(undefined, arguments);\n\tvar bindingsKeys = Array.from(this._bindings.keys());\n\tvar numberOfBindings = bindingsKeys.length;\n\n\t// Eliminate A.bind( 'x' ).to( B, C )\n\tif (!parsedArgs.callback && parsedArgs.to.length > 1) {\n\t\t/**\n   * Binding multiple observables only possible with callback.\n   *\n   * @error observable-bind-no-callback\n   */\n\t\tthrow new _ckeditorerror2.default('observable-bind-to-no-callback: Binding multiple observables only possible with callback.');\n\t}\n\n\t// Eliminate A.bind( 'x', 'y' ).to( B, callback )\n\tif (numberOfBindings > 1 && parsedArgs.callback) {\n\t\t/**\n   * Cannot bind multiple attributes and use a callback in one binding.\n   *\n   * @error observable-bind-to-extra-callback\n   */\n\t\tthrow new _ckeditorerror2.default('observable-bind-to-extra-callback: Cannot bind multiple attributes and use a callback in one binding.');\n\t}\n\n\tparsedArgs.to.forEach(function (to) {\n\t\t// Eliminate A.bind( 'x', 'y' ).to( B, 'a' )\n\t\tif (to.attrs.length && to.attrs.length !== numberOfBindings) {\n\t\t\t/**\n    * The number of attributes must match.\n    *\n    * @error observable-bind-to-attrs-length\n    */\n\t\t\tthrow new _ckeditorerror2.default('observable-bind-to-attrs-length: The number of attributes must match.');\n\t\t}\n\n\t\t// When no to.attrs specified, observing source attributes instead i.e.\n\t\t// A.bind( 'x', 'y' ).to( B ) -> Observe B.x and B.y\n\t\tif (!to.attrs.length) {\n\t\t\tto.attrs = _this4._bindAttrs;\n\t\t}\n\t});\n\n\tthis._to = parsedArgs.to;\n\n\t// Fill {@link BindChain#_bindings} with callback. When the callback is set there's only one binding.\n\tif (parsedArgs.callback) {\n\t\tthis._bindings.get(bindingsKeys[0]).callback = parsedArgs.callback;\n\t}\n\n\tattachBindToListeners(this._observable, this._to);\n\n\t// Update observable._boundAttributes and observable._boundObservables.\n\tupdateBindToBound(this);\n\n\t// Set initial values of bound attributes.\n\tthis._bindAttrs.forEach(function (attrName) {\n\t\tupdateBoundObservableAttr(_this4._observable, attrName);\n\t});\n}\n\n// Check if all entries of the array are of `String` type.\n//\n// @private\n// @param {Array} arr An array to be checked.\n// @returns {Boolean}\nfunction isStringArray(arr) {\n\treturn arr.every(function (a) {\n\t\treturn typeof a == 'string';\n\t});\n}\n\n// Parses and validates {@link Observable#bind}`.to( args )` arguments and returns\n// an object with a parsed structure. For example\n//\n//\t\tA.bind( 'x' ).to( B, 'a', C, 'b', call );\n//\n// becomes\n//\n//\t\t{\n//\t\t\tto: [\n//\t\t\t\t{ observable: B, attrs: [ 'a' ] },\n//\t\t\t\t{ observable: C, attrs: [ 'b' ] },\n//\t\t\t],\n//\t\t\tcallback: call\n// \t\t}\n//\n// @private\n// @param {...*} args Arguments of {@link Observable#bind}`.to( args )`.\n// @returns {Object}\nfunction parseBindToArgs() {\n\tfor (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n\t\targs[_key4] = arguments[_key4];\n\t}\n\n\t// Eliminate A.bind( 'x' ).to()\n\tif (!args.length) {\n\t\t/**\n   * Invalid argument syntax in `to()`.\n   *\n   * @error observable-bind-to-parse-error\n   */\n\t\tthrow new _ckeditorerror2.default('observable-bind-to-parse-error: Invalid argument syntax in `to()`.');\n\t}\n\n\tvar parsed = { to: [] };\n\tvar lastObservable = void 0;\n\n\tif (typeof args[args.length - 1] == 'function') {\n\t\tparsed.callback = args.pop();\n\t}\n\n\targs.forEach(function (a) {\n\t\tif (typeof a == 'string') {\n\t\t\tlastObservable.attrs.push(a);\n\t\t} else if ((typeof a === 'undefined' ? 'undefined' : _typeof(a)) == 'object') {\n\t\t\tlastObservable = { observable: a, attrs: [] };\n\t\t\tparsed.to.push(lastObservable);\n\t\t} else {\n\t\t\tthrow new _ckeditorerror2.default('observable-bind-to-parse-error: Invalid argument syntax in `to()`.');\n\t\t}\n\t});\n\n\treturn parsed;\n}\n\n// Synchronizes {@link module:utils/observablemixin#_boundObservables} with {@link Binding}.\n//\n// @private\n// @param {Binding} binding A binding to store in {@link Observable#_boundObservables}.\n// @param {Observable} toObservable A observable, which is a new component of `binding`.\n// @param {String} toAttrName A name of `toObservable`'s attribute, a new component of the `binding`.\nfunction updateBoundObservables(observable, binding, toObservable, toAttrName) {\n\tvar boundObservables = observable[boundObservablesSymbol];\n\tvar bindingsToObservable = boundObservables.get(toObservable);\n\tvar bindings = bindingsToObservable || {};\n\n\tif (!bindings[toAttrName]) {\n\t\tbindings[toAttrName] = new Set();\n\t}\n\n\t// Pass the binding to a corresponding Set in `observable._boundObservables`.\n\tbindings[toAttrName].add(binding);\n\n\tif (!bindingsToObservable) {\n\t\tboundObservables.set(toObservable, bindings);\n\t}\n}\n\n// Synchronizes {@link Observable#_boundAttributes} and {@link Observable#_boundObservables}\n// with {@link BindChain}.\n//\n// Assuming the following binding being created\n//\n// \t\tA.bind( 'a', 'b' ).to( B, 'x', 'y' );\n//\n// the following bindings were initialized by {@link Observable#bind} in {@link BindChain#_bindings}:\n//\n// \t\t{\n// \t\t\ta: { observable: A, attr: 'a', to: [] },\n// \t\t\tb: { observable: A, attr: 'b', to: [] },\n// \t\t}\n//\n// Iterate over all bindings in this chain and fill their `to` properties with\n// corresponding to( ... ) arguments (components of the binding), so\n//\n// \t\t{\n// \t\t\ta: { observable: A, attr: 'a', to: [ B, 'x' ] },\n// \t\t\tb: { observable: A, attr: 'b', to: [ B, 'y' ] },\n// \t\t}\n//\n// Then update the structure of {@link Observable#_boundObservables} with updated\n// binding, so it becomes:\n//\n// \t\tMap( {\n// \t\t\tB: {\n// \t\t\t\tx: Set( [\n// \t\t\t\t\t{ observable: A, attr: 'a', to: [ [ B, 'x' ] ] }\n// \t\t\t\t] ),\n// \t\t\t\ty: Set( [\n// \t\t\t\t\t{ observable: A, attr: 'b', to: [ [ B, 'y' ] ] },\n// \t\t\t\t] )\n//\t\t\t}\n// \t\t} )\n//\n// @private\n// @param {BindChain} chain The binding initialized by {@link Observable#bind}.\nfunction updateBindToBound(chain) {\n\tvar toAttr = void 0;\n\n\tchain._bindings.forEach(function (binding, attrName) {\n\t\t// Note: For a binding without a callback, this will run only once\n\t\t// like in A.bind( 'x', 'y' ).to( B, 'a', 'b' )\n\t\t// TODO: ES6 destructuring.\n\t\tchain._to.forEach(function (to) {\n\t\t\ttoAttr = to.attrs[binding.callback ? 0 : chain._bindAttrs.indexOf(attrName)];\n\n\t\t\tbinding.to.push([to.observable, toAttr]);\n\t\t\tupdateBoundObservables(chain._observable, binding, to.observable, toAttr);\n\t\t});\n\t});\n}\n\n// Updates an attribute of a {@link Observable} with a value\n// determined by an entry in {@link Observable#_boundAttributes}.\n//\n// @private\n// @param {Observable} observable A observable which attribute is to be updated.\n// @param {String} attrName An attribute to be updated.\nfunction updateBoundObservableAttr(observable, attrName) {\n\tvar boundAttributes = observable[boundAttributesSymbol];\n\tvar binding = boundAttributes.get(attrName);\n\tvar attrValue = void 0;\n\n\t// When a binding with callback is created like\n\t//\n\t// \t\tA.bind( 'a' ).to( B, 'b', C, 'c', callback );\n\t//\n\t// collect B.b and C.c, then pass them to callback to set A.a.\n\tif (binding.callback) {\n\t\tattrValue = binding.callback.apply(observable, binding.to.map(function (to) {\n\t\t\treturn to[0][to[1]];\n\t\t}));\n\t} else {\n\t\tattrValue = binding.to[0];\n\t\tattrValue = attrValue[0][attrValue[1]];\n\t}\n\n\tif (observable.hasOwnProperty(attrName)) {\n\t\tobservable[attrName] = attrValue;\n\t} else {\n\t\tobservable.set(attrName, attrValue);\n\t}\n}\n\n// Starts listening to changes in {@link BindChain._to} observables to update\n// {@link BindChain._observable} {@link BindChain._bindAttrs}. Also sets the\n// initial state of {@link BindChain._observable}.\n//\n// @private\n// @param {BindChain} chain The chain initialized by {@link Observable#bind}.\nfunction attachBindToListeners(observable, toBindings) {\n\ttoBindings.forEach(function (to) {\n\t\tvar boundObservables = observable[boundObservablesSymbol];\n\t\tvar bindings = void 0;\n\n\t\t// If there's already a chain between the observables (`observable` listens to\n\t\t// `to.observable`), there's no need to create another `change` event listener.\n\t\tif (!boundObservables.get(to.observable)) {\n\t\t\tobservable.listenTo(to.observable, 'change', function (evt, attrName) {\n\t\t\t\tbindings = boundObservables.get(to.observable)[attrName];\n\n\t\t\t\t// Note: to.observable will fire for any attribute change, react\n\t\t\t\t// to changes of attributes which are bound only.\n\t\t\t\tif (bindings) {\n\t\t\t\t\tbindings.forEach(function (binding) {\n\t\t\t\t\t\tupdateBoundObservableAttr(observable, binding.attr);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n\n(0, _extend2.default)(ObservableMixin, _emittermixin2.default);\n\n/**\n * Fired when an attribute changed value.\n *\n * @event module:utils/observablemixin~ObservableMixin#change:{attribute}\n * @param {String} name The attribute name.\n * @param {*} value The new attribute value.\n * @param {*} oldValue The previous attribute value.\n */\n\n/**\n * Interface representing classes which mix in {@link module:utils/observablemixin~ObservableMixin}.\n *\n * @interface Observable\n */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/observablemixin.js\n// module id = 19\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * For licensing, see LICENSE.md.\nn\n/**\n * @module engine/model/delta/delta\n */\n\nvar _clone = require('@ckeditor/ckeditor5-utils/src/lib/lodash/clone');\n\nvar _clone2 = _interopRequireDefault(_clone);\n\nvar _deltafactory = require('./deltafactory');\n\nvar _deltafactory2 = _interopRequireDefault(_deltafactory);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Base class for all deltas.\n *\n * Delta is a single, from the user action point of view, change in the editable document, like insert, split or\n * rename element. Delta is composed of operations, which are unit changes needed to be done to execute user action.\n *\n * Multiple deltas are grouped into a single {@link module:engine/model/batch~Batch}.\n */\nvar Delta = function () {\n\t/**\n  * Creates a delta instance.\n  */\n\tfunction Delta() {\n\t\t_classCallCheck(this, Delta);\n\n\t\t/**\n   * {@link module:engine/model/batch~Batch} which delta is a part of. This property is null by default and set by the\n   * {@link module:engine/model/batch~Batch#addDelta} method.\n   *\n   * @readonly\n   * @member {module:engine/model/batch~Batch} module:engine/model/delta/delta~Delta#batch\n   */\n\t\tthis.batch = null;\n\n\t\t/**\n   * Array of operations which compose delta.\n   *\n   * @readonly\n   * @member {module:engine/model/operation/operation~Operation[]} module:engine/model/delta/delta~Delta#operations\n   */\n\t\tthis.operations = [];\n\t}\n\n\t/**\n  * Returns delta base version which is equal to the base version of the first operation in delta. If there\n  * are no operations in delta, returns `null`.\n  *\n  * @see module:engine/model/document~Document\n  * @type {Number|null}\n  */\n\n\n\t_createClass(Delta, [{\n\t\tkey: 'addOperation',\n\n\n\t\t/**\n   * Delta type.\n   *\n   * @readonly\n   * @member {String} #type\n   */\n\n\t\t/**\n   * Add operation to the delta.\n   *\n   * @param {module:engine/model/operation/operation~Operation} operation Operation instance.\n   */\n\t\tvalue: function addOperation(operation) {\n\t\t\toperation.delta = this;\n\t\t\tthis.operations.push(operation);\n\n\t\t\treturn operation;\n\t\t}\n\n\t\t/**\n   * Creates and returns a delta that has the same parameters as this delta.\n   *\n   * @returns {module:engine/model/delta/delta~Delta} Clone of this delta.\n   */\n\n\t}, {\n\t\tkey: 'clone',\n\t\tvalue: function clone() {\n\t\t\tvar delta = new this.constructor();\n\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = this.operations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar op = _step.value;\n\n\t\t\t\t\tdelta.addOperation(op.clone());\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn delta;\n\t\t}\n\n\t\t/**\n   * Creates and returns a reverse delta. Reverse delta when executed right after the original delta will bring back\n   * tree model state to the point before the original delta execution. In other words, it reverses changes done\n   * by the original delta.\n   *\n   * Keep in mind that tree model state may change since executing the original delta, so reverse delta may be \"outdated\".\n   * In that case you will need to {@link module:engine/model/delta/transform~transform} it by all deltas that were executed after\n   * the original delta.\n   *\n   * @returns {module:engine/model/delta/delta~Delta} Reversed delta.\n   */\n\n\t}, {\n\t\tkey: 'getReversed',\n\t\tvalue: function getReversed() {\n\t\t\tvar delta = new this._reverseDeltaClass();\n\n\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\tvar _didIteratorError2 = false;\n\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator2 = this.operations[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\tvar op = _step2.value;\n\n\t\t\t\t\tdelta.addOperation(op.getReversed());\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t_iteratorError2 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdelta.operations.reverse();\n\n\t\t\tfor (var i = 0; i < delta.operations.length; i++) {\n\t\t\t\tdelta.operations[i].baseVersion = this.operations[this.operations.length - 1].baseVersion + i + 1;\n\t\t\t}\n\n\t\t\treturn delta;\n\t\t}\n\n\t\t/**\n   * Custom toJSON method to make deltas serializable.\n   *\n   * @returns {Object} Clone of this delta with added class name.\n   */\n\n\t}, {\n\t\tkey: 'toJSON',\n\t\tvalue: function toJSON() {\n\t\t\tvar json = (0, _clone2.default)(this);\n\n\t\t\tjson.__className = this.constructor.className;\n\n\t\t\t// Remove parent batch to avoid circular dependencies.\n\t\t\tdelete json.batch;\n\n\t\t\treturn json;\n\t\t}\n\n\t\t/**\n   * Delta class name. Used by {@link #toJSON} method for serialization and\n   * {@link module:engine/model/delta/deltafactory~DeltaFactory.fromJSON} during deserialization.\n   *\n   * @type {String}\n   * @readonly\n   */\n\n\t}, {\n\t\tkey: 'baseVersion',\n\t\tget: function get() {\n\t\t\tif (this.operations.length > 0) {\n\t\t\t\treturn this.operations[0].baseVersion;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n   * @param {Number} baseVersion\n   */\n\t\t,\n\t\tset: function set(baseVersion) {\n\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\tvar _didIteratorError3 = false;\n\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator3 = this.operations[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\tvar operation = _step3.value;\n\n\t\t\t\t\toperation.baseVersion = baseVersion++;\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t_iteratorError3 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * A class that will be used when creating reversed delta.\n   *\n   * @private\n   * @type {Function}\n   */\n\n\t}, {\n\t\tkey: '_reverseDeltaClass',\n\t\tget: function get() {\n\t\t\treturn Delta;\n\t\t}\n\t}], [{\n\t\tkey: 'className',\n\t\tget: function get() {\n\t\t\treturn 'engine.model.delta.Delta';\n\t\t}\n\t}]);\n\n\treturn Delta;\n}();\n\nexports.default = Delta;\n\n\n_deltafactory2.default.register(Delta);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/delta/delta.js\n// module id = 20\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.insert = insert;\nexports.remove = remove;\nexports.move = move;\nexports.setAttribute = setAttribute;\nexports.removeAttribute = removeAttribute;\nexports.normalizeNodes = normalizeNodes;\n\nvar _node = require('./node');\n\nvar _node2 = _interopRequireDefault(_node);\n\nvar _text = require('./text');\n\nvar _text2 = _interopRequireDefault(_text);\n\nvar _textproxy = require('./textproxy');\n\nvar _textproxy2 = _interopRequireDefault(_textproxy);\n\nvar _range = require('./range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _documentfragment = require('./documentfragment');\n\nvar _documentfragment2 = _interopRequireDefault(_documentfragment);\n\nvar _nodelist = require('./nodelist');\n\nvar _nodelist2 = _interopRequireDefault(_nodelist);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Contains functions used for composing model tree, grouped together under \"model writer\" name. Those functions\n * are built on top of {@link module:engine/model/node~Node node}, and it's child classes', APIs.\n *\n * Model writer API has multiple advantages and it is highly recommended to use it when changing model tree and nodes:\n * * model writer API {@link module:engine/model/writer~writer.normalizeNodes normalizes inserted nodes}, which means that you can insert\n * not only {@link module:engine/model/node~Node nodes}, but also `String`s, {@link module:engine/model/textproxy~TextProxy text proxies}\n * and\n * {@link module:engine/model/documentfragment~DocumentFragment document fragments},\n * * model writer API operates on {@link module:engine/model/position~Position positions}, which means that you have\n * better control over manipulating model tree as positions operate on offsets rather than indexes,\n * * model writer API automatically merges {@link module:engine/model/text~Text text nodes} with same attributes, which means\n * lower memory usage and better efficiency.\n *\n * @namespace writer\n */\nvar writer = {\n\tinsert: insert,\n\tremove: remove,\n\tmove: move,\n\tsetAttribute: setAttribute,\n\tremoveAttribute: removeAttribute,\n\tnormalizeNodes: normalizeNodes\n}; /**\n    * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n    * For licensing, see LICENSE.md.\n    */\n\n/**\n * @module engine/model/writer\n */\n\nexports.default = writer;\n\n/**\n * Inserts given nodes at given position.\n *\n * @function module:engine/model/writer~writer.insert\n * @param {module:engine/model/position~Position} position Position at which nodes should be inserted.\n * @param {module:engine/model/node~NodeSet} nodes Nodes to insert.\n * @returns {module:engine/model/range~Range} Range spanning over inserted elements.\n */\n\nfunction insert(position, nodes) {\n\tnodes = normalizeNodes(nodes);\n\n\t// We have to count offset before inserting nodes because they can get merged and we would get wrong offsets.\n\tvar offset = nodes.reduce(function (sum, node) {\n\t\treturn sum + node.offsetSize;\n\t}, 0);\n\tvar parent = position.parent;\n\n\t// Insertion might be in a text node, we should split it if that's the case.\n\t_splitNodeAtPosition(position);\n\tvar index = position.index;\n\n\t// Insert nodes at given index. After splitting we have a proper index and insertion is between nodes,\n\t// using basic `Element` API.\n\tparent.insertChildren(index, nodes);\n\n\t// Merge text nodes, if possible. Merging is needed only at points where inserted nodes \"touch\" \"old\" nodes.\n\t_mergeNodesAtIndex(parent, index + nodes.length);\n\t_mergeNodesAtIndex(parent, index);\n\n\treturn new _range2.default(position, position.getShiftedBy(offset));\n}\n\n/**\n * Removed nodes in given range. Only {@link module:engine/model/range~Range#isFlat flat} ranges are accepted.\n *\n * @function module:engine/model/writer~writer.remove\n * @param {module:engine/model/range~Range} range Range containing nodes to remove.\n * @returns {Array.<module:engine/model/node~Node>}\n */\nfunction remove(range) {\n\tif (!range.isFlat) {\n\t\t/**\n   * Trying to remove a range that starts and ends in different element.\n   *\n   * @error model-writer-remove-range-not-flat\n   */\n\t\tthrow new _ckeditorerror2.default('model-writer-remove-range-not-flat: ' + 'Trying to remove a range that starts and ends in different element.');\n\t}\n\n\tvar parent = range.start.parent;\n\n\t// Range may be inside text nodes, we have to split them if that's the case.\n\t_splitNodeAtPosition(range.start);\n\t_splitNodeAtPosition(range.end);\n\n\t// Remove the text nodes using basic `Element` API.\n\tvar removed = parent.removeChildren(range.start.index, range.end.index - range.start.index);\n\n\t// Merge text nodes, if possible. After some nodes were removed, node before and after removed range will be\n\t// touching at the position equal to the removed range beginning. We check merging possibility there.\n\t_mergeNodesAtIndex(parent, range.start.index);\n\n\treturn removed;\n}\n\n/**\n * Moves nodes in given range to given target position. Only {@link module:engine/model/range~Range#isFlat flat} ranges are accepted.\n *\n * @param {module:engine/model/range~Range} sourceRange Range containing nodes to move.\n * @param {module:engine/model/position~Position} targetPosition Position to which nodes should be moved.\n * @returns {module:engine/model/range~Range} Range containing moved nodes.\n */\nfunction move(sourceRange, targetPosition) {\n\tif (!sourceRange.isFlat) {\n\t\t/**\n   * Trying to move a range that starts and ends in different element.\n   *\n   * @error model-writer-move-range-not-flat\n   */\n\t\tthrow new _ckeditorerror2.default('model-writer-move-range-not-flat: ' + 'Trying to move a range that starts and ends in different element.');\n\t}\n\n\tvar nodes = this.remove(sourceRange);\n\n\t// We have to fix `targetPosition` because model changed after nodes from `sourceRange` got removed and\n\t// that change might have an impact on `targetPosition`.\n\ttargetPosition = targetPosition._getTransformedByDeletion(sourceRange.start, sourceRange.end.offset - sourceRange.start.offset);\n\n\treturn this.insert(targetPosition, nodes);\n}\n\n/**\n * Sets given attribute on nodes in given range.\n *\n * @param {module:engine/model/range~Range} range Range containing nodes that should have the attribute set.\n * @param {String} key Key of attribute to set.\n * @param {*} value Attribute value.\n */\nfunction setAttribute(range, key, value) {\n\t// Range might start or end in text nodes, so we have to split them.\n\t_splitNodeAtPosition(range.start);\n\t_splitNodeAtPosition(range.end);\n\n\t// Iterate over all items in the range.\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = range.getItems()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar item = _step.value;\n\n\t\t\t// Iterator will return `TextProxy` instances but we know that those text proxies will\n\t\t\t// always represent full text nodes (this is guaranteed thanks to splitting we did before).\n\t\t\t// So, we can operate on those text proxies' text nodes.\n\t\t\tvar node = item.is('textProxy') ? item.textNode : item;\n\n\t\t\tif (value !== null) {\n\t\t\t\tnode.setAttribute(key, value);\n\t\t\t} else {\n\t\t\t\tnode.removeAttribute(key);\n\t\t\t}\n\n\t\t\t// After attributes changing it may happen that some text nodes can be merged. Try to merge with previous node.\n\t\t\t_mergeNodesAtIndex(node.parent, node.index);\n\t\t}\n\n\t\t// Try to merge last changed node with it's previous sibling (not covered by the loop above).\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n\n\t_mergeNodesAtIndex(range.end.parent, range.end.index);\n}\n\n/**\n * Removes given attribute from nodes in given range.\n *\n * @param {module:engine/model/range~Range} range Range containing nodes that should have the attribute removed.\n * @param {String} key Key of attribute to remove.\n */\nfunction removeAttribute(range, key) {\n\tthis.setAttribute(range, key, null);\n}\n\n/**\n * Normalizes given object or an array of objects to an array of {@link module:engine/model/node~Node nodes}. See\n * {@link module:engine/model/node~NodeSet NodeSet} for details on how normalization is performed.\n *\n * @param {module:engine/model/node~NodeSet} nodes Objects to normalize.\n * @returns {Array.<module:engine/model/node~Node>} Normalized nodes.\n */\nfunction normalizeNodes(nodes) {\n\tvar normalized = [];\n\n\tif (!(nodes instanceof Array)) {\n\t\tnodes = [nodes];\n\t}\n\n\t// Convert instances of classes other than Node.\n\tfor (var i = 0; i < nodes.length; i++) {\n\t\tif (typeof nodes[i] == 'string') {\n\t\t\tnormalized.push(new _text2.default(nodes[i]));\n\t\t} else if (nodes[i] instanceof _textproxy2.default) {\n\t\t\tnormalized.push(new _text2.default(nodes[i].data, nodes[i].getAttributes()));\n\t\t} else if (nodes[i] instanceof _documentfragment2.default || nodes[i] instanceof _nodelist2.default) {\n\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\tvar _didIteratorError2 = false;\n\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator2 = nodes[i][Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\tvar child = _step2.value;\n\n\t\t\t\t\tnormalized.push(child);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t_iteratorError2 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (nodes[i] instanceof _node2.default) {\n\t\t\tnormalized.push(nodes[i]);\n\t\t}\n\t\t// Skip unrecognized type.\n\t}\n\n\t// Merge text nodes.\n\tfor (var _i = 1; _i < normalized.length; _i++) {\n\t\tvar node = normalized[_i];\n\t\tvar prev = normalized[_i - 1];\n\n\t\tif (node instanceof _text2.default && prev instanceof _text2.default && _haveSameAttributes(node, prev)) {\n\t\t\t// Doing this instead changing prev.data because .data is readonly.\n\t\t\tnormalized.splice(_i - 1, 2, new _text2.default(prev.data + node.data, prev.getAttributes()));\n\t\t\t_i--;\n\t\t}\n\t}\n\n\treturn normalized;\n}\n\n/**\n * Checks if nodes before and after given index in given element are {@link module:engine/model/text~Text text nodes} and\n * merges them into one node if they have same attributes.\n *\n * Merging is done by removing two text nodes and inserting a new text node containing data from both merged text nodes.\n *\n * @ignore\n * @private\n * @param {module:engine/model/element~Element} element Parent element of nodes to merge.\n * @param {Number} index Index between nodes to merge.\n */\nfunction _mergeNodesAtIndex(element, index) {\n\tvar nodeBefore = element.getChild(index - 1);\n\tvar nodeAfter = element.getChild(index);\n\n\t// Check if both of those nodes are text objects with same attributes.\n\tif (nodeBefore && nodeAfter && nodeBefore.is('text') && nodeAfter.is('text') && _haveSameAttributes(nodeBefore, nodeAfter)) {\n\t\t// Append text of text node after index to the before one.\n\t\tvar mergedNode = new _text2.default(nodeBefore.data + nodeAfter.data, nodeBefore.getAttributes());\n\n\t\t// Remove separate text nodes.\n\t\telement.removeChildren(index - 1, 2);\n\n\t\t// Insert merged text node.\n\t\telement.insertChildren(index - 1, mergedNode);\n\t}\n}\n\n/**\n * Checks if given position is in a text node, and if so, splits the text node in two text nodes, each of them\n * containing a part of original text node.\n *\n * @ignore\n * @private\n * @param {module:engine/model/position~Position} position Position at which node should be split.\n */\nfunction _splitNodeAtPosition(position) {\n\tvar textNode = position.textNode;\n\tvar element = position.parent;\n\n\tif (textNode) {\n\t\tvar offsetDiff = position.offset - textNode.startOffset;\n\t\tvar index = textNode.index;\n\n\t\telement.removeChildren(index, 1);\n\n\t\tvar firstPart = new _text2.default(textNode.data.substr(0, offsetDiff), textNode.getAttributes());\n\t\tvar secondPart = new _text2.default(textNode.data.substr(offsetDiff), textNode.getAttributes());\n\n\t\telement.insertChildren(index, [firstPart, secondPart]);\n\t}\n}\n\n/**\n * Checks whether two given nodes have same attributes.\n *\n * @ignore\n * @private\n * @param {module:engine/model/node~Node} nodeA Node to check.\n * @param {module:engine/model/node~Node} nodeB Node to check.\n * @returns {Boolean} `true` if nodes have same attributes, `false` otherwise.\n */\nfunction _haveSameAttributes(nodeA, nodeB) {\n\tvar iteratorA = nodeA.getAttributes();\n\tvar iteratorB = nodeB.getAttributes();\n\n\tvar _iteratorNormalCompletion3 = true;\n\tvar _didIteratorError3 = false;\n\tvar _iteratorError3 = undefined;\n\n\ttry {\n\t\tfor (var _iterator3 = iteratorA[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\tvar attr = _step3.value;\n\n\t\t\tif (attr[1] !== nodeB.getAttribute(attr[0])) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\titeratorB.next();\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError3 = true;\n\t\t_iteratorError3 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t_iterator3.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError3) {\n\t\t\t\tthrow _iteratorError3;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn iteratorB.next().done;\n}\n\n/**\n * Value that can be normalized to an array of {@link module:engine/model/node~Node nodes}.\n *\n * Non-arrays are normalized as follows:\n * * {@link module:engine/model/node~Node Node} is left as is,\n * * {@link module:engine/model/textproxy~TextProxy TextProxy} and `String` are normalized to {@link module:engine/model/text~Text Text},\n * * {@link module:engine/model/nodelist~NodeList NodeList} is normalized to an array containing all nodes that are in that node list,\n * * {@link module:engine/model/documentfragment~DocumentFragment DocumentFragment} is normalized to an array containing all of it's\n * * children.\n *\n * Arrays are processed item by item like non-array values and flattened to one array. Normalization always results in\n * a flat array of {@link module:engine/model/node~Node nodes}. Consecutive text nodes (or items normalized to text nodes) will be\n * merged if they have same attributes.\n *\n * @typedef {module:engine/model/node~Node|module:engine/model/textproxy~TextProxy|String|\n * module:engine/model/nodelist~NodeList|module:engine/model/documentfragment~DocumentFragment|Iterable}\n * module:engine/model/node~NodeSet\n */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/writer.js\n// module id = 21\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\nn\n/**\n * @module engine/view/position\n */\n\nvar _treewalker = require('./treewalker');\n\nvar _treewalker2 = _interopRequireDefault(_treewalker);\n\nvar _comparearrays = require('@ckeditor/ckeditor5-utils/src/comparearrays');\n\nvar _comparearrays2 = _interopRequireDefault(_comparearrays);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nvar _editableelement = require('./editableelement');\n\nvar _editableelement2 = _interopRequireDefault(_editableelement);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Position in the tree. Position is always located before or after a node.\n */\nvar Position = function () {\n\t/**\n  * Creates a position.\n  *\n  * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} parent Position parent.\n  * @param {Number} offset Position offset.\n  */\n\tfunction Position(parent, offset) {\n\t\t_classCallCheck(this, Position);\n\n\t\t/**\n   * Position parent.\n   *\n   * @member {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n   * module:engine/view/position~Position#parent\n   */\n\t\tthis.parent = parent;\n\n\t\t/**\n   * Position offset.\n   *\n   * @member {Number} module:engine/view/position~Position#offset\n   */\n\t\tthis.offset = offset;\n\t}\n\n\t/**\n  * Node directly after the position. Equals `null` when there is no node after position or position is located\n  * inside text node.\n  *\n  * @readonly\n  * @type {module:engine/view/node~Node|null}\n  */\n\n\n\t_createClass(Position, [{\n\t\tkey: 'getShiftedBy',\n\n\n\t\t/**\n   * Returns a new instance of Position with offset incremented by `shift` value.\n   *\n   * @param {Number} shift How position offset should get changed. Accepts negative values.\n   * @returns {module:engine/view/position~Position} Shifted position.\n   */\n\t\tvalue: function getShiftedBy(shift) {\n\t\t\tvar shifted = Position.createFromPosition(this);\n\n\t\t\tvar offset = shifted.offset + shift;\n\t\t\tshifted.offset = offset < 0 ? 0 : offset;\n\n\t\t\treturn shifted;\n\t\t}\n\n\t\t/**\n   * Gets the farthest position which matches the callback using\n   * {@link module:engine/view/treewalker~TreeWalker TreeWalker}.\n   *\n   * For example:\n   *\n   * \t\tgetLastMatchingPosition( value => value.type == 'text' ); // <p>{}foo</p> -> <p>foo[]</p>\n   * \t\tgetLastMatchingPosition( value => value.type == 'text', { direction: 'backward' } ); // <p>foo[]</p> -> <p>{}foo</p>\n   * \t\tgetLastMatchingPosition( value => false ); // Do not move the position.\n   *\n   * @param {Function} skip Callback function. Gets {@link module:engine/view/treewalker~TreeWalkerValue} and should\n   * return `true` if the value should be skipped or `false` if not.\n   * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n   *\n   * @returns {module:engine/view/position~Position} The position after the last item which matches the `skip` callback test.\n   */\n\n\t}, {\n\t\tkey: 'getLastMatchingPosition',\n\t\tvalue: function getLastMatchingPosition(skip) {\n\t\t\tvar options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\t\toptions.startPosition = this;\n\n\t\t\tvar treeWalker = new _treewalker2.default(options);\n\t\t\ttreeWalker.skip(skip);\n\n\t\t\treturn treeWalker.position;\n\t\t}\n\n\t\t/**\n   * Returns ancestors array of this position, that is this position's parent and it's ancestors.\n   *\n   * @returns {Array} Array with ancestors.\n   */\n\n\t}, {\n\t\tkey: 'getAncestors',\n\t\tvalue: function getAncestors() {\n\t\t\tif (this.parent.is('documentFragment')) {\n\t\t\t\treturn [this.parent];\n\t\t\t} else {\n\t\t\t\treturn this.parent.getAncestors({ includeSelf: true });\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Returns a {@link module:engine/view/node~Node} or {@link module:engine/view/documentfragment~DocumentFragment}\n   * which is a common ancestor of both positions.\n   *\n   * @param {module:engine/view/position~Position} position\n   * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null}\n   */\n\n\t}, {\n\t\tkey: 'getCommonAncestor',\n\t\tvalue: function getCommonAncestor(position) {\n\t\t\tvar ancestorsA = this.getAncestors();\n\t\t\tvar ancestorsB = position.getAncestors();\n\n\t\t\tvar i = 0;\n\n\t\t\twhile (ancestorsA[i] == ancestorsB[i] && ancestorsA[i]) {\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\treturn i === 0 ? null : ancestorsA[i - 1];\n\t\t}\n\n\t\t/**\n   * Checks whether this position equals given position.\n   *\n   * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n   * @returns {Boolean} True if positions are same.\n   */\n\n\t}, {\n\t\tkey: 'isEqual',\n\t\tvalue: function isEqual(otherPosition) {\n\t\t\treturn this.parent == otherPosition.parent && this.offset == otherPosition.offset;\n\t\t}\n\n\t\t/**\n   * Checks whether this position is located before given position. When method returns `false` it does not mean that\n   * this position is after give one. Two positions may be located inside separate roots and in that situation this\n   * method will still return `false`.\n   *\n   * @see module:engine/view/position~Position#isAfter\n   * @see module:engine/view/position~Position#compareWith\n   * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n   * @returns {Boolean} Returns `true` if this position is before given position.\n   */\n\n\t}, {\n\t\tkey: 'isBefore',\n\t\tvalue: function isBefore(otherPosition) {\n\t\t\treturn this.compareWith(otherPosition) == 'before';\n\t\t}\n\n\t\t/**\n   * Checks whether this position is located after given position. When method returns `false` it does not mean that\n   * this position is before give one. Two positions may be located inside separate roots and in that situation this\n   * method will still return `false`.\n   *\n   * @see module:engine/view/position~Position#isBefore\n   * @see module:engine/view/position~Position#compareWith\n   * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n   * @returns {Boolean} Returns `true` if this position is after given position.\n   */\n\n\t}, {\n\t\tkey: 'isAfter',\n\t\tvalue: function isAfter(otherPosition) {\n\t\t\treturn this.compareWith(otherPosition) == 'after';\n\t\t}\n\n\t\t/**\n   * Checks whether this position is before, after or in same position that other position. Two positions may be also\n   * different when they are located in separate roots.\n   *\n   * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n   * @returns {module:engine/view/position~PositionRelation}\n   */\n\n\t}, {\n\t\tkey: 'compareWith',\n\t\tvalue: function compareWith(otherPosition) {\n\t\t\tif (this.isEqual(otherPosition)) {\n\t\t\t\treturn 'same';\n\t\t\t}\n\n\t\t\t// If positions have same parent.\n\t\t\tif (this.parent === otherPosition.parent) {\n\t\t\t\treturn this.offset - otherPosition.offset < 0 ? 'before' : 'after';\n\t\t\t}\n\n\t\t\t// Get path from root to position's parent element.\n\t\t\tvar path = this.getAncestors();\n\t\t\tvar otherPath = otherPosition.getAncestors();\n\n\t\t\t// Compare both path arrays to find common ancestor.\n\t\t\tvar result = (0, _comparearrays2.default)(path, otherPath);\n\n\t\t\tvar commonAncestorIndex = void 0;\n\n\t\t\tswitch (result) {\n\t\t\t\tcase 0:\n\t\t\t\t\t// No common ancestors found.\n\t\t\t\t\treturn 'different';\n\n\t\t\t\tcase 'prefix':\n\t\t\t\t\tcommonAncestorIndex = path.length - 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'extension':\n\t\t\t\t\tcommonAncestorIndex = otherPath.length - 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tcommonAncestorIndex = result - 1;\n\t\t\t}\n\n\t\t\t// Common ancestor of two positions.\n\t\t\tvar commonAncestor = path[commonAncestorIndex];\n\t\t\tvar nextAncestor1 = path[commonAncestorIndex + 1];\n\t\t\tvar nextAncestor2 = otherPath[commonAncestorIndex + 1];\n\n\t\t\t// Check if common ancestor is not one of the parents.\n\t\t\tif (commonAncestor === this.parent) {\n\t\t\t\tvar _index = this.offset - nextAncestor2.index;\n\n\t\t\t\treturn _index <= 0 ? 'before' : 'after';\n\t\t\t} else if (commonAncestor === otherPosition.parent) {\n\t\t\t\tvar _index2 = nextAncestor1.index - otherPosition.offset;\n\n\t\t\t\treturn _index2 < 0 ? 'before' : 'after';\n\t\t\t}\n\n\t\t\tvar index = nextAncestor1.index - nextAncestor2.index;\n\n\t\t\t// Compare indexes of next ancestors inside common one.\n\t\t\treturn index < 0 ? 'before' : 'after';\n\t\t}\n\n\t\t/**\n   * Creates position at the given location. The location can be specified as:\n   *\n   * * a {@link module:engine/view/position~Position position},\n   * * parent element and offset (offset defaults to `0`),\n   * * parent element and `'end'` (sets position at the end of that element),\n   * * {@link module:engine/view/item~Item view item} and `'before'` or `'after'` (sets position before or after given view item).\n   *\n   * This method is a shortcut to other constructors such as:\n   *\n   * * {@link module:engine/view/position~Position.createBefore},\n   * * {@link module:engine/view/position~Position.createAfter},\n   * * {@link module:engine/view/position~Position.createFromPosition}.\n   *\n   * @param {module:engine/view/item~Item|module:engine/model/position~Position} itemOrPosition\n   * @param {Number|'end'|'before'|'after'} [offset=0] Offset or one of the flags. Used only when\n   * first parameter is a {@link module:engine/view/item~Item view item}.\n   */\n\n\t}, {\n\t\tkey: 'nodeAfter',\n\t\tget: function get() {\n\t\t\tif (this.parent.is('text')) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn this.parent.getChild(this.offset) || null;\n\t\t}\n\n\t\t/**\n   * Node directly before the position. Equals `null` when there is no node before position or position is located\n   * inside text node.\n   *\n   * @readonly\n   * @type {module:engine/view/node~Node|null}\n   */\n\n\t}, {\n\t\tkey: 'nodeBefore',\n\t\tget: function get() {\n\t\t\tif (this.parent.is('text')) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn this.parent.getChild(this.offset - 1) || null;\n\t\t}\n\n\t\t/**\n   * Is `true` if position is at the beginning of its {@link module:engine/view/position~Position#parent parent}, `false` otherwise.\n   *\n   * @readonly\n   * @type {Boolean}\n   */\n\n\t}, {\n\t\tkey: 'isAtStart',\n\t\tget: function get() {\n\t\t\treturn this.offset === 0;\n\t\t}\n\n\t\t/**\n   * Is `true` if position is at the end of its {@link module:engine/view/position~Position#parent parent}, `false` otherwise.\n   *\n   * @readonly\n   * @type {Boolean}\n   */\n\n\t}, {\n\t\tkey: 'isAtEnd',\n\t\tget: function get() {\n\t\t\tvar endOffset = this.parent.is('text') ? this.parent.data.length : this.parent.childCount;\n\n\t\t\treturn this.offset === endOffset;\n\t\t}\n\n\t\t/**\n   * Position's root, that is the root of the position's parent element.\n   *\n   * @readonly\n   * @type {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n   */\n\n\t}, {\n\t\tkey: 'root',\n\t\tget: function get() {\n\t\t\treturn this.parent.root;\n\t\t}\n\n\t\t/**\n   * {@link module:engine/view/editableelement~EditableElement EditableElement} instance that contains this position, or `null` if\n   * position is not inside an editable element.\n   *\n   * @type {module:engine/view/editableelement~EditableElement|null}\n   */\n\n\t}, {\n\t\tkey: 'editableElement',\n\t\tget: function get() {\n\t\t\tvar editable = this.parent;\n\n\t\t\twhile (!(editable instanceof _editableelement2.default)) {\n\t\t\t\tif (editable.parent) {\n\t\t\t\t\teditable = editable.parent;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn editable;\n\t\t}\n\t}], [{\n\t\tkey: 'createAt',\n\t\tvalue: function createAt(itemOrPosition, offset) {\n\t\t\tif (itemOrPosition instanceof Position) {\n\t\t\t\treturn this.createFromPosition(itemOrPosition);\n\t\t\t} else {\n\t\t\t\tvar node = itemOrPosition;\n\n\t\t\t\tif (offset == 'end') {\n\t\t\t\t\toffset = node.is('text') ? node.data.length : node.childCount;\n\t\t\t\t} else if (offset == 'before') {\n\t\t\t\t\treturn this.createBefore(node);\n\t\t\t\t} else if (offset == 'after') {\n\t\t\t\t\treturn this.createAfter(node);\n\t\t\t\t} else if (!offset) {\n\t\t\t\t\toffset = 0;\n\t\t\t\t}\n\n\t\t\t\treturn new Position(node, offset);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Creates a new position after given view item.\n   *\n   * @param {module:engine/view/item~Item} item View item after which the position should be located.\n   * @returns {module:engine/view/position~Position}\n   */\n\n\t}, {\n\t\tkey: 'createAfter',\n\t\tvalue: function createAfter(item) {\n\t\t\t// TextProxy is not a instance of Node so we need do handle it in specific way.\n\t\t\tif (item.is('textProxy')) {\n\t\t\t\treturn new Position(item.textNode, item.offsetInText + item.data.length);\n\t\t\t}\n\n\t\t\tif (!item.parent) {\n\t\t\t\t/**\n     * You can not make a position after a root.\n     *\n     * @error position-after-root\n     * @param {module:engine/view/node~Node} root\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('view-position-after-root: You can not make position after root.', { root: item });\n\t\t\t}\n\n\t\t\treturn new Position(item.parent, item.index + 1);\n\t\t}\n\n\t\t/**\n   * Creates a new position before given view item.\n   *\n   * @param {module:engine/view/item~Item} item View item before which the position should be located.\n   * @returns {module:engine/view/position~Position}\n   */\n\n\t}, {\n\t\tkey: 'createBefore',\n\t\tvalue: function createBefore(item) {\n\t\t\t// TextProxy is not a instance of Node so we need do handle it in specific way.\n\t\t\tif (item.is('textProxy')) {\n\t\t\t\treturn new Position(item.textNode, item.offsetInText);\n\t\t\t}\n\n\t\t\tif (!item.parent) {\n\t\t\t\t/**\n     * You cannot make a position before a root.\n     *\n     * @error position-before-root\n     * @param {module:engine/view/node~Node} root\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('view-position-before-root: You can not make position before root.', { root: item });\n\t\t\t}\n\n\t\t\treturn new Position(item.parent, item.index);\n\t\t}\n\n\t\t/**\n   * Creates and returns a new instance of `Position`, which is equal to the passed position.\n   *\n   * @param {module:engine/view/position~Position} position Position to be cloned.\n   * @returns {module:engine/view/position~Position}\n   */\n\n\t}, {\n\t\tkey: 'createFromPosition',\n\t\tvalue: function createFromPosition(position) {\n\t\t\treturn new this(position.parent, position.offset);\n\t\t}\n\t}]);\n\n\treturn Position;\n}();\n\n/**\n * A flag indicating whether this position is `'before'` or `'after'` or `'same'` as given position.\n * If positions are in different roots `'different'` flag is returned.\n *\n * @typedef {String} module:engine/view/position~PositionRelation\n */\n\n\nexports.default = Position;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/view/position.js\n// module id = 22\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _view = require('../view');\n\nvar _view2 = _interopRequireDefault(_view);\n\nvar _template = require('../template');\n\nvar _template2 = _interopRequireDefault(_template);\n\nvar _iconview = require('../icon/iconview');\n\nvar _iconview2 = _interopRequireDefault(_iconview);\n\nvar _tooltipview = require('../tooltip/tooltipview');\n\nvar _tooltipview2 = _interopRequireDefault(_tooltipview);\n\nvar _keyboard = require('@ckeditor/ckeditor5-utils/src/keyboard');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module ui/button/buttonview\n */\n\n/**\n * The button view class.\n *\n * @extends module:ui/view~View\n */\nvar ButtonView = function (_View) {\n\t_inherits(ButtonView, _View);\n\n\t/**\n  * @inheritDoc\n  */\n\tfunction ButtonView(locale) {\n\t\t_classCallCheck(this, ButtonView);\n\n\t\t/**\n   * The label of the button view visible to the user.\n   *\n   * @observable\n   * @member {String} #label\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (ButtonView.__proto__ || Object.getPrototypeOf(ButtonView)).call(this, locale));\n\n\t\t_this.set('label');\n\n\t\t/**\n   * (Optional) The keystroke associated with the button, i.e. <kbd>CTRL+B</kbd>,\n   * in the string format compatible with {@link module:utils/keyboard}.\n   *\n   * @observable\n   * @member {Boolean} #keystroke\n   */\n\t\t_this.set('keystroke');\n\n\t\t/**\n   * (Optional) Tooltip of the button, i.e. displayed when hovering the button with the mouse cursor.\n   *\n   * * If defined as a `Boolean` (e.g. `true`), then combination of `label` and `keystroke` will be set as a tooltip.\n   * * If defined as a `String`, tooltip will equal the exact text of that `String`.\n   * * If defined as a `Function`, `label` and `keystroke` will be passed to that function, which is to return\n   * a string with the tooltip text.\n   *\n   *\t\tconst view = new ButtonView( locale );\n   *\t\tview.tooltip = ( label, keystroke ) => `A tooltip for ${ label } and ${ keystroke }.`\n   *\n   * @observable\n   * @default false\n   * @member {Boolean|String|Function} #tooltip\n   */\n\t\t_this.set('tooltip');\n\n\t\t/**\n   * The position of the tooltip. See {@link module:ui/tooltip/tooltipview~TooltipView#position}\n   * to learn more about the available position values.\n   *\n   * **Note:** It makes sense only when the {@link #tooltip} is active.\n   *\n   * @observable\n   * @default 's'\n   * @member {'s'|'n'} #position\n   */\n\t\t_this.set('tooltipPosition', 's');\n\n\t\t/**\n   * The HTML type of the button. Default `button`.\n   *\n   * @observable\n   * @member {'button'|'submit'|'reset'|'menu'} #type\n   */\n\t\t_this.set('type', 'button');\n\n\t\t/**\n   * Controls whether the button view is \"on\", e.g. some feature which it represents\n   * is currently enabled.\n   *\n   * @observable\n   * @member {Boolean} #isOn\n   */\n\t\t_this.set('isOn', false);\n\n\t\t/**\n   * Controls whether the button view is enabled (can be clicked).\n   *\n   * @observable\n   * @member {Boolean} #isEnabled\n   */\n\t\t_this.set('isEnabled', true);\n\n\t\t/**\n   * Controls whether the button view is visible.\n   *\n   * @observable\n   * @member {Boolean} #isVisible\n   */\n\t\t_this.set('isVisible', true);\n\n\t\t/**\n   * (Optional) Whether the label of the button is hidden (e.g. button with icon only).\n   *\n   * @observable\n   * @member {Boolean} #withText\n   */\n\t\t_this.set('withText', false);\n\n\t\t/**\n   * (Optional) Source of the icon. See {@link module:ui/icon/iconview~IconView#content}.\n   *\n   * @observable\n   * @member {String} #icon\n   */\n\t\t_this.set('icon');\n\n\t\t/**\n   * Controls the `tabindex` attribute of the button.\n   *\n   * @observable\n   * @default -1\n   * @member {String} #tabindex\n   */\n\t\t_this.set('tabindex', -1);\n\n\t\t/**\n   * Tooltip of the button bound to the template.\n   *\n   * @see #tooltip\n   * @see #_getTooltipString\n   * @private\n   * @observable\n   * @member {Boolean} #_tooltipString\n   */\n\t\t_this.bind('_tooltipString').to(_this, 'tooltip', _this, 'label', _this, 'keystroke', _this._getTooltipString.bind(_this));\n\n\t\t/**\n   * Tooltip of the button view.\n   *\n   * @readonly\n   * @member {module:ui/tooltip/tooltipview~TooltipView} #tooltipView\n   */\n\t\t_this.tooltipView = _this._createTooltipView();\n\n\t\t/**\n   * Icon of the button view.\n   *\n   * @readonly\n   * @member {module:ui/icon/iconview~IconView} #iconView\n   */\n\n\t\tvar bind = _this.bindTemplate;\n\n\t\t_this.template = new _template2.default({\n\t\t\ttag: 'button',\n\n\t\t\tattributes: {\n\t\t\t\tclass: ['ck-button', bind.to('isEnabled', function (value) {\n\t\t\t\t\treturn value ? 'ck-enabled' : 'ck-disabled';\n\t\t\t\t}), bind.if('isVisible', 'ck-hidden', function (value) {\n\t\t\t\t\treturn !value;\n\t\t\t\t}), bind.to('isOn', function (value) {\n\t\t\t\t\treturn value ? 'ck-on' : 'ck-off';\n\t\t\t\t}), bind.if('withText', 'ck-button_with-text')],\n\t\t\t\ttype: bind.to('type', function (value) {\n\t\t\t\t\treturn value ? value : 'button';\n\t\t\t\t}),\n\t\t\t\ttabindex: bind.to('tabindex')\n\t\t\t},\n\n\t\t\tchildren: [{\n\t\t\t\ttag: 'span',\n\n\t\t\t\tattributes: {\n\t\t\t\t\tclass: ['ck-button__label']\n\t\t\t\t},\n\n\t\t\t\tchildren: [{\n\t\t\t\t\ttext: bind.to('label')\n\t\t\t\t}]\n\t\t\t}, _this.tooltipView],\n\n\t\t\ton: {\n\t\t\t\tmousedown: bind.to(function (evt) {\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t}),\n\n\t\t\t\tclick: bind.to(function (evt) {\n\t\t\t\t\t// We can't make the button disabled using the disabled attribute, because it won't be focusable.\n\t\t\t\t\t// Though, shouldn't this condition be moved to the button controller?\n\t\t\t\t\tif (_this.isEnabled) {\n\t\t\t\t\t\t_this.fire('execute');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Prevent the default when button is disabled, to block e.g.\n\t\t\t\t\t\t// automatic form submitting. See ckeditor/ckeditor5-link#74.\n\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t});\n\n\t\t/**\n   * Fired when the button view is clicked. It won't be fired when the button is disabled.\n   *\n   * @event #execute\n   */\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(ButtonView, [{\n\t\tkey: 'init',\n\t\tvalue: function init() {\n\t\t\tif (this.icon) {\n\t\t\t\tvar iconView = this.iconView = new _iconview2.default();\n\n\t\t\t\ticonView.bind('content').to(this, 'icon');\n\t\t\t\tthis.element.insertBefore(iconView.element, this.element.firstChild);\n\n\t\t\t\t// Make sure the icon will be destroyed along with the button.\n\t\t\t\tthis.addChildren(iconView);\n\t\t\t}\n\n\t\t\t_get(ButtonView.prototype.__proto__ || Object.getPrototypeOf(ButtonView.prototype), 'init', this).call(this);\n\t\t}\n\n\t\t/**\n   * Focuses the button.\n   */\n\n\t}, {\n\t\tkey: 'focus',\n\t\tvalue: function focus() {\n\t\t\tthis.element.focus();\n\t\t}\n\n\t\t/**\n   * Creates TooltipView instance and bind with button properties.\n   *\n   * @private\n   * @returns {module:ui/tooltip/tooltipview~TooltipView}\n   */\n\n\t}, {\n\t\tkey: '_createTooltipView',\n\t\tvalue: function _createTooltipView() {\n\t\t\tvar tooltipView = new _tooltipview2.default();\n\n\t\t\ttooltipView.bind('text').to(this, '_tooltipString');\n\t\t\ttooltipView.bind('position').to(this, 'tooltipPosition');\n\n\t\t\treturn tooltipView;\n\t\t}\n\n\t\t/**\n   * Gets the text for the {@link #tooltipView} from the combination of\n   * {@link #tooltip}, {@link #label} and {@link #keystroke} attributes.\n   *\n   * @private\n   * @see #tooltip\n   * @see #_tooltipString\n   * @param {Boolean|String|Function} tooltip Button tooltip.\n   * @param {String} label Button label.\n   * @param {String} keystroke Button keystroke.\n   * @returns {String}\n   */\n\n\t}, {\n\t\tkey: '_getTooltipString',\n\t\tvalue: function _getTooltipString(tooltip, label, keystroke) {\n\t\t\tif (tooltip) {\n\t\t\t\tif (typeof tooltip == 'string') {\n\t\t\t\t\treturn tooltip;\n\t\t\t\t} else {\n\t\t\t\t\tif (keystroke) {\n\t\t\t\t\t\tkeystroke = (0, _keyboard.getEnvKeystrokeText)(keystroke);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tooltip instanceof Function) {\n\t\t\t\t\t\treturn tooltip(label, keystroke);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '' + label + (keystroke ? ' (' + keystroke + ')' : '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn '';\n\t\t}\n\t}]);\n\n\treturn ButtonView;\n}(_view2.default);\n\nexports.default = ButtonView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-ui/src/button/buttonview.js\n// module id = 23\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.keyCodes = undefined;\nexports.getCode = getCode;\nexports.parseKeystroke = parseKeystroke;\nexports.getEnvKeystrokeText = getEnvKeystrokeText;\n\nvar _ckeditorerror = require('./ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nvar _env = require('./env');\n\nvar _env2 = _interopRequireDefault(_env);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Object with `keyName => keyCode` pairs for a set of known keys.\n *\n * Contains:\n *\n * * `a-z`,\n * * `0-9`,\n * * `f1-f12`,\n * * `arrow(left|up|right|bottom)`,\n * * `backspace`, `delete`, `enter`, `esc`, `tab`,\n * * `ctrl`, `cmd`, `shift`, `alt`.\n */\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * Set of utils related to keyboard support.\n *\n * @module utils/keyboard\n */\n\nvar keyCodes = exports.keyCodes = generateKnownKeyCodes();\n\n/**\n * Converts a key name or a {@link module:utils/keyboard~KeystrokeInfo keystroke info} into a key code.\n *\n * Note: Key names are matched with {@link module:utils/keyboard~keyCodes} in a case-insensitive way.\n *\n * @param {String|module:utils/keyboard~KeystrokeInfo} Key name (see {@link module:utils/keyboard~keyCodes})\n * or a keystroke data object.\n * @returns {Number} Key or keystroke code.\n */\nfunction getCode(key) {\n  var keyCode = void 0;\n\n  if (typeof key == 'string') {\n    keyCode = keyCodes[key.toLowerCase()];\n\n    if (!keyCode) {\n      /**\n       * Unknown key name. Only key names contained by the {@link module:utils/keyboard~keyCodes} can be used.\n       *\n       * @errror keyboard-unknown-key\n       * @param {String} key\n       */\n      throw new _ckeditorerror2.default('keyboard-unknown-key: Unknown key name.', { key: key });\n    }\n  } else {\n    keyCode = key.keyCode + (key.altKey ? keyCodes.alt : 0) + (key.ctrlKey ? keyCodes.ctrl : 0) + (key.shiftKey ? keyCodes.shift : 0);\n  }\n\n  return keyCode;\n}\n\n/**\n * Parses keystroke and returns a keystroke code that will match the code returned by\n * link {@link module:utils/keyboard.getCode} for a corresponding {@link module:utils/keyboard~KeystrokeInfo keystroke info}.\n *\n * The keystroke can be passed in two formats:\n *\n * * as a single string – e.g. `ctrl + A`,\n * * as an array of {@link module:utils/keyboard~keyCodes known key names} and key codes – e.g.:\n *   * `[ 'ctrl', 32 ]` (ctrl + space),\n *   * `[ 'ctrl', 'a' ]` (ctrl + A).\n *\n * Note: Key names are matched with {@link module:utils/keyboard~keyCodes} in a case-insensitive way.\n *\n * Note: Only keystrokes with a single non-modifier key are supported (e.g. `ctrl+A` is OK, but `ctrl+A+B` is not).\n *\n * @param {String|Array.<Number|String>} keystroke Keystroke definition.\n * @returns {Number} Keystroke code.\n */\nfunction parseKeystroke(keystroke) {\n  if (typeof keystroke == 'string') {\n    keystroke = splitKeystrokeText(keystroke);\n  }\n\n  return keystroke.map(function (key) {\n    return typeof key == 'string' ? getCode(key) : key;\n  }).reduce(function (key, sum) {\n    return sum + key;\n  }, 0);\n}\n\n/**\n * It translates any keystroke string text like `\"CTRL+A\"` to an\n * environment–specific keystroke, i.e. `\"⌘A\"` on Mac OSX.\n *\n * @param {String} keystroke Keystroke text.\n * @returns {String} Keystroke text specific for the environment.\n */\nfunction getEnvKeystrokeText(keystroke) {\n  var split = splitKeystrokeText(keystroke);\n\n  if (_env2.default.mac) {\n    if (split[0].toLowerCase() == 'ctrl') {\n      return '⌘' + (split[1] || '');\n    }\n  }\n\n  return keystroke;\n}\n\nfunction generateKnownKeyCodes() {\n  var keyCodes = {\n    arrowleft: 37,\n    arrowup: 38,\n    arrowright: 39,\n    arrowdown: 40,\n    backspace: 8,\n    delete: 46,\n    enter: 13,\n    space: 32,\n    esc: 27,\n    tab: 9,\n\n    // The idea about these numbers is that they do not collide with any real key codes, so we can use them\n    // like bit masks.\n    ctrl: 0x110000,\n    // Has the same code as ctrl, because their behaviour should be unified across the editor.\n    // See http://ckeditor.github.io/editor-recommendations/general-policies#ctrl-vs-cmd\n    cmd: 0x110000,\n    shift: 0x220000,\n    alt: 0x440000\n  };\n\n  // a-z\n  for (var code = 65; code <= 90; code++) {\n    var letter = String.fromCharCode(code);\n\n    keyCodes[letter.toLowerCase()] = code;\n  }\n\n  // 0-9\n  for (var _code = 48; _code <= 57; _code++) {\n    keyCodes[_code - 48] = _code;\n  }\n\n  // F1-F12\n  for (var _code2 = 112; _code2 <= 123; _code2++) {\n    keyCodes['f' + (_code2 - 111)] = _code2;\n  }\n\n  return keyCodes;\n}\n\nfunction splitKeystrokeText(keystroke) {\n  return keystroke.split(/\\s*\\+\\s*/);\n}\n\n/**\n * Information about a keystroke.\n *\n * @interface module:utils/keyboard~KeystrokeInfo\n */\n\n/**\n * The [key code](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode).\n *\n * @member {Number} module:utils/keyboard~KeystrokeInfo#keyCode\n */\n\n/**\n * Whether the <kbd>Alt</kbd> modifier was pressed.\n *\n * @member {Bolean} module:utils/keyboard~KeystrokeInfo#altKey\n */\n\n/**\n * Whether the <kbd>Ctrl</kbd> or <kbd>Cmd</kbd> modifier was pressed.\n *\n * @member {Bolean} module:utils/keyboard~KeystrokeInfo#ctrlKey\n */\n\n/**\n * Whether the <kbd>Shift</kbd> modifier was pressed.\n *\n * @member {Bolean} module:utils/keyboard~KeystrokeInfo#shiftKey\n */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/keyboard.js\n// module id = 24\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _arrayPush = require('./_arrayPush');\n\nvar _arrayPush2 = _interopRequireDefault(_arrayPush);\n\nvar _isFlattenable = require('./_isFlattenable');\n\nvar _isFlattenable2 = _interopRequireDefault(_isFlattenable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = _isFlattenable2.default);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        (0, _arrayPush2.default)(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nexports.default = baseFlatten;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseFlatten.js\n// module id = 25\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _operation = require('./operation');\n\nvar _operation2 = _interopRequireDefault(_operation);\n\nvar _position = require('../position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _range = require('../range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nvar _comparearrays = require('@ckeditor/ckeditor5-utils/src/comparearrays');\n\nvar _comparearrays2 = _interopRequireDefault(_comparearrays);\n\nvar _writer = require('./../writer');\n\nvar _writer2 = _interopRequireDefault(_writer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/model/operation/moveoperation\n */\n\n/**\n * Operation to move a range of {@link module:engine/model/item~Item model items}\n * to given {@link module:engine/model/position~Position target position}.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nvar MoveOperation = function (_Operation) {\n\t_inherits(MoveOperation, _Operation);\n\n\t/**\n  * Creates a move operation.\n  *\n  * @param {module:engine/model/position~Position} sourcePosition\n  * Position before the first {@link module:engine/model/item~Item model item} to move.\n  * @param {Number} howMany Offset size of moved range. Moved range will start from `sourcePosition` and end at\n  * `sourcePosition` with offset shifted by `howMany`.\n  * @param {module:engine/model/position~Position} targetPosition Position at which moved nodes will be inserted.\n  * @param {Number} baseVersion {@link module:engine/model/document~Document#version} on which operation can be applied.\n  */\n\tfunction MoveOperation(sourcePosition, howMany, targetPosition, baseVersion) {\n\t\t_classCallCheck(this, MoveOperation);\n\n\t\t/**\n   * Position before the first {@link module:engine/model/item~Item model item} to move.\n   *\n   * @member {module:engine/model/position~Position} module:engine/model/operation/moveoperation~MoveOperation#sourcePosition\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (MoveOperation.__proto__ || Object.getPrototypeOf(MoveOperation)).call(this, baseVersion));\n\n\t\t_this.sourcePosition = _position2.default.createFromPosition(sourcePosition);\n\n\t\t/**\n   * Offset size of moved range.\n   *\n   * @member {Number} module:engine/model/operation/moveoperation~MoveOperation#howMany\n   */\n\t\t_this.howMany = howMany;\n\n\t\t/**\n   * Position at which moved nodes will be inserted.\n   *\n   * @member {module:engine/model/position~Position} module:engine/model/operation/moveoperation~MoveOperation#targetPosition\n   */\n\t\t_this.targetPosition = _position2.default.createFromPosition(targetPosition);\n\n\t\t/**\n   * Defines whether `MoveOperation` is sticky. If `MoveOperation` is sticky, during\n   * {@link module:engine/model/operation/transform~transform operational transformation} if there will be an operation that\n   * inserts some nodes at the position equal to the boundary of this `MoveOperation`, that operation will\n   * get their insertion path updated to the position where this `MoveOperation` moves the range.\n   *\n   * @member {Boolean} module:engine/model/operation/moveoperation~MoveOperation#isSticky\n   */\n\t\t_this.isSticky = false;\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(MoveOperation, [{\n\t\tkey: 'clone',\n\n\n\t\t/**\n   * Creates and returns an operation that has the same parameters as this operation.\n   *\n   * @returns {module:engine/model/operation/moveoperation~MoveOperation} Clone of this operation.\n   */\n\t\tvalue: function clone() {\n\t\t\tvar op = new this.constructor(this.sourcePosition, this.howMany, this.targetPosition, this.baseVersion);\n\t\t\top.isSticky = this.isSticky;\n\n\t\t\treturn op;\n\t\t}\n\n\t\t/**\n   * Returns the start position of the moved range after it got moved. This may be different than\n   * {@link module:engine/model/operation/moveoperation~MoveOperation#targetPosition} in some cases, i.e. when a range is moved\n   * inside the same parent but {@link module:engine/model/operation/moveoperation~MoveOperation#targetPosition targetPosition}\n   * is after {@link module:engine/model/operation/moveoperation~MoveOperation#sourcePosition sourcePosition}.\n   *\n   *\t\t vv              vv\n   *\t\tabcdefg ===> adefbcg\n   *\t\t     ^          ^\n   *\t\t     targetPos\tmovedRangeStart\n   *\t\t     offset 6\toffset 4\n   *\n   * @returns {module:engine/model/position~Position}\n   */\n\n\t}, {\n\t\tkey: 'getMovedRangeStart',\n\t\tvalue: function getMovedRangeStart() {\n\t\t\treturn this.targetPosition._getTransformedByDeletion(this.sourcePosition, this.howMany);\n\t\t}\n\n\t\t/**\n   * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n   *\n   * @returns {module:engine/model/operation/moveoperation~MoveOperation}\n   */\n\n\t}, {\n\t\tkey: 'getReversed',\n\t\tvalue: function getReversed() {\n\t\t\tvar newTargetPosition = this.sourcePosition._getTransformedByInsertion(this.targetPosition, this.howMany);\n\n\t\t\tvar op = new this.constructor(this.getMovedRangeStart(), this.howMany, newTargetPosition, this.baseVersion + 1);\n\t\t\top.isSticky = this.isSticky;\n\n\t\t\treturn op;\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: '_execute',\n\t\tvalue: function _execute() {\n\t\t\tvar sourceElement = this.sourcePosition.parent;\n\t\t\tvar targetElement = this.targetPosition.parent;\n\t\t\tvar sourceOffset = this.sourcePosition.offset;\n\t\t\tvar targetOffset = this.targetPosition.offset;\n\n\t\t\t// Validate whether move operation has correct parameters.\n\t\t\t// Validation is pretty complex but move operation is one of the core ways to manipulate the document state.\n\t\t\t// We expect that many errors might be connected with one of scenarios described below.\n\t\t\tif (!sourceElement || !targetElement) {\n\t\t\t\t/**\n     * Source position or target position is invalid.\n     *\n     * @error move-operation-position-invalid\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('move-operation-position-invalid: Source position or target position is invalid.');\n\t\t\t} else if (sourceOffset + this.howMany > sourceElement.maxOffset) {\n\t\t\t\t/**\n     * The nodes which should be moved do not exist.\n     *\n     * @error move-operation-nodes-do-not-exist\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('move-operation-nodes-do-not-exist: The nodes which should be moved do not exist.');\n\t\t\t} else if (sourceElement === targetElement && sourceOffset < targetOffset && targetOffset < sourceOffset + this.howMany) {\n\t\t\t\t/**\n     * Trying to move a range of nodes into the middle of that range.\n     *\n     * @error move-operation-range-into-itself\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('move-operation-range-into-itself: Trying to move a range of nodes to the inside of that range.');\n\t\t\t} else if (this.sourcePosition.root == this.targetPosition.root) {\n\t\t\t\tif ((0, _comparearrays2.default)(this.sourcePosition.getParentPath(), this.targetPosition.getParentPath()) == 'prefix') {\n\t\t\t\t\tvar i = this.sourcePosition.path.length - 1;\n\n\t\t\t\t\tif (this.targetPosition.path[i] >= sourceOffset && this.targetPosition.path[i] < sourceOffset + this.howMany) {\n\t\t\t\t\t\t/**\n       * Trying to move a range of nodes into one of nodes from that range.\n       *\n       * @error move-operation-node-into-itself\n       */\n\t\t\t\t\t\tthrow new _ckeditorerror2.default('move-operation-node-into-itself: Trying to move a range of nodes into one of nodes from that range.');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar range = _writer2.default.move(_range2.default.createFromPositionAndShift(this.sourcePosition, this.howMany), this.targetPosition);\n\n\t\t\treturn {\n\t\t\t\tsourcePosition: this.sourcePosition,\n\t\t\t\trange: range\n\t\t\t};\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'type',\n\t\tget: function get() {\n\t\t\treturn 'move';\n\t\t}\n\t}], [{\n\t\tkey: 'fromJSON',\n\n\n\t\t/**\n   * Creates `MoveOperation` object from deserilized object, i.e. from parsed JSON string.\n   *\n   * @param {Object} json Deserialized JSON object.\n   * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n   * @returns {module:engine/model/operation/moveoperation~MoveOperation}\n   */\n\t\tvalue: function fromJSON(json, document) {\n\t\t\tvar sourcePosition = _position2.default.fromJSON(json.sourcePosition, document);\n\t\t\tvar targetPosition = _position2.default.fromJSON(json.targetPosition, document);\n\n\t\t\tvar move = new this(sourcePosition, json.howMany, targetPosition, json.baseVersion);\n\n\t\t\tif (json.isSticky) {\n\t\t\t\tmove.isSticky = true;\n\t\t\t}\n\n\t\t\treturn move;\n\t\t}\n\t}, {\n\t\tkey: 'className',\n\t\tget: function get() {\n\t\t\treturn 'engine.model.operation.MoveOperation';\n\t\t}\n\t}]);\n\n\treturn MoveOperation;\n}(_operation2.default);\n\nexports.default = MoveOperation;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/operation/moveoperation.js\n// module id = 26\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _node = require('./node');\n\nvar _node2 = _interopRequireDefault(_node);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/model/text\n */\n\n/**\n * Model text node. Type of {@link module:engine/model/node~Node node} that contains {@link module:engine/model/text~Text#data text data}.\n *\n * **Important:** see {@link module:engine/model/node~Node} to read about restrictions using `Text` and `Node` API.\n *\n * **Note:** keep in mind that `Text` instances might indirectly got removed from model tree when model is changed.\n * This happens when {@link module:engine/model/writer~writer model writer} is used to change model and the text node is merged with\n * another text node. Then, both text nodes are removed and a new text node is inserted into the model. Because of\n * this behavior, keeping references to `Text` is not recommended. Instead, consider creating\n * {@link module:engine/model/liveposition~LivePosition live position} placed before the text node.\n */\nvar Text = function (_Node) {\n\t_inherits(Text, _Node);\n\n\t/**\n  * Creates a text node.\n  *\n  * @param {String} data Node's text.\n  * @param {Object} [attrs] Node's attributes. See {@link module:utils/tomap~toMap} for a list of accepted values.\n  */\n\tfunction Text(data, attrs) {\n\t\t_classCallCheck(this, Text);\n\n\t\t/**\n   * Text data contained in this text node.\n   *\n   * @type {String}\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (Text.__proto__ || Object.getPrototypeOf(Text)).call(this, attrs));\n\n\t\t_this.data = data || '';\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(Text, [{\n\t\tkey: 'is',\n\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tvalue: function is(type) {\n\t\t\treturn type == 'text';\n\t\t}\n\n\t\t/**\n   * Creates a copy of this text node and returns it. Created text node has same text data and attributes as original text node.\n   */\n\n\t}, {\n\t\tkey: 'clone',\n\t\tvalue: function clone() {\n\t\t\treturn new Text(this.data, this.getAttributes());\n\t\t}\n\n\t\t/**\n   * Converts `Text` instance to plain object and returns it.\n   *\n   * @returns {Object} `Text` instance converted to plain object.\n   */\n\n\t}, {\n\t\tkey: 'toJSON',\n\t\tvalue: function toJSON() {\n\t\t\tvar json = _get(Text.prototype.__proto__ || Object.getPrototypeOf(Text.prototype), 'toJSON', this).call(this);\n\n\t\t\tjson.data = this.data;\n\n\t\t\treturn json;\n\t\t}\n\n\t\t/**\n   * Creates a `Text` instance from given plain object (i.e. parsed JSON string).\n   *\n   * @param {Object} json Plain object to be converted to `Text`.\n   * @returns {module:engine/model/text~Text} `Text` instance created using given plain object.\n   */\n\n\t}, {\n\t\tkey: 'offsetSize',\n\t\tget: function get() {\n\t\t\treturn this.data.length;\n\t\t}\n\t}], [{\n\t\tkey: 'fromJSON',\n\t\tvalue: function fromJSON(json) {\n\t\t\treturn new Text(json.data, json.attributes);\n\t\t}\n\t}]);\n\n\treturn Text;\n}(_node2.default);\n\nexports.default = Text;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/text.js\n// module id = 27\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _node = require('./node');\n\nvar _node2 = _interopRequireDefault(_node);\n\nvar _text = require('./text');\n\nvar _text2 = _interopRequireDefault(_text);\n\nvar _objecttomap = require('@ckeditor/ckeditor5-utils/src/objecttomap');\n\nvar _objecttomap2 = _interopRequireDefault(_objecttomap);\n\nvar _isiterable = require('@ckeditor/ckeditor5-utils/src/isiterable');\n\nvar _isiterable2 = _interopRequireDefault(_isiterable);\n\nvar _isPlainObject = require('@ckeditor/ckeditor5-utils/src/lib/lodash/isPlainObject');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _matcher = require('./matcher');\n\nvar _matcher2 = _interopRequireDefault(_matcher);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/view/element\n */\n\n/**\n * View element.\n *\n * Editing engine does not define fixed HTML DTD. This is why the type of the {@link module:engine/view/element~Element} need to\n * be defined by the feature developer. Creating an element you should use {@link module:engine/view/containerelement~ContainerElement}\n * class, {@link module:engine/view/attributeelement~AttributeElement} class or {@link module:engine/view/emptyelement~EmptyElement} class.\n *\n * Note that for view elements which are not created from model, like elements from mutations, paste or\n * {@link module:engine/controller/datacontroller~DataController#set data.set} it is not possible to define the type of the element, so\n * these will be instances of the {@link module:engine/view/element~Element}.\n *\n * @extends module:engine/view/node~Node\n */\nvar Element = function (_Node) {\n\t_inherits(Element, _Node);\n\n\t/**\n  * Creates a view element.\n  *\n  * Attributes can be passed in various formats:\n  *\n  *\t\tnew Element( 'div', { 'class': 'editor', 'contentEditable': 'true' } ); // object\n  *\t\tnew Element( 'div', [ [ 'class', 'editor' ], [ 'contentEditable', 'true' ] ] ); // map-like iterator\n  *\t\tnew Element( 'div', mapOfAttributes ); // map\n  *\n  * @param {String} name Node name.\n  * @param {Object|Iterable} [attrs] Collection of attributes.\n  * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n  * List of nodes to be inserted into created element.\n  */\n\tfunction Element(name, attrs, children) {\n\t\t_classCallCheck(this, Element);\n\n\t\t/**\n   * Name of the element.\n   *\n   * @readonly\n   * @member {String}\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (Element.__proto__ || Object.getPrototypeOf(Element)).call(this));\n\n\t\t_this.name = name;\n\n\t\t/**\n   * Map of attributes, where attributes names are keys and attributes values are values.\n   *\n   * @protected\n   * @member {Map} #_attrs\n   */\n\t\tif ((0, _isPlainObject2.default)(attrs)) {\n\t\t\t_this._attrs = (0, _objecttomap2.default)(attrs);\n\t\t} else {\n\t\t\t_this._attrs = new Map(attrs);\n\t\t}\n\n\t\t/**\n   * Array of child nodes.\n   *\n   * @protected\n   * @member {Array.<module:engine/view/node~Node>}\n   */\n\t\t_this._children = [];\n\n\t\tif (children) {\n\t\t\t_this.insertChildren(0, children);\n\t\t}\n\n\t\t/**\n   * Set of classes associated with element instance.\n   *\n   * @protected\n   * @member {Set}\n   */\n\t\t_this._classes = new Set();\n\n\t\tif (_this._attrs.has('class')) {\n\t\t\t// Remove class attribute and handle it by class set.\n\t\t\tvar classString = _this._attrs.get('class');\n\t\t\tparseClasses(_this._classes, classString);\n\t\t\t_this._attrs.delete('class');\n\t\t}\n\n\t\t/**\n   * Map of styles.\n   *\n   * @protected\n   * @member {Set} module:engine/view/element~Element#_styles\n   */\n\t\t_this._styles = new Map();\n\n\t\tif (_this._attrs.has('style')) {\n\t\t\t// Remove style attribute and handle it by styles map.\n\t\t\tparseInlineStyles(_this._styles, _this._attrs.get('style'));\n\t\t\t_this._attrs.delete('style');\n\t\t}\n\n\t\t/**\n   * Map of custom properties.\n   * Custom properties can be added to element instance, will be cloned but not rendered into DOM.\n   *\n   * @protected\n   * @memeber {Map}\n   */\n\t\t_this._customProperties = new Map();\n\t\treturn _this;\n\t}\n\n\t/**\n  * Number of element's children.\n  *\n  * @readonly\n  * @type {Number}\n  */\n\n\n\t_createClass(Element, [{\n\t\tkey: 'is',\n\n\n\t\t/**\n   * Checks whether given view tree object is of given type.\n   *\n   * Read more in {@link module:engine/view/node~Node#is}.\n   *\n   * @param {String} type\n   * @param {String} [name] Element name.\n   * @returns {Boolean}\n   */\n\t\tvalue: function is(type) {\n\t\t\tvar name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\t\t\tif (!name) {\n\t\t\t\treturn type == 'element' || type == this.name;\n\t\t\t} else {\n\t\t\t\treturn type == 'element' && name == this.name;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Clones provided element.\n   *\n   * @param {Boolean} [deep=false] If set to `true` clones element and all its children recursively. When set to `false`,\n   * element will be cloned without any children.\n   * @returns {module:engine/view/element~Element} Clone of this element.\n   */\n\n\t}, {\n\t\tkey: 'clone',\n\t\tvalue: function clone() {\n\t\t\tvar deep = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n\t\t\tvar childrenClone = [];\n\n\t\t\tif (deep) {\n\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\tvar _didIteratorError = false;\n\t\t\t\tvar _iteratorError = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator = this.getChildren()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\tvar child = _step.value;\n\n\t\t\t\t\t\tchildrenClone.push(child.clone(deep));\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t_iteratorError = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// ContainerElement and AttributeElement should be also cloned properly.\n\t\t\tvar cloned = new this.constructor(this.name, this._attrs, childrenClone);\n\n\t\t\t// Classes and styles are cloned separately - this solution is faster than adding them back to attributes and\n\t\t\t// parse once again in constructor.\n\t\t\tcloned._classes = new Set(this._classes);\n\t\t\tcloned._styles = new Map(this._styles);\n\n\t\t\t// Clone custom properties.\n\t\t\tcloned._customProperties = new Map(this._customProperties);\n\n\t\t\t// Clone filler offset method.\n\t\t\t// We can't define this method in a prototype because it's behavior which\n\t\t\t// is changed by e.g. toWidget() function from ckeditor5-widget. Perhaps this should be one of custom props.\n\t\t\tcloned.getFillerOffset = this.getFillerOffset;\n\n\t\t\treturn cloned;\n\t\t}\n\n\t\t/**\n   * {@link module:engine/view/element~Element#insertChildren Insert} a child node or a list of child nodes at the end of this node\n   * and sets the parent of these nodes to this element.\n   *\n   * @fires module:engine/view/node~Node#change\n   * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} nodes Node or the list of nodes to be inserted.\n   * @returns {Number} Number of appended nodes.\n   */\n\n\t}, {\n\t\tkey: 'appendChildren',\n\t\tvalue: function appendChildren(nodes) {\n\t\t\treturn this.insertChildren(this.childCount, nodes);\n\t\t}\n\n\t\t/**\n   * Gets child at the given index.\n   *\n   * @param {Number} index Index of child.\n   * @returns {module:engine/view/node~Node} Child node.\n   */\n\n\t}, {\n\t\tkey: 'getChild',\n\t\tvalue: function getChild(index) {\n\t\t\treturn this._children[index];\n\t\t}\n\n\t\t/**\n   * Gets index of the given child node. Returns `-1` if child node is not found.\n   *\n   * @param {module:engine/view/node~Node} node Child node.\n   * @returns {Number} Index of the child node.\n   */\n\n\t}, {\n\t\tkey: 'getChildIndex',\n\t\tvalue: function getChildIndex(node) {\n\t\t\treturn this._children.indexOf(node);\n\t\t}\n\n\t\t/**\n   * Gets child nodes iterator.\n   *\n   * @returns {Iterable.<module:engine/view/node~Node>} Child nodes iterator.\n   */\n\n\t}, {\n\t\tkey: 'getChildren',\n\t\tvalue: function getChildren() {\n\t\t\treturn this._children[Symbol.iterator]();\n\t\t}\n\n\t\t/**\n   * Returns an iterator that contains the keys for attributes. Order of inserting attributes is not preserved.\n   *\n   * @returns {Iterator.<String>} Keys for attributes.\n   */\n\n\t}, {\n\t\tkey: 'getAttributeKeys',\n\t\tvalue: regeneratorRuntime.mark(function getAttributeKeys() {\n\t\t\tvar _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, key;\n\n\t\t\treturn regeneratorRuntime.wrap(function getAttributeKeys$(_context) {\n\t\t\t\twhile (1) {\n\t\t\t\t\tswitch (_context.prev = _context.next) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\tif (!(this._classes.size > 0)) {\n\t\t\t\t\t\t\t\t_context.next = 3;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_context.next = 3;\n\t\t\t\t\t\t\treturn 'class';\n\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\tif (!(this._styles.size > 0)) {\n\t\t\t\t\t\t\t\t_context.next = 6;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_context.next = 6;\n\t\t\t\t\t\t\treturn 'style';\n\n\t\t\t\t\t\tcase 6:\n\n\t\t\t\t\t\t\t// This is not an optimal solution because of https://github.com/ckeditor/ckeditor5-engine/issues/454.\n\t\t\t\t\t\t\t// It can be simplified to `yield* this._attrs.keys();`.\n\t\t\t\t\t\t\t_iteratorNormalCompletion2 = true;\n\t\t\t\t\t\t\t_didIteratorError2 = false;\n\t\t\t\t\t\t\t_iteratorError2 = undefined;\n\t\t\t\t\t\t\t_context.prev = 9;\n\t\t\t\t\t\t\t_iterator2 = this._attrs.keys()[Symbol.iterator]();\n\n\t\t\t\t\t\tcase 11:\n\t\t\t\t\t\t\tif (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n\t\t\t\t\t\t\t\t_context.next = 18;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tkey = _step2.value;\n\t\t\t\t\t\t\t_context.next = 15;\n\t\t\t\t\t\t\treturn key;\n\n\t\t\t\t\t\tcase 15:\n\t\t\t\t\t\t\t_iteratorNormalCompletion2 = true;\n\t\t\t\t\t\t\t_context.next = 11;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 18:\n\t\t\t\t\t\t\t_context.next = 24;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 20:\n\t\t\t\t\t\t\t_context.prev = 20;\n\t\t\t\t\t\t\t_context.t0 = _context['catch'](9);\n\t\t\t\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t\t\t\t_iteratorError2 = _context.t0;\n\n\t\t\t\t\t\tcase 24:\n\t\t\t\t\t\t\t_context.prev = 24;\n\t\t\t\t\t\t\t_context.prev = 25;\n\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase 27:\n\t\t\t\t\t\t\t_context.prev = 27;\n\n\t\t\t\t\t\t\tif (!_didIteratorError2) {\n\t\t\t\t\t\t\t\t_context.next = 30;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthrow _iteratorError2;\n\n\t\t\t\t\t\tcase 30:\n\t\t\t\t\t\t\treturn _context.finish(27);\n\n\t\t\t\t\t\tcase 31:\n\t\t\t\t\t\t\treturn _context.finish(24);\n\n\t\t\t\t\t\tcase 32:\n\t\t\t\t\t\tcase 'end':\n\t\t\t\t\t\t\treturn _context.stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, getAttributeKeys, this, [[9, 20, 24, 32], [25,, 27, 31]]);\n\t\t})\n\n\t\t/**\n   * Returns iterator that iterates over this element's attributes.\n   *\n   * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\n   * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n   *\n   * @returns {Iterable.<*>}\n   */\n\n\t}, {\n\t\tkey: 'getAttributes',\n\t\tvalue: regeneratorRuntime.mark(function getAttributes() {\n\t\t\treturn regeneratorRuntime.wrap(function getAttributes$(_context2) {\n\t\t\t\twhile (1) {\n\t\t\t\t\tswitch (_context2.prev = _context2.next) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\treturn _context2.delegateYield(this._attrs.entries(), 't0', 1);\n\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tif (!(this._classes.size > 0)) {\n\t\t\t\t\t\t\t\t_context2.next = 4;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_context2.next = 4;\n\t\t\t\t\t\t\treturn ['class', this.getAttribute('class')];\n\n\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\tif (!(this._styles.size > 0)) {\n\t\t\t\t\t\t\t\t_context2.next = 7;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_context2.next = 7;\n\t\t\t\t\t\t\treturn ['style', this.getAttribute('style')];\n\n\t\t\t\t\t\tcase 7:\n\t\t\t\t\t\tcase 'end':\n\t\t\t\t\t\t\treturn _context2.stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, getAttributes, this);\n\t\t})\n\n\t\t/**\n   * Gets attribute by key. If attribute is not present - returns undefined.\n   *\n   * @param {String} key Attribute key.\n   * @returns {String|undefined} Attribute value.\n   */\n\n\t}, {\n\t\tkey: 'getAttribute',\n\t\tvalue: function getAttribute(key) {\n\t\t\tif (key == 'class') {\n\t\t\t\tif (this._classes.size > 0) {\n\t\t\t\t\treturn [].concat(_toConsumableArray(this._classes)).join(' ');\n\t\t\t\t}\n\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tif (key == 'style') {\n\t\t\t\tif (this._styles.size > 0) {\n\t\t\t\t\tvar styleString = '';\n\n\t\t\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\t\t\tvar _didIteratorError3 = false;\n\t\t\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (var _iterator3 = this._styles[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\t\t\tvar _ref = _step3.value;\n\n\t\t\t\t\t\t\tvar _ref2 = _slicedToArray(_ref, 2);\n\n\t\t\t\t\t\t\tvar property = _ref2[0];\n\t\t\t\t\t\t\tvar value = _ref2[1];\n\n\t\t\t\t\t\t\tstyleString += property + ':' + value + ';';\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t\t\t_iteratorError3 = err;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn styleString;\n\t\t\t\t}\n\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn this._attrs.get(key);\n\t\t}\n\n\t\t/**\n   * Returns a boolean indicating whether an attribute with the specified key exists in the element.\n   *\n   * @param {String} key Attribute key.\n   * @returns {Boolean} `true` if attribute with the specified key exists in the element, false otherwise.\n   */\n\n\t}, {\n\t\tkey: 'hasAttribute',\n\t\tvalue: function hasAttribute(key) {\n\t\t\tif (key == 'class') {\n\t\t\t\treturn this._classes.size > 0;\n\t\t\t}\n\n\t\t\tif (key == 'style') {\n\t\t\t\treturn this._styles.size > 0;\n\t\t\t}\n\n\t\t\treturn this._attrs.has(key);\n\t\t}\n\n\t\t/**\n   * Adds or overwrite attribute with a specified key and value.\n   *\n   * @param {String} key Attribute key.\n   * @param {String} value Attribute value.\n   * @fires module:engine/view/node~Node#change\n   */\n\n\t}, {\n\t\tkey: 'setAttribute',\n\t\tvalue: function setAttribute(key, value) {\n\t\t\tthis._fireChange('attributes', this);\n\n\t\t\tif (key == 'class') {\n\t\t\t\tparseClasses(this._classes, value);\n\t\t\t} else if (key == 'style') {\n\t\t\t\tparseInlineStyles(this._styles, value);\n\t\t\t} else {\n\t\t\t\tthis._attrs.set(key, value);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Inserts a child node or a list of child nodes on the given index and sets the parent of these nodes to\n   * this element.\n   *\n   * @param {Number} index Position where nodes should be inserted.\n   * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} nodes Node or the list of nodes to be inserted.\n   * @fires module:engine/view/node~Node#change\n   * @returns {Number} Number of inserted nodes.\n   */\n\n\t}, {\n\t\tkey: 'insertChildren',\n\t\tvalue: function insertChildren(index, nodes) {\n\t\t\tthis._fireChange('children', this);\n\t\t\tvar count = 0;\n\n\t\t\tnodes = normalize(nodes);\n\n\t\t\tvar _iteratorNormalCompletion4 = true;\n\t\t\tvar _didIteratorError4 = false;\n\t\t\tvar _iteratorError4 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator4 = nodes[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\t\t\tvar node = _step4.value;\n\n\t\t\t\t\tnode.parent = this;\n\n\t\t\t\t\tthis._children.splice(index, 0, node);\n\t\t\t\t\tindex++;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError4 = true;\n\t\t\t\t_iteratorError4 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t\t\t_iterator4.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError4) {\n\t\t\t\t\t\tthrow _iteratorError4;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn count;\n\t\t}\n\n\t\t/**\n   * Removes attribute from the element.\n   *\n   * @param {String} key Attribute key.\n   * @returns {Boolean} Returns true if an attribute existed and has been removed.\n   * @fires module:engine/view/node~Node#change\n   */\n\n\t}, {\n\t\tkey: 'removeAttribute',\n\t\tvalue: function removeAttribute(key) {\n\t\t\tthis._fireChange('attributes', this);\n\n\t\t\t// Remove class attribute.\n\t\t\tif (key == 'class') {\n\t\t\t\tif (this._classes.size > 0) {\n\t\t\t\t\tthis._classes.clear();\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Remove style attribute.\n\t\t\tif (key == 'style') {\n\t\t\t\tif (this._styles.size > 0) {\n\t\t\t\t\tthis._styles.clear();\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Remove other attributes.\n\t\t\treturn this._attrs.delete(key);\n\t\t}\n\n\t\t/**\n   * Removes number of child nodes starting at the given index and set the parent of these nodes to `null`.\n   *\n   * @param {Number} index Number of the first node to remove.\n   * @param {Number} [howMany=1] Number of nodes to remove.\n   * @returns {Array.<module:engine/view/node~Node>} The array of removed nodes.\n   * @fires module:engine/view/node~Node#change\n   */\n\n\t}, {\n\t\tkey: 'removeChildren',\n\t\tvalue: function removeChildren(index) {\n\t\t\tvar howMany = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n\t\t\tthis._fireChange('children', this);\n\n\t\t\tfor (var i = index; i < index + howMany; i++) {\n\t\t\t\tthis._children[i].parent = null;\n\t\t\t}\n\n\t\t\treturn this._children.splice(index, howMany);\n\t\t}\n\n\t\t/**\n   * Checks if this element is similar to other element.\n   * Both elements should have the same name and attributes to be considered as similar. Two similar elements\n   * can contain different set of children nodes.\n   *\n   * @param {module:engine/view/element~Element} otherElement\n   * @returns {Boolean}\n   */\n\n\t}, {\n\t\tkey: 'isSimilar',\n\t\tvalue: function isSimilar(otherElement) {\n\t\t\tif (!(otherElement instanceof Element)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// If exactly the same Element is provided - return true immediately.\n\t\t\tif (this === otherElement) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Check element name.\n\t\t\tif (this.name != otherElement.name) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Check number of attributes, classes and styles.\n\t\t\tif (this._attrs.size !== otherElement._attrs.size || this._classes.size !== otherElement._classes.size || this._styles.size !== otherElement._styles.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Check if attributes are the same.\n\t\t\tvar _iteratorNormalCompletion5 = true;\n\t\t\tvar _didIteratorError5 = false;\n\t\t\tvar _iteratorError5 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator5 = this._attrs[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t\t\t\t\tvar _ref3 = _step5.value;\n\n\t\t\t\t\tvar _ref4 = _slicedToArray(_ref3, 2);\n\n\t\t\t\t\tvar key = _ref4[0];\n\t\t\t\t\tvar value = _ref4[1];\n\n\t\t\t\t\tif (!otherElement._attrs.has(key) || otherElement._attrs.get(key) !== value) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Check if classes are the same.\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError5 = true;\n\t\t\t\t_iteratorError5 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t\t\t\t\t\t_iterator5.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError5) {\n\t\t\t\t\t\tthrow _iteratorError5;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar _iteratorNormalCompletion6 = true;\n\t\t\tvar _didIteratorError6 = false;\n\t\t\tvar _iteratorError6 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator6 = this._classes[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t\t\t\t\tvar className = _step6.value;\n\n\t\t\t\t\tif (!otherElement._classes.has(className)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Check if styles are the same.\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError6 = true;\n\t\t\t\t_iteratorError6 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion6 && _iterator6.return) {\n\t\t\t\t\t\t_iterator6.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError6) {\n\t\t\t\t\t\tthrow _iteratorError6;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar _iteratorNormalCompletion7 = true;\n\t\t\tvar _didIteratorError7 = false;\n\t\t\tvar _iteratorError7 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator7 = this._styles[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n\t\t\t\t\tvar _ref5 = _step7.value;\n\n\t\t\t\t\tvar _ref6 = _slicedToArray(_ref5, 2);\n\n\t\t\t\t\tvar property = _ref6[0];\n\t\t\t\t\tvar _value = _ref6[1];\n\n\t\t\t\t\tif (!otherElement._styles.has(property) || otherElement._styles.get(property) !== _value) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError7 = true;\n\t\t\t\t_iteratorError7 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion7 && _iterator7.return) {\n\t\t\t\t\t\t_iterator7.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError7) {\n\t\t\t\t\t\tthrow _iteratorError7;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n   * Adds specified class.\n   *\n   *\t\telement.addClass( 'foo' ); // Adds 'foo' class.\n   *\t\telement.addClass( 'foo', 'bar' ); // Adds 'foo' and 'bar' classes.\n   *\n   * @param {...String} className\n   * @fires module:engine/view/node~Node#change\n   */\n\n\t}, {\n\t\tkey: 'addClass',\n\t\tvalue: function addClass() {\n\t\t\tvar _this2 = this;\n\n\t\t\tthis._fireChange('attributes', this);\n\n\t\t\tfor (var _len = arguments.length, className = Array(_len), _key = 0; _key < _len; _key++) {\n\t\t\t\tclassName[_key] = arguments[_key];\n\t\t\t}\n\n\t\t\tclassName.forEach(function (name) {\n\t\t\t\treturn _this2._classes.add(name);\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * Removes specified class.\n   *\n  \t *\t\telement.removeClass( 'foo' );  // Removes 'foo' class.\n   *\t\telement.removeClass( 'foo', 'bar' ); // Removes both 'foo' and 'bar' classes.\n   *\n   * @param {...String} className\n   * @fires module:engine/view/node~Node#change\n   */\n\n\t}, {\n\t\tkey: 'removeClass',\n\t\tvalue: function removeClass() {\n\t\t\tvar _this3 = this;\n\n\t\t\tthis._fireChange('attributes', this);\n\n\t\t\tfor (var _len2 = arguments.length, className = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t\t\t\tclassName[_key2] = arguments[_key2];\n\t\t\t}\n\n\t\t\tclassName.forEach(function (name) {\n\t\t\t\treturn _this3._classes.delete(name);\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * Returns true if class is present.\n   * If more then one class is provided - returns true only when all classes are present.\n   *\n   *\t\telement.hasClass( 'foo' ); // Returns true if 'foo' class is present.\n   *\t\telement.hasClass( 'foo', 'bar' ); // Returns true if 'foo' and 'bar' classes are both present.\n   *\n   * @param {...String} className\n   */\n\n\t}, {\n\t\tkey: 'hasClass',\n\t\tvalue: function hasClass() {\n\t\t\tfor (var _len3 = arguments.length, className = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n\t\t\t\tclassName[_key3] = arguments[_key3];\n\t\t\t}\n\n\t\t\tvar _iteratorNormalCompletion8 = true;\n\t\t\tvar _didIteratorError8 = false;\n\t\t\tvar _iteratorError8 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator8 = className[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n\t\t\t\t\tvar name = _step8.value;\n\n\t\t\t\t\tif (!this._classes.has(name)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError8 = true;\n\t\t\t\t_iteratorError8 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion8 && _iterator8.return) {\n\t\t\t\t\t\t_iterator8.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError8) {\n\t\t\t\t\t\tthrow _iteratorError8;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n   * Returns iterator that contains all class names.\n   *\n   * @returns {Iterator.<String>}\n   */\n\n\t}, {\n\t\tkey: 'getClassNames',\n\t\tvalue: function getClassNames() {\n\t\t\treturn this._classes.keys();\n\t\t}\n\n\t\t/**\n   * Adds style to the element.\n   *\n   *\t\telement.setStyle( 'color', 'red' );\n   *\t\telement.setStyle( {\n   *\t\t\tcolor: 'red',\n   *\t\t\tposition: 'fixed'\n   *\t\t} );\n   *\n   * @param {String|Object} property Property name or object with key - value pairs.\n   * @param {String} [value] Value to set. This parameter is ignored if object is provided as the first parameter.\n   * @fires module:engine/view/node~Node#change\n   */\n\n\t}, {\n\t\tkey: 'setStyle',\n\t\tvalue: function setStyle(property, value) {\n\t\t\tthis._fireChange('attributes', this);\n\n\t\t\tif ((0, _isPlainObject2.default)(property)) {\n\t\t\t\tvar keys = Object.keys(property);\n\n\t\t\t\tvar _iteratorNormalCompletion9 = true;\n\t\t\t\tvar _didIteratorError9 = false;\n\t\t\t\tvar _iteratorError9 = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator9 = keys[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n\t\t\t\t\t\tvar key = _step9.value;\n\n\t\t\t\t\t\tthis._styles.set(key, property[key]);\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError9 = true;\n\t\t\t\t\t_iteratorError9 = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion9 && _iterator9.return) {\n\t\t\t\t\t\t\t_iterator9.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError9) {\n\t\t\t\t\t\t\tthrow _iteratorError9;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._styles.set(property, value);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Returns style value for given property.\n   * Undefined is returned if style does not exist.\n   *\n   * @param {String} property\n   * @returns {String|undefined}\n   */\n\n\t}, {\n\t\tkey: 'getStyle',\n\t\tvalue: function getStyle(property) {\n\t\t\treturn this._styles.get(property);\n\t\t}\n\n\t\t/**\n   * Returns iterator that contains all style names.\n   *\n   * @returns {Iterator.<String>}\n   */\n\n\t}, {\n\t\tkey: 'getStyleNames',\n\t\tvalue: function getStyleNames() {\n\t\t\treturn this._styles.keys();\n\t\t}\n\n\t\t/**\n   * Returns true if style keys are present.\n   * If more then one style property is provided - returns true only when all properties are present.\n   *\n   *\t\telement.hasStyle( 'color' ); // Returns true if 'border-top' style is present.\n   *\t\telement.hasStyle( 'color', 'border-top' ); // Returns true if 'color' and 'border-top' styles are both present.\n   *\n   * @param {...String} property\n   */\n\n\t}, {\n\t\tkey: 'hasStyle',\n\t\tvalue: function hasStyle() {\n\t\t\tfor (var _len4 = arguments.length, property = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n\t\t\t\tproperty[_key4] = arguments[_key4];\n\t\t\t}\n\n\t\t\tvar _iteratorNormalCompletion10 = true;\n\t\t\tvar _didIteratorError10 = false;\n\t\t\tvar _iteratorError10 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator10 = property[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n\t\t\t\t\tvar name = _step10.value;\n\n\t\t\t\t\tif (!this._styles.has(name)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError10 = true;\n\t\t\t\t_iteratorError10 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion10 && _iterator10.return) {\n\t\t\t\t\t\t_iterator10.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError10) {\n\t\t\t\t\t\tthrow _iteratorError10;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n   * Removes specified style.\n   *\n   *\t\telement.removeStyle( 'color' );  // Removes 'color' style.\n   *\t\telement.removeStyle( 'color', 'border-top' ); // Removes both 'color' and 'border-top' styles.\n   *\n   * @param {...String} property\n   * @fires module:engine/view/node~Node#change\n   */\n\n\t}, {\n\t\tkey: 'removeStyle',\n\t\tvalue: function removeStyle() {\n\t\t\tvar _this4 = this;\n\n\t\t\tthis._fireChange('attributes', this);\n\n\t\t\tfor (var _len5 = arguments.length, property = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n\t\t\t\tproperty[_key5] = arguments[_key5];\n\t\t\t}\n\n\t\t\tproperty.forEach(function (name) {\n\t\t\t\treturn _this4._styles.delete(name);\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * Returns ancestor element that match specified pattern.\n   * Provided patterns should be compatible with {@link module:engine/view/matcher~Matcher Matcher} as it is used internally.\n   *\n   * @see module:engine/view/matcher~Matcher\n   * @param {Object|String|RegExp|Function} patterns Patterns used to match correct ancestor.\n   * See {@link module:engine/view/matcher~Matcher}.\n   * @returns {module:engine/view/element~Element|null} Found element or `null` if no matching ancestor was found.\n   */\n\n\t}, {\n\t\tkey: 'findAncestor',\n\t\tvalue: function findAncestor() {\n\t\t\tfor (var _len6 = arguments.length, patterns = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n\t\t\t\tpatterns[_key6] = arguments[_key6];\n\t\t\t}\n\n\t\t\tvar matcher = new (Function.prototype.bind.apply(_matcher2.default, [null].concat(patterns)))();\n\t\t\tvar parent = this.parent;\n\n\t\t\twhile (parent) {\n\t\t\t\tif (matcher.match(parent)) {\n\t\t\t\t\treturn parent;\n\t\t\t\t}\n\n\t\t\t\tparent = parent.parent;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n   * Sets a custom property. Unlike attributes, custom properties are not rendered to the DOM,\n   * so they can be used to add special data to elements.\n   *\n   * @param {String|Symbol} key\n   * @param {*} value\n   */\n\n\t}, {\n\t\tkey: 'setCustomProperty',\n\t\tvalue: function setCustomProperty(key, value) {\n\t\t\tthis._customProperties.set(key, value);\n\t\t}\n\n\t\t/**\n   * Returns the custom property value for the given key.\n   *\n   * @param {String|Symbol} key\n   * @returns {*}\n   */\n\n\t}, {\n\t\tkey: 'getCustomProperty',\n\t\tvalue: function getCustomProperty(key) {\n\t\t\treturn this._customProperties.get(key);\n\t\t}\n\n\t\t/**\n   * Removes the custom property stored under the given key.\n   *\n   * @param {String|Symbol} key\n   * @returns {Boolean} Returns true if property was removed.\n   */\n\n\t}, {\n\t\tkey: 'removeCustomProperty',\n\t\tvalue: function removeCustomProperty(key) {\n\t\t\treturn this._customProperties.delete(key);\n\t\t}\n\n\t\t/**\n   * Returns an iterator which iterates over this element's custom properties.\n   * Iterator provides [key, value] pair for each stored property.\n   *\n   * @returns {Iterable.<*>}\n   */\n\n\t}, {\n\t\tkey: 'getCustomProperties',\n\t\tvalue: regeneratorRuntime.mark(function getCustomProperties() {\n\t\t\treturn regeneratorRuntime.wrap(function getCustomProperties$(_context3) {\n\t\t\t\twhile (1) {\n\t\t\t\t\tswitch (_context3.prev = _context3.next) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\treturn _context3.delegateYield(this._customProperties.entries(), 't0', 1);\n\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcase 'end':\n\t\t\t\t\t\t\treturn _context3.stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, getCustomProperties, this);\n\t\t})\n\n\t\t/**\n   * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n   *\n   * @abstract\n   * @method module:engine/view/element~Element#getFillerOffset\n   */\n\n\t}, {\n\t\tkey: 'childCount',\n\t\tget: function get() {\n\t\t\treturn this._children.length;\n\t\t}\n\n\t\t/**\n   * Is `true` if there are no nodes inside this element, `false` otherwise.\n   *\n   * @readonly\n   * @type {Boolean}\n   */\n\n\t}, {\n\t\tkey: 'isEmpty',\n\t\tget: function get() {\n\t\t\treturn this._children.length === 0;\n\t\t}\n\t}]);\n\n\treturn Element;\n}(_node2.default);\n\n// Parses inline styles and puts property - value pairs into styles map.\n// Styles map is cleared before insertion.\n//\n// @param {Map.<String, String>} stylesMap Map to insert parsed properties and values.\n// @param {String} stylesString Styles to parse.\n\n\nexports.default = Element;\nfunction parseInlineStyles(stylesMap, stylesString) {\n\t// `null` if no quote was found in input string or last found quote was a closing quote. See below.\n\tvar quoteType = null;\n\tvar propertyNameStart = 0;\n\tvar propertyValueStart = 0;\n\tvar propertyName = null;\n\n\tstylesMap.clear();\n\n\t// Do not set anything if input string is empty.\n\tif (stylesString === '') {\n\t\treturn;\n\t}\n\n\t// Fix inline styles that do not end with `;` so they are compatible with algorithm below.\n\tif (stylesString.charAt(stylesString.length - 1) != ';') {\n\t\tstylesString = stylesString + ';';\n\t}\n\n\t// Seek the whole string for \"special characters\".\n\tfor (var i = 0; i < stylesString.length; i++) {\n\t\tvar char = stylesString.charAt(i);\n\n\t\tif (quoteType === null) {\n\t\t\t// No quote found yet or last found quote was a closing quote.\n\t\t\tswitch (char) {\n\t\t\t\tcase ':':\n\t\t\t\t\t// Most of time colon means that property name just ended.\n\t\t\t\t\t// Sometimes however `:` is found inside property value (for example in background image url).\n\t\t\t\t\tif (!propertyName) {\n\t\t\t\t\t\t// Treat this as end of property only if property name is not already saved.\n\t\t\t\t\t\t// Save property name.\n\t\t\t\t\t\tpropertyName = stylesString.substr(propertyNameStart, i - propertyNameStart);\n\t\t\t\t\t\t// Save this point as the start of property value.\n\t\t\t\t\t\tpropertyValueStart = i + 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase '\"':\n\t\t\t\tcase '\\'':\n\t\t\t\t\t// Opening quote found (this is an opening quote, because `quoteType` is `null`).\n\t\t\t\t\tquoteType = char;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t// eslint-disable-next-line no-case-declarations\n\t\t\t\tcase ';':\n\t\t\t\t\t// Property value just ended.\n\t\t\t\t\t// Use previously stored property value start to obtain property value.\n\t\t\t\t\tvar propertyValue = stylesString.substr(propertyValueStart, i - propertyValueStart);\n\n\t\t\t\t\tif (propertyName) {\n\t\t\t\t\t\t// Save parsed part.\n\t\t\t\t\t\tstylesMap.set(propertyName.trim(), propertyValue.trim());\n\t\t\t\t\t}\n\n\t\t\t\t\tpropertyName = null;\n\n\t\t\t\t\t// Save this point as property name start. Property name starts immediately after previous property value ends.\n\t\t\t\t\tpropertyNameStart = i + 1;\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else if (char === quoteType) {\n\t\t\t// If a quote char is found and it is a closing quote, mark this fact by `null`-ing `quoteType`.\n\t\t\tquoteType = null;\n\t\t}\n\t}\n}\n\n// Parses class attribute and puts all classes into classes set.\n// Classes set s cleared before insertion.\n//\n// @param {Set.<String>} classesSet Set to insert parsed classes.\n// @param {String} classesString String with classes to parse.\nfunction parseClasses(classesSet, classesString) {\n\tvar classArray = classesString.split(/\\s+/);\n\tclassesSet.clear();\n\tclassArray.forEach(function (name) {\n\t\treturn classesSet.add(name);\n\t});\n}\n\n// Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/view/node~Node|Iterable.<String|module:engine/view/node~Node>}\n// @return {Iterable.<module:engine/view/node~Node>}\nfunction normalize(nodes) {\n\t// Separate condition because string is iterable.\n\tif (typeof nodes == 'string') {\n\t\treturn [new _text2.default(nodes)];\n\t}\n\n\tif (!(0, _isiterable2.default)(nodes)) {\n\t\tnodes = [nodes];\n\t}\n\n\t// Array.from to enable .map() on non-arrays.\n\treturn Array.from(nodes).map(function (node) {\n\t\treturn typeof node == 'string' ? new _text2.default(node) : node;\n\t});\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/view/element.js\n// module id = 28\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexports.default = arrayMap;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_arrayMap.js\n// module id = 29\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n// WEBPACK FOOTER //\n// /workspace/ckeditor5/~/css-loader/lib/css-base.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _node = require('./node');\n\nvar _node2 = _interopRequireDefault(_node);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/view/text\n */\n\n/**\n * Tree view text node.\n *\n * @extends module:engine/view/node~Node\n */\nvar Text = function (_Node) {\n\t_inherits(Text, _Node);\n\n\t/**\n  * Creates a tree view text node.\n  *\n  * @param {String} data Text.\n  */\n\tfunction Text(data) {\n\t\t_classCallCheck(this, Text);\n\n\t\t/**\n   * The text content.\n   *\n   * Setting the data fires the {@link module:engine/view/node~Node#event:change:text change event}.\n   *\n   * @private\n   * @member {String} module:engine/view/text~Text#_data\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (Text.__proto__ || Object.getPrototypeOf(Text)).call(this));\n\n\t\t_this._data = data;\n\t\treturn _this;\n\t}\n\n\t/**\n  * Clones this node.\n  *\n  * @returns {module:engine/view/text~Text} Text node that is a clone of this node.\n  */\n\n\n\t_createClass(Text, [{\n\t\tkey: 'clone',\n\t\tvalue: function clone() {\n\t\t\treturn new Text(this.data);\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'is',\n\t\tvalue: function is(type) {\n\t\t\treturn type == 'text';\n\t\t}\n\n\t\t/**\n   * The text content.\n   *\n   * Setting the data fires the {@link module:engine/view/node~Node#event:change:text change event}.\n   */\n\n\t}, {\n\t\tkey: 'isSimilar',\n\n\n\t\t/**\n   * Checks if this text node is similar to other text node.\n   * Both nodes should have the same data to be considered as similar.\n   *\n   * @param {module:engine/view/text~Text} otherNode Node to check if it is same as this node.\n   * @returns {Boolean}\n   */\n\t\tvalue: function isSimilar(otherNode) {\n\t\t\tif (!(otherNode instanceof Text)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn this === otherNode || this.data === otherNode.data;\n\t\t}\n\t}, {\n\t\tkey: 'data',\n\t\tget: function get() {\n\t\t\treturn this._data;\n\t\t},\n\t\tset: function set(data) {\n\t\t\tthis._fireChange('text', this);\n\n\t\t\tthis._data = data;\n\t\t}\n\t}]);\n\n\treturn Text;\n}(_node2.default);\n\nexports.default = Text;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/view/text.js\n// module id = 31\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _checkGlobal = require('./_checkGlobal');\n\nvar _checkGlobal2 = _interopRequireDefault(_checkGlobal);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used to determine if values are of the language type `Object`. */\nvar objectTypes = {\n  'function': true,\n  'object': true\n};\n\n/** Detect free variable `exports`. */\nvar freeExports = objectTypes[typeof exports === 'undefined' ? 'undefined' : _typeof(exports)] && exports && !exports.nodeType ? exports : undefined;\n\n/** Detect free variable `module`. */\nvar freeModule = objectTypes[typeof module === 'undefined' ? 'undefined' : _typeof(module)] && module && !module.nodeType ? module : undefined;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = (0, _checkGlobal2.default)(freeExports && freeModule && (typeof global === 'undefined' ? 'undefined' : _typeof(global)) == 'object' && global);\n\n/** Detect free variable `self`. */\nvar freeSelf = (0, _checkGlobal2.default)(objectTypes[typeof self === 'undefined' ? 'undefined' : _typeof(self)] && self);\n\n/** Detect free variable `window`. */\nvar freeWindow = (0, _checkGlobal2.default)(objectTypes[typeof window === 'undefined' ? 'undefined' : _typeof(window)] && window);\n\n/** Detect `this` as the global object. */\nvar thisGlobal = (0, _checkGlobal2.default)(objectTypes[_typeof(undefined)] && undefined);\n\n/**\n * Used as a reference to the global object.\n *\n * The `this` value is used if it's the global object to avoid Greasemonkey's\n * restricted `window` object, otherwise the `window` object is used.\n */\nvar root = freeGlobal || freeWindow !== (thisGlobal && thisGlobal.window) && freeWindow || freeSelf || thisGlobal || Function('return this')();\n\nexports.default = root;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_root.js\n// module id = 32\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\t// Test for IE <= 9 as proposed by Browserhacks\n\t\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t\t// Tests for existence of standard globals is to allow style-loader \n\t\t// to operate correctly into non-standard environments\n\t\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\t\treturn window && document && document.all && !window.atob;\n\t}),\n\tgetElement = (function(fn) {\n\t\tvar memo = {};\n\t\treturn function(selector) {\n\t\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t\t}\n\t\t\treturn memo[selector]\n\t\t};\n\t})(function (styleTarget) {\n\t\treturn document.querySelector(styleTarget)\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [],\n\tfixUrls = require(\"./fixUrls\");\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (typeof options.insertInto === \"undefined\") options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar styleTarget = getElement(options.insertInto)\n\tif (!styleTarget) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\tstyleTarget.insertBefore(styleElement, styleTarget.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\tstyleTarget.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\tstyleTarget.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\tstyleTarget.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\toptions.attrs.type = \"text/css\";\n\n\tattachTagAttrs(styleElement, options.attrs);\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction createLinkElement(options) {\n\tvar linkElement = document.createElement(\"link\");\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\tattachTagAttrs(linkElement, options.attrs);\n\tinsertStyleElement(options, linkElement);\n\treturn linkElement;\n}\n\nfunction attachTagAttrs(element, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\telement.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else if(obj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\") {\n\t\tstyleElement = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, styleElement, options);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t\tif(styleElement.href)\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\n\t\t};\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyleElement.setAttribute(\"media\", media)\n\t}\n\n\tif(styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink(linkElement, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/* If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls){\n\t\tcss = fixUrls(css);\n\t}\n\n\tif(sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = linkElement.href;\n\n\tlinkElement.href = URL.createObjectURL(blob);\n\n\tif(oldSrc)\n\t\tURL.revokeObjectURL(oldSrc);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/ckeditor5/~/style-loader/addStyles.js\n// module id = 33\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * For licensing, see LICENSE.md.\nn\n/**\n * @module engine/conversion/buildviewconverter\n */\n\nexports.default = buildViewConverter;\n\nvar _matcher = require('../view/matcher');\n\nvar _matcher2 = _interopRequireDefault(_matcher);\n\nvar _element = require('../model/element');\n\nvar _element2 = _interopRequireDefault(_element);\n\nvar _position = require('../model/position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _writer = require('../model/writer');\n\nvar _writer2 = _interopRequireDefault(_writer);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nvar _isiterable = require('@ckeditor/ckeditor5-utils/src/isiterable');\n\nvar _isiterable2 = _interopRequireDefault(_isiterable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Provides chainable, high-level API to easily build basic view-to-model converters that are appended to given\n * dispatchers. View-to-model converters are used when external data is added to the editor, i.e. when a user pastes\n * HTML content to the editor. Then, converters are used to translate this structure, possibly removing unknown/incorrect\n * nodes, and add it to the model. Also multiple, different elements might be translated into the same thing in the\n * model, i.e. `<b>` and `<strong>` elements might be converted to `bold` attribute (even though `bold` attribute will\n * be then converted only to `<strong>` tag). Instances of this class are created by\n * {@link module:engine/conversion/buildviewconverter~buildViewConverter}.\n *\n * If you need more complex converters, see {@link module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher},\n * {@link module:engine/conversion/view-to-model-converters}, {@link module:engine/conversion/viewconsumable~ViewConsumable}.\n *\n * Using this API it is possible to create various kind of converters:\n *\n * 1. View element to model element:\n *\n *\t\tbuildViewConverter().for( dispatcher ).fromElement( 'p' ).toElement( 'paragraph' );\n *\n * 2. View element to model attribute:\n *\n *\t\tbuildViewConverter().for( dispatcher ).fromElement( 'b' ).fromElement( 'strong' ).toAttribute( 'bold', 'true' );\n *\n * 3. View attribute to model attribute:\n *\n *\t\tbuildViewConverter().for( dispatcher ).fromAttribute( 'style', { 'font-weight': 'bold' } ).toAttribute( 'bold', 'true' );\n *\t\tbuildViewConverter().for( dispatcher )\n *\t\t\t.fromAttribute( 'class' )\n *\t\t\t.toAttribute( ( viewElement ) => ( { class: viewElement.getAttribute( 'class' ) } ) );\n *\n * 4. View elements and attributes to model attribute:\n *\n *\t\tbuildViewConverter().for( dispatcher )\n *\t\t\t.fromElement( 'b' ).fromElement( 'strong' ).fromAttribute( 'style', { 'font-weight': 'bold' } )\n *\t\t\t.toAttribute( 'bold', 'true' );\n *\n * 5. View {@link module:engine/view/matcher~Matcher view element matcher instance} or\n * {@link module:engine/view/matcher~Matcher#add matcher pattern}\n * to model element or attribute:\n *\n *\t\tconst matcher = new ViewMatcher();\n *\t\tmatcher.add( 'div', { class: 'quote' } );\n *\t\tbuildViewConverter().for( dispatcher ).from( matcher ).toElement( 'quote' );\n *\n *\t\tbuildViewConverter().for( dispatcher ).from( { name: 'span', class: 'bold' } ).toAttribute( 'bold', 'true' );\n *\n * Note, that converters built using `ViewConverterBuilder` automatically check {@link module:engine/model/schema~Schema schema}\n * if created model structure is valid. If given conversion would be invalid according to schema, it is ignored.\n *\n * It is possible to provide creator functions as parameters for {@link ~ViewConverterBuilder#toElement}\n * and {@link module:engine/conversion/buildviewconverter~ViewConverterBuilder#toAttribute} methods. See their descriptions to learn more.\n *\n * By default, converter will {@link module:engine/conversion/viewconsumable~ViewConsumable#consume consume} every value specified in\n * given `from...` query, i.e. `.from( { name: 'span', class: 'bold' } )` will make converter consume both `span` name\n * and `bold` class. It is possible to change this behavior using {@link ~ViewConverterBuilder#consuming consuming}\n * modifier. The modifier alters the last `fromXXX` query used before it. To learn more about consuming values,\n * see {@link module:engine/conversion/viewconsumable~ViewConsumable}.\n *\n * It is also possible to {@link module:engine/conversion/buildviewconverter~ViewConverterBuilder#withPriority change default priority}\n * of created converters to decide which converter should be fired earlier and which later. This is useful if you provide\n * a general converter but want to provide different converter for a specific-case (i.e. given view element is converted\n * always to given model element, but if it has given class it is converter to other model element). For this,\n * use {@link module:engine/conversion/buildviewconverter~ViewConverterBuilder#withPriority withPriority} modifier. The modifier alters\n * the last `from...` query used before it.\n *\n * Note that `to...` methods are \"terminators\", which means that should be the last one used in building converter.\n *\n * You can use {@link module:engine/conversion/buildmodelconverter~ModelConverterBuilder}\n * to create \"opposite\" converters - from model to view.\n */\nvar ViewConverterBuilder = function () {\n\t/**\n  * Creates `ViewConverterBuilder` with given `dispatchers` registered to it.\n  */\n\tfunction ViewConverterBuilder() {\n\t\t_classCallCheck(this, ViewConverterBuilder);\n\n\t\t/**\n   * Dispatchers to which converters will be attached.\n   *\n   * @type {Array.<module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher>}\n   * @private\n   */\n\t\tthis._dispatchers = [];\n\n\t\t/**\n   * Stores \"from\" queries.\n   *\n   * @type {Array}\n   * @private\n   */\n\t\tthis._from = [];\n\t}\n\n\t/**\n  * Set one or more dispatchers which the built converter will be attached to.\n  *\n  * @chainable\n  * @param {...module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher} dispatchers One or more dispatchers.\n  * @returns {module:engine/conversion/buildviewconverter~ViewConverterBuilder}\n  */\n\n\n\t_createClass(ViewConverterBuilder, [{\n\t\tkey: 'for',\n\t\tvalue: function _for() {\n\t\t\tfor (var _len = arguments.length, dispatchers = Array(_len), _key = 0; _key < _len; _key++) {\n\t\t\t\tdispatchers[_key] = arguments[_key];\n\t\t\t}\n\n\t\t\tthis._dispatchers = dispatchers;\n\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Registers what view element should be converted.\n   *\n   *\t\tbuildViewConverter().for( dispatcher ).fromElement( 'p' ).toElement( 'paragraph' );\n   *\n   * @chainable\n   * @param {String} elementName View element name.\n   * @returns {module:engine/conversion/buildviewconverter~ViewConverterBuilder}\n   */\n\n\t}, {\n\t\tkey: 'fromElement',\n\t\tvalue: function fromElement(elementName) {\n\t\t\treturn this.from({ name: elementName });\n\t\t}\n\n\t\t/**\n   * Registers what view attribute should be converted.\n   *\n   *\t\tbuildViewConverter().for( dispatcher ).fromAttribute( 'style', { 'font-weight': 'bold' } ).toAttribute( 'bold', 'true' );\n   *\n   * @chainable\n   * @param {String|RegExp} key View attribute key.\n   * @param {String|RegExp} [value] View attribute value.\n   * @returns {module:engine/conversion/buildviewconverter~ViewConverterBuilder}\n   */\n\n\t}, {\n\t\tkey: 'fromAttribute',\n\t\tvalue: function fromAttribute(key) {\n\t\t\tvar value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : /.*/;\n\n\t\t\tvar pattern = {};\n\n\t\t\tif (key === 'style' || key === 'class') {\n\t\t\t\tpattern[key] = value;\n\t\t\t} else {\n\t\t\t\tpattern.attribute = {};\n\t\t\t\tpattern.attribute[key] = value;\n\t\t\t}\n\n\t\t\tvar matcher = new _matcher2.default(pattern);\n\n\t\t\tthis._from.push({\n\t\t\t\tmatcher: matcher,\n\t\t\t\tconsume: false,\n\t\t\t\tpriority: null,\n\t\t\t\tattributeKey: key\n\t\t\t});\n\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Registers what view pattern should be converted. The method accepts either {@link module:engine/view/matcher~Matcher view matcher}\n   * or view matcher pattern.\n   *\n   *\t\tconst matcher = new ViewMatcher();\n   *\t\tmatcher.add( 'div', { class: 'quote' } );\n   *\t\tbuildViewConverter().for( dispatcher ).from( matcher ).toElement( 'quote' );\n   *\n   *\t\tbuildViewConverter().for( dispatcher ).from( { name: 'span', class: 'bold' } ).toAttribute( 'bold', 'true' );\n   *\n   * @chainable\n   * @param {Object|module:engine/view/matcher~Matcher} matcher View matcher or view matcher pattern.\n   * @returns {module:engine/conversion/buildviewconverter~ViewConverterBuilder}\n   */\n\n\t}, {\n\t\tkey: 'from',\n\t\tvalue: function from(matcher) {\n\t\t\tif (!(matcher instanceof _matcher2.default)) {\n\t\t\t\tmatcher = new _matcher2.default(matcher);\n\t\t\t}\n\n\t\t\tthis._from.push({\n\t\t\t\tmatcher: matcher,\n\t\t\t\tconsume: false,\n\t\t\t\tpriority: null\n\t\t\t});\n\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Modifies which consumable values will be {@link module:engine/conversion/viewconsumable~ViewConsumable#consume consumed}\n   * by built converter.\n   * It modifies the last `from...` query. Can be used after each `from...` query in given chain. Useful for providing\n   * more specific matches.\n   *\n   *\t\t// This converter will only handle class bold conversion (to proper attribute) but span element\n   *\t\t// conversion will have to be done in separate converter.\n   *\t\t// Without consuming modifier, the converter would consume both class and name, so a converter for\n   *\t\t// span element would not be fired.\n   *\t\tbuildViewConverter().for( dispatcher )\n   *\t\t\t.from( { name: 'span', class: 'bold' } ).consuming( { class: 'bold' } )\n   *\t\t\t.toAttribute( 'bold', 'true' } );\n   *\n   *\t\tbuildViewConverter().for( dispatcher )\n   *\t\t\t.fromElement( 'img' ).consuming( { name: true, attribute: [ 'src', 'title' ] } )\n   *\t\t\t.toElement( ( viewElement ) => new ModelElement( 'image', { src: viewElement.getAttribute( 'src' ),\n   *\t\t\t                                                            title: viewElement.getAttribute( 'title' ) } );\n   *\n   * **Note:** All and only values from passed object has to be consumable on converted view element. This means that\n   * using `consuming` method, you can either make looser conversion conditions (like in first example) or tighter\n   * conversion conditions (like in second example). So, the view element, to be converter, has to match query of\n   * `from...` method and then have to have enough consumable values to consume.\n   *\n   * @see module:engine/conversion/viewconsumable~ViewConsumable\n   * @chainable\n   * @param {Object} consume Values to consume.\n   * @returns {module:engine/conversion/buildviewconverter~ViewConverterBuilder}\n   */\n\n\t}, {\n\t\tkey: 'consuming',\n\t\tvalue: function consuming(consume) {\n\t\t\tvar lastFrom = this._from[this._from.length - 1];\n\t\t\tlastFrom.consume = consume;\n\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Changes default priority for built converter. It modifies the last `from...` query. Can be used after each\n   * `from...` query in given chain. Useful for overwriting converters. The lower the number, the earlier converter will be fired.\n   *\n   *\t\tbuildViewConverter().for( dispatcher ).fromElement( 'p' ).toElement( 'paragraph' );\n   *\t\t// Register converter with proper priority, otherwise \"p\" element would get consumed by first\n   *\t\t// converter and the second converter would not be fired.\n   *\t\tbuildViewConverter().for( dispatcher )\n   *\t\t\t.from( { name: 'p', class: 'custom' } ).withPriority( 9 )\n   *\t\t\t.toElement( 'customParagraph' );\n   *\n   * **Note:** `ViewConverterBuilder` takes care of applying all `toElement()` conversions before all `toAttribute()`\n   * conversions. This is done by setting default `toElement()` priority to `normal` and `toAttribute()` priority to `low`.\n   * It is recommended to set converter priority for `toElement()` around `0` (the value of `normal` priority)\n   * and `toAttribute()` priority around `-1000` (the value of `low` priority).\n   * It is important that model elements are created before attributes, otherwise attributes would\n   * not be applied or other errors may occur.\n   *\n   * @chainable\n   * @param {Number} priority Converter priority.\n   * @returns {module:engine/conversion/buildviewconverter~ViewConverterBuilder}\n   */\n\n\t}, {\n\t\tkey: 'withPriority',\n\t\tvalue: function withPriority(priority) {\n\t\t\tvar lastFrom = this._from[this._from.length - 1];\n\t\t\tlastFrom.priority = priority;\n\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Registers what model element will be created by converter.\n   *\n   * Method accepts two ways of providing what kind of model element will be created. You can pass model element\n   * name as a `string` or a function that will return model element instance. If you provide creator function,\n   * it will be passed converted view element as first and only parameter.\n   *\n   *\t\tbuildViewConverter().for( dispatcher ).fromElement( 'p' ).toElement( 'paragraph' );\n   *\t\tbuildViewConverter().for( dispatcher )\n   *\t\t\t.fromElement( 'img' )\n   *\t\t\t.toElement( ( viewElement ) => new ModelElement( 'image', { src: viewElement.getAttribute( 'src' ) } );\n   *\n   * @param {String|Function} element Model element name or model element creator function.\n   */\n\n\t}, {\n\t\tkey: 'toElement',\n\t\tvalue: function toElement(element) {\n\t\t\tfunction eventCallbackGen(from) {\n\t\t\t\treturn function (evt, data, consumable, conversionApi) {\n\t\t\t\t\t// There is one callback for all patterns in the matcher.\n\t\t\t\t\t// This will be usually just one pattern but we support matchers with many patterns too.\n\t\t\t\t\tvar matchAll = from.matcher.matchAll(data.input);\n\n\t\t\t\t\t// If there is no match, this callback should not do anything.\n\t\t\t\t\tif (!matchAll) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now, for every match between matcher and actual element, we will try to consume the match.\n\t\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\t\tvar _didIteratorError = false;\n\t\t\t\t\tvar _iteratorError = undefined;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (var _iterator = matchAll[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\t\tvar match = _step.value;\n\n\t\t\t\t\t\t\t// Create model element basing on creator function or element name.\n\t\t\t\t\t\t\tvar modelElement = element instanceof Function ? element(data.input) : new _element2.default(element);\n\n\t\t\t\t\t\t\t// Do not convert if element building function returned falsy value.\n\t\t\t\t\t\t\tif (!modelElement) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Check whether generated structure is okay with `Schema`.\n\t\t\t\t\t\t\tvar keys = Array.from(modelElement.getAttributeKeys());\n\n\t\t\t\t\t\t\tif (!conversionApi.schema.check({ name: modelElement.name, attributes: keys, inside: data.context })) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Try to consume appropriate values from consumable values list.\n\t\t\t\t\t\t\tif (!consumable.consume(data.input, from.consume || match.match)) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// If everything is fine, we are ready to start the conversion.\n\t\t\t\t\t\t\t// Add newly created `modelElement` to the parents stack.\n\t\t\t\t\t\t\tdata.context.push(modelElement);\n\n\t\t\t\t\t\t\t// Convert children of converted view element and append them to `modelElement`.\n\t\t\t\t\t\t\tvar modelChildren = conversionApi.convertChildren(data.input, consumable, data);\n\t\t\t\t\t\t\tvar insertPosition = _position2.default.createAt(modelElement, 'end');\n\t\t\t\t\t\t\t_writer2.default.insert(insertPosition, modelChildren);\n\n\t\t\t\t\t\t\t// Remove created `modelElement` from the parents stack.\n\t\t\t\t\t\t\tdata.context.pop();\n\n\t\t\t\t\t\t\t// Add `modelElement` as a result.\n\t\t\t\t\t\t\tdata.output = modelElement;\n\n\t\t\t\t\t\t\t// Prevent multiple conversion if there are other correct matches.\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t\t_iteratorError = err;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis._setCallback(eventCallbackGen, 'normal');\n\t\t}\n\n\t\t/**\n   * Registers what model attribute will be created by converter.\n   *\n   * Method accepts two ways of providing what kind of model attribute will be created. You can either pass two strings\n   * representing attribute key and attribute value or a function that returns an object with `key` and `value` properties.\n   * If you provide creator function, it will be passed converted view element as first and only parameter.\n   *\n   *\t\tbuildViewConverter().for( dispatcher ).fromAttribute( 'alt' ).toAttribute( 'alt' );\n   *\t\tbuildViewConverter().for( dispatcher ).fromAttribute( 'style', { 'font-weight': 'bold' } ).toAttribute( 'bold', true );\n   *\t\tbuildViewConverter().for( dispatcher )\n   *\t\t\t.fromAttribute( 'class' )\n   *\t\t\t.toAttribute( ( viewElement ) => ( { key: 'class', value: 'class-' + viewElement.getAttribute( 'class' ) } ) );\n   *\n   * @param {String|Function} keyOrCreator Attribute key or a creator function.\n   * @param {String} [value] Attribute value. Ignored if `keyOrCreator` is not a `string`. If `keyOrCreator` is `string`,\n   * if `value` is not set, attribute value from converted element will be used.\n   */\n\n\t}, {\n\t\tkey: 'toAttribute',\n\t\tvalue: function toAttribute(keyOrCreator, value) {\n\t\t\tfunction eventCallbackGen(from) {\n\t\t\t\treturn function (evt, data, consumable, conversionApi) {\n\t\t\t\t\t// There is one callback for all patterns in the matcher.\n\t\t\t\t\t// This will be usually just one pattern but we support matchers with many patterns too.\n\t\t\t\t\tvar matchAll = from.matcher.matchAll(data.input);\n\n\t\t\t\t\t// If there is no match, this callback should not do anything.\n\t\t\t\t\tif (!matchAll) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now, for every match between matcher and actual element, we will try to consume the match.\n\t\t\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\t\t\tvar _didIteratorError2 = false;\n\t\t\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (var _iterator2 = matchAll[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\t\t\tvar match = _step2.value;\n\n\t\t\t\t\t\t\t// Try to consume appropriate values from consumable values list.\n\t\t\t\t\t\t\tif (!consumable.consume(data.input, from.consume || match.match)) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Since we are converting to attribute we need an output on which we will set the attribute.\n\t\t\t\t\t\t\t// If the output is not created yet, we will create it.\n\t\t\t\t\t\t\tif (!data.output) {\n\t\t\t\t\t\t\t\tdata.output = conversionApi.convertChildren(data.input, consumable, data);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Use attribute creator function, if provided.\n\t\t\t\t\t\t\tvar attribute = void 0;\n\n\t\t\t\t\t\t\tif (keyOrCreator instanceof Function) {\n\t\t\t\t\t\t\t\tattribute = keyOrCreator(data.input);\n\n\t\t\t\t\t\t\t\tif (!attribute) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tattribute = {\n\t\t\t\t\t\t\t\t\tkey: keyOrCreator,\n\t\t\t\t\t\t\t\t\tvalue: value ? value : data.input.getAttribute(from.attributeKey)\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Set attribute on current `output`. `Schema` is checked inside this helper function.\n\t\t\t\t\t\t\tsetAttributeOn(data.output, attribute, data, conversionApi);\n\n\t\t\t\t\t\t\t// Prevent multiple conversion if there are other correct matches.\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t\t\t_iteratorError2 = err;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis._setCallback(eventCallbackGen, 'low');\n\t\t}\n\n\t\t/**\n   * Registers how model element marking marker range will be created by converter.\n   *\n   * Created element has to match the following pattern:\n   *\n   * \t\t{ name: '$marker', attribute: { data-name: /^\\w/ } }\n   *\n   * There are two ways of creating this element:\n   *\n   * 1. Makes sure that converted view element will have property `data-name` then converter will\n   * automatically take this property value. In this case there is no need to provide creator function.\n   * For the following view:\n   *\n   *\t\t<marker data-name=\"search\"></marker>foo<marker data-name=\"search\"></marker>\n   *\n   * converter should look like this:\n   *\n   *\t\tbuildViewConverter().for( dispatcher ).fromElement( 'marker' ).toMarker();\n   *\n   * 2. Creates element by creator:\n   *\n   * For the following view:\n   *\n   * \t\t<span foo=\"search\"></span>foo<span foo=\"search\"></span>\n   *\n   * converter should look like this:\n   *\n   * \t\tbuildViewConverter().for( dispatcher ).from( { name: 'span', { attribute: foo: /^\\w/ } } ).toMarker( ( data ) => {\n   * \t\t\treturn new Element( '$marker', { 'data-name': data.getAttribute( 'foo' ) } );\n   * \t\t} );\n   *\n   * @param {Function} [creator] Creator function.\n   */\n\n\t}, {\n\t\tkey: 'toMarker',\n\t\tvalue: function toMarker(creator) {\n\t\t\tfunction eventCallbackGen(from) {\n\t\t\t\treturn function (evt, data, consumable) {\n\t\t\t\t\t// There is one callback for all patterns in the matcher.\n\t\t\t\t\t// This will be usually just one pattern but we support matchers with many patterns too.\n\t\t\t\t\tvar matchAll = from.matcher.matchAll(data.input);\n\n\t\t\t\t\t// If there is no match, this callback should not do anything.\n\t\t\t\t\tif (!matchAll) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar modelElement = void 0;\n\n\t\t\t\t\t// When creator is provided then create model element basing on creator function.\n\t\t\t\t\tif (creator instanceof Function) {\n\t\t\t\t\t\tmodelElement = creator(data.input);\n\t\t\t\t\t\t// When there is no creator then create model element basing on data from view element.\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmodelElement = new _element2.default('$marker', { 'data-name': data.input.getAttribute('data-name') });\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if model element is correct (has proper name and property).\n\t\t\t\t\tif (modelElement.name != '$marker' || typeof modelElement.getAttribute('data-name') != 'string') {\n\t\t\t\t\t\tthrow new _ckeditorerror2.default('build-view-converter-invalid-marker: Invalid model element to mark marker range.');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Now, for every match between matcher and actual element, we will try to consume the match.\n\t\t\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\t\t\tvar _didIteratorError3 = false;\n\t\t\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (var _iterator3 = matchAll[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\t\t\tvar match = _step3.value;\n\n\t\t\t\t\t\t\t// Try to consume appropriate values from consumable values list.\n\t\t\t\t\t\t\tif (!consumable.consume(data.input, from.consume || match.match)) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tdata.output = modelElement;\n\n\t\t\t\t\t\t\t// Prevent multiple conversion if there are other correct matches.\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t\t\t_iteratorError3 = err;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis._setCallback(eventCallbackGen, 'normal');\n\t\t}\n\n\t\t/**\n   * Helper function that uses given callback generator to created callback function and sets it on registered dispatchers.\n   *\n   * @param eventCallbackGen\n   * @param defaultPriority\n   * @private\n   */\n\n\t}, {\n\t\tkey: '_setCallback',\n\t\tvalue: function _setCallback(eventCallbackGen, defaultPriority) {\n\t\t\t// We will add separate event callback for each registered `from` entry.\n\t\t\tvar _iteratorNormalCompletion4 = true;\n\t\t\tvar _didIteratorError4 = false;\n\t\t\tvar _iteratorError4 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator4 = this._from[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\t\t\tvar from = _step4.value;\n\n\t\t\t\t\t// We have to figure out event name basing on matcher's patterns.\n\t\t\t\t\t// If there is exactly one pattern and it has `name` property we will used that name.\n\t\t\t\t\tvar matcherElementName = from.matcher.getElementName();\n\t\t\t\t\tvar eventName = matcherElementName ? 'element:' + matcherElementName : 'element';\n\t\t\t\t\tvar eventCallback = eventCallbackGen(from);\n\n\t\t\t\t\tvar priority = from.priority === null ? defaultPriority : from.priority;\n\n\t\t\t\t\t// Add event to each registered dispatcher.\n\t\t\t\t\tvar _iteratorNormalCompletion5 = true;\n\t\t\t\t\tvar _didIteratorError5 = false;\n\t\t\t\t\tvar _iteratorError5 = undefined;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (var _iterator5 = this._dispatchers[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t\t\t\t\t\t\tvar dispatcher = _step5.value;\n\n\t\t\t\t\t\t\tdispatcher.on(eventName, eventCallback, { priority: priority });\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t_didIteratorError5 = true;\n\t\t\t\t\t\t_iteratorError5 = err;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t\t\t\t\t\t\t\t_iterator5.return();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (_didIteratorError5) {\n\t\t\t\t\t\t\t\tthrow _iteratorError5;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError4 = true;\n\t\t\t\t_iteratorError4 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t\t\t_iterator4.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError4) {\n\t\t\t\t\t\tthrow _iteratorError4;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn ViewConverterBuilder;\n}();\n\n// Helper function that sets given attributes on given `module:engine/model/node~Node` or\n// `module:engine/model/documentfragment~DocumentFragment`.\n\n\nfunction setAttributeOn(toChange, attribute, data, conversionApi) {\n\tif ((0, _isiterable2.default)(toChange)) {\n\t\tvar _iteratorNormalCompletion6 = true;\n\t\tvar _didIteratorError6 = false;\n\t\tvar _iteratorError6 = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator6 = toChange[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t\t\t\tvar node = _step6.value;\n\n\t\t\t\tsetAttributeOn(node, attribute, data, conversionApi);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t_didIteratorError6 = true;\n\t\t\t_iteratorError6 = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion6 && _iterator6.return) {\n\t\t\t\t\t_iterator6.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError6) {\n\t\t\t\t\tthrow _iteratorError6;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn;\n\t}\n\n\tvar keys = Array.from(toChange.getAttributeKeys());\n\tkeys.push(attribute.key);\n\n\tvar schemaQuery = {\n\t\tname: toChange.name || '$text',\n\t\tattributes: keys,\n\t\tinside: data.context\n\t};\n\n\tif (conversionApi.schema.check(schemaQuery)) {\n\t\ttoChange.setAttribute(attribute.key, attribute.value);\n\t}\n}\n\n/**\n * Entry point for view-to-model converters builder. This chainable API makes it easy to create basic, most common\n * view-to-model converters and attach them to provided dispatchers. The method returns an instance of\n * {@link module:engine/conversion/buildviewconverter~ViewConverterBuilder}.\n */\nfunction buildViewConverter() {\n\treturn new ViewConverterBuilder();\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/conversion/buildviewconverter.js\n// module id = 34\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\nn\n/**\n * @module module:engine/model/documentfragment\n */\n\nvar _nodelist = require('./nodelist');\n\nvar _nodelist2 = _interopRequireDefault(_nodelist);\n\nvar _element = require('./element');\n\nvar _element2 = _interopRequireDefault(_element);\n\nvar _text = require('./text');\n\nvar _text2 = _interopRequireDefault(_text);\n\nvar _isiterable = require('@ckeditor/ckeditor5-utils/src/isiterable');\n\nvar _isiterable2 = _interopRequireDefault(_isiterable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * DocumentFragment represents a part of model which does not have a common root but it's top-level nodes\n * can be seen as siblings. In other words, it is a detached part of model tree, without a root.\n *\n * DocumentFragment has own {@link module:engine/model/markercollection~MarkerCollection}. Markers from this collection\n * will be set to the {@link module:engine/model/document~Document#markers document markers} by a\n * {@link module:engine/model/writer~writer.insert} function.\n */\nvar DocumentFragment = function () {\n\t/**\n  * Creates an empty `DocumentFragment`.\n  *\n  * @param {module:engine/model/node~Node|Iterable.<module:engine/model/node~Node>} [children]\n  * Nodes to be contained inside the `DocumentFragment`.\n  */\n\tfunction DocumentFragment(children) {\n\t\t_classCallCheck(this, DocumentFragment);\n\n\t\t/**\n   * DocumentFragment static markers map. This is a list of names and {@link module:engine/model/range~Range ranges}\n   * which will be set as Markers to {@link module:engine/model/document~Document#markers document markers collection}\n   * when DocumentFragment will be inserted to the document.\n   *\n   * @member {Map<String, {module:engine/model/range~Range}>} module:engine/model/documentfragment~DocumentFragment#markers\n   */\n\t\tthis.markers = new Map();\n\n\t\t/**\n   * List of nodes contained inside the document fragment.\n   *\n   * @private\n   * @member {module:engine/model/nodelist~NodeList} module:engine/model/documentfragment~DocumentFragment#_children\n   */\n\t\tthis._children = new _nodelist2.default();\n\n\t\tif (children) {\n\t\t\tthis.insertChildren(0, children);\n\t\t}\n\t}\n\n\t/**\n  * Returns an iterator that iterates over all nodes contained inside this document fragment.\n  *\n  * @returns {Iterator.<module:engine/model/node~Node>}\n  */\n\n\n\t_createClass(DocumentFragment, [{\n\t\tkey: Symbol.iterator,\n\t\tvalue: function value() {\n\t\t\treturn this.getChildren();\n\t\t}\n\n\t\t/**\n   * Number of this document fragment's children.\n   *\n   * @readonly\n   * @type {Number}\n   */\n\n\t}, {\n\t\tkey: 'is',\n\n\n\t\t/**\n   * Checks whether given model tree object is of given type.\n   *\n   * Read more in {@link module:engine/model/node~Node#is}.\n   *\n   * @param {String} type\n   * @returns {Boolean}\n   */\n\t\tvalue: function is(type) {\n\t\t\treturn type == 'documentFragment';\n\t\t}\n\n\t\t/**\n   * Gets the child at the given index. Returns `null` if incorrect index was passed.\n   *\n   * @param {Number} index Index of child.\n   * @returns {module:engine/model/node~Node|null} Child node.\n   */\n\n\t}, {\n\t\tkey: 'getChild',\n\t\tvalue: function getChild(index) {\n\t\t\treturn this._children.getNode(index);\n\t\t}\n\n\t\t/**\n   * Returns an iterator that iterates over all of this document fragment's children.\n   *\n   * @returns {Iterable.<module:engine/model/node~Node>}\n   */\n\n\t}, {\n\t\tkey: 'getChildren',\n\t\tvalue: function getChildren() {\n\t\t\treturn this._children[Symbol.iterator]();\n\t\t}\n\n\t\t/**\n   * Returns an index of the given child node. Returns `null` if given node is not a child of this document fragment.\n   *\n   * @param {module:engine/model/node~Node} node Child node to look for.\n   * @returns {Number|null} Child node's index.\n   */\n\n\t}, {\n\t\tkey: 'getChildIndex',\n\t\tvalue: function getChildIndex(node) {\n\t\t\treturn this._children.getNodeIndex(node);\n\t\t}\n\n\t\t/**\n   * Returns the starting offset of given child. Starting offset is equal to the sum of\n   * {module:engine/model/node~Node#offsetSize offset sizes} of all node's siblings that are before it. Returns `null` if\n   * given node is not a child of this document fragment.\n   *\n   * @param {module:engine/model/node~Node} node Child node to look for.\n   * @returns {Number|null} Child node's starting offset.\n   */\n\n\t}, {\n\t\tkey: 'getChildStartOffset',\n\t\tvalue: function getChildStartOffset(node) {\n\t\t\treturn this._children.getNodeStartOffset(node);\n\t\t}\n\n\t\t/**\n   * Returns path to a `DocumentFragment`, which is an empty array. Added for compatibility reasons.\n   *\n   * @returns {Array}\n   */\n\n\t}, {\n\t\tkey: 'getPath',\n\t\tvalue: function getPath() {\n\t\t\treturn [];\n\t\t}\n\n\t\t/**\n   * Returns a descendant node by its path relative to this element.\n   *\n   *\t\t// <this>a<b>c</b></this>\n   *\t\tthis.getNodeByPath( [ 0 ] );     // -> \"a\"\n   *\t\tthis.getNodeByPath( [ 1 ] );     // -> <b>\n   *\t\tthis.getNodeByPath( [ 1, 0 ] );  // -> \"c\"\n   *\n   * @param {Array.<Number>} relativePath Path of the node to find, relative to this element.\n   * @returns {module:engine/model/node~Node|module:engine/model/documentfragment~DocumentFragment}\n   */\n\n\t}, {\n\t\tkey: 'getNodeByPath',\n\t\tvalue: function getNodeByPath(relativePath) {\n\t\t\tvar node = this; // eslint-disable-line consistent-this\n\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = relativePath[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar index = _step.value;\n\n\t\t\t\t\tnode = node.getChild(node.offsetToIndex(index));\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn node;\n\t\t}\n\n\t\t/**\n   * Converts offset \"position\" to index \"position\".\n   *\n   * Returns index of a node that occupies given offset. If given offset is too low, returns `0`. If given offset is\n   * too high, returns index after last child}.\n   *\n   *\t\tconst textNode = new Text( 'foo' );\n   *\t\tconst pElement = new Element( 'p' );\n   *\t\tconst docFrag = new DocumentFragment( [ textNode, pElement ] );\n   *\t\tdocFrag.offsetToIndex( -1 ); // Returns 0, because offset is too low.\n   *\t\tdocFrag.offsetToIndex( 0 ); // Returns 0, because offset 0 is taken by `textNode` which is at index 0.\n   *\t\tdocFrag.offsetToIndex( 1 ); // Returns 0, because `textNode` has `offsetSize` equal to 3, so it occupies offset 1 too.\n   *\t\tdocFrag.offsetToIndex( 2 ); // Returns 0.\n   *\t\tdocFrag.offsetToIndex( 3 ); // Returns 1.\n   *\t\tdocFrag.offsetToIndex( 4 ); // Returns 2. There are no nodes at offset 4, so last available index is returned.\n   *\n   * @param {Number} offset Offset to look for.\n   * @returns {Number} Index of a node that occupies given offset.\n   */\n\n\t}, {\n\t\tkey: 'offsetToIndex',\n\t\tvalue: function offsetToIndex(offset) {\n\t\t\treturn this._children.offsetToIndex(offset);\n\t\t}\n\n\t\t/**\n   * {@link #insertChildren Inserts} one or more nodes at the end of this document fragment.\n   *\n   * @param {module:engine/model/node~Node|Iterable.<module:engine/model/node~Node>} nodes Nodes to be inserted.\n   */\n\n\t}, {\n\t\tkey: 'appendChildren',\n\t\tvalue: function appendChildren(nodes) {\n\t\t\tthis.insertChildren(this.childCount, nodes);\n\t\t}\n\n\t\t/**\n   * Inserts one or more nodes at the given index and sets {@link module:engine/model/node~Node#parent parent} of these nodes\n   * to this document fragment.\n   *\n   * @param {Number} index Index at which nodes should be inserted.\n   * @param {module:engine/model/node~Node|Iterable.<module:engine/model/node~Node>} nodes Nodes to be inserted.\n   */\n\n\t}, {\n\t\tkey: 'insertChildren',\n\t\tvalue: function insertChildren(index, nodes) {\n\t\t\tnodes = normalize(nodes);\n\n\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\tvar _didIteratorError2 = false;\n\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator2 = nodes[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\tvar node = _step2.value;\n\n\t\t\t\t\tnode.parent = this;\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t_iteratorError2 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._children.insertNodes(index, nodes);\n\t\t}\n\n\t\t/**\n   * Removes one or more nodes starting at the given index\n   * and sets {@link module:engine/model/node~Node#parent parent} of these nodes to `null`.\n   *\n   * @param {Number} index Index of the first node to remove.\n   * @param {Number} [howMany=1] Number of nodes to remove.\n   * @returns {Array.<module:engine/model/node~Node>} Array containing removed nodes.\n   */\n\n\t}, {\n\t\tkey: 'removeChildren',\n\t\tvalue: function removeChildren(index) {\n\t\t\tvar howMany = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n\t\t\tvar nodes = this._children.removeNodes(index, howMany);\n\n\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\tvar _didIteratorError3 = false;\n\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator3 = nodes[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\tvar node = _step3.value;\n\n\t\t\t\t\tnode.parent = null;\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t_iteratorError3 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn nodes;\n\t\t}\n\n\t\t/**\n   * Converts `DocumentFragment` instance to plain object and returns it.\n   * Takes care of converting all of this document fragment's children.\n   *\n   * @returns {Object} `DocumentFragment` instance converted to plain object.\n   */\n\n\t}, {\n\t\tkey: 'toJSON',\n\t\tvalue: function toJSON() {\n\t\t\tvar json = [];\n\n\t\t\tvar _iteratorNormalCompletion4 = true;\n\t\t\tvar _didIteratorError4 = false;\n\t\t\tvar _iteratorError4 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator4 = this._children[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\t\t\tvar node = _step4.value;\n\n\t\t\t\t\tjson.push(node.toJSON());\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError4 = true;\n\t\t\t\t_iteratorError4 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t\t\t_iterator4.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError4) {\n\t\t\t\t\t\tthrow _iteratorError4;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn json;\n\t\t}\n\n\t\t/**\n   * Creates a `DocumentFragment` instance from given plain object (i.e. parsed JSON string).\n   * Converts `DocumentFragment` children to proper nodes.\n   *\n   * @param {Object} json Plain object to be converted to `DocumentFragment`.\n   * @returns {module:engine/model/documentfragment~DocumentFragment} `DocumentFragment` instance created using given plain object.\n   */\n\n\t}, {\n\t\tkey: 'childCount',\n\t\tget: function get() {\n\t\t\treturn this._children.length;\n\t\t}\n\n\t\t/**\n   * Sum of {module:engine/model/node~Node#offsetSize offset sizes} of all of this document fragment's children.\n   *\n   * @readonly\n   * @type {Number}\n   */\n\n\t}, {\n\t\tkey: 'maxOffset',\n\t\tget: function get() {\n\t\t\treturn this._children.maxOffset;\n\t\t}\n\n\t\t/**\n   * Is `true` if there are no nodes inside this document fragment, `false` otherwise.\n   *\n   * @readonly\n   * @type {Boolean}\n   */\n\n\t}, {\n\t\tkey: 'isEmpty',\n\t\tget: function get() {\n\t\t\treturn this.childCount === 0;\n\t\t}\n\n\t\t/**\n   * Artificial root of `DocumentFragment`. Returns itself. Added for compatibility reasons.\n   *\n   * @readonly\n   * @type {module:engine/model/documentfragment~DocumentFragment}\n   */\n\n\t}, {\n\t\tkey: 'root',\n\t\tget: function get() {\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Artificial parent of `DocumentFragment`. Returns `null`. Added for compatibility reasons.\n   *\n   * @readonly\n   * @type {null}\n   */\n\n\t}, {\n\t\tkey: 'parent',\n\t\tget: function get() {\n\t\t\treturn null;\n\t\t}\n\t}], [{\n\t\tkey: 'fromJSON',\n\t\tvalue: function fromJSON(json) {\n\t\t\tvar children = [];\n\n\t\t\tvar _iteratorNormalCompletion5 = true;\n\t\t\tvar _didIteratorError5 = false;\n\t\t\tvar _iteratorError5 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator5 = json[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t\t\t\t\tvar child = _step5.value;\n\n\t\t\t\t\tif (child.name) {\n\t\t\t\t\t\t// If child has name property, it is an Element.\n\t\t\t\t\t\tchildren.push(_element2.default.fromJSON(child));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Otherwise, it is a Text node.\n\t\t\t\t\t\tchildren.push(_text2.default.fromJSON(child));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError5 = true;\n\t\t\t\t_iteratorError5 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t\t\t\t\t\t_iterator5.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError5) {\n\t\t\t\t\t\tthrow _iteratorError5;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new DocumentFragment(children);\n\t\t}\n\t}]);\n\n\treturn DocumentFragment;\n}();\n\n// Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/model/node~Node|Iterable.<String|module:engine/model/node~Node>}\n// @return {Iterable.<module:engine/model/node~Node>}\n\n\nexports.default = DocumentFragment;\nfunction normalize(nodes) {\n\t// Separate condition because string is iterable.\n\tif (typeof nodes == 'string') {\n\t\treturn [new _text2.default(nodes)];\n\t}\n\n\tif (!(0, _isiterable2.default)(nodes)) {\n\t\tnodes = [nodes];\n\t}\n\n\t// Array.from to enable .map() on non-arrays.\n\treturn Array.from(nodes).map(function (node) {\n\t\treturn typeof node == 'string' ? new _text2.default(node) : node;\n\t});\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/documentfragment.js\n// module id = 35\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\nn\n/**\n * @module engine/model/operation/operation\n */\n\nvar _clone = require('@ckeditor/ckeditor5-utils/src/lib/lodash/clone');\n\nvar _clone2 = _interopRequireDefault(_clone);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Abstract base operation class.\n *\n * @abstract\n */\nvar Operation = function () {\n\t/**\n  * Base operation constructor.\n  * @param {Number} baseVersion {@link module:engine/model/document~Document#version} on which the operation can be applied.\n  */\n\tfunction Operation(baseVersion) {\n\t\t_classCallCheck(this, Operation);\n\n\t\t/**\n   * {@link module:engine/model/document~Document#version} on which operation can be applied. If you try to\n   * {@link module:engine/model/document~Document#applyOperation apply} operation with different base version than the\n   * {@link module:engine/model/document~Document#version document version} the\n   * {@link module:utils/ckeditorerror~CKEditorError model-document-applyOperation-wrong-version} error is thrown.\n   *\n   * @member {Number}\n   */\n\t\tthis.baseVersion = baseVersion;\n\n\t\t/**\n   * Operation type.\n   *\n   * @readonly\n   * @member {String} #type\n   */\n\n\t\t/**\n   * {@link module:engine/model/delta/delta~Delta Delta} which the operation is a part of. This property is set by the\n   * {@link module:engine/model/delta/delta~Delta delta} when the operations is added to it by the\n   * {@link module:engine/model/delta/delta~Delta#addOperation} method.\n   *\n   * @member {module:engine/model/delta/delta~Delta} #delta\n   */\n\n\t\t/**\n   * Creates and returns an operation that has the same parameters as this operation.\n   *\n   * @method #clone\n   * @returns {module:engine/model/operation/operation~Operation} Clone of this operation.\n   */\n\n\t\t/**\n   * Creates and returns a reverse operation. Reverse operation when executed right after\n   * the original operation will bring back tree model state to the point before the original\n   * operation execution. In other words, it reverses changes done by the original operation.\n   *\n   * Keep in mind that tree model state may change since executing the original operation,\n   * so reverse operation will be \"outdated\". In that case you will need to\n   * {@link module:engine/model/operation/transform~transform} it by all operations that were executed after the original operation.\n   *\n   * @method #getReversed\n   * @returns {module:engine/model/operation/operation~Operation} Reversed operation.\n   */\n\n\t\t/**\n   * Executes the operation - modifications described by the operation attributes\n   * will be applied to the tree model.\n   *\n   * @protected\n   * @method #_execute\n   * @returns {Object} Object with additional information about the applied changes. It properties depends on the\n   * operation type.\n   */\n\t}\n\n\t/**\n  * Custom toJSON method to solve child-parent circular dependencies.\n  *\n  * @method #toJSON\n  * @returns {Object} Clone of this object with the delta property replaced with string.\n  */\n\n\n\t_createClass(Operation, [{\n\t\tkey: 'toJSON',\n\t\tvalue: function toJSON() {\n\t\t\tvar json = (0, _clone2.default)(this, true);\n\n\t\t\tjson.__className = this.constructor.className;\n\n\t\t\t// Remove parent delta to avoid circular dependencies.\n\t\t\tdelete json.delta;\n\n\t\t\treturn json;\n\t\t}\n\n\t\t/**\n   * Name of the operation class used for serialization.\n   *\n   * @type {String}\n   */\n\n\t}], [{\n\t\tkey: 'fromJSON',\n\n\n\t\t/**\n   * Creates Operation object from deserilized object, i.e. from parsed JSON string.\n   *\n   * @param {Object} json Deserialized JSON object.\n   * @param {module:engine/model/document~Document} doc Document on which this operation will be applied.\n   * @returns {module:engine/model/operation/operation~Operation}\n   */\n\t\tvalue: function fromJSON(json) {\n\t\t\treturn new this(json.baseVersion);\n\t\t}\n\t}, {\n\t\tkey: 'className',\n\t\tget: function get() {\n\t\t\treturn 'engine.model.operation.Operation';\n\t\t}\n\t}]);\n\n\treturn Operation;\n}();\n\nexports.default = Operation;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/operation/operation.js\n// module id = 36\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _moveoperation = require('./moveoperation');\n\nvar _moveoperation2 = _interopRequireDefault(_moveoperation);\n\nvar _reinsertoperation = require('./reinsertoperation');\n\nvar _reinsertoperation2 = _interopRequireDefault(_reinsertoperation);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/model/operation/removeoperation\n */\n\n/**\n * Operation to remove a range of nodes.\n */\nvar RemoveOperation = function (_MoveOperation) {\n\t_inherits(RemoveOperation, _MoveOperation);\n\n\tfunction RemoveOperation() {\n\t\t_classCallCheck(this, RemoveOperation);\n\n\t\treturn _possibleConstructorReturn(this, (RemoveOperation.__proto__ || Object.getPrototypeOf(RemoveOperation)).apply(this, arguments));\n\t}\n\n\t_createClass(RemoveOperation, [{\n\t\tkey: 'getReversed',\n\n\n\t\t/**\n   * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n   *\n   * @returns {module:engine/model/operation/reinsertoperation~ReinsertOperation|module:engine/model/operation/nooperation~NoOperation}\n   */\n\t\tvalue: function getReversed() {\n\t\t\tvar newTargetPosition = this.sourcePosition._getTransformedByInsertion(this.targetPosition, this.howMany);\n\n\t\t\treturn new _reinsertoperation2.default(this.getMovedRangeStart(), this.howMany, newTargetPosition, this.baseVersion + 1);\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'type',\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tget: function get() {\n\t\t\treturn 'remove';\n\t\t}\n\t}], [{\n\t\tkey: 'className',\n\t\tget: function get() {\n\t\t\treturn 'engine.model.operation.RemoveOperation';\n\t\t}\n\t}]);\n\n\treturn RemoveOperation;\n}(_moveoperation2.default);\n\nexports.default = RemoveOperation;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/operation/removeoperation.js\n// module id = 37\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\nn\n/**\n * @module engine/view/range\n */\n\nvar _position = require('./position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _treewalker = require('./treewalker');\n\nvar _treewalker2 = _interopRequireDefault(_treewalker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Tree view range.\n */\nvar Range = function () {\n\t/**\n  * Creates a range spanning from `start` position to `end` position.\n  *\n  * **Note:** Constructor creates it's own {@link module:engine/view/position~Position} instances basing on passed values.\n  *\n  * @param {module:engine/view/position~Position} start Start position.\n  * @param {module:engine/view/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\n  */\n\tfunction Range(start) {\n\t\tvar end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\t\t_classCallCheck(this, Range);\n\n\t\t/**\n   * Start position.\n   *\n   * @member {module:engine/view/position~Position}\n   */\n\t\tthis.start = _position2.default.createFromPosition(start);\n\n\t\t/**\n   * End position.\n   *\n   * @member {module:engine/view/position~Position}\n   */\n\t\tthis.end = end ? _position2.default.createFromPosition(end) : _position2.default.createFromPosition(start);\n\t}\n\n\t/**\n  * Returns an iterator that iterates over all {@link module:engine/view/item~Item view items} that are in this range and returns\n  * them together with additional information like length or {@link module:engine/view/position~Position positions},\n  * grouped as {@link module:engine/view/treewalker~TreeWalkerValue}.\n  *\n  * This iterator uses {@link module:engine/view/treewalker~TreeWalker TreeWalker} with `boundaries` set to this range and\n  * `ignoreElementEnd` option\n  * set to `true`.\n  *\n  * @returns {Iterable.<module:engine/view/treewalker~TreeWalkerValue>}\n  */\n\n\n\t_createClass(Range, [{\n\t\tkey: Symbol.iterator,\n\t\tvalue: regeneratorRuntime.mark(function value() {\n\t\t\treturn regeneratorRuntime.wrap(function value$(_context) {\n\t\t\t\twhile (1) {\n\t\t\t\t\tswitch (_context.prev = _context.next) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\treturn _context.delegateYield(new _treewalker2.default({ boundaries: this, ignoreElementEnd: true }), 't0', 1);\n\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcase 'end':\n\t\t\t\t\t\t\treturn _context.stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, value, this);\n\t\t})\n\n\t\t/**\n   * Returns whether the range is collapsed, that is it start and end positions are equal.\n   *\n   * @type {Boolean}\n   */\n\n\t}, {\n\t\tkey: 'getEnlarged',\n\n\n\t\t/**\n   * Creates a maximal range that has the same content as this range but is expanded in both ways (at the beginning\n   * and at the end).\n   *\n   * For example:\n   *\n   * \t\t<p>Foo</p><p><b>{Bar}</b></p> -> <p>Foo</p>[<p><b>Bar</b>]</p>\n   * \t\t<p><b>foo</b>{bar}<span></span></p> -> <p><b>foo[</b>bar<span></span>]</p>\n   *\n   * Note that in the sample above:\n   *  - `<p>` have type of {@link module:engine/view/containerelement~ContainerElement},\n   *  - `<b>` have type of {@link module:engine/view/attributeelement~AttributeElement},\n   *  - `<span>` have type of {@link module:engine/view/uielement~UIElement}.\n   *\n   * @returns {module:engine/view/range~Range} Enlarged range.\n   */\n\t\tvalue: function getEnlarged() {\n\t\t\tvar start = this.start.getLastMatchingPosition(enlargeTrimSkip, { direction: 'backward' });\n\t\t\tvar end = this.end.getLastMatchingPosition(enlargeTrimSkip);\n\n\t\t\t// Fix positions, in case if they are in Text node.\n\t\t\tif (start.parent.is('text') && start.isAtStart) {\n\t\t\t\tstart = _position2.default.createBefore(start.parent);\n\t\t\t}\n\n\t\t\tif (end.parent.is('text') && end.isAtEnd) {\n\t\t\t\tend = _position2.default.createAfter(end.parent);\n\t\t\t}\n\n\t\t\treturn new Range(start, end);\n\t\t}\n\n\t\t/**\n   * Creates a minimum range that has the same content as this range but is trimmed in both ways (at the beginning\n   * and at the end).\n   *\n   * For example:\n   *\n   * \t\t<p>Foo</p>[<p><b>Bar</b>]</p> -> <p>Foo</p><p><b>{Bar}</b></p>\n   * \t\t<p><b>foo[</b>bar<span></span>]</p> -> <p><b>foo</b>{bar}<span></span></p>\n   *\n   * Note that in the sample above:\n   *  - `<p>` have type of {@link module:engine/view/containerelement~ContainerElement},\n   *  - `<b>` have type of {@link module:engine/view/attributeelement~AttributeElement},\n   *  - `<span>` have type of {@link module:engine/view/uielement~UIElement}.\n   *\n   * @returns {module:engine/view/range~Range} Shrink range.\n   */\n\n\t}, {\n\t\tkey: 'getTrimmed',\n\t\tvalue: function getTrimmed() {\n\t\t\tvar start = this.start.getLastMatchingPosition(enlargeTrimSkip);\n\n\t\t\tif (start.isAfter(this.end) || start.isEqual(this.end)) {\n\t\t\t\treturn new Range(start, start);\n\t\t\t}\n\n\t\t\tvar end = this.end.getLastMatchingPosition(enlargeTrimSkip, { direction: 'backward' });\n\t\t\tvar nodeAfterStart = start.nodeAfter;\n\t\t\tvar nodeBeforeEnd = end.nodeBefore;\n\n\t\t\t// Because TreeWalker prefers positions next to text node, we need to move them manually into these text nodes.\n\t\t\tif (nodeAfterStart && nodeAfterStart.is('text')) {\n\t\t\t\tstart = new _position2.default(nodeAfterStart, 0);\n\t\t\t}\n\n\t\t\tif (nodeBeforeEnd && nodeBeforeEnd.is('text')) {\n\t\t\t\tend = new _position2.default(nodeBeforeEnd, nodeBeforeEnd.data.length);\n\t\t\t}\n\n\t\t\treturn new Range(start, end);\n\t\t}\n\n\t\t/**\n   * Two ranges are equal if their start and end positions are equal.\n   *\n   * @param {module:engine/view/range~Range} otherRange Range to compare with.\n   * @returns {Boolean} `true` if ranges are equal, `false` otherwise\n   */\n\n\t}, {\n\t\tkey: 'isEqual',\n\t\tvalue: function isEqual(otherRange) {\n\t\t\treturn this == otherRange || this.start.isEqual(otherRange.start) && this.end.isEqual(otherRange.end);\n\t\t}\n\n\t\t/**\n   * Checks whether this range contains given {@link module:engine/view/position~Position position}.\n   *\n   * @param {module:engine/view/position~Position} position Position to check.\n   * @returns {Boolean} `true` if given {@link module:engine/view/position~Position position} is contained in this range,\n   * `false` otherwise.\n   */\n\n\t}, {\n\t\tkey: 'containsPosition',\n\t\tvalue: function containsPosition(position) {\n\t\t\treturn position.isAfter(this.start) && position.isBefore(this.end);\n\t\t}\n\n\t\t/**\n   * Checks whether this range contains given {@link module:engine/view/range~Range range}.\n   *\n   * @param {module:engine/view/range~Range} otherRange Range to check.\n   * @param {Boolean} [loose=false] Whether the check is loose or strict. If the check is strict (`false`), compared range cannot\n   * start or end at the same position as this range boundaries. If the check is loose (`true`), compared range can start, end or\n   * even be equal to this range. Note that collapsed ranges are always compared in strict mode.\n   * @returns {Boolean} `true` if given {@link module:engine/view/range~Range range} boundaries are contained by this range, `false`\n   * otherwise.\n   */\n\n\t}, {\n\t\tkey: 'containsRange',\n\t\tvalue: function containsRange(otherRange) {\n\t\t\tvar loose = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n\t\t\tif (otherRange.isCollapsed) {\n\t\t\t\tloose = false;\n\t\t\t}\n\n\t\t\tvar containsStart = this.containsPosition(otherRange.start) || loose && this.start.isEqual(otherRange.start);\n\t\t\tvar containsEnd = this.containsPosition(otherRange.end) || loose && this.end.isEqual(otherRange.end);\n\n\t\t\treturn containsStart && containsEnd;\n\t\t}\n\n\t\t/**\n   * Computes which part(s) of this {@link module:engine/view/range~Range range} is not a part of given\n   * {@link module:engine/view/range~Range range}.\n   * Returned array contains zero, one or two {@link module:engine/view/range~Range ranges}.\n   *\n   * Examples:\n   *\n   *\t\tlet foo = new Text( 'foo' );\n   *\t\tlet img = new ContainerElement( 'img' );\n   *\t\tlet bar = new Text( 'bar' );\n   *\t\tlet p = new ContainerElement( 'p', null, [ foo, img, bar ] );\n   *\n   *\t\tlet range = new Range( new Position( foo, 2 ), new Position( bar, 1 ); // \"o\", img, \"b\" are in range.\n   *\t\tlet otherRange = new Range( new Position( foo, 1 ), new Position( bar, 2 ); \"oo\", img, \"ba\" are in range.\n   *\t\tlet transformed = range.getDifference( otherRange );\n   *\t\t// transformed array has no ranges because `otherRange` contains `range`\n   *\n   *\t\totherRange = new Range( new Position( foo, 1 ), new Position( p, 2 ); // \"oo\", img are in range.\n   *\t\ttransformed = range.getDifference( otherRange );\n   *\t\t// transformed array has one range: from ( p, 2 ) to ( bar, 1 )\n   *\n   *\t\totherRange = new Range( new Position( p, 1 ), new Position( p, 2 ) ); // img is in range.\n   *\t\ttransformed = range.getDifference( otherRange );\n   *\t\t// transformed array has two ranges: from ( foo, 1 ) to ( p, 1 ) and from ( p, 2 ) to ( bar, 1 )\n   *\n   * @param {module:engine/view/range~Range} otherRange Range to differentiate against.\n   * @returns {Array.<module:engine/view/range~Range>} The difference between ranges.\n   */\n\n\t}, {\n\t\tkey: 'getDifference',\n\t\tvalue: function getDifference(otherRange) {\n\t\t\tvar ranges = [];\n\n\t\t\tif (this.isIntersecting(otherRange)) {\n\t\t\t\t// Ranges intersect.\n\n\t\t\t\tif (this.containsPosition(otherRange.start)) {\n\t\t\t\t\t// Given range start is inside this range. This means that we have to\n\t\t\t\t\t// add shrunken range - from the start to the middle of this range.\n\t\t\t\t\tranges.push(new Range(this.start, otherRange.start));\n\t\t\t\t}\n\n\t\t\t\tif (this.containsPosition(otherRange.end)) {\n\t\t\t\t\t// Given range end is inside this range. This means that we have to\n\t\t\t\t\t// add shrunken range - from the middle of this range to the end.\n\t\t\t\t\tranges.push(new Range(otherRange.end, this.end));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Ranges do not intersect, return the original range.\n\t\t\t\tranges.push(Range.createFromRange(this));\n\t\t\t}\n\n\t\t\treturn ranges;\n\t\t}\n\n\t\t/**\n   * Returns an intersection of this {@link module:engine/view/range~Range range} and given {@link module:engine/view/range~Range range}.\n   * Intersection is a common part of both of those ranges. If ranges has no common part, returns `null`.\n   *\n   * Examples:\n   *\n   *\t\tlet foo = new Text( 'foo' );\n   *\t\tlet img = new ContainerElement( 'img' );\n   *\t\tlet bar = new Text( 'bar' );\n   *\t\tlet p = new ContainerElement( 'p', null, [ foo, img, bar ] );\n   *\n   *\t\tlet range = new Range( new Position( foo, 2 ), new Position( bar, 1 ); // \"o\", img, \"b\" are in range.\n   *\t\tlet otherRange = new Range( new Position( foo, 1 ), new Position( p, 2 ); // \"oo\", img are in range.\n   *\t\tlet transformed = range.getIntersection( otherRange ); // range from ( foo, 1 ) to ( p, 2 ).\n   *\n   *\t\totherRange = new Range( new Position( bar, 1 ), new Position( bar, 3 ); \"ar\" is in range.\n   *\t\ttransformed = range.getIntersection( otherRange ); // null - no common part.\n   *\n   * @param {module:engine/view/range~Range} otherRange Range to check for intersection.\n   * @returns {module:engine/view/range~Range|null} A common part of given ranges or `null` if ranges have no common part.\n   */\n\n\t}, {\n\t\tkey: 'getIntersection',\n\t\tvalue: function getIntersection(otherRange) {\n\t\t\tif (this.isIntersecting(otherRange)) {\n\t\t\t\t// Ranges intersect, so a common range will be returned.\n\t\t\t\t// At most, it will be same as this range.\n\t\t\t\tvar commonRangeStart = this.start;\n\t\t\t\tvar commonRangeEnd = this.end;\n\n\t\t\t\tif (this.containsPosition(otherRange.start)) {\n\t\t\t\t\t// Given range start is inside this range. This means thaNt we have to\n\t\t\t\t\t// shrink common range to the given range start.\n\t\t\t\t\tcommonRangeStart = otherRange.start;\n\t\t\t\t}\n\n\t\t\t\tif (this.containsPosition(otherRange.end)) {\n\t\t\t\t\t// Given range end is inside this range. This means that we have to\n\t\t\t\t\t// shrink common range to the given range end.\n\t\t\t\t\tcommonRangeEnd = otherRange.end;\n\t\t\t\t}\n\n\t\t\t\treturn new Range(commonRangeStart, commonRangeEnd);\n\t\t\t}\n\n\t\t\t// Ranges do not intersect, so they do not have common part.\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n   * Creates a {@link module:engine/view/treewalker~TreeWalker TreeWalker} instance with this range as a boundary.\n   *\n   * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n   * @param {module:engine/view/position~Position} [options.startPosition]\n   * @param {Boolean} [options.singleCharacters=false]\n   * @param {Boolean} [options.shallow=false]\n   * @param {Boolean} [options.ignoreElementEnd=false]\n   */\n\n\t}, {\n\t\tkey: 'getWalker',\n\t\tvalue: function getWalker() {\n\t\t\tvar options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\t\t\toptions.boundaries = this;\n\n\t\t\treturn new _treewalker2.default(options);\n\t\t}\n\n\t\t/**\n   * Returns a {@link module:engine/view/node~Node} or {@link module:engine/view/documentfragment~DocumentFragment}\n   * which is a common ancestor of range's both ends (in which the entire range is contained).\n   *\n   * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null}\n   */\n\n\t}, {\n\t\tkey: 'getCommonAncestor',\n\t\tvalue: function getCommonAncestor() {\n\t\t\treturn this.start.getCommonAncestor(this.end);\n\t\t}\n\n\t\t/**\n   * Returns an iterator that iterates over all {@link module:engine/view/item~Item view items} that are in this range and returns\n   * them.\n   *\n   * This method uses {@link module:engine/view/treewalker~TreeWalker} with `boundaries` set to this range and `ignoreElementEnd` option\n   * set to `true`. However it returns only {@link module:engine/view/item~Item items},\n   * not {@link module:engine/view/treewalker~TreeWalkerValue}.\n   *\n   * You may specify additional options for the tree walker. See {@link module:engine/view/treewalker~TreeWalker} for\n   * a full list of available options.\n   *\n   * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n   * @returns {Iterable.<module:engine/view/item~Item>}\n   */\n\n\t}, {\n\t\tkey: 'getItems',\n\t\tvalue: regeneratorRuntime.mark(function getItems() {\n\t\t\tvar options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\t\t\tvar treeWalker, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value;\n\n\t\t\treturn regeneratorRuntime.wrap(function getItems$(_context2) {\n\t\t\t\twhile (1) {\n\t\t\t\t\tswitch (_context2.prev = _context2.next) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\toptions.boundaries = this;\n\t\t\t\t\t\t\toptions.ignoreElementEnd = true;\n\n\t\t\t\t\t\t\ttreeWalker = new _treewalker2.default(options);\n\t\t\t\t\t\t\t_iteratorNormalCompletion = true;\n\t\t\t\t\t\t\t_didIteratorError = false;\n\t\t\t\t\t\t\t_iteratorError = undefined;\n\t\t\t\t\t\t\t_context2.prev = 6;\n\t\t\t\t\t\t\t_iterator = treeWalker[Symbol.iterator]();\n\n\t\t\t\t\t\tcase 8:\n\t\t\t\t\t\t\tif (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n\t\t\t\t\t\t\t\t_context2.next = 15;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_value = _step.value;\n\t\t\t\t\t\t\t_context2.next = 12;\n\t\t\t\t\t\t\treturn _value.item;\n\n\t\t\t\t\t\tcase 12:\n\t\t\t\t\t\t\t_iteratorNormalCompletion = true;\n\t\t\t\t\t\t\t_context2.next = 8;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 15:\n\t\t\t\t\t\t\t_context2.next = 21;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 17:\n\t\t\t\t\t\t\t_context2.prev = 17;\n\t\t\t\t\t\t\t_context2.t0 = _context2['catch'](6);\n\t\t\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t\t\t_iteratorError = _context2.t0;\n\n\t\t\t\t\t\tcase 21:\n\t\t\t\t\t\t\t_context2.prev = 21;\n\t\t\t\t\t\t\t_context2.prev = 22;\n\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase 24:\n\t\t\t\t\t\t\t_context2.prev = 24;\n\n\t\t\t\t\t\t\tif (!_didIteratorError) {\n\t\t\t\t\t\t\t\t_context2.next = 27;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthrow _iteratorError;\n\n\t\t\t\t\t\tcase 27:\n\t\t\t\t\t\t\treturn _context2.finish(24);\n\n\t\t\t\t\t\tcase 28:\n\t\t\t\t\t\t\treturn _context2.finish(21);\n\n\t\t\t\t\t\tcase 29:\n\t\t\t\t\t\tcase 'end':\n\t\t\t\t\t\t\treturn _context2.stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, getItems, this, [[6, 17, 21, 29], [22,, 24, 28]]);\n\t\t})\n\n\t\t/**\n   * Returns an iterator that iterates over all {@link module:engine/view/position~Position positions} that are boundaries or\n   * contained in this range.\n   *\n   * This method uses {@link module:engine/view/treewalker~TreeWalker} with `boundaries` set to this range. However it returns only\n   * {@link module:engine/view/position~Position positions}, not {@link module:engine/view/treewalker~TreeWalkerValue}.\n   *\n   * You may specify additional options for the tree walker. See {@link module:engine/view/treewalker~TreeWalker} for\n   * a full list of available options.\n   *\n   * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n   * @returns {Iterable.<module:engine/view/position~Position>}\n   */\n\n\t}, {\n\t\tkey: 'getPositions',\n\t\tvalue: regeneratorRuntime.mark(function getPositions() {\n\t\t\tvar options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\t\t\tvar treeWalker, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _value2;\n\n\t\t\treturn regeneratorRuntime.wrap(function getPositions$(_context3) {\n\t\t\t\twhile (1) {\n\t\t\t\t\tswitch (_context3.prev = _context3.next) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\toptions.boundaries = this;\n\n\t\t\t\t\t\t\ttreeWalker = new _treewalker2.default(options);\n\t\t\t\t\t\t\t_context3.next = 4;\n\t\t\t\t\t\t\treturn treeWalker.position;\n\n\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t_iteratorNormalCompletion2 = true;\n\t\t\t\t\t\t\t_didIteratorError2 = false;\n\t\t\t\t\t\t\t_iteratorError2 = undefined;\n\t\t\t\t\t\t\t_context3.prev = 7;\n\t\t\t\t\t\t\t_iterator2 = treeWalker[Symbol.iterator]();\n\n\t\t\t\t\t\tcase 9:\n\t\t\t\t\t\t\tif (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n\t\t\t\t\t\t\t\t_context3.next = 16;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_value2 = _step2.value;\n\t\t\t\t\t\t\t_context3.next = 13;\n\t\t\t\t\t\t\treturn _value2.nextPosition;\n\n\t\t\t\t\t\tcase 13:\n\t\t\t\t\t\t\t_iteratorNormalCompletion2 = true;\n\t\t\t\t\t\t\t_context3.next = 9;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 16:\n\t\t\t\t\t\t\t_context3.next = 22;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 18:\n\t\t\t\t\t\t\t_context3.prev = 18;\n\t\t\t\t\t\t\t_context3.t0 = _context3['catch'](7);\n\t\t\t\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t\t\t\t_iteratorError2 = _context3.t0;\n\n\t\t\t\t\t\tcase 22:\n\t\t\t\t\t\t\t_context3.prev = 22;\n\t\t\t\t\t\t\t_context3.prev = 23;\n\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase 25:\n\t\t\t\t\t\t\t_context3.prev = 25;\n\n\t\t\t\t\t\t\tif (!_didIteratorError2) {\n\t\t\t\t\t\t\t\t_context3.next = 28;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthrow _iteratorError2;\n\n\t\t\t\t\t\tcase 28:\n\t\t\t\t\t\t\treturn _context3.finish(25);\n\n\t\t\t\t\t\tcase 29:\n\t\t\t\t\t\t\treturn _context3.finish(22);\n\n\t\t\t\t\t\tcase 30:\n\t\t\t\t\t\tcase 'end':\n\t\t\t\t\t\t\treturn _context3.stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, getPositions, this, [[7, 18, 22, 30], [23,, 25, 29]]);\n\t\t})\n\n\t\t/**\n   * Checks and returns whether this range intersects with given range.\n   *\n   * @param {module:engine/view/range~Range} otherRange Range to compare with.\n   * @returns {Boolean} True if ranges intersect.\n   */\n\n\t}, {\n\t\tkey: 'isIntersecting',\n\t\tvalue: function isIntersecting(otherRange) {\n\t\t\treturn this.start.isBefore(otherRange.end) && this.end.isAfter(otherRange.start);\n\t\t}\n\n\t\t/**\n   * Creates a range from given parents and offsets.\n   *\n   * @param {module:engine/view/element~Element} startElement Start position parent element.\n   * @param {Number} startOffset Start position offset.\n   * @param {module:engine/view/element~Element} endElement End position parent element.\n   * @param {Number} endOffset End position offset.\n   * @returns {module:engine/view/range~Range} Created range.\n   */\n\n\t}, {\n\t\tkey: 'isCollapsed',\n\t\tget: function get() {\n\t\t\treturn this.start.isEqual(this.end);\n\t\t}\n\n\t\t/**\n   * Returns whether this range is flat, that is if {@link module:engine/view/range~Range#start start} position and\n   * {@link module:engine/view/range~Range#end end} position are in the same {@link module:engine/view/position~Position#parent parent}.\n   *\n   * @type {Boolean}\n   */\n\n\t}, {\n\t\tkey: 'isFlat',\n\t\tget: function get() {\n\t\t\treturn this.start.parent === this.end.parent;\n\t\t}\n\n\t\t/**\n   * Range root element.\n   *\n   * @type {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment}\n   */\n\n\t}, {\n\t\tkey: 'root',\n\t\tget: function get() {\n\t\t\treturn this.start.root;\n\t\t}\n\t}], [{\n\t\tkey: 'createFromParentsAndOffsets',\n\t\tvalue: function createFromParentsAndOffsets(startElement, startOffset, endElement, endOffset) {\n\t\t\treturn new this(new _position2.default(startElement, startOffset), new _position2.default(endElement, endOffset));\n\t\t}\n\n\t\t/**\n   * Creates and returns a new instance of Range which is equal to passed range.\n   *\n   * @param {module:engine/view/range~Range} range Range to clone.\n   * @returns {module:engine/view/range~Range}\n   */\n\n\t}, {\n\t\tkey: 'createFromRange',\n\t\tvalue: function createFromRange(range) {\n\t\t\treturn new this(range.start, range.end);\n\t\t}\n\n\t\t/**\n   * Creates a new range, spreading from specified {@link module:engine/view/position~Position position} to a position moved by\n   * given `shift`. If `shift` is a negative value, shifted position is treated as the beginning of the range.\n   *\n   * @param {module:engine/view/position~Position} position Beginning of the range.\n   * @param {Number} shift How long the range should be.\n   * @returns {module:engine/view/range~Range}\n   */\n\n\t}, {\n\t\tkey: 'createFromPositionAndShift',\n\t\tvalue: function createFromPositionAndShift(position, shift) {\n\t\t\tvar start = position;\n\t\t\tvar end = position.getShiftedBy(shift);\n\n\t\t\treturn shift > 0 ? new this(start, end) : new this(end, start);\n\t\t}\n\n\t\t/**\n   * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n   * that element and ends after the last child of that element.\n   *\n   * @param {module:engine/view/element~Element} element Element which is a parent for the range.\n   * @returns {module:engine/view/range~Range}\n   */\n\n\t}, {\n\t\tkey: 'createIn',\n\t\tvalue: function createIn(element) {\n\t\t\treturn this.createFromParentsAndOffsets(element, 0, element, element.childCount);\n\t\t}\n\n\t\t/**\n   * Creates a range that starts before given {@link module:engine/view/item~Item view item} and ends after it.\n   *\n   * @param {module:engine/view/item~Item} item\n   * @returns {module:engine/view/range~Range}\n   */\n\n\t}, {\n\t\tkey: 'createOn',\n\t\tvalue: function createOn(item) {\n\t\t\treturn this.createFromPositionAndShift(_position2.default.createBefore(item), 1);\n\t\t}\n\t}]);\n\n\treturn Range;\n}();\n\n// Function used by getEnlagred and getTrimmed methods.\n\n\nexports.default = Range;\nfunction enlargeTrimSkip(value) {\n\tif (value.item.is('attributeElement') || value.item.is('uiElement')) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/view/range.js\n// module id = 38\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toImageWidget = toImageWidget;\nexports.isImageWidget = isImageWidget;\nexports.isImage = isImage;\n\nvar _utils = require('@ckeditor/ckeditor5-widget/src/utils');\n\nvar _element = require('@ckeditor/ckeditor5-engine/src/model/element');\n\nvar _element2 = _interopRequireDefault(_element);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module image/image/utils\n */\n\nvar imageSymbol = Symbol('isImage');\n\n/**\n * Converts a given {@link module:engine/view/element~Element} to an image widget:\n * * adds a {@link module:engine/view/element~Element#setCustomProperty custom property} allowing to recognize the image widget element,\n * * calls the {@link module:widget/utils~toWidget toWidget} function with the proper element's label creator.\n *\n * @param {module:engine/view/element~Element} viewElement\n * @param {String} label Element's label. It will be concatenated with the image `alt` attribute if one is present.\n * @returns {module:engine/view/element~Element}\n */\nfunction toImageWidget(viewElement, label) {\n  viewElement.setCustomProperty(imageSymbol, true);\n\n  return (0, _utils.toWidget)(viewElement, { label: labelCreator });\n\n  function labelCreator() {\n    var imgElement = viewElement.getChild(0);\n    var altText = imgElement.getAttribute('alt');\n\n    return altText ? altText + ' ' + label : label;\n  }\n}\n\n/**\n * Checks if a given view element is an image widget.\n *\n * @param {module:engine/view/element~Element} viewElement\n * @returns {Boolean}\n */\nfunction isImageWidget(viewElement) {\n  return !!viewElement.getCustomProperty(imageSymbol) && (0, _utils.isWidget)(viewElement);\n}\n\n/**\n * Checks if the provided model element is an instance of {@link module:engine/model/element~Element Element} and its name\n * is `image`.\n *\n * @param {module:engine/model/element~Element} modelElement\n * @returns {Boolean}\n */\nfunction isImage(modelElement) {\n  return modelElement instanceof _element2.default && modelElement.name == 'image';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-image/src/image/utils.js\n// module id = 39\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : length + start;\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : end - start >>> 0;\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nexports.default = baseSlice;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseSlice.js\n// module id = 40\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (typeof value == 'number' || reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nexports.default = isIndex;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_isIndex.js\n// module id = 41\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* global console */\n\n/**\n * @module utils/log\n */\n\n/**\n * The logging module.\n *\n * This object features two functions that should be used across CKEditor code base to log errors and warnings.\n * Despite being an overridable interface for native `console.*` this module serves also the goal to limit the\n * code size of a minified CKEditor package. During minification process the messages will be shortened and\n * links to their documentation will be logged to the console.\n *\n * All errors and warning should be documented in the following way:\n *\n *\t\t/**\n *\t\t * Error thrown when a plugin cannot be loaded due to JavaScript errors, lack of plugins with a given name, etc.\n *\t\t *\n *\t\t * @error plugin-load\n *\t\t * @param pluginName The name of the plugin that could not be loaded.\n *\t\t * @param moduleName The name of the module which tried to load this plugin.\n *\t\t * /\n *\t\tlog.error( 'plugin-load: It was not possible to load the \"{$pluginName}\" plugin in module \"{$moduleName}', {\n *\t\t\tpluginName: 'foo',\n *\t\t\tmoduleName: 'bar'\n *\t\t} );\n *\n * ### Warning vs Error vs Throw\n *\n * * Whenever a potentially incorrect situation occurs, which does not directly lead to an incorrect behavior,\n * log a warning.\n * * Whenever an incorrect situation occurs, but the app may continue working (although perhaps incorrectly),\n * log an error.\n * * Whenever it's really bad and it does not make sense to continue working, throw a {@link module:utils/ckeditorerror~CKEditorError}.\n *\n * @namespace\n */\nvar log = {\n  /**\n   * Logs an error to the console.\n   *\n   * Read more about error logging in the {@link module:utils/log} module.\n   *\n   * @param {String} message The error message in an `error-name: Error message.` format.\n   * During the minification process the \"Error message\" part will be removed to limit the code size\n   * and a link to this error documentation will be logged to the console.\n   * @param {Object} [data] Additional data describing the error.\n   */\n  error: function error(message, data) {\n    console.error(message, data);\n  },\n\n\n  /**\n   * Logs a warning to the console.\n   *\n   * Read more about error logging in the {@link module:utils/log} module.\n   *\n   * @param {String} message The warning message in a `warning-name: Warning message.` format.\n   * During the minification process the \"Warning message\" part will be removed to limit the code size\n   * and a link to this error documentation will be logged to the console.\n   * @param {Object} [data] Additional data describing the warning.\n   */\n  warn: function warn(message, data) {\n    console.warn(message, data);\n  }\n};\n\nexports.default = log;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/log.js\n// module id = 42\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\nn\n/**\n * @module engine/conversion/buildmodelconverter\n */\n\nexports.default = buildModelConverter;\n\nvar _modelToViewConverters = require('./model-to-view-converters');\n\nvar _modelSelectionToViewConverters = require('./model-selection-to-view-converters');\n\nvar _attributeelement = require('../view/attributeelement');\n\nvar _attributeelement2 = _interopRequireDefault(_attributeelement);\n\nvar _containerelement = require('../view/containerelement');\n\nvar _containerelement2 = _interopRequireDefault(_containerelement);\n\nvar _uielement = require('../view/uielement');\n\nvar _uielement2 = _interopRequireDefault(_uielement);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Provides chainable, high-level API to easily build basic model-to-view converters that are appended to given\n * dispatchers. In many cases, this is the API that should be used to specify how abstract model elements and\n * attributes should be represented in the view (and then later in DOM). Instances of this class are created by\n * {@link module:engine/conversion/buildmodelconverter~buildModelConverter}.\n *\n * If you need more complex converters, see {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher},\n * {@link module:engine/conversion/model-to-view-converters}, {@link module:engine/conversion/modelconsumable~ModelConsumable},\n * {@link module:engine/conversion/mapper~Mapper}.\n *\n * Using this API it is possible to create four kinds of converters:\n *\n * 1. Model element to view element converter. This is a converter that takes the model element and represents it\n * in the view.\n *\n *\t\tbuildModelConverter().for( dispatcher ).fromElement( 'paragraph' ).toElement( 'p' );\n *\t\tbuildModelConverter().for( dispatcher ).fromElement( 'image' ).toElement( 'img' );\n *\n * 2. Model attribute to view attribute converter. This is a converter that operates on model element attributes\n * and converts them to view element attributes. It is suitable for elements like `image` (`src`, `title` attributes).\n *\n *\t\tbuildModelConverter().for( dispatcher ).fromElement( 'image' ).toElement( 'img' );\n *\t\tbuildModelConverter().for( dispatcher ).fromAttribute( 'src' ).toAttribute();\n *\n * 3. Model attribute to view element converter. This is a converter that takes model attributes and represents them\n * as view elements. Elements created by this kind of converter are wrapping other view elements. Wrapped view nodes\n * correspond to model nodes had converter attribute. It is suitable for attributes like `bold`, where `bold` attribute\n * set on model text nodes is converter to `strong` view element.\n *\n *\t\tbuildModelConverter().for( dispatcher ).fromAttribute( 'bold' ).toElement( 'strong' );\n *\n * 4. Model marker to view element converter. This is a converter that converts markers from given group to view attribute element.\n * Markers, basically, are {@link module:engine/model/liverange~LiveRange} instances, that are named. In this conversion, model range is\n * converted to view range, then that view range is wrapped (or unwrapped, if range is removed) in a view attribute element.\n * To learn more about markers, see {@link module:engine/model/markercollection~MarkerCollection}.\n *\n *\t\tconst viewSpanSearchResult = new ViewAttributeElement( 'span', { class: 'search-result' } );\n *\t\tbuildModelConverter().for( dispatcher ).fromMarker( 'searchResult' ).toElement( viewSpanSearchResult );\n *\n * It is possible to provide various different parameters for\n * {@link module:engine/conversion/buildmodelconverter~ModelConverterBuilder#toElement}\n * and {@link module:engine/conversion/buildmodelconverter~ModelConverterBuilder#toAttribute} methods.\n * See their descriptions to learn more.\n *\n * It is also possible to {@link module:engine/conversion/buildmodelconverter~ModelConverterBuilder#withPriority change default priority}\n * of created converters to decide which converter should be fired earlier and which later. This is useful if you have\n * a general converter but also want to provide different special-case converters (i.e. given model element is converted\n * always to given view element, but if it has given attribute it is converter to other view element). For this,\n * use {@link module:engine/conversion/buildmodelconverter~ModelConverterBuilder#withPriority withPriority} right after `from...` method.\n *\n * Note that `to...` methods are \"terminators\", which means that should be the last one used in building converter.\n *\n * You can use {@link module:engine/conversion/buildviewconverter~ViewConverterBuilder}\n * to create \"opposite\" converters - from view to model.\n */\nvar ModelConverterBuilder = function () {\n\t/**\n  * Creates `ModelConverterBuilder` with given `dispatchers` registered to it.\n  */\n\tfunction ModelConverterBuilder() {\n\t\t_classCallCheck(this, ModelConverterBuilder);\n\n\t\t/**\n   * Dispatchers to which converters will be attached.\n   *\n   * @type {Array.<module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher>}\n   * @private\n   */\n\t\tthis._dispatchers = [];\n\n\t\t/**\n   * Contains data about registered \"from\" query.\n   *\n   * @type {Object}\n   * @private\n   */\n\t\tthis._from = null;\n\t}\n\n\t/**\n  * Set one or more dispatchers which the built converter will be attached to.\n  *\n  * @chainable\n  * @param {...module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher} dispatchers One or more dispatchers.\n  * @returns {module:engine/conversion/buildmodelconverter~ModelConverterBuilder}\n  */\n\n\n\t_createClass(ModelConverterBuilder, [{\n\t\tkey: 'for',\n\t\tvalue: function _for() {\n\t\t\tfor (var _len = arguments.length, dispatchers = Array(_len), _key = 0; _key < _len; _key++) {\n\t\t\t\tdispatchers[_key] = arguments[_key];\n\t\t\t}\n\n\t\t\tthis._dispatchers = dispatchers;\n\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Registers what model element should be converted.\n   *\n   * @chainable\n   * @param {String} elementName Name of element to convert.\n   * @returns {module:engine/conversion/buildmodelconverter~ModelConverterBuilder}\n   */\n\n\t}, {\n\t\tkey: 'fromElement',\n\t\tvalue: function fromElement(elementName) {\n\t\t\tthis._from = {\n\t\t\t\ttype: 'element',\n\t\t\t\tname: elementName,\n\t\t\t\tpriority: null\n\t\t\t};\n\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Registers what model attribute should be converted.\n   *\n   * @chainable\n   * @param {String} key Key of attribute to convert.\n   * @returns {module:engine/conversion/buildmodelconverter~ModelConverterBuilder}\n   */\n\n\t}, {\n\t\tkey: 'fromAttribute',\n\t\tvalue: function fromAttribute(key) {\n\t\t\tthis._from = {\n\t\t\t\ttype: 'attribute',\n\t\t\t\tkey: key,\n\t\t\t\tpriority: null\n\t\t\t};\n\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Registers what type of marker should be converted.\n   *\n   * @chainable\n   * @param {String} markerName Name of marker to convert.\n   * @returns {module:engine/conversion/buildmodelconverter~ModelConverterBuilder}\n   */\n\n\t}, {\n\t\tkey: 'fromMarker',\n\t\tvalue: function fromMarker(markerName) {\n\t\t\tthis._from = {\n\t\t\t\ttype: 'marker',\n\t\t\t\tname: markerName,\n\t\t\t\tpriority: null\n\t\t\t};\n\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Changes default priority for built converter. The lower the number, the earlier converter will be fired.\n   * Default priority is `10`.\n   *\n   * **Note:** Keep in mind that event priority, that is set by this modifier, is used for attribute priority\n   * when {@link module:engine/view/writer~writer} is used. This changes how view elements are ordered,\n   * i.e.: `<strong><em>foo</em></strong>` vs `<em><strong>foo</strong></em>`. Using priority you can also\n   * prevent node merging, i.e.: `<span class=\"bold\"><span class=\"theme\">foo</span><span>` vs `<span class=\"bold theme\">foo</span>`.\n   * If you want to prevent merging, just set different priority for both converters.\n   *\n   *\t\tbuildModelConverter().for( dispatcher ).fromAttribute( 'bold' ).withPriority( 2 ).toElement( 'strong' );\n   *\t\tbuildModelConverter().for( dispatcher ).fromAttribute( 'italic' ).withPriority( 3 ).toElement( 'em' );\n   *\n   * @chainable\n   * @param {Number} priority Converter priority.\n   * @returns {module:engine/conversion/buildmodelconverter~ModelConverterBuilder}\n   */\n\n\t}, {\n\t\tkey: 'withPriority',\n\t\tvalue: function withPriority(priority) {\n\t\t\tthis._from.priority = priority;\n\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Registers what view element will be created by converter.\n   *\n   * Method accepts various ways of providing how the view element will be created. You can pass view element name as\n   * `string`, view element instance which will be cloned and used, or creator function which returns view element that\n   * will be used. Keep in mind that when you view element instance or creator function, it has to be/return a\n   * proper type of view element: {@link module:engine/view/containerelement~ContainerElement ViewContainerElement} if you convert\n   * from element or {@link module:engine/view/attributeelement~AttributeElement ViewAttributeElement} if you convert from attribute.\n   *\n   *\t\tbuildModelConverter().for( dispatcher ).fromElement( 'paragraph' ).toElement( 'p' );\n   *\n   *\t\tbuildModelConverter().for( dispatcher ).fromElement( 'image' ).toElement( new ViewContainerElement( 'img' ) );\n   *\n   *\t\tbuildModelConverter().for( dispatcher )\n   *\t\t\t.fromElement( 'header' )\n   *\t\t\t.toElement( ( data ) => new ViewContainerElement( 'h' + data.item.getAttribute( 'level' ) ) );\n   *\n   *\t\tbuildModelConverter().for( dispatcher ).fromAttribute( 'bold' ).toElement( new ViewAttributeElement( 'strong' ) );\n   *\n   * Creator function will be passed different values depending whether conversion is from element or from attribute:\n   *\n   * * from element: dispatcher's\n   * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:insert insert event}\n   * parameters will be passed,\n   * * from attribute: there is one parameter and it is attribute value.\n   *\n   * This method also registers model selection to view selection converter, if conversion is from attribute.\n   *\n   * This method creates the converter and adds it as a callback to a proper\n   * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher conversion dispatcher} event.\n   *\n   * @param {String|module:engine/view/element~Element|Function} element Element created by converter or\n   * a function that returns view element.\n   */\n\n\t}, {\n\t\tkey: 'toElement',\n\t\tvalue: function toElement(element) {\n\t\t\tvar priority = this._from.priority === null ? 'normal' : this._from.priority;\n\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = this._dispatchers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar dispatcher = _step.value;\n\n\t\t\t\t\tif (this._from.type == 'element') {\n\t\t\t\t\t\t// From model element to view element -> insert element.\n\t\t\t\t\t\telement = typeof element == 'string' ? new _containerelement2.default(element) : element;\n\n\t\t\t\t\t\tdispatcher.on('insert:' + this._from.name, (0, _modelToViewConverters.insertElement)(element), { priority: priority });\n\t\t\t\t\t} else if (this._from.type == 'attribute') {\n\t\t\t\t\t\t// From model attribute to view element -> wrap and unwrap.\n\t\t\t\t\t\telement = typeof element == 'string' ? new _attributeelement2.default(element) : element;\n\n\t\t\t\t\t\tdispatcher.on('addAttribute:' + this._from.key, (0, _modelToViewConverters.wrapItem)(element), { priority: priority });\n\t\t\t\t\t\tdispatcher.on('changeAttribute:' + this._from.key, (0, _modelToViewConverters.wrapItem)(element), { priority: priority });\n\t\t\t\t\t\tdispatcher.on('removeAttribute:' + this._from.key, (0, _modelToViewConverters.unwrapItem)(element), { priority: priority });\n\n\t\t\t\t\t\tdispatcher.on('selectionAttribute:' + this._from.key, (0, _modelSelectionToViewConverters.convertSelectionAttribute)(element), { priority: priority });\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement = typeof element == 'string' ? new _attributeelement2.default(element) : element;\n\n\t\t\t\t\t\tdispatcher.on('addMarker:' + this._from.name, (0, _modelToViewConverters.wrapRange)(element), { priority: priority });\n\t\t\t\t\t\tdispatcher.on('removeMarker:' + this._from.name, (0, _modelToViewConverters.unwrapRange)(element), { priority: priority });\n\n\t\t\t\t\t\tdispatcher.on('selectionMarker:' + this._from.name, (0, _modelSelectionToViewConverters.convertSelectionMarker)(element), { priority: priority });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Registers what view stamp will be created by converter to mark marker range bounds. Separate elements will be\n   * created at the beginning and at the end of the range. If range is collapsed then only one element will be created.\n   *\n   * Method accepts various ways of providing how the view element will be created. You can pass view element name as\n   * `string`, view element instance which will be cloned and used, or creator function which returns view element that\n   * will be used. Keep in mind that when you provide view element instance or creator function, it has to be/return a\n   * proper type of view element: {@link module:engine/view/uielement~UIElement UIElement}.\n   *\n   *\t\tbuildModelConverter().for( dispatcher ).fromMarker( 'search' ).toStamp( 'span' );\n   *\n   *\t\tbuildModelConverter().for( dispatcher )\n   *\t\t\t.fromMarker( 'search' )\n   *\t\t\t.toStamp( new UIElement( 'span', { 'data-name': 'search' } ) );\n   *\n   *\t\tbuildModelConverter().for( dispatcher )\n   *\t\t\t.fromMarker( 'search' )\n   *\t\t\t.toStamp( ( data ) => new UIElement( 'span', { 'data-name': data.name ) );\n   *\n   * Creator function provides additional `data.isOpening` parameter which defined if currently converted element is\n   * a beginning or end of the marker range. This makes possible to create different opening and closing stamp.\n   *\n   *\t\tbuildModelConverter().for( dispatcher )\n   *\t\t\t.fromMarker( 'search' )\n   *\t\t\t.toStamp( ( data ) => {\n   *\t\t\t\tif ( data.isOpening ) {\n   *\t\t\t\t\treturn new UIElement( 'span', { 'data-name': data.name, 'data-start': true ) );\n   *\t\t\t\t}\n   *\n   *\t\t\t\treturn new UIElement( 'span', { 'data-name': data.name, 'data-end': true ) );\n   *\t\t\t}\n   *\n   * Creator function provides\n   * {@link module:engine/conversion/buildmodelconverter~StampCreatorData} parameters.\n   *\n   * See how markers {module:engine/model/buildviewconverter~ViewConverterBuilder#toMarker view -> model serialization}\n   * works to find out what view element format is the best for you.\n   *\n   * @param {String|module:engine/view/uielement~UIElement|Function} element UIElement created by converter or\n   * a function that returns view element.\n   */\n\n\t}, {\n\t\tkey: 'toStamp',\n\t\tvalue: function toStamp(element) {\n\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\tvar _didIteratorError2 = false;\n\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator2 = this._dispatchers[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\tvar dispatcher = _step2.value;\n\n\t\t\t\t\tif (this._from.type != 'marker') {\n\t\t\t\t\t\t/**\n       * To-stamp conversion is supported only for model markers.\n       *\n       * @error build-model-converter-element-to-stamp\n       */\n\t\t\t\t\t\tthrow new _ckeditorerror2.default('build-model-converter-non-marker-to-stamp: To-stamp conversion is supported only from model markers.');\n\t\t\t\t\t}\n\n\t\t\t\t\tvar priority = this._from.priority === null ? 'normal' : this._from.priority;\n\n\t\t\t\t\telement = typeof element == 'string' ? new _uielement2.default(element) : element;\n\n\t\t\t\t\tdispatcher.on('addMarker:' + this._from.name, (0, _modelToViewConverters.insertUIElement)(element), { priority: priority });\n\t\t\t\t\tdispatcher.on('removeMarker:' + this._from.name, (0, _modelToViewConverters.removeUIElement)(element), { priority: priority });\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t_iteratorError2 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Registers what view attribute will be created by converter. Keep in mind, that only model attribute to\n   * view attribute conversion is supported.\n   *\n   * Method accepts various ways of providing how the view attribute will be created:\n   *\n   * * for no passed parameter, attribute key and value will be converted 1-to-1 to view attribute,\n   * * if you pass one `string`, it will be used as new attribute key while attribute value will be copied,\n   * * if you pass two `string`s, first one will be used as new attribute key and second one as new attribute value,\n   * * if you pass a function, it is expected to return an object with `key` and `value` properties representing attribute key and value.\n   * This function will be passed model attribute value and model attribute key as first two parameters and then\n   * all dispatcher's\n   * {module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:changeAttribute changeAttribute event}\n   * parameters.\n   *\n   *\t\tbuildModelConverter().for( dispatcher ).fromAttribute( 'class' ).toAttribute( '' );\n   *\n   *\t\tbuildModelConverter().for( dispatcher ).fromAttribute( 'linkTitle' ).toAttribute( 'title' );\n   *\n   *\t\tbuildModelConverter().for( dispatcher ).fromAttribute( 'highlighted' ).toAttribute( 'style', 'background:yellow' );\n   *\n   *\t\tbuildModelConverter().for( dispatcher )\n   *\t\t\t.fromAttribute( 'theme' )\n   *\t\t\t.toAttribute( ( value ) => ( { key: 'class', value: value + '-theme' } ) );\n   *\n   * This method creates the converter and adds it as a callback to a proper\n   * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher conversion dispatcher} event.\n   *\n   * @param {String|Function} [keyOrCreator] Attribute key or a creator function.\n   * @param {*} [value] Attribute value.\n   */\n\n\t}, {\n\t\tkey: 'toAttribute',\n\t\tvalue: function toAttribute(keyOrCreator, value) {\n\t\t\tif (this._from.type != 'attribute') {\n\t\t\t\t/**\n     * To-attribute conversion is supported only for model attributes.\n     *\n     * @error build-model-converter-element-to-attribute\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('build-model-converter-non-attribute-to-attribute: ' + 'To-attribute conversion is supported only from model attributes.');\n\t\t\t}\n\n\t\t\tvar attributeCreator = void 0;\n\n\t\t\tif (!keyOrCreator) {\n\t\t\t\t// If `keyOrCreator` is not set, we assume default behavior which is 1:1 attribute re-write.\n\t\t\t\t// This is also a default behavior for `setAttribute` converter when no attribute creator is passed.\n\t\t\t\tattributeCreator = undefined;\n\t\t\t} else if (typeof keyOrCreator == 'string') {\n\t\t\t\t// `keyOrCreator` is an attribute key.\n\n\t\t\t\tif (value) {\n\t\t\t\t\t// If value is set, create \"dumb\" creator that always returns the same object.\n\t\t\t\t\tattributeCreator = function attributeCreator() {\n\t\t\t\t\t\treturn { key: keyOrCreator, value: value };\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\t// If value is not set, take it from the passed parameter.\n\t\t\t\t\tattributeCreator = function attributeCreator(value) {\n\t\t\t\t\t\treturn { key: keyOrCreator, value: value };\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// `keyOrCreator` is an attribute creator function.\n\t\t\t\tattributeCreator = keyOrCreator;\n\t\t\t}\n\n\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\tvar _didIteratorError3 = false;\n\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator3 = this._dispatchers[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\tvar dispatcher = _step3.value;\n\n\t\t\t\t\tvar options = { priority: this._from.priority || 'normal' };\n\n\t\t\t\t\tdispatcher.on('addAttribute:' + this._from.key, (0, _modelToViewConverters.setAttribute)(attributeCreator), options);\n\t\t\t\t\tdispatcher.on('changeAttribute:' + this._from.key, (0, _modelToViewConverters.setAttribute)(attributeCreator), options);\n\t\t\t\t\tdispatcher.on('removeAttribute:' + this._from.key, (0, _modelToViewConverters.removeAttribute)(attributeCreator), options);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t_iteratorError3 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn ModelConverterBuilder;\n}();\n\n/**\n * Entry point for model-to-view converters builder. This chainable API makes it easy to create basic, most common\n * model-to-view converters and attach them to provided dispatchers. The method returns an instance of\n * {@link module:engine/conversion/buildmodelconverter~ModelConverterBuilder}.\n */\n\n\nfunction buildModelConverter() {\n\treturn new ModelConverterBuilder();\n}\n\n/**\n * @typedef StampCreatorData\n * @param {Object} data Additional information about the change.\n * @param {String} data.name Marker name.\n * @param {module:engine/model/range~Range} data.range Marker range.\n * @param {Boolean} data.isOpening Defines if currently converted element is a beginning or end of the marker range.\n * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n * @param {Object} conversionApi Conversion interface to be used by callback, passed in `ModelConversionDispatcher` constructor.\n */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/conversion/buildmodelconverter.js\n// module id = 43\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _operation = require('./operation');\n\nvar _operation2 = _interopRequireDefault(_operation);\n\nvar _position = require('../position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _nodelist = require('../nodelist');\n\nvar _nodelist2 = _interopRequireDefault(_nodelist);\n\nvar _removeoperation = require('./removeoperation');\n\nvar _removeoperation2 = _interopRequireDefault(_removeoperation);\n\nvar _writer = require('../writer');\n\nvar _text = require('../text');\n\nvar _text2 = _interopRequireDefault(_text);\n\nvar _element = require('../element');\n\nvar _element2 = _interopRequireDefault(_element);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/model/operation/insertoperation\n */\n\n/**\n * Operation to insert one or more nodes at given position in the model.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nvar InsertOperation = function (_Operation) {\n\t_inherits(InsertOperation, _Operation);\n\n\t/**\n  * Creates an insert operation.\n  *\n  * @param {module:engine/model/position~Position} position Position of insertion.\n  * @param {module:engine/model/node~NodeSet} nodes The list of nodes to be inserted.\n  * @param {Number} baseVersion {@link module:engine/model/document~Document#version} on which operation can be applied.\n  */\n\tfunction InsertOperation(position, nodes, baseVersion) {\n\t\t_classCallCheck(this, InsertOperation);\n\n\t\t/**\n   * Position of insertion.\n   *\n   * @readonly\n   * @member {module:engine/model/position~Position} module:engine/model/operation/insertoperation~InsertOperation#position\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (InsertOperation.__proto__ || Object.getPrototypeOf(InsertOperation)).call(this, baseVersion));\n\n\t\t_this.position = _position2.default.createFromPosition(position);\n\n\t\t/**\n   * List of nodes to insert.\n   *\n   * @readonly\n   * @member {module:engine/model/nodelist~NodeList} module:engine/model/operation/insertoperation~InsertOperation#nodeList\n   */\n\t\t_this.nodes = new _nodelist2.default((0, _writer.normalizeNodes)(nodes));\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(InsertOperation, [{\n\t\tkey: 'clone',\n\n\n\t\t/**\n   * Creates and returns an operation that has the same parameters as this operation.\n   *\n   * @returns {module:engine/model/operation/insertoperation~InsertOperation} Clone of this operation.\n   */\n\t\tvalue: function clone() {\n\t\t\tvar nodes = new _nodelist2.default([].concat(_toConsumableArray(this.nodes)).map(function (node) {\n\t\t\t\treturn node.clone(true);\n\t\t\t}));\n\n\t\t\treturn new InsertOperation(this.position, nodes, this.baseVersion);\n\t\t}\n\n\t\t/**\n   * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n   *\n   * @returns {module:engine/model/operation/removeoperation~RemoveOperation}\n   */\n\n\t}, {\n\t\tkey: 'getReversed',\n\t\tvalue: function getReversed() {\n\t\t\tvar graveyard = this.position.root.document.graveyard;\n\t\t\tvar gyPosition = new _position2.default(graveyard, [0]);\n\n\t\t\treturn new _removeoperation2.default(this.position, this.nodes.maxOffset, gyPosition, this.baseVersion + 1);\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: '_execute',\n\t\tvalue: function _execute() {\n\t\t\t// What happens here is that we want original nodes be passed to writer because we want original nodes\n\t\t\t// to be inserted to the model. But in InsertOperation, we want to keep those nodes as they were added\n\t\t\t// to the operation, not modified. For example, text nodes can get merged or cropped while Elements can\n\t\t\t// get children. It is important that InsertOperation has the copy of original nodes in intact state.\n\t\t\tvar originalNodes = this.nodes;\n\t\t\tthis.nodes = new _nodelist2.default([].concat(_toConsumableArray(originalNodes)).map(function (node) {\n\t\t\t\treturn node.clone(true);\n\t\t\t}));\n\n\t\t\tvar range = (0, _writer.insert)(this.position, originalNodes);\n\n\t\t\treturn { range: range };\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'type',\n\t\tget: function get() {\n\t\t\treturn 'insert';\n\t\t}\n\t}], [{\n\t\tkey: 'fromJSON',\n\n\n\t\t/**\n   * Creates `InsertOperation` object from deserilized object, i.e. from parsed JSON string.\n   *\n   * @param {Object} json Deserialized JSON object.\n   * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n   * @returns {module:engine/model/operation/insertoperation~InsertOperation}\n   */\n\t\tvalue: function fromJSON(json, document) {\n\t\t\tvar children = [];\n\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = json.nodes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar child = _step.value;\n\n\t\t\t\t\tif (child.name) {\n\t\t\t\t\t\t// If child has name property, it is an Element.\n\t\t\t\t\t\tchildren.push(_element2.default.fromJSON(child));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Otherwise, it is a Text node.\n\t\t\t\t\t\tchildren.push(_text2.default.fromJSON(child));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new InsertOperation(_position2.default.fromJSON(json.position, document), children, json.baseVersion);\n\t\t}\n\t}, {\n\t\tkey: 'className',\n\t\tget: function get() {\n\t\t\treturn 'engine.model.operation.InsertOperation';\n\t\t}\n\t}]);\n\n\treturn InsertOperation;\n}(_operation2.default);\n\nexports.default = InsertOperation;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/operation/insertoperation.js\n// module id = 44\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _element = require('./element');\n\nvar _element2 = _interopRequireDefault(_element);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/view/containerelement\n */\n\n/**\n * Containers are elements which define document structure. They define boundaries for\n * {@link module:engine/view/attributeelement~AttributeElement attributes}. They are mostly use for block elements like `<p>` or `<div>`.\n *\n * Editing engine does not define fixed HTML DTD. This is why the type of the {@link module:engine/view/element~Element} need to\n * be defined by the feature developer.\n *\n * Creating an element you should use `ContainerElement` class or {@link module:engine/view/attributeelement~AttributeElement}. This is\n * important to define the type of the element because of two reasons:\n *\n * Firstly, {@link module:engine/view/domconverter~DomConverter} needs the information what is an editable block to convert elements to\n * DOM properly. {@link module:engine/view/domconverter~DomConverter} will ensure that `ContainerElement` is editable and it is possible\n * to put caret inside it, even if the container is empty.\n *\n * Secondly, {@link module:engine/view/writer~writer view writer} uses this information.\n * Nodes {@link module:engine/view/writer~writer.breakAttributes breaking} and {@link module:engine/view/writer~writer.mergeAttributes\n * merging}\n * is performed only in a bounds of a container nodes.\n *\n * For instance if `<p>` is an container and `<b>` is attribute:\n *\n *\t\t<p><b>fo^o</b></p>\n *\n * {@link module:engine/view/writer~writer.breakAttributes breakAttributes} will create:\n *\n *\t\t<p><b>fo</b><b>o</b></p>\n *\n * There might be a need to mark `<span>` element as a container node, for example in situation when it will be a\n * container of an inline widget:\n *\n *\t\t<span color=\"red\">foobar</span>\t\t// attribute\n *\t\t<span data-widget>foobar</span>\t\t// container\n *\n * @extends module:engine/view/element~Element\n */\nvar ContainerElement = function (_Element) {\n  _inherits(ContainerElement, _Element);\n\n  /**\n   * Creates a container element.\n   *\n   * @see module:engine/view/element~Element\n   */\n  function ContainerElement(name, attrs, children) {\n    _classCallCheck(this, ContainerElement);\n\n    /**\n     * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n     *\n     * @method #getFillerOffset\n     * @returns {Number|null} Block filler offset or `null` if block filler is not needed.\n     */\n    var _this = _possibleConstructorReturn(this, (ContainerElement.__proto__ || Object.getPrototypeOf(ContainerElement)).call(this, name, attrs, children));\n\n    _this.getFillerOffset = getFillerOffset;\n    return _this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(ContainerElement, [{\n    key: 'is',\n    value: function is(type) {\n      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (!name) {\n        return type == 'containerElement' || _get(ContainerElement.prototype.__proto__ || Object.getPrototypeOf(ContainerElement.prototype), 'is', this).call(this, type);\n      } else {\n        return type == 'containerElement' && name == this.name || _get(ContainerElement.prototype.__proto__ || Object.getPrototypeOf(ContainerElement.prototype), 'is', this).call(this, type, name);\n      }\n    }\n  }]);\n\n  return ContainerElement;\n}(_element2.default);\n\n// Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n//\n// @returns {Number|null} Block filler offset or `null` if block filler is not needed.\n\n\nexports.default = ContainerElement;\nfunction getFillerOffset() {\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = this.getChildren()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var child = _step.value;\n\n      // If there's any non-UI element – don't render the bogus.\n      if (!child.is('uiElement')) {\n        return null;\n      }\n    }\n\n    // If there are only UI elements – render the bogus at the end of the element.\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return this.childCount;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/view/containerelement.js\n// module id = 45\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* globals window, document */\n\n/**\n * @module utils/dom/global\n */\n\n/**\n * A helper (module) giving an access to the global DOM objects such as `window` and\n * `document`. Accessing these objects using this helper allows easy and bulletproof\n * testing, i.e. stubbing native properties:\n *\n *\t\timport global from 'ckeditor5/utils/dom/global.js';\n *\n *\t\t// This stub will work for any code using global module.\n *\t\ttestUtils.sinon.stub( global, 'window', {\n *\t\t\tinnerWidth: 10000\n *\t\t} );\n *\n *\t\tconsole.log( global.window.innerWidth );\n */\nexports.default = { window: window, document: document };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/dom/global.js\n// module id = 46\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIterable;\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/isiterable\n */\n\n/**\n * Checks if value implements iterator interface.\n *\n * @param {*} value The value to check.\n * @returns {Boolean} True if value implements iterator interface.\n */\nfunction isIterable(value) {\n  return !!(value && value[Symbol.iterator]);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/isiterable.js\n// module id = 47\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\nn\n/**\n * @module utils/keystrokehandler\n */\n\nvar _emittermixin = require('./dom/emittermixin');\n\nvar _emittermixin2 = _interopRequireDefault(_emittermixin);\n\nvar _keyboard = require('./keyboard');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Keystroke handler registers keystrokes so the callbacks associated\n * with these keystrokes will be executed if the matching `keydown` is fired\n * by a defined emitter.\n *\n *\t\tconst handler = new KeystrokeHandler();\n *\n *\t\thandler.listenTo( emitter );\n *\n *\t\thandler.set( 'ctrl + a', ( keyEventData, cancel ) => {\n *\t\t\tconsole.log( 'ctrl + a has been pressed' );\n *\t\t\tcancel();\n *\t\t} );\n */\nvar KeystrokeHandler = function () {\n\t/**\n  * Creates an instance of the keystroke handler.\n  */\n\tfunction KeystrokeHandler() {\n\t\t_classCallCheck(this, KeystrokeHandler);\n\n\t\t/**\n   * Listener used to listen to events for easier keystroke handler destruction.\n   *\n   * @protected\n   * @member {module:utils/dom/emittermixin~Emitter}\n   */\n\t\tthis._listener = Object.create(_emittermixin2.default);\n\n\t\t/**\n   * Map of the defined keystrokes. Keystroke codes are the keys.\n   *\n   * @private\n   * @member {Map}\n   */\n\t\tthis._keystrokes = new Map();\n\t}\n\n\t/**\n  * Starts listening for `keydown` events from a given emitter.\n  *\n  * @param {module:utils/emittermixin~Emitter} emitter\n  */\n\n\n\t_createClass(KeystrokeHandler, [{\n\t\tkey: 'listenTo',\n\t\tvalue: function listenTo(emitter) {\n\t\t\tvar _this = this;\n\n\t\t\tthis._listener.listenTo(emitter, 'keydown', function (evt, data) {\n\t\t\t\t_this.press(data);\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * Registers a handler for the specified keystroke.\n   *\n   * @param {String|Array.<String|Number>} keystroke Keystroke defined in a format accepted by\n   * the {@link module:utils/keyboard~parseKeystroke} function.\n   * @param {Function} callback A function called with the\n   * {@link module:engine/view/observer/keyobserver~KeyEventData key event data} object and\n   * a helper to both `preventDefault` and `stopPropagation` of the event.\n   */\n\n\t}, {\n\t\tkey: 'set',\n\t\tvalue: function set(keystroke, callback) {\n\t\t\tvar keyCode = (0, _keyboard.parseKeystroke)(keystroke);\n\t\t\tvar callbacks = this._keystrokes.get(keyCode);\n\n\t\t\tif (callbacks) {\n\t\t\t\tcallbacks.push(callback);\n\t\t\t} else {\n\t\t\t\tthis._keystrokes.set(keyCode, [callback]);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Triggers a keystroke handler for a specified key combination, if such a keystroke was {@link #set defined}.\n   *\n   * @param {module:engine/view/observer/keyobserver~KeyEventData} keyEventData Key event data.\n   * @returns {Boolean} Whether the keystroke was handled.\n   */\n\n\t}, {\n\t\tkey: 'press',\n\t\tvalue: function press(keyEventData) {\n\t\t\tvar keyCode = (0, _keyboard.getCode)(keyEventData);\n\t\t\tvar callbacks = this._keystrokes.get(keyCode);\n\n\t\t\tif (!callbacks) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = callbacks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar callback = _step.value;\n\n\t\t\t\t\tcallback(keyEventData, function () {\n\t\t\t\t\t\tkeyEventData.preventDefault();\n\t\t\t\t\t\tkeyEventData.stopPropagation();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n   * Destroys the keystroke handler.\n   */\n\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {\n\t\t\tthis._keystrokes = new Map();\n\t\t\tthis._listener.stopListening();\n\t\t}\n\t}]);\n\n\treturn KeystrokeHandler;\n}();\n\nexports.default = KeystrokeHandler;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/keystrokehandler.js\n// module id = 48\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _SetCache = require('./_SetCache');\n\nvar _SetCache2 = _interopRequireDefault(_SetCache);\n\nvar _arrayIncludes = require('./_arrayIncludes');\n\nvar _arrayIncludes2 = _interopRequireDefault(_arrayIncludes);\n\nvar _arrayIncludesWith = require('./_arrayIncludesWith');\n\nvar _arrayIncludesWith2 = _interopRequireDefault(_arrayIncludesWith);\n\nvar _cacheHas = require('./_cacheHas');\n\nvar _cacheHas2 = _interopRequireDefault(_cacheHas);\n\nvar _createSet = require('./_createSet');\n\nvar _createSet2 = _interopRequireDefault(_createSet);\n\nvar _setToArray = require('./_setToArray');\n\nvar _setToArray2 = _interopRequireDefault(_setToArray);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = _arrayIncludes2.default,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = _arrayIncludesWith2.default;\n  } else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : (0, _createSet2.default)(array);\n    if (set) {\n      return (0, _setToArray2.default)(set);\n    }\n    isCommon = false;\n    includes = _cacheHas2.default;\n    seen = new _SetCache2.default();\n  } else {\n    seen = iteratee ? [] : result;\n  }\n  outer: while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = comparator || value !== 0 ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    } else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexports.default = baseUniq;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseUniq.js\n// module id = 49\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _assignIn = require('./assignIn');\n\nObject.defineProperty(exports, 'default', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_assignIn).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/extend.js\n// module id = 50\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) == 'object';\n}\n\nexports.default = isObjectLike;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/isObjectLike.js\n// module id = 51\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _isObjectLike = require('./isObjectLike');\n\nvar _isObjectLike2 = _interopRequireDefault(_isObjectLike);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n *  else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) == 'symbol' || (0, _isObjectLike2.default)(value) && objectToString.call(value) == symbolTag;\n}\n\nexports.default = isSymbol;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/isSymbol.js\n// module id = 52\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\nn\n/**\n * @module engine/model/treewalker\n */\n\nvar _text = require('./text');\n\nvar _text2 = _interopRequireDefault(_text);\n\nvar _textproxy = require('./textproxy');\n\nvar _textproxy2 = _interopRequireDefault(_textproxy);\n\nvar _element = require('./element');\n\nvar _element2 = _interopRequireDefault(_element);\n\nvar _position = require('./position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Position iterator class. It allows to iterate forward and backward over the document.\n */\nvar TreeWalker = function () {\n\t/**\n  * Creates a range iterator. All parameters are optional, but you have to specify either `boundaries` or `startPosition`.\n  *\n  * @constructor\n  * @param {Object} [options={}] Object with configuration.\n  * @param {'forward'|'backward'} [options.direction='forward'] Walking direction.\n  * @param {module:engine/model/range~Range} [options.boundaries=null] Range to define boundaries of the iterator.\n  * @param {module:engine/model/position~Position} [options.startPosition] Starting position.\n  * @param {Boolean} [options.singleCharacters=false] Flag indicating whether all consecutive characters with the same attributes\n  * should be returned one by one as multiple {@link module:engine/model/textproxy~TextProxy} (`true`) objects or as one\n  * {@link module:engine/model/textproxy~TextProxy} (`false`).\n  * @param {Boolean} [options.shallow=false] Flag indicating whether iterator should enter elements or not. If the\n  * iterator is shallow child nodes of any iterated node will not be returned along with `elementEnd` tag.\n  * @param {Boolean} [options.ignoreElementEnd=false] Flag indicating whether iterator should ignore `elementEnd`\n  * tags. If the option is true walker will not return a parent node of start position. If this option is `true`\n  * each {@link module:engine/model/element~Element} will be returned once, while if the option is `false` they might be returned\n  * twice: for `'elementStart'` and `'elementEnd'`.\n  */\n\tfunction TreeWalker() {\n\t\tvar options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\t\t_classCallCheck(this, TreeWalker);\n\n\t\tif (!options.boundaries && !options.startPosition) {\n\t\t\t/**\n    * Neither boundaries nor starting position have been defined.\n    *\n    * @error tree-walker-no-start-position\n    */\n\t\t\tthrow new _ckeditorerror2.default('model-tree-walker-no-start-position: Neither boundaries nor starting position have been defined.');\n\t\t}\n\n\t\tvar direction = options.direction || 'forward';\n\n\t\tif (direction != 'forward' && direction != 'backward') {\n\t\t\tthrow new _ckeditorerror2.default('model-tree-walker-unknown-direction: Only `backward` and `forward` direction allowed.', { direction: direction });\n\t\t}\n\n\t\t/**\n   * Walking direction. Defaults `'forward'`.\n   *\n   * @readonly\n   * @member {'backward'|'forward'} module:engine/model/treewalker~TreeWalker#direction\n   */\n\t\tthis.direction = direction;\n\n\t\t/**\n   * Iterator boundaries.\n   *\n   * When the iterator is walking `'forward'` on the end of boundary or is walking `'backward'`\n   * on the start of boundary, then `{ done: true }` is returned.\n   *\n   * If boundaries are not defined they are set before first and after last child of the root node.\n   *\n   * @readonly\n   * @member {module:engine/model/range~Range} module:engine/model/treewalker~TreeWalker#boundaries\n   */\n\t\tthis.boundaries = options.boundaries || null;\n\n\t\t/**\n   * Iterator position. This is always static position, even if the initial position was a\n   * {@link module:engine/model/liveposition~LivePosition live position}. If start position is not defined then position depends\n   * on {@link #direction}. If direction is `'forward'` position starts form the beginning, when direction\n   * is `'backward'` position starts from the end.\n   *\n   * @readonly\n   * @member {module:engine/model/position~Position} module:engine/model/treewalker~TreeWalker#position\n   */\n\t\tif (options.startPosition) {\n\t\t\tthis.position = _position2.default.createFromPosition(options.startPosition);\n\t\t} else {\n\t\t\tthis.position = _position2.default.createFromPosition(this.boundaries[this.direction == 'backward' ? 'end' : 'start']);\n\t\t}\n\n\t\t/**\n   * Flag indicating whether all consecutive characters with the same attributes should be\n   * returned as one {@link module:engine/model/textproxy~TextProxy} (`true`) or one by one (`false`).\n   *\n   * @readonly\n   * @member {Boolean} module:engine/model/treewalker~TreeWalker#singleCharacters\n   */\n\t\tthis.singleCharacters = !!options.singleCharacters;\n\n\t\t/**\n   * Flag indicating whether iterator should enter elements or not. If the iterator is shallow child nodes of any\n   * iterated node will not be returned along with `elementEnd` tag.\n   *\n   * @readonly\n   * @member {Boolean} module:engine/model/treewalker~TreeWalker#shallow\n   */\n\t\tthis.shallow = !!options.shallow;\n\n\t\t/**\n   * Flag indicating whether iterator should ignore `elementEnd` tags. If the option is true walker will not\n   * return a parent node of the start position. If this option is `true` each {@link module:engine/model/element~Element} will\n   * be returned once, while if the option is `false` they might be returned twice:\n   * for `'elementStart'` and `'elementEnd'`.\n   *\n   * @readonly\n   * @member {Boolean} module:engine/model/treewalker~TreeWalker#ignoreElementEnd\n   */\n\t\tthis.ignoreElementEnd = !!options.ignoreElementEnd;\n\n\t\t/**\n   * Start boundary cached for optimization purposes.\n   *\n   * @private\n   * @member {module:engine/model/element~Element} module:engine/model/treewalker~TreeWalker#_boundaryStartParent\n   */\n\t\tthis._boundaryStartParent = this.boundaries ? this.boundaries.start.parent : null;\n\n\t\t/**\n   * End boundary cached for optimization purposes.\n   *\n   * @private\n   * @member {module:engine/model/element~Element} module:engine/model/treewalker~TreeWalker#_boundaryEndParent\n   */\n\t\tthis._boundaryEndParent = this.boundaries ? this.boundaries.end.parent : null;\n\n\t\t/**\n   * Parent of the most recently visited node. Cached for optimization purposes.\n   *\n   * @private\n   * @member {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment}\n   * module:engine/model/treewalker~TreeWalker#_visitedParent\n   */\n\t\tthis._visitedParent = this.position.parent;\n\t}\n\n\t/**\n  * Iterator interface.\n  */\n\n\n\t_createClass(TreeWalker, [{\n\t\tkey: Symbol.iterator,\n\t\tvalue: function value() {\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Moves {@link #position} in the {@link #direction} skipping values as long as the callback function returns `true`.\n   *\n   * For example:\n   *\n   * \t\twalker.skip( value => value.type == 'text' ); // <paragraph>[]foo</paragraph> -> <paragraph>foo[]</paragraph>\n   * \t\twalker.skip( () => true ); // Move the position to the end: <paragraph>[]foo</paragraph> -> <paragraph>foo</paragraph>[]\n   * \t\twalker.skip( () => false ); // Do not move the position.\n   *\n   * @param {Function} skip Callback function. Gets {@link module:engine/model/treewalker~TreeWalkerValue} and should\n   * return `true` if the value should be skipped or `false` if not.\n   */\n\n\t}, {\n\t\tkey: 'skip',\n\t\tvalue: function skip(_skip) {\n\t\t\tvar done = void 0,\n\t\t\t    value = void 0,\n\t\t\t    prevPosition = void 0,\n\t\t\t    prevVisitedParent = void 0;\n\n\t\t\tdo {\n\t\t\t\tprevPosition = this.position;\n\t\t\t\tprevVisitedParent = this._visitedParent;\n\n\t\t\t\tvar _next2 = this.next();\n\n\t\t\t\tdone = _next2.done;\n\t\t\t\tvalue = _next2.value;\n\t\t\t} while (!done && _skip(value));\n\n\t\t\tif (!done) {\n\t\t\t\tthis.position = prevPosition;\n\t\t\t\tthis._visitedParent = prevVisitedParent;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Iterator interface method.\n   * Detects walking direction and makes step forward or backward.\n   *\n   * @returns {Object} Object implementing iterator interface, returning information about taken step.\n   */\n\n\t}, {\n\t\tkey: 'next',\n\t\tvalue: function next() {\n\t\t\tif (this.direction == 'forward') {\n\t\t\t\treturn this._next();\n\t\t\t} else {\n\t\t\t\treturn this._previous();\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Makes a step forward in model. Moves the {@link #position} to the next position and returns the encountered value.\n   *\n   * @private\n   * @returns {Object}\n   * @returns {Boolean} return.done True if iterator is done.\n   * @returns {module:engine/model/treewalker~TreeWalkerValue} return.value Information about taken step.\n   */\n\n\t}, {\n\t\tkey: '_next',\n\t\tvalue: function _next() {\n\t\t\tvar previousPosition = this.position;\n\t\t\tvar position = _position2.default.createFromPosition(this.position);\n\t\t\tvar parent = this._visitedParent;\n\n\t\t\t// We are at the end of the root.\n\t\t\tif (parent.parent === null && position.offset === parent.maxOffset) {\n\t\t\t\treturn { done: true };\n\t\t\t}\n\n\t\t\t// We reached the walker boundary.\n\t\t\tif (parent === this._boundaryEndParent && position.offset == this.boundaries.end.offset) {\n\t\t\t\treturn { done: true };\n\t\t\t}\n\n\t\t\tvar node = position.textNode ? position.textNode : position.nodeAfter;\n\n\t\t\tif (node instanceof _element2.default) {\n\t\t\t\tif (!this.shallow) {\n\t\t\t\t\t// Manual operations on path internals for optimization purposes. Here and in the rest of the method.\n\t\t\t\t\tposition.path.push(0);\n\t\t\t\t\tthis._visitedParent = node;\n\t\t\t\t} else {\n\t\t\t\t\tposition.offset++;\n\t\t\t\t}\n\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn formatReturnValue('elementStart', node, previousPosition, position, 1);\n\t\t\t} else if (node instanceof _text2.default) {\n\t\t\t\tvar charactersCount = void 0;\n\n\t\t\t\tif (this.singleCharacters) {\n\t\t\t\t\tcharactersCount = 1;\n\t\t\t\t} else {\n\t\t\t\t\tvar offset = node.endOffset;\n\n\t\t\t\t\tif (this._boundaryEndParent == parent && this.boundaries.end.offset < offset) {\n\t\t\t\t\t\toffset = this.boundaries.end.offset;\n\t\t\t\t\t}\n\n\t\t\t\t\tcharactersCount = offset - position.offset;\n\t\t\t\t}\n\n\t\t\t\tvar offsetInTextNode = position.offset - node.startOffset;\n\t\t\t\tvar item = new _textproxy2.default(node, offsetInTextNode, charactersCount);\n\n\t\t\t\tposition.offset += charactersCount;\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn formatReturnValue('text', item, previousPosition, position, charactersCount);\n\t\t\t} else {\n\t\t\t\t// `node` is not set, we reached the end of current `parent`.\n\t\t\t\tposition.path.pop();\n\t\t\t\tposition.offset++;\n\t\t\t\tthis.position = position;\n\t\t\t\tthis._visitedParent = parent.parent;\n\n\t\t\t\tif (this.ignoreElementEnd) {\n\t\t\t\t\treturn this._next();\n\t\t\t\t} else {\n\t\t\t\t\treturn formatReturnValue('elementEnd', parent, previousPosition, position);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Makes a step backward in model. Moves the {@link #position} to the previous position and returns the encountered value.\n   *\n   * @private\n   * @returns {Object}\n   * @returns {Boolean} return.done True if iterator is done.\n   * @returns {module:engine/model/treewalker~TreeWalkerValue} return.value Information about taken step.\n   */\n\n\t}, {\n\t\tkey: '_previous',\n\t\tvalue: function _previous() {\n\t\t\tvar previousPosition = this.position;\n\t\t\tvar position = _position2.default.createFromPosition(this.position);\n\t\t\tvar parent = this._visitedParent;\n\n\t\t\t// We are at the beginning of the root.\n\t\t\tif (parent.parent === null && position.offset === 0) {\n\t\t\t\treturn { done: true };\n\t\t\t}\n\n\t\t\t// We reached the walker boundary.\n\t\t\tif (parent == this._boundaryStartParent && position.offset == this.boundaries.start.offset) {\n\t\t\t\treturn { done: true };\n\t\t\t}\n\n\t\t\t// Get node just before current position\n\t\t\tvar node = position.textNode ? position.textNode : position.nodeBefore;\n\n\t\t\tif (node instanceof _element2.default) {\n\t\t\t\tposition.offset--;\n\n\t\t\t\tif (!this.shallow) {\n\t\t\t\t\tposition.path.push(node.maxOffset);\n\t\t\t\t\tthis.position = position;\n\t\t\t\t\tthis._visitedParent = node;\n\n\t\t\t\t\tif (this.ignoreElementEnd) {\n\t\t\t\t\t\treturn this._previous();\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn formatReturnValue('elementEnd', node, previousPosition, position);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.position = position;\n\n\t\t\t\t\treturn formatReturnValue('elementStart', node, previousPosition, position, 1);\n\t\t\t\t}\n\t\t\t} else if (node instanceof _text2.default) {\n\t\t\t\tvar charactersCount = void 0;\n\n\t\t\t\tif (this.singleCharacters) {\n\t\t\t\t\tcharactersCount = 1;\n\t\t\t\t} else {\n\t\t\t\t\tvar offset = node.startOffset;\n\n\t\t\t\t\tif (this._boundaryStartParent == parent && this.boundaries.start.offset > offset) {\n\t\t\t\t\t\toffset = this.boundaries.start.offset;\n\t\t\t\t\t}\n\n\t\t\t\t\tcharactersCount = position.offset - offset;\n\t\t\t\t}\n\n\t\t\t\tvar offsetInTextNode = position.offset - node.startOffset;\n\t\t\t\tvar item = new _textproxy2.default(node, offsetInTextNode - charactersCount, charactersCount);\n\n\t\t\t\tposition.offset -= charactersCount;\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn formatReturnValue('text', item, previousPosition, position, charactersCount);\n\t\t\t} else {\n\t\t\t\t// `node` is not set, we reached the beginning of current `parent`.\n\t\t\t\tposition.path.pop();\n\t\t\t\tthis.position = position;\n\t\t\t\tthis._visitedParent = parent.parent;\n\n\t\t\t\treturn formatReturnValue('elementStart', parent, previousPosition, position, 1);\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn TreeWalker;\n}();\n\nexports.default = TreeWalker;\n\n\nfunction formatReturnValue(type, item, previousPosition, nextPosition, length) {\n\treturn {\n\t\tdone: false,\n\t\tvalue: {\n\t\t\ttype: type,\n\t\t\titem: item,\n\t\t\tpreviousPosition: previousPosition,\n\t\t\tnextPosition: nextPosition,\n\t\t\tlength: length\n\t\t}\n\t};\n}\n\n/**\n * Type of the step made by {@link module:engine/model/treewalker~TreeWalker}.\n * Possible values: `'elementStart'` if walker is at the beginning of a node, `'elementEnd'` if walker is at the end of node,\n * `'character'` if walker traversed over a character, or `'text'` if walker traversed over multiple characters (available in\n * character merging mode, see {@link module:engine/model/treewalker~TreeWalker#constructor}).\n *\n * @typedef {'elementStart'|'elementEnd'|'character'|'text'} module:engine/model/treewalker~TreeWalkerValueType\n */\n\n/**\n * Object returned by {@link module:engine/model/treewalker~TreeWalker} when traversing tree model.\n *\n * @typedef {Object} module:engine/model/treewalker~TreeWalkerValue\n * @property {module:engine/model/treewalker~TreeWalkerValueType} type\n * @property {module:engine/model/item~Item} item Item between old and new positions of {@link module:engine/model/treewalker~TreeWalker}.\n * @property {module:engine/model/position~Position} previousPosition Previous position of the iterator.\n * * Forward iteration: For `'elementEnd'` it is the last position inside the element. For all other types it is the\n * position before the item. Note that it is more efficient to use this position then calculate the position before\n * the node using {@link module:engine/model/position~Position.createBefore}. It is also more efficient to get the\n * position after node by shifting `previousPosition` by `length`, using {@link module:engine/model/position~Position#getShiftedBy},\n * then calculate the position using {@link module:engine/model/position~Position.createAfter}.\n * * Backward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after item.\n * @property {module:engine/model/position~Position} nextPosition Next position of the iterator.\n * * Forward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after the item.\n * * Backward iteration: For `'elementEnd'` it is last position inside element. For all other types it is the position\n * before the item.\n * @property {Number} [length] Length of the item. For `'elementStart'` and `'character'` it is 1. For `'text'` it is\n * the length of the text. For `'elementEnd'` it is undefined.\n */\n\n/**\n * Tree walking directions.\n *\n * @typedef {'forward'|'backward'} module:engine/view/treewalker~TreeWalkerDirection\n */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/treewalker.js\n// module id = 53\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\nn\n/**\n * @module engine/view/observer/observer\n */\n\nvar _emittermixin = require('@ckeditor/ckeditor5-utils/src/dom/emittermixin');\n\nvar _emittermixin2 = _interopRequireDefault(_emittermixin);\n\nvar _mix = require('@ckeditor/ckeditor5-utils/src/mix');\n\nvar _mix2 = _interopRequireDefault(_mix);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Abstract base observer class. Observers are classes which observe changes on DOM elements, do the preliminary\n * processing and fire events on the {@link module:engine/view/document~Document} objects. Observers can also add features to the view,\n * for instance by updating its status or marking elements which need refresh on DOM events.\n *\n * @abstract\n */\nvar Observer = function () {\n\t/**\n  * Creates an instance of the observer.\n  *\n  * @param {module:engine/view/document~Document} document\n  */\n\tfunction Observer(document) {\n\t\t_classCallCheck(this, Observer);\n\n\t\t/**\n   * Reference to the {@link module:engine/view/document~Document} object.\n   *\n   * @readonly\n   * @member {module:engine/view/document~Document}\n   */\n\t\tthis.document = document;\n\n\t\t/**\n   * State of the observer. If it is disabled events will not be fired.\n   *\n   * @readonly\n   * @member {Boolean}\n   */\n\t\tthis.isEnabled = false;\n\t}\n\n\t/**\n  * Enables the observer. This method is called when then observer is registered to the\n  * {@link module:engine/view/document~Document} and after {@link module:engine/view/document~Document#render rendering}\n  * (all observers are {@link #disable disabled} before rendering).\n  *\n  * A typical use case for disabling observers is that mutation observers need to be disabled for the rendering.\n  * However, a child class may not need to be disabled, so it can implement an empty method.\n  *\n  * @see module:engine/view/observer/observer~Observer#disable\n  */\n\n\n\t_createClass(Observer, [{\n\t\tkey: 'enable',\n\t\tvalue: function enable() {\n\t\t\tthis.isEnabled = true;\n\t\t}\n\n\t\t/**\n   * Disables the observer. This method is called before\n   * {@link module:engine/view/document~Document#render rendering} to prevent firing events during rendering.\n   *\n   * @see module:engine/view/observer/observer~Observer#enable\n   */\n\n\t}, {\n\t\tkey: 'disable',\n\t\tvalue: function disable() {\n\t\t\tthis.isEnabled = false;\n\t\t}\n\n\t\t/**\n   * Disables and destroys the observer, among others removes event listeners created by the observer.\n   */\n\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {\n\t\t\tthis.disable();\n\t\t\tthis.stopListening();\n\t\t}\n\n\t\t/**\n   * Starts observing the given root element.\n   *\n   * @method #observe\n   * @param {HTMLElement} domElement\n   * @param {String} name The name of the root element.\n   */\n\n\t}]);\n\n\treturn Observer;\n}();\n\nexports.default = Observer;\n\n\n(0, _mix2.default)(Observer, _emittermixin2.default);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/view/observer/observer.js\n// module id = 54\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\nn\n/**\n * @module engine/view/treewalker\n */\n\nvar _element = require('./element');\n\nvar _element2 = _interopRequireDefault(_element);\n\nvar _text = require('./text');\n\nvar _text2 = _interopRequireDefault(_text);\n\nvar _textproxy = require('./textproxy');\n\nvar _textproxy2 = _interopRequireDefault(_textproxy);\n\nvar _position = require('./position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Position iterator class. It allows to iterate forward and backward over the document.\n */\nvar TreeWalker = function () {\n\t/**\n  * Creates a range iterator. All parameters are optional, but you have to specify either `boundaries` or `startPosition`.\n  *\n  * @constructor\n  * @param {Object} options Object with configuration.\n  * @param {module:engine/view/range~Range} [options.boundaries=null] Range to define boundaries of the iterator.\n  * @param {module:engine/view/position~Position} [options.startPosition] Starting position.\n  * @param {'forward'|'backward'} [options.direction='forward'] Walking direction.\n  * @param {Boolean} [options.singleCharacters=false] Flag indicating whether all characters from\n  * {@link module:engine/view/text~Text} should be returned as one {@link module:engine/view/text~Text} (`false`) ore one by one as\n  * {@link module:engine/view/textproxy~TextProxy} (`true`).\n  * @param {Boolean} [options.shallow=false] Flag indicating whether iterator should enter elements or not. If the\n  * iterator is shallow child nodes of any iterated node will not be returned along with `elementEnd` tag.\n  * @param {Boolean} [options.ignoreElementEnd=false] Flag indicating whether iterator should ignore `elementEnd`\n  * tags. If the option is true walker will not return a parent node of start position. If this option is `true`\n  * each {@link module:engine/view/element~Element} will be returned once, while if the option is `false` they might be returned\n  * twice: for `'elementStart'` and `'elementEnd'`.\n  */\n\tfunction TreeWalker() {\n\t\tvar options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\t\t_classCallCheck(this, TreeWalker);\n\n\t\tif (!options.boundaries && !options.startPosition) {\n\t\t\t/**\n    * Neither boundaries nor starting position have been defined.\n    *\n    * @error tree-walker-no-start-position\n    */\n\t\t\tthrow new _ckeditorerror2.default('view-tree-walker-no-start-position: Neither boundaries nor starting position have been defined.');\n\t\t}\n\n\t\tif (options.direction && options.direction != 'forward' && options.direction != 'backward') {\n\t\t\tthrow new _ckeditorerror2.default('view-tree-walker-unknown-direction: Only `backward` and `forward` direction allowed.', { direction: options.direction });\n\t\t}\n\n\t\t/**\n   * Iterator boundaries.\n   *\n   * When the iterator is walking `'forward'` on the end of boundary or is walking `'backward'`\n   * on the start of boundary, then `{ done: true }` is returned.\n   *\n   * If boundaries are not defined they are set before first and after last child of the root node.\n   *\n   * @readonly\n   * @member {module:engine/view/range~Range} module:engine/view/treewalker~TreeWalker#boundaries\n   */\n\t\tthis.boundaries = options.boundaries || null;\n\n\t\t/**\n   * Iterator position. If start position is not defined then position depends on {@link #direction}. If direction is\n   * `'forward'` position starts form the beginning, when direction is `'backward'` position starts from the end.\n   *\n   * @readonly\n   * @member {module:engine/view/position~Position} module:engine/view/treewalker~TreeWalker#position\n   */\n\t\tif (options.startPosition) {\n\t\t\tthis.position = _position2.default.createFromPosition(options.startPosition);\n\t\t} else {\n\t\t\tthis.position = _position2.default.createFromPosition(options.boundaries[options.direction == 'backward' ? 'end' : 'start']);\n\t\t}\n\n\t\t/**\n   * Walking direction. Defaults `'forward'`.\n   *\n   * @readonly\n   * @member {'backward'|'forward'} module:engine/view/treewalker~TreeWalker#direction\n   */\n\t\tthis.direction = options.direction || 'forward';\n\n\t\t/**\n   * Flag indicating whether all characters from {@link module:engine/view/text~Text} should be returned as one\n   * {@link module:engine/view/text~Text} or one by one as {@link module:engine/view/textproxy~TextProxy}.\n   *\n   * @readonly\n   * @member {Boolean} module:engine/view/treewalker~TreeWalker#singleCharacters\n   */\n\t\tthis.singleCharacters = !!options.singleCharacters;\n\n\t\t/**\n   * Flag indicating whether iterator should enter elements or not. If the iterator is shallow child nodes of any\n   * iterated node will not be returned along with `elementEnd` tag.\n   *\n   * @readonly\n   * @member {Boolean} module:engine/view/treewalker~TreeWalker#shallow\n   */\n\t\tthis.shallow = !!options.shallow;\n\n\t\t/**\n   * Flag indicating whether iterator should ignore `elementEnd` tags. If set to `true`, walker will not\n   * return a parent node of the start position. Each {@link module:engine/view/element~Element} will be returned once.\n   * When set to `false` each element might be returned twice: for `'elementStart'` and `'elementEnd'`.\n   *\n   * @readonly\n   * @member {Boolean} module:engine/view/treewalker~TreeWalker#ignoreElementEnd\n   */\n\t\tthis.ignoreElementEnd = !!options.ignoreElementEnd;\n\n\t\t/**\n   * Start boundary parent.\n   *\n   * @private\n   * @member {module:engine/view/node~Node} module:engine/view/treewalker~TreeWalker#_boundaryStartParent\n   */\n\t\tthis._boundaryStartParent = this.boundaries ? this.boundaries.start.parent : null;\n\n\t\t/**\n   * End boundary parent.\n   *\n   * @private\n   * @member {module:engine/view/node~Node} module:engine/view/treewalker~TreeWalker#_boundaryEndParent\n   */\n\t\tthis._boundaryEndParent = this.boundaries ? this.boundaries.end.parent : null;\n\t}\n\n\t/**\n  * Iterator interface.\n  */\n\n\n\t_createClass(TreeWalker, [{\n\t\tkey: Symbol.iterator,\n\t\tvalue: function value() {\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Moves {@link #position} in the {@link #direction} skipping values as long as the callback function returns `true`.\n   *\n   * For example:\n   *\n   * \t\twalker.skip( value => value.type == 'text' ); // <p>{}foo</p> -> <p>foo[]</p>\n   * \t\twalker.skip( value => true ); // Move the position to the end: <p>{}foo</p> -> <p>foo</p>[]\n   * \t\twalker.skip( value => false ); // Do not move the position.\n   *\n   * @param {Function} skip Callback function. Gets {@link module:engine/view/treewalker~TreeWalkerValue} and should\n   * return `true` if the value should be skipped or `false` if not.\n   */\n\n\t}, {\n\t\tkey: 'skip',\n\t\tvalue: function skip(_skip) {\n\t\t\tvar done = void 0,\n\t\t\t    value = void 0,\n\t\t\t    prevPosition = void 0;\n\n\t\t\tdo {\n\t\t\t\tprevPosition = this.position;\n\n\t\t\t\tvar _next2 = this.next();\n\n\t\t\t\tdone = _next2.done;\n\t\t\t\tvalue = _next2.value;\n\t\t\t} while (!done && _skip(value));\n\n\t\t\tif (!done) {\n\t\t\t\tthis.position = prevPosition;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Iterator interface method.\n   * Detects walking direction and makes step forward or backward.\n   *\n   * @returns {Object} Object implementing iterator interface, returning information about taken step.\n   */\n\n\t}, {\n\t\tkey: 'next',\n\t\tvalue: function next() {\n\t\t\tif (this.direction == 'forward') {\n\t\t\t\treturn this._next();\n\t\t\t} else {\n\t\t\t\treturn this._previous();\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Makes a step forward in view. Moves the {@link #position} to the next position and returns the encountered value.\n   *\n   * @private\n   * @returns {Object}\n   * @returns {Boolean} return.done `true` if iterator is done, `false` otherwise.\n   * @returns {module:engine/view/treewalker~TreeWalkerValue} return.value Information about taken step.\n   */\n\n\t}, {\n\t\tkey: '_next',\n\t\tvalue: function _next() {\n\t\t\tvar position = _position2.default.createFromPosition(this.position);\n\t\t\tvar previousPosition = this.position;\n\t\t\tvar parent = position.parent;\n\n\t\t\t// We are at the end of the root.\n\t\t\tif (parent.parent === null && position.offset === parent.childCount) {\n\t\t\t\treturn { done: true };\n\t\t\t}\n\n\t\t\t// We reached the walker boundary.\n\t\t\tif (parent === this._boundaryEndParent && position.offset == this.boundaries.end.offset) {\n\t\t\t\treturn { done: true };\n\t\t\t}\n\n\t\t\t// Get node just after current position.\n\t\t\tvar node = void 0;\n\n\t\t\t// Text is a specific parent because it contains string instead of child nodes.\n\t\t\tif (parent instanceof _text2.default) {\n\t\t\t\tif (position.isAtEnd) {\n\t\t\t\t\t// Prevent returning \"elementEnd\" for Text node. Skip that value and return the next walker step.\n\t\t\t\t\tthis.position = _position2.default.createAfter(parent);\n\n\t\t\t\t\treturn this._next();\n\t\t\t\t}\n\n\t\t\t\tnode = parent.data[position.offset];\n\t\t\t} else {\n\t\t\t\tnode = parent.getChild(position.offset);\n\t\t\t}\n\n\t\t\tif (node instanceof _element2.default) {\n\t\t\t\tif (!this.shallow) {\n\t\t\t\t\tposition = new _position2.default(node, 0);\n\t\t\t\t} else {\n\t\t\t\t\tposition.offset++;\n\t\t\t\t}\n\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn this._formatReturnValue('elementStart', node, previousPosition, position, 1);\n\t\t\t} else if (node instanceof _text2.default) {\n\t\t\t\tif (this.singleCharacters) {\n\t\t\t\t\tposition = new _position2.default(node, 0);\n\t\t\t\t\tthis.position = position;\n\n\t\t\t\t\treturn this._next();\n\t\t\t\t} else {\n\t\t\t\t\tvar charactersCount = node.data.length;\n\t\t\t\t\tvar item = node;\n\n\t\t\t\t\t// If text stick out of walker range, we need to cut it and wrap by TextProxy.\n\t\t\t\t\tif (node == this._boundaryEndParent) {\n\t\t\t\t\t\tcharactersCount = this.boundaries.end.offset;\n\t\t\t\t\t\titem = new _textproxy2.default(node, 0, charactersCount);\n\t\t\t\t\t\tposition = _position2.default.createAfter(item);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// If not just keep moving forward.\n\t\t\t\t\t\tposition.offset++;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.position = position;\n\n\t\t\t\t\treturn this._formatReturnValue('text', item, previousPosition, position, charactersCount);\n\t\t\t\t}\n\t\t\t} else if (typeof node == 'string') {\n\t\t\t\tvar textLength = void 0;\n\n\t\t\t\tif (this.singleCharacters) {\n\t\t\t\t\ttextLength = 1;\n\t\t\t\t} else {\n\t\t\t\t\t// Check if text stick out of walker range.\n\t\t\t\t\tvar endOffset = parent === this._boundaryEndParent ? this.boundaries.end.offset : parent.data.length;\n\n\t\t\t\t\ttextLength = endOffset - position.offset;\n\t\t\t\t}\n\n\t\t\t\tvar textProxy = new _textproxy2.default(parent, position.offset, textLength);\n\n\t\t\t\tposition.offset += textLength;\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn this._formatReturnValue('text', textProxy, previousPosition, position, textLength);\n\t\t\t} else {\n\t\t\t\t// `node` is not set, we reached the end of current `parent`.\n\t\t\t\tposition = _position2.default.createAfter(parent);\n\t\t\t\tthis.position = position;\n\n\t\t\t\tif (this.ignoreElementEnd) {\n\t\t\t\t\treturn this._next();\n\t\t\t\t} else {\n\t\t\t\t\treturn this._formatReturnValue('elementEnd', parent, previousPosition, position);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Makes a step backward in view. Moves the {@link #position} to the previous position and returns the encountered value.\n   *\n   * @private\n   * @returns {Object}\n   * @returns {Boolean} return.done True if iterator is done.\n   * @returns {module:engine/view/treewalker~TreeWalkerValue} return.value Information about taken step.\n   */\n\n\t}, {\n\t\tkey: '_previous',\n\t\tvalue: function _previous() {\n\t\t\tvar position = _position2.default.createFromPosition(this.position);\n\t\t\tvar previousPosition = this.position;\n\t\t\tvar parent = position.parent;\n\n\t\t\t// We are at the beginning of the root.\n\t\t\tif (parent.parent === null && position.offset === 0) {\n\t\t\t\treturn { done: true };\n\t\t\t}\n\n\t\t\t// We reached the walker boundary.\n\t\t\tif (parent == this._boundaryStartParent && position.offset == this.boundaries.start.offset) {\n\t\t\t\treturn { done: true };\n\t\t\t}\n\n\t\t\t// Get node just before current position.\n\t\t\tvar node = void 0;\n\n\t\t\t// Text {@link module:engine/view/text~Text} element is a specific parent because contains string instead of child nodes.\n\t\t\tif (parent instanceof _text2.default) {\n\t\t\t\tif (position.isAtStart) {\n\t\t\t\t\t// Prevent returning \"elementStart\" for Text node. Skip that value and return the next walker step.\n\t\t\t\t\tthis.position = _position2.default.createBefore(parent);\n\n\t\t\t\t\treturn this._previous();\n\t\t\t\t}\n\n\t\t\t\tnode = parent.data[position.offset - 1];\n\t\t\t} else {\n\t\t\t\tnode = parent.getChild(position.offset - 1);\n\t\t\t}\n\n\t\t\tif (node instanceof _element2.default) {\n\t\t\t\tif (!this.shallow) {\n\t\t\t\t\tposition = new _position2.default(node, node.childCount);\n\t\t\t\t\tthis.position = position;\n\n\t\t\t\t\tif (this.ignoreElementEnd) {\n\t\t\t\t\t\treturn this._previous();\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn this._formatReturnValue('elementEnd', node, previousPosition, position);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tposition.offset--;\n\t\t\t\t\tthis.position = position;\n\n\t\t\t\t\treturn this._formatReturnValue('elementStart', node, previousPosition, position, 1);\n\t\t\t\t}\n\t\t\t} else if (node instanceof _text2.default) {\n\t\t\t\tif (this.singleCharacters) {\n\t\t\t\t\tposition = new _position2.default(node, node.data.length);\n\t\t\t\t\tthis.position = position;\n\n\t\t\t\t\treturn this._previous();\n\t\t\t\t} else {\n\t\t\t\t\tvar charactersCount = node.data.length;\n\t\t\t\t\tvar item = node;\n\n\t\t\t\t\t// If text stick out of walker range, we need to cut it and wrap by TextProxy.\n\t\t\t\t\tif (node == this._boundaryStartParent) {\n\t\t\t\t\t\tvar offset = this.boundaries.start.offset;\n\n\t\t\t\t\t\titem = new _textproxy2.default(node, offset, node.data.length - offset);\n\t\t\t\t\t\tcharactersCount = item.data.length;\n\t\t\t\t\t\tposition = _position2.default.createBefore(item);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// If not just keep moving backward.\n\t\t\t\t\t\tposition.offset--;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.position = position;\n\n\t\t\t\t\treturn this._formatReturnValue('text', item, previousPosition, position, charactersCount);\n\t\t\t\t}\n\t\t\t} else if (typeof node == 'string') {\n\t\t\t\tvar textLength = void 0;\n\n\t\t\t\tif (!this.singleCharacters) {\n\t\t\t\t\t// Check if text stick out of walker range.\n\t\t\t\t\tvar startOffset = parent === this._boundaryStartParent ? this.boundaries.start.offset : 0;\n\n\t\t\t\t\ttextLength = position.offset - startOffset;\n\t\t\t\t} else {\n\t\t\t\t\ttextLength = 1;\n\t\t\t\t}\n\n\t\t\t\tposition.offset -= textLength;\n\n\t\t\t\tvar textProxy = new _textproxy2.default(parent, position.offset, textLength);\n\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn this._formatReturnValue('text', textProxy, previousPosition, position, textLength);\n\t\t\t} else {\n\t\t\t\t// `node` is not set, we reached the beginning of current `parent`.\n\t\t\t\tposition = _position2.default.createBefore(parent);\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn this._formatReturnValue('elementStart', parent, previousPosition, position, 1);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Format returned data and adjust `previousPosition` and `nextPosition` if reach the bound of the {@link module:engine/view/text~Text}.\n   *\n   * @private\n   * @param {module:engine/view/treewalker~TreeWalkerValueType} type Type of step.\n   * @param {module:engine/view/item~Item} item Item between old and new position.\n   * @param {module:engine/view/position~Position} previousPosition Previous position of iterator.\n   * @param {module:engine/view/position~Position} nextPosition Next position of iterator.\n   * @param {Number} [length] Length of the item.\n   * @returns {module:engine/view/treewalker~TreeWalkerValue}\n   */\n\n\t}, {\n\t\tkey: '_formatReturnValue',\n\t\tvalue: function _formatReturnValue(type, item, previousPosition, nextPosition, length) {\n\t\t\t// Text is a specific parent, because contains string instead of children.\n\t\t\t// Walker doesn't enter to the Text except situations when walker is iterating over every single character,\n\t\t\t// or the bound starts/ends inside the Text. So when the position is at the beginning or at the end of the Text\n\t\t\t// we move it just before or just after Text.\n\t\t\tif (item instanceof _textproxy2.default) {\n\t\t\t\t// Position is at the end of Text.\n\t\t\t\tif (item.offsetInText + item.data.length == item.textNode.data.length) {\n\t\t\t\t\tif (this.direction == 'forward' && !(this.boundaries && this.boundaries.end.isEqual(this.position))) {\n\t\t\t\t\t\tnextPosition = _position2.default.createAfter(item.textNode);\n\t\t\t\t\t\t// When we change nextPosition of returned value we need also update walker current position.\n\t\t\t\t\t\tthis.position = nextPosition;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpreviousPosition = _position2.default.createAfter(item.textNode);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Position is at the begining ot the text.\n\t\t\t\tif (item.offsetInText === 0) {\n\t\t\t\t\tif (this.direction == 'backward' && !(this.boundaries && this.boundaries.start.isEqual(this.position))) {\n\t\t\t\t\t\tnextPosition = _position2.default.createBefore(item.textNode);\n\t\t\t\t\t\t// When we change nextPosition of returned value we need also update walker current position.\n\t\t\t\t\t\tthis.position = nextPosition;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpreviousPosition = _position2.default.createBefore(item.textNode);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdone: false,\n\t\t\t\tvalue: {\n\t\t\t\t\ttype: type,\n\t\t\t\t\titem: item,\n\t\t\t\t\tpreviousPosition: previousPosition,\n\t\t\t\t\tnextPosition: nextPosition,\n\t\t\t\t\tlength: length\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}]);\n\n\treturn TreeWalker;\n}();\n\n/**\n * Type of the step made by {@link module:engine/view/treewalker~TreeWalker}.\n * Possible values: `'elementStart'` if walker is at the beginning of a node, `'elementEnd'` if walker is at the end\n * of node, or `'text'` if walker traversed over single and multiple characters.\n * For {@link module:engine/view/text~Text} `elementStart` and `elementEnd` is not returned.\n *\n * @typedef {String} module:engine/view/treewalker~TreeWalkerValueType\n */\n\n/**\n * Object returned by {@link module:engine/view/treewalker~TreeWalker} when traversing tree view.\n *\n * @typedef {Object} module:engine/view/treewalker~TreeWalkerValue\n * @property {module:engine/view/treewalker~TreeWalkerValueType} type\n * @property {module:engine/view/item~Item} item Item between old and new positions of {@link module:engine/view/treewalker~TreeWalker}.\n * @property {module:engine/view/position~Position} previousPosition Previous position of the iterator.\n * * Forward iteration: For `'elementEnd'` it is the last position inside the element. For all other types it is the\n * position before the item. Note that it is more efficient to use this position then calculate the position before\n * the node using {@link module:engine/view/position~Position.createBefore}.\n * * Backward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after item.\n * * If the position is at the beginning or at the end of the {@link module:engine/view/text~Text} it is always moved from the\n * inside of the Text to its parent just before or just after Text.\n * @property {module:engine/view/position~Position} nextPosition Next position of the iterator.\n * * Forward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after the item.\n * * Backward iteration: For `'elementEnd'` it is last position inside element. For all other types it is the position\n * before the item.\n * * If the position is at the beginning or at the end of the {@link module:engine/view/text~Text} it is always moved from the\n * inside of the Text to its parent just before or just after Text.\n * @property {Number} [length] Length of the item. For `'elementStart'` it is 1. For `'text'` it is\n * the length of the text. For `'elementEnd'` it is undefined.\n */\n\n/**\n * Tree walking directions.\n *\n * @typedef {'forward'|'backward'} module:engine/view/treewalker~TreeWalkerDirection\n */\n\n\nexports.default = TreeWalker;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/view/treewalker.js\n// module id = 55\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = compareArrays;\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/comparearrays\n */\n\n/**\n * Compares how given arrays relate to each other. One array can be: same as another array, prefix of another array\n * or completely different. If arrays are different, first index at which they differ is returned. Otherwise,\n * a flag specifying the relation is returned. Flags are negative numbers, so whenever a number >= 0 is returned\n * it means that arrays differ.\n *\n *\t\tcompareArrays( [ 0, 2 ], [ 0, 2 ] );\t\t// 'same'\n *\t\tcompareArrays( [ 0, 2 ], [ 0, 2, 1 ] );\t\t// 'prefix'\n *\t\tcompareArrays( [ 0, 2 ], [ 0 ] );\t\t\t// 'extension'\n *\t\tcompareArrays( [ 0, 2 ], [ 1, 2 ] );\t\t// 0\n *\t\tcompareArrays( [ 0, 2 ], [ 0, 1 ] );\t\t// 1\n *\n * @param {Array} a Array that is compared.\n * @param {Array} b Array to compare with.\n * @returns {module:utils/comparearrays~ArrayRelation} How array `a` is related to `b`.\n */\nfunction compareArrays(a, b) {\n  var minLen = Math.min(a.length, b.length);\n\n  for (var i = 0; i < minLen; i++) {\n    if (a[i] != b[i]) {\n      // The arrays are different.\n      return i;\n    }\n  }\n\n  // Both arrays were same at all points.\n  if (a.length == b.length) {\n    // If their length is also same, they are the same.\n    return 'same';\n  } else if (a.length < b.length) {\n    // Compared array is shorter so it is a prefix of the other array.\n    return 'prefix';\n  } else {\n    // Compared array is longer so it is an extension of the other array.\n    return 'extension';\n  }\n}\n\n/**\n * @typedef {'extension'|'same'|'prefix'} module:utils/comparearrays~ArrayRelation\n */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/comparearrays.js\n// module id = 56\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isNative = require('./isNative');\n\nvar _isNative2 = _interopRequireDefault(_isNative);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object[key];\n  return (0, _isNative2.default)(value) ? value : undefined;\n}\n\nexports.default = getNative;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_getNative.js\n// module id = 57\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _isArray = require('./isArray');\n\nvar _isArray2 = _interopRequireDefault(_isArray);\n\nvar _isSymbol = require('./isSymbol');\n\nvar _isSymbol2 = _interopRequireDefault(_isSymbol);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if ((0, _isArray2.default)(value)) {\n    return false;\n  }\n  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || (0, _isSymbol2.default)(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nexports.default = isKey;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_isKey.js\n// module id = 58\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isSymbol = require('./isSymbol');\n\nvar _isSymbol2 = _interopRequireDefault(_isSymbol);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || (0, _isSymbol2.default)(value)) {\n    return value;\n  }\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nexports.default = toKey;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_toKey.js\n// module id = 59\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'user': 'fred' };\n * var other = { 'user': 'fred' };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nexports.default = eq;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/eq.js\n// module id = 60\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\nn\n/**\n * @module engine/model/node\n */\n\nvar _tomap = require('@ckeditor/ckeditor5-utils/src/tomap');\n\nvar _tomap2 = _interopRequireDefault(_tomap);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Model node. Most basic structure of model tree.\n *\n * This is an abstract class that is a base for other classes representing different nodes in model.\n *\n * **Note:** If a node is detached from the model tree, you can manipulate it using it's API.\n * However, it is **very important** that nodes already attached to model tree should be only changed through\n * {@link module:engine/model/document~Document#batch Batch API}.\n *\n * Changes done by `Node` methods, like {@link module:engine/model/element~Element#insertChildren insertChildren} or\n * {@link module:engine/model/node~Node#setAttribute setAttribute}\n * do not generate {@link module:engine/model/operation/operation~Operation operations}\n * which are essential for correct editor work if you modify nodes in {@link module:engine/model/document~Document document} root.\n *\n * The flow of working on `Node` (and classes that inherits from it) is as such:\n * 1. You can create a `Node` instance, modify it using it's API.\n * 2. Add `Node` to the model using `Batch` API.\n * 3. Change `Node` that was already added to the model using `Batch` API.\n *\n * Similarly, you cannot use `Batch` API on a node that has not been added to the model tree, with the exception\n * of {@link module:engine/model/batch~Batch#insert inserting} that node to the model tree.\n *\n * Be aware that using {@link module:engine/model/batch~Batch#remove remove from Batch API} does not allow to use `Node` API because\n * the information about `Node` is still kept in model document.\n *\n * In case of {@link module:engine/model/element~Element element node}, adding and removing children also counts as changing a node and\n * follows same rules.\n */\nvar Node = function () {\n\t/**\n  * Creates a model node.\n  *\n  * This is an abstract class, so this constructor should not be used directly.\n  *\n  * @abstract\n  * @param {Object} [attrs] Node's attributes. See {@link module:utils/tomap~toMap} for a list of accepted values.\n  */\n\tfunction Node(attrs) {\n\t\t_classCallCheck(this, Node);\n\n\t\t/**\n   * Parent of this node. It could be {@link module:engine/model/element~Element}\n   * or {@link module:engine/model/documentfragment~DocumentFragment}.\n   * Equals to `null` if the node has no parent.\n   *\n   * @readonly\n   * @member {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n   */\n\t\tthis.parent = null;\n\n\t\t/**\n   * Attributes set on this node.\n   *\n   * @private\n   * @member {Map} module:engine/model/node~Node#_attrs\n   */\n\t\tthis._attrs = (0, _tomap2.default)(attrs);\n\t}\n\n\t/**\n  * Index of this node in it's parent or `null` if the node has no parent.\n  *\n  * Accessing this property throws an error if this node's parent element does not contain it.\n  * This means that model tree got broken.\n  *\n  * @readonly\n  * @type {Number|null}\n  */\n\n\n\t_createClass(Node, [{\n\t\tkey: 'clone',\n\n\n\t\t/**\n   * Creates a copy of this node, that is a node with exactly same attributes, and returns it.\n   *\n   * @returns {module:engine/model/node~Node} Node with same attributes as this node.\n   */\n\t\tvalue: function clone() {\n\t\t\treturn new Node(this._attrs);\n\t\t}\n\n\t\t/**\n   * Gets path to the node. The path is an array containing starting offsets of consecutive ancestors of this node,\n   * beginning from {@link module:engine/model/node~Node#root root}, down to this node's starting offset. The path can be used to\n   * create {@link module:engine/model/position~Position Position} instance.\n   *\n   *\t\tconst abc = new Text( 'abc' );\n   *\t\tconst foo = new Text( 'foo' );\n   *\t\tconst h1 = new Element( 'h1', null, new Text( 'header' ) );\n   *\t\tconst p = new Element( 'p', null, [ abc, foo ] );\n   *\t\tconst div = new Element( 'div', null, [ h1, p ] );\n   *\t\tfoo.getPath(); // Returns [ 1, 3 ]. `foo` is in `p` which is in `div`. `p` starts at offset 1, while `foo` at 3.\n   *\t\th1.getPath(); // Returns [ 0 ].\n   *\t\tdiv.getPath(); // Returns [].\n   *\n   * @returns {Array.<Number>} The path.\n   */\n\n\t}, {\n\t\tkey: 'getPath',\n\t\tvalue: function getPath() {\n\t\t\tvar path = [];\n\t\t\tvar node = this; // eslint-disable-line consistent-this\n\n\t\t\twhile (node.parent) {\n\t\t\t\tpath.unshift(node.startOffset);\n\t\t\t\tnode = node.parent;\n\t\t\t}\n\n\t\t\treturn path;\n\t\t}\n\n\t\t/**\n   * Returns ancestors array of this node.\n   *\n   * @param {Object} options Options object.\n   * @param {Boolean} [options.includeSelf=false] When set to `true` this node will be also included in parent's array.\n   * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from node's parent to root element,\n   * otherwise root element will be the first item in the array.\n   * @returns {Array} Array with ancestors.\n   */\n\n\t}, {\n\t\tkey: 'getAncestors',\n\t\tvalue: function getAncestors() {\n\t\t\tvar options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { includeSelf: false, parentFirst: false };\n\n\t\t\tvar ancestors = [];\n\t\t\tvar parent = options.includeSelf ? this : this.parent;\n\n\t\t\twhile (parent) {\n\t\t\t\tancestors[options.parentFirst ? 'push' : 'unshift'](parent);\n\t\t\t\tparent = parent.parent;\n\t\t\t}\n\n\t\t\treturn ancestors;\n\t\t}\n\n\t\t/**\n   * Returns a {@link module:engine/model/element~Element} or {@link module:engine/model/documentfragment~DocumentFragment}\n   * which is a common ancestor of both nodes.\n   *\n   * @param {module:engine/model/node~Node} node The second node.\n   * @param {Object} options Options object.\n   * @param {Boolean} [options.includeSelf=false] When set to `true` both nodes will be considered \"ancestors\" too.\n   * Which means that if e.g. node A is inside B, then their common ancestor will be B.\n   * @returns {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n   */\n\n\t}, {\n\t\tkey: 'getCommonAncestor',\n\t\tvalue: function getCommonAncestor(node) {\n\t\t\tvar options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\t\tvar ancestorsA = this.getAncestors(options);\n\t\t\tvar ancestorsB = node.getAncestors(options);\n\n\t\t\tvar i = 0;\n\n\t\t\twhile (ancestorsA[i] == ancestorsB[i] && ancestorsA[i]) {\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\treturn i === 0 ? null : ancestorsA[i - 1];\n\t\t}\n\n\t\t/**\n   * Removes this node from it's parent.\n   */\n\n\t}, {\n\t\tkey: 'remove',\n\t\tvalue: function remove() {\n\t\t\tthis.parent.removeChildren(this.index);\n\t\t}\n\n\t\t/**\n   * Checks if the node has an attribute with given key.\n   *\n   * @param {String} key Key of attribute to check.\n   * @returns {Boolean} `true` if attribute with given key is set on node, `false` otherwise.\n   */\n\n\t}, {\n\t\tkey: 'hasAttribute',\n\t\tvalue: function hasAttribute(key) {\n\t\t\treturn this._attrs.has(key);\n\t\t}\n\n\t\t/**\n   * Gets an attribute value for given key or `undefined` if that attribute is not set on node.\n   *\n   * @param {String} key Key of attribute to look for.\n   * @returns {*} Attribute value or `undefined`.\n   */\n\n\t}, {\n\t\tkey: 'getAttribute',\n\t\tvalue: function getAttribute(key) {\n\t\t\treturn this._attrs.get(key);\n\t\t}\n\n\t\t/**\n   * Returns iterator that iterates over this node's attributes.\n   *\n   * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\n   * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n   *\n   * @returns {Iterable.<*>}\n   */\n\n\t}, {\n\t\tkey: 'getAttributes',\n\t\tvalue: function getAttributes() {\n\t\t\treturn this._attrs.entries();\n\t\t}\n\n\t\t/**\n   * Returns iterator that iterates over this node's attribute keys.\n   *\n   * @returns {Iterator.<String>}\n   */\n\n\t}, {\n\t\tkey: 'getAttributeKeys',\n\t\tvalue: function getAttributeKeys() {\n\t\t\treturn this._attrs.keys();\n\t\t}\n\n\t\t/**\n   * Sets attribute on the node. If attribute with the same key already is set, it's value is overwritten.\n   *\n   * @param {String} key Key of attribute to set.\n   * @param {*} value Attribute value.\n   */\n\n\t}, {\n\t\tkey: 'setAttribute',\n\t\tvalue: function setAttribute(key, value) {\n\t\t\tthis._attrs.set(key, value);\n\t\t}\n\n\t\t/**\n   * Removes all attributes from the node and sets given attributes.\n   *\n   * @param {Object} [attrs] Attributes to set. See {@link module:utils/tomap~toMap} for a list of accepted values.\n   */\n\n\t}, {\n\t\tkey: 'setAttributesTo',\n\t\tvalue: function setAttributesTo(attrs) {\n\t\t\tthis._attrs = (0, _tomap2.default)(attrs);\n\t\t}\n\n\t\t/**\n   * Removes an attribute with given key from the node.\n   *\n   * @param {String} key Key of attribute to remove.\n   * @returns {Boolean} `true` if the attribute was set on the element, `false` otherwise.\n   */\n\n\t}, {\n\t\tkey: 'removeAttribute',\n\t\tvalue: function removeAttribute(key) {\n\t\t\treturn this._attrs.delete(key);\n\t\t}\n\n\t\t/**\n   * Removes all attributes from the node.\n   */\n\n\t}, {\n\t\tkey: 'clearAttributes',\n\t\tvalue: function clearAttributes() {\n\t\t\tthis._attrs.clear();\n\t\t}\n\n\t\t/**\n   * Converts `Node` to plain object and returns it.\n   *\n   * @returns {Object} `Node` converted to plain object.\n   */\n\n\t}, {\n\t\tkey: 'toJSON',\n\t\tvalue: function toJSON() {\n\t\t\tvar json = {};\n\n\t\t\tif (this._attrs.size) {\n\t\t\t\tjson.attributes = [].concat(_toConsumableArray(this._attrs));\n\t\t\t}\n\n\t\t\treturn json;\n\t\t}\n\n\t\t/**\n   * Checks whether given model tree object is of given type.\n   *\n   * This method is useful when processing model tree objects that are of unknown type. For example, a function\n   * may return {@link module:engine/model/documentfragment~DocumentFragment} or {@link module:engine/model/node~Node}\n   * that can be either text node or element. This method can be used to check what kind of object is returned.\n   *\n   *\t\tobj.is( 'node' ); // true for any node, false for document fragment\n   *\t\tobj.is( 'documentFragment' ); // true for document fragment, false for any node\n   *\t\tobj.is( 'element' ); // true for any element, false for text node or document fragment\n   *\t\tobj.is( 'element', 'paragraph' ); // true only for element which name is 'paragraph'\n   *\t\tobj.is( 'paragraph' ); // shortcut for obj.is( 'element', 'paragraph' )\n   *\t\tobj.is( 'text' ); // true for text node, false for element and document fragment\n   *\t\tobj.is( 'textProxy' ); // true for text proxy object\n   *\n   * @method #is\n   * @param {'element'|'rootElement'|'text'|'textProxy'|'documentFragment'} type\n   * @returns {Boolean}\n   */\n\n\t}, {\n\t\tkey: 'index',\n\t\tget: function get() {\n\t\t\tvar pos = void 0;\n\n\t\t\tif (!this.parent) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ((pos = this.parent.getChildIndex(this)) === null) {\n\t\t\t\t/**\n     * The node's parent does not contain this node.\n     *\n     * @error node-not-found-in-parent\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('model-node-not-found-in-parent: The node\\'s parent does not contain this node.');\n\t\t\t}\n\n\t\t\treturn pos;\n\t\t}\n\n\t\t/**\n   * Offset at which this node starts in it's parent. It is equal to the sum of {@link #offsetSize offsetSize}\n   * of all it's previous siblings. Equals to `null` if node has no parent.\n   *\n   * Accessing this property throws an error if this node's parent element does not contain it.\n   * This means that model tree got broken.\n   *\n   * @readonly\n   * @type {Number|Null}\n   */\n\n\t}, {\n\t\tkey: 'startOffset',\n\t\tget: function get() {\n\t\t\tvar pos = void 0;\n\n\t\t\tif (!this.parent) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ((pos = this.parent.getChildStartOffset(this)) === null) {\n\t\t\t\t/**\n     * The node's parent does not contain this node.\n     *\n     * @error node-not-found-in-parent\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('model-node-not-found-in-parent: The node\\'s parent does not contain this node.');\n\t\t\t}\n\n\t\t\treturn pos;\n\t\t}\n\n\t\t/**\n   * Offset size of this node. Represents how much \"offset space\" is occupied by the node in it's parent.\n   * It is important for {@link module:engine/model/position~Position position}. When node has `offsetSize` greater than `1`, position\n   * can be placed between that node start and end. `offsetSize` greater than `1` is for nodes that represents more\n   * than one entity, i.e. {@link module:engine/model/text~Text text node}.\n   *\n   * @readonly\n   * @type {Number}\n   */\n\n\t}, {\n\t\tkey: 'offsetSize',\n\t\tget: function get() {\n\t\t\treturn 1;\n\t\t}\n\n\t\t/**\n   * Offset at which this node ends in it's parent. It is equal to the sum of this node's\n   * {@link module:engine/model/node~Node#startOffset start offset} and {@link #offsetSize offset size}.\n   * Equals to `null` if the node has no parent.\n   *\n   * @readonly\n   * @type {Number|null}\n   */\n\n\t}, {\n\t\tkey: 'endOffset',\n\t\tget: function get() {\n\t\t\tif (!this.parent) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn this.startOffset + this.offsetSize;\n\t\t}\n\n\t\t/**\n   * Node's next sibling or `null` if the node is a last child of it's parent or if the node has no parent.\n   *\n   * @readonly\n   * @type {module:engine/model/node~Node|null}\n   */\n\n\t}, {\n\t\tkey: 'nextSibling',\n\t\tget: function get() {\n\t\t\tvar index = this.index;\n\n\t\t\treturn index !== null && this.parent.getChild(index + 1) || null;\n\t\t}\n\n\t\t/**\n   * Node's previous sibling or `null` if the node is a first child of it's parent or if the node has no parent.\n   *\n   * @readonly\n   * @type {module:engine/model/node~Node|null}\n   */\n\n\t}, {\n\t\tkey: 'previousSibling',\n\t\tget: function get() {\n\t\t\tvar index = this.index;\n\n\t\t\treturn index !== null && this.parent.getChild(index - 1) || null;\n\t\t}\n\n\t\t/**\n   * The top-most ancestor of the node. If node has no parent it is the root itself. If the node is a part\n   * of {@link module:engine/model/documentfragment~DocumentFragment}, it's `root` is equal to that `DocumentFragment`.\n   *\n   * @readonly\n   * @type {module:engine/model/node~Node|module:engine/model/documentfragment~DocumentFragment}\n   */\n\n\t}, {\n\t\tkey: 'root',\n\t\tget: function get() {\n\t\t\tvar root = this; // eslint-disable-line consistent-this\n\n\t\t\twhile (root.parent) {\n\t\t\t\troot = root.parent;\n\t\t\t}\n\n\t\t\treturn root;\n\t\t}\n\n\t\t/**\n   * {@link module:engine/model/document~Document Document} that owns this node or `null` if the node has no parent or is inside\n   * a {@link module:engine/model/documentfragment~DocumentFragment DocumentFragment}.\n   *\n   * @readonly\n   * @type {module:engine/model/document~Document|null}\n   */\n\n\t}, {\n\t\tkey: 'document',\n\t\tget: function get() {\n\t\t\t// This is a top element of a sub-tree.\n\t\t\tif (this.root == this) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Root may be `DocumentFragment` which does not have document property.\n\t\t\treturn this.root.document || null;\n\t\t}\n\t}]);\n\n\treturn Node;\n}();\n\nexports.default = Node;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/node.js\n// module id = 61\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _operation = require('./operation');\n\nvar _operation2 = _interopRequireDefault(_operation);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/model/operation/nooperation\n */\n\n/**\n * Operation which is doing nothing (\"empty operation\", \"do-nothing operation\", \"noop\"). This is an operation,\n * which when executed does not change the tree model. It still has some parameters defined for transformation purposes.\n *\n * In most cases this operation is a result of transforming operations. When transformation returns\n * {@link module:engine/model/operation/nooperation~NoOperation} it means that changes done by the transformed operation\n * have already been applied.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nvar NoOperation = function (_Operation) {\n\t_inherits(NoOperation, _Operation);\n\n\tfunction NoOperation() {\n\t\t_classCallCheck(this, NoOperation);\n\n\t\treturn _possibleConstructorReturn(this, (NoOperation.__proto__ || Object.getPrototypeOf(NoOperation)).apply(this, arguments));\n\t}\n\n\t_createClass(NoOperation, [{\n\t\tkey: 'clone',\n\n\t\t/**\n   * Creates and returns an operation that has the same parameters as this operation.\n   *\n   * @returns {module:engine/model/operation/nooperation~NoOperation} Clone of this operation.\n   */\n\t\tvalue: function clone() {\n\t\t\treturn new NoOperation(this.baseVersion);\n\t\t}\n\n\t\t/**\n   * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n   *\n   * @returns {module:engine/model/operation/nooperation~NoOperation}\n   */\n\n\t}, {\n\t\tkey: 'getReversed',\n\t\tvalue: function getReversed() {\n\t\t\treturn new NoOperation(this.baseVersion + 1);\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: '_execute',\n\t\tvalue: function _execute() {}\n\t\t// Do nothing.\n\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}], [{\n\t\tkey: 'className',\n\t\tget: function get() {\n\t\t\treturn 'engine.model.operation.NoOperation';\n\t\t}\n\t}]);\n\n\treturn NoOperation;\n}(_operation2.default);\n\nexports.default = NoOperation;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/operation/nooperation.js\n// module id = 62\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */\n\n/**\n * @module engine/model/textproxy\n */\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * `TextProxy` represents a part of {@link module:engine/model/text~Text text node}.\n *\n * Since {@link module:engine/model/position~Position positions} can be placed between characters of a text node,\n * {@link module:engine/model/range~Range ranges} may contain only parts of text nodes. When {@link module:engine/model/range~Range#getItems\n * getting items}\n * contained in such range, we need to represent a part of that text node, since returning the whole text node would be incorrect.\n * `TextProxy` solves this issue.\n *\n * `TextProxy` has an API similar to {@link module:engine/model/text~Text Text} and allows to do most of the common tasks performed\n * on model nodes.\n *\n * **Note:** Some `TextProxy` instances may represent whole text node, not just a part of it.\n * See {@link module:engine/model/textproxy~TextProxy#isPartial}.\n *\n * **Note:** `TextProxy` is not an instance of {@link module:engine/model/node~Node node}. Keep this in mind when using it as a\n * parameter of methods.\n *\n * **Note:** `TextProxy` is a readonly interface. If you want to perform changes on model data represented by a `TextProxy`\n * use {@link module:engine/model/writer~writer model writer API}.\n *\n * **Note:** `TextProxy` instances are created on the fly, basing on the current state of model. Because of this, it is\n * highly unrecommended to store references to `TextProxy` instances. `TextProxy` instances are not refreshed when\n * model changes, so they might get invalidated. Instead, consider creating {@link module:engine/model/liveposition~LivePosition live\n * position}.\n *\n * `TextProxy` instances are created by {@link module:engine/model/treewalker~TreeWalker model tree walker}. You should not need to create\n * an instance of this class by your own.\n */\nvar TextProxy = function () {\n\t/**\n  * Creates a text proxy.\n  *\n  * @protected\n  * @param {module:engine/model/text~Text} textNode Text node which part is represented by this text proxy.\n  * @param {Number} offsetInText Offset in {@link module:engine/model/textproxy~TextProxy#textNode text node} from which the text proxy\n  * starts.\n  * @param {Number} length Text proxy length, that is how many text node's characters, starting from `offsetInText` it represents.\n  * @constructor\n  */\n\tfunction TextProxy(textNode, offsetInText, length) {\n\t\t_classCallCheck(this, TextProxy);\n\n\t\t/**\n   * Text node which part is represented by this text proxy.\n   *\n   * @readonly\n   * @member {module:engine/model/text~Text}\n   */\n\t\tthis.textNode = textNode;\n\n\t\tif (offsetInText < 0 || offsetInText > textNode.offsetSize) {\n\t\t\t/**\n    * Given offsetInText value is incorrect.\n    *\n    * @error model-textproxy-wrong-offsetintext\n    */\n\t\t\tthrow new _ckeditorerror2.default('model-textproxy-wrong-offsetintext: Given offsetInText value is incorrect.');\n\t\t}\n\n\t\tif (length < 0 || offsetInText + length > textNode.offsetSize) {\n\t\t\t/**\n    * Given length value is incorrect.\n    *\n    * @error model-textproxy-wrong-length\n    */\n\t\t\tthrow new _ckeditorerror2.default('model-textproxy-wrong-length: Given length value is incorrect.');\n\t\t}\n\n\t\t/**\n   * Text data represented by this text proxy.\n   *\n   * @readonly\n   * @member {String}\n   */\n\t\tthis.data = textNode.data.substring(offsetInText, offsetInText + length);\n\n\t\t/**\n   * Offset in {@link module:engine/model/textproxy~TextProxy#textNode text node} from which the text proxy starts.\n   *\n   * @readonly\n   * @member {Number}\n   */\n\t\tthis.offsetInText = offsetInText;\n\t}\n\n\t/**\n  * Offset at which this text proxy starts in it's parent.\n  *\n  * @see module:engine/model/node~Node#startOffset\n  * @readonly\n  * @type {Number}\n  */\n\n\n\t_createClass(TextProxy, [{\n\t\tkey: 'is',\n\n\n\t\t/**\n   * Checks whether given model tree object is of given type.\n   *\n   * Read more in {@link module:engine/model/node~Node#is}.\n   *\n   * @param {String} type\n   * @returns {Boolean}\n   */\n\t\tvalue: function is(type) {\n\t\t\treturn type == 'textProxy';\n\t\t}\n\n\t\t/**\n   * Gets path to this text proxy.\n   *\n   * @see module:engine/model/node~Node#getPath\n   * @returns {Array.<Number>}\n   */\n\n\t}, {\n\t\tkey: 'getPath',\n\t\tvalue: function getPath() {\n\t\t\tvar path = this.textNode.getPath();\n\n\t\t\tif (path.length > 0) {\n\t\t\t\tpath[path.length - 1] += this.offsetInText;\n\t\t\t}\n\n\t\t\treturn path;\n\t\t}\n\n\t\t/**\n   * Returns ancestors array of this text proxy.\n   *\n   * @param {Object} options Options object.\n   * @param {Boolean} [options.includeSelf=false] When set to `true` this text proxy will be also included in parent's array.\n   * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from text proxy parent to root element,\n   * otherwise root element will be the first item in the array.\n   * @returns {Array} Array with ancestors.\n   */\n\n\t}, {\n\t\tkey: 'getAncestors',\n\t\tvalue: function getAncestors() {\n\t\t\tvar options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { includeSelf: false, parentFirst: false };\n\n\t\t\tvar ancestors = [];\n\t\t\tvar parent = options.includeSelf ? this : this.parent;\n\n\t\t\twhile (parent) {\n\t\t\t\tancestors[options.parentFirst ? 'push' : 'unshift'](parent);\n\t\t\t\tparent = parent.parent;\n\t\t\t}\n\n\t\t\treturn ancestors;\n\t\t}\n\n\t\t/**\n   * Checks if this text proxy has an attribute for given key.\n   *\n   * @param {String} key Key of attribute to check.\n   * @returns {Boolean} `true` if attribute with given key is set on text proxy, `false` otherwise.\n   */\n\n\t}, {\n\t\tkey: 'hasAttribute',\n\t\tvalue: function hasAttribute(key) {\n\t\t\treturn this.textNode.hasAttribute(key);\n\t\t}\n\n\t\t/**\n   * Gets an attribute value for given key or `undefined` if that attribute is not set on text proxy.\n   *\n   * @param {String} key Key of attribute to look for.\n   * @returns {*} Attribute value or `undefined`.\n   */\n\n\t}, {\n\t\tkey: 'getAttribute',\n\t\tvalue: function getAttribute(key) {\n\t\t\treturn this.textNode.getAttribute(key);\n\t\t}\n\n\t\t/**\n   * Returns iterator that iterates over this node's attributes. Attributes are returned as arrays containing two\n   * items. First one is attribute key and second is attribute value.\n   *\n   * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n   *\n   * @returns {Iterable.<*>}\n   */\n\n\t}, {\n\t\tkey: 'getAttributes',\n\t\tvalue: function getAttributes() {\n\t\t\treturn this.textNode.getAttributes();\n\t\t}\n\n\t\t/**\n   * Returns iterator that iterates over this node's attribute keys.\n   *\n   * @returns {Iterator.<String>}\n   */\n\n\t}, {\n\t\tkey: 'getAttributeKeys',\n\t\tvalue: function getAttributeKeys() {\n\t\t\treturn this.textNode.getAttributeKeys();\n\t\t}\n\t}, {\n\t\tkey: 'startOffset',\n\t\tget: function get() {\n\t\t\treturn this.textNode.startOffset !== null ? this.textNode.startOffset + this.offsetInText : null;\n\t\t}\n\n\t\t/**\n   * Offset size of this text proxy. Equal to the number of characters represented by the text proxy.\n   *\n   * @see module:engine/model/node~Node#offsetSize\n   * @readonly\n   * @type {Number}\n   */\n\n\t}, {\n\t\tkey: 'offsetSize',\n\t\tget: function get() {\n\t\t\treturn this.data.length;\n\t\t}\n\n\t\t/**\n   * Offset at which this text proxy ends in it's parent.\n   *\n   * @see module:engine/model/node~Node#endOffset\n   * @readonly\n   * @type {Number}\n   */\n\n\t}, {\n\t\tkey: 'endOffset',\n\t\tget: function get() {\n\t\t\treturn this.startOffset !== null ? this.startOffset + this.offsetSize : null;\n\t\t}\n\n\t\t/**\n   * Flag indicating whether `TextProxy` instance covers only part of the original {@link module:engine/model/text~Text text node}\n   * (`true`) or the whole text node (`false`).\n   *\n   * This is `false` when text proxy starts at the very beginning of {@link module:engine/model/textproxy~TextProxy#textNode textNode}\n   * ({@link module:engine/model/textproxy~TextProxy#offsetInText offsetInText} equals `0`) and text proxy sizes is equal to\n   * text node size.\n   *\n   * @readonly\n   * @type {Boolean}\n   */\n\n\t}, {\n\t\tkey: 'isPartial',\n\t\tget: function get() {\n\t\t\treturn this.offsetSize !== this.textNode.offsetSize;\n\t\t}\n\n\t\t/**\n   * Parent of this text proxy, which is same as parent of text node represented by this text proxy.\n   *\n   * @readonly\n   * @type {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n   */\n\n\t}, {\n\t\tkey: 'parent',\n\t\tget: function get() {\n\t\t\treturn this.textNode.parent;\n\t\t}\n\n\t\t/**\n   * Root of this text proxy, which is same as root of text node represented by this text proxy.\n   *\n   * @readonly\n   * @type {module:engine/model/node~Node|module:engine/model/documentfragment~DocumentFragment}\n   */\n\n\t}, {\n\t\tkey: 'root',\n\t\tget: function get() {\n\t\t\treturn this.textNode.root;\n\t\t}\n\n\t\t/**\n   * {@link module:engine/model/document~Document Document} that owns text node represented by this text proxy or `null` if the text node\n   * has no parent or is inside a {@link module:engine/model/documentfragment~DocumentFragment DocumentFragment}.\n   *\n   * @readonly\n   * @type {module:engine/model/document~Document|null}\n   */\n\n\t}, {\n\t\tkey: 'document',\n\t\tget: function get() {\n\t\t\treturn this.textNode.document;\n\t\t}\n\t}]);\n\n\treturn TextProxy;\n}();\n\nexports.default = TextProxy;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/textproxy.js\n// module id = 63\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.INLINE_FILLER = exports.INLINE_FILLER_LENGTH = exports.NBSP_FILLER = exports.BR_FILLER = undefined;\nexports.startsWithFiller = startsWithFiller;\nexports.isInlineFiller = isInlineFiller;\nexports.getDataWithoutFiller = getDataWithoutFiller;\nexports.isBlockFiller = isBlockFiller;\nexports.injectQuirksHandling = injectQuirksHandling;\n\nvar _keyboard = require('@ckeditor/ckeditor5-utils/src/keyboard');\n\n/**\n * Set of utils related to block and inline fillers handling.\n *\n * Browsers do not allow to put caret in elements which does not have height. Because of it, we need to fill all\n * empty elements which should be selectable with elements or characters called \"fillers\". Unfortunately there is no one\n * universal filler, this is why two types are uses:\n *\n * * Block filler is an element which fill block elements, like `<p>`. CKEditor uses `<br>` as a block filler during the editing,\n * as browsers do natively. So instead of an empty `<p>` there will be `<p><br></p>`. The advantage of block filler is that\n * it is transparent for the selection, so when the caret is before the `<br>` and user presses right arrow he will be\n * moved to the next paragraph, not after the `<br>`. The disadvantage is that it breaks a block, so it can not be used\n * in the middle of a line of text. The {@link module:engine/view/filler~BR_FILLER `<br>` filler} can be replaced with any other\n * character in the data output, for instance {@link module:engine/view/filler~NBSP_FILLER non-breaking space}.\n *\n * * Inline filler is a filler which does not break a line of text, so it can be used inside the text, for instance in the empty\n * `<b>` surrendered by text: `foo<b></b>bar`, if we want to put the caret there. CKEditor uses a sequence of the zero-width\n * spaces as an {@link module:engine/view/filler~INLINE_FILLER inline filler} having the predetermined\n * {@link module:engine/view/filler~INLINE_FILLER_LENGTH length}. A sequence is used, instead of a single character to\n * avoid treating random zero-width spaces as the inline filler. Disadvantage of the inline filler is that it is not\n * transparent for the selection. The arrow key moves the caret between zero-width spaces characters, so the additional\n * code is needed to handle the caret.\n *\n * Both inline and block fillers are handled by the {@link module:engine/view/renderer~Renderer renderer} and are not present in the\n * view.\n *\n * @module engine/view/filler\n */\n\n/**\n * `<br> filler creator. This is a function which creates `<br data-cke-filler=\"true\">` element.\n * It defines how the filler is created.\n *\n * @see module:engine/view/filler~NBSP_FILLER\n * @function\n */\nvar BR_FILLER = exports.BR_FILLER = function BR_FILLER(domDocument) {\n  var fillerBr = domDocument.createElement('br');\n  fillerBr.dataset.ckeFiller = true;\n\n  return fillerBr;\n};\n\n/**\n * Non-breaking space filler creator. This is a function which creates `&nbsp;` text node.\n * It defines how the filler is created.\n *\n * @see module:engine/view/filler~BR_FILLER\n * @function\n */\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* globals window, Text */\n\nvar NBSP_FILLER = exports.NBSP_FILLER = function NBSP_FILLER(domDocument) {\n  return domDocument.createTextNode('\\xA0');\n};\n\n/**\n * Length of the {@link module:engine/view/filler~INLINE_FILLER INLINE_FILLER}.\n */\nvar INLINE_FILLER_LENGTH = exports.INLINE_FILLER_LENGTH = 7;\n\n/**\n * Inline filler which is sequence of the zero width spaces.\n */\nvar INLINE_FILLER = exports.INLINE_FILLER = '';\n\nfor (var i = 0; i < INLINE_FILLER_LENGTH; i++) {\n  exports.INLINE_FILLER = INLINE_FILLER += '\\u200B';\n}\n\n/**\n * Checks if the node is a text node which starts with the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n *\n *\t\tstartsWithFiller( document.createTextNode( INLINE_FILLER ) ); // true\n *\t\tstartsWithFiller( document.createTextNode( INLINE_FILLER + 'foo' ) ); // true\n *\t\tstartsWithFiller( document.createTextNode( 'foo' ) ); // false\n *\t\tstartsWithFiller( document.createElement( 'p' ) ); // false\n *\n * @param {Node} domNode DOM node.\n * @returns {Boolean} True if the text node starts with the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n */\nfunction startsWithFiller(domNode) {\n  return domNode instanceof Text && domNode.data.substr(0, INLINE_FILLER_LENGTH) === INLINE_FILLER;\n}\n\n/**\n * Checks if the text node contains only the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n *\n *\t\tisInlineFiller( document.createTextNode( INLINE_FILLER ) ); // true\n *\t\tisInlineFiller( document.createTextNode( INLINE_FILLER + 'foo' ) ); // false\n *\n * @param {Text} domText DOM text node.\n * @returns {Boolean} True if the text node contains only the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n */\nfunction isInlineFiller(domText) {\n  return domText.data.length == INLINE_FILLER_LENGTH && startsWithFiller(domText);\n}\n\n/**\n * Get string data from the text node, removing an {@link module:engine/view/filler~INLINE_FILLER inline filler} from it,\n * if text node contains it.\n *\n *\t\tgetDataWithoutFiller( document.createTextNode( INLINE_FILLER + 'foo' ) ) == 'foo' // true\n *\t\tgetDataWithoutFiller( document.createTextNode( 'foo' ) ) == 'foo' // true\n *\n * @param {Text} domText DOM text node, possible with inline filler.\n * @returns {String} Data without filler.\n */\nfunction getDataWithoutFiller(domText) {\n  if (startsWithFiller(domText)) {\n    return domText.data.slice(INLINE_FILLER_LENGTH);\n  } else {\n    return domText.data;\n  }\n}\n\n// Cache block fillers templates to improve performance.\nvar templateBlockFillers = new WeakMap();\n\n/**\n * Checks if the node is an instance of the block filler of the given type.\n *\n *\t\tconst brFillerInstance = BR_FILLER( document );\n *\t\tisBlockFiller( brFillerInstance, BR_FILLER ); // true\n *\n * @param {Node} domNode DOM node to check.\n * @param {Function} blockFiller Block filler creator.\n * @returns {Boolean} True if text node contains only {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n */\nfunction isBlockFiller(domNode, blockFiller) {\n  var templateBlockFiller = templateBlockFillers.get(blockFiller);\n\n  if (!templateBlockFiller) {\n    templateBlockFiller = blockFiller(window.document);\n    templateBlockFillers.set(blockFiller, templateBlockFiller);\n  }\n\n  return domNode.isEqualNode(templateBlockFiller);\n}\n\n/**\n * Assign key observer which move cursor from the end of the inline filler to the beginning of it when\n * the left arrow is pressed, so the filler does not break navigation.\n *\n * @param {module:engine/view/document~Document} document Document instance we should inject quirks handling on.\n */\nfunction injectQuirksHandling(document) {\n  document.on('keydown', jumpOverInlineFiller);\n}\n\n// Move cursor from the end of the inline filler to the beginning of it when, so the filler does not break navigation.\nfunction jumpOverInlineFiller(evt, data) {\n  if (data.keyCode == _keyboard.keyCodes.arrowleft) {\n    var domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\n\n    if (domSelection.rangeCount == 1 && domSelection.getRangeAt(0).collapsed) {\n      var domParent = domSelection.getRangeAt(0).startContainer;\n      var domOffset = domSelection.getRangeAt(0).startOffset;\n\n      if (startsWithFiller(domParent) && domOffset <= INLINE_FILLER_LENGTH) {\n        domSelection.collapse(domParent, 0);\n      }\n    }\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/view/filler.js\n// module id = 64\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _observer = require('./observer');\n\nvar _observer2 = _interopRequireDefault(_observer);\n\nvar _domeventdata = require('./domeventdata');\n\nvar _domeventdata2 = _interopRequireDefault(_domeventdata);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/view/observer/domeventobserver\n */\n\n/**\n * Base class for DOM event observers. This class handles\n * {@link module:engine/view/observer/observer~Observer#observe adding} listeners to DOM elements,\n * {@link module:engine/view/observer/observer~Observer#disable disabling} and\n * {@link module:engine/view/observer/observer~Observer#enable re-enabling} events.\n * Child class needs to define\n * {@link module:engine/view/observer/domeventobserver~DomEventObserver#domEventType DOM event type} and\n * {@link module:engine/view/observer/domeventobserver~DomEventObserver#onDomEvent callback}.\n *\n * For instance:\n *\n *\t\tclass ClickObserver extends DomEventObserver {\n *\t\t\t// It can also be defined as a normal property in the constructor.\n *\t\t\tget domEventType() {\n *\t\t\t\treturn 'click';\n *\t\t\t}\n *\n *\t\t\tonDomEvent( domEvent ) {\n *\t\t\t\tthis.fire( 'click', domEvent );\n *\t\t\t}\n *\t\t}\n *\n * @extends module:engine/view/observer/observer~Observer\n */\nvar DomEventObserver = function (_Observer) {\n\t_inherits(DomEventObserver, _Observer);\n\n\t/**\n  * Type of the DOM event the observer should listen on. Array of types can be defined\n  * if the obsever should listen to multiple DOM events.\n  *\n  * @readonly\n  * @member {String|Array.<String>} #domEventType\n  */\n\n\t/**\n  * Callback which should be called when the DOM event occurred. Note that the callback will not be called if\n  * observer {@link #isEnabled is not enabled}.\n  *\n  * @see #domEventType\n  * @abstract\n  * @method #onDomEvent\n  */\n\n\t/**\n  * @inheritDoc\n  */\n\tfunction DomEventObserver(document) {\n\t\t_classCallCheck(this, DomEventObserver);\n\n\t\t/**\n   * If set to `true` DOM events will be listened on the capturing phase.\n   * Default value is `false`.\n   *\n   * @member {Boolean}\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (DomEventObserver.__proto__ || Object.getPrototypeOf(DomEventObserver)).call(this, document));\n\n\t\t_this.useCapture = false;\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(DomEventObserver, [{\n\t\tkey: 'observe',\n\t\tvalue: function observe(domElement) {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar types = typeof this.domEventType == 'string' ? [this.domEventType] : this.domEventType;\n\n\t\t\ttypes.forEach(function (type) {\n\t\t\t\t_this2.listenTo(domElement, type, function (eventInfo, domEvent) {\n\t\t\t\t\tif (_this2.isEnabled) {\n\t\t\t\t\t\t_this2.onDomEvent(domEvent);\n\t\t\t\t\t}\n\t\t\t\t}, { useCapture: _this2.useCapture });\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * Calls `Document#fire()` if observer {@link #isEnabled is enabled}.\n   *\n   * @see module:utils/emittermixin~EmitterMixin#fire\n   * @param {String} eventType The event type (name).\n   * @param {Event} domEvent The DOM event.\n   * @param {Object} [additionalData] The additional data which should extend the\n   * {@link module:engine/view/observer/domeventdata~DomEventData event data} object.\n   */\n\n\t}, {\n\t\tkey: 'fire',\n\t\tvalue: function fire(eventType, domEvent, additionalData) {\n\t\t\tif (this.isEnabled) {\n\t\t\t\tthis.document.fire(eventType, new _domeventdata2.default(this.document, domEvent, additionalData));\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn DomEventObserver;\n}(_observer2.default);\n\nexports.default = DomEventObserver;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/view/observer/domeventobserver.js\n// module id = 65\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = first;\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/first\n */\n\n/**\n * Returns first item of the given `iterable`.\n *\n * @param {Iterable.<*>} iterable\n * @returns {*}\n */\nfunction first(iterable) {\n  var iteratorItem = iterable.next();\n\n  if (iteratorItem.done) {\n    return null;\n  }\n\n  return iteratorItem.value;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/first.js\n// module id = 66\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\nn\n/* global setTimeout, clearTimeout */\n\n/**\n * @module utils/focustracker\n */\n\nvar _emittermixin = require('./dom/emittermixin');\n\nvar _emittermixin2 = _interopRequireDefault(_emittermixin);\n\nvar _observablemixin = require('./observablemixin');\n\nvar _observablemixin2 = _interopRequireDefault(_observablemixin);\n\nvar _ckeditorerror = require('./ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nvar _mix = require('./mix');\n\nvar _mix2 = _interopRequireDefault(_mix);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Allows observing a group of `HTMLElement`s whether at least one of them is focused.\n *\n * Used by the {@link module:core/editor/editor~Editor} in order to track whether the focus is still within the application,\n * or were used outside of its UI.\n *\n * **Note** `focus` and `blur` listeners use event capturing, so it is only needed to register wrapper `HTMLElement`\n * which contain other `focusable` elements. But note that this wrapper element has to be focusable too\n * (have e.g. `tabindex=\"-1\"`).\n *\n * @mixes module:utils/dom/emittermixin~EmitterMixin\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nvar FocusTracker = function () {\n\tfunction FocusTracker() {\n\t\t_classCallCheck(this, FocusTracker);\n\n\t\t/**\n   * True when one of the registered elements is focused.\n   *\n   * @readonly\n   * @observable\n   * @member {Boolean} #isFocused\n   */\n\t\tthis.set('isFocused', false);\n\n\t\t/**\n   * Currently focused element.\n   *\n   * @readonly\n   * @member {HTMLElement}\n   */\n\t\tthis.focusedElement = null;\n\n\t\t/**\n   * List of registered elements.\n   *\n   * @private\n   * @member {Set.<HTMLElement>}\n   */\n\t\tthis._elements = new Set();\n\n\t\t/**\n   * Event loop timeout.\n   *\n   * @private\n   * @member {Number}\n   */\n\t\tthis._nextEventLoopTimeout = null;\n\t}\n\n\t/**\n  * Starts tracking the specified element.\n  *\n  * @param {HTMLElement} element\n  */\n\n\n\t_createClass(FocusTracker, [{\n\t\tkey: 'add',\n\t\tvalue: function add(element) {\n\t\t\tvar _this = this;\n\n\t\t\tif (this._elements.has(element)) {\n\t\t\t\tthrow new _ckeditorerror2.default('focusTracker-add-element-already-exist');\n\t\t\t}\n\n\t\t\tthis.listenTo(element, 'focus', function () {\n\t\t\t\treturn _this._focus(element);\n\t\t\t}, { useCapture: true });\n\t\t\tthis.listenTo(element, 'blur', function () {\n\t\t\t\treturn _this._blur();\n\t\t\t}, { useCapture: true });\n\t\t\tthis._elements.add(element);\n\t\t}\n\n\t\t/**\n   * Stops tracking the specified element and stops listening on this element.\n   *\n   * @param {HTMLElement} element\n   */\n\n\t}, {\n\t\tkey: 'remove',\n\t\tvalue: function remove(element) {\n\t\t\tif (element === this.focusedElement) {\n\t\t\t\tthis._blur(element);\n\t\t\t}\n\n\t\t\tif (this._elements.has(element)) {\n\t\t\t\tthis.stopListening(element);\n\t\t\t\tthis._elements.delete(element);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Stores currently focused element and set {#isFocused} as `true`.\n   *\n   * @private\n   * @param {HTMLElement} element Element which has been focused.\n   */\n\n\t}, {\n\t\tkey: '_focus',\n\t\tvalue: function _focus(element) {\n\t\t\tclearTimeout(this._nextEventLoopTimeout);\n\n\t\t\tthis.focusedElement = element;\n\t\t\tthis.isFocused = true;\n\t\t}\n\n\t\t/**\n   * Clears currently focused element and set {@link #isFocused} as `false`.\n   * This method uses `setTimeout` to change order of fires `blur` and `focus` events.\n   *\n   * @private\n   * @fires blur\n   */\n\n\t}, {\n\t\tkey: '_blur',\n\t\tvalue: function _blur() {\n\t\t\tvar _this2 = this;\n\n\t\t\tclearTimeout(this._nextEventLoopTimeout);\n\n\t\t\tthis._nextEventLoopTimeout = setTimeout(function () {\n\t\t\t\t_this2.focusedElement = null;\n\t\t\t\t_this2.isFocused = false;\n\t\t\t}, 0);\n\t\t}\n\n\t\t/**\n   * @event focus\n   */\n\n\t\t/**\n   * @event blur\n   */\n\n\t}]);\n\n\treturn FocusTracker;\n}();\n\nexports.default = FocusTracker;\n\n\n(0, _mix2.default)(FocusTracker, _emittermixin2.default);\n(0, _mix2.default)(FocusTracker, _observablemixin2.default);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/focustracker.js\n// module id = 67\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _eq = require('./eq');\n\nvar _eq2 = _interopRequireDefault(_eq);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && (0, _eq2.default)(objValue, value)) || value === undefined && !(key in object)) {\n    object[key] = value;\n  }\n}\n\nexports.default = assignValue;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_assignValue.js\n// module id = 68\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _SetCache = require('./_SetCache');\n\nvar _SetCache2 = _interopRequireDefault(_SetCache);\n\nvar _arrayIncludes = require('./_arrayIncludes');\n\nvar _arrayIncludes2 = _interopRequireDefault(_arrayIncludes);\n\nvar _arrayIncludesWith = require('./_arrayIncludesWith');\n\nvar _arrayIncludesWith2 = _interopRequireDefault(_arrayIncludesWith);\n\nvar _arrayMap = require('./_arrayMap');\n\nvar _arrayMap2 = _interopRequireDefault(_arrayMap);\n\nvar _baseUnary = require('./_baseUnary');\n\nvar _baseUnary2 = _interopRequireDefault(_baseUnary);\n\nvar _cacheHas = require('./_cacheHas');\n\nvar _cacheHas2 = _interopRequireDefault(_cacheHas);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = _arrayIncludes2.default,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = (0, _arrayMap2.default)(values, (0, _baseUnary2.default)(iteratee));\n  }\n  if (comparator) {\n    includes = _arrayIncludesWith2.default;\n    isCommon = false;\n  } else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = _cacheHas2.default;\n    isCommon = false;\n    values = new _SetCache2.default(values);\n  }\n  outer: while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = comparator || value !== 0 ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    } else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexports.default = baseDifference;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseDifference.js\n// module id = 69\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseClone = require('./_baseClone');\n\nvar _baseClone2 = _interopRequireDefault(_baseClone);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return (0, _baseClone2.default)(value, false, true);\n}\n\nexports.default = clone;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/clone.js\n// module id = 70\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseHas = require('./_baseHas');\n\nvar _baseHas2 = _interopRequireDefault(_baseHas);\n\nvar _baseKeys = require('./_baseKeys');\n\nvar _baseKeys2 = _interopRequireDefault(_baseKeys);\n\nvar _indexKeys = require('./_indexKeys');\n\nvar _indexKeys2 = _interopRequireDefault(_indexKeys);\n\nvar _isArrayLike = require('./isArrayLike');\n\nvar _isArrayLike2 = _interopRequireDefault(_isArrayLike);\n\nvar _isIndex = require('./_isIndex');\n\nvar _isIndex2 = _interopRequireDefault(_isIndex);\n\nvar _isPrototype = require('./_isPrototype');\n\nvar _isPrototype2 = _interopRequireDefault(_isPrototype);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  var isProto = (0, _isPrototype2.default)(object);\n  if (!(isProto || (0, _isArrayLike2.default)(object))) {\n    return (0, _baseKeys2.default)(object);\n  }\n  var indexes = (0, _indexKeys2.default)(object),\n      skipIndexes = !!indexes,\n      result = indexes || [],\n      length = result.length;\n\n  for (var key in object) {\n    if ((0, _baseHas2.default)(object, key) && !(skipIndexes && (key == 'length' || (0, _isIndex2.default)(key, length))) && !(isProto && key == 'constructor')) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexports.default = keys;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/keys.js\n// module id = 71\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = uid;\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/uid\n */\n\n/**\n * Returns a unique id. This id is a number (starting from 1) which will never get repeated on successive calls\n * to this method.\n *\n * @returns {String} A number representing the id.\n */\nfunction uid() {\n  var uuid = 'e'; // Make sure that id does not start with number.\n\n  for (var i = 0; i < 8; i++) {\n    uuid += Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  return uuid;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/uid.js\n// module id = 72\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _delta = require('./delta');\n\nvar _delta2 = _interopRequireDefault(_delta);\n\nvar _deltafactory = require('./deltafactory');\n\nvar _deltafactory2 = _interopRequireDefault(_deltafactory);\n\nvar _splitdelta = require('./splitdelta');\n\nvar _splitdelta2 = _interopRequireDefault(_splitdelta);\n\nvar _batch = require('../batch');\n\nvar _position = require('../position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _element = require('../element');\n\nvar _element2 = _interopRequireDefault(_element);\n\nvar _removeoperation = require('../operation/removeoperation');\n\nvar _removeoperation2 = _interopRequireDefault(_removeoperation);\n\nvar _moveoperation = require('../operation/moveoperation');\n\nvar _moveoperation2 = _interopRequireDefault(_moveoperation);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/model/delta/mergedelta\n */\n\n/**\n * @classdesc\n * To provide specific OT behavior and better collisions solving, {@link module:engine/model/batch~Batch#merge} method\n * uses the `MergeDelta` class which inherits from the `Delta` class and may overwrite some methods.\n */\nvar MergeDelta = function (_Delta) {\n\t_inherits(MergeDelta, _Delta);\n\n\tfunction MergeDelta() {\n\t\t_classCallCheck(this, MergeDelta);\n\n\t\treturn _possibleConstructorReturn(this, (MergeDelta.__proto__ || Object.getPrototypeOf(MergeDelta)).apply(this, arguments));\n\t}\n\n\t_createClass(MergeDelta, [{\n\t\tkey: 'type',\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tget: function get() {\n\t\t\treturn 'merge';\n\t\t}\n\n\t\t/**\n   * Position between to merged nodes or `null` if the delta has no operations.\n   *\n   * @readonly\n   * @type {module:engine/model/position~Position|null}\n   */\n\n\t}, {\n\t\tkey: 'position',\n\t\tget: function get() {\n\t\t\treturn this._removeOperation ? this._removeOperation.sourcePosition : null;\n\t\t}\n\n\t\t/**\n   * Operation in this delta that removes the node after merge position (which will be empty at that point) or\n   * `null` if the delta has no operations. Note, that after {@link module:engine/model/delta/transform~transform transformation}\n   * this might be an instance of {@link module:engine/model/operation/moveoperation~MoveOperation} instead of\n   * {@link module:engine/model/operation/removeoperation~RemoveOperation}.\n   *\n   * @readonly\n   * @protected\n   * @type {module:engine/model/operation/moveoperation~MoveOperation|null}\n   */\n\n\t}, {\n\t\tkey: '_removeOperation',\n\t\tget: function get() {\n\t\t\treturn this.operations[1] || null;\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: '_reverseDeltaClass',\n\t\tget: function get() {\n\t\t\treturn _splitdelta2.default;\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}], [{\n\t\tkey: 'className',\n\t\tget: function get() {\n\t\t\treturn 'engine.model.delta.MergeDelta';\n\t\t}\n\t}]);\n\n\treturn MergeDelta;\n}(_delta2.default);\n\n/**\n * Merges two siblings at the given position.\n *\n * Node before and after the position have to be an element. Otherwise `batch-merge-no-element-before` or\n * `batch-merge-no-element-after` error will be thrown.\n *\n * @chainable\n * @method module:engine/model/batch~Batch#merge\n * @param {module:engine/model/position~Position} position Position of merge.\n */\n\n\nexports.default = MergeDelta;\n(0, _batch.register)('merge', function (position) {\n\tvar delta = new MergeDelta();\n\tthis.addDelta(delta);\n\n\tvar nodeBefore = position.nodeBefore;\n\tvar nodeAfter = position.nodeAfter;\n\n\tif (!(nodeBefore instanceof _element2.default)) {\n\t\t/**\n   * Node before merge position must be an element.\n   *\n   * @error batch-merge-no-element-before\n   */\n\t\tthrow new _ckeditorerror2.default('batch-merge-no-element-before: Node before merge position must be an element.');\n\t}\n\n\tif (!(nodeAfter instanceof _element2.default)) {\n\t\t/**\n   * Node after merge position must be an element.\n   *\n   * @error batch-merge-no-element-after\n   */\n\t\tthrow new _ckeditorerror2.default('batch-merge-no-element-after: Node after merge position must be an element.');\n\t}\n\n\tvar positionAfter = _position2.default.createFromParentAndOffset(nodeAfter, 0);\n\tvar positionBefore = _position2.default.createFromParentAndOffset(nodeBefore, nodeBefore.maxOffset);\n\n\tvar move = new _moveoperation2.default(positionAfter, nodeAfter.maxOffset, positionBefore, this.document.version);\n\n\tmove.isSticky = true;\n\tdelta.addOperation(move);\n\tthis.document.applyOperation(move);\n\n\tvar graveyard = this.document.graveyard;\n\tvar gyPosition = new _position2.default(graveyard, [0]);\n\n\tvar remove = new _removeoperation2.default(position, 1, gyPosition, this.document.version);\n\tdelta.addOperation(remove);\n\tthis.document.applyOperation(remove);\n\n\treturn this;\n});\n\n_deltafactory2.default.register(MergeDelta);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/delta/mergedelta.js\n// module id = 73\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _delta = require('./delta');\n\nvar _delta2 = _interopRequireDefault(_delta);\n\nvar _deltafactory = require('./deltafactory');\n\nvar _deltafactory2 = _interopRequireDefault(_deltafactory);\n\nvar _batch = require('../batch');\n\nvar _moveoperation = require('../operation/moveoperation');\n\nvar _moveoperation2 = _interopRequireDefault(_moveoperation);\n\nvar _position = require('../position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _range = require('../range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/model/delta/movedelta\n */\n\n/**\n * @classdesc\n * To provide specific OT behavior and better collisions solving, {@link module:engine/model/batch~Batch#move} method\n * uses the `MoveDelta` class which inherits from the `Delta` class and may overwrite some methods.\n */\nvar MoveDelta = function (_Delta) {\n\t_inherits(MoveDelta, _Delta);\n\n\tfunction MoveDelta() {\n\t\t_classCallCheck(this, MoveDelta);\n\n\t\treturn _possibleConstructorReturn(this, (MoveDelta.__proto__ || Object.getPrototypeOf(MoveDelta)).apply(this, arguments));\n\t}\n\n\t_createClass(MoveDelta, [{\n\t\tkey: 'type',\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tget: function get() {\n\t\t\treturn 'move';\n\t\t}\n\n\t\t/**\n   * Offset size of moved range or `null` if there are no operations in the delta.\n   *\n   * @type {Number|null}\n   */\n\n\t}, {\n\t\tkey: 'howMany',\n\t\tget: function get() {\n\t\t\treturn this._moveOperation ? this._moveOperation.howMany : null;\n\t\t}\n\n\t\t/**\n   * {@link module:engine/model/delta/movedelta~MoveDelta#_moveOperation Move operation}\n   * {@link module:engine/model/operation/moveoperation~MoveOperation#sourcePosition source position} or `null` if there are\n   * no operations in the delta.\n   *\n   * @type {module:engine/model/position~Position|null}\n   */\n\n\t}, {\n\t\tkey: 'sourcePosition',\n\t\tget: function get() {\n\t\t\treturn this._moveOperation ? this._moveOperation.sourcePosition : null;\n\t\t}\n\n\t\t/**\n   * {@link module:engine/model/delta/movedelta~MoveDelta#_moveOperation Move operation}\n   * {@link module:engine/model/operation/moveoperation~MoveOperation#targetPosition target position} or `null` if there are\n   * no operations in the delta.\n   *\n   * @type {module:engine/model/position~Position|null}\n   */\n\n\t}, {\n\t\tkey: 'targetPosition',\n\t\tget: function get() {\n\t\t\treturn this._moveOperation ? this._moveOperation.targetPosition : null;\n\t\t}\n\n\t\t/**\n   * {@link module:engine/model/delta/movedelta~MoveDelta#_moveOperation Move operation} that is saved in this delta or `null`\n   * if there are no operations in the delta.\n   *\n   * @protected\n   * @type {module:engine/model/operation/moveoperation~MoveOperation|null}\n   */\n\n\t}, {\n\t\tkey: '_moveOperation',\n\t\tget: function get() {\n\t\t\treturn this.operations[0] || null;\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: '_reverseDeltaClass',\n\t\tget: function get() {\n\t\t\treturn MoveDelta;\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}], [{\n\t\tkey: 'className',\n\t\tget: function get() {\n\t\t\treturn 'engine.model.delta.MoveDelta';\n\t\t}\n\t}]);\n\n\treturn MoveDelta;\n}(_delta2.default);\n\nexports.default = MoveDelta;\n\n\nfunction addMoveOperation(batch, delta, sourcePosition, howMany, targetPosition) {\n\tvar operation = new _moveoperation2.default(sourcePosition, howMany, targetPosition, batch.document.version);\n\tdelta.addOperation(operation);\n\tbatch.document.applyOperation(operation);\n}\n\n/**\n * Moves given {@link module:engine/model/item~Item model item} or given range to target position.\n *\n * @chainable\n * @method module:engine/model/batch~Batch#move\n * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange Model item or range of nodes to move.\n * @param {module:engine/model/position~Position} targetPosition Position where moved nodes will be inserted.\n */\n(0, _batch.register)('move', function (itemOrRange, targetPosition) {\n\tvar delta = new MoveDelta();\n\tthis.addDelta(delta);\n\n\tif (itemOrRange instanceof _range2.default) {\n\t\tif (!itemOrRange.isFlat) {\n\t\t\t/**\n    * Range to move is not flat.\n    *\n    * @error batch-move-range-not-flat\n    */\n\t\t\tthrow new _ckeditorerror2.default('batch-move-range-not-flat: Range to move is not flat.');\n\t\t}\n\n\t\taddMoveOperation(this, delta, itemOrRange.start, itemOrRange.end.offset - itemOrRange.start.offset, targetPosition);\n\t} else {\n\t\taddMoveOperation(this, delta, _position2.default.createBefore(itemOrRange), 1, targetPosition);\n\t}\n\n\treturn this;\n});\n\n_deltafactory2.default.register(MoveDelta);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/delta/movedelta.js\n// module id = 74\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _movedelta = require('./movedelta');\n\nvar _movedelta2 = _interopRequireDefault(_movedelta);\n\nvar _batch = require('../batch');\n\nvar _deltafactory = require('./deltafactory');\n\nvar _deltafactory2 = _interopRequireDefault(_deltafactory);\n\nvar _removeoperation = require('../operation/removeoperation');\n\nvar _removeoperation2 = _interopRequireDefault(_removeoperation);\n\nvar _position = require('../position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _range = require('../range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/model/delta/removedelta\n */\n\n/**\n * @classdesc\n * To provide specific OT behavior and better collisions solving, {@link module:engine/model/batch~Batch#remove} method\n * uses the `RemoveDelta` class which inherits from the `Delta` class and may overwrite some methods.\n */\nvar RemoveDelta = function (_MoveDelta) {\n\t_inherits(RemoveDelta, _MoveDelta);\n\n\tfunction RemoveDelta() {\n\t\t_classCallCheck(this, RemoveDelta);\n\n\t\treturn _possibleConstructorReturn(this, (RemoveDelta.__proto__ || Object.getPrototypeOf(RemoveDelta)).apply(this, arguments));\n\t}\n\n\t_createClass(RemoveDelta, null, [{\n\t\tkey: 'className',\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tget: function get() {\n\t\t\treturn 'engine.model.delta.RemoveDelta';\n\t\t}\n\t}]);\n\n\treturn RemoveDelta;\n}(_movedelta2.default);\n\nexports.default = RemoveDelta;\n\n\nfunction addRemoveDelta(batch, position, howMany) {\n\tvar delta = new RemoveDelta();\n\tbatch.addDelta(delta);\n\n\tvar graveyard = batch.document.graveyard;\n\tvar gyPosition = new _position2.default(graveyard, [0]);\n\n\tvar operation = new _removeoperation2.default(position, howMany, gyPosition, batch.document.version);\n\tdelta.addOperation(operation);\n\tbatch.document.applyOperation(operation);\n}\n\n/**\n * Removes given {@link module:engine/model/item~Item model item} or given range.\n *\n * @chainable\n * @method module:engine/model/batch~Batch#remove\n * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange Model item or range to remove.\n */\n(0, _batch.register)('remove', function (itemOrRange) {\n\tif (itemOrRange instanceof _range2.default) {\n\t\t// The array is reversed, so the ranges to remove are in correct order and do not have to be updated.\n\t\tvar ranges = itemOrRange.getMinimalFlatRanges().reverse();\n\n\t\tvar _iteratorNormalCompletion = true;\n\t\tvar _didIteratorError = false;\n\t\tvar _iteratorError = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator = ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\tvar flat = _step.value;\n\n\t\t\t\taddRemoveDelta(this, flat.start, flat.end.offset - flat.start.offset);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t_didIteratorError = true;\n\t\t\t_iteratorError = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t_iterator.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\taddRemoveDelta(this, _position2.default.createBefore(itemOrRange), 1);\n\t}\n\n\treturn this;\n});\n\n_deltafactory2.default.register(RemoveDelta);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/delta/removedelta.js\n// module id = 75\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _delta = require('./delta');\n\nvar _delta2 = _interopRequireDefault(_delta);\n\nvar _deltafactory = require('./deltafactory');\n\nvar _deltafactory2 = _interopRequireDefault(_deltafactory);\n\nvar _batch = require('../batch');\n\nvar _position = require('../position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _element = require('../element');\n\nvar _element2 = _interopRequireDefault(_element);\n\nvar _insertoperation = require('../operation/insertoperation');\n\nvar _insertoperation2 = _interopRequireDefault(_insertoperation);\n\nvar _moveoperation = require('../operation/moveoperation');\n\nvar _moveoperation2 = _interopRequireDefault(_moveoperation);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nvar _mergedelta = require('../delta/mergedelta');\n\nvar _mergedelta2 = _interopRequireDefault(_mergedelta);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/model/delta/splitdelta\n */\n\n/**\n * @classdesc\n * To provide specific OT behavior and better collisions solving, the {@link module:engine/model/batch~Batch#split} method\n * uses `SplitDelta` class which inherits from the `Delta` class and may overwrite some methods.\n */\nvar SplitDelta = function (_Delta) {\n\t_inherits(SplitDelta, _Delta);\n\n\tfunction SplitDelta() {\n\t\t_classCallCheck(this, SplitDelta);\n\n\t\treturn _possibleConstructorReturn(this, (SplitDelta.__proto__ || Object.getPrototypeOf(SplitDelta)).apply(this, arguments));\n\t}\n\n\t_createClass(SplitDelta, [{\n\t\tkey: 'type',\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tget: function get() {\n\t\t\treturn 'split';\n\t\t}\n\n\t\t/**\n   * Position of split or `null` if there are no operations in the delta.\n   *\n   * @type {module:engine/model/position~Position|null}\n   */\n\n\t}, {\n\t\tkey: 'position',\n\t\tget: function get() {\n\t\t\treturn this._moveOperation ? this._moveOperation.sourcePosition : null;\n\t\t}\n\n\t\t/**\n   * Operation in the delta that adds to model an element into which split nodes will be moved, or `null` if\n   * there are no operations in the delta.\n   *\n   * Most commonly this will be {@link module:engine/model/operation/insertoperation~InsertOperation an insert operation},\n   * as `SplitDelta` has to create a new node. If `SplitDelta` was created through\n   * {@link module:engine/model/delta/delta~Delta#getReversed reversing}\n   * a {@link module:engine/model/delta/mergedelta~MergeDelta merge delta},\n   * this will be a {@link module:engine/model/operation/reinsertoperation~ReinsertOperation reinsert operation},\n   * as we will want to re-insert the exact element that was removed by that merge delta.\n   *\n   * @protected\n   * @type {module:engine/model/operation/insertoperation~InsertOperation|\n   * module:engine/model/operation/reinsertoperation~ReinsertOperation|null}\n   */\n\n\t}, {\n\t\tkey: '_cloneOperation',\n\t\tget: function get() {\n\t\t\treturn this.operations[0] || null;\n\t\t}\n\n\t\t/**\n   * Operation in the delta that moves model items, that are after split position, to their new parent or `null`\n   * if there are no operations in the delta.\n   *\n   * @protected\n   * @type {module:engine/model/operation/moveoperation~MoveOperation|null}\n   */\n\n\t}, {\n\t\tkey: '_moveOperation',\n\t\tget: function get() {\n\t\t\treturn this.operations[1] && this.operations[1] instanceof _moveoperation2.default ? this.operations[1] : null;\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: '_reverseDeltaClass',\n\t\tget: function get() {\n\t\t\treturn _mergedelta2.default;\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}], [{\n\t\tkey: 'className',\n\t\tget: function get() {\n\t\t\treturn 'engine.model.delta.SplitDelta';\n\t\t}\n\t}]);\n\n\treturn SplitDelta;\n}(_delta2.default);\n\n/**\n * Splits an element at the given position.\n *\n * The element cannot be a root element, as root element cannot be split. The `batch-split-root` error will be thrown if\n * you try to split the root element.\n *\n * @chainable\n * @method module:engine/model/batch~Batch#split\n * @param {module:engine/model/position~Position} position Position of split.\n */\n\n\nexports.default = SplitDelta;\n(0, _batch.register)('split', function (position) {\n\tvar delta = new SplitDelta();\n\tthis.addDelta(delta);\n\n\tvar splitElement = position.parent;\n\n\tif (!splitElement.parent) {\n\t\t/**\n   * Root element can not be split.\n   *\n   * @error batch-split-root\n   */\n\t\tthrow new _ckeditorerror2.default('batch-split-root: Root element can not be split.');\n\t}\n\n\tvar copy = new _element2.default(splitElement.name, splitElement.getAttributes());\n\n\tvar insert = new _insertoperation2.default(_position2.default.createAfter(splitElement), copy, this.document.version);\n\n\tdelta.addOperation(insert);\n\tthis.document.applyOperation(insert);\n\n\tvar move = new _moveoperation2.default(position, splitElement.maxOffset - position.offset, _position2.default.createFromParentAndOffset(copy, 0), this.document.version);\n\tmove.isSticky = true;\n\n\tdelta.addOperation(move);\n\tthis.document.applyOperation(move);\n\n\treturn this;\n});\n\n_deltafactory2.default.register(SplitDelta);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/delta/splitdelta.js\n// module id = 76\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _delta = require('./delta');\n\nvar _delta2 = _interopRequireDefault(_delta);\n\nvar _deltafactory = require('./deltafactory');\n\nvar _deltafactory2 = _interopRequireDefault(_deltafactory);\n\nvar _wrapdelta = require('./wrapdelta');\n\nvar _wrapdelta2 = _interopRequireDefault(_wrapdelta);\n\nvar _batch = require('../batch');\n\nvar _position = require('../position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _removeoperation = require('../operation/removeoperation');\n\nvar _removeoperation2 = _interopRequireDefault(_removeoperation);\n\nvar _moveoperation = require('../operation/moveoperation');\n\nvar _moveoperation2 = _interopRequireDefault(_moveoperation);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/model/delta/unwrapdelta\n */\n\n/**\n * @classdesc\n * To provide specific OT behavior and better collisions solving, {@link module:engine/model/batch~Batch#merge} method\n * uses the `UnwrapDelta` class which inherits from the `Delta` class and may overwrite some methods.\n */\nvar UnwrapDelta = function (_Delta) {\n\t_inherits(UnwrapDelta, _Delta);\n\n\tfunction UnwrapDelta() {\n\t\t_classCallCheck(this, UnwrapDelta);\n\n\t\treturn _possibleConstructorReturn(this, (UnwrapDelta.__proto__ || Object.getPrototypeOf(UnwrapDelta)).apply(this, arguments));\n\t}\n\n\t_createClass(UnwrapDelta, [{\n\t\tkey: 'type',\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tget: function get() {\n\t\t\treturn 'unwrap';\n\t\t}\n\n\t\t/**\n   * Position before unwrapped element or `null` if there are no operations in the delta.\n   *\n   * @type {module:engine/model/position~Position|null}\n   */\n\n\t}, {\n\t\tkey: 'position',\n\t\tget: function get() {\n\t\t\treturn this._moveOperation ? this._moveOperation.targetPosition : null;\n\t\t}\n\n\t\t/**\n   * Operation in the delta that moves unwrapped nodes to their new parent or `null` if there are no operations in the delta.\n   *\n   * @protected\n   * @type {module:engine/model/operation/moveoperation~MoveOperation|null}\n   */\n\n\t}, {\n\t\tkey: '_moveOperation',\n\t\tget: function get() {\n\t\t\treturn this.operations[0] || null;\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: '_reverseDeltaClass',\n\t\tget: function get() {\n\t\t\treturn _wrapdelta2.default;\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}], [{\n\t\tkey: 'className',\n\t\tget: function get() {\n\t\t\treturn 'engine.model.delta.UnwrapDelta';\n\t\t}\n\t}]);\n\n\treturn UnwrapDelta;\n}(_delta2.default);\n\n/**\n * Unwraps children of the given element – all its children are moved before it and then the element is removed.\n * Throws error if you try to unwrap an element which does not have a parent.\n *\n * @chainable\n * @method module:engine/model/batch~Batch#unwrap\n * @param {module:engine/model/element~Element} position Element to unwrap.\n */\n\n\nexports.default = UnwrapDelta;\n(0, _batch.register)('unwrap', function (element) {\n\tif (element.parent === null) {\n\t\t/**\n   * Trying to unwrap an element which has no parent.\n   *\n   * @error batch-unwrap-element-no-parent\n   */\n\t\tthrow new _ckeditorerror2.default('batch-unwrap-element-no-parent: Trying to unwrap an element which has no parent.');\n\t}\n\n\tvar delta = new UnwrapDelta();\n\tthis.addDelta(delta);\n\n\tvar sourcePosition = _position2.default.createFromParentAndOffset(element, 0);\n\n\tvar move = new _moveoperation2.default(sourcePosition, element.maxOffset, _position2.default.createBefore(element), this.document.version);\n\n\tmove.isSticky = true;\n\tdelta.addOperation(move);\n\tthis.document.applyOperation(move);\n\n\t// Computing new position because we moved some nodes before `element`.\n\t// If we would cache `Position.createBefore( element )` we remove wrong node.\n\tvar graveyard = this.document.graveyard;\n\tvar gyPosition = new _position2.default(graveyard, [0]);\n\n\tvar remove = new _removeoperation2.default(_position2.default.createBefore(element), 1, gyPosition, this.document.version);\n\tdelta.addOperation(remove);\n\tthis.document.applyOperation(remove);\n\n\treturn this;\n});\n\n_deltafactory2.default.register(UnwrapDelta);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/delta/unwrapdelta.js\n// module id = 77\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _delta = require('./delta');\n\nvar _delta2 = _interopRequireDefault(_delta);\n\nvar _deltafactory = require('./deltafactory');\n\nvar _deltafactory2 = _interopRequireDefault(_deltafactory);\n\nvar _unwrapdelta = require('./unwrapdelta');\n\nvar _unwrapdelta2 = _interopRequireDefault(_unwrapdelta);\n\nvar _batch = require('../batch');\n\nvar _position = require('../position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _range = require('../range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _element = require('../element');\n\nvar _element2 = _interopRequireDefault(_element);\n\nvar _insertoperation = require('../operation/insertoperation');\n\nvar _insertoperation2 = _interopRequireDefault(_insertoperation);\n\nvar _moveoperation = require('../operation/moveoperation');\n\nvar _moveoperation2 = _interopRequireDefault(_moveoperation);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/model/delta/wrapdelta\n */\n\n/**\n * @classdesc\n * To provide specific OT behavior and better collisions solving, {@link module:engine/model/batch~Batch#merge} method\n * uses the `WrapDelta` class which inherits from the `Delta` class and may overwrite some methods.\n */\nvar WrapDelta = function (_Delta) {\n\t_inherits(WrapDelta, _Delta);\n\n\tfunction WrapDelta() {\n\t\t_classCallCheck(this, WrapDelta);\n\n\t\treturn _possibleConstructorReturn(this, (WrapDelta.__proto__ || Object.getPrototypeOf(WrapDelta)).apply(this, arguments));\n\t}\n\n\t_createClass(WrapDelta, [{\n\t\tkey: 'type',\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tget: function get() {\n\t\t\treturn 'wrap';\n\t\t}\n\n\t\t/**\n   * Range to wrap or `null` if there are no operations in the delta.\n   *\n   * @type {module:engine/model/range~Range|null}\n   */\n\n\t}, {\n\t\tkey: 'range',\n\t\tget: function get() {\n\t\t\tvar moveOp = this._moveOperation;\n\n\t\t\treturn moveOp ? _range2.default.createFromPositionAndShift(moveOp.sourcePosition, moveOp.howMany) : null;\n\t\t}\n\n\t\t/**\n   * Offset size of range to wrap by the delta or `null` if there are no operations in delta.\n   *\n   * @type {Number}\n   */\n\n\t}, {\n\t\tkey: 'howMany',\n\t\tget: function get() {\n\t\t\tvar range = this.range;\n\n\t\t\treturn range ? range.end.offset - range.start.offset : 0;\n\t\t}\n\n\t\t/* eslint-disable max-len */\n\t\t/**\n   * Operation that inserts wrapping element or `null` if there are no operations in the delta.\n   *\n   * @protected\n   * @type {module:engine/model/operation/insertoperation~InsertOperation|module:engine/model/operation/reinsertoperation~ReinsertOperation}\n   */\n\t\t/* eslint-enable max-len */\n\n\t}, {\n\t\tkey: '_insertOperation',\n\t\tget: function get() {\n\t\t\treturn this.operations[0] || null;\n\t\t}\n\n\t\t/**\n   * Operation that moves wrapped nodes to their new parent or `null` if there are no operations in the delta.\n   *\n   * @protected\n   * @type {module:engine/model/operation/moveoperation~MoveOperation|null}\n   */\n\n\t}, {\n\t\tkey: '_moveOperation',\n\t\tget: function get() {\n\t\t\treturn this.operations[1] || null;\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: '_reverseDeltaClass',\n\t\tget: function get() {\n\t\t\treturn _unwrapdelta2.default;\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}], [{\n\t\tkey: 'className',\n\t\tget: function get() {\n\t\t\treturn 'engine.model.delta.WrapDelta';\n\t\t}\n\t}]);\n\n\treturn WrapDelta;\n}(_delta2.default);\n\n/**\n * Wraps given range with given element or with a new element with specified name, if string has been passed.\n * **Note:** range to wrap should be a \"flat range\" (see {@link module:engine/model/range~Range#isFlat}). If not, error will be thrown.\n *\n * @chainable\n * @method module:engine/model/batch~Batch#wrap\n * @param {module:engine/model/range~Range} range Range to wrap.\n * @param {module:engine/model/element~Element|String} elementOrString Element or name of element to wrap the range with.\n */\n\n\nexports.default = WrapDelta;\n(0, _batch.register)('wrap', function (range, elementOrString) {\n\tif (!range.isFlat) {\n\t\t/**\n   * Range to wrap is not flat.\n   *\n   * @error batch-wrap-range-not-flat\n   */\n\t\tthrow new _ckeditorerror2.default('batch-wrap-range-not-flat: Range to wrap is not flat.');\n\t}\n\n\tvar element = elementOrString instanceof _element2.default ? elementOrString : new _element2.default(elementOrString);\n\n\tif (element.childCount > 0) {\n\t\t/**\n   * Element to wrap with is not empty.\n   *\n   * @error batch-wrap-element-not-empty\n   */\n\t\tthrow new _ckeditorerror2.default('batch-wrap-element-not-empty: Element to wrap with is not empty.');\n\t}\n\n\tif (element.parent !== null) {\n\t\t/**\n   * Element to wrap with is already attached to a tree model.\n   *\n   * @error batch-wrap-element-attached\n   */\n\t\tthrow new _ckeditorerror2.default('batch-wrap-element-attached: Element to wrap with is already attached to tree model.');\n\t}\n\n\tvar delta = new WrapDelta();\n\tthis.addDelta(delta);\n\n\tvar insert = new _insertoperation2.default(range.end, element, this.document.version);\n\tdelta.addOperation(insert);\n\tthis.document.applyOperation(insert);\n\n\tvar targetPosition = _position2.default.createFromParentAndOffset(element, 0);\n\tvar move = new _moveoperation2.default(range.start, range.end.offset - range.start.offset, targetPosition, this.document.version);\n\tdelta.addOperation(move);\n\tthis.document.applyOperation(move);\n\n\treturn this;\n});\n\n_deltafactory2.default.register(WrapDelta);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/delta/wrapdelta.js\n// module id = 78\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\nn\n/**\n * @module engine/model/nodelist\n */\n\nvar _node = require('./node');\n\nvar _node2 = _interopRequireDefault(_node);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Provides an interface to operate on a list of {@link module:engine/model/node~Node nodes}. `NodeList` is used internally\n * in classes like {@link module:engine/model/element~Element Element}\n * or {@link module:engine/model/documentfragment~DocumentFragment DocumentFragment}.\n */\nvar NodeList = function () {\n\t/**\n  * Creates an empty node list.\n  *\n  * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes contained in this node list.\n  */\n\tfunction NodeList(nodes) {\n\t\t_classCallCheck(this, NodeList);\n\n\t\t/**\n   * Nodes contained in this node list.\n   *\n   * @private\n   * @member {Array.<module:engine/model/node~Node>}\n   */\n\t\tthis._nodes = [];\n\n\t\tif (nodes) {\n\t\t\tthis.insertNodes(0, nodes);\n\t\t}\n\t}\n\n\t/**\n  * Returns an iterator that iterates over all nodes contained inside this node list.\n  *\n  * @returns {Iterator.<module:engine/model/node~Node>}\n  */\n\n\n\t_createClass(NodeList, [{\n\t\tkey: Symbol.iterator,\n\t\tvalue: function value() {\n\t\t\treturn this._nodes[Symbol.iterator]();\n\t\t}\n\n\t\t/**\n   * Number of nodes contained inside this node list.\n   *\n   * @readonly\n   * @type {Number}\n   */\n\n\t}, {\n\t\tkey: 'getNode',\n\n\n\t\t/**\n   * Gets the node at the given index. Returns `null` if incorrect index was passed.\n   *\n   * @param {Number} index Index of node.\n   * @returns {module:engine/model/node~Node|null} Node at given index.\n   */\n\t\tvalue: function getNode(index) {\n\t\t\treturn this._nodes[index] || null;\n\t\t}\n\n\t\t/**\n   * Returns an index of the given node. Returns `null` if given node is not inside this node list.\n   *\n   * @param {module:engine/model/node~Node} node Child node to look for.\n   * @returns {Number|null} Child node's index.\n   */\n\n\t}, {\n\t\tkey: 'getNodeIndex',\n\t\tvalue: function getNodeIndex(node) {\n\t\t\tvar index = this._nodes.indexOf(node);\n\n\t\t\treturn index == -1 ? null : index;\n\t\t}\n\n\t\t/**\n   * Returns the starting offset of given node. Starting offset is equal to the sum of\n   * {module:engine/model/node~Node#offsetSize offset sizes} of all nodes that are before this node in this node list.\n   *\n   * @param {module:engine/model/node~Node} node Node to look for.\n   * @returns {Number|null} Node's starting offset.\n   */\n\n\t}, {\n\t\tkey: 'getNodeStartOffset',\n\t\tvalue: function getNodeStartOffset(node) {\n\t\t\tvar index = this.getNodeIndex(node);\n\n\t\t\treturn index === null ? null : this._nodes.slice(0, index).reduce(function (sum, node) {\n\t\t\t\treturn sum + node.offsetSize;\n\t\t\t}, 0);\n\t\t}\n\n\t\t/**\n   * Converts index to offset in node list.\n   *\n   * Returns starting offset of a node that is at given index. Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError}\n   * `model-nodelist-index-out-of-bounds` if given index is less than `0` or more than {@link #length}.\n   *\n   * @param {Number} index Node's index.\n   * @returns {Number} Node's starting offset.\n   */\n\n\t}, {\n\t\tkey: 'indexToOffset',\n\t\tvalue: function indexToOffset(index) {\n\t\t\tif (index == this._nodes.length) {\n\t\t\t\treturn this.maxOffset;\n\t\t\t}\n\n\t\t\tvar node = this._nodes[index];\n\n\t\t\tif (!node) {\n\t\t\t\t/**\n     * Given index cannot be found in the node list.\n     *\n     * @error nodelist-index-out-of-bounds\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('model-nodelist-index-out-of-bounds: Given index cannot be found in the node list.');\n\t\t\t}\n\n\t\t\treturn this.getNodeStartOffset(node);\n\t\t}\n\n\t\t/**\n   * Converts offset in node list to index.\n   *\n   * Returns index of a node that occupies given offset. Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError}\n   * `model-nodelist-offset-out-of-bounds` if given offset is less than `0` or more than {@link #maxOffset}.\n   *\n   * @param {Number} offset Offset to look for.\n   * @returns {Number} Index of a node that occupies given offset.\n   */\n\n\t}, {\n\t\tkey: 'offsetToIndex',\n\t\tvalue: function offsetToIndex(offset) {\n\t\t\tvar totalOffset = 0;\n\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = this._nodes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar node = _step.value;\n\n\t\t\t\t\tif (offset >= totalOffset && offset < totalOffset + node.offsetSize) {\n\t\t\t\t\t\treturn this.getNodeIndex(node);\n\t\t\t\t\t}\n\n\t\t\t\t\ttotalOffset += node.offsetSize;\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (totalOffset != offset) {\n\t\t\t\t/**\n     * Given offset cannot be found in the node list.\n     *\n     * @error nodelist-offset-out-of-bounds\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('model-nodelist-offset-out-of-bounds: Given offset cannot be found in the node list.');\n\t\t\t}\n\n\t\t\treturn this.length;\n\t\t}\n\n\t\t/**\n   * Inserts given nodes at given index.\n   *\n   * @param {Number} index Index at which nodes should be inserted.\n   * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes to be inserted.\n   */\n\n\t}, {\n\t\tkey: 'insertNodes',\n\t\tvalue: function insertNodes(index, nodes) {\n\t\t\tvar _nodes;\n\n\t\t\t// Validation.\n\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\tvar _didIteratorError2 = false;\n\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator2 = nodes[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\tvar node = _step2.value;\n\n\t\t\t\t\tif (!(node instanceof _node2.default)) {\n\t\t\t\t\t\t/**\n       * Trying to insert an object which is not a Node instance.\n       *\n       * @error nodelist-insertNodes-not-node\n       */\n\t\t\t\t\t\tthrow new _ckeditorerror2.default('model-nodelist-insertNodes-not-node: Trying to insert an object which is not a Node instance.');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t_iteratorError2 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t(_nodes = this._nodes).splice.apply(_nodes, [index, 0].concat(_toConsumableArray(nodes)));\n\t\t}\n\n\t\t/**\n   * Removes one or more nodes starting at the given index.\n   *\n   * @param {Number} indexStart Index of the first node to remove.\n   * @param {Number} [howMany=1] Number of nodes to remove.\n   * @returns {Array.<module:engine/model/node~Node>} Array containing removed nodes.\n   */\n\n\t}, {\n\t\tkey: 'removeNodes',\n\t\tvalue: function removeNodes(indexStart) {\n\t\t\tvar howMany = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n\t\t\treturn this._nodes.splice(indexStart, howMany);\n\t\t}\n\n\t\t/**\n   * Converts `NodeList` instance to an array containing nodes that were inserted in the node list. Nodes\n   * are also converted to their plain object representation.\n   *\n   * @returns {Array.<module:engine/model/node~Node>} `NodeList` instance converted to `Array`.\n   */\n\n\t}, {\n\t\tkey: 'toJSON',\n\t\tvalue: function toJSON() {\n\t\t\treturn this._nodes.map(function (node) {\n\t\t\t\treturn node.toJSON();\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'length',\n\t\tget: function get() {\n\t\t\treturn this._nodes.length;\n\t\t}\n\n\t\t/**\n   * Sum of {@link module:engine/model/node~Node#offsetSize offset sizes} of all nodes contained inside this node list.\n   *\n   * @readonly\n   * @type {Number}\n   */\n\n\t}, {\n\t\tkey: 'maxOffset',\n\t\tget: function get() {\n\t\t\treturn this._nodes.reduce(function (sum, node) {\n\t\t\t\treturn sum + node.offsetSize;\n\t\t\t}, 0);\n\t\t}\n\t}]);\n\n\treturn NodeList;\n}();\n\nexports.default = NodeList;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/nodelist.js\n// module id = 79\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _operation = require('./operation');\n\nvar _operation2 = _interopRequireDefault(_operation);\n\nvar _range = require('../range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nvar _writer = require('../writer');\n\nvar _writer2 = _interopRequireDefault(_writer);\n\nvar _isEqual = require('@ckeditor/ckeditor5-utils/src/lib/lodash/isEqual');\n\nvar _isEqual2 = _interopRequireDefault(_isEqual);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/model/operation/attributeoperation\n */\n\n/**\n * Operation to change nodes' attribute.\n *\n * Using this class you can add, remove or change value of the attribute.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nvar AttributeOperation = function (_Operation) {\n\t_inherits(AttributeOperation, _Operation);\n\n\t/**\n  * Creates an operation that changes, removes or adds attributes.\n  *\n  * If only `newValue` is set, attribute will be added on a node. Note that all nodes in operation's range must not\n  * have an attribute with the same key as the added attribute.\n  *\n  * If only `oldValue` is set, then attribute with given key will be removed. Note that all nodes in operation's range\n  * must have an attribute with that key added.\n  *\n  * If both `newValue` and `oldValue` are set, then the operation will change the attribute value. Note that all nodes in\n  * operation's ranges must already have an attribute with given key and `oldValue` as value\n  *\n  * @param {module:engine/model/range~Range} range Range on which the operation should be applied.\n  * @param {String} key Key of an attribute to change or remove.\n  * @param {*} oldValue Old value of the attribute with given key or `null`, if attribute was not set before.\n  * @param {*} newValue New value of the attribute with given key or `null`, if operation should remove attribute.\n  * @param {Number} baseVersion {@link module:engine/model/document~Document#version} on which the operation can be applied.\n  */\n\tfunction AttributeOperation(range, key, oldValue, newValue, baseVersion) {\n\t\t_classCallCheck(this, AttributeOperation);\n\n\t\t/**\n   * Range on which operation should be applied.\n   *\n   * @readonly\n   * @member {module:engine/model/range~Range}\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (AttributeOperation.__proto__ || Object.getPrototypeOf(AttributeOperation)).call(this, baseVersion));\n\n\t\t_this.range = _range2.default.createFromRange(range);\n\n\t\t/**\n   * Key of an attribute to change or remove.\n   *\n   * @readonly\n   * @member {String}\n   */\n\t\t_this.key = key;\n\n\t\t/**\n   * Old value of the attribute with given key or `null`, if attribute was not set before.\n   *\n   * @readonly\n   * @member {*}\n   */\n\t\t_this.oldValue = oldValue === undefined ? null : oldValue;\n\n\t\t/**\n   * New value of the attribute with given key or `null`, if operation should remove attribute.\n   *\n   * @readonly\n   * @member {*}\n   */\n\t\t_this.newValue = newValue === undefined ? null : newValue;\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(AttributeOperation, [{\n\t\tkey: 'clone',\n\n\n\t\t/**\n   * Creates and returns an operation that has the same parameters as this operation.\n   *\n   * @returns {module:engine/model/operation/attributeoperation~AttributeOperation} Clone of this operation.\n   */\n\t\tvalue: function clone() {\n\t\t\treturn new AttributeOperation(this.range, this.key, this.oldValue, this.newValue, this.baseVersion);\n\t\t}\n\n\t\t/**\n   * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n   *\n   * @returns {module:engine/model/operation/attributeoperation~AttributeOperation}\n   */\n\n\t}, {\n\t\tkey: 'getReversed',\n\t\tvalue: function getReversed() {\n\t\t\treturn new AttributeOperation(this.range, this.key, this.newValue, this.oldValue, this.baseVersion + 1);\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: '_execute',\n\t\tvalue: function _execute() {\n\t\t\t// Validation.\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = this.range.getItems()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar item = _step.value;\n\n\t\t\t\t\tif (this.oldValue !== null && !(0, _isEqual2.default)(item.getAttribute(this.key), this.oldValue)) {\n\t\t\t\t\t\t/**\n       * Changed node has different attribute value than operation's old attribute value.\n       *\n       * @error operation-attribute-wrong-old-value\n       * @param {module:engine/model/item~Item} item\n       * @param {String} key\n       * @param {*} value\n       */\n\t\t\t\t\t\tthrow new _ckeditorerror2.default('attribute-operation-wrong-old-value: Changed node has different attribute value than operation\\'s ' + 'old attribute value.', { item: item, key: this.key, value: this.oldValue });\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.oldValue === null && this.newValue !== null && item.hasAttribute(this.key)) {\n\t\t\t\t\t\t/**\n       * The attribute with given key already exists for the given node.\n       *\n       * @error attribute-operation-attribute-exists\n       * @param {module:engine/model/node~Node} node\n       * @param {String} key\n       */\n\t\t\t\t\t\tthrow new _ckeditorerror2.default('attribute-operation-attribute-exists: The attribute with given key already exists.', { node: item, key: this.key });\n\t\t\t\t\t}\n\n\t\t\t\t\t// If value to set is same as old value, don't do anything.\n\t\t\t\t\t// By returning `undefined`, this operation will be seen as `NoOperation` - that means\n\t\t\t\t\t// that it won't generate any events, etc. `AttributeOperation` with such parameters may be\n\t\t\t\t\t// a result of operational transformation.\n\t\t\t\t\tif ((0, _isEqual2.default)(this.oldValue, this.newValue)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Execution.\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_writer2.default.setAttribute(this.range, this.key, this.newValue);\n\n\t\t\treturn { range: this.range, key: this.key, oldValue: this.oldValue, newValue: this.newValue };\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'type',\n\t\tget: function get() {\n\t\t\tif (this.oldValue === null) {\n\t\t\t\treturn 'addAttribute';\n\t\t\t} else if (this.newValue === null) {\n\t\t\t\treturn 'removeAttribute';\n\t\t\t} else {\n\t\t\t\treturn 'changeAttribute';\n\t\t\t}\n\t\t}\n\t}], [{\n\t\tkey: 'fromJSON',\n\n\n\t\t/**\n   * Creates `AttributeOperation` object from deserilized object, i.e. from parsed JSON string.\n   *\n   * @param {Object} json Deserialized JSON object.\n   * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n   * @returns {module:engine/model/operation/attributeoperation~AttributeOperation}\n   */\n\t\tvalue: function fromJSON(json, document) {\n\t\t\treturn new AttributeOperation(_range2.default.fromJSON(json.range, document), json.key, json.oldValue, json.newValue, json.baseVersion);\n\t\t}\n\t}, {\n\t\tkey: 'className',\n\t\tget: function get() {\n\t\t\treturn 'engine.model.operation.AttributeOperation';\n\t\t}\n\t}]);\n\n\treturn AttributeOperation;\n}(_operation2.default);\n\nexports.default = AttributeOperation;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/operation/attributeoperation.js\n// module id = 80\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\nn\n/**\n * @module engine/model/selection\n */\n\nvar _position = require('./position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _element = require('./element');\n\nvar _element2 = _interopRequireDefault(_element);\n\nvar _range = require('./range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _emittermixin = require('@ckeditor/ckeditor5-utils/src/emittermixin');\n\nvar _emittermixin2 = _interopRequireDefault(_emittermixin);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nvar _mix = require('@ckeditor/ckeditor5-utils/src/mix');\n\nvar _mix2 = _interopRequireDefault(_mix);\n\nvar _tomap = require('@ckeditor/ckeditor5-utils/src/tomap');\n\nvar _tomap2 = _interopRequireDefault(_tomap);\n\nvar _mapsequal = require('@ckeditor/ckeditor5-utils/src/mapsequal');\n\nvar _mapsequal2 = _interopRequireDefault(_mapsequal);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * `Selection` is a group of {@link module:engine/model/range~Range ranges} which has a direction specified by\n * {@link module:engine/model/selection~Selection#anchor anchor} and {@link module:engine/model/selection~Selection#focus focus}.\n * Additionally, `Selection` may have it's own attributes.\n */\nvar Selection = function () {\n\t/**\n  * Creates new selection instance.\n  *\n  * @param {Iterable.<module:engine/view/range~Range>} [ranges] An optional iterable object of ranges to set.\n  * @param {Boolean} [isLastBackward] An optional flag describing if last added range was selected forward - from start to end\n  * (`false`) or backward - from end to start (`true`). Defaults to `false`.\n  */\n\tfunction Selection(ranges, isLastBackward) {\n\t\t_classCallCheck(this, Selection);\n\n\t\t/**\n   * Specifies whether the last added range was added as a backward or forward range.\n   *\n   * @private\n   * @member {Boolean}\n   */\n\t\tthis._lastRangeBackward = false;\n\n\t\t/**\n   * Stores selection ranges.\n   *\n   * @protected\n   * @member {Array.<module:engine/model/range~Range>}\n   */\n\t\tthis._ranges = [];\n\n\t\t/**\n   * List of attributes set on current selection.\n   *\n   * @protected\n   * @member {Map} module:engine/model/selection~Selection#_attrs\n   */\n\t\tthis._attrs = new Map();\n\n\t\tif (ranges) {\n\t\t\tthis.setRanges(ranges, isLastBackward);\n\t\t}\n\t}\n\n\t/**\n  * Selection anchor. Anchor may be described as a position where the most recent part of the selection starts.\n  * Together with {@link #focus} they define the direction of selection, which is important\n  * when expanding/shrinking selection. Anchor is always {@link module:engine/model/range~Range#start start} or\n  * {@link module:engine/model/range~Range#end end} position of the most recently added range.\n  *\n  * Is set to `null` if there are no ranges in selection.\n  *\n  * @see #focus\n  * @readonly\n  * @type {module:engine/model/position~Position|null}\n  */\n\n\n\t_createClass(Selection, [{\n\t\tkey: 'isEqual',\n\n\n\t\t/**\n   * Checks whether this selection is equal to given selection. Selections are equal if they have same directions,\n   * same number of ranges and all ranges from one selection equal to a range from other selection.\n   *\n   * @param {module:engine/model/selection~Selection} otherSelection Selection to compare with.\n   * @returns {Boolean} `true` if selections are equal, `false` otherwise.\n   */\n\t\tvalue: function isEqual(otherSelection) {\n\t\t\tif (this.rangeCount != otherSelection.rangeCount) {\n\t\t\t\treturn false;\n\t\t\t} else if (this.rangeCount === 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (!this.anchor.isEqual(otherSelection.anchor) || !this.focus.isEqual(otherSelection.focus)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = this._ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar thisRange = _step.value;\n\n\t\t\t\t\tvar found = false;\n\n\t\t\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\t\t\tvar _didIteratorError2 = false;\n\t\t\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (var _iterator2 = otherSelection._ranges[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\t\t\tvar otherRange = _step2.value;\n\n\t\t\t\t\t\t\tif (thisRange.isEqual(otherRange)) {\n\t\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t\t\t_iteratorError2 = err;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!found) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n   * Returns an iterator that iterates over copies of selection ranges.\n   *\n   * @returns {Iterator.<module:engine/model/range~Range>}\n   */\n\n\t}, {\n\t\tkey: 'getRanges',\n\t\tvalue: regeneratorRuntime.mark(function getRanges() {\n\t\t\tvar _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, range;\n\n\t\t\treturn regeneratorRuntime.wrap(function getRanges$(_context) {\n\t\t\t\twhile (1) {\n\t\t\t\t\tswitch (_context.prev = _context.next) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t_iteratorNormalCompletion3 = true;\n\t\t\t\t\t\t\t_didIteratorError3 = false;\n\t\t\t\t\t\t\t_iteratorError3 = undefined;\n\t\t\t\t\t\t\t_context.prev = 3;\n\t\t\t\t\t\t\t_iterator3 = this._ranges[Symbol.iterator]();\n\n\t\t\t\t\t\tcase 5:\n\t\t\t\t\t\t\tif (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {\n\t\t\t\t\t\t\t\t_context.next = 12;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\trange = _step3.value;\n\t\t\t\t\t\t\t_context.next = 9;\n\t\t\t\t\t\t\treturn _range2.default.createFromRange(range);\n\n\t\t\t\t\t\tcase 9:\n\t\t\t\t\t\t\t_iteratorNormalCompletion3 = true;\n\t\t\t\t\t\t\t_context.next = 5;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 12:\n\t\t\t\t\t\t\t_context.next = 18;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 14:\n\t\t\t\t\t\t\t_context.prev = 14;\n\t\t\t\t\t\t\t_context.t0 = _context['catch'](3);\n\t\t\t\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t\t\t\t_iteratorError3 = _context.t0;\n\n\t\t\t\t\t\tcase 18:\n\t\t\t\t\t\t\t_context.prev = 18;\n\t\t\t\t\t\t\t_context.prev = 19;\n\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase 21:\n\t\t\t\t\t\t\t_context.prev = 21;\n\n\t\t\t\t\t\t\tif (!_didIteratorError3) {\n\t\t\t\t\t\t\t\t_context.next = 24;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthrow _iteratorError3;\n\n\t\t\t\t\t\tcase 24:\n\t\t\t\t\t\t\treturn _context.finish(21);\n\n\t\t\t\t\t\tcase 25:\n\t\t\t\t\t\t\treturn _context.finish(18);\n\n\t\t\t\t\t\tcase 26:\n\t\t\t\t\t\tcase 'end':\n\t\t\t\t\t\t\treturn _context.stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, getRanges, this, [[3, 14, 18, 26], [19,, 21, 25]]);\n\t\t})\n\n\t\t/**\n   * Returns a copy of the first range in the selection.\n   * First range is the one which {@link module:engine/model/range~Range#start start} position\n   * {@link module:engine/model/position~Position#isBefore is before} start position of all other ranges\n   * (not to confuse with the first range added to the selection).\n   *\n   * Returns `null` if there are no ranges in selection.\n   *\n   * @returns {module:engine/model/range~Range|null}\n   */\n\n\t}, {\n\t\tkey: 'getFirstRange',\n\t\tvalue: function getFirstRange() {\n\t\t\tvar first = null;\n\n\t\t\tvar _iteratorNormalCompletion4 = true;\n\t\t\tvar _didIteratorError4 = false;\n\t\t\tvar _iteratorError4 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator4 = this._ranges[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\t\t\tvar range = _step4.value;\n\n\t\t\t\t\tif (!first || range.start.isBefore(first.start)) {\n\t\t\t\t\t\tfirst = range;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError4 = true;\n\t\t\t\t_iteratorError4 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t\t\t_iterator4.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError4) {\n\t\t\t\t\t\tthrow _iteratorError4;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn first ? _range2.default.createFromRange(first) : null;\n\t\t}\n\n\t\t/**\n   * Returns a copy of the last range in the selection.\n   * Last range is the one which {@link module:engine/model/range~Range#end end} position\n   * {@link module:engine/model/position~Position#isAfter is after} end position of all other ranges (not to confuse with the range most\n   * recently added to the selection).\n   *\n   * Returns `null` if there are no ranges in selection.\n   *\n   * @returns {module:engine/model/range~Range|null}\n   */\n\n\t}, {\n\t\tkey: 'getLastRange',\n\t\tvalue: function getLastRange() {\n\t\t\tvar last = null;\n\n\t\t\tvar _iteratorNormalCompletion5 = true;\n\t\t\tvar _didIteratorError5 = false;\n\t\t\tvar _iteratorError5 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator5 = this._ranges[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t\t\t\t\tvar range = _step5.value;\n\n\t\t\t\t\tif (!last || range.end.isAfter(last.end)) {\n\t\t\t\t\t\tlast = range;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError5 = true;\n\t\t\t\t_iteratorError5 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t\t\t\t\t\t_iterator5.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError5) {\n\t\t\t\t\t\tthrow _iteratorError5;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn last ? _range2.default.createFromRange(last) : null;\n\t\t}\n\n\t\t/**\n   * Returns the first position in the selection.\n   * First position is the position that {@link module:engine/model/position~Position#isBefore is before}\n   * any other position in the selection.\n   *\n   * Returns `null` if there are no ranges in selection.\n   *\n   * @returns {module:engine/model/position~Position|null}\n   */\n\n\t}, {\n\t\tkey: 'getFirstPosition',\n\t\tvalue: function getFirstPosition() {\n\t\t\tvar first = this.getFirstRange();\n\n\t\t\treturn first ? _position2.default.createFromPosition(first.start) : null;\n\t\t}\n\n\t\t/**\n   * Returns the last position in the selection.\n   * Last position is the position that {@link module:engine/model/position~Position#isAfter is after}\n   * any other position in the selection.\n   *\n   * Returns `null` if there are no ranges in selection.\n   *\n   * @returns {module:engine/model/position~Position|null}\n   */\n\n\t}, {\n\t\tkey: 'getLastPosition',\n\t\tvalue: function getLastPosition() {\n\t\t\tvar lastRange = this.getLastRange();\n\n\t\t\treturn lastRange ? _position2.default.createFromPosition(lastRange.end) : null;\n\t\t}\n\n\t\t/**\n   * Adds a range to this selection. Added range is copied. This means that passed range is not saved in `Selection`\n   * instance and operating on it will not change `Selection` state.\n   *\n   * Accepts a flag describing in which way the selection is made - passed range might be selected from\n   * {@link module:engine/model/range~Range#start start} to {@link module:engine/model/range~Range#end end}\n   * or from {@link module:engine/model/range~Range#end end}\n   * to {@link module:engine/model/range~Range#start start}.\n   * The flag is used to set {@link #anchor} and\n   * {@link #focus} properties.\n   *\n   * @fires change:range\n   * @param {module:engine/model/range~Range} range Range to add.\n   * @param {Boolean} [isBackward=false] Flag describing if added range was selected forward - from start to end (`false`)\n   * or backward - from end to start (`true`).\n   */\n\n\t}, {\n\t\tkey: 'addRange',\n\t\tvalue: function addRange(range) {\n\t\t\tvar isBackward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n\t\t\tthis._pushRange(range);\n\t\t\tthis._lastRangeBackward = !!isBackward;\n\n\t\t\tthis.fire('change:range', { directChange: true });\n\t\t}\n\n\t\t/**\n   * Removes all ranges that were added to the selection.\n   *\n   * @fires change:range\n   */\n\n\t}, {\n\t\tkey: 'removeAllRanges',\n\t\tvalue: function removeAllRanges() {\n\t\t\tif (this._ranges.length > 0) {\n\t\t\t\tthis._removeAllRanges();\n\t\t\t\tthis.fire('change:range', { directChange: true });\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Replaces all ranges that were added to the selection with given array of ranges. Last range of the array\n   * is treated like the last added range and is used to set {@link module:engine/model/selection~Selection#anchor} and\n   * {@link module:engine/model/selection~Selection#focus}. Accepts a flag describing in which direction the selection is made\n   * (see {@link module:engine/model/selection~Selection#addRange}).\n   *\n   * @fires change:range\n   * @param {Iterable.<module:engine/model/range~Range>} newRanges Ranges to set.\n   * @param {Boolean} [isLastBackward=false] Flag describing if last added range was selected forward - from start to end (`false`)\n   * or backward - from end to start (`true`).\n   */\n\n\t}, {\n\t\tkey: 'setRanges',\n\t\tvalue: function setRanges(newRanges) {\n\t\t\tvar _this = this;\n\n\t\t\tvar isLastBackward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n\t\t\tnewRanges = Array.from(newRanges);\n\n\t\t\t// Check whether there is any range in new ranges set that is different than all already added ranges.\n\t\t\tvar anyNewRange = newRanges.some(function (newRange) {\n\t\t\t\tif (!(newRange instanceof _range2.default)) {\n\t\t\t\t\tthrow new _ckeditorerror2.default('model-selection-added-not-range: Trying to add an object that is not an instance of Range.');\n\t\t\t\t}\n\n\t\t\t\treturn _this._ranges.every(function (oldRange) {\n\t\t\t\t\treturn !oldRange.isEqual(newRange);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Don't do anything if nothing changed.\n\t\t\tif (newRanges.length === this._ranges.length && !anyNewRange) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._removeAllRanges();\n\n\t\t\tvar _iteratorNormalCompletion6 = true;\n\t\t\tvar _didIteratorError6 = false;\n\t\t\tvar _iteratorError6 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator6 = newRanges[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t\t\t\t\tvar range = _step6.value;\n\n\t\t\t\t\tthis._pushRange(range);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError6 = true;\n\t\t\t\t_iteratorError6 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion6 && _iterator6.return) {\n\t\t\t\t\t\t_iterator6.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError6) {\n\t\t\t\t\t\tthrow _iteratorError6;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._lastRangeBackward = !!isLastBackward;\n\n\t\t\tthis.fire('change:range', { directChange: true });\n\t\t}\n\n\t\t/**\n   * Sets this selection's ranges and direction to the ranges and direction of the given selection.\n   *\n   * @param {module:engine/model/selection~Selection} otherSelection\n   */\n\n\t}, {\n\t\tkey: 'setTo',\n\t\tvalue: function setTo(otherSelection) {\n\t\t\tthis.setRanges(otherSelection.getRanges(), otherSelection.isBackward);\n\t\t}\n\n\t\t/**\n   * Sets collapsed selection in the specified location.\n   *\n   * The location can be specified in the same form as {@link module:engine/model/position~Position.createAt} parameters.\n   *\n   * @fires change:range\n   * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n   * @param {Number|'end'|'before'|'after'} [offset=0] Offset or one of the flags. Used only when\n   * first parameter is a {@link module:engine/model/item~Item model item}.\n   */\n\n\t}, {\n\t\tkey: 'collapse',\n\t\tvalue: function collapse(itemOrPosition, offset) {\n\t\t\tvar pos = _position2.default.createAt(itemOrPosition, offset);\n\t\t\tvar range = new _range2.default(pos, pos);\n\n\t\t\tthis.setRanges([range]);\n\t\t}\n\n\t\t/**\n   * Collapses selection to the selection's {@link module:engine/model/selection~Selection#getFirstPosition first position}.\n   * All ranges, besides the collapsed one, will be removed. Nothing will change if there are no ranges stored\n   * inside selection.\n   *\n   * @fires change\n   */\n\n\t}, {\n\t\tkey: 'collapseToStart',\n\t\tvalue: function collapseToStart() {\n\t\t\tvar startPosition = this.getFirstPosition();\n\n\t\t\tif (startPosition !== null) {\n\t\t\t\tthis.setRanges([new _range2.default(startPosition, startPosition)]);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Collapses selection to the selection's {@link module:engine/model/selection~Selection#getLastPosition last position}.\n   * All ranges, besides the collapsed one, will be removed. Nothing will change if there are no ranges stored\n   * inside selection.\n   *\n   * @fires change\n   */\n\n\t}, {\n\t\tkey: 'collapseToEnd',\n\t\tvalue: function collapseToEnd() {\n\t\t\tvar endPosition = this.getLastPosition();\n\n\t\t\tif (endPosition !== null) {\n\t\t\t\tthis.setRanges([new _range2.default(endPosition, endPosition)]);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Sets {@link module:engine/model/selection~Selection#focus} to the specified location.\n   *\n   * The location can be specified in the same form as {@link module:engine/model/position~Position.createAt} parameters.\n   *\n   * @fires change:range\n   * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n   * @param {Number|'end'|'before'|'after'} [offset=0] Offset or one of the flags. Used only when\n   * first parameter is a {@link module:engine/model/item~Item model item}.\n   */\n\n\t}, {\n\t\tkey: 'setFocus',\n\t\tvalue: function setFocus(itemOrPosition, offset) {\n\t\t\tif (this.anchor === null) {\n\t\t\t\t/**\n     * Cannot set selection focus if there are no ranges in selection.\n     *\n     * @error model-selection-setFocus-no-ranges\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('model-selection-setFocus-no-ranges: Cannot set selection focus if there are no ranges in selection.');\n\t\t\t}\n\n\t\t\tvar newFocus = _position2.default.createAt(itemOrPosition, offset);\n\n\t\t\tif (newFocus.compareWith(this.focus) == 'same') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar anchor = this.anchor;\n\n\t\t\tif (this._ranges.length) {\n\t\t\t\tthis._popRange();\n\t\t\t}\n\n\t\t\tif (newFocus.compareWith(anchor) == 'before') {\n\t\t\t\tthis.addRange(new _range2.default(newFocus, anchor), true);\n\t\t\t} else {\n\t\t\t\tthis.addRange(new _range2.default(anchor, newFocus));\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Gets an attribute value for given key or `undefined` if that attribute is not set on the selection.\n   *\n   * @param {String} key Key of attribute to look for.\n   * @returns {*} Attribute value or `undefined`.\n   */\n\n\t}, {\n\t\tkey: 'getAttribute',\n\t\tvalue: function getAttribute(key) {\n\t\t\treturn this._attrs.get(key);\n\t\t}\n\n\t\t/**\n   * Returns iterator that iterates over this selection's attributes.\n   *\n   * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\n   * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n   *\n   * @returns {Iterable.<*>}\n   */\n\n\t}, {\n\t\tkey: 'getAttributes',\n\t\tvalue: function getAttributes() {\n\t\t\treturn this._attrs.entries();\n\t\t}\n\n\t\t/**\n   * Returns iterator that iterates over this selection's attribute keys.\n   *\n   * @returns {Iterator.<String>}\n   */\n\n\t}, {\n\t\tkey: 'getAttributeKeys',\n\t\tvalue: function getAttributeKeys() {\n\t\t\treturn this._attrs.keys();\n\t\t}\n\n\t\t/**\n   * Checks if the selection has an attribute for given key.\n   *\n   * @param {String} key Key of attribute to check.\n   * @returns {Boolean} `true` if attribute with given key is set on selection, `false` otherwise.\n   */\n\n\t}, {\n\t\tkey: 'hasAttribute',\n\t\tvalue: function hasAttribute(key) {\n\t\t\treturn this._attrs.has(key);\n\t\t}\n\n\t\t/**\n   * Removes all attributes from the selection.\n   *\n   * If there were any attributes in selection, fires the {@link #event:change} event with\n   * removed attributes' keys.\n   *\n   * @fires change:attribute\n   */\n\n\t}, {\n\t\tkey: 'clearAttributes',\n\t\tvalue: function clearAttributes() {\n\t\t\tif (this._attrs.size > 0) {\n\t\t\t\tvar attributeKeys = Array.from(this._attrs.keys());\n\t\t\t\tthis._attrs.clear();\n\n\t\t\t\tthis.fire('change:attribute', { attributeKeys: attributeKeys, directChange: true });\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Removes an attribute with given key from the selection.\n   *\n   * If given attribute was set on the selection, fires the {@link #event:change} event with\n   * removed attribute key.\n   *\n   * @fires change:attribute\n   * @param {String} key Key of attribute to remove.\n   */\n\n\t}, {\n\t\tkey: 'removeAttribute',\n\t\tvalue: function removeAttribute(key) {\n\t\t\tif (this.hasAttribute(key)) {\n\t\t\t\tthis._attrs.delete(key);\n\n\t\t\t\tthis.fire('change:attribute', { attributeKeys: [key], directChange: true });\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Sets attribute on the selection. If attribute with the same key already is set, it's value is overwritten.\n   *\n   * If the attribute value has changed, fires the {@link #event:change} event with\n   * the attribute key.\n   *\n   * @fires change:attribute\n   * @param {String} key Key of attribute to set.\n   * @param {*} value Attribute value.\n   */\n\n\t}, {\n\t\tkey: 'setAttribute',\n\t\tvalue: function setAttribute(key, value) {\n\t\t\tif (this.getAttribute(key) !== value) {\n\t\t\t\tthis._attrs.set(key, value);\n\n\t\t\t\tthis.fire('change:attribute', { attributeKeys: [key], directChange: true });\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Removes all attributes from the selection and sets given attributes.\n   *\n   * If given set of attributes is different than set of attributes already added to selection, fires\n   * {@link #event:change change event} with keys of attributes that changed.\n   *\n   * @fires event:change:attribute\n   * @param {Iterable|Object} attrs Iterable object containing attributes to be set.\n   */\n\n\t}, {\n\t\tkey: 'setAttributesTo',\n\t\tvalue: function setAttributesTo(attrs) {\n\t\t\tattrs = (0, _tomap2.default)(attrs);\n\n\t\t\tif (!(0, _mapsequal2.default)(attrs, this._attrs)) {\n\t\t\t\t// Create a set from keys of old and new attributes.\n\t\t\t\tvar changed = new Set(Array.from(attrs.keys()).concat(Array.from(this._attrs.keys())));\n\n\t\t\t\tvar _iteratorNormalCompletion7 = true;\n\t\t\t\tvar _didIteratorError7 = false;\n\t\t\t\tvar _iteratorError7 = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator7 = attrs[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n\t\t\t\t\t\tvar _ref = _step7.value;\n\n\t\t\t\t\t\tvar _ref2 = _slicedToArray(_ref, 2);\n\n\t\t\t\t\t\tvar key = _ref2[0];\n\t\t\t\t\t\tvar value = _ref2[1];\n\n\t\t\t\t\t\t// If the attribute remains unchanged, remove it from changed set.\n\t\t\t\t\t\tif (this._attrs.get(key) === value) {\n\t\t\t\t\t\t\tchanged.delete(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError7 = true;\n\t\t\t\t\t_iteratorError7 = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion7 && _iterator7.return) {\n\t\t\t\t\t\t\t_iterator7.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError7) {\n\t\t\t\t\t\t\tthrow _iteratorError7;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._attrs = attrs;\n\n\t\t\t\tthis.fire('change:attribute', { attributeKeys: Array.from(changed), directChange: true });\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Returns the selected element. {@link module:engine/model/element~Element Element} is considered as selected if there is only\n   * one range in the selection, and that range contains exactly one element.\n   * Returns `null` if there is no selected element.\n   *\n   * @returns {module:engine/model/element~Element|null}\n   */\n\n\t}, {\n\t\tkey: 'getSelectedElement',\n\t\tvalue: function getSelectedElement() {\n\t\t\tif (this.rangeCount !== 1) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar range = this.getFirstRange();\n\t\t\tvar nodeAfterStart = range.start.nodeAfter;\n\t\t\tvar nodeBeforeEnd = range.end.nodeBefore;\n\n\t\t\treturn nodeAfterStart instanceof _element2.default && nodeAfterStart == nodeBeforeEnd ? nodeAfterStart : null;\n\t\t}\n\n\t\t/**\n   * Gets elements of type \"block\" touched by the selection.\n   *\n   * This method's result can be used for example to apply block styling to all blocks covered by this selection.\n   *\n   * **Note:** `getSelectedBlocks()` always returns the deepest block.\n   *\n   * In this case the function will return exactly all 3 paragraphs:\n   *\n   *\t\t<paragraph>[a</paragraph>\n   *\t\t<quote>\n   *\t\t\t<paragraph>b</paragraph>\n   *\t\t</quote>\n   *\t\t<paragraph>c]d</paragraph>\n   *\n   * In this case the paragraph will also be returned, despite the collapsed selection:\n   *\n   *\t\t<paragraph>[]a</paragraph>\n   *\n   * **Special case**: If a selection ends at the beginning of a block, that block is not returned as from user perspective\n   * this block wasn't selected. See [#984](https://github.com/ckeditor/ckeditor5-engine/issues/984) for more details.\n   *\n   *\t\t<paragraph>[a</paragraph>\n   *\t\t<paragraph>b</paragraph>\n   *\t\t<paragraph>]c</paragraph> // this block will not be returned\n   *\n   * @returns {Iterator.<module:engine/model/element~Element>}\n   */\n\n\t}, {\n\t\tkey: 'getSelectedBlocks',\n\t\tvalue: regeneratorRuntime.mark(function getSelectedBlocks() {\n\t\t\tvar visited, _iteratorNormalCompletion8, _didIteratorError8, _iteratorError8, _iterator8, _step8, range, startBlock, _iteratorNormalCompletion9, _didIteratorError9, _iteratorError9, _iterator9, _step9, value, endBlock;\n\n\t\t\treturn regeneratorRuntime.wrap(function getSelectedBlocks$(_context2) {\n\t\t\t\twhile (1) {\n\t\t\t\t\tswitch (_context2.prev = _context2.next) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\tvisited = new WeakSet();\n\t\t\t\t\t\t\t_iteratorNormalCompletion8 = true;\n\t\t\t\t\t\t\t_didIteratorError8 = false;\n\t\t\t\t\t\t\t_iteratorError8 = undefined;\n\t\t\t\t\t\t\t_context2.prev = 4;\n\t\t\t\t\t\t\t_iterator8 = this.getRanges()[Symbol.iterator]();\n\n\t\t\t\t\t\tcase 6:\n\t\t\t\t\t\t\tif (_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done) {\n\t\t\t\t\t\t\t\t_context2.next = 46;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\trange = _step8.value;\n\t\t\t\t\t\t\tstartBlock = getParentBlock(range.start, visited);\n\n\t\t\t\t\t\t\tif (!startBlock) {\n\t\t\t\t\t\t\t\t_context2.next = 12;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_context2.next = 12;\n\t\t\t\t\t\t\treturn startBlock;\n\n\t\t\t\t\t\tcase 12:\n\t\t\t\t\t\t\t_iteratorNormalCompletion9 = true;\n\t\t\t\t\t\t\t_didIteratorError9 = false;\n\t\t\t\t\t\t\t_iteratorError9 = undefined;\n\t\t\t\t\t\t\t_context2.prev = 15;\n\t\t\t\t\t\t\t_iterator9 = range.getWalker()[Symbol.iterator]();\n\n\t\t\t\t\t\tcase 17:\n\t\t\t\t\t\t\tif (_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done) {\n\t\t\t\t\t\t\t\t_context2.next = 25;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvalue = _step9.value;\n\n\t\t\t\t\t\t\tif (!(value.type == 'elementEnd' && isUnvisitedBlockContainer(value.item, visited))) {\n\t\t\t\t\t\t\t\t_context2.next = 22;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_context2.next = 22;\n\t\t\t\t\t\t\treturn value.item;\n\n\t\t\t\t\t\tcase 22:\n\t\t\t\t\t\t\t_iteratorNormalCompletion9 = true;\n\t\t\t\t\t\t\t_context2.next = 17;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 25:\n\t\t\t\t\t\t\t_context2.next = 31;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 27:\n\t\t\t\t\t\t\t_context2.prev = 27;\n\t\t\t\t\t\t\t_context2.t0 = _context2['catch'](15);\n\t\t\t\t\t\t\t_didIteratorError9 = true;\n\t\t\t\t\t\t\t_iteratorError9 = _context2.t0;\n\n\t\t\t\t\t\tcase 31:\n\t\t\t\t\t\t\t_context2.prev = 31;\n\t\t\t\t\t\t\t_context2.prev = 32;\n\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion9 && _iterator9.return) {\n\t\t\t\t\t\t\t\t_iterator9.return();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase 34:\n\t\t\t\t\t\t\t_context2.prev = 34;\n\n\t\t\t\t\t\t\tif (!_didIteratorError9) {\n\t\t\t\t\t\t\t\t_context2.next = 37;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthrow _iteratorError9;\n\n\t\t\t\t\t\tcase 37:\n\t\t\t\t\t\t\treturn _context2.finish(34);\n\n\t\t\t\t\t\tcase 38:\n\t\t\t\t\t\t\treturn _context2.finish(31);\n\n\t\t\t\t\t\tcase 39:\n\t\t\t\t\t\t\tendBlock = getParentBlock(range.end, visited);\n\n\t\t\t\t\t\t\t// #984. Don't return the end block if the range ends right at its beginning.\n\n\t\t\t\t\t\t\tif (!(endBlock && !range.end.isTouching(_position2.default.createAt(endBlock)))) {\n\t\t\t\t\t\t\t\t_context2.next = 43;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_context2.next = 43;\n\t\t\t\t\t\t\treturn endBlock;\n\n\t\t\t\t\t\tcase 43:\n\t\t\t\t\t\t\t_iteratorNormalCompletion8 = true;\n\t\t\t\t\t\t\t_context2.next = 6;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 46:\n\t\t\t\t\t\t\t_context2.next = 52;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 48:\n\t\t\t\t\t\t\t_context2.prev = 48;\n\t\t\t\t\t\t\t_context2.t1 = _context2['catch'](4);\n\t\t\t\t\t\t\t_didIteratorError8 = true;\n\t\t\t\t\t\t\t_iteratorError8 = _context2.t1;\n\n\t\t\t\t\t\tcase 52:\n\t\t\t\t\t\t\t_context2.prev = 52;\n\t\t\t\t\t\t\t_context2.prev = 53;\n\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion8 && _iterator8.return) {\n\t\t\t\t\t\t\t\t_iterator8.return();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase 55:\n\t\t\t\t\t\t\t_context2.prev = 55;\n\n\t\t\t\t\t\t\tif (!_didIteratorError8) {\n\t\t\t\t\t\t\t\t_context2.next = 58;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthrow _iteratorError8;\n\n\t\t\t\t\t\tcase 58:\n\t\t\t\t\t\t\treturn _context2.finish(55);\n\n\t\t\t\t\t\tcase 59:\n\t\t\t\t\t\t\treturn _context2.finish(52);\n\n\t\t\t\t\t\tcase 60:\n\t\t\t\t\t\tcase 'end':\n\t\t\t\t\t\t\treturn _context2.stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, getSelectedBlocks, this, [[4, 48, 52, 60], [15, 27, 31, 39], [32,, 34, 38], [53,, 55, 59]]);\n\t\t})\n\n\t\t/**\n   * Creates and returns an instance of `Selection` that is a clone of given selection, meaning that it has same\n   * ranges and same direction as this selection.\n   *\n   * @params {module:engine/model/selection~Selection} otherSelection Selection to be cloned.\n   * @returns {module:engine/model/selection~Selection} `Selection` instance that is a clone of given selection.\n   */\n\n\t}, {\n\t\tkey: '_pushRange',\n\n\n\t\t/**\n   * Adds given range to internal {@link #_ranges ranges array}. Throws an error\n   * if given range is intersecting with any range that is already stored in this selection.\n   *\n   * @protected\n   * @param {module:engine/model/range~Range} range Range to add.\n   */\n\t\tvalue: function _pushRange(range) {\n\t\t\tif (!(range instanceof _range2.default)) {\n\t\t\t\tthrow new _ckeditorerror2.default('model-selection-added-not-range: Trying to add an object that is not an instance of Range.');\n\t\t\t}\n\n\t\t\tthis._checkRange(range);\n\t\t\tthis._ranges.push(_range2.default.createFromRange(range));\n\t\t}\n\n\t\t/**\n   * Checks if given range intersects with ranges that are already in the selection. Throws an error if it does.\n   *\n   * @protected\n   * @param {module:engine/model/range~Range} range Range to check.\n   */\n\n\t}, {\n\t\tkey: '_checkRange',\n\t\tvalue: function _checkRange(range) {\n\t\t\tfor (var i = 0; i < this._ranges.length; i++) {\n\t\t\t\tif (range.isIntersecting(this._ranges[i])) {\n\t\t\t\t\t/**\n      * Trying to add a range that intersects with another range from selection.\n      *\n      * @error selection-range-intersects\n      * @param {module:engine/model/range~Range} addedRange Range that was added to the selection.\n      * @param {module:engine/model/range~Range} intersectingRange Range from selection that intersects with `addedRange`.\n      */\n\t\t\t\t\tthrow new _ckeditorerror2.default('model-selection-range-intersects: Trying to add a range that intersects with another range from selection.', { addedRange: range, intersectingRange: this._ranges[i] });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Removes most recently added range from the selection.\n   *\n   * @protected\n   */\n\n\t}, {\n\t\tkey: '_popRange',\n\t\tvalue: function _popRange() {\n\t\t\tthis._ranges.pop();\n\t\t}\n\n\t\t/**\n   * Deletes ranges from internal range array. Uses {@link #_popRange _popRange} to\n   * ensure proper ranges removal.\n   *\n   * @private\n   */\n\n\t}, {\n\t\tkey: '_removeAllRanges',\n\t\tvalue: function _removeAllRanges() {\n\t\t\twhile (this._ranges.length > 0) {\n\t\t\t\tthis._popRange();\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @event change\n   */\n\n\t\t/**\n   * Fired whenever selection ranges are changed.\n   *\n   * @event change:range\n   * @param {Boolean} directChange Specifies whether the range change was caused by direct usage of `Selection` API (`true`)\n   * or by changes done to {@link module:engine/model/document~Document model document}\n   * using {@link module:engine/model/batch~Batch Batch} API (`false`).\n   */\n\n\t\t/**\n   * Fired whenever selection attributes are changed.\n   *\n   * @event change:attribute\n   * @param {Boolean} directChange Specifies whether the attributes changed by direct usage of the Selection API (`true`)\n   * or by changes done to the {@link module:engine/model/document~Document model document}\n   * using the {@link module:engine/model/batch~Batch Batch} API (`false`).\n   * @param {Array.<String>} attributeKeys Array containing keys of attributes that changed.\n   */\n\n\t}, {\n\t\tkey: 'anchor',\n\t\tget: function get() {\n\t\t\tif (this._ranges.length > 0) {\n\t\t\t\tvar range = this._ranges[this._ranges.length - 1];\n\n\t\t\t\treturn this._lastRangeBackward ? range.end : range.start;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n   * Selection focus. Focus is a position where the selection ends.\n   *\n   * Is set to `null` if there are no ranges in selection.\n   *\n   * @see #anchor\n   * @readonly\n   * @type {module:engine/model/position~Position|null}\n   */\n\n\t}, {\n\t\tkey: 'focus',\n\t\tget: function get() {\n\t\t\tif (this._ranges.length > 0) {\n\t\t\t\tvar range = this._ranges[this._ranges.length - 1];\n\n\t\t\t\treturn this._lastRangeBackward ? range.start : range.end;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n   * Returns whether the selection is collapsed. Selection is collapsed when there is exactly one range which is\n   * collapsed.\n   *\n   * @readonly\n   * @type {Boolean}\n   */\n\n\t}, {\n\t\tkey: 'isCollapsed',\n\t\tget: function get() {\n\t\t\tvar length = this._ranges.length;\n\n\t\t\tif (length === 1) {\n\t\t\t\treturn this._ranges[0].isCollapsed;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Returns number of ranges in selection.\n   *\n   * @type {Number}\n   */\n\n\t}, {\n\t\tkey: 'rangeCount',\n\t\tget: function get() {\n\t\t\treturn this._ranges.length;\n\t\t}\n\n\t\t/**\n   * Specifies whether the {@link #focus}\n   * precedes {@link #anchor}.\n   *\n   * @type {Boolean}\n   */\n\n\t}, {\n\t\tkey: 'isBackward',\n\t\tget: function get() {\n\t\t\treturn !this.isCollapsed && this._lastRangeBackward;\n\t\t}\n\t}], [{\n\t\tkey: 'createFromSelection',\n\t\tvalue: function createFromSelection(otherSelection) {\n\t\t\tvar selection = new this();\n\t\t\tselection.setTo(otherSelection);\n\n\t\t\treturn selection;\n\t\t}\n\t}]);\n\n\treturn Selection;\n}();\n\nexports.default = Selection;\n\n\n(0, _mix2.default)(Selection, _emittermixin2.default);\n\n// Checks whether the given element extends $block in the schema and has a parent (is not a root).\n// Marks it as already visited.\nfunction isUnvisitedBlockContainer(element, visited) {\n\tif (visited.has(element)) {\n\t\treturn false;\n\t}\n\n\tvisited.add(element);\n\n\t// TODO https://github.com/ckeditor/ckeditor5-engine/issues/532#issuecomment-278900072.\n\t// This should not be a `$block` check.\n\treturn element.document.schema.itemExtends(element.name, '$block') && element.parent;\n}\n\n// Finds the lowest element in position's ancestors which is a block.\n// Marks all ancestors as already visited to not include any of them later on.\nfunction getParentBlock(position, visited) {\n\tvar ancestors = position.parent.getAncestors({ parentFirst: true, includeSelf: true });\n\tvar block = ancestors.find(function (element) {\n\t\treturn isUnvisitedBlockContainer(element, visited);\n\t});\n\n\t// Mark all ancestors of this position's parent, because find() might've stopped early and\n\t// the found block may be a child of another block.\n\tancestors.forEach(function (element) {\n\t\treturn visited.add(element);\n\t});\n\n\treturn block;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/selection.js\n// module id = 81\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _containerelement = require('./containerelement');\n\nvar _containerelement2 = _interopRequireDefault(_containerelement);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nvar _mix = require('@ckeditor/ckeditor5-utils/src/mix');\n\nvar _mix2 = _interopRequireDefault(_mix);\n\nvar _observablemixin = require('@ckeditor/ckeditor5-utils/src/observablemixin');\n\nvar _observablemixin2 = _interopRequireDefault(_observablemixin);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/view/editableelement\n */\n\nvar documentSymbol = Symbol('document');\n\n/**\n * Editable element which can be a {@link module:engine/view/rooteditableelement~RootEditableElement root}\n * or nested editable area in the editor.\n *\n * Editable is automatically read-only when its {module:engine/view/document~Document Document} is read-only.\n *\n * @extends module:engine/view/containerelement~ContainerElement\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar EditableElement = function (_ContainerElement) {\n\t_inherits(EditableElement, _ContainerElement);\n\n\t/**\n  * Creates an editable element.\n  */\n\tfunction EditableElement(name, attrs, children) {\n\t\t_classCallCheck(this, EditableElement);\n\n\t\t/**\n   * Whether the editable is in read-write or read-only mode.\n   *\n   * @observable\n   * @member {Boolean} module:engine/view/editableelement~EditableElement#isReadOnly\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (EditableElement.__proto__ || Object.getPrototypeOf(EditableElement)).call(this, name, attrs, children));\n\n\t\t_this.set('isReadOnly', false);\n\n\t\t/**\n   * Whether the editable is focused.\n   *\n   * This property updates when {@link module:engine/view/document~Document#isFocused document.isFocused} is changed and after each\n   * {@link module:engine/view/document~Document#render render} method call.\n   *\n   * @readonly\n   * @observable\n   * @member {Boolean} module:engine/view/editableelement~EditableElement#isFocused\n   */\n\t\t_this.set('isFocused', false);\n\n\t\t/**\n   * The {@link module:engine/view/document~Document} which is an owner of this root.\n   * Can only by set once.\n   * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-editableelement-document-already-set`\n   * when document is already set.\n   *\n   * @member {module:engine/view/document~Document} #document\n   */\n\t\treturn _this;\n\t}\n\n\t_createClass(EditableElement, [{\n\t\tkey: 'document',\n\t\tget: function get() {\n\t\t\treturn this.getCustomProperty(documentSymbol);\n\t\t},\n\t\tset: function set(document) {\n\t\t\tvar _this2 = this;\n\n\t\t\tif (this.getCustomProperty(documentSymbol)) {\n\t\t\t\t/**\n     * View document is already set. It can only be set once.\n     *\n     * @error view-editableelement-document-already-set\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('view-editableelement-document-already-set: View document is already set.');\n\t\t\t}\n\n\t\t\tthis.setCustomProperty(documentSymbol, document);\n\n\t\t\tthis.bind('isReadOnly').to(document);\n\n\t\t\tthis.bind('isFocused').to(document, 'isFocused', function (isFocused) {\n\t\t\t\treturn isFocused && document.selection.editableElement == _this2;\n\t\t\t});\n\n\t\t\t// Update focus state before each rendering. Rendering should not change neither the selection nor the value of\n\t\t\t// document.isFocused property.\n\t\t\tthis.listenTo(document, 'render', function () {\n\t\t\t\t_this2.isFocused = document.isFocused && document.selection.editableElement == _this2;\n\t\t\t}, { priority: 'high' });\n\t\t}\n\t}]);\n\n\treturn EditableElement;\n}(_containerelement2.default);\n\nexports.default = EditableElement;\n\n\n(0, _mix2.default)(EditableElement, _observablemixin2.default);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/view/editableelement.js\n// module id = 82\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\nn\n/**\n * @module engine/view/node\n */\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nvar _emittermixin = require('@ckeditor/ckeditor5-utils/src/emittermixin');\n\nvar _emittermixin2 = _interopRequireDefault(_emittermixin);\n\nvar _mix = require('@ckeditor/ckeditor5-utils/src/mix');\n\nvar _mix2 = _interopRequireDefault(_mix);\n\nvar _clone = require('@ckeditor/ckeditor5-utils/src/lib/lodash/clone');\n\nvar _clone2 = _interopRequireDefault(_clone);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Abstract tree view node class.\n *\n * @abstract\n */\nvar Node = function () {\n\t/**\n  * Creates a tree view node.\n  *\n  * This is an abstract class, so this constructor should not be used directly.\n  */\n\tfunction Node() {\n\t\t_classCallCheck(this, Node);\n\n\t\t/**\n   * Parent element. Null by default. Set by {@link module:engine/view/element~Element#insertChildren}.\n   *\n   * @readonly\n   * @member {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|null}\n   */\n\t\tthis.parent = null;\n\t}\n\n\t/**\n  * Index of the node in the parent element or null if the node has no parent.\n  *\n  * Accessing this property throws an error if this node's parent element does not contain it.\n  * This means that view tree got broken.\n  *\n  * @readonly\n  * @type {Number|null}\n  */\n\n\n\t_createClass(Node, [{\n\t\tkey: 'getAncestors',\n\n\n\t\t/**\n   * Returns ancestors array of this node.\n   *\n   * @param {Object} options Options object.\n   * @param {Boolean} [options.includeSelf=false] When set to `true` this node will be also included in parent's array.\n   * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from node's parent to root element,\n   * otherwise root element will be the first item in the array.\n   * @returns {Array} Array with ancestors.\n   */\n\t\tvalue: function getAncestors() {\n\t\t\tvar options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { includeSelf: false, parentFirst: false };\n\n\t\t\tvar ancestors = [];\n\t\t\tvar parent = options.includeSelf ? this : this.parent;\n\n\t\t\twhile (parent) {\n\t\t\t\tancestors[options.parentFirst ? 'push' : 'unshift'](parent);\n\t\t\t\tparent = parent.parent;\n\t\t\t}\n\n\t\t\treturn ancestors;\n\t\t}\n\n\t\t/**\n   * Returns a {@link module:engine/view/element~Element} or {@link module:engine/view/documentfragment~DocumentFragment}\n   * which is a common ancestor of both nodes.\n   *\n   * @param {module:engine/view/node~Node} node The second node.\n   * @param {Object} options Options object.\n   * @param {Boolean} [options.includeSelf=false] When set to `true` both nodes will be considered \"ancestors\" too.\n   * Which means that if e.g. node A is inside B, then their common ancestor will be B.\n   * @returns {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|null}\n   */\n\n\t}, {\n\t\tkey: 'getCommonAncestor',\n\t\tvalue: function getCommonAncestor(node) {\n\t\t\tvar options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\t\tvar ancestorsA = this.getAncestors(options);\n\t\t\tvar ancestorsB = node.getAncestors(options);\n\n\t\t\tvar i = 0;\n\n\t\t\twhile (ancestorsA[i] == ancestorsB[i] && ancestorsA[i]) {\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\treturn i === 0 ? null : ancestorsA[i - 1];\n\t\t}\n\n\t\t/**\n   * Removes node from parent.\n   */\n\n\t}, {\n\t\tkey: 'remove',\n\t\tvalue: function remove() {\n\t\t\tthis.parent.removeChildren(this.index);\n\t\t}\n\n\t\t/**\n   * @param {module:engine/view/document~ChangeType} type Type of the change.\n   * @param {module:engine/view/node~Node} node Changed node.\n   * @fires change\n   */\n\n\t}, {\n\t\tkey: '_fireChange',\n\t\tvalue: function _fireChange(type, node) {\n\t\t\tthis.fire('change:' + type, node);\n\n\t\t\tif (this.parent) {\n\t\t\t\tthis.parent._fireChange(type, node);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Custom toJSON method to solve child-parent circular dependencies.\n   *\n   * @returns {Object} Clone of this object with the parent property removed.\n   */\n\n\t}, {\n\t\tkey: 'toJSON',\n\t\tvalue: function toJSON() {\n\t\t\tvar json = (0, _clone2.default)(this);\n\n\t\t\t// Due to circular references we need to remove parent reference.\n\t\t\tdelete json.parent;\n\n\t\t\treturn json;\n\t\t}\n\n\t\t/**\n   * Clones this node.\n   *\n   * @method #clone\n   * @returns {module:engine/view/node~Node} Clone of this node.\n   */\n\n\t\t/**\n   * Checks if provided node is similar to this node.\n   *\n   * @method #isSimilar\n   * @returns {Boolean} True if nodes are similar.\n   */\n\n\t\t/**\n   * Checks whether given view tree object is of given type.\n   *\n   * This method is useful when processing view tree objects that are of unknown type. For example, a function\n   * may return {@link module:engine/view/documentfragment~DocumentFragment} or {@link module:engine/view/node~Node}\n   * that can be either text node or element. This method can be used to check what kind of object is returned.\n   *\n   *\t\tobj.is( 'node' ); // true for any node, false for document fragment\n   *\t\tobj.is( 'documentFragment' ); // true for document fragment, false for any node\n   *\t\tobj.is( 'element' ); // true for any element, false for text node or document fragment\n   *\t\tobj.is( 'element', 'p' ); // true only for element which name is 'p'\n   *\t\tobj.is( 'p' ); // shortcut for obj.is( 'element', 'p' )\n   *\t\tobj.is( 'text' ); // true for text node, false for element and document fragment\n   *\n   * @method #is\n   * @param {'element'|'containerElement'|'attributeElement'|'emptyElement'|'uiElement'|\n   * 'rootElement'|'documentFragment'|'text'|'textProxy'} type\n   * @returns {Boolean}\n   */\n\n\t}, {\n\t\tkey: 'index',\n\t\tget: function get() {\n\t\t\tvar pos = void 0;\n\n\t\t\tif (!this.parent) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// No parent or child doesn't exist in parent's children.\n\t\t\tif ((pos = this.parent.getChildIndex(this)) == -1) {\n\t\t\t\t/**\n     * The node's parent does not contain this node. It means that the document tree is corrupted.\n     *\n     * @error view-node-not-found-in-parent\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('view-node-not-found-in-parent: The node\\'s parent does not contain this node.');\n\t\t\t}\n\n\t\t\treturn pos;\n\t\t}\n\n\t\t/**\n   * Node's next sibling, or `null` if it is the last child.\n   *\n   * @readonly\n   * @type {module:engine/view/node~Node|null}\n   */\n\n\t}, {\n\t\tkey: 'nextSibling',\n\t\tget: function get() {\n\t\t\tvar index = this.index;\n\n\t\t\treturn index !== null && this.parent.getChild(index + 1) || null;\n\t\t}\n\n\t\t/**\n   * Node's previous sibling, or `null` if it is the first child.\n   *\n   * @readonly\n   * @type {module:engine/view/node~Node|null}\n   */\n\n\t}, {\n\t\tkey: 'previousSibling',\n\t\tget: function get() {\n\t\t\tvar index = this.index;\n\n\t\t\treturn index !== null && this.parent.getChild(index - 1) || null;\n\t\t}\n\n\t\t/**\n   * Top-most ancestor of the node. If the node has no parent it is the root itself.\n   *\n   * @readonly\n   * @type {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n   */\n\n\t}, {\n\t\tkey: 'root',\n\t\tget: function get() {\n\t\t\tvar root = this; // eslint-disable-line consistent-this\n\n\t\t\twhile (root.parent) {\n\t\t\t\troot = root.parent;\n\t\t\t}\n\n\t\t\treturn root;\n\t\t}\n\n\t\t/**\n   * {@link module:engine/view/document~Document View document} that owns this node, or `null` if the node is inside\n   * {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\n   *\n   * @readonly\n   * @type {module:engine/view/document~Document|null}\n   */\n\n\t}, {\n\t\tkey: 'document',\n\t\tget: function get() {\n\t\t\t// Parent might be Node, null or DocumentFragment.\n\t\t\tif (this.parent instanceof Node) {\n\t\t\t\treturn this.parent.document;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn Node;\n}();\n\n/**\n * Fired when list of {@link module:engine/view/element~Element elements} children changes.\n *\n * Change event is bubbled – it is fired on all ancestors.\n *\n * @event change:children\n * @param {module:engine/view/node~Node} changedNode\n */\n\n/**\n * Fired when list of {@link module:engine/view/element~Element elements} attributes changes.\n *\n * Change event is bubbled – it is fired on all ancestors.\n *\n * @event change:attributes\n * @param {module:engine/view/node~Node} changedNode\n */\n\n/**\n * Fired when {@link module:engine/view/text~Text text nodes} data changes.\n *\n * Change event is bubbled – it is fired on all ancestors.\n *\n * @event change:text\n * @param {module:engine/view/node~Node} changedNode\n */\n\n/**\n * @event change\n */\n\nexports.default = Node;\n(0, _mix2.default)(Node, _emittermixin2.default);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/view/node.js\n// module id = 83\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\nn\n/**\n * @module engine/view/selection\n */\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nvar _range = require('./range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _position = require('./position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _mix = require('@ckeditor/ckeditor5-utils/src/mix');\n\nvar _mix2 = _interopRequireDefault(_mix);\n\nvar _emittermixin = require('@ckeditor/ckeditor5-utils/src/emittermixin');\n\nvar _emittermixin2 = _interopRequireDefault(_emittermixin);\n\nvar _element = require('./element');\n\nvar _element2 = _interopRequireDefault(_element);\n\nvar _count = require('@ckeditor/ckeditor5-utils/src/count');\n\nvar _count2 = _interopRequireDefault(_count);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Class representing selection in tree view.\n *\n * Selection can consist of {@link module:engine/view/range~Range ranges} that can be added using\n * {@link module:engine/view/selection~Selection#addRange addRange}\n * and {@link module:engine/view/selection~Selection#setRanges setRanges} methods.\n * Both methods create copies of provided ranges and store those copies internally. Further modifications to passed\n * ranges will not change selection's state.\n * Selection's ranges can be obtained via {@link module:engine/view/selection~Selection#getRanges getRanges},\n * {@link module:engine/view/selection~Selection#getFirstRange getFirstRange}\n * and {@link module:engine/view/selection~Selection#getLastRange getLastRange}\n * methods, which return copies of ranges stored inside selection. Modifications made on these copies will not change\n * selection's state. Similar situation occurs when getting {@link module:engine/view/selection~Selection#anchor anchor},\n * {@link module:engine/view/selection~Selection#focus focus}, {@link module:engine/view/selection~Selection#getFirstPosition first} and\n * {@link module:engine/view/selection~Selection#getLastPosition last} positions - all will return copies of requested positions.\n */\nvar Selection = function () {\n\t/**\n  * Creates new selection instance.\n  *\n  * @param {Iterable.<module:engine/view/range~Range>} [ranges] An optional array of ranges to set.\n  * @param {Boolean} [isLastBackward] An optional flag describing if last added range was selected forward - from start to end\n  * (`false`) or backward - from end to start (`true`). Defaults to `false`.\n  */\n\tfunction Selection(ranges, isLastBackward) {\n\t\t_classCallCheck(this, Selection);\n\n\t\t/**\n   * Stores all ranges that are selected.\n   *\n   * @protected\n   * @member {Array.<module:engine/view/range~Range>}\n   */\n\t\tthis._ranges = [];\n\n\t\t/**\n   * Specifies whether the last added range was added as a backward or forward range.\n   *\n   * @protected\n   * @member {Boolean}\n   */\n\t\tthis._lastRangeBackward = false;\n\n\t\t/**\n   * Specifies whether selection instance is fake.\n   *\n   * @private\n   * @member {Boolean}\n   */\n\t\tthis._isFake = false;\n\n\t\t/**\n   * Fake selection's label.\n   *\n   * @private\n   * @member {String}\n   */\n\t\tthis._fakeSelectionLabel = '';\n\n\t\tif (ranges) {\n\t\t\tthis.setRanges(ranges, isLastBackward);\n\t\t}\n\t}\n\n\t/**\n  * Sets this selection instance to be marked as `fake`. A fake selection does not render as browser native selection\n  * over selected elements and is hidden to the user. This way, no native selection UI artifacts are displayed to\n  * the user and selection over elements can be represented in other way, for example by applying proper CSS class.\n  *\n  * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM (and be\n  * properly handled by screen readers).\n  *\n  * @fires change\n  * @param {Boolean} [value=true] If set to true selection will be marked as `fake`.\n  * @param {Object} [options] Additional options.\n  * @param {String} [options.label=''] Fake selection label.\n  */\n\n\n\t_createClass(Selection, [{\n\t\tkey: 'setFake',\n\t\tvalue: function setFake() {\n\t\t\tvar value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\t\t\tvar options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\t\tthis._isFake = value;\n\t\t\tthis._fakeSelectionLabel = value ? options.label || '' : '';\n\n\t\t\tthis.fire('change');\n\t\t}\n\n\t\t/**\n   * Returns true if selection instance is marked as `fake`.\n   *\n   * @see #setFake\n   * @returns {Boolean}\n   */\n\n\t}, {\n\t\tkey: 'addRange',\n\n\n\t\t/**\n   * Adds a range to the selection. Added range is copied. This means that passed range is not saved in the\n   * selection instance and you can safely operate on it.\n   *\n   * Accepts a flag describing in which way the selection is made - passed range might be selected from\n   * {@link module:engine/view/range~Range#start start} to {@link module:engine/view/range~Range#end end}\n   * or from {@link module:engine/view/range~Range#end end} to {@link module:engine/view/range~Range#start start}.\n   * The flag is used to set {@link #anchor anchor} and {@link #focus focus} properties.\n   *\n   * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-selection-range-intersects` if added range intersects\n   * with ranges already stored in Selection instance.\n   *\n   * @fires change\n   * @param {module:engine/view/range~Range} range\n   * @param {Boolean} isBackward\n   */\n\t\tvalue: function addRange(range, isBackward) {\n\t\t\tif (!(range instanceof _range2.default)) {\n\t\t\t\tthrow new _ckeditorerror2.default('view-selection-invalid-range: Invalid Range.');\n\t\t\t}\n\n\t\t\tthis._pushRange(range);\n\t\t\tthis._lastRangeBackward = !!isBackward;\n\t\t\tthis.fire('change');\n\t\t}\n\n\t\t/**\n   * Returns an iterator that contains copies of all ranges added to the selection.\n   *\n   * @returns {Iterator.<module:engine/view/range~Range>}\n   */\n\n\t}, {\n\t\tkey: 'getRanges',\n\t\tvalue: regeneratorRuntime.mark(function getRanges() {\n\t\t\tvar _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, range;\n\n\t\t\treturn regeneratorRuntime.wrap(function getRanges$(_context) {\n\t\t\t\twhile (1) {\n\t\t\t\t\tswitch (_context.prev = _context.next) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t_iteratorNormalCompletion = true;\n\t\t\t\t\t\t\t_didIteratorError = false;\n\t\t\t\t\t\t\t_iteratorError = undefined;\n\t\t\t\t\t\t\t_context.prev = 3;\n\t\t\t\t\t\t\t_iterator = this._ranges[Symbol.iterator]();\n\n\t\t\t\t\t\tcase 5:\n\t\t\t\t\t\t\tif (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n\t\t\t\t\t\t\t\t_context.next = 12;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\trange = _step.value;\n\t\t\t\t\t\t\t_context.next = 9;\n\t\t\t\t\t\t\treturn _range2.default.createFromRange(range);\n\n\t\t\t\t\t\tcase 9:\n\t\t\t\t\t\t\t_iteratorNormalCompletion = true;\n\t\t\t\t\t\t\t_context.next = 5;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 12:\n\t\t\t\t\t\t\t_context.next = 18;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 14:\n\t\t\t\t\t\t\t_context.prev = 14;\n\t\t\t\t\t\t\t_context.t0 = _context['catch'](3);\n\t\t\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t\t\t_iteratorError = _context.t0;\n\n\t\t\t\t\t\tcase 18:\n\t\t\t\t\t\t\t_context.prev = 18;\n\t\t\t\t\t\t\t_context.prev = 19;\n\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase 21:\n\t\t\t\t\t\t\t_context.prev = 21;\n\n\t\t\t\t\t\t\tif (!_didIteratorError) {\n\t\t\t\t\t\t\t\t_context.next = 24;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthrow _iteratorError;\n\n\t\t\t\t\t\tcase 24:\n\t\t\t\t\t\t\treturn _context.finish(21);\n\n\t\t\t\t\t\tcase 25:\n\t\t\t\t\t\t\treturn _context.finish(18);\n\n\t\t\t\t\t\tcase 26:\n\t\t\t\t\t\tcase 'end':\n\t\t\t\t\t\t\treturn _context.stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, getRanges, this, [[3, 14, 18, 26], [19,, 21, 25]]);\n\t\t})\n\n\t\t/**\n   * Returns copy of the first range in the selection. First range is the one which\n   * {@link module:engine/view/range~Range#start start} position {@link module:engine/view/position~Position#isBefore is before} start\n   * position of all other ranges (not to confuse with the first range added to the selection).\n   * Returns `null` if no ranges are added to selection.\n   *\n   * @returns {module:engine/view/range~Range|null}\n   */\n\n\t}, {\n\t\tkey: 'getFirstRange',\n\t\tvalue: function getFirstRange() {\n\t\t\tvar first = null;\n\n\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\tvar _didIteratorError2 = false;\n\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator2 = this._ranges[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\tvar range = _step2.value;\n\n\t\t\t\t\tif (!first || range.start.isBefore(first.start)) {\n\t\t\t\t\t\tfirst = range;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t_iteratorError2 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn first ? _range2.default.createFromRange(first) : null;\n\t\t}\n\n\t\t/**\n   * Returns copy of the last range in the selection. Last range is the one which {@link module:engine/view/range~Range#end end}\n   * position {@link module:engine/view/position~Position#isAfter is after} end position of all other ranges (not to confuse\n   * with the last range added to the selection). Returns `null` if no ranges are added to selection.\n   *\n   * @returns {module:engine/view/range~Range|null}\n   */\n\n\t}, {\n\t\tkey: 'getLastRange',\n\t\tvalue: function getLastRange() {\n\t\t\tvar last = null;\n\n\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\tvar _didIteratorError3 = false;\n\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator3 = this._ranges[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\tvar range = _step3.value;\n\n\t\t\t\t\tif (!last || range.end.isAfter(last.end)) {\n\t\t\t\t\t\tlast = range;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t_iteratorError3 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn last ? _range2.default.createFromRange(last) : null;\n\t\t}\n\n\t\t/**\n   * Returns copy of the first position in the selection. First position is the position that\n   * {@link module:engine/view/position~Position#isBefore is before} any other position in the selection ranges.\n   * Returns `null` if no ranges are added to selection.\n   *\n   * @returns {module:engine/view/position~Position|null}\n   */\n\n\t}, {\n\t\tkey: 'getFirstPosition',\n\t\tvalue: function getFirstPosition() {\n\t\t\tvar firstRange = this.getFirstRange();\n\n\t\t\treturn firstRange ? _position2.default.createFromPosition(firstRange.start) : null;\n\t\t}\n\n\t\t/**\n   * Returns copy of the last position in the selection. Last position is the position that\n   * {@link module:engine/view/position~Position#isAfter is after} any other position in the selection ranges.\n   * Returns `null` if no ranges are added to selection.\n   *\n   * @returns {module:engine/view/position~Position|null}\n   */\n\n\t}, {\n\t\tkey: 'getLastPosition',\n\t\tvalue: function getLastPosition() {\n\t\t\tvar lastRange = this.getLastRange();\n\n\t\t\treturn lastRange ? _position2.default.createFromPosition(lastRange.end) : null;\n\t\t}\n\n\t\t/**\n   * Checks whether, this selection is equal to given selection. Selections are equal if they have same directions,\n   * same number of ranges and all ranges from one selection equal to a range from other selection.\n   *\n   * @param {module:engine/view/selection~Selection} otherSelection Selection to compare with.\n   * @returns {Boolean} `true` if selections are equal, `false` otherwise.\n   */\n\n\t}, {\n\t\tkey: 'isEqual',\n\t\tvalue: function isEqual(otherSelection) {\n\t\t\tif (this.isFake != otherSelection.isFake) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.isFake && this.fakeSelectionLabel != otherSelection.fakeSelectionLabel) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.rangeCount != otherSelection.rangeCount) {\n\t\t\t\treturn false;\n\t\t\t} else if (this.rangeCount === 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (!this.anchor.isEqual(otherSelection.anchor) || !this.focus.isEqual(otherSelection.focus)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar _iteratorNormalCompletion4 = true;\n\t\t\tvar _didIteratorError4 = false;\n\t\t\tvar _iteratorError4 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator4 = this._ranges[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\t\t\tvar thisRange = _step4.value;\n\n\t\t\t\t\tvar found = false;\n\n\t\t\t\t\tvar _iteratorNormalCompletion5 = true;\n\t\t\t\t\tvar _didIteratorError5 = false;\n\t\t\t\t\tvar _iteratorError5 = undefined;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (var _iterator5 = otherSelection._ranges[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t\t\t\t\t\t\tvar otherRange = _step5.value;\n\n\t\t\t\t\t\t\tif (thisRange.isEqual(otherRange)) {\n\t\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t_didIteratorError5 = true;\n\t\t\t\t\t\t_iteratorError5 = err;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t\t\t\t\t\t\t\t_iterator5.return();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (_didIteratorError5) {\n\t\t\t\t\t\t\t\tthrow _iteratorError5;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!found) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError4 = true;\n\t\t\t\t_iteratorError4 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t\t\t_iterator4.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError4) {\n\t\t\t\t\t\tthrow _iteratorError4;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n   * Checks whether this selection is similar to given selection. Selections are similar if they have same directions, same\n   * number of ranges, and all {@link module:engine/view/range~Range#getTrimmed trimmed} ranges from one selection are\n   * equal to any trimmed range from other selection.\n   *\n   * @param {module:engine/view/selection~Selection} otherSelection Selection to compare with.\n   * @returns {Boolean} `true` if selections are similar, `false` otherwise.\n   */\n\n\t}, {\n\t\tkey: 'isSimilar',\n\t\tvalue: function isSimilar(otherSelection) {\n\t\t\tif (this.isBackward != otherSelection.isBackward) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar numOfRangesA = (0, _count2.default)(this.getRanges());\n\t\t\tvar numOfRangesB = (0, _count2.default)(otherSelection.getRanges());\n\n\t\t\t// If selections have different number of ranges, they cannot be similar.\n\t\t\tif (numOfRangesA != numOfRangesB) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// If both selections have no ranges, they are similar.\n\t\t\tif (numOfRangesA == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Check if each range in one selection has a similar range in other selection.\n\t\t\tvar _iteratorNormalCompletion6 = true;\n\t\t\tvar _didIteratorError6 = false;\n\t\t\tvar _iteratorError6 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator6 = this.getRanges()[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t\t\t\t\tvar rangeA = _step6.value;\n\n\t\t\t\t\trangeA = rangeA.getTrimmed();\n\n\t\t\t\t\tvar found = false;\n\n\t\t\t\t\tvar _iteratorNormalCompletion7 = true;\n\t\t\t\t\tvar _didIteratorError7 = false;\n\t\t\t\t\tvar _iteratorError7 = undefined;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (var _iterator7 = otherSelection.getRanges()[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n\t\t\t\t\t\t\tvar rangeB = _step7.value;\n\n\t\t\t\t\t\t\trangeB = rangeB.getTrimmed();\n\n\t\t\t\t\t\t\tif (rangeA.start.isEqual(rangeB.start) && rangeA.end.isEqual(rangeB.end)) {\n\t\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// For `rangeA`, neither range in `otherSelection` was similar. So selections are not similar.\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t_didIteratorError7 = true;\n\t\t\t\t\t\t_iteratorError7 = err;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion7 && _iterator7.return) {\n\t\t\t\t\t\t\t\t_iterator7.return();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (_didIteratorError7) {\n\t\t\t\t\t\t\t\tthrow _iteratorError7;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!found) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// There were no ranges that weren't matched. Selections are similar.\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError6 = true;\n\t\t\t\t_iteratorError6 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion6 && _iterator6.return) {\n\t\t\t\t\t\t_iterator6.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError6) {\n\t\t\t\t\t\tthrow _iteratorError6;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n   * Removes all ranges that were added to the selection.\n   *\n   * @fires change\n   */\n\n\t}, {\n\t\tkey: 'removeAllRanges',\n\t\tvalue: function removeAllRanges() {\n\t\t\tif (this._ranges.length) {\n\t\t\t\tthis._ranges = [];\n\t\t\t\tthis.fire('change');\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Replaces all ranges that were added to the selection with given array of ranges. Last range of the array\n   * is treated like the last added range and is used to set {@link #anchor anchor} and {@link #focus focus}.\n   * Accepts a flag describing in which way the selection is made (see {@link #addRange addRange}).\n   *\n   * @fires change\n   * @param {Iterable.<module:engine/view/range~Range>} newRanges Iterable object of ranges to set.\n   * @param {Boolean} [isLastBackward] Flag describing if last added range was selected forward - from start to end\n   * (`false`) or backward - from end to start (`true`). Defaults to `false`.\n   */\n\n\t}, {\n\t\tkey: 'setRanges',\n\t\tvalue: function setRanges(newRanges, isLastBackward) {\n\t\t\tthis._ranges = [];\n\n\t\t\tvar _iteratorNormalCompletion8 = true;\n\t\t\tvar _didIteratorError8 = false;\n\t\t\tvar _iteratorError8 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator8 = newRanges[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n\t\t\t\t\tvar range = _step8.value;\n\n\t\t\t\t\tif (!(range instanceof _range2.default)) {\n\t\t\t\t\t\tthrow new _ckeditorerror2.default('view-selection-invalid-range: Invalid Range.');\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushRange(range);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError8 = true;\n\t\t\t\t_iteratorError8 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion8 && _iterator8.return) {\n\t\t\t\t\t\t_iterator8.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError8) {\n\t\t\t\t\t\tthrow _iteratorError8;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._lastRangeBackward = !!isLastBackward;\n\t\t\tthis.fire('change');\n\t\t}\n\n\t\t/**\n   * Sets this selection's ranges and direction to the ranges and direction of the given selection.\n   *\n   * @param {module:engine/view/selection~Selection} otherSelection\n   */\n\n\t}, {\n\t\tkey: 'setTo',\n\t\tvalue: function setTo(otherSelection) {\n\t\t\tthis._isFake = otherSelection._isFake;\n\t\t\tthis._fakeSelectionLabel = otherSelection._fakeSelectionLabel;\n\n\t\t\tthis.setRanges(otherSelection.getRanges(), otherSelection.isBackward);\n\t\t}\n\n\t\t/**\n   * Sets collapsed selection in the specified location.\n   *\n   * The location can be specified in the same form as {@link module:engine/view/position~Position.createAt} parameters.\n   *\n   * @fires change\n   * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\n   * @param {Number|'end'|'before'|'after'} [offset=0] Offset or one of the flags. Used only when\n   * first parameter is a {@link module:engine/view/item~Item view item}.\n   */\n\n\t}, {\n\t\tkey: 'collapse',\n\t\tvalue: function collapse(itemOrPosition, offset) {\n\t\t\tvar pos = _position2.default.createAt(itemOrPosition, offset);\n\t\t\tvar range = new _range2.default(pos, pos);\n\n\t\t\tthis.setRanges([range]);\n\t\t}\n\n\t\t/**\n   * Collapses selection to the selection's {@link #getFirstPosition first position}.\n   * All ranges, besides the collapsed one, will be removed. Nothing will change if there are no ranges stored\n   * inside selection.\n   *\n   * @fires change\n   */\n\n\t}, {\n\t\tkey: 'collapseToStart',\n\t\tvalue: function collapseToStart() {\n\t\t\tvar startPosition = this.getFirstPosition();\n\n\t\t\tif (startPosition !== null) {\n\t\t\t\tthis.setRanges([new _range2.default(startPosition, startPosition)]);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Collapses selection to the selection's {@link #getLastPosition last position}.\n   * All ranges, besides the collapsed one, will be removed. Nothing will change if there are no ranges stored\n   * inside selection.\n   *\n   * @fires change\n   */\n\n\t}, {\n\t\tkey: 'collapseToEnd',\n\t\tvalue: function collapseToEnd() {\n\t\t\tvar endPosition = this.getLastPosition();\n\n\t\t\tif (endPosition !== null) {\n\t\t\t\tthis.setRanges([new _range2.default(endPosition, endPosition)]);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Sets {@link #focus} to the specified location.\n   *\n   * The location can be specified in the same form as {@link module:engine/view/position~Position.createAt} parameters.\n   *\n   * @fires change\n   * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\n   * @param {Number|'end'|'before'|'after'} [offset=0] Offset or one of the flags. Used only when\n   * first parameter is a {@link module:engine/view/item~Item view item}.\n   */\n\n\t}, {\n\t\tkey: 'setFocus',\n\t\tvalue: function setFocus(itemOrPosition, offset) {\n\t\t\tif (this.anchor === null) {\n\t\t\t\t/**\n     * Cannot set selection focus if there are no ranges in selection.\n     *\n     * @error view-selection-setFocus-no-ranges\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('view-selection-setFocus-no-ranges: Cannot set selection focus if there are no ranges in selection.');\n\t\t\t}\n\n\t\t\tvar newFocus = _position2.default.createAt(itemOrPosition, offset);\n\n\t\t\tif (newFocus.compareWith(this.focus) == 'same') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar anchor = this.anchor;\n\n\t\t\tthis._ranges.pop();\n\n\t\t\tif (newFocus.compareWith(anchor) == 'before') {\n\t\t\t\tthis.addRange(new _range2.default(newFocus, anchor), true);\n\t\t\t} else {\n\t\t\t\tthis.addRange(new _range2.default(anchor, newFocus));\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Returns the selected element. {@link module:engine/view/element~Element Element} is considered as selected if there is only\n   * one range in the selection, and that range contains exactly one element.\n   * Returns `null` if there is no selected element.\n   *\n   * @returns {module:engine/view/element~Element|null}\n   */\n\n\t}, {\n\t\tkey: 'getSelectedElement',\n\t\tvalue: function getSelectedElement() {\n\t\t\tif (this.rangeCount !== 1) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar range = this.getFirstRange();\n\t\t\tvar nodeAfterStart = range.start.nodeAfter;\n\t\t\tvar nodeBeforeEnd = range.end.nodeBefore;\n\n\t\t\treturn nodeAfterStart instanceof _element2.default && nodeAfterStart == nodeBeforeEnd ? nodeAfterStart : null;\n\t\t}\n\n\t\t/**\n   * Creates and returns an instance of `Selection` that is a clone of given selection, meaning that it has same\n   * ranges and same direction as this selection.\n   *\n   * @params {module:engine/view/selection~Selection} otherSelection Selection to be cloned.\n   * @returns {module:engine/view/selection~Selection} `Selection` instance that is a clone of given selection.\n   */\n\n\t}, {\n\t\tkey: '_pushRange',\n\n\n\t\t/**\n   * Adds range to selection - creates copy of given range so it can be safely used and modified.\n   *\n   * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-selection-range-intersects` if added range intersects\n   * with ranges already stored in selection instance.\n   *\n   * @private\n   * @param {module:engine/view/range~Range} range\n   */\n\t\tvalue: function _pushRange(range) {\n\t\t\tvar _iteratorNormalCompletion9 = true;\n\t\t\tvar _didIteratorError9 = false;\n\t\t\tvar _iteratorError9 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator9 = this._ranges[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n\t\t\t\t\tvar storedRange = _step9.value;\n\n\t\t\t\t\tif (range.isIntersecting(storedRange)) {\n\t\t\t\t\t\t/**\n       * Trying to add a range that intersects with another range from selection.\n       *\n       * @error selection-range-intersects\n       * @param {module:engine/view/range~Range} addedRange Range that was added to the selection.\n       * @param {module:engine/view/range~Range} intersectingRange Range from selection that intersects with `addedRange`.\n       */\n\t\t\t\t\t\tthrow new _ckeditorerror2.default('view-selection-range-intersects: Trying to add a range that intersects with another range from selection.', { addedRange: range, intersectingRange: storedRange });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError9 = true;\n\t\t\t\t_iteratorError9 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion9 && _iterator9.return) {\n\t\t\t\t\t\t_iterator9.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError9) {\n\t\t\t\t\t\tthrow _iteratorError9;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._ranges.push(_range2.default.createFromRange(range));\n\t\t}\n\t}, {\n\t\tkey: 'isFake',\n\t\tget: function get() {\n\t\t\treturn this._isFake;\n\t\t}\n\n\t\t/**\n   * Returns fake selection label.\n   *\n   * @see #setFake\n   * @returns {String}\n   */\n\n\t}, {\n\t\tkey: 'fakeSelectionLabel',\n\t\tget: function get() {\n\t\t\treturn this._fakeSelectionLabel;\n\t\t}\n\n\t\t/**\n   * Selection anchor. Anchor may be described as a position where the selection starts. Together with\n   * {@link #focus focus} they define the direction of selection, which is important\n   * when expanding/shrinking selection. Anchor is always the start or end of the most recent added range.\n   * It may be a bit unintuitive when there are multiple ranges in selection.\n   *\n   * @see #focus\n   * @type {module:engine/view/position~Position}\n   */\n\n\t}, {\n\t\tkey: 'anchor',\n\t\tget: function get() {\n\t\t\tif (!this._ranges.length) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar range = this._ranges[this._ranges.length - 1];\n\t\t\tvar anchor = this._lastRangeBackward ? range.end : range.start;\n\n\t\t\treturn _position2.default.createFromPosition(anchor);\n\t\t}\n\n\t\t/**\n   * Selection focus. Focus is a position where the selection ends.\n   *\n   * @see #anchor\n   * @type {module:engine/view/position~Position}\n   */\n\n\t}, {\n\t\tkey: 'focus',\n\t\tget: function get() {\n\t\t\tif (!this._ranges.length) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar range = this._ranges[this._ranges.length - 1];\n\t\t\tvar focus = this._lastRangeBackward ? range.start : range.end;\n\n\t\t\treturn _position2.default.createFromPosition(focus);\n\t\t}\n\n\t\t/**\n   * Returns whether the selection is collapsed. Selection is collapsed when there is exactly one range which is\n   * collapsed.\n   *\n   * @type {Boolean}\n   */\n\n\t}, {\n\t\tkey: 'isCollapsed',\n\t\tget: function get() {\n\t\t\treturn this.rangeCount === 1 && this._ranges[0].isCollapsed;\n\t\t}\n\n\t\t/**\n   * Returns number of ranges in selection.\n   *\n   * @type {Number}\n      */\n\n\t}, {\n\t\tkey: 'rangeCount',\n\t\tget: function get() {\n\t\t\treturn this._ranges.length;\n\t\t}\n\n\t\t/**\n   * Specifies whether the {@link #focus} precedes {@link #anchor}.\n   *\n   * @type {Boolean}\n   */\n\n\t}, {\n\t\tkey: 'isBackward',\n\t\tget: function get() {\n\t\t\treturn !this.isCollapsed && this._lastRangeBackward;\n\t\t}\n\n\t\t/**\n   * {@link module:engine/view/editableelement~EditableElement EditableElement} instance that contains this selection, or `null`\n   * if the selection is not inside an editable element.\n   *\n   * @type {module:engine/view/editableelement~EditableElement|null}\n   */\n\n\t}, {\n\t\tkey: 'editableElement',\n\t\tget: function get() {\n\t\t\tif (this.anchor) {\n\t\t\t\treturn this.anchor.editableElement;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\t}], [{\n\t\tkey: 'createFromSelection',\n\t\tvalue: function createFromSelection(otherSelection) {\n\t\t\tvar selection = new Selection();\n\t\t\tselection.setTo(otherSelection);\n\n\t\t\treturn selection;\n\t\t}\n\t}]);\n\n\treturn Selection;\n}();\n\nexports.default = Selection;\n\n\n(0, _mix2.default)(Selection, _emittermixin2.default);\n\n/**\n * Fired whenever selection ranges are changed through {@link ~Selection Selection API}.\n *\n * @event change\n */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/view/selection.js\n// module id = 84\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _paragraphcommand = require('./paragraphcommand');\n\nvar _paragraphcommand2 = _interopRequireDefault(_paragraphcommand);\n\nvar _plugin = require('@ckeditor/ckeditor5-core/src/plugin');\n\nvar _plugin2 = _interopRequireDefault(_plugin);\n\nvar _element = require('@ckeditor/ckeditor5-engine/src/model/element');\n\nvar _element2 = _interopRequireDefault(_element);\n\nvar _position = require('@ckeditor/ckeditor5-engine/src/model/position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _buildmodelconverter = require('@ckeditor/ckeditor5-engine/src/conversion/buildmodelconverter');\n\nvar _buildmodelconverter2 = _interopRequireDefault(_buildmodelconverter);\n\nvar _buildviewconverter = require('@ckeditor/ckeditor5-engine/src/conversion/buildviewconverter');\n\nvar _buildviewconverter2 = _interopRequireDefault(_buildviewconverter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module paragraph/paragraph\n */\n\n/**\n * The paragraph feature for the editor.\n * It introduces the `<paragraph>` element in the model which renders as a `<p>` element in the DOM and data.\n *\n * @extends module:core/plugin~Plugin\n */\nvar Paragraph = function (_Plugin) {\n\t_inherits(Paragraph, _Plugin);\n\n\tfunction Paragraph() {\n\t\t_classCallCheck(this, Paragraph);\n\n\t\treturn _possibleConstructorReturn(this, (Paragraph.__proto__ || Object.getPrototypeOf(Paragraph)).apply(this, arguments));\n\t}\n\n\t_createClass(Paragraph, [{\n\t\tkey: 'init',\n\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tvalue: function init() {\n\t\t\tvar editor = this.editor;\n\t\t\tvar doc = editor.document;\n\t\t\tvar data = editor.data;\n\t\t\tvar editing = editor.editing;\n\n\t\t\teditor.commands.add('paragraph', new _paragraphcommand2.default(editor));\n\n\t\t\t// Schema.\n\t\t\tdoc.schema.registerItem('paragraph', '$block');\n\n\t\t\t// Build converter from model to view for data and editing pipelines.\n\t\t\t(0, _buildmodelconverter2.default)().for(data.modelToView, editing.modelToView).fromElement('paragraph').toElement('p');\n\n\t\t\t// Build converter from view to model for data pipeline.\n\t\t\t(0, _buildviewconverter2.default)().for(data.viewToModel).fromElement('p').toElement('paragraph');\n\n\t\t\t// Content autoparagraphing. --------------------------------------------------\n\n\t\t\t// Step 1.\n\t\t\t// \"Second chance\" converters for elements and texts which were not allowed in their original locations.\n\t\t\t// They check if this element/text could be converted if it was in a paragraph.\n\t\t\t// Forcefully converted items will be temporarily in an invalid context. It's going to be fixed in step 2.\n\n\t\t\t// Executed after converter added by a feature, but before \"default\" to-model-fragment converter.\n\t\t\tdata.viewToModel.on('element', convertAutoparagraphableItem, { priority: 'low' });\n\t\t\t// Executed after default text converter.\n\t\t\tdata.viewToModel.on('text', convertAutoparagraphableItem, { priority: 'lowest' });\n\n\t\t\t// Step 2.\n\t\t\t// After an item is \"forced\" to be converted by `convertAutoparagraphableItem`, we need to actually take\n\t\t\t// care of adding the paragraph (assumed in `convertAutoparagraphableItem`) and wrap that item in it.\n\n\t\t\t// Executed after all converters (even default ones).\n\t\t\tdata.viewToModel.on('element', autoparagraphItems, { priority: 'lowest' });\n\t\t\tdata.viewToModel.on('documentFragment', autoparagraphItems, { priority: 'lowest' });\n\n\t\t\t// Empty roots autoparagraphing. -----------------------------------------------\n\n\t\t\t// Post-fixer which takes care of adding empty paragraph elements to empty roots.\n\t\t\t// Besides fixing content on #changesDone we also need to handle #dataReady because\n\t\t\t// if initial data is empty or setData() wasn't even called there will be no #change fired.\n\t\t\tdoc.on('change', function (evt, type, changes, batch) {\n\t\t\t\tif (batch.type == 'transparent') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfindEmptyRoots(doc, batch);\n\t\t\t});\n\t\t\tdoc.on('changesDone', autoparagraphEmptyRoots, { priority: 'lowest' });\n\t\t\teditor.on('dataReady', function () {\n\t\t\t\tfindEmptyRoots(doc, doc.batch('transparent'));\n\t\t\t\tautoparagraphEmptyRoots();\n\t\t\t}, { priority: 'lowest' });\n\t\t}\n\t}], [{\n\t\tkey: 'pluginName',\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tget: function get() {\n\t\t\treturn 'Paragraph';\n\t\t}\n\t}]);\n\n\treturn Paragraph;\n}(_plugin2.default);\n\n/**\n * A list of element names which should be treated by the autoparagraphing algorithms as\n * paragraph-like. This means that e.g. the following content:\n *\n *\t\t<h1>Foo</h1>\n *\t\t<table>\n *\t\t\t<tr>\n *\t\t\t\t<td>X</td>\n *\t\t\t\t<td>\n *\t\t\t\t\t<ul>\n *\t\t\t\t\t\t<li>Y</li>\n *\t\t\t\t\t\t<li>Z</li>\n *\t\t\t\t\t</ul>\n *\t\t\t\t</td>\n *\t\t\t</tr>\n *\t\t</table>\n *\n * contains five paragraph-like elements: `<h1>`, two `<td>`s and two `<li>`s.\n * Hence, if none of the features is going to convert those elements the above content will be automatically handled\n * by the paragraph feature and converted to:\n *\n *\t\t<p>Foo</p>\n *\t\t<p>X</p>\n *\t\t<p>Y</p>\n *\t\t<p>Z</p>\n *\n * Note: The `<td>` containing two `<li>` elements was ignored as the innermost paragraph-like elements\n * have a priority upon conversion.\n *\n * @member {Set.<String>} module:paragraph/paragraph~Paragraph.paragraphLikeElements\n */\n\n\nexports.default = Paragraph;\nParagraph.paragraphLikeElements = new Set(['blockquote', 'dd', 'div', 'dt', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'li', 'p', 'td']);\n\n// This converter forces a conversion of a non-consumed view item, if that item would be allowed by schema and converted it if was\n// inside a paragraph element. The converter checks whether conversion would be possible if there was a paragraph element\n// between `data.input` item and its parent. If the conversion would be allowed, the converter adds `\"paragraph\"` to the\n// context and fires conversion for `data.input` again.\nfunction convertAutoparagraphableItem(evt, data, consumable, conversionApi) {\n\t// If the item wasn't consumed by some of the dedicated converters...\n\tif (!consumable.test(data.input, { name: data.input.name })) {\n\t\treturn;\n\t}\n\n\t// But would be allowed if it was in a paragraph...\n\tif (!isParagraphable(data.input, data.context, conversionApi.schema, false)) {\n\t\treturn;\n\t}\n\n\t// Convert that item in a paragraph context.\n\tdata.context.push('paragraph');\n\tvar item = conversionApi.convertItem(data.input, consumable, data);\n\tdata.context.pop();\n\n\tdata.output = item;\n}\n\n// This converter checks all children of an element or document fragment that has been converted and wraps\n// children in a paragraph element if it is allowed by schema.\n//\n// Basically, after an item is \"forced\" to be converted by `convertAutoparagraphableItem`, we need to actually take\n// care of adding the paragraph (assumed in `convertAutoparagraphableItem`) and wrap that item in it.\nfunction autoparagraphItems(evt, data, consumable, conversionApi) {\n\t// Autoparagraph only if the element has been converted.\n\tif (!data.output) {\n\t\treturn;\n\t}\n\n\tvar isParagraphLike = Paragraph.paragraphLikeElements.has(data.input.name) && !data.output.is('element');\n\n\t// Keep in mind that this converter is added to all elements and document fragments.\n\t// This means that we have to make a smart decision in which elements (at what level) auto-paragraph should be inserted.\n\t// There are three situations when it is correct to add paragraph:\n\t//   -\twe are converting a view document fragment: this means that we are at the top level of conversion and we should\n\t//\t\tadd paragraph elements for \"bare\" texts (unless converting in $clipboardHolder, but this is covered by schema),\n\t//   -\twe are converting an element that was converted to model element: this means that it will be represented in model\n\t//\t\tand has added its context when converting children - we should add paragraph for those items that passed\n\t//\t\tin `convertAutoparagraphableItem`, because it is correct for them to be autoparagraphed,\n\t//\t -\twe are converting \"paragraph-like\" element, which children should always be autoparagraphed (if it is allowed by schema,\n\t//\t\tso we won't end up with, i.e., paragraph inside paragraph, if paragraph was in paragraph-like element).\n\tvar shouldAutoparagraph = data.input.is('documentFragment') || data.input.is('element') && data.output.is('element') || isParagraphLike;\n\n\tif (!shouldAutoparagraph) {\n\t\treturn;\n\t}\n\n\t// Take care of proper context. This is important for `isParagraphable` checks.\n\tvar needsNewContext = data.output.is('element');\n\n\tif (needsNewContext) {\n\t\tdata.context.push(data.output);\n\t}\n\n\t// `paragraph` element that will wrap auto-paragraphable children.\n\tvar autoParagraph = null;\n\n\t// Check children and wrap them in a `paragraph` element if they need to be wrapped.\n\t// Be smart when wrapping children and put all auto-paragraphable siblings in one `paragraph` parent:\n\t// foo<$text bold=\"true\">bar</$text><paragraph>xxx</paragraph>baz      --->\n\t// <paragraph>foo<$text bold=\"true\">bar</$text></paragraph><paragraph>xxx</paragraph><paragraph>baz</paragraph>\n\tfor (var i = 0; i < data.output.childCount; i++) {\n\t\tvar child = data.output.getChild(i);\n\n\t\tif (isParagraphable(child, data.context, conversionApi.schema, isParagraphLike)) {\n\t\t\t// If there is no wrapping `paragraph` element, create it.\n\t\t\tif (!autoParagraph) {\n\t\t\t\tautoParagraph = new _element2.default('paragraph');\n\t\t\t\tdata.output.insertChildren(child.index, autoParagraph);\n\t\t\t}\n\t\t\t// Otherwise, use existing `paragraph` and just fix iterator.\n\t\t\t// Thanks to reusing `paragraph` element, multiple siblings ends up in same container.\n\t\t\telse {\n\t\t\t\t\ti--;\n\t\t\t\t}\n\n\t\t\tchild.remove();\n\t\t\tautoParagraph.appendChildren(child);\n\t\t} else {\n\t\t\t// That was not a paragraphable children, reset `paragraph` wrapper - following auto-paragraphable children\n\t\t\t// need to be placed in a new `paragraph` element.\n\t\t\tautoParagraph = null;\n\t\t}\n\t}\n\n\tif (needsNewContext) {\n\t\tdata.context.pop();\n\t}\n}\n\nfunction isParagraphable(node, context, schema, insideParagraphLikeElement) {\n\tvar name = node.name || '$text';\n\n\t// Node is paragraphable if it is inside paragraph like element, or...\n\t// It is not allowed at this context...\n\tif (!insideParagraphLikeElement && schema.check({ name: name, inside: context })) {\n\t\treturn false;\n\t}\n\n\t// And paragraph is allowed in this context...\n\tif (!schema.check({ name: 'paragraph', inside: context })) {\n\t\treturn false;\n\t}\n\n\t// And a node would be allowed in this paragraph...\n\tif (!schema.check({ name: name, inside: context.concat('paragraph') })) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\n// Looks through all roots created in document and marks every empty root, saving which batch made it empty.\nvar rootsToFix = new Map();\n\nfunction findEmptyRoots(doc, batch) {\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = doc.getRootNames()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar rootName = _step.value;\n\n\t\t\tvar root = doc.getRoot(rootName);\n\n\t\t\tif (root.isEmpty) {\n\t\t\t\tif (!rootsToFix.has(root)) {\n\t\t\t\t\trootsToFix.set(root, batch);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trootsToFix.delete(root);\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Fixes all empty roots.\nfunction autoparagraphEmptyRoots() {\n\tvar _loop = function _loop(root, batch) {\n\t\t// Only empty roots are in `rootsToFix`. Even if root got content during `changesDone` event (because of, for example\n\t\t// other feature), this will fire `findEmptyRoots` and remove that root from `rootsToFix`. So we are guaranteed\n\t\t// to have only empty roots here.\n\t\tvar query = { name: 'paragraph', inside: [root] };\n\t\tvar doc = batch.document;\n\t\tvar schema = doc.schema;\n\n\t\t// If paragraph element is allowed in the root, create paragraph element.\n\t\tif (schema.check(query)) {\n\t\t\tdoc.enqueueChanges(function () {\n\t\t\t\t// Remove root from `rootsToFix` here, before executing batch, to prevent infinite loops.\n\t\t\t\trootsToFix.delete(root);\n\n\t\t\t\t// Fix empty root.\n\t\t\t\tbatch.insert(_position2.default.createAt(root), new _element2.default('paragraph'));\n\t\t\t});\n\t\t}\n\t};\n\n\tvar _iteratorNormalCompletion2 = true;\n\tvar _didIteratorError2 = false;\n\tvar _iteratorError2 = undefined;\n\n\ttry {\n\t\tfor (var _iterator2 = rootsToFix[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\tvar _ref = _step2.value;\n\n\t\t\tvar _ref2 = _slicedToArray(_ref, 2);\n\n\t\t\tvar root = _ref2[0];\n\t\t\tvar batch = _ref2[1];\n\n\t\t\t_loop(root, batch);\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError2 = true;\n\t\t_iteratorError2 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t_iterator2.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError2) {\n\t\t\t\tthrow _iteratorError2;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-paragraph/src/paragraph.js\n// module id = 86\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\nn\n/**\n * @module utils/collection\n */\n\nvar _emittermixin = require('./emittermixin');\n\nvar _emittermixin2 = _interopRequireDefault(_emittermixin);\n\nvar _ckeditorerror = require('./ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nvar _uid = require('./uid');\n\nvar _uid2 = _interopRequireDefault(_uid);\n\nvar _mix = require('./mix');\n\nvar _mix2 = _interopRequireDefault(_mix);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Collections are ordered sets of objects. Items in the collection can be retrieved by their indexes\n * in the collection (like in an array) or by their ids.\n *\n * If an object without an `id` property is being added to the collection, the `id` property will be generated\n * automatically. Note that the automatically generated id is unique only within this single collection instance.\n *\n * By default an item in the collection is identified by its `id` property. The name of the identifier can be\n * configured through the constructor of the collection.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\nvar Collection = function () {\n\t/**\n  * Creates a new Collection instance.\n  *\n  * @param {Object} options The options object.\n  * @param {String} [options.idProperty='id'] The name of the property which is considered to identify an item.\n  */\n\tfunction Collection(options) {\n\t\t_classCallCheck(this, Collection);\n\n\t\t/**\n   * The internal list of items in the collection.\n   *\n   * @private\n   * @member {Object[]}\n   */\n\t\tthis._items = [];\n\n\t\t/**\n   * The internal map of items in the collection.\n   *\n   * @private\n   * @member {Map}\n   */\n\t\tthis._itemMap = new Map();\n\n\t\t/**\n   * The name of the property which is considered to identify an item.\n   *\n   * @private\n   * @member {String}\n   */\n\t\tthis._idProperty = options && options.idProperty || 'id';\n\n\t\t/**\n   * A helper mapping external items of a bound collection ({@link #bindTo})\n   * and actual items of this collection. It provides information\n   * necessary to properly remove items bound to another collection.\n   *\n   * See {@link #_bindToInternalToExternalMap}.\n   *\n   * @protected\n   * @member {WeakMap}\n   */\n\t\tthis._bindToExternalToInternalMap = new WeakMap();\n\n\t\t/**\n   * A helper mapping items of this collection to external items of a bound collection\n   * ({@link #bindTo}). It provides information necessary to manage the bindings, e.g.\n   * to avoid loops in two–way bindings.\n   *\n   * See {@link #_bindToExternalToInternalMap}.\n   *\n   * @protected\n   * @member {WeakMap}\n   */\n\t\tthis._bindToInternalToExternalMap = new WeakMap();\n\n\t\t/**\n   * A collection instance this collection is bound to as a result\n   * of calling {@link #bindTo} method.\n   *\n   * @protected\n   * @member {module:utils/collection~Collection} #_bindToCollection\n   */\n\t}\n\n\t/**\n  * The number of items available in the collection.\n  *\n  * @member {Number} #length\n  */\n\n\n\t_createClass(Collection, [{\n\t\tkey: 'add',\n\n\n\t\t/**\n   * Adds an item into the collection.\n   *\n   * If the item does not have an id, then it will be automatically generated and set on the item.\n   *\n   * @chainable\n   * @param {Object} item\n   * @param {Number} [index] The position of the item in the collection. The item\n   * is pushed to the collection when `index` not specified.\n   * @fires add\n   */\n\t\tvalue: function add(item, index) {\n\t\t\tvar itemId = void 0;\n\t\t\tvar idProperty = this._idProperty;\n\n\t\t\tif (idProperty in item) {\n\t\t\t\titemId = item[idProperty];\n\n\t\t\t\tif (typeof itemId != 'string') {\n\t\t\t\t\t/**\n      * This item's id should be a string.\n      *\n      * @error collection-add-invalid-id\n      */\n\t\t\t\t\tthrow new _ckeditorerror2.default('collection-add-invalid-id');\n\t\t\t\t}\n\n\t\t\t\tif (this.get(itemId)) {\n\t\t\t\t\t/**\n      * This item already exists in the collection.\n      *\n      * @error collection-add-item-already-exists\n      */\n\t\t\t\t\tthrow new _ckeditorerror2.default('collection-add-item-already-exists');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\titem[idProperty] = itemId = (0, _uid2.default)();\n\t\t\t}\n\n\t\t\t// TODO: Use ES6 default function argument.\n\t\t\tif (index === undefined) {\n\t\t\t\tindex = this._items.length;\n\t\t\t} else if (index > this._items.length || index < 0) {\n\t\t\t\t/**\n     * The index number has invalid value.\n     *\n     * @error collection-add-item-bad-index\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('collection-add-item-invalid-index');\n\t\t\t}\n\n\t\t\tthis._items.splice(index, 0, item);\n\n\t\t\tthis._itemMap.set(itemId, item);\n\n\t\t\tthis.fire('add', item, index);\n\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Gets item by its id or index.\n   *\n   * @param {String|Number} idOrIndex The item id or index in the collection.\n   * @returns {Object} The requested item or `null` if such item does not exist.\n   */\n\n\t}, {\n\t\tkey: 'get',\n\t\tvalue: function get(idOrIndex) {\n\t\t\tvar item = void 0;\n\n\t\t\tif (typeof idOrIndex == 'string') {\n\t\t\t\titem = this._itemMap.get(idOrIndex);\n\t\t\t} else if (typeof idOrIndex == 'number') {\n\t\t\t\titem = this._items[idOrIndex];\n\t\t\t} else {\n\t\t\t\t/**\n     * Index or id must be given.\n     *\n     * @error collection-get-invalid-arg\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('collection-get-invalid-arg: Index or id must be given.');\n\t\t\t}\n\n\t\t\treturn item || null;\n\t\t}\n\n\t\t/**\n   * Gets index of item in the collection.\n   * When item is not defined in the collection then index will be equal -1.\n   *\n   * @param {String|Object} idOrItem The item or its id in the collection.\n   * @returns {Number} Index of given item.\n   */\n\n\t}, {\n\t\tkey: 'getIndex',\n\t\tvalue: function getIndex(idOrItem) {\n\t\t\tvar item = void 0;\n\n\t\t\tif (typeof idOrItem == 'string') {\n\t\t\t\titem = this._itemMap.get(idOrItem);\n\t\t\t} else {\n\t\t\t\titem = idOrItem;\n\t\t\t}\n\n\t\t\treturn this._items.indexOf(item);\n\t\t}\n\n\t\t/**\n   * Removes an item from the collection.\n   *\n   * @param {Object|Number|String} subject The item to remove, its id or index in the collection.\n   * @returns {Object} The removed item.\n   * @fires remove\n   */\n\n\t}, {\n\t\tkey: 'remove',\n\t\tvalue: function remove(subject) {\n\t\t\tvar index = void 0,\n\t\t\t    id = void 0,\n\t\t\t    item = void 0;\n\t\t\tvar itemDoesNotExist = false;\n\t\t\tvar idProperty = this._idProperty;\n\n\t\t\tif (typeof subject == 'string') {\n\t\t\t\tid = subject;\n\t\t\t\titem = this._itemMap.get(id);\n\t\t\t\titemDoesNotExist = !item;\n\n\t\t\t\tif (item) {\n\t\t\t\t\tindex = this._items.indexOf(item);\n\t\t\t\t}\n\t\t\t} else if (typeof subject == 'number') {\n\t\t\t\tindex = subject;\n\t\t\t\titem = this._items[index];\n\t\t\t\titemDoesNotExist = !item;\n\n\t\t\t\tif (item) {\n\t\t\t\t\tid = item[idProperty];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\titem = subject;\n\t\t\t\tid = item[idProperty];\n\t\t\t\tindex = this._items.indexOf(item);\n\t\t\t\titemDoesNotExist = index == -1 || !this._itemMap.get(id);\n\t\t\t}\n\n\t\t\tif (itemDoesNotExist) {\n\t\t\t\t/**\n     * Item not found.\n     *\n     * @error collection-remove-404\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('collection-remove-404: Item not found.');\n\t\t\t}\n\n\t\t\tthis._items.splice(index, 1);\n\t\t\tthis._itemMap.delete(id);\n\n\t\t\tvar externalItem = this._bindToInternalToExternalMap.get(item);\n\t\t\tthis._bindToInternalToExternalMap.delete(item);\n\t\t\tthis._bindToExternalToInternalMap.delete(externalItem);\n\n\t\t\tthis.fire('remove', item);\n\n\t\t\treturn item;\n\t\t}\n\n\t\t/**\n   * Executes the callback for each item in the collection and composes an array or values returned by this callback.\n   *\n   * @param {Function} callback\n   * @param {Object} callback.item\n   * @param {Number} callback.index\n   * @params {Object} ctx Context in which the `callback` will be called.\n   * @returns {Array} The result of mapping.\n   */\n\n\t}, {\n\t\tkey: 'map',\n\t\tvalue: function map(callback, ctx) {\n\t\t\treturn this._items.map(callback, ctx);\n\t\t}\n\n\t\t/**\n   * Finds the first item in the collection for which the `callback` returns a true value.\n   *\n   * @param {Function} callback\n   * @param {Object} callback.item\n   * @param {Number} callback.index\n   * @returns {Object} The item for which `callback` returned a true value.\n   * @params {Object} ctx Context in which the `callback` will be called.\n   */\n\n\t}, {\n\t\tkey: 'find',\n\t\tvalue: function find(callback, ctx) {\n\t\t\treturn this._items.find(callback, ctx);\n\t\t}\n\n\t\t/**\n   * Returns an array with items for which the `callback` returned a true value.\n   *\n   * @param {Function} callback\n   * @param {Object} callback.item\n   * @param {Number} callback.index\n   * @params {Object} ctx Context in which the `callback` will be called.\n   * @returns {Object[]} The array with matching items.\n   */\n\n\t}, {\n\t\tkey: 'filter',\n\t\tvalue: function filter(callback, ctx) {\n\t\t\treturn this._items.filter(callback, ctx);\n\t\t}\n\n\t\t/**\n   * Removes all items from the collection and destroys the binding created using\n   * {@link #bindTo}.\n   */\n\n\t}, {\n\t\tkey: 'clear',\n\t\tvalue: function clear() {\n\t\t\tif (this._bindToCollection) {\n\t\t\t\tthis.stopListening(this._bindToCollection);\n\t\t\t\tthis._bindToCollection = null;\n\t\t\t}\n\n\t\t\twhile (this.length) {\n\t\t\t\tthis.remove(0);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Binds and synchronizes the collection with another one.\n   *\n   * The binding can be a simple factory:\n   *\n   *\t\tclass FactoryClass {\n   *\t\t\tconstructor( data ) {\n   *\t\t\t\tthis.label = data.label;\n   *\t\t\t}\n   *\t\t}\n   *\n   *\t\tconst source = new Collection( { idProperty: 'label' } );\n   *\t\tconst target = new Collection();\n   *\n   *\t\ttarget.bindTo( source ).as( FactoryClass );\n   *\n   *\t\tsource.add( { label: 'foo' } );\n   *\t\tsource.add( { label: 'bar' } );\n   *\n   *\t\tconsole.log( target.length ); // 2\n   *\t\tconsole.log( target.get( 1 ).label ); // 'bar'\n   *\n   *\t\tsource.remove( 0 );\n   *\t\tconsole.log( target.length ); // 1\n   *\t\tconsole.log( target.get( 0 ).label ); // 'bar'\n   *\n   * or the factory driven by a custom callback:\n   *\n   *\t\tclass FooClass {\n   *\t\t\tconstructor( data ) {\n   *\t\t\t\tthis.label = data.label;\n   *\t\t\t}\n   *\t\t}\n   *\n   *\t\tclass BarClass {\n   *\t\t\tconstructor( data ) {\n   *\t\t\t\tthis.label = data.label;\n   *\t\t\t}\n   *\t\t}\n   *\n   *\t\tconst source = new Collection( { idProperty: 'label' } );\n   *\t\tconst target = new Collection();\n   *\n   *\t\ttarget.bindTo( source ).using( ( item ) => {\n   *\t\t\tif ( item.label == 'foo' ) {\n   *\t\t\t\treturn new FooClass( item );\n   *\t\t\t} else {\n   *\t\t\t\treturn new BarClass( item );\n   *\t\t\t}\n   *\t\t} );\n   *\n   *\t\tsource.add( { label: 'foo' } );\n   *\t\tsource.add( { label: 'bar' } );\n   *\n   *\t\tconsole.log( target.length ); // 2\n   *\t\tconsole.log( target.get( 0 ) instanceof FooClass ); // true\n   *\t\tconsole.log( target.get( 1 ) instanceof BarClass ); // true\n   *\n   * or the factory out of property name:\n   *\n   *\t\tconst source = new Collection( { idProperty: 'label' } );\n   *\t\tconst target = new Collection();\n   *\n   *\t\ttarget.bindTo( source ).using( 'label' );\n   *\n   *\t\tsource.add( { label: { value: 'foo' } } );\n   *\t\tsource.add( { label: { value: 'bar' } } );\n   *\n   *\t\tconsole.log( target.length ); // 2\n   *\t\tconsole.log( target.get( 0 ).value ); // 'foo'\n   *\t\tconsole.log( target.get( 1 ).value ); // 'bar'\n   *\n   * **Note**: {@link #clear} can be used to break the binding.\n   *\n   * @param {module:utils/collection~Collection} collection A collection to be bound.\n   * @returns {Object}\n   * @returns {module:utils/collection~Collection#bindTo#as} return.as\n   * @returns {module:utils/collection~Collection#bindTo#using} return.using\n   */\n\n\t}, {\n\t\tkey: 'bindTo',\n\t\tvalue: function bindTo(externalCollection) {\n\t\t\tvar _this = this;\n\n\t\t\tif (this._bindToCollection) {\n\t\t\t\t/**\n     * The collection cannot be bound more than once.\n     *\n     * @error collection-bind-to-rebind\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('collection-bind-to-rebind: The collection cannot be bound more than once.');\n\t\t\t}\n\n\t\t\tthis._bindToCollection = externalCollection;\n\n\t\t\treturn {\n\t\t\t\t/**\n     * Creates the class factory binding.\n     *\n     * @static\n     * @param {Function} Class Specifies which class factory is to be initialized.\n     */\n\t\t\t\tas: function as(Class) {\n\t\t\t\t\t_this._setUpBindToBinding(function (item) {\n\t\t\t\t\t\treturn new Class(item);\n\t\t\t\t\t});\n\t\t\t\t},\n\n\t\t\t\t/**\n     * Creates callback or property binding.\n     *\n     * @static\n     * @param {Function|String} callbackOrProperty When the function is passed, it is used to\n     * produce the items. When the string is provided, the property value is used to create\n     * the bound collection items.\n     */\n\t\t\t\tusing: function using(callbackOrProperty) {\n\t\t\t\t\tif (typeof callbackOrProperty == 'function') {\n\t\t\t\t\t\t_this._setUpBindToBinding(function (item) {\n\t\t\t\t\t\t\treturn callbackOrProperty(item);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_this._setUpBindToBinding(function (item) {\n\t\t\t\t\t\t\treturn item[callbackOrProperty];\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t/**\n   * Finalizes and activates a binding initiated by {#bindTo}.\n   *\n   * @protected\n   * @param {Function} factory A function which produces collection items.\n   */\n\n\t}, {\n\t\tkey: '_setUpBindToBinding',\n\t\tvalue: function _setUpBindToBinding(factory) {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar externalCollection = this._bindToCollection;\n\n\t\t\t// Adds the item to the collection once a change has been done to the external collection.\n\t\t\t//\n\t\t\t// @private\n\t\t\tvar addItem = function addItem(evt, externalItem, index) {\n\t\t\t\tvar isExternalBoundToThis = externalCollection._bindToCollection == _this2;\n\t\t\t\tvar externalItemBound = externalCollection._bindToInternalToExternalMap.get(externalItem);\n\n\t\t\t\t// If an external collection is bound to this collection, which makes it a 2–way binding,\n\t\t\t\t// and the particular external collection item is already bound, don't add it here.\n\t\t\t\t// The external item has been created **out of this collection's item** and (re)adding it will\n\t\t\t\t// cause a loop.\n\t\t\t\tif (isExternalBoundToThis && externalItemBound) {\n\t\t\t\t\t_this2._bindToExternalToInternalMap.set(externalItem, externalItemBound);\n\t\t\t\t\t_this2._bindToInternalToExternalMap.set(externalItemBound, externalItem);\n\t\t\t\t} else {\n\t\t\t\t\tvar item = factory(externalItem);\n\n\t\t\t\t\t_this2._bindToExternalToInternalMap.set(externalItem, item);\n\t\t\t\t\t_this2._bindToInternalToExternalMap.set(item, externalItem);\n\n\t\t\t\t\t_this2.add(item, index);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Load the initial content of the collection.\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = externalCollection[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar externalItem = _step.value;\n\n\t\t\t\t\taddItem(null, externalItem);\n\t\t\t\t}\n\n\t\t\t\t// Synchronize the with collection as new items are added.\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.listenTo(externalCollection, 'add', addItem);\n\n\t\t\t// Synchronize the with collection as new items are removed.\n\t\t\tthis.listenTo(externalCollection, 'remove', function (evt, externalItem) {\n\t\t\t\tvar item = _this2._bindToExternalToInternalMap.get(externalItem);\n\n\t\t\t\tif (item) {\n\t\t\t\t\t_this2.remove(item);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * Collection iterator.\n   */\n\n\t}, {\n\t\tkey: Symbol.iterator,\n\t\tvalue: function value() {\n\t\t\treturn this._items[Symbol.iterator]();\n\t\t}\n\n\t\t/**\n   * Fired when an item is added to the collection.\n   *\n   * @event add\n   * @param {Object} item The added item.\n   */\n\n\t\t/**\n   * Fired when an item is removed from the collection.\n   *\n   * @event remove\n   * @param {Object} item The removed item.\n   */\n\n\t}, {\n\t\tkey: 'length',\n\t\tget: function get() {\n\t\t\treturn this._items.length;\n\t\t}\n\t}]);\n\n\treturn Collection;\n}();\n\nexports.default = Collection;\n\n\n(0, _mix2.default)(Collection, _emittermixin2.default);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/collection.js\n// module id = 87\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _emittermixin = require('../emittermixin');\n\nvar _emittermixin2 = _interopRequireDefault(_emittermixin);\n\nvar _uid = require('../uid');\n\nvar _uid2 = _interopRequireDefault(_uid);\n\nvar _extend = require('../lib/lodash/extend');\n\nvar _extend2 = _interopRequireDefault(_extend);\n\nvar _isNative = require('../lib/lodash/isNative');\n\nvar _isNative2 = _interopRequireDefault(_isNative);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n                                                                                                                                                           * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                           * For licensing, see LICENSE.md.\n                                                                                                                                                           */\n\n/**\n * @module utils/dom/emittermixin\n */\n\n/**\n * Mixin that injects the DOM events API into its host. It provides the API\n * compatible with {@link module:utils/emittermixin~EmitterMixin}.\n *\n * DOM emitter mixin is by default available in the {@link module:ui/view~View} class,\n * but it can also be mixed into any other class:\n *\n *\t\timport mix from '../utils/mix.js';\n *\t\timport DomEmitterMixin from '../utils/dom/emittermixin.js';\n *\n *\t\tclass SomeView {}\n *\t\tmix( SomeView, DomEmitterMixin );\n *\n *\t\tconst view = new SomeView();\n *\t\tview.listenTo( domElement, ( evt, domEvt ) => {\n *\t\t\tconsole.log( evt, domEvt );\n *\t\t} );\n *\n * @mixin module:utils/dom/emittermixin~EmitterMixin\n * @mixes module:utils/emittermixin~EmitterMixin\n * @implements module:utils/dom/emittermixin~Emitter\n */\nvar DomEmitterMixin = (0, _extend2.default)({}, _emittermixin2.default, {\n\t/**\n  * Registers a callback function to be executed when an event is fired in a specific Emitter or DOM Node.\n  * It is backwards compatible with {@link module:utils/emittermixin~EmitterMixin#listenTo}.\n  *\n  * @param {module:utils/emittermixin~Emitter|Node} emitter The object that fires the event.\n  * @param {String} event The name of the event.\n  * @param {Function} callback The function to be called on event.\n  * @param {Object} [options={}] Additional options.\n  * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n  * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n  * order they were added.\n  * @param {Object} [options.context] The object that represents `this` in the callback. Defaults to the object firing the event.\n  * @param {Boolean} [options.useCapture=false] Indicates that events of this type will be dispatched to the registered\n  * listener before being dispatched to any EventTarget beneath it in the DOM tree.\n  *\n  * @method module:utils/dom/emittermixin~EmitterMixin#listenTo\n  */\n\tlistenTo: function listenTo() {\n\t\tfor (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t\t\targs[_key] = arguments[_key];\n\t\t}\n\n\t\tvar emitter = args[0];\n\n\t\t// Check if emitter is an instance of DOM Node. If so, replace the argument with\n\t\t// corresponding ProxyEmitter (or create one if not existing).\n\t\tif (isDomNode(emitter)) {\n\t\t\targs[0] = this._getProxyEmitter(emitter) || new ProxyEmitter(emitter);\n\t\t}\n\n\t\t// Execute parent class method with Emitter (or ProxyEmitter) instance.\n\t\t_emittermixin2.default.listenTo.apply(this, args);\n\t},\n\n\n\t/**\n  * Stops listening for events. It can be used at different levels:\n  * It is backwards compatible with {@link module:utils/emittermixin~EmitterMixin#listenTo}.\n  *\n  * * To stop listening to a specific callback.\n  * * To stop listening to a specific event.\n  * * To stop listening to all events fired by a specific object.\n  * * To stop listening to all events fired by all object.\n  *\n  * @param {module:utils/emittermixin~Emitter|Node} [emitter] The object to stop listening to. If omitted, stops it for all objects.\n  * @param {String} [event] (Requires the `emitter`) The name of the event to stop listening to. If omitted, stops it\n  * for all events from `emitter`.\n  * @param {Function} [callback] (Requires the `event`) The function to be removed from the call list for the given\n  * `event`.\n  *\n  * @method module:utils/dom/emittermixin~EmitterMixin#stopListening\n  */\n\tstopListening: function stopListening() {\n\t\tfor (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t\t\targs[_key2] = arguments[_key2];\n\t\t}\n\n\t\tvar emitter = args[0];\n\n\t\t// Check if emitter is an instance of DOM Node. If so, replace the argument with corresponding ProxyEmitter.\n\t\tif (isDomNode(emitter)) {\n\t\t\tvar proxy = this._getProxyEmitter(emitter);\n\n\t\t\t// Element has no listeners.\n\t\t\tif (!proxy) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\targs[0] = proxy;\n\t\t}\n\n\t\t// Execute parent class method with Emitter (or ProxyEmitter) instance.\n\t\t_emittermixin2.default.stopListening.apply(this, args);\n\t},\n\n\n\t/**\n  * Retrieves ProxyEmitter instance for given DOM Node residing in this Host.\n  *\n  * @param {Node} node DOM Node of the ProxyEmitter.\n  * @method module:utils/dom/emittermixin~EmitterMixin#_getProxyEmitter\n  * @return {module:utils/dom/emittermixin~ProxyEmitter} ProxyEmitter instance or null.\n  */\n\t_getProxyEmitter: function _getProxyEmitter(node) {\n\t\treturn (0, _emittermixin._getEmitterListenedTo)(this, getNodeUID(node));\n\t}\n});\n\nexports.default = DomEmitterMixin;\n\n/**\n * Creates a ProxyEmitter instance. Such an instance is a bridge between a DOM Node firing events\n * and any Host listening to them. It is backwards compatible with {@link module:utils/emittermixin~EmitterMixin#on}.\n *\n *                                  listenTo( click, ... )\n *                    +-----------------------------------------+\n *                    |              stopListening( ... )       |\n *     +----------------------------+                           |             addEventListener( click, ... )\n *     | Host                       |                           |   +---------------------------------------------+\n *     +----------------------------+                           |   |       removeEventListener( click, ... )     |\n *     | _listeningTo: {            |                +----------v-------------+                                   |\n *     |   UID: {                   |                | ProxyEmitter           |                                   |\n *     |     emitter: ProxyEmitter, |                +------------------------+                      +------------v----------+\n *     |     callbacks: {           |                | events: {              |                      | Node (HTMLElement)    |\n *     |       click: [ callbacks ] |                |   click: [ callbacks ] |                      +-----------------------+\n *     |     }                      |                | },                     |                      | data-ck-expando: UID  |\n *     |   }                        |                | _domNode: Node,        |                      +-----------------------+\n *     | }                          |                | _domListeners: {},     |                                   |\n *     | +------------------------+ |                | _emitterId: UID        |                                   |\n *     | | DomEmitterMixin        | |                +--------------^---------+                                   |\n *     | +------------------------+ |                           |   |                                             |\n *     +--------------^-------------+                           |   +---------------------------------------------+\n *                    |                                         |                  click (DOM Event)\n *                    +-----------------------------------------+\n *                                fire( click, DOM Event )\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n * @implements module:utils/dom/emittermixin~Emitter\n * @private\n */\n\nvar ProxyEmitter =\n/**\n * @param {Node} node DOM Node that fires events.\n * @returns {Object} ProxyEmitter instance bound to the DOM Node.\n */\nfunction ProxyEmitter(node) {\n\t_classCallCheck(this, ProxyEmitter);\n\n\t// Set emitter ID to match DOM Node \"expando\" property.\n\t(0, _emittermixin._setEmitterId)(this, getNodeUID(node));\n\n\t// Remember the DOM Node this ProxyEmitter is bound to.\n\tthis._domNode = node;\n};\n\n(0, _extend2.default)(ProxyEmitter.prototype, _emittermixin2.default, {\n\t/**\n  * Collection of native DOM listeners.\n  *\n  * @private\n  * @member {Object} module:utils/dom/emittermixin~ProxyEmitter#_domListeners\n  */\n\n\t/**\n  * Registers a callback function to be executed when an event is fired.\n  *\n  * It attaches a native DOM listener to the DOM Node. When fired,\n  * a corresponding Emitter event will also fire with DOM Event object as an argument.\n  *\n  * @param {String} event The name of the event.\n  * @param {Function} callback The function to be called on event.\n  * @param {Object} [options={}] Additional options.\n  * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n  * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n  * order they were added.\n  * @param {Object} [options.context] The object that represents `this` in the callback. Defaults to the object firing the event.\n  * @param {Boolean} [options.useCapture=false] Indicates that events of this type will be dispatched to the registered\n  * listener before being dispatched to any EventTarget beneath it in the DOM tree.\n  *\n  * @method module:utils/dom/emittermixin~ProxyEmitter#on\n  */\n\ton: function on(event, callback) {\n\t\tvar options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n\t\t// Execute parent class method first.\n\t\t_emittermixin2.default.on.call(this, event, callback, options);\n\n\t\t// If the DOM Listener for given event already exist it is pointless\n\t\t// to attach another one.\n\t\tif (this._domListeners && this._domListeners[event]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar domListener = this._createDomListener(event, !!options.useCapture);\n\n\t\t// Attach the native DOM listener to DOM Node.\n\t\tthis._domNode.addEventListener(event, domListener, !!options.useCapture);\n\n\t\tif (!this._domListeners) {\n\t\t\tthis._domListeners = {};\n\t\t}\n\n\t\t// Store the native DOM listener in this ProxyEmitter. It will be helpful\n\t\t// when stopping listening to the event.\n\t\tthis._domListeners[event] = domListener;\n\t},\n\n\n\t/**\n  * Stops executing the callback on the given event.\n  *\n  * @param {String} event The name of the event.\n  * @param {Function} callback The function to stop being called.\n  * @param {Object} [context] The context object to be removed, pared with the given callback. To handle cases where\n  * the same callback is used several times with different contexts.\n  *\n  * @method module:utils/dom/emittermixin~ProxyEmitter#off\n  */\n\toff: function off(event, callback, context) {\n\t\t// Execute parent class method first.\n\t\t_emittermixin2.default.off.call(this, event, callback, context);\n\n\t\tvar events = void 0;\n\n\t\t// Remove native DOM listeners which are orphans. If no callbacks\n\t\t// are awaiting given event, detach native DOM listener from DOM Node.\n\t\t// See: {@link on}.\n\n\t\tif (this._domListeners[event] && (!(events = this._events[event]) || !events.callbacks.length)) {\n\t\t\tthis._domListeners[event].removeListener();\n\t\t}\n\t},\n\n\n\t/**\n  * Create a native DOM listener callback. When the native DOM event\n  * is fired it will fire corresponding event on this ProxyEmitter.\n  * Note: A native DOM Event is passed as an argument.\n  *\n  * @private\n  * @param {String} event\n  *\n  * @method module:utils/dom/emittermixin~ProxyEmitter#_createDomListener\n  * @param {String} event The name of the event.\n  * @param {Boolean} useCapture Indicates whether the listener was created for capturing event.\n  * @returns {Function} The DOM listener callback.\n  */\n\t_createDomListener: function _createDomListener(event, useCapture) {\n\t\tvar _this = this;\n\n\t\tvar domListener = function domListener(domEvt) {\n\t\t\t_this.fire(event, domEvt);\n\t\t};\n\n\t\t// Supply the DOM listener callback with a function that will help\n\t\t// detach it from the DOM Node, when it is no longer necessary.\n\t\t// See: {@link off}.\n\t\tdomListener.removeListener = function () {\n\t\t\t_this._domNode.removeEventListener(event, domListener, useCapture);\n\t\t\tdelete _this._domListeners[event];\n\t\t};\n\n\t\treturn domListener;\n\t}\n});\n\n// Gets an unique DOM Node identifier. The identifier will be set if not defined.\n//\n// @private\n// @param {Node} node\n// @return {String} UID for given DOM Node.\nfunction getNodeUID(node) {\n\treturn node['data-ck-expando'] || (node['data-ck-expando'] = (0, _uid2.default)());\n}\n\n// Checks (naively) if given node is native DOM Node.\n//\n// @private\n// @param {Node} node\n// @return {Boolean} True when native DOM Node.\nfunction isDomNode(node) {\n\treturn node && (0, _isNative2.default)(node.addEventListener);\n}\n\n/**\n * Interface representing classes which mix in {@link module:utils/dom/emittermixin~EmitterMixin}.\n *\n * @interface Emitter\n */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/dom/emittermixin.js\n// module id = 88\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _listCacheClear = require('./_listCacheClear');\n\nvar _listCacheClear2 = _interopRequireDefault(_listCacheClear);\n\nvar _listCacheDelete = require('./_listCacheDelete');\n\nvar _listCacheDelete2 = _interopRequireDefault(_listCacheDelete);\n\nvar _listCacheGet = require('./_listCacheGet');\n\nvar _listCacheGet2 = _interopRequireDefault(_listCacheGet);\n\nvar _listCacheHas = require('./_listCacheHas');\n\nvar _listCacheHas2 = _interopRequireDefault(_listCacheHas);\n\nvar _listCacheSet = require('./_listCacheSet');\n\nvar _listCacheSet2 = _interopRequireDefault(_listCacheSet);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = _listCacheClear2.default;\nListCache.prototype['delete'] = _listCacheDelete2.default;\nListCache.prototype.get = _listCacheGet2.default;\nListCache.prototype.has = _listCacheHas2.default;\nListCache.prototype.set = _listCacheSet2.default;\n\nexports.default = ListCache;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_ListCache.js\n// module id = 89\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _MapCache = require('./_MapCache');\n\nvar _MapCache2 = _interopRequireDefault(_MapCache);\n\nvar _setCacheAdd = require('./_setCacheAdd');\n\nvar _setCacheAdd2 = _interopRequireDefault(_setCacheAdd);\n\nvar _setCacheHas = require('./_setCacheHas');\n\nvar _setCacheHas2 = _interopRequireDefault(_setCacheHas);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.__data__ = new _MapCache2.default();\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = _setCacheAdd2.default;\nSetCache.prototype.has = _setCacheHas2.default;\n\nexports.default = SetCache;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_SetCache.js\n// module id = 90\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexports.default = arrayFilter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_arrayFilter.js\n// module id = 91\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nexports.default = arrayPush;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_arrayPush.js\n// module id = 92\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _eq = require('./eq');\n\nvar _eq2 = _interopRequireDefault(_eq);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if ((0, _eq2.default)(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nexports.default = assocIndexOf;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_assocIndexOf.js\n// module id = 93\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseIsEqualDeep = require('./_baseIsEqualDeep');\n\nvar _baseIsEqualDeep2 = _interopRequireDefault(_baseIsEqualDeep);\n\nvar _isObject = require('./isObject');\n\nvar _isObject2 = _interopRequireDefault(_isObject);\n\nvar _isObjectLike = require('./isObjectLike');\n\nvar _isObjectLike2 = _interopRequireDefault(_isObjectLike);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {boolean} [bitmask] The bitmask of comparison flags.\n *  The bitmask may be composed of the following flags:\n *     1 - Unordered comparison\n *     2 - Partial comparison\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, customizer, bitmask, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || !(0, _isObject2.default)(value) && !(0, _isObjectLike2.default)(other)) {\n    return value !== value && other !== other;\n  }\n  return (0, _baseIsEqualDeep2.default)(value, other, baseIsEqual, customizer, bitmask, stack);\n}\n\nexports.default = baseIsEqual;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseIsEqual.js\n// module id = 94\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseSortedIndexBy = require('./_baseSortedIndexBy');\n\nvar _baseSortedIndexBy2 = _interopRequireDefault(_baseSortedIndexBy);\n\nvar _identity = require('./identity');\n\nvar _identity2 = _interopRequireDefault(_identity);\n\nvar _isSymbol = require('./isSymbol');\n\nvar _isSymbol2 = _interopRequireDefault(_isSymbol);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295,\n    HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n/**\n * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n * performs a binary search of `array` to determine the index at which `value`\n * should be inserted into `array` in order to maintain its sort order.\n *\n * @private\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @param {boolean} [retHighest] Specify returning the highest qualified index.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n */\nfunction baseSortedIndex(array, value, retHighest) {\n  var low = 0,\n      high = array ? array.length : low;\n\n  if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n    while (low < high) {\n      var mid = low + high >>> 1,\n          computed = array[mid];\n\n      if (computed !== null && !(0, _isSymbol2.default)(computed) && (retHighest ? computed <= value : computed < value)) {\n        low = mid + 1;\n      } else {\n        high = mid;\n      }\n    }\n    return high;\n  }\n  return (0, _baseSortedIndexBy2.default)(array, value, _identity2.default, retHighest);\n}\n\nexports.default = baseSortedIndex;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseSortedIndex.js\n// module id = 95\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseSlice = require('./_baseSlice');\n\nvar _baseSlice2 = _interopRequireDefault(_baseSlice);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n * without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to query.\n * @param {Function} predicate The function invoked per iteration.\n * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseWhile(array, predicate, isDrop, fromRight) {\n  var length = array.length,\n      index = fromRight ? length : -1;\n\n  while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n\n  return isDrop ? (0, _baseSlice2.default)(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : (0, _baseSlice2.default)(array, fromRight ? index + 1 : 0, fromRight ? length : index);\n}\n\nexports.default = baseWhile;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseWhile.js\n// module id = 96\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isArray = require('./isArray');\n\nvar _isArray2 = _interopRequireDefault(_isArray);\n\nvar _stringToPath = require('./_stringToPath');\n\nvar _stringToPath2 = _interopRequireDefault(_stringToPath);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return (0, _isArray2.default)(value) ? value : (0, _stringToPath2.default)(value);\n}\n\nexports.default = castPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_castPath.js\n// module id = 97\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isKeyable = require('./_isKeyable');\n\nvar _isKeyable2 = _interopRequireDefault(_isKeyable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return (0, _isKeyable2.default)(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nexports.default = getMapData;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_getMapData.js\n// module id = 98\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\nexports.default = isHostObject;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_isHostObject.js\n// module id = 99\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _eq = require('./eq');\n\nvar _eq2 = _interopRequireDefault(_eq);\n\nvar _isArrayLike = require('./isArrayLike');\n\nvar _isArrayLike2 = _interopRequireDefault(_isArrayLike);\n\nvar _isIndex = require('./_isIndex');\n\nvar _isIndex2 = _interopRequireDefault(_isIndex);\n\nvar _isObject = require('./isObject');\n\nvar _isObject2 = _interopRequireDefault(_isObject);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!(0, _isObject2.default)(object)) {\n    return false;\n  }\n  var type = typeof index === 'undefined' ? 'undefined' : _typeof(index);\n  if (type == 'number' ? (0, _isArrayLike2.default)(object) && (0, _isIndex2.default)(index, object.length) : type == 'string' && index in object) {\n    return (0, _eq2.default)(object[index], value);\n  }\n  return false;\n}\n\nexports.default = isIterateeCall;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_isIterateeCall.js\n// module id = 100\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n\n  return value === proto;\n}\n\nexports.default = isPrototype;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_isPrototype.js\n// module id = 101\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getNative = require('./_getNative');\n\nvar _getNative2 = _interopRequireDefault(_getNative);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = (0, _getNative2.default)(Object, 'create');\n\nexports.default = nativeCreate;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_nativeCreate.js\n// module id = 102\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nexports.default = setToArray;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_setToArray.js\n// module id = 103\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getLength = require('./_getLength');\n\nvar _getLength2 = _interopRequireDefault(_getLength);\n\nvar _isFunction = require('./isFunction');\n\nvar _isFunction2 = _interopRequireDefault(_isFunction);\n\nvar _isLength = require('./isLength');\n\nvar _isLength2 = _interopRequireDefault(_isLength);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && (0, _isLength2.default)((0, _getLength2.default)(value)) && !(0, _isFunction2.default)(value);\n}\n\nexports.default = isArrayLike;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/isArrayLike.js\n// module id = 104\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length,\n *  else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nexports.default = isLength;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/isLength.js\n// module id = 105\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getPrototype = require('./_getPrototype');\n\nvar _getPrototype2 = _interopRequireDefault(_getPrototype);\n\nvar _isHostObject = require('./_isHostObject');\n\nvar _isHostObject2 = _interopRequireDefault(_isHostObject);\n\nvar _isObjectLike = require('./isObjectLike');\n\nvar _isObjectLike2 = _interopRequireDefault(_isObjectLike);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object,\n *  else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!(0, _isObjectLike2.default)(value) || objectToString.call(value) != objectTag || (0, _isHostObject2.default)(value)) {\n    return false;\n  }\n  var proto = (0, _getPrototype2.default)(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;\n}\n\nexports.default = isPlainObject;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/isPlainObject.js\n// module id = 106\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _arrayFilter = require('./_arrayFilter');\n\nvar _arrayFilter2 = _interopRequireDefault(_arrayFilter);\n\nvar _arrayMap = require('./_arrayMap');\n\nvar _arrayMap2 = _interopRequireDefault(_arrayMap);\n\nvar _baseProperty = require('./_baseProperty');\n\nvar _baseProperty2 = _interopRequireDefault(_baseProperty);\n\nvar _baseTimes = require('./_baseTimes');\n\nvar _baseTimes2 = _interopRequireDefault(_baseTimes);\n\nvar _isArrayLikeObject = require('./isArrayLikeObject');\n\nvar _isArrayLikeObject2 = _interopRequireDefault(_isArrayLikeObject);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.zip` except that it accepts an array of grouped\n * elements and creates an array regrouping the elements to their pre-zip\n * configuration.\n *\n * @static\n * @memberOf _\n * @since 1.2.0\n * @category Array\n * @param {Array} array The array of grouped elements to process.\n * @returns {Array} Returns the new array of regrouped elements.\n * @example\n *\n * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n * // => [['fred', 30, true], ['barney', 40, false]]\n *\n * _.unzip(zipped);\n * // => [['fred', 'barney'], [30, 40], [true, false]]\n */\nfunction unzip(array) {\n  if (!(array && array.length)) {\n    return [];\n  }\n  var length = 0;\n  array = (0, _arrayFilter2.default)(array, function (group) {\n    if ((0, _isArrayLikeObject2.default)(group)) {\n      length = nativeMax(group.length, length);\n      return true;\n    }\n  });\n  return (0, _baseTimes2.default)(length, function (index) {\n    return (0, _arrayMap2.default)(array, (0, _baseProperty2.default)(index));\n  });\n}\n\nexports.default = unzip;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/unzip.js\n// module id = 107\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// (webpack)/buildin/module.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.insertElement = insertElement;\nexports.insertText = insertText;\nexports.insertUIElement = insertUIElement;\nexports.setAttribute = setAttribute;\nexports.removeAttribute = removeAttribute;\nexports.wrapItem = wrapItem;\nexports.unwrapItem = unwrapItem;\nexports.wrapRange = wrapRange;\nexports.unwrapRange = unwrapRange;\nexports.remove = remove;\nexports.removeUIElement = removeUIElement;\nexports.eventNameToConsumableType = eventNameToConsumableType;\n\nvar _element = require('../view/element');\n\nvar _element2 = _interopRequireDefault(_element);\n\nvar _text = require('../view/text');\n\nvar _text2 = _interopRequireDefault(_text);\n\nvar _range = require('../view/range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _position = require('../view/position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _treewalker = require('../view/treewalker');\n\nvar _treewalker2 = _interopRequireDefault(_treewalker);\n\nvar _writer = require('../view/writer');\n\nvar _writer2 = _interopRequireDefault(_writer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Contains {@link module:engine/model/model model} to {@link module:engine/view/view view} converters for\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher}.\n *\n * @module engine/conversion/model-to-view-converters\n */\n\n/**\n * Function factory, creates a converter that converts node insertion changes from the model to the view.\n * The view element that will be added to the view depends on passed parameter. If {@link module:engine/view/element~Element} was passed,\n * it will be cloned and the copy will be inserted. If `Function` is provided, it is passed all the parameters of the\n * dispatcher's {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:insert insert event}.\n * It's expected that the function returns a {@link module:engine/view/element~Element}.\n * The result of the function will be inserted to the view.\n *\n * The converter automatically consumes corresponding value from consumables list, stops the event (see\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher}) and bind model and view elements.\n *\n *\t\tmodelDispatcher.on( 'insert:paragraph', insertElement( new ViewElement( 'p' ) ) );\n *\n *\t\tmodelDispatcher.on(\n *\t\t\t'insert:myElem',\n *\t\t\tinsertElement( ( data, consumable, conversionApi ) => {\n *\t\t\t\tlet myElem = new ViewElement( 'myElem', { myAttr: true }, new ViewText( 'myText' ) );\n *\n *\t\t\t\t// Do something fancy with myElem using data/consumable/conversionApi ...\n *\n *\t\t\t\treturn myElem;\n *\t\t\t}\n *\t\t) );\n *\n * @param {module:engine/view/element~Element|Function} elementCreator View element, or function returning a view element, which\n * will be inserted.\n * @returns {Function} Insert element event converter.\n */\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\nfunction insertElement(elementCreator) {\n  return function (evt, data, consumable, conversionApi) {\n    var viewElement = elementCreator instanceof _element2.default ? elementCreator.clone(true) : elementCreator(data, consumable, conversionApi);\n\n    if (!viewElement) {\n      return;\n    }\n\n    if (!consumable.consume(data.item, 'insert')) {\n      return;\n    }\n\n    var viewPosition = conversionApi.mapper.toViewPosition(data.range.start);\n\n    conversionApi.mapper.bindElements(data.item, viewElement);\n    _writer2.default.insert(viewPosition, viewElement);\n  };\n}\n\n/**\n * Function factory, creates a default model-to-view converter for text insertion changes.\n *\n * The converter automatically consumes corresponding value from consumables list and stops the event (see\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher}).\n *\n *\t\tmodelDispatcher.on( 'insert:$text', insertText() );\n *\n * @returns {Function} Insert text event converter.\n */\nfunction insertText() {\n  return function (evt, data, consumable, conversionApi) {\n    if (!consumable.consume(data.item, 'insert')) {\n      return;\n    }\n\n    var viewPosition = conversionApi.mapper.toViewPosition(data.range.start);\n    var viewText = new _text2.default(data.item.data);\n\n    _writer2.default.insert(viewPosition, viewText);\n  };\n}\n\n/**\n * Function factory, creates a converter that converts marker adding change to the view ui element.\n * The view ui element that will be added to the view depends on passed parameter. See {@link ~insertElement}.\n * In a case of collapsed range element will not wrap range but separate elements will be placed at the beginning\n * and at the end of the range.\n *\n * **Note:** unlike {@link ~insertElement}, the converter does not bind view element to model, because this converter\n * uses marker as \"model source of data\". This means that view ui element does not have corresponding model element.\n *\n * @param {module:engine/view/uielement~UIElement|Function} elementCreator View ui element, or function returning a view element, which\n * will be inserted.\n * @returns {Function} Insert element event converter.\n */\nfunction insertUIElement(elementCreator) {\n  return function (evt, data, consumable, conversionApi) {\n    var viewStartElement = void 0,\n        viewEndElement = void 0;\n\n    if (elementCreator instanceof _element2.default) {\n      viewStartElement = elementCreator.clone(true);\n      viewEndElement = elementCreator.clone(true);\n    } else {\n      data.isOpening = true;\n      viewStartElement = elementCreator(data, consumable, conversionApi);\n\n      data.isOpening = false;\n      viewEndElement = elementCreator(data, consumable, conversionApi);\n    }\n\n    if (!viewStartElement || !viewEndElement) {\n      return;\n    }\n\n    if (!consumable.consume(data.range, 'addMarker')) {\n      return;\n    }\n\n    var mapper = conversionApi.mapper;\n\n    _writer2.default.insert(mapper.toViewPosition(data.range.start), viewStartElement);\n\n    if (!data.range.isCollapsed) {\n      _writer2.default.insert(mapper.toViewPosition(data.range.end), viewEndElement);\n    }\n  };\n}\n\n/**\n * Function factory, creates a converter that converts set/change attribute changes from the model to the view. Attributes\n * from model are converted to the view element attributes in the view. You may provide a custom function to generate a\n * key-value attribute pair to add/change. If not provided, model attributes will be converted to view elements attributes\n * on 1-to-1 basis.\n *\n * **Note:** Provided attribute creator should always return the same `key` for given attribute from the model.\n *\n * The converter automatically consumes corresponding value from consumables list and stops the event (see\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher}).\n *\n *\t\tmodelDispatcher.on( 'addAttribute:customAttr:myElem', setAttribute( ( data ) => {\n *\t\t\t// Change attribute key from `customAttr` to `class` in view.\n *\t\t\tconst key = 'class';\n *\t\t\tlet value = data.attributeNewValue;\n *\n *\t\t\t// Force attribute value to 'empty' if the model element is empty.\n *\t\t\tif ( data.item.childCount === 0 ) {\n *\t\t\t\tvalue = 'empty';\n *\t\t\t}\n *\n *\t\t\t// Return key-value pair.\n *\t\t\treturn { key, value };\n *\t\t} ) );\n *\n * @param {Function} [attributeCreator] Function returning an object with two properties: `key` and `value`, which\n * represents attribute key and attribute value to be set on a {@link module:engine/view/element~Element view element}.\n * The function is passed all the parameters of the\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:addAttribute}\n * or {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:changeAttribute} event.\n * @returns {Function} Set/change attribute converter.\n */\nfunction setAttribute(attributeCreator) {\n  attributeCreator = attributeCreator || function (value, key) {\n    return { value: value, key: key };\n  };\n\n  return function (evt, data, consumable, conversionApi) {\n    if (!consumable.consume(data.item, eventNameToConsumableType(evt.name))) {\n      return;\n    }\n\n    var _attributeCreator = attributeCreator(data.attributeNewValue, data.attributeKey, data, consumable, conversionApi),\n        key = _attributeCreator.key,\n        value = _attributeCreator.value;\n\n    conversionApi.mapper.toViewElement(data.item).setAttribute(key, value);\n  };\n}\n\n/**\n * Function factory, creates a converter that converts remove attribute changes from the model to the view. Removes attributes\n * that were converted to the view element attributes in the view. You may provide a custom function to generate a\n * key-value attribute pair to remove. If not provided, model attributes will be removed from view elements on 1-to-1 basis.\n *\n * **Note:** Provided attribute creator should always return the same `key` for given attribute from the model.\n *\n * **Note:** You can use the same attribute creator as in {@link module:engine/conversion/model-to-view-converters~setAttribute}.\n *\n * The converter automatically consumes corresponding value from consumables list and stops the event (see\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher}).\n *\n *\t\tmodelDispatcher.on( 'removeAttribute:customAttr:myElem', removeAttribute( ( data ) => {\n *\t\t\t// Change attribute key from `customAttr` to `class` in view.\n *\t\t\tconst key = 'class';\n *\t\t\tlet value = data.attributeNewValue;\n *\n *\t\t\t// Force attribute value to 'empty' if the model element is empty.\n *\t\t\tif ( data.item.childCount === 0 ) {\n *\t\t\t\tvalue = 'empty';\n *\t\t\t}\n *\n *\t\t\t// Return key-value pair.\n *\t\t\treturn { key, value };\n *\t\t} ) );\n *\n * @param {Function} [attributeCreator] Function returning an object with two properties: `key` and `value`, which\n * represents attribute key and attribute value to be removed from {@link module:engine/view/element~Element view element}.\n * The function is passed all the parameters of the\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:addAttribute addAttribute event}\n * or {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:changeAttribute changeAttribute event}.\n * @returns {Function} Remove attribute converter.\n */\nfunction removeAttribute(attributeCreator) {\n  attributeCreator = attributeCreator || function (value, key) {\n    return { key: key };\n  };\n\n  return function (evt, data, consumable, conversionApi) {\n    if (!consumable.consume(data.item, eventNameToConsumableType(evt.name))) {\n      return;\n    }\n\n    var _attributeCreator2 = attributeCreator(data.attributeOldValue, data.attributeKey, data, consumable, conversionApi),\n        key = _attributeCreator2.key;\n\n    conversionApi.mapper.toViewElement(data.item).removeAttribute(key);\n  };\n}\n\n/**\n * Function factory, creates a converter that converts set/change attribute changes from the model to the view. In this case,\n * model attributes are converted to a view element that will be wrapping view nodes which corresponding model nodes had\n * the attribute set. This is useful for attributes like `bold`, which may be set on text nodes in model but are\n * represented as an element in the view:\n *\n *\t\t[paragraph]              MODEL ====> VIEW        <p>\n *\t\t\t|- a {bold: true}                             |- <b>\n *\t\t\t|- b {bold: true}                             |   |- ab\n *\t\t\t|- c                                          |- c\n *\n * The wrapping node depends on passed parameter. If {@link module:engine/view/element~Element} was passed, it will be cloned and\n * the copy will become the wrapping element. If `Function` is provided, it is passed attribute value and then all the parameters of the\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:addAttribute addAttribute event}.\n * It's expected that the function returns a {@link module:engine/view/element~Element}.\n * The result of the function will be the wrapping element.\n * When provided `Function` does not return element, then will be no conversion.\n *\n * The converter automatically consumes corresponding value from consumables list, stops the event (see\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher}).\n *\n *\t\tmodelDispatcher.on( 'addAttribute:bold', wrapItem( new ViewAttributeElement( 'strong' ) ) );\n *\n * @param {module:engine/view/element~Element|Function} elementCreator View element, or function returning a view element, which will\n * be used for wrapping.\n * @returns {Function} Set/change attribute converter.\n */\nfunction wrapItem(elementCreator) {\n  return function (evt, data, consumable, conversionApi) {\n    var viewElement = elementCreator instanceof _element2.default ? elementCreator.clone(true) : elementCreator(data.attributeNewValue, data, consumable, conversionApi);\n\n    if (!viewElement) {\n      return;\n    }\n\n    if (!consumable.consume(data.item, eventNameToConsumableType(evt.name))) {\n      return;\n    }\n\n    var viewRange = conversionApi.mapper.toViewRange(data.range);\n\n    // If this is a change event (because old value is not empty) and the creator is a function (so\n    // it may create different view elements basing on attribute value) we have to create\n    // view element basing on old value and unwrap it before wrapping with a newly created view element.\n    if (data.attributeOldValue !== null && !(elementCreator instanceof _element2.default)) {\n      var oldViewElement = elementCreator(data.attributeOldValue, data, consumable, conversionApi);\n      viewRange = _writer2.default.unwrap(viewRange, oldViewElement);\n    }\n\n    _writer2.default.wrap(viewRange, viewElement);\n  };\n}\n\n/**\n * Function factory, creates a converter that converts remove attribute changes from the model to the view. It assumes, that\n * attributes from model were converted to elements in the view. This converter will unwrap view nodes from corresponding\n * view element if given attribute was removed.\n *\n * The view element type that will be unwrapped depends on passed parameter.\n * If {@link module:engine/view/element~Element} was passed, it will be used to look for similar element in the view for unwrapping.\n * If `Function` is provided, it is passed all the parameters of the\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:addAttribute addAttribute event}.\n * It's expected that the function returns a {@link module:engine/view/element~Element}.\n * The result of the function will be used to look for similar element in the view for unwrapping.\n *\n * The converter automatically consumes corresponding value from consumables list, stops the event (see\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher}) and bind model and view elements.\n *\n *\t\tmodelDispatcher.on( 'removeAttribute:bold', unwrapItem( new ViewAttributeElement( 'strong' ) ) );\n *\n * @see module:engine/conversion/model-to-view-converters~wrapItem\n * @param {module:engine/view/element~Element|Function} elementCreator View element, or function returning a view element, which will\n * be used for unwrapping.\n * @returns {Function} Remove attribute converter.\n */\nfunction unwrapItem(elementCreator) {\n  return function (evt, data, consumable, conversionApi) {\n    var viewElement = elementCreator instanceof _element2.default ? elementCreator.clone(true) : elementCreator(data.attributeOldValue, data, consumable, conversionApi);\n\n    if (!viewElement) {\n      return;\n    }\n\n    if (!consumable.consume(data.item, eventNameToConsumableType(evt.name))) {\n      return;\n    }\n\n    var viewRange = conversionApi.mapper.toViewRange(data.range);\n\n    _writer2.default.unwrap(viewRange, viewElement);\n  };\n}\n\n/**\n * Function factory, creates a converter that wraps model range.\n *\n * In contrary to {@link module:engine/conversion/model-to-view-converters~wrapItem}, this converter's input is a\n * {@link module:engine/model/range~Range model range} (not changed model item). The model range is mapped\n * to {@link module:engine/view/range~Range view range} and then, view items within that view range are wrapped in a\n * {@link module:engine/view/attributeelement~AttributeElement view attribute element}. Note, that `elementCreator`\n * function of this converter takes different parameters that `elementCreator` of `wrapItem`.\n *\n * Let's assume following model and view. `{}` represents a range that is added as a marker with `searchResult` name.\n * The range represents a result of search `ab` string in the model document. The range has to be visualized in view.\n *\n *\t\t[paragraph]              MODEL ====> VIEW        <p>\n *\t\t\t|- {a                                         |- <span class=\"searchResult\">\n *\t\t\t|-  b}                                        |   |- ab\n *\t\t\t|-  c                                         |- c\n *\n * The wrapping node depends on passed parameter. If {@link module:engine/view/attributeelement~AttributeElement} was passed, it\n * will be cloned and the copy will become the wrapping element. If `Function` is provided, it is passed all the parameters of the\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:addMarker addMarker event}. It's expected\n * that the function returns a {@link module:engine/view/attributeelement~AttributeElement}. The result of the function will be the\n * wrapping element. When provided `Function` does not return element, then will be no conversion.\n *\n * The converter automatically consumes corresponding value from consumables list, stops the event (see\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher}).\n *\n *\t\tmodelDispatcher.on( 'addMarker:searchResult', wrapRange( new ViewAttributeElement( 'span', { class: 'searchResult' } ) ) );\n *\n * @param {module:engine/view/attributeelement~AttributeElement|Function} elementCreator View attribute element, or function returning\n * a view attribute element, which will be used for wrapping.\n * @returns {Function} Wrap range converter.\n */\nfunction wrapRange(elementCreator) {\n  return function (evt, data, consumable, conversionApi) {\n    var viewElement = elementCreator instanceof _element2.default ? elementCreator.clone(true) : elementCreator(data, consumable, conversionApi);\n\n    if (!viewElement) {\n      return;\n    }\n\n    if (!consumable.consume(data.range, 'addMarker')) {\n      return;\n    }\n\n    var viewRange = conversionApi.mapper.toViewRange(data.range);\n    var flatViewRanges = _writer2.default.breakViewRangePerContainer(viewRange);\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = flatViewRanges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var range = _step.value;\n\n        _writer2.default.wrap(range, viewElement);\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  };\n}\n\n/**\n * Function factory, creates a converter that converts removing of a model marker to view attribute element.\n * This converter will unwrap view nodes from corresponding view range.\n *\n * The view element that will be unwrapped depends on passed parameter. If {@link module:engine/view/attributeelement~AttributeElement}\n * was passed, it will be used to look for similar element in the view for unwrapping. If `Function` is provided, it is passed all\n * the parameters of the\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:removeMarker removeMarker event}.\n * It's expected that the function returns a {@link module:engine/view/attributeelement~AttributeElement}. The result of\n * the function will be used to look for similar element in the view for unwrapping.\n *\n * The converter automatically consumes corresponding value from consumables list, stops the event (see\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher}) and bind model and view elements.\n *\n *\t\tmodelDispatcher.on( 'removeMarker:searchResult', unwrapRange( new ViewAttributeElement( 'span', { class: 'searchResult' } ) ) );\n *\n * @see module:engine/conversion/model-to-view-converters~wrapRange\n * @param {module:engine/view/attributeelement~AttributeElement|Function} elementCreator View attribute element, or function returning\n * a view attribute element, which will be used for unwrapping.\n * @returns {Function} Unwrap range converter.\n */\nfunction unwrapRange(elementCreator) {\n  return function (evt, data, consumable, conversionApi) {\n    var viewElement = elementCreator instanceof _element2.default ? elementCreator.clone(true) : elementCreator(data, consumable, conversionApi);\n\n    if (!viewElement) {\n      return;\n    }\n\n    if (!consumable.consume(data.range, 'removeMarker')) {\n      return;\n    }\n\n    var viewRange = conversionApi.mapper.toViewRange(data.range);\n    var flatViewRanges = _writer2.default.breakViewRangePerContainer(viewRange);\n\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = flatViewRanges[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var range = _step2.value;\n\n        _writer2.default.unwrap(range, viewElement);\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2.return) {\n          _iterator2.return();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n  };\n}\n\n/**\n * Function factory, creates a default model-to-view converter for node remove changes.\n *\n *\t\tmodelDispatcher.on( 'remove', remove() );\n *\n * @returns {Function} Remove event converter.\n */\nfunction remove() {\n  return function (evt, data, consumable, conversionApi) {\n    if (!consumable.consume(data.item, 'remove')) {\n      return;\n    }\n\n    // We cannot map non-existing positions from model to view. Since a range was removed\n    // from the model, we cannot recreate that range and map it to view, because\n    // end of that range is incorrect.\n    // Instead we will use `data.sourcePosition` as this is the last correct model position and\n    // it is a position before the removed item. Then, we will calculate view range to remove \"manually\".\n    var viewPosition = conversionApi.mapper.toViewPosition(data.sourcePosition);\n    var viewRange = void 0;\n\n    if (data.item.is('element')) {\n      // Note: in remove conversion we cannot use model-to-view element mapping because `data.item` may be\n      // already mapped to another element (this happens when move change is converted).\n      // In this case however, `viewPosition` is the position before view element that corresponds to removed model element.\n      //\n      // First, fix the position. Traverse the tree forward until the container element is found. The `viewPosition`\n      // may be before a ui element, before attribute element or at the end of text element.\n      viewPosition = viewPosition.getLastMatchingPosition(function (value) {\n        return !value.item.is('containerElement');\n      });\n\n      if (viewPosition.parent.is('text') && viewPosition.isAtEnd) {\n        viewPosition = _position2.default.createAfter(viewPosition.parent);\n      }\n\n      viewRange = _range2.default.createOn(viewPosition.nodeAfter);\n    } else {\n      // If removed item is a text node, we need to traverse view tree to find the view range to remove.\n      // Range to remove will start `viewPosition` and should contain amount of characters equal to the amount of removed characters.\n      var viewRangeEnd = _shiftViewPositionByCharacters(viewPosition, data.item.offsetSize);\n      viewRange = new _range2.default(viewPosition, viewRangeEnd);\n    }\n\n    // Trim the range to remove in case some UI elements are on the view range boundaries.\n    _writer2.default.remove(viewRange.getTrimmed());\n\n    // Unbind this element only if it was moved to graveyard.\n    // The dispatcher#remove event will also be fired if the element was moved to another place (remove+insert are fired).\n    // Let's say that <b> is moved before <a>. The view will be changed like this:\n    //\n    // 1) start:    <a></a><b></b>\n    // 2) insert:   <b (new)></b><a></a><b></b>\n    // 3) remove:   <b (new)></b><a></a>\n    //\n    // If we'll unbind the <b> element in step 3 we'll also lose binding of the <b (new)> element in the view,\n    // because unbindModelElement() cancels both bindings – (model <b> => view <b (new)>) and (view <b (new)> => model <b>).\n    // We can't lose any of these.\n    //\n    // See #847.\n    if (data.item.root.rootName == '$graveyard') {\n      conversionApi.mapper.unbindModelElement(data.item);\n    }\n  };\n}\n\n// Helper function that shifts given view `position` in a way that returned position is after `howMany` characters compared\n// to the original `position`.\n// Because in view there might be view ui elements splitting text nodes, we cannot simply use `ViewPosition#getShiftedBy()`.\nfunction _shiftViewPositionByCharacters(position, howMany) {\n  // Create a walker that will walk the view tree starting from given position and walking characters one-by-one.\n  var walker = new _treewalker2.default({ startPosition: position, singleCharacters: true });\n  // We will count visited characters and return the position after `howMany` characters.\n  var charactersFound = 0;\n\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = walker[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var value = _step3.value;\n\n      if (value.type == 'text') {\n        charactersFound++;\n\n        if (charactersFound == howMany) {\n          return walker.position;\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n}\n\n/**\n * Function factory, creates a default model-to-view converter for removing {@link module:engine/view/uielement~UIElement ui element}\n * basing on marker remove change.\n *\n * @param {module:engine/view/uielement~UIElement|Function} elementCreator View ui element, or function returning\n * a view ui element, which will be used as a pattern when look for element to remove at the marker start position.\n * @returns {Function} Remove ui element converter.\n */\nfunction removeUIElement(elementCreator) {\n  return function (evt, data, consumable, conversionApi) {\n    var viewStartElement = void 0,\n        viewEndElement = void 0;\n\n    if (elementCreator instanceof _element2.default) {\n      viewStartElement = elementCreator.clone(true);\n      viewEndElement = elementCreator.clone(true);\n    } else {\n      data.isOpening = true;\n      viewStartElement = elementCreator(data, consumable, conversionApi);\n\n      data.isOpening = false;\n      viewEndElement = elementCreator(data, consumable, conversionApi);\n    }\n\n    if (!viewStartElement || !viewEndElement) {\n      return;\n    }\n\n    if (!consumable.consume(data.range, 'removeMarker')) {\n      return;\n    }\n\n    var viewRange = conversionApi.mapper.toViewRange(data.range);\n\n    // First remove closing element.\n    _writer2.default.clear(viewRange.getEnlarged(), viewEndElement);\n\n    // If closing and opening elements are not the same then remove opening element.\n    if (!viewStartElement.isSimilar(viewEndElement)) {\n      _writer2.default.clear(viewRange.getEnlarged(), viewStartElement);\n    }\n  };\n}\n\n/**\n * Returns the consumable type that is to be consumed in an event, basing on that event name.\n *\n * @param {String} evtName Event name.\n * @returns {String} Consumable type.\n */\nfunction eventNameToConsumableType(evtName) {\n  var parts = evtName.split(':');\n\n  return parts[0] + ':' + parts[1];\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/conversion/model-to-view-converters.js\n// module id = 109\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.RootAttributeDelta = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _delta = require('./delta');\n\nvar _delta2 = _interopRequireDefault(_delta);\n\nvar _deltafactory = require('./deltafactory');\n\nvar _deltafactory2 = _interopRequireDefault(_deltafactory);\n\nvar _batch = require('../batch');\n\nvar _attributeoperation = require('../operation/attributeoperation');\n\nvar _attributeoperation2 = _interopRequireDefault(_attributeoperation);\n\nvar _rootattributeoperation = require('../operation/rootattributeoperation');\n\nvar _rootattributeoperation2 = _interopRequireDefault(_rootattributeoperation);\n\nvar _nooperation = require('../operation/nooperation');\n\nvar _nooperation2 = _interopRequireDefault(_nooperation);\n\nvar _position = require('../position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _range = require('../range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/model/delta/attributedelta\n */\n\n/**\n * To provide specific OT behavior and better collisions solving, methods to change attributes\n * ({@link module:engine/model/batch~Batch#setAttribute} and {@link module:engine/model/batch~Batch#removeAttribute})\n * use `AttributeDelta` class which inherits from the `Delta` class and may overwrite some methods.\n * @extends module:engine/model/delta/delta~Delta\n */\nvar AttributeDelta = function (_Delta) {\n\t_inherits(AttributeDelta, _Delta);\n\n\tfunction AttributeDelta() {\n\t\t_classCallCheck(this, AttributeDelta);\n\n\t\treturn _possibleConstructorReturn(this, (AttributeDelta.__proto__ || Object.getPrototypeOf(AttributeDelta)).apply(this, arguments));\n\t}\n\n\t_createClass(AttributeDelta, [{\n\t\tkey: 'toJSON',\n\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tvalue: function toJSON() {\n\t\t\tvar json = _get(AttributeDelta.prototype.__proto__ || Object.getPrototypeOf(AttributeDelta.prototype), 'toJSON', this).call(this);\n\n\t\t\tdelete json._range;\n\n\t\t\treturn json;\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'type',\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tget: function get() {\n\t\t\treturn 'attribute';\n\t\t}\n\n\t\t/**\n   * The attribute key that is changed by the delta or `null` if the delta has no operations.\n   *\n   * @readonly\n   * @type {String|null}\n   */\n\n\t}, {\n\t\tkey: 'key',\n\t\tget: function get() {\n\t\t\treturn this.operations[0] ? this.operations[0].key : null;\n\t\t}\n\n\t\t/**\n   * The attribute value that is set by the delta or `null` if the delta has no operations.\n   *\n   * @readonly\n   * @type {*|null}\n   */\n\n\t}, {\n\t\tkey: 'value',\n\t\tget: function get() {\n\t\t\treturn this.operations[0] ? this.operations[0].newValue : null;\n\t\t}\n\n\t\t/**\n   * The range on which delta operates or `null` if the delta has no operations.\n   *\n   * @readonly\n   * @type {module:engine/model/range~Range|null}\n   */\n\n\t}, {\n\t\tkey: 'range',\n\t\tget: function get() {\n\t\t\t// Check if it is cached.\n\t\t\tif (this._range) {\n\t\t\t\treturn this._range;\n\t\t\t}\n\n\t\t\tvar start = null;\n\t\t\tvar end = null;\n\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = this.operations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar operation = _step.value;\n\n\t\t\t\t\tif (operation instanceof _nooperation2.default) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (start === null || start.isAfter(operation.range.start)) {\n\t\t\t\t\t\tstart = operation.range.start;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (end === null || end.isBefore(operation.range.end)) {\n\t\t\t\t\t\tend = operation.range.end;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start && end) {\n\t\t\t\tthis._range = new _range2.default(start, end);\n\n\t\t\t\treturn this._range;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\t}, {\n\t\tkey: '_reverseDeltaClass',\n\t\tget: function get() {\n\t\t\treturn AttributeDelta;\n\t\t}\n\t}], [{\n\t\tkey: 'className',\n\t\tget: function get() {\n\t\t\treturn 'engine.model.delta.AttributeDelta';\n\t\t}\n\t}]);\n\n\treturn AttributeDelta;\n}(_delta2.default);\n\n/**\n * To provide specific OT behavior and better collisions solving, methods to change attributes\n * ({@link module:engine/model/batch~Batch#setAttribute} and {@link module:engine/model/batch~Batch#removeAttribute})\n * use `RootAttributeDelta` class which inherits from the `Delta` class and may\n * overwrite some methods.\n *\n * @extends module:engine/model/delta/delta~Delta\n */\n\n\nexports.default = AttributeDelta;\n\nvar RootAttributeDelta = exports.RootAttributeDelta = function (_Delta2) {\n\t_inherits(RootAttributeDelta, _Delta2);\n\n\tfunction RootAttributeDelta() {\n\t\t_classCallCheck(this, RootAttributeDelta);\n\n\t\treturn _possibleConstructorReturn(this, (RootAttributeDelta.__proto__ || Object.getPrototypeOf(RootAttributeDelta)).apply(this, arguments));\n\t}\n\n\t_createClass(RootAttributeDelta, null, [{\n\t\tkey: 'className',\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tget: function get() {\n\t\t\treturn 'engine.model.delta.RootAttributeDelta';\n\t\t}\n\t}]);\n\n\treturn RootAttributeDelta;\n}(_delta2.default);\n\n/**\n * Sets value of the attribute with given key on a {@link module:engine/model/item~Item model item}\n * or on a {@link module:engine/model/range~Range range}.\n *\n * @chainable\n * @method module:engine/model/batch~Batch#setAttribute\n * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange\n * Model item or range on which the attribute will be set.\n * @param {String} key Attribute key.\n * @param {*} value Attribute new value.\n */\n\n\n(0, _batch.register)('setAttribute', function (itemOrRange, key, value) {\n\tattribute(this, key, value, itemOrRange);\n\n\treturn this;\n});\n\n/**\n * Removes an attribute with given key from a {@link module:engine/model/item~Item model item}\n * or from a {@link module:engine/model/range~Range range}.\n *\n * @chainable\n * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange\n * Model item or range from which the attribute will be removed.\n * @method module:engine/model/batch~Batch#removeAttribute\n * @param {String} key Attribute key.\n */\n(0, _batch.register)('removeAttribute', function (itemOrRange, key) {\n\tattribute(this, key, null, itemOrRange);\n\n\treturn this;\n});\n\nfunction attribute(batch, key, value, itemOrRange) {\n\tif (itemOrRange instanceof _range2.default) {\n\t\tchangeRange(batch, batch.document, key, value, itemOrRange);\n\t} else {\n\t\tchangeItem(batch, batch.document, key, value, itemOrRange);\n\t}\n}\n\nfunction changeItem(batch, doc, key, value, item) {\n\tvar previousValue = item.getAttribute(key);\n\tvar range = void 0,\n\t    operation = void 0;\n\n\tvar delta = item.is('rootElement') ? new RootAttributeDelta() : new AttributeDelta();\n\n\tif (previousValue != value) {\n\t\tbatch.addDelta(delta);\n\n\t\tif (item.is('rootElement')) {\n\t\t\t// If we change attributes of root element, we have to use `RootAttributeOperation`.\n\t\t\toperation = new _rootattributeoperation2.default(item, key, previousValue, value, doc.version);\n\t\t} else {\n\t\t\tif (item.is('element')) {\n\t\t\t\t// If we change the attribute of the element, we do not want to change attributes of its children, so\n\t\t\t\t// the end of the range cannot be after the closing tag, it should be inside that element, before any of\n\t\t\t\t// it's children, so the range will contain only the opening tag.\n\t\t\t\trange = new _range2.default(_position2.default.createBefore(item), _position2.default.createFromParentAndOffset(item, 0));\n\t\t\t} else {\n\t\t\t\t// If `item` is text proxy, we create a range from the beginning to the end of that text proxy, to change\n\t\t\t\t// all characters represented by it.\n\t\t\t\trange = new _range2.default(_position2.default.createBefore(item), _position2.default.createAfter(item));\n\t\t\t}\n\n\t\t\toperation = new _attributeoperation2.default(range, key, previousValue, value, doc.version);\n\t\t}\n\n\t\tdelta.addOperation(operation);\n\t\tdoc.applyOperation(operation);\n\t}\n}\n\n// Because attribute operation needs to have the same attribute value on the whole range, this function splits the range\n// into smaller parts.\nfunction changeRange(batch, doc, attributeKey, attributeValue, range) {\n\tvar delta = new AttributeDelta();\n\n\t// Position of the last split, the beginning of the new range.\n\tvar lastSplitPosition = range.start;\n\n\t// Currently position in the scanning range. Because we need value after the position, it is not a current\n\t// position of the iterator but the previous one (we need to iterate one more time to get the value after).\n\tvar position = void 0,\n\n\t// Value before the currently position.\n\tattributeValueBefore = void 0,\n\n\t// Value after the currently position.\n\tattributeValueAfter = void 0;\n\n\tvar _iteratorNormalCompletion2 = true;\n\tvar _didIteratorError2 = false;\n\tvar _iteratorError2 = undefined;\n\n\ttry {\n\t\tfor (var _iterator2 = range[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\tvar value = _step2.value;\n\n\t\t\tattributeValueAfter = value.item.getAttribute(attributeKey);\n\n\t\t\t// At the first run of the iterator the position in undefined. We also do not have a attributeValueBefore, but\n\t\t\t// because attributeValueAfter may be null, attributeValueBefore may be equal attributeValueAfter ( undefined == null ).\n\t\t\tif (position && attributeValueBefore != attributeValueAfter) {\n\t\t\t\t// if attributeValueBefore == attributeValue there is nothing to change, so we add operation only if these values are different.\n\t\t\t\tif (attributeValueBefore != attributeValue) {\n\t\t\t\t\taddOperation();\n\t\t\t\t}\n\n\t\t\t\tlastSplitPosition = position;\n\t\t\t}\n\n\t\t\tposition = value.nextPosition;\n\t\t\tattributeValueBefore = attributeValueAfter;\n\t\t}\n\n\t\t// Because position in the loop is not the iterator position (see let position comment), the last position in\n\t\t// the while loop will be last but one position in the range. We need to check the last position manually.\n\t} catch (err) {\n\t\t_didIteratorError2 = true;\n\t\t_iteratorError2 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t_iterator2.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError2) {\n\t\t\t\tthrow _iteratorError2;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (position instanceof _position2.default && position != lastSplitPosition && attributeValueBefore != attributeValue) {\n\t\taddOperation();\n\t}\n\n\tfunction addOperation() {\n\t\t// Add delta to the batch only if there is at least operation in the delta. Add delta only once.\n\t\tif (delta.operations.length === 0) {\n\t\t\tbatch.addDelta(delta);\n\t\t}\n\n\t\tvar range = new _range2.default(lastSplitPosition, position);\n\t\tvar operation = new _attributeoperation2.default(range, attributeKey, attributeValueBefore, attributeValue, doc.version);\n\n\t\tdelta.addOperation(operation);\n\t\tdoc.applyOperation(operation);\n\t}\n}\n\n_deltafactory2.default.register(AttributeDelta);\n_deltafactory2.default.register(RootAttributeDelta);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/delta/attributedelta.js\n// module id = 110\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _delta = require('./delta');\n\nvar _delta2 = _interopRequireDefault(_delta);\n\nvar _removedelta = require('./removedelta');\n\nvar _removedelta2 = _interopRequireDefault(_removedelta);\n\nvar _deltafactory = require('./deltafactory');\n\nvar _deltafactory2 = _interopRequireDefault(_deltafactory);\n\nvar _insertoperation = require('../operation/insertoperation');\n\nvar _insertoperation2 = _interopRequireDefault(_insertoperation);\n\nvar _batch = require('../batch');\n\nvar _writer = require('./../writer');\n\nvar _documentfragment = require('../documentfragment');\n\nvar _documentfragment2 = _interopRequireDefault(_documentfragment);\n\nvar _range = require('../../model/range.js');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _position = require('../../model/position.js');\n\nvar _position2 = _interopRequireDefault(_position);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/model/delta/insertdelta\n */\n\n/**\n * @classdesc\n * To provide specific OT behavior and better collisions solving, the {@link module:engine/model/batch~Batch#insert Batch#insert} method\n * uses the `InsertDelta` class which inherits from the `Delta` class and may overwrite some methods.\n */\nvar InsertDelta = function (_Delta) {\n\t_inherits(InsertDelta, _Delta);\n\n\tfunction InsertDelta() {\n\t\t_classCallCheck(this, InsertDelta);\n\n\t\treturn _possibleConstructorReturn(this, (InsertDelta.__proto__ || Object.getPrototypeOf(InsertDelta)).apply(this, arguments));\n\t}\n\n\t_createClass(InsertDelta, [{\n\t\tkey: 'type',\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tget: function get() {\n\t\t\treturn 'insert';\n\t\t}\n\n\t\t/**\n   * Position where the delta inserts nodes or `null` if there are no operations in the delta.\n   *\n   * @readonly\n   * @type {module:engine/model/position~Position|null}\n   */\n\n\t}, {\n\t\tkey: 'position',\n\t\tget: function get() {\n\t\t\treturn this._insertOperation ? this._insertOperation.position : null;\n\t\t}\n\n\t\t/**\n   * Node list containing all the nodes inserted by the delta or `null` if there are no operations in the delta.\n   *\n   * @readonly\n   * @type {module:engine/model/nodelist~NodeList|null}\n   */\n\n\t}, {\n\t\tkey: 'nodes',\n\t\tget: function get() {\n\t\t\treturn this._insertOperation ? this._insertOperation.nodes : null;\n\t\t}\n\n\t\t/**\n   * Insert operation that is saved in this delta or `null` if there are no operations in the delta.\n   *\n   * @readonly\n   * @protected\n   * @type {module:engine/model/operation/insertoperation~InsertOperation|null}\n   */\n\n\t}, {\n\t\tkey: '_insertOperation',\n\t\tget: function get() {\n\t\t\treturn this.operations[0] || null;\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: '_reverseDeltaClass',\n\t\tget: function get() {\n\t\t\treturn _removedelta2.default;\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}], [{\n\t\tkey: 'className',\n\t\tget: function get() {\n\t\t\treturn 'engine.model.delta.InsertDelta';\n\t\t}\n\t}]);\n\n\treturn InsertDelta;\n}(_delta2.default);\n\n/**\n * Inserts a node or nodes at the given position.\n *\n * When inserted element is a {@link module:engine/model/documentfragment~DocumentFragment} and has markers its markers will\n * be set to {@link module:engine/model/document~Document#markers}.\n *\n * @chainable\n * @method module:engine/model/batch~Batch#insert\n * @param {module:engine/model/position~Position} position Position of insertion.\n * @param {module:engine/model/node~NodeSet} nodes The list of nodes to be inserted.\n */\n\n\nexports.default = InsertDelta;\n(0, _batch.register)('insert', function (position, nodes) {\n\tvar normalizedNodes = (0, _writer.normalizeNodes)(nodes);\n\n\t// If nothing is inserted do not create delta and operation.\n\tif (normalizedNodes.length === 0) {\n\t\treturn this;\n\t}\n\n\tvar delta = new InsertDelta();\n\tvar insert = new _insertoperation2.default(position, normalizedNodes, this.document.version);\n\n\tthis.addDelta(delta);\n\tdelta.addOperation(insert);\n\tthis.document.applyOperation(insert);\n\n\t// When element is a DocumentFragment we need to move its markers to Document#markers.\n\tif (nodes instanceof _documentfragment2.default) {\n\t\tvar _iteratorNormalCompletion = true;\n\t\tvar _didIteratorError = false;\n\t\tvar _iteratorError = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator = nodes.markers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\tvar _ref = _step.value;\n\n\t\t\t\tvar _ref2 = _slicedToArray(_ref, 2);\n\n\t\t\t\tvar markerName = _ref2[0];\n\t\t\t\tvar markerRange = _ref2[1];\n\n\t\t\t\t// We need to migrate marker range from DocumentFragment to Document.\n\t\t\t\tvar rangeRootPosition = _position2.default.createAt(markerRange.root);\n\t\t\t\tvar range = new _range2.default(markerRange.start._getCombined(rangeRootPosition, position), markerRange.end._getCombined(rangeRootPosition, position));\n\n\t\t\t\tthis.setMarker(markerName, range);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t_didIteratorError = true;\n\t\t\t_iteratorError = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t_iterator.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn this;\n});\n\n_deltafactory2.default.register(InsertDelta);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/delta/insertdelta.js\n// module id = 111\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _delta = require('./delta');\n\nvar _delta2 = _interopRequireDefault(_delta);\n\nvar _deltafactory = require('./deltafactory');\n\nvar _deltafactory2 = _interopRequireDefault(_deltafactory);\n\nvar _batch = require('../batch');\n\nvar _renameoperation = require('../operation/renameoperation');\n\nvar _renameoperation2 = _interopRequireDefault(_renameoperation);\n\nvar _element = require('../element');\n\nvar _element2 = _interopRequireDefault(_element);\n\nvar _position = require('../position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/model/delta/renamedelta\n */\n\n/**\n * To provide specific OT behavior and better collisions solving, the {@link module:engine/model/batch~Batch#rename Batch#rename} method\n * uses the `RenameDelta` class which inherits from the `Delta` class and may overwrite some methods.\n */\nvar RenameDelta = function (_Delta) {\n\t_inherits(RenameDelta, _Delta);\n\n\tfunction RenameDelta() {\n\t\t_classCallCheck(this, RenameDelta);\n\n\t\treturn _possibleConstructorReturn(this, (RenameDelta.__proto__ || Object.getPrototypeOf(RenameDelta)).apply(this, arguments));\n\t}\n\n\t_createClass(RenameDelta, [{\n\t\tkey: 'type',\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tget: function get() {\n\t\t\treturn 'rename';\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: '_reverseDeltaClass',\n\t\tget: function get() {\n\t\t\treturn RenameDelta;\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}], [{\n\t\tkey: 'className',\n\t\tget: function get() {\n\t\t\treturn 'engine.model.delta.RenameDelta';\n\t\t}\n\t}]);\n\n\treturn RenameDelta;\n}(_delta2.default);\n\nexports.default = RenameDelta;\n\n\nfunction apply(batch, delta, operation) {\n\tdelta.addOperation(operation);\n\tbatch.document.applyOperation(operation);\n}\n\n/**\n * Renames given element.\n *\n * @chainable\n * @method module:engine/model/batch~Batch#rename\n * @param {module:engine/model/element~Element} element The element to rename.\n * @param {String} newName New element name.\n */\n(0, _batch.register)('rename', function (element, newName) {\n\tif (!(element instanceof _element2.default)) {\n\t\t/**\n   * Trying to rename an object which is not an instance of Element.\n   *\n   * @error batch-rename-not-element-instance\n   */\n\t\tthrow new _ckeditorerror2.default('batch-rename-not-element-instance: Trying to rename an object which is not an instance of Element.');\n\t}\n\n\tvar delta = new RenameDelta();\n\tthis.addDelta(delta);\n\n\tvar renameOperation = new _renameoperation2.default(_position2.default.createBefore(element), element.name, newName, this.document.version);\n\tapply(this, delta, renameOperation);\n\n\treturn this;\n});\n\n_deltafactory2.default.register(RenameDelta);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/delta/renamedelta.js\n// module id = 112\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _range = require('./range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _emittermixin = require('@ckeditor/ckeditor5-utils/src/emittermixin');\n\nvar _emittermixin2 = _interopRequireDefault(_emittermixin);\n\nvar _mix = require('@ckeditor/ckeditor5-utils/src/mix');\n\nvar _mix2 = _interopRequireDefault(_mix);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/model/liverange\n */\n\n/**\n * `LiveRange` is a type of {@link module:engine/model/range~Range Range}\n * that updates itself as {@link module:engine/model/document~Document document}\n * is changed through operations. It may be used as a bookmark.\n *\n * **Note:** Be very careful when dealing with `LiveRange`. Each `LiveRange` instance bind events that might\n * have to be unbound. Use {@link module:engine/model/liverange~LiveRange#detach detach} whenever you don't need `LiveRange` anymore.\n */\nvar LiveRange = function (_Range) {\n\t_inherits(LiveRange, _Range);\n\n\t/**\n  * Creates a live range.\n  *\n  * @see module:engine/model/range~Range\n  */\n\tfunction LiveRange(start, end) {\n\t\t_classCallCheck(this, LiveRange);\n\n\t\tvar _this = _possibleConstructorReturn(this, (LiveRange.__proto__ || Object.getPrototypeOf(LiveRange)).call(this, start, end));\n\n\t\tbindWithDocument.call(_this);\n\t\treturn _this;\n\t}\n\n\t/**\n  * Unbinds all events previously bound by `LiveRange`. Use it whenever you don't need `LiveRange` instance\n  * anymore (i.e. when leaving scope in which it was declared or before re-assigning variable that was\n  * referring to it).\n  */\n\n\n\t_createClass(LiveRange, [{\n\t\tkey: 'detach',\n\t\tvalue: function detach() {\n\t\t\tthis.stopListening();\n\t\t}\n\n\t\t/**\n   * @see module:engine/model/range~Range.createIn\n   * @static\n   * @method module:engine/model/liverange~LiveRange.createIn\n   * @param {module:engine/model/element~Element} element\n   * @returns {module:engine/model/liverange~LiveRange}\n   */\n\n\t\t/**\n   * @see module:engine/model/range~Range.createFromPositionAndShift\n   * @static\n   * @method module:engine/model/liverange~LiveRange.createFromPositionAndShift\n   * @param {module:engine/model/position~Position} position\n   * @param {Number} shift\n   * @returns {module:engine/model/liverange~LiveRange}\n   */\n\n\t\t/**\n   * @see module:engine/model/range~Range.createFromParentsAndOffsets\n   * @static\n   * @method module:engine/model/liverange~LiveRange.createFromParentsAndOffsets\n   * @param {module:engine/model/element~Element} startElement\n   * @param {Number} startOffset\n   * @param {module:engine/model/element~Element} endElement\n   * @param {Number} endOffset\n   * @returns {module:engine/model/liverange~LiveRange}\n   */\n\n\t\t/**\n   * @see module:engine/model/range~Range.createFromRange\n   * @static\n   * @method module:engine/model/liverange~LiveRange.createFromRange\n   * @param {module:engine/model/range~Range} range\n   * @returns {module:engine/model/liverange~LiveRange}\n   */\n\n\t\t/**\n   * Fired when `LiveRange` instance is changed due to changes in the {@link module:engine/model/document~Document document}.\n   *\n   * @event change\n   * @param {module:engine/model/range~Range} oldRange Range with start and end position equal to start and end position of this live\n   * range before it got changed.\n   * @param {Object} data Object with additional information about the change. Those parameters are passed from\n   * {@link module:engine/model/document~Document#event:change document change event}.\n   * @param {String} data.type Change type.\n   * @param {module:engine/model/range~Range} data.range Range containing the result of applied change.\n   * @param {module:engine/model/position~Position} data.sourcePosition Source position for move, remove and reinsert change types.\n   */\n\n\t}]);\n\n\treturn LiveRange;\n}(_range2.default);\n\n/**\n * Binds this `LiveRange` to the {@link module:engine/model/document~Document document}\n * that owns this range's {@link module:engine/model/range~Range#root root}.\n *\n * @ignore\n * @private\n * @method module:engine/model/liverange~LiveRange#bindWithDocument\n */\n\n\nexports.default = LiveRange;\nfunction bindWithDocument() {\n\tvar _this2 = this;\n\n\t// Operation types that a range can be transformed by.\n\tvar supportedTypes = new Set(['insert', 'move', 'remove', 'reinsert']);\n\n\tthis.listenTo(this.root.document, 'change', function (event, type, changes, batch, deltaType) {\n\t\tif (supportedTypes.has(type)) {\n\t\t\ttransform.call(_this2, type, deltaType, changes.range, changes.sourcePosition);\n\t\t}\n\t}, { priority: 'high' });\n}\n\n/**\n * Updates this range accordingly to the updates applied to the model. Bases on change events.\n *\n * @ignore\n * @private\n * @method transform\n * @param {String} [changeType] Type of change applied to the model document.\n * @param {String} [deltaType] Type of delta which introduced the change.\n * @param {module:engine/model/range~Range} targetRange Range containing the result of applied change.\n * @param {module:engine/model/position~Position} [sourcePosition] Source position for move, remove and reinsert change types.\n */\nfunction transform(changeType, deltaType, targetRange, sourcePosition) {\n\tvar howMany = targetRange.end.offset - targetRange.start.offset;\n\tvar targetPosition = targetRange.start;\n\n\tif (changeType == 'move' || changeType == 'remove' || changeType == 'reinsert') {\n\t\t// Range._getTransformedByDocumentChange is expecting `targetPosition` to be \"before\" move\n\t\t// (before transformation). `targetRange.start` is already after the move happened.\n\t\t// We have to revert `targetPosition` to the state before the move.\n\t\ttargetPosition = targetPosition._getTransformedByInsertion(sourcePosition, howMany);\n\t}\n\n\tvar result = this._getTransformedByDocumentChange(changeType, deltaType, targetPosition, howMany, sourcePosition);\n\n\t// Decide whether moved part should be included in the range.\n\t//\n\t// First, this concerns only `move` change, because insert change includes inserted part always (changeType == 'move').\n\t// Second, this is a case only if moved range was intersecting with this range and was inserted into this range (result.length == 3).\n\tif ((changeType == 'move' || changeType == 'remove' || changeType == 'reinsert') && result.length == 3) {\n\t\t// `result[ 2 ]` is a \"common part\" of this range and moved range. We substitute that common part with the whole\n\t\t// `targetRange` because we want to include whole `targetRange` in this range.\n\t\tresult[2] = targetRange;\n\t}\n\n\tvar updated = _range2.default.createFromRanges(result);\n\n\t// If anything changed, update the range and fire an event.\n\tif (!updated.isEqual(this)) {\n\t\tvar oldRange = _range2.default.createFromRange(this);\n\n\t\tthis.start = updated.start;\n\t\tthis.end = updated.end;\n\n\t\tthis.fire('change', oldRange, {\n\t\t\ttype: changeType,\n\t\t\trange: targetRange,\n\t\t\tsourcePosition: sourcePosition\n\t\t});\n\t}\n}\n\n(0, _mix2.default)(LiveRange, _emittermixin2.default);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/liverange.js\n// module id = 113\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _operation = require('./operation');\n\nvar _operation2 = _interopRequireDefault(_operation);\n\nvar _range = require('../range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/model/operation/markeroperation\n */\n\n/**\n * @extends module:engine/model/operation/operation~Operation\n */\nvar MarkerOperation = function (_Operation) {\n\t_inherits(MarkerOperation, _Operation);\n\n\t/**\n  * @param {String} name Marker name.\n  * @param {module:engine/model/range~Range} oldRange Marker range before the change.\n  * @param {module:engine/model/range~Range} newRange Marker range after the change.\n  * @param {module:engine/model/markercollection~MarkerCollection} markers Marker collection on which change should be executed.\n  * @param {Number} baseVersion {@link module:engine/model/document~Document#version} on which the operation can be applied.\n  */\n\tfunction MarkerOperation(name, oldRange, newRange, markers, baseVersion) {\n\t\t_classCallCheck(this, MarkerOperation);\n\n\t\t/**\n   * Marker name.\n   *\n   * @readonly\n   * @member {String}\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (MarkerOperation.__proto__ || Object.getPrototypeOf(MarkerOperation)).call(this, baseVersion));\n\n\t\t_this.name = name;\n\n\t\t/**\n   * Marker range before the change.\n   *\n   * @readonly\n   * @member {module:engine/model/range~Range}\n   */\n\t\t_this.oldRange = oldRange ? _range2.default.createFromRange(oldRange) : null;\n\n\t\t/**\n   * Marker range after the change.\n   *\n   * @readonly\n   * @member {module:engine/model/range~Range}\n   */\n\t\t_this.newRange = newRange ? _range2.default.createFromRange(newRange) : null;\n\n\t\t/**\n   * Marker collection on which change should be executed.\n   *\n   * @private\n   * @member {module:engine/model/markercollection~MarkerCollection}\n   */\n\t\t_this._markers = markers;\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(MarkerOperation, [{\n\t\tkey: 'clone',\n\n\n\t\t/**\n   * Creates and returns an operation that has the same parameters as this operation.\n   *\n   * @returns {module:engine/model/operation/markeroperation~MarkerOperation} Clone of this operation.\n   */\n\t\tvalue: function clone() {\n\t\t\treturn new MarkerOperation(this.name, this.oldRange, this.newRange, this._markers, this.baseVersion);\n\t\t}\n\n\t\t/**\n   * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n   *\n   * @returns {module:engine/model/operation/markeroperation~MarkerOperation}\n   */\n\n\t}, {\n\t\tkey: 'getReversed',\n\t\tvalue: function getReversed() {\n\t\t\treturn new MarkerOperation(this.name, this.newRange, this.oldRange, this._markers, this.baseVersion + 1);\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: '_execute',\n\t\tvalue: function _execute() {\n\t\t\tvar type = this.newRange ? 'set' : 'remove';\n\n\t\t\tthis._markers[type](this.name, this.newRange);\n\n\t\t\treturn { name: this.name, type: type };\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'toJSON',\n\t\tvalue: function toJSON() {\n\t\t\tvar json = _get(MarkerOperation.prototype.__proto__ || Object.getPrototypeOf(MarkerOperation.prototype), 'toJSON', this).call(this);\n\n\t\t\tdelete json._markers;\n\n\t\t\treturn json;\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'type',\n\t\tget: function get() {\n\t\t\treturn 'marker';\n\t\t}\n\t}], [{\n\t\tkey: 'fromJSON',\n\n\n\t\t/**\n   * Creates `MarkerOperation` object from deserilized object, i.e. from parsed JSON string.\n   *\n   * @param {Object} json Deserialized JSON object.\n   * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n   * @returns {module:engine/model/operation/markeroperation~MarkerOperation}\n   */\n\t\tvalue: function fromJSON(json, document) {\n\t\t\treturn new MarkerOperation(json.name, json.oldRange ? _range2.default.fromJSON(json.oldRange, document) : null, json.newRange ? _range2.default.fromJSON(json.newRange, document) : null, document.markers, json.baseVersion);\n\t\t}\n\t}, {\n\t\tkey: 'className',\n\t\tget: function get() {\n\t\t\treturn 'engine.model.operation.MarkerOperation';\n\t\t}\n\t}]);\n\n\treturn MarkerOperation;\n}(_operation2.default);\n\nexports.default = MarkerOperation;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/operation/markeroperation.js\n// module id = 114\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _moveoperation = require('./moveoperation');\n\nvar _moveoperation2 = _interopRequireDefault(_moveoperation);\n\nvar _removeoperation = require('./removeoperation');\n\nvar _removeoperation2 = _interopRequireDefault(_removeoperation);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/model/operation/reinsertoperation\n */\n\n/**\n * Operation to reinsert previously removed nodes back to the non-graveyard root. This operation acts like\n * {@link module:engine/model/operation/moveoperation~MoveOperation} but it returns\n * {@link module:engine/model/operation/removeoperation~RemoveOperation} when reversed\n * and fires different change event.\n */\nvar ReinsertOperation = function (_MoveOperation) {\n\t_inherits(ReinsertOperation, _MoveOperation);\n\n\tfunction ReinsertOperation() {\n\t\t_classCallCheck(this, ReinsertOperation);\n\n\t\treturn _possibleConstructorReturn(this, (ReinsertOperation.__proto__ || Object.getPrototypeOf(ReinsertOperation)).apply(this, arguments));\n\t}\n\n\t_createClass(ReinsertOperation, [{\n\t\tkey: 'getReversed',\n\n\n\t\t/**\n   * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n   *\n   * @returns {module:engine/model/operation/removeoperation~RemoveOperation}\n   */\n\t\tvalue: function getReversed() {\n\t\t\tvar newTargetPosition = this.sourcePosition._getTransformedByInsertion(this.targetPosition, this.howMany);\n\n\t\t\treturn new _removeoperation2.default(this.getMovedRangeStart(), this.howMany, newTargetPosition, this.baseVersion + 1);\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'position',\n\n\t\t/**\n   * Position where nodes will be re-inserted.\n   *\n   * @type {module:engine/model/position~Position}\n   */\n\t\tget: function get() {\n\t\t\treturn this.targetPosition;\n\t\t}\n\n\t\t/**\n   * @param {module:engine/model/position~Position} pos\n   */\n\t\t,\n\t\tset: function set(pos) {\n\t\t\tthis.targetPosition = pos;\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'type',\n\t\tget: function get() {\n\t\t\treturn 'reinsert';\n\t\t}\n\t}], [{\n\t\tkey: 'className',\n\t\tget: function get() {\n\t\t\treturn 'engine.model.operation.ReinsertOperation';\n\t\t}\n\t}]);\n\n\treturn ReinsertOperation;\n}(_moveoperation2.default);\n\nexports.default = ReinsertOperation;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/operation/reinsertoperation.js\n// module id = 115\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _operation = require('./operation');\n\nvar _operation2 = _interopRequireDefault(_operation);\n\nvar _element = require('../element');\n\nvar _element2 = _interopRequireDefault(_element);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nvar _position = require('../position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/model/operation/renameoperation\n */\n\n/**\n * Operation to change element's name.\n *\n * Using this class you can change element's name.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nvar RenameOperation = function (_Operation) {\n\t_inherits(RenameOperation, _Operation);\n\n\t/**\n  * Creates an operation that changes element's name.\n  *\n  * @param {module:engine/model/position~Position} position Position before an element to change.\n  * @param {String} oldName Current name of the element.\n  * @param {String} newName New name for the element.\n  * @param {Number} baseVersion {@link module:engine/model/document~Document#version} on which the operation can be applied.\n  */\n\tfunction RenameOperation(position, oldName, newName, baseVersion) {\n\t\t_classCallCheck(this, RenameOperation);\n\n\t\t/**\n   * Position before an element to change.\n   *\n   * @member {module:engine/model/position~Position} module:engine/model/operation/renameoperation~RenameOperation#position\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (RenameOperation.__proto__ || Object.getPrototypeOf(RenameOperation)).call(this, baseVersion));\n\n\t\t_this.position = position;\n\n\t\t/**\n   * Current name of the element.\n   *\n   * @member {String} module:engine/model/operation/renameoperation~RenameOperation#oldName\n   */\n\t\t_this.oldName = oldName;\n\n\t\t/**\n   * New name for the element.\n   *\n   * @member {String} module:engine/model/operation/renameoperation~RenameOperation#newName\n   */\n\t\t_this.newName = newName;\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(RenameOperation, [{\n\t\tkey: 'clone',\n\n\n\t\t/**\n   * Creates and returns an operation that has the same parameters as this operation.\n   *\n   * @returns {module:engine/model/operation/renameoperation~RenameOperation} Clone of this operation.\n   */\n\t\tvalue: function clone() {\n\t\t\treturn new RenameOperation(_position2.default.createFromPosition(this.position), this.oldName, this.newName, this.baseVersion);\n\t\t}\n\n\t\t/**\n   * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n   *\n   * @returns {module:engine/model/operation/renameoperation~RenameOperation}\n   */\n\n\t}, {\n\t\tkey: 'getReversed',\n\t\tvalue: function getReversed() {\n\t\t\treturn new RenameOperation(_position2.default.createFromPosition(this.position), this.newName, this.oldName, this.baseVersion + 1);\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: '_execute',\n\t\tvalue: function _execute() {\n\t\t\t// Validation.\n\t\t\tvar element = this.position.nodeAfter;\n\n\t\t\tif (!(element instanceof _element2.default)) {\n\t\t\t\t/**\n     * Given position is invalid or node after it is not instance of Element.\n     *\n     * @error rename-operation-wrong-position\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('rename-operation-wrong-position: Given position is invalid or node after it is not an instance of Element.');\n\t\t\t} else if (element.name !== this.oldName) {\n\t\t\t\t/**\n     * Element to change has different name than operation's old name.\n     *\n     * @error rename-operation-wrong-name\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('rename-operation-wrong-name: Element to change has different name than operation\\'s old name.');\n\t\t\t}\n\n\t\t\t// If value to set is same as old value, don't do anything.\n\t\t\t// By not returning `undefined`, this operation will be seen as `NoOperation` - that means\n\t\t\t// that it won't generate any events, etc. `RenameOperation` with such parameters may be\n\t\t\t// a result of Operational Transformation.\n\t\t\tif (this.oldName == this.newName) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\telement.name = this.newName;\n\n\t\t\treturn { element: element, oldName: this.oldName };\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'type',\n\t\tget: function get() {\n\t\t\treturn 'rename';\n\t\t}\n\t}], [{\n\t\tkey: 'fromJSON',\n\n\n\t\t/**\n   * Creates `RenameOperation` object from deserialized object, i.e. from parsed JSON string.\n   *\n   * @param {Object} json Deserialized JSON object.\n   * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n   * @returns {module:engine/model/operation/attributeoperation~AttributeOperation}\n   */\n\t\tvalue: function fromJSON(json, document) {\n\t\t\treturn new RenameOperation(_position2.default.fromJSON(json.position, document), json.oldName, json.newName, json.baseVersion);\n\t\t}\n\t}, {\n\t\tkey: 'className',\n\t\tget: function get() {\n\t\t\treturn 'engine.model.operation.RenameOperation';\n\t\t}\n\t}]);\n\n\treturn RenameOperation;\n}(_operation2.default);\n\nexports.default = RenameOperation;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/operation/renameoperation.js\n// module id = 116\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _operation = require('./operation');\n\nvar _operation2 = _interopRequireDefault(_operation);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/model/operation/rootattributeoperation\n */\n\n/**\n * Operation to change root element's attribute. Using this class you can add, remove or change value of the attribute.\n *\n * This operation is needed, because root elements can't be changed through\n * @link module:engine/model/operation/attributeoperation~AttributeOperation}.\n * It is because {@link module:engine/model/operation/attributeoperation~AttributeOperation}\n * requires a range to change and root element can't\n * be a part of range because every {@link module:engine/model/position~Position} has to be inside a root.\n * {@link module:engine/model/position~Position} can't be created before a root element.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nvar RootAttributeOperation = function (_Operation) {\n\t_inherits(RootAttributeOperation, _Operation);\n\n\t/**\n  * Creates an operation that changes, removes or adds attributes on root element.\n  *\n  * @see module:engine/model/operation/attributeoperation~AttributeOperation\n  * @param {module:engine/model/rootelement~RootElement} root Root element to change.\n  * @param {String} key Key of an attribute to change or remove.\n  * @param {*} oldValue Old value of the attribute with given key or `null` if adding a new attribute.\n  * @param {*} newValue New value to set for the attribute. If `null`, then the operation just removes the attribute.\n  * @param {Number} baseVersion {@link module:engine/model/document~Document#version} on which the operation can be applied.\n  */\n\tfunction RootAttributeOperation(root, key, oldValue, newValue, baseVersion) {\n\t\t_classCallCheck(this, RootAttributeOperation);\n\n\t\t/**\n   * Root element to change.\n   *\n   * @readonly\n   * @member {module:engine/model/rootelement~RootElement}\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (RootAttributeOperation.__proto__ || Object.getPrototypeOf(RootAttributeOperation)).call(this, baseVersion));\n\n\t\t_this.root = root;\n\n\t\t/**\n   * Key of an attribute to change or remove.\n   *\n   * @readonly\n   * @member {String}\n   */\n\t\t_this.key = key;\n\n\t\t/**\n   * Old value of the attribute with given key or `null` if adding a new attribute.\n   *\n   * @readonly\n   * @member {*}\n   */\n\t\t_this.oldValue = oldValue;\n\n\t\t/**\n   * New value to set for the attribute. If `null`, then the operation just removes the attribute.\n   *\n   * @readonly\n   * @member {*}\n   */\n\t\t_this.newValue = newValue;\n\t\treturn _this;\n\t}\n\n\t_createClass(RootAttributeOperation, [{\n\t\tkey: 'clone',\n\n\n\t\t/**\n   * Creates and returns an operation that has the same parameters as this operation.\n   *\n   * @returns {module:engine/model/operation/rootattributeoperation~RootAttributeOperation} Clone of this operation.\n   */\n\t\tvalue: function clone() {\n\t\t\treturn new RootAttributeOperation(this.root, this.key, this.oldValue, this.newValue, this.baseVersion);\n\t\t}\n\n\t\t/**\n   * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n   *\n   * @returns {module:engine/model/operation/rootattributeoperation~RootAttributeOperation}\n   */\n\n\t}, {\n\t\tkey: 'getReversed',\n\t\tvalue: function getReversed() {\n\t\t\treturn new RootAttributeOperation(this.root, this.key, this.newValue, this.oldValue, this.baseVersion + 1);\n\t\t}\n\t}, {\n\t\tkey: '_execute',\n\t\tvalue: function _execute() {\n\t\t\tif (this.oldValue !== null && this.root.getAttribute(this.key) !== this.oldValue) {\n\t\t\t\t/**\n     * The attribute which should be removed does not exists for the given node.\n     *\n     * @error rootattribute-operation-wrong-old-value\n     * @param {module:engine/model/rootelement~RootElement} root\n     * @param {String} key\n     * @param {*} value\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('rootattribute-operation-wrong-old-value: Changed node has different attribute value than operation\\'s ' + 'old attribute value.', { root: this.root, key: this.key });\n\t\t\t}\n\n\t\t\tif (this.oldValue === null && this.newValue !== null && this.root.hasAttribute(this.key)) {\n\t\t\t\t/**\n     * The attribute with given key already exists for the given node.\n     *\n     * @error rootattribute-operation-attribute-exists\n     * @param {module:engine/model/rootelement~RootElement} root\n     * @param {String} key\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('rootattribute-operation-attribute-exists: The attribute with given key already exists.', { root: this.root, key: this.key });\n\t\t\t}\n\n\t\t\tif (this.newValue !== null) {\n\t\t\t\tthis.root.setAttribute(this.key, this.newValue);\n\t\t\t} else {\n\t\t\t\tthis.root.removeAttribute(this.key);\n\t\t\t}\n\n\t\t\treturn { root: this.root, key: this.key, oldValue: this.oldValue, newValue: this.newValue };\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'type',\n\t\tget: function get() {\n\t\t\tif (this.oldValue === null) {\n\t\t\t\treturn 'addRootAttribute';\n\t\t\t} else if (this.newValue === null) {\n\t\t\t\treturn 'removeRootAttribute';\n\t\t\t} else {\n\t\t\t\treturn 'changeRootAttribute';\n\t\t\t}\n\t\t}\n\t}], [{\n\t\tkey: 'fromJSON',\n\n\n\t\t/**\n   * Creates RootAttributeOperation object from deserilized object, i.e. from parsed JSON string.\n   *\n   * @param {Object} json Deserialized JSON object.\n   * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n   * @returns {module:engine/model/operation/rootattributeoperation~RootAttributeOperation}\n   */\n\t\tvalue: function fromJSON(json, document) {\n\t\t\tif (!document.hasRoot(json.root)) {\n\t\t\t\t/**\n     * Cannot create RootAttributeOperation for document. Root with specified name does not exist.\n     *\n     * @error rootattributeoperation-fromjson-no-root\n     * @param {String} rootName\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('rootattribute-operation-fromjson-no-root: Cannot create RootAttributeOperation. Root with specified name does not exist.', { rootName: json });\n\t\t\t}\n\n\t\t\treturn new RootAttributeOperation(document.getRoot(json.root), json.key, json.oldValue, json.newValue, json.baseVersion);\n\t\t}\n\t}, {\n\t\tkey: 'className',\n\t\tget: function get() {\n\t\t\treturn 'engine.model.operation.RootAttributeOperation';\n\t\t}\n\t}]);\n\n\treturn RootAttributeOperation;\n}(_operation2.default);\n\nexports.default = RootAttributeOperation;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/operation/rootattributeoperation.js\n// module id = 117\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _element = require('./element');\n\nvar _element2 = _interopRequireDefault(_element);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/view/attributeelement\n */\n\n// Default attribute priority.\nvar DEFAULT_PRIORITY = 10;\n\n/**\n * Attributes are elements which define document presentation. They are mostly elements like `<b>` or `<span>`.\n * Attributes can be broken and merged by the {@link module:engine/view/writer~writer view writer}.\n *\n * Editing engine does not define fixed HTML DTD. This is why the type of the {@link module:engine/view/element~Element} need to\n * be defined by the feature developer. Creating an element you should use {@link module:engine/view/containerelement~ContainerElement}\n * class or `AttributeElement`.\n *\n * @extends module:engine/view/element~Element\n */\n\nvar AttributeElement = function (_Element) {\n\t_inherits(AttributeElement, _Element);\n\n\t/**\n  * Creates a attribute element.\n  *\n  * @see module:engine/view/element~Element\n  */\n\tfunction AttributeElement(name, attrs, children) {\n\t\t_classCallCheck(this, AttributeElement);\n\n\t\t/**\n   * Element priority. Attributes have to have the same priority to be\n   * {@link module:engine/view/element~Element#isSimilar similar}. Setting different priorities on similar\n  \t * nodes may prevent merging, e.g. two `<abbr>` nodes next each other shouldn't be merged.\n   *\n   * @member {Number}\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (AttributeElement.__proto__ || Object.getPrototypeOf(AttributeElement)).call(this, name, attrs, children));\n\n\t\t_this.priority = DEFAULT_PRIORITY;\n\n\t\t/**\n   * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n   *\n   * @method #getFillerOffset\n   * @returns {Number|null} Block filler offset or `null` if block filler is not needed.\n   */\n\t\t_this.getFillerOffset = getFillerOffset;\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(AttributeElement, [{\n\t\tkey: 'is',\n\t\tvalue: function is(type) {\n\t\t\tvar name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\t\t\tif (!name) {\n\t\t\t\treturn type == 'attributeElement' || _get(AttributeElement.prototype.__proto__ || Object.getPrototypeOf(AttributeElement.prototype), 'is', this).call(this, type);\n\t\t\t} else {\n\t\t\t\treturn type == 'attributeElement' && name == this.name || _get(AttributeElement.prototype.__proto__ || Object.getPrototypeOf(AttributeElement.prototype), 'is', this).call(this, type, name);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Clones provided element with priority.\n   *\n   * @param {Boolean} deep If set to `true` clones element and all its children recursively. When set to `false`,\n   * element will be cloned without any children.\n   * @returns {module:engine/view/attributeelement~AttributeElement} Clone of this element.\n   */\n\n\t}, {\n\t\tkey: 'clone',\n\t\tvalue: function clone(deep) {\n\t\t\tvar cloned = _get(AttributeElement.prototype.__proto__ || Object.getPrototypeOf(AttributeElement.prototype), 'clone', this).call(this, deep);\n\n\t\t\t// Clone priority too.\n\t\t\tcloned.priority = this.priority;\n\n\t\t\treturn cloned;\n\t\t}\n\n\t\t/**\n   * Checks if this element is similar to other element.\n   * Both elements should have the same name, attributes and priority to be considered as similar.\n   * Two similar elements can contain different set of children nodes.\n   *\n   * @param {module:engine/view/element~Element} otherElement\n   * @returns {Boolean}\n   */\n\n\t}, {\n\t\tkey: 'isSimilar',\n\t\tvalue: function isSimilar(otherElement) {\n\t\t\treturn _get(AttributeElement.prototype.__proto__ || Object.getPrototypeOf(AttributeElement.prototype), 'isSimilar', this).call(this, otherElement) && this.priority == otherElement.priority;\n\t\t}\n\t}]);\n\n\treturn AttributeElement;\n}(_element2.default);\n\n/**\n * Default attribute priority.\n *\n * @member {Number} module:engine/view/attributeelement~AttributeElement.DEFAULT_PRIORITY\n */\n\n\nexports.default = AttributeElement;\nAttributeElement.DEFAULT_PRIORITY = DEFAULT_PRIORITY;\n\n// Returns block {@link module:engine/view/filler~Filler filler} offset or `null` if block filler is not needed.\n//\n// @returns {Number|null} Block filler offset or `null` if block filler is not needed.\nfunction getFillerOffset() {\n\t// <b>foo</b> does not need filler.\n\tif (nonUiChildrenCount(this)) {\n\t\treturn null;\n\t}\n\n\tvar element = this.parent;\n\n\t// <p><b></b></p> needs filler -> <p><b><br></b></p>\n\twhile (element && element.is('attributeElement')) {\n\t\tif (nonUiChildrenCount(element) > 1) {\n\t\t\treturn null;\n\t\t}\n\n\t\telement = element.parent;\n\t}\n\n\tif (!element || nonUiChildrenCount(element) > 1) {\n\t\treturn null;\n\t}\n\n\t// Render block filler at the end of element (after all ui elements).\n\treturn this.childCount;\n}\n\n// Returns total count of children that are not {@link module:engine/view/uielement~UIElement UIElements}.\n//\n// @param {module:engine/view/element~Element} element\n// @return {Number}\nfunction nonUiChildrenCount(element) {\n\treturn Array.from(element.getChildren()).filter(function (element) {\n\t\treturn !element.is('uiElement');\n\t}).length;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/view/attributeelement.js\n// module id = 118\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\nn\n/**\n * @module engine/view/documentfragment\n */\n\nvar _text = require('./text');\n\nvar _text2 = _interopRequireDefault(_text);\n\nvar _mix = require('@ckeditor/ckeditor5-utils/src/mix');\n\nvar _mix2 = _interopRequireDefault(_mix);\n\nvar _isiterable = require('@ckeditor/ckeditor5-utils/src/isiterable');\n\nvar _isiterable2 = _interopRequireDefault(_isiterable);\n\nvar _emittermixin = require('@ckeditor/ckeditor5-utils/src/emittermixin');\n\nvar _emittermixin2 = _interopRequireDefault(_emittermixin);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * DocumentFragment class.\n */\nvar DocumentFragment = function () {\n\t/**\n  * Creates new DocumentFragment instance.\n  *\n  * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children] List of nodes to be inserted into\n  * created document fragment.\n  */\n\tfunction DocumentFragment(children) {\n\t\t_classCallCheck(this, DocumentFragment);\n\n\t\t/**\n   * Array of child nodes.\n   *\n   * @protected\n   * @member {Array.<module:engine/view/element~Element>} module:engine/view/documentfragment~DocumentFragment#_children\n   */\n\t\tthis._children = [];\n\n\t\tif (children) {\n\t\t\tthis.insertChildren(0, children);\n\t\t}\n\t}\n\n\t/**\n  * Iterates over nodes added to this DocumentFragment.\n  */\n\n\n\t_createClass(DocumentFragment, [{\n\t\tkey: Symbol.iterator,\n\t\tvalue: function value() {\n\t\t\treturn this._children[Symbol.iterator]();\n\t\t}\n\n\t\t/**\n   * Number of child nodes in this document fragment.\n   *\n   * @readonly\n   * @type {Number}\n   */\n\n\t}, {\n\t\tkey: 'is',\n\n\n\t\t/**\n   * Checks whether given view tree object is of given type.\n   *\n   * Read more in {@link module:engine/view/node~Node#is}.\n   *\n   * @param {String} type\n   * @returns {Boolean}\n   */\n\t\tvalue: function is(type) {\n\t\t\treturn type == 'documentFragment';\n\t\t}\n\n\t\t/**\n   * {@link module:engine/view/documentfragment~DocumentFragment#insertChildren Insert} a child node or a list of child nodes at the end\n   * and sets the parent of these nodes to this fragment.\n   *\n   * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} nodes Node or the list of nodes to be inserted.\n   * @returns {Number} Number of appended nodes.\n   */\n\n\t}, {\n\t\tkey: 'appendChildren',\n\t\tvalue: function appendChildren(nodes) {\n\t\t\treturn this.insertChildren(this.childCount, nodes);\n\t\t}\n\n\t\t/**\n   * Gets child at the given index.\n   *\n   * @param {Number} index Index of child.\n   * @returns {module:engine/view/node~Node} Child node.\n   */\n\n\t}, {\n\t\tkey: 'getChild',\n\t\tvalue: function getChild(index) {\n\t\t\treturn this._children[index];\n\t\t}\n\n\t\t/**\n   * Gets index of the given child node. Returns `-1` if child node is not found.\n   *\n   * @param {module:engine/view/node~Node} node Child node.\n   * @returns {Number} Index of the child node.\n   */\n\n\t}, {\n\t\tkey: 'getChildIndex',\n\t\tvalue: function getChildIndex(node) {\n\t\t\treturn this._children.indexOf(node);\n\t\t}\n\n\t\t/**\n   * Gets child nodes iterator.\n   *\n   * @returns {Iterable.<module:engine/view/node~Node>} Child nodes iterator.\n   */\n\n\t}, {\n\t\tkey: 'getChildren',\n\t\tvalue: function getChildren() {\n\t\t\treturn this._children[Symbol.iterator]();\n\t\t}\n\n\t\t/**\n   * Inserts a child node or a list of child nodes on the given index and sets the parent of these nodes to\n   * this fragment.\n   *\n   * @param {Number} index Position where nodes should be inserted.\n   * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} nodes Node or list of nodes to be inserted.\n   * @returns {Number} Number of inserted nodes.\n   */\n\n\t}, {\n\t\tkey: 'insertChildren',\n\t\tvalue: function insertChildren(index, nodes) {\n\t\t\tthis._fireChange('children', this);\n\t\t\tvar count = 0;\n\n\t\t\tnodes = normalize(nodes);\n\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = nodes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar node = _step.value;\n\n\t\t\t\t\tnode.parent = this;\n\n\t\t\t\t\tthis._children.splice(index, 0, node);\n\t\t\t\t\tindex++;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn count;\n\t\t}\n\n\t\t/**\n   * Removes number of child nodes starting at the given index and set the parent of these nodes to `null`.\n   *\n   * @param {Number} index Number of the first node to remove.\n   * @param {Number} [howMany=1] Number of nodes to remove.\n   * @returns {Array.<module:engine/view/node~Node>} The array of removed nodes.\n   */\n\n\t}, {\n\t\tkey: 'removeChildren',\n\t\tvalue: function removeChildren(index) {\n\t\t\tvar howMany = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n\t\t\tthis._fireChange('children', this);\n\n\t\t\tfor (var i = index; i < index + howMany; i++) {\n\t\t\t\tthis._children[i].parent = null;\n\t\t\t}\n\n\t\t\treturn this._children.splice(index, howMany);\n\t\t}\n\n\t\t/**\n   * Fires `change` event with given type of the change.\n   *\n   * @private\n   * @param {module:engine/view/document~ChangeType} type Type of the change.\n   * @param {module:engine/view/node~Node} node Changed node.\n   * @fires module:engine/view/node~Node#change\n   */\n\n\t}, {\n\t\tkey: '_fireChange',\n\t\tvalue: function _fireChange(type, node) {\n\t\t\tthis.fire('change:' + type, node);\n\t\t}\n\t}, {\n\t\tkey: 'childCount',\n\t\tget: function get() {\n\t\t\treturn this._children.length;\n\t\t}\n\n\t\t/**\n   * Is `true` if there are no nodes inside this document fragment, `false` otherwise.\n   *\n   * @readonly\n   * @type {Boolean}\n   */\n\n\t}, {\n\t\tkey: 'isEmpty',\n\t\tget: function get() {\n\t\t\treturn this.childCount === 0;\n\t\t}\n\n\t\t/**\n   * Artificial root of `DocumentFragment`. Returns itself. Added for compatibility reasons.\n   *\n   * @readonly\n   * @type {module:engine/model/documentfragment~DocumentFragment}\n   */\n\n\t}, {\n\t\tkey: 'root',\n\t\tget: function get() {\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Artificial parent of `DocumentFragment`. Returns `null`. Added for compatibility reasons.\n   *\n   * @readonly\n   * @type {null}\n   */\n\n\t}, {\n\t\tkey: 'parent',\n\t\tget: function get() {\n\t\t\treturn null;\n\t\t}\n\t}]);\n\n\treturn DocumentFragment;\n}();\n\nexports.default = DocumentFragment;\n\n\n(0, _mix2.default)(DocumentFragment, _emittermixin2.default);\n\n// Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/view/node~Node|Iterable.<String|module:engine/view/node~Node>}\n// @return {Iterable.<module:engine/view/node~Node>}\nfunction normalize(nodes) {\n\t// Separate condition because string is iterable.\n\tif (typeof nodes == 'string') {\n\t\treturn [new _text2.default(nodes)];\n\t}\n\n\tif (!(0, _isiterable2.default)(nodes)) {\n\t\tnodes = [nodes];\n\t}\n\n\t// Array.from to enable .map() on non-arrays.\n\treturn Array.from(nodes).map(function (node) {\n\t\treturn typeof node == 'string' ? new _text2.default(node) : node;\n\t});\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/view/documentfragment.js\n// module id = 119\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * For licensing, see LICENSE.md.\nn\n/**\n * @module engine/view/domconverter\n */\n\n/* globals document, Node, NodeFilter */\n\nvar _text = require('./text');\n\nvar _text2 = _interopRequireDefault(_text);\n\nvar _element = require('./element');\n\nvar _element2 = _interopRequireDefault(_element);\n\nvar _position = require('./position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _range = require('./range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _selection = require('./selection');\n\nvar _selection2 = _interopRequireDefault(_selection);\n\nvar _documentfragment = require('./documentfragment');\n\nvar _documentfragment2 = _interopRequireDefault(_documentfragment);\n\nvar _treewalker = require('./treewalker');\n\nvar _treewalker2 = _interopRequireDefault(_treewalker);\n\nvar _filler = require('./filler');\n\nvar _global = require('@ckeditor/ckeditor5-utils/src/dom/global');\n\nvar _global2 = _interopRequireDefault(_global);\n\nvar _indexof = require('@ckeditor/ckeditor5-utils/src/dom/indexof');\n\nvar _indexof2 = _interopRequireDefault(_indexof);\n\nvar _getancestors = require('@ckeditor/ckeditor5-utils/src/dom/getancestors');\n\nvar _getancestors2 = _interopRequireDefault(_getancestors);\n\nvar _getcommonancestor = require('@ckeditor/ckeditor5-utils/src/dom/getcommonancestor');\n\nvar _getcommonancestor2 = _interopRequireDefault(_getcommonancestor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * DomConverter is a set of tools to do transformations between DOM nodes and view nodes. It also handles\n * {@link module:engine/view/domconverter~DomConverter#bindElements binding} these nodes.\n *\n * DomConverter does not check which nodes should be rendered (use {@link module:engine/view/renderer~Renderer}), does not keep a\n * state of a tree nor keeps synchronization between tree view and DOM tree (use {@link module:engine/view/document~Document}).\n *\n * DomConverter keeps DOM elements to View element bindings, so when the converter will be destroyed, the binding will\n * be lost. Two converters will keep separate binding maps, so one tree view can be bound with two DOM trees.\n */\nvar DomConverter = function () {\n\t/**\n  * Creates DOM converter.\n  *\n  * @param {Object} options Object with configuration options.\n  * @param {Function} [options.blockFiller=module:engine/view/filler~BR_FILLER] Block filler creator.\n  */\n\tfunction DomConverter() {\n\t\tvar options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\t\t_classCallCheck(this, DomConverter);\n\n\t\t// Using WeakMap prevent memory leaks: when the converter will be destroyed all referenced between View and DOM\n\t\t// will be removed. Also because it is a *Weak*Map when both view and DOM elements will be removed referenced\n\t\t// will be also removed, isn't it brilliant?\n\t\t//\n\t\t// Yes, PJ. It is.\n\t\t//\n\t\t// You guys so smart.\n\t\t//\n\t\t// I've been here. Seen stuff. Afraid of code now.\n\n\t\t/**\n   * Block {@link module:engine/view/filler filler} creator, which is used to create all block fillers during the\n   * view to DOM conversion and to recognize block fillers during the DOM to view conversion.\n   *\n   * @readonly\n   * @member {Function} module:engine/view/domconverter~DomConverter#blockFiller\n   */\n\t\tthis.blockFiller = options.blockFiller || _filler.BR_FILLER;\n\n\t\t/**\n   * Tag names of DOM `Element`s which are considered pre-formatted elements.\n   *\n   * @member {Array.<String>} module:engine/view/domconverter~DomConverter#preElements\n   */\n\t\tthis.preElements = ['pre'];\n\n\t\t/**\n   * Tag names of DOM `Element`s which are considered block elements.\n   *\n   * @member {Array.<String>} module:engine/view/domconverter~DomConverter#blockElements\n   */\n\t\tthis.blockElements = ['p', 'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\n\n\t\t/**\n   * DOM to View mapping.\n   *\n   * @private\n   * @member {WeakMap} module:engine/view/domconverter~DomConverter#_domToViewMapping\n   */\n\t\tthis._domToViewMapping = new WeakMap();\n\n\t\t/**\n   * View to DOM mapping.\n   *\n   * @private\n   * @member {WeakMap} module:engine/view/domconverter~DomConverter#_viewToDomMapping\n   */\n\t\tthis._viewToDomMapping = new WeakMap();\n\n\t\t/**\n   * Holds mapping between fake selection containers and corresponding view selections.\n   *\n   * @private\n   * @member {WeakMap} module:engine/view/domconverter~DomConverter#_fakeSelectionMapping\n   */\n\t\tthis._fakeSelectionMapping = new WeakMap();\n\t}\n\n\t/**\n  * Binds given DOM element that represents fake selection to {@link module:engine/view/selection~Selection view selection}.\n  * View selection copy is stored and can be retrieved by {@link module:engine/view/domconverter~DomConverter#fakeSelectionToView}\n  * method.\n  *\n  * @param {HTMLElement} domElement\n  * @param {module:engine/view/selection~Selection} viewSelection\n  */\n\n\n\t_createClass(DomConverter, [{\n\t\tkey: 'bindFakeSelection',\n\t\tvalue: function bindFakeSelection(domElement, viewSelection) {\n\t\t\tthis._fakeSelectionMapping.set(domElement, _selection2.default.createFromSelection(viewSelection));\n\t\t}\n\n\t\t/**\n   * Returns {@link module:engine/view/selection~Selection view selection} instance corresponding to given DOM element that represents\n   * fake selection. Returns `undefined` if binding to given DOM element does not exists.\n   *\n   * @param {HTMLElement} domElement\n   * @returns {module:engine/view/selection~Selection|undefined}\n   */\n\n\t}, {\n\t\tkey: 'fakeSelectionToView',\n\t\tvalue: function fakeSelectionToView(domElement) {\n\t\t\treturn this._fakeSelectionMapping.get(domElement);\n\t\t}\n\n\t\t/**\n   * Binds DOM and View elements, so it will be possible to get corresponding elements using\n   * {@link module:engine/view/domconverter~DomConverter#mapDomToView} and\n   * {@link module:engine/view/domconverter~DomConverter#mapViewToDom}.\n   *\n   * @param {HTMLElement} domElement DOM element to bind.\n   * @param {module:engine/view/element~Element} viewElement View element to bind.\n   */\n\n\t}, {\n\t\tkey: 'bindElements',\n\t\tvalue: function bindElements(domElement, viewElement) {\n\t\t\tthis._domToViewMapping.set(domElement, viewElement);\n\t\t\tthis._viewToDomMapping.set(viewElement, domElement);\n\t\t}\n\n\t\t/**\n   * Unbinds given `domElement` from the view element it was bound to. Unbinding is deep, meaning that all children of\n   * `domElement` will be unbound too.\n   *\n   * @param {HTMLElement} domElement DOM element to unbind.\n   */\n\n\t}, {\n\t\tkey: 'unbindDomElement',\n\t\tvalue: function unbindDomElement(domElement) {\n\t\t\tvar viewElement = this._domToViewMapping.get(domElement);\n\n\t\t\tif (viewElement) {\n\t\t\t\tthis._domToViewMapping.delete(domElement);\n\t\t\t\tthis._viewToDomMapping.delete(viewElement);\n\n\t\t\t\t// Use Array.from because of MS Edge (#923).\n\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\tvar _didIteratorError = false;\n\t\t\t\tvar _iteratorError = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator = Array.from(domElement.childNodes)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\tvar child = _step.value;\n\n\t\t\t\t\t\tthis.unbindDomElement(child);\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t_iteratorError = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Binds DOM and View document fragments, so it will be possible to get corresponding document fragments using\n   * {@link module:engine/view/domconverter~DomConverter#mapDomToView} and\n   * {@link module:engine/view/domconverter~DomConverter#mapViewToDom}.\n   *\n   * @param {DocumentFragment} domFragment DOM document fragment to bind.\n   * @param {module:engine/view/documentfragment~DocumentFragment} viewFragment View document fragment to bind.\n   */\n\n\t}, {\n\t\tkey: 'bindDocumentFragments',\n\t\tvalue: function bindDocumentFragments(domFragment, viewFragment) {\n\t\t\tthis._domToViewMapping.set(domFragment, viewFragment);\n\t\t\tthis._viewToDomMapping.set(viewFragment, domFragment);\n\t\t}\n\n\t\t/**\n   * Converts view to DOM. For all text nodes, not bound elements and document fragments new items will\n   * be created. For bound elements and document fragments function will return corresponding items.\n   *\n   * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} viewNode\n   * View node or document fragment to transform.\n   * @param {Document} domDocument Document which will be used to create DOM nodes.\n   * @param {Object} [options] Conversion options.\n   * @param {Boolean} [options.bind=false] Determines whether new elements will be bound.\n   * @param {Boolean} [options.withChildren=true] If true node's and document fragment's children  will be converted too.\n   * @returns {Node|DocumentFragment} Converted node or DocumentFragment.\n   */\n\n\t}, {\n\t\tkey: 'viewToDom',\n\t\tvalue: function viewToDom(viewNode, domDocument) {\n\t\t\tvar options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n\t\t\tif (viewNode.is('text')) {\n\t\t\t\tvar textData = this._processDataFromViewText(viewNode);\n\n\t\t\t\treturn domDocument.createTextNode(textData);\n\t\t\t} else {\n\t\t\t\tif (this.mapViewToDom(viewNode)) {\n\t\t\t\t\treturn this.mapViewToDom(viewNode);\n\t\t\t\t}\n\n\t\t\t\tvar domElement = void 0;\n\n\t\t\t\tif (viewNode.is('documentFragment')) {\n\t\t\t\t\t// Create DOM document fragment.\n\t\t\t\t\tdomElement = domDocument.createDocumentFragment();\n\n\t\t\t\t\tif (options.bind) {\n\t\t\t\t\t\tthis.bindDocumentFragments(domElement, viewNode);\n\t\t\t\t\t}\n\t\t\t\t} else if (viewNode.is('uiElement')) {\n\t\t\t\t\t// UIElement has its own render() method (see #799).\n\t\t\t\t\tdomElement = viewNode.render(domDocument);\n\n\t\t\t\t\tif (options.bind) {\n\t\t\t\t\t\tthis.bindElements(domElement, viewNode);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn domElement;\n\t\t\t\t} else {\n\t\t\t\t\t// Create DOM element.\n\t\t\t\t\tdomElement = domDocument.createElement(viewNode.name);\n\n\t\t\t\t\tif (options.bind) {\n\t\t\t\t\t\tthis.bindElements(domElement, viewNode);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Copy element's attributes.\n\t\t\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\t\t\tvar _didIteratorError2 = false;\n\t\t\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (var _iterator2 = viewNode.getAttributeKeys()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\t\t\tvar key = _step2.value;\n\n\t\t\t\t\t\t\tdomElement.setAttribute(key, viewNode.getAttribute(key));\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t\t\t_iteratorError2 = err;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (options.withChildren || options.withChildren === undefined) {\n\t\t\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\t\t\tvar _didIteratorError3 = false;\n\t\t\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (var _iterator3 = this.viewChildrenToDom(viewNode, domDocument, options)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\t\t\tvar child = _step3.value;\n\n\t\t\t\t\t\t\tdomElement.appendChild(child);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t\t\t_iteratorError3 = err;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn domElement;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Converts children of the view element to DOM using the\n   * {@link module:engine/view/domconverter~DomConverter#viewToDom} method.\n   * Additionally, this method adds block {@link module:engine/view/filler filler} to the list of children, if needed.\n   *\n   * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} viewElement Parent view element.\n   * @param {Document} domDocument Document which will be used to create DOM nodes.\n   * @param {Object} options See {@link module:engine/view/domconverter~DomConverter#viewToDom} options parameter.\n   * @returns {Iterable.<Node>} DOM nodes.\n   */\n\n\t}, {\n\t\tkey: 'viewChildrenToDom',\n\t\tvalue: regeneratorRuntime.mark(function viewChildrenToDom(viewElement, domDocument) {\n\t\t\tvar options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n\t\t\tvar fillerPositionOffset, offset, _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, childView;\n\n\t\t\treturn regeneratorRuntime.wrap(function viewChildrenToDom$(_context) {\n\t\t\t\twhile (1) {\n\t\t\t\t\tswitch (_context.prev = _context.next) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\tfillerPositionOffset = viewElement.getFillerOffset && viewElement.getFillerOffset();\n\t\t\t\t\t\t\toffset = 0;\n\t\t\t\t\t\t\t_iteratorNormalCompletion4 = true;\n\t\t\t\t\t\t\t_didIteratorError4 = false;\n\t\t\t\t\t\t\t_iteratorError4 = undefined;\n\t\t\t\t\t\t\t_context.prev = 5;\n\t\t\t\t\t\t\t_iterator4 = viewElement.getChildren()[Symbol.iterator]();\n\n\t\t\t\t\t\tcase 7:\n\t\t\t\t\t\t\tif (_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done) {\n\t\t\t\t\t\t\t\t_context.next = 18;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tchildView = _step4.value;\n\n\t\t\t\t\t\t\tif (!(fillerPositionOffset === offset)) {\n\t\t\t\t\t\t\t\t_context.next = 12;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_context.next = 12;\n\t\t\t\t\t\t\treturn this.blockFiller(domDocument);\n\n\t\t\t\t\t\tcase 12:\n\t\t\t\t\t\t\t_context.next = 14;\n\t\t\t\t\t\t\treturn this.viewToDom(childView, domDocument, options);\n\n\t\t\t\t\t\tcase 14:\n\n\t\t\t\t\t\t\toffset++;\n\n\t\t\t\t\t\tcase 15:\n\t\t\t\t\t\t\t_iteratorNormalCompletion4 = true;\n\t\t\t\t\t\t\t_context.next = 7;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 18:\n\t\t\t\t\t\t\t_context.next = 24;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 20:\n\t\t\t\t\t\t\t_context.prev = 20;\n\t\t\t\t\t\t\t_context.t0 = _context['catch'](5);\n\t\t\t\t\t\t\t_didIteratorError4 = true;\n\t\t\t\t\t\t\t_iteratorError4 = _context.t0;\n\n\t\t\t\t\t\tcase 24:\n\t\t\t\t\t\t\t_context.prev = 24;\n\t\t\t\t\t\t\t_context.prev = 25;\n\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t\t\t\t\t_iterator4.return();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase 27:\n\t\t\t\t\t\t\t_context.prev = 27;\n\n\t\t\t\t\t\t\tif (!_didIteratorError4) {\n\t\t\t\t\t\t\t\t_context.next = 30;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthrow _iteratorError4;\n\n\t\t\t\t\t\tcase 30:\n\t\t\t\t\t\t\treturn _context.finish(27);\n\n\t\t\t\t\t\tcase 31:\n\t\t\t\t\t\t\treturn _context.finish(24);\n\n\t\t\t\t\t\tcase 32:\n\t\t\t\t\t\t\tif (!(fillerPositionOffset === offset)) {\n\t\t\t\t\t\t\t\t_context.next = 35;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_context.next = 35;\n\t\t\t\t\t\t\treturn this.blockFiller(domDocument);\n\n\t\t\t\t\t\tcase 35:\n\t\t\t\t\t\tcase 'end':\n\t\t\t\t\t\t\treturn _context.stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, viewChildrenToDom, this, [[5, 20, 24, 32], [25,, 27, 31]]);\n\t\t})\n\n\t\t/**\n   * Converts view {@link module:engine/view/range~Range} to DOM range.\n   * Inline and block {@link module:engine/view/filler fillers} are handled during the conversion.\n   *\n   * @param {module:engine/view/range~Range} viewRange View range.\n   * @returns {Range} DOM range.\n   */\n\n\t}, {\n\t\tkey: 'viewRangeToDom',\n\t\tvalue: function viewRangeToDom(viewRange) {\n\t\t\tvar domStart = this.viewPositionToDom(viewRange.start);\n\t\t\tvar domEnd = this.viewPositionToDom(viewRange.end);\n\n\t\t\tvar domRange = document.createRange();\n\t\t\tdomRange.setStart(domStart.parent, domStart.offset);\n\t\t\tdomRange.setEnd(domEnd.parent, domEnd.offset);\n\n\t\t\treturn domRange;\n\t\t}\n\n\t\t/**\n   * Converts view {@link module:engine/view/position~Position} to DOM parent and offset.\n   *\n   * Inline and block {@link module:engine/view/filler fillers} are handled during the conversion.\n   * If the converted position is directly before inline filler it is moved inside the filler.\n   *\n   * @param {module:engine/view/position~Position} viewPosition View position.\n   * @returns {Object|null} position DOM position or `null` if view position could not be converted to DOM.\n   * @returns {Node} position.parent DOM position parent.\n   * @returns {Number} position.offset DOM position offset.\n   */\n\n\t}, {\n\t\tkey: 'viewPositionToDom',\n\t\tvalue: function viewPositionToDom(viewPosition) {\n\t\t\tvar viewParent = viewPosition.parent;\n\n\t\t\tif (viewParent.is('text')) {\n\t\t\t\tvar domParent = this.findCorrespondingDomText(viewParent);\n\n\t\t\t\tif (!domParent) {\n\t\t\t\t\t// Position is in a view text node that has not been rendered to DOM yet.\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tvar offset = viewPosition.offset;\n\n\t\t\t\tif ((0, _filler.startsWithFiller)(domParent)) {\n\t\t\t\t\toffset += _filler.INLINE_FILLER_LENGTH;\n\t\t\t\t}\n\n\t\t\t\treturn { parent: domParent, offset: offset };\n\t\t\t} else {\n\t\t\t\t// viewParent is instance of ViewElement.\n\t\t\t\tvar _domParent = void 0,\n\t\t\t\t    domBefore = void 0,\n\t\t\t\t    domAfter = void 0;\n\n\t\t\t\tif (viewPosition.offset === 0) {\n\t\t\t\t\t_domParent = this.mapViewToDom(viewParent);\n\n\t\t\t\t\tif (!_domParent) {\n\t\t\t\t\t\t// Position is in a view element that has not been rendered to DOM yet.\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\tdomAfter = _domParent.childNodes[0];\n\t\t\t\t} else {\n\t\t\t\t\tvar nodeBefore = viewPosition.nodeBefore;\n\n\t\t\t\t\tdomBefore = nodeBefore.is('text') ? this.findCorrespondingDomText(nodeBefore) : this.mapViewToDom(viewPosition.nodeBefore);\n\n\t\t\t\t\tif (!domBefore) {\n\t\t\t\t\t\t// Position is after a view element that has not been rendered to DOM yet.\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\t_domParent = domBefore.parentNode;\n\t\t\t\t\tdomAfter = domBefore.nextSibling;\n\t\t\t\t}\n\n\t\t\t\t// If there is an inline filler at position return position inside the filler. We should never return\n\t\t\t\t// the position before the inline filler.\n\t\t\t\tif (this.isText(domAfter) && (0, _filler.startsWithFiller)(domAfter)) {\n\t\t\t\t\treturn { parent: domAfter, offset: _filler.INLINE_FILLER_LENGTH };\n\t\t\t\t}\n\n\t\t\t\tvar _offset = domBefore ? (0, _indexof2.default)(domBefore) + 1 : 0;\n\n\t\t\t\treturn { parent: _domParent, offset: _offset };\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Converts DOM to view. For all text nodes, not bound elements and document fragments new items will\n   * be created. For bound elements and document fragments function will return corresponding items. For\n   * {@link module:engine/view/filler fillers} `null` will be returned.\n   * For all DOM elements rendered by {@link module:engine/view/uielement~UIElement} that UIElement will be returned.\n   *\n   * @param {Node|DocumentFragment} domNode DOM node or document fragment to transform.\n   * @param {Object} [options] Conversion options.\n   * @param {Boolean} [options.bind=false] Determines whether new elements will be bound.\n   * @param {Boolean} [options.withChildren=true] If `true`, node's and document fragment's children will be converted too.\n   * @param {Boolean} [options.keepOriginalCase=false] If `false`, node's tag name will be converter to lower case.\n   * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null} Converted node or document fragment\n   * or `null` if DOM node is a {@link module:engine/view/filler filler} or the given node is an empty text node.\n   */\n\n\t}, {\n\t\tkey: 'domToView',\n\t\tvalue: function domToView(domNode) {\n\t\t\tvar options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\t\tif ((0, _filler.isBlockFiller)(domNode, this.blockFiller)) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// When node is inside UIElement return that UIElement as it's view representation.\n\t\t\tvar uiElement = this.getParentUIElement(domNode, this._domToViewMapping);\n\n\t\t\tif (uiElement) {\n\t\t\t\treturn uiElement;\n\t\t\t}\n\n\t\t\tif (this.isText(domNode)) {\n\t\t\t\tif ((0, _filler.isInlineFiller)(domNode)) {\n\t\t\t\t\treturn null;\n\t\t\t\t} else {\n\t\t\t\t\tvar textData = this._processDataFromDomText(domNode);\n\n\t\t\t\t\treturn textData === '' ? null : new _text2.default(textData);\n\t\t\t\t}\n\t\t\t} else if (this.isComment(domNode)) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tif (this.mapDomToView(domNode)) {\n\t\t\t\t\treturn this.mapDomToView(domNode);\n\t\t\t\t}\n\n\t\t\t\tvar viewElement = void 0;\n\n\t\t\t\tif (this.isDocumentFragment(domNode)) {\n\t\t\t\t\t// Create view document fragment.\n\t\t\t\t\tviewElement = new _documentfragment2.default();\n\n\t\t\t\t\tif (options.bind) {\n\t\t\t\t\t\tthis.bindDocumentFragments(domNode, viewElement);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Create view element.\n\t\t\t\t\tvar viewName = options.keepOriginalCase ? domNode.tagName : domNode.tagName.toLowerCase();\n\t\t\t\t\tviewElement = new _element2.default(viewName);\n\n\t\t\t\t\tif (options.bind) {\n\t\t\t\t\t\tthis.bindElements(domNode, viewElement);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Copy element's attributes.\n\t\t\t\t\tvar attrs = domNode.attributes;\n\n\t\t\t\t\tfor (var i = attrs.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tviewElement.setAttribute(attrs[i].name, attrs[i].value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (options.withChildren || options.withChildren === undefined) {\n\t\t\t\t\tvar _iteratorNormalCompletion5 = true;\n\t\t\t\t\tvar _didIteratorError5 = false;\n\t\t\t\t\tvar _iteratorError5 = undefined;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (var _iterator5 = this.domChildrenToView(domNode, options)[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t\t\t\t\t\t\tvar child = _step5.value;\n\n\t\t\t\t\t\t\tviewElement.appendChildren(child);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t_didIteratorError5 = true;\n\t\t\t\t\t\t_iteratorError5 = err;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t\t\t\t\t\t\t\t_iterator5.return();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (_didIteratorError5) {\n\t\t\t\t\t\t\t\tthrow _iteratorError5;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn viewElement;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Converts children of the DOM element to view nodes using\n   * the {@link module:engine/view/domconverter~DomConverter#domToView} method.\n   * Additionally this method omits block {@link module:engine/view/filler filler}, if it exists in the DOM parent.\n   *\n   * @param {HTMLElement} domElement Parent DOM element.\n   * @param {Object} options See {@link module:engine/view/domconverter~DomConverter#domToView} options parameter.\n   * @returns {Iterable.<module:engine/view/node~Node>} View nodes.\n   */\n\n\t}, {\n\t\tkey: 'domChildrenToView',\n\t\tvalue: regeneratorRuntime.mark(function domChildrenToView(domElement) {\n\t\t\tvar options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\t\tvar i, domChild, viewChild;\n\t\t\treturn regeneratorRuntime.wrap(function domChildrenToView$(_context2) {\n\t\t\t\twhile (1) {\n\t\t\t\t\tswitch (_context2.prev = _context2.next) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\ti = 0;\n\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tif (!(i < domElement.childNodes.length)) {\n\t\t\t\t\t\t\t\t_context2.next = 10;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tdomChild = domElement.childNodes[i];\n\t\t\t\t\t\t\tviewChild = this.domToView(domChild, options);\n\n\t\t\t\t\t\t\tif (!(viewChild !== null)) {\n\t\t\t\t\t\t\t\t_context2.next = 7;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_context2.next = 7;\n\t\t\t\t\t\t\treturn viewChild;\n\n\t\t\t\t\t\tcase 7:\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t_context2.next = 1;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 10:\n\t\t\t\t\t\tcase 'end':\n\t\t\t\t\t\t\treturn _context2.stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, domChildrenToView, this);\n\t\t})\n\n\t\t/**\n   * Converts DOM selection to view {@link module:engine/view/selection~Selection}.\n   * Ranges which cannot be converted will be omitted.\n   *\n   * @param {Selection} domSelection DOM selection.\n   * @returns {module:engine/view/selection~Selection} View selection.\n   */\n\n\t}, {\n\t\tkey: 'domSelectionToView',\n\t\tvalue: function domSelectionToView(domSelection) {\n\t\t\t// DOM selection might be placed in fake selection container.\n\t\t\t// If container contains fake selection - return corresponding view selection.\n\t\t\tif (domSelection.rangeCount === 1) {\n\t\t\t\tvar container = domSelection.getRangeAt(0).startContainer;\n\n\t\t\t\t// The DOM selection might be moved to the text node inside the fake selection container.\n\t\t\t\tif (this.isText(container)) {\n\t\t\t\t\tcontainer = container.parentNode;\n\t\t\t\t}\n\n\t\t\t\tvar _viewSelection = this.fakeSelectionToView(container);\n\n\t\t\t\tif (_viewSelection) {\n\t\t\t\t\treturn _viewSelection;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar viewSelection = new _selection2.default();\n\t\t\tvar isBackward = this.isDomSelectionBackward(domSelection);\n\n\t\t\tfor (var i = 0; i < domSelection.rangeCount; i++) {\n\t\t\t\t// DOM Range have correct start and end, no matter what is the DOM Selection direction. So we don't have to fix anything.\n\t\t\t\tvar domRange = domSelection.getRangeAt(i);\n\t\t\t\tvar viewRange = this.domRangeToView(domRange);\n\n\t\t\t\tif (viewRange) {\n\t\t\t\t\tviewSelection.addRange(viewRange, isBackward);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn viewSelection;\n\t\t}\n\n\t\t/**\n   * Converts DOM Range to view {@link module:engine/view/range~Range}.\n   * If the start or end position can not be converted `null` is returned.\n   *\n   * @param {Range} domRange DOM range.\n   * @returns {module:engine/view/range~Range|null} View range.\n   */\n\n\t}, {\n\t\tkey: 'domRangeToView',\n\t\tvalue: function domRangeToView(domRange) {\n\t\t\tvar viewStart = this.domPositionToView(domRange.startContainer, domRange.startOffset);\n\t\t\tvar viewEnd = this.domPositionToView(domRange.endContainer, domRange.endOffset);\n\n\t\t\tif (viewStart && viewEnd) {\n\t\t\t\treturn new _range2.default(viewStart, viewEnd);\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n   * Converts DOM parent and offset to view {@link module:engine/view/position~Position}.\n   *\n   * If the position is inside a {@link module:engine/view/filler filler} which has no corresponding view node,\n   * position of the filler will be converted and returned.\n   *\n   * If the position is inside DOM element rendered by {@link module:engine/view/uielement~UIElement}\n   * that position will be converted to view position before that UIElement.\n   *\n   * If structures are too different and it is not possible to find corresponding position then `null` will be returned.\n   *\n   * @param {Node} domParent DOM position parent.\n   * @param {Number} domOffset DOM position offset.\n   * @returns {module:engine/view/position~Position} viewPosition View position.\n   */\n\n\t}, {\n\t\tkey: 'domPositionToView',\n\t\tvalue: function domPositionToView(domParent, domOffset) {\n\t\t\tif ((0, _filler.isBlockFiller)(domParent, this.blockFiller)) {\n\t\t\t\treturn this.domPositionToView(domParent.parentNode, (0, _indexof2.default)(domParent));\n\t\t\t}\n\n\t\t\t// If position is somewhere inside UIElement - return position before that element.\n\t\t\tvar viewElement = this.mapDomToView(domParent);\n\n\t\t\tif (viewElement && viewElement.is('uiElement')) {\n\t\t\t\treturn _position2.default.createBefore(viewElement);\n\t\t\t}\n\n\t\t\tif (this.isText(domParent)) {\n\t\t\t\tif ((0, _filler.isInlineFiller)(domParent)) {\n\t\t\t\t\treturn this.domPositionToView(domParent.parentNode, (0, _indexof2.default)(domParent));\n\t\t\t\t}\n\n\t\t\t\tvar viewParent = this.findCorrespondingViewText(domParent);\n\t\t\t\tvar offset = domOffset;\n\n\t\t\t\tif (!viewParent) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tif ((0, _filler.startsWithFiller)(domParent)) {\n\t\t\t\t\toffset -= _filler.INLINE_FILLER_LENGTH;\n\t\t\t\t\toffset = offset < 0 ? 0 : offset;\n\t\t\t\t}\n\n\t\t\t\treturn new _position2.default(viewParent, offset);\n\t\t\t}\n\t\t\t// domParent instanceof HTMLElement.\n\t\t\telse {\n\t\t\t\t\tif (domOffset === 0) {\n\t\t\t\t\t\tvar _viewParent = this.mapDomToView(domParent);\n\n\t\t\t\t\t\tif (_viewParent) {\n\t\t\t\t\t\t\treturn new _position2.default(_viewParent, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar domBefore = domParent.childNodes[domOffset - 1];\n\t\t\t\t\t\tvar viewBefore = this.isText(domBefore) ? this.findCorrespondingViewText(domBefore) : this.mapDomToView(domBefore);\n\n\t\t\t\t\t\t// TODO #663\n\t\t\t\t\t\tif (viewBefore && viewBefore.parent) {\n\t\t\t\t\t\t\treturn new _position2.default(viewBefore.parent, viewBefore.index + 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t}\n\n\t\t/**\n   * Returns corresponding view {@link module:engine/view/element~Element Element} or\n   * {@link module:engine/view/documentfragment~DocumentFragment} for provided DOM element or\n   * document fragment. If there is no view item {@link module:engine/view/domconverter~DomConverter#bindElements bound}\n   * to the given DOM - `undefined` is returned.\n   * For all DOM elements rendered by {@link module:engine/view/uielement~UIElement} that UIElement will be returned.\n   *\n   * @param {DocumentFragment|Element} domElementOrDocumentFragment DOM element or document fragment.\n   * @returns {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|undefined}\n   * Corresponding view element, document fragment or `undefined` if no element was bound.\n   */\n\n\t}, {\n\t\tkey: 'mapDomToView',\n\t\tvalue: function mapDomToView(domElementOrDocumentFragment) {\n\t\t\treturn this.getParentUIElement(domElementOrDocumentFragment) || this._domToViewMapping.get(domElementOrDocumentFragment);\n\t\t}\n\n\t\t/**\n   * Finds corresponding text node. Text nodes are not {@link module:engine/view/domconverter~DomConverter#bindElements bound},\n   * corresponding text node is returned based on the sibling or parent.\n   *\n   * If the directly previous sibling is a {@link module:engine/view/domconverter~DomConverter#bindElements bound} element, it is used\n   * to find the corresponding text node.\n   *\n   * If this is a first child in the parent and the parent is a {@link module:engine/view/domconverter~DomConverter#bindElements bound}\n   * element, it is used to find the corresponding text node.\n   *\n   * For all text nodes rendered by {@link module:engine/view/uielement~UIElement} that UIElement will be returned.\n   *\n   * Otherwise `null` is returned.\n   *\n   * Note that for the block or inline {@link module:engine/view/filler filler} this method returns `null`.\n   *\n   * @param {Text} domText DOM text node.\n   * @returns {module:engine/view/text~Text|null} Corresponding view text node or `null`, if it was not possible to find a\n   * corresponding node.\n   */\n\n\t}, {\n\t\tkey: 'findCorrespondingViewText',\n\t\tvalue: function findCorrespondingViewText(domText) {\n\t\t\tif ((0, _filler.isInlineFiller)(domText)) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// If DOM text was rendered by UIElement - return that element.\n\t\t\tvar uiElement = this.getParentUIElement(domText);\n\n\t\t\tif (uiElement) {\n\t\t\t\treturn uiElement;\n\t\t\t}\n\n\t\t\tvar previousSibling = domText.previousSibling;\n\n\t\t\t// Try to use previous sibling to find the corresponding text node.\n\t\t\tif (previousSibling) {\n\t\t\t\tif (!this.isElement(previousSibling)) {\n\t\t\t\t\t// The previous is text or comment.\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tvar viewElement = this.mapDomToView(previousSibling);\n\n\t\t\t\tif (viewElement) {\n\t\t\t\t\tvar nextSibling = viewElement.nextSibling;\n\n\t\t\t\t\t// It might be filler which has no corresponding view node.\n\t\t\t\t\tif (nextSibling instanceof _text2.default) {\n\t\t\t\t\t\treturn viewElement.nextSibling;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Try to use parent to find the corresponding text node.\n\t\t\telse {\n\t\t\t\t\tvar _viewElement = this.mapDomToView(domText.parentNode);\n\n\t\t\t\t\tif (_viewElement) {\n\t\t\t\t\t\tvar firstChild = _viewElement.getChild(0);\n\n\t\t\t\t\t\t// It might be filler which has no corresponding view node.\n\t\t\t\t\t\tif (firstChild instanceof _text2.default) {\n\t\t\t\t\t\t\treturn firstChild;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n   * Returns corresponding DOM item for provided {@link module:engine/view/element~Element Element} or\n   * {@link module:engine/view/documentfragment~DocumentFragment DocumentFragment}.\n   * To find a corresponding text for {@link module:engine/view/text~Text view Text instance}\n   * use {@link #findCorrespondingDomText}.\n   *\n   * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} viewNode\n   * View element or document fragment.\n   * @returns {Node|DocumentFragment|undefined} Corresponding DOM node or document fragment.\n   */\n\n\t}, {\n\t\tkey: 'mapViewToDom',\n\t\tvalue: function mapViewToDom(documentFragmentOrElement) {\n\t\t\treturn this._viewToDomMapping.get(documentFragmentOrElement);\n\t\t}\n\n\t\t/**\n   * Finds corresponding text node. Text nodes are not {@link module:engine/view/domconverter~DomConverter#bindElements bound},\n   * corresponding text node is returned based on the sibling or parent.\n   *\n   * If the directly previous sibling is a {@link module:engine/view/domconverter~DomConverter#bindElements bound} element, it is used\n   * to find the corresponding text node.\n   *\n   * If this is a first child in the parent and the parent is a {@link module:engine/view/domconverter~DomConverter#bindElements bound}\n   * element, it is used to find the corresponding text node.\n   *\n   * Otherwise `null` is returned.\n   *\n   * @param {module:engine/view/text~Text} viewText View text node.\n   * @returns {Text|null} Corresponding DOM text node or `null`, if it was not possible to find a corresponding node.\n   */\n\n\t}, {\n\t\tkey: 'findCorrespondingDomText',\n\t\tvalue: function findCorrespondingDomText(viewText) {\n\t\t\tvar previousSibling = viewText.previousSibling;\n\n\t\t\t// Try to use previous sibling to find the corresponding text node.\n\t\t\tif (previousSibling && this.mapViewToDom(previousSibling)) {\n\t\t\t\treturn this.mapViewToDom(previousSibling).nextSibling;\n\t\t\t}\n\n\t\t\t// If this is a first node, try to use parent to find the corresponding text node.\n\t\t\tif (!previousSibling && viewText.parent && this.mapViewToDom(viewText.parent)) {\n\t\t\t\treturn this.mapViewToDom(viewText.parent).childNodes[0];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n   * Focuses DOM editable that is corresponding to provided {@link module:engine/view/editableelement~EditableElement}.\n   *\n   * @param {module:engine/view/editableelement~EditableElement} viewEditable\n   */\n\n\t}, {\n\t\tkey: 'focus',\n\t\tvalue: function focus(viewEditable) {\n\t\t\tvar domEditable = this.mapViewToDom(viewEditable);\n\n\t\t\tif (domEditable && domEditable.ownerDocument.activeElement !== domEditable) {\n\t\t\t\t// Save the scrollX and scrollY positions before the focus.\n\t\t\t\tvar _global$window = _global2.default.window,\n\t\t\t\t    scrollX = _global$window.scrollX,\n\t\t\t\t    scrollY = _global$window.scrollY;\n\n\t\t\t\tvar scrollPositions = [];\n\n\t\t\t\t// Save all scrollLeft and scrollTop values starting from domEditable up to\n\t\t\t\t// document#documentElement.\n\t\t\t\tforEachDomNodeAncestor(domEditable, function (node) {\n\t\t\t\t\tvar scrollLeft = node.scrollLeft,\n\t\t\t\t\t    scrollTop = node.scrollTop;\n\n\n\t\t\t\t\tscrollPositions.push([scrollLeft, scrollTop]);\n\t\t\t\t});\n\n\t\t\t\tdomEditable.focus();\n\n\t\t\t\t// Restore scrollLeft and scrollTop values starting from domEditable up to\n\t\t\t\t// document#documentElement.\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-engine/issues/951\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-engine/issues/957\n\t\t\t\tforEachDomNodeAncestor(domEditable, function (node) {\n\t\t\t\t\tvar _scrollPositions$shif = scrollPositions.shift(),\n\t\t\t\t\t    _scrollPositions$shif2 = _slicedToArray(_scrollPositions$shif, 2),\n\t\t\t\t\t    scrollLeft = _scrollPositions$shif2[0],\n\t\t\t\t\t    scrollTop = _scrollPositions$shif2[1];\n\n\t\t\t\t\tnode.scrollLeft = scrollLeft;\n\t\t\t\t\tnode.scrollTop = scrollTop;\n\t\t\t\t});\n\n\t\t\t\t// Restore the scrollX and scrollY positions after the focus.\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-engine/issues/951\n\t\t\t\t_global2.default.window.scrollTo(scrollX, scrollY);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Returns `true` when `node.nodeType` equals `Node.TEXT_NODE`.\n   *\n   * @param {Node} node Node to check.\n   * @returns {Boolean}\n   */\n\n\t}, {\n\t\tkey: 'isText',\n\t\tvalue: function isText(node) {\n\t\t\treturn node && node.nodeType == Node.TEXT_NODE;\n\t\t}\n\n\t\t/**\n   * Returns `true` when `node.nodeType` equals `Node.ELEMENT_NODE`.\n   *\n   * @param {Node} node Node to check.\n   * @returns {Boolean}\n   */\n\n\t}, {\n\t\tkey: 'isElement',\n\t\tvalue: function isElement(node) {\n\t\t\treturn node && node.nodeType == Node.ELEMENT_NODE;\n\t\t}\n\n\t\t/**\n   * Returns `true` when `node.nodeType` equals `Node.DOCUMENT_FRAGMENT_NODE`.\n   *\n   * @param {Node} node Node to check.\n   * @returns {Boolean}\n   */\n\n\t}, {\n\t\tkey: 'isDocumentFragment',\n\t\tvalue: function isDocumentFragment(node) {\n\t\t\treturn node && node.nodeType == Node.DOCUMENT_FRAGMENT_NODE;\n\t\t}\n\n\t\t/**\n   * Returns `true` when `node.nodeType` equals `Node.COMMENT_NODE`.\n   *\n   * @param {Node} node Node to check.\n   * @returns {Boolean}\n   */\n\n\t}, {\n\t\tkey: 'isComment',\n\t\tvalue: function isComment(node) {\n\t\t\treturn node && node.nodeType == Node.COMMENT_NODE;\n\t\t}\n\n\t\t/**\n   * Returns `true` if given selection is a backward selection, that is, if it's `focus` is before `anchor`.\n   *\n   * @param {Selection} DOM Selection instance to check.\n   * @returns {Boolean}\n   */\n\n\t}, {\n\t\tkey: 'isDomSelectionBackward',\n\t\tvalue: function isDomSelectionBackward(selection) {\n\t\t\tif (selection.isCollapsed) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Since it takes multiple lines of code to check whether a \"DOM Position\" is before/after another \"DOM Position\",\n\t\t\t// we will use the fact that range will collapse if it's end is before it's start.\n\t\t\tvar range = document.createRange();\n\n\t\t\trange.setStart(selection.anchorNode, selection.anchorOffset);\n\t\t\trange.setEnd(selection.focusNode, selection.focusOffset);\n\n\t\t\tvar backward = range.collapsed;\n\n\t\t\trange.detach();\n\n\t\t\treturn backward;\n\t\t}\n\n\t\t/**\n   * Returns parent {@link module:engine/view/uielement~UIElement} for provided DOM node. Returns `null` if there is no\n   * parent UIElement.\n   *\n   * @param {Node} domNode\n   * @return {module:engine/view/uielement~UIElement|null}\n   */\n\n\t}, {\n\t\tkey: 'getParentUIElement',\n\t\tvalue: function getParentUIElement(domNode) {\n\t\t\tvar ancestors = (0, _getancestors2.default)(domNode);\n\n\t\t\t// Remove domNode from the list.\n\t\t\tancestors.pop();\n\n\t\t\twhile (ancestors.length) {\n\t\t\t\tvar _domNode = ancestors.pop();\n\t\t\t\tvar viewNode = this._domToViewMapping.get(_domNode);\n\n\t\t\t\tif (viewNode && viewNode.is('uiElement')) {\n\t\t\t\t\treturn viewNode;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n   * Checks if given selection's boundaries are at correct places.\n   *\n   * The following places are considered as incorrect for selection boundaries:\n   * * before or in the middle of the inline filler sequence,\n   * * inside the DOM element which represents {@link module:engine/view/uielement~UIElement a view ui element}.\n   *\n   * @param {Selection} domSelection DOM Selection object to be checked.\n   * @returns {Boolean} `true` if the given selection is at a correct place, `false` otherwise.\n   */\n\n\t}, {\n\t\tkey: 'isDomSelectionCorrect',\n\t\tvalue: function isDomSelectionCorrect(domSelection) {\n\t\t\treturn this._isDomSelectionPositionCorrect(domSelection.anchorNode, domSelection.anchorOffset) && this._isDomSelectionPositionCorrect(domSelection.focusNode, domSelection.focusOffset);\n\t\t}\n\n\t\t/**\n   * Checks if the given DOM position is a correct place for selection boundary. See {@link #isDomSelectionCorrect}.\n   *\n   * @private\n   * @param {Element} domParent Position parent.\n   * @param {Number} offset Position offset.\n   * @returns {Boolean} `true` if given position is at a correct place for selection boundary, `false` otherwise.\n   */\n\n\t}, {\n\t\tkey: '_isDomSelectionPositionCorrect',\n\t\tvalue: function _isDomSelectionPositionCorrect(domParent, offset) {\n\t\t\t// If selection is before or in the middle of inline filler string, it is incorrect.\n\t\t\tif (this.isText(domParent) && (0, _filler.startsWithFiller)(domParent) && offset < _filler.INLINE_FILLER_LENGTH) {\n\t\t\t\t// Selection in a text node, at wrong position (before or in the middle of filler).\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.isElement(domParent) && (0, _filler.startsWithFiller)(domParent.childNodes[offset])) {\n\t\t\t\t// Selection in an element node, before filler text node.\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar viewParent = this.mapDomToView(domParent);\n\n\t\t\t// If selection is in `view.UIElement`, it is incorrect. Note that `mapDomToView()` returns `view.UIElement`\n\t\t\t// also for any dom element that is inside the view ui element (so we don't need to perform any additional checks).\n\t\t\tif (viewParent && viewParent.is('uiElement')) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n   * Takes text data from given {@link module:engine/view/text~Text#data} and processes it so it is correctly displayed in DOM.\n   *\n   * Following changes are done:\n   *\n   * * multiple spaces are replaced to a chain of spaces and `&nbsp;`,\n   * * space at the beginning of the text node is changed to `&nbsp;` if it is a first text node in it's container\n   * element or if previous text node ends by space character,\n   * * space at the end of the text node is changed to `&nbsp;` if it is a last text node in it's container.\n   *\n   * @private\n   * @param {module:engine/view/text~Text} node View text node to process.\n   * @returns {String} Processed text data.\n   */\n\n\t}, {\n\t\tkey: '_processDataFromViewText',\n\t\tvalue: function _processDataFromViewText(node) {\n\t\t\tvar _this = this;\n\n\t\t\tvar data = node.data;\n\n\t\t\t// If any of node ancestors has a name which is in `preElements` array, then currently processed\n\t\t\t// view text node is (will be) in preformatted element. We should not change whitespaces then.\n\t\t\tif (node.getAncestors().some(function (parent) {\n\t\t\t\treturn _this.preElements.includes(parent.name);\n\t\t\t})) {\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\tvar prevNode = this._getTouchingViewTextNode(node, false);\n\t\t\tvar nextNode = this._getTouchingViewTextNode(node, true);\n\n\t\t\t// Second part of text data, from the space after the last non-space character to the end.\n\t\t\t// We separate `textEnd` and `textStart` because `textEnd` needs some special handling.\n\t\t\tvar textEnd = data.match(/ *$/)[0];\n\t\t\t// First part of data, between first and last part of data.\n\t\t\tvar textStart = data.substr(0, data.length - textEnd.length);\n\n\t\t\t// If previous text node does not exist or it ends by space character, replace space character at the beginning of text.\n\t\t\t// ` x`\t\t\t-> `_x`\n\t\t\t// `  x`\t\t-> `_ x`\n\t\t\t// `   x`\t\t-> `_  x`\n\t\t\tif (!prevNode || prevNode.data.charAt(prevNode.data.length - 1) == ' ') {\n\t\t\t\ttextStart = textStart.replace(/^ /, '\\xA0');\n\t\t\t}\n\n\t\t\t// Multiple consecutive spaces. Change them to ` &nbsp;` pairs.\n\t\t\t// `_x  x`\t\t-> `_x _x`\n\t\t\t// `_ x  x`\t\t-> `_ x _x`\n\t\t\t// `_  x  x`\t-> `_ _x _x`\n\t\t\t// `_  x   x`\t-> `_ _x _ x`\n\t\t\t// `_  x    x`\t-> `_ _x _ _x`\n\t\t\t// `_   x    x` -> `_ _ x _ _x`\n\t\t\ttextStart = textStart.replace(/ {2}/g, ' \\xA0');\n\n\t\t\t// Process `textEnd` only if there is anything to process.\n\t\t\tif (textEnd.length > 0) {\n\t\t\t\t// (1) We need special treatment for the last part of text node, it has to end on `&nbsp;`, not space:\n\t\t\t\t// `x `\t\t-> `x_`\n\t\t\t\t// `x  `\t-> `x _`\n\t\t\t\t// `x   `\t-> `x_ _`\n\t\t\t\t// `x    `\t-> `x _ _`\n\t\t\t\t// (2) Different case when there is a node after:\n\t\t\t\t// `x <b>b</b>`\t\t-> `x <b>b</b>`\n\t\t\t\t// `x  <b>b</b>`\t-> `x _<b>b</b>`\n\t\t\t\t// `x   <b>b</b>`\t-> `x _ <b>b</b>`\n\t\t\t\t// `x    <b>b</b>`\t-> `x _ _<b>b</b>`\n\t\t\t\t// (3) But different, when that node starts by &nbsp; (or space that will be converted to &nbsp;):\n\t\t\t\t// `x <b>_b</b>`\t-> `x <b>_b</b>`\n\t\t\t\t// `x  <b>_b</b>`\t-> `x_ <b>_b</b>`\n\t\t\t\t// `x   <b>_b</b>`\t-> `x _ <b>_b</b>`\n\t\t\t\t// `x    <b>_b</b>`\t-> `x_ _ <b>_b</b>`\n\t\t\t\t// Let's assume that starting from space is normal behavior, because starting from &nbsp; is a less frequent case.\n\t\t\t\tvar textEndStartsFromNbsp = false;\n\n\t\t\t\tif (!nextNode) {\n\t\t\t\t\t// (1)\n\t\t\t\t\tif (textEnd.length % 2) {\n\t\t\t\t\t\ttextEndStartsFromNbsp = true;\n\t\t\t\t\t}\n\t\t\t\t} else if (nextNode.data.charAt(0) == ' ' || nextNode.data.charAt(0) == '\\xA0') {\n\t\t\t\t\t// (3)\n\t\t\t\t\tif (textEnd.length % 2 === 0) {\n\t\t\t\t\t\ttextEndStartsFromNbsp = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (textEndStartsFromNbsp) {\n\t\t\t\t\ttextEnd = '\\xA0' + textEnd.substr(0, textEnd.length - 1);\n\t\t\t\t}\n\n\t\t\t\ttextEnd = textEnd.replace(/ {2}/g, ' \\xA0');\n\t\t\t}\n\n\t\t\treturn textStart + textEnd;\n\t\t}\n\n\t\t/**\n   * Helper function. For given {@link module:engine/view/text~Text view text node}, it finds previous or next sibling that is contained\n   * in the same block element. If there is no such sibling, `null` is returned.\n   *\n   * @private\n   * @param {module:engine/view/text~Text} node\n   * @param {Boolean} getNext\n   * @returns {module:engine/view/text~Text}\n   */\n\n\t}, {\n\t\tkey: '_getTouchingViewTextNode',\n\t\tvalue: function _getTouchingViewTextNode(node, getNext) {\n\t\t\tif (!node.parent) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar treeWalker = new _treewalker2.default({\n\t\t\t\tstartPosition: getNext ? _position2.default.createAfter(node) : _position2.default.createBefore(node),\n\t\t\t\tdirection: getNext ? 'forward' : 'backward'\n\t\t\t});\n\n\t\t\tvar _iteratorNormalCompletion6 = true;\n\t\t\tvar _didIteratorError6 = false;\n\t\t\tvar _iteratorError6 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator6 = treeWalker[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t\t\t\t\tvar value = _step6.value;\n\n\t\t\t\t\tif (value.item.is('containerElement')) {\n\t\t\t\t\t\t// ViewContainerElement is found on a way to next ViewText node, so given `node` was first/last\n\t\t\t\t\t\t// text node in it's container element.\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t} else if (value.item.is('text')) {\n\t\t\t\t\t\t// Found a text node in the same container element.\n\t\t\t\t\t\treturn value.item;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError6 = true;\n\t\t\t\t_iteratorError6 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion6 && _iterator6.return) {\n\t\t\t\t\t\t_iterator6.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError6) {\n\t\t\t\t\t\tthrow _iteratorError6;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n   * Takes text data from native `Text` node and processes it to a correct {@link module:engine/view/text~Text view text node} data.\n   *\n   * Following changes are done:\n   * * multiple whitespaces are replaced to a single space,\n   * * space at the beginning of the text node is removed, if it is a first text node in it's container\n   * element or if previous text node ends by space character,\n   * * space at the end of the text node is removed, if it is a last text node in it's container.\n   *\n   * @param {Node} node DOM text node to process.\n   * @returns {String} Processed data.\n   * @private\n   */\n\n\t}, {\n\t\tkey: '_processDataFromDomText',\n\t\tvalue: function _processDataFromDomText(node) {\n\t\t\tvar data = (0, _filler.getDataWithoutFiller)(node);\n\n\t\t\tif (_hasDomParentOfType(node, this.preElements)) {\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\t// Change all consecutive whitespace characters (from the [ \\n\\t\\r] set –\n\t\t\t// see https://github.com/ckeditor/ckeditor5-engine/issues/822#issuecomment-311670249) to a single space character.\n\t\t\t// That's how multiple whitespaces are treated when rendered, so we normalize those whitespaces.\n\t\t\t// We're replacing 1+ (and not 2+) to also normalize singular \\n\\t\\r characters (#822).\n\t\t\tdata = data.replace(/[ \\n\\t\\r]{1,}/g, ' ');\n\n\t\t\tvar prevNode = this._getTouchingDomTextNode(node, false);\n\t\t\tvar nextNode = this._getTouchingDomTextNode(node, true);\n\n\t\t\t// If previous dom text node does not exist or it ends by whitespace character, remove space character from the beginning\n\t\t\t// of this text node. Such space character is treated as a whitespace.\n\t\t\tif (!prevNode || /[^\\S\\u00A0]/.test(prevNode.data.charAt(prevNode.data.length - 1))) {\n\t\t\t\tdata = data.replace(/^ /, '');\n\t\t\t}\n\n\t\t\t// If next text node does not exist remove space character from the end of this text node.\n\t\t\tif (!nextNode) {\n\t\t\t\tdata = data.replace(/ $/, '');\n\t\t\t}\n\t\t\t// At this point we should have removed all whitespaces from DOM text data.\n\n\t\t\t// Now we have to change &nbsp; chars, that were in DOM text data because of rendering reasons, to spaces.\n\t\t\t// First, change all ` \\u00A0` pairs (space + &nbsp;) to two spaces. DOM converter changes two spaces from model/view as\n\t\t\t// ` \\u00A0` to ensure proper rendering. Since here we convert back, we recognize those pairs and change them\n\t\t\t// to `  ` which is what we expect to have in model/view.\n\t\t\tdata = data.replace(/ \\u00A0/g, '  ');\n\n\t\t\t// Then, change &nbsp; character that is at the beginning of the text node to space character.\n\t\t\t// As above, that &nbsp; was created for rendering reasons but it's real meaning is just a space character.\n\t\t\t// We do that replacement only if this is the first node or the previous node ends on whitespace character.\n\t\t\tif (!prevNode || /[^\\S\\u00A0]/.test(prevNode.data.charAt(prevNode.data.length - 1))) {\n\t\t\t\tdata = data.replace(/^\\u00A0/, ' ');\n\t\t\t}\n\n\t\t\t// Since input text data could be: `x_ _`, we would not replace the first &nbsp; after `x` character.\n\t\t\t// We have to fix it. Since we already change all ` &nbsp;`, we will have something like this at the end of text data:\n\t\t\t// `x_ _ _` -> `x_    `. Find &nbsp; at the end of string (can be followed only by spaces).\n\t\t\t// We do that replacement only if this is the last node or the next node starts by &nbsp;.\n\t\t\tif (!nextNode || nextNode.data.charAt(0) == '\\xA0') {\n\t\t\t\tdata = data.replace(/\\u00A0( *)$/, ' $1');\n\t\t\t}\n\n\t\t\t// At this point, all whitespaces should be removed and all &nbsp; created for rendering reasons should be\n\t\t\t// changed to normal space. All left &nbsp; are &nbsp; inserted intentionally.\n\t\t\treturn data;\n\t\t}\n\n\t\t/**\n   * Helper function. For given `Text` node, it finds previous or next sibling that is contained in the same block element.\n   * If there is no such sibling, `null` is returned.\n   *\n   * @private\n   * @param {Text} node\n   * @param {Boolean} getNext\n   * @returns {Text|null}\n   */\n\n\t}, {\n\t\tkey: '_getTouchingDomTextNode',\n\t\tvalue: function _getTouchingDomTextNode(node, getNext) {\n\t\t\tif (!node.parentNode) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar direction = getNext ? 'nextNode' : 'previousNode';\n\t\t\tvar document = node.ownerDocument;\n\t\t\tvar treeWalker = document.createTreeWalker(document.childNodes[0], NodeFilter.SHOW_TEXT);\n\n\t\t\ttreeWalker.currentNode = node;\n\n\t\t\tvar touchingNode = treeWalker[direction]();\n\n\t\t\tif (touchingNode !== null) {\n\t\t\t\tvar lca = (0, _getcommonancestor2.default)(node, touchingNode);\n\n\t\t\t\t// If there is common ancestor between the text node and next/prev text node,\n\t\t\t\t// and there are no block elements on a way from the text node to that ancestor,\n\t\t\t\t// and there are no block elements on a way from next/prev text node to that ancestor...\n\t\t\t\tif (lca && !_hasDomParentOfType(node, this.blockElements, lca) && !_hasDomParentOfType(touchingNode, this.blockElements, lca)) {\n\t\t\t\t\t// Then they are in the same container element.\n\t\t\t\t\treturn touchingNode;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\t}]);\n\n\treturn DomConverter;\n}();\n\n// Helper function.\n// Used to check if given native `Element` or `Text` node has parent with tag name from `types` array.\n//\n// @param {Node} node\n// @param {Array.<String>} types\n// @param {Boolean} [boundaryParent] Can be given if parents should be checked up to a given element (excluding that element).\n// @returns {Boolean} `true` if such parent exists or `false` if it does not.\n\n\nexports.default = DomConverter;\nfunction _hasDomParentOfType(node, types, boundaryParent) {\n\tvar parents = (0, _getancestors2.default)(node);\n\n\tif (boundaryParent) {\n\t\tparents = parents.slice(parents.indexOf(boundaryParent) + 1);\n\t}\n\n\treturn parents.some(function (parent) {\n\t\treturn parent.tagName && types.includes(parent.tagName.toLowerCase());\n\t});\n}\n\n// A helper that executes given callback for each DOM node's ancestor, starting from the given node\n// and ending in document#documentElement.\n//\n// @param {Node} node\n// @param {Function} callback A callback to be executed for each ancestor.\nfunction forEachDomNodeAncestor(node, callback) {\n\twhile (node && node != _global2.default.document) {\n\t\tcallback(node);\n\t\tnode = node.parentNode;\n\t}\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/view/domconverter.js\n// module id = 120\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\nn\n/**\n * @module engine/view/observer/domeventdata\n */\n\nvar _extend = require('@ckeditor/ckeditor5-utils/src/lib/lodash/extend');\n\nvar _extend2 = _interopRequireDefault(_extend);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Information about a DOM event in context of the {@link module:engine/view/document~Document}.\n * It wraps the native event, which usually should not be used as the wrapper contains\n * additional data (like key code for keyboard events).\n */\nvar DomEventData = function () {\n\t/**\n  * @param {module:engine/view/document~Document} document The instance of the tree view Document.\n  * @param {Event} domEvent The DOM event.\n  * @param {Object} [additionalData] Additional properties that the instance should contain.\n  */\n\tfunction DomEventData(document, domEvent, additionalData) {\n\t\t_classCallCheck(this, DomEventData);\n\n\t\t/**\n   * The instance of the document.\n   *\n   * @readonly\n   * @member {module:engine/view/document~Document} module:engine/view/observer/observer~Observer.DomEvent#view\n   */\n\t\tthis.document = document;\n\n\t\t/**\n   * The DOM event.\n   *\n   * @readonly\n   * @member {Event} module:engine/view/observer/observer~Observer.DomEvent#domEvent\n   */\n\t\tthis.domEvent = domEvent;\n\n\t\t/**\n   * The DOM target.\n   *\n   * @readonly\n   * @member {HTMLElement} module:engine/view/observer/observer~Observer.DomEvent#target\n   */\n\t\tthis.domTarget = domEvent.target;\n\n\t\t(0, _extend2.default)(this, additionalData);\n\t}\n\n\t/**\n  * The tree view element representing the target.\n  *\n  * @readonly\n  * @type module:engine/view/element~Element\n  */\n\n\n\t_createClass(DomEventData, [{\n\t\tkey: 'preventDefault',\n\n\n\t\t/**\n   * Prevents the native's event default action.\n   */\n\t\tvalue: function preventDefault() {\n\t\t\tthis.domEvent.preventDefault();\n\t\t}\n\n\t\t/**\n   * Stops native event propagation.\n   */\n\n\t}, {\n\t\tkey: 'stopPropagation',\n\t\tvalue: function stopPropagation() {\n\t\t\tthis.domEvent.stopPropagation();\n\t\t}\n\t}, {\n\t\tkey: 'target',\n\t\tget: function get() {\n\t\t\treturn this.document.domConverter.mapDomToView(this.domTarget);\n\t\t}\n\t}]);\n\n\treturn DomEventData;\n}();\n\nexports.default = DomEventData;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/view/observer/domeventdata.js\n// module id = 121\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nexports.injectUiElementHandling = injectUiElementHandling;\n\nvar _element = require('./element');\n\nvar _element2 = _interopRequireDefault(_element);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nvar _node = require('./node');\n\nvar _node2 = _interopRequireDefault(_node);\n\nvar _keyboard = require('@ckeditor/ckeditor5-utils/src/keyboard');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/view/uielement\n */\n\n/**\n * UIElement class. It is used to represent UI not a content of the document.\n * This element can't be split and selection can't be placed inside this element.\n */\nvar UIElement = function (_Element) {\n\t_inherits(UIElement, _Element);\n\n\t/**\n  * Creates new instance of UIElement.\n  *\n  * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-uielement-cannot-add` when third parameter is passed,\n  * to inform that usage of UIElement is incorrect (adding child nodes to UIElement is forbidden).\n  *\n  * @param {String} name Node name.\n  * @param {Object|Iterable} [attributes] Collection of attributes.\n  */\n\tfunction UIElement(name, attributes, children) {\n\t\t_classCallCheck(this, UIElement);\n\n\t\t/**\n   * Returns `null` because filler is not needed for UIElements.\n   *\n   * @method #getFillerOffset\n   * @returns {null} Always returns null.\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (UIElement.__proto__ || Object.getPrototypeOf(UIElement)).call(this, name, attributes, children));\n\n\t\t_this.getFillerOffset = getFillerOffset;\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(UIElement, [{\n\t\tkey: 'is',\n\t\tvalue: function is(type) {\n\t\t\tvar name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\t\t\tif (!name) {\n\t\t\t\treturn type == 'uiElement' || _get(UIElement.prototype.__proto__ || Object.getPrototypeOf(UIElement.prototype), 'is', this).call(this, type);\n\t\t\t} else {\n\t\t\t\treturn type == 'uiElement' && name == this.name || _get(UIElement.prototype.__proto__ || Object.getPrototypeOf(UIElement.prototype), 'is', this).call(this, type, name);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Overrides {@link module:engine/view/element~Element#insertChildren} method.\n   * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-uielement-cannot-add` to prevent adding any child nodes\n   * to UIElement.\n   */\n\n\t}, {\n\t\tkey: 'insertChildren',\n\t\tvalue: function insertChildren(index, nodes) {\n\t\t\tif (nodes && (nodes instanceof _node2.default || Array.from(nodes).length > 0)) {\n\t\t\t\t/**\n     * Cannot add children to {@link module:engine/view/uielement~UIElement}.\n     *\n     * @error view-uielement-cannot-add\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('view-uielement-cannot-add: Cannot add child nodes to UIElement instance.');\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Renders this {@link module:engine/view/uielement~UIElement} to DOM. This method is called by\n   * {@link module:engine/view/domconverter~DomConverter}.\n   *\n   * @param {Document} domDocument\n   * @return {HTMLElement}\n   */\n\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render(domDocument) {\n\t\t\tvar domElement = domDocument.createElement(this.name);\n\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = this.getAttributeKeys()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar key = _step.value;\n\n\t\t\t\t\tdomElement.setAttribute(key, this.getAttribute(key));\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn domElement;\n\t\t}\n\t}]);\n\n\treturn UIElement;\n}(_element2.default);\n\n/**\n * This function injects UI element handling to the given {@link module:engine/view/document~Document document}.\n *\n * A callback is added to {@link module:engine/view/document~Document#event:keydown document keydown event}.\n * The callback handles the situation when right arrow key is pressed and selection is collapsed before a UI element.\n * Without this handler, it would be impossible to \"jump over\" UI element using right arrow key.\n *\n * @param {module:engine/view/document~Document} document Document to which the quirks handling will be injected.\n */\n\n\nexports.default = UIElement;\nfunction injectUiElementHandling(document) {\n\tdocument.on('keydown', function (evt, data) {\n\t\treturn jumpOverUiElement(evt, data, document.domConverter);\n\t});\n}\n\n// Returns `null` because block filler is not needed for UIElements.\n//\n// @returns {null}\nfunction getFillerOffset() {\n\treturn null;\n}\n\n// Selection cannot be placed in a `UIElement`. Whenever it is placed there, it is moved before it. This\n// causes a situation when it is impossible to jump over `UIElement` using right arrow key, because the selection\n// ends up in ui element (in DOM) and is moved back to the left. This handler fixes this situation.\nfunction jumpOverUiElement(evt, data, domConverter) {\n\tif (data.keyCode == _keyboard.keyCodes.arrowright) {\n\t\tvar domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\n\t\tvar domSelectionCollapsed = domSelection.rangeCount == 1 && domSelection.getRangeAt(0).collapsed;\n\n\t\t// Jump over UI element if selection is collapsed or shift key is pressed. These are the cases when selection would extend.\n\t\tif (domSelectionCollapsed || data.shiftKey) {\n\t\t\tvar domParent = domSelection.focusNode;\n\t\t\tvar domOffset = domSelection.focusOffset;\n\n\t\t\tvar viewPosition = domConverter.domPositionToView(domParent, domOffset);\n\n\t\t\t// In case if dom element is not converted to view or is not mapped or something. Happens for example in some tests.\n\t\t\tif (viewPosition === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Skip all following ui elements.\n\t\t\tvar jumpedOverAnyUiElement = false;\n\n\t\t\tvar nextViewPosition = viewPosition.getLastMatchingPosition(function (value) {\n\t\t\t\tif (value.item.is('uiElement')) {\n\t\t\t\t\t// Remember that there was at least one ui element.\n\t\t\t\t\tjumpedOverAnyUiElement = true;\n\t\t\t\t}\n\n\t\t\t\t// Jump over ui elements, jump over empty attribute elements, move up from inside of attribute element.\n\t\t\t\tif (value.item.is('uiElement') || value.item.is('attributeElement')) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\t// Don't jump over text or don't get out of container element.\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\t\t// If anything has been skipped, fix position.\n\t\t\t// This `if` could be possibly omitted but maybe it is better not to mess with DOM selection if not needed.\n\t\t\tif (jumpedOverAnyUiElement) {\n\t\t\t\tvar newDomPosition = domConverter.viewPositionToDom(nextViewPosition);\n\n\t\t\t\tif (domSelectionCollapsed) {\n\t\t\t\t\t// Selection was collapsed, so collapse it at further position.\n\t\t\t\t\tdomSelection.collapse(newDomPosition.parent, newDomPosition.offset);\n\t\t\t\t} else {\n\t\t\t\t\t// Selection was not collapse, so extend it instead of collapsing.\n\t\t\t\t\tdomSelection.extend(newDomPosition.parent, newDomPosition.offset);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/view/uielement.js\n// module id = 122\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * @license Copyright (c) 2003-2016, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\nn\n/**\n * @module ui/focuscycler\n */\n\nvar _global = require('@ckeditor/ckeditor5-utils/src/dom/global');\n\nvar _global2 = _interopRequireDefault(_global);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Helps cycling over focusable views in a {@link module:ui/viewcollection~ViewCollection}\n * when the focus is tracked by {@link module:utils/focustracker~FocusTracker} instance.\n *\n * It requires a collection of focusable views and associated focus tracker:\n *\n *\t\tconst focusables = new ViewCollection();\n *\t\tconst focusTracker = new FocusTracker();\n *\n *\t\t// Add focusables to the focus tracker.\n *\t\tfocusTracker.add( ... );\n *\n * The cycler can be used manually:\n *\n *\t\tconst cycler = new FocusCycler( { focusables, focusTracker } );\n *\n *\t\t// Will focus the first forusable view in #focusables.\n *\t\tcycler.focusFirst();\n *\n *\t\t// Will log next focusable item in #focusables.\n *\t\tconsole.log( cycler.next );\n *\n * or it can be used as an automated, keystroke–detecting utility:\n *\n *\t\tconst keystrokeHandler = new KeystrokeHandler();\n *\n *\t\t// Activate the keystroke handler.\n *\t\tkeystrokeHandler.listenTo( sourceOfEvents );\n *\n *\t\tconst cycler = new FocusCycler( {\n *\t\t\tfocusables, focusTracker, keystrokeHandler,\n *\t\t\tactions: {\n *\t\t\t\t// When arrowup of arrowleft is detected by the #keystrokeHandler\n *\t\t\t\t// focusPrevious() will be called by the cycler.\n *\t\t\t\tfocusPrevious: [ 'arrowup', 'arrowleft' ],\n *\t\t\t}\n *\t\t} );\n */\nvar FocusCycler = function () {\n\t/**\n  * Creates an instance of the focus cycler utility.\n  *\n  * @param {Object} options Configuration options.\n  * @param {module:utils/collection~Collection|Object} options.focusables\n  * @param {module:utils/focustracker~FocusTracker} options.focusTracker\n  * @param {module:utils/keystrokehandler~KeystrokeHandler} [options.keystrokeHandler]\n  * @param {Object} [options.actions]\n  */\n\tfunction FocusCycler(options) {\n\t\tvar _this = this;\n\n\t\t_classCallCheck(this, FocusCycler);\n\n\t\tObject.assign(this, options);\n\n\t\t/**\n   * A view collection the cycler operates on.\n   *\n   * @readonly\n   * @member {module:utils/collection~Collection} #focusables\n   */\n\n\t\t/**\n   * A focus tracker instance that cycler uses to determine focus\n   * state in {@link #focusables}.\n   *\n   * @readonly\n   * @member {module:utils/focustracker~FocusTracker} #focusTracker\n   */\n\n\t\t/**\n   * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n   *\n   * @readonly\n   * @member {module:utils/keystrokehandler~KeystrokeHandler} #keystrokeHandler\n   */\n\n\t\t/**\n   * Actions that the cycler can take when a keystroke is pressed. Requires\n   * `options.keystrokeHandler` to be passed and working. When an action is\n   * performed, the event the keystroke fired is will be `preventDefault` and\n   * `stopPropagation` in DOM.\n   *\n   *\t\tactions: {\n   *\t\t\t// Will call #focusPrevious() when arrowleft or arrowup is pressed.\n   *\t\t\tfocusPrevious: [ 'arrowleft', 'arrowup' ],\n   *\n   *\t\t\t// Will call #focusNext() when arrowdown is pressed.\n   *\t\t\tfocusNext: 'arrowdown'\n   *\t\t}\n   *\n   * @readonly\n   * @member {Object} #actions\n   */\n\n\t\tif (options.actions && options.keystrokeHandler) {\n\t\t\tvar _loop = function _loop(methodName) {\n\t\t\t\tvar actions = options.actions[methodName];\n\n\t\t\t\tif (typeof actions == 'string') {\n\t\t\t\t\tactions = [actions];\n\t\t\t\t}\n\n\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\tvar _didIteratorError = false;\n\t\t\t\tvar _iteratorError = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator = actions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\tvar keystroke = _step.value;\n\n\t\t\t\t\t\toptions.keystrokeHandler.set(keystroke, function (data, cancel) {\n\t\t\t\t\t\t\t_this[methodName]();\n\t\t\t\t\t\t\tcancel();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t_iteratorError = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfor (var methodName in options.actions) {\n\t\t\t\t_loop(methodName);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n  * Returns the first focusable view in {@link #focusables}.\n  * `null` if there's none.\n  *\n  * @readonly\n  * @member {module:ui/view~View|null} #first\n  */\n\n\n\t_createClass(FocusCycler, [{\n\t\tkey: 'focusFirst',\n\n\n\t\t/**\n   * Focuses the {@link #first} item.\n   */\n\t\tvalue: function focusFirst() {\n\t\t\tthis._focus(this.first);\n\t\t}\n\n\t\t/**\n   * Focuses the {@link #last} item.\n   */\n\n\t}, {\n\t\tkey: 'focusLast',\n\t\tvalue: function focusLast() {\n\t\t\tthis._focus(this.last);\n\t\t}\n\n\t\t/**\n   * Focuses the {@link #next} item.\n   */\n\n\t}, {\n\t\tkey: 'focusNext',\n\t\tvalue: function focusNext() {\n\t\t\tthis._focus(this.next);\n\t\t}\n\n\t\t/**\n   * Focuses the {@link #previous} item.\n   */\n\n\t}, {\n\t\tkey: 'focusPrevious',\n\t\tvalue: function focusPrevious() {\n\t\t\tthis._focus(this.previous);\n\t\t}\n\n\t\t/**\n   * Focuses the given view, if exists.\n   *\n   * @protected\n   * @param {module:ui/view~View} view\n   */\n\n\t}, {\n\t\tkey: '_focus',\n\t\tvalue: function _focus(view) {\n\t\t\tif (view) {\n\t\t\t\tview.focus();\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Returns the next/previous focusable view in {@link #focusables} with respect\n   * to {@link #current}.\n   *\n   * @protected\n   * @param {Number} step Either `1` for checking forward of {@link #current} or\n   * `-1` for checking backwards.\n   * @returns {module:ui/view~View|null}\n   */\n\n\t}, {\n\t\tkey: '_getFocusableItem',\n\t\tvalue: function _getFocusableItem(step) {\n\t\t\t// Cache for speed.\n\t\t\tvar current = this.current;\n\t\t\tvar collectionLength = this.focusables.length;\n\n\t\t\tif (!collectionLength) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Start from the beginning if no view is focused.\n\t\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/206\n\t\t\tif (current === null) {\n\t\t\t\treturn this[step === 1 ? 'first' : 'last'];\n\t\t\t}\n\n\t\t\t// Cycle in both directions.\n\t\t\tvar index = (current + collectionLength + step) % collectionLength;\n\n\t\t\tdo {\n\t\t\t\tvar view = this.focusables.get(index);\n\n\t\t\t\t// TODO: Check if view is visible.\n\t\t\t\tif (isFocusable(view)) {\n\t\t\t\t\treturn view;\n\t\t\t\t}\n\n\t\t\t\t// Cycle in both directions.\n\t\t\t\tindex = (index + collectionLength + step) % collectionLength;\n\t\t\t} while (index !== current);\n\n\t\t\treturn null;\n\t\t}\n\t}, {\n\t\tkey: 'first',\n\t\tget: function get() {\n\t\t\treturn this.focusables.find(isFocusable) || null;\n\t\t}\n\n\t\t/**\n   * Returns the last focusable view in {@link #focusables}.\n   * `null` if there's none.\n   *\n   * @readonly\n   * @member {module:ui/view~View|null} #last\n   */\n\n\t}, {\n\t\tkey: 'last',\n\t\tget: function get() {\n\t\t\treturn this.focusables.filter(isFocusable).slice(-1)[0] || null;\n\t\t}\n\n\t\t/**\n   * Returns the next focusable view in {@link #focusables} based on {@link #current}.\n   * `null` if there's none.\n   *\n   * @readonly\n   * @member {module:ui/view~View|null} #next\n   */\n\n\t}, {\n\t\tkey: 'next',\n\t\tget: function get() {\n\t\t\treturn this._getFocusableItem(1);\n\t\t}\n\n\t\t/**\n   * Returns the previous focusable view in {@link #focusables} based on {@link #current}.\n   * `null` if there's none.\n   *\n   * @readonly\n   * @member {module:ui/view~View|null} #previous\n   */\n\n\t}, {\n\t\tkey: 'previous',\n\t\tget: function get() {\n\t\t\treturn this._getFocusableItem(-1);\n\t\t}\n\n\t\t/**\n   * An index of the view in the {@link #focusables} which is focused according\n   * to {@link #focusTracker}. `null` when there's no such view.\n   *\n   * @readonly\n   * @member {Number|null} #current\n   */\n\n\t}, {\n\t\tkey: 'current',\n\t\tget: function get() {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar index = null;\n\n\t\t\t// There's no focused view in the focusables.\n\t\t\tif (this.focusTracker.focusedElement === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tthis.focusables.find(function (view, viewIndex) {\n\t\t\t\tvar focused = view.element === _this2.focusTracker.focusedElement;\n\n\t\t\t\tif (focused) {\n\t\t\t\t\tindex = viewIndex;\n\t\t\t\t}\n\n\t\t\t\treturn focused;\n\t\t\t});\n\n\t\t\treturn index;\n\t\t}\n\t}]);\n\n\treturn FocusCycler;\n}();\n\n// Checks whether an view is focusable.\n//\n// @private\n// @param {module:ui/view~View} view A view to be checked.\n// @returns {Boolean}\n\n\nexports.default = FocusCycler;\nfunction isFocusable(view) {\n\treturn !!(view.focus && _global2.default.window.getComputedStyle(view.element).display != 'none');\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-ui/src/focuscycler.js\n// module id = 123\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _plugin = require('@ckeditor/ckeditor5-core/src/plugin');\n\nvar _plugin2 = _interopRequireDefault(_plugin);\n\nvar _balloonpanelview = require('./balloonpanelview');\n\nvar _balloonpanelview2 = _interopRequireDefault(_balloonpanelview);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module ui/panel/balloon/contextualballoon\n */\n\n/**\n * Provides the common contextual balloon panel for the editor.\n *\n * This plugin allows reusing a single {module:ui/panel/balloon/balloonpanelview~BalloonPanelView} instance\n * to display multiple contextual balloon panels in the editor.\n *\n * Child views of such a panel are stored in the stack and the last one in the stack is visible. When the\n * visible view is removed from the stack, the previous view becomes visible, etc. If there are no more\n * views in the stack, the balloon panel will hide.\n *\n * It simplifies managing the views and helps\n * avoid the unnecessary complexity of handling multiple {module:ui/panel/balloon/balloonpanelview~BalloonPanelView}\n * instances in the editor.\n *\n * @extends module:core/plugin~Plugin\n */\nvar ContextualBalloon = function (_Plugin) {\n\t_inherits(ContextualBalloon, _Plugin);\n\n\tfunction ContextualBalloon() {\n\t\t_classCallCheck(this, ContextualBalloon);\n\n\t\treturn _possibleConstructorReturn(this, (ContextualBalloon.__proto__ || Object.getPrototypeOf(ContextualBalloon)).apply(this, arguments));\n\t}\n\n\t_createClass(ContextualBalloon, [{\n\t\tkey: 'init',\n\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tvalue: function init() {\n\t\t\t/**\n    * The common balloon panel view.\n    *\n    * @readonly\n    * @member {module:ui/panel/balloon/balloonpanelview~BalloonPanelView} #view\n    */\n\t\t\tthis.view = new _balloonpanelview2.default();\n\n\t\t\t/**\n    * Stack of the views injected into the balloon. Last one in the stack is displayed\n    * as a content of {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon#view}.\n    *\n    * @private\n    * @member {Map} #_stack\n    */\n\t\t\tthis._stack = new Map();\n\n\t\t\t// Editor should be focused when contextual balloon is focused.\n\t\t\tthis.editor.ui.focusTracker.add(this.view.element);\n\n\t\t\t// Add balloon panel view to editor `body` collection and wait until view will be ready.\n\t\t\tthis.editor.ui.view.body.add(this.view);\n\t\t}\n\n\t\t/**\n   * Returns the currently visible view or `null` when there are no\n   * views in the stack.\n   *\n   * @returns {module:ui/view~View|null}\n   */\n\n\t}, {\n\t\tkey: 'hasView',\n\n\n\t\t/**\n   * Returns `true` when the given view is in the stack. Otherwise returns `false`.\n   *\n   * @param {module:ui/view~View} view\n   * @returns {Boolean}\n   */\n\t\tvalue: function hasView(view) {\n\t\t\treturn this._stack.has(view);\n\t\t}\n\n\t\t/**\n   * Adds a new view to the stack and makes it visible.\n   *\n   * @param {Object} data Configuration of the view.\n   * @param {module:ui/view~View} [data.view] Content of the balloon.\n   * @param {module:utils/dom/position~Options} [data.position] Positioning options.\n   * @param {String} [data.balloonClassName] Additional css class for {@link #view} added when given view is visible.\n   */\n\n\t}, {\n\t\tkey: 'add',\n\t\tvalue: function add(data) {\n\t\t\tif (this.hasView(data.view)) {\n\t\t\t\t/**\n     * Trying to add configuration of the same view more than once.\n     *\n     * @error contextualballoon-add-view-exist\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('contextualballoon-add-view-exist: Cannot add configuration of the same view twice.');\n\t\t\t}\n\n\t\t\t// When adding view to the not empty balloon.\n\t\t\tif (this.visibleView) {\n\t\t\t\t// Remove displayed content from the view.\n\t\t\t\tthis.view.content.remove(this.visibleView);\n\t\t\t}\n\n\t\t\t// Add new view to the stack.\n\t\t\tthis._stack.set(data.view, data);\n\n\t\t\t// And display it.\n\t\t\tthis._show(data);\n\t\t}\n\n\t\t/**\n   * Removes the given view from the stack. If the removed view was visible,\n   * then the view preceding it in the stack will become visible instead.\n   * When there is no view in the stack then balloon will hide.\n   *\n   * @param {module:ui/view~View} view A view to be removed from the balloon.\n   */\n\n\t}, {\n\t\tkey: 'remove',\n\t\tvalue: function remove(view) {\n\t\t\tif (!this.hasView(view)) {\n\t\t\t\t/**\n     * Trying to remove configuration of the view not defined in the stack.\n     *\n     * @error contextualballoon-remove-view-not-exist\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('contextualballoon-remove-view-not-exist: Cannot remove configuration of not existing view.');\n\t\t\t}\n\n\t\t\t// When visible view is being removed.\n\t\t\tif (this.visibleView === view) {\n\t\t\t\t// We need to remove it from the view content.\n\t\t\t\tthis.view.content.remove(view);\n\n\t\t\t\t// And then remove from the stack.\n\t\t\t\tthis._stack.delete(view);\n\n\t\t\t\t// Next we need to check if there is other view in stack to show.\n\t\t\t\tvar last = Array.from(this._stack.values()).pop();\n\n\t\t\t\t// If it is some other view.\n\t\t\t\tif (last) {\n\t\t\t\t\t// Just show it.\n\t\t\t\t\tthis._show(last);\n\t\t\t\t} else {\n\t\t\t\t\t// Hide the balloon panel.\n\t\t\t\t\tthis.view.hide();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Just remove given view from the stack.\n\t\t\t\tthis._stack.delete(view);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Updates the position of the balloon using position data of the first visible view in the stack.\n   * When new position data is given then position data of currently visible panel will be updated.\n   *\n   * @param {module:utils/dom/position~Options} [position] position options.\n   */\n\n\t}, {\n\t\tkey: 'updatePosition',\n\t\tvalue: function updatePosition(position) {\n\t\t\tif (position) {\n\t\t\t\tthis._stack.get(this.visibleView).position = position;\n\t\t\t}\n\n\t\t\tthis.view.attachTo(this._getBalloonPosition());\n\t\t}\n\n\t\t/**\n   * Sets the view as a content of the balloon and attaches balloon using position\n   * options of the first view.\n   *\n   * @private\n   * @param {Object} data Configuration.\n   * @param {module:ui/view~View} [data.view] View to show in the balloon.\n   * @param {String} [data.balloonClassName=''] Additional class name which will added to the {#_balloon} view.\n   */\n\n\t}, {\n\t\tkey: '_show',\n\t\tvalue: function _show(_ref) {\n\t\t\tvar view = _ref.view,\n\t\t\t    _ref$balloonClassName = _ref.balloonClassName,\n\t\t\t    balloonClassName = _ref$balloonClassName === undefined ? '' : _ref$balloonClassName;\n\n\t\t\tthis.view.className = balloonClassName;\n\n\t\t\tthis.view.content.add(view);\n\t\t\tthis.view.pin(this._getBalloonPosition());\n\t\t}\n\n\t\t/**\n   * Returns position options of the first view in the stack.\n   * This keeps the balloon in the same position when view is changed.\n   *\n   * @private\n   * @returns {module:utils/dom/position~Options}\n   */\n\n\t}, {\n\t\tkey: '_getBalloonPosition',\n\t\tvalue: function _getBalloonPosition() {\n\t\t\treturn this._stack.values().next().value.position;\n\t\t}\n\t}, {\n\t\tkey: 'visibleView',\n\t\tget: function get() {\n\t\t\tvar item = this._stack.get(this.view.content.get(0));\n\n\t\t\treturn item ? item.view : null;\n\t\t}\n\t}], [{\n\t\tkey: 'pluginName',\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tget: function get() {\n\t\t\treturn 'ContextualBalloon';\n\t\t}\n\t}]);\n\n\treturn ContextualBalloon;\n}(_plugin2.default);\n\nexports.default = ContextualBalloon;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-ui/src/panel/balloon/contextualballoon.js\n// module id = 124\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nvar _observablemixin = require('@ckeditor/ckeditor5-utils/src/observablemixin');\n\nvar _observablemixin2 = _interopRequireDefault(_observablemixin);\n\nvar _collection = require('@ckeditor/ckeditor5-utils/src/collection');\n\nvar _collection2 = _interopRequireDefault(_collection);\n\nvar _mix = require('@ckeditor/ckeditor5-utils/src/mix');\n\nvar _mix2 = _interopRequireDefault(_mix);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module ui/viewcollection\n */\n\n/**\n * Collects {@link module:ui/view~View} instances.\n *\n * @extends module:utils/collection~Collection\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nvar ViewCollection = function (_Collection) {\n\t_inherits(ViewCollection, _Collection);\n\n\t/**\n  * Creates a new {@link module:ui/viewcollection~ViewCollection} instance.\n  *\n  * @param {module:utils/locale~Locale} [locale] The {@link module:core/editor~Editor editor's locale} instance.\n  */\n\tfunction ViewCollection(locale) {\n\t\t_classCallCheck(this, ViewCollection);\n\n\t\t// Handle {@link module:ui/view~View#element} in DOM when a new view is added to the collection.\n\t\tvar _this = _possibleConstructorReturn(this, (ViewCollection.__proto__ || Object.getPrototypeOf(ViewCollection)).call(this, {\n\t\t\t// An #id Number attribute should be legal and not break the `ViewCollection` instance.\n\t\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/93\n\t\t\tidProperty: 'viewUid'\n\t\t}));\n\n\t\t_this.on('add', function (evt, view, index) {\n\t\t\tif (view.element && _this._parentElement) {\n\t\t\t\t_this._parentElement.insertBefore(view.element, _this._parentElement.children[index]);\n\t\t\t}\n\t\t});\n\n\t\t// Handle {@link module:ui/view~View#element} in DOM when a view is removed from the collection.\n\t\t_this.on('remove', function (evt, view) {\n\t\t\tif (view.element && _this._parentElement) {\n\t\t\t\tview.element.remove();\n\t\t\t}\n\t\t});\n\n\t\t/**\n   * The {@link module:core/editor/editor~Editor editor's locale} instance.\n   *\n   * @member {module:utils/locale~Locale}\n   */\n\t\t_this.locale = locale;\n\n\t\t/**\n   * Set to `true` once the parent's {@link module:ui/view~View#ready} is true, which means\n   * that all the views in the collection are also ready (which can be asynchronous).\n   *\n   * @readonly\n   * @observable\n   * @member {Boolean} #ready\n   */\n\t\t_this.set('ready', false);\n\n\t\t/**\n   * A parent element within which child views are rendered and managed in DOM.\n   *\n   * @protected\n   * @member {HTMLElement}\n   */\n\t\t_this._parentElement = null;\n\t\treturn _this;\n\t}\n\n\t/**\n  * Initializes child views by injecting {@link module:ui/view~View#element} into DOM\n  * and calling {@link module:ui/view~View#init}.\n  */\n\n\n\t_createClass(ViewCollection, [{\n\t\tkey: 'init',\n\t\tvalue: function init() {\n\t\t\tif (this.ready) {\n\t\t\t\t/**\n     * This ViewCollection has already been initialized.\n     *\n     * @error ui-viewcollection-init-reinit\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('ui-viewcollection-init-reinit: This ViewCollection has already been initialized.');\n\t\t\t}\n\n\t\t\tthis.map(function (v) {\n\t\t\t\treturn v.init();\n\t\t\t});\n\n\t\t\tthis.ready = true;\n\t\t}\n\n\t\t/**\n   * Destroys the view collection along with child views.\n   */\n\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {\n\t\t\tthis.map(function (v) {\n\t\t\t\treturn v.destroy();\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * Adds a child view to the collection. If {@link module:ui/viewcollection~ViewCollection#ready}, the child view\n   * is also initialized when added.\n   *\n   * @param {module:ui/view~View} view A child view.\n   * @param {Number} [index] Index at which the child will be added to the collection.\n   */\n\n\t}, {\n\t\tkey: 'add',\n\t\tvalue: function add(view, index) {\n\t\t\t_get(ViewCollection.prototype.__proto__ || Object.getPrototypeOf(ViewCollection.prototype), 'add', this).call(this, view, index);\n\n\t\t\tif (this.ready && !view.ready) {\n\t\t\t\tview.init();\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Sets {@link #_parentElement} of this collection.\n   *\n   * @param {HTMLElement} element A new parent.\n   */\n\n\t}, {\n\t\tkey: 'setParent',\n\t\tvalue: function setParent(elementOrDocFragment) {\n\t\t\tthis._parentElement = elementOrDocFragment;\n\t\t}\n\n\t\t/**\n   * Delegates selected events coming from within the collection to desired {@link module:utils/emittermixin~EmitterMixin}.\n   *\n   * For instance:\n   *\n   *\t\tconst viewA = new View();\n   *\t\tconst viewB = new View();\n   *\t\tconst viewC = new View();\n   *\n   *\t\tconst views = parentView.createCollection();\n   *\n   *\t\tviews.delegate( 'eventX' ).to( viewB );\n   *\t\tviews.delegate( 'eventX', 'eventY' ).to( viewC );\n   *\n   *\t\tviews.add( viewA );\n   *\n   * then `eventX` is delegated (fired by) `viewB` and `viewC` along with `customData`:\n   *\n   *\t\tviewA.fire( 'eventX', customData );\n   *\n   * and `eventY` is delegated (fired by) `viewC` along with `customData`:\n   *\n   *\t\tviewA.fire( 'eventY', customData );\n   *\n   * See {@link module:utils/emittermixin~EmitterMixin#delegate}.\n   *\n   * @param {...String} events {@link module:ui/view~View} event names to be delegated to another\n   * {@link module:utils/emittermixin~EmitterMixin}.\n   * @returns {module:ui/viewcollection~ViewCollection#delegate.to}\n   */\n\n\t}, {\n\t\tkey: 'delegate',\n\t\tvalue: function delegate() {\n\t\t\tvar _this2 = this;\n\n\t\t\tfor (var _len = arguments.length, events = Array(_len), _key = 0; _key < _len; _key++) {\n\t\t\t\tevents[_key] = arguments[_key];\n\t\t\t}\n\n\t\t\tif (!events.length || !isStringArray(events)) {\n\t\t\t\t/**\n     * All event names must be strings.\n     *\n     * @error ui-viewcollection-delegate-wrong-events\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('ui-viewcollection-delegate-wrong-events: All event names must be strings.');\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t/**\n     * Selects destination for {@link module:utils/emittermixin~EmitterMixin#delegate} events.\n     *\n     * @memberOf module:ui/viewcollection~ViewCollection#delegate\n     * @function module:ui/viewcollection~ViewCollection#delegate.to\n     * @param {module:utils/emittermixin~EmitterMixin} dest An `EmitterMixin` instance which is\n     * the destination for delegated events.\n     */\n\t\t\t\tto: function to(dest) {\n\t\t\t\t\t// Activate delegating on existing views in this collection.\n\t\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\t\tvar _didIteratorError = false;\n\t\t\t\t\tvar _iteratorError = undefined;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (var _iterator = _this2[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\t\tvar view = _step.value;\n\t\t\t\t\t\t\tvar _iteratorNormalCompletion4 = true;\n\t\t\t\t\t\t\tvar _didIteratorError4 = false;\n\t\t\t\t\t\t\tvar _iteratorError4 = undefined;\n\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tfor (var _iterator4 = events[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\t\t\t\t\t\t\tvar evtName = _step4.value;\n\n\t\t\t\t\t\t\t\t\tview.delegate(evtName).to(dest);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t_didIteratorError4 = true;\n\t\t\t\t\t\t\t\t_iteratorError4 = err;\n\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t\t\t\t\t\t\t_iterator4.return();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\t\tif (_didIteratorError4) {\n\t\t\t\t\t\t\t\t\t\tthrow _iteratorError4;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Activate delegating on future views in this collection.\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t\t_iteratorError = err;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t_this2.on('add', function (evt, view) {\n\t\t\t\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\t\t\t\tvar _didIteratorError2 = false;\n\t\t\t\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tfor (var _iterator2 = events[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\t\t\t\tvar evtName = _step2.value;\n\n\t\t\t\t\t\t\t\tview.delegate(evtName).to(dest);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t\t\t\t_iteratorError2 = err;\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t// Deactivate delegating when view is removed from this collection.\n\t\t\t\t\t_this2.on('remove', function (evt, view) {\n\t\t\t\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\t\t\t\tvar _didIteratorError3 = false;\n\t\t\t\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tfor (var _iterator3 = events[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\t\t\t\tvar evtName = _step3.value;\n\n\t\t\t\t\t\t\t\tview.stopDelegating(evtName, dest);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t\t\t\t_iteratorError3 = err;\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}]);\n\n\treturn ViewCollection;\n}(_collection2.default);\n\nexports.default = ViewCollection;\n\n\n(0, _mix2.default)(_collection2.default, _observablemixin2.default);\n\n// Check if all entries of the array are of `String` type.\n//\n// @private\n// @param {Array} arr An array to be checked.\n// @returns {Boolean}\nfunction isStringArray(arr) {\n\treturn arr.every(function (a) {\n\t\treturn typeof a == 'string';\n\t});\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-ui/src/viewcollection.js\n// module id = 125\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = count;\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/count\n */\n\n/**\n * Returns the number of items return by the iterator.\n *\n *\t\tcount( [ 1, 2, 3, 4, 5 ] ); // 5;\n *\n * @param {Iterable.<*>} iterator Any iterator.\n * @returns {Number} Number of items returned by that iterator.\n */\nfunction count(iterator) {\n  var count = 0;\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = iterator[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var _ = _step.value;\n      // eslint-disable-line no-unused-vars\n      count++;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return count;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/count.js\n// module id = 126\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mapCacheClear = require('./_mapCacheClear');\n\nvar _mapCacheClear2 = _interopRequireDefault(_mapCacheClear);\n\nvar _mapCacheDelete = require('./_mapCacheDelete');\n\nvar _mapCacheDelete2 = _interopRequireDefault(_mapCacheDelete);\n\nvar _mapCacheGet = require('./_mapCacheGet');\n\nvar _mapCacheGet2 = _interopRequireDefault(_mapCacheGet);\n\nvar _mapCacheHas = require('./_mapCacheHas');\n\nvar _mapCacheHas2 = _interopRequireDefault(_mapCacheHas);\n\nvar _mapCacheSet = require('./_mapCacheSet');\n\nvar _mapCacheSet2 = _interopRequireDefault(_mapCacheSet);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = _mapCacheClear2.default;\nMapCache.prototype['delete'] = _mapCacheDelete2.default;\nMapCache.prototype.get = _mapCacheGet2.default;\nMapCache.prototype.has = _mapCacheHas2.default;\nMapCache.prototype.set = _mapCacheSet2.default;\n\nexports.default = MapCache;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_MapCache.js\n// module id = 127\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ListCache = require('./_ListCache');\n\nvar _ListCache2 = _interopRequireDefault(_ListCache);\n\nvar _stackClear = require('./_stackClear');\n\nvar _stackClear2 = _interopRequireDefault(_stackClear);\n\nvar _stackDelete = require('./_stackDelete');\n\nvar _stackDelete2 = _interopRequireDefault(_stackDelete);\n\nvar _stackGet = require('./_stackGet');\n\nvar _stackGet2 = _interopRequireDefault(_stackGet);\n\nvar _stackHas = require('./_stackHas');\n\nvar _stackHas2 = _interopRequireDefault(_stackHas);\n\nvar _stackSet = require('./_stackSet');\n\nvar _stackSet2 = _interopRequireDefault(_stackSet);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new _ListCache2.default(entries);\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = _stackClear2.default;\nStack.prototype['delete'] = _stackDelete2.default;\nStack.prototype.get = _stackGet2.default;\nStack.prototype.has = _stackHas2.default;\nStack.prototype.set = _stackSet2.default;\n\nexports.default = Stack;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_Stack.js\n// module id = 128\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _root = require('./_root');\n\nvar _root2 = _interopRequireDefault(_root);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Built-in value references. */\nvar _Symbol = _root2.default.Symbol;\n\nexports.default = _Symbol;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_Symbol.js\n// module id = 129\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseIndexOf = require('./_baseIndexOf');\n\nvar _baseIndexOf2 = _interopRequireDefault(_baseIndexOf);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  return !!array.length && (0, _baseIndexOf2.default)(array, value, 0) > -1;\n}\n\nexports.default = arrayIncludes;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_arrayIncludes.js\n// module id = 130\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexports.default = arrayIncludesWith;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_arrayIncludesWith.js\n// module id = 131\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _castPath = require('./_castPath');\n\nvar _castPath2 = _interopRequireDefault(_castPath);\n\nvar _isKey = require('./_isKey');\n\nvar _isKey2 = _interopRequireDefault(_isKey);\n\nvar _toKey = require('./_toKey');\n\nvar _toKey2 = _interopRequireDefault(_toKey);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = (0, _isKey2.default)(path, object) ? [path] : (0, _castPath2.default)(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[(0, _toKey2.default)(path[index++])];\n  }\n  return index && index == length ? object : undefined;\n}\n\nexports.default = baseGet;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseGet.js\n// module id = 132\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _indexOfNaN = require('./_indexOfNaN');\n\nvar _indexOfNaN2 = _interopRequireDefault(_indexOfNaN);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  if (value !== value) {\n    return (0, _indexOfNaN2.default)(array, fromIndex);\n  }\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexports.default = baseIndexOf;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseIndexOf.js\n// module id = 133\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _SetCache = require('./_SetCache');\n\nvar _SetCache2 = _interopRequireDefault(_SetCache);\n\nvar _arrayIncludes = require('./_arrayIncludes');\n\nvar _arrayIncludes2 = _interopRequireDefault(_arrayIncludes);\n\nvar _arrayIncludesWith = require('./_arrayIncludesWith');\n\nvar _arrayIncludesWith2 = _interopRequireDefault(_arrayIncludesWith);\n\nvar _arrayMap = require('./_arrayMap');\n\nvar _arrayMap2 = _interopRequireDefault(_arrayMap);\n\nvar _baseUnary = require('./_baseUnary');\n\nvar _baseUnary2 = _interopRequireDefault(_baseUnary);\n\nvar _cacheHas = require('./_cacheHas');\n\nvar _cacheHas2 = _interopRequireDefault(_cacheHas);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * The base implementation of methods like `_.intersection`, without support\n * for iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of shared values.\n */\nfunction baseIntersection(arrays, iteratee, comparator) {\n  var includes = comparator ? _arrayIncludesWith2.default : _arrayIncludes2.default,\n      length = arrays[0].length,\n      othLength = arrays.length,\n      othIndex = othLength,\n      caches = Array(othLength),\n      maxLength = Infinity,\n      result = [];\n\n  while (othIndex--) {\n    var array = arrays[othIndex];\n    if (othIndex && iteratee) {\n      array = (0, _arrayMap2.default)(array, (0, _baseUnary2.default)(iteratee));\n    }\n    maxLength = nativeMin(array.length, maxLength);\n    caches[othIndex] = !comparator && (iteratee || length >= 120 && array.length >= 120) ? new _SetCache2.default(othIndex && array) : undefined;\n  }\n  array = arrays[0];\n\n  var index = -1,\n      seen = caches[0];\n\n  outer: while (++index < length && result.length < maxLength) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = comparator || value !== 0 ? value : 0;\n    if (!(seen ? (0, _cacheHas2.default)(seen, computed) : includes(result, computed, comparator))) {\n      othIndex = othLength;\n      while (--othIndex) {\n        var cache = caches[othIndex];\n        if (!(cache ? (0, _cacheHas2.default)(cache, computed) : includes(arrays[othIndex], computed, comparator))) {\n          continue outer;\n        }\n      }\n      if (seen) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexports.default = baseIntersection;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseIntersection.js\n// module id = 134\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nexports.default = baseProperty;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseProperty.js\n// module id = 135\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _arrayMap = require('./_arrayMap');\n\nvar _arrayMap2 = _interopRequireDefault(_arrayMap);\n\nvar _baseIndexOf = require('./_baseIndexOf');\n\nvar _baseIndexOf2 = _interopRequireDefault(_baseIndexOf);\n\nvar _baseIndexOfWith = require('./_baseIndexOfWith');\n\nvar _baseIndexOfWith2 = _interopRequireDefault(_baseIndexOfWith);\n\nvar _baseUnary = require('./_baseUnary');\n\nvar _baseUnary2 = _interopRequireDefault(_baseUnary);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * The base implementation of `_.pullAllBy` without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns `array`.\n */\nfunction basePullAll(array, values, iteratee, comparator) {\n  var indexOf = comparator ? _baseIndexOfWith2.default : _baseIndexOf2.default,\n      index = -1,\n      length = values.length,\n      seen = array;\n\n  if (iteratee) {\n    seen = (0, _arrayMap2.default)(array, (0, _baseUnary2.default)(iteratee));\n  }\n  while (++index < length) {\n    var fromIndex = 0,\n        value = values[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n      if (seen !== array) {\n        splice.call(seen, fromIndex, 1);\n      }\n      splice.call(array, fromIndex, 1);\n    }\n  }\n  return array;\n}\n\nexports.default = basePullAll;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_basePullAll.js\n// module id = 136\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isSymbol = require('./isSymbol');\n\nvar _isSymbol2 = _interopRequireDefault(_isSymbol);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295,\n    MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeMin = Math.min;\n\n/**\n * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n * which invokes `iteratee` for `value` and each element of `array` to compute\n * their sort ranking. The iteratee is invoked with one argument; (value).\n *\n * @private\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @param {Function} iteratee The iteratee invoked per element.\n * @param {boolean} [retHighest] Specify returning the highest qualified index.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n */\nfunction baseSortedIndexBy(array, value, iteratee, retHighest) {\n  value = iteratee(value);\n\n  var low = 0,\n      high = array ? array.length : 0,\n      valIsNaN = value !== value,\n      valIsNull = value === null,\n      valIsSymbol = (0, _isSymbol2.default)(value),\n      valIsUndefined = value === undefined;\n\n  while (low < high) {\n    var mid = nativeFloor((low + high) / 2),\n        computed = iteratee(array[mid]),\n        othIsDefined = computed !== undefined,\n        othIsNull = computed === null,\n        othIsReflexive = computed === computed,\n        othIsSymbol = (0, _isSymbol2.default)(computed);\n\n    if (valIsNaN) {\n      var setLow = retHighest || othIsReflexive;\n    } else if (valIsUndefined) {\n      setLow = othIsReflexive && (retHighest || othIsDefined);\n    } else if (valIsNull) {\n      setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n    } else if (valIsSymbol) {\n      setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n    } else if (othIsNull || othIsSymbol) {\n      setLow = false;\n    } else {\n      setLow = retHighest ? computed <= value : computed < value;\n    }\n    if (setLow) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return nativeMin(high, MAX_ARRAY_INDEX);\n}\n\nexports.default = baseSortedIndexBy;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseSortedIndexBy.js\n// module id = 137\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * The base implementation of `_.unary` without support for storing wrapper metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nexports.default = baseUnary;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseUnary.js\n// module id = 138\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _arrayPush = require('./_arrayPush');\n\nvar _arrayPush2 = _interopRequireDefault(_arrayPush);\n\nvar _baseDifference = require('./_baseDifference');\n\nvar _baseDifference2 = _interopRequireDefault(_baseDifference);\n\nvar _baseUniq = require('./_baseUniq');\n\nvar _baseUniq2 = _interopRequireDefault(_baseUniq);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The base implementation of methods like `_.xor`, without support for\n * iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of values.\n */\nfunction baseXor(arrays, iteratee, comparator) {\n  var index = -1,\n      length = arrays.length;\n\n  while (++index < length) {\n    var result = result ? (0, _arrayPush2.default)((0, _baseDifference2.default)(result, arrays[index], iteratee, comparator), (0, _baseDifference2.default)(arrays[index], result, iteratee, comparator)) : arrays[index];\n  }\n  return result && result.length ? (0, _baseUniq2.default)(result, iteratee, comparator) : [];\n}\n\nexports.default = baseXor;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseXor.js\n// module id = 139\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Checks if a cache value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nexports.default = cacheHas;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_cacheHas.js\n// module id = 140\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isArrayLikeObject = require('./isArrayLikeObject');\n\nvar _isArrayLikeObject2 = _interopRequireDefault(_isArrayLikeObject);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Casts `value` to an empty array if it's not an array like object.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array|Object} Returns the cast array-like object.\n */\nfunction castArrayLikeObject(value) {\n  return (0, _isArrayLikeObject2.default)(value) ? value : [];\n}\n\nexports.default = castArrayLikeObject;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_castArrayLikeObject.js\n// module id = 141\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Uint8Array = require('./_Uint8Array');\n\nvar _Uint8Array2 = _interopRequireDefault(_Uint8Array);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new _Uint8Array2.default(result).set(new _Uint8Array2.default(arrayBuffer));\n  return result;\n}\n\nexports.default = cloneArrayBuffer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_cloneArrayBuffer.js\n// module id = 142\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _assignValue = require('./_assignValue');\n\nvar _assignValue2 = _interopRequireDefault(_assignValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer ? customizer(object[key], source[key], key, object, source) : source[key];\n\n    (0, _assignValue2.default)(object, key, newValue);\n  }\n  return object;\n}\n\nexports.default = copyObject;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_copyObject.js\n// module id = 143\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetPrototype = Object.getPrototypeOf;\n\n/**\n * Gets the `[[Prototype]]` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {null|Object} Returns the `[[Prototype]]`.\n */\nfunction getPrototype(value) {\n  return nativeGetPrototype(Object(value));\n}\n\nexports.default = getPrototype;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_getPrototype.js\n// module id = 144\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _DataView = require('./_DataView');\n\nvar _DataView2 = _interopRequireDefault(_DataView);\n\nvar _Map = require('./_Map');\n\nvar _Map2 = _interopRequireDefault(_Map);\n\nvar _Promise = require('./_Promise');\n\nvar _Promise2 = _interopRequireDefault(_Promise);\n\nvar _Set = require('./_Set');\n\nvar _Set2 = _interopRequireDefault(_Set);\n\nvar _WeakMap = require('./_WeakMap');\n\nvar _WeakMap2 = _interopRequireDefault(_WeakMap);\n\nvar _toSource = require('./_toSource');\n\nvar _toSource2 = _interopRequireDefault(_toSource);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = (0, _toSource2.default)(_DataView2.default),\n    mapCtorString = (0, _toSource2.default)(_Map2.default),\n    promiseCtorString = (0, _toSource2.default)(_Promise2.default),\n    setCtorString = (0, _toSource2.default)(_Set2.default),\n    weakMapCtorString = (0, _toSource2.default)(_WeakMap2.default);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction getTag(value) {\n  return objectToString.call(value);\n}\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge, and promises in Node.js.\nif (_DataView2.default && getTag(new _DataView2.default(new ArrayBuffer(1))) != dataViewTag || _Map2.default && getTag(new _Map2.default()) != mapTag || _Promise2.default && getTag(_Promise2.default.resolve()) != promiseTag || _Set2.default && getTag(new _Set2.default()) != setTag || _WeakMap2.default && getTag(new _WeakMap2.default()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? (0, _toSource2.default)(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n        case mapCtorString:\n          return mapTag;\n        case promiseCtorString:\n          return promiseTag;\n        case setCtorString:\n          return setTag;\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nexports.default = getTag;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_getTag.js\n// module id = 145\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nexports.default = mapToArray;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_mapToArray.js\n// module id = 146\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseSlice = require('./_baseSlice');\n\nvar _baseSlice2 = _interopRequireDefault(_baseSlice);\n\nvar _toInteger = require('./toInteger');\n\nvar _toInteger2 = _interopRequireDefault(_toInteger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.drop([1, 2, 3]);\n * // => [2, 3]\n *\n * _.drop([1, 2, 3], 2);\n * // => [3]\n *\n * _.drop([1, 2, 3], 5);\n * // => []\n *\n * _.drop([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction drop(array, n, guard) {\n  var length = array ? array.length : 0;\n  if (!length) {\n    return [];\n  }\n  n = guard || n === undefined ? 1 : (0, _toInteger2.default)(n);\n  return (0, _baseSlice2.default)(array, n < 0 ? 0 : n, length);\n}\n\nexports.default = drop;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/drop.js\n// module id = 147\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseSlice = require('./_baseSlice');\n\nvar _baseSlice2 = _interopRequireDefault(_baseSlice);\n\nvar _toInteger = require('./toInteger');\n\nvar _toInteger2 = _interopRequireDefault(_toInteger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the end.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.dropRight([1, 2, 3]);\n * // => [1, 2]\n *\n * _.dropRight([1, 2, 3], 2);\n * // => [1]\n *\n * _.dropRight([1, 2, 3], 5);\n * // => []\n *\n * _.dropRight([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction dropRight(array, n, guard) {\n  var length = array ? array.length : 0;\n  if (!length) {\n    return [];\n  }\n  n = guard || n === undefined ? 1 : (0, _toInteger2.default)(n);\n  n = length - n;\n  return (0, _baseSlice2.default)(array, 0, n < 0 ? 0 : n);\n}\n\nexports.default = dropRight;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/dropRight.js\n// module id = 148\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Gets the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias first\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the first element of `array`.\n * @example\n *\n * _.head([1, 2, 3]);\n * // => 1\n *\n * _.head([]);\n * // => undefined\n */\nfunction head(array) {\n  return array && array.length ? array[0] : undefined;\n}\n\nexports.default = head;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/head.js\n// module id = 149\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isArrayLikeObject = require('./isArrayLikeObject');\n\nvar _isArrayLikeObject2 = _interopRequireDefault(_isArrayLikeObject);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n  return (0, _isArrayLikeObject2.default)(value) && hasOwnProperty.call(value, 'callee') && (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\nexports.default = isArguments;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/isArguments.js\n// module id = 150\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isObject = require('./isObject');\n\nvar _isObject2 = _interopRequireDefault(_isObject);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n *  else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8 which returns 'object' for typed array and weak map constructors,\n  // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n  var tag = (0, _isObject2.default)(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\nexports.default = isFunction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/isFunction.js\n// module id = 151\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isArray = require('./isArray');\n\nvar _isArray2 = _interopRequireDefault(_isArray);\n\nvar _isObjectLike = require('./isObjectLike');\n\nvar _isObjectLike2 = _interopRequireDefault(_isObjectLike);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n *  else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' || !(0, _isArray2.default)(value) && (0, _isObjectLike2.default)(value) && objectToString.call(value) == stringTag;\n}\n\nexports.default = isString;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/isString.js\n// module id = 152\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _basePullAll = require('./_basePullAll');\n\nvar _basePullAll2 = _interopRequireDefault(_basePullAll);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This method is like `_.pull` except that it accepts an array of values to remove.\n *\n * **Note:** Unlike `_.difference`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [1, 2, 3, 1, 2, 3];\n *\n * _.pullAll(array, [2, 3]);\n * console.log(array);\n * // => [1, 1]\n */\nfunction pullAll(array, values) {\n  return array && array.length && values && values.length ? (0, _basePullAll2.default)(array, values) : array;\n}\n\nexports.default = pullAll;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/pullAll.js\n// module id = 153\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _apply = require('./_apply');\n\nvar _apply2 = _interopRequireDefault(_apply);\n\nvar _arrayMap = require('./_arrayMap');\n\nvar _arrayMap2 = _interopRequireDefault(_arrayMap);\n\nvar _unzip = require('./unzip');\n\nvar _unzip2 = _interopRequireDefault(_unzip);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This method is like `_.unzip` except that it accepts `iteratee` to specify\n * how regrouped values should be combined. The iteratee is invoked with the\n * elements of each group: (...group).\n *\n * @static\n * @memberOf _\n * @since 3.8.0\n * @category Array\n * @param {Array} array The array of grouped elements to process.\n * @param {Function} [iteratee=_.identity] The function to combine\n *  regrouped values.\n * @returns {Array} Returns the new array of regrouped elements.\n * @example\n *\n * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n * // => [[1, 10, 100], [2, 20, 200]]\n *\n * _.unzipWith(zipped, _.add);\n * // => [3, 30, 300]\n */\nfunction unzipWith(array, iteratee) {\n  if (!(array && array.length)) {\n    return [];\n  }\n  var result = (0, _unzip2.default)(array);\n  if (iteratee == null) {\n    return result;\n  }\n  return (0, _arrayMap2.default)(result, function (group) {\n    return (0, _apply2.default)(iteratee, undefined, group);\n  });\n}\n\nexports.default = unzipWith;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/unzipWith.js\n// module id = 154\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toMap;\n\nvar _isPlainObject = require('./lib/lodash/isPlainObject');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _objecttomap = require('./objecttomap');\n\nvar _objecttomap2 = _interopRequireDefault(_objecttomap);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Transforms object or iterable to map. Iterable needs to be in the format acceptable by the `Map` constructor.\n *\n *\t\tmap = toMap( { 'foo': 1, 'bar': 2 } );\n *\t\tmap = toMap( [ [ 'foo', 1 ], [ 'bar', 2 ] ] );\n *\t\tmap = toMap( anotherMap );\n *\n * @param {Object|Iterable} data Object or iterable to transform.\n * @returns {Map} Map created from data.\n */\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/tomap\n */\n\nfunction toMap(data) {\n  if ((0, _isPlainObject2.default)(data)) {\n    return (0, _objecttomap2.default)(data);\n  } else {\n    return new Map(data);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/tomap.js\n// module id = 155\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isWidget = isWidget;\nexports.toWidget = toWidget;\nexports.setLabel = setLabel;\nexports.getLabel = getLabel;\nexports.toWidgetEditable = toWidgetEditable;\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module widget/utils\n */\n\nvar widgetSymbol = Symbol('isWidget');\nvar labelSymbol = Symbol('label');\n\n/**\n * CSS class added to each widget element.\n *\n * @const {String}\n */\nvar WIDGET_CLASS_NAME = exports.WIDGET_CLASS_NAME = 'ck-widget';\n\n/**\n * CSS class added to currently selected widget element.\n *\n * @const {String}\n */\nvar WIDGET_SELECTED_CLASS_NAME = exports.WIDGET_SELECTED_CLASS_NAME = 'ck-widget_selected';\n\n/**\n * Returns `true` if given {@link module:engine/view/element~Element} is a widget.\n *\n * @param {module:engine/view/element~Element} element\n * @returns {Boolean}\n */\nfunction isWidget(element) {\n  return !!element.getCustomProperty(widgetSymbol);\n}\n\n/**\n * Converts given {@link module:engine/view/element~Element} to widget in following way:\n * * sets `contenteditable` attribute to `true`,\n * * adds custom `getFillerOffset` method returning `null`,\n * * adds `ck-widget` CSS class,\n * * adds custom property allowing to recognize widget elements by using {@link ~isWidget}.\n *\n * @param {module:engine/view/element~Element} element\n * @param {Object} [options={}]\n * @param {String|Function} [options.label] Element's label provided to {@link ~setLabel} function. It can be passed as\n * a plain string or a function returning a string.\n * @returns {module:engine/view/element~Element} Returns same element.\n */\nfunction toWidget(element) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  element.setAttribute('contenteditable', false);\n  element.getFillerOffset = getFillerOffset;\n  element.addClass(WIDGET_CLASS_NAME);\n  element.setCustomProperty(widgetSymbol, true);\n\n  if (options.label) {\n    setLabel(element, options.label);\n  }\n\n  return element;\n}\n\n/**\n * Sets label for given element.\n * It can be passed as a plain string or a function returning a string. Function will be called each time label is retrieved by\n * {@link ~getLabel}.\n *\n * @param {module:engine/view/element~Element} element\n * @param {String|Function} labelOrCreator\n */\nfunction setLabel(element, labelOrCreator) {\n  element.setCustomProperty(labelSymbol, labelOrCreator);\n}\n\n/**\n * Returns label for provided element.\n *\n * @param {module:engine/view/element~Element} element\n * @return {String}\n */\nfunction getLabel(element) {\n  var labelCreator = element.getCustomProperty(labelSymbol);\n\n  if (!labelCreator) {\n    return '';\n  }\n\n  return typeof labelCreator == 'function' ? labelCreator() : labelCreator;\n}\n\n/**\n * Adds functionality to provided {module:engine/view/editableelement~EditableElement} to act as a widget's editable:\n * * adds `ck-editable` CSS class,\n * * sets `contenteditable` as `true` when {module:engine/view/editableelement~EditableElement#isReadOnly} is `false`\n * otherwise set `false`,\n * * adds `ck-editable_focused` CSS class when editable is focused and removes it when it's blurred.\n *\n * @param {module:engine/view/editableelement~EditableElement} editable\n * @returns {module:engine/view/editableelement~EditableElement} Returns same element that was provided in `editable` param.\n */\nfunction toWidgetEditable(editable) {\n  editable.addClass('ck-editable');\n\n  // Set initial contenteditable value.\n  editable.setAttribute('contenteditable', !editable.isReadOnly);\n\n  // Bind contenteditable property to element#isReadOnly.\n  editable.on('change:isReadOnly', function (evt, property, is) {\n    editable.setAttribute('contenteditable', !is);\n  });\n\n  editable.on('change:isFocused', function (evt, property, is) {\n    if (is) {\n      editable.addClass('ck-editable_focused');\n    } else {\n      editable.removeClass('ck-editable_focused');\n    }\n  });\n\n  return editable;\n}\n\n// Default filler offset function applied to all widget elements.\n//\n// @returns {null}\nfunction getFillerOffset() {\n  return null;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-widget/src/utils.js\n// module id = 156\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n// WEBPACK FOOTER //\n// (webpack)/buildin/global.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _command = require('@ckeditor/ckeditor5-core/src/command');\n\nvar _command2 = _interopRequireDefault(_command);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module basic-styles/attributecommand\n */\n\n/**\n * An extension of the base {@link module:core/command~Command} class, which provides utilities for a command\n * that toggles a single attribute on a text or an element.\n *\n * `AttributeCommand` uses {@link module:engine/model/document~Document#selection}\n * to decide which nodes (if any) should be changed, and applies or removes the attribute from them.\n *\n * The command checks the {@link module:engine/model/document~Document#schema} to decide if it can be enabled\n * for the current selection and to which nodes the attribute can be applied.\n *\n * @extends module:core/command~Command\n */\nvar AttributeCommand = function (_Command) {\n\t_inherits(AttributeCommand, _Command);\n\n\t/**\n  * @param {module:core/editor/editor~Editor} editor\n  * @param {String} attributeKey Attribute that will be set by the command.\n  */\n\tfunction AttributeCommand(editor, attributeKey) {\n\t\t_classCallCheck(this, AttributeCommand);\n\n\t\t/**\n   * The attribute that will be set by the command.\n   *\n   * @readonly\n   * @member {String}\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (AttributeCommand.__proto__ || Object.getPrototypeOf(AttributeCommand)).call(this, editor));\n\n\t\t_this.attributeKey = attributeKey;\n\n\t\t/**\n   * Flag indicating whether the command is active. The command is active when the\n   * {@link module:engine/model/selection~Selection#hasAttribute selection has the attribute} which means that:\n   *\n   * * If the selection is not empty &ndash; That it starts in a text (or another node) which has the attribute set.\n   * * If the selection is empty &ndash; That the selection has the attribute itself (which means that newly typed\n   * text will have this attribute, too).\n   *\n   * @observable\n   * @readonly\n   * @member {Boolean} #value\n   */\n\t\treturn _this;\n\t}\n\n\t/**\n  * Updates the command's {@link #value} based on the current selection.\n  */\n\n\n\t_createClass(AttributeCommand, [{\n\t\tkey: 'refresh',\n\t\tvalue: function refresh() {\n\t\t\tvar doc = this.editor.document;\n\n\t\t\tthis.value = doc.selection.hasAttribute(this.attributeKey);\n\t\t\tthis.isEnabled = doc.schema.checkAttributeInSelection(doc.selection, this.attributeKey);\n\t\t}\n\n\t\t/**\n   * Executes the command &mdash; applies the attribute to the selection or removes it from the selection.\n   *\n   * If the command is active (`value == true`), it will remove attributes. Otherwise, it will set attributes.\n   *\n   * The execution result differs, depending on the {@link module:engine/model/document~Document#selection}:\n   *\n   * * If the selection is on a range, the command applies the attribute to all nodes in that range\n   * (if they are allowed to have this attribute by the {@link module:engine/model/schema~Schema schema}).\n   * * If the selection is collapsed in a non-empty node, the command applies the attribute to the\n   * {@link module:engine/model/document~Document#selection} itself (note that typed characters copy attributes from the selection).\n   * * If the selection is collapsed in an empty node, the command applies the attribute to the parent node of the selection (note\n   * that the selection inherits all attributes from a node if it is in an empty node).\n   *\n   * @fires execute\n   * @param {Object} [options] Command options.\n   * @param {Boolean} [options.forceValue] If set, it will force the command behavior. If `true`, the command will apply the attribute,\n   * otherwise the command will remove the attribute.\n   * If not set, the command will look for its current value to decide what it should do.\n   * @param {module:engine/model/batch~Batch} [options.batch] A batch to group undo steps.\n   */\n\n\t}, {\n\t\tkey: 'execute',\n\t\tvalue: function execute() {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\t\t\tvar doc = this.editor.document;\n\t\t\tvar selection = doc.selection;\n\t\t\tvar value = options.forceValue === undefined ? !this.value : options.forceValue;\n\n\t\t\tdoc.enqueueChanges(function () {\n\t\t\t\tif (selection.isCollapsed) {\n\t\t\t\t\tif (value) {\n\t\t\t\t\t\tselection.setAttribute(_this2.attributeKey, true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tselection.removeAttribute(_this2.attributeKey);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar ranges = doc.schema.getValidRanges(selection.getRanges(), _this2.attributeKey);\n\t\t\t\t\tvar batch = options.batch || doc.batch();\n\n\t\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\t\tvar _didIteratorError = false;\n\t\t\t\t\tvar _iteratorError = undefined;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (var _iterator = ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\t\tvar range = _step.value;\n\n\t\t\t\t\t\t\tif (value) {\n\t\t\t\t\t\t\t\tbatch.setAttribute(range, _this2.attributeKey, value);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbatch.removeAttribute(range, _this2.attributeKey);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t\t_iteratorError = err;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}]);\n\n\treturn AttributeCommand;\n}(_command2.default);\n\nexports.default = AttributeCommand;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-basic-styles/src/attributecommand.js\n// module id = 158\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\nn\n/**\n * @module engine/conversion/mapper\n */\n\nvar _position = require('../model/position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _range = require('../model/range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _position3 = require('../view/position');\n\nvar _position4 = _interopRequireDefault(_position3);\n\nvar _range3 = require('../view/range');\n\nvar _range4 = _interopRequireDefault(_range3);\n\nvar _text = require('../view/text');\n\nvar _text2 = _interopRequireDefault(_text);\n\nvar _emittermixin = require('@ckeditor/ckeditor5-utils/src/emittermixin');\n\nvar _emittermixin2 = _interopRequireDefault(_emittermixin);\n\nvar _mix = require('@ckeditor/ckeditor5-utils/src/mix');\n\nvar _mix2 = _interopRequireDefault(_mix);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Maps elements and positions between {@link module:engine/view/document~Document view} and {@link module:engine/model/model model}.\n *\n * Mapper use bound elements to find corresponding elements and positions, so, to get proper results,\n * all model elements should be {@link module:engine/conversion/mapper~Mapper#bindElements bound}.\n *\n * To map complex model to/from view relations, you may provide custom callbacks for\n * {@link module:engine/conversion/mapper~Mapper#event:modelToViewPosition modelToViewPosition event} and\n * {@link module:engine/conversion/mapper~Mapper#event:viewToModelPosition viewToModelPosition event} that are fired whenever\n * a position mapping request occurs.\n * Those events are fired by {@link module:engine/conversion/mapper~Mapper#toViewPosition toViewPosition}\n * and {@link module:engine/conversion/mapper~Mapper#toModelPosition toModelPosition} methods. `Mapper` adds it's own default callbacks\n * with `'lowest'` priority. To override default `Mapper` mapping, add custom callback with higher priority and\n * stop the event.\n */\nvar Mapper = function () {\n\t/**\n  * Creates an instance of the mapper.\n  */\n\tfunction Mapper() {\n\t\tvar _this = this;\n\n\t\t_classCallCheck(this, Mapper);\n\n\t\t/**\n   * Model element to view element mapping.\n   *\n   * @private\n   * @member {WeakMap}\n   */\n\t\tthis._modelToViewMapping = new WeakMap();\n\n\t\t/**\n   * View element to model element mapping.\n   *\n   * @private\n   * @member {WeakMap}\n   */\n\t\tthis._viewToModelMapping = new WeakMap();\n\n\t\t/**\n   * A map containing callbacks between view element names and functions evaluating length of view elements\n   * in model.\n   *\n   * @private\n   * @member {Map}\n   */\n\t\tthis._viewToModelLengthCallbacks = new Map();\n\n\t\t// Default mapper algorithm for mapping model position to view position.\n\t\tthis.on('modelToViewPosition', function (evt, data) {\n\t\t\tif (data.viewPosition) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar viewContainer = _this._modelToViewMapping.get(data.modelPosition.parent);\n\n\t\t\tdata.viewPosition = _this._findPositionIn(viewContainer, data.modelPosition.offset);\n\t\t}, { priority: 'low' });\n\n\t\t// Default mapper algorithm for mapping view position to model position.\n\t\tthis.on('viewToModelPosition', function (evt, data) {\n\t\t\tif (data.modelPosition) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar viewBlock = data.viewPosition.parent;\n\t\t\tvar modelParent = _this._viewToModelMapping.get(viewBlock);\n\n\t\t\twhile (!modelParent) {\n\t\t\t\tviewBlock = viewBlock.parent;\n\t\t\t\tmodelParent = _this._viewToModelMapping.get(viewBlock);\n\t\t\t}\n\n\t\t\tvar modelOffset = _this._toModelOffset(data.viewPosition.parent, data.viewPosition.offset, viewBlock);\n\n\t\t\tdata.modelPosition = _position2.default.createFromParentAndOffset(modelParent, modelOffset);\n\t\t}, { priority: 'low' });\n\t}\n\n\t/**\n  * Marks model and view elements as corresponding. Corresponding elements can be retrieved by using\n  * the {@link module:engine/conversion/mapper~Mapper#toModelElement toModelElement} and\n  * {@link module:engine/conversion/mapper~Mapper#toViewElement toViewElement} methods.\n  * The information that elements are bound is also used to translate positions.\n  *\n  * @param {module:engine/model/element~Element} modelElement Model element.\n  * @param {module:engine/view/element~Element} viewElement View element.\n  */\n\n\n\t_createClass(Mapper, [{\n\t\tkey: 'bindElements',\n\t\tvalue: function bindElements(modelElement, viewElement) {\n\t\t\tthis._modelToViewMapping.set(modelElement, viewElement);\n\t\t\tthis._viewToModelMapping.set(viewElement, modelElement);\n\t\t}\n\n\t\t/**\n   * Unbinds given {@link module:engine/view/element~Element view element} from the map.\n   *\n   * @param {module:engine/view/element~Element} viewElement View element to unbind.\n   */\n\n\t}, {\n\t\tkey: 'unbindViewElement',\n\t\tvalue: function unbindViewElement(viewElement) {\n\t\t\tvar modelElement = this.toModelElement(viewElement);\n\n\t\t\tthis._unbindElements(modelElement, viewElement);\n\t\t}\n\n\t\t/**\n   * Unbinds given {@link module:engine/model/element~Element model element} from the map.\n   *\n   * @param {module:engine/model/element~Element} modelElement Model element to unbind.\n   */\n\n\t}, {\n\t\tkey: 'unbindModelElement',\n\t\tvalue: function unbindModelElement(modelElement) {\n\t\t\tvar viewElement = this.toViewElement(modelElement);\n\n\t\t\tthis._unbindElements(modelElement, viewElement);\n\t\t}\n\n\t\t/**\n   * Removes all model to view and view to model bindings.\n   */\n\n\t}, {\n\t\tkey: 'clearBindings',\n\t\tvalue: function clearBindings() {\n\t\t\tthis._modelToViewMapping = new WeakMap();\n\t\t\tthis._viewToModelMapping = new WeakMap();\n\t\t}\n\n\t\t/**\n   * Gets the corresponding model element.\n   *\n   * **Note:** {@link module:engine/view/uielement~UIElement} does not have corresponding element in model.\n   *\n   * @param {module:engine/view/element~Element} viewElement View element.\n   * @returns {module:engine/model/element~Element|undefined} Corresponding model element or `undefined` if not found.\n   */\n\n\t}, {\n\t\tkey: 'toModelElement',\n\t\tvalue: function toModelElement(viewElement) {\n\t\t\treturn this._viewToModelMapping.get(viewElement);\n\t\t}\n\n\t\t/**\n   * Gets the corresponding view element.\n   *\n   * @param {module:engine/model/element~Element} modelElement Model element.\n   * @returns {module:engine/view/element~Element|undefined} Corresponding view element or `undefined` if not found.\n   */\n\n\t}, {\n\t\tkey: 'toViewElement',\n\t\tvalue: function toViewElement(modelElement) {\n\t\t\treturn this._modelToViewMapping.get(modelElement);\n\t\t}\n\n\t\t/**\n   * Gets the corresponding model range.\n   *\n   * @param {module:engine/view/range~Range} viewRange View range.\n   * @returns {module:engine/model/range~Range} Corresponding model range.\n   */\n\n\t}, {\n\t\tkey: 'toModelRange',\n\t\tvalue: function toModelRange(viewRange) {\n\t\t\treturn new _range2.default(this.toModelPosition(viewRange.start), this.toModelPosition(viewRange.end));\n\t\t}\n\n\t\t/**\n   * Gets the corresponding view range.\n   *\n   * @param {module:engine/model/range~Range} modelRange Model range.\n   * @returns {module:engine/view/range~Range} Corresponding view range.\n   */\n\n\t}, {\n\t\tkey: 'toViewRange',\n\t\tvalue: function toViewRange(modelRange) {\n\t\t\treturn new _range4.default(this.toViewPosition(modelRange.start), this.toViewPosition(modelRange.end));\n\t\t}\n\n\t\t/**\n   * Gets the corresponding model position.\n   *\n   * @fires viewToModelPosition\n   * @param {module:engine/view/position~Position} viewPosition View position.\n   * @returns {module:engine/model/position~Position} Corresponding model position.\n   */\n\n\t}, {\n\t\tkey: 'toModelPosition',\n\t\tvalue: function toModelPosition(viewPosition) {\n\t\t\tvar data = {\n\t\t\t\tviewPosition: viewPosition,\n\t\t\t\tmapper: this\n\t\t\t};\n\n\t\t\tthis.fire('viewToModelPosition', data);\n\n\t\t\treturn data.modelPosition;\n\t\t}\n\n\t\t/**\n   * Gets the corresponding view position.\n   *\n   * @fires modelToViewPosition\n   * @param {module:engine/model/position~Position} modelPosition Model position.\n   * @returns {module:engine/view/position~Position} Corresponding view position.\n   */\n\n\t}, {\n\t\tkey: 'toViewPosition',\n\t\tvalue: function toViewPosition(modelPosition) {\n\t\t\tvar data = {\n\t\t\t\tmodelPosition: modelPosition,\n\t\t\t\tmapper: this\n\t\t\t};\n\n\t\t\tthis.fire('modelToViewPosition', data);\n\n\t\t\treturn data.viewPosition;\n\t\t}\n\n\t\t/**\n   * Registers a callback that evaluates the length in the model of a view element with given name.\n   *\n   * The callback is fired with one argument, which is a view element instance. The callback is expected to return\n   * a number representing the length of view element in model.\n   *\n   *\t\t// List item in view may contain nested list, which have other list items. In model though,\n   *\t\t// the lists are represented by flat structure. Because of those differences, length of list view element\n   *\t\t// may be greater than one. In the callback it's checked how many nested list items are in evaluated list item.\n   *\n   *\t\tfunction getViewListItemLength( element ) {\n   *\t\t\tlet length = 1;\n   *\n   *\t\t\tfor ( let child of element.getChildren() ) {\n   *\t\t\t\tif ( child.name == 'ul' || child.name == 'ol' ) {\n   *\t\t\t\t\tfor ( let item of child.getChildren() ) {\n   *\t\t\t\t\t\tlength += getViewListItemLength( item );\n   *\t\t\t\t\t}\n   *\t\t\t\t}\n   *\t\t\t}\n   *\n   *\t\t\treturn length;\n   *\t\t}\n   *\n   *\t\tmapper.registerViewToModelLength( 'li', getViewListItemLength );\n   *\n   * @param {String} viewElementName Name of view element for which callback is registered.\n   * @param {Function} lengthCallback Function return a length of view element instance in model.\n   */\n\n\t}, {\n\t\tkey: 'registerViewToModelLength',\n\t\tvalue: function registerViewToModelLength(viewElementName, lengthCallback) {\n\t\t\tthis._viewToModelLengthCallbacks.set(viewElementName, lengthCallback);\n\t\t}\n\n\t\t/**\n   * Calculates model offset based on the view position and the block element.\n   *\n   * Example:\n   *\n   *\t\t<p>foo<b>ba|r</b></p> // _toModelOffset( b, 2, p ) -> 5\n   *\n   * Is a sum of:\n   *\n   *\t\t<p>foo|<b>bar</b></p> // _toModelOffset( p, 3, p ) -> 3\n   *\t\t<p>foo<b>ba|r</b></p> // _toModelOffset( b, 2, b ) -> 2\n   *\n   * @private\n   * @param {module:engine/view/element~Element} viewParent Position parent.\n   * @param {Number} viewOffset Position offset.\n   * @param {module:engine/view/element~Element} viewBlock Block used as a base to calculate offset.\n   * @returns {Number} Offset in the model.\n   */\n\n\t}, {\n\t\tkey: '_toModelOffset',\n\t\tvalue: function _toModelOffset(viewParent, viewOffset, viewBlock) {\n\t\t\tif (viewBlock != viewParent) {\n\t\t\t\t// See example.\n\t\t\t\tvar offsetToParentStart = this._toModelOffset(viewParent.parent, viewParent.index, viewBlock);\n\t\t\t\tvar offsetInParent = this._toModelOffset(viewParent, viewOffset, viewParent);\n\n\t\t\t\treturn offsetToParentStart + offsetInParent;\n\t\t\t}\n\n\t\t\t// viewBlock == viewParent, so we need to calculate the offset in the parent element.\n\n\t\t\t// If the position is a text it is simple (\"ba|r\" -> 2).\n\t\t\tif (viewParent.is('text')) {\n\t\t\t\treturn viewOffset;\n\t\t\t}\n\n\t\t\t// If the position is in an element we need to sum lengths of siblings ( <b> bar </b> foo | -> 3 + 3 = 6 ).\n\t\t\tvar modelOffset = 0;\n\n\t\t\tfor (var i = 0; i < viewOffset; i++) {\n\t\t\t\tmodelOffset += this.getModelLength(viewParent.getChild(i));\n\t\t\t}\n\n\t\t\treturn modelOffset;\n\t\t}\n\n\t\t/**\n   * Removes binding between given elements.\n   *\n   * @private\n   * @param {module:engine/model/element~Element} modelElement Model element to unbind.\n   * @param {module:engine/view/element~Element} viewElement View element to unbind.\n   */\n\n\t}, {\n\t\tkey: '_unbindElements',\n\t\tvalue: function _unbindElements(modelElement, viewElement) {\n\t\t\tthis._viewToModelMapping.delete(viewElement);\n\t\t\tthis._modelToViewMapping.delete(modelElement);\n\t\t}\n\n\t\t/**\n   * Gets the length of the view element in the model.\n   *\n   * The length is calculated as follows:\n   * * if {@link #registerViewToModelLength length mapping callback} is provided for given `viewNode` it is used to\n   * evaluate model length (`viewNode` is used as first and only parameter passed to the callback),\n   * * length of a {@link module:engine/view/text~Text text node} is equal to the length of it's\n   * {@link module:engine/view/text~Text#data data},\n   * * length of a {@link module:engine/view/uielement~UIElement ui element} is equal to 0,\n   * * length of a mapped {@link module:engine/view/element~Element element} is equal to 1,\n   * * length of a not-mapped {@link module:engine/view/element~Element element} is equal to the length of it's children.\n   *\n   * Examples:\n   *\n   *\t\tfoo                          -> 3 // Text length is equal to it's data length.\n   *\t\t<p>foo</p>                   -> 1 // Length of an element which is mapped is by default equal to 1.\n   *\t\t<b>foo</b>                   -> 3 // Length of an element which is not mapped is a length of its children.\n   *\t\t<div><p>x</p><p>y</p></div>  -> 2 // Assuming that <div> is not mapped and <p> are mapped.\n   *\n   * @param {module:engine/view/element~Element} viewNode View node.\n   * @returns {Number} Length of the node in the tree model.\n   */\n\n\t}, {\n\t\tkey: 'getModelLength',\n\t\tvalue: function getModelLength(viewNode) {\n\t\t\tif (this._viewToModelLengthCallbacks.get(viewNode.name)) {\n\t\t\t\tvar callback = this._viewToModelLengthCallbacks.get(viewNode.name);\n\n\t\t\t\treturn callback(viewNode);\n\t\t\t} else if (this._viewToModelMapping.has(viewNode)) {\n\t\t\t\treturn 1;\n\t\t\t} else if (viewNode.is('text')) {\n\t\t\t\treturn viewNode.data.length;\n\t\t\t} else if (viewNode.is('uiElement')) {\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\tvar len = 0;\n\n\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\tvar _didIteratorError = false;\n\t\t\t\tvar _iteratorError = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator = viewNode.getChildren()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\tvar child = _step.value;\n\n\t\t\t\t\t\tlen += this.getModelLength(child);\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t_iteratorError = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn len;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Finds the position in the view node (or its children) with the expected model offset.\n   *\n   * Example:\n   *\n   *\t\t<p>fo<b>bar</b>bom</p> -> expected offset: 4\n   *\n   *\t\t_findPositionIn( p, 4 ):\n   *\t\t<p>|fo<b>bar</b>bom</p> -> expected offset: 4, actual offset: 0\n   *\t\t<p>fo|<b>bar</b>bom</p> -> expected offset: 4, actual offset: 2\n   *\t\t<p>fo<b>bar</b>|bom</p> -> expected offset: 4, actual offset: 5 -> we are too far\n   *\n   *\t\t_findPositionIn( b, 4 - ( 5 - 3 ) ):\n   *\t\t<p>fo<b>|bar</b>bom</p> -> expected offset: 2, actual offset: 0\n   *\t\t<p>fo<b>bar|</b>bom</p> -> expected offset: 2, actual offset: 3 -> we are too far\n   *\n   *\t\t_findPositionIn( bar, 2 - ( 3 - 3 ) ):\n   *\t\tWe are in the text node so we can simple find the offset.\n   *\t\t<p>fo<b>ba|r</b>bom</p> -> expected offset: 2, actual offset: 2 -> position found\n   *\n   * @private\n   * @param {module:engine/view/element~Element} viewParent Tree view element in which we are looking for the position.\n   * @param {Number} expectedOffset Expected offset.\n   * @returns {module:engine/view/position~Position} Found position.\n   */\n\n\t}, {\n\t\tkey: '_findPositionIn',\n\t\tvalue: function _findPositionIn(viewParent, expectedOffset) {\n\t\t\t// Last scanned view node.\n\t\t\tvar viewNode = void 0;\n\t\t\t// Length of the last scanned view node.\n\t\t\tvar lastLength = 0;\n\n\t\t\tvar modelOffset = 0;\n\t\t\tvar viewOffset = 0;\n\n\t\t\t// In the text node it is simple: offset in the model equals offset in the text.\n\t\t\tif (viewParent.is('text')) {\n\t\t\t\treturn new _position4.default(viewParent, expectedOffset);\n\t\t\t}\n\n\t\t\t// In other cases we add lengths of child nodes to find the proper offset.\n\n\t\t\t// If it is smaller we add the length.\n\t\t\twhile (modelOffset < expectedOffset) {\n\t\t\t\tviewNode = viewParent.getChild(viewOffset);\n\t\t\t\tlastLength = this.getModelLength(viewNode);\n\t\t\t\tmodelOffset += lastLength;\n\t\t\t\tviewOffset++;\n\t\t\t}\n\n\t\t\t// If it equals we found the position.\n\t\t\tif (modelOffset == expectedOffset) {\n\t\t\t\treturn this._moveViewPositionToTextNode(new _position4.default(viewParent, viewOffset));\n\t\t\t}\n\t\t\t// If it is higher we need to enter last child.\n\t\t\telse {\n\t\t\t\t\t// ( modelOffset - lastLength ) is the offset to the child we enter,\n\t\t\t\t\t// so we subtract it from the expected offset to fine the offset in the child.\n\t\t\t\t\treturn this._findPositionIn(viewNode, expectedOffset - (modelOffset - lastLength));\n\t\t\t\t}\n\t\t}\n\n\t\t/**\n   * Because we prefer positions in text nodes over positions next to text node moves view position to the text node\n   * if it was next to it.\n   *\n   *\t\t<p>[]<b>foo</b></p> -> <p>[]<b>foo</b></p> // do not touch if position is not directly next to text\n   *\t\t<p>foo[]<b>foo</b></p> -> <p>foo{}<b>foo</b></p> // move to text node\n   *\t\t<p><b>[]foo</b></p> -> <p><b>{}foo</b></p> // move to text node\n   *\n   * @private\n   * @param {module:engine/view/position~Position} viewPosition Position potentially next to text node.\n   * @returns {module:engine/view/position~Position} Position in text node if possible.\n   */\n\n\t}, {\n\t\tkey: '_moveViewPositionToTextNode',\n\t\tvalue: function _moveViewPositionToTextNode(viewPosition) {\n\t\t\t// If the position is just after text node, put it at the end of that text node.\n\t\t\t// If the position is just before text node, put it at the beginning of that text node.\n\t\t\tvar nodeBefore = viewPosition.nodeBefore;\n\t\t\tvar nodeAfter = viewPosition.nodeAfter;\n\n\t\t\tif (nodeBefore instanceof _text2.default) {\n\t\t\t\treturn new _position4.default(nodeBefore, nodeBefore.data.length);\n\t\t\t} else if (nodeAfter instanceof _text2.default) {\n\t\t\t\treturn new _position4.default(nodeAfter, 0);\n\t\t\t}\n\n\t\t\t// Otherwise, just return the given position.\n\t\t\treturn viewPosition;\n\t\t}\n\n\t\t/**\n   * Fired for each model-to-view position mapping request. The purpose of this event is to enable custom model-to-view position\n   * mapping. Callbacks added to this event take {@link module:engine/model/position~Position model position} and are expected to\n   * calculate {@link module:engine/view/position~Position view position}. Calculated view position should be added as `viewPosition`\n   * value in `data` object that is passed as one of parameters to the event callback.\n   *\n   * \t\t// Assume that \"captionedImage\" model element is converted to <img> and following <span> elements in view,\n   * \t\t// and the model element is bound to <img> element. Force mapping model positions inside \"captionedImage\" to that\n   * \t\t// <span> element.\n   *\t\tmapper.on( 'modelToViewPosition', ( evt, data ) => {\n   *\t\t\tconst positionParent = modelPosition.parent;\n   *\n   *\t\t\tif ( positionParent.name == 'captionedImage' ) {\n   *\t\t\t\tconst viewImg = data.mapper.toViewElement( positionParent );\n   *\t\t\t\tconst viewCaption = viewImg.nextSibling; // The <span> element.\n   *\n   *\t\t\t\tdata.viewPosition = new ViewPosition( viewCaption, modelPosition.offset );\n   *\n   *\t\t\t\t// Stop the event if other callbacks should not modify calculated value.\n   *\t\t\t\tevt.stop();\n   *\t\t\t}\n   *\t\t} );\n   *\n   * **Note:** keep in mind that custom callback provided for this event should use provided `data.modelPosition` only to check\n   * what is before the position (or position's parent). This is important when model-to-view position mapping is used in\n   * remove change conversion. Model after the removed position (that is being mapped) does not correspond to view, so it cannot be used:\n   *\n   *\t\t// Incorrect:\n   *\t\tconst modelElement = data.modelPosition.nodeAfter;\n   *\t\tconst viewElement = data.mapper.toViewElement( modelElement );\n   *\t\t// ... Do something with `viewElement` and set `data.viewPosition`.\n   *\n   *\t\t// Correct:\n   *\t\tconst prevModelElement = data.modelPosition.nodeBefore;\n   *\t\tconst prevViewElement = data.mapper.toViewElement( prevModelElement );\n   *\t\t// ... Use `prevViewElement` to find correct `data.viewPosition`.\n   *\n   * **Note:** default mapping callback is provided with `low` priority setting and does not cancel the event, so it is possible to\n   * attach a custom callback after default callback and also use `data.viewPosition` calculated by default callback\n   * (for example to fix it).\n   *\n   * **Note:** default mapping callback will not fire if `data.viewPosition` is already set.\n   *\n   * **Note:** these callbacks are called **very often**. For efficiency reasons, it is advised to use them only when position\n   * mapping between given model and view elements is unsolvable using just elements mapping and default algorithm. Also,\n   * the condition that checks if special case scenario happened should be as simple as possible.\n   *\n   * @event modelToViewPosition\n   * @param {Object} data Data pipeline object that can store and pass data between callbacks. The callback should add\n   * `viewPosition` value to that object with calculated {@link module:engine/view/position~Position view position}.\n   * @param {module:engine/conversion/mapper~Mapper} data.mapper Mapper instance that fired the event.\n   */\n\n\t\t/**\n   * Fired for each view-to-model position mapping request. See {@link module:engine/conversion/mapper~Mapper#event:modelToViewPosition}.\n   *\n   * \t\t// See example in `modelToViewPosition` event description.\n   * \t\t// This custom mapping will map positions from <span> element next to <img> to the \"captionedImage\" element.\n   *\t\tmapper.on( 'viewToModelPosition', ( evt, data ) => {\n   *\t\t\tconst positionParent = viewPosition.parent;\n   *\n   *\t\t\tif ( positionParent.hasClass( 'image-caption' ) ) {\n   *\t\t\t\tconst viewImg = positionParent.previousSibling;\n   *\t\t\t\tconst modelImg = data.mapper.toModelElement( viewImg );\n   *\n   *\t\t\t\tdata.modelPosition = new ModelPosition( modelImg, viewPosition.offset );\n   *\t\t\t\tevt.stop();\n   *\t\t\t}\n   *\t\t} );\n   *\n   * **Note:** default mapping callback is provided with `low` priority setting and does not cancel the event, so it is possible to\n   * attach a custom callback after default callback and also use `data.modelPosition` calculated by default callback\n   * (for example to fix it).\n   *\n   * **Note:** default mapping callback will not fire if `data.modelPosition` is already set.\n   *\n   * **Note:** these callbacks are called **very often**. For efficiency reasons, it is advised to use them only when position\n   * mapping between given model and view elements is unsolvable using just elements mapping and default algorithm. Also,\n   * the condition that checks if special case scenario happened should be as simple as possible.\n   *\n   * @event viewToModelPosition\n   * @param {Object} data Data pipeline object that can store and pass data between callbacks. The callback should add\n   * `modelPosition` value to that object with calculated {@link module:engine/model/position~Position model position}.\n   * @param {module:engine/conversion/mapper~Mapper} data.mapper Mapper instance that fired the event.\n   */\n\n\t}]);\n\n\treturn Mapper;\n}();\n\nexports.default = Mapper;\n\n\n(0, _mix2.default)(Mapper, _emittermixin2.default);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/conversion/mapper.js\n// module id = 159\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.convertRangeSelection = convertRangeSelection;\nexports.convertCollapsedSelection = convertCollapsedSelection;\nexports.convertSelectionAttribute = convertSelectionAttribute;\nexports.convertSelectionMarker = convertSelectionMarker;\nexports.clearAttributes = clearAttributes;\nexports.clearFakeSelection = clearFakeSelection;\n\nvar _element = require('../view/element');\n\nvar _element2 = _interopRequireDefault(_element);\n\nvar _range = require('../view/range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _writer = require('../view/writer');\n\nvar _writer2 = _interopRequireDefault(_writer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Contains {@link module:engine/model/selection~Selection model selection} to\n * {@link module:engine/view/selection~Selection view selection} converters for\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher}.\n *\n * @module engine/conversion/model-selection-to-view-converters\n */\n\n/**\n * Function factory, creates a converter that converts non-collapsed {@link module:engine/model/selection~Selection model selection} to\n * {@link module:engine/view/selection~Selection view selection}. The converter consumes appropriate value from `consumable` object\n * and maps model positions from selection to view positions.\n *\n *\t\tmodelDispatcher.on( 'selection', convertRangeSelection() );\n *\n * @returns {Function} Selection converter.\n */\nfunction convertRangeSelection() {\n  return function (evt, data, consumable, conversionApi) {\n    var selection = data.selection;\n\n    if (selection.isCollapsed) {\n      return;\n    }\n\n    if (!consumable.consume(selection, 'selection')) {\n      return;\n    }\n\n    conversionApi.viewSelection.removeAllRanges();\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = selection.getRanges()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var range = _step.value;\n\n        var viewRange = conversionApi.mapper.toViewRange(range);\n        conversionApi.viewSelection.addRange(viewRange, selection.isBackward);\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  };\n}\n\n/**\n * Function factory, creates a converter that converts collapsed {@link module:engine/model/selection~Selection model selection} to\n * {@link module:engine/view/selection~Selection view selection}. The converter consumes appropriate value from `consumable` object,\n * maps model selection position to view position and breaks {@link module:engine/view/attributeelement~AttributeElement attribute elements}\n * at the selection position.\n *\n *\t\tmodelDispatcher.on( 'selection', convertCollapsedSelection() );\n *\n * Example of view state before and after converting collapsed selection:\n *\n *\t\t   <p><strong>f^oo<strong>bar</p>\n *\t\t-> <p><strong>f</strong>^<strong>oo</strong>bar</p>\n *\n * By breaking attribute elements like `<strong>`, selection is in correct element. See also complementary\n * {@link module:engine/conversion/model-selection-to-view-converters~convertSelectionAttribute attribute converter}\n * for selection attributes,\n * which wraps collapsed selection into view elements. Those converters together ensure, that selection ends up in\n * appropriate attribute elements.\n *\n * See also {@link module:engine/conversion/model-selection-to-view-converters~clearAttributes} which does a clean-up\n * by merging attributes.\n *\n * @returns {Function} Selection converter.\n */\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\nfunction convertCollapsedSelection() {\n  return function (evt, data, consumable, conversionApi) {\n    var selection = data.selection;\n\n    if (!selection.isCollapsed) {\n      return;\n    }\n\n    if (!consumable.consume(selection, 'selection')) {\n      return;\n    }\n\n    var modelPosition = selection.getFirstPosition();\n    var viewPosition = conversionApi.mapper.toViewPosition(modelPosition);\n    var brokenPosition = _writer2.default.breakAttributes(viewPosition);\n\n    conversionApi.viewSelection.removeAllRanges();\n    conversionApi.viewSelection.addRange(new _range2.default(brokenPosition, brokenPosition));\n  };\n}\n\n/**\n * Function factory, creates a converter that converts {@link module:engine/model/selection~Selection model selection} attributes to\n * {@link module:engine/view/attributeelement~AttributeElement view attribute elements}. The converter works only for collapsed selection.\n * The converter consumes appropriate value from `consumable` object, maps model selection position to view position and\n * wraps that position into a view attribute element.\n *\n * The wrapping node depends on passed parameter. If {@link module:engine/view/element~Element} was passed, it will be cloned and\n * the copy will become the wrapping element. If `Function` is provided, it is passed all the parameters of the\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:selectionAttribute selectionAttribute event}.\n * It's expected that the function returns a {@link module:engine/view/attributeelement~AttributeElement}.\n * The result of the function will be the wrapping element.\n *\n *\t\tmodelDispatcher.on( 'selectionAttribute:italic', convertSelectionAttribute( new ViewAttributeElement( 'em' ) ) );\n *\n *\t\tfunction styleElementCreator( styleValue ) {\n *\t\t\tif ( styleValue == 'important' ) {\n *\t\t\t\treturn new ViewAttributeElement( 'strong', { style: 'text-transform:uppercase;' } );\n *\t\t\t} else if ( styleValue == 'gold' ) {\n *\t\t\t\treturn new ViewAttributeElement( 'span', { style: 'color:yellow;' } );\n *\t\t\t}\n *\t\t}\n *\t\tmodelDispatcher.on( 'selectionAttribute:style', convertSelectionAttribute( styleCreator ) );\n *\n * **Note:** You can use the same `elementCreator` function for this converter factory\n * and {@link module:engine/conversion/model-to-view-converters~wrapRange}\n * model to view converter, as long as the `elementCreator` function uses only the first parameter (attribute value).\n *\n *\t\tmodelDispatcher.on( 'selection', convertCollapsedSelection() );\n *\t\tmodelDispatcher.on( 'selectionAttribute:italic', convertSelectionAttribute( new ViewAttributeElement( 'em' ) ) );\n *\t\tmodelDispatcher.on( 'selectionAttribute:bold', convertSelectionAttribute( new ViewAttributeElement( 'strong' ) ) );\n *\n * Example of view states before and after converting collapsed selection:\n *\n *\t\t   <p><em>f^oo</em>bar</p>\n *\t\t-> <p><em>f</em>^<em>oo</em>bar</p>\n *\t\t-> <p><em>f^oo</em>bar</p>\n *\n * Example of view state after converting collapsed selection. The scenario is: selection is inside bold text (`<strong>` element)\n * but it does not have bold attribute itself and has italic attribute instead (let's assume that user turned off bold and turned\n * on italic with selection collapsed):\n *\n *\t\t   <p><strong>f^oo<strong>bar</p>\n *\t\t-> <p><strong>f</strong>^<strong>oo<strong>bar</p>\n *\t\t-> <p><strong>f</strong><em>^</em><strong>oo</strong>bar</p>\n *\n * In first example, nothing has changed, because first `<em>` element got broken by `convertCollapsedSelection()` converter,\n * but then it got wrapped-back by `convertSelectionAttribute()` converter. In second example, notice how `<strong>` element\n * is broken to prevent putting selection in it, since selection has no `bold` attribute.\n *\n * @param {module:engine/view/attributeelement~AttributeElement|Function} elementCreator View element,\n * or function returning a view element, which will be used for wrapping.\n * @returns {Function} Selection converter.\n */\nfunction convertSelectionAttribute(elementCreator) {\n  return function (evt, data, consumable, conversionApi) {\n    var viewElement = elementCreator instanceof _element2.default ? elementCreator.clone(true) : elementCreator(data.value, data, data.selection, consumable, conversionApi);\n\n    if (!viewElement) {\n      return;\n    }\n\n    var consumableName = 'selectionAttribute:' + data.key;\n\n    wrapCollapsedSelectionPosition(data.selection, conversionApi.viewSelection, viewElement, consumable, consumableName);\n  };\n}\n\n/**\n * Performs similar conversion as {@link ~convertSelectionAttribute}, but depends on a marker name of a marker in which\n * collapsed selection is placed.\n *\n *\t\tmodelDispatcher.on( 'selectionMarker:searchResult', wrapRange( new ViewAttributeElement( 'span', { class: 'searchResult' } ) ) );\n *\n * **Note:** You can use the same `elementCreator` function for this converter factory\n * and {@link module:engine/conversion/model-to-view-converters~wrapRange}.\n *\n * @see module:engine/conversion/model-selection-to-view-converters~convertSelectionAttribute\n * @param {module:engine/view/attributeelement~AttributeElement|Function} elementCreator View element,\n * or function returning a view element, which will be used for wrapping.\n * @returns {Function} Selection converter.\n */\nfunction convertSelectionMarker(elementCreator) {\n  return function (evt, data, consumable, conversionApi) {\n    var viewElement = elementCreator instanceof _element2.default ? elementCreator.clone(true) : elementCreator(data, consumable, conversionApi);\n\n    if (!viewElement) {\n      return;\n    }\n\n    var consumableName = 'selectionMarker:' + data.name;\n\n    wrapCollapsedSelectionPosition(data.selection, conversionApi.viewSelection, viewElement, consumable, consumableName);\n  };\n}\n\n// Helper function for `convertSelectionAttribute` and `convertSelectionMarker`, which perform similar task.\nfunction wrapCollapsedSelectionPosition(modelSelection, viewSelection, viewElement, consumable, consumableName) {\n  if (!modelSelection.isCollapsed) {\n    return;\n  }\n\n  if (!consumable.consume(modelSelection, consumableName)) {\n    return;\n  }\n\n  var viewPosition = viewSelection.getFirstPosition();\n  viewPosition = _writer2.default.wrapPosition(viewPosition, viewElement);\n\n  viewSelection.removeAllRanges();\n  viewSelection.addRange(new _range2.default(viewPosition, viewPosition));\n}\n\n/**\n * Function factory, creates a converter that clears artifacts after the previous\n * {@link module:engine/model/selection~Selection model selection} conversion. It removes all empty\n * {@link module:engine/view/attributeelement~AttributeElement view attribute elements} and merge sibling attributes at all start and end\n * positions of all ranges.\n *\n *\t\t   <p><strong>^</strong></p>\n *\t\t-> <p>^</p>\n *\n *\t\t   <p><strong>foo</strong>^<strong>bar</strong>bar</p>\n *\t\t-> <p><strong>foo^bar<strong>bar</p>\n *\n *\t\t   <p><strong>foo</strong><em>^</em><strong>bar</strong>bar</p>\n *\t\t-> <p><strong>foo^bar<strong>bar</p>\n *\n * This listener should be assigned before any converter for the new selection:\n *\n *\t\tmodelDispatcher.on( 'selection', clearAttributes() );\n *\n * See {@link module:engine/conversion/model-selection-to-view-converters~convertCollapsedSelection}\n * which do the opposite by breaking attributes in the selection position.\n *\n * @returns {Function} Selection converter.\n */\nfunction clearAttributes() {\n  return function (evt, data, consumable, conversionApi) {\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = conversionApi.viewSelection.getRanges()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var range = _step2.value;\n\n        // Not collapsed selection should not have artifacts.\n        if (range.isCollapsed) {\n          // Position might be in the node removed by the view writer.\n          if (range.end.parent.document) {\n            _writer2.default.mergeAttributes(range.start);\n          }\n        }\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2.return) {\n          _iterator2.return();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n\n    conversionApi.viewSelection.removeAllRanges();\n  };\n}\n\n/**\n * Function factory, creates a converter that clears fake selection marking after the previous\n * {@link module:engine/model/selection~Selection model selection} conversion.\n */\nfunction clearFakeSelection() {\n  return function (evt, data, consumable, conversionApi) {\n    return conversionApi.viewSelection.setFake(false);\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/conversion/model-selection-to-view-converters.js\n// module id = 160\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\nn\n/**\n * @module engine/conversion/modelconversiondispatcher\n */\n\nvar _modelconsumable = require('./modelconsumable');\n\nvar _modelconsumable2 = _interopRequireDefault(_modelconsumable);\n\nvar _range = require('../model/range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _position = require('../model/position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _documentfragment = require('../model/documentfragment');\n\nvar _documentfragment2 = _interopRequireDefault(_documentfragment);\n\nvar _emittermixin = require('@ckeditor/ckeditor5-utils/src/emittermixin');\n\nvar _emittermixin2 = _interopRequireDefault(_emittermixin);\n\nvar _mix = require('@ckeditor/ckeditor5-utils/src/mix');\n\nvar _mix2 = _interopRequireDefault(_mix);\n\nvar _extend = require('@ckeditor/ckeditor5-utils/src/lib/lodash/extend');\n\nvar _extend2 = _interopRequireDefault(_extend);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * `ModelConversionDispatcher` is a central point of {@link module:engine/model/model model} conversion, which is\n * a process of reacting to changes in the model and reflecting them by listeners that listen to those changes.\n * In default application, {@link module:engine/model/model model} is converted to {@link module:engine/view/view view}. This means\n * that changes in the model are reflected by changing the view (i.e. adding view nodes or changing attributes on view elements).\n *\n * During conversion process, `ModelConversionDispatcher` fires data-manipulation events, basing on state of the model and prepares\n * data for those events. It is important to note that the events are connected with \"change actions\" like \"inserting\"\n * or \"removing\" so one might say that we are converting \"changes\". This is in contrary to view to model conversion,\n * where we convert view nodes (the structure, not \"changes\" to the view). Note, that because changes are converted\n * and not the structure itself, there is a need to have a mapping between model and the structure on which changes are\n * reflected. To map elements during model to view conversion use {@link module:engine/conversion/mapper~Mapper}.\n *\n * The main use for this class is to listen to {@link module:engine/model/document~Document#event:change Document change event}, process it\n * and then fire specific events telling what exactly has changed. For those events, `ModelConversionDispatcher`\n * creates {@link module:engine/conversion/modelconsumable~ModelConsumable list of consumable values} that should be handled by event\n * callbacks. Those events are listened to by model-to-view converters which convert changes done in the\n * {@link module:engine/model/model model} to changes in the {@link module:engine/view/view view}. `ModelConversionController` also checks\n * the current state of consumables, so it won't fire events for parts of model that were already consumed. This is\n * especially important in callbacks that consume multiple values. See {@link module:engine/conversion/modelconsumable~ModelConsumable}\n * for an example of such callback.\n *\n * Although the primary usage for this class is the model-to-view conversion, `ModelConversionDispatcher` can be used\n * to build custom data processing pipelines that converts model to anything that is needed. Existing model structure can\n * be used to generate events (listening to {@link module:engine/model/document~Document#event:change Document change event} is not\n * required)\n * and custom callbacks can be added to the events (these does not have to be limited to changes in the view).\n *\n * When providing your own event listeners for `ModelConversionDispatcher` keep in mind that any callback that had\n * {@link module:engine/conversion/modelconsumable~ModelConsumable#consume consumed} a value from consumable (and did some changes, i.e. to\n * the view) should also stop the event. This is because whenever a callback is fired it is assumed that there is something\n * to be consumed. Thanks to that approach, you do not have to test whether there is anything to consume at the beginning\n * of your listener callback.\n *\n * Example of providing a converter for `ModelConversionDispatcher`:\n *\n *\t\t// We will convert inserting \"paragraph\" model element into the model.\n *\t\tmodelDispatcher.on( 'insert:paragraph', ( evt, data, consumable, conversionApi ) => {\n *\t\t\t// Remember to consume the part of consumable.\n *\t\t\tconsumable.consume( data.item, 'insert' );\n *\n *\t\t\t// Translate position in model to position in the view.\n *\t\t\tconst viewPosition = conversionApi.mapper.toViewPosition( data.range.start );\n *\n *\t\t\t// Create a P element (note that this converter is for inserting P elements -> 'insert:paragraph').\n *\t\t\tconst viewElement = new ViewElement( 'p' );\n *\n *\t\t\t// Bind the newly created view element to model element so positions will map accordingly in future.\n *\t\t\tconversionApi.mapper.bindElements( data.item, viewElement );\n *\n *\t\t\t// Add the newly created view element to the view.\n *\t\t\tviewWriter.insert( viewPosition, viewElement );\n *\n *\t\t\t// Remember to stop the event propagation if the data.item was consumed.\n *\t\t\tevt.stop();\n *\t\t} );\n *\n * Callback that \"overrides\" other callback:\n *\n *\t\t// Special converter for `linkHref` attribute added on custom `quote` element. Note, that this\n *\t\t// attribute may be the same as the attribute added by other features (link feature in this case).\n *\t\t// It might be even added by that feature! It makes sense that a part of content that is a quote is linked\n *\t\t// to an external source so it makes sense that link feature works on the custom quote element.\n *\t\t// However, we have to make sure that the attributes added by link feature are correctly converted.\n *\t\t// To block default `linkHref` conversion we have to:\n *\t\t// 1) add this callback with higher priority than link feature callback,\n *\t\t// 2) consume `linkHref` attribute add change.\n *\t\tmodelConversionDispatcher.on( 'addAttribute:linkHref:quote', ( evt, data, consumable, conversionApi ) => {\n *\t\t\tconsumable.consume( data.item, 'addAttribute:linkHref' );\n *\n *\t\t\t// Create a button that will represent the `linkHref` attribute.\n *\t\t\tlet viewSourceBtn = new ViewElement( 'a', {\n *\t\t\t\thref: data.item.getAttribute( 'linkHref' ),\n *\t\t\t\ttitle: 'source'\n *\t\t\t} );\n *\n *\t\t\t// Add a class for the button.\n *\t\t\tviewSourceBtn.addClass( 'source' );\n *\n *\t\t\t// Insert the button using writer API.\n *\t\t\t// If `addAttribute` event is fired by\n *\t\t\t// `module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#convertInsert` it is fired\n *\t\t\t// after `data.item` insert conversion was done. If the event is fired due to attribute insertion coming from\n *\t\t\t// different source, `data.item` already existed. This means we are safe to get `viewQuote` from mapper.\n *\t\t\tconst viewQuote = conversionApi.mapper.toViewElement( data.item );\n *\t\t\tconst position = new ViewPosition( viewQuote, viewQuote.childCount );\n *\t\t\tviewWriter.insert( position, viewSourceBtn );\n *\n *\t\t\tevt.stop();\n *\t\t}, { priority: 'high' } );\n */\nvar ModelConversionDispatcher = function () {\n\t/**\n  * Creates a `ModelConversionDispatcher` that operates using passed API.\n  *\n  * @param {module:engine/model/document~Document} modelDocument Model document instance bound with this dispatcher.\n  * @param {Object} [conversionApi] Interface passed by dispatcher to the events callbacks.\n  */\n\tfunction ModelConversionDispatcher(modelDocument) {\n\t\tvar conversionApi = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\t_classCallCheck(this, ModelConversionDispatcher);\n\n\t\t/**\n   * Model document instance bound with this dispatcher.\n   *\n   * @private\n   * @member {module:engine/model/document~Document}\n   */\n\t\tthis._modelDocument = modelDocument;\n\n\t\t/**\n   * Interface passed by dispatcher to the events callbacks.\n   *\n   * @member {Object}\n   */\n\t\tthis.conversionApi = (0, _extend2.default)({ dispatcher: this }, conversionApi);\n\t}\n\n\t/**\n  * Prepares data and fires a proper event.\n  *\n  * The method is crafted to take use of parameters passed in {@link module:engine/model/document~Document#event:change Document change\n  * event}.\n  *\n  * @see module:engine/model/document~Document#event:change\n  * @fires insert\n  * @fires remove\n  * @fires addAttribute\n  * @fires removeAttribute\n  * @fires changeAttribute\n  * @fires addMarker\n  * @param {String} type Change type.\n  * @param {Object} data Additional information about the change.\n  */\n\n\n\t_createClass(ModelConversionDispatcher, [{\n\t\tkey: 'convertChange',\n\t\tvalue: function convertChange(type, data) {\n\t\t\t// Do not convert changes if they happen in graveyard.\n\t\t\t// Graveyard is a special root that has no view / no other representation and changes done in it should not be converted.\n\t\t\tif (type !== 'remove' && data.range && data.range.root.rootName == '$graveyard') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (type == 'remove' && data.sourcePosition.root.rootName == '$graveyard') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (type == 'rename' && data.element.root.rootName == '$graveyard') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// We can safely dispatch changes.\n\t\t\tif (type == 'insert' || type == 'reinsert') {\n\t\t\t\tthis.convertInsertion(data.range);\n\t\t\t} else if (type == 'move') {\n\t\t\t\tthis.convertMove(data.sourcePosition, data.range);\n\t\t\t} else if (type == 'remove') {\n\t\t\t\tthis.convertRemove(data.sourcePosition, data.range);\n\t\t\t} else if (type == 'addAttribute' || type == 'removeAttribute' || type == 'changeAttribute') {\n\t\t\t\tthis.convertAttribute(type, data.range, data.key, data.oldValue, data.newValue);\n\t\t\t} else if (type == 'rename') {\n\t\t\t\tthis.convertRename(data.element, data.oldName);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Starts conversion of insertion-change on given `range`.\n   *\n   * Analyzes given range and fires insertion-connected events with data based on that range.\n   *\n   * **Note**: This method will fire separate events for node insertion and attributes insertion. All\n   * attributes that are set on inserted nodes are treated like they were added just after node insertion.\n   *\n   * @fires insert\n   * @fires addAttribute\n   * @fires addMarker\n   * @param {module:engine/model/range~Range} range Inserted range.\n   */\n\n\t}, {\n\t\tkey: 'convertInsertion',\n\t\tvalue: function convertInsertion(range) {\n\t\t\t// Create a list of things that can be consumed, consisting of nodes and their attributes.\n\t\t\tvar consumable = this._createInsertConsumable(range);\n\n\t\t\t// Fire a separate insert event for each node and text fragment contained in the range.\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = range[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar value = _step.value;\n\n\t\t\t\t\tvar item = value.item;\n\t\t\t\t\tvar itemRange = _range2.default.createFromPositionAndShift(value.previousPosition, value.length);\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\titem: item,\n\t\t\t\t\t\trange: itemRange\n\t\t\t\t\t};\n\n\t\t\t\t\tthis._testAndFire('insert', data, consumable);\n\n\t\t\t\t\t// Fire a separate addAttribute event for each attribute that was set on inserted items.\n\t\t\t\t\t// This is important because most attributes converters will listen only to add/change/removeAttribute events.\n\t\t\t\t\t// If we would not add this part, attributes on inserted nodes would not be converted.\n\t\t\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\t\t\tvar _didIteratorError3 = false;\n\t\t\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (var _iterator3 = item.getAttributeKeys()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\t\t\tvar key = _step3.value;\n\n\t\t\t\t\t\t\tdata.attributeKey = key;\n\t\t\t\t\t\t\tdata.attributeOldValue = null;\n\t\t\t\t\t\t\tdata.attributeNewValue = item.getAttribute(key);\n\n\t\t\t\t\t\t\tthis._testAndFire('addAttribute:' + key, data, consumable);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t\t\t_iteratorError3 = err;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\tvar _didIteratorError2 = false;\n\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator2 = this._modelDocument.markers[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\tvar marker = _step2.value;\n\n\t\t\t\t\tvar markerRange = marker.getRange();\n\n\t\t\t\t\t// Check if inserted content is inserted into a marker.\n\t\t\t\t\tif (markerRange.containsPosition(range.start)) {\n\t\t\t\t\t\tthis.convertMarker('addMarker', marker.name, markerRange.getIntersection(range));\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if inserted content contains a marker.\n\t\t\t\t\tif (range.containsRange(markerRange, true)) {\n\t\t\t\t\t\tthis.convertMarker('addMarker', marker.name, markerRange);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t_iteratorError2 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Starts conversion of move-change of given `range`, that was moved from given `sourcePosition`.\n   *\n   * Fires {@link ~#event:remove remove event} and {@link ~#event:insert insert event} based on passed parameters.\n   *\n   * @fires remove\n   * @fires insert\n   * @param {module:engine/model/position~Position} sourcePosition The original position from which the range was moved.\n   * @param {module:engine/model/range~Range} range The range containing the moved content.\n   */\n\n\t}, {\n\t\tkey: 'convertMove',\n\t\tvalue: function convertMove(sourcePosition, range) {\n\t\t\t// Move left – convert insertion first (#847).\n\t\t\tif (range.start.isBefore(sourcePosition)) {\n\t\t\t\tthis.convertInsertion(range);\n\n\t\t\t\tvar sourcePositionAfterInsertion = sourcePosition._getTransformedByInsertion(range.start, range.end.offset - range.start.offset);\n\n\t\t\t\tthis.convertRemove(sourcePositionAfterInsertion, range);\n\t\t\t} else {\n\t\t\t\tthis.convertRemove(sourcePosition, range);\n\t\t\t\tthis.convertInsertion(range);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Starts conversion of remove-change of given `range`, that was removed from given `sourcePosition`.\n   *\n   * Fires {@link ~#event:remove remove event} with data based on passed values.\n   *\n   * @fires remove\n   * @param {module:engine/model/position~Position} sourcePosition Position from where the range has been removed.\n   * @param {module:engine/model/range~Range} range Removed range (after remove, in\n   * {@link module:engine/model/document~Document#graveyard graveyard root}).\n   */\n\n\t}, {\n\t\tkey: 'convertRemove',\n\t\tvalue: function convertRemove(sourcePosition, range) {\n\t\t\tvar consumable = this._createConsumableForRange(range, 'remove');\n\n\t\t\tvar _iteratorNormalCompletion4 = true;\n\t\t\tvar _didIteratorError4 = false;\n\t\t\tvar _iteratorError4 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator4 = range.getItems({ shallow: true })[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\t\t\tvar item = _step4.value;\n\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\tsourcePosition: sourcePosition,\n\t\t\t\t\t\titem: item\n\t\t\t\t\t};\n\n\t\t\t\t\tthis._testAndFire('remove', data, consumable);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError4 = true;\n\t\t\t\t_iteratorError4 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t\t\t_iterator4.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError4) {\n\t\t\t\t\t\tthrow _iteratorError4;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Starts conversion of attribute-change on given `range`.\n   *\n   * Analyzes given attribute change and fires attributes-connected events with data based on passed values.\n   *\n   * @fires addAttribute\n   * @fires removeAttribute\n   * @fires changeAttribute\n   * @param {String} type Change type. Possible values: `addAttribute`, `removeAttribute`, `changeAttribute`.\n   * @param {module:engine/model/range~Range} range Changed range.\n   * @param {String} key Attribute key.\n   * @param {*} oldValue Attribute value before the change or `null` if attribute has not been set.\n   * @param {*} newValue New attribute value or `null` if attribute has been removed.\n   */\n\n\t}, {\n\t\tkey: 'convertAttribute',\n\t\tvalue: function convertAttribute(type, range, key, oldValue, newValue) {\n\t\t\t// Create a list with attributes to consume.\n\t\t\tvar consumable = this._createConsumableForRange(range, type + ':' + key);\n\n\t\t\t// Create a separate attribute event for each node in the range.\n\t\t\tvar _iteratorNormalCompletion5 = true;\n\t\t\tvar _didIteratorError5 = false;\n\t\t\tvar _iteratorError5 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator5 = range[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t\t\t\t\tvar value = _step5.value;\n\n\t\t\t\t\tvar item = value.item;\n\t\t\t\t\tvar itemRange = _range2.default.createFromPositionAndShift(value.previousPosition, value.length);\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\titem: item,\n\t\t\t\t\t\trange: itemRange,\n\t\t\t\t\t\tattributeKey: key,\n\t\t\t\t\t\tattributeOldValue: oldValue,\n\t\t\t\t\t\tattributeNewValue: newValue\n\t\t\t\t\t};\n\n\t\t\t\t\tthis._testAndFire(type + ':' + key, data, consumable);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError5 = true;\n\t\t\t\t_iteratorError5 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t\t\t\t\t\t_iterator5.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError5) {\n\t\t\t\t\t\tthrow _iteratorError5;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Starts conversion of rename-change of given `element` that had given `oldName`.\n   *\n   * Fires {@link ~#event:remove remove event} and {@link ~#event:insert insert event} based on passed values.\n   *\n   * @fires remove\n   * @fires insert\n   * @param {module:engine/model/element~Element} element Renamed element.\n   * @param {String} oldName Name of the renamed element before it was renamed.\n   */\n\n\t}, {\n\t\tkey: 'convertRename',\n\t\tvalue: function convertRename(element, oldName) {\n\t\t\t// Create fake element that will be used to fire remove event. The fake element will have the old element name.\n\t\t\tvar fakeElement = element.clone(true);\n\t\t\tfakeElement.name = oldName;\n\n\t\t\t// Bind fake element with original view element so the view element will be removed.\n\t\t\tthis.conversionApi.mapper.bindElements(fakeElement, this.conversionApi.mapper.toViewElement(element));\n\n\t\t\t// Create fake document fragment so a range can be created on fake element.\n\t\t\tvar fakeDocumentFragment = new _documentfragment2.default();\n\t\t\tfakeDocumentFragment.appendChildren(fakeElement);\n\n\t\t\tthis.convertRemove(_position2.default.createBefore(element), _range2.default.createOn(fakeElement));\n\t\t\tthis.convertInsertion(_range2.default.createOn(element));\n\t\t}\n\n\t\t/**\n   * Starts selection conversion.\n   *\n   * Fires events for given {@link module:engine/model/selection~Selection selection} to start selection conversion.\n   *\n   * @fires selection\n   * @fires selectionAttribute\n   * @param {module:engine/model/selection~Selection} selection Selection to convert.\n   */\n\n\t}, {\n\t\tkey: 'convertSelection',\n\t\tvalue: function convertSelection(selection) {\n\t\t\tvar markers = Array.from(this._modelDocument.markers.getMarkersAtPosition(selection.getFirstPosition()));\n\t\t\tvar consumable = this._createSelectionConsumable(selection, markers);\n\n\t\t\tthis.fire('selection', { selection: selection }, consumable, this.conversionApi);\n\n\t\t\tvar _iteratorNormalCompletion6 = true;\n\t\t\tvar _didIteratorError6 = false;\n\t\t\tvar _iteratorError6 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator6 = markers[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t\t\t\t\tvar marker = _step6.value;\n\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\tselection: selection,\n\t\t\t\t\t\tname: marker.name\n\t\t\t\t\t};\n\n\t\t\t\t\tif (consumable.test(selection, 'selectionMarker:' + marker.name)) {\n\t\t\t\t\t\tthis.fire('selectionMarker:' + marker.name, data, consumable, this.conversionApi);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError6 = true;\n\t\t\t\t_iteratorError6 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion6 && _iterator6.return) {\n\t\t\t\t\t\t_iterator6.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError6) {\n\t\t\t\t\t\tthrow _iteratorError6;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar _iteratorNormalCompletion7 = true;\n\t\t\tvar _didIteratorError7 = false;\n\t\t\tvar _iteratorError7 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator7 = selection.getAttributeKeys()[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n\t\t\t\t\tvar key = _step7.value;\n\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\tselection: selection,\n\t\t\t\t\t\tkey: key,\n\t\t\t\t\t\tvalue: selection.getAttribute(key)\n\t\t\t\t\t};\n\n\t\t\t\t\t// Do not fire event if the attribute has been consumed.\n\t\t\t\t\tif (consumable.test(selection, 'selectionAttribute:' + data.key)) {\n\t\t\t\t\t\tthis.fire('selectionAttribute:' + data.key, data, consumable, this.conversionApi);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError7 = true;\n\t\t\t\t_iteratorError7 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion7 && _iterator7.return) {\n\t\t\t\t\t\t_iterator7.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError7) {\n\t\t\t\t\t\tthrow _iteratorError7;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Starts marker-conversion.\n   *\n   * Fires {@link ~#event:addMarker addMarker event} or {@link ~#event:removeMarker removeMarker event} based on\n   * given `type` with data based on passed parameters.\n   *\n   * @fires addMarker\n   * @fires removeMarker\n   * @param {'addMarker'|'removeMarker'} type Change type.\n   * @param {String} name Marker name.\n   * @param {module:engine/model/range~Range} range Marker range.\n   */\n\n\t}, {\n\t\tkey: 'convertMarker',\n\t\tvalue: function convertMarker(type, name, range) {\n\t\t\t// Do not convert if range is in graveyard or not in the document (e.g. in DocumentFragment).\n\t\t\tif (!range.root.document || range.root.rootName == '$graveyard') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar consumable = this._createMarkerConsumable(type, range);\n\t\t\tvar data = { name: name, range: range };\n\n\t\t\tthis.fire(type + ':' + name, data, consumable, this.conversionApi);\n\t\t}\n\n\t\t/**\n   * Creates {@link module:engine/conversion/modelconsumable~ModelConsumable} with values to consume from given range, assuming that\n   * given range has just been inserted to the model.\n   *\n   * @private\n   * @param {module:engine/model/range~Range} range Inserted range.\n   * @returns {module:engine/conversion/modelconsumable~ModelConsumable} Values to consume.\n   */\n\n\t}, {\n\t\tkey: '_createInsertConsumable',\n\t\tvalue: function _createInsertConsumable(range) {\n\t\t\tvar consumable = new _modelconsumable2.default();\n\n\t\t\tvar _iteratorNormalCompletion8 = true;\n\t\t\tvar _didIteratorError8 = false;\n\t\t\tvar _iteratorError8 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator8 = range[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n\t\t\t\t\tvar value = _step8.value;\n\n\t\t\t\t\tvar item = value.item;\n\n\t\t\t\t\tconsumable.add(item, 'insert');\n\n\t\t\t\t\tvar _iteratorNormalCompletion9 = true;\n\t\t\t\t\tvar _didIteratorError9 = false;\n\t\t\t\t\tvar _iteratorError9 = undefined;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (var _iterator9 = item.getAttributeKeys()[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n\t\t\t\t\t\t\tvar key = _step9.value;\n\n\t\t\t\t\t\t\tconsumable.add(item, 'addAttribute:' + key);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t_didIteratorError9 = true;\n\t\t\t\t\t\t_iteratorError9 = err;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion9 && _iterator9.return) {\n\t\t\t\t\t\t\t\t_iterator9.return();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (_didIteratorError9) {\n\t\t\t\t\t\t\t\tthrow _iteratorError9;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError8 = true;\n\t\t\t\t_iteratorError8 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion8 && _iterator8.return) {\n\t\t\t\t\t\t_iterator8.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError8) {\n\t\t\t\t\t\tthrow _iteratorError8;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn consumable;\n\t\t}\n\n\t\t/**\n   * Creates {@link module:engine/conversion/modelconsumable~ModelConsumable} with values of given `type`\n   * for each item from given `range`.\n   *\n   * @private\n   * @param {module:engine/model/range~Range} range Affected range.\n   * @param {String} type Consumable type.\n   * @returns {module:engine/conversion/modelconsumable~ModelConsumable} Values to consume.\n   */\n\n\t}, {\n\t\tkey: '_createConsumableForRange',\n\t\tvalue: function _createConsumableForRange(range, type) {\n\t\t\tvar consumable = new _modelconsumable2.default();\n\n\t\t\tvar _iteratorNormalCompletion10 = true;\n\t\t\tvar _didIteratorError10 = false;\n\t\t\tvar _iteratorError10 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator10 = range.getItems()[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n\t\t\t\t\tvar item = _step10.value;\n\n\t\t\t\t\tconsumable.add(item, type);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError10 = true;\n\t\t\t\t_iteratorError10 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion10 && _iterator10.return) {\n\t\t\t\t\t\t_iterator10.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError10) {\n\t\t\t\t\t\tthrow _iteratorError10;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn consumable;\n\t\t}\n\n\t\t/**\n   * Creates {@link module:engine/conversion/modelconsumable~ModelConsumable} with selection consumable values.\n   *\n   * @private\n   * @param {module:engine/model/selection~Selection} selection Selection to create consumable from.\n   * @param {Iterable.<module:engine/model/markercollection~Marker>} markers Markers which contains selection.\n   * @returns {module:engine/conversion/modelconsumable~ModelConsumable} Values to consume.\n   */\n\n\t}, {\n\t\tkey: '_createSelectionConsumable',\n\t\tvalue: function _createSelectionConsumable(selection, markers) {\n\t\t\tvar consumable = new _modelconsumable2.default();\n\n\t\t\tconsumable.add(selection, 'selection');\n\n\t\t\tvar _iteratorNormalCompletion11 = true;\n\t\t\tvar _didIteratorError11 = false;\n\t\t\tvar _iteratorError11 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator11 = markers[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n\t\t\t\t\tvar marker = _step11.value;\n\n\t\t\t\t\tconsumable.add(selection, 'selectionMarker:' + marker.name);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError11 = true;\n\t\t\t\t_iteratorError11 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion11 && _iterator11.return) {\n\t\t\t\t\t\t_iterator11.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError11) {\n\t\t\t\t\t\tthrow _iteratorError11;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar _iteratorNormalCompletion12 = true;\n\t\t\tvar _didIteratorError12 = false;\n\t\t\tvar _iteratorError12 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator12 = selection.getAttributeKeys()[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n\t\t\t\t\tvar key = _step12.value;\n\n\t\t\t\t\tconsumable.add(selection, 'selectionAttribute:' + key);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError12 = true;\n\t\t\t\t_iteratorError12 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion12 && _iterator12.return) {\n\t\t\t\t\t\t_iterator12.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError12) {\n\t\t\t\t\t\tthrow _iteratorError12;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn consumable;\n\t\t}\n\n\t\t/**\n   * Creates {@link module:engine/conversion/modelconsumable~ModelConsumable} for adding or removing marker on given `range`.\n   *\n   * @private\n   * @param {'addMarker'|'removeMarker'} type Change type.\n   * @param {module:engine/model/range~Range} range Range on which marker was added or removed.\n   * @returns {module:engine/conversion/modelconsumable~ModelConsumable} Values to consume.\n   */\n\n\t}, {\n\t\tkey: '_createMarkerConsumable',\n\t\tvalue: function _createMarkerConsumable(type, range) {\n\t\t\tvar consumable = new _modelconsumable2.default();\n\n\t\t\tconsumable.add(range, type);\n\n\t\t\treturn consumable;\n\t\t}\n\n\t\t/**\n   * Tests passed `consumable` to check whether given event can be fired and if so, fires it.\n   *\n   * @private\n   * @fires insert\n   * @fires remove\n   * @fires addAttribute\n   * @fires removeAttribute\n   * @fires changeAttribute\n   * @param {String} type Event type.\n   * @param {Object} data Event data.\n   * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n   */\n\n\t}, {\n\t\tkey: '_testAndFire',\n\t\tvalue: function _testAndFire(type, data, consumable) {\n\t\t\tif (!consumable.test(data.item, type)) {\n\t\t\t\t// Do not fire event if the item was consumed.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar name = data.item.name || '$text';\n\n\t\t\tthis.fire(type + ':' + name, data, consumable, this.conversionApi);\n\t\t}\n\n\t\t/**\n   * Fired for inserted nodes.\n   *\n   * `insert` is a namespace for a class of events. Names of actually called events follow this pattern:\n   * `insert:<name>`. `name` is either `'$text'` when one or more characters has been inserted or\n   * {@link module:engine/model/element~Element#name name} of inserted element.\n   *\n   * This way listeners can either listen to a general `insert` event or specific event (for example `insert:paragraph`).\n   *\n   * @event insert\n   * @param {Object} data Additional information about the change.\n   * @param {module:engine/model/item~Item} data.item Inserted item.\n   * @param {module:engine/model/range~Range} data.range Range spanning over inserted item.\n   * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n   * @param {Object} conversionApi Conversion interface to be used by callback, passed in `ModelConversionDispatcher` constructor.\n   */\n\n\t\t/**\n   * Fired for removed nodes.\n   *\n   * `remove` is a namespace for a class of events. Names of actually called events follow this pattern:\n   * `remove:<name>`. `name` is either `'$text'` when one or more characters has been removed or the\n   * {@link module:engine/model/element~Element#name name} of removed element.\n   *\n   * This way listeners can either listen to a general `remove` event or specific event (for example `remove:paragraph`).\n   *\n   * @event remove\n   * @param {Object} data Additional information about the change.\n   * @param {module:engine/model/position~Position} data.sourcePosition Position from where the range has been removed.\n   * @param {module:engine/model/range~Range} data.range Removed range (in {@link module:engine/model/document~Document#graveyard\n   * graveyard root}).\n   * @param {Object} conversionApi Conversion interface to be used by callback, passed in `ModelConversionDispatcher` constructor.\n   */\n\n\t\t/**\n   * Fired when attribute has been added on a node.\n   *\n   * `addAttribute` is a namespace for a class of events. Names of actually called events follow this pattern:\n   * `addAttribute:<attributeKey>:<name>`. `attributeKey` is the key of added attribute. `name` is either `'$text'`\n   * if attribute was added on one or more characters, or the {@link module:engine/model/element~Element#name name} of\n   * the element on which attribute was added.\n   *\n   * This way listeners can either listen to a general `addAttribute:bold` event or specific event\n   * (for example `addAttribute:link:image`).\n   *\n   * @event addAttribute\n   * @param {Object} data Additional information about the change.\n   * @param {module:engine/model/item~Item} data.item Changed item.\n   * @param {module:engine/model/range~Range} data.range Range spanning over changed item.\n   * @param {String} data.attributeKey Attribute key.\n   * @param {null} data.attributeOldValue Attribute value before the change - always `null`. Kept for the sake of unifying events.\n   * @param {*} data.attributeNewValue New attribute value.\n   * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n   * @param {Object} conversionApi Conversion interface to be used by callback, passed in `ModelConversionDispatcher` constructor.\n   */\n\n\t\t/**\n   * Fired when attribute has been removed from a node.\n   *\n   * `removeAttribute` is a namespace for a class of events. Names of actually called events follow this pattern:\n   * `removeAttribute:<attributeKey>:<name>`. `attributeKey` is the key of removed attribute. `name` is either `'$text'`\n   * if attribute was removed from one or more characters, or the {@link module:engine/model/element~Element#name name} of\n   * the element from which attribute was removed.\n   *\n   * This way listeners can either listen to a general `removeAttribute:bold` event or specific event\n   * (for example `removeAttribute:link:image`).\n   *\n   * @event removeAttribute\n   * @param {Object} data Additional information about the change.\n   * @param {module:engine/model/item~Item} data.item Changed item.\n   * @param {module:engine/model/range~Range} data.range Range spanning over changed item.\n   * @param {String} data.attributeKey Attribute key.\n   * @param {*} data.attributeOldValue Attribute value before it was removed.\n   * @param {null} data.attributeNewValue New attribute value - always `null`. Kept for the sake of unifying events.\n   * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n   * @param {Object} conversionApi Conversion interface to be used by callback, passed in `ModelConversionDispatcher` constructor.\n   */\n\n\t\t/**\n   * Fired when attribute of a node has been changed.\n   *\n   * `changeAttribute` is a namespace for a class of events. Names of actually called events follow this pattern:\n   * `changeAttribute:<attributeKey>:<name>`. `attributeKey` is the key of changed attribute. `name` is either `'$text'`\n   * if attribute was changed on one or more characters, or the {@link module:engine/model/element~Element#name name} of\n   * the element on which attribute was changed.\n   *\n   * This way listeners can either listen to a general `changeAttribute:link` event or specific event\n   * (for example `changeAttribute:link:image`).\n   *\n   * @event changeAttribute\n   * @param {Object} data Additional information about the change.\n   * @param {module:engine/model/item~Item} data.item Changed item.\n   * @param {module:engine/model/range~Range} data.range Range spanning over changed item.\n   * @param {String} data.attributeKey Attribute key.\n   * @param {*} data.attributeOldValue Attribute value before the change.\n   * @param {*} data.attributeNewValue New attribute value.\n   * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n   * @param {Object} conversionApi Conversion interface to be used by callback, passed in `ModelConversionDispatcher` constructor.\n   */\n\n\t\t/**\n   * Fired for {@link module:engine/model/selection~Selection selection} changes.\n   *\n   * @event selection\n   * @param {module:engine/model/selection~Selection} selection `Selection` instance that is converted.\n   * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n   * @param {Object} conversionApi Conversion interface to be used by callback, passed in `ModelConversionDispatcher` constructor.\n   */\n\n\t\t/**\n   * Fired for {@link module:engine/model/selection~Selection selection} attributes changes.\n   *\n   * `selectionAttribute` is a namespace for a class of events. Names of actually called events follow this pattern:\n   * `selectionAttribute:<attributeKey>`. `attributeKey` is the key of selection attribute. This way listen can listen to\n   * certain attribute, i.e. `addAttribute:bold`.\n   *\n   * @event selectionAttribute\n   * @param {Object} data Additional information about the change.\n   * @param {module:engine/model/selection~Selection} data.selection Selection that is converted.\n   * @param {String} data.attributeKey Key of changed attribute.\n   * @param {*} data.attributeValue Value of changed attribute.\n   * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n   * @param {Object} conversionApi Conversion interface to be used by callback, passed in `ModelConversionDispatcher` constructor.\n   */\n\n\t\t/**\n   * Fired when a new marker is added to the model.\n   *\n   * `addMarker` is a namespace for a class of events. Names of actually called events follow this pattern:\n   * `addMarker:<markerName>`. By specifying certain marker names, you can make the events even more gradual. For example,\n   * markers can be named `foo:abc`, `foo:bar`, then it is possible to listen to `addMarker:foo` or `addMarker:foo:abc` and\n   * `addMarker:foo:bar` events.\n   *\n   * @event addMarker\n   * @param {Object} data Additional information about the change.\n   * @param {String} data.name Marker name.\n   * @param {module:engine/model/range~Range} data.range Marker range.\n   * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n   * @param {Object} conversionApi Conversion interface to be used by callback, passed in `ModelConversionDispatcher` constructor.\n   */\n\n\t\t/**\n   * Fired when marker is removed from the model.\n   *\n   * `removeMarker` is a namespace for a class of events. Names of actually called events follow this pattern:\n   * `removeMarker:<markerName>`. By specifying certain marker names, you can make the events even more gradual. For example,\n   * markers can be named `foo:abc`, `foo:bar`, then it is possible to listen to `removeMarker:foo` or `removeMarker:foo:abc` and\n   * `removeMarker:foo:bar` events.\n   *\n   * @event removeMarker\n   * @param {Object} data Additional information about the change.\n   * @param {String} data.name Marker name.\n   * @param {module:engine/model/range~Range} data.range Marker range.\n   * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n   * @param {Object} conversionApi Conversion interface to be used by callback, passed in `ModelConversionDispatcher` constructor.\n   */\n\n\t}]);\n\n\treturn ModelConversionDispatcher;\n}();\n\nexports.default = ModelConversionDispatcher;\n\n\n(0, _mix2.default)(ModelConversionDispatcher, _emittermixin2.default);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/conversion/modelconversiondispatcher.js\n// module id = 161\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\nn\n/**\n * @module engine/dataprocessor/htmldataprocessor\n */\n\n/* globals document, DOMParser */\n\nvar _basichtmlwriter = require('./basichtmlwriter');\n\nvar _basichtmlwriter2 = _interopRequireDefault(_basichtmlwriter);\n\nvar _domconverter = require('../view/domconverter');\n\nvar _domconverter2 = _interopRequireDefault(_domconverter);\n\nvar _filler = require('../view/filler');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * HtmlDataProcessor class.\n * This data processor implementation uses HTML as input/output data.\n *\n * @implements module:engine/dataprocessor/dataprocessor~DataProcessor\n */\nvar HtmlDataProcessor = function () {\n\t/**\n  * Creates a new instance of the HtmlDataProcessor class.\n  */\n\tfunction HtmlDataProcessor() {\n\t\t_classCallCheck(this, HtmlDataProcessor);\n\n\t\t/**\n   * DOMParser instance used to parse HTML string to HTMLDocument.\n   *\n   * @private\n   * @member {DOMParser}\n   */\n\t\tthis._domParser = new DOMParser();\n\n\t\t/**\n   * DOM converter used to convert DOM elements to view elements.\n   *\n   * @private\n   * @member\n   */\n\t\tthis._domConverter = new _domconverter2.default({ blockFiller: _filler.NBSP_FILLER });\n\n\t\t/**\n   * BasicHtmlWriter instance used to convert DOM elements to HTML string.\n   *\n   * @private\n   * @member {module:engine/dataprocessor/basichtmlwriter~BasicHtmlWriter}\n   */\n\t\tthis._htmlWriter = new _basichtmlwriter2.default();\n\t}\n\n\t/**\n  * Converts provided {@link module:engine/view/documentfragment~DocumentFragment DocumentFragment}\n  * to data format - in this case HTML string.\n  *\n  * @param {module:engine/view/documentfragment~DocumentFragment} viewFragment\n  * @returns {String} HTML string.\n  */\n\n\n\t_createClass(HtmlDataProcessor, [{\n\t\tkey: 'toData',\n\t\tvalue: function toData(viewFragment) {\n\t\t\t// Convert view DocumentFragment to DOM DocumentFragment.\n\t\t\tvar domFragment = this._domConverter.viewToDom(viewFragment, document);\n\n\t\t\t// Convert DOM DocumentFragment to HTML output.\n\t\t\treturn this._htmlWriter.getHtml(domFragment);\n\t\t}\n\n\t\t/**\n   * Converts provided HTML string to view tree.\n   *\n   * @param {String} data HTML string.\n   * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null} Converted view element.\n   */\n\n\t}, {\n\t\tkey: 'toView',\n\t\tvalue: function toView(data) {\n\t\t\t// Convert input HTML data to DOM DocumentFragment.\n\t\t\tvar domFragment = this._toDom(data);\n\n\t\t\t// Convert DOM DocumentFragment to view DocumentFragment.\n\t\t\treturn this._domConverter.domToView(domFragment);\n\t\t}\n\n\t\t/**\n   * Converts HTML String to its DOM representation. Returns DocumentFragment, containing nodes parsed from\n   * provided data.\n   *\n   * @private\n   * @param {String} data\n   * @returns {DocumentFragment}\n   */\n\n\t}, {\n\t\tkey: '_toDom',\n\t\tvalue: function _toDom(data) {\n\t\t\tvar document = this._domParser.parseFromString(data, 'text/html');\n\t\t\tvar fragment = document.createDocumentFragment();\n\t\t\tvar nodes = document.body.childNodes;\n\n\t\t\twhile (nodes.length > 0) {\n\t\t\t\tfragment.appendChild(nodes[0]);\n\t\t\t}\n\n\t\t\treturn fragment;\n\t\t}\n\t}]);\n\n\treturn HtmlDataProcessor;\n}();\n\nexports.default = HtmlDataProcessor;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/dataprocessor/htmldataprocessor.js\n// module id = 162\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _delta = require('./delta');\n\nvar _delta2 = _interopRequireDefault(_delta);\n\nvar _movedelta = require('./movedelta');\n\nvar _movedelta2 = _interopRequireDefault(_movedelta);\n\nvar _removedelta = require('./removedelta');\n\nvar _removedelta2 = _interopRequireDefault(_removedelta);\n\nvar _mergedelta = require('./mergedelta');\n\nvar _mergedelta2 = _interopRequireDefault(_mergedelta);\n\nvar _splitdelta = require('./splitdelta');\n\nvar _splitdelta2 = _interopRequireDefault(_splitdelta);\n\nvar _wrapdelta = require('./wrapdelta');\n\nvar _wrapdelta2 = _interopRequireDefault(_wrapdelta);\n\nvar _unwrapdelta = require('./unwrapdelta');\n\nvar _unwrapdelta2 = _interopRequireDefault(_unwrapdelta);\n\nvar _renamedelta = require('./renamedelta');\n\nvar _renamedelta2 = _interopRequireDefault(_renamedelta);\n\nvar _attributedelta = require('./attributedelta');\n\nvar _attributedelta2 = _interopRequireDefault(_attributedelta);\n\nvar _transform2 = require('../operation/transform');\n\nvar _transform3 = _interopRequireDefault(_transform2);\n\nvar _nooperation = require('../operation/nooperation');\n\nvar _nooperation2 = _interopRequireDefault(_nooperation);\n\nvar _moveoperation = require('../operation/moveoperation');\n\nvar _moveoperation2 = _interopRequireDefault(_moveoperation);\n\nvar _removeoperation = require('../operation/removeoperation');\n\nvar _removeoperation2 = _interopRequireDefault(_removeoperation);\n\nvar _array = require('@ckeditor/ckeditor5-utils/src/lib/lodash/array');\n\nvar _array2 = _interopRequireDefault(_array);\n\nvar _comparearrays = require('@ckeditor/ckeditor5-utils/src/comparearrays');\n\nvar _comparearrays2 = _interopRequireDefault(_comparearrays);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /**\n                                                                                                                                                                                                     * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                     * For licensing, see LICENSE.md.\n                                                                                                                                                                                                     */\n\n/**\n * @protected\n * @module engine/model/delta/transform\n */\n\nvar specialCases = new Map();\n\n/**\n * @namespace\n */\nvar _transform = {\n\t/**\n  * Transforms given {@link module:engine/model/delta/delta~Delta delta} by another {@link module:engine/model/delta/delta~Delta delta}\n  * and returns the result of that transformation as an array containing one or more {@link module:engine/model/delta/delta~Delta delta}\n  * instances.\n  *\n  * Delta transformations heavily base on {@link module:engine/model/operation/transform~transform operational transformations}. Since\n  * delta is a list of operations most situations can be handled thanks to operational transformation. Unfortunately,\n  * deltas are more complicated than operations and have they semantic meaning, as they represent user's editing intentions.\n  *\n  * Sometimes, simple operational transformation on deltas' operations might result in some unexpected results. Those\n  * results would be fine from OT point of view, but would not reflect user's intentions. Because of such conflicts\n  * we need to handle transformations in special cases in a custom way.\n  *\n  * The function itself looks whether two given delta types have a special case function registered. If so, the deltas are\n  * transformed using that function. If not,\n  * {@link module:engine/model/delta/transform~transform.defaultTransform default transformation algorithm} is used.\n  *\n  * @param {module:engine/model/delta/delta~Delta} a Delta that will be transformed.\n  * @param {module:engine/model/delta/delta~Delta} b Delta to transform by.\n  * @param {module:engine/model/delta/transform~transformationContext} context Transformation context object.\n  * @returns {Array.<module:engine/model/delta/delta~Delta>} Result of the transformation.\n  */\n\ttransform: function transform(a, b, context) {\n\t\tvar transformAlgorithm = _transform.getTransformationCase(a, b) || _transform.defaultTransform;\n\n\t\t// Make new instance of context object, so all changes done during transformation are not saved in original object.\n\t\tvar transformed = transformAlgorithm(a, b, Object.assign({}, context));\n\t\tvar baseVersion = _array2.default.last(b.operations).baseVersion;\n\n\t\treturn updateBaseVersion(baseVersion, transformed);\n\t},\n\n\n\t/**\n  * The default delta transformation function. It is used for those deltas that are not in special case conflict.\n  *\n  * This algorithm is similar to a popular `dOPT` algorithm used in operational transformation, as we are in fact\n  * transforming two sets of operations by each other.\n  *\n  * @param {module:engine/model/delta/delta~Delta} a Delta that will be transformed.\n  * @param {module:engine/model/delta/delta~Delta} b Delta to transform by.\n  * @param {module:engine/model/delta/transform~transformationContext} context Transformation context object.\n  * @returns {Array.<module:engine/model/delta/delta~Delta>} Result of the transformation.\n  */\n\tdefaultTransform: function defaultTransform(a, b, context) {\n\t\t// This will hold operations from delta `a` that will be transformed by operations from delta `b`.\n\t\t// Eventually, those operations will be used to create result delta(s).\n\t\tvar transformed = [];\n\n\t\t// Array containing operations that we will transform by. At the beginning these are just operations from\n\t\tvar byOps = b.operations;\n\n\t\t// This array is storing operations from `byOps` which got transformed by operation from delta `a`.\n\t\tvar newByOps = [];\n\n\t\t// We take each operation from original set of operations to transform.\n\t\tvar _iteratorNormalCompletion = true;\n\t\tvar _didIteratorError = false;\n\t\tvar _iteratorError = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator = a.operations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\tvar opA = _step.value;\n\n\t\t\t\t// We wrap the operation in the array. This is important, because operation transformation algorithm returns\n\t\t\t\t// an array of operations so we need to make sure that our algorithm is ready to handle arrays.\n\t\t\t\tvar ops = [opA];\n\n\t\t\t\t// Now the real algorithm takes place.\n\t\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\t\tvar _didIteratorError2 = false;\n\t\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator2 = byOps[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\t\tvar opB = _step2.value;\n\n\t\t\t\t\t\t// For each operation that we need transform by...\n\t\t\t\t\t\tfor (var i = 0; i < ops.length; i++) {\n\t\t\t\t\t\t\t// We take each operation to transform...\n\t\t\t\t\t\t\tvar _op = ops[i];\n\n\t\t\t\t\t\t\t// And transform both of them by themselves.\n\n\t\t\t\t\t\t\t// The result of transforming operation from delta B by operation from delta A is saved in\n\t\t\t\t\t\t\t// `newByOps` array. We will use that array for transformations in next loops. We need delta B\n\t\t\t\t\t\t\t// operations after transformed by delta A operations to get correct results of transformations\n\t\t\t\t\t\t\t// of next operations from delta A.\n\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t// It's like this because 2nd operation from delta A assumes that 1st operation from delta A\n\t\t\t\t\t\t\t// is \"already applied\". When we transform 2nd operation from delta A by operations from delta B\n\t\t\t\t\t\t\t// we have to be sure that operations from delta B are in a state that acknowledges 1st operation\n\t\t\t\t\t\t\t// from delta A.\n\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t// This can be easier understood when operations sets to transform are represented by diamond diagrams:\n\t\t\t\t\t\t\t// http://www.codecommit.com/blog/java/understanding-and-applying-operational-transformation\n\n\t\t\t\t\t\t\t// Transform operation from delta A by operation from delta B.\n\t\t\t\t\t\t\tvar results = (0, _transform3.default)(_op, opB, context);\n\n\t\t\t\t\t\t\t// We replace currently processed operation from `ops` array by the results of transformation.\n\t\t\t\t\t\t\t// Note, that we process single operation but `operationTransform` result is an array, so we\n\t\t\t\t\t\t\t// might have to splice-in more than one operation. Save them in `ops` array and move `i` pointer by a proper offset.\n\t\t\t\t\t\t\tArray.prototype.splice.apply(ops, [i, 1].concat(results));\n\n\t\t\t\t\t\t\ti += results.length - 1;\n\n\t\t\t\t\t\t\t// Then, transform operation from delta B by operation from delta A.\n\t\t\t\t\t\t\t// Since this is a \"mirror\" transformation, first, we \"mirror\" some of context values.\n\t\t\t\t\t\t\tvar reverseContext = Object.assign({}, context);\n\t\t\t\t\t\t\treverseContext.isStrong = !context.isStrong;\n\t\t\t\t\t\t\treverseContext.insertBefore = context.insertBefore !== undefined ? !context.insertBefore : undefined;\n\n\t\t\t\t\t\t\t// Transform operations.\n\t\t\t\t\t\t\tvar updatedOpB = (0, _transform3.default)(opB, _op, reverseContext);\n\n\t\t\t\t\t\t\t// Update `newByOps` by transformed, updated `opB`.\n\t\t\t\t\t\t\t// Using push.apply because `operationTransform` returns an array with one or multiple results.\n\t\t\t\t\t\t\tArray.prototype.push.apply(newByOps, updatedOpB);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// At this point a single operation from delta A got transformed by a single operation from delta B.\n\t\t\t\t\t\t// The transformation result is in `ops` array and it may be one or more operations. This was just the first step.\n\t\t\t\t\t\t// Operation from delta A has to be further transformed by the other operations from delta B.\n\t\t\t\t\t\t// So in next iterator loop we will take another operation from delta B and use transformed delta A (`ops`)\n\t\t\t\t\t\t// to transform it further.\n\t\t\t\t\t}\n\n\t\t\t\t\t// We got through all delta B operations and have a final transformed state of an operation from delta A.\n\n\t\t\t\t\t// As previously mentioned, we substitute operations from delta B by their transformed equivalents.\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t\t_iteratorError2 = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbyOps = newByOps;\n\t\t\t\tnewByOps = [];\n\n\t\t\t\t// We add transformed operation from delta A to newly created delta.\n\t\t\t\t// Remember that transformed operation from delta A may consist of multiple operations.\n\t\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\t\tvar _didIteratorError3 = false;\n\t\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator3 = ops[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\t\tvar op = _step3.value;\n\n\t\t\t\t\t\ttransformed.push(op);\n\t\t\t\t\t}\n\n\t\t\t\t\t// In next loop, we will take another operation from delta A and transform it through (transformed) operations\n\t\t\t\t\t// from delta B...\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t\t_iteratorError3 = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t_didIteratorError = true;\n\t\t\t_iteratorError = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t_iterator.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn getNormalizedDeltas(a.constructor, transformed);\n\t},\n\n\n\t/**\n  * Adds a special case callback for given delta classes.\n  *\n  * @param {Function} A Delta constructor which instance will get transformed.\n  * @param {Function} B Delta constructor which instance will be transformed by.\n  * @param {Function} resolver A callback that will handle custom special case transformation for instances of given delta classes.\n  */\n\taddTransformationCase: function addTransformationCase(A, B, resolver) {\n\t\tvar casesA = specialCases.get(A);\n\n\t\tif (!casesA) {\n\t\t\tcasesA = new Map();\n\t\t\tspecialCases.set(A, casesA);\n\t\t}\n\n\t\tcasesA.set(B, resolver);\n\t},\n\n\n\t/**\n  * Gets a special case callback which was previously {@link module:engine/model/delta/transform~transform.addTransformationCase added}.\n  *\n  * @param {module:engine/model/delta/delta~Delta} a Delta to transform.\n  * @param {module:engine/model/delta/delta~Delta} b Delta to be transformed by.\n  */\n\tgetTransformationCase: function getTransformationCase(a, b) {\n\t\tvar casesA = specialCases.get(a.constructor);\n\n\t\t// If there are no special cases registered for class which `a` is instance of, we will\n\t\t// check if there are special cases registered for any parent class.\n\t\tif (!casesA || !casesA.get(b.constructor)) {\n\t\t\tvar cases = specialCases.keys();\n\n\t\t\tvar _iteratorNormalCompletion4 = true;\n\t\t\tvar _didIteratorError4 = false;\n\t\t\tvar _iteratorError4 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator4 = cases[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\t\t\tvar caseClass = _step4.value;\n\n\t\t\t\t\tif (a instanceof caseClass && specialCases.get(caseClass).get(b.constructor)) {\n\t\t\t\t\t\tcasesA = specialCases.get(caseClass);\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError4 = true;\n\t\t\t\t_iteratorError4 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t\t\t_iterator4.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError4) {\n\t\t\t\t\t\tthrow _iteratorError4;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (casesA) {\n\t\t\treturn casesA.get(b.constructor);\n\t\t}\n\n\t\treturn undefined;\n\t},\n\n\n\t/**\n  * Transforms two sets of deltas by themselves. Returns both transformed sets.\n  *\n  * @param {Array.<module:engine/model/delta/delta~Delta>} deltasA Array with the first set of deltas to transform. These\n  * deltas are considered more important (than `deltasB`) when resolving conflicts.\n  * @param {Array.<module:engine/model/delta/delta~Delta>} deltasB Array with the second set of deltas to transform. These\n  * deltas are considered less important (than `deltasA`) when resolving conflicts.\n  * @param {module:engine/model/document~Document} [document=null] If set, deltas will be transformed in \"context mode\"\n  * and given `document` will be used to determine relations between deltas. If not set (default), deltas will be\n  * transforming without additional context information.\n  * @returns {Object}\n  * @returns {Array.<module:engine/model/delta/delta~Delta>} return.deltasA The first set of deltas transformed\n  * by the second set of deltas.\n  * @returns {Array.<module:engine/model/delta/delta~Delta>} return.deltasB The second set of deltas transformed\n  * by the first set of deltas.\n  */\n\ttransformDeltaSets: function transformDeltaSets(deltasA, deltasB) {\n\t\tvar document = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n\t\tvar transformedDeltasA = Array.from(deltasA);\n\t\tvar transformedDeltasB = Array.from(deltasB);\n\n\t\tvar useAdditionalContext = document !== null;\n\n\t\tvar contextAB = {\n\t\t\tisStrong: true\n\t\t};\n\n\t\tif (useAdditionalContext) {\n\t\t\tcontextAB.wasAffected = new Map();\n\t\t\tcontextAB.originalDelta = new Map();\n\t\t\tcontextAB.document = document;\n\n\t\t\tvar _iteratorNormalCompletion5 = true;\n\t\t\tvar _didIteratorError5 = false;\n\t\t\tvar _iteratorError5 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator5 = transformedDeltasB[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t\t\t\t\tvar delta = _step5.value;\n\n\t\t\t\t\tcontextAB.originalDelta.set(delta, delta);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError5 = true;\n\t\t\t\t_iteratorError5 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t\t\t\t\t\t_iterator5.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError5) {\n\t\t\t\t\t\tthrow _iteratorError5;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < transformedDeltasA.length; i++) {\n\t\t\tvar deltaA = [transformedDeltasA[i]];\n\n\t\t\tfor (var j = 0; j < transformedDeltasB.length; j++) {\n\t\t\t\tvar deltaB = [transformedDeltasB[j]];\n\n\t\t\t\tfor (var k = 0; k < deltaA.length; k++) {\n\t\t\t\t\tfor (var l = 0; l < deltaB.length; l++) {\n\t\t\t\t\t\tif (useAdditionalContext) {\n\t\t\t\t\t\t\t_setContext(deltaA[k], deltaB[l], contextAB);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar resultAB = _transform.transform(deltaA[k], deltaB[l], {\n\t\t\t\t\t\t\tinsertBefore: contextAB.insertBefore,\n\t\t\t\t\t\t\tforceNotSticky: contextAB.forceNotSticky,\n\t\t\t\t\t\t\tisStrong: contextAB.isStrong,\n\t\t\t\t\t\t\tforceWeakRemove: contextAB.forceWeakRemove,\n\t\t\t\t\t\t\taWasUndone: false,\n\t\t\t\t\t\t\tbWasUndone: contextAB.bWasUndone\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tvar resultBA = _transform.transform(deltaB[l], deltaA[k], {\n\t\t\t\t\t\t\tinsertBefore: !contextAB.insertBefore,\n\t\t\t\t\t\t\tforceNotSticky: contextAB.forceNotSticky,\n\t\t\t\t\t\t\tisStrong: !contextAB.isStrong,\n\t\t\t\t\t\t\tforceWeakRemove: contextAB.forceWeakRemove,\n\t\t\t\t\t\t\taWasUndone: contextAB.bWasUndone,\n\t\t\t\t\t\t\tbWasUndone: false\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (useAdditionalContext) {\n\t\t\t\t\t\t\t_updateContext(deltaA[k], resultAB, contextAB);\n\n\t\t\t\t\t\t\tvar originalDelta = contextAB.originalDelta.get(deltaB[l]);\n\n\t\t\t\t\t\t\tvar _iteratorNormalCompletion6 = true;\n\t\t\t\t\t\t\tvar _didIteratorError6 = false;\n\t\t\t\t\t\t\tvar _iteratorError6 = undefined;\n\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tfor (var _iterator6 = resultBA[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t\t\t\t\t\t\t\t\tvar deltaBA = _step6.value;\n\n\t\t\t\t\t\t\t\t\tcontextAB.originalDelta.set(deltaBA, originalDelta);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t_didIteratorError6 = true;\n\t\t\t\t\t\t\t\t_iteratorError6 = err;\n\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tif (!_iteratorNormalCompletion6 && _iterator6.return) {\n\t\t\t\t\t\t\t\t\t\t_iterator6.return();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\t\tif (_didIteratorError6) {\n\t\t\t\t\t\t\t\t\t\tthrow _iteratorError6;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdeltaA.splice.apply(deltaA, [k, 1].concat(_toConsumableArray(resultAB)));\n\t\t\t\t\t\tk += resultAB.length - 1;\n\n\t\t\t\t\t\tdeltaB.splice.apply(deltaB, [l, 1].concat(_toConsumableArray(resultBA)));\n\t\t\t\t\t\tl += resultBA.length - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttransformedDeltasB.splice.apply(transformedDeltasB, [j, 1].concat(deltaB));\n\t\t\t\tj += deltaB.length - 1;\n\t\t\t}\n\n\t\t\ttransformedDeltasA.splice.apply(transformedDeltasA, [i, 1].concat(deltaA));\n\t\t\ti += deltaA.length - 1;\n\t\t}\n\n\t\tvar opsDiffA = getOpsCount(transformedDeltasA) - getOpsCount(deltasA);\n\t\tvar opsDiffB = getOpsCount(transformedDeltasB) - getOpsCount(deltasB);\n\n\t\tif (opsDiffB < opsDiffA) {\n\t\t\tpadWithNoOps(transformedDeltasB, opsDiffA - opsDiffB);\n\t\t} else if (opsDiffA < opsDiffB) {\n\t\t\tpadWithNoOps(transformedDeltasA, opsDiffB - opsDiffA);\n\t\t}\n\n\t\treturn { deltasA: transformedDeltasA, deltasB: transformedDeltasB };\n\t}\n};\n\nexports.default = _transform;\n\n// Updates base versions of operations inside deltas (which are the results of delta transformation).\n\nfunction updateBaseVersion(baseVersion, deltas) {\n\tvar _iteratorNormalCompletion7 = true;\n\tvar _didIteratorError7 = false;\n\tvar _iteratorError7 = undefined;\n\n\ttry {\n\t\tfor (var _iterator7 = deltas[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n\t\t\tvar delta = _step7.value;\n\t\t\tvar _iteratorNormalCompletion8 = true;\n\t\t\tvar _didIteratorError8 = false;\n\t\t\tvar _iteratorError8 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator8 = delta.operations[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n\t\t\t\t\tvar op = _step8.value;\n\n\t\t\t\t\top.baseVersion = ++baseVersion;\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError8 = true;\n\t\t\t\t_iteratorError8 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion8 && _iterator8.return) {\n\t\t\t\t\t\t_iterator8.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError8) {\n\t\t\t\t\t\tthrow _iteratorError8;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError7 = true;\n\t\t_iteratorError7 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion7 && _iterator7.return) {\n\t\t\t\t_iterator7.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError7) {\n\t\t\t\tthrow _iteratorError7;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn deltas;\n}\n\n// Returns number of operations in given array of deltas.\nfunction getOpsCount(deltas) {\n\treturn deltas.reduce(function (current, delta) {\n\t\treturn current + delta.operations.length;\n\t}, 0);\n}\n\n// Adds a delta containing `howMany` `NoOperation` instances to given array with deltas.\n// Used to \"synchronize\" the number of operations in two delta sets.\nfunction padWithNoOps(deltas, howMany) {\n\tvar lastDelta = deltas[deltas.length - 1];\n\tvar baseVersion = lastDelta.operations.length + lastDelta.baseVersion;\n\n\tvar noDelta = new _delta2.default();\n\n\tfor (var i = 0; i < howMany; i++) {\n\t\tnoDelta.addOperation(new _nooperation2.default(baseVersion++));\n\t}\n\n\tdeltas.push(noDelta);\n}\n\n// Sets context data before delta `a` by delta `b` transformation.\n// Using data given in `context` object, sets `context.insertBefore` and `context.forceNotSticky` flags.\n// Also updates `context.wasAffected`.\nfunction _setContext(a, b, context) {\n\t_setBWasUndone(b, context);\n\t_setWasAffected(a, b, context);\n\t_setInsertBeforeContext(a, b, context);\n\t_setForceWeakRemove(b, context);\n\t_setForceNotSticky(context);\n}\n\n// Sets `context.bWasUndone` basing on `context.document` history for `b` delta.\n//\n// `context.bWasUndone` is set to `true` if the (originally transformed) `b` delta was undone or was undoing delta.\nfunction _setBWasUndone(b, context) {\n\tvar originalDelta = context.originalDelta.get(b);\n\tvar history = context.document.history;\n\n\tcontext.bWasUndone = history.isUndoneDelta(originalDelta) || history.isUndoingDelta(originalDelta);\n}\n\n// Sets `context.insertBefore` basing on `context.document` history for `a` by `b` transformation.\n//\n// Simply saying, if `b` is \"undoing delta\" it means that `a` might already be transformed by the delta\n// which was undone by `b` (let's call it `oldB`). If this is true, `a` by `b` transformation has to consider\n// how `a` was transformed by `oldB` to get an expected result.\n//\n// This is used to resolve conflict when two operations want to insert nodes at the same position. If the operations\n// are not related, it doesn't matter in what order operations insert those nodes. However if the operations are\n// related (for example, in undo) we need to keep the same order.\n//\n// For example, assume that editor has two letters: 'ab'. Then, both letters are removed, creating two operations:\n// (op. 1) REM [ 1 ] - [ 2 ] => (graveyard) [ 0 ]\n// (op. 2) REM [ 0 ] - [ 1 ] => (graveyard) [ 1 ]\n// Then, we undo operation 2:\n// REM [ 0 ] - [ 1 ] => (graveyard) [ 1 ] is reversed to REI (graveyard) [ 1 ] => [ 0 ] - [ 1 ] and is applied.\n// History stack is:\n// (op. 1) REM [ 1 ] - [ 2 ] => (graveyard) [ 0 ]\n// (op. 2) REM [ 0 ] - [ 1 ] => (graveyard) [ 1 ]\n// (op. 3) REI (graveyard) [ 1 ] => [ 0 ] - [ 1 ]\n// Then, we undo operation 1:\n// REM [ 1 ] - [ 2 ] => (graveyard) [ 0 ] is reversed to REI (graveyard) [ 0 ] => [ 1 ] - [ 2 ] then,\n// is transformed by (op. 2) REM [ 0 ] - [ 1 ] => (graveyard) [ 1 ] and becomes REI (graveyard) [ 0 ] => [ 0 ] - [ 1 ] then,\n// is transformed by (op. 3) REI (graveyard) [ 1 ] => [ 0 ] - [ 1 ] and we have a conflict because both operations\n// insert at the same position, but thanks to keeping the context, we know that in this case, the transformed operation should\n// insert the node after operation 3.\n//\n// Keep in mind, that `context.insertBefore` may be either `Boolean` or `undefined`. If it is `Boolean` then the order is\n// known (deltas are related and `a` should insert nodes before or after `b`). However, if deltas were not related,\n// `context.isBefore` is `undefined` and other factors will be taken into consideration when resolving the order\n// (this, however, happens in operational transformation algorithms).\n//\n// This affects both `MoveOperation` (and its derivatives) and `InsertOperation`.\nfunction _setInsertBeforeContext(a, b, context) {\n\t// If `b` is a delta that undoes other delta...\n\tvar originalDelta = context.originalDelta.get(b);\n\n\tif (context.document.history.isUndoingDelta(originalDelta)) {\n\t\t// Get the undone delta...\n\t\tvar undoneDelta = context.document.history.getUndoneDelta(originalDelta);\n\t\t// Get a map with deltas related to `a` delta...\n\t\tvar aWasAffectedBy = context.wasAffected.get(a);\n\t\t// And check if the undone delta is related with delta `a`.\n\t\tvar affected = aWasAffectedBy.get(undoneDelta);\n\n\t\tif (affected !== undefined) {\n\t\t\t// If deltas are related, set `context.insertBefore` basing on whether `a` was affected by the undone delta.\n\t\t\tcontext.insertBefore = affected;\n\t\t}\n\t}\n}\n\n// Sets `context.forceNotSticky` basing on `context.document` history for transformation by `b` delta.\n//\n// `MoveOperation` may be \"sticky\" which means, that anything that was inserted at the boundary of moved range, should\n// also be moved. This is particularly helpful for actions like splitting or merging a node. However, this behavior\n// sometimes leads to an error, for example in undo.\n//\n// Simply saying, if delta is going to be transformed by delta `b`, stickiness should not be taken into consideration\n// if delta `b` was already undone or if delta `b` is an undoing delta.\n//\n// This affects `MoveOperation` (and its derivatives).\nfunction _setForceNotSticky(context) {\n\tif (context.bWasUndone) {\n\t\tcontext.forceNotSticky = true;\n\t}\n}\n\n// Sets `context.forceWeakRemove` basing on `context.document` history for transformation by `b` delta.\n//\n// When additional context is not used, default `MoveOperation` x `RemoveOperation` transformation\n// always treats `RemoveOperation` as a stronger one, no matter how `context.isStrong` is set. It is like this\n// to provide better results when transformations happen.\n//\n// This, however, works fine only when additional context is not used.\n//\n// When additional context is used, we need a better way to decide whether `RemoveOperation` is \"dominating\" (or in other\n// words, whether nodes removed by given operation should stay in graveyard if other operation wants to move them).\n//\n// The answer to this is easy: if `RemoveOperation` has been already undone, we are not forcing given nodes to stay\n// in graveyard. In such scenario, we set `context.forceWeakRemove` to `true`. However, if the `RemoveOperation` has\n// not been undone, we set `context.forceWeakRemove` to `false` because we want the operation to be \"dominating\".\nfunction _setForceWeakRemove(b, context) {\n\tvar history = context.document.history;\n\tvar originalB = context.originalDelta.get(b);\n\n\t// If `b` delta has not been undone yet, forceWeakRemove should be `false`.\n\t// It should be `true`, in any other case, if additional context is used.\n\tcontext.forceWeakRemove = history.isUndoneDelta(originalB);\n}\n\n// Sets `context.wasAffected` which holds context information about how transformed deltas are related. `context.wasAffected`\n// is used by `_setInsertBeforeContext` helper function.\nfunction _setWasAffected(a, b, context) {\n\tif (!context.wasAffected.get(a)) {\n\t\t// Create a new map with relations for `a` delta.\n\t\tcontext.wasAffected.set(a, new Map());\n\t}\n\n\tvar originalDelta = context.originalDelta.get(b);\n\tvar wasAffected = !!context.wasAffected.get(a).get(originalDelta);\n\n\t// Cross-check all operations from both deltas...\n\tvar _iteratorNormalCompletion9 = true;\n\tvar _didIteratorError9 = false;\n\tvar _iteratorError9 = undefined;\n\n\ttry {\n\t\tfor (var _iterator9 = a.operations[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n\t\t\tvar opA = _step9.value;\n\t\t\tvar _iteratorNormalCompletion10 = true;\n\t\t\tvar _didIteratorError10 = false;\n\t\t\tvar _iteratorError10 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator10 = b.operations[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n\t\t\t\t\tvar opB = _step10.value;\n\n\t\t\t\t\tif (opA instanceof _moveoperation2.default && opB instanceof _moveoperation2.default) {\n\t\t\t\t\t\tif (_isOperationAffected(opA, opB)) {\n\t\t\t\t\t\t\t// If any of them are move operations that affect each other, set the relation accordingly.\n\t\t\t\t\t\t\twasAffected = true;\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Break both loops if affecting pair has been found.\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError10 = true;\n\t\t\t\t_iteratorError10 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion10 && _iterator10.return) {\n\t\t\t\t\t\t_iterator10.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError10) {\n\t\t\t\t\t\tthrow _iteratorError10;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (wasAffected) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError9 = true;\n\t\t_iteratorError9 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion9 && _iterator9.return) {\n\t\t\t\t_iterator9.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError9) {\n\t\t\t\tthrow _iteratorError9;\n\t\t\t}\n\t\t}\n\t}\n\n\tcontext.wasAffected.get(a).set(originalDelta, wasAffected);\n}\n\n// Checks whether `opA` is affected by `opB`. It is assumed that both operations are `MoveOperation`.\n// Operation is affected only if the other operation's source range is before that operation's source range.\nfunction _isOperationAffected(opA, opB) {\n\tvar target = opA.targetPosition;\n\tvar source = opB.sourcePosition;\n\n\tvar cmpResult = (0, _comparearrays2.default)(source.getParentPath(), target.getParentPath());\n\n\tif (target.root != source.root) {\n\t\treturn false;\n\t}\n\n\treturn cmpResult == 'same' && source.offset < target.offset;\n}\n\n// Updates `context` object after delta by delta transformation is done.\n//\n// This means two things:\n// 1. Some information are removed from context (those that apply only to the transformation that just happened).\n// 2. `context.wasAffected` is updated because `oldDelta` has been transformed to one or many `newDeltas` and we\n// need to update entries in `context.wasAffected`. Basically, anything that was in `context.wasAffected` under\n// `oldDelta` key should be rewritten to `newDeltas`. This way in next transformation steps, `newDeltas` \"remember\"\n// the context of `oldDelta`.\nfunction _updateContext(oldDelta, newDeltas, context) {\n\tdelete context.insertBefore;\n\tdelete context.forceNotSticky;\n\tdelete context.forceWeakRemove;\n\n\tvar wasAffected = context.wasAffected.get(oldDelta);\n\n\tcontext.wasAffected.delete(oldDelta);\n\n\tvar _iteratorNormalCompletion11 = true;\n\tvar _didIteratorError11 = false;\n\tvar _iteratorError11 = undefined;\n\n\ttry {\n\t\tfor (var _iterator11 = newDeltas[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n\t\t\tvar delta = _step11.value;\n\n\t\t\tcontext.wasAffected.set(delta, new Map(wasAffected));\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError11 = true;\n\t\t_iteratorError11 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion11 && _iterator11.return) {\n\t\t\t\t_iterator11.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError11) {\n\t\t\t\tthrow _iteratorError11;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Takes base delta class (`DeltaClass`) and a set of `operations` that are transformation results and creates\n// one or more deltas, acknowledging that the result is a transformation of a delta that is of `DeltaClass`.\n//\n// The normalization ensures that each delta has it's \"normal\" state, that is, for example, `MoveDelta` has\n// just one `MoveOperation`, `SplitDelta` has just two operations of which first is `InsertOperation` and second\n// is `MoveOperation` or `NoOperation`, etc.\nfunction getNormalizedDeltas(DeltaClass, operations) {\n\tvar deltas = [];\n\tvar delta = null;\n\tvar attributeOperationIndex = void 0;\n\n\tswitch (DeltaClass) {\n\t\tcase _movedelta2.default:\n\t\tcase _removedelta2.default:\n\t\t\t// Normal MoveDelta has just one MoveOperation.\n\t\t\t// Take all operations and create MoveDelta for each of them.\n\t\t\tvar _iteratorNormalCompletion12 = true;\n\t\t\tvar _didIteratorError12 = false;\n\t\t\tvar _iteratorError12 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator12 = operations[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n\t\t\t\t\tvar o = _step12.value;\n\n\t\t\t\t\tif (o instanceof _nooperation2.default) {\n\t\t\t\t\t\t// An operation may be instance of NoOperation and this may be correct.\n\t\t\t\t\t\t// If that's the case, do not create a MoveDelta with singular NoOperation.\n\t\t\t\t\t\t// Create \"no delta\" instead, that is Delta instance with NoOperation.\n\t\t\t\t\t\tdelta = new _delta2.default();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (o instanceof _removeoperation2.default) {\n\t\t\t\t\t\t\tdelta = new _removedelta2.default();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdelta = new _movedelta2.default();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Unsticky the operation. Only operations in \"special\" deltas can be sticky.\n\t\t\t\t\t\to.isSticky = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tdelta.addOperation(o);\n\t\t\t\t\tdeltas.push(delta);\n\t\t\t\t}\n\n\t\t\t\t// Return all created MoveDeltas.\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError12 = true;\n\t\t\t\t_iteratorError12 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion12 && _iterator12.return) {\n\t\t\t\t\t\t_iterator12.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError12) {\n\t\t\t\t\t\tthrow _iteratorError12;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn deltas;\n\t\tcase _splitdelta2.default:\n\t\tcase _wrapdelta2.default:\n\t\t\t// Normal SplitDelta and WrapDelta have two operations: first is InsertOperation and second is MoveOperation.\n\t\t\t// The MoveOperation may be split into multiple MoveOperations.\n\t\t\t// If that's the case, convert additional MoveOperations into MoveDeltas.\n\t\t\t// First, create normal SplitDelta or WrapDelta, using first two operations.\n\t\t\tdelta = new DeltaClass();\n\t\t\tdelta.addOperation(operations[0]);\n\t\t\tdelta.addOperation(operations[1]);\n\t\t\t// Then, take all but last two operations and use them to create normalized MoveDeltas.\n\t\t\tdeltas = getNormalizedDeltas(_movedelta2.default, operations.slice(2));\n\n\t\t\t// Return all deltas as one array, in proper order.\n\t\t\treturn [delta].concat(deltas);\n\t\tcase _mergedelta2.default:\n\t\tcase _unwrapdelta2.default:\n\t\t\t// Normal MergeDelta and UnwrapDelta have two operations: first is MoveOperation and second is RemoveOperation.\n\t\t\t// The MoveOperation may be split into multiple MoveOperations.\n\t\t\t// If that's the case, convert additional MoveOperations into MoveDeltas.\n\t\t\t// Take all but last two operations and use them to create normalized MoveDeltas.\n\t\t\tdeltas = getNormalizedDeltas(_movedelta2.default, operations.slice(0, -2));\n\t\t\t// Then, create normal MergeDelta or UnwrapDelta, using last two operations.\n\t\t\tdelta = new DeltaClass();\n\t\t\tdelta.addOperation(operations[operations.length - 2]);\n\t\t\tdelta.addOperation(operations[operations.length - 1]);\n\n\t\t\t// Return all deltas as one array, in proper order.\n\t\t\treturn deltas.concat(delta);\n\t\tcase _renamedelta2.default:\n\t\t\t// RenameDelta may become a \"no delta\" if it's only operation is transformed to NoOperation.\n\t\t\t// This may happen when RenameOperation is transformed by RenameOperation.\n\t\t\t// Keep in mind that RenameDelta always have just one operation.\n\t\t\tif (operations[0] instanceof _nooperation2.default) {\n\t\t\t\tdelta = new _delta2.default();\n\t\t\t} else {\n\t\t\t\tdelta = new _renamedelta2.default();\n\t\t\t}\n\n\t\t\tdelta.addOperation(operations[0]);\n\n\t\t\treturn [delta];\n\t\tcase _attributedelta2.default:\n\t\t\t// AttributeDelta is allowed to have multiple AttributeOperations and also NoOperations but\n\t\t\t// the first operation has to be an AttributeOperation as it is used as a reference for deltas properties.\n\t\t\t// Keep in mind that we cannot simply remove NoOperations cause that would mess up base versions.\n\t\t\t// Find an index of first operation that is not a NoOperation.\n\t\t\tfor (attributeOperationIndex = 0; attributeOperationIndex < operations.length; attributeOperationIndex++) {\n\t\t\t\tif (!(operations[attributeOperationIndex] instanceof _nooperation2.default)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// No AttributeOperations has been found. Convert AttributeDelta to \"no delta\".\n\t\t\tif (attributeOperationIndex == operations.length) {\n\t\t\t\tdelta = new _delta2.default();\n\t\t\t}\n\t\t\t// AttributeOperation found.\n\t\t\telse {\n\t\t\t\t\tdelta = new _attributedelta2.default();\n\n\t\t\t\t\t// AttributeOperation wasn't the first operation.\n\t\t\t\t\tif (attributeOperationIndex != 0) {\n\t\t\t\t\t\t// Move AttributeOperation to the beginning.\n\t\t\t\t\t\toperations.unshift(operations.splice(attributeOperationIndex, 1)[0]);\n\t\t\t\t\t\t// No need to update base versions - they are updated at the end of transformation algorithm anyway.\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Add all operations to the delta (even if it is just a couple of NoOperations we have to keep them all).\n\t\t\tvar _iteratorNormalCompletion13 = true;\n\t\t\tvar _didIteratorError13 = false;\n\t\t\tvar _iteratorError13 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator13 = operations[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n\t\t\t\t\tvar _o = _step13.value;\n\n\t\t\t\t\tdelta.addOperation(_o);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError13 = true;\n\t\t\t\t_iteratorError13 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion13 && _iterator13.return) {\n\t\t\t\t\t\t_iterator13.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError13) {\n\t\t\t\t\t\tthrow _iteratorError13;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn [delta];\n\t\tdefault:\n\t\t\t// For all other deltas no normalization is needed.\n\t\t\tdelta = new DeltaClass();\n\n\t\t\tvar _iteratorNormalCompletion14 = true;\n\t\t\tvar _didIteratorError14 = false;\n\t\t\tvar _iteratorError14 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator14 = operations[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n\t\t\t\t\tvar _o2 = _step14.value;\n\n\t\t\t\t\tdelta.addOperation(_o2);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError14 = true;\n\t\t\t\t_iteratorError14 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion14 && _iterator14.return) {\n\t\t\t\t\t\t_iterator14.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError14) {\n\t\t\t\t\t\tthrow _iteratorError14;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn [delta];\n\t}\n}\n\n/**\n * Object containing values and flags describing context of a transformation.\n *\n * @typedef {Object} module:engine/model/delta/transform~transformationContext\n * @property {Boolean} useAdditionalContext Whether additional context should be evaluated and used during transformations.\n * @property {Boolean} isStrong Whether transformed deltas are more (`true`) or less (`false`) important than deltas to transform by.\n * @property {module:engine/model/document~Document} [document] Model document which is a context for transformations.\n * Available only if `useAdditionalContext` is `true`.\n * @property {Boolean|undefined} forceWeakRemove Whether {@link module:engine/model/operation/removeoperation~RemoveOperation}\n * should be always more important than other operations. Available only if `useAdditionalContext` is `true`.\n * @property {Boolean|undefined} insertBefore Used when transforming {@link module:engine/model/operation/moveoperation~MoveOperation}s\n * If two `MoveOperation`s target to the same position, `insertBefore` is used to resolve such conflict. This flag\n * is set and used internally by transformation algorithms. Available only if `useAdditionalContext` is `true`.\n * @property {Boolean|undefined} forceNotSticky Used when transforming\n * {@link module:engine/model/operation/moveoperation~MoveOperation#isSticky sticky MoveOperation}. If set to `true`,\n * `isSticky` flag is discarded during transformations. This flag is set and used internally by transformation algorithms.\n * Available only if `useAdditionalContext` is `true`.\n * @property {Map|undefined} wasAffected Used to evaluate `insertBefore` flag. This map is set and used internally by\n * transformation algorithms. Available only if `useAdditionalContext` is `true`.\n */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/delta/transform.js\n// module id = 163\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _insertdelta = require('./insertdelta');\n\nvar _insertdelta2 = _interopRequireDefault(_insertdelta);\n\nvar _batch = require('../batch');\n\nvar _deltafactory = require('./deltafactory');\n\nvar _deltafactory2 = _interopRequireDefault(_deltafactory);\n\nvar _insertoperation = require('../operation/insertoperation');\n\nvar _insertoperation2 = _interopRequireDefault(_insertoperation);\n\nvar _writer = require('./../writer');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/model/delta/weakinsertdelta\n */\n\n/**\n * @classdesc\n * To provide specific OT behavior and better collisions solving, the {@link module:engine/model/batch~Batch#insert} method\n * uses the `WeakInsertDelta` class which inherits from the `Delta` class and may overwrite some methods.\n */\nvar WeakInsertDelta = function (_InsertDelta) {\n  _inherits(WeakInsertDelta, _InsertDelta);\n\n  function WeakInsertDelta() {\n    _classCallCheck(this, WeakInsertDelta);\n\n    return _possibleConstructorReturn(this, (WeakInsertDelta.__proto__ || Object.getPrototypeOf(WeakInsertDelta)).apply(this, arguments));\n  }\n\n  _createClass(WeakInsertDelta, null, [{\n    key: 'className',\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return 'engine.model.delta.WeakInsertDelta';\n    }\n  }]);\n\n  return WeakInsertDelta;\n}(_insertdelta2.default);\n\n/**\n * Inserts a node or nodes at given position. {@link module:engine/model/batch~Batch#weakInsert weakInsert} is commonly used for actions\n * like typing or plain-text paste (without formatting). There are two differences between\n * {@link module:engine/model/batch~Batch#insert insert} and {@link module:engine/model/batch~Batch#weakInsert weakInsert}:\n *\n * * When using `weakInsert`, inserted nodes will have same attributes as the current attributes of\n * {@link module:engine/model/document~Document#selection document selection}.\n * * If {@link module:engine/model/operation/insertoperation~InsertOperation insert operation} position is inside a range changed by\n * {@link module:engine/model/operation/attributeoperation~AttributeOperation attribute operation},\n * the attribute operation is split into two operations.\n * Thanks to this, attribute change \"omits\" the inserted nodes. The correct behavior for `WeakInsertDelta` is that\n * {@link module:engine/model/operation/attributeoperation~AttributeOperation AttributeOperation} does not \"break\" and also\n * applies attributes for inserted nodes. This behavior has to be reflected during\n * {@link module:engine/model/delta/transform~transform delta transformation}.\n *\n * @chainable\n * @method module:engine/model/batch~Batch#weakInsert\n * @param {module:engine/model/position~Position} position Position of insertion.\n * @param {module:engine/model/node~NodeSet} nodes The list of nodes to be inserted.\n */\n\n\nexports.default = WeakInsertDelta;\n(0, _batch.register)('weakInsert', function (position, nodes) {\n  var delta = new WeakInsertDelta();\n  this.addDelta(delta);\n\n  nodes = (0, _writer.normalizeNodes)(nodes);\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = nodes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var node = _step.value;\n\n      node.setAttributesTo(this.document.selection.getAttributes());\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var operation = new _insertoperation2.default(position, nodes, this.document.version);\n  delta.addOperation(operation);\n  this.document.applyOperation(operation);\n\n  return this;\n});\n\n_deltafactory2.default.register(WeakInsertDelta);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/delta/weakinsertdelta.js\n// module id = 164\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _position = require('./position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _range = require('./range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _emittermixin = require('@ckeditor/ckeditor5-utils/src/emittermixin');\n\nvar _emittermixin2 = _interopRequireDefault(_emittermixin);\n\nvar _mix = require('@ckeditor/ckeditor5-utils/src/mix');\n\nvar _mix2 = _interopRequireDefault(_mix);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/model/liveposition\n */\n\n/**\n * `LivePosition` is a type of {@link module:engine/model/position~Position Position}\n * that updates itself as {@link module:engine/model/document~Document document}\n * is changed through operations. It may be used as a bookmark.\n *\n * **Note:** Contrary to {@link module:engine/model/position~Position}, `LivePosition` works only in roots that are\n * {@link module:engine/model/rootelement~RootElement}.\n * If {@link module:engine/model/documentfragment~DocumentFragment} is passed, error will be thrown.\n *\n * **Note:** Be very careful when dealing with `LivePosition`. Each `LivePosition` instance bind events that might\n * have to be unbound.\n * Use {@link module:engine/model/liveposition~LivePosition#detach} whenever you don't need `LivePosition` anymore.\n *\n * @extends module:engine/model/position~Position\n */\nvar LivePosition = function (_Position) {\n\t_inherits(LivePosition, _Position);\n\n\t/**\n  * Creates a live position.\n  *\n  * @see module:engine/model/position~Position\n  * @param {module:engine/model/rootelement~RootElement} root\n  * @param {Array.<Number>} path\n  * @param {module:engine/model/position~PositionStickiness} [stickiness] Defaults to `'sticksToNext'`.\n  * See {@link module:engine/model/liveposition~LivePosition#stickiness}.\n  */\n\tfunction LivePosition(root, path, stickiness) {\n\t\t_classCallCheck(this, LivePosition);\n\n\t\tvar _this = _possibleConstructorReturn(this, (LivePosition.__proto__ || Object.getPrototypeOf(LivePosition)).call(this, root, path));\n\n\t\tif (!_this.root.is('rootElement')) {\n\t\t\t/**\n    * LivePosition root has to be an instance of RootElement.\n    *\n    * @error liveposition-root-not-rootelement\n    */\n\t\t\tthrow new _ckeditorerror2.default('model-liveposition-root-not-rootelement: LivePosition root has to be an instance of RootElement.');\n\t\t}\n\n\t\t/**\n   * Flag representing `LivePosition` stickiness. `LivePosition` might be sticking to previous node or next node.\n   * Whenever some nodes are inserted at the same position as `LivePosition`, `stickiness` is checked to decide if\n   * LivePosition should be moved. Similar applies when a range of nodes is moved and one of it's boundary\n   * position is same as `LivePosition`.\n   *\n   * Examples:\n   *\n   *\t\tInsert:\n   *\t\tPosition is at | and we insert at the same position, marked as ^:\n   *\t\t- | sticks to previous node: `<p>f|^oo</p>` => `<p>f|baroo</p>`\n   *\t\t- | sticks to next node: `<p>f^|oo</p>` => `<p>fbar|oo</p>`\n   *\n   *\t\tMove:\n   *\t\tPosition is at | and range [ ] is moved to position ^:\n   *\t\t- | sticks to previous node: `<p>f|[oo]</p><p>b^ar</p>` => `<p>f|</p><p>booar</p>`\n   *\t\t- | sticks to next node: `<p>f|[oo]</p><p>b^ar</p>` => `<p>f</p><p>b|ooar</p>`\n   *\n   * @member {module:engine/model/position~PositionStickiness} module:engine/model/liveposition~LivePosition#stickiness\n   */\n\t\t_this.stickiness = stickiness || 'sticksToNext';\n\n\t\tbindWithDocument.call(_this);\n\t\treturn _this;\n\t}\n\n\t/**\n  * Unbinds all events previously bound by `LivePosition`. Use it whenever you don't need `LivePosition` instance\n  * anymore (i.e. when leaving scope in which it was declared or before re-assigning variable that was\n  * referring to it).\n  */\n\n\n\t_createClass(LivePosition, [{\n\t\tkey: 'detach',\n\t\tvalue: function detach() {\n\t\t\tthis.stopListening();\n\t\t}\n\n\t\t/**\n   * @static\n   * @method module:engine/model/liveposition~LivePosition.createAfter\n   * @see module:engine/model/position~Position.createAfter\n   * @param {module:engine/model/node~Node} node\n   * @returns {module:engine/model/liveposition~LivePosition}\n   */\n\n\t\t/**\n   * @static\n   * @method module:engine/model/liveposition~LivePosition.createBefore\n   * @see module:engine/model/position~Position.createBefore\n   * @param {module:engine/model/node~Node} node\n   * @returns {module:engine/model/liveposition~LivePosition}\n   */\n\n\t\t/**\n   * @static\n   * @method module:engine/model/liveposition~LivePosition.createFromParentAndOffset\n   * @see module:engine/model/position~Position.createFromParentAndOffset\n   * @param {module:engine/model/element~Element} parent\n   * @param {Number} offset\n   * @returns {module:engine/model/liveposition~LivePosition}\n   */\n\n\t\t/**\n   * @static\n   * @method module:engine/model/liveposition~LivePosition.createFromPosition\n   * @see module:engine/model/position~Position.createFromPosition\n   * @param {module:engine/model/position~Position} position\n   * @returns {module:engine/model/liveposition~LivePosition}\n   */\n\n\t\t/**\n   * Fired when `LivePosition` instance is changed due to changes on {@link module:engine/model/document~Document}.\n   *\n   * @event module:engine/model/liveposition~LivePosition#change\n   * @param {module:engine/model/position~Position} oldPosition Position equal to this live position before it got changed.\n   */\n\n\t}]);\n\n\treturn LivePosition;\n}(_position2.default);\n\n/**\n * Binds this `LivePosition` to the {@link module:engine/model/document~Document document} that owns\n * this position's {@link module:engine/model/position~Position#root root}.\n *\n * @ignore\n * @private\n * @method module:engine/model/liveposition~LivePosition.bindWithDocument\n */\n\n\nexports.default = LivePosition;\nfunction bindWithDocument() {\n\tvar _this2 = this;\n\n\t// Operation types handled by LivePosition (these are operations that change model tree structure).\n\tvar supportedTypes = new Set(['insert', 'move', 'remove', 'reinsert']);\n\n\tthis.listenTo(this.root.document, 'change', function (event, type, changes) {\n\t\tif (supportedTypes.has(type)) {\n\t\t\ttransform.call(_this2, type, changes.range, changes.sourcePosition);\n\t\t}\n\t}, { priority: 'high' });\n}\n\n/**\n * Updates this position accordingly to the updates applied to the model. Bases on change events.\n *\n * @ignore\n * @private\n * @method transform\n * @param {String} type Type of changes applied to the Tree Model.\n * @param {module:engine/model/range~Range} range Range containing the result of applied change.\n * @param {module:engine/model/position~Position} [position] Additional position parameter provided by some change events.\n */\nfunction transform(type, range, position) {\n\t/* eslint-disable no-case-declarations */\n\tvar howMany = range.end.offset - range.start.offset;\n\tvar transformed = void 0;\n\n\tswitch (type) {\n\t\tcase 'insert':\n\t\t\tvar insertBefore = this.stickiness == 'sticksToNext';\n\t\t\ttransformed = this._getTransformedByInsertion(range.start, howMany, insertBefore);\n\t\t\tbreak;\n\n\t\tcase 'move':\n\t\tcase 'remove':\n\t\tcase 'reinsert':\n\t\t\tvar originalRange = _range2.default.createFromPositionAndShift(position, howMany);\n\n\t\t\tvar gotMoved = originalRange.containsPosition(this) || originalRange.start.isEqual(this) && this.stickiness == 'sticksToNext' || originalRange.end.isEqual(this) && this.stickiness == 'sticksToPrevious';\n\n\t\t\t// We can't use ._getTransformedByMove() because we have a different if-condition.\n\t\t\tif (gotMoved) {\n\t\t\t\ttransformed = this._getCombined(position, range.start);\n\t\t\t} else {\n\t\t\t\tvar _insertBefore = this.stickiness == 'sticksToNext';\n\t\t\t\ttransformed = this._getTransformedByMove(position, range.start, howMany, _insertBefore);\n\t\t\t}\n\t\t\tbreak;\n\t}\n\n\tif (!this.isEqual(transformed)) {\n\t\tvar oldPosition = _position2.default.createFromPosition(this);\n\n\t\tthis.path = transformed.path;\n\t\tthis.root = transformed.root;\n\n\t\tthis.fire('change', oldPosition);\n\t}\n\t/* eslint-enable no-case-declarations */\n}\n\n(0, _mix2.default)(LivePosition, _emittermixin2.default);\n\n/**\n * Enum representing how position is \"sticking\" with their neighbour nodes.\n * Possible values: `'sticksToNext'`, `'sticksToPrevious'`.\n *\n * @typedef {String} module:engine/model/position~PositionStickiness\n */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/liveposition.js\n// module id = 165\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _element = require('./element');\n\nvar _element2 = _interopRequireDefault(_element);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nvar _node = require('./node');\n\nvar _node2 = _interopRequireDefault(_node);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/view/emptyelement\n */\n\n/**\n * EmptyElement class. It is used to represent elements that cannot contain any child nodes.\n */\nvar EmptyElement = function (_Element) {\n\t_inherits(EmptyElement, _Element);\n\n\t/**\n  * Creates new instance of EmptyElement.\n  *\n  * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-emptyelement-cannot-add` when third parameter is passed,\n  * to inform that usage of EmptyElement is incorrect (adding child nodes to EmptyElement is forbidden).\n  *\n  * @param {String} name Node name.\n  * @param {Object|Iterable} [attributes] Collection of attributes.\n  */\n\tfunction EmptyElement(name, attributes, children) {\n\t\t_classCallCheck(this, EmptyElement);\n\n\t\t/**\n   * Returns `null` because filler is not needed for EmptyElements.\n   *\n   * @method #getFillerOffset\n   * @returns {null} Always returns null.\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (EmptyElement.__proto__ || Object.getPrototypeOf(EmptyElement)).call(this, name, attributes, children));\n\n\t\t_this.getFillerOffset = getFillerOffset;\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(EmptyElement, [{\n\t\tkey: 'is',\n\t\tvalue: function is(type) {\n\t\t\tvar name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\t\t\tif (!name) {\n\t\t\t\treturn type == 'emptyElement' || _get(EmptyElement.prototype.__proto__ || Object.getPrototypeOf(EmptyElement.prototype), 'is', this).call(this, type);\n\t\t\t} else {\n\t\t\t\treturn type == 'emptyElement' && name == this.name || _get(EmptyElement.prototype.__proto__ || Object.getPrototypeOf(EmptyElement.prototype), 'is', this).call(this, type, name);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Overrides {@link module:engine/view/element~Element#insertChildren} method.\n   * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-emptyelement-cannot-add` to prevent\n   * adding any child nodes to EmptyElement.\n   */\n\n\t}, {\n\t\tkey: 'insertChildren',\n\t\tvalue: function insertChildren(index, nodes) {\n\t\t\tif (nodes && (nodes instanceof _node2.default || Array.from(nodes).length > 0)) {\n\t\t\t\t/**\n     * Cannot add children to {@link module:engine/view/emptyelement~EmptyElement}.\n     *\n     * @error view-emptyelement-cannot-add\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('view-emptyelement-cannot-add: Cannot add child nodes to EmptyElement instance.');\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn EmptyElement;\n}(_element2.default);\n\n// Returns `null` because block filler is not needed for EmptyElements.\n//\n// @returns {null}\n\n\nexports.default = EmptyElement;\nfunction getFillerOffset() {\n\treturn null;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/view/emptyelement.js\n// module id = 166\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/matcher\n */\n\n/**\n * View matcher class.\n * Instance of this class can be used to find {@link module:engine/view/element~Element elements} that match given pattern.\n */\nvar Matcher = function () {\n\t/**\n  * Creates new instance of Matcher.\n  *\n  * @param {String|RegExp|Object} [pattern] Match patterns. See {@link module:engine/view/matcher~Matcher#add add method} for\n  * more information.\n  */\n\tfunction Matcher() {\n\t\t_classCallCheck(this, Matcher);\n\n\t\tthis._patterns = [];\n\n\t\tthis.add.apply(this, arguments);\n\t}\n\n\t/**\n  * Adds pattern or patterns to matcher instance.\n  *\n  * Example patterns matching element's name:\n  *\n  *\t\t// String.\n  *\t\tmatcher.add( 'div' );\n  *\t\tmatcher.add( { name: 'div' } );\n  *\n  *\t\t// Regular expression.\n  *\t\tmatcher.add( /^\\w/ );\n  *\t\tmatcher.add( { name: /^\\w/ } );\n  *\n  * Example pattern matching element's attributes:\n  *\n  *\t\tmatcher.add( {\n  *\t\t\tattribute: {\n  *\t\t\t\ttitle: 'foobar',\n  *\t\t\t\tfoo: /^\\w+/\n  *\t\t\t}\n  *\t\t} );\n  *\n  * Example patterns matching element's classes:\n  *\n  *\t\t// Single class.\n  *\t\tmatcher.add( {\n  *\t\t\tclass: 'foobar'\n  *\t\t} );\n  *\n  *\t\t// Single class using regular expression.\n  *\t\tmatcher.add( {\n  *\t\t\tclass: /foo.../\n  *\t\t} );\n  *\n  *\t\t// Multiple classes to match.\n  *\t\tmatcher.add( {\n  *\t\t\tclass: [ 'baz', 'bar', /foo.../ ]\n  *\t\t} ):\n  *\n  * Example pattern matching element's styles:\n  *\n  *\t\tmatcher.add( {\n  *\t\t\tstyle: {\n  *\t\t\t\tposition: 'absolute',\n  *\t\t\t\tcolor: /^\\w*blue$/\n  *\t\t\t}\n  *\t\t} );\n  *\n  * Example function pattern:\n  *\n  *\t\tmatcher.add( ( element ) => {\n  *\t\t\t// Result of this function will be included in `match`\n  *\t\t\t// property of the object returned from matcher.match() call.\n  *\t\t\tif ( element.name === 'div' && element.childCount > 0 ) {\n  *\t\t\t\treturn { name: true };\n  *\t\t\t}\n  *\n  *\t\t\treturn null;\n  *\t\t} );\n  *\n  * Multiple patterns can be added in one call:\n  *\n  * \t\tmatcher.add( 'div', { class: 'foobar' } );\n  *\n  * @param {Object|String|RegExp|Function} pattern Object describing pattern details. If string or regular expression\n  * is provided it will be used to match element's name. Pattern can be also provided in a form\n  * of a function - then this function will be called with each {@link module:engine/view/element~Element element} as a parameter.\n  * Function's return value will be stored under `match` key of the object returned from\n  * {@link module:engine/view/matcher~Matcher#match match} or {@link module:engine/view/matcher~Matcher#matchAll matchAll} methods.\n  * @param {String|RegExp} [pattern.name] Name or regular expression to match element's name.\n  * @param {Object} [pattern.attribute] Object with key-value pairs representing attributes to match. Each object key\n  * represents attribute name. Value under that key can be either a string or a regular expression and it will be\n  * used to match attribute value.\n  * @param {String|RegExp|Array} [pattern.class] Class name or array of class names to match. Each name can be\n  * provided in a form of string or regular expression.\n  * @param {Object} [pattern.style] Object with key-value pairs representing styles to match. Each object key\n  * represents style name. Value under that key can be either a string or a regular expression and it will be used\n  * to match style value.\n  */\n\n\n\t_createClass(Matcher, [{\n\t\tkey: 'add',\n\t\tvalue: function add() {\n\t\t\tfor (var _len = arguments.length, pattern = Array(_len), _key = 0; _key < _len; _key++) {\n\t\t\t\tpattern[_key] = arguments[_key];\n\t\t\t}\n\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = pattern[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar item = _step.value;\n\n\t\t\t\t\t// String or RegExp pattern is used as element's name.\n\t\t\t\t\tif (typeof item == 'string' || item instanceof RegExp) {\n\t\t\t\t\t\titem = { name: item };\n\t\t\t\t\t}\n\n\t\t\t\t\t// Single class name/RegExp can be provided.\n\t\t\t\t\tif (item.class && (typeof item.class == 'string' || item.class instanceof RegExp)) {\n\t\t\t\t\t\titem.class = [item.class];\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._patterns.push(item);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Matches elements for currently stored patterns. Returns match information about first found\n   * {@link module:engine/view/element~Element element}, otherwise returns `null`.\n   *\n   * Example of returned object:\n   *\n   *\t\t{\n   *\t\t\telement: <instance of found element>,\n   *\t\t\tpattern: <pattern used to match found element>,\n   *\t\t\tmatch: {\n   *\t\t\t\tname: true,\n   *\t\t\t\tattribute: [ 'title', 'href' ],\n   *\t\t\t\tclass: [ 'foo' ],\n   *\t\t\t\tstyle: [ 'color', 'position' ]\n   *\t\t\t}\n   *\t\t}\n   *\n   * @see module:engine/view/matcher~Matcher#add\n   * @see module:engine/view/matcher~Matcher#matchAll\n   * @param {...module:engine/view/element~Element} element View element to match against stored patterns.\n   * @returns {Object|null} result\n   * @returns {module:engine/view/element~Element} result.element Matched view element.\n   * @returns {Object|String|RegExp|Function} result.pattern Pattern that was used to find matched element.\n   * @returns {Object} result.match Object representing matched element parts.\n   * @returns {Boolean} [result.match.name] True if name of the element was matched.\n   * @returns {Array} [result.match.attribute] Array with matched attribute names.\n   * @returns {Array} [result.match.class] Array with matched class names.\n   * @returns {Array} [result.match.style] Array with matched style names.\n   */\n\n\t}, {\n\t\tkey: 'match',\n\t\tvalue: function match() {\n\t\t\tfor (var _len2 = arguments.length, element = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t\t\t\telement[_key2] = arguments[_key2];\n\t\t\t}\n\n\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\tvar _didIteratorError2 = false;\n\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator2 = element[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\tvar singleElement = _step2.value;\n\t\t\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\t\t\tvar _didIteratorError3 = false;\n\t\t\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (var _iterator3 = this._patterns[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\t\t\tvar _pattern = _step3.value;\n\n\t\t\t\t\t\t\tvar match = isElementMatching(singleElement, _pattern);\n\n\t\t\t\t\t\t\tif (match) {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\telement: singleElement,\n\t\t\t\t\t\t\t\t\tpattern: _pattern,\n\t\t\t\t\t\t\t\t\tmatch: match\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t\t\t_iteratorError3 = err;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t_iteratorError2 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n   * Matches elements for currently stored patterns. Returns array of match information with all found\n   * {@link module:engine/view/element~Element elements}. If no element is found - returns `null`.\n   *\n   * @see module:engine/view/matcher~Matcher#add\n   * @see module:engine/view/matcher~Matcher#match\n   * @param {...module:engine/view/element~Element} element View element to match against stored patterns.\n   * @returns {Array.<Object>|null} Array with match information about found elements or `null`. For more information\n   * see {@link module:engine/view/matcher~Matcher#match match method} description.\n   */\n\n\t}, {\n\t\tkey: 'matchAll',\n\t\tvalue: function matchAll() {\n\t\t\tvar results = [];\n\n\t\t\tfor (var _len3 = arguments.length, element = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n\t\t\t\telement[_key3] = arguments[_key3];\n\t\t\t}\n\n\t\t\tvar _iteratorNormalCompletion4 = true;\n\t\t\tvar _didIteratorError4 = false;\n\t\t\tvar _iteratorError4 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator4 = element[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\t\t\tvar singleElement = _step4.value;\n\t\t\t\t\tvar _iteratorNormalCompletion5 = true;\n\t\t\t\t\tvar _didIteratorError5 = false;\n\t\t\t\t\tvar _iteratorError5 = undefined;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (var _iterator5 = this._patterns[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t\t\t\t\t\t\tvar _pattern2 = _step5.value;\n\n\t\t\t\t\t\t\tvar match = isElementMatching(singleElement, _pattern2);\n\n\t\t\t\t\t\t\tif (match) {\n\t\t\t\t\t\t\t\tresults.push({\n\t\t\t\t\t\t\t\t\telement: singleElement,\n\t\t\t\t\t\t\t\t\tpattern: _pattern2,\n\t\t\t\t\t\t\t\t\tmatch: match\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t_didIteratorError5 = true;\n\t\t\t\t\t\t_iteratorError5 = err;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t\t\t\t\t\t\t\t_iterator5.return();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (_didIteratorError5) {\n\t\t\t\t\t\t\t\tthrow _iteratorError5;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError4 = true;\n\t\t\t\t_iteratorError4 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t\t\t_iterator4.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError4) {\n\t\t\t\t\t\tthrow _iteratorError4;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn results.length > 0 ? results : null;\n\t\t}\n\n\t\t/**\n   * Returns the name of the element to match if there is exactly one pattern added to the matcher instance\n   * and it matches element name defined by `string` (not `RegExp`). Otherwise, returns `null`.\n   *\n   * @returns {String|null} Element name trying to match.\n   */\n\n\t}, {\n\t\tkey: 'getElementName',\n\t\tvalue: function getElementName() {\n\t\t\tif (this._patterns.length !== 1) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar pattern = this._patterns[0];\n\t\t\tvar name = pattern.name;\n\n\t\t\treturn typeof pattern != 'function' && name && !(name instanceof RegExp) ? name : null;\n\t\t}\n\t}]);\n\n\treturn Matcher;\n}();\n\n// Returns match information if {@link module:engine/view/element~Element element} is matching provided pattern.\n// If element cannot be matched to provided pattern - returns `null`.\n//\n// @param {module:engine/view/element~Element} element\n// @param {Object|String|RegExp|Function} pattern\n// @returns {Object|null} Returns object with match information or null if element is not matching.\n\n\nexports.default = Matcher;\nfunction isElementMatching(element, pattern) {\n\t// If pattern is provided as function - return result of that function;\n\tif (typeof pattern == 'function') {\n\t\treturn pattern(element);\n\t}\n\n\tvar match = {};\n\t// Check element's name.\n\tif (pattern.name) {\n\t\tmatch.name = matchName(pattern.name, element.name);\n\n\t\tif (!match.name) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// Check element's attributes.\n\tif (pattern.attribute) {\n\t\tmatch.attribute = matchAttributes(pattern.attribute, element);\n\n\t\tif (!match.attribute) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// Check element's classes.\n\tif (pattern.class) {\n\t\tmatch.class = matchClasses(pattern.class, element);\n\n\t\tif (!match.class) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t// Check element's styles.\n\tif (pattern.style) {\n\t\tmatch.style = matchStyles(pattern.style, element);\n\n\t\tif (!match.style) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn match;\n}\n\n// Checks if name can be matched by provided pattern.\n//\n// @param {String|RegExp} pattern\n// @param {String} name\n// @returns {Boolean} Returns `true` if name can be matched, `false` otherwise.\nfunction matchName(pattern, name) {\n\t// If pattern is provided as RegExp - test against this regexp.\n\tif (pattern instanceof RegExp) {\n\t\treturn pattern.test(name);\n\t}\n\n\treturn pattern === name;\n}\n\n// Checks if attributes of provided element can be matched against provided patterns.\n//\n// @param {Object} patterns Object with information about attributes to match. Each key of the object will be\n// used as attribute name. Value of each key can be a string or regular expression to match against attribute value.\n// @param {module:engine/view/element~Element} element Element which attributes will be tested.\n// @returns {Array|null} Returns array with matched attribute names or `null` if no attributes were matched.\nfunction matchAttributes(patterns, element) {\n\tvar match = [];\n\n\tfor (var name in patterns) {\n\t\tvar pattern = patterns[name];\n\n\t\tif (element.hasAttribute(name)) {\n\t\t\tvar attribute = element.getAttribute(name);\n\n\t\t\tif (pattern instanceof RegExp) {\n\t\t\t\tif (pattern.test(attribute)) {\n\t\t\t\t\tmatch.push(name);\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else if (attribute === pattern) {\n\t\t\t\tmatch.push(name);\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\treturn match;\n}\n\n// Checks if classes of provided element can be matched against provided patterns.\n//\n// @param {Array.<String|RegExp>} patterns Array of strings or regular expressions to match against element's classes.\n// @param {module:engine/view/element~Element} element Element which classes will be tested.\n// @returns {Array|null} Returns array with matched class names or `null` if no classes were matched.\nfunction matchClasses(patterns, element) {\n\tvar match = [];\n\n\tvar _iteratorNormalCompletion6 = true;\n\tvar _didIteratorError6 = false;\n\tvar _iteratorError6 = undefined;\n\n\ttry {\n\t\tfor (var _iterator6 = patterns[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t\t\tvar pattern = _step6.value;\n\n\t\t\tif (pattern instanceof RegExp) {\n\t\t\t\tvar classes = element.getClassNames();\n\n\t\t\t\tvar _iteratorNormalCompletion7 = true;\n\t\t\t\tvar _didIteratorError7 = false;\n\t\t\t\tvar _iteratorError7 = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator7 = classes[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n\t\t\t\t\t\tvar name = _step7.value;\n\n\t\t\t\t\t\tif (pattern.test(name)) {\n\t\t\t\t\t\t\tmatch.push(name);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError7 = true;\n\t\t\t\t\t_iteratorError7 = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion7 && _iterator7.return) {\n\t\t\t\t\t\t\t_iterator7.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError7) {\n\t\t\t\t\t\t\tthrow _iteratorError7;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (match.length === 0) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else if (element.hasClass(pattern)) {\n\t\t\t\tmatch.push(pattern);\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError6 = true;\n\t\t_iteratorError6 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion6 && _iterator6.return) {\n\t\t\t\t_iterator6.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError6) {\n\t\t\t\tthrow _iteratorError6;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn match;\n}\n\n// Checks if styles of provided element can be matched against provided patterns.\n//\n// @param {Object} patterns Object with information about styles to match. Each key of the object will be\n// used as style name. Value of each key can be a string or regular expression to match against style value.\n// @param {module:engine/view/element~Element} element Element which styles will be tested.\n// @returns {Array|null} Returns array with matched style names or `null` if no styles were matched.\nfunction matchStyles(patterns, element) {\n\tvar match = [];\n\n\tfor (var name in patterns) {\n\t\tvar pattern = patterns[name];\n\n\t\tif (element.hasStyle(name)) {\n\t\t\tvar style = element.getStyle(name);\n\n\t\t\tif (pattern instanceof RegExp) {\n\t\t\t\tif (pattern.test(style)) {\n\t\t\t\t\tmatch.push(name);\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else if (style === pattern) {\n\t\t\t\tmatch.push(name);\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\treturn match;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/view/matcher.js\n// module id = 167\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _observer = require('./observer');\n\nvar _observer2 = _interopRequireDefault(_observer);\n\nvar _selection = require('../selection');\n\nvar _selection2 = _interopRequireDefault(_selection);\n\nvar _filler = require('../filler');\n\nvar _isEqualWith = require('@ckeditor/ckeditor5-utils/src/lib/lodash/isEqualWith');\n\nvar _isEqualWith2 = _interopRequireDefault(_isEqualWith);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/view/observer/mutationobserver\n */\n\n/* globals window */\n\n/**\n * Mutation observer class observes changes in the DOM, fires {@link module:engine/view/document~Document#event:mutations} event, mark view\n * elements as changed and call {@link module:engine/view/renderer~Renderer#render}.\n * Because all mutated nodes are marked as \"to be rendered\" and the\n * {@link module:engine/view/renderer~Renderer#render} is called, all changes will be reverted, unless the mutation will be handled by the\n * {@link module:engine/view/document~Document#event:mutations} event listener. It means user will see only handled changes, and the editor\n * will block all changes which are not handled.\n *\n * Mutation Observer also take care of reducing number of mutations which are fired. It removes duplicates and\n * mutations on elements which do not have corresponding view elements. Also\n * {@link module:engine/view/observer/mutationobserver~MutatedText text mutation} is fired only if parent element do not change child list.\n *\n * Note that this observer is attached by the {@link module:engine/view/document~Document} and is available by default.\n *\n * @extends module:engine/view/observer/observer~Observer\n */\nvar MutationObserver = function (_Observer) {\n\t_inherits(MutationObserver, _Observer);\n\n\tfunction MutationObserver(document) {\n\t\t_classCallCheck(this, MutationObserver);\n\n\t\t/**\n   * Native mutation observer config.\n   *\n   * @private\n   * @member {Object}\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (MutationObserver.__proto__ || Object.getPrototypeOf(MutationObserver)).call(this, document));\n\n\t\t_this._config = {\n\t\t\tchildList: true,\n\t\t\tcharacterData: true,\n\t\t\tcharacterDataOldValue: true,\n\t\t\tsubtree: true\n\t\t};\n\n\t\t/**\n   * Reference to the {@link module:engine/view/document~Document#domConverter}.\n   *\n   * @member {module:engine/view/domconverter~DomConverter}\n   */\n\t\t_this.domConverter = document.domConverter;\n\n\t\t/**\n   * Reference to the {@link module:engine/view/document~Document#renderer}.\n   *\n   * @member {module:engine/view/renderer~Renderer}\n   */\n\t\t_this.renderer = document.renderer;\n\n\t\t/**\n   * Observed DOM elements.\n   *\n   * @private\n   * @member {Array.<HTMLElement>}\n   */\n\t\t_this._domElements = [];\n\n\t\t/**\n   * Native mutation observer.\n   *\n   * @private\n   * @member {MutationObserver}\n   */\n\t\t_this._mutationObserver = new window.MutationObserver(_this._onMutations.bind(_this));\n\t\treturn _this;\n\t}\n\n\t/**\n  * Synchronously fires {@link module:engine/view/document~Document#event:mutations} event with all mutations in record queue.\n  * At the same time empties the queue so mutations will not be fired twice.\n  */\n\n\n\t_createClass(MutationObserver, [{\n\t\tkey: 'flush',\n\t\tvalue: function flush() {\n\t\t\tthis._onMutations(this._mutationObserver.takeRecords());\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'observe',\n\t\tvalue: function observe(domElement) {\n\t\t\tthis._domElements.push(domElement);\n\n\t\t\tif (this.isEnabled) {\n\t\t\t\tthis._mutationObserver.observe(domElement, this._config);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'enable',\n\t\tvalue: function enable() {\n\t\t\t_get(MutationObserver.prototype.__proto__ || Object.getPrototypeOf(MutationObserver.prototype), 'enable', this).call(this);\n\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = this._domElements[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar domElement = _step.value;\n\n\t\t\t\t\tthis._mutationObserver.observe(domElement, this._config);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'disable',\n\t\tvalue: function disable() {\n\t\t\t_get(MutationObserver.prototype.__proto__ || Object.getPrototypeOf(MutationObserver.prototype), 'disable', this).call(this);\n\n\t\t\tthis._mutationObserver.disconnect();\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {\n\t\t\t_get(MutationObserver.prototype.__proto__ || Object.getPrototypeOf(MutationObserver.prototype), 'destroy', this).call(this);\n\n\t\t\tthis._mutationObserver.disconnect();\n\t\t}\n\n\t\t/**\n   * Handles mutations. Deduplicates, mark view elements to sync, fire event and call render.\n   *\n   * @private\n   * @param {Array.<Object>} domMutations Array of native mutations.\n   */\n\n\t}, {\n\t\tkey: '_onMutations',\n\t\tvalue: function _onMutations(domMutations) {\n\t\t\t// As a result of this.flush() we can have an empty collection.\n\t\t\tif (domMutations.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar domConverter = this.domConverter;\n\n\t\t\t// Use map and set for deduplication.\n\t\t\tvar mutatedTexts = new Map();\n\t\t\tvar mutatedElements = new Set();\n\n\t\t\t// Handle `childList` mutations first, so we will be able to check if the `characterData` mutation is in the\n\t\t\t// element with changed structure anyway.\n\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\tvar _didIteratorError2 = false;\n\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator2 = domMutations[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\tvar mutation = _step2.value;\n\n\t\t\t\t\tif (mutation.type === 'childList') {\n\t\t\t\t\t\tvar element = domConverter.mapDomToView(mutation.target);\n\n\t\t\t\t\t\t// Do not collect mutations from UIElements.\n\t\t\t\t\t\tif (element && element.is('uiElement')) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (element && !this._isBogusBrMutation(mutation)) {\n\t\t\t\t\t\t\tmutatedElements.add(element);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Handle `characterData` mutations later, when we have the full list of nodes which changed structure.\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t_iteratorError2 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\tvar _didIteratorError3 = false;\n\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator3 = domMutations[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\tvar _mutation = _step3.value;\n\n\t\t\t\t\tvar element = domConverter.mapDomToView(_mutation.target);\n\n\t\t\t\t\t// Do not collect mutations from UIElements.\n\t\t\t\t\tif (element && element.is('uiElement')) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_mutation.type === 'characterData') {\n\t\t\t\t\t\tvar text = domConverter.findCorrespondingViewText(_mutation.target);\n\n\t\t\t\t\t\tif (text && !mutatedElements.has(text.parent)) {\n\t\t\t\t\t\t\t// Use text as a key, for deduplication. If there will be another mutation on the same text element\n\t\t\t\t\t\t\t// we will have only one in the map.\n\t\t\t\t\t\t\tmutatedTexts.set(text, {\n\t\t\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\t\t\toldText: text.data,\n\t\t\t\t\t\t\t\tnewText: (0, _filler.getDataWithoutFiller)(_mutation.target),\n\t\t\t\t\t\t\t\tnode: text\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// When we added first letter to the text node which had only inline filler, for the DOM it is mutation\n\t\t\t\t\t\t// on text, but for the view, where filler text node did not existed, new text node was created, so we\n\t\t\t\t\t\t// need to fire 'children' mutation instead of 'text'.\n\t\t\t\t\t\telse if (!text && (0, _filler.startsWithFiller)(_mutation.target)) {\n\t\t\t\t\t\t\t\tmutatedElements.add(domConverter.mapDomToView(_mutation.target.parentNode));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Now we build the list of mutations to fire and mark elements. We did not do it earlier to avoid marking the\n\t\t\t\t// same node multiple times in case of duplication.\n\n\t\t\t\t// List of mutations we will fire.\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t_iteratorError3 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar viewMutations = [];\n\n\t\t\tvar _iteratorNormalCompletion4 = true;\n\t\t\tvar _didIteratorError4 = false;\n\t\t\tvar _iteratorError4 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator4 = mutatedTexts.values()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\t\t\tvar mutatedText = _step4.value;\n\n\t\t\t\t\tthis.renderer.markToSync('text', mutatedText.node);\n\t\t\t\t\tviewMutations.push(mutatedText);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError4 = true;\n\t\t\t\t_iteratorError4 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t\t\t_iterator4.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError4) {\n\t\t\t\t\t\tthrow _iteratorError4;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar _iteratorNormalCompletion5 = true;\n\t\t\tvar _didIteratorError5 = false;\n\t\t\tvar _iteratorError5 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator5 = mutatedElements[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t\t\t\t\tvar viewElement = _step5.value;\n\n\t\t\t\t\tvar domElement = domConverter.mapViewToDom(viewElement);\n\t\t\t\t\tvar viewChildren = Array.from(viewElement.getChildren());\n\t\t\t\t\tvar newViewChildren = Array.from(domConverter.domChildrenToView(domElement));\n\n\t\t\t\t\t// It may happen that as a result of many changes (sth was inserted and then removed),\n\t\t\t\t\t// both elements haven't really changed. #1031\n\t\t\t\t\tif (!(0, _isEqualWith2.default)(viewChildren, newViewChildren, sameNodes)) {\n\t\t\t\t\t\tthis.renderer.markToSync('children', viewElement);\n\n\t\t\t\t\t\tviewMutations.push({\n\t\t\t\t\t\t\ttype: 'children',\n\t\t\t\t\t\t\toldChildren: viewChildren,\n\t\t\t\t\t\t\tnewChildren: newViewChildren,\n\t\t\t\t\t\t\tnode: viewElement\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Retrieve `domSelection` using `ownerDocument` of one of mutated nodes.\n\t\t\t\t// There should not be simultaneous mutation in multiple documents, so it's fine.\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError5 = true;\n\t\t\t\t_iteratorError5 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t\t\t\t\t\t_iterator5.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError5) {\n\t\t\t\t\t\tthrow _iteratorError5;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar domSelection = domMutations[0].target.ownerDocument.getSelection();\n\n\t\t\tvar viewSelection = null;\n\n\t\t\tif (domSelection && domSelection.anchorNode) {\n\t\t\t\t// If `domSelection` is inside a dom node that is already bound to a view node from view tree, get\n\t\t\t\t// corresponding selection in the view and pass it together with `viewMutations`. The `viewSelection` may\n\t\t\t\t// be used by features handling mutations.\n\t\t\t\t// Only one range is supported.\n\n\t\t\t\tvar viewSelectionAnchor = domConverter.domPositionToView(domSelection.anchorNode, domSelection.anchorOffset);\n\t\t\t\tvar viewSelectionFocus = domConverter.domPositionToView(domSelection.focusNode, domSelection.focusOffset);\n\n\t\t\t\t// Anchor and focus has to be properly mapped to view.\n\t\t\t\tif (viewSelectionAnchor && viewSelectionFocus) {\n\t\t\t\t\tviewSelection = new _selection2.default();\n\t\t\t\t\tviewSelection.collapse(viewSelectionAnchor);\n\t\t\t\t\tviewSelection.setFocus(viewSelectionFocus);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.document.fire('mutations', viewMutations, viewSelection);\n\n\t\t\t// If nothing changes on `mutations` event, at this point we have \"dirty DOM\" (changed) and de-synched\n\t\t\t// view (which has not been changed). In order to \"reset DOM\" we render the view again.\n\t\t\tthis.document.render();\n\n\t\t\tfunction sameNodes(child1, child2) {\n\t\t\t\t// First level of comparison (array of children vs array of children) – use the Lodash's default behavior.\n\t\t\t\tif (Array.isArray(child1)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Elements.\n\t\t\t\tif (child1 === child2) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\t// Texts.\n\t\t\t\telse if (child1.is('text') && child2.is('text')) {\n\t\t\t\t\t\treturn child1.data === child2.data;\n\t\t\t\t\t}\n\n\t\t\t\t// Not matching types.\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Checks if mutation was generated by the browser inserting bogus br on the end of the block element.\n   * Such mutations are generated while pressing space or performing native spellchecker correction\n   * on the end of the block element in Firefox browser.\n   *\n   * @private\n   * @param {Object} mutation Native mutation object.\n   * @returns {Boolean}\n   */\n\n\t}, {\n\t\tkey: '_isBogusBrMutation',\n\t\tvalue: function _isBogusBrMutation(mutation) {\n\t\t\tvar addedNode = null;\n\n\t\t\t// Check if mutation added only one node on the end of its parent.\n\t\t\tif (mutation.nextSibling === null && mutation.removedNodes.length === 0 && mutation.addedNodes.length == 1) {\n\t\t\t\taddedNode = this.domConverter.domToView(mutation.addedNodes[0], {\n\t\t\t\t\twithChildren: false\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn addedNode && addedNode.is('element', 'br');\n\t\t}\n\t}]);\n\n\treturn MutationObserver;\n}(_observer2.default);\n\n/**\n * Fired when mutation occurred. If tree view is not changed on this event, DOM will be reverter to the state before\n * mutation, so all changes which should be applied, should be handled on this event.\n *\n * Introduced by {@link module:engine/view/observer/mutationobserver~MutationObserver}.\n *\n * Note that because {@link module:engine/view/observer/mutationobserver~MutationObserver} is attached by the\n * {@link module:engine/view/document~Document}\n * this event is available by default.\n *\n * @see module:engine/view/observer/mutationobserver~MutationObserver\n * @event module:engine/view/document~Document#event:mutations\n * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|module:engine/view/observer/mutationobserver~MutatedChildren>}\n * viewMutations Array of mutations.\n * For mutated texts it will be {@link module:engine/view/observer/mutationobserver~MutatedText} and for mutated elements it will be\n * {@link module:engine/view/observer/mutationobserver~MutatedChildren}. You can recognize the type based on the `type` property.\n * @param {module:engine/view/selection~Selection|null} viewSelection View selection that is a result of converting DOM selection to view.\n * Keep in\n * mind that the DOM selection is already \"updated\", meaning that it already acknowledges changes done in mutation.\n */\n\n/**\n * Mutation item for text.\n *\n * @see module:engine/view/document~Document#event:mutations\n * @see module:engine/view/observer/mutationobserver~MutatedChildren\n *\n * @typedef {Object} module:engine/view/observer/mutationobserver~MutatedText\n *\n * @property {String} type For text mutations it is always 'text'.\n * @property {module:engine/view/text~Text} node Mutated text node.\n * @property {String} oldText Old text.\n * @property {String} newText New text.\n */\n\n/**\n * Mutation item for child nodes.\n *\n * @see module:engine/view/document~Document#event:mutations\n * @see module:engine/view/observer/mutationobserver~MutatedText\n *\n * @typedef {Object} module:engine/view/observer/mutationobserver~MutatedChildren\n *\n * @property {String} type For child nodes mutations it is always 'children'.\n * @property {module:engine/view/element~Element} node Parent of the mutated children.\n * @property {Array.<module:engine/view/node~Node>} oldChildren Old child nodes.\n * @property {Array.<module:engine/view/node~Node>} newChildren New child nodes.\n */\n\n\nexports.default = MutationObserver;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/view/observer/mutationobserver.js\n// module id = 168\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _editableelement = require('./editableelement');\n\nvar _editableelement2 = _interopRequireDefault(_editableelement);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/view/rooteditableelement\n */\n\nvar rootNameSymbol = Symbol('rootName');\n\n/**\n * Class representing a single root in the data view. A root can be either {@link #isReadOnly editable or read-only}, but\n * in both cases it is called \"an editable\". Roots can contain other {@link module:engine/view/editableelement~EditableElement editable\n * elements}\n * making them \"nested editables\".\n *\n * @extends module:engine/view/editableelement~EditableElement\n */\n\nvar RootEditableElement = function (_EditableElement) {\n\t_inherits(RootEditableElement, _EditableElement);\n\n\t/**\n  * Creates root editable element.\n  *\n  * @param {module:engine/view/document~Document} document {@link module:engine/view/document~Document} that is an owner of the root.\n  * @param {String} name Node name.\n  */\n\tfunction RootEditableElement(name) {\n\t\t_classCallCheck(this, RootEditableElement);\n\n\t\t/**\n   * Name of this root inside {@link module:engine/view/document~Document} that is an owner of this root. If no\n   * other name is set, `main` name is used.\n   *\n   * @member {String}\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (RootEditableElement.__proto__ || Object.getPrototypeOf(RootEditableElement)).call(this, name));\n\n\t\t_this.rootName = 'main';\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(RootEditableElement, [{\n\t\tkey: 'is',\n\t\tvalue: function is(type) {\n\t\t\tvar name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\t\t\tif (!name) {\n\t\t\t\treturn type == 'rootElement' || _get(RootEditableElement.prototype.__proto__ || Object.getPrototypeOf(RootEditableElement.prototype), 'is', this).call(this, type);\n\t\t\t} else {\n\t\t\t\treturn type == 'rootElement' && name == this.name || _get(RootEditableElement.prototype.__proto__ || Object.getPrototypeOf(RootEditableElement.prototype), 'is', this).call(this, type, name);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'rootName',\n\t\tget: function get() {\n\t\t\treturn this.getCustomProperty(rootNameSymbol);\n\t\t},\n\t\tset: function set(rootName) {\n\t\t\tthis.setCustomProperty(rootNameSymbol, rootName);\n\t\t}\n\t}]);\n\n\treturn RootEditableElement;\n}(_editableelement2.default);\n\nexports.default = RootEditableElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/view/rooteditableelement.js\n// module id = 169\n// module chunks = 0","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if ('value' in descriptor)\n                descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }\n    return function (Constructor, protoProps, staticProps) {\n        if (protoProps)\n            defineProperties(Constructor.prototype, protoProps);\n        if (staticProps)\n            defineProperties(Constructor, staticProps);\n        return Constructor;\n    };\n}();\nexports.createImageViewElement = createImageViewElement;\nvar _plugin = require('@ckeditor/ckeditor5-core/src/plugin');\nvar _plugin2 = _interopRequireDefault(_plugin);\nvar _buildmodelconverter = require('@ckeditor/ckeditor5-engine/src/conversion/buildmodelconverter');\nvar _buildmodelconverter2 = _interopRequireDefault(_buildmodelconverter);\nvar _buildviewconverter = require('@ckeditor/ckeditor5-engine/src/conversion/buildviewconverter');\nvar _buildviewconverter2 = _interopRequireDefault(_buildviewconverter);\nvar _converters = require('./converters');\nvar _utils = require('./utils');\nvar _element = require('@ckeditor/ckeditor5-engine/src/model/element');\nvar _element2 = _interopRequireDefault(_element);\nvar _containerelement = require('@ckeditor/ckeditor5-engine/src/view/containerelement');\nvar _containerelement2 = _interopRequireDefault(_containerelement);\nvar _emptyelement = require('@ckeditor/ckeditor5-engine/src/view/emptyelement');\nvar _emptyelement2 = _interopRequireDefault(_emptyelement);\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError('Cannot call a class as a function');\n    }\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n    }\n    return call && (typeof call === 'object' || typeof call === 'function') ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n        throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass)\n        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n/**\n * @module image/image/imageengine\n */\n/**\n * The image engine plugin.\n * Registers `<image>` as a block element in the document schema and allows it to have two attributes: `src` and `alt`.\n * Registers converters for editing and data pipelines.\n *\n * @extends module:core/plugin~Plugin\n */\nvar ImageEngine = function (_Plugin) {\n    _inherits(ImageEngine, _Plugin);\n    function ImageEngine() {\n        _classCallCheck(this, ImageEngine);\n        return _possibleConstructorReturn(this, (ImageEngine.__proto__ || Object.getPrototypeOf(ImageEngine)).apply(this, arguments));\n    }\n    _createClass(ImageEngine, [{\n            key: 'init',\n            /**\n   * @inheritDoc\n   */\n            value: function init() {\n                var editor = this.editor;\n                var doc = editor.document;\n                var schema = doc.schema;\n                var data = editor.data;\n                var editing = editor.editing;\n                var t = editor.t;\n                // Configure schema.\n                schema.registerItem('image');\n                schema.requireAttributes('image', ['src']);\n                schema.allow({\n                    name: 'image',\n                    attributes: [\n                        'alt',\n                        'src',\n                        'srcset'\n                    ],\n                    inside: '$root'\n                });\n                schema.objects.add('image');\n                // Build converter from model to view for data pipeline.\n                (0, _buildmodelconverter2.default)().for(data.modelToView).fromElement('image').toElement(function () {\n                    return createImageViewElement();\n                });\n                // Build converter from model to view for editing pipeline.\n                (0, _buildmodelconverter2.default)().for(editing.modelToView).fromElement('image').toElement(function () {\n                    return (0, _utils.toImageWidget)(createImageViewElement(), t('image widget'));\n                });\n                (0, _converters.createImageAttributeConverter)([\n                    editing.modelToView,\n                    data.modelToView\n                ], 'src');\n                (0, _converters.createImageAttributeConverter)([\n                    editing.modelToView,\n                    data.modelToView\n                ], 'alt');\n                // Convert `srcset` attribute changes and add or remove `sizes` attribute when necessary.\n                (0, _converters.createImageAttributeConverter)([\n                    editing.modelToView,\n                    data.modelToView\n                ], 'srcset', function (viewImg, type) {\n                    if (type == 'removeAttribute') {\n                        viewImg.removeAttribute('sizes');\n                    } else {\n                        // Always outputting `100vw`. See https://github.com/ckeditor/ckeditor5-image/issues/2.\n                        viewImg.setAttribute('sizes', '100vw');\n                    }\n                });\n                // Build converter for view img element to model image element.\n                (0, _buildviewconverter2.default)().for(data.viewToModel).from({\n                    name: 'img',\n                    attribute: { src: /./ }\n                }).toElement(function (viewImage) {\n                    return new _element2.default('image', { src: viewImage.getAttribute('src') });\n                });\n                data.viewToModel.on('element:img', _converters.convertHoistableImage, { priority: 'low' });\n                data.viewToModel.on('element', _converters.hoistImageThroughElement, { priority: 'low' });\n                // Build converter for alt attribute.\n                // Note that by default attribute converters are added with `low` priority.\n                // This converter will be thus fired after `convertHoistableImage` converter.\n                (0, _buildviewconverter2.default)().for(data.viewToModel).from({\n                    name: 'img',\n                    attribute: { alt: /./ }\n                }).consuming({ attribute: ['alt'] }).toAttribute(function (viewImage) {\n                    return {\n                        key: 'alt',\n                        value: viewImage.getAttribute('alt')\n                    };\n                });\n                // Build converter for srcset attribute.\n                (0, _buildviewconverter2.default)().for(data.viewToModel).from({\n                    name: 'img',\n                    attribute: { srcset: /./ }\n                }).consuming({ attribute: ['srcset'] }).toAttribute(function (viewImage) {\n                    return {\n                        key: 'srcset',\n                        value: viewImage.getAttribute('srcset')\n                    };\n                });\n                // Converter for figure element from view to model.\n                data.viewToModel.on('element:figure', (0, _converters.viewFigureToModel)());\n            }\n        }]);\n    return ImageEngine;\n}(_plugin2.default);\n// Creates a view element representing the image.\n//\n//\t\t<figure class=\"image\"><img></img></figure>\n//\n// Note that `alt` and `src` attributes are converted separately, so they are not included.\n//\n// @private\n// @return {module:engine/view/containerelement~ContainerElement}\nexports.default = ImageEngine;\nfunction createImageViewElement() {\n    return new _containerelement2.default('figure', { class: 'image' }, new _emptyelement2.default('img'));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-image/src/image/imageengine.js\n// module id = 170\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.repositionContextualBalloon = repositionContextualBalloon;\nexports.getBalloonPositionData = getBalloonPositionData;\n\nvar _balloonpanelview = require('@ckeditor/ckeditor5-ui/src/panel/balloon/balloonpanelview');\n\nvar _balloonpanelview2 = _interopRequireDefault(_balloonpanelview);\n\nvar _utils = require('../utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A helper utility which positions the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon} instance\n * with respect to the image in the editor content, if one is selected.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n */\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module image/image/ui/utils\n */\n\nfunction repositionContextualBalloon(editor) {\n  var editingView = editor.editing.view;\n  var balloon = editor.plugins.get('ContextualBalloon');\n  var selectedElement = editingView.selection.getSelectedElement();\n\n  if (selectedElement && (0, _utils.isImageWidget)(selectedElement)) {\n    var position = getBalloonPositionData(editor);\n\n    balloon.updatePosition(position);\n  }\n}\n\n/**\n * Returns the positioning options that control the geometry of the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon}, with respect\n * to the selected element in the editor content.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n * @returns {module:utils/dom/position~Options}\n */\nfunction getBalloonPositionData(editor) {\n  var editingView = editor.editing.view;\n  var defaultPositions = _balloonpanelview2.default.defaultPositions;\n\n  return {\n    target: editingView.domConverter.viewToDom(editingView.selection.getSelectedElement()),\n    positions: [defaultPositions.northArrowSouth, defaultPositions.southArrowNorth]\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-image/src/image/ui/utils.js\n// module id = 171\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = findLinkRange;\n\nvar _range = require('@ckeditor/ckeditor5-engine/src/model/range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _position = require('@ckeditor/ckeditor5-engine/src/model/position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Walks backward and forward from the start position, node by node, as long as they have the same `linkHref` attribute value and return\n * a {@link module:engine/model/range~Range Range} with the found link.\n *\n * @param {module:engine/model/position~Position} position The start position.\n * @param {String} value The `linkHref` attribute value.\n * @returns {module:engine/model/range~Range} The link range.\n */\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module link/findlinkrange\n */\n\nfunction findLinkRange(position, value) {\n  return new _range2.default(_findBound(position, value, true), _findBound(position, value, false));\n}\n\n// Walks forward or backward (depends on the `lookBack` flag), node by node, as long as they have the same `linkHref` attribute value\n// and returns a position just before or after (depends on the `lookBack` flag) the last matched node.\n//\n// @param {module:engine/model/position~Position} position The start position.\n// @param {String} value The `linkHref` attribute value.\n// @param {Boolean} lookBack Whether the walk direction is forward (`false`) or backward (`true`).\n// @returns {module:engine/model/position~Position} The position just before the last matched node.\nfunction _findBound(position, value, lookBack) {\n  // Get node before or after position (depends on `lookBack` flag).\n  // When position is inside text node then start searching from text node.\n  var node = position.textNode || (lookBack ? position.nodeBefore : position.nodeAfter);\n\n  var lastNode = null;\n\n  while (node && node.getAttribute('linkHref') == value) {\n    lastNode = node;\n    node = lookBack ? node.previousSibling : node.nextSibling;\n  }\n\n  return lastNode ? _position2.default.createAt(lastNode, lookBack ? 'before' : 'after') : position;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-link/src/findlinkrange.js\n// module id = 172\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _attributeelement = require('@ckeditor/ckeditor5-engine/src/view/attributeelement');\n\nvar _attributeelement2 = _interopRequireDefault(_attributeelement);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module link/linkelement\n */\n\n/**\n * This class is to mark a specific {@link module:engine/view/node~Node} as a {@link module:link/linkelement~LinkElement}.\n * For example, there could be a situation when different features will create nodes with the same names,\n * and hence they must be identified somehow.\n *\n * @extends module:engine/view/attributelement~AttributeElement\n */\nvar LinkElement = function (_AttributeElement) {\n  _inherits(LinkElement, _AttributeElement);\n\n  function LinkElement() {\n    _classCallCheck(this, LinkElement);\n\n    return _possibleConstructorReturn(this, (LinkElement.__proto__ || Object.getPrototypeOf(LinkElement)).apply(this, arguments));\n  }\n\n  return LinkElement;\n}(_attributeelement2.default);\n\nexports.default = LinkElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-link/src/linkelement.js\n// module id = 173\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */\n\n/**\n * @module typing/changebuffer\n */\n\nvar _count = require('@ckeditor/ckeditor5-utils/src/count');\n\nvar _count2 = _interopRequireDefault(_count);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Change buffer allows to group atomic changes (like characters that have been typed) into\n * {@link module:engine/model/batch~Batch batches}.\n *\n * Batches represent single undo steps, hence changes added to one single batch are undone together.\n *\n * The buffer has a configurable limit of atomic changes that it can accommodate. After the limit was\n * exceeded (see {@link ~ChangeBuffer#input}), a new batch is created in {@link ~ChangeBuffer#batch}.\n *\n * To use the change buffer you need to let it know about the number of changes that were added to the batch:\n *\n *\t\tconst buffer = new ChangeBuffer( document, LIMIT );\n *\n *\t\t// Later on in your feature:\n *\t\tbuffer.batch.insert( pos, insertedCharacters );\n *\t\tbuffer.input( insertedCharacters.length );\n *\n */\nvar ChangeBuffer = function () {\n\t/**\n  * Creates a new instance of the change buffer.\n  *\n  * @param {module:engine/model/document~Document} document\n  * @param {Number} [limit=20] The maximum number of atomic changes which can be contained in one batch.\n  */\n\tfunction ChangeBuffer(doc) {\n\t\tvar _this = this;\n\n\t\tvar limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 20;\n\n\t\t_classCallCheck(this, ChangeBuffer);\n\n\t\t/**\n   * The document instance.\n   *\n   * @readonly\n   * @member {module:engine/model/document~Document} #document\n   */\n\t\tthis.document = doc;\n\n\t\t/**\n   * The number of atomic changes in the buffer. Once it exceeds the {@link #limit},\n   * the {@link #batch batch} is set to a new one.\n   *\n   * @readonly\n   * @member {Number} #size\n   */\n\t\tthis.size = 0;\n\n\t\t/**\n   * The maximum number of atomic changes which can be contained in one batch.\n   *\n   * @readonly\n   * @member {Number} #limit\n   */\n\t\tthis.limit = limit;\n\n\t\t/**\n   * Whether the buffer is locked. A locked buffer cannot be reset unless it gets unlocked.\n   *\n   * @readonly\n   * @member {Boolean} #isLocked\n   */\n\t\tthis.isLocked = false;\n\n\t\tthis._changeCallback = function (evt, type, changes, batch) {\n\t\t\t_this._onBatch(batch);\n\t\t};\n\n\t\tthis._selectionChangeCallback = function () {\n\t\t\t_this._reset();\n\t\t};\n\n\t\tdoc.on('change', this._changeCallback);\n\n\t\tdoc.selection.on('change:range', this._selectionChangeCallback);\n\n\t\tdoc.selection.on('change:attribute', this._selectionChangeCallback);\n\n\t\t/**\n   * The current batch instance.\n   *\n   * @private\n   * @member #_batch\n   */\n\n\t\t/**\n   * The callback to document the change event which later needs to be removed.\n   *\n   * @private\n   * @member #_changeCallback\n   */\n\n\t\t/**\n   * The callback to document selection `change:attribute` and `change:range` events which resets the buffer.\n   *\n   * @private\n   * @member #_selectionChangeCallback\n   */\n\t}\n\n\t/**\n  * The current batch to which a feature should add its deltas. Once the {@link #size}\n  * is reached or exceeds the {@link #limit}, the batch is set to a new instance and the size is reset.\n  *\n  * @type {module:engine/model/batch~Batch}\n  */\n\n\n\t_createClass(ChangeBuffer, [{\n\t\tkey: 'input',\n\n\n\t\t/**\n   * The input number of changes into the buffer. Once the {@link #size} is\n   * reached or exceeds the {@link #limit}, the batch is set to a new instance and the size is reset.\n   *\n   * @param {Number} changeCount The number of atomic changes to input.\n   */\n\t\tvalue: function input(changeCount) {\n\t\t\tthis.size += changeCount;\n\n\t\t\tif (this.size >= this.limit) {\n\t\t\t\tthis._reset(true);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Locks the buffer.\n   */\n\n\t}, {\n\t\tkey: 'lock',\n\t\tvalue: function lock() {\n\t\t\tthis.isLocked = true;\n\t\t}\n\n\t\t/**\n   * Unlocks the buffer.\n   */\n\n\t}, {\n\t\tkey: 'unlock',\n\t\tvalue: function unlock() {\n\t\t\tthis.isLocked = false;\n\t\t}\n\n\t\t/**\n   * Destroys the buffer.\n   */\n\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {\n\t\t\tthis.document.off('change', this._changeCallback);\n\t\t\tthis.document.selection.off('change:range', this._selectionChangeCallback);\n\t\t\tthis.document.selection.off('change:attribute', this._selectionChangeCallback);\n\t\t}\n\n\t\t/**\n   * The method to be called in order to notify the buffer about batches which appeared in the document.\n   * The method will check whether it is a new batch and in that case the buffer will be flushed.\n   *\n   * The reason why the buffer needs to be flushed whenever a new batch appears is that the changes added afterwards\n   * should be added to a new batch. For instance, when the  user types, then inserts an image, and then types again,\n   * the characters typed after inserting the image should be added to a different batch than the characters typed before.\n   *\n   * @private\n   * @param {module:engine/model/batch~Batch} batch The batch which appears in the document.\n   */\n\n\t}, {\n\t\tkey: '_onBatch',\n\t\tvalue: function _onBatch(batch) {\n\t\t\t// One operation means a newly created batch.\n\t\t\tif (batch.type != 'transparent' && batch !== this._batch && (0, _count2.default)(batch.getOperations()) <= 1) {\n\t\t\t\tthis._reset(true);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Resets the change buffer.\n   *\n   * @private\n   * @param {Boolean} [ignoreLock] Whether internal lock {@link #isLocked} should be ignored.\n   */\n\n\t}, {\n\t\tkey: '_reset',\n\t\tvalue: function _reset(ignoreLock) {\n\t\t\tif (!this.isLocked || ignoreLock) {\n\t\t\t\tthis._batch = null;\n\t\t\t\tthis.size = 0;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'batch',\n\t\tget: function get() {\n\t\t\tif (!this._batch) {\n\t\t\t\tthis._batch = this.document.batch();\n\t\t\t}\n\n\t\t\treturn this._batch;\n\t\t}\n\t}]);\n\n\treturn ChangeBuffer;\n}();\n\nexports.default = ChangeBuffer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-typing/src/changebuffer.js\n// module id = 174\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = clickOutsideHandler;\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/bindings/clickoutsidehandler\n */\n\n/* global document */\n\n/**\n * Handles a DOM `click` event outside of specified elements and fires an action.\n *\n * Note that it is not handled by a `click` event, this is to avoid situation when click on some trigger\n * opens and closes element at the same time.\n *\n * @param {Object} options Configuration options.\n * @param {module:utils/dom/emittermixin~Emitter} options.emitter The emitter to which this behavior should be added.\n * @param {Function} options.activator Function returning a `Boolean`, to determine whether handler is active.\n * @param {Array.<HTMLElement>} options.contextElements `HTMLElement`s that clicking inside of any of them will not fire the callback.\n * @param {Function} options.callback Function fired after clicking outside of specified elements.\n */\nfunction clickOutsideHandler(_ref) {\n  var emitter = _ref.emitter,\n      activator = _ref.activator,\n      callback = _ref.callback,\n      contextElements = _ref.contextElements;\n\n  emitter.listenTo(document, 'mousedown', function (evt, _ref2) {\n    var target = _ref2.target;\n\n    if (!activator()) {\n      return;\n    }\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = contextElements[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var contextElement = _step.value;\n\n        if (contextElement.contains(target)) {\n          return;\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    callback();\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-ui/src/bindings/clickoutsidehandler.js\n// module id = 175\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = preventDefault;\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/bindings/preventdefault\n */\n\n/**\n * Returns a {module:ui/template~TemplateToBinding} resulting in a native `event#preventDefault`\n * for the DOM event if `event#target` equals {@link module:ui/view~View#element}.\n *\n * @param {module:ui/view~View} view View instance that uses the template.\n * @returns {module:ui/template~TemplateToBinding}\n */\nfunction preventDefault(view) {\n  return view.bindTemplate.to(function (evt) {\n    if (evt.target === view.element) {\n      evt.preventDefault();\n    }\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-ui/src/bindings/preventdefault.js\n// module id = 176\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = submitHandler;\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/bindings/submithandler\n */\n\n/**\n * Handles native DOM `submit` event by preventing it and firing\n * the {@link module:ui/view~View view's} `submit` event, which can be then handled by the\n * parent controller.\n *\n * @param {Object} [options] Configuration options.\n * @param {module:ui/view~View} options.view The view to which this behavior should be added.\n */\nfunction submitHandler(_ref) {\n  var view = _ref.view;\n\n  view.listenTo(view.element, 'submit', function (evt, domEvt) {\n    domEvt.preventDefault();\n    view.fire('submit');\n  }, { useCapture: true });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-ui/src/bindings/submithandler.js\n// module id = 177\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _view = require('../view');\n\nvar _view2 = _interopRequireDefault(_view);\n\nvar _template = require('../template');\n\nvar _template2 = _interopRequireDefault(_template);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module ui/inputtext/inputtextview\n */\n\n/**\n * The text input view class.\n *\n * @extends module:ui/view~View\n */\nvar InputTextView = function (_View) {\n\t_inherits(InputTextView, _View);\n\n\t/**\n  * @inheritDoc\n  */\n\tfunction InputTextView(locale) {\n\t\t_classCallCheck(this, InputTextView);\n\n\t\t/**\n   * The value of the input.\n   *\n   * @observable\n   * @member {String} #value\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (InputTextView.__proto__ || Object.getPrototypeOf(InputTextView)).call(this, locale));\n\n\t\t_this.set('value');\n\n\t\t/**\n   * The `id` attribute of the input (i.e. to pair with a `<label>` element).\n   *\n   * @observable\n   * @member {String} #id\n   */\n\t\t_this.set('id');\n\n\t\t/**\n   * The `placeholder` attribute of the input.\n   *\n   * @observable\n   * @member {String} #placeholder\n   */\n\t\t_this.set('placeholder');\n\n\t\t/**\n   * Controls whether the input view is in read-only mode.\n   *\n   * @observable\n   * @member {Boolean} #isReadOnly\n   */\n\t\t_this.set('isReadOnly', false);\n\n\t\tvar bind = _this.bindTemplate;\n\n\t\t_this.template = new _template2.default({\n\t\t\ttag: 'input',\n\t\t\tattributes: {\n\t\t\t\ttype: 'text',\n\t\t\t\tclass: ['ck-input', 'ck-input-text'],\n\t\t\t\tid: bind.to('id'),\n\t\t\t\tplaceholder: bind.to('placeholder'),\n\t\t\t\treadonly: bind.to('isReadOnly')\n\t\t\t}\n\t\t});\n\n\t\t// Note: `value` cannot be an HTML attribute, because it doesn't change HTMLInputElement value once changed.\n\t\t_this.on('change:value', function (evt, propertyName, value) {\n\t\t\t_this.element.value = value || '';\n\t\t});\n\t\treturn _this;\n\t}\n\n\t/**\n  * Moves the focus to the input and selects the value.\n  */\n\n\n\t_createClass(InputTextView, [{\n\t\tkey: 'select',\n\t\tvalue: function select() {\n\t\t\tthis.element.select();\n\t\t}\n\n\t\t/**\n   * Focuses the input.\n   */\n\n\t}, {\n\t\tkey: 'focus',\n\t\tvalue: function focus() {\n\t\t\tthis.element.focus();\n\t\t}\n\t}]);\n\n\treturn InputTextView;\n}(_view2.default);\n\nexports.default = InputTextView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-ui/src/inputtext/inputtextview.js\n// module id = 178\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _view = require('../view');\n\nvar _view2 = _interopRequireDefault(_view);\n\nvar _template = require('../template');\n\nvar _template2 = _interopRequireDefault(_template);\n\nvar _uid = require('@ckeditor/ckeditor5-utils/src/uid');\n\nvar _uid2 = _interopRequireDefault(_uid);\n\nvar _labelview = require('../label/labelview');\n\nvar _labelview2 = _interopRequireDefault(_labelview);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module ui/labeledinput/labeledinputview\n */\n\n/**\n * The labeled input view class.\n *\n * @extends module:ui/view~View\n */\nvar LabeledInputView = function (_View) {\n\t_inherits(LabeledInputView, _View);\n\n\t/**\n  * Creates an instance of the labeled input view class.\n  *\n  * @param {module:utils/locale~Locale} locale The locale instance.\n  * @param {Function} InputView Constructor of the input view.\n  */\n\tfunction LabeledInputView(locale, InputView) {\n\t\t_classCallCheck(this, LabeledInputView);\n\n\t\tvar _this = _possibleConstructorReturn(this, (LabeledInputView.__proto__ || Object.getPrototypeOf(LabeledInputView)).call(this, locale));\n\n\t\tvar id = 'ck-input-' + (0, _uid2.default)();\n\n\t\t/**\n   * The text of the label.\n   *\n   * @observable\n   * @member {String} #label\n   */\n\t\t_this.set('label');\n\n\t\t/**\n   * The value of the input.\n   *\n   * @observable\n   * @member {String} #value\n   */\n\t\t_this.set('value');\n\n\t\t/**\n   * Controls whether the component is in read-only mode.\n   *\n   * @observable\n   * @member {Boolean} #isReadOnly\n   */\n\t\t_this.set('isReadOnly', false);\n\n\t\t/**\n   * The label view.\n   *\n   * @member {module:ui/label/labelview~LabelView} #labelView\n   */\n\t\t_this.labelView = _this._createLabelView(id);\n\n\t\t/**\n   * The input view.\n   *\n   * @member {module:ui/view~View} #inputView\n   */\n\t\t_this.inputView = _this._createInputView(InputView, id);\n\n\t\tvar bind = _this.bindTemplate;\n\n\t\t_this.template = new _template2.default({\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [bind.if('isReadOnly', 'ck-disabled')]\n\t\t\t},\n\t\t\tchildren: [_this.labelView, _this.inputView]\n\t\t});\n\t\treturn _this;\n\t}\n\n\t/**\n  * Creates label view class instance and bind with view.\n  *\n  * @private\n  * @param {String} id Unique id to set as labelView#for attribute.\n  * @returns {module:ui/label/labelview~LabelView}\n  */\n\n\n\t_createClass(LabeledInputView, [{\n\t\tkey: '_createLabelView',\n\t\tvalue: function _createLabelView(id) {\n\t\t\tvar labelView = new _labelview2.default(this.locale);\n\n\t\t\tlabelView.for = id;\n\t\t\tlabelView.bind('text').to(this, 'label');\n\n\t\t\treturn labelView;\n\t\t}\n\n\t\t/**\n   * Creates input view class instance and bind with view.\n   *\n   * @private\n   * @param {Function} InputView Input view constructor.\n   * @param {String} id Unique id to set as inputView#id attribute.\n   * @returns {module:ui/inputtext/inputtextview~InputTextView}\n   */\n\n\t}, {\n\t\tkey: '_createInputView',\n\t\tvalue: function _createInputView(InputView, id) {\n\t\t\tvar inputView = new InputView(this.locale);\n\n\t\t\tinputView.id = id;\n\t\t\tinputView.bind('value').to(this);\n\t\t\tinputView.bind('isReadOnly').to(this);\n\n\t\t\treturn inputView;\n\t\t}\n\n\t\t/**\n   * Moves the focus to the input and selects the value.\n   */\n\n\t}, {\n\t\tkey: 'select',\n\t\tvalue: function select() {\n\t\t\tthis.inputView.select();\n\t\t}\n\n\t\t/**\n   * Focuses the input.\n   */\n\n\t}, {\n\t\tkey: 'focus',\n\t\tvalue: function focus() {\n\t\t\tthis.inputView.focus();\n\t\t}\n\t}]);\n\n\treturn LabeledInputView;\n}(_view2.default);\n\nexports.default = LabeledInputView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-ui/src/labeledinput/labeledinputview.js\n// module id = 179\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _view = require('../../view');\n\nvar _view2 = _interopRequireDefault(_view);\n\nvar _template = require('../../template');\n\nvar _template2 = _interopRequireDefault(_template);\n\nvar _position = require('@ckeditor/ckeditor5-utils/src/dom/position');\n\nvar _isrange = require('@ckeditor/ckeditor5-utils/src/dom/isrange');\n\nvar _isrange2 = _interopRequireDefault(_isrange);\n\nvar _isElement = require('@ckeditor/ckeditor5-utils/src/lib/lodash/isElement');\n\nvar _isElement2 = _interopRequireDefault(_isElement);\n\nvar _tounit = require('@ckeditor/ckeditor5-utils/src/dom/tounit');\n\nvar _tounit2 = _interopRequireDefault(_tounit);\n\nvar _preventdefault = require('../../bindings/preventdefault.js');\n\nvar _preventdefault2 = _interopRequireDefault(_preventdefault);\n\nvar _global = require('@ckeditor/ckeditor5-utils/src/dom/global');\n\nvar _global2 = _interopRequireDefault(_global);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module ui/panel/balloon/balloonpanelview\n */\n\nvar toPx = (0, _tounit2.default)('px');\nvar defaultLimiterElement = _global2.default.document.body;\n\n/**\n * The balloon panel view class.\n *\n * @extends module:ui/view~View\n */\n\nvar BalloonPanelView = function (_View) {\n\t_inherits(BalloonPanelView, _View);\n\n\t/**\n  * @inheritDoc\n  */\n\tfunction BalloonPanelView(locale) {\n\t\t_classCallCheck(this, BalloonPanelView);\n\n\t\tvar _this = _possibleConstructorReturn(this, (BalloonPanelView.__proto__ || Object.getPrototypeOf(BalloonPanelView)).call(this, locale));\n\n\t\tvar bind = _this.bindTemplate;\n\n\t\t/**\n   * The absolute top position of the balloon panel in pixels.\n   *\n   * @observable\n   * @default 0\n   * @member {Number} #top\n   */\n\t\t_this.set('top', 0);\n\n\t\t/**\n   * The absolute left position of the balloon panel in pixels.\n   *\n   * @observable\n   * @default 0\n   * @member {Number} #left\n   */\n\t\t_this.set('left', 0);\n\n\t\t/**\n   * Balloon panel's current position. The position name is reflected in the CSS class set\n   * to the balloon, i.e. `.ck-balloon-panel_arrow_nw` for \"arrow_nw\" position. The class\n   * controls the minor aspects of the balloon's visual appearance like placement\n   * of the \"arrow\". To support a new position, an additional CSS must be created.\n   *\n   * Default position names correspond with\n   * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n   *\n   * See {@link #attachTo} to learn about custom balloon positions.\n   *\n   * See {@link #withArrow}.\n   *\n   * @observable\n   * @default 'arrow_nw'\n   * @member {'arrow_nw'|'arrow_ne'|'arrow_sw'|'arrow_se'} #position\n   */\n\t\t_this.set('position', 'arrow_nw');\n\n\t\t/**\n   * Controls whether the balloon panel is visible or not.\n   *\n   * @observable\n   * @default false\n   * @member {Boolean} #isVisible\n   */\n\t\t_this.set('isVisible', false);\n\n\t\t/**\n   * Controls whether the balloon panel has an arrow. The presence of the arrow\n   * is reflected in `ck-balloon-panel_with-arrow` CSS class.\n   *\n   * @observable\n   * @default true\n   * @member {Boolean} #withArrow\n   */\n\t\t_this.set('withArrow', true);\n\n\t\t/**\n   * Additional css class added to the {#element}.\n   *\n   * @observable\n   * @member {String} #className\n   */\n\t\t_this.set('className');\n\n\t\t/**\n   * A callback that starts pining the panel when {@link #isVisible} gets\n   * `true`. Used by {@link #pin}.\n   *\n   * @private\n   * @member {Function} #_pinWhenIsVisibleCallback\n   */\n\n\t\t/**\n   * Collection of the child views which creates balloon panel contents.\n   *\n   * @readonly\n   * @member {module:ui/viewcollection~ViewCollection}\n   */\n\t\t_this.content = _this.createCollection();\n\n\t\t_this.template = new _template2.default({\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: ['ck-balloon-panel', bind.to('position', function (value) {\n\t\t\t\t\treturn 'ck-balloon-panel_' + value;\n\t\t\t\t}), bind.if('isVisible', 'ck-balloon-panel_visible'), bind.if('withArrow', 'ck-balloon-panel_with-arrow'), bind.to('className')],\n\n\t\t\t\tstyle: {\n\t\t\t\t\ttop: bind.to('top', toPx),\n\t\t\t\t\tleft: bind.to('left', toPx)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tchildren: _this.content,\n\n\t\t\ton: {\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/206\n\t\t\t\tmousedown: (0, _preventdefault2.default)(_this),\n\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/243\n\t\t\t\tselectstart: bind.to(function (evt) {\n\t\t\t\t\treturn evt.preventDefault();\n\t\t\t\t})\n\t\t\t}\n\t\t});\n\t\treturn _this;\n\t}\n\n\t/**\n  * Shows the balloon panel.\n  *\n  * See {@link #isVisible}.\n  */\n\n\n\t_createClass(BalloonPanelView, [{\n\t\tkey: 'show',\n\t\tvalue: function show() {\n\t\t\tthis.isVisible = true;\n\t\t}\n\n\t\t/**\n   * Hides the balloon panel.\n   *\n   * See {@link #isVisible}.\n   */\n\n\t}, {\n\t\tkey: 'hide',\n\t\tvalue: function hide() {\n\t\t\tthis.isVisible = false;\n\t\t}\n\n\t\t/**\n   * Attaches the balloon panel to a specified DOM element or range with a smart heuristics.\n   *\n   * See {@link @link module:utils/dom/position~getOptimalPosition}.\n   *\n   * TODO: More docs and examples.\n   *\n   * @param {module:utils/dom/position~Options} options Positioning options compatible with\n   * {@link module:utils/dom/position~getOptimalPosition}. Default `positions` array is\n   * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n   */\n\n\t}, {\n\t\tkey: 'attachTo',\n\t\tvalue: function attachTo(options) {\n\t\t\tthis.show();\n\n\t\t\tvar defaultPositions = BalloonPanelView.defaultPositions;\n\t\t\tvar positionOptions = Object.assign({}, {\n\t\t\t\telement: this.element,\n\t\t\t\tpositions: [defaultPositions.southArrowNorthWest, defaultPositions.southArrowNorthEast, defaultPositions.northArrowSouthWest, defaultPositions.northArrowSouthEast],\n\t\t\t\tlimiter: defaultLimiterElement,\n\t\t\t\tfitInViewport: true\n\t\t\t}, options);\n\n\t\t\tvar _getOptimalPosition = (0, _position.getOptimalPosition)(positionOptions),\n\t\t\t    top = _getOptimalPosition.top,\n\t\t\t    left = _getOptimalPosition.left,\n\t\t\t    position = _getOptimalPosition.name;\n\n\t\t\tObject.assign(this, { top: top, left: left, position: position });\n\t\t}\n\n\t\t/**\n   * Works the same way as {module:ui/panel/balloon/balloonpanelview~BalloonPanelView.attachTo}\n   * except that the position of the panel is continuously updated when any ancestor of the\n   * {@link module:utils/dom/position~Options#target} or {@link module:utils/dom/position~Options#limiter}\n   * is being scrolled or when the browser window is being resized.\n   *\n   * Thanks to this, the panel always sticks to the {@link module:utils/dom/position~Options#target}.\n   *\n   * See: {@link #unpin}.\n   *\n   * @param {module:utils/dom/position~Options} options Positioning options compatible with\n   * {@link module:utils/dom/position~getOptimalPosition}. Default `positions` array is\n   * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n   */\n\n\t}, {\n\t\tkey: 'pin',\n\t\tvalue: function pin(options) {\n\t\t\tvar _this2 = this;\n\n\t\t\tthis.unpin();\n\n\t\t\tthis._pinWhenIsVisibleCallback = function () {\n\t\t\t\tif (_this2.isVisible) {\n\t\t\t\t\t_this2._startPinning(options);\n\t\t\t\t} else {\n\t\t\t\t\t_this2._stopPinning();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis._startPinning(options);\n\n\t\t\t// Control the state of the listeners depending on whether the panel is visible\n\t\t\t// or not.\n\t\t\t// TODO: Use on() (https://github.com/ckeditor/ckeditor5-utils/issues/144).\n\t\t\tthis.listenTo(this, 'change:isVisible', this._pinWhenIsVisibleCallback);\n\t\t}\n\n\t\t/**\n   * Stops pinning the panel, as set up by {@link #pin}.\n   */\n\n\t}, {\n\t\tkey: 'unpin',\n\t\tvalue: function unpin() {\n\t\t\tif (this._pinWhenIsVisibleCallback) {\n\t\t\t\t// Deactivate listeners attached by pin().\n\t\t\t\tthis._stopPinning();\n\n\t\t\t\t// Deactivate the panel pin() control logic.\n\t\t\t\t// TODO: Use off() (https://github.com/ckeditor/ckeditor5-utils/issues/144).\n\t\t\t\tthis.stopListening(this, 'change:isVisible', this._pinWhenIsVisibleCallback);\n\n\t\t\t\tthis._pinWhenIsVisibleCallback = null;\n\n\t\t\t\tthis.hide();\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Starts managing the pinned state of the panel. See {@link #pin}.\n   *\n   * @private\n   * @param {module:utils/dom/position~Options} options Positioning options compatible with\n   * {@link module:utils/dom/position~getOptimalPosition}.\n   */\n\n\t}, {\n\t\tkey: '_startPinning',\n\t\tvalue: function _startPinning(options) {\n\t\t\tvar _this3 = this;\n\n\t\t\tthis.attachTo(options);\n\n\t\t\tvar limiter = options.limiter || defaultLimiterElement;\n\t\t\tvar targetElement = null;\n\n\t\t\t// We need to take HTMLElement related to the target if it is possible.\n\t\t\tif ((0, _isElement2.default)(options.target)) {\n\t\t\t\ttargetElement = options.target;\n\t\t\t} else if ((0, _isrange2.default)(options.target)) {\n\t\t\t\ttargetElement = options.target.commonAncestorContainer;\n\t\t\t}\n\n\t\t\t// Then we need to listen on scroll event of eny element in the document.\n\t\t\tthis.listenTo(_global2.default.document, 'scroll', function (evt, domEvt) {\n\t\t\t\tvar scrollTarget = domEvt.target;\n\n\t\t\t\t// The position needs to be updated if the positioning target is within the scrolled element.\n\t\t\t\tvar isWithinScrollTarget = targetElement && scrollTarget.contains(targetElement);\n\n\t\t\t\t// The position needs to be updated if the positioning limiter is within the scrolled element.\n\t\t\t\tvar isLimiterWithinScrollTarget = scrollTarget.contains(limiter);\n\n\t\t\t\t// The positioning target can be a Rect, object etc.. There's no way to optimize the listener then.\n\t\t\t\tif (isWithinScrollTarget || isLimiterWithinScrollTarget || !targetElement) {\n\t\t\t\t\t_this3.attachTo(options);\n\t\t\t\t}\n\t\t\t}, { useCapture: true });\n\n\t\t\t// We need to listen on window resize event and update position.\n\t\t\tthis.listenTo(_global2.default.window, 'resize', function () {\n\t\t\t\t_this3.attachTo(options);\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * Stops managing the pinned state of the panel. See {@link #pin}.\n   *\n   * @private\n   */\n\n\t}, {\n\t\tkey: '_stopPinning',\n\t\tvalue: function _stopPinning() {\n\t\t\tthis.stopListening(_global2.default.document, 'scroll');\n\t\t\tthis.stopListening(_global2.default.window, 'resize');\n\t\t}\n\t}]);\n\n\treturn BalloonPanelView;\n}(_view2.default);\n\n/**\n * A horizontal offset of the arrow tip from the edge of the balloon. Controlled by CSS.\n *\n *\t\t +-----|---------...\n *\t\t |     |\n *\t\t |     |\n *\t\t |     |\n *\t\t |     |\n *\t\t +--+  |  +------...\n *\t\t     \\ | /\n *\t\t      \\|/\n *\t    >|-----|<---------------- horizontal offset\n *\n * @default 30\n * @member {Number} module:ui/panel/balloon/balloonpanelview~BalloonPanelView.arrowHorizontalOffset\n */\n\n\nexports.default = BalloonPanelView;\nBalloonPanelView.arrowHorizontalOffset = 30;\n\n/**\n * A vertical offset of the arrow from the edge of the balloon. Controlled by CSS.\n *\n *\t\t +-------------...\n *\t\t |\n *\t\t |\n *\t\t |                      /-- vertical offset\n *\t\t |                     V\n *\t\t +--+    +-----...    ---------\n *\t\t     \\  /              |\n *\t\t      \\/               |\n *\t\t-------------------------------\n *\t\t                       ^\n *\n * @default 15\n * @member {Number} module:ui/panel/balloon/balloonpanelview~BalloonPanelView.arrowVerticalOffset\n */\nBalloonPanelView.arrowVerticalOffset = 15;\n\n/**\n * A default set of positioning functions used by the balloon panel view\n * when attaching using {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#attachTo} method.\n *\n * The available positioning functions are as follow:\n *\n * **North**\n *\n * * `northArrowSouth`\n *\n * \t\t+-----------------+\n * \t\t|     Balloon     |\n * \t\t+-----------------+\n * \t\t         V\n * \t\t    [ Target ]\n *\n * * `northArrowSouthEast`\n *\n * \t\t+-----------------+\n * \t\t|     Balloon     |\n * \t\t+-----------------+\n * \t\t               V\n * \t\t          [ Target ]\n *\n * * `northArrowSouthWest`\n *\n * \t\t  +-----------------+\n * \t\t  |     Balloon     |\n * \t\t  +-----------------+\n * \t\t     V\n * \t\t[ Target ]\n *\n * **North west**\n *\n * * `northWestArrowSouth`\n *\n * \t\t+-----------------+\n * \t\t|     Balloon     |\n * \t\t+-----------------+\n * \t\t         V\n * \t\t         [ Target ]\n *\n * * `northWestArrowSouthWest`\n *\n * \t\t+-----------------+\n * \t\t|     Balloon     |\n * \t\t+-----------------+\n * \t\t   V\n * \t\t   [ Target ]\n *\n * * `northWestArrowSouthEast`\n *\n * \t\t+-----------------+\n * \t\t|     Balloon     |\n * \t\t+-----------------+\n * \t\t               V\n * \t\t               [ Target ]\n *\n * **North east**\n *\n * * `northEastArrowSouth`\n *\n * \t\t+-----------------+\n * \t\t|     Balloon     |\n * \t\t+-----------------+\n * \t\t         V\n * \t\t[ Target ]\n *\n * * `northEastArrowSouthEast`\n *\n * \t\t+-----------------+\n * \t\t|     Balloon     |\n * \t\t+-----------------+\n * \t\t               V\n * \t\t      [ Target ]\n *\n * * `northEastArrowSouthWest`\n *\n * \t\t      +-----------------+\n * \t\t      |     Balloon     |\n * \t\t      +-----------------+\n * \t\t         V\n * \t\t[ Target ]\n *\n * **South**\n *\n * * `southArrowNorth`\n *\n *\t\t    [ Target ]\n *\t\t         ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southArrowNorthEast`\n *\n *\t\t          [ Target ]\n *\t\t               ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southArrowNorthWest`\n *\n *\t\t[ Target ]\n *\t\t     ^\n *\t\t   +-----------------+\n *\t\t   |     Balloon     |\n *\t\t   +-----------------+\n *\n * **South west**\n *\n * * `southWestArrowNorth`\n *\n *\t\t         [ Target ]\n *\t\t         ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southWestArrowNorthWest`\n *\n *\t\t  [ Target ]\n *\t\t  ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southWestArrowNorthEast`\n *\n *\t\t               [ Target ]\n *\t\t               ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * **South east**\n *\n * * `southEastArrowNorth`\n *\n *\t\t[ Target ]\n *\t\t         ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southEastArrowNorthEast`\n *\n *\t\t       [ Target ]\n *\t\t                ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southEastArrowNorthWest`\n *\n *\t\t[ Target ]\n *\t\t         ^\n *\t\t       +-----------------+\n *\t\t       |     Balloon     |\n *\t\t       +-----------------+\n *\n * See {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#attachTo}.\n *\n * Positioning functions must be compatible with {@link module:utils/dom/position~Position}.\n *\n * The name that position function returns will be reflected in balloon panel's class that\n * controls the placement of the \"arrow\". See {@link #position} to learn more.\n *\n * @member {Object} module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions\n */\nBalloonPanelView.defaultPositions = {\n\t// ------- North\n\n\tnorthArrowSouth: function northArrowSouth(targetRect, balloonRect) {\n\t\treturn {\n\t\t\ttop: getNorthTop(targetRect, balloonRect),\n\t\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width / 2,\n\t\t\tname: 'arrow_s'\n\t\t};\n\t},\n\n\tnorthArrowSouthEast: function northArrowSouthEast(targetRect, balloonRect) {\n\t\treturn {\n\t\t\ttop: getNorthTop(targetRect, balloonRect),\n\t\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n\t\t\tname: 'arrow_se'\n\t\t};\n\t},\n\n\tnorthArrowSouthWest: function northArrowSouthWest(targetRect, balloonRect) {\n\t\treturn {\n\t\t\ttop: getNorthTop(targetRect, balloonRect),\n\t\t\tleft: targetRect.left + targetRect.width / 2 - BalloonPanelView.arrowHorizontalOffset,\n\t\t\tname: 'arrow_sw'\n\t\t};\n\t},\n\n\t// ------- North west\n\n\tnorthWestArrowSouth: function northWestArrowSouth(targetRect, balloonRect) {\n\t\treturn {\n\t\t\ttop: getNorthTop(targetRect, balloonRect),\n\t\t\tleft: targetRect.left - balloonRect.width / 2,\n\t\t\tname: 'arrow_s'\n\t\t};\n\t},\n\n\tnorthWestArrowSouthWest: function northWestArrowSouthWest(targetRect, balloonRect) {\n\t\treturn {\n\t\t\ttop: getNorthTop(targetRect, balloonRect),\n\t\t\tleft: targetRect.left - BalloonPanelView.arrowHorizontalOffset,\n\t\t\tname: 'arrow_sw'\n\t\t};\n\t},\n\n\tnorthWestArrowSouthEast: function northWestArrowSouthEast(targetRect, balloonRect) {\n\t\treturn {\n\t\t\ttop: getNorthTop(targetRect, balloonRect),\n\t\t\tleft: targetRect.left - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n\t\t\tname: 'arrow_se'\n\t\t};\n\t},\n\n\t// ------- North east\n\n\tnorthEastArrowSouth: function northEastArrowSouth(targetRect, balloonRect) {\n\t\treturn {\n\t\t\ttop: getNorthTop(targetRect, balloonRect),\n\t\t\tleft: targetRect.right - balloonRect.width / 2,\n\t\t\tname: 'arrow_s'\n\t\t};\n\t},\n\n\tnorthEastArrowSouthEast: function northEastArrowSouthEast(targetRect, balloonRect) {\n\t\treturn {\n\t\t\ttop: getNorthTop(targetRect, balloonRect),\n\t\t\tleft: targetRect.right - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n\t\t\tname: 'arrow_se'\n\t\t};\n\t},\n\n\tnorthEastArrowSouthWest: function northEastArrowSouthWest(targetRect, balloonRect) {\n\t\treturn {\n\t\t\ttop: getNorthTop(targetRect, balloonRect),\n\t\t\tleft: targetRect.right - BalloonPanelView.arrowHorizontalOffset,\n\t\t\tname: 'arrow_sw'\n\t\t};\n\t},\n\n\t// ------- South\n\n\tsouthArrowNorth: function southArrowNorth(targetRect, balloonRect) {\n\t\treturn {\n\t\t\ttop: getSouthTop(targetRect, balloonRect),\n\t\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width / 2,\n\t\t\tname: 'arrow_n'\n\t\t};\n\t},\n\n\tsouthArrowNorthEast: function southArrowNorthEast(targetRect, balloonRect) {\n\t\treturn {\n\t\t\ttop: getSouthTop(targetRect, balloonRect),\n\t\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n\t\t\tname: 'arrow_ne'\n\t\t};\n\t},\n\n\tsouthArrowNorthWest: function southArrowNorthWest(targetRect, balloonRect) {\n\t\treturn {\n\t\t\ttop: getSouthTop(targetRect, balloonRect),\n\t\t\tleft: targetRect.left + targetRect.width / 2 - BalloonPanelView.arrowHorizontalOffset,\n\t\t\tname: 'arrow_nw'\n\t\t};\n\t},\n\n\t// ------- South west\n\n\tsouthWestArrowNorth: function southWestArrowNorth(targetRect, balloonRect) {\n\t\treturn {\n\t\t\ttop: getSouthTop(targetRect, balloonRect),\n\t\t\tleft: targetRect.left - balloonRect.width / 2,\n\t\t\tname: 'arrow_n'\n\t\t};\n\t},\n\n\tsouthWestArrowNorthWest: function southWestArrowNorthWest(targetRect, balloonRect) {\n\t\treturn {\n\t\t\ttop: getSouthTop(targetRect, balloonRect),\n\t\t\tleft: targetRect.left - BalloonPanelView.arrowHorizontalOffset,\n\t\t\tname: 'arrow_nw'\n\t\t};\n\t},\n\n\tsouthWestArrowNorthEast: function southWestArrowNorthEast(targetRect, balloonRect) {\n\t\treturn {\n\t\t\ttop: getSouthTop(targetRect, balloonRect),\n\t\t\tleft: targetRect.left - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n\t\t\tname: 'arrow_ne'\n\t\t};\n\t},\n\n\t// ------- South east\n\n\tsouthEastArrowNorth: function southEastArrowNorth(targetRect, balloonRect) {\n\t\treturn {\n\t\t\ttop: getSouthTop(targetRect, balloonRect),\n\t\t\tleft: targetRect.right - balloonRect.width / 2,\n\t\t\tname: 'arrow_n'\n\t\t};\n\t},\n\n\tsouthEastArrowNorthEast: function southEastArrowNorthEast(targetRect, balloonRect) {\n\t\treturn {\n\t\t\ttop: getSouthTop(targetRect, balloonRect),\n\t\t\tleft: targetRect.right - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n\t\t\tname: 'arrow_ne'\n\t\t};\n\t},\n\n\tsouthEastArrowNorthWest: function southEastArrowNorthWest(targetRect, balloonRect) {\n\t\treturn {\n\t\t\ttop: getSouthTop(targetRect, balloonRect),\n\t\t\tleft: targetRect.right - BalloonPanelView.arrowHorizontalOffset,\n\t\t\tname: 'arrow_nw'\n\t\t};\n\t}\n};\n\n// Returns the top coordinate for positions starting with `north*`.\n//\n// @private\n// @param {utils/dom/rect~Rect} targetRect A rect of the target.\n// @param {utils/dom/rect~Rect} elementRect A rect of the balloon.\n// @returns {Number}\nfunction getNorthTop(targetRect, balloonRect) {\n\treturn targetRect.top - balloonRect.height - BalloonPanelView.arrowVerticalOffset;\n}\n\n// Returns the top coordinate for positions starting with `south*`.\n//\n// @private\n// @param {utils/dom/rect~Rect} targetRect A rect of the target.\n// @param {utils/dom/rect~Rect} elementRect A rect of the balloon.\n// @returns {Number}\nfunction getSouthTop(targetRect) {\n\treturn targetRect.bottom + BalloonPanelView.arrowVerticalOffset;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-ui/src/panel/balloon/balloonpanelview.js\n// module id = 180\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _view = require('../view');\n\nvar _view2 = _interopRequireDefault(_view);\n\nvar _template = require('../template');\n\nvar _template2 = _interopRequireDefault(_template);\n\nvar _focustracker = require('@ckeditor/ckeditor5-utils/src/focustracker');\n\nvar _focustracker2 = _interopRequireDefault(_focustracker);\n\nvar _focuscycler = require('../focuscycler');\n\nvar _focuscycler2 = _interopRequireDefault(_focuscycler);\n\nvar _keystrokehandler = require('@ckeditor/ckeditor5-utils/src/keystrokehandler');\n\nvar _keystrokehandler2 = _interopRequireDefault(_keystrokehandler);\n\nvar _toolbarseparatorview = require('./toolbarseparatorview');\n\nvar _toolbarseparatorview2 = _interopRequireDefault(_toolbarseparatorview);\n\nvar _preventdefault = require('../bindings/preventdefault.js');\n\nvar _preventdefault2 = _interopRequireDefault(_preventdefault);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module ui/toolbar/toolbarview\n */\n\n/**\n * The toolbar view class.\n *\n * @extends module:ui/view~View\n */\nvar ToolbarView = function (_View) {\n\t_inherits(ToolbarView, _View);\n\n\t/**\n  * @inheritDoc\n  */\n\tfunction ToolbarView(locale) {\n\t\t_classCallCheck(this, ToolbarView);\n\n\t\t/**\n   * Collection of the toolbar items (like buttons).\n   *\n   * @readonly\n   * @member {module:ui/viewcollection~ViewCollection}\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (ToolbarView.__proto__ || Object.getPrototypeOf(ToolbarView)).call(this, locale));\n\n\t\t_this.items = _this.createCollection();\n\n\t\t/**\n   * Tracks information about DOM focus in the list.\n   *\n   * @readonly\n   * @member {module:utils/focustracker~FocusTracker}\n   */\n\t\t_this.focusTracker = new _focustracker2.default();\n\n\t\t/**\n   * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n   *\n   * @readonly\n   * @member {module:utils/keystrokehandler~KeystrokeHandler}\n   */\n\t\t_this.keystrokes = new _keystrokehandler2.default();\n\n\t\t/**\n   * Helps cycling over focusable {@link #items} in the toolbar.\n   *\n   * @readonly\n   * @protected\n   * @member {module:ui/focuscycler~FocusCycler}\n   */\n\t\t_this._focusCycler = new _focuscycler2.default({\n\t\t\tfocusables: _this.items,\n\t\t\tfocusTracker: _this.focusTracker,\n\t\t\tkeystrokeHandler: _this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate toolbar items backwards using the arrow[left,up] keys.\n\t\t\t\tfocusPrevious: ['arrowleft', 'arrowup'],\n\n\t\t\t\t// Navigate toolbar items forwards using the arrow[right,down] keys.\n\t\t\t\tfocusNext: ['arrowright', 'arrowdown']\n\t\t\t}\n\t\t});\n\n\t\t_this.template = new _template2.default({\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: ['ck-toolbar']\n\t\t\t},\n\n\t\t\tchildren: _this.items,\n\n\t\t\ton: {\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/206\n\t\t\t\tmousedown: (0, _preventdefault2.default)(_this)\n\t\t\t}\n\t\t});\n\n\t\t_this.items.on('add', function (evt, item) {\n\t\t\t_this.focusTracker.add(item.element);\n\t\t});\n\n\t\t_this.items.on('remove', function (evt, item) {\n\t\t\t_this.focusTracker.remove(item.element);\n\t\t});\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(ToolbarView, [{\n\t\tkey: 'init',\n\t\tvalue: function init() {\n\t\t\t// Start listening for the keystrokes coming from #element.\n\t\t\tthis.keystrokes.listenTo(this.element);\n\n\t\t\t_get(ToolbarView.prototype.__proto__ || Object.getPrototypeOf(ToolbarView.prototype), 'init', this).call(this);\n\t\t}\n\n\t\t/**\n   * Focuses the first focusable in {@link #items}.\n   */\n\n\t}, {\n\t\tkey: 'focus',\n\t\tvalue: function focus() {\n\t\t\tthis._focusCycler.focusFirst();\n\t\t}\n\n\t\t/**\n   * A utility which expands a plain toolbar configuration into\n   * {@link module:ui/toolbar/toolbarview~ToolbarView#items} using a given component factory.\n   *\n   * @param {Array.<String>} config The toolbar items config.\n   * @param {module:ui/componentfactory~ComponentFactory} factory A factory producing toolbar items.\n   */\n\n\t}, {\n\t\tkey: 'fillFromConfig',\n\t\tvalue: function fillFromConfig(config, factory) {\n\t\t\tvar _this2 = this;\n\n\t\t\tif (!config) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconfig.map(function (name) {\n\t\t\t\tvar component = name == '|' ? new _toolbarseparatorview2.default() : factory.create(name);\n\n\t\t\t\t_this2.items.add(component);\n\t\t\t});\n\t\t}\n\t}]);\n\n\treturn ToolbarView;\n}(_view2.default);\n\nexports.default = ToolbarView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-ui/src/toolbar/toolbarview.js\n// module id = 181\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports.transformRangesByDeltas = transformRangesByDeltas;\n\nvar _command = require('@ckeditor/ckeditor5-core/src/command');\n\nvar _command2 = _interopRequireDefault(_command);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module undo/basecommand\n */\n\n/**\n * Base class for undo feature commands: {@link module:undo/undocommand~UndoCommand} and {@link module:undo/redocommand~RedoCommand}.\n *\n * @protected\n * @extends module:core/command~Command\n */\nvar BaseCommand = function (_Command) {\n\t_inherits(BaseCommand, _Command);\n\n\tfunction BaseCommand(editor) {\n\t\t_classCallCheck(this, BaseCommand);\n\n\t\t/**\n   * Stack of items stored by the command. These are pairs of:\n   *\n   * * {@link module:engine/model/batch~Batch batch} saved by the command,\n   * * {@link module:engine/model/selection~Selection selection} state at the moment of saving the batch.\n   *\n   * @protected\n   * @member {Array} #_stack\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (BaseCommand.__proto__ || Object.getPrototypeOf(BaseCommand)).call(this, editor));\n\n\t\t_this._stack = [];\n\n\t\t/**\n   * Stores all batches that were created by this command.\n   *\n   * @protected\n   * @member {WeakSet.<module:engine/model/batch~Batch>} #_createdBatches\n   */\n\t\t_this._createdBatches = new WeakSet();\n\n\t\t// Refresh state, so the command is inactive right after initialization.\n\t\t_this.refresh();\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(BaseCommand, [{\n\t\tkey: 'refresh',\n\t\tvalue: function refresh() {\n\t\t\tthis.isEnabled = this._stack.length > 0;\n\t\t}\n\n\t\t/**\n   * Stores a batch in the command, together with the selection state of the {@link module:engine/model/document~Document document}\n   * created by the editor which this command is registered to.\n   *\n   * @param {module:engine/model/batch~Batch} batch The batch to add.\n   */\n\n\t}, {\n\t\tkey: 'addBatch',\n\t\tvalue: function addBatch(batch) {\n\t\t\tvar selection = {\n\t\t\t\tranges: Array.from(this.editor.document.selection.getRanges()),\n\t\t\t\tisBackward: this.editor.document.selection.isBackward\n\t\t\t};\n\n\t\t\tthis._stack.push({ batch: batch, selection: selection });\n\t\t\tthis.refresh();\n\t\t}\n\n\t\t/**\n   * Removes all items from the stack.\n   */\n\n\t}, {\n\t\tkey: 'clearStack',\n\t\tvalue: function clearStack() {\n\t\t\tthis._stack = [];\n\t\t\tthis.refresh();\n\t\t}\n\n\t\t/**\n   * Restores the {@link module:engine/model/document~Document#selection document selection} state after a batch was undone.\n   *\n   * @protected\n   * @param {Array.<module:engine/model/range~Range>} ranges Ranges to be restored.\n   * @param {Boolean} isBackward A flag describing whether the restored range was selected forward or backward.\n   * @param {Array.<module:engine/model/delta/delta~Delta>} deltas Deltas which has been applied since selection has been stored.\n   */\n\n\t}, {\n\t\tkey: '_restoreSelection',\n\t\tvalue: function _restoreSelection(ranges, isBackward, deltas) {\n\t\t\tvar document = this.editor.document;\n\n\t\t\t// This will keep the transformed selection ranges.\n\t\t\tvar selectionRanges = [];\n\n\t\t\t// Transform all ranges from the restored selection.\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar range = _step.value;\n\n\t\t\t\t\tvar transformedRanges = transformSelectionRange(range, deltas);\n\n\t\t\t\t\t// For each `range` from `ranges`, we take only one transformed range.\n\t\t\t\t\t// This is because we want to prevent situation where single-range selection\n\t\t\t\t\t// got transformed to multi-range selection. We will take the first range that\n\t\t\t\t\t// is not in the graveyard.\n\t\t\t\t\tvar transformedRange = transformedRanges.find(function (range) {\n\t\t\t\t\t\treturn range.start.root != document.graveyard;\n\t\t\t\t\t});\n\n\t\t\t\t\t// `transformedRange` might be `undefined` if transformed range ended up in graveyard.\n\t\t\t\t\tif (transformedRange) {\n\t\t\t\t\t\tselectionRanges.push(transformedRange);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// `selectionRanges` may be empty if all ranges ended up in graveyard. If that is the case, do not restore selection.\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selectionRanges.length) {\n\t\t\t\tdocument.selection.setRanges(selectionRanges, isBackward);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Undoes a batch by reversing that batch, transforming reversed batch and finally applying it.\n   * This is a helper method for {@link #execute}.\n   *\n   * @protected\n   * @param {module:engine/model/batch~Batch} batchToUndo The batch to be undone.\n   */\n\n\t}, {\n\t\tkey: '_undo',\n\t\tvalue: function _undo(batchToUndo) {\n\t\t\tvar document = this.editor.document;\n\n\t\t\t// All changes done by the command execution will be saved as one batch.\n\t\t\tvar undoingBatch = document.batch();\n\t\t\tthis._createdBatches.add(undoingBatch);\n\n\t\t\tvar deltasToUndo = batchToUndo.deltas.slice();\n\t\t\tdeltasToUndo.reverse();\n\n\t\t\t// We will process each delta from `batchToUndo`, in reverse order. If there were deltas A, B and C in undone batch,\n\t\t\t// we need to revert them in reverse order, so first C' (reversed C), then B', then A'.\n\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\tvar _didIteratorError2 = false;\n\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator2 = deltasToUndo[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\tvar deltaToUndo = _step2.value;\n\n\t\t\t\t\t// Keep in mind that transformation algorithms return arrays. That's because the transformation might result in multiple\n\t\t\t\t\t// deltas, so we need arrays to handle them. To simplify algorithms, it is better to always operate on arrays.\n\t\t\t\t\tvar nextBaseVersion = deltaToUndo.baseVersion + deltaToUndo.operations.length;\n\n\t\t\t\t\t// Reverse delta from the history.\n\t\t\t\t\tvar historyDeltas = Array.from(document.history.getDeltas(nextBaseVersion));\n\t\t\t\t\tvar transformedSets = document.transformDeltas([deltaToUndo.getReversed()], historyDeltas, true);\n\t\t\t\t\tvar reversedDeltas = transformedSets.deltasA;\n\n\t\t\t\t\t// After reversed delta has been transformed by all history deltas, apply it.\n\t\t\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\t\t\tvar _didIteratorError3 = false;\n\t\t\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (var _iterator3 = reversedDeltas[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\t\t\tvar delta = _step3.value;\n\n\t\t\t\t\t\t\t// Fix base version.\n\t\t\t\t\t\t\tdelta.baseVersion = document.version;\n\n\t\t\t\t\t\t\t// Before applying, add the delta to the `undoingBatch`.\n\t\t\t\t\t\t\tundoingBatch.addDelta(delta);\n\n\t\t\t\t\t\t\t// Now, apply all operations of the delta.\n\t\t\t\t\t\t\tvar _iteratorNormalCompletion4 = true;\n\t\t\t\t\t\t\tvar _didIteratorError4 = false;\n\t\t\t\t\t\t\tvar _iteratorError4 = undefined;\n\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tfor (var _iterator4 = delta.operations[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\t\t\t\t\t\t\tvar operation = _step4.value;\n\n\t\t\t\t\t\t\t\t\tdocument.applyOperation(operation);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t_didIteratorError4 = true;\n\t\t\t\t\t\t\t\t_iteratorError4 = err;\n\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t\t\t\t\t\t\t_iterator4.return();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\t\tif (_didIteratorError4) {\n\t\t\t\t\t\t\t\t\t\tthrow _iteratorError4;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tdocument.history.setDeltaAsUndone(deltaToUndo, delta);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t\t\t_iteratorError3 = err;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t_iteratorError2 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn undoingBatch;\n\t\t}\n\t}]);\n\n\treturn BaseCommand;\n}(_command2.default);\n\n// Transforms given range `range` by given `deltas`.\n// Returns an array containing one or more ranges, which are result of the transformation.\n\n\nexports.default = BaseCommand;\nfunction transformSelectionRange(range, deltas) {\n\tvar transformed = transformRangesByDeltas([range], deltas);\n\n\t// After `range` got transformed, we have an array of ranges. Some of those\n\t// ranges may be \"touching\" -- they can be next to each other and could be merged.\n\t// First, we have to sort those ranges to assure that they are in order.\n\ttransformed.sort(function (a, b) {\n\t\treturn a.start.isBefore(b.start) ? -1 : 1;\n\t});\n\n\t// Then, we check if two consecutive ranges are touching.\n\tfor (var i = 1; i < transformed.length; i++) {\n\t\tvar a = transformed[i - 1];\n\t\tvar b = transformed[i];\n\n\t\tif (a.end.isTouching(b.start)) {\n\t\t\t// And join them together if they are.\n\t\t\ta.end = b.end;\n\t\t\ttransformed.splice(i, 1);\n\t\t\ti--;\n\t\t}\n\t}\n\n\treturn transformed;\n}\n\n// Transforms given set of `ranges` by given set of `deltas`. Returns transformed `ranges`.\nfunction transformRangesByDeltas(ranges, deltas) {\n\tvar _iteratorNormalCompletion5 = true;\n\tvar _didIteratorError5 = false;\n\tvar _iteratorError5 = undefined;\n\n\ttry {\n\t\tfor (var _iterator5 = deltas[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t\t\tvar delta = _step5.value;\n\t\t\tvar _iteratorNormalCompletion6 = true;\n\t\t\tvar _didIteratorError6 = false;\n\t\t\tvar _iteratorError6 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator6 = delta.operations[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t\t\t\t\tvar operation = _step6.value;\n\n\t\t\t\t\t// We look through all operations from all deltas.\n\n\t\t\t\t\tfor (var i = 0; i < ranges.length; i++) {\n\t\t\t\t\t\t// We transform every range by every operation.\n\t\t\t\t\t\tvar result = void 0;\n\n\t\t\t\t\t\tswitch (operation.type) {\n\t\t\t\t\t\t\tcase 'insert':\n\t\t\t\t\t\t\t\tresult = ranges[i]._getTransformedByInsertion(operation.position, operation.nodes.maxOffset, true);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'move':\n\t\t\t\t\t\t\tcase 'remove':\n\t\t\t\t\t\t\tcase 'reinsert':\n\t\t\t\t\t\t\t\tresult = ranges[i]._getTransformedByMove(operation.sourcePosition, operation.targetPosition, operation.howMany, true);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If we have a transformation result, we substitute transformed range with it in `transformed` array.\n\t\t\t\t\t\t// Keep in mind that the result is an array and may contain multiple ranges.\n\t\t\t\t\t\tif (result) {\n\t\t\t\t\t\t\tranges.splice.apply(ranges, [i, 1].concat(_toConsumableArray(result)));\n\n\t\t\t\t\t\t\t// Fix iterator.\n\t\t\t\t\t\t\ti = i + result.length - 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError6 = true;\n\t\t\t\t_iteratorError6 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion6 && _iterator6.return) {\n\t\t\t\t\t\t_iterator6.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError6) {\n\t\t\t\t\t\tthrow _iteratorError6;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError5 = true;\n\t\t_iteratorError5 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t\t\t\t_iterator5.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError5) {\n\t\t\t\tthrow _iteratorError5;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn ranges;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-undo/src/basecommand.js\n// module id = 182\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = diff;\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/diff\n */\n\n// The following code is based on the \"O(NP) Sequence Comparison Algorithm\"\n// by Sun Wu, Udi Manber, Gene Myers, Webb Miller.\n\n/**\n * Calculates the difference between two arrays or strings producing an array containing a list of changes\n * necessary to transform input into output.\n *\n *\t\tdiff( 'aba', 'acca' ); // [ 'equal', 'insert', 'insert', 'delete', 'equal' ]\n *\n * @param {Array|String} a Input array or string.\n * @param {Array|String} b Output array or string.\n * @param {Function} [cmp] Optional function used to compare array values, by default === is used.\n * @returns {Array} Array of changes.\n */\nfunction diff(a, b, cmp) {\n\t// Set the comparator function.\n\tcmp = cmp || function (a, b) {\n\t\treturn a === b;\n\t};\n\n\t// Temporary action type statics.\n\tvar _insert = void 0,\n\t    _delete = void 0;\n\n\t// Swapped the arrays to use the shorter one as the first one.\n\tif (b.length < a.length) {\n\t\tvar tmp = a;\n\n\t\ta = b;\n\t\tb = tmp;\n\n\t\t// We swap the action types as well.\n\t\t_insert = 'delete';\n\t\t_delete = 'insert';\n\t} else {\n\t\t_insert = 'insert';\n\t\t_delete = 'delete';\n\t}\n\n\tvar m = a.length;\n\tvar n = b.length;\n\tvar delta = n - m;\n\n\t// Edit scripts, for each diagonal.\n\tvar es = {};\n\t// Furthest points, the furthest y we can get on each diagonal.\n\tvar fp = {};\n\n\tfunction snake(k) {\n\t\t// We use -1 as an alternative below to handle initial values ( instead of filling the fp with -1 first ).\n\t\t// Furthest points (y) on the diagonal below k.\n\t\tvar y1 = (fp[k - 1] !== undefined ? fp[k - 1] : -1) + 1;\n\t\t// Furthest points (y) on the diagonal above k.\n\t\tvar y2 = fp[k + 1] !== undefined ? fp[k + 1] : -1;\n\t\t// The way we should go to get further.\n\t\tvar dir = y1 > y2 ? -1 : 1;\n\n\t\t// Clone previous changes array (if any).\n\t\tif (es[k + dir]) {\n\t\t\tes[k] = es[k + dir].slice(0);\n\t\t}\n\n\t\t// Create changes array.\n\t\tif (!es[k]) {\n\t\t\tes[k] = [];\n\t\t}\n\n\t\t// Push the action.\n\t\tes[k].push(y1 > y2 ? _insert : _delete);\n\n\t\t// Set the beginning coordinates.\n\t\tvar y = Math.max(y1, y2);\n\t\tvar x = y - k;\n\n\t\t// Traverse the diagonal as long as the values match.\n\t\twhile (x < m && y < n && cmp(a[x], b[y])) {\n\t\t\tx++;\n\t\t\ty++;\n\t\t\t// Push no change action.\n\t\t\tes[k].push('equal');\n\t\t}\n\n\t\treturn y;\n\t}\n\n\tvar p = 0;\n\tvar k = void 0;\n\n\t// Traverse the graph until we reach the end of the longer string.\n\tdo {\n\t\t// Updates furthest points and edit scripts for diagonals below delta.\n\t\tfor (k = -p; k < delta; k++) {\n\t\t\tfp[k] = snake(k);\n\t\t}\n\n\t\t// Updates furthest points and edit scripts for diagonals above delta.\n\t\tfor (k = delta + p; k > delta; k--) {\n\t\t\tfp[k] = snake(k);\n\t\t}\n\n\t\t// Updates furthest point and edit script for the delta diagonal.\n\t\t// note that the delta diagonal is the one which goes through the sink (m, n).\n\t\tfp[delta] = snake(delta);\n\n\t\tp++;\n\t} while (fp[delta] !== n);\n\n\t// Return the final list of edit changes.\n\t// We remove the first item that represents the action for the injected nulls.\n\treturn es[delta].slice(1);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/diff.js\n// module id = 183\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getAncestors;\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* globals Node */\n\n/**\n * @module utils/dom/getancestors\n */\n\n/**\n * Returns all ancestors of given DOM node, starting from the top-most (root). Includes the given node itself. If the\n * node is a part of `DocumentFragment` that `DocumentFragment` will be returned. In contrary, if the node is\n * appended to a `Document`, that `Document` will not be returned (algorithms operating on DOM tree care for `Document#documentElement`\n * at most, which will be returned).\n *\n * @param {Node} node DOM node.\n * @returns {Array.<Node|DocumentFragment>} Array of given `node` parents.\n */\nfunction getAncestors(node) {\n  var nodes = [];\n\n  // We are interested in `Node`s `DocumentFragment`s only.\n  while (node && node.nodeType != Node.DOCUMENT_NODE) {\n    nodes.unshift(node);\n    node = node.parentNode;\n  }\n\n  return nodes;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/dom/getancestors.js\n// module id = 184\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isRange;\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/isrange\n */\n\n/**\n * Checks if the object is a native DOM Range.\n *\n * @param {*} obj\n * @returns {Boolean}\n */\nfunction isRange(obj) {\n  return Object.prototype.toString.apply(obj) == '[object Range]';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/dom/isrange.js\n// module id = 185\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toUnit;\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/tounit\n */\n\n/**\n * Returns a helper function, which adds a desired trailing\n * `unit` to the passed value.\n *\n * @param {String} unit An unit like \"px\" or \"em\".\n * @returns {module:utils/dom/tounit~helper}\n */\nfunction toUnit(unit) {\n  /**\n   * A function, which adds a pre–defined trailing `unit`\n   * to the passed `value`.\n   *\n   * @function helper\n  \t * @param {*} value A value to be given the unit.\n  \t * @returns {String} A value with the trailing unit.\n   */\n  return function (value) {\n    return value + unit;\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/dom/tounit.js\n// module id = 186\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getNative = require('./_getNative');\n\nvar _getNative2 = _interopRequireDefault(_getNative);\n\nvar _root = require('./_root');\n\nvar _root2 = _interopRequireDefault(_root);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* Built-in method references that are verified to be native. */\nvar Map = (0, _getNative2.default)(_root2.default, 'Map');\n\nexports.default = Map;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_Map.js\n// module id = 187\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getNative = require('./_getNative');\n\nvar _getNative2 = _interopRequireDefault(_getNative);\n\nvar _root = require('./_root');\n\nvar _root2 = _interopRequireDefault(_root);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* Built-in method references that are verified to be native. */\nvar Set = (0, _getNative2.default)(_root2.default, 'Set');\n\nexports.default = Set;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_Set.js\n// module id = 188\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _root = require('./_root');\n\nvar _root2 = _interopRequireDefault(_root);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Built-in value references. */\nvar Uint8Array = _root2.default.Uint8Array;\n\nexports.default = Uint8Array;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_Uint8Array.js\n// module id = 189\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  var length = args.length;\n  switch (length) {\n    case 0:\n      return func.call(thisArg);\n    case 1:\n      return func.call(thisArg, args[0]);\n    case 2:\n      return func.call(thisArg, args[0], args[1]);\n    case 3:\n      return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nexports.default = apply;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_apply.js\n// module id = 190\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nexports.default = arrayReduce;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_arrayReduce.js\n// module id = 191\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Stack = require('./_Stack');\n\nvar _Stack2 = _interopRequireDefault(_Stack);\n\nvar _arrayEach = require('./_arrayEach');\n\nvar _arrayEach2 = _interopRequireDefault(_arrayEach);\n\nvar _assignValue = require('./_assignValue');\n\nvar _assignValue2 = _interopRequireDefault(_assignValue);\n\nvar _baseAssign = require('./_baseAssign');\n\nvar _baseAssign2 = _interopRequireDefault(_baseAssign);\n\nvar _cloneBuffer = require('./_cloneBuffer');\n\nvar _cloneBuffer2 = _interopRequireDefault(_cloneBuffer);\n\nvar _copyArray = require('./_copyArray');\n\nvar _copyArray2 = _interopRequireDefault(_copyArray);\n\nvar _copySymbols = require('./_copySymbols');\n\nvar _copySymbols2 = _interopRequireDefault(_copySymbols);\n\nvar _getAllKeys = require('./_getAllKeys');\n\nvar _getAllKeys2 = _interopRequireDefault(_getAllKeys);\n\nvar _getTag = require('./_getTag');\n\nvar _getTag2 = _interopRequireDefault(_getTag);\n\nvar _initCloneArray = require('./_initCloneArray');\n\nvar _initCloneArray2 = _interopRequireDefault(_initCloneArray);\n\nvar _initCloneByTag = require('./_initCloneByTag');\n\nvar _initCloneByTag2 = _interopRequireDefault(_initCloneByTag);\n\nvar _initCloneObject = require('./_initCloneObject');\n\nvar _initCloneObject2 = _interopRequireDefault(_initCloneObject);\n\nvar _isArray = require('./isArray');\n\nvar _isArray2 = _interopRequireDefault(_isArray);\n\nvar _isBuffer = require('./isBuffer');\n\nvar _isBuffer2 = _interopRequireDefault(_isBuffer);\n\nvar _isHostObject = require('./_isHostObject');\n\nvar _isHostObject2 = _interopRequireDefault(_isHostObject);\n\nvar _isObject = require('./isObject');\n\nvar _isObject2 = _interopRequireDefault(_isObject);\n\nvar _keys = require('./keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!(0, _isObject2.default)(value)) {\n    return value;\n  }\n  var isArr = (0, _isArray2.default)(value);\n  if (isArr) {\n    result = (0, _initCloneArray2.default)(value);\n    if (!isDeep) {\n      return (0, _copyArray2.default)(value, result);\n    }\n  } else {\n    var tag = (0, _getTag2.default)(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if ((0, _isBuffer2.default)(value)) {\n      return (0, _cloneBuffer2.default)(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || isFunc && !object) {\n      if ((0, _isHostObject2.default)(value)) {\n        return object ? value : {};\n      }\n      result = (0, _initCloneObject2.default)(isFunc ? {} : value);\n      if (!isDeep) {\n        return (0, _copySymbols2.default)(value, (0, _baseAssign2.default)(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = (0, _initCloneByTag2.default)(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new _Stack2.default());\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? (0, _getAllKeys2.default)(value) : (0, _keys2.default)(value);\n  }\n  // Recursively populate clone (susceptible to call stack limits).\n  (0, _arrayEach2.default)(props || value, function (subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    (0, _assignValue2.default)(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexports.default = baseClone;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseClone.js\n// module id = 192\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {Function} predicate The function invoked per iteration.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromRight) {\n  var length = array.length,\n      index = fromRight ? length : -1;\n\n  while (fromRight ? index-- : ++index < length) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexports.default = baseFindIndex;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseFindIndex.js\n// module id = 193\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _getPrototype = require('./_getPrototype');\n\nvar _getPrototype2 = _interopRequireDefault(_getPrototype);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n  // that are composed entirely of index properties, return `false` for\n  // `hasOwnProperty` checks of them.\n  return hasOwnProperty.call(object, key) || (typeof object === 'undefined' ? 'undefined' : _typeof(object)) == 'object' && key in object && (0, _getPrototype2.default)(object) === null;\n}\n\nexports.default = baseHas;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseHas.js\n// module id = 194\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _castPath = require('./_castPath');\n\nvar _castPath2 = _interopRequireDefault(_castPath);\n\nvar _isIndex = require('./_isIndex');\n\nvar _isIndex2 = _interopRequireDefault(_isIndex);\n\nvar _isKey = require('./_isKey');\n\nvar _isKey2 = _interopRequireDefault(_isKey);\n\nvar _last = require('./last');\n\nvar _last2 = _interopRequireDefault(_last);\n\nvar _parent = require('./_parent');\n\nvar _parent2 = _interopRequireDefault(_parent);\n\nvar _toKey = require('./_toKey');\n\nvar _toKey2 = _interopRequireDefault(_toKey);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * The base implementation of `_.pullAt` without support for individual\n * indexes or capturing the removed elements.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {number[]} indexes The indexes of elements to remove.\n * @returns {Array} Returns `array`.\n */\nfunction basePullAt(array, indexes) {\n  var length = array ? indexes.length : 0,\n      lastIndex = length - 1;\n\n  while (length--) {\n    var index = indexes[length];\n    if (length == lastIndex || index !== previous) {\n      var previous = index;\n      if ((0, _isIndex2.default)(index)) {\n        splice.call(array, index, 1);\n      } else if (!(0, _isKey2.default)(index, array)) {\n        var path = (0, _castPath2.default)(index),\n            object = (0, _parent2.default)(array, path);\n\n        if (object != null) {\n          delete object[(0, _toKey2.default)((0, _last2.default)(path))];\n        }\n      } else {\n        delete array[(0, _toKey2.default)(index)];\n      }\n    }\n  }\n  return array;\n}\n\nexports.default = basePullAt;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_basePullAt.js\n// module id = 195\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _eq = require('./eq');\n\nvar _eq2 = _interopRequireDefault(_eq);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseSortedUniq(array, iteratee) {\n  var index = -1,\n      length = array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    if (!index || !(0, _eq2.default)(computed, seen)) {\n      var seen = computed;\n      result[resIndex++] = value === 0 ? 0 : value;\n    }\n  }\n  return result;\n}\n\nexports.default = baseSortedUniq;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseSortedUniq.js\n// module id = 196\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nexports.default = baseTimes;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseTimes.js\n// module id = 197\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n *\n * @private\n * @param {Array} props The property identifiers.\n * @param {Array} values The property values.\n * @param {Function} assignFunc The function to assign values.\n * @returns {Object} Returns the new object.\n */\nfunction baseZipObject(props, values, assignFunc) {\n  var index = -1,\n      length = props.length,\n      valsLength = values.length,\n      result = {};\n\n  while (++index < length) {\n    var value = index < valsLength ? values[index] : undefined;\n    assignFunc(result, props[index], value);\n  }\n  return result;\n}\n\nexports.default = baseZipObject;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseZipObject.js\n// module id = 198\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nexports.default = copyArray;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_copyArray.js\n// module id = 199\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _SetCache = require('./_SetCache');\n\nvar _SetCache2 = _interopRequireDefault(_SetCache);\n\nvar _arraySome = require('./_arraySome');\n\nvar _arraySome2 = _interopRequireDefault(_arraySome);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = bitmask & UNORDERED_COMPARE_FLAG ? new _SetCache2.default() : undefined;\n\n  stack.set(array, other);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!(0, _arraySome2.default)(other, function (othValue, othIndex) {\n        if (!seen.has(othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n          return seen.add(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  return result;\n}\n\nexports.default = equalArrays;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_equalArrays.js\n// module id = 200\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/** Built-in value references. */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nfunction getSymbols(object) {\n  // Coerce `object` to an object to avoid non-object errors in V8.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=3443 for more details.\n  return getOwnPropertySymbols(Object(object));\n}\n\n// Fallback for IE < 11.\nif (!getOwnPropertySymbols) {\n  getSymbols = function getSymbols() {\n    return [];\n  };\n}\n\nexports.default = getSymbols;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_getSymbols.js\n// module id = 201\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseTimes = require('./_baseTimes');\n\nvar _baseTimes2 = _interopRequireDefault(_baseTimes);\n\nvar _isArguments = require('./isArguments');\n\nvar _isArguments2 = _interopRequireDefault(_isArguments);\n\nvar _isArray = require('./isArray');\n\nvar _isArray2 = _interopRequireDefault(_isArray);\n\nvar _isLength = require('./isLength');\n\nvar _isLength2 = _interopRequireDefault(_isLength);\n\nvar _isString = require('./isString');\n\nvar _isString2 = _interopRequireDefault(_isString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates an array of index keys for `object` values of arrays,\n * `arguments` objects, and strings, otherwise `null` is returned.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array|null} Returns index keys, else `null`.\n */\nfunction indexKeys(object) {\n  var length = object ? object.length : undefined;\n  if ((0, _isLength2.default)(length) && ((0, _isArray2.default)(object) || (0, _isString2.default)(object) || (0, _isArguments2.default)(object))) {\n    return (0, _baseTimes2.default)(length, String);\n  }\n  return null;\n}\n\nexports.default = indexKeys;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_indexKeys.js\n// module id = 202\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Gets the index at which the first occurrence of `NaN` is found in `array`.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n */\nfunction indexOfNaN(array, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 0 : -1);\n\n  while (fromRight ? index-- : ++index < length) {\n    var other = array[index];\n    if (other !== other) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexports.default = indexOfNaN;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_indexOfNaN.js\n// module id = 203\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isObject = require('./isObject');\n\nvar _isObject2 = _interopRequireDefault(_isObject);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !(0, _isObject2.default)(value);\n}\n\nexports.default = isStrictComparable;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_isStrictComparable.js\n// module id = 204\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nexports.default = matchesStrictComparable;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_matchesStrictComparable.js\n// module id = 205\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = Function.prototype.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n  return '';\n}\n\nexports.default = toSource;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_toSource.js\n// module id = 206\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseSlice = require('./_baseSlice');\n\nvar _baseSlice2 = _interopRequireDefault(_baseSlice);\n\nvar _isIterateeCall = require('./_isIterateeCall');\n\nvar _isIterateeCall2 = _interopRequireDefault(_isIterateeCall);\n\nvar _toInteger = require('./toInteger');\n\nvar _toInteger2 = _interopRequireDefault(_toInteger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * Creates an array of elements split into groups the length of `size`.\n * If `array` can't be split evenly, the final chunk will be the remaining\n * elements.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to process.\n * @param {number} [size=1] The length of each chunk\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the new array of chunks.\n * @example\n *\n * _.chunk(['a', 'b', 'c', 'd'], 2);\n * // => [['a', 'b'], ['c', 'd']]\n *\n * _.chunk(['a', 'b', 'c', 'd'], 3);\n * // => [['a', 'b', 'c'], ['d']]\n */\nfunction chunk(array, size, guard) {\n  if (guard ? (0, _isIterateeCall2.default)(array, size, guard) : size === undefined) {\n    size = 1;\n  } else {\n    size = nativeMax((0, _toInteger2.default)(size), 0);\n  }\n  var length = array ? array.length : 0;\n  if (!length || size < 1) {\n    return [];\n  }\n  var index = 0,\n      resIndex = 0,\n      result = Array(nativeCeil(length / size));\n\n  while (index < length) {\n    result[resIndex++] = (0, _baseSlice2.default)(array, index, index += size);\n  }\n  return result;\n}\n\nexports.default = chunk;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/chunk.js\n// module id = 207\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Creates an array with all falsey values removed. The values `false`, `null`,\n * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to compact.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.compact([0, 1, false, 2, '', 3]);\n * // => [1, 2, 3]\n */\nfunction compact(array) {\n  var index = -1,\n      length = array ? array.length : 0,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexports.default = compact;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/compact.js\n// module id = 208\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _arrayPush = require('./_arrayPush');\n\nvar _arrayPush2 = _interopRequireDefault(_arrayPush);\n\nvar _baseFlatten = require('./_baseFlatten');\n\nvar _baseFlatten2 = _interopRequireDefault(_baseFlatten);\n\nvar _copyArray = require('./_copyArray');\n\nvar _copyArray2 = _interopRequireDefault(_copyArray);\n\nvar _isArray = require('./isArray');\n\nvar _isArray2 = _interopRequireDefault(_isArray);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a new array concatenating `array` with any additional arrays\n * and/or values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to concatenate.\n * @param {...*} [values] The values to concatenate.\n * @returns {Array} Returns the new concatenated array.\n * @example\n *\n * var array = [1];\n * var other = _.concat(array, 2, [3], [[4]]);\n *\n * console.log(other);\n * // => [1, 2, 3, [4]]\n *\n * console.log(array);\n * // => [1]\n */\nfunction concat() {\n  var length = arguments.length,\n      args = Array(length ? length - 1 : 0),\n      array = arguments[0],\n      index = length;\n\n  while (index--) {\n    args[index - 1] = arguments[index];\n  }\n  return length ? (0, _arrayPush2.default)((0, _isArray2.default)(array) ? (0, _copyArray2.default)(array) : [array], (0, _baseFlatten2.default)(args, 1)) : [];\n}\n\nexports.default = concat;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/concat.js\n// module id = 209\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isObject = require('./isObject');\n\nvar _isObject2 = _interopRequireDefault(_isObject);\n\nvar _now = require('./now');\n\nvar _now2 = _interopRequireDefault(_now);\n\nvar _toNumber = require('./toNumber');\n\nvar _toNumber2 = _interopRequireDefault(_toNumber);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide an options object to indicate whether `func` should be invoked on\n * the leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent calls\n * to the debounced function return the result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n * on the trailing edge of the timeout only if the debounced function is\n * invoked more than once during the `wait` timeout.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime = 0,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = (0, _toNumber2.default)(wait) || 0;\n  if ((0, _isObject2.default)(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax((0, _toNumber2.default)(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return !lastCallTime || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;\n  }\n\n  function timerExpired() {\n    var time = (0, _now2.default)();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    clearTimeout(timerId);\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastCallTime = lastInvokeTime = 0;\n    lastArgs = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge((0, _now2.default)());\n  }\n\n  function debounced() {\n    var time = (0, _now2.default)(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexports.default = debounce;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/debounce.js\n// module id = 210\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseDifference = require('./_baseDifference');\n\nvar _baseDifference2 = _interopRequireDefault(_baseDifference);\n\nvar _baseFlatten = require('./_baseFlatten');\n\nvar _baseFlatten2 = _interopRequireDefault(_baseFlatten);\n\nvar _isArrayLikeObject = require('./isArrayLikeObject');\n\nvar _isArrayLikeObject2 = _interopRequireDefault(_isArrayLikeObject);\n\nvar _rest = require('./rest');\n\nvar _rest2 = _interopRequireDefault(_rest);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates an array of unique `array` values not included in the other given\n * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons. The order of result values is determined by the\n * order they occur in the first array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([3, 2, 1], [4, 2]);\n * // => [3, 1]\n */\nvar difference = (0, _rest2.default)(function (array, values) {\n  return (0, _isArrayLikeObject2.default)(array) ? (0, _baseDifference2.default)(array, (0, _baseFlatten2.default)(values, 1, _isArrayLikeObject2.default, true)) : [];\n});\n\nexports.default = difference;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/difference.js\n// module id = 211\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseDifference = require('./_baseDifference');\n\nvar _baseDifference2 = _interopRequireDefault(_baseDifference);\n\nvar _baseFlatten = require('./_baseFlatten');\n\nvar _baseFlatten2 = _interopRequireDefault(_baseFlatten);\n\nvar _baseIteratee = require('./_baseIteratee');\n\nvar _baseIteratee2 = _interopRequireDefault(_baseIteratee);\n\nvar _isArrayLikeObject = require('./isArrayLikeObject');\n\nvar _isArrayLikeObject2 = _interopRequireDefault(_isArrayLikeObject);\n\nvar _last = require('./last');\n\nvar _last2 = _interopRequireDefault(_last);\n\nvar _rest = require('./rest');\n\nvar _rest2 = _interopRequireDefault(_rest);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This method is like `_.difference` except that it accepts `iteratee` which\n * is invoked for each element of `array` and `values` to generate the criterion\n * by which they're compared. Result values are chosen from the first array.\n * The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @param {Array|Function|Object|string} [iteratee=_.identity]\n *  The iteratee invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.differenceBy([3.1, 2.2, 1.3], [4.4, 2.5], Math.floor);\n * // => [3.1, 1.3]\n *\n * // The `_.property` iteratee shorthand.\n * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n * // => [{ 'x': 2 }]\n */\nvar differenceBy = (0, _rest2.default)(function (array, values) {\n  var iteratee = (0, _last2.default)(values);\n  if ((0, _isArrayLikeObject2.default)(iteratee)) {\n    iteratee = undefined;\n  }\n  return (0, _isArrayLikeObject2.default)(array) ? (0, _baseDifference2.default)(array, (0, _baseFlatten2.default)(values, 1, _isArrayLikeObject2.default, true), (0, _baseIteratee2.default)(iteratee)) : [];\n});\n\nexports.default = differenceBy;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/differenceBy.js\n// module id = 212\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseDifference = require('./_baseDifference');\n\nvar _baseDifference2 = _interopRequireDefault(_baseDifference);\n\nvar _baseFlatten = require('./_baseFlatten');\n\nvar _baseFlatten2 = _interopRequireDefault(_baseFlatten);\n\nvar _isArrayLikeObject = require('./isArrayLikeObject');\n\nvar _isArrayLikeObject2 = _interopRequireDefault(_isArrayLikeObject);\n\nvar _last = require('./last');\n\nvar _last2 = _interopRequireDefault(_last);\n\nvar _rest = require('./rest');\n\nvar _rest2 = _interopRequireDefault(_rest);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This method is like `_.difference` except that it accepts `comparator`\n * which is invoked to compare elements of `array` to `values`. Result values\n * are chosen from the first array. The comparator is invoked with two arguments:\n * (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n *\n * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n * // => [{ 'x': 2, 'y': 1 }]\n */\nvar differenceWith = (0, _rest2.default)(function (array, values) {\n  var comparator = (0, _last2.default)(values);\n  if ((0, _isArrayLikeObject2.default)(comparator)) {\n    comparator = undefined;\n  }\n  return (0, _isArrayLikeObject2.default)(array) ? (0, _baseDifference2.default)(array, (0, _baseFlatten2.default)(values, 1, _isArrayLikeObject2.default, true), undefined, comparator) : [];\n});\n\nexports.default = differenceWith;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/differenceWith.js\n// module id = 213\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseIteratee = require('./_baseIteratee');\n\nvar _baseIteratee2 = _interopRequireDefault(_baseIteratee);\n\nvar _baseWhile = require('./_baseWhile');\n\nvar _baseWhile2 = _interopRequireDefault(_baseWhile);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a slice of `array` excluding elements dropped from the end.\n * Elements are dropped until `predicate` returns falsey. The predicate is\n * invoked with three arguments: (value, index, array).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {Array|Function|Object|string} [predicate=_.identity]\n *  The function invoked per iteration.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': true },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': false }\n * ];\n *\n * _.dropRightWhile(users, function(o) { return !o.active; });\n * // => objects for ['barney']\n *\n * // The `_.matches` iteratee shorthand.\n * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n * // => objects for ['barney', 'fred']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.dropRightWhile(users, ['active', false]);\n * // => objects for ['barney']\n *\n * // The `_.property` iteratee shorthand.\n * _.dropRightWhile(users, 'active');\n * // => objects for ['barney', 'fred', 'pebbles']\n */\nfunction dropRightWhile(array, predicate) {\n  return array && array.length ? (0, _baseWhile2.default)(array, (0, _baseIteratee2.default)(predicate, 3), true, true) : [];\n}\n\nexports.default = dropRightWhile;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/dropRightWhile.js\n// module id = 214\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseIteratee = require('./_baseIteratee');\n\nvar _baseIteratee2 = _interopRequireDefault(_baseIteratee);\n\nvar _baseWhile = require('./_baseWhile');\n\nvar _baseWhile2 = _interopRequireDefault(_baseWhile);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a slice of `array` excluding elements dropped from the beginning.\n * Elements are dropped until `predicate` returns falsey. The predicate is\n * invoked with three arguments: (value, index, array).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {Array|Function|Object|string} [predicate=_.identity]\n *  The function invoked per iteration.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.dropWhile(users, function(o) { return !o.active; });\n * // => objects for ['pebbles']\n *\n * // The `_.matches` iteratee shorthand.\n * _.dropWhile(users, { 'user': 'barney', 'active': false });\n * // => objects for ['fred', 'pebbles']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.dropWhile(users, ['active', false]);\n * // => objects for ['pebbles']\n *\n * // The `_.property` iteratee shorthand.\n * _.dropWhile(users, 'active');\n * // => objects for ['barney', 'fred', 'pebbles']\n */\nfunction dropWhile(array, predicate) {\n  return array && array.length ? (0, _baseWhile2.default)(array, (0, _baseIteratee2.default)(predicate, 3), true) : [];\n}\n\nexports.default = dropWhile;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/dropWhile.js\n// module id = 215\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseFill = require('./_baseFill');\n\nvar _baseFill2 = _interopRequireDefault(_baseFill);\n\nvar _isIterateeCall = require('./_isIterateeCall');\n\nvar _isIterateeCall2 = _interopRequireDefault(_isIterateeCall);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Fills elements of `array` with `value` from `start` up to, but not\n * including, `end`.\n *\n * **Note:** This method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 3.2.0\n * @category Array\n * @param {Array} array The array to fill.\n * @param {*} value The value to fill `array` with.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [1, 2, 3];\n *\n * _.fill(array, 'a');\n * console.log(array);\n * // => ['a', 'a', 'a']\n *\n * _.fill(Array(3), 2);\n * // => [2, 2, 2]\n *\n * _.fill([4, 6, 8, 10], '*', 1, 3);\n * // => [4, '*', '*', 10]\n */\nfunction fill(array, value, start, end) {\n  var length = array ? array.length : 0;\n  if (!length) {\n    return [];\n  }\n  if (start && typeof start != 'number' && (0, _isIterateeCall2.default)(array, value, start)) {\n    start = 0;\n    end = length;\n  }\n  return (0, _baseFill2.default)(array, value, start, end);\n}\n\nexports.default = fill;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/fill.js\n// module id = 216\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseFindIndex = require('./_baseFindIndex');\n\nvar _baseFindIndex2 = _interopRequireDefault(_baseFindIndex);\n\nvar _baseIteratee = require('./_baseIteratee');\n\nvar _baseIteratee2 = _interopRequireDefault(_baseIteratee);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to search.\n * @param {Array|Function|Object|string} [predicate=_.identity]\n *  The function invoked per iteration.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate) {\n  return array && array.length ? (0, _baseFindIndex2.default)(array, (0, _baseIteratee2.default)(predicate, 3)) : -1;\n}\n\nexports.default = findIndex;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/findIndex.js\n// module id = 217\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseFindIndex = require('./_baseFindIndex');\n\nvar _baseFindIndex2 = _interopRequireDefault(_baseFindIndex);\n\nvar _baseIteratee = require('./_baseIteratee');\n\nvar _baseIteratee2 = _interopRequireDefault(_baseIteratee);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This method is like `_.findIndex` except that it iterates over elements\n * of `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to search.\n * @param {Array|Function|Object|string} [predicate=_.identity]\n *  The function invoked per iteration.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': true },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': false }\n * ];\n *\n * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n * // => 2\n *\n * // The `_.matches` iteratee shorthand.\n * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n * // => 0\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findLastIndex(users, ['active', false]);\n * // => 2\n *\n * // The `_.property` iteratee shorthand.\n * _.findLastIndex(users, 'active');\n * // => 0\n */\nfunction findLastIndex(array, predicate) {\n  return array && array.length ? (0, _baseFindIndex2.default)(array, (0, _baseIteratee2.default)(predicate, 3), true) : -1;\n}\n\nexports.default = findLastIndex;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/findLastIndex.js\n// module id = 218\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _head = require('./head');\n\nObject.defineProperty(exports, 'default', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_head).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/first.js\n// module id = 219\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseFlatten = require('./_baseFlatten');\n\nvar _baseFlatten2 = _interopRequireDefault(_baseFlatten);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array ? array.length : 0;\n  return length ? (0, _baseFlatten2.default)(array, 1) : [];\n}\n\nexports.default = flatten;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/flatten.js\n// module id = 220\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseFlatten = require('./_baseFlatten');\n\nvar _baseFlatten2 = _interopRequireDefault(_baseFlatten);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Recursively flattens `array`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flattenDeep([1, [2, [3, [4]], 5]]);\n * // => [1, 2, 3, 4, 5]\n */\nfunction flattenDeep(array) {\n  var length = array ? array.length : 0;\n  return length ? (0, _baseFlatten2.default)(array, INFINITY) : [];\n}\n\nexports.default = flattenDeep;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/flattenDeep.js\n// module id = 221\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseFlatten = require('./_baseFlatten');\n\nvar _baseFlatten2 = _interopRequireDefault(_baseFlatten);\n\nvar _toInteger = require('./toInteger');\n\nvar _toInteger2 = _interopRequireDefault(_toInteger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Recursively flatten `array` up to `depth` times.\n *\n * @static\n * @memberOf _\n * @since 4.4.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @param {number} [depth=1] The maximum recursion depth.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * var array = [1, [2, [3, [4]], 5]];\n *\n * _.flattenDepth(array, 1);\n * // => [1, 2, [3, [4]], 5]\n *\n * _.flattenDepth(array, 2);\n * // => [1, 2, 3, [4], 5]\n */\nfunction flattenDepth(array, depth) {\n  var length = array ? array.length : 0;\n  if (!length) {\n    return [];\n  }\n  depth = depth === undefined ? 1 : (0, _toInteger2.default)(depth);\n  return (0, _baseFlatten2.default)(array, depth);\n}\n\nexports.default = flattenDepth;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/flattenDepth.js\n// module id = 222\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * The inverse of `_.toPairs`; this method returns an object composed\n * from key-value `pairs`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} pairs The key-value pairs.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.fromPairs([['fred', 30], ['barney', 40]]);\n * // => { 'fred': 30, 'barney': 40 }\n */\nfunction fromPairs(pairs) {\n  var index = -1,\n      length = pairs ? pairs.length : 0,\n      result = {};\n\n  while (++index < length) {\n    var pair = pairs[index];\n    result[pair[0]] = pair[1];\n  }\n  return result;\n}\n\nexports.default = fromPairs;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/fromPairs.js\n// module id = 223\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseGet = require('./_baseGet');\n\nvar _baseGet2 = _interopRequireDefault(_baseGet);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is used in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : (0, _baseGet2.default)(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nexports.default = get;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/get.js\n// module id = 224\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * This method returns the first argument given to it.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nexports.default = identity;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/identity.js\n// module id = 225\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseIndexOf = require('./_baseIndexOf');\n\nvar _baseIndexOf2 = _interopRequireDefault(_baseIndexOf);\n\nvar _toInteger = require('./toInteger');\n\nvar _toInteger2 = _interopRequireDefault(_toInteger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Gets the index at which the first occurrence of `value` is found in `array`\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons. If `fromIndex` is negative, it's used as the\n * offset from the end of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to search.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.indexOf([1, 2, 1, 2], 2);\n * // => 1\n *\n * // Search from the `fromIndex`.\n * _.indexOf([1, 2, 1, 2], 2, 2);\n * // => 3\n */\nfunction indexOf(array, value, fromIndex) {\n  var length = array ? array.length : 0;\n  if (!length) {\n    return -1;\n  }\n  fromIndex = (0, _toInteger2.default)(fromIndex);\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return (0, _baseIndexOf2.default)(array, value, fromIndex);\n}\n\nexports.default = indexOf;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/indexOf.js\n// module id = 226\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _dropRight = require('./dropRight');\n\nvar _dropRight2 = _interopRequireDefault(_dropRight);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Gets all but the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.initial([1, 2, 3]);\n * // => [1, 2]\n */\nfunction initial(array) {\n  return (0, _dropRight2.default)(array, 1);\n}\n\nexports.default = initial;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/initial.js\n// module id = 227\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _arrayMap = require('./_arrayMap');\n\nvar _arrayMap2 = _interopRequireDefault(_arrayMap);\n\nvar _baseIntersection = require('./_baseIntersection');\n\nvar _baseIntersection2 = _interopRequireDefault(_baseIntersection);\n\nvar _castArrayLikeObject = require('./_castArrayLikeObject');\n\nvar _castArrayLikeObject2 = _interopRequireDefault(_castArrayLikeObject);\n\nvar _rest = require('./rest');\n\nvar _rest2 = _interopRequireDefault(_rest);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates an array of unique values that are included in all given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons. The order of result values is determined by the\n * order they occur in the first array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * _.intersection([2, 1], [4, 2], [1, 2]);\n * // => [2]\n */\nvar intersection = (0, _rest2.default)(function (arrays) {\n  var mapped = (0, _arrayMap2.default)(arrays, _castArrayLikeObject2.default);\n  return mapped.length && mapped[0] === arrays[0] ? (0, _baseIntersection2.default)(mapped) : [];\n});\n\nexports.default = intersection;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/intersection.js\n// module id = 228\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _arrayMap = require('./_arrayMap');\n\nvar _arrayMap2 = _interopRequireDefault(_arrayMap);\n\nvar _baseIntersection = require('./_baseIntersection');\n\nvar _baseIntersection2 = _interopRequireDefault(_baseIntersection);\n\nvar _baseIteratee = require('./_baseIteratee');\n\nvar _baseIteratee2 = _interopRequireDefault(_baseIteratee);\n\nvar _castArrayLikeObject = require('./_castArrayLikeObject');\n\nvar _castArrayLikeObject2 = _interopRequireDefault(_castArrayLikeObject);\n\nvar _last = require('./last');\n\nvar _last2 = _interopRequireDefault(_last);\n\nvar _rest = require('./rest');\n\nvar _rest2 = _interopRequireDefault(_rest);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This method is like `_.intersection` except that it accepts `iteratee`\n * which is invoked for each element of each `arrays` to generate the criterion\n * by which they're compared. Result values are chosen from the first array.\n * The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Array|Function|Object|string} [iteratee=_.identity]\n *  The iteratee invoked per element.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * _.intersectionBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n * // => [2.1]\n *\n * // The `_.property` iteratee shorthand.\n * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }]\n */\nvar intersectionBy = (0, _rest2.default)(function (arrays) {\n  var iteratee = (0, _last2.default)(arrays),\n      mapped = (0, _arrayMap2.default)(arrays, _castArrayLikeObject2.default);\n\n  if (iteratee === (0, _last2.default)(mapped)) {\n    iteratee = undefined;\n  } else {\n    mapped.pop();\n  }\n  return mapped.length && mapped[0] === arrays[0] ? (0, _baseIntersection2.default)(mapped, (0, _baseIteratee2.default)(iteratee)) : [];\n});\n\nexports.default = intersectionBy;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/intersectionBy.js\n// module id = 229\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _arrayMap = require('./_arrayMap');\n\nvar _arrayMap2 = _interopRequireDefault(_arrayMap);\n\nvar _baseIntersection = require('./_baseIntersection');\n\nvar _baseIntersection2 = _interopRequireDefault(_baseIntersection);\n\nvar _castArrayLikeObject = require('./_castArrayLikeObject');\n\nvar _castArrayLikeObject2 = _interopRequireDefault(_castArrayLikeObject);\n\nvar _last = require('./last');\n\nvar _last2 = _interopRequireDefault(_last);\n\nvar _rest = require('./rest');\n\nvar _rest2 = _interopRequireDefault(_rest);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This method is like `_.intersection` except that it accepts `comparator`\n * which is invoked to compare elements of `arrays`. Result values are chosen\n * from the first array. The comparator is invoked with two arguments:\n * (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.intersectionWith(objects, others, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }]\n */\nvar intersectionWith = (0, _rest2.default)(function (arrays) {\n  var comparator = (0, _last2.default)(arrays),\n      mapped = (0, _arrayMap2.default)(arrays, _castArrayLikeObject2.default);\n\n  if (comparator === (0, _last2.default)(mapped)) {\n    comparator = undefined;\n  } else {\n    mapped.pop();\n  }\n  return mapped.length && mapped[0] === arrays[0] ? (0, _baseIntersection2.default)(mapped, undefined, comparator) : [];\n});\n\nexports.default = intersectionWith;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/intersectionWith.js\n// module id = 230\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isObjectLike = require('./isObjectLike');\n\nvar _isObjectLike2 = _interopRequireDefault(_isObjectLike);\n\nvar _isPlainObject = require('./isPlainObject');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Checks if `value` is likely a DOM element.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a DOM element,\n *  else `false`.\n * @example\n *\n * _.isElement(document.body);\n * // => true\n *\n * _.isElement('<body>');\n * // => false\n */\nfunction isElement(value) {\n  return !!value && value.nodeType === 1 && (0, _isObjectLike2.default)(value) && !(0, _isPlainObject2.default)(value);\n}\n\nexports.default = isElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/isElement.js\n// module id = 231\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isFunction = require('./isFunction');\n\nvar _isFunction2 = _interopRequireDefault(_isFunction);\n\nvar _isHostObject = require('./_isHostObject');\n\nvar _isHostObject2 = _interopRequireDefault(_isHostObject);\n\nvar _isObject = require('./isObject');\n\nvar _isObject2 = _interopRequireDefault(_isObject);\n\nvar _toSource = require('./_toSource');\n\nvar _toSource2 = _interopRequireDefault(_toSource);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (!(0, _isObject2.default)(value)) {\n    return false;\n  }\n  var pattern = (0, _isFunction2.default)(value) || (0, _isHostObject2.default)(value) ? reIsNative : reIsHostCtor;\n  return pattern.test((0, _toSource2.default)(value));\n}\n\nexports.default = isNative;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/isNative.js\n// module id = 232\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeJoin = arrayProto.join;\n\n/**\n * Converts all elements in `array` into a string separated by `separator`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to convert.\n * @param {string} [separator=','] The element separator.\n * @returns {string} Returns the joined string.\n * @example\n *\n * _.join(['a', 'b', 'c'], '~');\n * // => 'a~b~c'\n */\nfunction join(array, separator) {\n  return array ? nativeJoin.call(array, separator) : '';\n}\n\nexports.default = join;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/join.js\n// module id = 233\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _indexOfNaN = require('./_indexOfNaN');\n\nvar _indexOfNaN2 = _interopRequireDefault(_indexOfNaN);\n\nvar _toInteger = require('./toInteger');\n\nvar _toInteger2 = _interopRequireDefault(_toInteger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * This method is like `_.indexOf` except that it iterates over elements of\n * `array` from right to left.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to search.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=array.length-1] The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.lastIndexOf([1, 2, 1, 2], 2);\n * // => 3\n *\n * // Search from the `fromIndex`.\n * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n * // => 1\n */\nfunction lastIndexOf(array, value, fromIndex) {\n  var length = array ? array.length : 0;\n  if (!length) {\n    return -1;\n  }\n  var index = length;\n  if (fromIndex !== undefined) {\n    index = (0, _toInteger2.default)(fromIndex);\n    index = (index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1)) + 1;\n  }\n  if (value !== value) {\n    return (0, _indexOfNaN2.default)(array, index, true);\n  }\n  while (index--) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexports.default = lastIndexOf;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/lastIndexOf.js\n// module id = 234\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseNth = require('./_baseNth');\n\nvar _baseNth2 = _interopRequireDefault(_baseNth);\n\nvar _toInteger = require('./toInteger');\n\nvar _toInteger2 = _interopRequireDefault(_toInteger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Gets the element at `n` index of `array`. If `n` is negative, the nth\n * element from the end is returned.\n *\n * @static\n * @memberOf _\n * @since 4.11.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=0] The index of the element to return.\n * @returns {*} Returns the nth element of `array`.\n * @example\n *\n * var array = ['a', 'b', 'c', 'd'];\n *\n * _.nth(array, 1);\n * // => 'b'\n *\n * _.nth(array, -2);\n * // => 'c';\n */\nfunction nth(array, n) {\n  return array && array.length ? (0, _baseNth2.default)(array, (0, _toInteger2.default)(n)) : undefined;\n}\n\nexports.default = nth;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/nth.js\n// module id = 235\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _pullAll = require('./pullAll');\n\nvar _pullAll2 = _interopRequireDefault(_pullAll);\n\nvar _rest = require('./rest');\n\nvar _rest2 = _interopRequireDefault(_rest);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Removes all given values from `array` using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n * to remove elements from an array by predicate.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {...*} [values] The values to remove.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [1, 2, 3, 1, 2, 3];\n *\n * _.pull(array, 2, 3);\n * console.log(array);\n * // => [1, 1]\n */\nvar pull = (0, _rest2.default)(_pullAll2.default);\n\nexports.default = pull;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/pull.js\n// module id = 236\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseIteratee = require('./_baseIteratee');\n\nvar _baseIteratee2 = _interopRequireDefault(_baseIteratee);\n\nvar _basePullAll = require('./_basePullAll');\n\nvar _basePullAll2 = _interopRequireDefault(_basePullAll);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This method is like `_.pullAll` except that it accepts `iteratee` which is\n * invoked for each element of `array` and `values` to generate the criterion\n * by which they're compared. The iteratee is invoked with one argument: (value).\n *\n * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @param {Array|Function|Object|string} [iteratee=_.identity]\n *  The iteratee invoked per element.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n *\n * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n * console.log(array);\n * // => [{ 'x': 2 }]\n */\nfunction pullAllBy(array, values, iteratee) {\n  return array && array.length && values && values.length ? (0, _basePullAll2.default)(array, values, (0, _baseIteratee2.default)(iteratee)) : array;\n}\n\nexports.default = pullAllBy;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/pullAllBy.js\n// module id = 237\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _basePullAll = require('./_basePullAll');\n\nvar _basePullAll2 = _interopRequireDefault(_basePullAll);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This method is like `_.pullAll` except that it accepts `comparator` which\n * is invoked to compare elements of `array` to `values`. The comparator is\n * invoked with two arguments: (arrVal, othVal).\n *\n * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 4.6.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n *\n * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n * console.log(array);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n */\nfunction pullAllWith(array, values, comparator) {\n  return array && array.length && values && values.length ? (0, _basePullAll2.default)(array, values, undefined, comparator) : array;\n}\n\nexports.default = pullAllWith;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/pullAllWith.js\n// module id = 238\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _arrayMap = require('./_arrayMap');\n\nvar _arrayMap2 = _interopRequireDefault(_arrayMap);\n\nvar _baseAt = require('./_baseAt');\n\nvar _baseAt2 = _interopRequireDefault(_baseAt);\n\nvar _baseFlatten = require('./_baseFlatten');\n\nvar _baseFlatten2 = _interopRequireDefault(_baseFlatten);\n\nvar _basePullAt = require('./_basePullAt');\n\nvar _basePullAt2 = _interopRequireDefault(_basePullAt);\n\nvar _compareAscending = require('./_compareAscending');\n\nvar _compareAscending2 = _interopRequireDefault(_compareAscending);\n\nvar _isIndex = require('./_isIndex');\n\nvar _isIndex2 = _interopRequireDefault(_isIndex);\n\nvar _rest = require('./rest');\n\nvar _rest2 = _interopRequireDefault(_rest);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Removes elements from `array` corresponding to `indexes` and returns an\n * array of removed elements.\n *\n * **Note:** Unlike `_.at`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n * @returns {Array} Returns the new array of removed elements.\n * @example\n *\n * var array = [5, 10, 15, 20];\n * var evens = _.pullAt(array, 1, 3);\n *\n * console.log(array);\n * // => [5, 15]\n *\n * console.log(evens);\n * // => [10, 20]\n */\nvar pullAt = (0, _rest2.default)(function (array, indexes) {\n  indexes = (0, _baseFlatten2.default)(indexes, 1);\n\n  var length = array ? array.length : 0,\n      result = (0, _baseAt2.default)(array, indexes);\n\n  (0, _basePullAt2.default)(array, (0, _arrayMap2.default)(indexes, function (index) {\n    return (0, _isIndex2.default)(index, length) ? +index : index;\n  }).sort(_compareAscending2.default));\n\n  return result;\n});\n\nexports.default = pullAt;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/pullAt.js\n// module id = 239\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseIteratee = require('./_baseIteratee');\n\nvar _baseIteratee2 = _interopRequireDefault(_baseIteratee);\n\nvar _basePullAt = require('./_basePullAt');\n\nvar _basePullAt2 = _interopRequireDefault(_basePullAt);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Removes all elements from `array` that `predicate` returns truthy for\n * and returns an array of the removed elements. The predicate is invoked\n * with three arguments: (value, index, array).\n *\n * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n * to pull elements from an array by value.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Array|Function|Object|string} [predicate=_.identity]\n *  The function invoked per iteration.\n * @returns {Array} Returns the new array of removed elements.\n * @example\n *\n * var array = [1, 2, 3, 4];\n * var evens = _.remove(array, function(n) {\n *   return n % 2 == 0;\n * });\n *\n * console.log(array);\n * // => [1, 3]\n *\n * console.log(evens);\n * // => [2, 4]\n */\nfunction remove(array, predicate) {\n  var result = [];\n  if (!(array && array.length)) {\n    return result;\n  }\n  var index = -1,\n      indexes = [],\n      length = array.length;\n\n  predicate = (0, _baseIteratee2.default)(predicate, 3);\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result.push(value);\n      indexes.push(index);\n    }\n  }\n  (0, _basePullAt2.default)(array, indexes);\n  return result;\n}\n\nexports.default = remove;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/remove.js\n// module id = 240\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeReverse = arrayProto.reverse;\n\n/**\n * Reverses `array` so that the first element becomes the last, the second\n * element becomes the second to last, and so on.\n *\n * **Note:** This method mutates `array` and is based on\n * [`Array#reverse`](https://mdn.io/Array/reverse).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [1, 2, 3];\n *\n * _.reverse(array);\n * // => [3, 2, 1]\n *\n * console.log(array);\n * // => [3, 2, 1]\n */\nfunction reverse(array) {\n  return array ? nativeReverse.call(array) : array;\n}\n\nexports.default = reverse;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/reverse.js\n// module id = 241\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseSlice = require('./_baseSlice');\n\nvar _baseSlice2 = _interopRequireDefault(_baseSlice);\n\nvar _isIterateeCall = require('./_isIterateeCall');\n\nvar _isIterateeCall2 = _interopRequireDefault(_isIterateeCall);\n\nvar _toInteger = require('./toInteger');\n\nvar _toInteger2 = _interopRequireDefault(_toInteger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a slice of `array` from `start` up to, but not including, `end`.\n *\n * **Note:** This method is used instead of\n * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n * returned.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction slice(array, start, end) {\n  var length = array ? array.length : 0;\n  if (!length) {\n    return [];\n  }\n  if (end && typeof end != 'number' && (0, _isIterateeCall2.default)(array, start, end)) {\n    start = 0;\n    end = length;\n  } else {\n    start = start == null ? 0 : (0, _toInteger2.default)(start);\n    end = end === undefined ? length : (0, _toInteger2.default)(end);\n  }\n  return (0, _baseSlice2.default)(array, start, end);\n}\n\nexports.default = slice;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/slice.js\n// module id = 242\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseSortedIndex = require('./_baseSortedIndex');\n\nvar _baseSortedIndex2 = _interopRequireDefault(_baseSortedIndex);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Uses a binary search to determine the lowest index at which `value`\n * should be inserted into `array` in order to maintain its sort order.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n * @example\n *\n * _.sortedIndex([30, 50], 40);\n * // => 1\n *\n * _.sortedIndex([4, 5], 4);\n * // => 0\n */\nfunction sortedIndex(array, value) {\n  return (0, _baseSortedIndex2.default)(array, value);\n}\n\nexports.default = sortedIndex;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/sortedIndex.js\n// module id = 243\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseIteratee = require('./_baseIteratee');\n\nvar _baseIteratee2 = _interopRequireDefault(_baseIteratee);\n\nvar _baseSortedIndexBy = require('./_baseSortedIndexBy');\n\nvar _baseSortedIndexBy2 = _interopRequireDefault(_baseSortedIndexBy);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This method is like `_.sortedIndex` except that it accepts `iteratee`\n * which is invoked for `value` and each element of `array` to compute their\n * sort ranking. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @param {Array|Function|Object|string} [iteratee=_.identity]\n *  The iteratee invoked per element.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n * @example\n *\n * var dict = { 'thirty': 30, 'forty': 40, 'fifty': 50 };\n *\n * _.sortedIndexBy(['thirty', 'fifty'], 'forty', _.propertyOf(dict));\n * // => 1\n *\n * // The `_.property` iteratee shorthand.\n * _.sortedIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');\n * // => 0\n */\nfunction sortedIndexBy(array, value, iteratee) {\n  return (0, _baseSortedIndexBy2.default)(array, value, (0, _baseIteratee2.default)(iteratee));\n}\n\nexports.default = sortedIndexBy;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/sortedIndexBy.js\n// module id = 244\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseSortedIndex = require('./_baseSortedIndex');\n\nvar _baseSortedIndex2 = _interopRequireDefault(_baseSortedIndex);\n\nvar _eq = require('./eq');\n\nvar _eq2 = _interopRequireDefault(_eq);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This method is like `_.indexOf` except that it performs a binary\n * search on a sorted `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to search.\n * @param {*} value The value to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.sortedIndexOf([1, 1, 2, 2], 2);\n * // => 2\n */\nfunction sortedIndexOf(array, value) {\n  var length = array ? array.length : 0;\n  if (length) {\n    var index = (0, _baseSortedIndex2.default)(array, value);\n    if (index < length && (0, _eq2.default)(array[index], value)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexports.default = sortedIndexOf;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/sortedIndexOf.js\n// module id = 245\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseSortedIndex = require('./_baseSortedIndex');\n\nvar _baseSortedIndex2 = _interopRequireDefault(_baseSortedIndex);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This method is like `_.sortedIndex` except that it returns the highest\n * index at which `value` should be inserted into `array` in order to\n * maintain its sort order.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n * @example\n *\n * _.sortedLastIndex([4, 5], 4);\n * // => 1\n */\nfunction sortedLastIndex(array, value) {\n  return (0, _baseSortedIndex2.default)(array, value, true);\n}\n\nexports.default = sortedLastIndex;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/sortedLastIndex.js\n// module id = 246\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseIteratee = require('./_baseIteratee');\n\nvar _baseIteratee2 = _interopRequireDefault(_baseIteratee);\n\nvar _baseSortedIndexBy = require('./_baseSortedIndexBy');\n\nvar _baseSortedIndexBy2 = _interopRequireDefault(_baseSortedIndexBy);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n * which is invoked for `value` and each element of `array` to compute their\n * sort ranking. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @param {Array|Function|Object|string} [iteratee=_.identity]\n *  The iteratee invoked per element.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n * @example\n *\n * // The `_.property` iteratee shorthand.\n * _.sortedLastIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');\n * // => 1\n */\nfunction sortedLastIndexBy(array, value, iteratee) {\n  return (0, _baseSortedIndexBy2.default)(array, value, (0, _baseIteratee2.default)(iteratee), true);\n}\n\nexports.default = sortedLastIndexBy;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/sortedLastIndexBy.js\n// module id = 247\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseSortedIndex = require('./_baseSortedIndex');\n\nvar _baseSortedIndex2 = _interopRequireDefault(_baseSortedIndex);\n\nvar _eq = require('./eq');\n\nvar _eq2 = _interopRequireDefault(_eq);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This method is like `_.lastIndexOf` except that it performs a binary\n * search on a sorted `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to search.\n * @param {*} value The value to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.sortedLastIndexOf([1, 1, 2, 2], 2);\n * // => 3\n */\nfunction sortedLastIndexOf(array, value) {\n  var length = array ? array.length : 0;\n  if (length) {\n    var index = (0, _baseSortedIndex2.default)(array, value, true) - 1;\n    if ((0, _eq2.default)(array[index], value)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexports.default = sortedLastIndexOf;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/sortedLastIndexOf.js\n// module id = 248\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseSortedUniq = require('./_baseSortedUniq');\n\nvar _baseSortedUniq2 = _interopRequireDefault(_baseSortedUniq);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This method is like `_.uniq` except that it's designed and optimized\n * for sorted arrays.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.sortedUniq([1, 1, 2]);\n * // => [1, 2]\n */\nfunction sortedUniq(array) {\n  return array && array.length ? (0, _baseSortedUniq2.default)(array) : [];\n}\n\nexports.default = sortedUniq;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/sortedUniq.js\n// module id = 249\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseIteratee = require('./_baseIteratee');\n\nvar _baseIteratee2 = _interopRequireDefault(_baseIteratee);\n\nvar _baseSortedUniq = require('./_baseSortedUniq');\n\nvar _baseSortedUniq2 = _interopRequireDefault(_baseSortedUniq);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This method is like `_.uniqBy` except that it's designed and optimized\n * for sorted arrays.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n * // => [1.1, 2.3]\n */\nfunction sortedUniqBy(array, iteratee) {\n  return array && array.length ? (0, _baseSortedUniq2.default)(array, (0, _baseIteratee2.default)(iteratee)) : [];\n}\n\nexports.default = sortedUniqBy;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/sortedUniqBy.js\n// module id = 250\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _drop = require('./drop');\n\nvar _drop2 = _interopRequireDefault(_drop);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Gets all but the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.tail([1, 2, 3]);\n * // => [2, 3]\n */\nfunction tail(array) {\n  return (0, _drop2.default)(array, 1);\n}\n\nexports.default = tail;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/tail.js\n// module id = 251\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseSlice = require('./_baseSlice');\n\nvar _baseSlice2 = _interopRequireDefault(_baseSlice);\n\nvar _toInteger = require('./toInteger');\n\nvar _toInteger2 = _interopRequireDefault(_toInteger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a slice of `array` with `n` elements taken from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to take.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.take([1, 2, 3]);\n * // => [1]\n *\n * _.take([1, 2, 3], 2);\n * // => [1, 2]\n *\n * _.take([1, 2, 3], 5);\n * // => [1, 2, 3]\n *\n * _.take([1, 2, 3], 0);\n * // => []\n */\nfunction take(array, n, guard) {\n  if (!(array && array.length)) {\n    return [];\n  }\n  n = guard || n === undefined ? 1 : (0, _toInteger2.default)(n);\n  return (0, _baseSlice2.default)(array, 0, n < 0 ? 0 : n);\n}\n\nexports.default = take;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/take.js\n// module id = 252\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseSlice = require('./_baseSlice');\n\nvar _baseSlice2 = _interopRequireDefault(_baseSlice);\n\nvar _toInteger = require('./toInteger');\n\nvar _toInteger2 = _interopRequireDefault(_toInteger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a slice of `array` with `n` elements taken from the end.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to take.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.takeRight([1, 2, 3]);\n * // => [3]\n *\n * _.takeRight([1, 2, 3], 2);\n * // => [2, 3]\n *\n * _.takeRight([1, 2, 3], 5);\n * // => [1, 2, 3]\n *\n * _.takeRight([1, 2, 3], 0);\n * // => []\n */\nfunction takeRight(array, n, guard) {\n  var length = array ? array.length : 0;\n  if (!length) {\n    return [];\n  }\n  n = guard || n === undefined ? 1 : (0, _toInteger2.default)(n);\n  n = length - n;\n  return (0, _baseSlice2.default)(array, n < 0 ? 0 : n, length);\n}\n\nexports.default = takeRight;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/takeRight.js\n// module id = 253\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseIteratee = require('./_baseIteratee');\n\nvar _baseIteratee2 = _interopRequireDefault(_baseIteratee);\n\nvar _baseWhile = require('./_baseWhile');\n\nvar _baseWhile2 = _interopRequireDefault(_baseWhile);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a slice of `array` with elements taken from the end. Elements are\n * taken until `predicate` returns falsey. The predicate is invoked with\n * three arguments: (value, index, array).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {Array|Function|Object|string} [predicate=_.identity]\n *  The function invoked per iteration.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': true },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': false }\n * ];\n *\n * _.takeRightWhile(users, function(o) { return !o.active; });\n * // => objects for ['fred', 'pebbles']\n *\n * // The `_.matches` iteratee shorthand.\n * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n * // => objects for ['pebbles']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.takeRightWhile(users, ['active', false]);\n * // => objects for ['fred', 'pebbles']\n *\n * // The `_.property` iteratee shorthand.\n * _.takeRightWhile(users, 'active');\n * // => []\n */\nfunction takeRightWhile(array, predicate) {\n  return array && array.length ? (0, _baseWhile2.default)(array, (0, _baseIteratee2.default)(predicate, 3), false, true) : [];\n}\n\nexports.default = takeRightWhile;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/takeRightWhile.js\n// module id = 254\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseIteratee = require('./_baseIteratee');\n\nvar _baseIteratee2 = _interopRequireDefault(_baseIteratee);\n\nvar _baseWhile = require('./_baseWhile');\n\nvar _baseWhile2 = _interopRequireDefault(_baseWhile);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a slice of `array` with elements taken from the beginning. Elements\n * are taken until `predicate` returns falsey. The predicate is invoked with\n * three arguments: (value, index, array).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {Array|Function|Object|string} [predicate=_.identity]\n *  The function invoked per iteration.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false},\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.takeWhile(users, function(o) { return !o.active; });\n * // => objects for ['barney', 'fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.takeWhile(users, { 'user': 'barney', 'active': false });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.takeWhile(users, ['active', false]);\n * // => objects for ['barney', 'fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.takeWhile(users, 'active');\n * // => []\n */\nfunction takeWhile(array, predicate) {\n  return array && array.length ? (0, _baseWhile2.default)(array, (0, _baseIteratee2.default)(predicate, 3)) : [];\n}\n\nexports.default = takeWhile;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/takeWhile.js\n// module id = 255\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isFunction = require('./isFunction');\n\nvar _isFunction2 = _interopRequireDefault(_isFunction);\n\nvar _isObject = require('./isObject');\n\nvar _isObject2 = _interopRequireDefault(_isObject);\n\nvar _isSymbol = require('./isSymbol');\n\nvar _isSymbol2 = _interopRequireDefault(_isSymbol);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if ((0, _isSymbol2.default)(value)) {\n    return NAN;\n  }\n  if ((0, _isObject2.default)(value)) {\n    var other = (0, _isFunction2.default)(value.valueOf) ? value.valueOf() : value;\n    value = (0, _isObject2.default)(other) ? other + '' : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n}\n\nexports.default = toNumber;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/toNumber.js\n// module id = 256\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseFlatten = require('./_baseFlatten');\n\nvar _baseFlatten2 = _interopRequireDefault(_baseFlatten);\n\nvar _baseUniq = require('./_baseUniq');\n\nvar _baseUniq2 = _interopRequireDefault(_baseUniq);\n\nvar _isArrayLikeObject = require('./isArrayLikeObject');\n\nvar _isArrayLikeObject2 = _interopRequireDefault(_isArrayLikeObject);\n\nvar _rest = require('./rest');\n\nvar _rest2 = _interopRequireDefault(_rest);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates an array of unique values, in order, from all given arrays using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.union([2, 1], [4, 2], [1, 2]);\n * // => [2, 1, 4]\n */\nvar union = (0, _rest2.default)(function (arrays) {\n  return (0, _baseUniq2.default)((0, _baseFlatten2.default)(arrays, 1, _isArrayLikeObject2.default, true));\n});\n\nexports.default = union;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/union.js\n// module id = 257\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseFlatten = require('./_baseFlatten');\n\nvar _baseFlatten2 = _interopRequireDefault(_baseFlatten);\n\nvar _baseIteratee = require('./_baseIteratee');\n\nvar _baseIteratee2 = _interopRequireDefault(_baseIteratee);\n\nvar _baseUniq = require('./_baseUniq');\n\nvar _baseUniq2 = _interopRequireDefault(_baseUniq);\n\nvar _isArrayLikeObject = require('./isArrayLikeObject');\n\nvar _isArrayLikeObject2 = _interopRequireDefault(_isArrayLikeObject);\n\nvar _last = require('./last');\n\nvar _last2 = _interopRequireDefault(_last);\n\nvar _rest = require('./rest');\n\nvar _rest2 = _interopRequireDefault(_rest);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This method is like `_.union` except that it accepts `iteratee` which is\n * invoked for each element of each `arrays` to generate the criterion by\n * which uniqueness is computed. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Array|Function|Object|string} [iteratee=_.identity]\n *  The iteratee invoked per element.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.unionBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n * // => [2.1, 1.2, 4.3]\n *\n * // The `_.property` iteratee shorthand.\n * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nvar unionBy = (0, _rest2.default)(function (arrays) {\n  var iteratee = (0, _last2.default)(arrays);\n  if ((0, _isArrayLikeObject2.default)(iteratee)) {\n    iteratee = undefined;\n  }\n  return (0, _baseUniq2.default)((0, _baseFlatten2.default)(arrays, 1, _isArrayLikeObject2.default, true), (0, _baseIteratee2.default)(iteratee));\n});\n\nexports.default = unionBy;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/unionBy.js\n// module id = 258\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseFlatten = require('./_baseFlatten');\n\nvar _baseFlatten2 = _interopRequireDefault(_baseFlatten);\n\nvar _baseUniq = require('./_baseUniq');\n\nvar _baseUniq2 = _interopRequireDefault(_baseUniq);\n\nvar _isArrayLikeObject = require('./isArrayLikeObject');\n\nvar _isArrayLikeObject2 = _interopRequireDefault(_isArrayLikeObject);\n\nvar _last = require('./last');\n\nvar _last2 = _interopRequireDefault(_last);\n\nvar _rest = require('./rest');\n\nvar _rest2 = _interopRequireDefault(_rest);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This method is like `_.union` except that it accepts `comparator` which\n * is invoked to compare elements of `arrays`. The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.unionWith(objects, others, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n */\nvar unionWith = (0, _rest2.default)(function (arrays) {\n  var comparator = (0, _last2.default)(arrays);\n  if ((0, _isArrayLikeObject2.default)(comparator)) {\n    comparator = undefined;\n  }\n  return (0, _baseUniq2.default)((0, _baseFlatten2.default)(arrays, 1, _isArrayLikeObject2.default, true), undefined, comparator);\n});\n\nexports.default = unionWith;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/unionWith.js\n// module id = 259\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseUniq = require('./_baseUniq');\n\nvar _baseUniq2 = _interopRequireDefault(_baseUniq);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each\n * element is kept.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return array && array.length ? (0, _baseUniq2.default)(array) : [];\n}\n\nexports.default = uniq;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/uniq.js\n// module id = 260\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseIteratee = require('./_baseIteratee');\n\nvar _baseIteratee2 = _interopRequireDefault(_baseIteratee);\n\nvar _baseUniq = require('./_baseUniq');\n\nvar _baseUniq2 = _interopRequireDefault(_baseUniq);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Array|Function|Object|string} [iteratee=_.identity]\n *  The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return array && array.length ? (0, _baseUniq2.default)(array, (0, _baseIteratee2.default)(iteratee)) : [];\n}\n\nexports.default = uniqBy;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/uniqBy.js\n// module id = 261\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseUniq = require('./_baseUniq');\n\nvar _baseUniq2 = _interopRequireDefault(_baseUniq);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This method is like `_.uniq` except that it accepts `comparator` which\n * is invoked to compare elements of `array`. The comparator is invoked with\n * two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 },  { 'x': 1, 'y': 2 }];\n *\n * _.uniqWith(objects, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n */\nfunction uniqWith(array, comparator) {\n  return array && array.length ? (0, _baseUniq2.default)(array, undefined, comparator) : [];\n}\n\nexports.default = uniqWith;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/uniqWith.js\n// module id = 262\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseDifference = require('./_baseDifference');\n\nvar _baseDifference2 = _interopRequireDefault(_baseDifference);\n\nvar _isArrayLikeObject = require('./isArrayLikeObject');\n\nvar _isArrayLikeObject2 = _interopRequireDefault(_isArrayLikeObject);\n\nvar _rest = require('./rest');\n\nvar _rest2 = _interopRequireDefault(_rest);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates an array excluding all given values using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...*} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.difference, _.xor\n * @example\n *\n * _.without([1, 2, 1, 3], 1, 2);\n * // => [3]\n */\nvar without = (0, _rest2.default)(function (array, values) {\n  return (0, _isArrayLikeObject2.default)(array) ? (0, _baseDifference2.default)(array, values) : [];\n});\n\nexports.default = without;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/without.js\n// module id = 263\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _arrayFilter = require('./_arrayFilter');\n\nvar _arrayFilter2 = _interopRequireDefault(_arrayFilter);\n\nvar _baseXor = require('./_baseXor');\n\nvar _baseXor2 = _interopRequireDefault(_baseXor);\n\nvar _isArrayLikeObject = require('./isArrayLikeObject');\n\nvar _isArrayLikeObject2 = _interopRequireDefault(_isArrayLikeObject);\n\nvar _rest = require('./rest');\n\nvar _rest2 = _interopRequireDefault(_rest);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates an array of unique values that is the\n * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n * of the given arrays. The order of result values is determined by the order\n * they occur in the arrays.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.difference, _.without\n * @example\n *\n * _.xor([2, 1], [4, 2]);\n * // => [1, 4]\n */\nvar xor = (0, _rest2.default)(function (arrays) {\n  return (0, _baseXor2.default)((0, _arrayFilter2.default)(arrays, _isArrayLikeObject2.default));\n});\n\nexports.default = xor;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/xor.js\n// module id = 264\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _arrayFilter = require('./_arrayFilter');\n\nvar _arrayFilter2 = _interopRequireDefault(_arrayFilter);\n\nvar _baseIteratee = require('./_baseIteratee');\n\nvar _baseIteratee2 = _interopRequireDefault(_baseIteratee);\n\nvar _baseXor = require('./_baseXor');\n\nvar _baseXor2 = _interopRequireDefault(_baseXor);\n\nvar _isArrayLikeObject = require('./isArrayLikeObject');\n\nvar _isArrayLikeObject2 = _interopRequireDefault(_isArrayLikeObject);\n\nvar _last = require('./last');\n\nvar _last2 = _interopRequireDefault(_last);\n\nvar _rest = require('./rest');\n\nvar _rest2 = _interopRequireDefault(_rest);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This method is like `_.xor` except that it accepts `iteratee` which is\n * invoked for each element of each `arrays` to generate the criterion by\n * which by which they're compared. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Array|Function|Object|string} [iteratee=_.identity]\n *  The iteratee invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.xorBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n * // => [1.2, 4.3]\n *\n * // The `_.property` iteratee shorthand.\n * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 2 }]\n */\nvar xorBy = (0, _rest2.default)(function (arrays) {\n  var iteratee = (0, _last2.default)(arrays);\n  if ((0, _isArrayLikeObject2.default)(iteratee)) {\n    iteratee = undefined;\n  }\n  return (0, _baseXor2.default)((0, _arrayFilter2.default)(arrays, _isArrayLikeObject2.default), (0, _baseIteratee2.default)(iteratee));\n});\n\nexports.default = xorBy;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/xorBy.js\n// module id = 265\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _arrayFilter = require('./_arrayFilter');\n\nvar _arrayFilter2 = _interopRequireDefault(_arrayFilter);\n\nvar _baseXor = require('./_baseXor');\n\nvar _baseXor2 = _interopRequireDefault(_baseXor);\n\nvar _isArrayLikeObject = require('./isArrayLikeObject');\n\nvar _isArrayLikeObject2 = _interopRequireDefault(_isArrayLikeObject);\n\nvar _last = require('./last');\n\nvar _last2 = _interopRequireDefault(_last);\n\nvar _rest = require('./rest');\n\nvar _rest2 = _interopRequireDefault(_rest);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This method is like `_.xor` except that it accepts `comparator` which is\n * invoked to compare elements of `arrays`. The comparator is invoked with\n * two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.xorWith(objects, others, _.isEqual);\n * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n */\nvar xorWith = (0, _rest2.default)(function (arrays) {\n  var comparator = (0, _last2.default)(arrays);\n  if ((0, _isArrayLikeObject2.default)(comparator)) {\n    comparator = undefined;\n  }\n  return (0, _baseXor2.default)((0, _arrayFilter2.default)(arrays, _isArrayLikeObject2.default), undefined, comparator);\n});\n\nexports.default = xorWith;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/xorWith.js\n// module id = 266\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _rest = require('./rest');\n\nvar _rest2 = _interopRequireDefault(_rest);\n\nvar _unzip = require('./unzip');\n\nvar _unzip2 = _interopRequireDefault(_unzip);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates an array of grouped elements, the first of which contains the\n * first elements of the given arrays, the second of which contains the\n * second elements of the given arrays, and so on.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to process.\n * @returns {Array} Returns the new array of grouped elements.\n * @example\n *\n * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n * // => [['fred', 30, true], ['barney', 40, false]]\n */\nvar zip = (0, _rest2.default)(_unzip2.default);\n\nexports.default = zip;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/zip.js\n// module id = 267\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _assignValue = require('./_assignValue');\n\nvar _assignValue2 = _interopRequireDefault(_assignValue);\n\nvar _baseZipObject = require('./_baseZipObject');\n\nvar _baseZipObject2 = _interopRequireDefault(_baseZipObject);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This method is like `_.fromPairs` except that it accepts two arrays,\n * one of property identifiers and one of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 0.4.0\n * @category Array\n * @param {Array} [props=[]] The property identifiers.\n * @param {Array} [values=[]] The property values.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.zipObject(['a', 'b'], [1, 2]);\n * // => { 'a': 1, 'b': 2 }\n */\nfunction zipObject(props, values) {\n  return (0, _baseZipObject2.default)(props || [], values || [], _assignValue2.default);\n}\n\nexports.default = zipObject;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/zipObject.js\n// module id = 268\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseSet = require('./_baseSet');\n\nvar _baseSet2 = _interopRequireDefault(_baseSet);\n\nvar _baseZipObject = require('./_baseZipObject');\n\nvar _baseZipObject2 = _interopRequireDefault(_baseZipObject);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This method is like `_.zipObject` except that it supports property paths.\n *\n * @static\n * @memberOf _\n * @since 4.1.0\n * @category Array\n * @param {Array} [props=[]] The property identifiers.\n * @param {Array} [values=[]] The property values.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n */\nfunction zipObjectDeep(props, values) {\n  return (0, _baseZipObject2.default)(props || [], values || [], _baseSet2.default);\n}\n\nexports.default = zipObjectDeep;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/zipObjectDeep.js\n// module id = 269\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _rest = require('./rest');\n\nvar _rest2 = _interopRequireDefault(_rest);\n\nvar _unzipWith = require('./unzipWith');\n\nvar _unzipWith2 = _interopRequireDefault(_unzipWith);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This method is like `_.zip` except that it accepts `iteratee` to specify\n * how grouped values should be combined. The iteratee is invoked with the\n * elements of each group: (...group).\n *\n * @static\n * @memberOf _\n * @since 3.8.0\n * @category Array\n * @param {...Array} [arrays] The arrays to process.\n * @param {Function} [iteratee=_.identity] The function to combine grouped values.\n * @returns {Array} Returns the new array of grouped elements.\n * @example\n *\n * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n *   return a + b + c;\n * });\n * // => [111, 222]\n */\nvar zipWith = (0, _rest2.default)(function (arrays) {\n  var length = arrays.length,\n      iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n  iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n  return (0, _unzipWith2.default)(arrays, iteratee);\n});\n\nexports.default = zipWith;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/zipWith.js\n// module id = 270\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = objectToMap;\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/objecttomap\n */\n\n/**\n * Transforms object to map.\n *\n *\t\tconst map = objectToMap( { 'foo': 1, 'bar': 2 } );\n *\t\tmap.get( 'foo' ); // 1\n *\n * @param {Object} obj Object to transform.\n * @returns {Map} Map created from object.\n */\nfunction objectToMap(obj) {\n  var map = new Map();\n\n  for (var key in obj) {\n    map.set(key, obj[key]);\n  }\n\n  return map;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/objecttomap.js\n// module id = 271\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isCombiningMark = isCombiningMark;\nexports.isHighSurrogateHalf = isHighSurrogateHalf;\nexports.isLowSurrogateHalf = isLowSurrogateHalf;\nexports.isInsideSurrogatePair = isInsideSurrogatePair;\nexports.isInsideCombinedSymbol = isInsideCombinedSymbol;\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * Set of utils to handle unicode characters.\n *\n * @module utils/unicode\n */\n\n/**\n * Checks whether given `character` is a combining mark.\n *\n * @param {String} character Character to check.\n * @returns {Boolean}\n */\nfunction isCombiningMark(character) {\n  return !!character && character.length == 1 && /[\\u0300-\\u036f\\u1ab0-\\u1aff\\u1dc0-\\u1dff\\u20d0-\\u20ff\\ufe20-\\ufe2f]/.test(character);\n}\n\n/**\n * Checks whether given `character` is a high half of surrogate pair.\n *\n * Using UTF-16 terminology, a surrogate pair denotes UTF-16 character using two UTF-8 characters. The surrogate pair\n * consist of high surrogate pair character followed by low surrogate pair character.\n *\n * @param {String} character Character to check.\n * @returns {Boolean}\n */\nfunction isHighSurrogateHalf(character) {\n  return !!character && character.length == 1 && /[\\ud800-\\udbff]/.test(character);\n}\n\n/**\n * Checks whether given `character` is a low half of surrogate pair.\n *\n * Using UTF-16 terminology, a surrogate pair denotes UTF-16 character using two UTF-8 characters. The surrogate pair\n * consist of high surrogate pair character followed by low surrogate pair character.\n *\n * @param {String} character Character to check.\n * @returns {Boolean}\n */\nfunction isLowSurrogateHalf(character) {\n  return !!character && character.length == 1 && /[\\udc00-\\udfff]/.test(character);\n}\n\n/**\n * Checks whether given offset in a string is inside a surrogate pair (between two surrogate halves).\n *\n * @param {String} string String to check.\n * @param {Number} offset Offset to check.\n * @returns {Boolean}\n */\nfunction isInsideSurrogatePair(string, offset) {\n  return isHighSurrogateHalf(string.charAt(offset - 1)) && isLowSurrogateHalf(string.charAt(offset));\n}\n\n/**\n * Checks whether given offset in a string is between base character and combining mark or between two combining marks.\n *\n * @param {String} string String to check.\n * @param {Number} offset Offset to check.\n * @returns {Boolean}\n */\nfunction isInsideCombinedSymbol(string, offset) {\n  return isCombiningMark(string.charAt(offset));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/unicode.js\n// module id = 272\n// module chunks = 0","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    if (typeof global.process === \"object\" && global.process.domain) {\n      invoke = global.process.domain.bind(invoke);\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // Among the various tricks for obtaining a reference to the global\n  // object, this seems to be the most reliable technique that does not\n  // use indirect eval (which violates Content Security Policy).\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this\n);\n\n\n\n// WEBPACK FOOTER //\n// /workspace/ckeditor5/~/regenerator-runtime/runtime.js","/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\nimport ClassicEditorBase from '@ckeditor/ckeditor5-editor-classic/src/classiceditor';\nimport EssentialsPlugin from '@ckeditor/ckeditor5-presets/src/essentials';\nimport AutoformatPlugin from '@ckeditor/ckeditor5-autoformat/src/autoformat';\nimport BoldPlugin from '@ckeditor/ckeditor5-basic-styles/src/bold';\nimport ItalicPlugin from '@ckeditor/ckeditor5-basic-styles/src/italic';\nimport BlockquotePlugin from '@ckeditor/ckeditor5-block-quote/src/blockquote';\nimport HeadingPlugin from '@ckeditor/ckeditor5-heading/src/heading';\nimport ImagePlugin from '@ckeditor/ckeditor5-image/src/image';\nimport ImagecaptionPlugin from '@ckeditor/ckeditor5-image/src/imagecaption';\nimport ImagestylePlugin from '@ckeditor/ckeditor5-image/src/imagestyle';\nimport ImagetoolbarPlugin from '@ckeditor/ckeditor5-image/src/imagetoolbar';\nimport LinkPlugin from '@ckeditor/ckeditor5-link/src/link';\nimport ListPlugin from '@ckeditor/ckeditor5-list/src/list';\nimport ParagraphPlugin from '@ckeditor/ckeditor5-paragraph/src/paragraph';\n\nexport class ClassicEditor extends ClassicEditorBase {}\n\nClassicEditor.build = {\n\tplugins: [\n\t\tEssentialsPlugin,\n\t\tAutoformatPlugin,\n\t\tBoldPlugin,\n\t\tItalicPlugin,\n\t\tBlockquotePlugin,\n\t\tHeadingPlugin,\n\t\tImagePlugin,\n\t\tImagecaptionPlugin,\n\t\tImagestylePlugin,\n\t\tImagetoolbarPlugin,\n\t\tLinkPlugin,\n\t\tListPlugin,\n\t\tParagraphPlugin\n\t],\n\tconfig: {\n\t\ttoolbar: [\n\t\t\t'headings',\n\t\t\t'bold',\n\t\t\t'italic',\n\t\t\t'link',\n\t\t\t'unlink',\n\t\t\t'bulletedList',\n\t\t\t'numberedList',\n\t\t\t'blockQuote',\n\t\t\t'undo',\n\t\t\t'redo'\n\t\t],\n\t\timage: {\n\t\t\ttoolbar: [\n\t\t\t\t'imageStyleFull',\n\t\t\t\t'imageStyleSide',\n\t\t\t\t'|',\n\t\t\t\t'imageTextAlternative'\n\t\t\t]\n\t\t}\n\t}\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ckeditor.js","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n\n// WEBPACK FOOTER //\n// /workspace/ckeditor5/~/style-loader/fixUrls.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _blockautoformatengine = require('./blockautoformatengine');\n\nvar _blockautoformatengine2 = _interopRequireDefault(_blockautoformatengine);\n\nvar _inlineautoformatengine = require('./inlineautoformatengine');\n\nvar _inlineautoformatengine2 = _interopRequireDefault(_inlineautoformatengine);\n\nvar _plugin = require('@ckeditor/ckeditor5-core/src/plugin');\n\nvar _plugin2 = _interopRequireDefault(_plugin);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module autoformat/autoformat\n */\n\n/**\n * Includes a set of predefined autoformatting actions.\n *\n * ## Bulleted list\n *\n * You can create a bulleted list by starting a line with:\n *\n * * `* `\n * * `- `\n *\n * ## Numbered list\n *\n * You can create a numbered list by starting a line with:\n *\n * * `1. `\n * * `1) `\n *\n * ## Headings\n *\n * You can create a heading by starting a line with:\n *\n * * `# ` &ndash; will create Heading 1,\n * * `## ` &ndash; will create Heading 2,\n * * `### ` &ndash; will create Heading 3.\n *\n * ## Bold and italic\n *\n * You can apply bold or italic to a text by typing Markdown formatting:\n *\n * * `**foo bar**` or `__foo bar__` &ndash; will bold the text.\n * * `*foo bar*` or `_foo bar_` &ndash; will italicize the text.\n *\n * NOTE: Remember to add proper features to the editor configuration. Autoformatting will be enabled only for the\n * commands that are included in the actual configuration. For example: `bold` autoformatting will not work if there is no\n * `bold` command registered in the editor.\n *\n * @extends module:core/plugin~Plugin\n */\nvar Autoformat = function (_Plugin) {\n\t_inherits(Autoformat, _Plugin);\n\n\tfunction Autoformat() {\n\t\t_classCallCheck(this, Autoformat);\n\n\t\treturn _possibleConstructorReturn(this, (Autoformat.__proto__ || Object.getPrototypeOf(Autoformat)).apply(this, arguments));\n\t}\n\n\t_createClass(Autoformat, [{\n\t\tkey: 'afterInit',\n\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tvalue: function afterInit() {\n\t\t\tthis._addListAutoformats();\n\t\t\tthis._addBasicStylesAutoformats();\n\t\t\tthis._addHeadingAutoformats();\n\t\t\tthis._addBlockQuoteAutoformats();\n\t\t}\n\n\t\t/**\n   * Adds autoformatting related to the {@link module:list/list~List}.\n   *\n   * When typed:\n   * - `* ` or `- ` &ndash; A paragraph will be changed to a bulleted list.\n   * - `1. ` or `1) ` &ndash; A paragraph will be changed to a numbered list (\"1\" can be any digit or a list of digits).\n   *\n   * @private\n   */\n\n\t}, {\n\t\tkey: '_addListAutoformats',\n\t\tvalue: function _addListAutoformats() {\n\t\t\tvar commands = this.editor.commands;\n\n\t\t\tif (commands.get('bulletedList')) {\n\t\t\t\t// eslint-disable-next-line no-new\n\t\t\t\tnew _blockautoformatengine2.default(this.editor, /^[*-]\\s$/, 'bulletedList');\n\t\t\t}\n\n\t\t\tif (commands.get('numberedList')) {\n\t\t\t\t// eslint-disable-next-line no-new\n\t\t\t\tnew _blockautoformatengine2.default(this.editor, /^\\d+[.|)]?\\s$/, 'numberedList');\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Adds autoformatting related to the {@link module:basic-styles/bold~Bold} and\n   * {@link module:basic-styles/italic~Italic}.\n   *\n   * When typed:\n   * - `**foobar**` &ndash; `**` characters are removed and `foobar` is set to bold.\n   * - `__foobar__` &ndash; `__` characters are removed and `foobar` is set to bold.\n   * - `*foobar*` &ndash; `*` characters are removed and `foobar` is set to italic.\n   * - `_foobar_` &ndash; `_` characters are removed and `foobar` is set to italic.\n   *\n   * @private\n   */\n\n\t}, {\n\t\tkey: '_addBasicStylesAutoformats',\n\t\tvalue: function _addBasicStylesAutoformats() {\n\t\t\tvar commands = this.editor.commands;\n\n\t\t\tif (commands.get('bold')) {\n\t\t\t\t/* eslint-disable no-new */\n\t\t\t\tnew _inlineautoformatengine2.default(this.editor, /(\\*\\*)([^*]+)(\\*\\*)$/g, 'bold');\n\t\t\t\tnew _inlineautoformatengine2.default(this.editor, /(__)([^_]+)(__)$/g, 'bold');\n\t\t\t\t/* eslint-enable no-new */\n\t\t\t}\n\n\t\t\tif (commands.get('italic')) {\n\t\t\t\t// The italic autoformatter cannot be triggered by the bold markers, so we need to check the\n\t\t\t\t// text before the pattern (e.g. `(?:^|[^\\*])`).\n\n\t\t\t\t/* eslint-disable no-new */\n\t\t\t\tnew _inlineautoformatengine2.default(this.editor, /(?:^|[^*])(\\*)([^*_]+)(\\*)$/g, 'italic');\n\t\t\t\tnew _inlineautoformatengine2.default(this.editor, /(?:^|[^_])(_)([^_]+)(_)$/g, 'italic');\n\t\t\t\t/* eslint-enable no-new */\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Adds autoformatting related to {@link module:heading/heading~Heading}.\n   *\n   * It is using a number at the end of the command name to associate it with the proper trigger:\n   *\n   * * `heading1` will be executed when typing `#`,\n   * * `heading2` will be executed when typing `##`,\n   * * ... up to `heading6` and `######`.\n   *\n   * @private\n   */\n\n\t}, {\n\t\tkey: '_addHeadingAutoformats',\n\t\tvalue: function _addHeadingAutoformats() {\n\t\t\tvar _this2 = this;\n\n\t\t\tArray.from(this.editor.commands.names()).filter(function (name) {\n\t\t\t\treturn name.match(/^heading[1-6]$/);\n\t\t\t}).forEach(function (commandName) {\n\t\t\t\tvar level = commandName[7];\n\t\t\t\tvar pattern = new RegExp('^(#{' + level + '})\\\\s$');\n\n\t\t\t\t// eslint-disable-next-line no-new\n\t\t\t\tnew _blockautoformatengine2.default(_this2.editor, pattern, function (context) {\n\t\t\t\t\tvar batch = context.batch;\n\n\n\t\t\t\t\t_this2.editor.execute(commandName, { batch: batch });\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * Adds autoformatting related to {@link module:block-quote/blockquote~BlockQuote}.\n   *\n   * When typed:\n   * * `> ` &ndash; A paragraph will be changed to a block quote.\n   *\n   * @private\n   */\n\n\t}, {\n\t\tkey: '_addBlockQuoteAutoformats',\n\t\tvalue: function _addBlockQuoteAutoformats() {\n\t\t\tif (this.editor.commands.get('blockQuote')) {\n\t\t\t\t// eslint-disable-next-line no-new\n\t\t\t\tnew _blockautoformatengine2.default(this.editor, /^>\\s$/, 'blockQuote');\n\t\t\t}\n\t\t}\n\t}], [{\n\t\tkey: 'pluginName',\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tget: function get() {\n\t\t\treturn 'Autoformat';\n\t\t}\n\t}]);\n\n\treturn Autoformat;\n}(_plugin2.default);\n\nexports.default = Autoformat;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-autoformat/src/autoformat.js\n// module id = 276\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _range = require('@ckeditor/ckeditor5-engine/src/model/range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _textproxy = require('@ckeditor/ckeditor5-engine/src/model/textproxy');\n\nvar _textproxy2 = _interopRequireDefault(_textproxy);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n                                                                                                                                                           * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                           * For licensing, see LICENSE.md.\n                                                                                                                                                           */\n\n/**\n * @module autoformat/blockautoformatengine\n */\n\n/**\n * The block autoformatting engine. It allows to format various block patterns. For example,\n * it can be configured to turn a paragraph starting with \"* \" into a list item.\n *\n * The autoformatting operation is integrated with the undo manager,\n * so the autoformatting step can be undone if the user's intention was not to format the text.\n *\n * See the constructors documentation to learn how to create custom inline autoformatters. You can also use\n * the {@link module:autoformat/autoformat~Autoformat} feature which enables a set of default autoformatters\n * (lists, headings, bold and italic).\n */\nvar BlockAutoformatEngine =\n/**\n * Creates a listener triggered on `change` event in the document.\n * Calls the callback when inserted text matches the regular expression or the command name\n * if provided instead of the callback.\n *\n * Examples of usage:\n *\n * To convert a paragraph to heading 1 when `- ` is typed, using just the commmand name:\n *\n *\t\tnew BlockAutoformatEngine( editor, /^\\- $/, 'heading1' );\n *\n * To convert a paragraph to heading 1 when `- ` is typed, using just the callback:\n *\n *\t\tnew BlockAutoformatEngine( editor, /^\\- $/, ( context ) => {\n *\t\t\tconst { batch, match } = context;\n *\t\t\tconst headingLevel = match[ 1 ].length;\n *\n *\t\t\teditor.execute( 'heading', {\n *\t\t\t\tbatch,\n *\t\t\t\tformatId: `heading${ headingLevel }`\n *\t\t\t} );\n * \t\t} );\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n * @param {RegExp} pattern The regular expression to execute on just inserted text.\n * @param {Function|String} callbackOrCommand The callback to execute or the command to run when the text is matched.\n * In case of providing the callback, it receives the following parameters:\n * * {module:engine/model/batch~Batch} batch Newly created batch for autoformat changes.\n * * {Object} match RegExp.exec() result of matching the pattern to inserted text.\n */\nfunction BlockAutoformatEngine(editor, pattern, callbackOrCommand) {\n\t_classCallCheck(this, BlockAutoformatEngine);\n\n\tvar callback = void 0;\n\n\tif (typeof callbackOrCommand == 'function') {\n\t\tcallback = callbackOrCommand;\n\t} else {\n\t\t// We assume that the actual command name was provided.\n\t\tvar command = callbackOrCommand;\n\n\t\tcallback = function callback(context) {\n\t\t\tvar batch = context.batch;\n\n\t\t\t// Create new batch for removal and command execution.\n\n\t\t\teditor.execute(command, { batch: batch });\n\t\t};\n\t}\n\n\teditor.document.on('change', function (event, type, changes, batch) {\n\t\tif (batch.type == 'transparent') {\n\t\t\treturn;\n\t\t}\n\n\t\tif (type != 'insert') {\n\t\t\treturn;\n\t\t}\n\n\t\t// Take the first element. Typing shouldn't add more than one element at once.\n\t\t// And if it is not typing (e.g. paste), Autoformat should not be fired.\n\t\tvar value = changes.range.getItems().next().value;\n\n\t\tif (!(value instanceof _textproxy2.default)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar textNode = value.textNode;\n\t\tvar text = textNode.data;\n\n\t\t// Run matching only on non-empty paragraphs.\n\t\tif (textNode.parent.name !== 'paragraph' || !text) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar match = pattern.exec(text);\n\n\t\tif (!match) {\n\t\t\treturn;\n\t\t}\n\n\t\teditor.document.enqueueChanges(function () {\n\t\t\t// Create new batch to separate typing batch from the Autoformat changes.\n\t\t\tvar fixBatch = editor.document.batch();\n\n\t\t\t// Matched range.\n\t\t\tvar range = _range2.default.createFromParentsAndOffsets(textNode.parent, 0, textNode.parent, match[0].length);\n\n\t\t\t// Remove matched text.\n\t\t\tfixBatch.remove(range);\n\n\t\t\tcallback({ fixBatch: fixBatch, match: match });\n\t\t});\n\t});\n};\n\nexports.default = BlockAutoformatEngine;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-autoformat/src/blockautoformatengine.js\n// module id = 277\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _liverange = require('@ckeditor/ckeditor5-engine/src/model/liverange');\n\nvar _liverange2 = _interopRequireDefault(_liverange);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n                                                                                                                                                           * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                           * For licensing, see LICENSE.md.\n                                                                                                                                                           */\n\n/**\n * @module autoformat/inlineautoformatengine\n */\n\n/**\n * The inline autoformatting engine. It allows to format various inline patterns. For example,\n * it can be configured to make \"foo\" bold when typed `**foo**` (the `**` markers will be removed).\n *\n * The autoformatting operation is integrated with the undo manager,\n * so the autoformatting step can be undone if the user's intention was not to format the text.\n *\n * See the constructors documentation to learn how to create custom inline autoformatters. You can also use\n * the {@link module:autoformat/autoformat~Autoformat} feature which enables a set of default autoformatters\n * (lists, headings, bold and italic).\n */\nvar InlineAutoformatEngine =\n/**\n * Enables autoformatting mechanism for a given {@link module:core/editor/editor~Editor}.\n *\n * It formats the matched text by applying the given model attribute or by running the provided formatting callback.\n * On every change applied to the model the autoformatting engine checks the text on the left of the selection\n * and executes the provided action if the text matches given criteria (regular expression or callback).\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n * @param {Function|RegExp} testRegexpOrCallback The regular expression or callback to execute on text.\n * Provided regular expression *must* have three capture groups. The first and the third capture group\n * should match opening and closing delimiters. The second capture group should match the text to format.\n *\n *\t\t// Matches the `**bold text**` pattern.\n *\t\t// There are three capturing groups:\n *\t\t// - The first to match the starting `**` delimiter.\n *\t\t// - The second to match the text to format.\n *\t\t// - The third to match the ending `**` delimiter.\n *\t\tnew InlineAutoformatEngine( editor, /(\\*\\*)([^\\*]+?)(\\*\\*)$/g, 'bold' );\n *\n * When a function is provided instead of the regular expression, it will be executed with the text to match as a parameter.\n * The function should return proper \"ranges\" to delete and format.\n *\n *\t\t{\n *\t\t\tremove: [\n *\t\t\t\t[ 0, 1 ],\t// Remove the first letter from the given text.\n *\t\t\t\t[ 5, 6 ]\t// Remove the 6th letter from the given text.\n *\t\t\t],\n *\t\t\tformat: [\n *\t\t\t\t[ 1, 5 ]\t// Format all letters from 2nd to 5th.\n *\t\t\t]\n *\t\t}\n *\n * @param {Function|String} attributeOrCallback The name of attribute to apply on matching text or a callback for manual\n * formatting.\n *\n *\t\t// Use attribute name:\n *\t\tnew InlineAutoformatEngine( editor, /(\\*\\*)([^\\*]+?)(\\*\\*)$/g, 'bold' );\n *\n *\t\t// Use formatting callback:\n *\t\tnew InlineAutoformatEngine( editor, /(\\*\\*)([^\\*]+?)(\\*\\*)$/g, ( batch, validRanges ) => {\n *\t\t\tfor ( let range of validRanges ) {\n *\t\t\t\tbatch.setAttribute( range, command, true );\n *\t\t\t}\n *\t\t} );\n */\nfunction InlineAutoformatEngine(editor, testRegexpOrCallback, attributeOrCallback) {\n\t_classCallCheck(this, InlineAutoformatEngine);\n\n\tvar regExp = void 0;\n\tvar command = void 0;\n\tvar testCallback = void 0;\n\tvar formatCallback = void 0;\n\n\tif (testRegexpOrCallback instanceof RegExp) {\n\t\tregExp = testRegexpOrCallback;\n\t} else {\n\t\ttestCallback = testRegexpOrCallback;\n\t}\n\n\tif (typeof attributeOrCallback == 'string') {\n\t\tcommand = attributeOrCallback;\n\t} else {\n\t\tformatCallback = attributeOrCallback;\n\t}\n\n\t// A test callback run on changed text.\n\ttestCallback = testCallback || function (text) {\n\t\tvar result = void 0;\n\t\tvar remove = [];\n\t\tvar format = [];\n\n\t\twhile ((result = regExp.exec(text)) !== null) {\n\t\t\t// There should be full match and 3 capture groups.\n\t\t\tif (result && result.length < 4) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tvar _result = result,\n\t\t\t    index = _result.index,\n\t\t\t    leftDel = _result['1'],\n\t\t\t    content = _result['2'],\n\t\t\t    rightDel = _result['3'];\n\n\t\t\t// Real matched string - there might be some non-capturing groups so we need to recalculate starting index.\n\n\t\t\tvar found = leftDel + content + rightDel;\n\t\t\tindex += result[0].length - found.length;\n\n\t\t\t// Start and End offsets of delimiters to remove.\n\t\t\tvar delStart = [index, index + leftDel.length];\n\t\t\tvar delEnd = [index + leftDel.length + content.length, index + leftDel.length + content.length + rightDel.length];\n\n\t\t\tremove.push(delStart);\n\t\t\tremove.push(delEnd);\n\n\t\t\tformat.push([index + leftDel.length, index + leftDel.length + content.length]);\n\t\t}\n\n\t\treturn {\n\t\t\tremove: remove,\n\t\t\tformat: format\n\t\t};\n\t};\n\n\t// A format callback run on matched text.\n\tformatCallback = formatCallback || function (batch, validRanges) {\n\t\tvar _iteratorNormalCompletion = true;\n\t\tvar _didIteratorError = false;\n\t\tvar _iteratorError = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator = validRanges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\tvar range = _step.value;\n\n\t\t\t\tbatch.setAttribute(range, command, true);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t_didIteratorError = true;\n\t\t\t_iteratorError = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t_iterator.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\teditor.document.on('change', function (evt, type, changes, batch) {\n\t\tif (batch.type == 'transparent') {\n\t\t\treturn;\n\t\t}\n\n\t\tif (type !== 'insert') {\n\t\t\treturn;\n\t\t}\n\n\t\tvar selection = editor.document.selection;\n\n\t\tif (!selection.isCollapsed || !selection.focus || !selection.focus.parent) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar block = selection.focus.parent;\n\t\tvar text = getText(block).slice(0, selection.focus.offset);\n\t\tvar ranges = testCallback(text);\n\t\tvar rangesToFormat = [];\n\n\t\t// Apply format before deleting text.\n\t\tranges.format.forEach(function (range) {\n\t\t\tif (range[0] === undefined || range[1] === undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\trangesToFormat.push(_liverange2.default.createFromParentsAndOffsets(block, range[0], block, range[1]));\n\t\t});\n\n\t\tvar rangesToRemove = [];\n\n\t\t// Reverse order to not mix the offsets while removing.\n\t\tranges.remove.slice().reverse().forEach(function (range) {\n\t\t\tif (range[0] === undefined || range[1] === undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\trangesToRemove.push(_liverange2.default.createFromParentsAndOffsets(block, range[0], block, range[1]));\n\t\t});\n\n\t\tif (!(rangesToFormat.length && rangesToRemove.length)) {\n\t\t\treturn;\n\t\t}\n\n\t\teditor.document.enqueueChanges(function () {\n\t\t\t// Create new batch to separate typing batch from the Autoformat changes.\n\t\t\tvar fixBatch = editor.document.batch();\n\n\t\t\tvar validRanges = editor.document.schema.getValidRanges(rangesToFormat, command);\n\n\t\t\t// Apply format.\n\t\t\tformatCallback(fixBatch, validRanges);\n\n\t\t\t// Remove delimiters.\n\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\tvar _didIteratorError2 = false;\n\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator2 = rangesToRemove[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\tvar range = _step2.value;\n\n\t\t\t\t\tfixBatch.remove(range);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t_iteratorError2 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n};\n\n// Returns whole text from parent element by adding all data from text nodes together.\n//\n// @private\n// @param {module:engine/model/element~Element} element\n// @returns {String}\n\n\nexports.default = InlineAutoformatEngine;\nfunction getText(element) {\n\treturn Array.from(element.getChildren()).reduce(function (a, b) {\n\t\treturn a + b.data;\n\t}, '');\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-autoformat/src/inlineautoformatengine.js\n// module id = 278\n// module chunks = 0","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if ('value' in descriptor)\n                descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }\n    return function (Constructor, protoProps, staticProps) {\n        if (protoProps)\n            defineProperties(Constructor.prototype, protoProps);\n        if (staticProps)\n            defineProperties(Constructor, staticProps);\n        return Constructor;\n    };\n}();\nvar _plugin = require('@ckeditor/ckeditor5-core/src/plugin');\nvar _plugin2 = _interopRequireDefault(_plugin);\nvar _boldengine = require('./boldengine');\nvar _boldengine2 = _interopRequireDefault(_boldengine);\nvar _buttonview = require('@ckeditor/ckeditor5-ui/src/button/buttonview');\nvar _buttonview2 = _interopRequireDefault(_buttonview);\nvar _bold = require('../theme/icons/bold.svg');\nvar _bold2 = _interopRequireDefault(_bold);\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError('Cannot call a class as a function');\n    }\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n    }\n    return call && (typeof call === 'object' || typeof call === 'function') ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n        throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass)\n        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n/**\n * @module basic-styles/bold\n */\n/**\n * The bold feature. It introduces the Bold button and the <kbd>Ctrl+B</kbd> keystroke.\n *\n * It uses the {@link module:basic-styles/boldengine~BoldEngine bold engine feature}.\n *\n * @extends module:core/plugin~Plugin\n */\nvar Bold = function (_Plugin) {\n    _inherits(Bold, _Plugin);\n    function Bold() {\n        _classCallCheck(this, Bold);\n        return _possibleConstructorReturn(this, (Bold.__proto__ || Object.getPrototypeOf(Bold)).apply(this, arguments));\n    }\n    _createClass(Bold, [{\n            key: 'init',\n            /**\n   * @inheritDoc\n   */\n            value: function init() {\n                var _this2 = this;\n                var editor = this.editor;\n                var t = editor.t;\n                var command = editor.commands.get('bold');\n                var keystroke = 'CTRL+B';\n                // Add bold button to feature components.\n                editor.ui.componentFactory.add('bold', function (locale) {\n                    var view = new _buttonview2.default(locale);\n                    view.set({\n                        label: t('Bold'),\n                        icon: _bold2.default,\n                        keystroke: keystroke,\n                        tooltip: true\n                    });\n                    view.bind('isOn', 'isEnabled').to(command, 'value', 'isEnabled');\n                    // Execute command.\n                    _this2.listenTo(view, 'execute', function () {\n                        return editor.execute('bold');\n                    });\n                    return view;\n                });\n                // Set the Ctrl+B keystroke.\n                editor.keystrokes.set(keystroke, 'bold');\n            }\n        }], [\n        {\n            key: 'requires',\n            /**\n   * @inheritDoc\n   */\n            get: function get() {\n                return [_boldengine2.default];\n            }    /**\n   * @inheritDoc\n   */\n        },\n        {\n            key: 'pluginName',\n            get: function get() {\n                return 'Bold';\n            }\n        }\n    ]);\n    return Bold;\n}(_plugin2.default);\nexports.default = Bold;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-basic-styles/src/bold.js\n// module id = 279\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _plugin = require('@ckeditor/ckeditor5-core/src/plugin');\n\nvar _plugin2 = _interopRequireDefault(_plugin);\n\nvar _buildmodelconverter = require('@ckeditor/ckeditor5-engine/src/conversion/buildmodelconverter');\n\nvar _buildmodelconverter2 = _interopRequireDefault(_buildmodelconverter);\n\nvar _buildviewconverter = require('@ckeditor/ckeditor5-engine/src/conversion/buildviewconverter');\n\nvar _buildviewconverter2 = _interopRequireDefault(_buildviewconverter);\n\nvar _attributecommand = require('./attributecommand');\n\nvar _attributecommand2 = _interopRequireDefault(_attributecommand);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module basic-styles/boldengine\n */\n\nvar BOLD = 'bold';\n\n/**\n * The bold engine feature.\n *\n * It registers the `bold` command and introduces the `bold` attribute in the model which renders to the view\n * as a `<strong>` element.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar BoldEngine = function (_Plugin) {\n\t_inherits(BoldEngine, _Plugin);\n\n\tfunction BoldEngine() {\n\t\t_classCallCheck(this, BoldEngine);\n\n\t\treturn _possibleConstructorReturn(this, (BoldEngine.__proto__ || Object.getPrototypeOf(BoldEngine)).apply(this, arguments));\n\t}\n\n\t_createClass(BoldEngine, [{\n\t\tkey: 'init',\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tvalue: function init() {\n\t\t\tvar editor = this.editor;\n\t\t\tvar data = editor.data;\n\t\t\tvar editing = editor.editing;\n\n\t\t\t// Allow bold attribute on all inline nodes.\n\t\t\teditor.document.schema.allow({ name: '$inline', attributes: BOLD, inside: '$block' });\n\t\t\t// Temporary workaround. See https://github.com/ckeditor/ckeditor5/issues/477.\n\t\t\teditor.document.schema.allow({ name: '$inline', attributes: BOLD, inside: '$clipboardHolder' });\n\n\t\t\t// Build converter from model to view for data and editing pipelines.\n\t\t\t(0, _buildmodelconverter2.default)().for(data.modelToView, editing.modelToView).fromAttribute(BOLD).toElement('strong');\n\n\t\t\t// Build converter from view to model for data pipeline.\n\t\t\t(0, _buildviewconverter2.default)().for(data.viewToModel).fromElement('strong').fromElement('b').fromAttribute('style', { 'font-weight': 'bold' }).toAttribute(BOLD, true);\n\n\t\t\t// Create bold command.\n\t\t\teditor.commands.add(BOLD, new _attributecommand2.default(editor, BOLD));\n\t\t}\n\t}]);\n\n\treturn BoldEngine;\n}(_plugin2.default);\n\nexports.default = BoldEngine;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-basic-styles/src/boldengine.js\n// module id = 280\n// module chunks = 0","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if ('value' in descriptor)\n                descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }\n    return function (Constructor, protoProps, staticProps) {\n        if (protoProps)\n            defineProperties(Constructor.prototype, protoProps);\n        if (staticProps)\n            defineProperties(Constructor, staticProps);\n        return Constructor;\n    };\n}();\nvar _plugin = require('@ckeditor/ckeditor5-core/src/plugin');\nvar _plugin2 = _interopRequireDefault(_plugin);\nvar _italicengine = require('./italicengine');\nvar _italicengine2 = _interopRequireDefault(_italicengine);\nvar _buttonview = require('@ckeditor/ckeditor5-ui/src/button/buttonview');\nvar _buttonview2 = _interopRequireDefault(_buttonview);\nvar _italic = require('../theme/icons/italic.svg');\nvar _italic2 = _interopRequireDefault(_italic);\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError('Cannot call a class as a function');\n    }\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n    }\n    return call && (typeof call === 'object' || typeof call === 'function') ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n        throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass)\n        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n/**\n * @module basic-styles/italic\n */\n/**\n * The italic feature. It introduces the Italic button and the <kbd>Ctrl+I</kbd> keystroke.\n *\n * It uses the {@link module:basic-styles/italicengine~ItalicEngine italic engine feature}.\n *\n * @extends module:core/plugin~Plugin\n */\nvar Italic = function (_Plugin) {\n    _inherits(Italic, _Plugin);\n    function Italic() {\n        _classCallCheck(this, Italic);\n        return _possibleConstructorReturn(this, (Italic.__proto__ || Object.getPrototypeOf(Italic)).apply(this, arguments));\n    }\n    _createClass(Italic, [{\n            key: 'init',\n            /**\n   * @inheritDoc\n   */\n            value: function init() {\n                var _this2 = this;\n                var editor = this.editor;\n                var t = editor.t;\n                var command = editor.commands.get('italic');\n                var keystroke = 'CTRL+I';\n                // Add bold button to feature components.\n                editor.ui.componentFactory.add('italic', function (locale) {\n                    var view = new _buttonview2.default(locale);\n                    view.set({\n                        label: t('Italic'),\n                        icon: _italic2.default,\n                        keystroke: keystroke,\n                        tooltip: true\n                    });\n                    view.bind('isOn', 'isEnabled').to(command, 'value', 'isEnabled');\n                    // Execute command.\n                    _this2.listenTo(view, 'execute', function () {\n                        return editor.execute('italic');\n                    });\n                    return view;\n                });\n                // Set the Ctrl+I keystroke.\n                editor.keystrokes.set(keystroke, 'italic');\n            }\n        }], [\n        {\n            key: 'requires',\n            /**\n   * @inheritDoc\n   */\n            get: function get() {\n                return [_italicengine2.default];\n            }    /**\n   * @inheritDoc\n   */\n        },\n        {\n            key: 'pluginName',\n            get: function get() {\n                return 'Italic';\n            }\n        }\n    ]);\n    return Italic;\n}(_plugin2.default);\nexports.default = Italic;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-basic-styles/src/italic.js\n// module id = 281\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _plugin = require('@ckeditor/ckeditor5-core/src/plugin');\n\nvar _plugin2 = _interopRequireDefault(_plugin);\n\nvar _buildmodelconverter = require('@ckeditor/ckeditor5-engine/src/conversion/buildmodelconverter');\n\nvar _buildmodelconverter2 = _interopRequireDefault(_buildmodelconverter);\n\nvar _buildviewconverter = require('@ckeditor/ckeditor5-engine/src/conversion/buildviewconverter');\n\nvar _buildviewconverter2 = _interopRequireDefault(_buildviewconverter);\n\nvar _attributecommand = require('./attributecommand');\n\nvar _attributecommand2 = _interopRequireDefault(_attributecommand);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module basic-styles/italicengine\n */\n\nvar ITALIC = 'italic';\n\n/**\n * The italic engine feature.\n *\n * It registers the `italic` command and introduces the `italic` attribute in the model which renders to the view\n * as an `<em>` element.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar ItalicEngine = function (_Plugin) {\n\t_inherits(ItalicEngine, _Plugin);\n\n\tfunction ItalicEngine() {\n\t\t_classCallCheck(this, ItalicEngine);\n\n\t\treturn _possibleConstructorReturn(this, (ItalicEngine.__proto__ || Object.getPrototypeOf(ItalicEngine)).apply(this, arguments));\n\t}\n\n\t_createClass(ItalicEngine, [{\n\t\tkey: 'init',\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tvalue: function init() {\n\t\t\tvar editor = this.editor;\n\t\t\tvar data = editor.data;\n\t\t\tvar editing = editor.editing;\n\n\t\t\t// Allow italic attribute on all inline nodes.\n\t\t\teditor.document.schema.allow({ name: '$inline', attributes: ITALIC, inside: '$block' });\n\t\t\t// Temporary workaround. See https://github.com/ckeditor/ckeditor5/issues/477.\n\t\t\teditor.document.schema.allow({ name: '$inline', attributes: ITALIC, inside: '$clipboardHolder' });\n\n\t\t\t// Build converter from model to view for data and editing pipelines.\n\t\t\t(0, _buildmodelconverter2.default)().for(data.modelToView, editing.modelToView).fromAttribute(ITALIC).toElement('i');\n\n\t\t\t// Build converter from view to model for data pipeline.\n\t\t\t(0, _buildviewconverter2.default)().for(data.viewToModel).fromElement('em').fromElement('i').fromAttribute('style', { 'font-style': 'italic' }).toAttribute(ITALIC, true);\n\n\t\t\t// Create italic command.\n\t\t\teditor.commands.add(ITALIC, new _attributecommand2.default(editor, ITALIC));\n\t\t}\n\t}]);\n\n\treturn ItalicEngine;\n}(_plugin2.default);\n\nexports.default = ItalicEngine;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-basic-styles/src/italicengine.js\n// module id = 282\n// module chunks = 0","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if ('value' in descriptor)\n                descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }\n    return function (Constructor, protoProps, staticProps) {\n        if (protoProps)\n            defineProperties(Constructor.prototype, protoProps);\n        if (staticProps)\n            defineProperties(Constructor, staticProps);\n        return Constructor;\n    };\n}();\nvar _plugin = require('@ckeditor/ckeditor5-core/src/plugin');\nvar _plugin2 = _interopRequireDefault(_plugin);\nvar _blockquoteengine = require('./blockquoteengine');\nvar _blockquoteengine2 = _interopRequireDefault(_blockquoteengine);\nvar _buttonview = require('@ckeditor/ckeditor5-ui/src/button/buttonview');\nvar _buttonview2 = _interopRequireDefault(_buttonview);\nvar _quote = require('@ckeditor/ckeditor5-core/theme/icons/quote.svg');\nvar _quote2 = _interopRequireDefault(_quote);\nrequire('../theme/theme.scss');\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError('Cannot call a class as a function');\n    }\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n    }\n    return call && (typeof call === 'object' || typeof call === 'function') ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n        throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass)\n        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n/**\n * @module block-quote/blockquote\n */\n/**\n * The block quote plugin.\n *\n * It introduces the `'blockQuote'` button and requires the {@link module:block-quote/blockquoteengine~BlockQuoteEngine}\n * plugin. It also changes <kbd>Enter</kbd> key behavior so it escapes block quotes when pressed in an\n * empty quoted block.\n *\n * @extends module:core/plugin~Plugin\n */\nvar BlockQuote = function (_Plugin) {\n    _inherits(BlockQuote, _Plugin);\n    function BlockQuote() {\n        _classCallCheck(this, BlockQuote);\n        return _possibleConstructorReturn(this, (BlockQuote.__proto__ || Object.getPrototypeOf(BlockQuote)).apply(this, arguments));\n    }\n    _createClass(BlockQuote, [\n        {\n            key: 'init',\n            /**\n   * @inheritDoc\n   */\n            value: function init() {\n                var _this2 = this;\n                var editor = this.editor;\n                var t = editor.t;\n                var command = editor.commands.get('blockQuote');\n                editor.ui.componentFactory.add('blockQuote', function (locale) {\n                    var buttonView = new _buttonview2.default(locale);\n                    buttonView.set({\n                        label: t('Block quote'),\n                        icon: _quote2.default,\n                        tooltip: true\n                    });\n                    // Bind button model to command.\n                    buttonView.bind('isOn', 'isEnabled').to(command, 'value', 'isEnabled');\n                    // Execute command.\n                    _this2.listenTo(buttonView, 'execute', function () {\n                        return editor.execute('blockQuote');\n                    });\n                    return buttonView;\n                });\n            }    /**\n   * @inheritDoc\n   */\n        },\n        {\n            key: 'afterInit',\n            value: function afterInit() {\n                var _this3 = this;\n                var editor = this.editor;\n                var command = editor.commands.get('blockQuote');\n                // Overwrite default Enter key behavior.\n                // If Enter key is pressed with selection collapsed in empty block inside a quote, break the quote.\n                // This listener is added in afterInit in order to register it after list's feature listener.\n                // We can't use a priority for this, because 'low' is already used by the enter feature, unless\n                // we'd use numeric priority in this case.\n                this.listenTo(this.editor.editing.view, 'enter', function (evt, data) {\n                    var doc = _this3.editor.document;\n                    var positionParent = doc.selection.getLastPosition().parent;\n                    if (doc.selection.isCollapsed && positionParent.isEmpty && command.value) {\n                        _this3.editor.execute('blockQuote');\n                        data.preventDefault();\n                        evt.stop();\n                    }\n                });\n            }\n        }\n    ], [\n        {\n            key: 'requires',\n            /**\n   * @inheritDoc\n   */\n            get: function get() {\n                return [_blockquoteengine2.default];\n            }    /**\n   * @inheritDoc\n   */\n        },\n        {\n            key: 'pluginName',\n            get: function get() {\n                return 'BlockQuote';\n            }\n        }\n    ]);\n    return BlockQuote;\n}(_plugin2.default);\nexports.default = BlockQuote;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-block-quote/src/blockquote.js\n// module id = 283\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _command = require('@ckeditor/ckeditor5-core/src/command');\n\nvar _command2 = _interopRequireDefault(_command);\n\nvar _position = require('@ckeditor/ckeditor5-engine/src/model/position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _element = require('@ckeditor/ckeditor5-engine/src/model/element');\n\nvar _element2 = _interopRequireDefault(_element);\n\nvar _range = require('@ckeditor/ckeditor5-engine/src/model/range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _first = require('@ckeditor/ckeditor5-utils/src/first');\n\nvar _first2 = _interopRequireDefault(_first);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module block-quote/blockquotecommand\n */\n\n/**\n * The block quote command plugin.\n *\n * @extends module:core/command~Command\n */\nvar BlockQuoteCommand = function (_Command) {\n\t_inherits(BlockQuoteCommand, _Command);\n\n\tfunction BlockQuoteCommand() {\n\t\t_classCallCheck(this, BlockQuoteCommand);\n\n\t\treturn _possibleConstructorReturn(this, (BlockQuoteCommand.__proto__ || Object.getPrototypeOf(BlockQuoteCommand)).apply(this, arguments));\n\t}\n\n\t_createClass(BlockQuoteCommand, [{\n\t\tkey: 'refresh',\n\n\t\t/**\n   * Whether the selection starts in a block quote.\n   *\n   * @observable\n   * @readonly\n   * @member {Boolean} #value\n   */\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tvalue: function refresh() {\n\t\t\tthis.value = this._getValue();\n\t\t\tthis.isEnabled = this._checkEnabled();\n\t\t}\n\n\t\t/**\n   * Executes the command. When the command {@link #value is on}, all block quotes within\n   * the selection will be removed. If it is off, all selected blocks will be wrapped with\n   * a block quote.\n   *\n   * @fires execute\n   * @param {Object} [options] Options for executed command.\n   * @param {module:engine/model/batch~Batch} [options.batch] Batch to collect all the change steps.\n   * A new batch will be created if this option is not set.\n   */\n\n\t}, {\n\t\tkey: 'execute',\n\t\tvalue: function execute() {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\t\t\tvar doc = this.editor.document;\n\t\t\tvar schema = doc.schema;\n\t\t\tvar batch = options.batch || doc.batch();\n\t\t\tvar blocks = Array.from(doc.selection.getSelectedBlocks());\n\n\t\t\tdoc.enqueueChanges(function () {\n\t\t\t\tif (_this2.value) {\n\t\t\t\t\t_this2._removeQuote(batch, blocks.filter(findQuote));\n\t\t\t\t} else {\n\t\t\t\t\tvar blocksToQuote = blocks.filter(function (block) {\n\t\t\t\t\t\t// Already quoted blocks needs to be considered while quoting too\n\t\t\t\t\t\t// in order to reuse their <bQ> elements.\n\t\t\t\t\t\treturn findQuote(block) || checkCanBeQuoted(schema, block);\n\t\t\t\t\t});\n\n\t\t\t\t\t_this2._applyQuote(batch, blocksToQuote);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * Checks the command's {@link #value}.\n   *\n   * @private\n   * @returns {Boolean} The current value.\n   */\n\n\t}, {\n\t\tkey: '_getValue',\n\t\tvalue: function _getValue() {\n\t\t\tvar firstBlock = (0, _first2.default)(this.editor.document.selection.getSelectedBlocks());\n\n\t\t\t// In the current implementation, the block quote must be an immediate parent of a block element.\n\t\t\treturn !!(firstBlock && findQuote(firstBlock));\n\t\t}\n\n\t\t/**\n   * Checks whether the command can be enabled in the current context.\n   *\n   * @private\n   * @returns {Boolean} Whether the command should be enabled.\n   */\n\n\t}, {\n\t\tkey: '_checkEnabled',\n\t\tvalue: function _checkEnabled() {\n\t\t\tif (this.value) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar selection = this.editor.document.selection;\n\t\t\tvar schema = this.editor.document.schema;\n\n\t\t\tvar firstBlock = (0, _first2.default)(selection.getSelectedBlocks());\n\n\t\t\tif (!firstBlock) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn checkCanBeQuoted(schema, firstBlock);\n\t\t}\n\n\t\t/**\n   * Removes the quote from given blocks.\n   *\n   * If blocks which are supposed to be \"unquoted\" are in the middle of a quote,\n   * start it or end it, then the quote will be split (if needed) and the blocks\n   * will be moved out of it, so other quoted blocks remained quoted.\n   *\n   * @private\n   * @param {module:engine/model/batch~Batch} batch\n   * @param {Array.<module:engine/model/element~Element>} blocks\n   */\n\n\t}, {\n\t\tkey: '_removeQuote',\n\t\tvalue: function _removeQuote(batch, blocks) {\n\t\t\t// Unquote all groups of block. Iterate in the reverse order to not break following ranges.\n\t\t\tgetRangesOfBlockGroups(blocks).reverse().forEach(function (groupRange) {\n\t\t\t\tif (groupRange.start.isAtStart && groupRange.end.isAtEnd) {\n\t\t\t\t\tbatch.unwrap(groupRange.start.parent);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// The group of blocks are at the beginning of an <bQ> so let's move them left (out of the <bQ>).\n\t\t\t\tif (groupRange.start.isAtStart) {\n\t\t\t\t\tvar positionBefore = _position2.default.createBefore(groupRange.start.parent);\n\n\t\t\t\t\tbatch.move(groupRange, positionBefore);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// The blocks are in the middle of an <bQ> so we need to split the <bQ> after the last block\n\t\t\t\t// so we move the items there.\n\t\t\t\tif (!groupRange.end.isAtEnd) {\n\t\t\t\t\tbatch.split(groupRange.end);\n\t\t\t\t}\n\n\t\t\t\t// Now we are sure that groupRange.end.isAtEnd is true, so let's move the blocks right.\n\n\t\t\t\tvar positionAfter = _position2.default.createAfter(groupRange.end.parent);\n\n\t\t\t\tbatch.move(groupRange, positionAfter);\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * Applies the quote to given blocks.\n   *\n   * @private\n   * @param {module:engine/model/batch~Batch} batch\n   * @param {Array.<module:engine/model/element~Element>} blocks\n   */\n\n\t}, {\n\t\tkey: '_applyQuote',\n\t\tvalue: function _applyQuote(batch, blocks) {\n\t\t\tvar quotesToMerge = [];\n\n\t\t\t// Quote all groups of block. Iterate in the reverse order to not break following ranges.\n\t\t\tgetRangesOfBlockGroups(blocks).reverse().forEach(function (groupRange) {\n\t\t\t\tvar quote = findQuote(groupRange.start);\n\n\t\t\t\tif (!quote) {\n\t\t\t\t\tquote = new _element2.default('blockQuote');\n\n\t\t\t\t\tbatch.wrap(groupRange, quote);\n\t\t\t\t}\n\n\t\t\t\tquotesToMerge.push(quote);\n\t\t\t});\n\n\t\t\t// Merge subsequent <bQ> elements. Reverse the order again because this time we want to go through\n\t\t\t// the <bQ> elements in the source order (due to how merge works – it moves the right element's content\n\t\t\t// to the first element and removes the right one. Since we may need to merge a couple of subsequent `<bQ>` elements\n\t\t\t// we want to keep the reference to the first (furthest left) one.\n\t\t\tquotesToMerge.reverse().reduce(function (currentQuote, nextQuote) {\n\t\t\t\tif (currentQuote.nextSibling == nextQuote) {\n\t\t\t\t\tbatch.merge(_position2.default.createAfter(currentQuote));\n\n\t\t\t\t\treturn currentQuote;\n\t\t\t\t}\n\n\t\t\t\treturn nextQuote;\n\t\t\t});\n\t\t}\n\t}]);\n\n\treturn BlockQuoteCommand;\n}(_command2.default);\n\nexports.default = BlockQuoteCommand;\n\n\nfunction findQuote(elementOrPosition) {\n\treturn elementOrPosition.parent.name == 'blockQuote' ? elementOrPosition.parent : null;\n}\n\n// Returns a minimal array of ranges containing groups of subsequent blocks.\n//\n// content:         abcdefgh\n// blocks:          [ a, b, d , f, g, h ]\n// output ranges:   [ab]c[d]e[fgh]\n//\n// @param {Array.<module:engine/model/element~Element>} blocks\n// @returns {Array.<module:engine/model/range~Range>}\nfunction getRangesOfBlockGroups(blocks) {\n\tvar startPosition = void 0;\n\tvar i = 0;\n\tvar ranges = [];\n\n\twhile (i < blocks.length) {\n\t\tvar block = blocks[i];\n\t\tvar nextBlock = blocks[i + 1];\n\n\t\tif (!startPosition) {\n\t\t\tstartPosition = _position2.default.createBefore(block);\n\t\t}\n\n\t\tif (!nextBlock || block.nextSibling != nextBlock) {\n\t\t\tranges.push(new _range2.default(startPosition, _position2.default.createAfter(block)));\n\t\t\tstartPosition = null;\n\t\t}\n\n\t\ti++;\n\t}\n\n\treturn ranges;\n}\n\n// Checks whether <bQ> can wrap the block.\nfunction checkCanBeQuoted(schema, block) {\n\tvar isBQAllowed = schema.check({\n\t\tname: 'blockQuote',\n\t\tinside: _position2.default.createBefore(block)\n\t});\n\tvar isBlockAllowedInBQ = schema.check({\n\t\tname: block.name,\n\t\tattributes: Array.from(block.getAttributeKeys()),\n\t\tinside: 'blockQuote'\n\t});\n\n\treturn isBQAllowed && isBlockAllowedInBQ;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-block-quote/src/blockquotecommand.js\n// module id = 284\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _plugin = require('@ckeditor/ckeditor5-core/src/plugin');\n\nvar _plugin2 = _interopRequireDefault(_plugin);\n\nvar _blockquotecommand = require('./blockquotecommand');\n\nvar _blockquotecommand2 = _interopRequireDefault(_blockquotecommand);\n\nvar _buildviewconverter = require('@ckeditor/ckeditor5-engine/src/conversion/buildviewconverter');\n\nvar _buildviewconverter2 = _interopRequireDefault(_buildviewconverter);\n\nvar _buildmodelconverter = require('@ckeditor/ckeditor5-engine/src/conversion/buildmodelconverter');\n\nvar _buildmodelconverter2 = _interopRequireDefault(_buildmodelconverter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module block-quote/blockquoteengine\n */\n\n/**\n * The block quote engine.\n *\n * Introduces the `'blockQuote'` command and the `'blockQuote'` model element.\n *\n * @extends module:core/plugin~Plugin\n */\nvar BlockQuoteEngine = function (_Plugin) {\n\t_inherits(BlockQuoteEngine, _Plugin);\n\n\tfunction BlockQuoteEngine() {\n\t\t_classCallCheck(this, BlockQuoteEngine);\n\n\t\treturn _possibleConstructorReturn(this, (BlockQuoteEngine.__proto__ || Object.getPrototypeOf(BlockQuoteEngine)).apply(this, arguments));\n\t}\n\n\t_createClass(BlockQuoteEngine, [{\n\t\tkey: 'init',\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tvalue: function init() {\n\t\t\tvar editor = this.editor;\n\t\t\tvar schema = editor.document.schema;\n\n\t\t\teditor.commands.add('blockQuote', new _blockquotecommand2.default(editor));\n\n\t\t\tschema.registerItem('blockQuote');\n\t\t\tschema.allow({ name: 'blockQuote', inside: '$root' });\n\t\t\tschema.allow({ name: '$block', inside: 'blockQuote' });\n\n\t\t\t(0, _buildviewconverter2.default)().for(editor.data.viewToModel).fromElement('blockquote').toElement('blockQuote');\n\n\t\t\t(0, _buildmodelconverter2.default)().for(editor.data.modelToView, editor.editing.modelToView).fromElement('blockQuote').toElement('blockquote');\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'afterInit',\n\t\tvalue: function afterInit() {\n\t\t\tvar schema = this.editor.document.schema;\n\n\t\t\t// TODO\n\t\t\t// Workaround for https://github.com/ckeditor/ckeditor5-engine/issues/532#issuecomment-280924650.\n\t\t\tif (schema.hasItem('listItem')) {\n\t\t\t\tschema.allow({\n\t\t\t\t\tname: 'listItem',\n\t\t\t\t\tinside: 'blockQuote',\n\t\t\t\t\tattributes: ['type', 'indent']\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn BlockQuoteEngine;\n}(_plugin2.default);\n\nexports.default = BlockQuoteEngine;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-block-quote/src/blockquoteengine.js\n// module id = 285\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _plugin = require('@ckeditor/ckeditor5-core/src/plugin');\n\nvar _plugin2 = _interopRequireDefault(_plugin);\n\nvar _clipboardobserver = require('./clipboardobserver');\n\nvar _clipboardobserver2 = _interopRequireDefault(_clipboardobserver);\n\nvar _plaintexttohtml = require('./utils/plaintexttohtml');\n\nvar _plaintexttohtml2 = _interopRequireDefault(_plaintexttohtml);\n\nvar _normalizeclipboarddata = require('./utils/normalizeclipboarddata');\n\nvar _normalizeclipboarddata2 = _interopRequireDefault(_normalizeclipboarddata);\n\nvar _viewtoplaintext = require('./utils/viewtoplaintext.js');\n\nvar _viewtoplaintext2 = _interopRequireDefault(_viewtoplaintext);\n\nvar _htmldataprocessor = require('@ckeditor/ckeditor5-engine/src/dataprocessor/htmldataprocessor');\n\nvar _htmldataprocessor2 = _interopRequireDefault(_htmldataprocessor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module clipboard/clipboard\n */\n\n/**\n * The clipboard feature. Currently, it's responsible for intercepting the `paste` and `drop` events and\n * passing the pasted content through the clipboard pipeline.\n *\n * # Clipboard input pipeline\n *\n * The feature creates the clipboard input pipeline which allows processing clipboard content\n * before it gets inserted into the editor. The pipeline consists of two events on which\n * the features can listen in order to modify or totally override the default behavior.\n *\n * ## On {@link module:engine/view/document~Document#event:paste} and {@link module:engine/view/document~Document#event:drop}\n *\n * The default action is to:\n *\n * 1. get HTML or plain text from the clipboard,\n * 2. prevent the default action of the native `paste` or `drop` event,\n * 3. fire {@link module:engine/view/document~Document#event:clipboardInput} with a\n * {@link module:clipboard/datatransfer~DataTransfer `dataTransfer`} property.\n * 4. fire {@link module:clipboard/clipboard~Clipboard#event:inputTransformation} with a `data` containing the clipboard data parsed to\n * a {@link module:engine/view/documentfragment~DocumentFragment view document fragment}.\n *\n * These action are performed by a low priority listeners, so they can be overridden by a normal ones\n * when a deeper change in pasting behavior is needed. For example, a feature which wants to differently read\n * data from the clipboard (the {@link module:clipboard/datatransfer~DataTransfer `DataTransfer`}).\n * should plug a listener at this stage.\n *\n * ## On {@link module:engine/view/document~Document#event:clipboardInput}\n *\n * This action is performed by a low priority listener, so it can be overridden by a normal one.\n *\n * At this stage the dataTransfer object can be processed by the features, which want to transform the original dataTransform.\n *\n *\t\tthis.listenTo( editor.editing.view, 'clipboardInput', ( evt, data ) => {\n *\t\t\tconst content = customTransform( data.dataTransfer.get( 'text/html' ) );\n *\t\t\tconst transformedContent = transform( content );\n *\t\t\tdata.dataTransfer.set( 'text/html', transformedContent );\n *\t\t} );\n *\n * ## On {@link module:clipboard/clipboard~Clipboard#event:inputTransformation}\n *\n * The default action is to insert the content (`data.content`, represented by a\n * {@link module:engine/view/documentfragment~DocumentFragment}) to an editor if the data is not empty.\n *\n * This action is performed by a low priority listener, so it can be overridden by a normal one.\n *\n * At this stage the pasted content can be processed by the features. E.g. a feature which wants to transform\n * a pasted text into a link can be implemented in this way:\n *\n *\t\tthis.listenTo( editor.plugins.get( 'Clipboard' ), 'inputTransformation', ( evt, data ) => {\n *\t\t\tif ( data.content.childCount == 1 && isUrlText( data.content.getChild( 0 ) ) ) {\n *\t\t\t\tconst linkUrl = data.content.getChild( 0 ).data;\n *\n *\t\t\t\tdata.content = new ViewDocumentFragment( [\n *\t\t\t\t\tViewElement(\n *\t\t\t\t\t\t'a',\n *\t\t\t\t\t\t{ href: linkUrl },\n *\t\t\t\t\t\t[ new ViewText( linkUrl ) ]\n *\t\t\t\t\t)\n *\t\t\t\t] );\n *\t\t\t}\n *\t\t} );\n *\n * # Clipboard output pipeline\n *\n * The output pipeline is the equivalent of the input pipeline but for the copy and cut operations.\n * It allows to process the content which will be then put into the clipboard or to override the whole process.\n *\n * ## On {@link module:engine/view/document~Document#event:copy} and {@link module:engine/view/document~Document#event:cut}\n *\n * The default action is to:\n *\n * 1. {@link module:engine/controller/datacontroller~DataController#getSelectedContent get selected content} from the editor,\n * 2. prevent the default action of the native `copy` or `cut` event,\n * 3. fire {@link module:engine/view/document~Document#event:clipboardOutput} with a clone of the selected content\n * converted to a {@link module:engine/view/documentfragment~DocumentFragment view document fragment}.\n *\n * ## On {@link module:engine/view/document~Document#event:clipboardOutput}\n *\n * The default action is to put the content (`data.content`, represented by a\n * {@link module:engine/view/documentfragment~DocumentFragment}) to the clipboard as HTML. In case of the cut operation,\n * the selected content is also deleted from the editor.\n *\n * This action is performed by a low priority listener, so it can be overridden by a normal one.\n *\n * At this stage the copied/cut content can be processed by the features.\n *\n * @extends module:core/plugin~Plugin\n */\nvar Clipboard = function (_Plugin) {\n  _inherits(Clipboard, _Plugin);\n\n  function Clipboard() {\n    _classCallCheck(this, Clipboard);\n\n    return _possibleConstructorReturn(this, (Clipboard.__proto__ || Object.getPrototypeOf(Clipboard)).apply(this, arguments));\n  }\n\n  _createClass(Clipboard, [{\n    key: 'init',\n\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      var _this2 = this;\n\n      var editor = this.editor;\n      var doc = editor.document;\n      var editingView = editor.editing.view;\n\n      /**\n       * Data processor used to convert pasted HTML to a view structure.\n       *\n       * @private\n       * @member {module:engine/dataprocessor/htmldataprocessor~HtmlDataProcessor} #_htmlDataProcessor\n       */\n      this._htmlDataProcessor = new _htmldataprocessor2.default();\n\n      editingView.addObserver(_clipboardobserver2.default);\n\n      // The clipboard paste pipeline.\n\n      this.listenTo(editingView, 'clipboardInput', function (evt, data) {\n        // Pasting and dropping is disabled when editor is read-only.\n        // See: https://github.com/ckeditor/ckeditor5-clipboard/issues/26.\n        if (editor.isReadOnly) {\n          return;\n        }\n\n        var dataTransfer = data.dataTransfer;\n        var content = '';\n\n        if (dataTransfer.getData('text/html')) {\n          content = (0, _normalizeclipboarddata2.default)(dataTransfer.getData('text/html'));\n        } else if (dataTransfer.getData('text/plain')) {\n          content = (0, _plaintexttohtml2.default)(dataTransfer.getData('text/plain'));\n        }\n\n        content = _this2._htmlDataProcessor.toView(content);\n\n        _this2.fire('inputTransformation', { content: content });\n      }, { priority: 'low' });\n\n      this.listenTo(this, 'inputTransformation', function (evt, data) {\n        if (!data.content.isEmpty) {\n          var dataController = _this2.editor.data;\n\n          // Convert the pasted content to a model document fragment.\n          // Conversion is contextual, but in this case we need an \"all allowed\" context and for that\n          // we use the $clipboardHolder item.\n          var modelFragment = dataController.toModel(data.content, '$clipboardHolder');\n\n          doc.enqueueChanges(function () {\n            dataController.insertContent(modelFragment, doc.selection);\n          });\n        }\n      }, { priority: 'low' });\n\n      // The clipboard copy/cut pipeline.\n\n      function onCopyCut(evt, data) {\n        var dataTransfer = data.dataTransfer;\n        var content = editor.data.toView(editor.data.getSelectedContent(doc.selection));\n\n        data.preventDefault();\n\n        editingView.fire('clipboardOutput', { dataTransfer: dataTransfer, content: content, method: evt.name });\n      }\n\n      this.listenTo(editingView, 'copy', onCopyCut, { priority: 'low' });\n      this.listenTo(editingView, 'cut', function (evt, data) {\n        // Cutting is disabled when editor is read-only.\n        // See: https://github.com/ckeditor/ckeditor5-clipboard/issues/26.\n        if (editor.isReadOnly) {\n          data.preventDefault();\n        } else {\n          onCopyCut(evt, data);\n        }\n      }, { priority: 'low' });\n\n      this.listenTo(editingView, 'clipboardOutput', function (evt, data) {\n        if (!data.content.isEmpty) {\n          data.dataTransfer.setData('text/html', _this2._htmlDataProcessor.toData(data.content));\n          data.dataTransfer.setData('text/plain', (0, _viewtoplaintext2.default)(data.content));\n        }\n\n        if (data.method == 'cut') {\n          doc.enqueueChanges(function () {\n            editor.data.deleteContent(doc.selection, doc.batch());\n          });\n        }\n      }, { priority: 'low' });\n    }\n  }], [{\n    key: 'pluginName',\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return 'Clipboard';\n    }\n  }]);\n\n  return Clipboard;\n}(_plugin2.default);\n\n/**\n * Fired with a `content`, which comes from the clipboard (was pasted or dropped) and\n * should be processed in order to be inserted into the editor.\n * It's part of the {@link module:clipboard/clipboard~Clipboard \"clipboard pipeline\"}.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @see module:clipboard/clipboard~Clipboard\n * @event module:clipboard/clipboard~Clipboard#event:inputTransformation\n * @param {Object} data Event data.\n * @param {module:engine/view/documentfragment~DocumentFragment} data.content Event data. Content to be inserted into the editor.\n * It can be modified by the event listeners. Read more about the clipboard pipelines in {@link module:clipboard/clipboard~Clipboard}\n */\n\n/**\n * Fired on {@link module:engine/view/document~Document#event:copy} and {@link module:engine/view/document~Document#event:cut}\n * with a copy of selected content. The content can be processed before it ends up in the clipboard.\n * It's part of the {@link module:clipboard/clipboard~Clipboard \"clipboard pipeline\"}.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @see module:clipboard/clipboard~Clipboard\n * @event module:engine/view/document~Document#event:clipboardOutput\n * @param {module:clipboard/clipboard~ClipboardOutputEventData} data Event data.\n */\n\n/**\n * The value of the {@link module:engine/view/document~Document#event:clipboardOutput} event.\n *\n * @class module:clipboard/clipboard~ClipboardOutputEventData\n */\n\n/**\n * Data transfer instance.\n *\n * @readonly\n * @member {module:clipboard/datatransfer~DataTransfer} module:clipboard/clipboard~ClipboardOutputEventData#dataTransfer\n */\n\n/**\n * Content to be put into the clipboard. It can be modified by the event listeners.\n * Read more about the clipboard pipelines in {@link module:clipboard/clipboard~Clipboard}.\n *\n * @member {module:engine/view/documentfragment~DocumentFragment} module:clipboard/clipboard~ClipboardOutputEventData#content\n */\n\n/**\n * Whether the event was triggered by copy or cut operation.\n *\n * @member {'copy'|'cut'} module:clipboard/clipboard~ClipboardOutputEventData#method\n */\n\n\nexports.default = Clipboard;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-clipboard/src/clipboard.js\n// module id = 286\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _domeventobserver = require('@ckeditor/ckeditor5-engine/src/view/observer/domeventobserver');\n\nvar _domeventobserver2 = _interopRequireDefault(_domeventobserver);\n\nvar _datatransfer = require('./datatransfer');\n\nvar _datatransfer2 = _interopRequireDefault(_datatransfer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module clipboard/clipboardobserver\n */\n\n/**\n * {@link module:engine/view/document~Document#event:paste Paste} event observer.\n *\n * Note that this observer is not available by default. To make it available it needs to be added to\n * {@link module:engine/view/document~Document} by the {@link module:engine/view/document~Document#addObserver} method.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nvar ClipboardObserver = function (_DomEventObserver) {\n  _inherits(ClipboardObserver, _DomEventObserver);\n\n  function ClipboardObserver(doc) {\n    _classCallCheck(this, ClipboardObserver);\n\n    var _this = _possibleConstructorReturn(this, (ClipboardObserver.__proto__ || Object.getPrototypeOf(ClipboardObserver)).call(this, doc));\n\n    _this.domEventType = ['paste', 'copy', 'cut', 'drop'];\n\n    _this.listenTo(doc, 'paste', handleInput, { priority: 'low' });\n    _this.listenTo(doc, 'drop', handleInput, { priority: 'low' });\n\n    function handleInput(evt, data) {\n      data.preventDefault();\n\n      var targetRanges = data.dropRange ? [data.dropRange] : Array.from(doc.selection.getRanges());\n\n      doc.fire('clipboardInput', {\n        dataTransfer: data.dataTransfer,\n        targetRanges: targetRanges\n      });\n    }\n    return _this;\n  }\n\n  _createClass(ClipboardObserver, [{\n    key: 'onDomEvent',\n    value: function onDomEvent(domEvent) {\n      var evtData = {\n        dataTransfer: new _datatransfer2.default(domEvent.clipboardData ? domEvent.clipboardData : domEvent.dataTransfer)\n      };\n\n      if (domEvent.type == 'drop') {\n        evtData.dropRange = getDropViewRange(this.document, domEvent);\n      }\n\n      this.fire(domEvent.type, domEvent, evtData);\n    }\n  }]);\n\n  return ClipboardObserver;\n}(_domeventobserver2.default);\n\nexports.default = ClipboardObserver;\n\n\nfunction getDropViewRange(doc, domEvent) {\n  var domDoc = domEvent.target.ownerDocument;\n  var x = domEvent.clientX;\n  var y = domEvent.clientY;\n  var domRange = void 0;\n\n  // Webkit & Blink.\n  if (domDoc.caretRangeFromPoint && domDoc.caretRangeFromPoint(x, y)) {\n    domRange = domDoc.caretRangeFromPoint(x, y);\n  }\n  // FF.\n  else if (domEvent.rangeParent) {\n      domRange = domDoc.createRange();\n      domRange.setStart(domEvent.rangeParent, domEvent.rangeOffset);\n      domRange.collapse(true);\n    }\n\n  if (domRange) {\n    return doc.domConverter.domRangeToView(domRange);\n  } else {\n    return doc.selection.getFirstRange();\n  }\n}\n\n/**\n * Fired as a continuation of {@link #event:paste} and {@link #event:drop} events.\n * It's part of the {@link module:clipboard/clipboard~Clipboard \"clipboard pipeline\"}.\n *\n * Fired with a `dataTransfer` which comes from the clipboard and which content should be processed\n * and inserted into the editor.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/document~Document#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @see module:clipboard/clipboard~Clipboard\n * @event module:engine/view/document~Document#event:clipboardInput\n * @param {Object} data Event data.\n * @param {module:clipboard/datatransfer~DataTransfer} data.dataTransfer Data transfer instance.\n * @param {Array.<module:engine/view/range~Range>} data.targetRanges Ranges which are the target of the operation\n * (usually – into which the content should be inserted).\n * If clipboard input was triggered by a paste operation, then these are the selection ranges. If by a drop operation,\n * then it's the drop position (which can be different than the selection at the moment of drop).\n */\n\n/**\n * Fired when user dropped content into one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/document~Document#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:engine/view/document~Document#event:clipboardInput\n * @event module:engine/view/document~Document#event:drop\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n * @param {module:engine/view/range~Range} dropRange The position into which the content is dropped.\n */\n\n/**\n * Fired when user pasted content into one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/document~Document#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:engine/view/document~Document#event:clipboardInput\n * @event module:engine/view/document~Document#event:paste\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * Fired when user copied content from one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/document~Document#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @event module:engine/view/document~Document#event:copy\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * Fired when user cut content from one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/document~Document#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @event module:engine/view/document~Document#event:cut\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * The value of the {@link module:engine/view/document~Document#event:paste},\n * {@link module:engine/view/document~Document#event:copy} and {@link module:engine/view/document~Document#event:cut} events.\n *\n * In order to access clipboard data use `dataTransfer` property.\n *\n * @class module:clipboard/clipboardobserver~ClipboardEventData\n * @extends module:engine/view/observer/domeventdata~DomEventData\n */\n\n/**\n * Data transfer instance.\n *\n * @readonly\n * @member {module:clipboard/datatransfer~DataTransfer} module:clipboard/clipboardobserver~ClipboardEventData#dataTransfer\n */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-clipboard/src/clipboardobserver.js\n// module id = 287\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module clipboard/datatransfer\n */\n\n/**\n * Facade over the native [`DataTransfer`](https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer) object.\n */\nvar DataTransfer = function () {\n\tfunction DataTransfer(nativeDataTransfer) {\n\t\t_classCallCheck(this, DataTransfer);\n\n\t\t/**\n   * The array of files created from the native `DataTransfer#files` or `DataTransfer#items`.\n   *\n   * @readonly\n   * @member {Array.<File>} #files\n   */\n\t\tthis.files = getFiles(nativeDataTransfer);\n\n\t\t/**\n   * The native DataTransfer object.\n   *\n   * @private\n   * @member {DataTransfer} #_native\n   */\n\t\tthis._native = nativeDataTransfer;\n\t}\n\n\t/**\n  * Returns an array of available native content types.\n  *\n  * @returns {Array.<String>}\n  */\n\n\n\t_createClass(DataTransfer, [{\n\t\tkey: 'getData',\n\n\n\t\t/**\n   * Gets data from the data transfer by its mime type.\n   *\n   *\t\tdataTransfer.getData( 'text/plain' );\n   *\n   * @param {String} type The mime type. E.g. `text/html` or `text/plain`.\n   * @returns {String}\n   */\n\t\tvalue: function getData(type) {\n\t\t\treturn this._native.getData(type);\n\t\t}\n\n\t\t/**\n   * Sets data in the data transfer.\n   *\n   * @param {String} type The mime type. E.g. `text/html` or `text/plain`.\n   * @param {String} data\n   */\n\n\t}, {\n\t\tkey: 'setData',\n\t\tvalue: function setData(type, data) {\n\t\t\tthis._native.setData(type, data);\n\t\t}\n\t}, {\n\t\tkey: 'types',\n\t\tget: function get() {\n\t\t\treturn this._native.types;\n\t\t}\n\t}]);\n\n\treturn DataTransfer;\n}();\n\nexports.default = DataTransfer;\n\n\nfunction getFiles(nativeDataTransfer) {\n\t// DataTransfer.files and items are Array-like and might not have an iterable interface.\n\tvar files = nativeDataTransfer.files ? Array.from(nativeDataTransfer.files) : [];\n\tvar items = nativeDataTransfer.items ? Array.from(nativeDataTransfer.items) : [];\n\n\tif (files.length) {\n\t\treturn files;\n\t}\n\t// Chrome have empty DataTransfer.files, but let get files through the items interface.\n\treturn items.filter(function (item) {\n\t\treturn item.kind === 'file';\n\t}).map(function (item) {\n\t\treturn item.getAsFile();\n\t});\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-clipboard/src/datatransfer.js\n// module id = 288\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = normalizeClipboardData;\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module clipboard/utils/normalizeclipboarddata\n */\n\n/**\n * Removes some popular browser quirks out of the clipboard data (HTML).\n *\n * @param {String} data The HTML data to normalize.\n * @returns {String} Normalized HTML.\n */\nfunction normalizeClipboardData(data) {\n  return data.replace(/<span(?: class=\"Apple-converted-space\"|)>(\\s+)<\\/span>/g, function (fullMatch, spaces) {\n    // Handle the most popular and problematic case when even a single space becomes an nbsp;.\n    // Decode those to normal spaces. Read more in https://github.com/ckeditor/ckeditor5-clipboard/issues/2.\n    if (spaces.length == 1) {\n      return ' ';\n    }\n\n    return spaces;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-clipboard/src/utils/normalizeclipboarddata.js\n// module id = 289\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = plainTextToHtml;\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module clipboard/utils/plaintexttohtml\n */\n\n/**\n * Converts plain text to its HTML-ized version.\n *\n * @param {String} text The plain text to convert.\n * @returns {String} HTML generated from the plain text.\n */\nfunction plainTextToHtml(text) {\n\ttext = text\n\t// Encode <>.\n\t.replace(/</g, '&lt;').replace(/>/g, '&gt;')\n\t// Creates paragraphs for double line breaks and change single line breaks to spaces.\n\t// In the future single line breaks may be converted into <br>s.\n\t.replace(/\\n\\n/g, '</p><p>').replace(/\\n/g, ' ')\n\t// Preserve trailing spaces (only the first and last one – the rest is handled below).\n\t.replace(/^\\s/, '&nbsp;').replace(/\\s$/, '&nbsp;')\n\t// Preserve other subsequent spaces now.\n\t.replace(/\\s\\s/g, ' &nbsp;');\n\n\tif (text.indexOf('</p><p>') > -1) {\n\t\t// If we created paragraphs above, add the trailing ones.\n\t\ttext = '<p>' + text + '</p>';\n\t}\n\n\t// TODO:\n\t// * What about '\\nfoo' vs ' foo'?\n\n\treturn text;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-clipboard/src/utils/plaintexttohtml.js\n// module id = 290\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = viewToPlainText;\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module clipboard/utils/viewtoplaintext\n */\n\n// Elements which should not have empty-line padding.\n// Most `view.ContainerElement` want to be separate by new-line, but some are creating one structure\n// together (like `<li>`) so it is better to separate them by only one \"\\n\".\nvar smallPaddingElements = ['figcaption', 'li'];\n\n/**\n * Converts {@link module:engine/view/item~Item view item} and all of its children to plain text.\n *\n * @param {module:engine/view/item~Item} viewItem View item to convert.\n * @returns {String} Plain text representation of `viewItem`.\n */\nfunction viewToPlainText(viewItem) {\n\tvar text = '';\n\n\tif (viewItem.is('text') || viewItem.is('textProxy')) {\n\t\t// If item is `Text` or `TextProxy` simple take its text data.\n\t\ttext = viewItem.data;\n\t} else if (viewItem.is('img') && viewItem.hasAttribute('alt')) {\n\t\t// Special case for images - use alt attribute if it is provided.\n\t\ttext = viewItem.getAttribute('alt');\n\t} else {\n\t\t// Other elements are document fragments, attribute elements or container elements.\n\t\t// They don't have their own text value, so convert their children.\n\t\tvar prev = null;\n\n\t\tvar _iteratorNormalCompletion = true;\n\t\tvar _didIteratorError = false;\n\t\tvar _iteratorError = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator = viewItem.getChildren()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\tvar child = _step.value;\n\n\t\t\t\tvar childText = viewToPlainText(child);\n\n\t\t\t\t// Separate container element children with one or more new-line characters.\n\t\t\t\tif (prev && (prev.is('containerElement') || child.is('containerElement'))) {\n\t\t\t\t\tif (smallPaddingElements.includes(prev.name) || smallPaddingElements.includes(child.name)) {\n\t\t\t\t\t\ttext += '\\n';\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttext += '\\n\\n';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttext += childText;\n\t\t\t\tprev = child;\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t_didIteratorError = true;\n\t\t\t_iteratorError = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t_iterator.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn text;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-clipboard/src/utils/viewtoplaintext.js\n// module id = 291\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */\n\n/**\n * @module core/commandcollection\n */\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Collection of commands. Its instance is available in {@link module:core/editor/editor~Editor#commands `editor.commands`}.\n */\nvar CommandCollection = function () {\n\t/**\n  * Creates collection instance.\n  */\n\tfunction CommandCollection() {\n\t\t_classCallCheck(this, CommandCollection);\n\n\t\t/**\n   * Command map.\n   *\n   * @private\n   * @member {Map}\n   */\n\t\tthis._commands = new Map();\n\t}\n\n\t/**\n  * Registers a new command.\n  *\n  * @param {String} commandName The name of the command.\n  * @param {module:core/command~Command} command\n  */\n\n\n\t_createClass(CommandCollection, [{\n\t\tkey: 'add',\n\t\tvalue: function add(commandName, command) {\n\t\t\tthis._commands.set(commandName, command);\n\t\t}\n\n\t\t/**\n   * Retrieves a command from the collection.\n   *\n   * @param {String} commandName The name of the command.\n   * @returns {module:core/command~Command}\n   */\n\n\t}, {\n\t\tkey: 'get',\n\t\tvalue: function get(commandName) {\n\t\t\treturn this._commands.get(commandName);\n\t\t}\n\n\t\t/**\n   * Executes a command.\n   *\n   * @param {String} commandName The name of the command.\n   */\n\n\t}, {\n\t\tkey: 'execute',\n\t\tvalue: function execute(commandName) {\n\t\t\tvar command = this.get(commandName);\n\n\t\t\tif (!command) {\n\t\t\t\t/**\n     * Command does not exist.\n     *\n     * @error commandcollection-command-not-found\n     * @param {String} commandName Name of the command.\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('commandcollection-command-not-found: Command does not exist.', { commandName: commandName });\n\t\t\t}\n\n\t\t\tfor (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t\t\t\targs[_key - 1] = arguments[_key];\n\t\t\t}\n\n\t\t\tcommand.execute.apply(command, args);\n\t\t}\n\n\t\t/**\n   * Returns iterator of command names.\n   *\n   * @returns {Iterator.<String>}\n   */\n\n\t}, {\n\t\tkey: 'names',\n\t\tvalue: regeneratorRuntime.mark(function names() {\n\t\t\treturn regeneratorRuntime.wrap(function names$(_context) {\n\t\t\t\twhile (1) {\n\t\t\t\t\tswitch (_context.prev = _context.next) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\treturn _context.delegateYield(this._commands.keys(), 't0', 1);\n\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcase 'end':\n\t\t\t\t\t\t\treturn _context.stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, names, this);\n\t\t})\n\n\t\t/**\n   * Returns iterator of command instances.\n   *\n   * @returns {Iterator.<module:core/command~Command>}\n   */\n\n\t}, {\n\t\tkey: 'commands',\n\t\tvalue: regeneratorRuntime.mark(function commands() {\n\t\t\treturn regeneratorRuntime.wrap(function commands$(_context2) {\n\t\t\t\twhile (1) {\n\t\t\t\t\tswitch (_context2.prev = _context2.next) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\treturn _context2.delegateYield(this._commands.values(), 't0', 1);\n\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcase 'end':\n\t\t\t\t\t\t\treturn _context2.stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, commands, this);\n\t\t})\n\n\t\t/**\n   * Collection iterator.\n   */\n\n\t}, {\n\t\tkey: Symbol.iterator,\n\t\tvalue: function value() {\n\t\t\treturn this._commands[Symbol.iterator]();\n\t\t}\n\n\t\t/**\n   * Destroys all collection commands.\n   */\n\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = this.commands()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar command = _step.value;\n\n\t\t\t\t\tcommand.destroy();\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn CommandCollection;\n}();\n\nexports.default = CommandCollection;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-core/src/commandcollection.js\n// module id = 292\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _keystrokehandler = require('@ckeditor/ckeditor5-utils/src/keystrokehandler');\n\nvar _keystrokehandler2 = _interopRequireDefault(_keystrokehandler);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module core/editingkeystrokehandler\n */\n\n/**\n * A keystroke handler for editor editing. Its instance is available\n * in {@link module:core/editor/standardeditor~StandardEditor#keystrokes} so plugins\n * can register their keystrokes.\n *\n * E.g. an undo plugin would do this:\n *\n *\t\teditor.keystrokes.set( 'Ctrl+Z', 'undo' );\n *\t\teditor.keystrokes.set( 'Ctrl+Shift+Z', 'redo' );\n *\t\teditor.keystrokes.set( 'Ctrl+Y', 'redo' );\n *\n * @extends utils/keystrokehandler~KeystrokeHandler\n */\nvar EditingKeystrokeHandler = function (_KeystrokeHandler) {\n\t_inherits(EditingKeystrokeHandler, _KeystrokeHandler);\n\n\t/**\n  * Creates an instance of the keystroke handler.\n  *\n  * @param {module:core/editor/editor~Editor} editor\n  */\n\tfunction EditingKeystrokeHandler(editor) {\n\t\t_classCallCheck(this, EditingKeystrokeHandler);\n\n\t\t/**\n   * The editor instance.\n   *\n   * @readonly\n   * @member {module:core/editor/editor~Editor}\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (EditingKeystrokeHandler.__proto__ || Object.getPrototypeOf(EditingKeystrokeHandler)).call(this));\n\n\t\t_this.editor = editor;\n\t\treturn _this;\n\t}\n\n\t/**\n  * Registers a handler for the specified keystroke.\n  *\n  * The handler can be specified as a command name or a callback.\n  *\n  * @param {String|Array.<String|Number>} keystroke Keystroke defined in a format accepted by\n  * the {@link module:utils/keyboard~parseKeystroke} function.\n  * @param {Function|String} callback If a string is passed, then the keystroke will\n  * {@link module:core/editor/editor~Editor#execute execute a command}.\n  * If a function, then it will be called with the\n  * {@link module:engine/view/observer/keyobserver~KeyEventData key event data} object and\n  * a `cancel()` helper to both `preventDefault()` and `stopPropagation()` of the event.\n  */\n\n\n\t_createClass(EditingKeystrokeHandler, [{\n\t\tkey: 'set',\n\t\tvalue: function set(keystroke, callback) {\n\t\t\tvar _this2 = this;\n\n\t\t\tif (typeof callback == 'string') {\n\t\t\t\tvar commandName = callback;\n\n\t\t\t\tcallback = function callback(evtData, cancel) {\n\t\t\t\t\t_this2.editor.execute(commandName);\n\t\t\t\t\tcancel();\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t_get(EditingKeystrokeHandler.prototype.__proto__ || Object.getPrototypeOf(EditingKeystrokeHandler.prototype), 'set', this).call(this, keystroke, callback);\n\t\t}\n\t}]);\n\n\treturn EditingKeystrokeHandler;\n}(_keystrokehandler2.default);\n\nexports.default = EditingKeystrokeHandler;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-core/src/editingkeystrokehandler.js\n// module id = 293\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */\n\n/**\n * @module core/editor/editor\n */\n\nvar _config = require('@ckeditor/ckeditor5-utils/src/config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _plugincollection = require('../plugincollection');\n\nvar _plugincollection2 = _interopRequireDefault(_plugincollection);\n\nvar _commandcollection = require('../commandcollection');\n\nvar _commandcollection2 = _interopRequireDefault(_commandcollection);\n\nvar _locale = require('@ckeditor/ckeditor5-utils/src/locale');\n\nvar _locale2 = _interopRequireDefault(_locale);\n\nvar _datacontroller = require('@ckeditor/ckeditor5-engine/src/controller/datacontroller');\n\nvar _datacontroller2 = _interopRequireDefault(_datacontroller);\n\nvar _document = require('@ckeditor/ckeditor5-engine/src/model/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _observablemixin = require('@ckeditor/ckeditor5-utils/src/observablemixin');\n\nvar _observablemixin2 = _interopRequireDefault(_observablemixin);\n\nvar _mix = require('@ckeditor/ckeditor5-utils/src/mix');\n\nvar _mix2 = _interopRequireDefault(_mix);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Class representing a basic editor. It contains a base architecture, without much additional logic.\n *\n * See also {@link module:core/editor/standardeditor~StandardEditor}.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nvar Editor = function () {\n\t/**\n  * Creates a new instance of the Editor class.\n  *\n  * @param {Object} config The editor config.\n  */\n\tfunction Editor(config) {\n\t\t_classCallCheck(this, Editor);\n\n\t\tvar availablePlugins = this.constructor.build && this.constructor.build.plugins;\n\n\t\t/**\n   * Holds all configurations specific to this editor instance.\n   *\n   * @readonly\n   * @member {module:utils/config~Config}\n   */\n\t\tthis.config = new _config2.default(config, this.constructor.build && this.constructor.build.config);\n\n\t\tthis.config.define('plugins', availablePlugins);\n\n\t\t/**\n   * The plugins loaded and in use by this editor instance.\n   *\n   * @readonly\n   * @member {module:core/plugin~PluginCollection}\n   */\n\t\tthis.plugins = new _plugincollection2.default(this, availablePlugins);\n\n\t\t/**\n   * Commands registered to the editor.\n   *\n   * @readonly\n   * @member {module:core/commandcollection~CommandCollection}\n   */\n\t\tthis.commands = new _commandcollection2.default();\n\n\t\t/**\n   * @readonly\n   * @member {module:utils/locale~Locale}\n   */\n\t\tthis.locale = new _locale2.default(this.config.get('lang'));\n\n\t\t/**\n   * Shorthand for {@link module:utils/locale~Locale#t}.\n   *\n   * @see module:utils/locale~Locale#t\n   * @method #t\n   */\n\t\tthis.t = this.locale.t;\n\n\t\t/**\n   * The editor's model document.\n   *\n   * The center of the editor's abstract data model. The document contains\n   * {@link module:engine/model/document~Document#getRoot all editing roots},\n   * {@link module:engine/model/document~Document#selection} and allows\n   * applying changes to through the {@link module:engine/model/document~Document#batch batch interface}.\n   *\n   * Besides the model document, the editor usually contains two controllers –\n   * {@link #data data controller} and {@link #editing editing controller}.\n   * The former is used e.g. when setting or retrieving editor data and contains a useful\n   * set of methods for operating on the content. The latter controls user input and rendering\n   * the content for editing.\n   *\n   * @readonly\n   * @member {module:engine/model/document~Document}\n   */\n\t\tthis.document = new _document2.default();\n\n\t\t/**\n   * The {@link module:engine/controller/datacontroller~DataController data controller}.\n   *\n   * @readonly\n   * @member {module:engine/controller/datacontroller~DataController}\n   */\n\t\tthis.data = new _datacontroller2.default(this.document);\n\n\t\t/**\n   * Defines whether this editor is in read-only mode.\n   *\n   * In read-only mode the editor {@link #commands commands} are disabled so it is not possible\n   * to modify document using them.\n   *\n   * @observable\n   * @member {Boolean} #isReadOnly\n   */\n\t\tthis.set('isReadOnly', false);\n\n\t\t/**\n   * The {@link module:engine/controller/editingcontroller~EditingController editing controller}.\n   *\n   * This property is set by more specialized editor classes (such as {@link module:core/editor/standardeditor~StandardEditor}),\n   * however, it's required for features to work as their engine-related parts will try to connect converters.\n   *\n   * When defining a virtual editor class, like one working in Node.js, it's possible to plug a virtual\n   * editing controller which only instantiates necessary properties, but without any observers and listeners.\n   *\n   * @readonly\n   * @member {module:engine/controller/editingcontroller~EditingController} #editing\n   */\n\t}\n\n\t/**\n  * Loads and initializes plugins specified in the config.\n  *\n  * @returns {Promise} A promise which resolves once the initialization is completed.\n  */\n\n\n\t_createClass(Editor, [{\n\t\tkey: 'initPlugins',\n\t\tvalue: function initPlugins() {\n\t\t\tvar _this = this;\n\n\t\t\tvar that = this;\n\t\t\tvar config = this.config;\n\n\t\t\treturn loadPlugins().then(function (loadedPlugins) {\n\t\t\t\treturn initPlugins(loadedPlugins, 'init').then(function () {\n\t\t\t\t\treturn initPlugins(loadedPlugins, 'afterInit');\n\t\t\t\t});\n\t\t\t}).then(function () {\n\t\t\t\treturn _this.fire('pluginsReady');\n\t\t\t});\n\n\t\t\tfunction loadPlugins() {\n\t\t\t\tvar plugins = config.get('plugins') || [];\n\t\t\t\tvar removePlugins = config.get('removePlugins') || [];\n\n\t\t\t\treturn that.plugins.load(plugins, removePlugins);\n\t\t\t}\n\n\t\t\tfunction initPlugins(loadedPlugins, method) {\n\t\t\t\treturn loadedPlugins.reduce(function (promise, plugin) {\n\t\t\t\t\tif (!plugin[method]) {\n\t\t\t\t\t\treturn promise;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn promise.then(plugin[method].bind(plugin));\n\t\t\t\t}, Promise.resolve());\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Destroys the editor instance, releasing all resources used by it.\n   *\n   * @fires destroy\n   * @returns {Promise} A promise that resolves once the editor instance is fully destroyed.\n   */\n\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {\n\t\t\tvar _this2 = this;\n\n\t\t\tthis.fire('destroy');\n\n\t\t\tthis.stopListening();\n\n\t\t\tthis.commands.destroy();\n\n\t\t\treturn this.plugins.destroy().then(function () {\n\t\t\t\t_this2.document.destroy();\n\t\t\t\t_this2.data.destroy();\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * Executes specified command with given parameters.\n   *\n   * Shorthand for:\n   *\n   *\t\teditor.commands.get( commandName ).execute( ... );\n   *\n   * @param {String} commandName Name of command to execute.\n   * @param {*} [...commandParams] Command parameters.\n   */\n\n\t}, {\n\t\tkey: 'execute',\n\t\tvalue: function execute() {\n\t\t\tvar _commands;\n\n\t\t\t(_commands = this.commands).execute.apply(_commands, arguments);\n\t\t}\n\n\t\t/**\n   * Creates a basic editor instance.\n   *\n   * @param {Object} config The editor config. You can find the list of config options in\n   * {@link module:core/editor/editorconfig~EditorConfig}.\n   * @returns {Promise} Promise resolved once editor is ready.\n   * @returns {module:core/editor/editor~Editor} return.editor The editor instance.\n   */\n\n\t}], [{\n\t\tkey: 'create',\n\t\tvalue: function create(config) {\n\t\t\tvar _this3 = this;\n\n\t\t\treturn new Promise(function (resolve) {\n\t\t\t\tvar editor = new _this3(config);\n\n\t\t\t\tresolve(editor.initPlugins().then(function () {\n\t\t\t\t\teditor.fire('dataReady');\n\t\t\t\t\teditor.fire('ready');\n\t\t\t\t}).then(function () {\n\t\t\t\t\treturn editor;\n\t\t\t\t}));\n\t\t\t});\n\t\t}\n\t}]);\n\n\treturn Editor;\n}();\n\nexports.default = Editor;\n\n\n(0, _mix2.default)(Editor, _observablemixin2.default);\n\n/**\n * Fired after {@link #initPlugins plugins are initialized}.\n *\n * @event pluginsReady\n */\n\n/**\n * Fired when the editor UI is ready. This event won't be fired if the editor has no UI.\n *\n * @event uiReady\n */\n\n/**\n * Fired when the data loaded to the editor is ready. If a specific editor doesn't load\n * any data initially, this event will be fired right before {@link #event:ready}.\n *\n * @event dataReady\n */\n\n/**\n * Fired when {@link #event:pluginsReady plugins}, {@link #event:uiReady UI} and {@link #event:dataReady data} and all additional\n * editor components are ready.\n *\n * @event ready\n */\n\n/**\n * Fired when this editor instance is destroyed. The editor at this point is not usable and this event should be used to\n * perform the clean-up in any plugin.\n *\n * @event destroy\n */\n\n/**\n * Additional data built into the editor class. It's used while bundling the editor in order to provide\n * the default set of plugins and config options which are later used during editor initialization.\n *\n * Two properties are supported:\n *\n * * `plugins` – an array of plugin constructors. They will be automatically initialized by the editor, unless listed\n * in `config.removePlugins` or unless `config.plugins` is passed.\n * * `config` – the defalt config options.\n *\n * @static\n * @member {Object} module:core/editor/editor~Editor.build\n */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-core/src/editor/editor.js\n// module id = 294\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _editor = require('./editor');\n\nvar _editor2 = _interopRequireDefault(_editor);\n\nvar _editingkeystrokehandler = require('../editingkeystrokehandler');\n\nvar _editingkeystrokehandler2 = _interopRequireDefault(_editingkeystrokehandler);\n\nvar _editingcontroller = require('@ckeditor/ckeditor5-engine/src/controller/editingcontroller');\n\nvar _editingcontroller2 = _interopRequireDefault(_editingcontroller);\n\nvar _getdatafromelement = require('@ckeditor/ckeditor5-utils/src/dom/getdatafromelement');\n\nvar _getdatafromelement2 = _interopRequireDefault(_getdatafromelement);\n\nvar _setdatainelement = require('@ckeditor/ckeditor5-utils/src/dom/setdatainelement');\n\nvar _setdatainelement2 = _interopRequireDefault(_setdatainelement);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module core/editor/standardeditor\n */\n\n/**\n * Class representing a typical browser-based editor. It handles a single source element and\n * uses {@link module:engine/controller/editingcontroller~EditingController}.\n */\nvar StandardEditor = function (_Editor) {\n\t_inherits(StandardEditor, _Editor);\n\n\t/**\n  * Creates a new instance of the standard editor.\n  *\n  * @param {HTMLElement} element The DOM element that will be the source\n  * for the created editor.\n  * @param {Object} config The editor config.\n  */\n\tfunction StandardEditor(element, config) {\n\t\t_classCallCheck(this, StandardEditor);\n\n\t\t/**\n   * The element on which the editor has been initialized.\n   *\n   * @readonly\n   * @member {HTMLElement}\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (StandardEditor.__proto__ || Object.getPrototypeOf(StandardEditor)).call(this, config));\n\n\t\t_this.element = element;\n\n\t\t// Documented in Editor.\n\t\t_this.editing = new _editingcontroller2.default(_this.document);\n\t\t_this.editing.view.bind('isReadOnly').to(_this);\n\n\t\t/**\n   * Instance of the {@link module:core/editingkeystrokehandler~EditingKeystrokeHandler}.\n   *\n   * @readonly\n   * @member {module:core/editingkeystrokehandler~EditingKeystrokeHandler}\n   */\n\t\t_this.keystrokes = new _editingkeystrokehandler2.default(_this);\n\n\t\t/**\n   * Editor UI instance.\n   *\n   * This property is set by more specialized editor constructors. However, it's required\n   * for plugins to work (their UI-related part will try to interact with editor UI),\n   * so every editor class which is meant to work with default plugins should set this property.\n   *\n   * @readonly\n   * @member {module:core/editor/editorui~EditorUI} #ui\n   */\n\n\t\t_this.keystrokes.listenTo(_this.editing.view);\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(StandardEditor, [{\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {\n\t\t\tvar _this2 = this;\n\n\t\t\treturn Promise.resolve().then(function () {\n\t\t\t\treturn _this2.keystrokes.destroy();\n\t\t\t}).then(function () {\n\t\t\t\treturn _this2.editing.destroy();\n\t\t\t}).then(_get(StandardEditor.prototype.__proto__ || Object.getPrototypeOf(StandardEditor.prototype), 'destroy', this).call(this));\n\t\t}\n\n\t\t/**\n   * Sets the data in the editor's main root.\n   *\n   * @param {*} data The data to load.\n   */\n\n\t}, {\n\t\tkey: 'setData',\n\t\tvalue: function setData(data) {\n\t\t\tthis.data.set(data);\n\t\t}\n\n\t\t/**\n   * Gets the data from the editor's main root.\n   */\n\n\t}, {\n\t\tkey: 'getData',\n\t\tvalue: function getData() {\n\t\t\treturn this.data.get();\n\t\t}\n\n\t\t/**\n   * Updates the {@link #element editor element}'s content with the data.\n   */\n\n\t}, {\n\t\tkey: 'updateEditorElement',\n\t\tvalue: function updateEditorElement() {\n\t\t\t(0, _setdatainelement2.default)(this.element, this.getData());\n\t\t}\n\n\t\t/**\n   * Loads the data from the {@link #element editor element} to the main root.\n   */\n\n\t}, {\n\t\tkey: 'loadDataFromEditorElement',\n\t\tvalue: function loadDataFromEditorElement() {\n\t\t\tthis.setData((0, _getdatafromelement2.default)(this.element));\n\t\t}\n\n\t\t/**\n   * Creates a standard editor instance.\n   *\n   * @param {HTMLElement} element See {@link module:core/editor/standardeditor~StandardEditor}'s param.\n   * @param {Object} config The editor config. You can find the list of config options in\n   * {@link module:core/editor/editorconfig~EditorConfig}.\n   * @returns {Promise} Promise resolved once editor is ready.\n   * @returns {module:core/editor/standardeditor~StandardEditor} return.editor The editor instance.\n   */\n\n\t}], [{\n\t\tkey: 'create',\n\t\tvalue: function create(element, config) {\n\t\t\tvar _this3 = this;\n\n\t\t\treturn new Promise(function (resolve) {\n\t\t\t\tvar editor = new _this3(element, config);\n\n\t\t\t\tresolve(editor.initPlugins().then(function () {\n\t\t\t\t\teditor.fire('dataReady');\n\t\t\t\t\teditor.fire('ready');\n\t\t\t\t}).then(function () {\n\t\t\t\t\treturn editor;\n\t\t\t\t}));\n\t\t\t});\n\t\t}\n\t}]);\n\n\treturn StandardEditor;\n}(_editor2.default);\n\nexports.default = StandardEditor;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-core/src/editor/standardeditor.js\n// module id = 295\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */\n\n/**\n * @module core/plugincollection\n */\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nvar _log = require('@ckeditor/ckeditor5-utils/src/log');\n\nvar _log2 = _interopRequireDefault(_log);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Manages a list of CKEditor plugins, including loading, resolving dependencies and initialization.\n */\nvar PluginCollection = function () {\n\t/**\n  * Creates an instance of the PluginCollection class.\n  * Allows loading and initializing plugins and their dependencies.\n  *\n  * @param {module:core/editor/editor~Editor} editor\n  * @param {Array.<Function>} [availablePlugins] Plugins (constructors) which the collection will be able to use\n  * when {@link module:core/plugincollection~PluginCollection#load} is used with plugin names (strings, instead of constructors).\n  * Usually, the editor will pass its built-in plugins to the collection so they can later be\n  * used in `config.plugins` or `config.removePlugins` by names.\n  */\n\tfunction PluginCollection(editor) {\n\t\tvar availablePlugins = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n\t\t_classCallCheck(this, PluginCollection);\n\n\t\t/**\n   * @protected\n   * @member {module:core/editor/editor~Editor} module:core/plugin~PluginCollection#_editor\n   */\n\t\tthis._editor = editor;\n\n\t\t/**\n   * Map of plugin constructors which can be retrieved by their names.\n   *\n   * @protected\n   * @member {Map.<String|Function,Function>} module:core/plugin~PluginCollection#_availablePlugins\n   */\n\t\tthis._availablePlugins = new Map();\n\n\t\t/**\n   * @protected\n   * @member {Map} module:core/plugin~PluginCollection#_plugins\n   */\n\t\tthis._plugins = new Map();\n\n\t\tvar _iteratorNormalCompletion = true;\n\t\tvar _didIteratorError = false;\n\t\tvar _iteratorError = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator = availablePlugins[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\tvar PluginConstructor = _step.value;\n\n\t\t\t\tthis._availablePlugins.set(PluginConstructor, PluginConstructor);\n\n\t\t\t\tif (PluginConstructor.pluginName) {\n\t\t\t\t\tthis._availablePlugins.set(PluginConstructor.pluginName, PluginConstructor);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t_didIteratorError = true;\n\t\t\t_iteratorError = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t_iterator.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n  * Collection iterator. Returns `[ PluginConstructor, pluginInstance ]` pairs.\n  */\n\n\n\t_createClass(PluginCollection, [{\n\t\tkey: Symbol.iterator,\n\t\tvalue: regeneratorRuntime.mark(function value() {\n\t\t\tvar _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, entry;\n\n\t\t\treturn regeneratorRuntime.wrap(function value$(_context) {\n\t\t\t\twhile (1) {\n\t\t\t\t\tswitch (_context.prev = _context.next) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t_iteratorNormalCompletion2 = true;\n\t\t\t\t\t\t\t_didIteratorError2 = false;\n\t\t\t\t\t\t\t_iteratorError2 = undefined;\n\t\t\t\t\t\t\t_context.prev = 3;\n\t\t\t\t\t\t\t_iterator2 = this._plugins[Symbol.iterator]();\n\n\t\t\t\t\t\tcase 5:\n\t\t\t\t\t\t\tif (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n\t\t\t\t\t\t\t\t_context.next = 13;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tentry = _step2.value;\n\n\t\t\t\t\t\t\tif (!(typeof entry[0] == 'function')) {\n\t\t\t\t\t\t\t\t_context.next = 10;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_context.next = 10;\n\t\t\t\t\t\t\treturn entry;\n\n\t\t\t\t\t\tcase 10:\n\t\t\t\t\t\t\t_iteratorNormalCompletion2 = true;\n\t\t\t\t\t\t\t_context.next = 5;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 13:\n\t\t\t\t\t\t\t_context.next = 19;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 15:\n\t\t\t\t\t\t\t_context.prev = 15;\n\t\t\t\t\t\t\t_context.t0 = _context['catch'](3);\n\t\t\t\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t\t\t\t_iteratorError2 = _context.t0;\n\n\t\t\t\t\t\tcase 19:\n\t\t\t\t\t\t\t_context.prev = 19;\n\t\t\t\t\t\t\t_context.prev = 20;\n\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase 22:\n\t\t\t\t\t\t\t_context.prev = 22;\n\n\t\t\t\t\t\t\tif (!_didIteratorError2) {\n\t\t\t\t\t\t\t\t_context.next = 25;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthrow _iteratorError2;\n\n\t\t\t\t\t\tcase 25:\n\t\t\t\t\t\t\treturn _context.finish(22);\n\n\t\t\t\t\t\tcase 26:\n\t\t\t\t\t\t\treturn _context.finish(19);\n\n\t\t\t\t\t\tcase 27:\n\t\t\t\t\t\tcase 'end':\n\t\t\t\t\t\t\treturn _context.stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, value, this, [[3, 15, 19, 27], [20,, 22, 26]]);\n\t\t})\n\n\t\t/**\n   * Gets the plugin instance by its constructor or name.\n   *\n   * @param {Function|String} key The plugin constructor or {@link module:core/plugin~PluginInterface.pluginName name}.\n   * @returns {module:core/plugin~PluginInterface}\n   */\n\n\t}, {\n\t\tkey: 'get',\n\t\tvalue: function get(key) {\n\t\t\treturn this._plugins.get(key);\n\t\t}\n\n\t\t/**\n   * Loads a set of plugins and adds them to the collection.\n   *\n   * @param {Array.<Function|String>} plugins An array of {@link module:core/plugin~PluginInterface plugin constructors}\n   * or {@link module:core/plugin~PluginInterface.pluginName plugin names}. The second option (names) work only if\n   * `availablePlugins` were passed to the {@link #constructor}.\n   * @param {Array.<String|Function>} [removePlugins] Names of plugins or plugin constructors\n   * which should not be loaded (despite being specified in the `plugins` array).\n   * @returns {Promise} A promise which gets resolved once all plugins are loaded and available into the\n   * collection.\n   * @returns {Promise.<Array.<module:core/plugin~PluginInterface>>} returns.loadedPlugins The array of loaded plugins.\n   */\n\n\t}, {\n\t\tkey: 'load',\n\t\tvalue: function load(plugins) {\n\t\t\tvar removePlugins = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n\t\t\tvar that = this;\n\t\t\tvar editor = this._editor;\n\t\t\tvar loading = new Set();\n\t\t\tvar loaded = [];\n\n\t\t\tvar pluginConstructors = mapToAvailableConstructors(plugins);\n\t\t\tvar removePluginConstructors = mapToAvailableConstructors(removePlugins);\n\t\t\tvar missingPlugins = getMissingPluginNames(plugins);\n\n\t\t\tif (missingPlugins) {\n\t\t\t\t// TODO update this error docs with links to docs because it will be a frequent problem.\n\n\t\t\t\t/**\n     * Some plugins are not available and could not be loaded.\n     *\n     * Plugin classes (constructors) need to be provided to the editor before they can be loaded by name.\n     * This is usually done by the builder by setting the {@link module:core/editor/editor~Editor.build}\n     * property.\n     *\n     * @error plugincollection-plugin-not-found\n     * @param {Array.<String>} plugins The name of the plugins which could not be loaded.\n     */\n\t\t\t\tvar errorMsg = 'plugincollection-plugin-not-found: Some plugins are not available and could not be loaded.';\n\n\t\t\t\t// Log the error so it's more visible on the console. Hopefuly, for better DX.\n\t\t\t\t_log2.default.error(errorMsg, { plugins: missingPlugins });\n\n\t\t\t\treturn Promise.reject(new _ckeditorerror2.default(errorMsg, { plugins: missingPlugins }));\n\t\t\t}\n\n\t\t\treturn Promise.all(pluginConstructors.map(loadPlugin)).then(function () {\n\t\t\t\treturn loaded;\n\t\t\t});\n\n\t\t\tfunction loadPlugin(PluginConstructor) {\n\t\t\t\tif (removePluginConstructors.includes(PluginConstructor)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// The plugin is already loaded or being loaded - do nothing.\n\t\t\t\tif (that.get(PluginConstructor) || loading.has(PluginConstructor)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treturn instantiatePlugin(PluginConstructor).catch(function (err) {\n\t\t\t\t\t/**\n      * It was not possible to load the plugin.\n      *\n      * @error plugincollection-load\n      * @param {String} plugin The name of the plugin that could not be loaded.\n      */\n\t\t\t\t\t_log2.default.error('plugincollection-load: It was not possible to load the plugin.', { plugin: PluginConstructor });\n\n\t\t\t\t\tthrow err;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction instantiatePlugin(PluginConstructor) {\n\t\t\t\treturn new Promise(function (resolve) {\n\t\t\t\t\tloading.add(PluginConstructor);\n\n\t\t\t\t\tif (PluginConstructor.requires) {\n\t\t\t\t\t\tPluginConstructor.requires.forEach(function (RequiredPluginConstructorOrName) {\n\t\t\t\t\t\t\tvar RequiredPluginConstructor = getPluginConstructor(RequiredPluginConstructorOrName);\n\n\t\t\t\t\t\t\tif (removePlugins.includes(RequiredPluginConstructor)) {\n\t\t\t\t\t\t\t\t/**\n         * Cannot load a plugin because one of its dependencies is listed in the `removePlugins` option.\n         *\n         * @error plugincollection-required\n         * @param {Function} plugin The required plugin.\n         * @param {Function} requiredBy The parent plugin.\n         */\n\t\t\t\t\t\t\t\tthrow new _ckeditorerror2.default('plugincollection-required: Cannot load a plugin because one of its dependencies is listed in' + 'the `removePlugins` option.', { plugin: RequiredPluginConstructor, requiredBy: PluginConstructor });\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tloadPlugin(RequiredPluginConstructor);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tvar plugin = new PluginConstructor(editor);\n\t\t\t\t\tthat._add(PluginConstructor, plugin);\n\t\t\t\t\tloaded.push(plugin);\n\n\t\t\t\t\tresolve();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction getPluginConstructor(PluginConstructorOrName) {\n\t\t\t\tif (typeof PluginConstructorOrName == 'function') {\n\t\t\t\t\treturn PluginConstructorOrName;\n\t\t\t\t}\n\n\t\t\t\treturn that._availablePlugins.get(PluginConstructorOrName);\n\t\t\t}\n\n\t\t\tfunction getMissingPluginNames(plugins) {\n\t\t\t\tvar missingPlugins = [];\n\n\t\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\t\tvar _didIteratorError3 = false;\n\t\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator3 = plugins[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\t\tvar pluginNameOrConstructor = _step3.value;\n\n\t\t\t\t\t\tif (!getPluginConstructor(pluginNameOrConstructor)) {\n\t\t\t\t\t\t\tmissingPlugins.push(pluginNameOrConstructor);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t\t_iteratorError3 = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn missingPlugins.length ? missingPlugins : null;\n\t\t\t}\n\n\t\t\tfunction mapToAvailableConstructors(plugins) {\n\t\t\t\treturn plugins.map(function (pluginNameOrConstructor) {\n\t\t\t\t\treturn getPluginConstructor(pluginNameOrConstructor);\n\t\t\t\t}).filter(function (PluginConstructor) {\n\t\t\t\t\treturn !!PluginConstructor;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Destroys all loaded plugins.\n   *\n   * @returns {Promise}\n   */\n\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {\n\t\t\tvar promises = Array.from(this).map(function (_ref) {\n\t\t\t\tvar _ref2 = _slicedToArray(_ref, 2),\n\t\t\t\t    pluginInstance = _ref2[1];\n\n\t\t\t\treturn pluginInstance;\n\t\t\t}).filter(function (pluginInstance) {\n\t\t\t\treturn typeof pluginInstance.destroy == 'function';\n\t\t\t}).map(function (pluginInstance) {\n\t\t\t\treturn pluginInstance.destroy();\n\t\t\t});\n\n\t\t\treturn Promise.all(promises);\n\t\t}\n\n\t\t/**\n   * Adds the plugin to the collection. Exposed mainly for testing purposes.\n   *\n   * @protected\n   * @param {Function} PluginConstructor The plugin constructor.\n   * @param {module:core/plugin~PluginInterface} plugin The instance of the plugin.\n   */\n\n\t}, {\n\t\tkey: '_add',\n\t\tvalue: function _add(PluginConstructor, plugin) {\n\t\t\tthis._plugins.set(PluginConstructor, plugin);\n\n\t\t\tvar pluginName = PluginConstructor.pluginName;\n\n\t\t\tif (!pluginName) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this._plugins.has(pluginName)) {\n\t\t\t\t/**\n     * Two plugins with the same {@link module:core/plugin~PluginInterface.pluginName} were loaded.\n     * This may lead to runtime conflicts between these plugins. This usually means that incorrect\n     * params were passed to {@link module:core/editor/editor~Editor.create}.\n     *\n     * @error plugincollection-plugin-name-conflict\n     * @param {String} pluginName The duplicated plugin name.\n     * @param {Function} plugin1 The first plugin constructor.\n     * @param {Function} plugin2 The second plugin constructor.\n     */\n\t\t\t\t_log2.default.warn('plugincollection-plugin-name-conflict: Two plugins with the same name were loaded.', { pluginName: pluginName, plugin1: this._plugins.get(pluginName).constructor, plugin2: PluginConstructor });\n\t\t\t} else {\n\t\t\t\tthis._plugins.set(pluginName, plugin);\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn PluginCollection;\n}();\n\nexports.default = PluginCollection;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-core/src/plugincollection.js\n// module id = 296\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _standardeditor = require('@ckeditor/ckeditor5-core/src/editor/standardeditor');\n\nvar _standardeditor2 = _interopRequireDefault(_standardeditor);\n\nvar _htmldataprocessor = require('@ckeditor/ckeditor5-engine/src/dataprocessor/htmldataprocessor');\n\nvar _htmldataprocessor2 = _interopRequireDefault(_htmldataprocessor);\n\nvar _classiceditorui = require('./classiceditorui');\n\nvar _classiceditorui2 = _interopRequireDefault(_classiceditorui);\n\nvar _classiceditoruiview = require('./classiceditoruiview');\n\nvar _classiceditoruiview2 = _interopRequireDefault(_classiceditoruiview);\n\nvar _elementreplacer = require('@ckeditor/ckeditor5-utils/src/elementreplacer');\n\nvar _elementreplacer2 = _interopRequireDefault(_elementreplacer);\n\nrequire('../theme/theme.scss');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module editor-classic/classiceditor\n */\n\n/**\n * Classic editor. Uses an inline editable and a sticky toolbar, all\n * enclosed in a boxed UI.\n *\n * @extends module:core/editor/standardeditor~StandardEditor\n */\nvar ClassicEditor = function (_StandardEditor) {\n\t_inherits(ClassicEditor, _StandardEditor);\n\n\t/**\n  * Creates an instance of the classic editor.\n  *\n  * @param {HTMLElement} element The DOM element that will be the source for the created editor.\n  * The data will be loaded from it and loaded back to it once the editor is destroyed.\n  * @param {Object} config The editor configuration.\n  */\n\tfunction ClassicEditor(element, config) {\n\t\t_classCallCheck(this, ClassicEditor);\n\n\t\tvar _this = _possibleConstructorReturn(this, (ClassicEditor.__proto__ || Object.getPrototypeOf(ClassicEditor)).call(this, element, config));\n\n\t\t_this.document.createRoot();\n\t\t_this.data.processor = new _htmldataprocessor2.default();\n\t\t_this.ui = new _classiceditorui2.default(_this, new _classiceditoruiview2.default(_this.locale));\n\n\t\t/**\n   * The element replacer instance used to hide the editor element.\n   *\n   * @protected\n   * @member {module:utils/elementreplacer~ElementReplacer}\n   */\n\t\t_this._elementReplacer = new _elementreplacer2.default();\n\t\treturn _this;\n\t}\n\n\t/**\n  * Destroys the editor instance, releasing all resources used by it.\n  *\n  * Updates the original editor element with the data.\n  *\n  * @returns {Promise}\n  */\n\n\n\t_createClass(ClassicEditor, [{\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {\n\t\t\tthis.updateEditorElement();\n\t\t\tthis._elementReplacer.restore();\n\t\t\tthis.ui.destroy();\n\n\t\t\treturn _get(ClassicEditor.prototype.__proto__ || Object.getPrototypeOf(ClassicEditor.prototype), 'destroy', this).call(this);\n\t\t}\n\n\t\t/**\n   * Creates a classic editor instance.\n   *\n   *\t\tClassicEditor.create( document.querySelector( '#editor' ), {\n   *\t\t\tplugins: [ Delete, Enter, Typing, Paragraph, Undo, Bold, Italic ],\n   *\t\t\ttoolbar: [ 'bold', 'italic', 'undo', 'redo' ]\n   *\t\t} )\n   *\t\t.then( editor => {\n   *\t\t\tconsole.log( 'Editor was initialized', editor );\n   *\t\t} )\n   *\t\t.catch( err => {\n   *\t\t\tconsole.error( err.stack );\n   *\t\t} );\n   *\n   * @param {HTMLElement} element See {@link module:editor-classic/classiceditor~ClassicEditor#constructor}'s parameters.\n   * @param {Object} config See {@link module:editor-classic/classiceditor~ClassicEditor#constructor}'s parameters.\n   * @returns {Promise} A promise resolved once the editor is ready.\n   * @returns {module:core/editor/standardeditor~StandardEditor} return.editor The editor instance.\n   */\n\n\t}], [{\n\t\tkey: 'create',\n\t\tvalue: function create(element, config) {\n\t\t\tvar _this2 = this;\n\n\t\t\treturn new Promise(function (resolve) {\n\t\t\t\tvar editor = new _this2(element, config);\n\n\t\t\t\tresolve(editor.initPlugins().then(function () {\n\t\t\t\t\treturn editor._elementReplacer.replace(element, editor.ui.view.element);\n\t\t\t\t}).then(function () {\n\t\t\t\t\teditor.ui.init();\n\t\t\t\t\teditor.fire('uiReady');\n\t\t\t\t}).then(function () {\n\t\t\t\t\treturn editor.editing.view.attachDomRoot(editor.ui.view.editableElement);\n\t\t\t\t}).then(function () {\n\t\t\t\t\treturn editor.loadDataFromEditorElement();\n\t\t\t\t}).then(function () {\n\t\t\t\t\teditor.fire('dataReady');\n\t\t\t\t\teditor.fire('ready');\n\t\t\t\t}).then(function () {\n\t\t\t\t\treturn editor;\n\t\t\t\t}));\n\t\t\t});\n\t\t}\n\t}]);\n\n\treturn ClassicEditor;\n}(_standardeditor2.default);\n\nexports.default = ClassicEditor;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-editor-classic/src/classiceditor.js\n// module id = 297\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */\n\n/**\n * @module editor-classic/classiceditorui\n */\n\nvar _componentfactory = require('@ckeditor/ckeditor5-ui/src/componentfactory');\n\nvar _componentfactory2 = _interopRequireDefault(_componentfactory);\n\nvar _focustracker = require('@ckeditor/ckeditor5-utils/src/focustracker');\n\nvar _focustracker2 = _interopRequireDefault(_focustracker);\n\nvar _enabletoolbarkeyboardfocus = require('@ckeditor/ckeditor5-ui/src/toolbar/enabletoolbarkeyboardfocus');\n\nvar _enabletoolbarkeyboardfocus2 = _interopRequireDefault(_enabletoolbarkeyboardfocus);\n\nvar _normalizetoolbarconfig = require('@ckeditor/ckeditor5-ui/src/toolbar/normalizetoolbarconfig');\n\nvar _normalizetoolbarconfig2 = _interopRequireDefault(_normalizetoolbarconfig);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * The classic editor UI class.\n *\n * @implements module:core/editor/editorui~EditorUI\n */\nvar ClassicEditorUI = function () {\n\t/**\n  * Creates an instance of the editor UI class.\n  *\n  * @param {module:core/editor/editor~Editor} editor The editor instance.\n  * @param {module:ui/editorui/editoruiview~EditorUIView} view The view of the UI.\n  */\n\tfunction ClassicEditorUI(editor, view) {\n\t\t_classCallCheck(this, ClassicEditorUI);\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tthis.editor = editor;\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tthis.view = view;\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tthis.componentFactory = new _componentfactory2.default(editor);\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tthis.focusTracker = new _focustracker2.default();\n\n\t\t/**\n   * A normalized `config.toolbar` object.\n   *\n   * @type {Object}\n   * @private\n   */\n\t\tthis._toolbarConfig = (0, _normalizetoolbarconfig2.default)(editor.config.get('toolbar'));\n\n\t\t// Set–up the view.\n\t\tview.set('width', editor.config.get('ui.width'));\n\t\tview.set('height', editor.config.get('ui.height'));\n\n\t\t// Set–up the toolbar.\n\t\tview.toolbar.bind('isActive').to(this.focusTracker, 'isFocused');\n\t\tview.toolbar.limiterElement = view.element;\n\n\t\tif (this._toolbarConfig && this._toolbarConfig.viewportTopOffset) {\n\t\t\tview.toolbar.viewportTopOffset = this._toolbarConfig.viewportTopOffset;\n\t\t}\n\n\t\t// Setup the editable.\n\t\tvar editingRoot = editor.editing.createRoot('div');\n\t\tview.editable.bind('isReadOnly').to(editingRoot);\n\t\tview.editable.bind('isFocused').to(editor.editing.view);\n\t\tview.editable.name = editingRoot.rootName;\n\t\tthis.focusTracker.add(view.editableElement);\n\t}\n\n\t/**\n  * Initializes the UI.\n  */\n\n\n\t_createClass(ClassicEditorUI, [{\n\t\tkey: 'init',\n\t\tvalue: function init() {\n\t\t\tvar editor = this.editor;\n\n\t\t\tthis.view.init();\n\n\t\t\tif (this._toolbarConfig) {\n\t\t\t\tthis.view.toolbar.fillFromConfig(this._toolbarConfig.items, this.componentFactory);\n\t\t\t}\n\n\t\t\t(0, _enabletoolbarkeyboardfocus2.default)({\n\t\t\t\torigin: editor.editing.view,\n\t\t\t\toriginFocusTracker: this.focusTracker,\n\t\t\t\toriginKeystrokeHandler: editor.keystrokes,\n\t\t\t\ttoolbar: this.view.toolbar\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * Destroys the UI.\n   */\n\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {\n\t\t\tthis.view.destroy();\n\t\t}\n\t}]);\n\n\treturn ClassicEditorUI;\n}();\n\nexports.default = ClassicEditorUI;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-editor-classic/src/classiceditorui.js\n// module id = 298\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _boxededitoruiview = require('@ckeditor/ckeditor5-ui/src/editorui/boxed/boxededitoruiview');\n\nvar _boxededitoruiview2 = _interopRequireDefault(_boxededitoruiview);\n\nvar _inlineeditableuiview = require('@ckeditor/ckeditor5-ui/src/editableui/inline/inlineeditableuiview');\n\nvar _inlineeditableuiview2 = _interopRequireDefault(_inlineeditableuiview);\n\nvar _stickytoolbarview = require('@ckeditor/ckeditor5-ui/src/toolbar/sticky/stickytoolbarview');\n\nvar _stickytoolbarview2 = _interopRequireDefault(_stickytoolbarview);\n\nvar _template = require('@ckeditor/ckeditor5-ui/src/template');\n\nvar _template2 = _interopRequireDefault(_template);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module editor-classic/classiceditoruiview\n */\n\n/**\n * Classic editor UI view. Uses an inline editable and a sticky toolbar, all\n * enclosed in a boxed UI view.\n *\n * @extends module:ui/editorui/boxed/boxededitoruiview~BoxedEditorUIView\n */\nvar ClassicEditorUIView = function (_BoxedEditorUIView) {\n\t_inherits(ClassicEditorUIView, _BoxedEditorUIView);\n\n\t/**\n  * Creates an instance of the classic editor UI view.\n  *\n  * @param {module:utils/locale~Locale} locale The {@link module:core/editor/editor~Editor#locale} instance.\n  */\n\tfunction ClassicEditorUIView(locale) {\n\t\t_classCallCheck(this, ClassicEditorUIView);\n\n\t\t/**\n   * A sticky toolbar view instance.\n   *\n   * @readonly\n   * @member {module:ui/toolbar/sticky/stickytoolbarview~StickyToolbarView}\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (ClassicEditorUIView.__proto__ || Object.getPrototypeOf(ClassicEditorUIView)).call(this, locale));\n\n\t\t_this.toolbar = new _stickytoolbarview2.default(locale);\n\n\t\t_template2.default.extend(_this.toolbar.template, {\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-editor-toolbar'\n\t\t\t}\n\t\t});\n\n\t\t/**\n   * Editable UI view.\n   *\n   * @readonly\n   * @member {module:ui/editableui/inline/inlineeditableuiview~InlineEditableUIView}\n   */\n\t\t_this.editable = new _inlineeditableuiview2.default(locale);\n\n\t\t_this.top.add(_this.toolbar);\n\t\t_this.main.add(_this.editable);\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(ClassicEditorUIView, [{\n\t\tkey: 'editableElement',\n\t\tget: function get() {\n\t\t\treturn this.editable.element;\n\t\t}\n\t}]);\n\n\treturn ClassicEditorUIView;\n}(_boxededitoruiview2.default);\n\nexports.default = ClassicEditorUIView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-editor-classic/src/classiceditoruiview.js\n// module id = 299\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */\n\n/**\n * @module engine/controller/datacontroller\n */\n\nvar _mix = require('@ckeditor/ckeditor5-utils/src/mix');\n\nvar _mix2 = _interopRequireDefault(_mix);\n\nvar _observablemixin = require('@ckeditor/ckeditor5-utils/src/observablemixin');\n\nvar _observablemixin2 = _interopRequireDefault(_observablemixin);\n\nvar _mapper = require('../conversion/mapper');\n\nvar _mapper2 = _interopRequireDefault(_mapper);\n\nvar _modelconversiondispatcher = require('../conversion/modelconversiondispatcher');\n\nvar _modelconversiondispatcher2 = _interopRequireDefault(_modelconversiondispatcher);\n\nvar _modelToViewConverters = require('../conversion/model-to-view-converters');\n\nvar _viewconversiondispatcher = require('../conversion/viewconversiondispatcher');\n\nvar _viewconversiondispatcher2 = _interopRequireDefault(_viewconversiondispatcher);\n\nvar _viewToModelConverters = require('../conversion/view-to-model-converters');\n\nvar _documentfragment = require('../view/documentfragment');\n\nvar _documentfragment2 = _interopRequireDefault(_documentfragment);\n\nvar _range = require('../model/range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _position = require('../model/position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _insertcontent = require('./insertcontent');\n\nvar _insertcontent2 = _interopRequireDefault(_insertcontent);\n\nvar _deletecontent = require('./deletecontent');\n\nvar _deletecontent2 = _interopRequireDefault(_deletecontent);\n\nvar _modifyselection = require('./modifyselection');\n\nvar _modifyselection2 = _interopRequireDefault(_modifyselection);\n\nvar _getselectedcontent = require('./getselectedcontent');\n\nvar _getselectedcontent2 = _interopRequireDefault(_getselectedcontent);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Controller for the data pipeline. The data pipeline controls how data is retrieved from the document\n * and set inside it. Hence, the controller features two methods which allow to {@link ~DataController#get get}\n * and {@link ~DataController#set set} data of the {@link ~DataController#model model}\n * using given:\n *\n * * {@link module:engine/dataprocessor/dataprocessor~DataProcessor data processor},\n * * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher model to view} and\n * * {@link module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher view to model} converters.\n *\n * @mixes module:utils/emittermixin~ObservableMixin\n */\nvar DataController = function () {\n\t/**\n  * Creates data controller instance.\n  *\n  * @param {module:engine/model/document~Document} model Document model.\n  * @param {module:engine/dataprocessor/dataprocessor~DataProcessor} [dataProcessor] Data processor which should used by the controller.\n  */\n\tfunction DataController(model, dataProcessor) {\n\t\tvar _this = this;\n\n\t\t_classCallCheck(this, DataController);\n\n\t\t/**\n   * Document model.\n   *\n   * @readonly\n   * @member {module:engine/model/document~Document}\n   */\n\t\tthis.model = model;\n\n\t\t/**\n   * Data processor used during the conversion.\n   *\n   * @readonly\n   * @member {module:engine/dataProcessor~DataProcessor}\n   */\n\t\tthis.processor = dataProcessor;\n\n\t\t/**\n   * Mapper used for the conversion. It has no permanent bindings, because they are created when getting data and\n   * cleared directly after data are converted. However, the mapper is defined as class property, because\n   * it needs to be passed to the `ModelConversionDispatcher` as a conversion API.\n   *\n   * @member {module:engine/conversion/mapper~Mapper}\n   */\n\t\tthis.mapper = new _mapper2.default();\n\n\t\t/**\n   * Model to view conversion dispatcher used by the {@link #get get method}.\n   * To attach model to view converter to the data pipeline you need to add lister to this property:\n   *\n   *\t\tdata.modelToView( 'insert:$element', customInsertConverter );\n   *\n   * Or use {@link module:engine/conversion/buildmodelconverter~ModelConverterBuilder}:\n   *\n   *\t\tbuildModelConverter().for( data.modelToView ).fromAttribute( 'bold' ).toElement( 'b' );\n   *\n   * @readonly\n   * @member {module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher}\n   */\n\t\tthis.modelToView = new _modelconversiondispatcher2.default(this.model, {\n\t\t\tmapper: this.mapper\n\t\t});\n\t\tthis.modelToView.on('insert:$text', (0, _modelToViewConverters.insertText)(), { priority: 'lowest' });\n\n\t\t/**\n   * View to model conversion dispatcher used by the {@link #set set method}.\n   * To attach view to model converter to the data pipeline you need to add lister to this property:\n   *\n   *\t\tdata.viewToModel( 'element', customElementConverter );\n   *\n   * Or use {@link module:engine/conversion/buildviewconverter~ViewConverterBuilder}:\n   *\n   *\t\tbuildViewConverter().for( data.viewToModel ).fromElement( 'b' ).toAttribute( 'bold', 'true' );\n   *\n   * @readonly\n   * @member {module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher}\n   */\n\t\tthis.viewToModel = new _viewconversiondispatcher2.default({\n\t\t\tschema: model.schema\n\t\t});\n\n\t\t// Define default converters for text and elements.\n\t\t//\n\t\t// Note that if there is no default converter for the element it will be skipped, for instance `<b>foo</b>` will be\n\t\t// converted to nothing. We add `convertToModelFragment` as a last converter so it converts children of that\n\t\t// element to the document fragment so `<b>foo</b>` will be converted to `foo` if there is no converter for `<b>`.\n\t\tthis.viewToModel.on('text', (0, _viewToModelConverters.convertText)(), { priority: 'lowest' });\n\t\tthis.viewToModel.on('element', (0, _viewToModelConverters.convertToModelFragment)(), { priority: 'lowest' });\n\t\tthis.viewToModel.on('documentFragment', (0, _viewToModelConverters.convertToModelFragment)(), { priority: 'lowest' });\n\n\t\t['insertContent', 'deleteContent', 'modifySelection', 'getSelectedContent'].forEach(function (methodName) {\n\t\t\treturn _this.decorate(methodName);\n\t\t});\n\t}\n\n\t/**\n  * Returns model's data converted by the {@link #modelToView model to view converters} and\n  * formatted by the {@link #processor data processor}.\n  *\n  * @param {String} [rootName='main'] Root name.\n  * @returns {String} Output data.\n  */\n\n\n\t_createClass(DataController, [{\n\t\tkey: 'get',\n\t\tvalue: function get() {\n\t\t\tvar rootName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'main';\n\n\t\t\t// Get model range.\n\t\t\treturn this.stringify(this.model.getRoot(rootName));\n\t\t}\n\n\t\t/**\n   * Returns the content of the given {@link module:engine/model/element~Element model's element} or\n   * {@link module:engine/model/documentfragment~DocumentFragment model document fragment} converted by the\n   * {@link #modelToView model to view converters} and formatted by the\n   * {@link #processor data processor}.\n   *\n   * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} modelElementOrFragment\n   * Element which content will be stringified.\n   * @returns {String} Output data.\n   */\n\n\t}, {\n\t\tkey: 'stringify',\n\t\tvalue: function stringify(modelElementOrFragment) {\n\t\t\t// model -> view\n\t\t\tvar viewDocumentFragment = this.toView(modelElementOrFragment);\n\n\t\t\t// view -> data\n\t\t\treturn this.processor.toData(viewDocumentFragment);\n\t\t}\n\n\t\t/**\n   * Returns the content of the given {@link module:engine/model/element~Element model element} or\n   * {@link module:engine/model/documentfragment~DocumentFragment model document fragment} converted by the\n   * {@link #modelToView model to view converters} to a\n   * {@link module:engine/view/documentfragment~DocumentFragment view document fragment}.\n   *\n   * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} modelElementOrFragment\n   * Element or document fragment which content will be converted.\n   * @returns {module:engine/view/documentfragment~DocumentFragment} Output view DocumentFragment.\n   */\n\n\t}, {\n\t\tkey: 'toView',\n\t\tvalue: function toView(modelElementOrFragment) {\n\t\t\tvar modelRange = _range2.default.createIn(modelElementOrFragment);\n\n\t\t\tvar viewDocumentFragment = new _documentfragment2.default();\n\t\t\tthis.mapper.bindElements(modelElementOrFragment, viewDocumentFragment);\n\n\t\t\tthis.modelToView.convertInsertion(modelRange);\n\n\t\t\tthis.mapper.clearBindings();\n\n\t\t\treturn viewDocumentFragment;\n\t\t}\n\n\t\t/**\n   * Sets input data parsed by the {@link #processor data processor} and\n   * converted by the {@link #viewToModel view to model converters}.\n   *\n   * This method also creates a batch with all the changes applied. If all you need is to parse data use\n   * the {@link #parse} method.\n   *\n   * @param {String} data Input data.\n   * @param {String} [rootName='main'] Root name.\n   */\n\n\t}, {\n\t\tkey: 'set',\n\t\tvalue: function set(data) {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar rootName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'main';\n\n\t\t\t// Save to model.\n\t\t\tvar modelRoot = this.model.getRoot(rootName);\n\n\t\t\tthis.model.enqueueChanges(function () {\n\t\t\t\t// Clearing selection is a workaround for ticket #569 (LiveRange loses position after removing data from document).\n\t\t\t\t// After fixing it this code should be removed.\n\t\t\t\t_this2.model.selection.removeAllRanges();\n\t\t\t\t_this2.model.selection.clearAttributes();\n\n\t\t\t\t// Initial batch should be ignored by features like undo, etc.\n\t\t\t\t_this2.model.batch('transparent').remove(_range2.default.createIn(modelRoot)).insert(_position2.default.createAt(modelRoot, 0), _this2.parse(data));\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * Returns data parsed by the {@link #processor data processor} and then\n   * converted by the {@link #viewToModel view to model converters}.\n   *\n   * @see #set\n   * @param {String} data Data to parse.\n   * @param {String} [context='$root'] Base context in which the view will be converted to the model. See:\n   * {@link module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher#convert}.\n   * @returns {module:engine/model/documentfragment~DocumentFragment} Parsed data.\n   */\n\n\t}, {\n\t\tkey: 'parse',\n\t\tvalue: function parse(data) {\n\t\t\tvar context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '$root';\n\n\t\t\t// data -> view\n\t\t\tvar viewDocumentFragment = this.processor.toView(data);\n\n\t\t\t// view -> model\n\t\t\treturn this.toModel(viewDocumentFragment, context);\n\t\t}\n\n\t\t/**\n   * Returns wrapped by {module:engine/model/documentfragment~DocumentFragment} result of the given\n   * {@link module:engine/view/element~Element view element} or\n   * {@link module:engine/view/documentfragment~DocumentFragment view document fragment} converted by the\n   * {@link #viewToModel view to model converters}.\n   *\n   * When marker stamps were converted during conversion process then will be set as DocumentFragment's\n   * {@link module:engine/model/documentfragment~DocumentFragment#markers static markers map}.\n   *\n   * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} viewElementOrFragment\n   * Element or document fragment which content will be converted.\n   * @param {String} [context='$root'] Base context in which the view will be converted to the model. See:\n   * {@link module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher#convert}.\n   * @returns {module:engine/model/documentfragment~DocumentFragment} Output document fragment.\n   */\n\n\t}, {\n\t\tkey: 'toModel',\n\t\tvalue: function toModel(viewElementOrFragment) {\n\t\t\tvar context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '$root';\n\n\t\t\treturn this.viewToModel.convert(viewElementOrFragment, { context: [context] });\n\t\t}\n\n\t\t/**\n   * Removes all event listeners set by the DataController.\n   */\n\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {}\n\n\t\t/**\n   * See {@link module:engine/controller/insertcontent.insertContent}.\n   *\n   * @fires insertContent\n   * @param {module:engine/model/documentfragment~DocumentFragment|module:engine/model/item~Item} content The content to insert.\n   * @param {module:engine/model/selection~Selection} selection Selection into which the content should be inserted.\n   * @param {module:engine/model/batch~Batch} [batch] Batch to which deltas will be added. If not specified, then\n   * changes will be added to a new batch.\n   */\n\n\t}, {\n\t\tkey: 'insertContent',\n\t\tvalue: function insertContent(content, selection, batch) {\n\t\t\t(0, _insertcontent2.default)(this, content, selection, batch);\n\t\t}\n\n\t\t/**\n   * See {@link module:engine/controller/deletecontent.deleteContent}.\n   *\n   * Note: For the sake of predictability, the resulting selection should always be collapsed.\n   * In cases where a feature wants to modify deleting behavior so selection isn't collapsed\n   * (e.g. a table feature may want to keep row selection after pressing <kbd>Backspace</kbd>),\n   * then that behavior should be implemented in the view's listener. At the same time, the table feature\n   * will need to modify this method's behavior too, e.g. to \"delete contents and then collapse\n   * the selection inside the last selected cell\" or \"delete the row and collapse selection somewhere near\".\n   * That needs to be done in order to ensure that other features which use `deleteContent()` will work well with tables.\n   *\n   * @fires deleteContent\n   * @param {module:engine/model/selection~Selection} selection Selection of which the content should be deleted.\n   * @param {module:engine/model/batch~Batch} batch Batch to which deltas will be added.\n   * @param {Object} options See {@link module:engine/controller/deletecontent~deleteContent}'s options.\n   */\n\n\t}, {\n\t\tkey: 'deleteContent',\n\t\tvalue: function deleteContent(selection, batch, options) {\n\t\t\t(0, _deletecontent2.default)(selection, batch, options);\n\t\t}\n\n\t\t/**\n   * See {@link module:engine/controller/modifyselection.modifySelection}.\n   *\n   * @fires modifySelection\n   * @param {module:engine/model/selection~Selection} selection The selection to modify.\n   * @param {Object} options See {@link module:engine/controller/modifyselection~modifySelection}'s options.\n   */\n\n\t}, {\n\t\tkey: 'modifySelection',\n\t\tvalue: function modifySelection(selection, options) {\n\t\t\t(0, _modifyselection2.default)(this, selection, options);\n\t\t}\n\n\t\t/**\n   * See {@link module:engine/controller/getselectedcontent.getSelectedContent}.\n   *\n   * @fires module:engine/controller/datacontroller~DataController#getSelectedContent\n   * @param {module:engine/model/selection~Selection} selection The selection of which content will be retrieved.\n   * @returns {module:engine/model/documentfragment~DocumentFragment} Document fragment holding the clone of the selected content.\n   */\n\n\t}, {\n\t\tkey: 'getSelectedContent',\n\t\tvalue: function getSelectedContent(selection) {\n\t\t\treturn (0, _getselectedcontent2.default)(selection);\n\t\t}\n\t}]);\n\n\treturn DataController;\n}();\n\nexports.default = DataController;\n\n\n(0, _mix2.default)(DataController, _observablemixin2.default);\n\n/**\n * Event fired when {@link #insertContent} method is called.\n *\n * The {@link #insertContent default action of that method} is implemented as a\n * listener to this event so it can be fully customized by the features.\n *\n * @event insertContent\n * @param {Array} args The arguments passed to the original method.\n */\n\n/**\n * Event fired when {@link #deleteContent} method is called.\n *\n * The {@link #deleteContent default action of that method} is implemented as a\n * listener to this event so it can be fully customized by the features.\n *\n * @event deleteContent\n * @param {Array} args The arguments passed to the original method.\n */\n\n/**\n * Event fired when {@link #modifySelection} method is called.\n *\n * The {@link #modifySelection default action of that method} is implemented as a\n * listener to this event so it can be fully customized by the features.\n *\n * @event modifySelection\n * @param {Array} args The arguments passed to the original method.\n */\n\n/**\n * Event fired when {@link #getSelectedContent} method is called.\n *\n * The {@link #getSelectedContent default action of that method} is implemented as a\n * listener to this event so it can be fully customized by the features.\n *\n * @event getSelectedContent\n * @param {Array} args The arguments passed to the original method.\n */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/controller/datacontroller.js\n// module id = 300\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = deleteContent;\n\nvar _liveposition = require('../model/liveposition');\n\nvar _liveposition2 = _interopRequireDefault(_liveposition);\n\nvar _position = require('../model/position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _range = require('../model/range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _element = require('../model/element');\n\nvar _element2 = _interopRequireDefault(_element);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Deletes content of the selection and merge siblings. The resulting selection is always collapsed.\n *\n * @param {module:engine/model/selection~Selection} selection Selection of which the content should be deleted.\n * @param {module:engine/model/batch~Batch} batch Batch to which the deltas will be added.\n * @param {Object} [options]\n * @param {Boolean} [options.leaveUnmerged=false] Whether to merge elements after removing the content of the selection.\n *\n * For example `<heading>x[x</heading><paragraph>y]y</paragraph>` will become:\n *\n * * `<heading>x^y</heading>` with the option disabled (`leaveUnmerged == false`)\n * * `<heading>x^</heading><paragraph>y</paragraph>` with enabled (`leaveUnmerged == true`).\n *\n * Note: {@link module:engine/model/schema~Schema#objects object} and {@link module:engine/model/schema~Schema#limits limit}\n * elements will not be merged.\n *\n * @param {Boolean} [options.doNotResetEntireContent=false] Whether to skip replacing the entire content with a\n * paragraph when the entire content was selected.\n *\n * For example `<heading>[x</heading><paragraph>y]</paragraph> will become:\n *\n * * `<paragraph>^</paragraph>` with the option disabled (`doNotResetEntireContent == false`)\n * * `<heading>^</heading>` with enabled (`doNotResetEntireContent == true`).\n */\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/controller/deletecontent\n */\n\nfunction deleteContent(selection, batch) {\n\tvar options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n\tif (selection.isCollapsed) {\n\t\treturn;\n\t}\n\n\t// 1. Replace the entire content with paragraph.\n\t// See: https://github.com/ckeditor/ckeditor5-engine/issues/1012#issuecomment-315017594.\n\tif (!options.doNotResetEntireContent && shouldEntireContentBeReplacedWithParagraph(batch.document.schema, selection)) {\n\t\treplaceEntireContentWithParagraph(batch, selection);\n\n\t\treturn;\n\t}\n\n\tvar selRange = selection.getFirstRange();\n\tvar startPos = selRange.start;\n\tvar endPos = _liveposition2.default.createFromPosition(selRange.end);\n\n\t// 2. Remove the content if there is any.\n\tif (!selRange.start.isTouching(selRange.end)) {\n\t\tbatch.remove(selRange);\n\t}\n\n\t// 3. Merge elements in the right branch to the elements in the left branch.\n\t// The only reasonable (in terms of data and selection correctness) case in which we need to do that is:\n\t//\n\t// <heading type=1>Fo[</heading><paragraph>]ar</paragraph> => <heading type=1>Fo^ar</heading>\n\t//\n\t// However, the algorithm supports also merging deeper structures (up to the depth of the shallower branch),\n\t// as it's hard to imagine what should actually be the default behavior. Usually, specific features will\n\t// want to override that behavior anyway.\n\tif (!options.leaveUnmerged) {\n\t\tmergeBranches(batch, startPos, endPos);\n\t}\n\n\tselection.collapse(startPos);\n\n\t// 4. Autoparagraphing.\n\t// Check if a text is allowed in the new container. If not, try to create a new paragraph (if it's allowed here).\n\tif (shouldAutoparagraph(batch.document, startPos)) {\n\t\tinsertParagraph(batch, startPos, selection);\n\t}\n\n\tendPos.detach();\n}\n\n// This function is a result of reaching the Ballmer's peak for just the right amount of time.\n// Even I had troubles documenting it after a while and after reading it again I couldn't believe that it really works.\nfunction mergeBranches(batch, startPos, endPos) {\n\tvar startParent = startPos.parent;\n\tvar endParent = endPos.parent;\n\n\t// If both positions ended up in the same parent, then there's nothing more to merge:\n\t// <$root><p>x[]</p><p>{}y</p></$root> => <$root><p>xy</p>[]{}</$root>\n\tif (startParent == endParent) {\n\t\treturn;\n\t}\n\n\t// If one of the positions is a root, then there's nothing more to merge (at least in the current state of implementation).\n\t// Theoretically in this case we could unwrap the <p>: <$root>x[]<p>{}y</p></$root>, but we don't need to support it yet\n\t// so let's just abort.\n\tif (!startParent.parent || !endParent.parent) {\n\t\treturn;\n\t}\n\n\t// Check if operations we'll need to do won't need to cross object or limit boundaries.\n\t// E.g., we can't merge endParent into startParent in this case:\n\t// <limit><startParent>x[]</startParent></limit><endParent>{}</endParent>\n\tif (!checkCanBeMerged(startPos, endPos)) {\n\t\treturn;\n\t}\n\n\t// Remember next positions to merge. For example:\n\t// <a><b>x[]</b></a><c><d>{}y</d></c>\n\t// will become:\n\t// <a><b>xy</b>[]</a><c>{}</c>\n\tstartPos = _position2.default.createAfter(startParent);\n\tendPos = _position2.default.createBefore(endParent);\n\n\tif (endParent.isEmpty) {\n\t\tbatch.remove(endParent);\n\t} else {\n\t\t// At the moment, next startPos is also the position to which the endParent\n\t\t// needs to be moved:\n\t\t// <a><b>x[]</b></a><c><d>{}y</d></c>\n\t\t// becomes:\n\t\t// <a><b>x</b>[]<d>y</d></a><c>{}</c>\n\n\t\t// Move the end parent only if needed.\n\t\t// E.g. not in this case: <p>ab</p>[]{}<p>cd</p>\n\t\tif (!endPos.isEqual(startPos)) {\n\t\t\tbatch.move(endParent, startPos);\n\t\t}\n\n\t\t// To then become:\n\t\t// <a><b>xy</b>[]</a><c>{}</c>\n\t\tbatch.merge(startPos);\n\t}\n\n\t// Removes empty end ancestors:\n\t// <a>fo[o</a><b><a><c>bar]</c></a></b>\n\t// becomes:\n\t// <a>fo[]</a><b><a>{}</a></b>\n\t// So we can remove <a> and <b>.\n\twhile (endPos.parent.isEmpty) {\n\t\tvar parentToRemove = endPos.parent;\n\n\t\tendPos = _position2.default.createBefore(parentToRemove);\n\n\t\tbatch.remove(parentToRemove);\n\t}\n\n\t// Continue merging next level.\n\tmergeBranches(batch, startPos, endPos);\n}\n\nfunction shouldAutoparagraph(doc, position) {\n\tvar isTextAllowed = doc.schema.check({ name: '$text', inside: position });\n\tvar isParagraphAllowed = doc.schema.check({ name: 'paragraph', inside: position });\n\n\treturn !isTextAllowed && isParagraphAllowed;\n}\n\n// Check if parents of two positions can be merged by checking if there are no limit/object\n// boundaries between those two positions.\n//\n// E.g. in <bQ><p>x[]</p></bQ><widget><caption>{}</caption></widget>\n// we'll check <p>, <bQ>, <widget> and <caption>.\n// Usually, widget and caption are marked as objects/limits in the schema, so in this case merging will be blocked.\nfunction checkCanBeMerged(leftPos, rightPos) {\n\tvar schema = leftPos.root.document.schema;\n\tvar rangeToCheck = new _range2.default(leftPos, rightPos);\n\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = rangeToCheck.getWalker()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar value = _step.value;\n\n\t\t\tif (schema.objects.has(value.item.name) || schema.limits.has(value.item.name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction insertParagraph(batch, position, selection) {\n\tvar paragraph = new _element2.default('paragraph');\n\tbatch.insert(position, paragraph);\n\n\tselection.collapse(paragraph);\n}\n\nfunction replaceEntireContentWithParagraph(batch, selection) {\n\tvar limitElement = batch.document.schema.getLimitElement(selection);\n\n\tbatch.remove(_range2.default.createIn(limitElement));\n\tinsertParagraph(batch, _position2.default.createAt(limitElement), selection);\n}\n\n// We want to replace the entire content with a paragraph when:\n// * the entire content is selected,\n// * selection contains at least two elements,\n// * whether the paragraph is allowed in schema in the common ancestor.\nfunction shouldEntireContentBeReplacedWithParagraph(schema, selection) {\n\tvar limitElement = schema.getLimitElement(selection);\n\tvar limitStartPosition = _position2.default.createAt(limitElement);\n\tvar limitEndPosition = _position2.default.createAt(limitElement, 'end');\n\n\tif (!limitStartPosition.isTouching(selection.getFirstPosition()) || !limitEndPosition.isTouching(selection.getLastPosition())) {\n\t\treturn false;\n\t}\n\n\tvar range = selection.getFirstRange();\n\n\tif (range.start.parent == range.end.parent) {\n\t\treturn false;\n\t}\n\n\tif (!schema.check({ name: 'paragraph', inside: limitElement.name })) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/controller/deletecontent.js\n// module id = 301\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */\n\n/**\n * @module engine/controller/editingcontroller\n */\n\nvar _document = require('../view/document');\n\nvar _document2 = _interopRequireDefault(_document);\n\nvar _mapper = require('../conversion/mapper');\n\nvar _mapper2 = _interopRequireDefault(_mapper);\n\nvar _modelconversiondispatcher = require('../conversion/modelconversiondispatcher');\n\nvar _modelconversiondispatcher2 = _interopRequireDefault(_modelconversiondispatcher);\n\nvar _modelToViewConverters = require('../conversion/model-to-view-converters');\n\nvar _viewSelectionToModelConverters = require('../conversion/view-selection-to-model-converters');\n\nvar _modelSelectionToViewConverters = require('../conversion/model-selection-to-view-converters');\n\nvar _observablemixin = require('@ckeditor/ckeditor5-utils/src/observablemixin');\n\nvar _observablemixin2 = _interopRequireDefault(_observablemixin);\n\nvar _mix = require('@ckeditor/ckeditor5-utils/src/mix');\n\nvar _mix2 = _interopRequireDefault(_mix);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Controller for the editing pipeline. The editing pipeline controls {@link ~EditingController#model model} rendering,\n * including selection handling. It also creates {@link ~EditingController#view view document} which build a\n * browser-independent virtualization over the DOM elements. Editing controller also attach default converters.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nvar EditingController = function () {\n\t/**\n  * Creates editing controller instance.\n  *\n  * @param {module:engine/model/document~Document} model Document model.\n  */\n\tfunction EditingController(model) {\n\t\tvar _this = this;\n\n\t\t_classCallCheck(this, EditingController);\n\n\t\t/**\n   * Document model.\n   *\n   * @readonly\n   * @member {module:engine/model/document~Document}\n   */\n\t\tthis.model = model;\n\n\t\t/**\n   * View document.\n   *\n   * @readonly\n   * @member {module:engine/view/document~Document}\n   */\n\t\tthis.view = new _document2.default();\n\n\t\t/**\n   * Mapper which describes model-view binding.\n   *\n   * @readonly\n   * @member {module:engine/conversion/mapper~Mapper}\n   */\n\t\tthis.mapper = new _mapper2.default();\n\n\t\t/**\n   * Model to view conversion dispatcher, which converts changes from the model to\n   * {@link #view editing view}.\n   *\n   * To attach model to view converter to the editing pipeline you need to add lister to this property:\n   *\n   *\t\tediting.modelToView( 'insert:$element', customInsertConverter );\n   *\n   * Or use {@link module:engine/conversion/buildmodelconverter~ModelConverterBuilder}:\n   *\n   *\t\tbuildModelConverter().for( editing.modelToView ).fromAttribute( 'bold' ).toElement( 'b' );\n   *\n   * @readonly\n   * @member {module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher} #modelToView\n   */\n\t\tthis.modelToView = new _modelconversiondispatcher2.default(this.model, {\n\t\t\tmapper: this.mapper,\n\t\t\tviewSelection: this.view.selection\n\t\t});\n\n\t\t// Convert changes in model to view.\n\t\tthis.listenTo(this.model, 'change', function (evt, type, changes) {\n\t\t\t_this.modelToView.convertChange(type, changes);\n\t\t}, { priority: 'low' });\n\n\t\t// Convert model selection to view.\n\t\tthis.listenTo(this.model, 'changesDone', function () {\n\t\t\tvar selection = _this.model.selection;\n\n\t\t\t_this.modelToView.convertSelection(selection);\n\t\t\t_this.view.render();\n\t\t}, { priority: 'low' });\n\n\t\t// Convert model markers changes.\n\t\tthis.listenTo(this.model.markers, 'add', function (evt, marker) {\n\t\t\t_this.modelToView.convertMarker('addMarker', marker.name, marker.getRange());\n\t\t});\n\n\t\tthis.listenTo(this.model.markers, 'remove', function (evt, marker) {\n\t\t\t_this.modelToView.convertMarker('removeMarker', marker.name, marker.getRange());\n\t\t});\n\n\t\t// Convert view selection to model.\n\t\tthis.listenTo(this.view, 'selectionChange', (0, _viewSelectionToModelConverters.convertSelectionChange)(this.model, this.mapper));\n\n\t\t// Attach default content converters.\n\t\tthis.modelToView.on('insert:$text', (0, _modelToViewConverters.insertText)(), { priority: 'lowest' });\n\t\tthis.modelToView.on('remove', (0, _modelToViewConverters.remove)(), { priority: 'low' });\n\n\t\t// Attach default selection converters.\n\t\tthis.modelToView.on('selection', (0, _modelSelectionToViewConverters.clearAttributes)(), { priority: 'low' });\n\t\tthis.modelToView.on('selection', (0, _modelSelectionToViewConverters.clearFakeSelection)(), { priority: 'low' });\n\t\tthis.modelToView.on('selection', (0, _modelSelectionToViewConverters.convertRangeSelection)(), { priority: 'low' });\n\t\tthis.modelToView.on('selection', (0, _modelSelectionToViewConverters.convertCollapsedSelection)(), { priority: 'low' });\n\t}\n\n\t/**\n  * {@link module:engine/view/document~Document#createRoot Creates} a view root\n  * and {@link module:engine/conversion/mapper~Mapper#bindElements binds}\n  * the model root with view root and and view root with DOM element:\n  *\n  *\t\tediting.createRoot( document.querySelector( div#editor ) );\n  *\n  * If the DOM element is not available at the time you want to create a view root, for instance it is iframe body\n  * element, it is possible to create view element and bind the DOM element later:\n  *\n  *\t\tediting.createRoot( 'body' );\n  *\t\tediting.view.attachDomRoot( iframe.contentDocument.body );\n  *\n  * @param {Element|String} domRoot DOM root element or the name of view root element if the DOM element will be\n  * attached later.\n  * @param {String} [name='main'] Root name.\n  * @returns {module:engine/view/containerelement~ContainerElement} View root element.\n  */\n\n\n\t_createClass(EditingController, [{\n\t\tkey: 'createRoot',\n\t\tvalue: function createRoot(domRoot) {\n\t\t\tvar name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'main';\n\n\t\t\tvar viewRoot = this.view.createRoot(domRoot, name);\n\t\t\tvar modelRoot = this.model.getRoot(name);\n\n\t\t\tthis.mapper.bindElements(modelRoot, viewRoot);\n\n\t\t\treturn viewRoot;\n\t\t}\n\n\t\t/**\n   * Removes all event listeners attached to the `EditingController`. Destroys all objects created\n   * by `EditingController` that need to be destroyed.\n   */\n\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {\n\t\t\tthis.view.destroy();\n\t\t\tthis.stopListening();\n\t\t}\n\t}]);\n\n\treturn EditingController;\n}();\n\nexports.default = EditingController;\n\n\n(0, _mix2.default)(EditingController, _observablemixin2.default);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/controller/editingcontroller.js\n// module id = 302\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = getSelectedContent;\n\nvar _documentfragment = require('../model/documentfragment');\n\nvar _documentfragment2 = _interopRequireDefault(_documentfragment);\n\nvar _range = require('../model/range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _position = require('../model/position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _text = require('../model/text');\n\nvar _text2 = _interopRequireDefault(_text);\n\nvar _writer = require('../model/writer');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Gets a clone of the selected content.\n *\n * For example, for the following selection:\n *\n *\t\t<p>x</p><quote><p>y</p><h>fir[st</h></quote><p>se]cond</p><p>z</p>\n *\n * It will return a document fragment with such a content:\n *\n *\t\t<quote><h>st</h></quote><p>se</p>\n *\n * @param {module:engine/model/selection~Selection} selection The selection of which content will be returned.\n * @returns {module:engine/model/documentfragment~DocumentFragment}\n */\nfunction getSelectedContent(selection) {\n\tvar frag = new _documentfragment2.default();\n\tvar range = selection.getFirstRange();\n\n\tif (!range || range.isCollapsed) {\n\t\treturn frag;\n\t}\n\n\tvar root = range.start.root;\n\tvar commonPath = range.start.getCommonPath(range.end);\n\tvar commonParent = root.getNodeByPath(commonPath);\n\n\t// ## 1st step\n\t//\n\t// First, we'll clone a fragment represented by a minimal flat range\n\t// containing the original range to be cloned.\n\t// E.g. let's consider such a range:\n\t//\n\t// <p>x</p><quote><p>y</p><h>fir[st</h></quote><p>se]cond</p><p>z</p>\n\t//\n\t// A minimal flat range containing this one is:\n\t//\n\t// <p>x</p>[<quote><p>y</p><h>first</h></quote><p>second</p>]<p>z</p>\n\t//\n\t// We can easily clone this structure, preserving e.g. the <quote> element.\n\tvar flatSubtreeRange = void 0;\n\n\tif (range.start.parent == range.end.parent) {\n\t\t// The original range is flat, so take it.\n\t\tflatSubtreeRange = range;\n\t} else {\n\t\tflatSubtreeRange = _range2.default.createFromParentsAndOffsets(commonParent, range.start.path[commonPath.length], commonParent, range.end.path[commonPath.length] + 1);\n\t}\n\n\tvar howMany = flatSubtreeRange.end.offset - flatSubtreeRange.start.offset;\n\n\t// Clone the whole contents.\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = flatSubtreeRange.getItems({ shallow: true })[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar item = _step.value;\n\n\t\t\tif (item.is('textProxy')) {\n\t\t\t\tfrag.appendChildren(new _text2.default(item.data, item.getAttributes()));\n\t\t\t} else {\n\t\t\t\tfrag.appendChildren(item.clone(true));\n\t\t\t}\n\t\t}\n\n\t\t// ## 2nd step\n\t\t//\n\t\t// If the original range wasn't flat, then we need to remove the excess nodes from the both ends of the cloned fragment.\n\t\t//\n\t\t// For example, for the range shown in the 1st step comment, we need to remove these pieces:\n\t\t//\n\t\t// <quote>[<p>y</p>]<h>[fir]st</h></quote><p>se[cond]</p>\n\t\t//\n\t\t// So this will be the final copied content:\n\t\t//\n\t\t// <quote><h>st</h></quote><p>se</p>\n\t\t//\n\t\t// In order to do that, we remove content from these two ranges:\n\t\t//\n\t\t// [<quote><p>y</p><h>fir]st</h></quote><p>se[cond</p>]\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (flatSubtreeRange != range) {\n\t\t// Find the position of the original range in the cloned fragment.\n\t\tvar newRange = range._getTransformedByMove(flatSubtreeRange.start, _position2.default.createAt(frag, 0), howMany)[0];\n\n\t\tvar leftExcessRange = new _range2.default(_position2.default.createAt(frag), newRange.start);\n\t\tvar rightExcessRange = new _range2.default(newRange.end, _position2.default.createAt(frag, 'end'));\n\n\t\tremoveRangeContent(rightExcessRange);\n\t\tremoveRangeContent(leftExcessRange);\n\t}\n\n\treturn frag;\n}\n\n// After https://github.com/ckeditor/ckeditor5-engine/issues/690 is fixed,\n// this function will, most likely, be able to rewritten using getMinimalFlatRanges().\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/controller/getselectedcontent\n */\n\nfunction removeRangeContent(range) {\n\tvar parentsToCheck = [];\n\n\tArray.from(range.getItems({ direction: 'backward' }))\n\t// We should better store ranges because text proxies will lose integrity\n\t// with the text nodes when we'll start removing content.\n\t.map(function (item) {\n\t\treturn _range2.default.createOn(item);\n\t})\n\t// Filter only these items which are fully contained in the passed range.\n\t//\n\t// E.g. for the following range: [<quote><p>y</p><h>fir]st</h>\n\t// the walker will return the entire <h> element, when only the \"fir\" item inside it is fully contained.\n\t.filter(function (itemRange) {\n\t\t// We should be able to use Range.containsRange, but https://github.com/ckeditor/ckeditor5-engine/issues/691.\n\t\tvar contained = (itemRange.start.isAfter(range.start) || itemRange.start.isEqual(range.start)) && (itemRange.end.isBefore(range.end) || itemRange.end.isEqual(range.end));\n\n\t\treturn contained;\n\t}).forEach(function (itemRange) {\n\t\tparentsToCheck.push(itemRange.start.parent);\n\n\t\t(0, _writer.remove)(itemRange);\n\t});\n\n\t// Remove ancestors of the removed items if they turned to be empty now\n\t// (their whole content was contained in the range).\n\tparentsToCheck.forEach(function (parentToCheck) {\n\t\tvar parent = parentToCheck;\n\n\t\twhile (parent.parent && parent.isEmpty) {\n\t\t\tvar removeRange = _range2.default.createOn(parent);\n\n\t\t\tparent = parent.parent;\n\n\t\t\t(0, _writer.remove)(removeRange);\n\t\t}\n\t});\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/controller/getselectedcontent.js\n// module id = 303\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */\n\n/**\n * @module engine/controller/insertcontent\n */\n\nexports.default = insertContent;\n\nvar _position2 = require('../model/position');\n\nvar _position3 = _interopRequireDefault(_position2);\n\nvar _liveposition = require('../model/liveposition');\n\nvar _liveposition2 = _interopRequireDefault(_liveposition);\n\nvar _element = require('../model/element');\n\nvar _element2 = _interopRequireDefault(_element);\n\nvar _range = require('../model/range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _log = require('@ckeditor/ckeditor5-utils/src/log');\n\nvar _log2 = _interopRequireDefault(_log);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Inserts content into the editor (specified selection) as one would expect the paste\n * functionality to work.\n *\n * **Note:** Use {@link module:engine/controller/datacontroller~DataController#insertContent} instead of this function.\n * This function is only exposed to be reusable in algorithms\n * which change the {@link module:engine/controller/datacontroller~DataController#insertContent}\n * method's behavior.\n *\n * @param {module:engine/controller/datacontroller~DataController} dataController The data controller in context of which the insertion\n * should be performed.\n * @param {module:engine/model/documentfragment~DocumentFragment|module:engine/model/item~Item} content The content to insert.\n * @param {module:engine/model/selection~Selection} selection Selection into which the content should be inserted.\n * @param {module:engine/model/batch~Batch} [batch] Batch to which deltas will be added. If not specified, then\n * changes will be added to a new batch.\n */\nfunction insertContent(dataController, content, selection, batch) {\n\tif (!batch) {\n\t\tbatch = dataController.model.batch();\n\t}\n\n\tif (!selection.isCollapsed) {\n\t\tdataController.deleteContent(selection, batch);\n\t}\n\n\tvar insertion = new Insertion(dataController, batch, selection.anchor);\n\n\tvar nodesToInsert = void 0;\n\n\tif (content.is('documentFragment')) {\n\t\tnodesToInsert = content.getChildren();\n\t} else {\n\t\tnodesToInsert = [content];\n\t}\n\n\tinsertion.handleNodes(nodesToInsert, {\n\t\t// The set of children being inserted is the only set in this context\n\t\t// so it's the first and last (it's a hack ;)).\n\t\tisFirst: true,\n\t\tisLast: true\n\t});\n\n\tvar newRange = insertion.getSelectionRange();\n\n\t/* istanbul ignore else */\n\tif (newRange) {\n\t\tselection.setRanges([newRange]);\n\t} else {\n\t\t// We are not testing else because it's a safe check for unpredictable edge cases:\n\t\t// an insertion without proper range to select.\n\n\t\t/**\n   * Cannot determine a proper selection range after insertion.\n   *\n   * @warning insertcontent-no-range\n   */\n\t\t_log2.default.warn('insertcontent-no-range: Cannot determine a proper selection range after insertion.');\n\t}\n}\n\n/**\n * Utility class for performing content insertion.\n *\n * @private\n */\n\nvar Insertion = function () {\n\tfunction Insertion(dataController, batch, position) {\n\t\t_classCallCheck(this, Insertion);\n\n\t\t/**\n   * The data controller in context of which the insertion should be performed.\n   *\n   * @member {module:engine/controller/datacontroller~DataController} #dataController\n   */\n\t\tthis.dataController = dataController;\n\n\t\t/**\n   * Batch to which deltas will be added.\n   *\n   * @member {module:engine/controller/batch~Batch} #batch\n   */\n\t\tthis.batch = batch;\n\n\t\t/**\n   * The position at which (or near which) the next node will be inserted.\n   *\n   * @member {module:engine/model/position~Position} #position\n   */\n\t\tthis.position = position;\n\n\t\t/**\n   * Elements with which the inserted elements can be merged.\n   *\n   *\t\t<p>x^</p><p>y</p> + <p>z</p> (can merge to <p>x</p>)\n   *\t\t<p>x</p><p>^y</p> + <p>z</p> (can merge to <p>y</p>)\n   *\t\t<p>x^y</p> + <p>z</p> (can merge to <p>xy</p> which will be split during the action,\n   *\t\t\t\t\t\t\t\tso both its pieces will be added to this set)\n   *\n   *\n   * @member {Set} #canMergeWith\n   */\n\t\tthis.canMergeWith = new Set([this.position.parent]);\n\n\t\t/**\n   * Schema of the model.\n   *\n   * @member {module:engine/model/schema~Schema} #schema\n   */\n\t\tthis.schema = dataController.model.schema;\n\t}\n\n\t/**\n  * Handles insertion of a set of nodes.\n  *\n  * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes to insert.\n  * @param {Object} parentContext Context in which parent of these nodes was supposed to be inserted.\n  * If the parent context is passed it means that the parent element was stripped (was not allowed).\n  */\n\n\n\t_createClass(Insertion, [{\n\t\tkey: 'handleNodes',\n\t\tvalue: function handleNodes(nodes, parentContext) {\n\t\t\tnodes = Array.from(nodes);\n\n\t\t\tfor (var i = 0; i < nodes.length; i++) {\n\t\t\t\tvar node = nodes[i];\n\n\t\t\t\tthis._handleNode(node, {\n\t\t\t\t\tisFirst: i === 0 && parentContext.isFirst,\n\t\t\t\t\tisLast: i === nodes.length - 1 && parentContext.isLast\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Returns range to be selected after insertion.\n   * Returns null if there is no valid range to select after insertion.\n   *\n   * @returns {module:engine/model/range~Range|null}\n   */\n\n\t}, {\n\t\tkey: 'getSelectionRange',\n\t\tvalue: function getSelectionRange() {\n\t\t\tif (this.nodeToSelect) {\n\t\t\t\treturn _range2.default.createOn(this.nodeToSelect);\n\t\t\t}\n\n\t\t\treturn this.dataController.model.getNearestSelectionRange(this.position);\n\t\t}\n\n\t\t/**\n   * Handles insertion of a single node.\n   *\n   * @param {module:engine/model/node~Node} node\n   * @param {Object} context\n   * @param {Boolean} context.isFirst Whether the given node is the first one in the content to be inserted.\n   * @param {Boolean} context.isLast Whether the given node is the last one in the content to be inserted.\n   */\n\n\t}, {\n\t\tkey: '_handleNode',\n\t\tvalue: function _handleNode(node, context) {\n\t\t\t// Let's handle object in a special way.\n\t\t\t// * They should never be merged with other elements.\n\t\t\t// * If they are not allowed in any of the selection ancestors, they could be either autoparagraphed or totally removed.\n\t\t\tif (this._checkIsObject(node)) {\n\t\t\t\tthis._handleObject(node, context);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Try to find a place for the given node.\n\t\t\t// Split the position.parent's branch up to a point where the node can be inserted.\n\t\t\t// If it isn't allowed in the whole branch, then of course don't split anything.\n\t\t\tvar isAllowed = this._checkAndSplitToAllowedPosition(node, context);\n\n\t\t\tif (!isAllowed) {\n\t\t\t\tthis._handleDisallowedNode(node, context);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._insert(node);\n\n\t\t\t// After the node was inserted we may try to merge it with its siblings.\n\t\t\t// This should happen only if it was the first and/or last of the nodes (so only with boundary nodes)\n\t\t\t// and only if the selection was in those elements initially.\n\t\t\t//\n\t\t\t// E.g.:\n\t\t\t// <p>x^</p> + <p>y</p> => <p>x</p><p>y</p> => <p>xy[]</p>\n\t\t\t// and:\n\t\t\t// <p>x^y</p> + <p>z</p> => <p>x</p>^<p>y</p> + <p>z</p> => <p>x</p><p>y</p><p>z</p> => <p>xy[]z</p>\n\t\t\t// but:\n\t\t\t// <p>x</p><p>^</p><p>z</p> + <p>y</p> => <p>x</p><p>y</p><p>z</p> (no merging)\n\t\t\t// <p>x</p>[<img>]<p>z</p> + <p>y</p> => <p>x</p><p>y</p><p>z</p> (no merging, note: after running deletetContents\n\t\t\t//\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t it's exactly the same case as above)\n\t\t\tthis._mergeSiblingsOf(node, context);\n\t\t}\n\n\t\t/**\n   * @param {module:engine/model/element~Element} node The object element.\n   * @param {Object} context\n   */\n\n\t}, {\n\t\tkey: '_handleObject',\n\t\tvalue: function _handleObject(node, context) {\n\t\t\t// Try finding it a place in the tree.\n\t\t\tif (this._checkAndSplitToAllowedPosition(node)) {\n\t\t\t\tthis._insert(node);\n\t\t\t}\n\t\t\t// Try autoparagraphing.\n\t\t\telse {\n\t\t\t\t\tthis._tryAutoparagraphing(node, context);\n\t\t\t\t}\n\t\t}\n\n\t\t/**\n   * @param {module:engine/model/node~Node} node The disallowed node which needs to be handled.\n   * @param {Object} context\n   */\n\n\t}, {\n\t\tkey: '_handleDisallowedNode',\n\t\tvalue: function _handleDisallowedNode(node, context) {\n\t\t\t// Try inserting its children (strip the parent).\n\t\t\tif (node.is('element')) {\n\t\t\t\tthis.handleNodes(node.getChildren(), context);\n\t\t\t}\n\t\t\t// Try autoparagraphing.\n\t\t\telse {\n\t\t\t\t\tthis._tryAutoparagraphing(node, context);\n\t\t\t\t}\n\t\t}\n\n\t\t/**\n   * @param {module:engine/model/node~Node} node The node to insert.\n   */\n\n\t}, {\n\t\tkey: '_insert',\n\t\tvalue: function _insert(node) {\n\t\t\t/* istanbul ignore if */\n\t\t\tif (!this._checkIsAllowed(node, [this.position.parent])) {\n\t\t\t\t// Algorithm's correctness check. We should never end up here but it's good to know that we did.\n\t\t\t\t// Note that it would often be a silent issue if we insert node in a place where it's not allowed.\n\t\t\t\t_log2.default.error('insertcontent-wrong-position: The node cannot be inserted on the given position.', { node: node, position: this.position });\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar livePos = _liveposition2.default.createFromPosition(this.position);\n\n\t\t\tthis.batch.insert(this.position, node);\n\n\t\t\tthis.position = _position3.default.createFromPosition(livePos);\n\t\t\tlivePos.detach();\n\n\t\t\t// The last inserted object should be selected because we can't put a collapsed selection after it.\n\t\t\tif (this._checkIsObject(node) && !this.schema.check({ name: '$text', inside: [this.position.parent] })) {\n\t\t\t\tthis.nodeToSelect = node;\n\t\t\t} else {\n\t\t\t\tthis.nodeToSelect = null;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @param {module:engine/model/node~Node} node The node which could potentially be merged.\n   * @param {Object} context\n   */\n\n\t}, {\n\t\tkey: '_mergeSiblingsOf',\n\t\tvalue: function _mergeSiblingsOf(node, context) {\n\t\t\tif (!(node instanceof _element2.default)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar mergeLeft = context.isFirst && node.previousSibling instanceof _element2.default && this.canMergeWith.has(node.previousSibling);\n\t\t\tvar mergeRight = context.isLast && node.nextSibling instanceof _element2.default && this.canMergeWith.has(node.nextSibling);\n\t\t\tvar mergePosLeft = _liveposition2.default.createBefore(node);\n\t\t\tvar mergePosRight = _liveposition2.default.createAfter(node);\n\n\t\t\tif (mergeLeft) {\n\t\t\t\tvar position = _liveposition2.default.createFromPosition(this.position);\n\n\t\t\t\tthis.batch.merge(mergePosLeft);\n\n\t\t\t\tthis.position = _position3.default.createFromPosition(position);\n\t\t\t\tposition.detach();\n\t\t\t}\n\n\t\t\tif (mergeRight) {\n\t\t\t\t/* istanbul ignore if */\n\t\t\t\tif (!this.position.isEqual(mergePosRight)) {\n\t\t\t\t\t// Algorithm's correctness check. We should never end up here but it's good to know that we did.\n\t\t\t\t\t// At this point the insertion position should be after the node we'll merge. If it isn't,\n\t\t\t\t\t// it should need to be secured as in the left merge case.\n\t\t\t\t\t_log2.default.error('insertcontent-wrong-position-on-merge: The insertion position should equal the merge position');\n\t\t\t\t}\n\n\t\t\t\t// Move the position to the previous node, so it isn't moved to the graveyard on merge.\n\t\t\t\t// <p>x</p>[]<p>y</p> => <p>x[]</p><p>y</p>\n\t\t\t\tthis.position = _position3.default.createAt(mergePosRight.nodeBefore, 'end');\n\n\t\t\t\t// OK:  <p>xx[]</p> + <p>yy</p> => <p>xx[]yy</p> (when sticks to previous)\n\t\t\t\t// NOK: <p>xx[]</p> + <p>yy</p> => <p>xxyy[]</p> (when sticks to next)\n\t\t\t\tvar _position = new _liveposition2.default(this.position.root, this.position.path, 'sticksToPrevious');\n\n\t\t\t\tthis.batch.merge(mergePosRight);\n\n\t\t\t\tthis.position = _position3.default.createFromPosition(_position);\n\t\t\t\t_position.detach();\n\t\t\t}\n\n\t\t\tmergePosLeft.detach();\n\t\t\tmergePosRight.detach();\n\t\t}\n\n\t\t/**\n   * Tries wrapping the node in a new paragraph and inserting it this way.\n   *\n   * @param {module:engine/model/node~Node} node The node which needs to be autoparagraphed.\n   * @param {Object} context\n   */\n\n\t}, {\n\t\tkey: '_tryAutoparagraphing',\n\t\tvalue: function _tryAutoparagraphing(node, context) {\n\t\t\tvar paragraph = new _element2.default('paragraph');\n\n\t\t\t// Do not autoparagraph if the paragraph won't be allowed there,\n\t\t\t// cause that would lead to an infinite loop. The paragraph would be rejected in\n\t\t\t// the next _handleNode() call and we'd be here again.\n\t\t\tif (this._getAllowedIn(paragraph, this.position.parent) && this._checkIsAllowed(node, [paragraph])) {\n\t\t\t\tparagraph.appendChildren(node);\n\n\t\t\t\tthis._handleNode(paragraph, context);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @param {module:engine/model/node~Node} node\n   * @returns {Boolean} Whether an allowed position was found.\n   * `false` is returned if the node isn't allowed at any position up in the tree, `true` if was.\n   */\n\n\t}, {\n\t\tkey: '_checkAndSplitToAllowedPosition',\n\t\tvalue: function _checkAndSplitToAllowedPosition(node) {\n\t\t\tvar allowedIn = this._getAllowedIn(node, this.position.parent);\n\n\t\t\tif (!allowedIn) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\twhile (allowedIn != this.position.parent) {\n\t\t\t\t// If a parent which we'd need to leave is a limit element, break.\n\t\t\t\tif (this.schema.limits.has(this.position.parent.name)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (this.position.isAtStart) {\n\t\t\t\t\tvar parent = this.position.parent;\n\t\t\t\t\tthis.position = _position3.default.createBefore(parent);\n\n\t\t\t\t\t// Special case – parent is empty (<p>^</p>) so isAtStart == isAtEnd == true.\n\t\t\t\t\t// We can remove the element after moving selection out of it.\n\t\t\t\t\tif (parent.isEmpty) {\n\t\t\t\t\t\tthis.batch.remove(parent);\n\t\t\t\t\t}\n\t\t\t\t} else if (this.position.isAtEnd) {\n\t\t\t\t\tthis.position = _position3.default.createAfter(this.position.parent);\n\t\t\t\t} else {\n\t\t\t\t\tvar tempPos = _position3.default.createAfter(this.position.parent);\n\n\t\t\t\t\tthis.batch.split(this.position);\n\n\t\t\t\t\tthis.position = tempPos;\n\n\t\t\t\t\tthis.canMergeWith.add(this.position.nodeAfter);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n   * Gets the element in which the given node is allowed. It checks the passed element and all its ancestors.\n   *\n   * @param {module:engine/model/node~Node} node The node to check.\n   * @param {module:engine/model/element~Element} element The element in which the node's correctness should be checked.\n   * @returns {module:engine/model/element~Element|null}\n   */\n\n\t}, {\n\t\tkey: '_getAllowedIn',\n\t\tvalue: function _getAllowedIn(node, element) {\n\t\t\tif (this._checkIsAllowed(node, [element])) {\n\t\t\t\treturn element;\n\t\t\t}\n\n\t\t\tif (element.parent) {\n\t\t\t\treturn this._getAllowedIn(node, element.parent);\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n   * Check whether the given node is allowed in the specified schema path.\n   *\n   * @param {module:engine/model/node~Node} node\n   * @param {module:engine/model/schema~SchemaPath} path\n   */\n\n\t}, {\n\t\tkey: '_checkIsAllowed',\n\t\tvalue: function _checkIsAllowed(node, path) {\n\t\t\treturn this.schema.check({\n\t\t\t\tname: this._getNodeSchemaName(node),\n\t\t\t\tattributes: Array.from(node.getAttributeKeys()),\n\t\t\t\tinside: path\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * Checks wether according to the schema this is an object type element.\n   *\n   * @param {module:engine/model/node~Node} node The node to check.\n   */\n\n\t}, {\n\t\tkey: '_checkIsObject',\n\t\tvalue: function _checkIsObject(node) {\n\t\t\treturn this.schema.objects.has(this._getNodeSchemaName(node));\n\t\t}\n\n\t\t/**\n   * Gets a name under which we should check this node in the schema.\n   *\n   * @param {module:engine/model/node~Node} node The node.\n   */\n\n\t}, {\n\t\tkey: '_getNodeSchemaName',\n\t\tvalue: function _getNodeSchemaName(node) {\n\t\t\tif (node.is('text')) {\n\t\t\t\treturn '$text';\n\t\t\t}\n\n\t\t\treturn node.name;\n\t\t}\n\t}]);\n\n\treturn Insertion;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/controller/insertcontent.js\n// module id = 304\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = modifySelection;\n\nvar _position = require('../model/position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _treewalker = require('../model/treewalker');\n\nvar _treewalker2 = _interopRequireDefault(_treewalker);\n\nvar _range = require('../model/range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _unicode = require('@ckeditor/ckeditor5-utils/src/unicode');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Modifies the selection. Currently, the supported modifications are:\n *\n * * Extending. The selection focus is moved in the specified `options.direction` with a step specified in `options.unit`.\n * Possible values for `unit` are:\n *  * `'character'` (default) - moves selection by one user-perceived character. In most cases this means moving by one\n *  character in `String` sense. However, unicode also defines \"combing marks\". These are special symbols, that combines\n *  with a symbol before it (\"base character\") to create one user-perceived character. For example, `q̣̇` is a normal\n *  letter `q` with two \"combining marks\": upper dot (`Ux0307`) and lower dot (`Ux0323`). For most actions, i.e. extending\n *  selection by one position, it is correct to include both \"base character\" and all of it's \"combining marks\". That is\n *  why `'character'` value is most natural and common method of modifying selection.\n *  * `'codePoint'` - moves selection by one unicode code point. In contrary to, `'character'` unit, this will insert\n *  selection between \"base character\" and \"combining mark\", because \"combining marks\" have their own unicode code points.\n *  However, for technical reasons, unicode code points with values above `UxFFFF` are represented in native `String` by\n *  two characters, called \"surrogate pairs\". Halves of \"surrogate pairs\" have a meaning only when placed next to each other.\n *  For example `𨭎` is represented in `String` by `\\uD862\\uDF4E`. Both `\\uD862` and `\\uDF4E` do not have any meaning\n *  outside the pair (are rendered as ? when alone). Position between them would be incorrect. In this case, selection\n *  extension will include whole \"surrogate pair\".\n *\n * **Note:** if you extend a forward selection in a backward direction you will in fact shrink it.\n *\n * @param {module:engine/controller/datacontroller~DataController} dataController The data controller in context of which\n * the selection modification should be performed.\n * @param {module:engine/model/selection~Selection} selection The selection to modify.\n * @param {Object} [options]\n * @param {'forward'|'backward'} [options.direction='forward'] The direction in which the selection should be modified.\n * @param {'character'|'codePoint'} [options.unit='character'] The unit by which selection should be modified.\n */\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/controller/modifyselection\n */\n\nfunction modifySelection(dataController, selection) {\n\tvar options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n\tvar schema = dataController.model.schema;\n\tvar isForward = options.direction != 'backward';\n\tvar unit = options.unit ? options.unit : 'character';\n\n\tvar focus = selection.focus;\n\tvar walker = new _treewalker2.default({\n\t\tboundaries: getSearchRange(focus, isForward),\n\t\tsingleCharacters: true,\n\t\tdirection: isForward ? 'forward' : 'backward'\n\t});\n\n\tvar data = { walker: walker, schema: schema, isForward: isForward, unit: unit };\n\n\tvar next = void 0;\n\n\twhile (next = walker.next()) {\n\t\tif (next.done) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar position = tryExtendingTo(data, next.value);\n\n\t\tif (position) {\n\t\t\tselection.setFocus(position);\n\n\t\t\treturn;\n\t\t}\n\t}\n}\n\n// Checks whether the selection can be extended to the the walker's next value (next position).\nfunction tryExtendingTo(data, value) {\n\t// If found text, we can certainly put the focus in it. Let's just find a correct position\n\t// based on the unit.\n\tif (value.type == 'text') {\n\t\treturn getCorrectPosition(data.walker, data.unit);\n\t}\n\n\t// Entering an element.\n\tif (value.type == (data.isForward ? 'elementStart' : 'elementEnd')) {\n\t\t// If it's an object, we can select it now.\n\t\tif (data.schema.objects.has(value.item.name)) {\n\t\t\treturn _position2.default.createAt(value.item, data.isForward ? 'after' : 'before');\n\t\t}\n\n\t\t// If text allowed on this position, extend to this place.\n\t\tif (data.schema.check({ name: '$text', inside: value.nextPosition })) {\n\t\t\treturn value.nextPosition;\n\t\t}\n\t}\n\t// Leaving an element.\n\telse {\n\t\t\t// If leaving a limit element, stop.\n\t\t\tif (data.schema.limits.has(value.item.name)) {\n\t\t\t\t// NOTE: Fast-forward the walker until the end.\n\t\t\t\tdata.walker.skip(function () {\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If text allowed on this position, extend to this place.\n\t\t\tif (data.schema.check({ name: '$text', inside: value.nextPosition })) {\n\t\t\t\treturn value.nextPosition;\n\t\t\t}\n\t\t}\n}\n\n// Finds a correct position by walking in a text node and checking whether selection can be extended to given position\n// or should be extended further.\nfunction getCorrectPosition(walker, unit) {\n\tvar textNode = walker.position.textNode;\n\n\tif (textNode) {\n\t\tvar data = textNode.data;\n\t\tvar offset = walker.position.offset - textNode.startOffset;\n\n\t\twhile ((0, _unicode.isInsideSurrogatePair)(data, offset) || unit == 'character' && (0, _unicode.isInsideCombinedSymbol)(data, offset)) {\n\t\t\twalker.next();\n\n\t\t\toffset = walker.position.offset - textNode.startOffset;\n\t\t}\n\t}\n\n\treturn walker.position;\n}\n\nfunction getSearchRange(start, isForward) {\n\tvar root = start.root;\n\tvar searchEnd = _position2.default.createAt(root, isForward ? 'end' : 0);\n\n\tif (isForward) {\n\t\treturn new _range2.default(start, searchEnd);\n\t} else {\n\t\treturn new _range2.default(searchEnd, start);\n\t}\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/controller/modifyselection.js\n// module id = 305\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */\n\n/**\n * @module engine/conversion/modelconsumable\n */\n\nvar _textproxy = require('../model/textproxy');\n\nvar _textproxy2 = _interopRequireDefault(_textproxy);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Manages a list of consumable values for {@link module:engine/model/item~Item model items}.\n *\n * Consumables are various aspects of the model. A model item can be broken down into singular properties that might be\n * taken into consideration when converting that item.\n *\n * `ModelConsumable` is used by {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher} while analyzing changed\n * parts of {@link module:engine/model/document~Document the document}. The added / changed / removed model items are broken down\n * into singular properties (the item itself and it's attributes). All those parts are saved in `ModelConsumable`. Then,\n * during conversion, when given part of model item is converted (i.e. the view element has been inserted into the view,\n * but without attributes), consumable value is removed from `ModelConsumable`.\n *\n * For model items, `ModelConsumable` stores consumable values of one of following types: `insert`, `addAttribute:<attributeKey>`,\n * `changeAttribute:<attributeKey>`, `removeAttribute:<attributeKey>`.\n *\n * In most cases, it is enough to let {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher}\n * gather consumable values, so there is no need to use\n * @link module:engine/conversion/modelconsumable~ModelConsumable#add add method} directly.\n * However, it is important to understand how consumable values can be\n * {@link module:engine/conversion/modelconsumable~ModelConsumable#consume consumed}.\n * See {@link module:engine/conversion/model-selection-to-view-converters default model to view converters} for more information.\n *\n * Keep in mind, that one conversion event may have multiple callbacks (converters) attached to it. Each of those is\n * able to convert one or more parts of the model. However, when one of those callbacks actually converts\n * something, other should not, because they would duplicate the results. Using `ModelConsumable` helps avoiding\n * this situation, because callbacks should only convert those values, which were not yet consumed from `ModelConsumable`.\n *\n * Consuming multiple values in a single callback:\n *\n *\t\t// Converter for custom `image` element that might have a `caption` element inside which changes\n *\t\t// how the image is displayed in the view:\n *\t\t//\n *\t\t// Model:\n *\t\t//\n *\t\t// [image]\n *\t\t//   └─ [caption]\n *\t\t//       └─ foo\n *\t\t//\n *\t\t// View:\n *\t\t//\n *\t\t// <figure>\n *\t\t//   ├─ <img />\n *\t\t//   └─ <caption>\n *\t\t//       └─ foo\n *\t\tmodelConversionDispatcher.on( 'insert:image', ( evt, data, consumable, conversionApi ) => {\n *\t\t\t// First, consume the `image` element.\n *\t\t\tconsumable.consume( data.item, 'insert' );\n *\n *\t\t\t// Just create normal image element for the view.\n *\t\t\t// Maybe it will be \"decorated\" later.\n *\t\t\tconst viewImage = new ViewElement( 'img' );\n *\t\t\tconst insertPosition = conversionApi.mapper.toViewPosition( data.range.start );\n *\n *\t\t\t// Check if the `image` element has children.\n *\t\t\tif ( data.item.childCount > 0 ) {\n *\t\t\t\tconst modelCaption = data.item.getChild( 0 );\n *\n *\t\t\t\t// `modelCaption` insertion change is consumed from consumable values.\n *\t\t\t\t// It will not be converted by other converters, but it's children (probably some text) will be.\n *\t\t\t\t// Through mapping, converters for text will know where to insert contents of `modelCaption`.\n *\t\t\t\tif ( consumable.consume( modelCaption, 'insert' ) ) {\n *\t\t\t\t\tconst viewCaption = new ViewElement( 'figcaption' );\n *\n *\t\t\t\t\tconst viewImageHolder = new ViewElement( 'figure', null, [ viewImage, viewCaption ] );\n *\n *\t\t\t\t\tconversionApi.mapper.bindElements( modelCaption, viewCaption );\n *\t\t\t\t\tconversionApi.mapper.bindElements( data.item, viewImageHolder );\n *\t\t\t\t\tviewWriter.insert( insertPosition, viewImageHolder );\n *\t\t\t\t}\n *\t\t\t} else {\n *\t\t\t\tconversionApi.mapper.bindElements( data.item, viewImage );\n *\t\t\t\tviewWriter.insert( insertPosition, viewImage );\n *\t\t\t}\n *\n *\t\t\tevt.stop();\n *\t\t} );\n */\nvar ModelConsumable = function () {\n\t/**\n  * Creates an empty consumables list.\n  */\n\tfunction ModelConsumable() {\n\t\t_classCallCheck(this, ModelConsumable);\n\n\t\t/**\n   * Contains list of consumable values.\n   *\n   * @private\n   * @member {Map} module:engine/conversion/modelconsumable~ModelConsumable#_consumable\n   */\n\t\tthis._consumable = new Map();\n\n\t\t/**\n   * For each {@link module:engine/model/textproxy~TextProxy} added to `ModelConsumable`, this registry holds parent\n   * of that `TextProxy` and start and end indices of that `TextProxy`. This allows identification of `TextProxy`\n   * instances that points to the same part of the model but are different instances. Each distinct `TextProxy`\n   * is given unique `Symbol` which is then registered as consumable. This process is transparent for `ModelConsumable`\n   * API user because whenever `TextProxy` is added, tested, consumed or reverted, internal mechanisms of\n   * `ModelConsumable` translates `TextProxy` to that unique `Symbol`.\n   *\n   * @private\n   * @member {Map} module:engine/conversion/modelconsumable~ModelConsumable#_textProxyRegistry\n   */\n\t\tthis._textProxyRegistry = new Map();\n\t}\n\n\t/**\n  * Adds a consumable value to the consumables list and links it with given model item.\n  *\n  *\t\tmodelConsumable.add( modelElement, 'insert' ); // Add `modelElement` insertion change to consumable values.\n  *\t\tmodelConsumable.add( modelElement, 'addAttribute:bold' ); // Add `bold` attribute insertion on `modelElement` change.\n  *\t\tmodelConsumable.add( modelElement, 'removeAttribute:bold' ); // Add `bold` attribute removal on `modelElement` change.\n  *\t\tmodelConsumable.add( modelSelection, 'selection' ); // Add `modelSelection` to consumable values.\n  *\t\tmodelConsumable.add( modelSelection, 'selectionAttribute:bold' ); // Add `bold` attribute on `modelSelection` to consumables.\n  *\t\tmodelConsumable.add( modelRange, 'range' ); // Add `modelRange` to consumable values.\n  *\n  * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\n  * Model item, range or selection that has the consumable.\n  * @param {String} type Consumable type.\n  */\n\n\n\t_createClass(ModelConsumable, [{\n\t\tkey: 'add',\n\t\tvalue: function add(item, type) {\n\t\t\tif (item instanceof _textproxy2.default) {\n\t\t\t\titem = this._getSymbolForTextProxy(item);\n\t\t\t}\n\n\t\t\tif (!this._consumable.has(item)) {\n\t\t\t\tthis._consumable.set(item, new Map());\n\t\t\t}\n\n\t\t\tthis._consumable.get(item).set(type, true);\n\t\t}\n\n\t\t/**\n   * Removes given consumable value from given model item.\n   *\n   *\t\tmodelConsumable.consume( modelElement, 'insert' ); // Remove `modelElement` insertion change from consumable values.\n   *\t\tmodelConsumable.consume( modelElement, 'addAttribute:bold' ); // Remove `bold` attribute insertion on `modelElement` change.\n   *\t\tmodelConsumable.consume( modelElement, 'removeAttribute:bold' ); // Remove `bold` attribute removal on `modelElement` change.\n   *\t\tmodelConsumable.consume( modelSelection, 'selection' ); // Remove `modelSelection` from consumable values.\n   *\t\tmodelConsumable.consume( modelSelection, 'selectionAttribute:bold' ); // Remove `bold` on `modelSelection` from consumables.\n   *\t\tmodelConsumable.consume( modelRange, 'range' ); // Remove 'modelRange' from consumable values.\n   *\n   * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\n   * Model item, range or selection from which consumable will be consumed.\n   * @param {String} type Consumable type.\n   * @returns {Boolean} `true` if consumable value was available and was consumed, `false` otherwise.\n   */\n\n\t}, {\n\t\tkey: 'consume',\n\t\tvalue: function consume(item, type) {\n\t\t\tif (item instanceof _textproxy2.default) {\n\t\t\t\titem = this._getSymbolForTextProxy(item);\n\t\t\t}\n\n\t\t\tif (this.test(item, type)) {\n\t\t\t\tthis._consumable.get(item).set(type, false);\n\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Tests whether there is a consumable value of given type connected with given model item.\n   *\n   *\t\tmodelConsumable.test( modelElement, 'insert' ); // Check for `modelElement` insertion change.\n   *\t\tmodelConsumable.test( modelElement, 'addAttribute:bold' ); // Check for `bold` attribute insertion on `modelElement` change.\n   *\t\tmodelConsumable.test( modelElement, 'removeAttribute:bold' ); // Check for `bold` attribute removal on `modelElement` change.\n   *\t\tmodelConsumable.test( modelSelection, 'selection' ); // Check if `modelSelection` is consumable.\n   *\t\tmodelConsumable.test( modelSelection, 'selectionAttribute:bold' ); // Check if `bold` on `modelSelection` is consumable.\n   *\t\tmodelConsumable.test( modelRange, 'range' ); // Check if `modelRange` is consumable.\n   *\n   * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\n   * Model item, range or selection to be tested.\n   * @param {String} type Consumable type.\n   * @returns {null|Boolean} `null` if such consumable was never added, `false` if the consumable values was\n   * already consumed or `true` if it was added and not consumed yet.\n   */\n\n\t}, {\n\t\tkey: 'test',\n\t\tvalue: function test(item, type) {\n\t\t\tif (item instanceof _textproxy2.default) {\n\t\t\t\titem = this._getSymbolForTextProxy(item);\n\t\t\t}\n\n\t\t\tvar itemConsumables = this._consumable.get(item);\n\n\t\t\tif (itemConsumables === undefined) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar value = itemConsumables.get(type);\n\n\t\t\tif (value === undefined) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\n\t\t/**\n   * Reverts consuming of consumable value.\n   *\n   *\t\tmodelConsumable.revert( modelElement, 'insert' ); // Revert consuming `modelElement` insertion change.\n   *\t\tmodelConsumable.revert( modelElement, 'addAttribute:bold' ); // Revert consuming `bold` attribute insert from `modelElement`.\n   *\t\tmodelConsumable.revert( modelElement, 'removeAttribute:bold' ); // Revert consuming `bold` attribute remove from `modelElement`.\n   *\t\tmodelConsumable.revert( modelSelection, 'selection' ); // Revert consuming `modelSelection`.\n   *\t\tmodelConsumable.revert( modelSelection, 'selectionAttribute:bold' ); // Revert consuming `bold` from `modelSelection`.\n   *\t\tmodelConsumable.revert( modelRange, 'range' ); // Revert consuming `modelRange`.\n   *\n   * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\n   * Model item, range or selection to be reverted.\n   * @param {String} type Consumable type.\n   * @returns {null|Boolean} `true` if consumable has been reversed, `false` otherwise. `null` if the consumable has\n   * never been added.\n   */\n\n\t}, {\n\t\tkey: 'revert',\n\t\tvalue: function revert(item, type) {\n\t\t\tif (item instanceof _textproxy2.default) {\n\t\t\t\titem = this._getSymbolForTextProxy(item);\n\t\t\t}\n\n\t\t\tvar test = this.test(item, type);\n\n\t\t\tif (test === false) {\n\t\t\t\tthis._consumable.get(item).set(type, true);\n\n\t\t\t\treturn true;\n\t\t\t} else if (test === true) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n   * Gets a unique symbol for passed {@link module:engine/model/textproxy~TextProxy} instance. All `TextProxy` instances that\n   * have same parent, same start index and same end index will get the same symbol.\n   *\n   * Used internally to correctly consume `TextProxy` instances.\n   *\n   * @private\n   * @param {module:engine/model/textproxy~TextProxy} textProxy `TextProxy` instance to get a symbol for.\n   * @returns {Symbol} Symbol representing all equal instances of `TextProxy`.\n   */\n\n\t}, {\n\t\tkey: '_getSymbolForTextProxy',\n\t\tvalue: function _getSymbolForTextProxy(textProxy) {\n\t\t\tvar symbol = null;\n\n\t\t\tvar startMap = this._textProxyRegistry.get(textProxy.startOffset);\n\n\t\t\tif (startMap) {\n\t\t\t\tvar endMap = startMap.get(textProxy.endOffset);\n\n\t\t\t\tif (endMap) {\n\t\t\t\t\tsymbol = endMap.get(textProxy.parent);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!symbol) {\n\t\t\t\tsymbol = this._addSymbolForTextProxy(textProxy.startOffset, textProxy.endOffset, textProxy.parent);\n\t\t\t}\n\n\t\t\treturn symbol;\n\t\t}\n\n\t\t/**\n   * Adds a symbol for given properties that characterizes a {@link module:engine/model/textproxy~TextProxy} instance.\n   *\n   * Used internally to correctly consume `TextProxy` instances.\n   *\n   * @private\n   * @param {Number} startIndex Text proxy start index in it's parent.\n   * @param {Number} endIndex Text proxy end index in it's parent.\n   * @param {module:engine/model/element~Element} parent Text proxy parent.\n   * @returns {Symbol} Symbol generated for given properties.\n   */\n\n\t}, {\n\t\tkey: '_addSymbolForTextProxy',\n\t\tvalue: function _addSymbolForTextProxy(start, end, parent) {\n\t\t\tvar symbol = Symbol('textProxySymbol');\n\t\t\tvar startMap = void 0,\n\t\t\t    endMap = void 0;\n\n\t\t\tstartMap = this._textProxyRegistry.get(start);\n\n\t\t\tif (!startMap) {\n\t\t\t\tstartMap = new Map();\n\t\t\t\tthis._textProxyRegistry.set(start, startMap);\n\t\t\t}\n\n\t\t\tendMap = startMap.get(end);\n\n\t\t\tif (!endMap) {\n\t\t\t\tendMap = new Map();\n\t\t\t\tstartMap.set(end, endMap);\n\t\t\t}\n\n\t\t\tendMap.set(parent, symbol);\n\n\t\t\treturn symbol;\n\t\t}\n\t}]);\n\n\treturn ModelConsumable;\n}();\n\nexports.default = ModelConsumable;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/conversion/modelconsumable.js\n// module id = 306\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.convertSelectionChange = convertSelectionChange;\n\nvar _selection = require('../model/selection');\n\nvar _selection2 = _interopRequireDefault(_selection);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Function factory, creates a callback function which converts a {@link module:engine/view/selection~Selection view selection} taken\n * from the {@link module:engine/view/document~Document#event:selectionChange} event\n * and sets in on the {@link module:engine/model/document~Document#selection model}.\n *\n * **Note**: because there is no view selection change dispatcher nor any other advanced view selection to model\n * conversion mechanism, the callback should be set directly on view document.\n *\n *\t\tview.document.on( 'selectionChange', convertSelectionChange( modelDocument, mapper ) );\n *\n * @param {module:engine/model/document~Document} modelDocument Model document on which selection should be updated.\n * @param {module:engine/conversion/mapper~Mapper} mapper Conversion mapper.\n * @returns {Function} {@link module:engine/view/document~Document#event:selectionChange} callback function.\n */\nfunction convertSelectionChange(modelDocument, mapper) {\n  return function (evt, data) {\n    var viewSelection = data.newSelection;\n    var modelSelection = new _selection2.default();\n\n    var ranges = [];\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = viewSelection.getRanges()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var viewRange = _step.value;\n\n        ranges.push(mapper.toModelRange(viewRange));\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    modelSelection.setRanges(ranges, viewSelection.isBackward);\n\n    if (!modelSelection.isEqual(modelDocument.selection)) {\n      modelDocument.enqueueChanges(function () {\n        modelDocument.selection.setTo(modelSelection);\n      });\n    }\n  };\n} /**\n   * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n   * For licensing, see LICENSE.md.\n   */\n\n/**\n * Contains {@link module:engine/view/selection~Selection view selection}\n * to {@link module:engine/model/selection~Selection model selection} conversion helpers.\n *\n * @module engine/conversion/view-selection-to-model-converters\n */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/conversion/view-selection-to-model-converters.js\n// module id = 307\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.convertToModelFragment = convertToModelFragment;\nexports.convertText = convertText;\n\nvar _documentfragment = require('../model/documentfragment');\n\nvar _documentfragment2 = _interopRequireDefault(_documentfragment);\n\nvar _text = require('../model/text');\n\nvar _text2 = _interopRequireDefault(_text);\n\nvar _writer = require('../model/writer');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Contains {@link module:engine/view/view view} to {@link module:engine/model/model model} converters for\n * {@link module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher}.\n *\n * @module engine/conversion/view-to-model-converters\n */\n\n/**\n * Function factory, creates a converter that converts {@link module:engine/view/documentfragment~DocumentFragment view document fragment}\n * or all children of {@link module:engine/view/element~Element} into\n * {@link module:engine/model/documentfragment~DocumentFragment model document fragment}.\n * This is the \"entry-point\" converter for view to model conversion. This converter starts the conversion of all children\n * of passed view document fragment. Those children {@link module:engine/view/node~Node view nodes} are then handled by other converters.\n *\n * This also a \"default\", last resort converter for all view elements that has not been converted by other converters.\n * When a view element is being converted to the model but it does not have converter specified, that view element\n * will be converted to {@link module:engine/model/documentfragment~DocumentFragment model document fragment} and returned.\n *\n * @returns {Function} Universal converter for view {@link module:engine/view/documentfragment~DocumentFragment fragments} and\n * {@link module:engine/view/element~Element elements} that returns\n * {@link module:engine/model/documentfragment~DocumentFragment model fragment} with children of converted view item.\n */\nfunction convertToModelFragment() {\n  return function (evt, data, consumable, conversionApi) {\n    // Second argument in `consumable.consume` is discarded for ViewDocumentFragment but is needed for ViewElement.\n    if (!data.output && consumable.consume(data.input, { name: true })) {\n      var convertedChildren = conversionApi.convertChildren(data.input, consumable, data);\n\n      data.output = new _documentfragment2.default((0, _writer.normalizeNodes)(convertedChildren));\n    }\n  };\n}\n\n/**\n * Function factory, creates a converter that converts {@link module:engine/view/text~Text} to {@link module:engine/model/text~Text}.\n *\n * @returns {Function} {@link module:engine/view/text~Text View text} converter.\n */\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\nfunction convertText() {\n  return function (evt, data, consumable, conversionApi) {\n    var schemaQuery = {\n      name: '$text',\n      inside: data.context\n    };\n\n    if (conversionApi.schema.check(schemaQuery)) {\n      if (consumable.consume(data.input)) {\n        data.output = new _text2.default(data.input.data);\n      }\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/conversion/view-to-model-converters.js\n// module id = 308\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */\n\n/**\n * @module engine/conversion/viewconsumable\n */\n\nvar _isArray = require('@ckeditor/ckeditor5-utils/src/lib/lodash/isArray');\n\nvar _isArray2 = _interopRequireDefault(_isArray);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Class used for handling consumption of view {@link module:engine/view/element~Element elements},\n * {@link module:engine/view/text~Text text nodes} and {@link module:engine/view/documentfragment~DocumentFragment document fragments}.\n * Element's name and its parts (attributes, classes and styles) can be consumed separately. Consuming an element's name\n * does not consume its attributes, classes and styles.\n * To add items for consumption use {@link module:engine/conversion/viewconsumable~ViewConsumable#add add method}.\n * To test items use {@link module:engine/conversion/viewconsumable~ViewConsumable#test test method}.\n * To consume items use {@link module:engine/conversion/viewconsumable~ViewConsumable#consume consume method}.\n * To revert already consumed items use {@link module:engine/conversion/viewconsumable~ViewConsumable#revert revert method}.\n *\n *\t\tviewConsumable.add( element, { name: true } ); // Adds element's name as ready to be consumed.\n *\t\tviewConsumable.add( textNode ); // Adds text node for consumption.\n *\t\tviewConsumable.add( docFragment ); // Adds document fragment for consumption.\n *\t\tviewConsumable.test( element, { name: true }  ); // Tests if element's name can be consumed.\n *\t\tviewConsumable.test( textNode ); // Tests if text node can be consumed.\n *\t\tviewConsumable.test( docFragment ); // Tests if document fragment can be consumed.\n *\t\tviewConsumable.consume( element, { name: true }  ); // Consume element's name.\n *\t\tviewConsumable.consume( textNode ); // Consume text node.\n *\t\tviewConsumable.consume( docFragment ); // Consume document fragment.\n *\t\tviewConsumable.revert( element, { name: true }  ); // Revert already consumed element's name.\n *\t\tviewConsumable.revert( textNode ); // Revert already consumed text node.\n *\t\tviewConsumable.revert( docFragment ); // Revert already consumed document fragment.\n */\nvar ViewConsumable = function () {\n\t/**\n  * Creates new ViewConsumable.\n  */\n\tfunction ViewConsumable() {\n\t\t_classCallCheck(this, ViewConsumable);\n\n\t\t/**\n   * Map of consumable elements. If {@link module:engine/view/element~Element element} is used as a key,\n   * {@link module:engine/conversion/viewconsumable~ViewElementConsumables ViewElementConsumables} instance is stored as value.\n   * For {@link module:engine/view/text~Text text nodes} and\n   * {@link module:engine/view/documentfragment~DocumentFragment document fragments} boolean value is stored as value.\n   *\n   * @protected\n   * @member {Map.<module:engine/conversion/viewconsumable~ViewElementConsumables|Boolean>}\n  */\n\t\tthis._consumables = new Map();\n\t}\n\n\t/**\n  * Adds {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\n  * {@link module:engine/view/documentfragment~DocumentFragment document fragment} as ready to be consumed.\n  *\n  *\t\tviewConsumable.add( p, { name: true } ); // Adds element's name to consume.\n  *\t\tviewConsumable.add( p, { attribute: 'name' } ); // Adds element's attribute.\n  *\t\tviewConsumable.add( p, { class: 'foobar' } ); // Adds element's class.\n  *\t\tviewConsumable.add( p, { style: 'color' } ); // Adds element's style\n  *\t\tviewConsumable.add( p, { attribute: 'name', style: 'color' } ); // Adds attribute and style.\n  *\t\tviewConsumable.add( p, { class: [ 'baz', 'bar' ] } ); // Multiple consumables can be provided.\n  *\t\tviewConsumable.add( textNode ); // Adds text node to consume.\n  *\t\tviewConsumable.add( docFragment ); // Adds document fragment to consume.\n  *\n  * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `viewconsumable-invalid-attribute` when `class` or `style`\n  * attribute is provided - it should be handled separately by providing actual style/class.\n  *\n  *\t\tviewConsumable.add( p, { attribute: 'style' } ); // This call will throw an exception.\n  *\t\tviewConsumable.add( p, { style: 'color' } ); // This is properly handled style.\n  *\n  * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\n  * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\n  * @param {Boolean} consumables.name If set to true element's name will be included.\n  * @param {String|Array.<String>} consumables.attribute Attribute name or array of attribute names.\n  * @param {String|Array.<String>} consumables.class Class name or array of class names.\n  * @param {String|Array.<String>} consumables.style Style name or array of style names.\n  */\n\n\n\t_createClass(ViewConsumable, [{\n\t\tkey: 'add',\n\t\tvalue: function add(element, consumables) {\n\t\t\tvar elementConsumables = void 0;\n\n\t\t\t// For text nodes and document fragments just mark them as consumable.\n\t\t\tif (element.is('text') || element.is('documentFragment')) {\n\t\t\t\tthis._consumables.set(element, true);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For elements create new ViewElementConsumables or update already existing one.\n\t\t\tif (!this._consumables.has(element)) {\n\t\t\t\telementConsumables = new ViewElementConsumables();\n\t\t\t\tthis._consumables.set(element, elementConsumables);\n\t\t\t} else {\n\t\t\t\telementConsumables = this._consumables.get(element);\n\t\t\t}\n\n\t\t\telementConsumables.add(consumables);\n\t\t}\n\n\t\t/**\n   * Tests if {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\n   * {@link module:engine/view/documentfragment~DocumentFragment document fragment} can be consumed.\n   * It returns `true` when all items included in method's call can be consumed. Returns `false` when\n   * first already consumed item is found and `null` when first non-consumable item is found.\n   *\n   *\t\tviewConsumable.test( p, { name: true } ); // Tests element's name.\n   *\t\tviewConsumable.test( p, { attribute: 'name' } ); // Tests attribute.\n   *\t\tviewConsumable.test( p, { class: 'foobar' } ); // Tests class.\n   *\t\tviewConsumable.test( p, { style: 'color' } ); // Tests style.\n   *\t\tviewConsumable.test( p, { attribute: 'name', style: 'color' } ); // Tests attribute and style.\n   *\t\tviewConsumable.test( p, { class: [ 'baz', 'bar' ] } ); // Multiple consumables can be tested.\n   *\t\tviewConsumable.test( textNode ); // Tests text node.\n   *\t\tviewConsumable.test( docFragment ); // Tests document fragment.\n   *\n   * Testing classes and styles as attribute will test if all added classes/styles can be consumed.\n   *\n   *\t\tviewConsumable.test( p, { attribute: 'class' } ); // Tests if all added classes can be consumed.\n   *\t\tviewConsumable.test( p, { attribute: 'style' } ); // Tests if all added styles can be consumed.\n   *\n   * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\n   * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\n   * @param {Boolean} consumables.name If set to true element's name will be included.\n   * @param {String|Array.<String>} consumables.attribute Attribute name or array of attribute names.\n   * @param {String|Array.<String>} consumables.class Class name or array of class names.\n   * @param {String|Array.<String>} consumables.style Style name or array of style names.\n   * @returns {Boolean|null} Returns `true` when all items included in method's call can be consumed. Returns `false`\n   * when first already consumed item is found and `null` when first non-consumable item is found.\n   */\n\n\t}, {\n\t\tkey: 'test',\n\t\tvalue: function test(element, consumables) {\n\t\t\tvar elementConsumables = this._consumables.get(element);\n\n\t\t\tif (elementConsumables === undefined) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// For text nodes and document fragments return stored boolean value.\n\t\t\tif (element.is('text') || element.is('documentFragment')) {\n\t\t\t\treturn elementConsumables;\n\t\t\t}\n\n\t\t\t// For elements test consumables object.\n\t\t\treturn elementConsumables.test(consumables);\n\t\t}\n\n\t\t/**\n   * Consumes {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\n   * {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\n   * It returns `true` when all items included in method's call can be consumed, otherwise returns `false`.\n   *\n   *\t\tviewConsumable.consume( p, { name: true } ); // Consumes element's name.\n   *\t\tviewConsumable.consume( p, { attribute: 'name' } ); // Consumes element's attribute.\n   *\t\tviewConsumable.consume( p, { class: 'foobar' } ); // Consumes element's class.\n   *\t\tviewConsumable.consume( p, { style: 'color' } ); // Consumes element's style.\n   *\t\tviewConsumable.consume( p, { attribute: 'name', style: 'color' } ); // Consumes attribute and style.\n   *\t\tviewConsumable.consume( p, { class: [ 'baz', 'bar' ] } ); // Multiple consumables can be consumed.\n   *\t\tviewConsumable.consume( textNode ); // Consumes text node.\n   *\t\tviewConsumable.consume( docFragment ); // Consumes document fragment.\n   *\n   * Consuming classes and styles as attribute will test if all added classes/styles can be consumed.\n   *\n   *\t\tviewConsumable.consume( p, { attribute: 'class' } ); // Consume only if all added classes can be consumed.\n   *\t\tviewConsumable.consume( p, { attribute: 'style' } ); // Consume only if all added styles can be consumed.\n   *\n   * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\n   * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\n   * @param {Boolean} consumables.name If set to true element's name will be included.\n   * @param {String|Array.<String>} consumables.attribute Attribute name or array of attribute names.\n   * @param {String|Array.<String>} consumables.class Class name or array of class names.\n   * @param {String|Array.<String>} consumables.style Style name or array of style names.\n   * @returns {Boolean} Returns `true` when all items included in method's call can be consumed,\n   * otherwise returns `false`.\n   */\n\n\t}, {\n\t\tkey: 'consume',\n\t\tvalue: function consume(element, consumables) {\n\t\t\tif (this.test(element, consumables)) {\n\t\t\t\tif (element.is('text') || element.is('documentFragment')) {\n\t\t\t\t\t// For text nodes and document fragments set value to false.\n\t\t\t\t\tthis._consumables.set(element, false);\n\t\t\t\t} else {\n\t\t\t\t\t// For elements - consume consumables object.\n\t\t\t\t\tthis._consumables.get(element).consume(consumables);\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n   * Reverts {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\n   * {@link module:engine/view/documentfragment~DocumentFragment document fragment} so they can be consumed once again.\n   * Method does not revert items that were never previously added for consumption, even if they are included in\n   * method's call.\n   *\n   *\t\tviewConsumable.revert( p, { name: true } ); // Reverts element's name.\n   *\t\tviewConsumable.revert( p, { attribute: 'name' } ); // Reverts element's attribute.\n   *\t\tviewConsumable.revert( p, { class: 'foobar' } ); // Reverts element's class.\n   *\t\tviewConsumable.revert( p, { style: 'color' } ); // Reverts element's style.\n   *\t\tviewConsumable.revert( p, { attribute: 'name', style: 'color' } ); // Reverts attribute and style.\n   *\t\tviewConsumable.revert( p, { class: [ 'baz', 'bar' ] } ); // Multiple names can be reverted.\n   *\t\tviewConsumable.revert( textNode ); // Reverts text node.\n   *\t\tviewConsumable.revert( docFragment ); // Reverts document fragment.\n   *\n   * Reverting classes and styles as attribute will revert all classes/styles that were previously added for\n   * consumption.\n   *\n   *\t\tviewConsumable.revert( p, { attribute: 'class' } ); // Reverts all classes added for consumption.\n   *\t\tviewConsumable.revert( p, { attribute: 'style' } ); // Reverts all styles added for consumption.\n   *\n   * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\n   * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\n   * @param {Boolean} consumables.name If set to true element's name will be included.\n   * @param {String|Array.<String>} consumables.attribute Attribute name or array of attribute names.\n   * @param {String|Array.<String>} consumables.class Class name or array of class names.\n   * @param {String|Array.<String>} consumables.style Style name or array of style names.\n   */\n\n\t}, {\n\t\tkey: 'revert',\n\t\tvalue: function revert(element, consumables) {\n\t\t\tvar elementConsumables = this._consumables.get(element);\n\n\t\t\tif (elementConsumables !== undefined) {\n\t\t\t\tif (element.is('text') || element.is('documentFragment')) {\n\t\t\t\t\t// For text nodes and document fragments - set consumable to true.\n\t\t\t\t\tthis._consumables.set(element, true);\n\t\t\t\t} else {\n\t\t\t\t\t// For elements - revert items from consumables object.\n\t\t\t\t\telementConsumables.revert(consumables);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Creates consumable object from {@link module:engine/view/element~Element view element}. Consumable object will include\n   * element's name and all its attributes, classes and styles.\n   *\n   * @static\n   * @param {module:engine/view/element~Element} element\n   * @returns {Object} consumables\n   */\n\n\t}], [{\n\t\tkey: 'consumablesFromElement',\n\t\tvalue: function consumablesFromElement(element) {\n\t\t\tvar consumables = {\n\t\t\t\tname: true,\n\t\t\t\tattribute: [],\n\t\t\t\tclass: [],\n\t\t\t\tstyle: []\n\t\t\t};\n\n\t\t\tvar attributes = element.getAttributeKeys();\n\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = attributes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar attribute = _step.value;\n\n\t\t\t\t\t// Skip classes and styles - will be added separately.\n\t\t\t\t\tif (attribute == 'style' || attribute == 'class') {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconsumables.attribute.push(attribute);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar classes = element.getClassNames();\n\n\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\tvar _didIteratorError2 = false;\n\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator2 = classes[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\tvar className = _step2.value;\n\n\t\t\t\t\tconsumables.class.push(className);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t_iteratorError2 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar styles = element.getStyleNames();\n\n\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\tvar _didIteratorError3 = false;\n\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator3 = styles[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\tvar style = _step3.value;\n\n\t\t\t\t\tconsumables.style.push(style);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t_iteratorError3 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn consumables;\n\t\t}\n\n\t\t/**\n   * Creates {@link module:engine/conversion/viewconsumable~ViewConsumable ViewConsumable} instance from\n   * {@link module:engine/view/node~Node node} or {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\n   * Instance will contain all elements, child nodes, attributes, styles and classes added for consumption.\n   *\n   * @static\n   * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} from View node or document fragment\n   * from which `ViewConsumable` will be created.\n   * @param {module:engine/conversion/viewconsumable~ViewConsumable} [instance] If provided, given `ViewConsumable` instance will be used\n   * to add all consumables. It will be returned instead of a new instance.\n   */\n\n\t}, {\n\t\tkey: 'createFrom',\n\t\tvalue: function createFrom(from, instance) {\n\t\t\tif (!instance) {\n\t\t\t\tinstance = new ViewConsumable();\n\t\t\t}\n\n\t\t\tif (from.is('text')) {\n\t\t\t\tinstance.add(from);\n\n\t\t\t\treturn instance;\n\t\t\t}\n\n\t\t\t// Add `from` itself, if it is an element.\n\t\t\tif (from.is('element')) {\n\t\t\t\tinstance.add(from, ViewConsumable.consumablesFromElement(from));\n\t\t\t}\n\n\t\t\tif (from.is('documentFragment')) {\n\t\t\t\tinstance.add(from);\n\t\t\t}\n\n\t\t\tvar _iteratorNormalCompletion4 = true;\n\t\t\tvar _didIteratorError4 = false;\n\t\t\tvar _iteratorError4 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator4 = from.getChildren()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\t\t\tvar child = _step4.value;\n\n\t\t\t\t\tinstance = ViewConsumable.createFrom(child, instance);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError4 = true;\n\t\t\t\t_iteratorError4 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t\t\t_iterator4.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError4) {\n\t\t\t\t\t\tthrow _iteratorError4;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn instance;\n\t\t}\n\t}]);\n\n\treturn ViewConsumable;\n}();\n\n/**\n * This is a private helper-class for {@link module:engine/conversion/viewconsumable~ViewConsumable}.\n * It represents and manipulates consumable parts of a single {@link module:engine/view/element~Element}.\n *\n * @private\n */\n\n\nexports.default = ViewConsumable;\n\nvar ViewElementConsumables = function () {\n\t/**\n  * Creates ViewElementConsumables instance.\n  */\n\tfunction ViewElementConsumables() {\n\t\t_classCallCheck(this, ViewElementConsumables);\n\n\t\t/**\n   * Flag indicating if name of the element can be consumed.\n   *\n   * @private\n   * @member {Boolean}\n   */\n\t\tthis._canConsumeName = null;\n\n\t\t/**\n   * Contains maps of element's consumables: attributes, classes and styles.\n   *\n   * @private\n   * @member {Object}\n   */\n\t\tthis._consumables = {\n\t\t\tattribute: new Map(),\n\t\t\tstyle: new Map(),\n\t\t\tclass: new Map()\n\t\t};\n\t}\n\n\t/**\n  * Adds consumable parts of the {@link module:engine/view/element~Element view element}.\n  * Element's name itself can be marked to be consumed (when element's name is consumed its attributes, classes and\n  * styles still could be consumed):\n  *\n  *\t\tconsumables.add( { name: true } );\n  *\n  * Attributes classes and styles:\n  *\n  *\t\tconsumables.add( { attribute: 'title', class: 'foo', style: 'color' } );\n  *\t\tconsumables.add( { attribute: [ 'title', 'name' ], class: [ 'foo', 'bar' ] );\n  *\n  * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `viewconsumable-invalid-attribute` when `class` or `style`\n  * attribute is provided - it should be handled separately by providing `style` and `class` in consumables object.\n  *\n  * @param {Object} consumables Object describing which parts of the element can be consumed.\n  * @param {Boolean} consumables.name If set to `true` element's name will be added as consumable.\n  * @param {String|Array.<String>} consumables.attribute Attribute name or array of attribute names to add as consumable.\n  * @param {String|Array.<String>} consumables.class Class name or array of class names to add as consumable.\n  * @param {String|Array.<String>} consumables.style Style name or array of style names to add as consumable.\n  */\n\n\n\t_createClass(ViewElementConsumables, [{\n\t\tkey: 'add',\n\t\tvalue: function add(consumables) {\n\t\t\tif (consumables.name) {\n\t\t\t\tthis._canConsumeName = true;\n\t\t\t}\n\n\t\t\tfor (var type in this._consumables) {\n\t\t\t\tif (type in consumables) {\n\t\t\t\t\tthis._add(type, consumables[type]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Tests if parts of the {@link module:engine/view/node~Node view node} can be consumed.\n   *\n   * Element's name can be tested:\n   *\n   *\t\tconsumables.test( { name: true } );\n   *\n   * Attributes classes and styles:\n   *\n   *\t\tconsumables.test( { attribute: 'title', class: 'foo', style: 'color' } );\n   *\t\tconsumables.test( { attribute: [ 'title', 'name' ], class: [ 'foo', 'bar' ] );\n   *\n   * @param {Object} consumables Object describing which parts of the element should be tested.\n   * @param {Boolean} consumables.name If set to `true` element's name will be tested.\n   * @param {String|Array.<String>} consumables.attribute Attribute name or array of attribute names to test.\n   * @param {String|Array.<String>} consumables.class Class name or array of class names to test.\n   * @param {String|Array.<String>} consumables.style Style name or array of style names to test.\n   * @returns {Boolean|null} `true` when all tested items can be consumed, `null` when even one of the items\n   * was never marked for consumption and `false` when even one of the items was already consumed.\n   */\n\n\t}, {\n\t\tkey: 'test',\n\t\tvalue: function test(consumables) {\n\t\t\t// Check if name can be consumed.\n\t\t\tif (consumables.name && !this._canConsumeName) {\n\t\t\t\treturn this._canConsumeName;\n\t\t\t}\n\n\t\t\tfor (var type in this._consumables) {\n\t\t\t\tif (type in consumables) {\n\t\t\t\t\tvar value = this._test(type, consumables[type]);\n\n\t\t\t\t\tif (value !== true) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Return true only if all can be consumed.\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n   * Consumes parts of {@link module:engine/view/element~Element view element}. This function does not check if consumable item\n   * is already consumed - it consumes all consumable items provided.\n   * Element's name can be consumed:\n   *\n   *\t\tconsumables.consume( { name: true } );\n   *\n   * Attributes classes and styles:\n   *\n   *\t\tconsumables.consume( { attribute: 'title', class: 'foo', style: 'color' } );\n   *\t\tconsumables.consume( { attribute: [ 'title', 'name' ], class: [ 'foo', 'bar' ] );\n   *\n   * @param {Object} consumables Object describing which parts of the element should be consumed.\n   * @param {Boolean} consumables.name If set to `true` element's name will be consumed.\n   * @param {String|Array.<String>} consumables.attribute Attribute name or array of attribute names to consume.\n   * @param {String|Array.<String>} consumables.class Class name or array of class names to consume.\n   * @param {String|Array.<String>} consumables.style Style name or array of style names to consume.\n   */\n\n\t}, {\n\t\tkey: 'consume',\n\t\tvalue: function consume(consumables) {\n\t\t\tif (consumables.name) {\n\t\t\t\tthis._canConsumeName = false;\n\t\t\t}\n\n\t\t\tfor (var type in this._consumables) {\n\t\t\t\tif (type in consumables) {\n\t\t\t\t\tthis._consume(type, consumables[type]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Revert already consumed parts of {@link module:engine/view/element~Element view Element}, so they can be consumed once again.\n   * Element's name can be reverted:\n   *\n   *\t\tconsumables.revert( { name: true } );\n   *\n   * Attributes classes and styles:\n   *\n   *\t\tconsumables.revert( { attribute: 'title', class: 'foo', style: 'color' } );\n   *\t\tconsumables.revert( { attribute: [ 'title', 'name' ], class: [ 'foo', 'bar' ] );\n   *\n   * @param {Object} consumables Object describing which parts of the element should be reverted.\n   * @param {Boolean} consumables.name If set to `true` element's name will be reverted.\n   * @param {String|Array.<String>} consumables.attribute Attribute name or array of attribute names to revert.\n   * @param {String|Array.<String>} consumables.class Class name or array of class names to revert.\n   * @param {String|Array.<String>} consumables.style Style name or array of style names to revert.\n   */\n\n\t}, {\n\t\tkey: 'revert',\n\t\tvalue: function revert(consumables) {\n\t\t\tif (consumables.name) {\n\t\t\t\tthis._canConsumeName = true;\n\t\t\t}\n\n\t\t\tfor (var type in this._consumables) {\n\t\t\t\tif (type in consumables) {\n\t\t\t\t\tthis._revert(type, consumables[type]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Helper method that adds consumables of a given type: attribute, class or style.\n   *\n   * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `viewconsumable-invalid-attribute` when `class` or `style`\n   * type is provided - it should be handled separately by providing actual style/class type.\n   *\n   * @private\n   * @param {String} type Type of the consumable item: `attribute`, `class` or `style`.\n   * @param {String|Array.<String>} item Consumable item or array of items.\n   */\n\n\t}, {\n\t\tkey: '_add',\n\t\tvalue: function _add(type, item) {\n\t\t\tvar items = (0, _isArray2.default)(item) ? item : [item];\n\t\t\tvar consumables = this._consumables[type];\n\n\t\t\tvar _iteratorNormalCompletion5 = true;\n\t\t\tvar _didIteratorError5 = false;\n\t\t\tvar _iteratorError5 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator5 = items[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t\t\t\t\tvar name = _step5.value;\n\n\t\t\t\t\tif (type === 'attribute' && (name === 'class' || name === 'style')) {\n\t\t\t\t\t\t/**\n       * Class and style attributes should be handled separately.\n       *\n       * @error viewconsumable-invalid-attribute\n       */\n\t\t\t\t\t\tthrow new _ckeditorerror2.default('viewconsumable-invalid-attribute: Classes and styles should be handled separately.');\n\t\t\t\t\t}\n\n\t\t\t\t\tconsumables.set(name, true);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError5 = true;\n\t\t\t\t_iteratorError5 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t\t\t\t\t\t_iterator5.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError5) {\n\t\t\t\t\t\tthrow _iteratorError5;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Helper method that tests consumables of a given type: attribute, class or style.\n   *\n   * @private\n   * @param {String} type Type of the consumable item: `attribute`, `class` or `style`.\n   * @param {String|Array.<String>} item Consumable item or array of items.\n   * @returns {Boolean|null} Returns `true` if all items can be consumed, `null` when one of the items cannot be\n   * consumed and `false` when one of the items is already consumed.\n   */\n\n\t}, {\n\t\tkey: '_test',\n\t\tvalue: function _test(type, item) {\n\t\t\tvar items = (0, _isArray2.default)(item) ? item : [item];\n\t\t\tvar consumables = this._consumables[type];\n\n\t\t\tvar _iteratorNormalCompletion6 = true;\n\t\t\tvar _didIteratorError6 = false;\n\t\t\tvar _iteratorError6 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator6 = items[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t\t\t\t\tvar name = _step6.value;\n\n\t\t\t\t\tif (type === 'attribute' && (name === 'class' || name === 'style')) {\n\t\t\t\t\t\t// Check all classes/styles if class/style attribute is tested.\n\t\t\t\t\t\tvar value = this._test(name, [].concat(_toConsumableArray(this._consumables[name].keys())));\n\n\t\t\t\t\t\tif (value !== true) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _value = consumables.get(name);\n\t\t\t\t\t\t// Return null if attribute is not found.\n\t\t\t\t\t\tif (_value === undefined) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!_value) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError6 = true;\n\t\t\t\t_iteratorError6 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion6 && _iterator6.return) {\n\t\t\t\t\t\t_iterator6.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError6) {\n\t\t\t\t\t\tthrow _iteratorError6;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n   * Helper method that consumes items of a given type: attribute, class or style.\n   *\n   * @private\n   * @param {String} type Type of the consumable item: `attribute`, `class` or `style`.\n   * @param {String|Array.<String>} item Consumable item or array of items.\n   */\n\n\t}, {\n\t\tkey: '_consume',\n\t\tvalue: function _consume(type, item) {\n\t\t\tvar items = (0, _isArray2.default)(item) ? item : [item];\n\t\t\tvar consumables = this._consumables[type];\n\n\t\t\tvar _iteratorNormalCompletion7 = true;\n\t\t\tvar _didIteratorError7 = false;\n\t\t\tvar _iteratorError7 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator7 = items[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n\t\t\t\t\tvar name = _step7.value;\n\n\t\t\t\t\tif (type === 'attribute' && (name === 'class' || name === 'style')) {\n\t\t\t\t\t\t// If class or style is provided for consumption - consume them all.\n\t\t\t\t\t\tthis._consume(name, [].concat(_toConsumableArray(this._consumables[name].keys())));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsumables.set(name, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError7 = true;\n\t\t\t\t_iteratorError7 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion7 && _iterator7.return) {\n\t\t\t\t\t\t_iterator7.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError7) {\n\t\t\t\t\t\tthrow _iteratorError7;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Helper method that reverts items of a given type: attribute, class or style.\n   *\n   * @private\n   * @param {String} type Type of the consumable item: `attribute`, `class` or , `style`.\n   * @param {String|Array.<String>} item Consumable item or array of items.\n   */\n\n\t}, {\n\t\tkey: '_revert',\n\t\tvalue: function _revert(type, item) {\n\t\t\tvar items = (0, _isArray2.default)(item) ? item : [item];\n\t\t\tvar consumables = this._consumables[type];\n\n\t\t\tvar _iteratorNormalCompletion8 = true;\n\t\t\tvar _didIteratorError8 = false;\n\t\t\tvar _iteratorError8 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator8 = items[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n\t\t\t\t\tvar name = _step8.value;\n\n\t\t\t\t\tif (type === 'attribute' && (name === 'class' || name === 'style')) {\n\t\t\t\t\t\t// If class or style is provided for reverting - revert them all.\n\t\t\t\t\t\tthis._revert(name, [].concat(_toConsumableArray(this._consumables[name].keys())));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar value = consumables.get(name);\n\n\t\t\t\t\t\tif (value === false) {\n\t\t\t\t\t\t\tconsumables.set(name, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError8 = true;\n\t\t\t\t_iteratorError8 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion8 && _iterator8.return) {\n\t\t\t\t\t\t_iterator8.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError8) {\n\t\t\t\t\t\tthrow _iteratorError8;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn ViewElementConsumables;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/conversion/viewconsumable.js\n// module id = 309\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */\n\n/**\n * @module engine/conversion/viewconversiondispatcher\n */\n\nvar _viewconsumable = require('./viewconsumable');\n\nvar _viewconsumable2 = _interopRequireDefault(_viewconsumable);\n\nvar _range = require('../model/range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _position = require('../model/position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _treewalker = require('../model/treewalker');\n\nvar _treewalker2 = _interopRequireDefault(_treewalker);\n\nvar _node = require('../model/node');\n\nvar _node2 = _interopRequireDefault(_node);\n\nvar _documentfragment = require('../model/documentfragment');\n\nvar _documentfragment2 = _interopRequireDefault(_documentfragment);\n\nvar _writer = require('../model/writer');\n\nvar _emittermixin = require('@ckeditor/ckeditor5-utils/src/emittermixin');\n\nvar _emittermixin2 = _interopRequireDefault(_emittermixin);\n\nvar _mix = require('@ckeditor/ckeditor5-utils/src/mix');\n\nvar _mix2 = _interopRequireDefault(_mix);\n\nvar _extend = require('@ckeditor/ckeditor5-utils/src/lib/lodash/extend');\n\nvar _extend2 = _interopRequireDefault(_extend);\n\nvar _log = require('@ckeditor/ckeditor5-utils/src/log');\n\nvar _log2 = _interopRequireDefault(_log);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * `ViewConversionDispatcher` is a central point of {@link module:engine/view/view view} conversion, which is a process of\n * converting given {@link module:engine/view/documentfragment~DocumentFragment view document fragment} or\n * {@link module:engine/view/element~Element}\n * into another structure. In default application, {@link module:engine/view/view view} is converted to {@link module:engine/model/model}.\n *\n * During conversion process, for all {@link module:engine/view/node~Node view nodes} from the converted view document fragment,\n * `ViewConversionDispatcher` fires corresponding events. Special callbacks called \"converters\" should listen to\n * `ViewConversionDispatcher` for those events.\n *\n * Each callback, as a first argument, is passed a special object `data` that has `input` and `output` properties.\n * `input` property contains {@link module:engine/view/node~Node view node} or\n * {@link module:engine/view/documentfragment~DocumentFragment view document fragment}\n * that is converted at the moment and might be handled by the callback. `output` property should be used to save the result\n * of conversion. Keep in mind that the `data` parameter is customizable and may contain other values - see\n * {@link ~ViewConversionDispatcher#convert}. It is also shared by reference by all callbacks\n * listening to given event. **Note**: in view to model conversion - `data` contains `context` property that is an array\n * of {@link module:engine/model/element~Element model elements}. These are model elements that will be the parent of currently\n * converted view item. `context` property is used in examples below.\n *\n * The second parameter passed to a callback is an instance of {@link module:engine/conversion/viewconsumable~ViewConsumable}. It stores\n * information about what parts of processed view item are still waiting to be handled. After a piece of view item\n * was converted, appropriate consumable value should be {@link module:engine/conversion/viewconsumable~ViewConsumable#consume consumed}.\n *\n * The third parameter passed to a callback is an instance of {@link ~ViewConversionDispatcher}\n * which provides additional tools for converters.\n *\n * Examples of providing callbacks for `ViewConversionDispatcher`:\n *\n *\t\t// Converter for paragraphs (<p>).\n *\t\tviewDispatcher.on( 'element:p', ( evt, data, consumable, conversionApi ) => {\n *\t\t\tconst paragraph = new ModelElement( 'paragraph' );\n *\t\t\tconst schemaQuery = {\n *\t\t\t\tname: 'paragraph',\n *\t\t\t\tinside: data.context\n *\t\t\t};\n *\n *\t\t\tif ( conversionApi.schema.check( schemaQuery ) ) {\n *\t\t\t\tif ( !consumable.consume( data.input, { name: true } ) ) {\n *\t\t\t\t\t// Before converting this paragraph's children we have to update their context by this paragraph.\n *\t\t\t\t\tdata.context.push( paragraph );\n *\t\t\t\t\tconst children = conversionApi.convertChildren( data.input, consumable, data );\n *\t\t\t\t\tdata.context.pop();\n *\t\t\t\t\tparagraph.appendChildren( children );\n *\t\t\t\t\tdata.output = paragraph;\n *\t\t\t\t}\n *\t\t\t}\n *\t\t} );\n *\n *\t\t// Converter for links (<a>).\n *\t\tviewDispatcher.on( 'element:a', ( evt, data, consumable, conversionApi ) => {\n *\t\t\tif ( consumable.consume( data.input, { name: true, attributes: [ 'href' ] } ) ) {\n *\t\t\t\t// <a> element is inline and is represented by an attribute in the model.\n *\t\t\t\t// This is why we are not updating `context` property.\n *\t\t\t\tdata.output = conversionApi.convertChildren( data.input, consumable, data );\n *\n *\t\t\t\tfor ( let item of Range.createFrom( data.output ) ) {\n *\t\t\t\t\tconst schemaQuery = {\n *\t\t\t\t\t\tname: item.name || '$text',\n *\t\t\t\t\t\tattribute: 'link',\n *\t\t\t\t\t\tinside: data.context\n *\t\t\t\t\t};\n *\n *\t\t\t\t\tif ( conversionApi.schema.check( schemaQuery ) ) {\n *\t\t\t\t\t\titem.setAttribute( 'link', data.input.getAttribute( 'href' ) );\n *\t\t\t\t\t}\n *\t\t\t\t}\n *\t\t\t}\n *\t\t} );\n *\n *\t\t// Fire conversion.\n *\t\t// Always take care where the converted model structure will be appended to. If this `viewDocumentFragment`\n *\t\t// is going to be appended directly to a '$root' element, use that in `context`.\n *\t\tviewDispatcher.convert( viewDocumentFragment, { context: [ '$root' ] } );\n *\n * Before each conversion process, `ViewConversionDispatcher` fires {@link ~ViewConversionDispatcher#event:viewCleanup}\n * event which can be used to prepare tree view for conversion.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n * @fires viewCleanup\n * @fires element\n * @fires text\n * @fires documentFragment\n */\nvar ViewConversionDispatcher = function () {\n\t/**\n  * Creates a `ViewConversionDispatcher` that operates using passed API.\n  *\n  * @see module:engine/conversion/viewconversiondispatcher~ViewConversionApi\n  * @param {Object} [conversionApi] Additional properties for interface that will be passed to events fired\n  * by `ViewConversionDispatcher`.\n  */\n\tfunction ViewConversionDispatcher() {\n\t\tvar conversionApi = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\t\t_classCallCheck(this, ViewConversionDispatcher);\n\n\t\t/**\n   * Interface passed by dispatcher to the events callbacks.\n   *\n   * @member {module:engine/conversion/viewconversiondispatcher~ViewConversionApi}\n   */\n\t\tthis.conversionApi = (0, _extend2.default)({}, conversionApi);\n\n\t\t// `convertItem` and `convertChildren` are bound to this `ViewConversionDispatcher` instance and\n\t\t// set on `conversionApi`. This way only a part of `ViewConversionDispatcher` API is exposed.\n\t\tthis.conversionApi.convertItem = this._convertItem.bind(this);\n\t\tthis.conversionApi.convertChildren = this._convertChildren.bind(this);\n\t}\n\n\t/**\n  * Starts the conversion process. The entry point for the conversion.\n  *\n  * @fires element\n  * @fires text\n  * @fires documentFragment\n  * @param {module:engine/view/documentfragment~DocumentFragment|module:engine/view/element~Element} viewItem\n  * Part of the view to be converted.\n  * @param {Object} [additionalData] Additional data to be passed in `data` argument when firing `ViewConversionDispatcher`\n  * events. See also {@link ~ViewConversionDispatcher#event:element element event}.\n  * @returns {module:engine/model/documentfragment~DocumentFragment} Model data that is a result of the conversion process\n  * wrapped in `DocumentFragment`. Converted marker stamps will be set as that document fragment's\n  * {@link module:engine/model/documentfragment~DocumentFragment#markers static markers map}.\n  */\n\n\n\t_createClass(ViewConversionDispatcher, [{\n\t\tkey: 'convert',\n\t\tvalue: function convert(viewItem) {\n\t\t\tvar additionalData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\t\tthis.fire('viewCleanup', viewItem);\n\n\t\t\tvar consumable = _viewconsumable2.default.createFrom(viewItem);\n\t\t\tvar conversionResult = this._convertItem(viewItem, consumable, additionalData);\n\n\t\t\t// We can get a null here if conversion failed (see _convertItem())\n\t\t\t// or simply if an item could not be converted (e.g. due to the schema).\n\t\t\tif (!conversionResult) {\n\t\t\t\treturn new _documentfragment2.default();\n\t\t\t}\n\n\t\t\t// When conversion result is not a document fragment we need to wrap it in document fragment.\n\t\t\tif (!conversionResult.is('documentFragment')) {\n\t\t\t\tconversionResult = new _documentfragment2.default([conversionResult]);\n\t\t\t}\n\n\t\t\t// Extract temporary markers stamp from model and set as static markers collection.\n\t\t\tconversionResult.markers = extractMarkersFromModelFragment(conversionResult);\n\n\t\t\treturn conversionResult;\n\t\t}\n\n\t\t/**\n   * @private\n   * @see module:engine/conversion/viewconversiondispatcher~ViewConversionApi#convertItem\n   */\n\n\t}, {\n\t\tkey: '_convertItem',\n\t\tvalue: function _convertItem(input, consumable) {\n\t\t\tvar additionalData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n\t\t\tvar data = (0, _extend2.default)({}, additionalData, {\n\t\t\t\tinput: input,\n\t\t\t\toutput: null\n\t\t\t});\n\n\t\t\tif (input.is('element')) {\n\t\t\t\tthis.fire('element:' + input.name, data, consumable, this.conversionApi);\n\t\t\t} else if (input.is('text')) {\n\t\t\t\tthis.fire('text', data, consumable, this.conversionApi);\n\t\t\t} else {\n\t\t\t\tthis.fire('documentFragment', data, consumable, this.conversionApi);\n\t\t\t}\n\n\t\t\t// Handle incorrect `data.output`.\n\t\t\tif (data.output && !(data.output instanceof _node2.default || data.output instanceof _documentfragment2.default)) {\n\t\t\t\t/**\n     * Dropped incorrect conversion result.\n     *\n     * Item may be converted to either {@link module:engine/model/node~Node model node} or\n     * {@link module:engine/model/documentfragment~DocumentFragment model document fragment}.\n     *\n     * @error view-conversion-dispatcher-incorrect-result\n     */\n\t\t\t\t_log2.default.warn('view-conversion-dispatcher-incorrect-result: Dropped incorrect conversion result.', [input, data.output]);\n\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn data.output;\n\t\t}\n\n\t\t/**\n   * @private\n   * @see module:engine/conversion/viewconversiondispatcher~ViewConversionApi#convertChildren\n   */\n\n\t}, {\n\t\tkey: '_convertChildren',\n\t\tvalue: function _convertChildren(input, consumable) {\n\t\t\tvar _this = this;\n\n\t\t\tvar additionalData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n\t\t\t// Get all children of view input item.\n\t\t\tvar viewChildren = Array.from(input.getChildren());\n\n\t\t\t// 1. Map those children to model.\n\t\t\t// 2. Filter out items that has not been converted or for which conversion returned wrong result (for those warning is logged).\n\t\t\t// 3. Extract children from document fragments to flatten results.\n\t\t\tvar convertedChildren = viewChildren.map(function (viewChild) {\n\t\t\t\treturn _this._convertItem(viewChild, consumable, additionalData);\n\t\t\t}).filter(function (converted) {\n\t\t\t\treturn converted instanceof _node2.default || converted instanceof _documentfragment2.default;\n\t\t\t}).reduce(function (result, filtered) {\n\t\t\t\treturn result.concat(filtered.is('documentFragment') ? Array.from(filtered.getChildren()) : filtered);\n\t\t\t}, []);\n\n\t\t\t// Normalize array to model document fragment.\n\t\t\treturn new _documentfragment2.default(convertedChildren);\n\t\t}\n\n\t\t/**\n   * Fired before the first conversion event, at the beginning of view to model conversion process.\n   *\n   * @event viewCleanup\n   * @param {module:engine/view/documentfragment~DocumentFragment|module:engine/view/element~Element}\n   * viewItem Part of the view to be converted.\n   */\n\n\t\t/**\n   * Fired when {@link module:engine/view/element~Element} is converted.\n   *\n   * `element` is a namespace event for a class of events. Names of actually called events follow this pattern:\n   * `element:<elementName>` where `elementName` is the name of converted element. This way listeners may listen to\n   * all elements conversion or to conversion of specific elements.\n   *\n   * @event element\n   * @param {Object} data Object containing conversion input and a placeholder for conversion output and possibly other\n   * values (see {@link #convert}).\n   * Keep in mind that this object is shared by reference between all callbacks that will be called.\n   * This means that callbacks can add their own values if needed,\n   * and those values will be available in other callbacks.\n   * @param {module:engine/view/element~Element} data.input Converted element.\n   * @param {*} data.output The current state of conversion result. Every change to converted element should\n   * be reflected by setting or modifying this property.\n   * @param {module:engine/model/schema~SchemaPath} data.context The conversion context.\n   * @param {module:engine/conversion/viewconsumable~ViewConsumable} consumable Values to consume.\n   * @param {Object} conversionApi Conversion interface to be used by callback, passed in `ViewConversionDispatcher` constructor.\n   * Besides of properties passed in constructor, it also has `convertItem` and `convertChildren` methods which are references\n   * to {@link #_convertItem} and\n   * {@link ~ViewConversionDispatcher#_convertChildren}. Those methods are needed to convert\n   * the whole view-tree they were exposed in `conversionApi` for callbacks.\n   */\n\n\t\t/**\n   * Fired when {@link module:engine/view/text~Text} is converted.\n   *\n   * @event text\n   * @see #event:element\n   */\n\n\t\t/**\n   * Fired when {@link module:engine/view/documentfragment~DocumentFragment} is converted.\n   *\n   * @event documentFragment\n   * @see #event:element\n   */\n\n\t}]);\n\n\treturn ViewConversionDispatcher;\n}();\n\nexports.default = ViewConversionDispatcher;\n\n\n(0, _mix2.default)(ViewConversionDispatcher, _emittermixin2.default);\n\n// Traverses given model item and searches elements which marks marker range. Found element is removed from\n// DocumentFragment but path of this element is stored in a Map which is then returned.\n//\n// @param {module:engine/view/documentfragment~DocumentFragment|module:engine/view/node~Node} modelItem Fragment of model.\n// @returns {Map<String, module:engine/model/range~Range>} List of static markers.\nfunction extractMarkersFromModelFragment(modelItem) {\n\tvar markerStamps = new Set();\n\tvar markers = new Map();\n\n\t// Create ModelTreeWalker.\n\tvar walker = new _treewalker2.default({\n\t\tstartPosition: _position2.default.createAt(modelItem, 0),\n\t\tignoreElementEnd: true\n\t});\n\n\t// Walk through DocumentFragment and collect marker elements.\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = walker[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar value = _step.value;\n\n\t\t\t// Check if current element is a marker stamp.\n\t\t\tif (value.item.name == '$marker') {\n\t\t\t\tmarkerStamps.add(value.item);\n\t\t\t}\n\t\t}\n\n\t\t// Walk through collected marker elements store its path and remove its from the DocumentFragment.\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n\n\tvar _iteratorNormalCompletion2 = true;\n\tvar _didIteratorError2 = false;\n\tvar _iteratorError2 = undefined;\n\n\ttry {\n\t\tfor (var _iterator2 = markerStamps[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\tvar stamp = _step2.value;\n\n\t\t\tvar markerName = stamp.getAttribute('data-name');\n\t\t\tvar currentPosition = _position2.default.createBefore(stamp);\n\n\t\t\t// When marker of given name is not stored it means that we have found the beginning of the range.\n\t\t\tif (!markers.has(markerName)) {\n\t\t\t\tmarkers.set(markerName, new _range2.default(_position2.default.createFromPosition(currentPosition)));\n\t\t\t\t// Otherwise is means that we have found end of the marker range.\n\t\t\t} else {\n\t\t\t\tmarkers.get(markerName).end = _position2.default.createFromPosition(currentPosition);\n\t\t\t}\n\n\t\t\t// Remove marker stamp element from DocumentFragment.\n\t\t\t(0, _writer.remove)(_range2.default.createOn(stamp));\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError2 = true;\n\t\t_iteratorError2 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t_iterator2.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError2) {\n\t\t\t\tthrow _iteratorError2;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn markers;\n}\n\n/**\n * Conversion interface that is registered for given {@link module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher}\n * and is passed as one of parameters when {@link module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher dispatcher}\n * fires it's events.\n *\n * `ViewConversionApi` object is built by {@link module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher} constructor.\n * The exact list of properties of this object is determined by the object passed to the constructor.\n *\n * @interface ViewConversionApi\n */\n\n/**\n * Starts conversion of given item by firing an appropriate event.\n *\n * Every fired event is passed (as first parameter) an object with `output` property. Every event may set and/or\n * modify that property. When all callbacks are done, the final value of `output` property is returned by this method.\n * The `output` must be either {@link module:engine/model/node~Node model node} or\n * {@link module:engine/model/documentfragment~DocumentFragment model document fragment} or `null` (as set by default).\n *\n * @method #convertItem\n * @fires module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher#event:element\n * @fires module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher#event:text\n * @fires module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher#event:documentFragment\n * @param {module:engine/view/documentfragment~DocumentFragment|module:engine/view/element~Element|module:engine/view/text~Text}\n * input Item to convert.\n * @param {module:engine/conversion/viewconsumable~ViewConsumable} consumable Values to consume.\n * @param {Object} [additionalData] Additional data to be passed in `data` argument when firing `ViewConversionDispatcher`\n * events. See also {@link module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher#event:element element event}.\n * @returns {module:engine/model/node~Node|module:engine/model/documentfragment~DocumentFragment|null} The result of item conversion,\n * created and modified by callbacks attached to fired event, or `null` if the conversion result was incorrect.\n */\n\n/**\n * Starts conversion of all children of given item by firing appropriate events for all those children.\n *\n * @method #convertChildren\n * @fires module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher#event:element\n * @fires module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher#event:text\n * @fires module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher#event:documentFragment\n * @param {module:engine/view/documentfragment~DocumentFragment|module:engine/view/element~Element}\n * input Item which children will be converted.\n * @param {module:engine/conversion/viewconsumable~ViewConsumable} consumable Values to consume.\n * @param {Object} [additionalData] Additional data to be passed in `data` argument when firing `ViewConversionDispatcher`\n * events. See also {@link module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher#event:element element event}.\n * @returns {module:engine/model/documentfragment~DocumentFragment} Model document fragment containing results of conversion\n * of all children of given item.\n */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/conversion/viewconversiondispatcher.js\n// module id = 310\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/dataprocessor/basichtmlwriter\n */\n\n/* globals document */\n\n/**\n * Basic HTML writer, it uses the native `innerHTML` property for basic conversion\n * from DocumentFragment to an HTML string.\n *\n * @implements module:engine/dataprocessor/htmlwriter~HtmlWriter\n */\nvar BasicHtmlWriter = function () {\n\tfunction BasicHtmlWriter() {\n\t\t_classCallCheck(this, BasicHtmlWriter);\n\t}\n\n\t_createClass(BasicHtmlWriter, [{\n\t\tkey: 'getHtml',\n\n\t\t/**\n   * Returns HTML string created from DocumentFragment.\n   *\n   * @param {DocumentFragment} fragment\n   * @returns {String}\n   */\n\t\tvalue: function getHtml(fragment) {\n\t\t\tvar doc = document.implementation.createHTMLDocument('');\n\t\t\tvar container = doc.createElement('div');\n\t\t\tcontainer.appendChild(fragment);\n\n\t\t\treturn container.innerHTML;\n\t\t}\n\t}]);\n\n\treturn BasicHtmlWriter;\n}();\n\nexports.default = BasicHtmlWriter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/dataprocessor/basichtmlwriter.js\n// module id = 311\n// module chunks = 0","'use strict';\n\nvar _attributedelta = require('./attributedelta');\n\nvar _attributedelta2 = _interopRequireDefault(_attributedelta);\n\nvar _insertdelta = require('./insertdelta');\n\nvar _insertdelta2 = _interopRequireDefault(_insertdelta);\n\nvar _mergedelta = require('./mergedelta');\n\nvar _mergedelta2 = _interopRequireDefault(_mergedelta);\n\nvar _movedelta = require('./movedelta');\n\nvar _movedelta2 = _interopRequireDefault(_movedelta);\n\nvar _removedelta = require('./removedelta');\n\nvar _removedelta2 = _interopRequireDefault(_removedelta);\n\nvar _renamedelta = require('./renamedelta');\n\nvar _renamedelta2 = _interopRequireDefault(_renamedelta);\n\nvar _splitdelta = require('./splitdelta');\n\nvar _splitdelta2 = _interopRequireDefault(_splitdelta);\n\nvar _unwrapdelta = require('./unwrapdelta');\n\nvar _unwrapdelta2 = _interopRequireDefault(_unwrapdelta);\n\nvar _weakinsertdelta = require('./weakinsertdelta');\n\nvar _weakinsertdelta2 = _interopRequireDefault(_weakinsertdelta);\n\nvar _wrapdelta = require('./wrapdelta');\n\nvar _wrapdelta2 = _interopRequireDefault(_wrapdelta);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/delta/basic-deltas.js\n// module id = 312\n// module chunks = 0","'use strict';\n\nvar _transform = require('./transform');\n\nvar _transform2 = _interopRequireDefault(_transform);\n\nvar _range = require('../range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _position = require('../position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _nooperation = require('../operation/nooperation');\n\nvar _nooperation2 = _interopRequireDefault(_nooperation);\n\nvar _attributeoperation = require('../operation/attributeoperation');\n\nvar _attributeoperation2 = _interopRequireDefault(_attributeoperation);\n\nvar _insertoperation = require('../operation/insertoperation');\n\nvar _insertoperation2 = _interopRequireDefault(_insertoperation);\n\nvar _delta = require('./delta');\n\nvar _delta2 = _interopRequireDefault(_delta);\n\nvar _attributedelta = require('./attributedelta');\n\nvar _attributedelta2 = _interopRequireDefault(_attributedelta);\n\nvar _insertdelta = require('./insertdelta');\n\nvar _insertdelta2 = _interopRequireDefault(_insertdelta);\n\nvar _markerdelta = require('./markerdelta');\n\nvar _markerdelta2 = _interopRequireDefault(_markerdelta);\n\nvar _mergedelta = require('./mergedelta');\n\nvar _mergedelta2 = _interopRequireDefault(_mergedelta);\n\nvar _movedelta = require('./movedelta');\n\nvar _movedelta2 = _interopRequireDefault(_movedelta);\n\nvar _splitdelta = require('./splitdelta');\n\nvar _splitdelta2 = _interopRequireDefault(_splitdelta);\n\nvar _weakinsertdelta = require('./weakinsertdelta');\n\nvar _weakinsertdelta2 = _interopRequireDefault(_weakinsertdelta);\n\nvar _wrapdelta = require('./wrapdelta');\n\nvar _wrapdelta2 = _interopRequireDefault(_wrapdelta);\n\nvar _unwrapdelta = require('./unwrapdelta');\n\nvar _unwrapdelta2 = _interopRequireDefault(_unwrapdelta);\n\nvar _renamedelta = require('./renamedelta');\n\nvar _renamedelta2 = _interopRequireDefault(_renamedelta);\n\nvar _removedelta = require('./removedelta');\n\nvar _removedelta2 = _interopRequireDefault(_removedelta);\n\nvar _comparearrays = require('@ckeditor/ckeditor5-utils/src/comparearrays');\n\nvar _comparearrays2 = _interopRequireDefault(_comparearrays);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar addTransformationCase = _transform2.default.addTransformationCase; /**\n                                                                        * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                        * For licensing, see LICENSE.md.\n                                                                        */\n\n/**\n * @module engine/model/delta/basic-transformations\n */\n\nvar defaultTransform = _transform2.default.defaultTransform;\n\n// Provide transformations for default deltas.\n\n// Add special case for AttributeDelta x WeakInsertDelta transformation.\naddTransformationCase(_attributedelta2.default, _weakinsertdelta2.default, function (a, b, context) {\n\t// If nodes are weak-inserted into attribute delta range, we need to apply changes from attribute delta on them.\n\t// So first we do the normal transformation and if this special cases happens, we will add an extra delta.\n\tvar deltas = defaultTransform(a, b, context);\n\n\tif (a.range.containsPosition(b.position)) {\n\t\tdeltas.push(_getComplementaryAttrDelta(b, a));\n\t}\n\n\treturn deltas;\n});\n\n// Add special case for AttributeDelta x SplitDelta transformation.\naddTransformationCase(_attributedelta2.default, _splitdelta2.default, function (a, b, context) {\n\tvar splitPosition = new _position2.default(b.position.root, b.position.path.slice(0, -1));\n\n\tvar deltas = defaultTransform(a, b, context);\n\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = a.operations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar operation = _step.value;\n\n\t\t\t// If a node that has been split has it's attribute updated, we should also update attribute of\n\t\t\t// the node created during splitting.\n\t\t\tif (operation.range.containsPosition(splitPosition) || operation.range.start.isEqual(splitPosition)) {\n\t\t\t\tvar additionalAttributeDelta = new _attributedelta2.default();\n\n\t\t\t\tvar rangeStart = splitPosition.getShiftedBy(1);\n\t\t\t\tvar rangeEnd = _position2.default.createFromPosition(rangeStart);\n\t\t\t\trangeEnd.path.push(0);\n\n\t\t\t\tvar oldValue = b._cloneOperation.nodes.getNode(0).getAttribute(operation.key);\n\n\t\t\t\tadditionalAttributeDelta.addOperation(new _attributeoperation2.default(new _range2.default(rangeStart, rangeEnd), operation.key, oldValue === undefined ? null : oldValue, operation.newValue, 0));\n\n\t\t\t\tdeltas.push(additionalAttributeDelta);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn deltas;\n});\n\n// Add special case for InsertDelta x MergeDelta transformation.\naddTransformationCase(_insertdelta2.default, _mergedelta2.default, function (a, b, context) {\n\t// If insert is applied at the same position where merge happened, we reverse the merge (we treat it like it\n\t// didn't happen) and then apply the original insert operation. This is \"mirrored\" in MergeDelta x InsertDelta\n\t// transformation below, where we simply do not apply MergeDelta.\n\tif (a.position.isEqual(b.position)) {\n\t\treturn [b.getReversed(), a.clone()];\n\t}\n\n\treturn defaultTransform(a, b, context);\n});\n\nfunction transformMarkerDelta(a, b) {\n\tvar transformedDelta = a.clone();\n\tvar transformedOp = transformedDelta.operations[0];\n\n\tif (transformedOp.oldRange) {\n\t\ttransformedOp.oldRange = transformedOp.oldRange.getTransformedByDelta(b)[0];\n\t}\n\n\tif (transformedOp.newRange) {\n\t\ttransformedOp.newRange = transformedOp.newRange.getTransformedByDelta(b)[0];\n\t}\n\n\treturn [transformedDelta];\n}\n\naddTransformationCase(_markerdelta2.default, _splitdelta2.default, transformMarkerDelta);\naddTransformationCase(_markerdelta2.default, _mergedelta2.default, transformMarkerDelta);\naddTransformationCase(_markerdelta2.default, _wrapdelta2.default, transformMarkerDelta);\naddTransformationCase(_markerdelta2.default, _unwrapdelta2.default, transformMarkerDelta);\naddTransformationCase(_markerdelta2.default, _movedelta2.default, transformMarkerDelta);\naddTransformationCase(_markerdelta2.default, _renamedelta2.default, transformMarkerDelta);\n\n// Add special case for MoveDelta x MergeDelta transformation.\naddTransformationCase(_movedelta2.default, _mergedelta2.default, function (a, b, context) {\n\t// If move delta is supposed to move a node that has been merged, we reverse the merge (we treat it like it\n\t// didn't happen) and then apply the original move operation. This is \"mirrored\" in MergeDelta x MoveDelta\n\t// transformation below, where we simply do not apply MergeDelta.\n\n\tvar operateInSameParent = a.sourcePosition.root == b.position.root && (0, _comparearrays2.default)(a.sourcePosition.getParentPath(), b.position.getParentPath()) === 'same';\n\n\tvar mergeInsideMoveRange = a.sourcePosition.offset <= b.position.offset && a.sourcePosition.offset + a.howMany > b.position.offset;\n\n\tif (operateInSameParent && mergeInsideMoveRange) {\n\t\treturn [b.getReversed(), a.clone()];\n\t}\n\n\treturn defaultTransform(a, b, context);\n});\n\n// Add special case for MergeDelta x InsertDelta transformation.\naddTransformationCase(_mergedelta2.default, _insertdelta2.default, function (a, b, context) {\n\t// If merge is applied at the same position where we inserted a range of nodes we cancel the merge as it's results\n\t// may be unexpected and very weird. Even if we do some \"magic\" we don't know what really are users' expectations.\n\tif (a.position.isEqual(b.position)) {\n\t\treturn [noDelta()];\n\t}\n\n\treturn defaultTransform(a, b, context);\n});\n\n// Add special case for MergeDelta x MoveDelta transformation.\naddTransformationCase(_mergedelta2.default, _movedelta2.default, function (a, b, context) {\n\t// If merge is applied at the position between moved nodes we cancel the merge as it's results may be unexpected and\n\t// very weird. Even if we do some \"magic\" we don't know what really are users' expectations.\n\n\tvar operateInSameParent = a.position.root == b.sourcePosition.root && (0, _comparearrays2.default)(a.position.getParentPath(), b.sourcePosition.getParentPath()) === 'same';\n\n\tvar mergeInsideMoveRange = b.sourcePosition.offset <= a.position.offset && b.sourcePosition.offset + b.howMany > a.position.offset;\n\n\tif (operateInSameParent && mergeInsideMoveRange) {\n\t\treturn [noDelta()];\n\t}\n\n\treturn defaultTransform(a, b, context);\n});\n\n// Add special case for SplitDelta x SplitDelta transformation.\naddTransformationCase(_splitdelta2.default, _splitdelta2.default, function (a, b, context) {\n\tvar pathA = a.position.getParentPath();\n\tvar pathB = b.position.getParentPath();\n\n\t// The special case is for splits inside the same parent.\n\tif (a.position.root == b.position.root && (0, _comparearrays2.default)(pathA, pathB) == 'same') {\n\t\tvar newContext = Object.assign({}, context);\n\n\t\t// If `a` delta splits in further location, make sure that it will move some nodes by forcing it to be strong.\n\t\t// Similarly, if `a` splits closer, make sure that it is transformed accordingly.\n\t\tif (a.position.offset != b.position.offset) {\n\t\t\t// We need to ensure that incoming operation is strong / weak.\n\t\t\tnewContext.isStrong = a.position.offset > b.position.offset;\n\t\t}\n\n\t\t// Then, default transformation is almost good.\n\t\t// We need to change insert operations offsets, though.\n\t\t// We will use `context.insertBefore` for this (but only if it is not set!)\n\t\tif (context.insertBefore === undefined) {\n\t\t\tnewContext.insertBefore = newContext.isStrong;\n\t\t}\n\n\t\treturn defaultTransform(a, b, newContext);\n\t}\n\n\treturn defaultTransform(a, b, context);\n});\n\n// Add special case for SplitDelta x UnwrapDelta transformation.\naddTransformationCase(_splitdelta2.default, _unwrapdelta2.default, function (a, b, context) {\n\t// If incoming split delta tries to split a node that just got unwrapped, there is actually nothing to split,\n\t// so we discard that delta.\n\tif (a.position.root == b.position.root && (0, _comparearrays2.default)(b.position.path, a.position.getParentPath()) === 'same') {\n\t\treturn [noDelta()];\n\t}\n\n\treturn defaultTransform(a, b, context);\n});\n\n// Add special case for SplitDelta x WrapDelta transformation.\naddTransformationCase(_splitdelta2.default, _wrapdelta2.default, function (a, b, context) {\n\t// If split is applied at the position between wrapped nodes, we cancel the split as it's results may be unexpected and\n\t// very weird. Even if we do some \"magic\" we don't know what really are users' expectations.\n\n\tvar sameRoot = a.position.root == b.range.start.root;\n\tvar operateInSameParent = sameRoot && (0, _comparearrays2.default)(a.position.getParentPath(), b.range.start.getParentPath()) === 'same';\n\tvar splitInsideWrapRange = b.range.start.offset < a.position.offset && b.range.end.offset >= a.position.offset;\n\n\tif (operateInSameParent && splitInsideWrapRange) {\n\t\treturn [noDelta()];\n\t} else if (sameRoot && (0, _comparearrays2.default)(a.position.getParentPath(), b.range.end.getShiftedBy(-1).path) === 'same') {\n\t\t// Split position is directly inside the last node from wrap range.\n\t\t// If that's the case, we manually change split delta so it will \"target\" inside the wrapping element.\n\t\t// By doing so we will be inserting split node right to the original node which feels natural and is a good UX.\n\t\tvar delta = a.clone();\n\n\t\t// 1. Fix insert operation position.\n\t\t// Node to split is the last children of the wrapping element.\n\t\t// Wrapping element is the element inserted by WrapDelta (re)insert operation.\n\t\t// It is inserted after the wrapped range, but the wrapped range will be moved inside it.\n\t\t// Having this in mind, it is correct to use wrapped range start position as the position before wrapping element.\n\t\tvar splitNodePos = _position2.default.createFromPosition(b.range.start);\n\t\t// Now, `splitNodePos` points before wrapping element.\n\t\t// To get a position before last children of that element, we expand position's `path` member by proper offset.\n\t\tsplitNodePos.path.push(b.howMany - 1);\n\n\t\t// SplitDelta insert operation position should be right after the node we split.\n\t\tvar insertPos = splitNodePos.getShiftedBy(1);\n\t\tdelta._cloneOperation.position = insertPos;\n\n\t\t// 2. Fix move operation source position.\n\t\t// Nodes moved by SplitDelta will be moved from new position, modified by WrapDelta.\n\t\t// To obtain that new position, `splitNodePos` will be used, as this is the node we are extracting children from.\n\t\tvar sourcePos = _position2.default.createFromPosition(splitNodePos);\n\t\t// Nothing changed inside split node so it is correct to use the original split position offset.\n\t\tsourcePos.path.push(a.position.offset);\n\t\tdelta._moveOperation.sourcePosition = sourcePos;\n\n\t\t// 3. Fix move operation target position.\n\t\t// SplitDelta move operation target position should be inside the node inserted by operation above.\n\t\t// Since the node is empty, we will insert at offset 0.\n\t\tvar targetPos = _position2.default.createFromPosition(insertPos);\n\t\ttargetPos.path.push(0);\n\t\tdelta._moveOperation.targetPosition = targetPos;\n\n\t\treturn [delta];\n\t}\n\n\treturn defaultTransform(a, b, context);\n});\n\n// Add special case for SplitDelta x WrapDelta transformation.\naddTransformationCase(_splitdelta2.default, _attributedelta2.default, function (a, b) {\n\ta = a.clone();\n\n\tvar splitPosition = new _position2.default(a.position.root, a.position.path.slice(0, -1));\n\n\tif (a._cloneOperation instanceof _insertoperation2.default) {\n\t\t// If element to split had it's attribute changed, we have to reflect this change in an element\n\t\t// that is in SplitDelta's InsertOperation.\n\t\tvar _iteratorNormalCompletion2 = true;\n\t\tvar _didIteratorError2 = false;\n\t\tvar _iteratorError2 = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator2 = b.operations[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\tvar operation = _step2.value;\n\n\t\t\t\tif (operation.range.containsPosition(splitPosition) || operation.range.start.isEqual(splitPosition)) {\n\t\t\t\t\tif (operation.newValue !== null) {\n\t\t\t\t\t\ta._cloneOperation.nodes.getNode(0).setAttribute(operation.key, operation.newValue);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ta._cloneOperation.nodes.getNode(0).removeAttribute(operation.key);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t_didIteratorError2 = true;\n\t\t\t_iteratorError2 = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t_iterator2.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn [a];\n});\n\n// Add special case for UnwrapDelta x SplitDelta transformation.\naddTransformationCase(_unwrapdelta2.default, _splitdelta2.default, function (a, b, context) {\n\t// If incoming unwrap delta tries to unwrap node that got split we should unwrap the original node and the split copy.\n\t// This can be achieved either by reverting split and applying unwrap to singular node, or creating additional unwrap delta.\n\tif (a.position.root == b.position.root && (0, _comparearrays2.default)(a.position.path, b.position.getParentPath()) === 'same') {\n\t\treturn [b.getReversed(), a.clone()];\n\t}\n\n\treturn defaultTransform(a, b, context);\n});\n\n// Add special case for WeakInsertDelta x AttributeDelta transformation.\naddTransformationCase(_weakinsertdelta2.default, _attributedelta2.default, function (a, b) {\n\t// If nodes are weak-inserted into attribute delta range, we need to apply changes from attribute delta on them.\n\tvar deltas = [a.clone()];\n\n\tif (b.range.containsPosition(a.position)) {\n\t\tdeltas.push(_getComplementaryAttrDelta(a, b));\n\t}\n\n\treturn deltas;\n});\n\n// Add special case for WrapDelta x SplitDelta transformation.\naddTransformationCase(_wrapdelta2.default, _splitdelta2.default, function (a, b, context) {\n\t// If incoming wrap delta tries to wrap range that contains split position, we have to cancel the split and apply\n\t// the wrap. Since split was already applied, we have to revert it.\n\n\tvar sameRoot = a.range.start.root == b.position.root;\n\tvar operateInSameParent = sameRoot && (0, _comparearrays2.default)(a.range.start.getParentPath(), b.position.getParentPath()) === 'same';\n\tvar splitInsideWrapRange = a.range.start.offset < b.position.offset && a.range.end.offset >= b.position.offset;\n\n\tif (operateInSameParent && splitInsideWrapRange) {\n\t\treturn [b.getReversed(), a.clone()];\n\t} else if (sameRoot && (0, _comparearrays2.default)(b.position.getParentPath(), a.range.end.getShiftedBy(-1).path) === 'same') {\n\t\tvar delta = a.clone();\n\n\t\t// Move wrapping element insert position one node further so it is after the split node insertion.\n\t\tdelta._insertOperation.position.offset++;\n\n\t\t// Include the split node copy.\n\t\tdelta._moveOperation.howMany++;\n\n\t\t// Change the path to wrapping element in move operation.\n\t\tdelta._moveOperation.targetPosition.path[delta._moveOperation.targetPosition.path.length - 2]++;\n\n\t\treturn [delta];\n\t}\n\n\treturn defaultTransform(a, b, context);\n});\n\n// Add special case for RenameDelta x SplitDelta transformation.\naddTransformationCase(_renamedelta2.default, _splitdelta2.default, function (a, b, context) {\n\tvar undoMode = context.aWasUndone || context.bWasUndone;\n\tvar posBeforeSplitParent = new _position2.default(b.position.root, b.position.path.slice(0, -1));\n\n\tvar deltas = defaultTransform(a, b, context);\n\n\tif (!undoMode && a.operations[0].position.isEqual(posBeforeSplitParent)) {\n\t\t// If a node that has been split has it's name changed, we should also change name of\n\t\t// the node created during splitting.\n\t\tvar additionalRenameDelta = a.clone();\n\t\tadditionalRenameDelta.operations[0].position = posBeforeSplitParent.getShiftedBy(1);\n\n\t\tdeltas.push(additionalRenameDelta);\n\t}\n\n\treturn deltas;\n});\n\n// Add special case for SplitDelta x RenameDelta transformation.\naddTransformationCase(_splitdelta2.default, _renamedelta2.default, function (a, b, context) {\n\tvar undoMode = context.aWasUndone || context.bWasUndone;\n\tvar posBeforeSplitParent = new _position2.default(a.position.root, a.position.path.slice(0, -1));\n\n\t// If element to split had it's name changed, we have to reflect this by creating additional rename operation.\n\tif (!undoMode && b.operations[0].position.isEqual(posBeforeSplitParent)) {\n\t\tvar additionalRenameDelta = b.clone();\n\t\tadditionalRenameDelta.operations[0].position = posBeforeSplitParent.getShiftedBy(1);\n\n\t\t// `nodes` is a property that is available only if `SplitDelta` `a` has `InsertOperation`.\n\t\t// `SplitDelta` may have `ReinsertOperation` instead of `InsertOperation`.\n\t\t// However, such delta is only created when `MergeDelta` is reversed.\n\t\t// So if this is not undo mode, it means that `SplitDelta` has `InsertOperation`.\n\t\tadditionalRenameDelta.operations[0].oldName = a._cloneOperation.nodes.getNode(0).name;\n\n\t\treturn [a.clone(), additionalRenameDelta];\n\t}\n\n\treturn [a.clone()];\n});\n\n// Add special case for RemoveDelta x SplitDelta transformation.\naddTransformationCase(_removedelta2.default, _splitdelta2.default, function (a, b, context) {\n\tvar deltas = defaultTransform(a, b, context);\n\t// The \"clone operation\" may be InsertOperation, ReinsertOperation, MoveOperation or NoOperation.\n\tvar insertPosition = b._cloneOperation.position || b._cloneOperation.targetPosition;\n\n\t// NoOperation.\n\tif (!insertPosition) {\n\t\treturn defaultTransform(a, b, context);\n\t}\n\n\t// In case if `defaultTransform` returned more than one delta.\n\tvar _iteratorNormalCompletion3 = true;\n\tvar _didIteratorError3 = false;\n\tvar _iteratorError3 = undefined;\n\n\ttry {\n\t\tfor (var _iterator3 = deltas[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\tvar delta = _step3.value;\n\n\t\t\t// \"No delta\" may be returned in some cases.\n\t\t\tif (delta instanceof _removedelta2.default) {\n\t\t\t\tvar operation = delta._moveOperation;\n\t\t\t\tvar rangeEnd = operation.sourcePosition.getShiftedBy(operation.howMany);\n\n\t\t\t\tif (rangeEnd.isEqual(insertPosition)) {\n\t\t\t\t\toperation.howMany += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError3 = true;\n\t\t_iteratorError3 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t_iterator3.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError3) {\n\t\t\t\tthrow _iteratorError3;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn deltas;\n});\n\n// Add special case for SplitDelta x RemoveDelta transformation.\naddTransformationCase(_splitdelta2.default, _removedelta2.default, function (a, b, context) {\n\t// This case is very trickily solved.\n\t// Instead of fixing `a` delta, we change `b` delta for a while and fire default transformation with fixed `b` delta.\n\t// Thanks to that fixing `a` delta will be differently (correctly) transformed.\n\t//\n\t// The \"clone operation\" may be InsertOperation, ReinsertOperation, MoveOperation or NoOperation.\n\tvar insertPosition = a._cloneOperation.position || a._cloneOperation.targetPosition;\n\n\t// NoOperation.\n\tif (!insertPosition) {\n\t\treturn defaultTransform(a, b, context);\n\t}\n\n\tb = b.clone();\n\tvar operation = b._moveOperation;\n\tvar rangeEnd = operation.sourcePosition.getShiftedBy(operation.howMany);\n\n\tif (rangeEnd.isEqual(insertPosition)) {\n\t\toperation.howMany += 1;\n\t}\n\n\treturn defaultTransform(a, b, context);\n});\n\n// Helper function for `AttributeDelta` class transformations.\n// Creates an attribute delta that sets attribute from given `attributeDelta` on nodes from given `weakInsertDelta`.\nfunction _getComplementaryAttrDelta(weakInsertDelta, attributeDelta) {\n\tvar complementaryAttrDelta = new _attributedelta2.default();\n\tvar nodes = weakInsertDelta.nodes;\n\n\t// At the beginning we store the attribute value from the first node on `weakInsertDelta` node list.\n\tvar val = nodes.getNode(0).getAttribute(attributeDelta.key);\n\n\t// This stores the last index of `weakInsertDelta` node list where the attribute value was different\n\t// than in the previous node. We need it to create separate `AttributeOperation`s for nodes with different attributes.\n\tvar lastOffset = 0;\n\t// Sum of offsets of already processed nodes.\n\tvar offsetSum = nodes.getNode(0).offsetSize;\n\n\tfor (var i = 1; i < nodes.length; i++) {\n\t\tvar node = nodes.getNode(i);\n\t\tvar nodeAttrVal = node.getAttribute(attributeDelta.key);\n\n\t\t// If previous node has different attribute value, we will create an operation to the point before current node.\n\t\t// So all nodes with the same attributes up to this point will be included in one `AttributeOperation`.\n\t\tif (nodeAttrVal != val) {\n\t\t\t// New operation is created only when it is needed. If given node already has proper value for this\n\t\t\t// attribute we simply skip it without adding a new operation.\n\t\t\tif (val != attributeDelta.value) {\n\t\t\t\taddOperation();\n\t\t\t}\n\n\t\t\tval = nodeAttrVal;\n\t\t\tlastOffset = offsetSum;\n\t\t}\n\n\t\toffsetSum = offsetSum + node.offsetSize;\n\t}\n\n\t// At the end we have to add additional `AttributeOperation` for the last part of node list. If all nodes on the\n\t// node list had same attributes, this will be the only operation added to the delta.\n\taddOperation();\n\n\treturn complementaryAttrDelta;\n\n\tfunction addOperation() {\n\t\tvar range = new _range2.default(weakInsertDelta.position.getShiftedBy(lastOffset), weakInsertDelta.position.getShiftedBy(offsetSum));\n\n\t\tvar attrOperation = new _attributeoperation2.default(range, attributeDelta.key, val, attributeDelta.value, 0);\n\t\tcomplementaryAttrDelta.addOperation(attrOperation);\n\t}\n}\n\n// This is \"no-op\" delta, it has no type and only no-operation, it basically does nothing.\n// It is used when we don't want to apply changes but still we need to return a delta.\nfunction noDelta() {\n\tvar noDelta = new _delta2.default();\n\n\t// BaseVersion will be fixed later anyway.\n\tnoDelta.addOperation(new _nooperation2.default(0));\n\n\treturn noDelta;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/delta/basic-transformations.js\n// module id = 313\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _delta = require('./delta');\n\nvar _delta2 = _interopRequireDefault(_delta);\n\nvar _deltafactory = require('./deltafactory');\n\nvar _deltafactory2 = _interopRequireDefault(_deltafactory);\n\nvar _batch = require('../batch');\n\nvar _markeroperation = require('../operation/markeroperation');\n\nvar _markeroperation2 = _interopRequireDefault(_markeroperation);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/model/delta/markerdelta\n */\n\n/**\n * @classdesc\n * To provide specific OT behavior and better collisions solving, the {@link module:engine/model/batch~Batch#setMarker Batch#setMarker}\n * and {@link module:engine/model/batch~Batch#removeMarker Batch#removeMarker} methods use the `MarkerDelta` class which inherits\n * from the `Delta` class and may overwrite some methods.\n */\nvar MarkerDelta = function (_Delta) {\n\t_inherits(MarkerDelta, _Delta);\n\n\tfunction MarkerDelta() {\n\t\t_classCallCheck(this, MarkerDelta);\n\n\t\treturn _possibleConstructorReturn(this, (MarkerDelta.__proto__ || Object.getPrototypeOf(MarkerDelta)).apply(this, arguments));\n\t}\n\n\t_createClass(MarkerDelta, [{\n\t\tkey: 'type',\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tget: function get() {\n\t\t\treturn 'marker';\n\t\t}\n\n\t\t/**\n   * A class that will be used when creating reversed delta.\n   *\n   * @private\n   * @type {Function}\n   */\n\n\t}, {\n\t\tkey: '_reverseDeltaClass',\n\t\tget: function get() {\n\t\t\treturn MarkerDelta;\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}], [{\n\t\tkey: 'className',\n\t\tget: function get() {\n\t\t\treturn 'engine.model.delta.MarkerDelta';\n\t\t}\n\t}]);\n\n\treturn MarkerDelta;\n}(_delta2.default);\n\n/**\n * Adds or updates {@link module:engine/model/markercollection~Marker marker} with given name to given `range`.\n *\n * If passed name is a name of already existing marker (or {@link module:engine/model/markercollection~Marker Marker} instance\n * is passed), `range` parameter may be omitted. In this case marker will not be updated in\n * {@link module:engine/model/document~Document#markers document marker collection}. However the marker will be added to\n * the document history. This may be important for other features, like undo. From document history point of view, it will\n * look like the marker was created and added to the document at the moment when it is set using this method.\n *\n * This is useful if the marker is created before it can be added to document history (e.g. a feature creating the marker\n * is waiting for additional data, etc.). In this case, the marker may be first created directly through\n * {@link module:engine/model/markercollection~MarkerCollection MarkerCollection API} and only later added using `Batch` API.\n *\n * @chainable\n * @method module:engine/model/batch~Batch#setMarker\n * @param {module:engine/model/markercollection~Marker|String} markerOrName Marker or marker name to add or update.\n * @param {module:engine/model/range~Range} [newRange] Marker range.\n */\n\n\nexports.default = MarkerDelta;\n(0, _batch.register)('setMarker', function (markerOrName, newRange) {\n\tvar name = typeof markerOrName == 'string' ? markerOrName : markerOrName.name;\n\tvar currentMarker = this.document.markers.get(name);\n\n\tif (!newRange && !currentMarker) {\n\t\t/**\n   * Range parameter is required when adding a new marker.\n   *\n   * @error batch-setMarker-no-range\n   */\n\t\tthrow new _ckeditorerror2.default('batch-setMarker-no-range: Range parameter is required when adding a new marker.');\n\t}\n\n\tvar currentRange = currentMarker ? currentMarker.getRange() : null;\n\n\tif (!newRange) {\n\t\t// If `newRange` is not given, treat this as synchronizing existing marker.\n\t\t// Create `MarkerOperation` with `oldRange` set to `null`, so reverse operation will remove the marker.\n\t\taddOperation(this, name, null, currentRange);\n\t} else {\n\t\t// Just change marker range.\n\t\taddOperation(this, name, currentRange, newRange);\n\t}\n\n\treturn this;\n});\n\n/**\n * Removes given {@link module:engine/model/markercollection~Marker marker} or marker with given name.\n *\n * @chainable\n * @method module:engine/model/batch~Batch#removeMarker\n * @param {module:engine/model/markercollection~Marker|String} markerOrName Marker or marker name to remove.\n */\n(0, _batch.register)('removeMarker', function (markerOrName) {\n\tvar name = typeof markerOrName == 'string' ? markerOrName : markerOrName.name;\n\n\tif (!this.document.markers.has(name)) {\n\t\t/**\n   * Trying to remove marker that does not exist.\n   *\n   * @error batch-removeMarker-no-marker\n   */\n\t\tthrow new _ckeditorerror2.default('batch-removeMarker-no-marker: Trying to remove marker that does not exist.');\n\t}\n\n\tvar oldRange = this.document.markers.get(name).getRange();\n\n\taddOperation(this, name, oldRange, null);\n\n\treturn this;\n});\n\nfunction addOperation(batch, name, oldRange, newRange) {\n\tvar doc = batch.document;\n\tvar delta = new MarkerDelta();\n\n\tvar operation = new _markeroperation2.default(name, oldRange, newRange, doc.markers, doc.version);\n\n\tbatch.addDelta(delta);\n\tdelta.addOperation(operation);\n\tdoc.applyOperation(operation);\n}\n\n_deltafactory2.default.register(MarkerDelta);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/delta/markerdelta.js\n// module id = 314\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */\n\n/**\n * @module engine/model/document\n */\n\n// Load all basic deltas and transformations, they register themselves, but they need to be imported somewhere.\n/* eslint-disable no-unused-vars */\n\n/* eslint-enable no-unused-vars */\n\nvar _basicDeltas = require('./delta/basic-deltas');\n\nvar _basicDeltas2 = _interopRequireDefault(_basicDeltas);\n\nvar _basicTransformations = require('./delta/basic-transformations');\n\nvar _basicTransformations2 = _interopRequireDefault(_basicTransformations);\n\nvar _range = require('./range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _position = require('./position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _rootelement = require('./rootelement');\n\nvar _rootelement2 = _interopRequireDefault(_rootelement);\n\nvar _batch = require('./batch');\n\nvar _batch2 = _interopRequireDefault(_batch);\n\nvar _history = require('./history');\n\nvar _history2 = _interopRequireDefault(_history);\n\nvar _documentselection = require('./documentselection');\n\nvar _documentselection2 = _interopRequireDefault(_documentselection);\n\nvar _schema = require('./schema');\n\nvar _schema2 = _interopRequireDefault(_schema);\n\nvar _treewalker = require('./treewalker');\n\nvar _treewalker2 = _interopRequireDefault(_treewalker);\n\nvar _markercollection = require('./markercollection');\n\nvar _markercollection2 = _interopRequireDefault(_markercollection);\n\nvar _transform = require('./delta/transform');\n\nvar _transform2 = _interopRequireDefault(_transform);\n\nvar _clone = require('@ckeditor/ckeditor5-utils/src/lib/lodash/clone');\n\nvar _clone2 = _interopRequireDefault(_clone);\n\nvar _emittermixin = require('@ckeditor/ckeditor5-utils/src/emittermixin');\n\nvar _emittermixin2 = _interopRequireDefault(_emittermixin);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nvar _mix = require('@ckeditor/ckeditor5-utils/src/mix');\n\nvar _mix2 = _interopRequireDefault(_mix);\n\nvar _unicode = require('@ckeditor/ckeditor5-utils/src/unicode');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _marked = [combineWalkers].map(regeneratorRuntime.mark);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar graveyardName = '$graveyard';\n\n/**\n * Document tree model describes all editable data in the editor. It may contain multiple\n * {@link module:engine/model/document~Document#roots root elements}, for example if the editor have multiple editable areas,\n * each area will be represented by the separate root.\n *\n * All changes in the document are done by {@link module:engine/model/operation/operation~Operation operations}. To create operations in\n * a simple way, use the {@link module:engine/model/batch~Batch} API, for example:\n *\n *\t\tdoc.batch().insert( position, nodes ).split( otherPosition );\n *\n * @see module:engine/model/document~Document#batch\n * @mixes module:utils/emittermixin~EmitterMixin\n */\n\nvar Document = function () {\n\t/**\n  * Creates an empty document instance with no {@link #roots} (other than\n  * the {@link #graveyard graveyard root}).\n  */\n\tfunction Document() {\n\t\tvar _this = this;\n\n\t\t_classCallCheck(this, Document);\n\n\t\t/**\n   * Document version. It starts from `0` and every operation increases the version number. It is used to ensure that\n   * operations are applied on the proper document version.\n   * If the {@link module:engine/model/operation/operation~Operation#baseVersion} will not match document version the\n   * {@link module:utils/ckeditorerror~CKEditorError model-document-applyOperation-wrong-version} error is thrown.\n   *\n   * @readonly\n   * @member {Number}\n   */\n\t\tthis.version = 0;\n\n\t\t/**\n   * Schema for this document.\n   *\n   * @member {module:engine/model/schema~Schema}\n   */\n\t\tthis.schema = new _schema2.default();\n\n\t\t/**\n   * Document's history.\n   *\n   * **Note:** Be aware that deltas applied to the document might get removed or changed.\n   *\n   * @readonly\n   * @member {module:engine/model/history~History}\n   */\n\t\tthis.history = new _history2.default(this);\n\n\t\t/**\n   * Document's markers' collection.\n   *\n   * @readonly\n   * @member {module:engine/model/markercollection~MarkerCollection}\n   */\n\t\tthis.markers = new _markercollection2.default();\n\n\t\t/**\n   * Selection done on this document.\n   *\n   * @readonly\n   * @member {module:engine/model/documentselection~DocumentSelection}\n   */\n\t\tthis.selection = new _documentselection2.default(this);\n\n\t\t/**\n   * Array of pending changes. See: {@link #enqueueChanges}.\n   *\n   * @private\n   * @member {Array.<Function>}\n   */\n\t\tthis._pendingChanges = [];\n\n\t\t/**\n   * List of roots that are owned and managed by this document. Use {@link #createRoot} and\n   * {@link #getRoot} to manipulate it.\n   *\n   * @readonly\n   * @member {Map}\n   */\n\t\tthis.roots = new Map();\n\n\t\t// Add events that will ensure selection correctness.\n\t\tthis.selection.on('change:range', function () {\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = _this.selection.getRanges()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar range = _step.value;\n\n\t\t\t\t\tif (!_this._validateSelectionRange(range)) {\n\t\t\t\t\t\t/**\n       * Range from document selection starts or ends at incorrect position.\n       *\n       * @error document-selection-wrong-position\n       * @param {module:engine/model/range~Range} range\n       */\n\t\t\t\t\t\tthrow new _ckeditorerror2.default('document-selection-wrong-position: ' + 'Range from document selection starts or ends at incorrect position.', { range: range });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// Graveyard tree root. Document always have a graveyard root, which stores removed nodes.\n\t\tthis.createRoot('$root', graveyardName);\n\t}\n\n\t/**\n  * Graveyard tree root. Document always have a graveyard root, which stores removed nodes.\n  *\n  * @readonly\n  * @member {module:engine/model/rootelement~RootElement}\n  */\n\n\n\t_createClass(Document, [{\n\t\tkey: 'applyOperation',\n\n\n\t\t/**\n   * This is the entry point for all document changes. All changes on the document are done using\n   * {@link module:engine/model/operation/operation~Operation operations}. To create operations in the simple way use the\n   * {@link module:engine/model/batch~Batch} API available via {@link #batch} method.\n   *\n   * @fires event:change\n   * @param {module:engine/model/operation/operation~Operation} operation Operation to be applied.\n   */\n\t\tvalue: function applyOperation(operation) {\n\t\t\tif (operation.baseVersion !== this.version) {\n\t\t\t\t/**\n     * Only operations with matching versions can be applied.\n     *\n     * @error document-applyOperation-wrong-version\n     * @param {module:engine/model/operation/operation~Operation} operation\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('model-document-applyOperation-wrong-version: Only operations with matching versions can be applied.', { operation: operation });\n\t\t\t}\n\n\t\t\tvar changes = operation._execute();\n\n\t\t\tthis.version++;\n\n\t\t\tthis.history.addDelta(operation.delta);\n\n\t\t\tif (changes) {\n\t\t\t\t// `NoOperation` returns no changes, do not fire event for it.\n\t\t\t\tthis.fire('change', operation.type, changes, operation.delta.batch, operation.delta.type);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Creates a {@link module:engine/model/batch~Batch} instance which allows to change the document.\n   *\n   * @param {String} [type] Batch type. See {@link module:engine/model/batch~Batch#type}.\n   * @returns {module:engine/model/batch~Batch} Batch instance.\n   */\n\n\t}, {\n\t\tkey: 'batch',\n\t\tvalue: function batch(type) {\n\t\t\treturn new _batch2.default(this, type);\n\t\t}\n\n\t\t/**\n   * Creates a new top-level root.\n   *\n   * @param {String} [elementName='$root'] Element name. Defaults to `'$root'` which also have\n   * some basic schema defined (`$block`s are allowed inside the `$root`). Make sure to define a proper\n   * schema if you use a different name.\n   * @param {String} [rootName='main'] Unique root name.\n   * @returns {module:engine/model/rootelement~RootElement} Created root.\n   */\n\n\t}, {\n\t\tkey: 'createRoot',\n\t\tvalue: function createRoot() {\n\t\t\tvar elementName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '$root';\n\t\t\tvar rootName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'main';\n\n\t\t\tif (this.roots.has(rootName)) {\n\t\t\t\t/**\n     * Root with specified name already exists.\n     *\n     * @error document-createRoot-name-exists\n     * @param {module:engine/model/document~Document} doc\n     * @param {String} name\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('model-document-createRoot-name-exists: Root with specified name already exists.', { name: rootName });\n\t\t\t}\n\n\t\t\tvar root = new _rootelement2.default(this, elementName, rootName);\n\t\t\tthis.roots.set(rootName, root);\n\n\t\t\treturn root;\n\t\t}\n\n\t\t/**\n   * Removes all events listeners set by document instance.\n   */\n\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {\n\t\t\tthis.selection.destroy();\n\t\t\tthis.stopListening();\n\t\t}\n\n\t\t/**\n   * Enqueues document changes. Any changes to be done on document (mostly using {@link #batch}\n   * should be placed in the queued callback. If no other plugin is changing document at the moment, the callback will be\n   * called immediately. Otherwise it will wait for all previously queued changes to finish happening. This way\n   * queued callback will not interrupt other callbacks.\n   *\n   * When all queued changes are done {@link #event:changesDone} event is fired.\n   *\n   * @fires changesDone\n   * @param {Function} callback Callback to enqueue.\n   */\n\n\t}, {\n\t\tkey: 'enqueueChanges',\n\t\tvalue: function enqueueChanges(callback) {\n\t\t\tthis._pendingChanges.push(callback);\n\n\t\t\tif (this._pendingChanges.length == 1) {\n\t\t\t\twhile (this._pendingChanges.length) {\n\t\t\t\t\tthis._pendingChanges[0]();\n\t\t\t\t\tthis._pendingChanges.shift();\n\t\t\t\t}\n\n\t\t\t\tthis.fire('changesDone');\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Returns top-level root by its name.\n   *\n   * @param {String} [name='main'] Unique root name.\n   * @returns {module:engine/model/rootelement~RootElement} Root registered under given name.\n   */\n\n\t}, {\n\t\tkey: 'getRoot',\n\t\tvalue: function getRoot() {\n\t\t\tvar name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'main';\n\n\t\t\tif (!this.roots.has(name)) {\n\t\t\t\t/**\n     * Root with specified name does not exist.\n     *\n     * @error document-getRoot-root-not-exist\n     * @param {String} name\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('model-document-getRoot-root-not-exist: Root with specified name does not exist.', { name: name });\n\t\t\t}\n\n\t\t\treturn this.roots.get(name);\n\t\t}\n\n\t\t/**\n   * Checks if root with given name is defined.\n   *\n   * @param {String} name Name of root to check.\n   * @returns {Boolean}\n   */\n\n\t}, {\n\t\tkey: 'hasRoot',\n\t\tvalue: function hasRoot(name) {\n\t\t\treturn this.roots.has(name);\n\t\t}\n\n\t\t/**\n   * Returns array with names of all roots (without the {@link #graveyard}) added to the document.\n   *\n   * @returns {Array.<String>} Roots names.\n   */\n\n\t}, {\n\t\tkey: 'getRootNames',\n\t\tvalue: function getRootNames() {\n\t\t\treturn Array.from(this.roots.keys()).filter(function (name) {\n\t\t\t\treturn name != graveyardName;\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * Basing on given `position`, finds and returns a {@link module:engine/model/range~Range Range} instance that is\n   * nearest to that `position` and is a correct range for selection.\n   *\n   * Correct selection range might be collapsed - when it's located in position where text node can be placed.\n   * Non-collapsed range is returned when selection can be placed around element marked as \"object\" in\n   * {@link module:engine/model/schema~Schema schema}.\n   *\n   * Direction of searching for nearest correct selection range can be specified as:\n   * * `both` - searching will be performed in both ways,\n   * * `forward` - searching will be performed only forward,\n   * * `backward` - searching will be performed only backward.\n   *\n   * When valid selection range cannot be found, `null` is returned.\n   *\n   * @param {module:engine/model/position~Position} position Reference position where new selection range should be looked for.\n   * @param {'both'|'forward'|'backward'} [direction='both'] Search direction.\n   * @returns {module:engine/model/range~Range|null} Nearest selection range or `null` if one cannot be found.\n   */\n\n\t}, {\n\t\tkey: 'getNearestSelectionRange',\n\t\tvalue: function getNearestSelectionRange(position) {\n\t\t\tvar direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'both';\n\n\t\t\t// Return collapsed range if provided position is valid.\n\t\t\tif (this.schema.check({ name: '$text', inside: position })) {\n\t\t\t\treturn new _range2.default(position);\n\t\t\t}\n\n\t\t\tvar backwardWalker = void 0,\n\t\t\t    forwardWalker = void 0;\n\n\t\t\tif (direction == 'both' || direction == 'backward') {\n\t\t\t\tbackwardWalker = new _treewalker2.default({ startPosition: position, direction: 'backward' });\n\t\t\t}\n\n\t\t\tif (direction == 'both' || direction == 'forward') {\n\t\t\t\tforwardWalker = new _treewalker2.default({ startPosition: position });\n\t\t\t}\n\n\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\tvar _didIteratorError2 = false;\n\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator2 = combineWalkers(backwardWalker, forwardWalker)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\tvar data = _step2.value;\n\n\t\t\t\t\tvar type = data.walker == backwardWalker ? 'elementEnd' : 'elementStart';\n\t\t\t\t\tvar value = data.value;\n\n\t\t\t\t\tif (value.type == type && this.schema.objects.has(value.item.name)) {\n\t\t\t\t\t\treturn _range2.default.createOn(value.item);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.schema.check({ name: '$text', inside: value.nextPosition })) {\n\t\t\t\t\t\treturn new _range2.default(value.nextPosition);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t_iteratorError2 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n   * Transforms two sets of deltas by themselves. Returns both transformed sets.\n   *\n   * @param {Array.<module:engine/model/delta/delta~Delta>} deltasA Array with the first set of deltas to transform. These\n   * deltas are considered more important (than `deltasB`) when resolving conflicts.\n   * @param {Array.<module:engine/model/delta/delta~Delta>} deltasB Array with the second set of deltas to transform. These\n   * deltas are considered less important (than `deltasA`) when resolving conflicts.\n   * @param {Boolean} [useContext=false] When set to `true`, transformation will store and use additional context\n   * information to guarantee more expected results. Should be used whenever deltas related to already applied\n   * deltas are transformed (for example when undoing changes).\n   * @returns {Object}\n   * @returns {Array.<module:engine/model/delta/delta~Delta>} return.deltasA The first set of deltas transformed\n   * by the second set of deltas.\n   * @returns {Array.<module:engine/model/delta/delta~Delta>} return.deltasB The second set of deltas transformed\n   * by the first set of deltas.\n   */\n\n\t}, {\n\t\tkey: 'transformDeltas',\n\t\tvalue: function transformDeltas(deltasA, deltasB) {\n\t\t\tvar useContext = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n\t\t\treturn _transform2.default.transformDeltaSets(deltasA, deltasB, useContext ? this : null);\n\t\t}\n\n\t\t/**\n   * Custom toJSON method to solve child-parent circular dependencies.\n   *\n   * @returns {Object} Clone of this object with the document property changed to string.\n   */\n\n\t}, {\n\t\tkey: 'toJSON',\n\t\tvalue: function toJSON() {\n\t\t\tvar json = (0, _clone2.default)(this);\n\n\t\t\t// Due to circular references we need to remove parent reference.\n\t\t\tjson.selection = '[engine.model.DocumentSelection]';\n\n\t\t\treturn json;\n\t\t}\n\n\t\t/**\n   * Returns default root for this document which is either the first root that was added to the the document using\n   * {@link #createRoot} or the {@link #graveyard graveyard root} if no other roots were created.\n   *\n   * @protected\n   * @returns {module:engine/model/rootelement~RootElement} The default root for this document.\n   */\n\n\t}, {\n\t\tkey: '_getDefaultRoot',\n\t\tvalue: function _getDefaultRoot() {\n\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\tvar _didIteratorError3 = false;\n\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator3 = this.roots.values()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\tvar root = _step3.value;\n\n\t\t\t\t\tif (root !== this.graveyard) {\n\t\t\t\t\t\treturn root;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t_iteratorError3 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.graveyard;\n\t\t}\n\n\t\t/**\n   * Returns a default range for this selection. The default range is a collapsed range that starts and ends\n   * at the beginning of this selection's document's {@link #_getDefaultRoot default root}.\n   *\n   * @protected\n   * @returns {module:engine/model/range~Range}\n   */\n\n\t}, {\n\t\tkey: '_getDefaultRange',\n\t\tvalue: function _getDefaultRange() {\n\t\t\tvar defaultRoot = this._getDefaultRoot();\n\n\t\t\t// Find the first position where the selection can be put.\n\t\t\tvar position = new _position2.default(defaultRoot, [0]);\n\t\t\tvar nearestRange = this.getNearestSelectionRange(position);\n\n\t\t\t// If valid selection range is not found - return range collapsed at the beginning of the root.\n\t\t\treturn nearestRange || new _range2.default(position);\n\t\t}\n\n\t\t/**\n   * Checks whether given {@link module:engine/model/range~Range range} is a valid range for\n   * {@link #selection document's selection}.\n   *\n   * @private\n   * @param {module:engine/model/range~Range} range Range to check.\n   * @returns {Boolean} `true` if `range` is valid, `false` otherwise.\n   */\n\n\t}, {\n\t\tkey: '_validateSelectionRange',\n\t\tvalue: function _validateSelectionRange(range) {\n\t\t\treturn validateTextNodePosition(range.start) && validateTextNodePosition(range.end);\n\t\t}\n\n\t\t/**\n   * Fired when document changes by applying an operation.\n   *\n   * There are 5 types of change:\n   *\n   * * 'insert' when nodes are inserted,\n   * * 'remove' when nodes are removed,\n   * * 'reinsert' when remove is undone,\n   * * 'move' when nodes are moved,\n   * * 'rename' when element is renamed,\n   * * 'marker' when a marker changes (added, removed or its range is changed),\n   * * 'addAttribute' when attributes are added,\n   * * 'removeAttribute' when attributes are removed,\n   * * 'changeAttribute' when attributes change,\n   * * 'addRootAttribute' when attribute for root is added,\n   * * 'removeRootAttribute' when attribute for root is removed,\n   * * 'changeRootAttribute' when attribute for root changes.\n   *\n   * @event change\n   * @param {String} type Change type, possible option: 'insert', 'remove', 'reinsert', 'move', 'attribute'.\n   * @param {Object} data Additional information about the change.\n   * @param {module:engine/model/range~Range} [data.range] Range in model containing changed nodes. Note that the range state is\n   * after changes has been done, i.e. for 'remove' the range will be in the {@link #graveyard graveyard root}.\n   * The range is not defined for root, rename and marker types.\n   * @param {module:engine/model/position~Position} [data.sourcePosition] Change source position.\n   * Exists for 'remove', 'reinsert' and 'move'.\n   * Note that this position state is before changes has been done, i.e. for 'reinsert' the source position will be in the\n   * {@link #graveyard graveyard root}.\n   * @param {String} [data.key] Only for attribute types. Key of changed / inserted / removed attribute.\n   * @param {*} [data.oldValue] Only for 'removeAttribute', 'removeRootAttribute', 'changeAttribute' or\n   * 'changeRootAttribute' type.\n   * @param {*} [data.newValue] Only for 'addAttribute', 'addRootAttribute', 'changeAttribute' or\n   * 'changeRootAttribute' type.\n   * @param {module:engine/model/rootelement~RootElement} [data.root] Root element which attributes got changed. This is defined\n   * only for root types.\n   * @param {module:engine/model/batch~Batch} batch A {@link module:engine/model/batch~Batch batch}\n   * of changes which this change is a part of.\n   */\n\n\t\t/**\n   * Fired when all queued document changes are done. See {@link #enqueueChanges}.\n   *\n   * @event changesDone\n   */\n\n\t}, {\n\t\tkey: 'graveyard',\n\t\tget: function get() {\n\t\t\treturn this.getRoot(graveyardName);\n\t\t}\n\t}]);\n\n\treturn Document;\n}();\n\nexports.default = Document;\n\n\n(0, _mix2.default)(Document, _emittermixin2.default);\n\n// Checks whether given range boundary position is valid for document selection, meaning that is not between\n// unicode surrogate pairs or base character and combining marks.\nfunction validateTextNodePosition(rangeBoundary) {\n\tvar textNode = rangeBoundary.textNode;\n\n\tif (textNode) {\n\t\tvar data = textNode.data;\n\t\tvar offset = rangeBoundary.offset - textNode.startOffset;\n\n\t\treturn !(0, _unicode.isInsideSurrogatePair)(data, offset) && !(0, _unicode.isInsideCombinedSymbol)(data, offset);\n\t}\n\n\treturn true;\n}\n\n// Generator function returning values from provided walkers, switching between them at each iteration. If only one walker\n// is provided it will return data only from that walker.\n//\n// @param {module:engine/module/treewalker~TreeWalker} [backward] Walker iterating in backward direction.\n// @param {module:engine/module/treewalker~TreeWalker} [forward] Walker iterating in forward direction.\n// @returns {Iterable.<Object>} Object returned at each iteration contains `value` and `walker` (informing which walker returned\n// given value) fields.\nfunction combineWalkers(backward, forward) {\n\tvar done, step, _step4;\n\n\treturn regeneratorRuntime.wrap(function combineWalkers$(_context) {\n\t\twhile (1) {\n\t\t\tswitch (_context.prev = _context.next) {\n\t\t\t\tcase 0:\n\t\t\t\t\tdone = false;\n\n\t\t\t\tcase 1:\n\t\t\t\t\tif (done) {\n\t\t\t\t\t\t_context.next = 17;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tdone = true;\n\n\t\t\t\t\tif (!backward) {\n\t\t\t\t\t\t_context.next = 9;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tstep = backward.next();\n\n\t\t\t\t\tif (step.done) {\n\t\t\t\t\t\t_context.next = 9;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tdone = false;\n\t\t\t\t\t_context.next = 9;\n\t\t\t\t\treturn {\n\t\t\t\t\t\twalker: backward,\n\t\t\t\t\t\tvalue: step.value\n\t\t\t\t\t};\n\n\t\t\t\tcase 9:\n\t\t\t\t\tif (!forward) {\n\t\t\t\t\t\t_context.next = 15;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t_step4 = forward.next();\n\n\t\t\t\t\tif (_step4.done) {\n\t\t\t\t\t\t_context.next = 15;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tdone = false;\n\t\t\t\t\t_context.next = 15;\n\t\t\t\t\treturn {\n\t\t\t\t\t\twalker: forward,\n\t\t\t\t\t\tvalue: _step4.value\n\t\t\t\t\t};\n\n\t\t\t\tcase 15:\n\t\t\t\t\t_context.next = 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 17:\n\t\t\t\tcase 'end':\n\t\t\t\t\treturn _context.stop();\n\t\t\t}\n\t\t}\n\t}, _marked[0], this);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/document.js\n// module id = 315\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _position = require('./position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _range = require('./range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _liverange = require('./liverange');\n\nvar _liverange2 = _interopRequireDefault(_liverange);\n\nvar _text = require('./text');\n\nvar _text2 = _interopRequireDefault(_text);\n\nvar _textproxy = require('./textproxy');\n\nvar _textproxy2 = _interopRequireDefault(_textproxy);\n\nvar _tomap = require('@ckeditor/ckeditor5-utils/src/tomap');\n\nvar _tomap2 = _interopRequireDefault(_tomap);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nvar _log = require('@ckeditor/ckeditor5-utils/src/log');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _selection = require('./selection');\n\nvar _selection2 = _interopRequireDefault(_selection);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/model/documentselection\n */\n\nvar storePrefix = 'selection:';\n\nvar attrOpTypes = new Set(['addAttribute', 'removeAttribute', 'changeAttribute', 'addRootAttribute', 'removeRootAttribute', 'changeRootAttribute']);\n\n/**\n * `DocumentSelection` is a special selection which is used as the\n * {@link module:engine/model/document~Document#selection document's selection}.\n * There can be only one instance of `DocumentSelection` per document.\n *\n * `DocumentSelection` is automatically updated upon changes in the {@link module:engine/model/document~Document document}\n * to always contain valid ranges. Its attributes are inherited from the text unless set explicitly.\n *\n * Differences between {@link module:engine/model/selection~Selection} and `DocumentSelection` are:\n * * there is always a range in `DocumentSelection` - even if no ranges were added there is a \"default range\"\n * present in the selection,\n * * ranges added to this selection updates automatically when the document changes,\n * * attributes of `DocumentSelection` are updated automatically according to selection ranges.\n *\n * Since `DocumentSelection` uses {@link module:engine/model/liverange~LiveRange live ranges}\n * and is updated when {@link module:engine/model/document~Document document}\n * changes, it cannot be set on {@link module:engine/model/node~Node nodes}\n * that are inside {@link module:engine/model/documentfragment~DocumentFragment document fragment}.\n * If you need to represent a selection in document fragment,\n * use {@link module:engine/model/selection~Selection Selection class} instead.\n *\n * @extends module:engine/model/selection~Selection\n */\n\nvar DocumentSelection = function (_Selection) {\n\t_inherits(DocumentSelection, _Selection);\n\n\t/**\n  * Creates an empty live selection for given {@link module:engine/model/document~Document}.\n  *\n  * @param {module:engine/model/document~Document} document Document which owns this selection.\n  */\n\tfunction DocumentSelection(document) {\n\t\t_classCallCheck(this, DocumentSelection);\n\n\t\t/**\n   * Document which owns this selection.\n   *\n   * @protected\n   * @member {module:engine/model/document~Document} module:engine/model/documentselection~DocumentSelection#_document\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (DocumentSelection.__proto__ || Object.getPrototypeOf(DocumentSelection)).call(this));\n\n\t\t_this._document = document;\n\n\t\t/**\n   * Keeps mapping of attribute name to priority with which the attribute got modified (added/changed/removed)\n   * last time. Possible values of priority are: `'low'` and `'normal'`.\n   *\n   * Priorities are used by internal `DocumentSelection` mechanisms. All attributes set using `DocumentSelection`\n   * attributes API are set with `'normal'` priority.\n   *\n   * @private\n   * @member {Map} module:engine/model/documentselection~DocumentSelection#_attributePriority\n   */\n\t\t_this._attributePriority = new Map();\n\n\t\t_this.listenTo(_this._document, 'change', function (evt, type, changes, batch) {\n\t\t\t// Whenever attribute operation is performed on document, update selection attributes.\n\t\t\t// This is not the most efficient way to update selection attributes, but should be okay for now.\n\t\t\tif (attrOpTypes.has(type)) {\n\t\t\t\t_this._updateAttributes(false);\n\t\t\t}\n\n\t\t\t// Whenever element which had selection's attributes stored in it stops being empty,\n\t\t\t// the attributes need to be removed.\n\t\t\tclearAttributesStoredInElement(changes, batch);\n\t\t});\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(DocumentSelection, [{\n\t\tkey: 'destroy',\n\n\n\t\t/**\n   * Unbinds all events previously bound by document selection.\n   */\n\t\tvalue: function destroy() {\n\t\t\tfor (var i = 0; i < this._ranges.length; i++) {\n\t\t\t\tthis._ranges[i].detach();\n\t\t\t}\n\n\t\t\tthis.stopListening();\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'getRanges',\n\t\tvalue: regeneratorRuntime.mark(function getRanges() {\n\t\t\treturn regeneratorRuntime.wrap(function getRanges$(_context) {\n\t\t\t\twhile (1) {\n\t\t\t\t\tswitch (_context.prev = _context.next) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\tif (!this._ranges.length) {\n\t\t\t\t\t\t\t\t_context.next = 4;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn _context.delegateYield(_get(DocumentSelection.prototype.__proto__ || Object.getPrototypeOf(DocumentSelection.prototype), 'getRanges', this).call(this), 't0', 2);\n\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t_context.next = 6;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t_context.next = 6;\n\t\t\t\t\t\t\treturn this._document._getDefaultRange();\n\n\t\t\t\t\t\tcase 6:\n\t\t\t\t\t\tcase 'end':\n\t\t\t\t\t\t\treturn _context.stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, getRanges, this);\n\t\t})\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'getFirstRange',\n\t\tvalue: function getFirstRange() {\n\t\t\treturn _get(DocumentSelection.prototype.__proto__ || Object.getPrototypeOf(DocumentSelection.prototype), 'getFirstRange', this).call(this) || this._document._getDefaultRange();\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'getLastRange',\n\t\tvalue: function getLastRange() {\n\t\t\treturn _get(DocumentSelection.prototype.__proto__ || Object.getPrototypeOf(DocumentSelection.prototype), 'getLastRange', this).call(this) || this._document._getDefaultRange();\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'addRange',\n\t\tvalue: function addRange(range) {\n\t\t\tvar isBackward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n\t\t\t_get(DocumentSelection.prototype.__proto__ || Object.getPrototypeOf(DocumentSelection.prototype), 'addRange', this).call(this, range, isBackward);\n\t\t\tthis.refreshAttributes();\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'removeAllRanges',\n\t\tvalue: function removeAllRanges() {\n\t\t\t_get(DocumentSelection.prototype.__proto__ || Object.getPrototypeOf(DocumentSelection.prototype), 'removeAllRanges', this).call(this);\n\t\t\tthis.refreshAttributes();\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'setRanges',\n\t\tvalue: function setRanges(newRanges) {\n\t\t\tvar isLastBackward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n\t\t\t_get(DocumentSelection.prototype.__proto__ || Object.getPrototypeOf(DocumentSelection.prototype), 'setRanges', this).call(this, newRanges, isLastBackward);\n\t\t\tthis.refreshAttributes();\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'setAttribute',\n\t\tvalue: function setAttribute(key, value) {\n\t\t\t// Store attribute in parent element if the selection is collapsed in an empty node.\n\t\t\tif (this.isCollapsed && this.anchor.parent.isEmpty) {\n\t\t\t\tthis._storeAttribute(key, value);\n\t\t\t}\n\n\t\t\tif (this._setAttribute(key, value)) {\n\t\t\t\t// Fire event with exact data.\n\t\t\t\tvar attributeKeys = [key];\n\t\t\t\tthis.fire('change:attribute', { attributeKeys: attributeKeys, directChange: true });\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'removeAttribute',\n\t\tvalue: function removeAttribute(key) {\n\t\t\t// Remove stored attribute from parent element if the selection is collapsed in an empty node.\n\t\t\tif (this.isCollapsed && this.anchor.parent.isEmpty) {\n\t\t\t\tthis._removeStoredAttribute(key);\n\t\t\t}\n\n\t\t\tif (this._removeAttribute(key)) {\n\t\t\t\t// Fire event with exact data.\n\t\t\t\tvar attributeKeys = [key];\n\t\t\t\tthis.fire('change:attribute', { attributeKeys: attributeKeys, directChange: true });\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'setAttributesTo',\n\t\tvalue: function setAttributesTo(attrs) {\n\t\t\tattrs = (0, _tomap2.default)(attrs);\n\n\t\t\tif (this.isCollapsed && this.anchor.parent.isEmpty) {\n\t\t\t\tthis._setStoredAttributesTo(attrs);\n\t\t\t}\n\n\t\t\tvar changed = this._setAttributesTo(attrs);\n\n\t\t\tif (changed.size > 0) {\n\t\t\t\t// Fire event with exact data (fire only if anything changed).\n\t\t\t\tvar attributeKeys = Array.from(changed);\n\t\t\t\tthis.fire('change:attribute', { attributeKeys: attributeKeys, directChange: true });\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'clearAttributes',\n\t\tvalue: function clearAttributes() {\n\t\t\tthis.setAttributesTo([]);\n\t\t}\n\n\t\t/**\n   * Removes all attributes from the selection and sets attributes according to the surrounding nodes.\n   */\n\n\t}, {\n\t\tkey: 'refreshAttributes',\n\t\tvalue: function refreshAttributes() {\n\t\t\tthis._updateAttributes(true);\n\t\t}\n\n\t\t/**\n   * This method is not available in `DocumentSelection`. There can be only one\n   * `DocumentSelection` per document instance, so creating new `DocumentSelection`s this way\n   * would be unsafe.\n   */\n\n\t}, {\n\t\tkey: '_popRange',\n\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tvalue: function _popRange() {\n\t\t\tthis._ranges.pop().detach();\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: '_pushRange',\n\t\tvalue: function _pushRange(range) {\n\t\t\tvar liveRange = this._prepareRange(range);\n\n\t\t\t// `undefined` is returned when given `range` is in graveyard root.\n\t\t\tif (liveRange) {\n\t\t\t\tthis._ranges.push(liveRange);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Prepares given range to be added to selection. Checks if it is correct,\n   * converts it to {@link module:engine/model/liverange~LiveRange LiveRange}\n   * and sets listeners listening to the range's change event.\n   *\n   * @private\n   * @param {module:engine/model/range~Range} range\n   */\n\n\t}, {\n\t\tkey: '_prepareRange',\n\t\tvalue: function _prepareRange(range) {\n\t\t\tvar _this2 = this;\n\n\t\t\tif (!(range instanceof _range2.default)) {\n\t\t\t\t/**\n     * Trying to add an object that is not an instance of Range.\n     *\n     * @error model-selection-added-not-range\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('model-selection-added-not-range: Trying to add an object that is not an instance of Range.');\n\t\t\t}\n\n\t\t\tif (range.root == this._document.graveyard) {\n\t\t\t\t/**\n     * Trying to add a Range that is in the graveyard root. Range rejected.\n     *\n     * @warning model-selection-range-in-graveyard\n     */\n\t\t\t\t_log2.default.warn('model-selection-range-in-graveyard: Trying to add a Range that is in the graveyard root. Range rejected.');\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._checkRange(range);\n\n\t\t\tvar liveRange = _liverange2.default.createFromRange(range);\n\n\t\t\tthis.listenTo(liveRange, 'change', function (evt, oldRange, data) {\n\t\t\t\t// If `LiveRange` is in whole moved to the graveyard, fix that range.\n\t\t\t\tif (liveRange.root == _this2._document.graveyard) {\n\t\t\t\t\tvar sourceStart = data.sourcePosition;\n\t\t\t\t\tvar howMany = data.range.end.offset - data.range.start.offset;\n\t\t\t\t\tvar sourceRange = _range2.default.createFromPositionAndShift(sourceStart, howMany);\n\n\t\t\t\t\t_this2._fixGraveyardSelection(liveRange, sourceRange);\n\t\t\t\t}\n\n\t\t\t\t// Whenever a live range from selection changes, fire an event informing about that change.\n\t\t\t\t_this2.fire('change:range', { directChange: false });\n\t\t\t});\n\n\t\t\treturn liveRange;\n\t\t}\n\n\t\t/**\n   * Updates this selection attributes according to its ranges and the {@link module:engine/model/document~Document model document}.\n   *\n   * @protected\n   * @param {Boolean} clearAll\n   * @fires change:attribute\n   */\n\n\t}, {\n\t\tkey: '_updateAttributes',\n\t\tvalue: function _updateAttributes(clearAll) {\n\t\t\tvar newAttributes = (0, _tomap2.default)(this._getSurroundingAttributes());\n\t\t\tvar oldAttributes = (0, _tomap2.default)(this.getAttributes());\n\n\t\t\tif (clearAll) {\n\t\t\t\t// If `clearAll` remove all attributes and reset priorities.\n\t\t\t\tthis._attributePriority = new Map();\n\t\t\t\tthis._attrs = new Map();\n\t\t\t} else {\n\t\t\t\t// If not, remove only attributes added with `low` priority.\n\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\tvar _didIteratorError = false;\n\t\t\t\tvar _iteratorError = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator = this._attributePriority[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\tvar _ref = _step.value;\n\n\t\t\t\t\t\tvar _ref2 = _slicedToArray(_ref, 2);\n\n\t\t\t\t\t\tvar key = _ref2[0];\n\t\t\t\t\t\tvar priority = _ref2[1];\n\n\t\t\t\t\t\tif (priority == 'low') {\n\t\t\t\t\t\t\tthis._attrs.delete(key);\n\t\t\t\t\t\t\tthis._attributePriority.delete(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t_iteratorError = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._setAttributesTo(newAttributes, false);\n\n\t\t\t// Let's evaluate which attributes really changed.\n\t\t\tvar changed = [];\n\n\t\t\t// First, loop through all attributes that are set on selection right now.\n\t\t\t// Check which of them are different than old attributes.\n\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\tvar _didIteratorError2 = false;\n\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator2 = this.getAttributes()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\tvar _ref3 = _step2.value;\n\n\t\t\t\t\tvar _ref4 = _slicedToArray(_ref3, 2);\n\n\t\t\t\t\tvar newKey = _ref4[0];\n\t\t\t\t\tvar newValue = _ref4[1];\n\n\t\t\t\t\tif (!oldAttributes.has(newKey) || oldAttributes.get(newKey) !== newValue) {\n\t\t\t\t\t\tchanged.push(newKey);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Then, check which of old attributes got removed.\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t_iteratorError2 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\tvar _didIteratorError3 = false;\n\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator3 = oldAttributes[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\tvar _ref5 = _step3.value;\n\n\t\t\t\t\tvar _ref6 = _slicedToArray(_ref5, 1);\n\n\t\t\t\t\tvar oldKey = _ref6[0];\n\n\t\t\t\t\tif (!this.hasAttribute(oldKey)) {\n\t\t\t\t\t\tchanged.push(oldKey);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Fire event with exact data (fire only if anything changed).\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t_iteratorError3 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (changed.length > 0) {\n\t\t\t\tthis.fire('change:attribute', { attributeKeys: changed, directChange: false });\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Generates and returns an attribute key for selection attributes store, basing on original attribute key.\n   *\n   * @protected\n   * @param {String} key Attribute key to convert.\n   * @returns {String} Converted attribute key, applicable for selection store.\n   */\n\n\t}, {\n\t\tkey: '_setAttribute',\n\n\n\t\t/**\n   * Internal method for setting `DocumentSelection` attribute. Supports attribute priorities (through `directChange`\n   * parameter).\n   *\n   * @private\n   * @param {String} key Attribute key.\n   * @param {*} value Attribute value.\n   * @param {Boolean} [directChange=true] `true` if the change is caused by `Selection` API, `false` if change\n   * is caused by `Batch` API.\n   * @returns {Boolean} Whether value has changed.\n   */\n\t\tvalue: function _setAttribute(key, value) {\n\t\t\tvar directChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n\t\t\tvar priority = directChange ? 'normal' : 'low';\n\n\t\t\tif (priority == 'low' && this._attributePriority.get(key) == 'normal') {\n\t\t\t\t// Priority too low.\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar oldValue = _get(DocumentSelection.prototype.__proto__ || Object.getPrototypeOf(DocumentSelection.prototype), 'getAttribute', this).call(this, key);\n\n\t\t\t// Don't do anything if value has not changed.\n\t\t\tif (oldValue === value) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tthis._attrs.set(key, value);\n\n\t\t\t// Update priorities map.\n\t\t\tthis._attributePriority.set(key, priority);\n\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n   * Internal method for removing `DocumentSelection` attribute. Supports attribute priorities (through `directChange`\n   * parameter).\n   *\n   * @private\n   * @param {String} key Attribute key.\n   * @param {Boolean} [directChange=true] `true` if the change is caused by `Selection` API, `false` if change\n   * is caused by `Batch` API.\n   * @returns {Boolean} Whether attribute was removed. May not be true if such attributes didn't exist or the\n   * existing attribute had higher priority.\n   */\n\n\t}, {\n\t\tkey: '_removeAttribute',\n\t\tvalue: function _removeAttribute(key) {\n\t\t\tvar directChange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n\t\t\tvar priority = directChange ? 'normal' : 'low';\n\n\t\t\tif (priority == 'low' && this._attributePriority.get(key) == 'normal') {\n\t\t\t\t// Priority too low.\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Don't do anything if value has not changed.\n\t\t\tif (!_get(DocumentSelection.prototype.__proto__ || Object.getPrototypeOf(DocumentSelection.prototype), 'hasAttribute', this).call(this, key)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tthis._attrs.delete(key);\n\n\t\t\t// Update priorities map.\n\t\t\tthis._attributePriority.set(key, priority);\n\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n   * Internal method for setting multiple `DocumentSelection` attributes. Supports attribute priorities (through\n   * `directChange` parameter).\n   *\n   * @private\n   * @param {Iterable|Object} attrs Iterable object containing attributes to be set.\n   * @param {Boolean} [directChange=true] `true` if the change is caused by `Selection` API, `false` if change\n   * is caused by `Batch` API.\n   * @returns {Set.<String>} Changed attribute keys.\n   */\n\n\t}, {\n\t\tkey: '_setAttributesTo',\n\t\tvalue: function _setAttributesTo(attrs) {\n\t\t\tvar directChange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n\t\t\tvar changed = new Set();\n\n\t\t\tvar _iteratorNormalCompletion4 = true;\n\t\t\tvar _didIteratorError4 = false;\n\t\t\tvar _iteratorError4 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator4 = this.getAttributes()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\t\t\tvar _ref7 = _step4.value;\n\n\t\t\t\t\tvar _ref8 = _slicedToArray(_ref7, 2);\n\n\t\t\t\t\tvar oldKey = _ref8[0];\n\t\t\t\t\tvar oldValue = _ref8[1];\n\n\t\t\t\t\t// Do not remove attribute if attribute with same key and value is about to be set.\n\t\t\t\t\tif (attrs.get(oldKey) === oldValue) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Attribute still might not get removed because of priorities.\n\t\t\t\t\tif (this._removeAttribute(oldKey, directChange)) {\n\t\t\t\t\t\tchanged.add(oldKey);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError4 = true;\n\t\t\t\t_iteratorError4 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t\t\t_iterator4.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError4) {\n\t\t\t\t\t\tthrow _iteratorError4;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar _iteratorNormalCompletion5 = true;\n\t\t\tvar _didIteratorError5 = false;\n\t\t\tvar _iteratorError5 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator5 = attrs[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t\t\t\t\tvar _ref9 = _step5.value;\n\n\t\t\t\t\tvar _ref10 = _slicedToArray(_ref9, 2);\n\n\t\t\t\t\tvar key = _ref10[0];\n\t\t\t\t\tvar value = _ref10[1];\n\n\t\t\t\t\t// Attribute may not be set because of attributes or because same key/value is already added.\n\t\t\t\t\tvar gotAdded = this._setAttribute(key, value, directChange);\n\n\t\t\t\t\tif (gotAdded) {\n\t\t\t\t\t\tchanged.add(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError5 = true;\n\t\t\t\t_iteratorError5 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t\t\t\t\t\t_iterator5.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError5) {\n\t\t\t\t\t\tthrow _iteratorError5;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn changed;\n\t\t}\n\n\t\t/**\n   * Returns an iterator that iterates through all selection attributes stored in current selection's parent.\n   *\n   * @private\n   * @returns {Iterable.<*>}\n   */\n\n\t}, {\n\t\tkey: '_getStoredAttributes',\n\t\tvalue: regeneratorRuntime.mark(function _getStoredAttributes() {\n\t\t\tvar selectionParent, _iteratorNormalCompletion6, _didIteratorError6, _iteratorError6, _iterator6, _step6, key, realKey;\n\n\t\t\treturn regeneratorRuntime.wrap(function _getStoredAttributes$(_context2) {\n\t\t\t\twhile (1) {\n\t\t\t\t\tswitch (_context2.prev = _context2.next) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\tselectionParent = this.getFirstPosition().parent;\n\n\t\t\t\t\t\t\tif (!(this.isCollapsed && selectionParent.isEmpty)) {\n\t\t\t\t\t\t\t\t_context2.next = 30;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_iteratorNormalCompletion6 = true;\n\t\t\t\t\t\t\t_didIteratorError6 = false;\n\t\t\t\t\t\t\t_iteratorError6 = undefined;\n\t\t\t\t\t\t\t_context2.prev = 5;\n\t\t\t\t\t\t\t_iterator6 = selectionParent.getAttributeKeys()[Symbol.iterator]();\n\n\t\t\t\t\t\tcase 7:\n\t\t\t\t\t\t\tif (_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done) {\n\t\t\t\t\t\t\t\t_context2.next = 16;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tkey = _step6.value;\n\n\t\t\t\t\t\t\tif (!key.startsWith(storePrefix)) {\n\t\t\t\t\t\t\t\t_context2.next = 13;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\trealKey = key.substr(storePrefix.length);\n\t\t\t\t\t\t\t_context2.next = 13;\n\t\t\t\t\t\t\treturn [realKey, selectionParent.getAttribute(key)];\n\n\t\t\t\t\t\tcase 13:\n\t\t\t\t\t\t\t_iteratorNormalCompletion6 = true;\n\t\t\t\t\t\t\t_context2.next = 7;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 16:\n\t\t\t\t\t\t\t_context2.next = 22;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 18:\n\t\t\t\t\t\t\t_context2.prev = 18;\n\t\t\t\t\t\t\t_context2.t0 = _context2['catch'](5);\n\t\t\t\t\t\t\t_didIteratorError6 = true;\n\t\t\t\t\t\t\t_iteratorError6 = _context2.t0;\n\n\t\t\t\t\t\tcase 22:\n\t\t\t\t\t\t\t_context2.prev = 22;\n\t\t\t\t\t\t\t_context2.prev = 23;\n\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion6 && _iterator6.return) {\n\t\t\t\t\t\t\t\t_iterator6.return();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase 25:\n\t\t\t\t\t\t\t_context2.prev = 25;\n\n\t\t\t\t\t\t\tif (!_didIteratorError6) {\n\t\t\t\t\t\t\t\t_context2.next = 28;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthrow _iteratorError6;\n\n\t\t\t\t\t\tcase 28:\n\t\t\t\t\t\t\treturn _context2.finish(25);\n\n\t\t\t\t\t\tcase 29:\n\t\t\t\t\t\t\treturn _context2.finish(22);\n\n\t\t\t\t\t\tcase 30:\n\t\t\t\t\t\tcase 'end':\n\t\t\t\t\t\t\treturn _context2.stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, _getStoredAttributes, this, [[5, 18, 22, 30], [23,, 25, 29]]);\n\t\t})\n\n\t\t/**\n   * Removes attribute with given key from attributes stored in current selection's parent node.\n   *\n   * @private\n   * @param {String} key Key of attribute to remove.\n   */\n\n\t}, {\n\t\tkey: '_removeStoredAttribute',\n\t\tvalue: function _removeStoredAttribute(key) {\n\t\t\tvar storeKey = DocumentSelection._getStoreAttributeKey(key);\n\n\t\t\tthis._document.batch().removeAttribute(this.anchor.parent, storeKey);\n\t\t}\n\n\t\t/**\n   * Stores given attribute key and value in current selection's parent node.\n   *\n   * @private\n   * @param {String} key Key of attribute to set.\n   * @param {*} value Attribute value.\n   */\n\n\t}, {\n\t\tkey: '_storeAttribute',\n\t\tvalue: function _storeAttribute(key, value) {\n\t\t\tvar storeKey = DocumentSelection._getStoreAttributeKey(key);\n\n\t\t\tthis._document.batch().setAttribute(this.anchor.parent, storeKey, value);\n\t\t}\n\n\t\t/**\n   * Sets selection attributes stored in current selection's parent node to given set of attributes.\n   *\n   * @private\n   * @param {Iterable|Object} attrs Iterable object containing attributes to be set.\n   */\n\n\t}, {\n\t\tkey: '_setStoredAttributesTo',\n\t\tvalue: function _setStoredAttributesTo(attrs) {\n\t\t\tvar selectionParent = this.anchor.parent;\n\t\t\tvar batch = this._document.batch();\n\n\t\t\tvar _iteratorNormalCompletion7 = true;\n\t\t\tvar _didIteratorError7 = false;\n\t\t\tvar _iteratorError7 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator7 = this._getStoredAttributes()[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n\t\t\t\t\tvar _ref11 = _step7.value;\n\n\t\t\t\t\tvar _ref12 = _slicedToArray(_ref11, 1);\n\n\t\t\t\t\tvar oldKey = _ref12[0];\n\n\t\t\t\t\tvar storeKey = DocumentSelection._getStoreAttributeKey(oldKey);\n\n\t\t\t\t\tbatch.removeAttribute(selectionParent, storeKey);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError7 = true;\n\t\t\t\t_iteratorError7 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion7 && _iterator7.return) {\n\t\t\t\t\t\t_iterator7.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError7) {\n\t\t\t\t\t\tthrow _iteratorError7;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar _iteratorNormalCompletion8 = true;\n\t\t\tvar _didIteratorError8 = false;\n\t\t\tvar _iteratorError8 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator8 = attrs[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n\t\t\t\t\tvar _ref13 = _step8.value;\n\n\t\t\t\t\tvar _ref14 = _slicedToArray(_ref13, 2);\n\n\t\t\t\t\tvar key = _ref14[0];\n\t\t\t\t\tvar value = _ref14[1];\n\n\t\t\t\t\tvar storeKey = DocumentSelection._getStoreAttributeKey(key);\n\n\t\t\t\t\tbatch.setAttribute(selectionParent, storeKey, value);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError8 = true;\n\t\t\t\t_iteratorError8 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion8 && _iterator8.return) {\n\t\t\t\t\t\t_iterator8.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError8) {\n\t\t\t\t\t\tthrow _iteratorError8;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Checks model text nodes that are closest to the selection's first position and returns attributes of first\n   * found element. If there are no text nodes in selection's first position parent, it returns selection\n   * attributes stored in that parent.\n   *\n   * @private\n   * @returns {Iterable.<*>} Collection of attributes.\n   */\n\n\t}, {\n\t\tkey: '_getSurroundingAttributes',\n\t\tvalue: function _getSurroundingAttributes() {\n\t\t\tvar position = this.getFirstPosition();\n\t\t\tvar schema = this._document.schema;\n\n\t\t\tvar attrs = null;\n\n\t\t\tif (!this.isCollapsed) {\n\t\t\t\t// 1. If selection is a range...\n\t\t\t\tvar range = this.getFirstRange();\n\n\t\t\t\t// ...look for a first character node in that range and take attributes from it.\n\t\t\t\tvar _iteratorNormalCompletion9 = true;\n\t\t\t\tvar _didIteratorError9 = false;\n\t\t\t\tvar _iteratorError9 = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator9 = range[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n\t\t\t\t\t\tvar value = _step9.value;\n\n\t\t\t\t\t\t// If the item is an object, we don't want to get attributes from its children.\n\t\t\t\t\t\tif (value.item.is('element') && schema.objects.has(value.item.name)) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// This is not an optimal solution because of https://github.com/ckeditor/ckeditor5-engine/issues/454.\n\t\t\t\t\t\t// It can be done better by using `break;` instead of checking `attrs === null`.\n\t\t\t\t\t\tif (value.type == 'text' && attrs === null) {\n\t\t\t\t\t\t\tattrs = value.item.getAttributes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError9 = true;\n\t\t\t\t\t_iteratorError9 = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion9 && _iterator9.return) {\n\t\t\t\t\t\t\t_iterator9.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError9) {\n\t\t\t\t\t\t\tthrow _iteratorError9;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// 2. If the selection is a caret or the range does not contain a character node...\n\n\t\t\t\tvar nodeBefore = position.textNode ? position.textNode : position.nodeBefore;\n\t\t\t\tvar nodeAfter = position.textNode ? position.textNode : position.nodeAfter;\n\n\t\t\t\t// ...look at the node before caret and take attributes from it if it is a character node.\n\t\t\t\tattrs = getAttrsIfCharacter(nodeBefore);\n\n\t\t\t\t// 3. If not, look at the node after caret...\n\t\t\t\tif (!attrs) {\n\t\t\t\t\tattrs = getAttrsIfCharacter(nodeAfter);\n\t\t\t\t}\n\n\t\t\t\t// 4. If not, try to find the first character on the left, that is in the same node.\n\t\t\t\tif (!attrs) {\n\t\t\t\t\tvar node = nodeBefore;\n\n\t\t\t\t\twhile (node && !attrs) {\n\t\t\t\t\t\tnode = node.previousSibling;\n\t\t\t\t\t\tattrs = getAttrsIfCharacter(node);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// 5. If not found, try to find the first character on the right, that is in the same node.\n\t\t\t\tif (!attrs) {\n\t\t\t\t\tvar _node = nodeAfter;\n\n\t\t\t\t\twhile (_node && !attrs) {\n\t\t\t\t\t\t_node = _node.nextSibling;\n\t\t\t\t\t\tattrs = getAttrsIfCharacter(_node);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// 6. If not found, selection should retrieve attributes from parent.\n\t\t\t\tif (!attrs) {\n\t\t\t\t\tattrs = this._getStoredAttributes();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn attrs;\n\t\t}\n\n\t\t/**\n   * Fixes a selection range after it ends up in graveyard root.\n   *\n   * @private\n   * @param {module:engine/model/liverange~LiveRange} liveRange The range from selection, that ended up in the graveyard root.\n   * @param {module:engine/model/range~Range} removedRange Range which removing had caused moving `liveRange` to the graveyard root.\n   */\n\n\t}, {\n\t\tkey: '_fixGraveyardSelection',\n\t\tvalue: function _fixGraveyardSelection(liveRange, removedRange) {\n\t\t\t// The start of the removed range is the closest position to the `liveRange` - the original selection range.\n\t\t\t// This is a good candidate for a fixed selection range.\n\t\t\tvar positionCandidate = _position2.default.createFromPosition(removedRange.start);\n\n\t\t\t// Find a range that is a correct selection range and is closest to the start of removed range.\n\t\t\tvar selectionRange = this._document.getNearestSelectionRange(positionCandidate);\n\n\t\t\t// Remove the old selection range before preparing and adding new selection range. This order is important,\n\t\t\t// because new range, in some cases, may intersect with old range (it depends on `getNearestSelectionRange()` result).\n\t\t\tvar index = this._ranges.indexOf(liveRange);\n\t\t\tthis._ranges.splice(index, 1);\n\t\t\tliveRange.detach();\n\n\t\t\t// If nearest valid selection range has been found - add it in the place of old range.\n\t\t\tif (selectionRange) {\n\t\t\t\t// Check the range, convert it to live range, bind events, etc.\n\t\t\t\tvar newRange = this._prepareRange(selectionRange);\n\n\t\t\t\t// Add new range in the place of old range.\n\t\t\t\tthis._ranges.splice(index, 0, newRange);\n\t\t\t}\n\t\t\t// If nearest valid selection range cannot be found - just removing the old range is fine.\n\n\t\t\t// Fire an event informing about selection change.\n\t\t\tthis.fire('change:range', { directChange: false });\n\t\t}\n\t}, {\n\t\tkey: 'isCollapsed',\n\t\tget: function get() {\n\t\t\tvar length = this._ranges.length;\n\n\t\t\treturn length === 0 ? this._document._getDefaultRange().isCollapsed : _get(DocumentSelection.prototype.__proto__ || Object.getPrototypeOf(DocumentSelection.prototype), 'isCollapsed', this);\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'anchor',\n\t\tget: function get() {\n\t\t\treturn _get(DocumentSelection.prototype.__proto__ || Object.getPrototypeOf(DocumentSelection.prototype), 'anchor', this) || this._document._getDefaultRange().start;\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'focus',\n\t\tget: function get() {\n\t\t\treturn _get(DocumentSelection.prototype.__proto__ || Object.getPrototypeOf(DocumentSelection.prototype), 'focus', this) || this._document._getDefaultRange().end;\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'rangeCount',\n\t\tget: function get() {\n\t\t\treturn this._ranges.length ? this._ranges.length : 1;\n\t\t}\n\t}], [{\n\t\tkey: 'createFromSelection',\n\t\tvalue: function createFromSelection() {\n\t\t\t/**\n    * `DocumentSelection#createFromSelection()` is not available. There can be only one\n    * `DocumentSelection` per document instance, so creating new `DocumentSelection`s this way\n    * would be unsafe.\n    *\n    * @error documentselection-cannot-create\n    */\n\t\t\tthrow new _ckeditorerror2.default('documentselection-cannot-create: Cannot create new DocumentSelection instance.');\n\t\t}\n\t}, {\n\t\tkey: '_getStoreAttributeKey',\n\t\tvalue: function _getStoreAttributeKey(key) {\n\t\t\treturn storePrefix + key;\n\t\t}\n\t}]);\n\n\treturn DocumentSelection;\n}(_selection2.default);\n\n/**\n * @event change:attribute\n */\n\n// Helper function for {@link module:engine/model/documentselection~DocumentSelection#_updateAttributes}.\n//\n// It takes model item, checks whether it is a text node (or text proxy) and, if so, returns it's attributes. If not, returns `null`.\n//\n// @param {module:engine/model/item~Item|null}  node\n// @returns {Boolean}\n\n\nexports.default = DocumentSelection;\nfunction getAttrsIfCharacter(node) {\n\tif (node instanceof _textproxy2.default || node instanceof _text2.default) {\n\t\treturn node.getAttributes();\n\t}\n\n\treturn null;\n}\n\n// Removes selection attributes from element which is not empty anymore.\nfunction clearAttributesStoredInElement(changes, batch) {\n\t// Batch may not be passed to the document#change event in some tests.\n\t// See https://github.com/ckeditor/ckeditor5-engine/issues/1001#issuecomment-314202352\n\t// Ignore also transparent batches because they are... transparent.\n\tif (!batch || batch.type == 'transparent') {\n\t\treturn;\n\t}\n\n\tvar changeParent = changes.range && changes.range.start.parent;\n\n\t// `changes.range` is not set in case of rename, root and marker operations.\n\t// None of them may lead to the element becoming non-empty.\n\tif (!changeParent || changeParent.isEmpty) {\n\t\treturn;\n\t}\n\n\tvar storedAttributes = Array.from(changeParent.getAttributeKeys()).filter(function (key) {\n\t\treturn key.startsWith(storePrefix);\n\t});\n\n\tvar _iteratorNormalCompletion10 = true;\n\tvar _didIteratorError10 = false;\n\tvar _iteratorError10 = undefined;\n\n\ttry {\n\t\tfor (var _iterator10 = storedAttributes[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n\t\t\tvar key = _step10.value;\n\n\t\t\tbatch.removeAttribute(changeParent, key);\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError10 = true;\n\t\t_iteratorError10 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion10 && _iterator10.return) {\n\t\t\t\t_iterator10.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError10) {\n\t\t\t\tthrow _iteratorError10;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/documentselection.js\n// module id = 316\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */\n\n/**\n * @module engine/model/history\n */\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * `History` keeps the track of all the deltas applied to the {@link module:engine/model/document~Document document}.\n */\nvar History = function () {\n\t/**\n  * Creates an empty History instance.\n  */\n\tfunction History() {\n\t\t_classCallCheck(this, History);\n\n\t\t/**\n   * Deltas added to the history.\n   *\n   * @protected\n   * @member {Array.<module:engine/model/delta/delta~Delta>} module:engine/model/history~History#_deltas\n   */\n\t\tthis._deltas = [];\n\n\t\t/**\n   * Helper structure that maps added delta's base version to the index in {@link module:engine/model/history~History#_deltas}\n   * at which the delta was added.\n   *\n   * @protected\n   * @member {Map} module:engine/model/history~History#_historyPoints\n   */\n\t\tthis._historyPoints = new Map();\n\n\t\t/**\n   * Holds an information which {@link module:engine/model/delta/delta~Delta delta} undoes which\n   * {@link module:engine/model/delta/delta~Delta delta}.\n   *\n   * Keys of the map are \"undoing deltas\", that is deltas that undone some other deltas. For each key, the\n   * value is a delta that has been undone by the \"undoing delta\".\n   *\n   * @private\n   * @member {Map} module:engine/model/history~History#_undoPairs\n   */\n\t\tthis._undoPairs = new Map();\n\n\t\t/**\n   * Holds all undone deltas.\n   *\n   * @private\n   * @member {Set.<module:engine/model/delta/delta~Delta>} module:engine/model/history~History#_undoneDeltas\n   */\n\t\tthis._undoneDeltas = new Set();\n\t}\n\n\t/**\n  * Adds delta to the history.\n  *\n  * @param {module:engine/model/delta/delta~Delta} delta Delta to add.\n  */\n\n\n\t_createClass(History, [{\n\t\tkey: 'addDelta',\n\t\tvalue: function addDelta(delta) {\n\t\t\tif (delta.operations.length > 0 && !this._historyPoints.has(delta.baseVersion)) {\n\t\t\t\tvar index = this._deltas.length;\n\n\t\t\t\tthis._deltas[index] = delta;\n\t\t\t\tthis._historyPoints.set(delta.baseVersion, index);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Returns deltas added to the history.\n   *\n   * @param {Number} [from=0] Base version from which deltas should be returned (inclusive). Defaults to `0`, which means\n   * that deltas from the first one will be returned.\n   * @param {Number} [to=Number.POSITIVE_INFINITY] Base version up to which deltas should be returned (exclusive).\n   * Defaults to `Number.POSITIVE_INFINITY` which means that deltas up to the last one will be returned.\n   * @returns {Iterator.<module:engine/model/delta/delta~Delta>} Deltas added to the history from given base versions range.\n   */\n\n\t}, {\n\t\tkey: 'getDeltas',\n\t\tvalue: regeneratorRuntime.mark(function getDeltas() {\n\t\t\tvar from = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\t\t\tvar to = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.POSITIVE_INFINITY;\n\t\t\tvar fromIndex, delta;\n\t\t\treturn regeneratorRuntime.wrap(function getDeltas$(_context) {\n\t\t\t\twhile (1) {\n\t\t\t\t\tswitch (_context.prev = _context.next) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\tif (!(this._deltas.length === 0)) {\n\t\t\t\t\t\t\t\t_context.next = 2;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn _context.abrupt('return');\n\n\t\t\t\t\t\tcase 2:\n\n\t\t\t\t\t\t\t// Will throw if base version is incorrect.\n\t\t\t\t\t\t\tfromIndex = this._getIndex(from);\n\n\t\t\t\t\t\t\t// Base version is too low or too high and is not found in history.\n\n\t\t\t\t\t\t\tif (!(fromIndex == -1)) {\n\t\t\t\t\t\t\t\t_context.next = 5;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn _context.abrupt('return');\n\n\t\t\t\t\t\tcase 5:\n\t\t\t\t\t\t\tif (!(fromIndex < this._deltas.length)) {\n\t\t\t\t\t\t\t\t_context.next = 13;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tdelta = this._deltas[fromIndex++];\n\n\t\t\t\t\t\t\tif (!(delta.baseVersion >= to)) {\n\t\t\t\t\t\t\t\t_context.next = 9;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn _context.abrupt('break', 13);\n\n\t\t\t\t\t\tcase 9:\n\t\t\t\t\t\t\t_context.next = 11;\n\t\t\t\t\t\t\treturn delta;\n\n\t\t\t\t\t\tcase 11:\n\t\t\t\t\t\t\t_context.next = 5;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 13:\n\t\t\t\t\t\tcase 'end':\n\t\t\t\t\t\t\treturn _context.stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, getDeltas, this);\n\t\t})\n\n\t\t/**\n   * Returns delta from history that bases on given `baseVersion`.\n   *\n   * @param {Number} baseVersion Base version of the delta to get.\n   * @returns {module:engine/model/delta/delta~Delta|null} Delta with given base version or `null` if there is no such delta in history.\n   */\n\n\t}, {\n\t\tkey: 'getDelta',\n\t\tvalue: function getDelta(baseVersion) {\n\t\t\tvar index = this._historyPoints.get(baseVersion);\n\n\t\t\treturn index === undefined ? null : this._deltas[index];\n\t\t}\n\n\t\t/**\n   * Marks in history that one delta is a delta that is undoing the other delta. By marking deltas this way,\n   * history is keeping more context information about deltas which helps in operational transformation.\n   *\n   * @param {module:engine/model/delta/delta~Delta} undoneDelta Delta which is undone by `undoingDelta`.\n   * @param {module:engine/model/delta/delta~Delta} undoingDelta Delta which undoes `undoneDelta`.\n   */\n\n\t}, {\n\t\tkey: 'setDeltaAsUndone',\n\t\tvalue: function setDeltaAsUndone(undoneDelta, undoingDelta) {\n\t\t\tthis._undoPairs.set(undoingDelta, undoneDelta);\n\t\t\tthis._undoneDeltas.add(undoneDelta);\n\t\t}\n\n\t\t/**\n   * Checks whether given `delta` is undoing by any other delta.\n   *\n   * @param {module:engine/model/delta/delta~Delta} delta Delta to check.\n   * @returns {Boolean} `true` if given `delta` is undoing any other delta, `false` otherwise.\n   */\n\n\t}, {\n\t\tkey: 'isUndoingDelta',\n\t\tvalue: function isUndoingDelta(delta) {\n\t\t\treturn this._undoPairs.has(delta);\n\t\t}\n\n\t\t/**\n   * Checks whether given `delta` has been undone by any other delta.\n   *\n   * @param {module:engine/model/delta/delta~Delta} delta Delta to check.\n   * @returns {Boolean} `true` if given `delta` has been undone any other delta, `false` otherwise.\n   */\n\n\t}, {\n\t\tkey: 'isUndoneDelta',\n\t\tvalue: function isUndoneDelta(delta) {\n\t\t\treturn this._undoneDeltas.has(delta);\n\t\t}\n\n\t\t/**\n   * For given `undoingDelta`, returns the delta which has been undone by it.\n   *\n   * @param {module:engine/model/delta/delta~Delta} undoingDelta\n   * @returns {module:engine/model/delta/delta~Delta|undefined} Delta that has been undone by given `undoingDelta` or `undefined`\n   * if given `undoingDelta` is not undoing any other delta.\n   */\n\n\t}, {\n\t\tkey: 'getUndoneDelta',\n\t\tvalue: function getUndoneDelta(undoingDelta) {\n\t\t\treturn this._undoPairs.get(undoingDelta);\n\t\t}\n\n\t\t/**\n   * Gets an index in {@link module:engine/model/history~History#_deltas} where delta with given `baseVersion` is added.\n   *\n   * @private\n   * @param {Number} baseVersion Base version of delta.\n   */\n\n\t}, {\n\t\tkey: '_getIndex',\n\t\tvalue: function _getIndex(baseVersion) {\n\t\t\tvar index = this._historyPoints.get(baseVersion);\n\n\t\t\t// Base version not found - it is either too high or too low, or is in the middle of delta.\n\t\t\tif (index === undefined) {\n\t\t\t\tvar lastDelta = this._deltas[this._deltas.length - 1];\n\t\t\t\tvar nextBaseVersion = lastDelta.baseVersion + lastDelta.operations.length;\n\n\t\t\t\tif (baseVersion < 0 || baseVersion >= nextBaseVersion) {\n\t\t\t\t\t// Base version is too high or too low - it's acceptable situation.\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\n\t\t\t\t/**\n     * Given base version points to the middle of a delta.\n     *\n     * @error history-wrong-version\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('model-history-wrong-version: Given base version points to the middle of a delta.');\n\t\t\t}\n\n\t\t\treturn index;\n\t\t}\n\t}]);\n\n\treturn History;\n}();\n\nexports.default = History;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/history.js\n// module id = 317\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */\n\n/**\n * @module engine/model/markercollection\n */\n\nvar _liverange = require('./liverange');\n\nvar _liverange2 = _interopRequireDefault(_liverange);\n\nvar _position = require('./position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _range = require('./range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _emittermixin = require('@ckeditor/ckeditor5-utils/src/emittermixin');\n\nvar _emittermixin2 = _interopRequireDefault(_emittermixin);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nvar _mix = require('@ckeditor/ckeditor5-utils/src/mix');\n\nvar _mix2 = _interopRequireDefault(_mix);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Creates, stores and manages {@link ~Marker markers}.\n *\n * Markers are created by {@link ~MarkerCollection#set setting} a name for a {@link module:engine/model/liverange~LiveRange live range}\n * in `MarkerCollection`. Name is used to group and identify markers. Names have to be unique, but markers can be grouped by\n * using common prefixes, separated with `:`, for example: `user:john` or `search:3`.\n *\n * Since markers are based on {@link module:engine/model/liverange~LiveRange live ranges}, for efficiency reasons, it's\n * best to create and keep at least markers as possible.\n */\nvar MarkerCollection = function () {\n\t/**\n  * Creates a markers collection.\n  */\n\tfunction MarkerCollection() {\n\t\t_classCallCheck(this, MarkerCollection);\n\n\t\t/**\n   * Stores {@link ~Marker markers} added to the collection.\n   *\n   * @private\n   * @member {Map} #_markers\n   */\n\t\tthis._markers = new Map();\n\t}\n\n\t/**\n  * Returns an iterator that iterates over all {@link ~Marker markers} added to the collection.\n  *\n  * @returns {Iterator}\n  */\n\n\n\t_createClass(MarkerCollection, [{\n\t\tkey: Symbol.iterator,\n\t\tvalue: function value() {\n\t\t\treturn this._markers.values();\n\t\t}\n\n\t\t/**\n   * Checks if marker with given `markerName` is in the collection.\n   *\n   * @param {String} markerName Marker name.\n   * @returns {Boolean} `true` if marker with given `markerName` is in the collection, `false` otherwise.\n   */\n\n\t}, {\n\t\tkey: 'has',\n\t\tvalue: function has(markerName) {\n\t\t\treturn this._markers.has(markerName);\n\t\t}\n\n\t\t/**\n   * Returns {@link ~Marker marker} with given `markerName`.\n   *\n   * @param {String} markerName Name of marker to get.\n   * @returns {module:engine/model/markercollection~Marker|null} Marker with given name or `null` if such marker was\n   * not added to the collection.\n   */\n\n\t}, {\n\t\tkey: 'get',\n\t\tvalue: function get(markerName) {\n\t\t\treturn this._markers.get(markerName) || null;\n\t\t}\n\n\t\t/**\n   * Creates and adds a {@link ~Marker marker} to the `MarkerCollection` with given name on given\n   * {@link module:engine/model/range~Range range}.\n   *\n   * If `MarkerCollection` already had a marker with given name (or {@link ~Marker marker} was passed) and the range to\n   * set is different, the marker in collection is removed and then new marker is added. If the range was same, nothing\n   * happens and `false` is returned.\n   *\n   * @fires module:engine/model/markercollection~MarkerCollection#event:add\n   * @fires module:engine/model/markercollection~MarkerCollection#event:remove\n   * @param {String|module:engine/model/markercollection~Marker} markerOrName Name of marker to add or Marker instance to update.\n   * @param {module:engine/model/range~Range} range Marker range.\n   * @returns {module:engine/model/markercollection~Marker} `Marker` instance added to the collection.\n   */\n\n\t}, {\n\t\tkey: 'set',\n\t\tvalue: function set(markerOrName, range) {\n\t\t\tvar markerName = markerOrName instanceof Marker ? markerOrName.name : markerOrName;\n\t\t\tvar oldMarker = this._markers.get(markerName);\n\n\t\t\tif (oldMarker) {\n\t\t\t\tvar oldRange = oldMarker.getRange();\n\n\t\t\t\tif (oldRange.isEqual(range)) {\n\t\t\t\t\treturn oldMarker;\n\t\t\t\t}\n\n\t\t\t\tthis.remove(markerName);\n\t\t\t}\n\n\t\t\tvar liveRange = _liverange2.default.createFromRange(range);\n\t\t\tvar marker = new Marker(markerName, liveRange);\n\n\t\t\tthis._markers.set(markerName, marker);\n\t\t\tthis.fire('add:' + markerName, marker);\n\n\t\t\treturn marker;\n\t\t}\n\n\t\t/**\n   * Removes given {@link ~Marker marker} or a marker with given name from the `MarkerCollection`.\n   *\n   * @param {String} markerOrName Marker or name of a marker to remove.\n   * @returns {Boolean} `true` if marker was found and removed, `false` otherwise.\n   */\n\n\t}, {\n\t\tkey: 'remove',\n\t\tvalue: function remove(markerOrName) {\n\t\t\tvar markerName = markerOrName instanceof Marker ? markerOrName.name : markerOrName;\n\t\t\tvar oldMarker = this._markers.get(markerName);\n\n\t\t\tif (oldMarker) {\n\t\t\t\tthis._markers.delete(markerName);\n\t\t\t\tthis.fire('remove:' + markerName, oldMarker);\n\n\t\t\t\tthis._destroyMarker(oldMarker);\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n   * Returns iterator that iterates over all markers, which ranges contain given {@link module:engine/model/position~Position position}.\n   *\n   * @param {module:engine/model/position~Position} position\n   * @returns {Iterator.<module:engine/model/markercollection~Marker>}\n   */\n\n\t}, {\n\t\tkey: 'getMarkersAtPosition',\n\t\tvalue: regeneratorRuntime.mark(function getMarkersAtPosition(position) {\n\t\t\tvar _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, marker;\n\n\t\t\treturn regeneratorRuntime.wrap(function getMarkersAtPosition$(_context) {\n\t\t\t\twhile (1) {\n\t\t\t\t\tswitch (_context.prev = _context.next) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t_iteratorNormalCompletion = true;\n\t\t\t\t\t\t\t_didIteratorError = false;\n\t\t\t\t\t\t\t_iteratorError = undefined;\n\t\t\t\t\t\t\t_context.prev = 3;\n\t\t\t\t\t\t\t_iterator = this[Symbol.iterator]();\n\n\t\t\t\t\t\tcase 5:\n\t\t\t\t\t\t\tif (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n\t\t\t\t\t\t\t\t_context.next = 13;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmarker = _step.value;\n\n\t\t\t\t\t\t\tif (!marker.getRange().containsPosition(position)) {\n\t\t\t\t\t\t\t\t_context.next = 10;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_context.next = 10;\n\t\t\t\t\t\t\treturn marker;\n\n\t\t\t\t\t\tcase 10:\n\t\t\t\t\t\t\t_iteratorNormalCompletion = true;\n\t\t\t\t\t\t\t_context.next = 5;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 13:\n\t\t\t\t\t\t\t_context.next = 19;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 15:\n\t\t\t\t\t\t\t_context.prev = 15;\n\t\t\t\t\t\t\t_context.t0 = _context['catch'](3);\n\t\t\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t\t\t_iteratorError = _context.t0;\n\n\t\t\t\t\t\tcase 19:\n\t\t\t\t\t\t\t_context.prev = 19;\n\t\t\t\t\t\t\t_context.prev = 20;\n\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase 22:\n\t\t\t\t\t\t\t_context.prev = 22;\n\n\t\t\t\t\t\t\tif (!_didIteratorError) {\n\t\t\t\t\t\t\t\t_context.next = 25;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthrow _iteratorError;\n\n\t\t\t\t\t\tcase 25:\n\t\t\t\t\t\t\treturn _context.finish(22);\n\n\t\t\t\t\t\tcase 26:\n\t\t\t\t\t\t\treturn _context.finish(19);\n\n\t\t\t\t\t\tcase 27:\n\t\t\t\t\t\tcase 'end':\n\t\t\t\t\t\t\treturn _context.stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, getMarkersAtPosition, this, [[3, 15, 19, 27], [20,, 22, 26]]);\n\t\t})\n\n\t\t/**\n   * Destroys markers collection.\n   */\n\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {\n\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\tvar _didIteratorError2 = false;\n\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator2 = this._markers.values()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\tvar marker = _step2.value;\n\n\t\t\t\t\tthis._destroyMarker(marker);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t_iteratorError2 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._markers = null;\n\n\t\t\tthis.stopListening();\n\t\t}\n\n\t\t/**\n   * Iterates over all markers that starts with given `prefix`.\n   *\n   *\t\tconst markerFooA = markersCollection.set( 'foo:a', rangeFooA );\n   *\t\tconst markerFooB = markersCollection.set( 'foo:b', rangeFooB );\n   *\t\tconst markerBarA = markersCollection.set( 'bar:a', rangeBarA );\n   *\t\tconst markerFooBarA = markersCollection.set( 'foobar:a', rangeFooBarA );\n   *\t\tArray.from( markersCollection.getMarkersGroup( 'foo' ) ); // [ markerFooA, markerFooB ]\n   *\t\tArray.from( markersCollection.getMarkersGroup( 'a' ) ); // []\n   *\n   * @param prefix\n   * @returns {Iterator.<module:engine/model/markercollection~Marker>}\n   */\n\n\t}, {\n\t\tkey: 'getMarkersGroup',\n\t\tvalue: regeneratorRuntime.mark(function getMarkersGroup(prefix) {\n\t\t\tvar _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, marker;\n\n\t\t\treturn regeneratorRuntime.wrap(function getMarkersGroup$(_context2) {\n\t\t\t\twhile (1) {\n\t\t\t\t\tswitch (_context2.prev = _context2.next) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t_iteratorNormalCompletion3 = true;\n\t\t\t\t\t\t\t_didIteratorError3 = false;\n\t\t\t\t\t\t\t_iteratorError3 = undefined;\n\t\t\t\t\t\t\t_context2.prev = 3;\n\t\t\t\t\t\t\t_iterator3 = this._markers.values()[Symbol.iterator]();\n\n\t\t\t\t\t\tcase 5:\n\t\t\t\t\t\t\tif (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {\n\t\t\t\t\t\t\t\t_context2.next = 13;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmarker = _step3.value;\n\n\t\t\t\t\t\t\tif (!marker.name.startsWith(prefix + ':')) {\n\t\t\t\t\t\t\t\t_context2.next = 10;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_context2.next = 10;\n\t\t\t\t\t\t\treturn marker;\n\n\t\t\t\t\t\tcase 10:\n\t\t\t\t\t\t\t_iteratorNormalCompletion3 = true;\n\t\t\t\t\t\t\t_context2.next = 5;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 13:\n\t\t\t\t\t\t\t_context2.next = 19;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 15:\n\t\t\t\t\t\t\t_context2.prev = 15;\n\t\t\t\t\t\t\t_context2.t0 = _context2['catch'](3);\n\t\t\t\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t\t\t\t_iteratorError3 = _context2.t0;\n\n\t\t\t\t\t\tcase 19:\n\t\t\t\t\t\t\t_context2.prev = 19;\n\t\t\t\t\t\t\t_context2.prev = 20;\n\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase 22:\n\t\t\t\t\t\t\t_context2.prev = 22;\n\n\t\t\t\t\t\t\tif (!_didIteratorError3) {\n\t\t\t\t\t\t\t\t_context2.next = 25;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthrow _iteratorError3;\n\n\t\t\t\t\t\tcase 25:\n\t\t\t\t\t\t\treturn _context2.finish(22);\n\n\t\t\t\t\t\tcase 26:\n\t\t\t\t\t\t\treturn _context2.finish(19);\n\n\t\t\t\t\t\tcase 27:\n\t\t\t\t\t\tcase 'end':\n\t\t\t\t\t\t\treturn _context2.stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, getMarkersGroup, this, [[3, 15, 19, 27], [20,, 22, 26]]);\n\t\t})\n\n\t\t/**\n   * Destroys marker.\n   *\n   * @private\n   * @param {module:engine/model/markercollection~Marker} marker Marker to destroy.\n   */\n\n\t}, {\n\t\tkey: '_destroyMarker',\n\t\tvalue: function _destroyMarker(marker) {\n\t\t\tmarker.stopListening();\n\t\t\tmarker._liveRange.detach();\n\t\t\tmarker._liveRange = null;\n\t\t}\n\n\t\t/**\n   * Fired whenever marker is added to `MarkerCollection`.\n   *\n   * @event add\n   * @param {module:engine/model/markercollection~Marker} The added marker.\n   */\n\n\t\t/**\n   * Fired whenever marker is removed from `MarkerCollection`.\n   *\n   * @event remove\n   * @param {module:engine/model/markercollection~Marker} marker The removed marker.\n   */\n\n\t}]);\n\n\treturn MarkerCollection;\n}();\n\nexports.default = MarkerCollection;\n\n\n(0, _mix2.default)(MarkerCollection, _emittermixin2.default);\n\n/**\n * `Marker` is a continuous parts of model (like a range), is named and represent some kind of information about marked\n * part of model document. In contrary to {@link module:engine/model/node~Node nodes}, which are building blocks of\n * model document tree, markers are not stored directly in document tree. Still, they are document data, by giving\n * additional meaning to the part of a model document between marker start and marker end.\n *\n * In this sense, markers are similar to adding and converting attributes on nodes. The difference is that attribute is\n * connected with a given node (e.g. a character is bold no matter if it gets moved or content around it changes).\n * Markers on the other hand are continuous ranges and are characterised by their start and end position. This means that\n * any character in the marker is marked by the marker. For example, if a character is moved outside of marker it stops being\n * \"special\" and the marker is shrunk. Similarly, when a character is moved into the marker from other place in document\n * model, it starts being \"special\" and the marker is enlarged.\n *\n * Since markers are based on {@link module:engine/model/liverange~LiveRange live ranges}, for efficiency reasons, it's\n * best to create and keep at least markers as possible.\n *\n * Markers can be converted to view by adding appropriate converters for\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:addMarker} and\n * {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:removeMarker}\n * events, or by building converters for {@link module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher}\n * using {@link module:engine/conversion/buildmodelconverter~buildModelConverter model converter builder}.\n *\n * Another upside of markers is that finding marked part of document is fast and easy. Using attributes to mark some nodes\n * and then trying to find that part of document would require traversing whole document tree. Marker gives instant access\n * to the range which it is marking at the moment.\n *\n * `Marker` instances are created and destroyed only by {@link ~MarkerCollection MarkerCollection}.\n */\n\nvar Marker = function () {\n\t/**\n  * Creates a marker instance.\n  *\n  * @param {String} name Marker name.\n  * @param {module:engine/model/liverange~LiveRange} liveRange Range marked by the marker.\n  */\n\tfunction Marker(name, liveRange) {\n\t\t_classCallCheck(this, Marker);\n\n\t\t/**\n   * Marker name.\n   *\n   * @readonly\n   * @member {String} #name\n   */\n\t\tthis.name = name;\n\n\t\t/**\n   * Range marked by the marker.\n   *\n   * @protected\n   * @member {module:engine/model/liverange~LiveRange} #_liveRange\n   */\n\t\tthis._liveRange = liveRange;\n\n\t\tthis._liveRange.delegate('change').to(this);\n\t}\n\n\t/**\n  * Returns current marker start position.\n  *\n  * @returns {module:engine/model/position~Position}\n  */\n\n\n\t_createClass(Marker, [{\n\t\tkey: 'getStart',\n\t\tvalue: function getStart() {\n\t\t\tif (!this._liveRange) {\n\t\t\t\t/**\n     * Operating on destroyed marker instance.\n     *\n     * @error marker-destroyed\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('marker-destroyed: Operating on destroyed marker instance.');\n\t\t\t}\n\n\t\t\treturn _position2.default.createFromPosition(this._liveRange.start);\n\t\t}\n\n\t\t/**\n   * Returns current marker end position.\n   *\n   * @returns {module:engine/model/position~Position}\n   */\n\n\t}, {\n\t\tkey: 'getEnd',\n\t\tvalue: function getEnd() {\n\t\t\tif (!this._liveRange) {\n\t\t\t\t/**\n     * Operating on destroyed marker instance.\n     *\n     * @error marker-destroyed\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('marker-destroyed: Operating on destroyed marker instance.');\n\t\t\t}\n\n\t\t\treturn _position2.default.createFromPosition(this._liveRange.end);\n\t\t}\n\n\t\t/**\n   * Returns a range that represents current state of marker.\n   *\n   * Keep in mind that returned value is a {@link module:engine/model/range~Range Range}, not a\n   * {@link module:engine/model/liverange~LiveRange LiveRange}. This means that it is up-to-date and relevant only\n   * until next model document change. Do not store values returned by this method. Instead, store {@link ~Marker#name}\n   * and get `Marker` instance from {@link module:engine/model/markercollection~MarkerCollection MarkerCollection} every\n   * time there is a need to read marker properties. This will guarantee that the marker has not been removed and\n   * that it's data is up-to-date.\n   *\n   * @returns {module:engine/model/range~Range}\n   */\n\n\t}, {\n\t\tkey: 'getRange',\n\t\tvalue: function getRange() {\n\t\t\tif (!this._liveRange) {\n\t\t\t\t/**\n     * Operating on destroyed marker instance.\n     *\n     * @error marker-destroyed\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('marker-destroyed: Operating on destroyed marker instance.');\n\t\t\t}\n\n\t\t\treturn _range2.default.createFromRange(this._liveRange);\n\t\t}\n\n\t\t/**\n   * Fired whenever {@link ~Marker#_liveRange marker range} is changed due to changes on {@link module:engine/model/document~Document}.\n   * This is actually a delegated {@link module:engine/model/liverange~LiveRange#event:change LiveRange change event}.\n   *\n   * When marker is removed from {@link module:engine/model/markercollection~MarkerCollection MarkerCollection},\n   * all event listeners listening to it should be removed. It is best to do it on\n   * {@link module:engine/model/markercollection~MarkerCollection#event:remove MarkerCollection remove event}.\n   *\n   * @see module:engine/model/liverange~LiveRange#event:change\n   * @event change\n   * @param {module:engine/model/range~Range} oldRange Range with start and end position equal to start and end position of\n   * this marker range before it got changed.\n   */\n\n\t}]);\n\n\treturn Marker;\n}();\n\n(0, _mix2.default)(Marker, _emittermixin2.default);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/markercollection.js\n// module id = 318\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */\n\n/**\n * @module engine/model/operation/operationfactory\n */\n\nvar _attributeoperation = require('../operation/attributeoperation');\n\nvar _attributeoperation2 = _interopRequireDefault(_attributeoperation);\n\nvar _insertoperation = require('../operation/insertoperation');\n\nvar _insertoperation2 = _interopRequireDefault(_insertoperation);\n\nvar _markeroperation = require('../operation/markeroperation');\n\nvar _markeroperation2 = _interopRequireDefault(_markeroperation);\n\nvar _moveoperation = require('../operation/moveoperation');\n\nvar _moveoperation2 = _interopRequireDefault(_moveoperation);\n\nvar _nooperation = require('../operation/nooperation');\n\nvar _nooperation2 = _interopRequireDefault(_nooperation);\n\nvar _operation = require('../operation/operation');\n\nvar _operation2 = _interopRequireDefault(_operation);\n\nvar _reinsertoperation = require('../operation/reinsertoperation');\n\nvar _reinsertoperation2 = _interopRequireDefault(_reinsertoperation);\n\nvar _removeoperation = require('../operation/removeoperation');\n\nvar _removeoperation2 = _interopRequireDefault(_removeoperation);\n\nvar _renameoperation = require('../operation/renameoperation');\n\nvar _renameoperation2 = _interopRequireDefault(_renameoperation);\n\nvar _rootattributeoperation = require('../operation/rootattributeoperation');\n\nvar _rootattributeoperation2 = _interopRequireDefault(_rootattributeoperation);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar operations = {};\noperations[_attributeoperation2.default.className] = _attributeoperation2.default;\noperations[_insertoperation2.default.className] = _insertoperation2.default;\noperations[_markeroperation2.default.className] = _markeroperation2.default;\noperations[_moveoperation2.default.className] = _moveoperation2.default;\noperations[_nooperation2.default.className] = _nooperation2.default;\noperations[_operation2.default.className] = _operation2.default;\noperations[_reinsertoperation2.default.className] = _reinsertoperation2.default;\noperations[_removeoperation2.default.className] = _removeoperation2.default;\noperations[_renameoperation2.default.className] = _renameoperation2.default;\noperations[_rootattributeoperation2.default.className] = _rootattributeoperation2.default;\n\n/**\n * A factory class for creating operations.\n *\n * @abstract\n */\n\nvar OperationFactory = function () {\n\tfunction OperationFactory() {\n\t\t_classCallCheck(this, OperationFactory);\n\t}\n\n\t_createClass(OperationFactory, null, [{\n\t\tkey: 'fromJSON',\n\n\t\t/**\n   * Creates concrete `Operation` object from deserilized object, i.e. from parsed JSON string.\n   *\n   * @param {Object} json Deserialized JSON object.\n   * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n   * @returns {module:engine/model/operation/operation~Operation}\n   */\n\t\tvalue: function fromJSON(json, document) {\n\t\t\treturn operations[json.__className].fromJSON(json, document);\n\t\t}\n\t}]);\n\n\treturn OperationFactory;\n}();\n\nexports.default = OperationFactory;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/operation/operationfactory.js\n// module id = 319\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _insertoperation = require('./insertoperation');\n\nvar _insertoperation2 = _interopRequireDefault(_insertoperation);\n\nvar _attributeoperation = require('./attributeoperation');\n\nvar _attributeoperation2 = _interopRequireDefault(_attributeoperation);\n\nvar _rootattributeoperation = require('./rootattributeoperation');\n\nvar _rootattributeoperation2 = _interopRequireDefault(_rootattributeoperation);\n\nvar _renameoperation = require('./renameoperation');\n\nvar _renameoperation2 = _interopRequireDefault(_renameoperation);\n\nvar _markeroperation = require('./markeroperation');\n\nvar _markeroperation2 = _interopRequireDefault(_markeroperation);\n\nvar _moveoperation = require('./moveoperation');\n\nvar _moveoperation2 = _interopRequireDefault(_moveoperation);\n\nvar _removeoperation = require('./removeoperation');\n\nvar _removeoperation2 = _interopRequireDefault(_removeoperation);\n\nvar _reinsertoperation = require('./reinsertoperation');\n\nvar _reinsertoperation2 = _interopRequireDefault(_reinsertoperation);\n\nvar _nooperation = require('./nooperation');\n\nvar _nooperation2 = _interopRequireDefault(_nooperation);\n\nvar _range = require('../range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _comparearrays = require('@ckeditor/ckeditor5-utils/src/comparearrays');\n\nvar _comparearrays2 = _interopRequireDefault(_comparearrays);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /**\n                                                                                                                                                                                                     * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                     * For licensing, see LICENSE.md.\n                                                                                                                                                                                                     */\n\n/**\n * @module engine/model/operation/transform\n */\n\n/**\n * Transforms given {@link module:engine/model/operation/operation~Operation operation}\n * by another {@link module:engine/model/operation/operation~Operation operation}\n * and returns the result of that transformation as an array containing\n * one or more {@link module:engine/model/operation/operation~Operation operations}.\n *\n * Operations work on specified positions, passed to them when they are created.\n * Whenever {@link module:engine/model/document~Document document}\n * changes, we have to reflect those modifications by updating or \"transforming\" operations which are not yet applied.\n * When an operation is transformed, its parameters may change based on the operation by which it is transformed.\n * If the transform-by operation applied any modifications to the Tree Data Model which affect positions or nodes\n * connected with transformed operation, those changes will be reflected in the parameters of the returned operation(s).\n *\n * Whenever the {@link module:engine/model/document~Document document}\n * has different {@link module:engine/model/document~Document#version}\n * than the operation you want to {@link module:engine/model/document~Document#applyOperation apply}, you need to transform that\n * operation by all operations which were already applied to the {@link module:engine/model/document~Document document} and have greater\n * {@link module:engine/model/document~Document#version} than the operation being applied. Transform them in the same order as those\n * operations which were applied. This way all modifications done to the Tree Data Model will be reflected\n * in the operation parameters and the operation will \"operate\" on \"up-to-date\" version of the Tree Data Model.\n * This is mostly the case with Operational Transformations but it might be needed in particular features as well.\n *\n * In some cases, when given operation apply changes to the same nodes as this operation, two or more operations need\n * to be created as one would not be able to reflect the combination of these operations.\n * This is why an array is returned instead of a single object. All returned operations have to be applied\n * (or further transformed) to get an effect which was intended in pre-transformed operation.\n *\n * Sometimes two operations are in conflict. This happens when they modify the same node in a different way, i.e.\n * set different value for the same attribute or move the node into different positions. When this happens,\n * we need to decide which operation is more important. We can't assume that operation `a` or operation `b` is always\n * more important. In Operational Transformations algorithms we often need to get a result of transforming\n * `a` by `b` and also `b` by `a`. In both transformations the same operation has to be the important one. If we assume\n * that first or the second passed operation is always more important we won't be able to solve this case.\n *\n * @function module:engine/model/operation/transform~transform\n * @param {module:engine/model/operation/operation~Operation} a Operation that will be transformed.\n * @param {module:engine/model/operation/operation~Operation} b Operation to transform by.\n * @param {module:engine/model/delta/transform~transformationContext} [context] Transformation context.\n * @returns {Array.<module:engine/model/operation/operation~Operation>} Result of the transformation.\n */\n\nexports.default = transform;\n\n\nvar ot = {\n\tInsertOperation: {\n\t\t// Transforms InsertOperation `a` by InsertOperation `b`. Accepts a flag stating whether `a` is more important\n\t\t// than `b` when it comes to resolving conflicts. Returns results as an array of operations.\n\t\tInsertOperation: function InsertOperation(a, b, context) {\n\t\t\t// Transformed operations are always new instances, not references to the original operations.\n\t\t\tvar transformed = a.clone();\n\n\t\t\t// Check whether there is a forced order of nodes or use `context.isStrong` flag for conflict resolving.\n\t\t\tvar insertBefore = context.insertBefore === undefined ? !context.isStrong : context.insertBefore;\n\n\t\t\t// Transform insert position by the other operation position.\n\t\t\ttransformed.position = transformed.position._getTransformedByInsertion(b.position, b.nodes.maxOffset, insertBefore);\n\n\t\t\treturn [transformed];\n\t\t},\n\n\n\t\tAttributeOperation: doNotUpdate,\n\n\t\tRootAttributeOperation: doNotUpdate,\n\n\t\tRenameOperation: doNotUpdate,\n\n\t\tMarkerOperation: doNotUpdate,\n\n\t\t// Transforms InsertOperation `a` by MoveOperation `b`. Accepts a flag stating whether `a` is more important\n\t\t// than `b` when it comes to resolving conflicts. Returns results as an array of operations.\n\t\tMoveOperation: function MoveOperation(a, b, context) {\n\t\t\tvar transformed = a.clone();\n\n\t\t\t// Check whether there is a forced order of nodes or use `context.isStrong` flag for conflict resolving.\n\t\t\tvar insertBefore = context.insertBefore === undefined ? !context.isStrong : context.insertBefore;\n\n\t\t\t// Transform insert position by the other operation parameters.\n\t\t\ttransformed.position = a.position._getTransformedByMove(b.sourcePosition, b.targetPosition, b.howMany, insertBefore, b.isSticky && !context.forceNotSticky);\n\n\t\t\treturn [transformed];\n\t\t}\n\t},\n\n\tAttributeOperation: {\n\t\t// Transforms AttributeOperation `a` by InsertOperation `b`. Returns results as an array of operations.\n\t\tInsertOperation: function InsertOperation(a, b) {\n\t\t\t// Transform this operation's range.\n\t\t\tvar ranges = a.range._getTransformedByInsertion(b.position, b.nodes.maxOffset, true, false);\n\n\t\t\t// Map transformed range(s) to operations and return them.\n\t\t\treturn ranges.reverse().map(function (range) {\n\t\t\t\treturn new _attributeoperation2.default(range, a.key, a.oldValue, a.newValue, a.baseVersion);\n\t\t\t});\n\t\t},\n\n\n\t\t// Transforms AttributeOperation `a` by AttributeOperation `b`. Accepts a flag stating whether `a` is more important\n\t\t// than `b` when it comes to resolving conflicts. Returns results as an array of operations.\n\t\tAttributeOperation: function AttributeOperation(a, b, context) {\n\t\t\tif (a.key === b.key) {\n\t\t\t\t// If operations attributes are in conflict, check if their ranges intersect and manage them properly.\n\n\t\t\t\t// First, we want to apply change to the part of a range that has not been changed by the other operation.\n\t\t\t\tvar operations = a.range.getDifference(b.range).map(function (range) {\n\t\t\t\t\treturn new _attributeoperation2.default(range, a.key, a.oldValue, a.newValue, a.baseVersion);\n\t\t\t\t});\n\n\t\t\t\t// Then we take care of the common part of ranges.\n\t\t\t\tvar common = a.range.getIntersection(b.range);\n\n\t\t\t\tif (common) {\n\t\t\t\t\t// If this operation is more important, we also want to apply change to the part of the\n\t\t\t\t\t// original range that has already been changed by the other operation. Since that range\n\t\t\t\t\t// got changed we also have to update `oldValue`.\n\t\t\t\t\tif (context.isStrong) {\n\t\t\t\t\t\toperations.push(new _attributeoperation2.default(common, b.key, b.newValue, a.newValue, a.baseVersion));\n\t\t\t\t\t} else if (operations.length === 0) {\n\t\t\t\t\t\toperations.push(new _nooperation2.default(0));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn operations;\n\t\t\t} else {\n\t\t\t\t// If operations don't conflict, simply return an array containing just a clone of this operation.\n\t\t\t\treturn [a.clone()];\n\t\t\t}\n\t\t},\n\n\n\t\tRootAttributeOperation: doNotUpdate,\n\n\t\tRenameOperation: doNotUpdate,\n\n\t\tMarkerOperation: doNotUpdate,\n\n\t\t// Transforms AttributeOperation `a` by MoveOperation `b`. Returns results as an array of operations.\n\t\tMoveOperation: function MoveOperation(a, b) {\n\t\t\t// Convert MoveOperation properties into a range.\n\t\t\tvar rangeB = _range2.default.createFromPositionAndShift(b.sourcePosition, b.howMany);\n\n\t\t\t// This will aggregate transformed ranges.\n\t\t\tvar ranges = [];\n\n\t\t\t// Difference is a part of changed range that is modified by AttributeOperation but is not affected\n\t\t\t// by MoveOperation. This can be zero, one or two ranges (if moved range is inside changed range).\n\t\t\t// Right now we will make a simplification and join difference ranges and transform them as one. We will cover rangeB later.\n\t\t\tvar difference = joinRanges(a.range.getDifference(rangeB));\n\n\t\t\t// Common is a range of nodes that is affected by MoveOperation. So it got moved to other place.\n\t\t\tvar common = a.range.getIntersection(rangeB);\n\n\t\t\tif (difference !== null) {\n\t\t\t\t// MoveOperation removes nodes from their original position. We acknowledge this by proper transformation.\n\t\t\t\t// Take the start and the end of the range and transform them by deletion of moved nodes.\n\t\t\t\t// Note that if rangeB was inside AttributeOperation range, only difference.end will be transformed.\n\t\t\t\t// This nicely covers the joining simplification we did in the previous step.\n\t\t\t\tdifference.start = difference.start._getTransformedByDeletion(b.sourcePosition, b.howMany);\n\t\t\t\tdifference.end = difference.end._getTransformedByDeletion(b.sourcePosition, b.howMany);\n\n\t\t\t\t// MoveOperation pastes nodes into target position. We acknowledge this by proper transformation.\n\t\t\t\t// Note that since we operate on transformed difference range, we should transform by\n\t\t\t\t// previously transformed target position.\n\t\t\t\t// Note that we do not use Position._getTransformedByMove on range boundaries because we need to\n\t\t\t\t// transform by insertion a range as a whole, since newTargetPosition might be inside that range.\n\t\t\t\tranges = difference._getTransformedByInsertion(b.getMovedRangeStart(), b.howMany, true, false).reverse();\n\t\t\t}\n\n\t\t\tif (common !== null) {\n\t\t\t\t// Here we do not need to worry that newTargetPosition is inside moved range, because that\n\t\t\t\t// would mean that the MoveOperation targets into itself, and that is incorrect operation.\n\t\t\t\t// Instead, we calculate the new position of that part of original range.\n\t\t\t\tcommon.start = common.start._getCombined(b.sourcePosition, b.getMovedRangeStart());\n\t\t\t\tcommon.end = common.end._getCombined(b.sourcePosition, b.getMovedRangeStart());\n\n\t\t\t\tranges.push(common);\n\t\t\t}\n\n\t\t\t// Map transformed range(s) to operations and return them.\n\t\t\treturn ranges.map(function (range) {\n\t\t\t\treturn new _attributeoperation2.default(range, a.key, a.oldValue, a.newValue, a.baseVersion);\n\t\t\t});\n\t\t}\n\t},\n\n\tRootAttributeOperation: {\n\t\tInsertOperation: doNotUpdate,\n\n\t\tAttributeOperation: doNotUpdate,\n\n\t\t// Transforms RootAttributeOperation `a` by RootAttributeOperation `b`. Accepts a flag stating whether `a` is more important\n\t\t// than `b` when it comes to resolving conflicts. Returns results as an array of operations.\n\t\tRootAttributeOperation: function RootAttributeOperation(a, b, context) {\n\t\t\tif (a.root === b.root && a.key === b.key) {\n\t\t\t\tif (a.newValue !== b.newValue && !context.isStrong || a.newValue === b.newValue) {\n\t\t\t\t\treturn [new _nooperation2.default(a.baseVersion)];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn [a.clone()];\n\t\t},\n\n\n\t\tRenameOperation: doNotUpdate,\n\n\t\tMarkerOperation: doNotUpdate,\n\n\t\tMoveOperation: doNotUpdate\n\t},\n\n\tRenameOperation: {\n\t\t// Transforms RenameOperation `a` by InsertOperation `b`. Returns results as an array of operations.\n\t\tInsertOperation: function InsertOperation(a, b) {\n\t\t\t// Clone the operation, we don't want to alter the original operation.\n\t\t\tvar clone = a.clone();\n\n\t\t\t// Transform this operation's position.\n\t\t\tclone.position = clone.position._getTransformedByInsertion(b.position, b.nodes.maxOffset, true);\n\n\t\t\treturn [clone];\n\t\t},\n\n\n\t\tAttributeOperation: doNotUpdate,\n\n\t\tRootAttributeOperation: doNotUpdate,\n\n\t\t// Transforms RenameOperation `a` by RenameOperation `b`. Accepts a flag stating whether `a` is more important\n\t\t// than `b` when it comes to resolving conflicts. Returns results as an array of operations.\n\t\tRenameOperation: function RenameOperation(a, b, context) {\n\t\t\t// Clone the operation, we don't want to alter the original operation.\n\t\t\tvar clone = a.clone();\n\n\t\t\tif (a.position.isEqual(b.position)) {\n\t\t\t\tif (context.isStrong) {\n\t\t\t\t\tclone.oldName = b.newName;\n\t\t\t\t} else {\n\t\t\t\t\treturn [new _nooperation2.default(a.baseVersion)];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn [clone];\n\t\t},\n\n\n\t\tMarkerOperation: doNotUpdate,\n\n\t\t// Transforms RenameOperation `a` by MoveOperation `b`. Returns results as an array of operations.\n\t\tMoveOperation: function MoveOperation(a, b) {\n\t\t\tvar clone = a.clone();\n\t\t\tvar isSticky = clone.position.isEqual(b.sourcePosition);\n\n\t\t\tclone.position = clone.position._getTransformedByMove(b.sourcePosition, b.targetPosition, b.howMany, true, isSticky);\n\n\t\t\treturn [clone];\n\t\t}\n\t},\n\n\tMarkerOperation: {\n\t\t// Transforms MarkerOperation `a` by InsertOperation `b`. Returns results as an array of operations.\n\t\tInsertOperation: function InsertOperation(a, b) {\n\t\t\t// Clone the operation, we don't want to alter the original operation.\n\t\t\tvar clone = a.clone();\n\n\t\t\tif (clone.oldRange) {\n\t\t\t\tclone.oldRange = clone.oldRange._getTransformedByInsertion(b.position, b.nodes.maxOffset, false, false)[0];\n\t\t\t}\n\n\t\t\tif (clone.newRange) {\n\t\t\t\tclone.newRange = clone.newRange._getTransformedByInsertion(b.position, b.nodes.maxOffset, false, false)[0];\n\t\t\t}\n\n\t\t\treturn [clone];\n\t\t},\n\n\n\t\tAttributeOperation: doNotUpdate,\n\n\t\tRootAttributeOperation: doNotUpdate,\n\n\t\tRenameOperation: doNotUpdate,\n\n\t\t// Transforms MarkerOperation `a` by MarkerOperation `b`. Accepts a flag stating whether `a` is more important\n\t\t// than `b` when it comes to resolving conflicts. Returns results as an array of operations.\n\t\tMarkerOperation: function MarkerOperation(a, b, context) {\n\t\t\t// Clone the operation, we don't want to alter the original operation.\n\t\t\tvar clone = a.clone();\n\n\t\t\tif (a.name == b.name) {\n\t\t\t\tif (context.isStrong) {\n\t\t\t\t\tclone.oldRange = b.newRange;\n\t\t\t\t} else {\n\t\t\t\t\treturn [new _nooperation2.default(a.baseVersion)];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn [clone];\n\t\t},\n\n\n\t\t// Transforms MarkerOperation `a` by MoveOperation `b`. Returns results as an array of operations.\n\t\tMoveOperation: function MoveOperation(a, b) {\n\t\t\t// Clone the operation, we don't want to alter the original operation.\n\t\t\tvar clone = a.clone();\n\n\t\t\tif (clone.oldRange) {\n\t\t\t\tvar oldRanges = clone.oldRange._getTransformedByMove(b.sourcePosition, b.targetPosition, b.howMany);\n\t\t\t\tclone.oldRange = _range2.default.createFromRanges(oldRanges);\n\t\t\t}\n\n\t\t\tif (clone.newRange) {\n\t\t\t\tvar newRanges = clone.newRange._getTransformedByMove(b.sourcePosition, b.targetPosition, b.howMany);\n\t\t\t\tclone.newRange = _range2.default.createFromRanges(newRanges);\n\t\t\t}\n\n\t\t\treturn [clone];\n\t\t}\n\t},\n\n\tMoveOperation: {\n\t\t// Transforms MoveOperation `a` by InsertOperation `b`. Accepts a flag stating whether `a` is more important\n\t\t// than `b` when it comes to resolving conflicts. Returns results as an array of operations.\n\t\tInsertOperation: function InsertOperation(a, b, context) {\n\t\t\t// Create range from MoveOperation properties and transform it by insertion.\n\t\t\tvar range = _range2.default.createFromPositionAndShift(a.sourcePosition, a.howMany);\n\t\t\trange = range._getTransformedByInsertion(b.position, b.nodes.maxOffset, false, a.isSticky && !context.forceNotSticky)[0];\n\n\t\t\t// Check whether there is a forced order of nodes or use `context.isStrong` flag for conflict resolving.\n\t\t\tvar insertBefore = context.insertBefore === undefined ? !context.isStrong : context.insertBefore;\n\n\t\t\tvar result = new a.constructor(range.start, range.end.offset - range.start.offset, a.targetPosition._getTransformedByInsertion(b.position, b.nodes.maxOffset, insertBefore), a.baseVersion);\n\n\t\t\tresult.isSticky = a.isSticky;\n\n\t\t\treturn [result];\n\t\t},\n\n\n\t\tAttributeOperation: doNotUpdate,\n\n\t\tRootAttributeOperation: doNotUpdate,\n\n\t\tRenameOperation: doNotUpdate,\n\n\t\tMarkerOperation: doNotUpdate,\n\n\t\t// Transforms MoveOperation `a` by MoveOperation `b`. Accepts a flag stating whether `a` is more important\n\t\t// than `b` when it comes to resolving conflicts. Returns results as an array of operations.\n\t\tMoveOperation: function MoveOperation(a, b, context) {\n\t\t\t//\n\t\t\t// Setting and evaluating some variables that will be used in special cases and default algorithm.\n\t\t\t//\n\t\t\t// Create ranges from `MoveOperations` properties.\n\t\t\tvar rangeA = _range2.default.createFromPositionAndShift(a.sourcePosition, a.howMany);\n\t\t\tvar rangeB = _range2.default.createFromPositionAndShift(b.sourcePosition, b.howMany);\n\n\t\t\t// Assign `context.isStrong` to a different variable, because the value may change during execution of\n\t\t\t// this algorithm and we do not want to override original `context.isStrong` that will be used in later transformations.\n\t\t\tvar isStrong = context.isStrong;\n\n\t\t\t// Whether range moved by operation `b` is includable in operation `a` move range.\n\t\t\t// For this, `a` operation has to be sticky (so `b` sticks to the range) and context has to allow stickiness.\n\t\t\tvar includeB = a.isSticky && !context.forceNotSticky;\n\n\t\t\t// Evaluate new target position for transformed operation.\n\t\t\t// Check whether there is a forced order of nodes or use `isStrong` flag for conflict resolving.\n\t\t\tvar insertBefore = context.insertBefore === undefined ? !isStrong : context.insertBefore;\n\n\t\t\t// `a.targetPosition` could be affected by the `b` operation. We will transform it.\n\t\t\tvar newTargetPosition = a.targetPosition._getTransformedByMove(b.sourcePosition, b.targetPosition, b.howMany, insertBefore, b.isSticky && !context.forceNotSticky);\n\n\t\t\t//\n\t\t\t// Special case #1 + mirror.\n\t\t\t//\n\t\t\t// Special case when both move operations' target positions are inside nodes that are\n\t\t\t// being moved by the other move operation. So in other words, we move ranges into inside of each other.\n\t\t\t// This case can't be solved reasonably (on the other hand, it should not happen often).\n\t\t\tif (moveTargetIntoMovedRange(a, b) && moveTargetIntoMovedRange(b, a)) {\n\t\t\t\t// Instead of transforming operation, we return a reverse of the operation that we transform by.\n\t\t\t\t// So when the results of this \"transformation\" will be applied, `b` MoveOperation will get reversed.\n\t\t\t\treturn [b.getReversed()];\n\t\t\t}\n\t\t\t//\n\t\t\t// End of special case #1.\n\t\t\t//\n\n\t\t\t//\n\t\t\t// Special case #2.\n\t\t\t//\n\t\t\t// Check if `b` operation targets inside `rangeA`. Use stickiness if possible.\n\t\t\tvar bTargetsToA = rangeA.containsPosition(b.targetPosition) || rangeA.start.isEqual(b.targetPosition) && includeB || rangeA.end.isEqual(b.targetPosition) && includeB;\n\n\t\t\t// If `b` targets to `rangeA` and `rangeA` contains `rangeB`, `b` operation has no influence on `a` operation.\n\t\t\t// You might say that operation `b` is captured inside operation `a`.\n\t\t\tif (bTargetsToA && rangeA.containsRange(rangeB, true)) {\n\t\t\t\t// There is a mini-special case here, where `rangeB` is on other level than `rangeA`. That's why\n\t\t\t\t// we need to transform `a` operation anyway.\n\t\t\t\trangeA.start = rangeA.start._getTransformedByMove(b.sourcePosition, b.targetPosition, b.howMany, !includeB);\n\t\t\t\trangeA.end = rangeA.end._getTransformedByMove(b.sourcePosition, b.targetPosition, b.howMany, includeB);\n\n\t\t\t\treturn makeMoveOperationsFromRanges([rangeA], newTargetPosition, a);\n\t\t\t}\n\n\t\t\t//\n\t\t\t// Special case #2 mirror.\n\t\t\t//\n\t\t\tvar aTargetsToB = rangeB.containsPosition(a.targetPosition) || rangeB.start.isEqual(a.targetPosition) && b.isSticky && !context.forceNotSticky || rangeB.end.isEqual(a.targetPosition) && b.isSticky && !context.forceNotSticky;\n\n\t\t\tif (aTargetsToB && rangeB.containsRange(rangeA, true)) {\n\t\t\t\t// `a` operation is \"moved together\" with `b` operation.\n\t\t\t\t// Here, just move `rangeA` \"inside\" `rangeB`.\n\t\t\t\trangeA.start = rangeA.start._getCombined(b.sourcePosition, b.getMovedRangeStart());\n\t\t\t\trangeA.end = rangeA.end._getCombined(b.sourcePosition, b.getMovedRangeStart());\n\n\t\t\t\treturn makeMoveOperationsFromRanges([rangeA], newTargetPosition, a);\n\t\t\t}\n\t\t\t//\n\t\t\t// End of special case #2.\n\t\t\t//\n\n\t\t\t//\n\t\t\t// Special case #3 + mirror.\n\t\t\t//\n\t\t\t// `rangeA` has a node which is an ancestor of `rangeB`. In other words, `rangeB` is inside `rangeA`\n\t\t\t// but not on the same tree level. In such case ranges have common part but we have to treat it\n\t\t\t// differently, because in such case those ranges are not really conflicting and should be treated like\n\t\t\t// two separate ranges. Also we have to discard two difference parts.\n\t\t\tvar aCompB = (0, _comparearrays2.default)(a.sourcePosition.getParentPath(), b.sourcePosition.getParentPath());\n\n\t\t\tif (aCompB == 'prefix' || aCompB == 'extension') {\n\t\t\t\t// Transform `rangeA` by `b` operation and make operation out of it, and that's all.\n\t\t\t\t// Note that this is a simplified version of default case, but here we treat the common part (whole `rangeA`)\n\t\t\t\t// like a one difference part.\n\t\t\t\trangeA.start = rangeA.start._getTransformedByMove(b.sourcePosition, b.targetPosition, b.howMany, !includeB);\n\t\t\t\trangeA.end = rangeA.end._getTransformedByMove(b.sourcePosition, b.targetPosition, b.howMany, includeB);\n\n\t\t\t\treturn makeMoveOperationsFromRanges([rangeA], newTargetPosition, a);\n\t\t\t}\n\t\t\t//\n\t\t\t// End of special case #3.\n\t\t\t//\n\n\t\t\t//\n\t\t\t// Default case - ranges are on the same level or are not connected with each other.\n\t\t\t//\n\t\t\t// Modifier for default case.\n\t\t\t// Modifies `isStrong` flag in certain conditions.\n\t\t\t//\n\t\t\t// If only one of operations is a remove operation, we force remove operation to be the \"stronger\" one\n\t\t\t// to provide more expected results. This is done only if `context.forceWeakRemove` is set to `false`.\n\t\t\t// `context.forceWeakRemove` is set to `true` in certain conditions when transformation takes place during undo.\n\t\t\tif (!context.forceWeakRemove) {\n\t\t\t\tif (a instanceof _removeoperation2.default && !(b instanceof _removeoperation2.default)) {\n\t\t\t\t\tisStrong = true;\n\t\t\t\t} else if (!(a instanceof _removeoperation2.default) && b instanceof _removeoperation2.default) {\n\t\t\t\t\tisStrong = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Handle operation's source ranges - check how `rangeA` is affected by `b` operation.\n\t\t\t// This will aggregate transformed ranges.\n\t\t\tvar ranges = [];\n\n\t\t\t// Get the \"difference part\" of `a` operation source range.\n\t\t\t// This is an array with one or two ranges. Two ranges if `rangeB` is inside `rangeA`.\n\t\t\tvar difference = rangeA.getDifference(rangeB);\n\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = difference[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar range = _step.value;\n\n\t\t\t\t\t// Transform those ranges by `b` operation. For example if `b` moved range from before those ranges, fix those ranges.\n\t\t\t\t\trange.start = range.start._getTransformedByDeletion(b.sourcePosition, b.howMany);\n\t\t\t\t\trange.end = range.end._getTransformedByDeletion(b.sourcePosition, b.howMany);\n\n\t\t\t\t\t// If `b` operation targets into `rangeA` on the same level, spread `rangeA` into two ranges.\n\t\t\t\t\tvar shouldSpread = (0, _comparearrays2.default)(range.start.getParentPath(), b.getMovedRangeStart().getParentPath()) == 'same';\n\t\t\t\t\tvar newRanges = range._getTransformedByInsertion(b.getMovedRangeStart(), b.howMany, shouldSpread, includeB);\n\n\t\t\t\t\tranges.push.apply(ranges, _toConsumableArray(newRanges));\n\t\t\t\t}\n\n\t\t\t\t// Then, we have to manage the \"common part\" of both move ranges.\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar common = rangeA.getIntersection(rangeB);\n\n\t\t\tif (common !== null && isStrong && !bTargetsToA) {\n\t\t\t\t// Calculate the new position of that part of original range.\n\t\t\t\tcommon.start = common.start._getCombined(b.sourcePosition, b.getMovedRangeStart());\n\t\t\t\tcommon.end = common.end._getCombined(b.sourcePosition, b.getMovedRangeStart());\n\n\t\t\t\t// Take care of proper range order.\n\t\t\t\t//\n\t\t\t\t// Put `common` at appropriate place. Keep in mind that we are interested in original order.\n\t\t\t\t// Basically there are only three cases: there is zero, one or two difference ranges.\n\t\t\t\t//\n\t\t\t\t// If there is zero difference ranges, just push `common` in the array.\n\t\t\t\tif (ranges.length === 0) {\n\t\t\t\t\tranges.push(common);\n\t\t\t\t}\n\t\t\t\t// If there is one difference range, we need to check whether common part was before it or after it.\n\t\t\t\telse if (ranges.length == 1) {\n\t\t\t\t\t\tif (rangeB.start.isBefore(rangeA.start) || rangeB.start.isEqual(rangeA.start)) {\n\t\t\t\t\t\t\tranges.unshift(common);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tranges.push(common);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// If there are more ranges (which means two), put common part between them. This is the only scenario\n\t\t\t\t\t// where there could be two difference ranges so we don't have to make any comparisons.\n\t\t\t\t\telse {\n\t\t\t\t\t\t\tranges.splice(1, 0, common);\n\t\t\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (ranges.length === 0) {\n\t\t\t\t// If there are no \"source ranges\", nothing should be changed.\n\t\t\t\t// Note that this can happen only if `isStrong == false` and `rangeA.isEqual( rangeB )`.\n\t\t\t\treturn [new _nooperation2.default(a.baseVersion)];\n\t\t\t}\n\n\t\t\treturn makeMoveOperationsFromRanges(ranges, newTargetPosition, a);\n\t\t}\n\t}\n};\n\nfunction transform(a, b) {\n\tvar context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : { isStrong: false };\n\n\tvar group = void 0,\n\t    algorithm = void 0;\n\n\tif (a instanceof _insertoperation2.default) {\n\t\tgroup = ot.InsertOperation;\n\t} else if (a instanceof _attributeoperation2.default) {\n\t\tgroup = ot.AttributeOperation;\n\t} else if (a instanceof _rootattributeoperation2.default) {\n\t\tgroup = ot.RootAttributeOperation;\n\t} else if (a instanceof _renameoperation2.default) {\n\t\tgroup = ot.RenameOperation;\n\t} else if (a instanceof _markeroperation2.default) {\n\t\tgroup = ot.MarkerOperation;\n\t} else if (a instanceof _moveoperation2.default) {\n\t\tgroup = ot.MoveOperation;\n\t} else {\n\t\talgorithm = doNotUpdate;\n\t}\n\n\tif (group) {\n\t\tif (b instanceof _insertoperation2.default) {\n\t\t\talgorithm = group.InsertOperation;\n\t\t} else if (b instanceof _attributeoperation2.default) {\n\t\t\talgorithm = group.AttributeOperation;\n\t\t} else if (b instanceof _rootattributeoperation2.default) {\n\t\t\talgorithm = group.RootAttributeOperation;\n\t\t} else if (b instanceof _renameoperation2.default) {\n\t\t\talgorithm = group.RenameOperation;\n\t\t} else if (b instanceof _markeroperation2.default) {\n\t\t\talgorithm = group.MarkerOperation;\n\t\t} else if (b instanceof _moveoperation2.default) {\n\t\t\talgorithm = group.MoveOperation;\n\t\t} else {\n\t\t\talgorithm = doNotUpdate;\n\t\t}\n\t}\n\n\tvar transformed = algorithm(a, b, context);\n\n\treturn updateBaseVersions(a.baseVersion, transformed);\n}\n\n// When we don't want to update an operation, we create and return a clone of it.\n// Returns the operation in \"unified format\" - wrapped in an Array.\nfunction doNotUpdate(operation) {\n\treturn [operation.clone()];\n}\n\n// Takes an Array of operations and sets consecutive base versions for them, starting from given base version.\n// Returns the passed array.\nfunction updateBaseVersions(baseVersion, operations) {\n\tfor (var i = 0; i < operations.length; i++) {\n\t\toperations[i].baseVersion = baseVersion + i + 1;\n\t}\n\n\treturn operations;\n}\n\n// Checks whether MoveOperation targetPosition is inside a node from the moved range of the other MoveOperation.\nfunction moveTargetIntoMovedRange(a, b) {\n\treturn a.targetPosition._getTransformedByDeletion(b.sourcePosition, b.howMany) === null;\n}\n\n// Gets an array of Ranges and produces one Range out of it. The root of a new range will be same as\n// the root of the first range in the array. If any of given ranges has different root than the first range,\n// it will be discarded.\nfunction joinRanges(ranges) {\n\tif (ranges.length === 0) {\n\t\treturn null;\n\t} else if (ranges.length == 1) {\n\t\treturn ranges[0];\n\t} else {\n\t\tranges[0].end = ranges[ranges.length - 1].end;\n\n\t\treturn ranges[0];\n\t}\n}\n\n// Helper function for `MoveOperation` x `MoveOperation` transformation.\n// Convert given ranges and target position to move operations and return them.\n// Ranges and target position will be transformed on-the-fly when generating operations.\n// Given `ranges` should be in the order of how they were in the original transformed operation.\n// Given `targetPosition` is the target position of the first range from `ranges`.\nfunction makeMoveOperationsFromRanges(ranges, targetPosition, a) {\n\t// At this moment we have some ranges and a target position, to which those ranges should be moved.\n\t// Order in `ranges` array is the go-to order of after transformation.\n\t//\n\t// We are almost done. We have `ranges` and `targetPosition` to make operations from.\n\t// Unfortunately, those operations may affect each other. Precisely, first operation after move\n\t// may affect source range and target position of second and third operation. Same with second\n\t// operation affecting third.\n\t//\n\t// We need to fix those source ranges and target positions once again, before converting `ranges` to operations.\n\tvar operations = [];\n\n\t// Keep in mind that nothing will be transformed if there is just one range in `ranges`.\n\tfor (var i = 0; i < ranges.length; i++) {\n\t\t// Create new operation out of a range and target position.\n\t\tvar op = makeMoveOperation(ranges[i], targetPosition, a.isSticky);\n\n\t\toperations.push(op);\n\n\t\t// Transform other ranges by the generated operation.\n\t\tfor (var j = i + 1; j < ranges.length; j++) {\n\t\t\t// All ranges in `ranges` array should be:\n\t\t\t// * non-intersecting (these are part of original operation source range), and\n\t\t\t// * `targetPosition` does not target into them (opposite would mean that transformed operation targets \"inside itself\").\n\t\t\t//\n\t\t\t// This means that the transformation will be \"clean\" and always return one result.\n\t\t\tranges[j] = ranges[j]._getTransformedByMove(op.sourcePosition, op.targetPosition, op.howMany)[0];\n\t\t}\n\n\t\ttargetPosition = targetPosition._getTransformedByMove(op.sourcePosition, op.targetPosition, op.howMany, true, false);\n\t}\n\n\treturn operations;\n}\n\nfunction makeMoveOperation(range, targetPosition, isSticky) {\n\t// We want to keep correct operation class.\n\tvar OperationClass = void 0;\n\n\tif (targetPosition.root.rootName == '$graveyard') {\n\t\tOperationClass = _removeoperation2.default;\n\t} else if (range.start.root.rootName == '$graveyard') {\n\t\tOperationClass = _reinsertoperation2.default;\n\t} else {\n\t\tOperationClass = _moveoperation2.default;\n\t}\n\n\tvar result = new OperationClass(range.start, range.end.offset - range.start.offset, targetPosition, 0 // Is corrected anyway later.\n\t);\n\n\tresult.isSticky = isSticky;\n\n\treturn result;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/operation/transform.js\n// module id = 320\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _element = require('./element');\n\nvar _element2 = _interopRequireDefault(_element);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/model/rootelement\n */\n\n/**\n * Type of {@link module:engine/model/element~Element} that is a root of a model tree.\n * @extends module:engine/model/element~Element\n */\nvar RootElement = function (_Element) {\n\t_inherits(RootElement, _Element);\n\n\t/**\n  * Creates root element.\n  *\n  * @param {module:engine/model/document~Document} doc Document that is an owner of this root.\n  * @param {String} name Node name.\n  * @param {String} [rootName='main'] Unique root name used to identify this root\n  * element by {@link module:engine/model/document~Document}.\n  */\n\tfunction RootElement(doc, name) {\n\t\tvar rootName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'main';\n\n\t\t_classCallCheck(this, RootElement);\n\n\t\t/**\n   * Document that is an owner of this root.\n   *\n   * @private\n   * @member {module:engine/model/document~Document}\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (RootElement.__proto__ || Object.getPrototypeOf(RootElement)).call(this, name));\n\n\t\t_this._doc = doc;\n\n\t\t/**\n   * Unique root name used to identify this root element by {@link module:engine/model/document~Document}.\n   *\n   * @readonly\n   * @member {String}\n   */\n\t\t_this.rootName = rootName;\n\t\treturn _this;\n\t}\n\n\t/**\n  * {@link module:engine/model/document~Document Document} that owns this root element.\n  *\n  * In contrary, to {@link module:engine/model/node~Node node}, root element always have a `document`.\n  *\n  * @readonly\n  * @type {module:engine/model/document~Document|null}\n  */\n\n\n\t_createClass(RootElement, [{\n\t\tkey: 'is',\n\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tvalue: function is(type, name) {\n\t\t\tif (!name) {\n\t\t\t\treturn type == 'rootElement' || _get(RootElement.prototype.__proto__ || Object.getPrototypeOf(RootElement.prototype), 'is', this).call(this, type);\n\t\t\t} else {\n\t\t\t\treturn type == 'rootElement' && name == this.name || _get(RootElement.prototype.__proto__ || Object.getPrototypeOf(RootElement.prototype), 'is', this).call(this, type, name);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Converts `RootElement` instance to `String` containing it's name.\n   *\n   * @returns {String} `RootElement` instance converted to `String`.\n   */\n\n\t}, {\n\t\tkey: 'toJSON',\n\t\tvalue: function toJSON() {\n\t\t\treturn this.rootName;\n\t\t}\n\t}, {\n\t\tkey: 'document',\n\t\tget: function get() {\n\t\t\treturn this._doc;\n\t\t}\n\t}]);\n\n\treturn RootElement;\n}(_element2.default);\n\nexports.default = RootElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/rootelement.js\n// module id = 321\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.SchemaItem = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */\n\n/**\n * @module engine/model/schema\n */\n\nvar _position = require('./position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _element = require('./element');\n\nvar _element2 = _interopRequireDefault(_element);\n\nvar _clone = require('@ckeditor/ckeditor5-utils/src/lib/lodash/clone');\n\nvar _clone2 = _interopRequireDefault(_clone);\n\nvar _isArray = require('@ckeditor/ckeditor5-utils/src/lib/lodash/isArray');\n\nvar _isArray2 = _interopRequireDefault(_isArray);\n\nvar _isString = require('@ckeditor/ckeditor5-utils/src/lib/lodash/isString');\n\nvar _isString2 = _interopRequireDefault(_isString);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nvar _range = require('./range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Schema is a definition of the structure of the document. It allows to define which tree model items (element, text, etc.)\n * can be nested within which ones and which attributes can be applied to them. It's created during the run-time of the application,\n * typically by features. Also, the features can query the schema to learn what structure is allowed and act accordingly.\n *\n * For instance, if a feature wants to define that an attribute bold is allowed on the text it needs to register this rule like this:\n *\n *\t\teditor.document.schema.allow( '$text', 'bold' );\n *\n * Note: items prefixed with `$` are special group of items. By default, `Schema` defines three special items:\n *\n * * `$inline` represents all inline elements,\n * * `$text` is a sub-group of `$inline` and represents text nodes,\n * * `$block` represents block elements,\n * * `$root` represents default editing roots (those that allow only `$block`s inside them).\n *\n * When registering an item it's possible to tell that this item should inherit from some other existing item.\n * E.g. `p` can inherit from `$block`, so whenever given attribute is allowed on the `$block` it will automatically be\n * also allowed on the `p` element. By default, `$text` item already inherits from `$inline`.\n */\nvar Schema = function () {\n\t/**\n  * Creates Schema instance.\n  */\n\tfunction Schema() {\n\t\t_classCallCheck(this, Schema);\n\n\t\t/**\n   * Names of elements which have \"object\" nature. This means that these\n   * elements should be treated as whole, never merged, can be selected from outside, etc.\n   * Just like images, placeholder widgets, etc.\n   *\n   * @member {Set.<String>} module:engine/model/schema~Schema#objects\n   */\n\t\tthis.objects = new Set();\n\n\t\t/**\n   * Names of elements to which editing operations should be limited.\n   * For example, the <kbd>Enter</kbd> should not split such elements and\n   * <kbd>Backspace</kbd> should not be able to leave or modify such elements.\n   *\n   * @member {Set.<String>} module:engine/model/schema~Schema#limits\n   */\n\t\tthis.limits = new Set();\n\n\t\t/**\n   * Schema items registered in the schema.\n   *\n   * @private\n   * @member {Map} module:engine/model/schema~Schema#_items\n   */\n\t\tthis._items = new Map();\n\n\t\t/**\n   * Description of what entities are a base for given entity.\n   *\n   * @private\n   * @member {Map} module:engine/model/schema~Schema#_extensionChains\n   */\n\t\tthis._extensionChains = new Map();\n\n\t\t// Register some default abstract entities.\n\t\tthis.registerItem('$root');\n\t\tthis.registerItem('$block');\n\t\tthis.registerItem('$inline');\n\t\tthis.registerItem('$text', '$inline');\n\n\t\tthis.allow({ name: '$block', inside: '$root' });\n\t\tthis.allow({ name: '$inline', inside: '$block' });\n\n\t\tthis.limits.add('$root');\n\n\t\t// TMP!\n\t\t// Create an \"all allowed\" context in the schema for processing the pasted content.\n\t\t// Read: https://github.com/ckeditor/ckeditor5-engine/issues/638#issuecomment-255086588\n\n\t\tthis.registerItem('$clipboardHolder', '$root');\n\t\tthis.allow({ name: '$inline', inside: '$clipboardHolder' });\n\t}\n\n\t/**\n  * Allows given query in the schema.\n  *\n  *\t\t// Allow text with bold attribute in all P elements.\n  *\t\tschema.registerItem( 'p', '$block' );\n  *\t\tschema.allow( { name: '$text', attributes: 'bold', inside: 'p' } );\n  *\n  *\t\t// Allow header in Ps that are in DIVs\n  *\t\tschema.registerItem( 'header', '$block' );\n  *\t\tschema.registerItem( 'div', '$block' );\n  *\t\tschema.allow( { name: 'header', inside: 'div p' } ); // inside: [ 'div', 'p' ] would also work.\n  *\n  * @param {module:engine/model/schema~SchemaQuery} query Allowed query.\n  */\n\n\n\t_createClass(Schema, [{\n\t\tkey: 'allow',\n\t\tvalue: function allow(query) {\n\t\t\tthis._getItem(query.name).allow(Schema._normalizeQueryPath(query.inside), query.attributes);\n\t\t}\n\n\t\t/**\n   * Disallows given query in the schema.\n   *\n   * @see #allow\n   * @param {module:engine/model/schema~SchemaQuery} query Disallowed query.\n   */\n\n\t}, {\n\t\tkey: 'disallow',\n\t\tvalue: function disallow(query) {\n\t\t\tthis._getItem(query.name).disallow(Schema._normalizeQueryPath(query.inside), query.attributes);\n\t\t}\n\n\t\t/**\n   * Makes a requirement in schema that entity represented by given item has to have given set of attributes. Some\n   * elements in the model might require some attributes to be set. If multiple sets of attributes are required it\n   * is enough that the entity fulfills only one set.\n   *\n   *\t\t// \"a\" element must either have \"href\" attribute or \"name\" attribute\n   *\t\tschema.requireAttributes( 'a', [ 'href' ] );\n   *\t\tschema.requireAttributes( 'a', [ 'name' ] );\n   *\t\t// \"img\" element must have both \"src\" and \"alt\" attributes\n   *\t\tschema.requireAttributes( 'img', [ 'src', 'alt' ] );\n   *\n   * @param {String} name Entity name.\n   * @param {Array.<String>} attributes Attributes that has to be set on the entity to make it valid.\n   */\n\n\t}, {\n\t\tkey: 'requireAttributes',\n\t\tvalue: function requireAttributes(name, attributes) {\n\t\t\tthis._getItem(name).requireAttributes(attributes);\n\t\t}\n\n\t\t/**\n   * Checks whether given query is allowed in schema.\n   *\n   *\t\t// Check whether bold text is allowed in header element.\n   *\t\tlet query = {\n   *\t\t\tname: '$text',\n   *\t\t\tattributes: 'bold',\n   *\t\t\tinside: 'header'\n   *\t\t};\n   *\t\tif ( schema.check( query ) ) { ... }\n   *\n   *\t\t// Check whether bold and italic text can be placed at caret position.\n   *\t\tlet caretPos = editor.document.selection.getFirstPosition();\n   *\t\tlet query = {\n   *\t\t\tname: '$text',\n   *\t\t\tattributes: [ 'bold', 'italic' ],\n   *\t\t\tinside: caretPos\n   *\t\t};\n   *\t\tif ( schema.check( query ) ) { ... }\n   *\n   *\t\t// Check whether image with alt, src and title is allowed in given elements path.\n   *\t\tlet quoteElement = new Element( 'quote' );\n   *\t\tlet query = {\n   *\t\t\tname: 'img',\n   *\t\t\tattributes: [ 'alt', 'src', 'title' ],\n   *\t\t\t// It is possible to mix strings with elements.\n   *\t\t\t// Query will check whether \"img\" can be inside \"quoteElement\" that is inside a block element.\n   *\t\t\tinside: [ '$block', quoteElement ]\n   *\t\t};\n   *\t\tif ( schema.check( query ) ) { ... }\n   *\n   * @param {module:engine/model/schema~SchemaQuery} query Query to check.\n   * @returns {Boolean} `true` if given query is allowed in schema, `false` otherwise.\n   */\n\n\t}, {\n\t\tkey: 'check',\n\t\tvalue: function check(query) {\n\t\t\tvar _this = this;\n\n\t\t\tif (!this.hasItem(query.name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// If attributes property is a string or undefined, wrap it in an array for easier processing.\n\t\t\tif (!(0, _isArray2.default)(query.attributes)) {\n\t\t\t\tquery.attributes = [query.attributes];\n\t\t\t} else if (query.attributes.length === 0) {\n\t\t\t\t// To simplify algorithms, when a SchemaItem path is added \"without\" attribute, it is added with\n\t\t\t\t// attribute equal to undefined. This means that algorithms can work the same way for specified attributes\n\t\t\t\t// and no-atrtibutes, but we have to fill empty array with \"fake\" undefined value for algorithms reasons.\n\t\t\t\tquery.attributes.push(undefined);\n\t\t\t}\n\n\t\t\t// Normalize the path to an array of strings.\n\t\t\tvar path = Schema._normalizeQueryPath(query.inside);\n\n\t\t\t// Get extension chain of given item and retrieve all schema items that are extended by given item.\n\t\t\tvar schemaItems = this._extensionChains.get(query.name).map(function (name) {\n\t\t\t\treturn _this._getItem(name);\n\t\t\t});\n\n\t\t\t// First check if the query meets at required attributes for this item.\n\t\t\tif (!this._getItem(query.name)._checkRequiredAttributes(query.attributes)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// If there is matching disallow path, this query is not valid with schema.\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = query.attributes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar attribute = _step.value;\n\t\t\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\t\t\tvar _didIteratorError3 = false;\n\t\t\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (var _iterator3 = schemaItems[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\t\t\tvar schemaItem = _step3.value;\n\n\t\t\t\t\t\t\tif (schemaItem._hasMatchingPath('disallow', path, attribute)) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t\t\t_iteratorError3 = err;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// At this point, the query is not disallowed.\n\t\t\t\t// If there are correct allow paths that match the query, this query is valid with schema.\n\t\t\t\t// Since we are supporting multiple attributes, we have to make sure that if attributes are set,\n\t\t\t\t// we have allowed paths for all of them.\n\t\t\t\t// Keep in mind that if the query has no attributes, query.attribute was converted to an array\n\t\t\t\t// with a single `undefined` value. This fits the algorithm well.\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\tvar _didIteratorError2 = false;\n\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator2 = query.attributes[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\tvar _attribute = _step2.value;\n\n\t\t\t\t\tvar matched = false;\n\n\t\t\t\t\tvar _iteratorNormalCompletion4 = true;\n\t\t\t\t\tvar _didIteratorError4 = false;\n\t\t\t\t\tvar _iteratorError4 = undefined;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (var _iterator4 = schemaItems[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\t\t\t\t\tvar _schemaItem = _step4.value;\n\n\t\t\t\t\t\t\tif (_schemaItem._hasMatchingPath('allow', path, _attribute)) {\n\t\t\t\t\t\t\t\tmatched = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// The attribute has not been matched, so it is not allowed by any schema item.\n\t\t\t\t\t\t// The query is disallowed.\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t_didIteratorError4 = true;\n\t\t\t\t\t\t_iteratorError4 = err;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t\t\t\t\t_iterator4.return();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (_didIteratorError4) {\n\t\t\t\t\t\t\t\tthrow _iteratorError4;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!matched) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t_iteratorError2 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n   * Checks whether there is an item registered under given name in schema.\n   *\n   * @param itemName\n   * @returns {Boolean}\n   */\n\n\t}, {\n\t\tkey: 'hasItem',\n\t\tvalue: function hasItem(itemName) {\n\t\t\treturn this._items.has(itemName);\n\t\t}\n\n\t\t/**\n   * Registers given item name in schema.\n   *\n   *\t\t// Register P element that should be treated like all block elements.\n   *\t\tschema.registerItem( 'p', '$block' );\n   *\n   * @param {String} itemName Name to register.\n   * @param [isExtending] If set, new item will extend item with given name.\n   */\n\n\t}, {\n\t\tkey: 'registerItem',\n\t\tvalue: function registerItem(itemName, isExtending) {\n\t\t\tif (this.hasItem(itemName)) {\n\t\t\t\t/**\n     * Item with specified name already exists in schema.\n     *\n     * @error model-schema-item-exists\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('model-schema-item-exists: Item with specified name already exists in schema.');\n\t\t\t}\n\n\t\t\tif (!!isExtending && !this.hasItem(isExtending)) {\n\t\t\t\t/**\n     * Item with specified name does not exist in schema.\n     *\n     * @error model-schema-no-item\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('model-schema-no-item: Item with specified name does not exist in schema.');\n\t\t\t}\n\n\t\t\t// Create new SchemaItem and add it to the items store.\n\t\t\tthis._items.set(itemName, new SchemaItem(this));\n\n\t\t\t// Create an extension chain.\n\t\t\t// Extension chain has all item names that should be checked when that item is on path to check.\n\t\t\t// This simply means, that if item is not extending anything, it should have only itself in it's extension chain.\n\t\t\t// Since extending is not dynamic, we can simply get extension chain of extended item and expand it with registered name,\n\t\t\t// if the registered item is extending something.\n\t\t\tvar chain = this.hasItem(isExtending) ? this._extensionChains.get(isExtending).concat(itemName) : [itemName];\n\t\t\tthis._extensionChains.set(itemName, chain);\n\t\t}\n\n\t\t/**\n   * Checks whether item of given name is extending item of another given name.\n   *\n   * @param {String} childItemName Name of the child item.\n   * @param {String} parentItemName Name of the parent item.\n   * @returns {Boolean} `true` if child item extends parent item, `false` otherwise.\n   */\n\n\t}, {\n\t\tkey: 'itemExtends',\n\t\tvalue: function itemExtends(childItemName, parentItemName) {\n\t\t\tif (!this.hasItem(childItemName) || !this.hasItem(parentItemName)) {\n\t\t\t\t/**\n     * Item with specified name does not exist in schema.\n     *\n     * @error model-schema-no-item\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('model-schema-no-item: Item with specified name does not exist in schema.');\n\t\t\t}\n\n\t\t\tvar chain = this._extensionChains.get(childItemName);\n\n\t\t\treturn chain.some(function (itemName) {\n\t\t\t\treturn itemName == parentItemName;\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * Checks whether the attribute is allowed in selection:\n   *\n   * * if the selection is not collapsed, then checks if the attribute is allowed on any of nodes in that range,\n   * * if the selection is collapsed, then checks if on the selection position there's a text with the\n   * specified attribute allowed.\n   *\n   * @param {module:engine/model/selection~Selection} selection Selection which will be checked.\n   * @param {String} attribute The name of the attribute to check.\n   * @returns {Boolean}\n   */\n\n\t}, {\n\t\tkey: 'checkAttributeInSelection',\n\t\tvalue: function checkAttributeInSelection(selection, attribute) {\n\t\t\tif (selection.isCollapsed) {\n\t\t\t\t// Check whether schema allows for a text with the attribute in the selection.\n\t\t\t\treturn this.check({ name: '$text', inside: selection.getFirstPosition(), attributes: attribute });\n\t\t\t} else {\n\t\t\t\tvar ranges = selection.getRanges();\n\n\t\t\t\t// For all ranges, check nodes in them until you find a node that is allowed to have the attribute.\n\t\t\t\tvar _iteratorNormalCompletion5 = true;\n\t\t\t\tvar _didIteratorError5 = false;\n\t\t\t\tvar _iteratorError5 = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator5 = ranges[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t\t\t\t\t\tvar range = _step5.value;\n\t\t\t\t\t\tvar _iteratorNormalCompletion6 = true;\n\t\t\t\t\t\tvar _didIteratorError6 = false;\n\t\t\t\t\t\tvar _iteratorError6 = undefined;\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tfor (var _iterator6 = range[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t\t\t\t\t\t\t\tvar value = _step6.value;\n\n\t\t\t\t\t\t\t\t// If returned item does not have name property, it is a TextFragment.\n\t\t\t\t\t\t\t\tvar name = value.item.name || '$text';\n\n\t\t\t\t\t\t\t\tif (this.check({ name: name, inside: value.previousPosition, attributes: attribute })) {\n\t\t\t\t\t\t\t\t\t// If we found a node that is allowed to have the attribute, return true.\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t_didIteratorError6 = true;\n\t\t\t\t\t\t\t_iteratorError6 = err;\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tif (!_iteratorNormalCompletion6 && _iterator6.return) {\n\t\t\t\t\t\t\t\t\t_iterator6.return();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\tif (_didIteratorError6) {\n\t\t\t\t\t\t\t\t\tthrow _iteratorError6;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError5 = true;\n\t\t\t\t\t_iteratorError5 = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t\t\t\t\t\t\t_iterator5.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError5) {\n\t\t\t\t\t\t\tthrow _iteratorError5;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we haven't found such node, return false.\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n   * Transforms the given set ranges into a set of ranges where the given attribute is allowed (and can be applied).\n   *\n   * @param {Array.<module:engine/model/range~Range>} ranges Ranges to be validated.\n   * @param {String} attribute The name of the attribute to check.\n   * @returns {Array.<module:engine/model/range~Range>} Ranges in which the attribute is allowed.\n   */\n\n\t}, {\n\t\tkey: 'getValidRanges',\n\t\tvalue: function getValidRanges(ranges, attribute) {\n\t\t\tvar validRanges = [];\n\n\t\t\tvar _iteratorNormalCompletion7 = true;\n\t\t\tvar _didIteratorError7 = false;\n\t\t\tvar _iteratorError7 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator7 = ranges[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n\t\t\t\t\tvar range = _step7.value;\n\n\t\t\t\t\tvar last = range.start;\n\t\t\t\t\tvar from = range.start;\n\t\t\t\t\tvar to = range.end;\n\n\t\t\t\t\tvar _iteratorNormalCompletion8 = true;\n\t\t\t\t\tvar _didIteratorError8 = false;\n\t\t\t\t\tvar _iteratorError8 = undefined;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (var _iterator8 = range.getWalker()[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n\t\t\t\t\t\t\tvar value = _step8.value;\n\n\t\t\t\t\t\t\tvar name = value.item.name || '$text';\n\t\t\t\t\t\t\tvar itemPosition = _position2.default.createBefore(value.item);\n\n\t\t\t\t\t\t\tif (!this.check({ name: name, inside: itemPosition, attributes: attribute })) {\n\t\t\t\t\t\t\t\tif (!from.isEqual(last)) {\n\t\t\t\t\t\t\t\t\tvalidRanges.push(new _range2.default(from, last));\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfrom = value.nextPosition;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlast = value.nextPosition;\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t_didIteratorError8 = true;\n\t\t\t\t\t\t_iteratorError8 = err;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion8 && _iterator8.return) {\n\t\t\t\t\t\t\t\t_iterator8.return();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (_didIteratorError8) {\n\t\t\t\t\t\t\t\tthrow _iteratorError8;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (from && !from.isEqual(to)) {\n\t\t\t\t\t\tvalidRanges.push(new _range2.default(from, to));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError7 = true;\n\t\t\t\t_iteratorError7 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion7 && _iterator7.return) {\n\t\t\t\t\t\t_iterator7.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError7) {\n\t\t\t\t\t\tthrow _iteratorError7;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn validRanges;\n\t\t}\n\n\t\t/**\n   * Returns the lowest {@link module:engine/model/schema~Schema#limits limit element} containing the entire\n   * selection or the root otherwise.\n   *\n   * @param {module:engine/model/selection~Selection} selection Selection which returns the common ancestor.\n   * @returns {module:engine/model/element~Element}\n   */\n\n\t}, {\n\t\tkey: 'getLimitElement',\n\t\tvalue: function getLimitElement(selection) {\n\t\t\t// Find the common ancestor for all selection's ranges.\n\t\t\tvar element = Array.from(selection.getRanges()).reduce(function (node, range) {\n\t\t\t\tif (!node) {\n\t\t\t\t\treturn range.getCommonAncestor();\n\t\t\t\t}\n\n\t\t\t\treturn node.getCommonAncestor(range.getCommonAncestor());\n\t\t\t}, null);\n\n\t\t\twhile (!this.limits.has(element.name)) {\n\t\t\t\tif (element.parent) {\n\t\t\t\t\telement = element.parent;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn element;\n\t\t}\n\n\t\t/**\n   * Returns {@link module:engine/model/schema~SchemaItem schema item} that was registered in the schema under given name.\n   * If item has not been found, throws error.\n   *\n   * @private\n   * @param {String} itemName Name to look for in schema.\n   * @returns {module:engine/model/schema~SchemaItem} Schema item registered under given name.\n   */\n\n\t}, {\n\t\tkey: '_getItem',\n\t\tvalue: function _getItem(itemName) {\n\t\t\tif (!this.hasItem(itemName)) {\n\t\t\t\t/**\n     * Item with specified name does not exist in schema.\n     *\n     * @error model-schema-no-item\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('model-schema-no-item: Item with specified name does not exist in schema.');\n\t\t\t}\n\n\t\t\treturn this._items.get(itemName);\n\t\t}\n\n\t\t/**\n   * Normalizes a path to an entity by converting it from {@link module:engine/model/schema~SchemaPath} to an array of strings.\n   *\n   * @protected\n   * @param {module:engine/model/schema~SchemaPath} path Path to normalize.\n   * @returns {Array.<String>} Normalized path.\n   */\n\n\t}], [{\n\t\tkey: '_normalizeQueryPath',\n\t\tvalue: function _normalizeQueryPath(path) {\n\t\t\tvar normalized = [];\n\n\t\t\tif ((0, _isArray2.default)(path)) {\n\t\t\t\tvar _iteratorNormalCompletion9 = true;\n\t\t\t\tvar _didIteratorError9 = false;\n\t\t\t\tvar _iteratorError9 = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator9 = path[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n\t\t\t\t\t\tvar pathItem = _step9.value;\n\n\t\t\t\t\t\tif (pathItem instanceof _element2.default) {\n\t\t\t\t\t\t\tnormalized.push(pathItem.name);\n\t\t\t\t\t\t} else if ((0, _isString2.default)(pathItem)) {\n\t\t\t\t\t\t\tnormalized.push(pathItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError9 = true;\n\t\t\t\t\t_iteratorError9 = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion9 && _iterator9.return) {\n\t\t\t\t\t\t\t_iterator9.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError9) {\n\t\t\t\t\t\t\tthrow _iteratorError9;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (path instanceof _position2.default) {\n\t\t\t\tvar parent = path.parent;\n\n\t\t\t\twhile (parent !== null) {\n\t\t\t\t\tnormalized.push(parent.name);\n\t\t\t\t\tparent = parent.parent;\n\t\t\t\t}\n\n\t\t\t\tnormalized.reverse();\n\t\t\t} else if ((0, _isString2.default)(path)) {\n\t\t\t\tnormalized = path.split(' ');\n\t\t\t}\n\n\t\t\treturn normalized;\n\t\t}\n\t}]);\n\n\treturn Schema;\n}();\n\n/**\n * SchemaItem is a singular registry item in {@link module:engine/model/schema~Schema} that groups and holds allow/disallow rules for\n * one entity. This class is used internally in {@link module:engine/model/schema~Schema} and should not be used outside it.\n *\n * @see module:engine/model/schema~Schema\n * @protected\n */\n\n\nexports.default = Schema;\n\nvar SchemaItem = exports.SchemaItem = function () {\n\t/**\n  * Creates SchemaItem instance.\n  *\n  * @param {module:engine/model/schema~Schema} schema Schema instance that owns this item.\n  */\n\tfunction SchemaItem(schema) {\n\t\t_classCallCheck(this, SchemaItem);\n\n\t\t/**\n   * Schema instance that owns this item.\n   *\n   * @private\n   * @member {module:engine/model/schema~Schema} module:engine/model/schema~SchemaItem#_schema\n   */\n\t\tthis._schema = schema;\n\n\t\t/**\n   * Paths in which the entity, represented by this item, is allowed.\n   *\n   * @private\n   * @member {Array} module:engine/model/schema~SchemaItem#_allowed\n   */\n\t\tthis._allowed = [];\n\n\t\t/**\n   * Paths in which the entity, represented by this item, is disallowed.\n   *\n   * @private\n   * @member {Array} module:engine/model/schema~SchemaItem#_disallowed\n   */\n\t\tthis._disallowed = [];\n\n\t\t/**\n   * Attributes that are required by the entity represented by this item.\n   *\n   * @protected\n   * @member {Array} module:engine/model/schema~SchemaItem#_requiredAttributes\n   */\n\t\tthis._requiredAttributes = [];\n\t}\n\n\t/**\n  * Allows entity, represented by this item, to be in given path.\n  *\n  * @param {Array.<String>} path Path in which entity is allowed.\n  * @param {Array.<String>|String} [attributes] If set, this path will be used only for entities that have attribute(s) with this key.\n  */\n\n\n\t_createClass(SchemaItem, [{\n\t\tkey: 'allow',\n\t\tvalue: function allow(path, attributes) {\n\t\t\tthis._addPath('_allowed', path, attributes);\n\t\t}\n\n\t\t/**\n   * Disallows entity, represented by this item, to be in given path.\n   *\n   * @param {Array.<String>} path Path in which entity is disallowed.\n   * @param {Array.<String>|String} [attributes] If set, this path will be used only for entities that have an attribute(s) with this key.\n   */\n\n\t}, {\n\t\tkey: 'disallow',\n\t\tvalue: function disallow(path, attributes) {\n\t\t\tthis._addPath('_disallowed', path, attributes);\n\t\t}\n\n\t\t/**\n   * Specifies that the entity, to be valid, requires given attributes set. It is possible to register multiple\n   * different attributes set. If there are more than one attributes set required, the entity will be valid if\n   * at least one of them is fulfilled.\n   *\n   * @param {Array.<String>} attributes Attributes that has to be set on the entity to make it valid.\n   */\n\n\t}, {\n\t\tkey: 'requireAttributes',\n\t\tvalue: function requireAttributes(attributes) {\n\t\t\tthis._requiredAttributes.push(attributes);\n\t\t}\n\n\t\t/**\n   * Custom toJSON method to solve child-parent circular dependencies.\n   *\n   * @returns {Object} Clone of this object with the parent property replaced with its name.\n   */\n\n\t}, {\n\t\tkey: 'toJSON',\n\t\tvalue: function toJSON() {\n\t\t\tvar json = (0, _clone2.default)(this);\n\n\t\t\t// Due to circular references we need to remove parent reference.\n\t\t\tjson._schema = '[model.Schema]';\n\n\t\t\treturn json;\n\t\t}\n\n\t\t/**\n   * Adds path to the SchemaItem instance.\n   *\n   * @private\n   * @param {String} member Name of the array member into which the path will be added. Possible values are `_allowed` or `_disallowed`.\n   * @param {Array.<String>} path Path to add.\n   * @param {Array.<String>|String} [attributes] If set, this path will be used only for entities that have attribute(s) with this key.\n   */\n\n\t}, {\n\t\tkey: '_addPath',\n\t\tvalue: function _addPath(member, path, attributes) {\n\t\t\tpath = path.slice();\n\n\t\t\tif (!(0, _isArray2.default)(attributes)) {\n\t\t\t\tattributes = [attributes];\n\t\t\t}\n\n\t\t\tvar _iteratorNormalCompletion10 = true;\n\t\t\tvar _didIteratorError10 = false;\n\t\t\tvar _iteratorError10 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator10 = attributes[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n\t\t\t\t\tvar attribute = _step10.value;\n\n\t\t\t\t\tthis[member].push({ path: path, attribute: attribute });\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError10 = true;\n\t\t\t\t_iteratorError10 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion10 && _iterator10.return) {\n\t\t\t\t\t\t_iterator10.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError10) {\n\t\t\t\t\t\tthrow _iteratorError10;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Returns all paths of given type that were previously registered in the item.\n   *\n   * @private\n   * @param {String} type Paths' type. Possible values are `allow` or `disallow`.\n   * @param {String} [attribute] If set, only paths registered for given attribute will be returned.\n   * @returns {Array} Paths registered in the item.\n   */\n\n\t}, {\n\t\tkey: '_getPaths',\n\t\tvalue: function _getPaths(type, attribute) {\n\t\t\tvar source = type === 'allow' ? this._allowed : this._disallowed;\n\t\t\tvar paths = [];\n\n\t\t\tvar _iteratorNormalCompletion11 = true;\n\t\t\tvar _didIteratorError11 = false;\n\t\t\tvar _iteratorError11 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator11 = source[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n\t\t\t\t\tvar item = _step11.value;\n\n\t\t\t\t\tif (item.attribute === attribute) {\n\t\t\t\t\t\tpaths.push(item.path);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError11 = true;\n\t\t\t\t_iteratorError11 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion11 && _iterator11.return) {\n\t\t\t\t\t\t_iterator11.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError11) {\n\t\t\t\t\t\tthrow _iteratorError11;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn paths;\n\t\t}\n\n\t\t/**\n   * Checks whether given set of attributes fulfills required attributes of this item.\n   *\n   * @protected\n   * @see module:engine/model/schema~SchemaItem#requireAttributes\n   * @param {Array.<String>} attributesToCheck Attributes to check.\n   * @returns {Boolean} `true` if given set or attributes fulfills required attributes, `false` otherwise.\n   */\n\n\t}, {\n\t\tkey: '_checkRequiredAttributes',\n\t\tvalue: function _checkRequiredAttributes(attributesToCheck) {\n\t\t\tvar found = true;\n\n\t\t\tvar _iteratorNormalCompletion12 = true;\n\t\t\tvar _didIteratorError12 = false;\n\t\t\tvar _iteratorError12 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator12 = this._requiredAttributes[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n\t\t\t\t\tvar attributeSet = _step12.value;\n\n\t\t\t\t\tfound = true;\n\n\t\t\t\t\tvar _iteratorNormalCompletion13 = true;\n\t\t\t\t\tvar _didIteratorError13 = false;\n\t\t\t\t\tvar _iteratorError13 = undefined;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (var _iterator13 = attributeSet[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n\t\t\t\t\t\t\tvar attribute = _step13.value;\n\n\t\t\t\t\t\t\tif (attributesToCheck.indexOf(attribute) == -1) {\n\t\t\t\t\t\t\t\tfound = false;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t_didIteratorError13 = true;\n\t\t\t\t\t\t_iteratorError13 = err;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion13 && _iterator13.return) {\n\t\t\t\t\t\t\t\t_iterator13.return();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (_didIteratorError13) {\n\t\t\t\t\t\t\t\tthrow _iteratorError13;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (found) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError12 = true;\n\t\t\t\t_iteratorError12 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion12 && _iterator12.return) {\n\t\t\t\t\t\t_iterator12.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError12) {\n\t\t\t\t\t\tthrow _iteratorError12;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn found;\n\t\t}\n\n\t\t/**\n   * Checks whether this item has any registered path of given type that matches the provided path.\n   *\n   * @protected\n   * @param {String} type Paths' type. Possible values are `allow` or `disallow`.\n   * @param {Array.<String>} pathToCheck Path to check.\n   * @param {String} [attribute] If set, only paths registered for given attribute will be checked.\n   * @returns {Boolean} `true` if item has any registered matching path, `false` otherwise.\n   */\n\n\t}, {\n\t\tkey: '_hasMatchingPath',\n\t\tvalue: function _hasMatchingPath(type, pathToCheck, attribute) {\n\t\t\tvar registeredPaths = this._getPaths(type, attribute);\n\n\t\t\tvar _iteratorNormalCompletion14 = true;\n\t\t\tvar _didIteratorError14 = false;\n\t\t\tvar _iteratorError14 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator14 = registeredPaths[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n\t\t\t\t\tvar registeredPathPath = _step14.value;\n\n\t\t\t\t\tif (matchPaths(this._schema, pathToCheck, registeredPathPath)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError14 = true;\n\t\t\t\t_iteratorError14 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion14 && _iterator14.return) {\n\t\t\t\t\t\t_iterator14.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError14) {\n\t\t\t\t\t\tthrow _iteratorError14;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}]);\n\n\treturn SchemaItem;\n}();\n\n/**\n * Object with query used by {@link module:engine/model/schema~Schema} to query schema or add allow/disallow rules to schema.\n *\n * @typedef {Object} module:engine/model/schema~SchemaQuery\n * @property {String} name Entity name.\n * @property {module:engine/model/schema~SchemaPath} inside Path inside which the entity is placed.\n * @property {Array.<String>|String} [attributes] If set, the query applies only to entities that has attribute(s) with given key.\n */\n\n/**\n * Path to an entity, begins from the top-most ancestor. Can be passed in multiple formats. Internally, normalized to\n * an array of strings. If string is passed, entities from the path should be divided by ` ` (space character). If\n * an array is passed, unrecognized items are skipped. If position is passed, it is assumed that the entity is at given position.\n *\n * @typedef {String|Array.<String|module:engine/model/element~Element>|module:engine/model/position~Position}\n * module:engine/model/schema~SchemaPath\n */\n\n// Checks whether the given pathToCheck and registeredPath right ends match.\n//\n// pathToCheck: C, D\n// registeredPath: A, B, C, D\n// result: OK\n//\n// pathToCheck: A, B, C\n// registeredPath: A, B, C, D\n// result: NOK\n//\n// Note – when matching paths, element extension chains (inheritance) are taken into consideration.\n//\n// @param {Schema} schema\n// @param {Array.<String>} pathToCheck\n// @param {Array.<String>} registeredPath\n\n\nfunction matchPaths(schema, pathToCheck, registeredPath) {\n\t// Start checking from the right end of both tables.\n\tvar registeredPathIndex = registeredPath.length - 1;\n\tvar pathToCheckIndex = pathToCheck.length - 1;\n\n\t// And finish once reaching an end of the shorter table.\n\twhile (registeredPathIndex >= 0 && pathToCheckIndex >= 0) {\n\t\tvar checkName = pathToCheck[pathToCheckIndex];\n\n\t\t// Fail when checking a path which contains element which aren't even registered to the schema.\n\t\tif (!schema.hasItem(checkName)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar extChain = schema._extensionChains.get(checkName);\n\n\t\tif (extChain.includes(registeredPath[registeredPathIndex])) {\n\t\t\tregisteredPathIndex--;\n\t\t\tpathToCheckIndex--;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/model/schema.js\n// module id = 322\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */\n\n/**\n * @module engine/view/document\n */\n\nvar _selection = require('./selection');\n\nvar _selection2 = _interopRequireDefault(_selection);\n\nvar _renderer = require('./renderer');\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _domconverter = require('./domconverter');\n\nvar _domconverter2 = _interopRequireDefault(_domconverter);\n\nvar _rooteditableelement = require('./rooteditableelement');\n\nvar _rooteditableelement2 = _interopRequireDefault(_rooteditableelement);\n\nvar _filler = require('./filler');\n\nvar _uielement = require('./uielement');\n\nvar _log = require('@ckeditor/ckeditor5-utils/src/log');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _mutationobserver = require('./observer/mutationobserver');\n\nvar _mutationobserver2 = _interopRequireDefault(_mutationobserver);\n\nvar _selectionobserver = require('./observer/selectionobserver');\n\nvar _selectionobserver2 = _interopRequireDefault(_selectionobserver);\n\nvar _focusobserver = require('./observer/focusobserver');\n\nvar _focusobserver2 = _interopRequireDefault(_focusobserver);\n\nvar _keyobserver = require('./observer/keyobserver');\n\nvar _keyobserver2 = _interopRequireDefault(_keyobserver);\n\nvar _fakeselectionobserver = require('./observer/fakeselectionobserver');\n\nvar _fakeselectionobserver2 = _interopRequireDefault(_fakeselectionobserver);\n\nvar _mix = require('@ckeditor/ckeditor5-utils/src/mix');\n\nvar _mix2 = _interopRequireDefault(_mix);\n\nvar _observablemixin = require('@ckeditor/ckeditor5-utils/src/observablemixin');\n\nvar _observablemixin2 = _interopRequireDefault(_observablemixin);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Document class creates an abstract layer over the content editable area.\n * It combines the actual tree of view elements, tree of DOM elements,\n * {@link module:engine/view/domconverter~DomConverter DOM Converter}, {@link module:engine/view/renderer~Renderer renderer} and all\n * {@link module:engine/view/observer/observer~Observer observers}.\n *\n * If you want to only transform the tree of view elements to the DOM elements you can use the\n * {@link module:engine/view/domconverter~DomConverter DomConverter}.\n *\n * Note that the following observers are added by the class constructor and are always available:\n *\n * * {@link module:engine/view/observer/mutationobserver~MutationObserver},\n * * {@link module:engine/view/observer/selectionobserver~SelectionObserver},\n * * {@link module:engine/view/observer/focusobserver~FocusObserver},\n * * {@link module:engine/view/observer/keyobserver~KeyObserver},\n * * {@link module:engine/view/observer/fakeselectionobserver~FakeSelectionObserver}.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nvar Document = function () {\n\t/**\n  * Creates a Document instance.\n  */\n\tfunction Document() {\n\t\t_classCallCheck(this, Document);\n\n\t\t/**\n   * Roots of the DOM tree. Map on the `HTMLElement`s with roots names as keys.\n   *\n   * @readonly\n   * @member {Map} module:engine/view/document~Document#domRoots\n   */\n\t\tthis.domRoots = new Map();\n\n\t\t/**\n   * Selection done on this document.\n   *\n   * @readonly\n   * @member {module:engine/view/selection~Selection} module:engine/view/document~Document#selection\n   */\n\t\tthis.selection = new _selection2.default();\n\n\t\t/**\n   * Instance of the {@link module:engine/view/domconverter~DomConverter domConverter} use by\n   * {@link module:engine/view/document~Document#renderer renderer}\n   * and {@link module:engine/view/observer/observer~Observer observers}.\n   *\n   * @readonly\n   * @member {module:engine/view/domconverter~DomConverter} module:engine/view/document~Document#domConverter\n   */\n\t\tthis.domConverter = new _domconverter2.default();\n\n\t\t/**\n   * Roots of the view tree. Map of the {module:engine/view/element~Element view elements} with roots names as keys.\n   *\n   * @readonly\n   * @member {Map} module:engine/view/document~Document#roots\n   */\n\t\tthis.roots = new Map();\n\n\t\t/**\n   * Defines whether document is in read-only mode.\n   *\n   * When document is read-ony then all roots are read-only as well and caret placed inside this root is hidden.\n   *\n   * @observable\n   * @member {Boolean} #isReadOnly\n   */\n\t\tthis.set('isReadOnly', false);\n\n\t\t/**\n   * True if document is focused.\n   *\n   * This property is updated by the {@link module:engine/view/observer/focusobserver~FocusObserver}.\n   * If the {@link module:engine/view/observer/focusobserver~FocusObserver} is disabled this property will not change.\n   *\n   * @readonly\n   * @observable\n   * @member {Boolean} module:engine/view/document~Document#isFocused\n   */\n\t\tthis.set('isFocused', false);\n\n\t\t/**\n   * Instance of the {@link module:engine/view/document~Document#renderer renderer}.\n   *\n   * @readonly\n   * @member {module:engine/view/renderer~Renderer} module:engine/view/document~Document#renderer\n   */\n\t\tthis.renderer = new _renderer2.default(this.domConverter, this.selection);\n\t\tthis.renderer.bind('isFocused').to(this);\n\n\t\t/**\n   * Map of registered {@link module:engine/view/observer/observer~Observer observers}.\n   *\n   * @private\n   * @member {Map.<Function, module:engine/view/observer/observer~Observer>} module:engine/view/document~Document#_observers\n   */\n\t\tthis._observers = new Map();\n\n\t\t// Add default observers.\n\t\tthis.addObserver(_mutationobserver2.default);\n\t\tthis.addObserver(_selectionobserver2.default);\n\t\tthis.addObserver(_focusobserver2.default);\n\t\tthis.addObserver(_keyobserver2.default);\n\t\tthis.addObserver(_fakeselectionobserver2.default);\n\n\t\t(0, _filler.injectQuirksHandling)(this);\n\t\t(0, _uielement.injectUiElementHandling)(this);\n\n\t\tthis.decorate('render');\n\t}\n\n\t/**\n  * Creates observer of the given type if not yet created, {@link module:engine/view/observer/observer~Observer#enable enables} it\n  * and {@link module:engine/view/observer/observer~Observer#observe attaches} to all existing and future\n  * {@link module:engine/view/document~Document#domRoots DOM roots}.\n  *\n  * Note: Observers are recognized by their constructor (classes). A single observer will be instantiated and used only\n  * when registered for the first time. This means that features and other components can register a single observer\n  * multiple times without caring whether it has been already added or not.\n  *\n  * @param {Function} Observer The constructor of an observer to add.\n  * Should create an instance inheriting from {@link module:engine/view/observer/observer~Observer}.\n  * @returns {module:engine/view/observer/observer~Observer} Added observer instance.\n  */\n\n\n\t_createClass(Document, [{\n\t\tkey: 'addObserver',\n\t\tvalue: function addObserver(Observer) {\n\t\t\tvar observer = this._observers.get(Observer);\n\n\t\t\tif (observer) {\n\t\t\t\treturn observer;\n\t\t\t}\n\n\t\t\tobserver = new Observer(this);\n\n\t\t\tthis._observers.set(Observer, observer);\n\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = this.domRoots[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar _ref = _step.value;\n\n\t\t\t\t\tvar _ref2 = _slicedToArray(_ref, 2);\n\n\t\t\t\t\tvar name = _ref2[0];\n\t\t\t\t\tvar domElement = _ref2[1];\n\n\t\t\t\t\tobserver.observe(domElement, name);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tobserver.enable();\n\n\t\t\treturn observer;\n\t\t}\n\n\t\t/**\n   * Returns observer of the given type or `undefined` if such observer has not been added yet.\n   *\n   * @param {Function} Observer The constructor of an observer to get.\n   * @returns {module:engine/view/observer/observer~Observer|undefined} Observer instance or undefined.\n   */\n\n\t}, {\n\t\tkey: 'getObserver',\n\t\tvalue: function getObserver(Observer) {\n\t\t\treturn this._observers.get(Observer);\n\t\t}\n\n\t\t/**\n   * Creates a {@link module:engine/view/document~Document#roots view root element}.\n   *\n   * If the DOM element is passed as a first parameter it will be automatically\n   * {@link module:engine/view/document~Document#attachDomRoot attached}:\n   *\n   *\t\tdocument.createRoot( document.querySelector( 'div#editor' ) ); // Will call document.attachDomRoot.\n   *\n   * However, if the string is passed, then only the view element will be created and the DOM element have to be\n   * attached separately:\n   *\n   *\t\tdocument.createRoot( 'body' );\n   *\t\tdocument.attachDomRoot( document.querySelector( 'body#editor' ) );\n   *\n   * In both cases, {@link module:engine/view/rooteditableelement~RootEditableElement#rootName element name} is always\n   * transformed to lower\n   * case.\n   *\n   * @param {Element|String} domRoot DOM root element or the tag name of view root element if the DOM element will be\n   * attached later.\n   * @param {String} [name='main'] Name of the root.\n   * @returns {module:engine/view/rooteditableelement~RootEditableElement} The created view root element.\n   */\n\n\t}, {\n\t\tkey: 'createRoot',\n\t\tvalue: function createRoot(domRoot) {\n\t\t\tvar _this = this;\n\n\t\t\tvar name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'main';\n\n\t\t\tvar rootTag = typeof domRoot == 'string' ? domRoot : domRoot.tagName;\n\n\t\t\tvar viewRoot = new _rooteditableelement2.default(rootTag.toLowerCase(), name);\n\t\t\tviewRoot.document = this;\n\n\t\t\tthis.roots.set(name, viewRoot);\n\n\t\t\t// Mark changed nodes in the renderer.\n\t\t\tviewRoot.on('change:children', function (evt, node) {\n\t\t\t\treturn _this.renderer.markToSync('children', node);\n\t\t\t});\n\t\t\tviewRoot.on('change:attributes', function (evt, node) {\n\t\t\t\treturn _this.renderer.markToSync('attributes', node);\n\t\t\t});\n\t\t\tviewRoot.on('change:text', function (evt, node) {\n\t\t\t\treturn _this.renderer.markToSync('text', node);\n\t\t\t});\n\n\t\t\tif (this.domConverter.isElement(domRoot)) {\n\t\t\t\tthis.attachDomRoot(domRoot, name);\n\t\t\t}\n\n\t\t\treturn viewRoot;\n\t\t}\n\n\t\t/**\n   * Attaches DOM root element to the view element and enable all observers on that element. This method also\n   * {@link module:engine/view/renderer~Renderer#markToSync mark element} to be synchronized with the view what means that all child\n   * nodes will be removed and replaced with content of the view root.\n   *\n   * Note that {@link module:engine/view/document~Document#createRoot} will call this method automatically if the DOM element is\n   * passed to it.\n   *\n   * @param {Element|String} domRoot DOM root element.\n   * @param {String} [name='main'] Name of the root.\n   */\n\n\t}, {\n\t\tkey: 'attachDomRoot',\n\t\tvalue: function attachDomRoot(domRoot) {\n\t\t\tvar name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'main';\n\n\t\t\tvar viewRoot = this.getRoot(name);\n\n\t\t\tthis.domRoots.set(name, domRoot);\n\n\t\t\tthis.domConverter.bindElements(domRoot, viewRoot);\n\n\t\t\tthis.renderer.markToSync('children', viewRoot);\n\t\t\tthis.renderer.domDocuments.add(domRoot.ownerDocument);\n\n\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\tvar _didIteratorError2 = false;\n\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator2 = this._observers.values()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\tvar observer = _step2.value;\n\n\t\t\t\t\tobserver.observe(domRoot, name);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t_iteratorError2 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Gets a {@link module:engine/view/document~Document#roots view root element} with the specified name. If the name is not\n   * specific \"main\" root is returned.\n   *\n   * @param {String} [name='main'] Name of the root.\n   * @returns {module:engine/view/rooteditableelement~RootEditableElement} The view root element with the specified name.\n   */\n\n\t}, {\n\t\tkey: 'getRoot',\n\t\tvalue: function getRoot() {\n\t\t\tvar name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'main';\n\n\t\t\treturn this.roots.get(name);\n\t\t}\n\n\t\t/**\n   * Gets DOM root element.\n   *\n   * @param {String} [name='main']  Name of the root.\n   * @returns {Element} DOM root element instance.\n   */\n\n\t}, {\n\t\tkey: 'getDomRoot',\n\t\tvalue: function getDomRoot() {\n\t\t\tvar name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'main';\n\n\t\t\treturn this.domRoots.get(name);\n\t\t}\n\n\t\t/**\n   * Renders all changes. In order to avoid triggering the observers (e.g. mutations) all observers are disabled\n   * before rendering and re-enabled after that.\n   *\n   * @fires render\n   */\n\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\tthis.disableObservers();\n\t\t\tthis.renderer.render();\n\t\t\tthis.enableObservers();\n\t\t}\n\n\t\t/**\n   * Focuses document. It will focus {@link module:engine/view/editableelement~EditableElement EditableElement} that is currently having\n   * selection inside.\n   */\n\n\t}, {\n\t\tkey: 'focus',\n\t\tvalue: function focus() {\n\t\t\tif (!this.isFocused) {\n\t\t\t\tvar editable = this.selection.editableElement;\n\n\t\t\t\tif (editable) {\n\t\t\t\t\tthis.domConverter.focus(editable);\n\t\t\t\t\tthis.render();\n\t\t\t\t} else {\n\t\t\t\t\t/**\n      * Before focusing view document, selection should be placed inside one of the view's editables.\n      * Normally its selection will be converted from model document (which have default selection), but\n      * when using view document on its own, we need to manually place selection before focusing it.\n      *\n      * @error view-focus-no-selection\n      */\n\t\t\t\t\t_log2.default.warn('view-focus-no-selection: There is no selection in any editable to focus.');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Disables all added observers.\n   */\n\n\t}, {\n\t\tkey: 'disableObservers',\n\t\tvalue: function disableObservers() {\n\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\tvar _didIteratorError3 = false;\n\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator3 = this._observers.values()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\tvar observer = _step3.value;\n\n\t\t\t\t\tobserver.disable();\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t_iteratorError3 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Enables all added observers.\n   */\n\n\t}, {\n\t\tkey: 'enableObservers',\n\t\tvalue: function enableObservers() {\n\t\t\tvar _iteratorNormalCompletion4 = true;\n\t\t\tvar _didIteratorError4 = false;\n\t\t\tvar _iteratorError4 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator4 = this._observers.values()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\t\t\tvar observer = _step4.value;\n\n\t\t\t\t\tobserver.enable();\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError4 = true;\n\t\t\t\t_iteratorError4 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t\t\t_iterator4.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError4) {\n\t\t\t\t\t\tthrow _iteratorError4;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Destroys all observers created by view `Document`.\n   */\n\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {\n\t\t\tvar _iteratorNormalCompletion5 = true;\n\t\t\tvar _didIteratorError5 = false;\n\t\t\tvar _iteratorError5 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator5 = this._observers.values()[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t\t\t\t\tvar observer = _step5.value;\n\n\t\t\t\t\tobserver.destroy();\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError5 = true;\n\t\t\t\t_iteratorError5 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t\t\t\t\t\t_iterator5.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError5) {\n\t\t\t\t\t\tthrow _iteratorError5;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn Document;\n}();\n\nexports.default = Document;\n\n\n(0, _mix2.default)(Document, _observablemixin2.default);\n\n/**\n * Enum representing type of the change.\n *\n * Possible values:\n *\n * * `children` - for child list changes,\n * * `attributes` - for element attributes changes,\n * * `text` - for text nodes changes.\n *\n * @typedef {String} module:engine/view/document~ChangeType\n */\n\n/**\n * Fired when {@link #render render} method is called. Actual rendering is executed as a listener to\n * this event with default priority. This way other listeners can be used to run code before or after rendering.\n *\n * @event render\n */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/view/document.js\n// module id = 323\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _domeventobserver = require('./domeventobserver');\n\nvar _domeventobserver2 = _interopRequireDefault(_domeventobserver);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/view/observer/clickobserver\n */\n\n/**\n * {@link module:engine/view/document~Document#event:click Click} event observer.\n *\n * Note that this observer is not available by default. To make it available it needs to be added to\n * {@link module:engine/view/document~Document}\n * by a {@link module:engine/view/document~Document#addObserver} method.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nvar ClickObserver = function (_DomEventObserver) {\n  _inherits(ClickObserver, _DomEventObserver);\n\n  function ClickObserver(document) {\n    _classCallCheck(this, ClickObserver);\n\n    var _this = _possibleConstructorReturn(this, (ClickObserver.__proto__ || Object.getPrototypeOf(ClickObserver)).call(this, document));\n\n    _this.domEventType = 'click';\n    return _this;\n  }\n\n  _createClass(ClickObserver, [{\n    key: 'onDomEvent',\n    value: function onDomEvent(domEvent) {\n      this.fire(domEvent.type, domEvent);\n    }\n  }]);\n\n  return ClickObserver;\n}(_domeventobserver2.default);\n\n/**\n * Fired when one of the editables has been clicked.\n *\n * Introduced by {@link module:engine/view/observer/clickobserver~ClickObserver}.\n *\n * Note that this event is not available by default. To make it available\n * {@link module:engine/view/observer/clickobserver~ClickObserver} needs to be added\n * to {@link module:engine/view/document~Document} by a {@link module:engine/view/document~Document#addObserver} method.\n *\n * @see module:engine/view/observer/clickobserver~ClickObserver\n * @event module:engine/view/document~Document#event:click\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n\nexports.default = ClickObserver;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/view/observer/clickobserver.js\n// module id = 324\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _observer = require('./observer');\n\nvar _observer2 = _interopRequireDefault(_observer);\n\nvar _selection = require('../selection');\n\nvar _selection2 = _interopRequireDefault(_selection);\n\nvar _keyboard = require('@ckeditor/ckeditor5-utils/src/keyboard');\n\nvar _debounce = require('@ckeditor/ckeditor5-utils/src/lib/lodash/debounce');\n\nvar _debounce2 = _interopRequireDefault(_debounce);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/view/observer/fakeselectionobserver\n */\n\n/**\n * Fake selection observer class. If view selection is fake it is placed in dummy DOM container. This observer listens\n * on {@link module:engine/view/document~Document#event:keydown keydown} events and handles moving fake view selection to the correct place\n * if arrow keys are pressed.\n * Fires {@link module:engine/view/document~Document#event:selectionChange selectionChange event} simulating natural behaviour of\n * {@link module:engine/view/observer/selectionobserver~SelectionObserver SelectionObserver}.\n *\n * @extends module:engine/view/observer/observer~Observer.Observer\n */\nvar FakeSelectionObserver = function (_Observer) {\n\t_inherits(FakeSelectionObserver, _Observer);\n\n\t/**\n  * Creates new FakeSelectionObserver instance.\n  *\n  * @param {module:engine/view/document~Document} document\n  */\n\tfunction FakeSelectionObserver(document) {\n\t\t_classCallCheck(this, FakeSelectionObserver);\n\n\t\t/**\n   * Fires debounced event `selectionChangeDone`. It uses `lodash#debounce` method to delay function call.\n   *\n   * @private\n   * @param {Object} data Selection change data.\n   * @method #_fireSelectionChangeDoneDebounced\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (FakeSelectionObserver.__proto__ || Object.getPrototypeOf(FakeSelectionObserver)).call(this, document));\n\n\t\t_this._fireSelectionChangeDoneDebounced = (0, _debounce2.default)(function (data) {\n\t\t\treturn _this.document.fire('selectionChangeDone', data);\n\t\t}, 200);\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(FakeSelectionObserver, [{\n\t\tkey: 'observe',\n\t\tvalue: function observe() {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar document = this.document;\n\n\t\t\tdocument.on('keydown', function (eventInfo, data) {\n\t\t\t\tvar selection = document.selection;\n\n\t\t\t\tif (selection.isFake && _isArrowKeyCode(data.keyCode) && _this2.isEnabled) {\n\t\t\t\t\t// Prevents default key down handling - no selection change will occur.\n\t\t\t\t\tdata.preventDefault();\n\n\t\t\t\t\t_this2._handleSelectionMove(data.keyCode);\n\t\t\t\t}\n\t\t\t}, { priority: 'lowest' });\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {\n\t\t\t_get(FakeSelectionObserver.prototype.__proto__ || Object.getPrototypeOf(FakeSelectionObserver.prototype), 'destroy', this).call(this);\n\n\t\t\tthis._fireSelectionChangeDoneDebounced.cancel();\n\t\t}\n\n\t\t/**\n   * Handles collapsing view selection according to given key code. If left or up key is provided - new selection will be\n   * collapsed to left. If right or down key is pressed - new selection will be collapsed to right.\n   *\n   * This method fires {@link module:engine/view/document~Document#event:selectionChange} and\n   * {@link module:engine/view/document~Document#event:selectionChangeDone} events imitating behaviour of\n   * {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\n   *\n   * @private\n   * @param {Number} keyCode\n   * @fires module:engine/view/document~Document#event:selectionChange\n   * @fires module:engine/view/document~Document#event:selectionChangeDone\n   */\n\n\t}, {\n\t\tkey: '_handleSelectionMove',\n\t\tvalue: function _handleSelectionMove(keyCode) {\n\t\t\tvar selection = this.document.selection;\n\t\t\tvar newSelection = _selection2.default.createFromSelection(selection);\n\t\t\tnewSelection.setFake(false);\n\n\t\t\t// Left or up arrow pressed - move selection to start.\n\t\t\tif (keyCode == _keyboard.keyCodes.arrowleft || keyCode == _keyboard.keyCodes.arrowup) {\n\t\t\t\tnewSelection.collapseToStart();\n\t\t\t}\n\n\t\t\t// Right or down arrow pressed - move selection to end.\n\t\t\tif (keyCode == _keyboard.keyCodes.arrowright || keyCode == _keyboard.keyCodes.arrowdown) {\n\t\t\t\tnewSelection.collapseToEnd();\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\toldSelection: selection,\n\t\t\t\tnewSelection: newSelection,\n\t\t\t\tdomSelection: null\n\t\t\t};\n\n\t\t\t// Fire dummy selection change event.\n\t\t\tthis.document.fire('selectionChange', data);\n\n\t\t\t// Call` #_fireSelectionChangeDoneDebounced` every time when `selectionChange` event is fired.\n\t\t\t// This function is debounced what means that `selectionChangeDone` event will be fired only when\n\t\t\t// defined int the function time will elapse since the last time the function was called.\n\t\t\t// So `selectionChangeDone` will be fired when selection will stop changing.\n\t\t\tthis._fireSelectionChangeDoneDebounced(data);\n\t\t}\n\t}]);\n\n\treturn FakeSelectionObserver;\n}(_observer2.default);\n\n// Checks if one of the arrow keys is pressed.\n//\n// @private\n// @param {Number} keyCode\n// @returns {Boolean}\n\n\nexports.default = FakeSelectionObserver;\nfunction _isArrowKeyCode(keyCode) {\n\treturn keyCode == _keyboard.keyCodes.arrowright || keyCode == _keyboard.keyCodes.arrowleft || keyCode == _keyboard.keyCodes.arrowup || keyCode == _keyboard.keyCodes.arrowdown;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/view/observer/fakeselectionobserver.js\n// module id = 325\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _domeventobserver = require('./domeventobserver');\n\nvar _domeventobserver2 = _interopRequireDefault(_domeventobserver);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/view/observer/focusobserver\n */\n\n/* globals setTimeout, clearTimeout */\n\n/**\n * {@link module:engine/view/document~Document#event:focus Focus}\n * and {@link module:engine/view/document~Document#event:blur blur} events observer.\n * Focus observer handle also {@link module:engine/view/rooteditableelement~RootEditableElement#isFocused isFocused} property of the\n * {@link module:engine/view/rooteditableelement~RootEditableElement root elements}.\n *\n * Note that this observer is attached by the {@link module:engine/view/document~Document} and is available by default.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nvar FocusObserver = function (_DomEventObserver) {\n\t_inherits(FocusObserver, _DomEventObserver);\n\n\tfunction FocusObserver(document) {\n\t\t_classCallCheck(this, FocusObserver);\n\n\t\tvar _this = _possibleConstructorReturn(this, (FocusObserver.__proto__ || Object.getPrototypeOf(FocusObserver)).call(this, document));\n\n\t\t_this.domEventType = ['focus', 'blur'];\n\t\t_this.useCapture = true;\n\n\t\tdocument.on('focus', function () {\n\t\t\tdocument.isFocused = true;\n\n\t\t\t// Unfortunately native `selectionchange` event is fired asynchronously.\n\t\t\t// We need to wait until `SelectionObserver` handle the event and then render. Otherwise rendering will\n\t\t\t// overwrite new DOM selection with selection from the view.\n\t\t\t// See https://github.com/ckeditor/ckeditor5-engine/issues/795 for more details.\n\t\t\t_this._renderTimeoutId = setTimeout(function () {\n\t\t\t\treturn document.render();\n\t\t\t}, 0);\n\t\t});\n\n\t\tdocument.on('blur', function (evt, data) {\n\t\t\tvar selectedEditable = document.selection.editableElement;\n\n\t\t\tif (selectedEditable === null || selectedEditable === data.target) {\n\t\t\t\tdocument.isFocused = false;\n\n\t\t\t\t// Re-render the document to update view elements.\n\t\t\t\tdocument.render();\n\t\t\t}\n\t\t});\n\n\t\t/**\n   * Identifier of the timeout currently used by focus listener to delay rendering execution.\n   *\n   * @private\n   * @member {Number} #_renderTimeoutId\n   */\n\t\treturn _this;\n\t}\n\n\t_createClass(FocusObserver, [{\n\t\tkey: 'onDomEvent',\n\t\tvalue: function onDomEvent(domEvent) {\n\t\t\tthis.fire(domEvent.type, domEvent);\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {\n\t\t\tif (this._renderTimeoutId) {\n\t\t\t\tclearTimeout(this._renderTimeoutId);\n\t\t\t}\n\n\t\t\t_get(FocusObserver.prototype.__proto__ || Object.getPrototypeOf(FocusObserver.prototype), 'destroy', this).call(this);\n\t\t}\n\t}]);\n\n\treturn FocusObserver;\n}(_domeventobserver2.default);\n\n/**\n * Fired when one of the editables gets focus.\n *\n * Introduced by {@link module:engine/view/observer/focusobserver~FocusObserver}.\n *\n * Note that because {@link module:engine/view/observer/focusobserver~FocusObserver} is attached by the\n * {@link module:engine/view/document~Document}\n * this event is available by default.\n *\n * @see module:engine/view/observer/focusobserver~FocusObserver\n * @event module:engine/view/document~Document#event:focus\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n/**\n * Fired when one of the editables loses focus.\n *\n * Introduced by {@link module:engine/view/observer/focusobserver~FocusObserver}.\n *\n * Note that because {@link module:engine/view/observer/focusobserver~FocusObserver} is attached by the\n * {@link module:engine/view/document~Document}\n * this event is available by default.\n *\n * @see module:engine/view/observer/focusobserver~FocusObserver\n * @event module:engine/view/document~Document#event:blur\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n\nexports.default = FocusObserver;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/view/observer/focusobserver.js\n// module id = 326\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _domeventobserver = require('./domeventobserver');\n\nvar _domeventobserver2 = _interopRequireDefault(_domeventobserver);\n\nvar _keyboard = require('@ckeditor/ckeditor5-utils/src/keyboard');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/view/observer/keyobserver\n */\n\n/**\n * {@link module:engine/view/document~Document#event:keydown Key down} event observer.\n *\n * Note that this observer is attached by the {@link module:engine/view/document~Document} and is available by default.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nvar KeyObserver = function (_DomEventObserver) {\n  _inherits(KeyObserver, _DomEventObserver);\n\n  function KeyObserver(document) {\n    _classCallCheck(this, KeyObserver);\n\n    var _this = _possibleConstructorReturn(this, (KeyObserver.__proto__ || Object.getPrototypeOf(KeyObserver)).call(this, document));\n\n    _this.domEventType = ['keydown', 'keyup'];\n    return _this;\n  }\n\n  _createClass(KeyObserver, [{\n    key: 'onDomEvent',\n    value: function onDomEvent(domEvt) {\n      this.fire(domEvt.type, domEvt, {\n        keyCode: domEvt.keyCode,\n\n        altKey: domEvt.altKey,\n        ctrlKey: domEvt.ctrlKey || domEvt.metaKey,\n        shiftKey: domEvt.shiftKey,\n\n        get keystroke() {\n          return (0, _keyboard.getCode)(this);\n        }\n      });\n    }\n  }]);\n\n  return KeyObserver;\n}(_domeventobserver2.default);\n\n/**\n * Fired when a key has been pressed.\n *\n * Introduced by {@link module:engine/view/observer/keyobserver~KeyObserver}.\n *\n * Note that because {@link module:engine/view/observer/keyobserver~KeyObserver} is attached by the\n * {@link module:engine/view/document~Document}\n * this event is available by default.\n *\n * @see module:engine/view/observer/keyobserver~KeyObserver\n * @event module:engine/view/document~Document#event:keydown\n * @param {module:engine/view/observer/keyobserver~KeyEventData} keyEventData\n */\n\n/**\n * Fired when a key has been released.\n *\n * Introduced by {@link module:engine/view/observer/keyobserver~KeyObserver}.\n *\n * Note that because {@link module:engine/view/observer/keyobserver~KeyObserver} is attached by the\n * {@link module:engine/view/document~Document}\n * this event is available by default.\n *\n * @see module:engine/view/observer/keyobserver~KeyObserver\n * @event module:engine/view/document~Document#event:keyup\n * @param {module:engine/view/observer/keyobserver~KeyEventData} keyEventData\n */\n\n/**\n * The value of both events - {@link module:engine/view/document~Document#event:keydown} and\n * {@link module:engine/view/document~Document#event:keyup}.\n *\n * @class module:engine/view/observer/keyobserver~KeyEventData\n * @extends module:engine/view/observer/domeventdata~DomEventData\n * @implements module:utils/keyboard~KeystrokeInfo\n */\n\n/**\n * Code of the whole keystroke. See {@link module:utils/keyboard~getCode}.\n *\n * @readonly\n * @member {Number} module:engine/view/observer/keyobserver~KeyEventData#keystroke\n */\n\n\nexports.default = KeyObserver;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/view/observer/keyobserver.js\n// module id = 327\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _domeventobserver = require('./domeventobserver');\n\nvar _domeventobserver2 = _interopRequireDefault(_domeventobserver);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/view/observer/mouseobserver\n */\n\n/**\n * Mouse events observer.\n *\n * Note that this observer is not available by default. To make it available it needs to be added to\n * {@link module:engine/view/document~Document}\n * by {@link module:engine/view/document~Document#addObserver} method.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nvar MouseObserver = function (_DomEventObserver) {\n  _inherits(MouseObserver, _DomEventObserver);\n\n  function MouseObserver(document) {\n    _classCallCheck(this, MouseObserver);\n\n    var _this = _possibleConstructorReturn(this, (MouseObserver.__proto__ || Object.getPrototypeOf(MouseObserver)).call(this, document));\n\n    _this.domEventType = 'mousedown';\n    return _this;\n  }\n\n  _createClass(MouseObserver, [{\n    key: 'onDomEvent',\n    value: function onDomEvent(domEvent) {\n      this.fire(domEvent.type, domEvent);\n    }\n  }]);\n\n  return MouseObserver;\n}(_domeventobserver2.default);\n\n/**\n * Fired when mouse button is pressed down on one of the editables.\n *\n * Introduced by {@link module:engine/view/observer/mouseobserver~MouseObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:engine/view/observer/mouseobserver~MouseObserver}\n * needs to be added to {@link module:engine/view/document~Document} by a {@link module:engine/view/document~Document#addObserver} method.\n *\n * @see module:engine/view/observer/mouseobserver~MouseObserver\n * @event module:engine/view/document~Document#event:mousedown\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n\nexports.default = MouseObserver;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/view/observer/mouseobserver.js\n// module id = 328\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _observer = require('./observer');\n\nvar _observer2 = _interopRequireDefault(_observer);\n\nvar _mutationobserver = require('./mutationobserver');\n\nvar _mutationobserver2 = _interopRequireDefault(_mutationobserver);\n\nvar _log = require('@ckeditor/ckeditor5-utils/src/log');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _debounce = require('@ckeditor/ckeditor5-utils/src/lib/lodash/debounce');\n\nvar _debounce2 = _interopRequireDefault(_debounce);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module engine/view/observer/selectionobserver\n */\n\n/* global setInterval, clearInterval */\n\n/**\n * Selection observer class observes selection changes in the document. If selection changes on the document this\n * observer checks if there are any mutations and if DOM selection is different than the\n * {@link module:engine/view/document~Document#selection view selection}. Selection observer fires\n * {@link module:engine/view/document~Document#event:selectionChange} event only if selection change was the only change in the document\n * and DOM selection is different then the view selection.\n *\n * Note that this observer is attached by the {@link module:engine/view/document~Document} and is available by default.\n *\n * @see module:engine/view/observer/mutationobserver~MutationObserver\n * @extends module:engine/view/observer/observer~Observer\n */\nvar SelectionObserver = function (_Observer) {\n\t_inherits(SelectionObserver, _Observer);\n\n\tfunction SelectionObserver(document) {\n\t\t_classCallCheck(this, SelectionObserver);\n\n\t\t/**\n   * Instance of the mutation observer. Selection observer calls\n   * {@link module:engine/view/observer/mutationobserver~MutationObserver#flush} to ensure that the mutations will be handled\n   * before the {@link module:engine/view/document~Document#event:selectionChange} event is fired.\n   *\n   * @readonly\n   * @member {module:engine/view/observer/mutationobserver~MutationObserver}\n   * module:engine/view/observer/selectionobserver~SelectionObserver#mutationObserver\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (SelectionObserver.__proto__ || Object.getPrototypeOf(SelectionObserver)).call(this, document));\n\n\t\t_this.mutationObserver = document.getObserver(_mutationobserver2.default);\n\n\t\t/**\n   * Reference to the {@link module:engine/view/document~Document} object.\n   *\n   * @readonly\n   * @member {module:engine/view/document~Document} module:engine/view/observer/selectionobserver~SelectionObserver#document\n   */\n\t\t_this.document = document;\n\n\t\t/**\n   * Reference to the view {@link module:engine/view/selection~Selection} object used to compare new selection with it.\n   *\n   * @readonly\n   * @member {module:engine/view/selection~Selection} module:engine/view/observer/selectionobserver~SelectionObserver#selection\n   */\n\t\t_this.selection = document.selection;\n\n\t\t/* eslint-disable max-len */\n\t\t/**\n   * Reference to the {@link module:engine/view/document~Document#domConverter}.\n   *\n   * @readonly\n   * @member {module:engine/view/domconverter~DomConverter} module:engine/view/observer/selectionobserver~SelectionObserver#domConverter\n   */\n\t\t/* eslint-enable max-len */\n\t\t_this.domConverter = document.domConverter;\n\n\t\t/**\n   * Set of documents which have added \"selectionchange\" listener to avoid adding listener twice to the same\n   * document.\n   *\n   * @private\n   * @member {WeakSet.<Document>} module:engine/view/observer/selectionobserver~SelectionObserver#_documents\n   */\n\t\t_this._documents = new WeakSet();\n\n\t\t/**\n   * Fires debounced event `selectionChangeDone`. It uses `lodash#debounce` method to delay function call.\n   *\n   * @private\n   * @param {Object} data Selection change data.\n   * @method #_fireSelectionChangeDoneDebounced\n   */\n\t\t_this._fireSelectionChangeDoneDebounced = (0, _debounce2.default)(function (data) {\n\t\t\treturn _this.document.fire('selectionChangeDone', data);\n\t\t}, 200);\n\n\t\t_this._clearInfiniteLoopInterval = setInterval(function () {\n\t\t\treturn _this._clearInfiniteLoop();\n\t\t}, 1000);\n\n\t\t/**\n   * Private property to check if the code does not enter infinite loop.\n   *\n   * @private\n   * @member {Number} module:engine/view/observer/selectionobserver~SelectionObserver#_loopbackCounter\n   */\n\t\t_this._loopbackCounter = 0;\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(SelectionObserver, [{\n\t\tkey: 'observe',\n\t\tvalue: function observe(domElement) {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar domDocument = domElement.ownerDocument;\n\n\t\t\t// Add listener once per each document.\n\t\t\tif (this._documents.has(domDocument)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.listenTo(domDocument, 'selectionchange', function () {\n\t\t\t\t_this2._handleSelectionChange(domDocument);\n\t\t\t});\n\n\t\t\tthis._documents.add(domDocument);\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {\n\t\t\t_get(SelectionObserver.prototype.__proto__ || Object.getPrototypeOf(SelectionObserver.prototype), 'destroy', this).call(this);\n\n\t\t\tclearInterval(this._clearInfiniteLoopInterval);\n\t\t\tthis._fireSelectionChangeDoneDebounced.cancel();\n\t\t}\n\n\t\t/**\n   * Selection change listener. {@link module:engine/view/observer/mutationobserver~MutationObserver#flush Flush} mutations, check if\n   * selection changes and fires {@link module:engine/view/document~Document#event:selectionChange} event on every change\n   * and {@link module:engine/view/document~Document#event:selectionChangeDone} when selection stop changing.\n   *\n   * @private\n   * @param {Document} domDocument DOM document.\n   */\n\n\t}, {\n\t\tkey: '_handleSelectionChange',\n\t\tvalue: function _handleSelectionChange(domDocument) {\n\t\t\t// Selection is handled when document is not focused but is read-only. This is because in read-only\n\t\t\t// mode contenteditable is set as false and editor won't receive focus but we still need to know\n\t\t\t// selection position.\n\t\t\tif (!this.isEnabled || !this.document.isFocused && !this.document.isReadOnly) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Ensure the mutation event will be before selection event on all browsers.\n\t\t\tthis.mutationObserver.flush();\n\n\t\t\t// If there were mutations then the view will be re-rendered by the mutation observer and selection\n\t\t\t// will be updated, so selections will equal and event will not be fired, as expected.\n\t\t\tvar domSelection = domDocument.defaultView.getSelection();\n\t\t\tvar newViewSelection = this.domConverter.domSelectionToView(domSelection);\n\n\t\t\tif (this.selection.isEqual(newViewSelection) && this.domConverter.isDomSelectionCorrect(domSelection)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Ensure we are not in the infinite loop (#400).\n\t\t\t// This counter is reset each second. 60 selection changes in 1 second is enough high number\n\t\t\t// to be very difficult (impossible) to achieve using just keyboard keys (during normal editor use).\n\t\t\tif (++this._loopbackCounter > 60) {\n\t\t\t\t/**\n     * Selection change observer detected an infinite rendering loop.\n     * Most probably you try to put the selection in the position which is not allowed\n     * by the browser and browser fixes it automatically what causes `selectionchange` event on\n     * which a loopback through a model tries to re-render the wrong selection and again.\n     *\n     * @error selectionchange-infinite-loop\n     */\n\t\t\t\t_log2.default.warn('selectionchange-infinite-loop: Selection change observer detected an infinite rendering loop.');\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.selection.isSimilar(newViewSelection)) {\n\t\t\t\t// If selection was equal and we are at this point of algorithm, it means that it was incorrect.\n\t\t\t\t// Just re-render it, no need to fire any events, etc.\n\t\t\t\tthis.document.render();\n\t\t\t} else {\n\t\t\t\tvar data = {\n\t\t\t\t\toldSelection: this.selection,\n\t\t\t\t\tnewSelection: newViewSelection,\n\t\t\t\t\tdomSelection: domSelection\n\t\t\t\t};\n\n\t\t\t\t// Prepare data for new selection and fire appropriate events.\n\t\t\t\tthis.document.fire('selectionChange', data);\n\n\t\t\t\t// Call` #_fireSelectionChangeDoneDebounced` every time when `selectionChange` event is fired.\n\t\t\t\t// This function is debounced what means that `selectionChangeDone` event will be fired only when\n\t\t\t\t// defined int the function time will elapse since the last time the function was called.\n\t\t\t\t// So `selectionChangeDone` will be fired when selection will stop changing.\n\t\t\t\tthis._fireSelectionChangeDoneDebounced(data);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Clears `SelectionObserver` internal properties connected with preventing infinite loop.\n   *\n   * @protected\n   */\n\n\t}, {\n\t\tkey: '_clearInfiniteLoop',\n\t\tvalue: function _clearInfiniteLoop() {\n\t\t\tthis._loopbackCounter = 0;\n\t\t}\n\t}]);\n\n\treturn SelectionObserver;\n}(_observer2.default);\n\n/**\n * Fired when selection has changed. This event is fired only when the selection change was the only change that happened\n * in the document, and old selection is different then the new selection.\n *\n * Introduced by {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\n *\n * Note that because {@link module:engine/view/observer/selectionobserver~SelectionObserver} is attached by the\n * {@link module:engine/view/document~Document}\n * this event is available by default.\n *\n * @see module:engine/view/observer/selectionobserver~SelectionObserver\n * @event module:engine/view/document~Document#event:selectionChange\n * @param {Object} data\n * @param {module:engine/view/selection~Selection} data.oldSelection Old View selection which is\n * {@link module:engine/view/document~Document#selection}.\n * @param {module:engine/view/selection~Selection} data.newSelection New View selection which is converted DOM selection.\n * @param {Selection} data.domSelection Native DOM selection.\n */\n\n/**\n * Fired when selection stops changing.\n *\n * Introduced by {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\n *\n * Note that because {@link module:engine/view/observer/selectionobserver~SelectionObserver} is attached by the\n * {@link module:engine/view/document~Document}\n * this event is available by default.\n *\n * @see module:engine/view/observer/selectionobserver~SelectionObserver\n * @event module:engine/view/document~Document#event:selectionChangeDone\n * @param {Object} data\n * @param {module:engine/view/selection~Selection} data.oldSelection Old View selection which is\n * {@link module:engine/view/document~Document#selection}.\n * @param {module:engine/view/selection~Selection} data.newSelection New View selection which is converted DOM selection.\n * @param {Selection} data.domSelection Native DOM selection.\n */\n\n\nexports.default = SelectionObserver;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/view/observer/selectionobserver.js\n// module id = 329\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }(); /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          */\n\n/**\n * @module engine/view/placeholder\n */\n\nexports.attachPlaceholder = attachPlaceholder;\nexports.detachPlaceholder = detachPlaceholder;\n\nvar _extend = require('@ckeditor/ckeditor5-utils/src/lib/lodash/extend');\n\nvar _extend2 = _interopRequireDefault(_extend);\n\nvar _emittermixin = require('@ckeditor/ckeditor5-utils/src/emittermixin');\n\nvar _emittermixin2 = _interopRequireDefault(_emittermixin);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nrequire('../../theme/placeholder.scss');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar listener = {};\n(0, _extend2.default)(listener, _emittermixin2.default);\n\n// Each document stores information about its placeholder elements and check functions.\nvar documentPlaceholders = new WeakMap();\n\n/**\n * Attaches placeholder to provided element and updates it's visibility. To change placeholder simply call this method\n * once again with new parameters.\n *\n * @param {module:engine/view/element~Element} element Element to attach placeholder to.\n * @param {String} placeholderText Placeholder text to use.\n * @param {Function} [checkFunction] If provided it will be called before checking if placeholder should be displayed.\n * If function returns `false` placeholder will not be showed.\n */\nfunction attachPlaceholder(element, placeholderText, checkFunction) {\n\tvar document = element.document;\n\n\tif (!document) {\n\t\t/**\n   * Provided element is not placed in any {@link module:engine/view/document~Document}.\n   *\n   * @error view-placeholder-element-is-detached\n   */\n\t\tthrow new _ckeditorerror2.default('view-placeholder-element-is-detached: Provided element is not placed in document.');\n\t}\n\n\t// Detach placeholder if was used before.\n\tdetachPlaceholder(element);\n\n\t// Single listener per document.\n\tif (!documentPlaceholders.has(document)) {\n\t\tdocumentPlaceholders.set(document, new Map());\n\t\tlistener.listenTo(document, 'render', function () {\n\t\t\treturn updateAllPlaceholders(document);\n\t\t}, { priority: 'high' });\n\t}\n\n\t// Store text in element's data attribute.\n\t// This data attribute is used in CSS class to show the placeholder.\n\telement.setAttribute('data-placeholder', placeholderText);\n\n\t// Store information about placeholder.\n\tdocumentPlaceholders.get(document).set(element, checkFunction);\n\n\t// Update right away too.\n\tupdateSinglePlaceholder(element, checkFunction);\n}\n\n/**\n * Removes placeholder functionality from given element.\n *\n * @param {module:engine/view/element~Element} element\n */\nfunction detachPlaceholder(element) {\n\tvar document = element.document;\n\n\telement.removeClass('ck-placeholder');\n\telement.removeAttribute('data-placeholder');\n\n\tif (documentPlaceholders.has(document)) {\n\t\tdocumentPlaceholders.get(document).delete(element);\n\t}\n}\n\n// Updates all placeholders of given document.\n//\n// @private\n// @param {module:engine/view/document~Document} document\nfunction updateAllPlaceholders(document) {\n\tvar placeholders = documentPlaceholders.get(document);\n\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = placeholders[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar _ref = _step.value;\n\n\t\t\tvar _ref2 = _slicedToArray(_ref, 2);\n\n\t\t\tvar element = _ref2[0];\n\t\t\tvar checkFunction = _ref2[1];\n\n\t\t\tupdateSinglePlaceholder(element, checkFunction);\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Updates placeholder class of given element.\n//\n// @private\n// @param {module:engine/view/element~Element} element\n// @param {Function} checkFunction\nfunction updateSinglePlaceholder(element, checkFunction) {\n\tvar document = element.document;\n\n\t// Element was removed from document.\n\tif (!document) {\n\t\treturn;\n\t}\n\n\tvar viewSelection = document.selection;\n\tvar anchor = viewSelection.anchor;\n\n\t// If checkFunction is provided and returns false - remove placeholder.\n\tif (checkFunction && !checkFunction()) {\n\t\telement.removeClass('ck-placeholder');\n\n\t\treturn;\n\t}\n\n\t// Element is empty for placeholder purposes when it has no children or only ui elements.\n\t// This check is taken from `view.ContainerElement#getFillerOffset`.\n\tvar isEmptyish = !Array.from(element.getChildren()).some(function (element) {\n\t\treturn !element.is('uiElement');\n\t});\n\n\t// If element is empty and editor is blurred.\n\tif (!document.isFocused && isEmptyish) {\n\t\telement.addClass('ck-placeholder');\n\n\t\treturn;\n\t}\n\n\t// It there are no child elements and selection is not placed inside element.\n\tif (isEmptyish && anchor && anchor.parent !== element) {\n\t\telement.addClass('ck-placeholder');\n\t} else {\n\t\telement.removeClass('ck-placeholder');\n\t}\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/view/placeholder.js\n// module id = 330\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */\n\n/**\n * @module engine/view/renderer\n */\n\nvar _text = require('./text');\n\nvar _text2 = _interopRequireDefault(_text);\n\nvar _position = require('./position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _filler = require('./filler');\n\nvar _mix = require('@ckeditor/ckeditor5-utils/src/mix');\n\nvar _mix2 = _interopRequireDefault(_mix);\n\nvar _diff = require('@ckeditor/ckeditor5-utils/src/diff');\n\nvar _diff2 = _interopRequireDefault(_diff);\n\nvar _insertat = require('@ckeditor/ckeditor5-utils/src/dom/insertat');\n\nvar _insertat2 = _interopRequireDefault(_insertat);\n\nvar _remove = require('@ckeditor/ckeditor5-utils/src/dom/remove');\n\nvar _remove2 = _interopRequireDefault(_remove);\n\nvar _log = require('@ckeditor/ckeditor5-utils/src/log');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _observablemixin = require('@ckeditor/ckeditor5-utils/src/observablemixin');\n\nvar _observablemixin2 = _interopRequireDefault(_observablemixin);\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Renderer updates DOM structure and selection, to make them a reflection of the view structure and selection.\n *\n * View nodes which may need to be rendered needs to be {@link module:engine/view/renderer~Renderer#markToSync marked}.\n * Then, on {@link module:engine/view/renderer~Renderer#render render}, renderer compares view nodes with DOM nodes\n * in order to check which ones really need to be refreshed. Finally, it creates DOM nodes from these view nodes,\n * {@link module:engine/view/domconverter~DomConverter#bindElements binds} them and inserts into the DOM tree.\n *\n * Every time {@link module:engine/view/renderer~Renderer#render render} is called, renderer additionally checks if\n * {@link module:engine/view/renderer~Renderer#selection selection} needs update and updates it if so.\n *\n * Renderer uses {@link module:engine/view/domconverter~DomConverter} to transform and bind nodes.\n */\nvar Renderer = function () {\n\t/**\n  * Creates a renderer instance.\n  *\n  * @param {module:engine/view/domconverter~DomConverter} domConverter Converter instance.\n  * @param {module:engine/view/selection~Selection} selection View selection.\n  */\n\tfunction Renderer(domConverter, selection) {\n\t\t_classCallCheck(this, Renderer);\n\n\t\t/**\n   * Set of DOM Documents instances.\n   *\n   * @member {Set.<Document>}\n   */\n\t\tthis.domDocuments = new Set();\n\n\t\t/**\n   * Converter instance.\n   *\n   * @readonly\n   * @member {module:engine/view/domconverter~DomConverter}\n   */\n\t\tthis.domConverter = domConverter;\n\n\t\t/**\n   * Set of nodes which attributes changed and may need to be rendered.\n   *\n   * @readonly\n   * @member {Set.<module:engine/view/node~Node>}\n   */\n\t\tthis.markedAttributes = new Set();\n\n\t\t/**\n   * Set of elements which child lists changed and may need to be rendered.\n   *\n   * @readonly\n   * @member {Set.<module:engine/view/node~Node>}\n   */\n\t\tthis.markedChildren = new Set();\n\n\t\t/**\n   * Set of text nodes which text data changed and may need to be rendered.\n   *\n   * @readonly\n   * @member {Set.<module:engine/view/node~Node>}\n   */\n\t\tthis.markedTexts = new Set();\n\n\t\t/**\n   * View selection. Renderer updates DOM selection based on the view selection.\n   *\n   * @readonly\n   * @member {module:engine/view/selection~Selection}\n   */\n\t\tthis.selection = selection;\n\n\t\t/**\n   * The text node in which the inline filler was rendered.\n   *\n   * @private\n   * @member {Text}\n   */\n\t\tthis._inlineFiller = null;\n\n\t\t/**\n   * Indicates if the view document is focused and selection can be rendered. Selection will not be rendered if\n   * this is set to `false`.\n   *\n   * @member {Boolean}\n   */\n\t\tthis.isFocused = false;\n\n\t\t/**\n   * DOM element containing fake selection.\n   *\n   * @private\n   * @type {null|HTMLElement}\n   */\n\t\tthis._fakeSelectionContainer = null;\n\t}\n\n\t/**\n  * Mark node to be synchronized.\n  *\n  * Note that only view nodes which parents have corresponding DOM elements need to be marked to be synchronized.\n  *\n  * @see #markedAttributes\n  * @see #markedChildren\n  * @see #markedTexts\n  *\n  * @param {module:engine/view/document~ChangeType} type Type of the change.\n  * @param {module:engine/view/node~Node} node Node to be marked.\n  */\n\n\n\t_createClass(Renderer, [{\n\t\tkey: 'markToSync',\n\t\tvalue: function markToSync(type, node) {\n\t\t\tif (type === 'text') {\n\t\t\t\tif (this.domConverter.mapViewToDom(node.parent)) {\n\t\t\t\t\tthis.markedTexts.add(node);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// If the node has no DOM element it is not rendered yet,\n\t\t\t\t// its children/attributes do not need to be marked to be sync.\n\t\t\t\tif (!this.domConverter.mapViewToDom(node)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (type === 'attributes') {\n\t\t\t\t\tthis.markedAttributes.add(node);\n\t\t\t\t} else if (type === 'children') {\n\t\t\t\t\tthis.markedChildren.add(node);\n\t\t\t\t} else {\n\t\t\t\t\t/**\n      * Unknown type passed to Renderer.markToSync.\n      *\n      * @error renderer-unknown-type\n      */\n\t\t\t\t\tthrow new _ckeditorerror2.default('view-renderer-unknown-type: Unknown type passed to Renderer.markToSync.');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Render method checks {@link #markedAttributes},\n   * {@link #markedChildren} and {@link #markedTexts} and updates all\n   * nodes which need to be updated. Then it clears all three sets. Also, every time render is called it compares and\n   * if needed updates the selection.\n   *\n   * Renderer tries not to break text composition (e.g. IME) and x-index of the selection,\n   * so it does as little as it is needed to update the DOM.\n   *\n   * For attributes it adds new attributes to DOM elements, updates values and removes\n   * attributes which do not exist in the view element.\n   *\n   * For text nodes it updates the text string if it is different. Note that if parent element is marked as an element\n   * which changed child list, text node update will not be done, because it may not be possible to\n   * {@link module:engine/view/domconverter~DomConverter#findCorrespondingDomText find a corresponding DOM text}.\n   * The change will be handled in the parent element.\n   *\n   * For elements, which child lists have changed, it calculates a {@link module:utils/diff~diff} and adds or removes children which have\n   * changed.\n   *\n   * Rendering also handles {@link module:engine/view/filler fillers}. Especially, it checks if the inline filler is needed\n   * at selection position and adds or removes it. To prevent breaking text composition inline filler will not be\n   * removed as long selection is in the text node which needed it at first.\n   */\n\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\tvar inlineFillerPosition = void 0;\n\n\t\t\t// There was inline filler rendered in the DOM but it's not\n\t\t\t// at the selection position any more, so we can remove it\n\t\t\t// (cause even if it's needed, it must be placed in another location).\n\t\t\tif (this._inlineFiller && !this._isSelectionInInlineFiller()) {\n\t\t\t\tthis._removeInlineFiller();\n\t\t\t}\n\n\t\t\t// If we've got the filler, let's try to guess its position in the view.\n\t\t\tif (this._inlineFiller) {\n\t\t\t\tinlineFillerPosition = this._getInlineFillerPosition();\n\t\t\t}\n\t\t\t// Otherwise, if it's needed, create it at the selection position.\n\t\t\telse if (this._needsInlineFillerAtSelection()) {\n\t\t\t\t\tinlineFillerPosition = this.selection.getFirstPosition();\n\n\t\t\t\t\t// Do not use `markToSync` so it will be added even if the parent is already added.\n\t\t\t\t\tthis.markedChildren.add(inlineFillerPosition.parent);\n\t\t\t\t}\n\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = this.markedTexts[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar node = _step.value;\n\n\t\t\t\t\tif (!this.markedChildren.has(node.parent) && this.domConverter.mapViewToDom(node.parent)) {\n\t\t\t\t\t\tthis._updateText(node, { inlineFillerPosition: inlineFillerPosition });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\tvar _didIteratorError2 = false;\n\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator2 = this.markedAttributes[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\tvar element = _step2.value;\n\n\t\t\t\t\tthis._updateAttrs(element);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t_iteratorError2 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\tvar _didIteratorError3 = false;\n\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator3 = this.markedChildren[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\tvar _element = _step3.value;\n\n\t\t\t\t\tthis._updateChildren(_element, { inlineFillerPosition: inlineFillerPosition });\n\t\t\t\t}\n\n\t\t\t\t// Check whether the inline filler is required and where it really is in the DOM.\n\t\t\t\t// At this point in most cases it will be in the DOM, but there are exceptions.\n\t\t\t\t// For example, if the inline filler was deep in the created DOM structure, it will not be created.\n\t\t\t\t// Similarly, if it was removed at the beginning of this function and then neither text nor children were updated,\n\t\t\t\t// it will not be present.\n\t\t\t\t// Fix those and similar scenarios.\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t_iteratorError3 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (inlineFillerPosition) {\n\t\t\t\tvar fillerDomPosition = this.domConverter.viewPositionToDom(inlineFillerPosition);\n\t\t\t\tvar domDocument = fillerDomPosition.parent.ownerDocument;\n\n\t\t\t\tif (!(0, _filler.startsWithFiller)(fillerDomPosition.parent)) {\n\t\t\t\t\t// Filler has not been created at filler position. Create it now.\n\t\t\t\t\tthis._inlineFiller = this._addInlineFiller(domDocument, fillerDomPosition.parent, fillerDomPosition.offset);\n\t\t\t\t} else {\n\t\t\t\t\t// Filler has been found, save it.\n\t\t\t\t\tthis._inlineFiller = fillerDomPosition.parent;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// There is no filler needed.\n\t\t\t\tthis._inlineFiller = null;\n\t\t\t}\n\n\t\t\tthis._updateSelection();\n\t\t\tthis._updateFocus();\n\n\t\t\tthis.markedTexts.clear();\n\t\t\tthis.markedAttributes.clear();\n\t\t\tthis.markedChildren.clear();\n\t\t}\n\n\t\t/**\n   * Adds inline filler at given position.\n   *\n   * The position can be given as an array of DOM nodes and an offset in that array,\n   * or a DOM parent element and offset in that element.\n   *\n   * @private\n   * @param {Document} domDocument\n   * @param {Element|Array.<Node>} domParentOrArray\n   * @param {Number} offset\n   * @returns {Text} The DOM text node that contains inline filler.\n   */\n\n\t}, {\n\t\tkey: '_addInlineFiller',\n\t\tvalue: function _addInlineFiller(domDocument, domParentOrArray, offset) {\n\t\t\tvar childNodes = domParentOrArray instanceof Array ? domParentOrArray : domParentOrArray.childNodes;\n\t\t\tvar nodeAfterFiller = childNodes[offset];\n\n\t\t\tif (this.domConverter.isText(nodeAfterFiller)) {\n\t\t\t\tnodeAfterFiller.data = _filler.INLINE_FILLER + nodeAfterFiller.data;\n\n\t\t\t\treturn nodeAfterFiller;\n\t\t\t} else {\n\t\t\t\tvar fillerNode = domDocument.createTextNode(_filler.INLINE_FILLER);\n\n\t\t\t\tif (Array.isArray(domParentOrArray)) {\n\t\t\t\t\tchildNodes.splice(offset, 0, fillerNode);\n\t\t\t\t} else {\n\t\t\t\t\t(0, _insertat2.default)(domParentOrArray, offset, fillerNode);\n\t\t\t\t}\n\n\t\t\t\treturn fillerNode;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Gets the position of the inline filler based on the current selection.\n   * Here, we assume that we know that the filler is needed and\n   * {@link #_isSelectionInInlineFiller is at the selection position}, and, since it's needed,\n   * it's somewhere at the selection postion.\n   *\n   * Note: we cannot restore the filler position based on the filler's DOM text node, because\n   * when this method is called (before rendering) the bindings will often be broken. View to DOM\n   * bindings are only dependable after rendering.\n   *\n   * @private\n   * @returns {module:engine/view/position~Position}\n   */\n\n\t}, {\n\t\tkey: '_getInlineFillerPosition',\n\t\tvalue: function _getInlineFillerPosition() {\n\t\t\tvar firstPos = this.selection.getFirstPosition();\n\n\t\t\tif (firstPos.parent.is('text')) {\n\t\t\t\treturn _position2.default.createBefore(this.selection.getFirstPosition().parent);\n\t\t\t} else {\n\t\t\t\treturn firstPos;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Returns `true` if the selection hasn't left the inline filler's text node.\n   * If it is `true` it means that the filler had been added for a reason and the selection does not\n   * left the filler's text node. E.g. the user can be in the middle of a composition so it should not be touched.\n   *\n   * @private\n   * @returns {Boolean} True if the inline filler and selection are in the same place.\n   */\n\n\t}, {\n\t\tkey: '_isSelectionInInlineFiller',\n\t\tvalue: function _isSelectionInInlineFiller() {\n\t\t\tif (this.selection.rangeCount != 1 || !this.selection.isCollapsed) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Note, we can't check if selection's position equals position of the\n\t\t\t// this._inlineFiller node, because of #663. We may not be able to calculate\n\t\t\t// the filler's position in the view at this stage.\n\t\t\t// Instead, we check it the other way – whether selection is anchored in\n\t\t\t// that text node or next to it.\n\n\t\t\t// Possible options are:\n\t\t\t// \"FILLER{}\"\n\t\t\t// \"FILLERadded-text{}\"\n\t\t\tvar selectionPosition = this.selection.getFirstPosition();\n\t\t\tvar position = this.domConverter.viewPositionToDom(selectionPosition);\n\n\t\t\tif (position && this.domConverter.isText(position.parent) && (0, _filler.startsWithFiller)(position.parent)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n   * Removes the inline filler.\n   *\n   * @private\n   */\n\n\t}, {\n\t\tkey: '_removeInlineFiller',\n\t\tvalue: function _removeInlineFiller() {\n\t\t\tvar domFillerNode = this._inlineFiller;\n\n\t\t\t// Something weird happened and the stored node doesn't contain the filler's text.\n\t\t\tif (!(0, _filler.startsWithFiller)(domFillerNode)) {\n\t\t\t\t/**\n     * The inline filler node was lost. Most likely, something overwrote the filler text node\n     * in the DOM.\n     *\n     * @error view-renderer-filler-was-lost\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('view-renderer-filler-was-lost: The inline filler node was lost.');\n\t\t\t}\n\n\t\t\tif ((0, _filler.isInlineFiller)(domFillerNode)) {\n\t\t\t\tdomFillerNode.parentNode.removeChild(domFillerNode);\n\t\t\t} else {\n\t\t\t\tdomFillerNode.data = domFillerNode.data.substr(_filler.INLINE_FILLER_LENGTH);\n\t\t\t}\n\n\t\t\tthis._inlineFiller = null;\n\t\t}\n\n\t\t/**\n   * Checks if the inline {@link module:engine/view/filler filler} should be added.\n   *\n   * @private\n   * @returns {Boolean} True if the inline fillers should be added.\n   */\n\n\t}, {\n\t\tkey: '_needsInlineFillerAtSelection',\n\t\tvalue: function _needsInlineFillerAtSelection() {\n\t\t\tif (this.selection.rangeCount != 1 || !this.selection.isCollapsed) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar selectionPosition = this.selection.getFirstPosition();\n\t\t\tvar selectionParent = selectionPosition.parent;\n\t\t\tvar selectionOffset = selectionPosition.offset;\n\n\t\t\t// If there is no DOM root we do not care about fillers.\n\t\t\tif (!this.domConverter.mapViewToDom(selectionParent.root)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (!selectionParent.is('element')) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// We have block filler, we do not need inline one.\n\t\t\tif (selectionOffset === selectionParent.getFillerOffset()) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar nodeBefore = selectionPosition.nodeBefore;\n\t\t\tvar nodeAfter = selectionPosition.nodeAfter;\n\n\t\t\tif (nodeBefore instanceof _text2.default || nodeAfter instanceof _text2.default) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n   * Checks if text needs to be updated and possibly updates it.\n   *\n   * @private\n   * @param {module:engine/view/text~Text} viewText View text to update.\n   * @param {Object} options\n   * @param {module:engine/view/position~Position} options.inlineFillerPosition The position on which the inline\n   * filler should be rendered.\n   */\n\n\t}, {\n\t\tkey: '_updateText',\n\t\tvalue: function _updateText(viewText, options) {\n\t\t\tvar domText = this.domConverter.findCorrespondingDomText(viewText);\n\t\t\tvar newDomText = this.domConverter.viewToDom(viewText, domText.ownerDocument);\n\n\t\t\tvar actualText = domText.data;\n\t\t\tvar expectedText = newDomText.data;\n\n\t\t\tvar filler = options.inlineFillerPosition;\n\n\t\t\tif (filler && filler.parent == viewText.parent && filler.offset == viewText.index) {\n\t\t\t\texpectedText = _filler.INLINE_FILLER + expectedText;\n\t\t\t}\n\n\t\t\tif (actualText != expectedText) {\n\t\t\t\tdomText.data = expectedText;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Checks if attributes list needs to be updated and possibly updates it.\n   *\n   * @private\n   * @param {module:engine/view/element~Element} viewElement View element to update.\n   */\n\n\t}, {\n\t\tkey: '_updateAttrs',\n\t\tvalue: function _updateAttrs(viewElement) {\n\t\t\tvar domElement = this.domConverter.mapViewToDom(viewElement);\n\t\t\tvar domAttrKeys = Array.from(domElement.attributes).map(function (attr) {\n\t\t\t\treturn attr.name;\n\t\t\t});\n\t\t\tvar viewAttrKeys = viewElement.getAttributeKeys();\n\n\t\t\t// Add or overwrite attributes.\n\t\t\tvar _iteratorNormalCompletion4 = true;\n\t\t\tvar _didIteratorError4 = false;\n\t\t\tvar _iteratorError4 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator4 = viewAttrKeys[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\t\t\tvar key = _step4.value;\n\n\t\t\t\t\tdomElement.setAttribute(key, viewElement.getAttribute(key));\n\t\t\t\t}\n\n\t\t\t\t// Remove from DOM attributes which do not exists in the view.\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError4 = true;\n\t\t\t\t_iteratorError4 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t\t\t_iterator4.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError4) {\n\t\t\t\t\t\tthrow _iteratorError4;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar _iteratorNormalCompletion5 = true;\n\t\t\tvar _didIteratorError5 = false;\n\t\t\tvar _iteratorError5 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator5 = domAttrKeys[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t\t\t\t\tvar _key = _step5.value;\n\n\t\t\t\t\tif (!viewElement.hasAttribute(_key)) {\n\t\t\t\t\t\tdomElement.removeAttribute(_key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError5 = true;\n\t\t\t\t_iteratorError5 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t\t\t\t\t\t_iterator5.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError5) {\n\t\t\t\t\t\tthrow _iteratorError5;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Checks if elements child list needs to be updated and possibly updates it.\n   *\n   * @private\n   * @param {module:engine/view/element~Element} viewElement View element to update.\n   * @param {Object} options\n   * @param {module:engine/view/position~Position} options.inlineFillerPosition The position on which the inline\n   * filler should be rendered.\n   */\n\n\t}, {\n\t\tkey: '_updateChildren',\n\t\tvalue: function _updateChildren(viewElement, options) {\n\t\t\tvar domConverter = this.domConverter;\n\t\t\tvar domElement = domConverter.mapViewToDom(viewElement);\n\n\t\t\tif (!domElement) {\n\t\t\t\t// If there is no `domElement` it means that it was already removed from DOM.\n\t\t\t\t// There is no need to update it. It will be updated when re-inserted.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar domDocument = domElement.ownerDocument;\n\t\t\tvar filler = options.inlineFillerPosition;\n\t\t\tvar actualDomChildren = domElement.childNodes;\n\t\t\tvar expectedDomChildren = Array.from(domConverter.viewChildrenToDom(viewElement, domDocument, { bind: true }));\n\n\t\t\t// Inline filler element has to be created during children update because we need it to diff actual dom\n\t\t\t// elements with expected dom elements. We need inline filler in expected dom elements so we won't re-render\n\t\t\t// text node if it is not necessary.\n\t\t\tif (filler && filler.parent == viewElement) {\n\t\t\t\tthis._addInlineFiller(domDocument, expectedDomChildren, filler.offset);\n\t\t\t}\n\n\t\t\tvar actions = (0, _diff2.default)(actualDomChildren, expectedDomChildren, sameNodes);\n\n\t\t\tvar i = 0;\n\t\t\tvar nodesToUnbind = new Set();\n\n\t\t\tvar _iteratorNormalCompletion6 = true;\n\t\t\tvar _didIteratorError6 = false;\n\t\t\tvar _iteratorError6 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator6 = actions[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t\t\t\t\tvar action = _step6.value;\n\n\t\t\t\t\tif (action === 'insert') {\n\t\t\t\t\t\t(0, _insertat2.default)(domElement, i, expectedDomChildren[i]);\n\t\t\t\t\t\ti++;\n\t\t\t\t\t} else if (action === 'delete') {\n\t\t\t\t\t\tnodesToUnbind.add(actualDomChildren[i]);\n\t\t\t\t\t\t(0, _remove2.default)(actualDomChildren[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// 'equal'\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Unbind removed nodes. When node does not have a parent it means that it was removed from DOM tree during\n\t\t\t\t// comparision with the expected DOM. We don't need to check child nodes, because if child node was reinserted,\n\t\t\t\t// it was moved to DOM tree out of the removed node.\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError6 = true;\n\t\t\t\t_iteratorError6 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion6 && _iterator6.return) {\n\t\t\t\t\t\t_iterator6.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError6) {\n\t\t\t\t\t\tthrow _iteratorError6;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar _iteratorNormalCompletion7 = true;\n\t\t\tvar _didIteratorError7 = false;\n\t\t\tvar _iteratorError7 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator7 = nodesToUnbind[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n\t\t\t\t\tvar node = _step7.value;\n\n\t\t\t\t\tif (!node.parentNode) {\n\t\t\t\t\t\tthis.domConverter.unbindDomElement(node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError7 = true;\n\t\t\t\t_iteratorError7 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion7 && _iterator7.return) {\n\t\t\t\t\t\t_iterator7.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError7) {\n\t\t\t\t\t\tthrow _iteratorError7;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction sameNodes(actualDomChild, expectedDomChild) {\n\t\t\t\t// Elements.\n\t\t\t\tif (actualDomChild === expectedDomChild) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\t// Texts.\n\t\t\t\telse if (domConverter.isText(actualDomChild) && domConverter.isText(expectedDomChild)) {\n\t\t\t\t\t\treturn actualDomChild.data === expectedDomChild.data;\n\t\t\t\t\t}\n\t\t\t\t\t// Block fillers.\n\t\t\t\t\telse if ((0, _filler.isBlockFiller)(actualDomChild, domConverter.blockFiller) && (0, _filler.isBlockFiller)(expectedDomChild, domConverter.blockFiller)) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t// Not matching types.\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Checks if selection needs to be updated and possibly updates it.\n   *\n   * @private\n   */\n\n\t}, {\n\t\tkey: '_updateSelection',\n\t\tvalue: function _updateSelection() {\n\t\t\t// If there is no selection - remove DOM and fake selections.\n\t\t\tif (this.selection.rangeCount === 0) {\n\t\t\t\tthis._removeDomSelection();\n\t\t\t\tthis._removeFakeSelection();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar domRoot = this.domConverter.mapViewToDom(this.selection.editableElement);\n\n\t\t\t// Do nothing if there is no focus, or there is no DOM element corresponding to selection's editable element.\n\t\t\tif (!this.isFocused || !domRoot) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Render selection.\n\t\t\tif (this.selection.isFake) {\n\t\t\t\tthis._updateFakeSelection(domRoot);\n\t\t\t} else {\n\t\t\t\tthis._removeFakeSelection();\n\t\t\t\tthis._updateDomSelection(domRoot);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Updates fake selection.\n   *\n   * @private\n   * @param {HTMLElement} domRoot Valid DOM root where fake selection container should be added.\n   */\n\n\t}, {\n\t\tkey: '_updateFakeSelection',\n\t\tvalue: function _updateFakeSelection(domRoot) {\n\t\t\tvar domDocument = domRoot.ownerDocument;\n\n\t\t\t// Create fake selection container if one does not exist.\n\t\t\tif (!this._fakeSelectionContainer) {\n\t\t\t\tthis._fakeSelectionContainer = domDocument.createElement('div');\n\t\t\t\tthis._fakeSelectionContainer.style.position = 'fixed';\n\t\t\t\tthis._fakeSelectionContainer.style.top = 0;\n\t\t\t\tthis._fakeSelectionContainer.style.left = '-9999px';\n\t\t\t\tthis._fakeSelectionContainer.appendChild(domDocument.createTextNode('\\xA0'));\n\t\t\t}\n\n\t\t\t// Add fake container if not already added.\n\t\t\tif (!this._fakeSelectionContainer.parentElement) {\n\t\t\t\tdomRoot.appendChild(this._fakeSelectionContainer);\n\t\t\t}\n\n\t\t\t// Update contents.\n\t\t\tvar content = this.selection.fakeSelectionLabel || '\\xA0';\n\t\t\tthis._fakeSelectionContainer.firstChild.data = content;\n\n\t\t\t// Update selection.\n\t\t\tvar domSelection = domDocument.getSelection();\n\t\t\tdomSelection.removeAllRanges();\n\n\t\t\tvar domRange = domDocument.createRange();\n\t\t\tdomRange.selectNodeContents(this._fakeSelectionContainer);\n\t\t\tdomSelection.addRange(domRange);\n\n\t\t\t// Bind fake selection container with current selection.\n\t\t\tthis.domConverter.bindFakeSelection(this._fakeSelectionContainer, this.selection);\n\t\t}\n\n\t\t/**\n   * Updates DOM selection.\n   *\n   * @private\n   * @param {HTMLElement} domRoot Valid DOM root where DOM selection should be rendered.\n   */\n\n\t}, {\n\t\tkey: '_updateDomSelection',\n\t\tvalue: function _updateDomSelection(domRoot) {\n\t\t\tvar domSelection = domRoot.ownerDocument.defaultView.getSelection();\n\n\t\t\t// Let's check whether DOM selection needs updating at all.\n\t\t\tif (!this._domSelectionNeedsUpdate(domSelection)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Multi-range selection is not available in most browsers, and, at least in Chrome, trying to\n\t\t\t// set such selection, that is not continuous, throws an error. Because of that, we will just use anchor\n\t\t\t// and focus of view selection.\n\t\t\t// Since we are not supporting multi-range selection, we also do not need to check if proper editable is\n\t\t\t// selected. If there is any editable selected, it is okay (editable is taken from selection anchor).\n\t\t\tvar anchor = this.domConverter.viewPositionToDom(this.selection.anchor);\n\t\t\tvar focus = this.domConverter.viewPositionToDom(this.selection.focus);\n\n\t\t\tdomSelection.collapse(anchor.parent, anchor.offset);\n\t\t\tdomSelection.extend(focus.parent, focus.offset);\n\t\t}\n\n\t\t/**\n   * Checks whether given DOM selection needs to be updated.\n   *\n   * @private\n   * @param {Selection} domSelection DOM selection to check.\n   * @returns {Boolean}\n   */\n\n\t}, {\n\t\tkey: '_domSelectionNeedsUpdate',\n\t\tvalue: function _domSelectionNeedsUpdate(domSelection) {\n\t\t\tif (!this.domConverter.isDomSelectionCorrect(domSelection)) {\n\t\t\t\t// Current DOM selection is in incorrect position. We need to update it.\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar oldViewSelection = domSelection && this.domConverter.domSelectionToView(domSelection);\n\n\t\t\tif (oldViewSelection && this.selection.isEqual(oldViewSelection)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// If selection is not collapsed, it does not need to be updated if it is similar.\n\t\t\tif (!this.selection.isCollapsed && this.selection.isSimilar(oldViewSelection)) {\n\t\t\t\tvar data = {\n\t\t\t\t\toldSelection: oldViewSelection,\n\t\t\t\t\tcurrentSelection: this.selection\n\t\t\t\t};\n\n\t\t\t\t_log2.default.warn('renderer-skipped-selection-rendering: The selection was not rendered due to its similarity to the current one.', data);\n\n\t\t\t\t// Selection did not changed and is correct, do not update.\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Selections are not similar.\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n   * Removes DOM selection.\n   *\n   * @private\n   */\n\n\t}, {\n\t\tkey: '_removeDomSelection',\n\t\tvalue: function _removeDomSelection() {\n\t\t\tvar _iteratorNormalCompletion8 = true;\n\t\t\tvar _didIteratorError8 = false;\n\t\t\tvar _iteratorError8 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator8 = this.domDocuments[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n\t\t\t\t\tvar doc = _step8.value;\n\n\t\t\t\t\tvar domSelection = doc.getSelection();\n\n\t\t\t\t\tif (domSelection.rangeCount) {\n\t\t\t\t\t\tvar activeDomElement = doc.activeElement;\n\t\t\t\t\t\tvar viewElement = this.domConverter.mapDomToView(activeDomElement);\n\n\t\t\t\t\t\tif (activeDomElement && viewElement) {\n\t\t\t\t\t\t\tdoc.getSelection().removeAllRanges();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError8 = true;\n\t\t\t\t_iteratorError8 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion8 && _iterator8.return) {\n\t\t\t\t\t\t_iterator8.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError8) {\n\t\t\t\t\t\tthrow _iteratorError8;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Removes fake selection.\n   *\n   * @private\n   */\n\n\t}, {\n\t\tkey: '_removeFakeSelection',\n\t\tvalue: function _removeFakeSelection() {\n\t\t\tvar container = this._fakeSelectionContainer;\n\n\t\t\tif (container) {\n\t\t\t\tcontainer.remove();\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Checks if focus needs to be updated and possibly updates it.\n   *\n   * @private\n   */\n\n\t}, {\n\t\tkey: '_updateFocus',\n\t\tvalue: function _updateFocus() {\n\t\t\tif (this.isFocused) {\n\t\t\t\tvar editable = this.selection.editableElement;\n\n\t\t\t\tif (editable) {\n\t\t\t\t\tthis.domConverter.focus(editable);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn Renderer;\n}();\n\nexports.default = Renderer;\n\n\n(0, _mix2.default)(Renderer, _observablemixin2.default);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/view/renderer.js\n// module id = 331\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */\n\n/**\n * @module engine/view/textproxy\n */\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * TextProxy is a wrapper for substring of {@link module:engine/view/text~Text}. Instance of this class is created by\n * {@link module:engine/view/treewalker~TreeWalker} when only a part of {@link module:engine/view/text~Text} needs to be returned.\n *\n * `TextProxy` has an API similar to {@link module:engine/view/text~Text Text} and allows to do most of the common tasks performed\n * on view nodes.\n *\n * **Note:** Some `TextProxy` instances may represent whole text node, not just a part of it.\n * See {@link module:engine/view/textproxy~TextProxy#isPartial}.\n *\n * **Note:** `TextProxy` is a readonly interface.\n *\n * **Note:** `TextProxy` instances are created on the fly basing on the current state of parent {@link module:engine/view/text~Text}.\n * Because of this it is highly unrecommended to store references to `TextProxy instances because they might get\n * invalidated due to operations on Document. Also TextProxy is not a {@link module:engine/view/node~Node} so it can not be\n * inserted as a child of {@link module:engine/view/element~Element}.\n *\n * `TextProxy` instances are created by {@link module:engine/view/treewalker~TreeWalker view tree walker}. You should not need to create\n * an instance of this class by your own.\n */\nvar TextProxy = function () {\n\t/**\n  * Creates a text proxy.\n  *\n  * @protected\n  * @param {module:engine/view/text~Text} textNode Text node which part is represented by this text proxy.\n  * @param {Number} offsetInText Offset in {@link module:engine/view/textproxy~TextProxy#textNode text node}\n  * from which the text proxy starts.\n  * @param {Number} length Text proxy length, that is how many text node's characters, starting from `offsetInText` it represents.\n  * @constructor\n  */\n\tfunction TextProxy(textNode, offsetInText, length) {\n\t\t_classCallCheck(this, TextProxy);\n\n\t\t/**\n   * Reference to the {@link module:engine/view/text~Text} element which TextProxy is a substring.\n   *\n   * @readonly\n   * @member {module:engine/view/text~Text} module:engine/view/textproxy~TextProxy#textNode\n   */\n\t\tthis.textNode = textNode;\n\n\t\tif (offsetInText < 0 || offsetInText > textNode.data.length) {\n\t\t\t/**\n    * Given offsetInText value is incorrect.\n    *\n    * @error view-textproxy-wrong-offsetintext\n    */\n\t\t\tthrow new _ckeditorerror2.default('view-textproxy-wrong-offsetintext: Given offsetInText value is incorrect.');\n\t\t}\n\n\t\tif (length < 0 || offsetInText + length > textNode.data.length) {\n\t\t\t/**\n    * Given length value is incorrect.\n    *\n    * @error view-textproxy-wrong-length\n    */\n\t\t\tthrow new _ckeditorerror2.default('view-textproxy-wrong-length: Given length value is incorrect.');\n\t\t}\n\n\t\t/**\n   * Text data represented by this text proxy.\n   *\n   * @readonly\n   * @member {String} module:engine/view/textproxy~TextProxy#data\n   */\n\t\tthis.data = textNode.data.substring(offsetInText, offsetInText + length);\n\n\t\t/**\n   * Offset in the `textNode` where this `TextProxy` instance starts.\n   *\n   * @readonly\n   * @member {Number} module:engine/view/textproxy~TextProxy#offsetInText\n   */\n\t\tthis.offsetInText = offsetInText;\n\t}\n\n\t/**\n  * Flag indicating whether `TextProxy` instance covers only part of the original {@link module:engine/view/text~Text text node}\n  * (`true`) or the whole text node (`false`).\n  *\n  * This is `false` when text proxy starts at the very beginning of {@link module:engine/view/textproxy~TextProxy#textNode textNode}\n  * ({@link module:engine/view/textproxy~TextProxy#offsetInText offsetInText} equals `0`) and text proxy sizes is equal to\n  * text node size.\n  *\n  * @readonly\n  * @type {Boolean}\n  */\n\n\n\t_createClass(TextProxy, [{\n\t\tkey: 'is',\n\n\n\t\t/**\n   * Checks whether given view tree object is of given type.\n   *\n   * Read more in {@link module:engine/view/node~Node#is}.\n   *\n   * @param {String} type\n   * @returns {Boolean}\n   */\n\t\tvalue: function is(type) {\n\t\t\treturn type == 'textProxy';\n\t\t}\n\n\t\t/**\n   * Returns ancestors array of this text proxy.\n   *\n   * @param {Object} options Options object.\n   * @param {Boolean} [options.includeSelf=false] When set to `true` {#textNode} will be also included in parent's array.\n   * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from text proxy parent to\n   * root element, otherwise root element will be the first item in the array.\n   * @returns {Array} Array with ancestors.\n   */\n\n\t}, {\n\t\tkey: 'getAncestors',\n\t\tvalue: function getAncestors() {\n\t\t\tvar options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { includeSelf: false, parentFirst: false };\n\n\t\t\tvar ancestors = [];\n\t\t\tvar parent = options.includeSelf ? this.textNode : this.parent;\n\n\t\t\twhile (parent !== null) {\n\t\t\t\tancestors[options.parentFirst ? 'push' : 'unshift'](parent);\n\t\t\t\tparent = parent.parent;\n\t\t\t}\n\n\t\t\treturn ancestors;\n\t\t}\n\t}, {\n\t\tkey: 'isPartial',\n\t\tget: function get() {\n\t\t\treturn this.data.length !== this.textNode.data.length;\n\t\t}\n\n\t\t/**\n   * Parent of this text proxy, which is same as parent of text node represented by this text proxy.\n   *\n   * @readonly\n   * @type {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|null}\n   */\n\n\t}, {\n\t\tkey: 'parent',\n\t\tget: function get() {\n\t\t\treturn this.textNode.parent;\n\t\t}\n\n\t\t/**\n   * Root of this text proxy, which is same as root of text node represented by this text proxy.\n   *\n   * @readonly\n   * @type {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n   */\n\n\t}, {\n\t\tkey: 'root',\n\t\tget: function get() {\n\t\t\treturn this.textNode.root;\n\t\t}\n\n\t\t/**\n   * {@link module:engine/view/document~Document View document} that owns this text proxy, or `null` if the text proxy is inside\n   * {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\n   *\n   * @readonly\n   * @type {module:engine/view/document~Document|null}\n   */\n\n\t}, {\n\t\tkey: 'document',\n\t\tget: function get() {\n\t\t\treturn this.textNode.document;\n\t\t}\n\t}]);\n\n\treturn TextProxy;\n}();\n\nexports.default = TextProxy;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/src/view/textproxy.js\n// module id = 332\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _plugin = require('@ckeditor/ckeditor5-core/src/plugin');\n\nvar _plugin2 = _interopRequireDefault(_plugin);\n\nvar _entercommand = require('./entercommand');\n\nvar _entercommand2 = _interopRequireDefault(_entercommand);\n\nvar _enterobserver = require('./enterobserver');\n\nvar _enterobserver2 = _interopRequireDefault(_enterobserver);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module enter/enter\n */\n\n/**\n * The Enter feature. Handles the <kbd>Enter</kbd> and <kbd>Shift + Enter</kbd> keys in the editor.\n *\n * @extends module:core/plugin~Plugin\n */\nvar Enter = function (_Plugin) {\n\t_inherits(Enter, _Plugin);\n\n\tfunction Enter() {\n\t\t_classCallCheck(this, Enter);\n\n\t\treturn _possibleConstructorReturn(this, (Enter.__proto__ || Object.getPrototypeOf(Enter)).apply(this, arguments));\n\t}\n\n\t_createClass(Enter, [{\n\t\tkey: 'init',\n\t\tvalue: function init() {\n\t\t\tvar editor = this.editor;\n\t\t\tvar editingView = editor.editing.view;\n\n\t\t\teditingView.addObserver(_enterobserver2.default);\n\n\t\t\teditor.commands.add('enter', new _entercommand2.default(editor));\n\n\t\t\t// TODO We may use the keystroke handler for that.\n\t\t\tthis.listenTo(editingView, 'enter', function (evt, data) {\n\t\t\t\teditor.execute('enter');\n\t\t\t\tdata.preventDefault();\n\t\t\t}, { priority: 'low' });\n\t\t}\n\t}], [{\n\t\tkey: 'pluginName',\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tget: function get() {\n\t\t\treturn 'Enter';\n\t\t}\n\t}]);\n\n\treturn Enter;\n}(_plugin2.default);\n\nexports.default = Enter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-enter/src/enter.js\n// module id = 333\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _command = require('@ckeditor/ckeditor5-core/src/command');\n\nvar _command2 = _interopRequireDefault(_command);\n\nvar _position = require('@ckeditor/ckeditor5-engine/src/model/position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module enter/entercommand\n */\n\n/**\n * Enter command. It is used by the {@link module:enter/enter~Enter Enter feature} to handle the <kbd>Enter</kbd> key.\n *\n * @extends module:core/command~Command\n */\nvar EnterCommand = function (_Command) {\n\t_inherits(EnterCommand, _Command);\n\n\tfunction EnterCommand() {\n\t\t_classCallCheck(this, EnterCommand);\n\n\t\treturn _possibleConstructorReturn(this, (EnterCommand.__proto__ || Object.getPrototypeOf(EnterCommand)).apply(this, arguments));\n\t}\n\n\t_createClass(EnterCommand, [{\n\t\tkey: 'execute',\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tvalue: function execute() {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar doc = this.editor.document;\n\t\t\tvar batch = doc.batch();\n\n\t\t\tdoc.enqueueChanges(function () {\n\t\t\t\tenterBlock(_this2.editor.data, batch, doc.selection, doc.schema);\n\n\t\t\t\t_this2.fire('afterExecute', { batch: batch });\n\t\t\t});\n\t\t}\n\t}]);\n\n\treturn EnterCommand;\n}(_command2.default);\n\n// Creates a new block in the way that the <kbd>Enter</kbd> key is expected to work.\n//\n// @param {engine.controller.DataController} dataController\n// @param {module:engine/model/batch~Batch} batch A batch to which the deltas will be added.\n// @param {module:engine/model/selection~Selection} selection Selection on which the action should be performed.\n// @param {module:engine/model/schema~Schema} schema\n\n\nexports.default = EnterCommand;\nfunction enterBlock(dataController, batch, selection, schema) {\n\tvar isSelectionEmpty = selection.isCollapsed;\n\tvar range = selection.getFirstRange();\n\tvar startElement = range.start.parent;\n\tvar endElement = range.end.parent;\n\n\t// Don't touch the roots and other limit elements.\n\tif (schema.limits.has(startElement.name) || schema.limits.has(endElement.name)) {\n\t\t// Delete the selected content but only if inside a single limit element.\n\t\t// Abort, when crossing limit elements boundary (e.g. <limit1>x[x</limit1>donttouchme<limit2>y]y</limit2>).\n\t\t// This is an edge case and it's hard to tell what should actually happen because such a selection\n\t\t// is not entirely valid.\n\t\tif (!isSelectionEmpty && startElement == endElement) {\n\t\t\tdataController.deleteContent(selection, batch);\n\t\t}\n\n\t\treturn;\n\t}\n\n\tif (isSelectionEmpty) {\n\t\tsplitBlock(batch, selection, range.start);\n\t} else {\n\t\tvar leaveUnmerged = !(range.start.isAtStart && range.end.isAtEnd);\n\t\tvar isContainedWithinOneElement = startElement == endElement;\n\n\t\tdataController.deleteContent(selection, batch, { leaveUnmerged: leaveUnmerged });\n\n\t\tif (leaveUnmerged) {\n\t\t\t// Partially selected elements.\n\t\t\t//\n\t\t\t// <h>x[xx]x</h>\t\t-> <h>x^x</h>\t\t\t-> <h>x</h><h>^x</h>\n\t\t\tif (isContainedWithinOneElement) {\n\t\t\t\tsplitBlock(batch, selection, selection.focus);\n\t\t\t}\n\t\t\t// Selection over multiple elements.\n\t\t\t//\n\t\t\t// <h>x[x</h><p>y]y<p>\t-> <h>x^</h><p>y</p>\t-> <h>x</h><p>^y</p>\n\t\t\telse {\n\t\t\t\t\tselection.collapse(endElement);\n\t\t\t\t}\n\t\t}\n\t}\n}\n\nfunction splitBlock(batch, selection, splitPos) {\n\tif (splitPos.isAtEnd) {\n\t\t// If the split is at the end of element, instead of splitting, just create a clone of position's parent\n\t\t// element and insert it after cloned element. The result is the same but less operations are taken\n\t\t// and it's more semantically correct (when it comes to operational transformation).\n\t\tvar oldElement = splitPos.parent;\n\t\tvar newElement = new oldElement.constructor(oldElement.name, oldElement.getAttributes());\n\n\t\tbatch.insert(_position2.default.createAfter(splitPos.parent), newElement);\n\t} else {\n\t\tbatch.split(splitPos);\n\t}\n\n\tselection.collapse(splitPos.parent.nextSibling);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-enter/src/entercommand.js\n// module id = 334\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _observer = require('@ckeditor/ckeditor5-engine/src/view/observer/observer');\n\nvar _observer2 = _interopRequireDefault(_observer);\n\nvar _domeventdata = require('@ckeditor/ckeditor5-engine/src/view/observer/domeventdata');\n\nvar _domeventdata2 = _interopRequireDefault(_domeventdata);\n\nvar _keyboard = require('@ckeditor/ckeditor5-utils/src/keyboard');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module enter/enterobserver\n */\n\n/**\n * Enter observer introduces the {@link module:engine/view/document~Document#event:enter} event.\n *\n * @extends module:engine/view/observer~Observer\n */\nvar EnterObserver = function (_Observer) {\n  _inherits(EnterObserver, _Observer);\n\n  function EnterObserver(document) {\n    _classCallCheck(this, EnterObserver);\n\n    var _this = _possibleConstructorReturn(this, (EnterObserver.__proto__ || Object.getPrototypeOf(EnterObserver)).call(this, document));\n\n    document.on('keydown', function (evt, data) {\n      if (_this.isEnabled && data.keyCode == _keyboard.keyCodes.enter) {\n        document.fire('enter', new _domeventdata2.default(document, data.domEvent));\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(EnterObserver, [{\n    key: 'observe',\n    value: function observe() {}\n  }]);\n\n  return EnterObserver;\n}(_observer2.default);\n\n/**\n * Event fired when the user presses the <kbd>Enter</kbd> key.\n *\n * Note: This event is fired by the {@link module:enter/enterobserver~EnterObserver observer}\n * (usually registered by the {@link module:enter/enter~Enter Enter feature}).\n *\n * @event module:engine/view/document~Document#event:enter\n * @param {module:engine/view/observer/domeventdata~DomEventData} data\n */\n\n\nexports.default = EnterObserver;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-enter/src/enterobserver.js\n// module id = 335\n// module chunks = 0","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if ('value' in descriptor)\n                descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }\n    return function (Constructor, protoProps, staticProps) {\n        if (protoProps)\n            defineProperties(Constructor.prototype, protoProps);\n        if (staticProps)\n            defineProperties(Constructor, staticProps);\n        return Constructor;\n    };\n}();\nvar _paragraph = require('@ckeditor/ckeditor5-paragraph/src/paragraph');\nvar _paragraph2 = _interopRequireDefault(_paragraph);\nvar _headingengine = require('./headingengine');\nvar _headingengine2 = _interopRequireDefault(_headingengine);\nvar _plugin = require('@ckeditor/ckeditor5-core/src/plugin');\nvar _plugin2 = _interopRequireDefault(_plugin);\nvar _model = require('@ckeditor/ckeditor5-ui/src/model');\nvar _model2 = _interopRequireDefault(_model);\nvar _createlistdropdown = require('@ckeditor/ckeditor5-ui/src/dropdown/list/createlistdropdown');\nvar _createlistdropdown2 = _interopRequireDefault(_createlistdropdown);\nvar _collection = require('@ckeditor/ckeditor5-utils/src/collection');\nvar _collection2 = _interopRequireDefault(_collection);\nvar _template = require('@ckeditor/ckeditor5-ui/src/template');\nvar _template2 = _interopRequireDefault(_template);\nrequire('../theme/theme.scss');\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }\n        return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError('Cannot call a class as a function');\n    }\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n    }\n    return call && (typeof call === 'object' || typeof call === 'function') ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n        throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass)\n        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n/**\n * @module heading/heading\n */\n/**\n * The headings feature. It introduces the `headings` drop-down list and the `heading` command which allow\n * to convert paragraphs into headings.\n *\n * @extends module:core/plugin~Plugin\n */\nvar Heading = function (_Plugin) {\n    _inherits(Heading, _Plugin);\n    function Heading() {\n        _classCallCheck(this, Heading);\n        return _possibleConstructorReturn(this, (Heading.__proto__ || Object.getPrototypeOf(Heading)).apply(this, arguments));\n    }\n    _createClass(Heading, [\n        {\n            key: 'init',\n            /**\n   * @inheritDoc\n   */\n            value: function init() {\n                var _dropdownModel$bind, _dropdownModel$bind2, _this2 = this;\n                var editor = this.editor;\n                var dropdownItems = new _collection2.default();\n                var options = this._getLocalizedOptions();\n                var commands = [];\n                var t = editor.t;\n                var defaultTitle = t('Choose heading');\n                var dropdownTooltip = t('Heading');\n                var _iteratorNormalCompletion = true;\n                var _didIteratorError = false;\n                var _iteratorError = undefined;\n                try {\n                    for (var _iterator = options[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                        var option = _step.value;\n                        var command = editor.commands.get(option.modelElement);\n                        var itemModel = new _model2.default({\n                            commandName: option.modelElement,\n                            label: option.title,\n                            class: option.class\n                        });\n                        itemModel.bind('isActive').to(command, 'value');\n                        // Add the option to the collection.\n                        dropdownItems.add(itemModel);\n                        commands.push(command);\n                    }    // Create dropdown model.\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return) {\n                            _iterator.return();\n                        }\n                    } finally {\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                var dropdownModel = new _model2.default({\n                    withText: true,\n                    items: dropdownItems,\n                    tooltip: dropdownTooltip\n                });\n                (_dropdownModel$bind = dropdownModel.bind('isEnabled')).to.apply(_dropdownModel$bind, _toConsumableArray(getCommandsBindingTargets(commands, 'isEnabled')).concat([// ...and set it true if any command #isEnabled is true.\n                    function () {\n                        for (var _len = arguments.length, areEnabled = Array(_len), _key = 0; _key < _len; _key++) {\n                            areEnabled[_key] = arguments[_key];\n                        }\n                        return areEnabled.some(function (isEnabled) {\n                            return isEnabled;\n                        });\n                    }]));\n                (_dropdownModel$bind2 = dropdownModel.bind('label')).to.apply(_dropdownModel$bind2, _toConsumableArray(getCommandsBindingTargets(commands, 'value')).concat([// ...and chose the title of the first one which #value is true.\n                    function () {\n                        for (var _len2 = arguments.length, areActive = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                            areActive[_key2] = arguments[_key2];\n                        }\n                        var index = areActive.findIndex(function (value) {\n                            return value;\n                        });\n                        // If none of the commands is active, display default title.\n                        return options[index] ? options[index].title : defaultTitle;\n                    }]));\n                // Register UI component.\n                editor.ui.componentFactory.add('headings', function (locale) {\n                    var dropdown = (0, _createlistdropdown2.default)(dropdownModel, locale);\n                    _template2.default.extend(dropdown.template, { attributes: { class: ['ck-heading-dropdown'] } });\n                    // Execute command when an item from the dropdown is selected.\n                    _this2.listenTo(dropdown, 'execute', function (evt) {\n                        editor.execute(evt.source.commandName);\n                        editor.editing.view.focus();\n                    });\n                    return dropdown;\n                });\n            }    /**\n   * Returns heading options as defined in `config.heading.options` but processed to consider\n   * editor localization, i.e. to display {@link module:heading/heading~HeadingOption}\n   * in the correct language.\n   *\n   * Note: The reason behind this method is that there's no way to use {@link module:utils/locale~Locale#t}\n   * when the user config is defined because the editor does not exist yet.\n   *\n   * @private\n   * @returns {Array.<module:heading/heading~HeadingOption>}.\n   */\n        },\n        {\n            key: '_getLocalizedOptions',\n            value: function _getLocalizedOptions() {\n                var editor = this.editor;\n                var t = editor.t;\n                var localizedTitles = {\n                    Paragraph: t('Paragraph'),\n                    'Heading 1': t('Heading 1'),\n                    'Heading 2': t('Heading 2'),\n                    'Heading 3': t('Heading 3')\n                };\n                return editor.config.get('heading.options').map(function (option) {\n                    var title = localizedTitles[option.title];\n                    if (title && title != option.title) {\n                        // Clone the option to avoid altering the original `config.heading.options`.\n                        option = Object.assign({}, option, { title: title });\n                    }\n                    return option;\n                });\n            }\n        }\n    ], [\n        {\n            key: 'requires',\n            /**\n   * @inheritDoc\n   */\n            get: function get() {\n                return [\n                    _paragraph2.default,\n                    _headingengine2.default\n                ];\n            }    /**\n   * @inheritDoc\n   */\n        },\n        {\n            key: 'pluginName',\n            get: function get() {\n                return 'Heading';\n            }\n        }\n    ]);\n    return Heading;\n}(_plugin2.default);\n// Returns an array of binding components for\n// {@link module:utils/observablemixin~Observable#bind} from a set of iterable\n// commands.\n//\n// @private\n// @param {Iterable.<module:core/command~Command>} commands\n// @param {String} attribute\n// @returns {Array.<String>}\nexports.default = Heading;\nfunction getCommandsBindingTargets(commands, attribute) {\n    var _Array$prototype;\n    return (_Array$prototype = Array.prototype).concat.apply(_Array$prototype, _toConsumableArray(commands.map(function (c) {\n        return [\n            c,\n            attribute\n        ];\n    })));\n}    /**\n * Heading option descriptor.\n *\n * @typedef {Object} module:heading/heading~HeadingOption\n * @property {String} modelElement Element's name in the model.\n * @property {String} viewElement The name of the view element that will be used to represent the model element in the view.\n * @property {String} title The user-readable title of the option.\n * @property {String} class The class which will be added to the dropdown item representing this option.\n */\n     /**\n * The configuration of the heading feature. Introduced by the {@link module:heading/headingengine~HeadingEngine} feature.\n *\n * Read more in {@link module:heading/heading~HeadingConfig}.\n *\n * @member {module:heading/heading~HeadingConfig} module:core/editor/editorconfig~EditorConfig#heading\n */\n     /**\n * The configuration of the heading feature.\n * The option is used by the {@link module:heading/headingengine~HeadingEngine} feature.\n *\n *\t\tClassicEditor\n *\t\t\t.create( {\n * \t\t\t\theading: ... // Heading feature config.\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface HeadingConfig\n */\n     /**\n * The available heading options.\n *\n * The default value is:\n *\n *\t\tconst headingConfig = {\n *\t\t\toptions: [\n *\t\t\t\t{ modelElement: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },\n *\t\t\t\t{ modelElement: 'heading1', viewElement: 'h2', title: 'Heading 1', class: 'ck-heading_heading1' },\n *\t\t\t\t{ modelElement: 'heading2', viewElement: 'h3', title: 'Heading 2', class: 'ck-heading_heading2' },\n *\t\t\t\t{ modelElement: 'heading3', viewElement: 'h4', title: 'Heading 3', class: 'ck-heading_heading3' }\n *\t\t\t]\n *\t\t};\n *\n * It defines 3 levels of headings. In the editor model they will use `heading1`, `heading2`, and `heading3` elements.\n * Their respective view elements (so the elements output by the editor) will be: `h2`, `h3`, and `h4`. This means that\n * if you choose \"Heading 1\" in the headings dropdown the editor will turn the current block to `<heading1>` in the model\n * which will result in rendering (and outputting to data) the `<h2>` element.\n *\n * The `title` and `class` properties will be used by the `headings` dropdown to render available options.\n * Usually, the first option in the headings dropdown is the \"Paragraph\" option, hence it's also defined on the list.\n * However, you don't need to define its view representation because it's handled by\n * the {@link module:paragraph/paragraph~Paragraph} feature (which is required by\n * the {@link module:heading/headingengine~HeadingEngine} feature).\n *\n * Note: In the model you should always start from `heading1`, regardless of how the headings are represented in the view.\n * That's assumption is used by features like {@link module:autoformat/autoformat~Autoformat} to know which element\n * they should use when applying the first level heading.\n *\n * The defined headings are also available in {@link module:core/commandcollection~CommandCollection} under their model names.\n * For example, the below code will apply `<heading1>` to the current selection:\n *\n *\t\teditor.execute( 'heading1' );\n *\n * @member {Array.<module:heading/heading~HeadingOption>} module:heading/heading~HeadingConfig#options\n */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-heading/src/heading.js\n// module id = 336\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _command = require('@ckeditor/ckeditor5-core/src/command');\n\nvar _command2 = _interopRequireDefault(_command);\n\nvar _position = require('@ckeditor/ckeditor5-engine/src/model/position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _first = require('@ckeditor/ckeditor5-utils/src/first');\n\nvar _first2 = _interopRequireDefault(_first);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module heading/headingcommand\n */\n\n/**\n * The heading command. It is used by the {@link module:heading/heading~Heading heading feature} to apply headings.\n *\n * @extends module:core/command~Command\n */\nvar HeadingCommand = function (_Command) {\n\t_inherits(HeadingCommand, _Command);\n\n\t/**\n  * Creates an instance of the command.\n  *\n  * @param {module:core/editor/editor~Editor} editor Editor instance.\n  * @param {String} modelElement Name of the element which this command will apply in the model.\n  */\n\tfunction HeadingCommand(editor, modelElement) {\n\t\t_classCallCheck(this, HeadingCommand);\n\n\t\t/**\n   * Whether the selection starts in a heading of {@link #modelElement this level}.\n   *\n   * @observable\n   * @readonly\n   * @member {Boolean} #value\n   */\n\n\t\t/**\n   * Unique identifier of the command, also element's name in the model.\n   * See {@link module:heading/heading~HeadingOption}.\n   *\n   * @readonly\n   * @member {String}\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (HeadingCommand.__proto__ || Object.getPrototypeOf(HeadingCommand)).call(this, editor));\n\n\t\t_this.modelElement = modelElement;\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(HeadingCommand, [{\n\t\tkey: 'refresh',\n\t\tvalue: function refresh() {\n\t\t\tvar block = (0, _first2.default)(this.editor.document.selection.getSelectedBlocks());\n\n\t\t\tthis.value = !!block && block.is(this.modelElement);\n\t\t\tthis.isEnabled = !!block && checkCanBecomeHeading(block, this.modelElement, this.editor.document.schema);\n\t\t}\n\n\t\t/**\n   * Executes the command. Applies the heading to the selected blocks or, if the first selected\n   * block is a heading already, turns selected headings (of this level only) to paragraphs.\n   *\n   * @fires execute\n   * @param {Object} [options] Options for executed command.\n   * @param {module:engine/model/batch~Batch} [options.batch] Batch to collect all the change steps.\n   * New batch will be created if this option is not set.\n   */\n\n\t}, {\n\t\tkey: 'execute',\n\t\tvalue: function execute() {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\t\t\tvar editor = this.editor;\n\t\t\tvar document = editor.document;\n\n\t\t\tdocument.enqueueChanges(function () {\n\t\t\t\tvar batch = options.batch || document.batch();\n\t\t\t\tvar blocks = Array.from(document.selection.getSelectedBlocks()).filter(function (block) {\n\t\t\t\t\treturn checkCanBecomeHeading(block, _this2.modelElement, document.schema);\n\t\t\t\t});\n\n\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\tvar _didIteratorError = false;\n\t\t\t\tvar _iteratorError = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator = blocks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\tvar block = _step.value;\n\n\t\t\t\t\t\tif (!block.is(_this2.modelElement)) {\n\t\t\t\t\t\t\tbatch.rename(block, _this2.modelElement);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t_iteratorError = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}]);\n\n\treturn HeadingCommand;\n}(_command2.default);\n\n// Checks whether the given block can be replaced by a specific heading.\n//\n// @private\n// @param {module:engine/model/element~Element} block A block to be tested.\n// @param {module:heading/headingcommand~HeadingCommand#modelElement} heading Command element name in the model.\n// @param {module:engine/model/schema~Schema} schema The schema of the document.\n// @returns {Boolean}\n\n\nexports.default = HeadingCommand;\nfunction checkCanBecomeHeading(block, heading, schema) {\n\treturn schema.check({\n\t\tname: heading,\n\t\tinside: _position2.default.createBefore(block)\n\t});\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-heading/src/headingcommand.js\n// module id = 337\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _plugin = require('@ckeditor/ckeditor5-core/src/plugin');\n\nvar _plugin2 = _interopRequireDefault(_plugin);\n\nvar _buildmodelconverter = require('@ckeditor/ckeditor5-engine/src/conversion/buildmodelconverter');\n\nvar _buildmodelconverter2 = _interopRequireDefault(_buildmodelconverter);\n\nvar _buildviewconverter = require('@ckeditor/ckeditor5-engine/src/conversion/buildviewconverter');\n\nvar _buildviewconverter2 = _interopRequireDefault(_buildviewconverter);\n\nvar _paragraph = require('@ckeditor/ckeditor5-paragraph/src/paragraph');\n\nvar _paragraph2 = _interopRequireDefault(_paragraph);\n\nvar _headingcommand = require('./headingcommand');\n\nvar _headingcommand2 = _interopRequireDefault(_headingcommand);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module heading/headingengine\n */\n\nvar defaultModelElement = 'paragraph';\n\n/**\n * The headings engine feature. It handles switching between block formats &ndash; headings and paragraph.\n * This class represents the engine part of the heading feature. See also {@link module:heading/heading~Heading}.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar HeadingEngine = function (_Plugin) {\n\t_inherits(HeadingEngine, _Plugin);\n\n\t/**\n  * @inheritDoc\n  */\n\tfunction HeadingEngine(editor) {\n\t\t_classCallCheck(this, HeadingEngine);\n\n\t\tvar _this = _possibleConstructorReturn(this, (HeadingEngine.__proto__ || Object.getPrototypeOf(HeadingEngine)).call(this, editor));\n\n\t\teditor.config.define('heading', {\n\t\t\toptions: [{ modelElement: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' }, { modelElement: 'heading1', viewElement: 'h2', title: 'Heading 1', class: 'ck-heading_heading1' }, { modelElement: 'heading2', viewElement: 'h3', title: 'Heading 2', class: 'ck-heading_heading2' }, { modelElement: 'heading3', viewElement: 'h4', title: 'Heading 3', class: 'ck-heading_heading3' }]\n\t\t});\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(HeadingEngine, [{\n\t\tkey: 'init',\n\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tvalue: function init() {\n\t\t\tvar editor = this.editor;\n\t\t\tvar data = editor.data;\n\t\t\tvar editing = editor.editing;\n\t\t\tvar options = editor.config.get('heading.options');\n\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = options[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar option = _step.value;\n\n\t\t\t\t\t// Skip paragraph - it is defined in required Paragraph feature.\n\t\t\t\t\tif (option.modelElement !== defaultModelElement) {\n\t\t\t\t\t\t// Schema.\n\t\t\t\t\t\teditor.document.schema.registerItem(option.modelElement, '$block');\n\n\t\t\t\t\t\t// Build converter from model to view for data and editing pipelines.\n\t\t\t\t\t\t(0, _buildmodelconverter2.default)().for(data.modelToView, editing.modelToView).fromElement(option.modelElement).toElement(option.viewElement);\n\n\t\t\t\t\t\t// Build converter from view to model for data pipeline.\n\t\t\t\t\t\t(0, _buildviewconverter2.default)().for(data.viewToModel).fromElement(option.viewElement).toElement(option.modelElement);\n\n\t\t\t\t\t\t// Register the heading command for this option.\n\t\t\t\t\t\teditor.commands.add(option.modelElement, new _headingcommand2.default(editor, option.modelElement));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'afterInit',\n\t\tvalue: function afterInit() {\n\t\t\t// If the enter command is added to the editor, alter its behavior.\n\t\t\t// Enter at the end of a heading element should create a paragraph.\n\t\t\tvar editor = this.editor;\n\t\t\tvar enterCommand = editor.commands.get('enter');\n\t\t\tvar options = editor.config.get('heading.options');\n\n\t\t\tif (enterCommand) {\n\t\t\t\tthis.listenTo(enterCommand, 'afterExecute', function (evt, data) {\n\t\t\t\t\tvar positionParent = editor.document.selection.getFirstPosition().parent;\n\t\t\t\t\tvar batch = data.batch;\n\t\t\t\t\tvar isHeading = options.some(function (option) {\n\t\t\t\t\t\treturn positionParent.is(option.modelElement);\n\t\t\t\t\t});\n\n\t\t\t\t\tif (isHeading && !positionParent.is(defaultModelElement) && positionParent.childCount === 0) {\n\t\t\t\t\t\tbatch.rename(positionParent, defaultModelElement);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}], [{\n\t\tkey: 'requires',\n\t\tget: function get() {\n\t\t\treturn [_paragraph2.default];\n\t\t}\n\t}]);\n\n\treturn HeadingEngine;\n}(_plugin2.default);\n\nexports.default = HeadingEngine;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-heading/src/headingengine.js\n// module id = 338\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _plugin = require('@ckeditor/ckeditor5-core/src/plugin');\n\nvar _plugin2 = _interopRequireDefault(_plugin);\n\nvar _imageengine = require('./image/imageengine');\n\nvar _imageengine2 = _interopRequireDefault(_imageengine);\n\nvar _widget = require('@ckeditor/ckeditor5-widget/src/widget');\n\nvar _widget2 = _interopRequireDefault(_widget);\n\nvar _imagetextalternative = require('./imagetextalternative');\n\nvar _imagetextalternative2 = _interopRequireDefault(_imagetextalternative);\n\nvar _utils = require('./image/utils');\n\nrequire('../theme/theme.scss');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module image/image\n */\n\n/**\n * The image plugin.\n *\n * Uses the {@link module:image/image/imageengine~ImageEngine}.\n *\n * @extends module:core/plugin~Plugin\n */\nvar Image = function (_Plugin) {\n  _inherits(Image, _Plugin);\n\n  function Image() {\n    _classCallCheck(this, Image);\n\n    return _possibleConstructorReturn(this, (Image.__proto__ || Object.getPrototypeOf(Image)).apply(this, arguments));\n  }\n\n  _createClass(Image, [{\n    key: 'init',\n\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      var editor = this.editor;\n      var contextualToolbar = editor.plugins.get('ContextualToolbar');\n\n      // If `ContextualToolbar` plugin is loaded, it should be disabled for images\n      // which have their own toolbar to avoid duplication.\n      // https://github.com/ckeditor/ckeditor5-image/issues/110\n      if (contextualToolbar) {\n        this.listenTo(contextualToolbar, 'show', function (evt) {\n          var selectedElement = editor.editing.view.selection.getSelectedElement();\n\n          if (selectedElement && (0, _utils.isImageWidget)(selectedElement)) {\n            evt.stop();\n          }\n        }, { priority: 'high' });\n      }\n    }\n  }], [{\n    key: 'requires',\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return [_imageengine2.default, _widget2.default, _imagetextalternative2.default];\n    }\n\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: 'pluginName',\n    get: function get() {\n      return 'Image';\n    }\n  }]);\n\n  return Image;\n}(_plugin2.default);\n\n/**\n * The configuration of the image features. Used by the image features in `@ckeditor/ckeditor5-image` package.\n *\n * Read more in {@link module:image/image~ImageConfig}.\n *\n * @member {module:image/image~ImageConfig} module:core/editor/editorconfig~EditorConfig#image\n */\n\n/**\n * The configuration of the image features. Used by the image features in `@ckeditor/ckeditor5-image` package.\n *\n *\t\tClassicEditor\n *\t\t\t.create( {\n * \t\t\t\timage: ... // Image feature options.\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface ImageConfig\n */\n\n\nexports.default = Image;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-image/src/image.js\n// module id = 339\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.viewFigureToModel = viewFigureToModel;\nexports.createImageAttributeConverter = createImageAttributeConverter;\nexports.convertHoistableImage = convertHoistableImage;\nexports.hoistImageThroughElement = hoistImageThroughElement;\n\nvar _position = require('@ckeditor/ckeditor5-engine/src/model/position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _documentfragment = require('@ckeditor/ckeditor5-engine/src/model/documentfragment');\n\nvar _documentfragment2 = _interopRequireDefault(_documentfragment);\n\nvar _writer = require('@ckeditor/ckeditor5-engine/src/model/writer');\n\nvar _writer2 = _interopRequireDefault(_writer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns a function that converts the image view representation:\n *\n *\t\t<figure class=\"image\"><img src=\"...\" alt=\"...\"></img></figure>\n *\n * to the model representation:\n *\n *\t\t<image src=\"...\" alt=\"...\"></image>\n *\n * The entire content of the `<figure>` element except the first `<img>` is being converted as children\n * of the `<image>` model element.\n *\n * @returns {Function}\n */\nfunction viewFigureToModel() {\n\treturn function (evt, data, consumable, conversionApi) {\n\t\t// Do not convert if this is not an \"image figure\".\n\t\tif (!consumable.test(data.input, { name: true, class: 'image' })) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not convert if image cannot be placed in model at this context.\n\t\tif (!conversionApi.schema.check({ name: 'image', inside: data.context, attributes: 'src' })) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Find an image element inside the figure element.\n\t\tvar viewImage = Array.from(data.input.getChildren()).find(function (viewChild) {\n\t\t\treturn viewChild.is('img');\n\t\t});\n\n\t\t// Do not convert if image element is absent, is missing src attribute or was already converted.\n\t\tif (!viewImage || !viewImage.hasAttribute('src') || !consumable.test(viewImage, { name: true })) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Convert view image to model image.\n\t\tvar modelImage = conversionApi.convertItem(viewImage, consumable, data);\n\n\t\t// Convert rest of figure element's children, but in the context of model image, because those converted\n\t\t// children will be added as model image children.\n\t\tdata.context.push(modelImage);\n\n\t\tvar modelChildren = conversionApi.convertChildren(data.input, consumable, data);\n\n\t\tdata.context.pop();\n\n\t\t// Add converted children to model image.\n\t\t_writer2.default.insert(_position2.default.createAt(modelImage), modelChildren);\n\n\t\t// Set model image as conversion result.\n\t\tdata.output = modelImage;\n\t};\n}\n\n/**\n * Creates the image attribute converter for provided model conversion dispatchers.\n *\n * @param {Array.<module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher>} dispatchers\n * @param {String} attributeName\n * @param {function} [conversionCallback] The function that will be called each time given attribute conversion is performed.\n * It will be called with two parameters: a view image element and the type of the conversion: 'addAttribute`, `changeAttribute` or\n * `removeAttribute`. This callback can be used to perform additional processing on view image element.\n */\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module image/image/converters\n */\n\nfunction createImageAttributeConverter(dispatchers, attributeName, conversionCallback) {\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = dispatchers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar dispatcher = _step.value;\n\n\t\t\tdispatcher.on('addAttribute:' + attributeName + ':image', modelToViewAttributeConverter(conversionCallback));\n\t\t\tdispatcher.on('changeAttribute:' + attributeName + ':image', modelToViewAttributeConverter(conversionCallback));\n\t\t\tdispatcher.on('removeAttribute:' + attributeName + ':image', modelToViewAttributeConverter(conversionCallback));\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Returns model to view image converter converting given attribute, and adding it to `img` element nested inside `figure` element.\n// Allows to provide `conversionCallback` called each time conversion is made.\n//\n// @private\nfunction modelToViewAttributeConverter(conversionCallback) {\n\treturn function (evt, data, consumable, conversionApi) {\n\t\tvar parts = evt.name.split(':');\n\t\tvar consumableType = parts[0] + ':' + parts[1];\n\n\t\tif (!consumable.consume(data.item, consumableType)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar figure = conversionApi.mapper.toViewElement(data.item);\n\t\tvar img = figure.getChild(0);\n\t\tvar type = parts[0];\n\n\t\tif (type == 'removeAttribute') {\n\t\t\timg.removeAttribute(data.attributeKey);\n\t\t} else {\n\t\t\timg.setAttribute(data.attributeKey, data.attributeNewValue);\n\t\t}\n\n\t\tif (conversionCallback) {\n\t\t\tconversionCallback(img, type);\n\t\t}\n\t};\n}\n\n// Holds all images that were converted for autohoisting.\nvar autohoistedImages = new WeakSet();\n\n/**\n * A converter which converts `<img>` {@link module:engine/view/element~Element view elements} that can be hoisted.\n *\n * If an `<img>` view element has not been converted, this converter checks if that element could be converted in any\n * context \"above\". If it could, the converter converts the `<img>` element even though it is not allowed in the current\n * context and marks it to be autohoisted. Then {@link module:image/image/converters~hoistImageThroughElement another converter}\n * moves the converted element to the correct location.\n */\nfunction convertHoistableImage(evt, data, consumable, conversionApi) {\n\tvar img = data.input;\n\n\t// If the image has not been consumed (converted)...\n\tif (!consumable.test(img, { name: true, attribute: ['src'] })) {\n\t\treturn;\n\t}\n\t// At this point the image has not been converted because it was not allowed by schema. It might be in wrong\n\t// context or missing an attribute, but above we already checked whether the image has mandatory src attribute.\n\n\t// If the image would be allowed if it was in one of its ancestors...\n\tvar allowedContext = _findAllowedContext({ name: 'image', attributes: ['src'] }, data.context, conversionApi.schema);\n\n\tif (!allowedContext) {\n\t\treturn;\n\t}\n\n\t// Convert it in that context...\n\tvar newData = Object.assign({}, data);\n\tnewData.context = allowedContext;\n\n\tdata.output = conversionApi.convertItem(img, consumable, newData);\n\n\t// And mark that image to be hoisted.\n\tautohoistedImages.add(data.output);\n}\n\n// Basing on passed `context`, searches for \"closest\" context in which model element represented by `modelData`\n// would be allowed by `schema`.\n//\n// @private\n// @param {Object} modelData Object describing model element to check. Has two properties: `name` with model element name\n// and `attributes` with keys of attributes of that model element.\n// @param {Array} context Context in which original conversion was supposed to take place.\n// @param {module:engine/model/schema~Schema} schema Schema to check with.\n// @returns {Array|null} Context in which described model element would be allowed by `schema` or `null` if such context\n// could not been found.\nfunction _findAllowedContext(modelData, context, schema) {\n\t// Copy context array so we won't modify original array.\n\tcontext = context.slice();\n\n\t// Prepare schema query to check with schema.\n\t// Since `inside` property is passed as reference to `context` variable, we don't need to modify `schemaQuery`.\n\tvar schemaQuery = {\n\t\tname: modelData.name,\n\t\tattributes: modelData.attributes,\n\t\tinside: context\n\t};\n\n\t// Try out all possible contexts.\n\twhile (context.length && !schema.check(schemaQuery)) {\n\t\tvar parent = context.pop();\n\t\tvar parentName = typeof parent === 'string' ? parent : parent.name;\n\n\t\t// Do not try to autohoist \"above\" limiting element.\n\t\tif (schema.limits.has(parentName)) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// If `context` has any items it means that image is allowed in that context. Return that context.\n\t// If `context` has no items it means that image was not allowed in any of possible contexts. Return `null`.\n\treturn context.length ? context : null;\n}\n\n/**\n * A converter which hoists `<image>` {@link module:engine/model/element~Element model elements} to allowed context.\n *\n * It looks through all children of the converted {@link module:engine/view/element~Element view element} if it\n * was converted to a model element. It breaks the model element if an `<image>` to-be-hoisted is found.\n *\n *\t\t<div><paragraph>x<image src=\"foo.jpg\"></image>x</paragraph></div> ->\n *\t\t<div><paragraph>x</paragraph></div><image src=\"foo.jpg\"></image><div><paragraph>x</paragraph></div>\n *\n * This works deeply, as shown in the example. This converter added for the `<paragraph>` element will break the `<paragraph>`\n *  element and pass the {@link module:engine/model/documentfragment~DocumentFragment document fragment} in `data.output`.\n *  Then, the `<div>` will be handled by this converter and will be once again broken to hoist the `<image>` up to the root.\n *\n * **Note:** This converter should be executed only after the view element has already been converted, which means that\n * `data.output` for that view element should be already generated when this converter is fired.\n */\nfunction hoistImageThroughElement(evt, data) {\n\t// If this element has been properly converted...\n\tif (!data.output) {\n\t\treturn;\n\t}\n\n\t// And it is an element...\n\t// (If it is document fragment autohoisting does not have to break anything anyway.)\n\t// (And if it is text there are no children here.)\n\tif (!data.output.is('element')) {\n\t\treturn;\n\t}\n\n\t// This will hold newly generated output. At the beginning it is only the original element.\n\tvar newOutput = [];\n\n\t// Check if any of its children is to be hoisted...\n\t// Start from the last child - it is easier to break that way.\n\tfor (var i = data.output.childCount - 1; i >= 0; i--) {\n\t\tvar child = data.output.getChild(i);\n\n\t\tif (autohoistedImages.has(child)) {\n\t\t\t// Break autohoisted element's parent:\n\t\t\t// <parent>{ left-children... }<authoistedElement />{ right-children... }</parent>   --->\n\t\t\t// <parent>{ left-children... }</parent><autohoistedElement /><parent>{ right-children... }</parent>\n\t\t\t//\n\t\t\t// or\n\t\t\t//\n\t\t\t// <parent>{ left-children... }<autohoistedElement /></parent> --->\n\t\t\t// <parent>{ left-children... }</parent><autohoistedElement />\n\t\t\t//\n\t\t\t// or\n\t\t\t//\n\t\t\t// <parent><autohoistedElement />{ right-children... }</parent> --->\n\t\t\t// <autohoistedElement /><parent>{ right-children... }</parent>\n\t\t\t//\n\t\t\t// or\n\t\t\t//\n\t\t\t// <parent><autohoistedElement /></parent> ---> <autohoistedElement />\n\n\t\t\t// Check how many right-children there are.\n\t\t\tvar rightChildrenCount = data.output.childCount - i - 1;\n\t\t\tvar rightParent = null;\n\n\t\t\t// If there are any right-children, clone the prent element and insert those children there.\n\t\t\tif (rightChildrenCount > 0) {\n\t\t\t\trightParent = data.output.clone(false);\n\t\t\t\trightParent.appendChildren(data.output.removeChildren(i + 1, rightChildrenCount));\n\t\t\t}\n\n\t\t\t// Remove the autohoisted element from its parent.\n\t\t\tchild.remove();\n\n\t\t\t// Break \"leading\" `data.output` in `newOutput` into one or more pieces:\n\t\t\t// Remove \"leading\" `data.output` (note that `data.output` is always first item in `newOutput`).\n\t\t\tnewOutput.shift();\n\n\t\t\t// Add the newly created parent of the right-children at the beginning.\n\t\t\tif (rightParent) {\n\t\t\t\tnewOutput.unshift(rightParent);\n\t\t\t}\n\n\t\t\t// Add autohoisted element at the beginning.\n\t\t\tnewOutput.unshift(child);\n\n\t\t\t// Add `data.output` at the beginning, if there is anything left in it.\n\t\t\tif (data.output.childCount > 0) {\n\t\t\t\tnewOutput.unshift(data.output);\n\t\t\t}\n\t\t}\n\t}\n\n\t// If the output has changed pass it further.\n\tif (newOutput.length) {\n\t\tdata.output = new _documentfragment2.default(newOutput);\n\t}\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-image/src/image/converters.js\n// module id = 340\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _plugin = require('@ckeditor/ckeditor5-core/src/plugin');\n\nvar _plugin2 = _interopRequireDefault(_plugin);\n\nvar _imagecaptionengine = require('./imagecaption/imagecaptionengine');\n\nvar _imagecaptionengine2 = _interopRequireDefault(_imagecaptionengine);\n\nrequire('../theme/imagecaption/theme.scss');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module image/imagecaption\n */\n\n/**\n * The image caption plugin.\n *\n * @extends module:core/plugin~Plugin\n */\nvar ImageCaption = function (_Plugin) {\n\t_inherits(ImageCaption, _Plugin);\n\n\tfunction ImageCaption() {\n\t\t_classCallCheck(this, ImageCaption);\n\n\t\treturn _possibleConstructorReturn(this, (ImageCaption.__proto__ || Object.getPrototypeOf(ImageCaption)).apply(this, arguments));\n\t}\n\n\t_createClass(ImageCaption, null, [{\n\t\tkey: 'requires',\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tget: function get() {\n\t\t\treturn [_imagecaptionengine2.default];\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'pluginName',\n\t\tget: function get() {\n\t\t\treturn 'ImageCaption';\n\t\t}\n\t}]);\n\n\treturn ImageCaption;\n}(_plugin2.default);\n\nexports.default = ImageCaption;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-image/src/imagecaption.js\n// module id = 341\n// module chunks = 0","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if ('value' in descriptor)\n                descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }\n    return function (Constructor, protoProps, staticProps) {\n        if (protoProps)\n            defineProperties(Constructor.prototype, protoProps);\n        if (staticProps)\n            defineProperties(Constructor, staticProps);\n        return Constructor;\n    };\n}();\nvar _plugin = require('@ckeditor/ckeditor5-core/src/plugin');\nvar _plugin2 = _interopRequireDefault(_plugin);\nvar _treewalker = require('@ckeditor/ckeditor5-engine/src/model/treewalker');\nvar _treewalker2 = _interopRequireDefault(_treewalker);\nvar _element = require('@ckeditor/ckeditor5-engine/src/model/element');\nvar _element2 = _interopRequireDefault(_element);\nvar _containerelement = require('@ckeditor/ckeditor5-engine/src/view/containerelement');\nvar _containerelement2 = _interopRequireDefault(_containerelement);\nvar _element3 = require('@ckeditor/ckeditor5-engine/src/view/element');\nvar _element4 = _interopRequireDefault(_element3);\nvar _writer = require('@ckeditor/ckeditor5-engine/src/view/writer');\nvar _writer2 = _interopRequireDefault(_writer);\nvar _position = require('@ckeditor/ckeditor5-engine/src/model/position');\nvar _position2 = _interopRequireDefault(_position);\nvar _position3 = require('@ckeditor/ckeditor5-engine/src/view/position');\nvar _position4 = _interopRequireDefault(_position3);\nvar _buildviewconverter = require('@ckeditor/ckeditor5-engine/src/conversion/buildviewconverter');\nvar _buildviewconverter2 = _interopRequireDefault(_buildviewconverter);\nvar _utils = require('../image/utils');\nvar _utils2 = require('./utils');\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError('Cannot call a class as a function');\n    }\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n    }\n    return call && (typeof call === 'object' || typeof call === 'function') ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n        throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass)\n        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n/**\n * @module image/imagecaption/imagecaptionengine\n */\n/**\n * The image caption engine plugin.\n *\n * It registers proper converters. It takes care of adding a caption element if the image without it is inserted\n * to the model document.\n *\n * @extends module:core/plugin~Plugin\n */\nvar ImageCaptionEngine = function (_Plugin) {\n    _inherits(ImageCaptionEngine, _Plugin);\n    function ImageCaptionEngine() {\n        _classCallCheck(this, ImageCaptionEngine);\n        return _possibleConstructorReturn(this, (ImageCaptionEngine.__proto__ || Object.getPrototypeOf(ImageCaptionEngine)).apply(this, arguments));\n    }\n    _createClass(ImageCaptionEngine, [\n        {\n            key: 'init',\n            /**\n   * @inheritDoc\n   */\n            value: function init() {\n                var _this2 = this;\n                var editor = this.editor;\n                var document = editor.document;\n                var viewDocument = editor.editing.view;\n                var schema = document.schema;\n                var data = editor.data;\n                var editing = editor.editing;\n                var t = editor.t;\n                /**\n    * Last selected caption editable.\n    * It is used for hiding the editable when it is empty and the image widget is no longer selected.\n    *\n    * @private\n    * @member {module:engine/view/editableelement~EditableElement} #_lastSelectedCaption\n    */\n                /**\n    * A function used to create the editable caption element in the editing view.\n    *\n    * @private\n    * @member {Function}\n    */\n                this._createCaption = (0, _utils2.captionElementCreator)(viewDocument, t('Enter image caption'));\n                // Schema configuration.\n                schema.registerItem('caption', '$block');\n                schema.allow({\n                    name: '$inline',\n                    inside: 'caption'\n                });\n                schema.allow({\n                    name: 'caption',\n                    inside: 'image'\n                });\n                schema.limits.add('caption');\n                // Add caption element to each image inserted without it.\n                document.on('change', insertMissingModelCaptionElement);\n                // View to model converter for the data pipeline.\n                (0, _buildviewconverter2.default)().for(data.viewToModel).from(_utils2.matchImageCaption).toElement('caption');\n                // Model to view converter for the data pipeline.\n                data.modelToView.on('insert:caption', captionModelToView(new _containerelement2.default('figcaption'), false));\n                // Model to view converter for the editing pipeline.\n                editing.modelToView.on('insert:caption', captionModelToView(this._createCaption));\n                // Always show caption in view when something is inserted in model.\n                editing.modelToView.on('insert', function (evt, data) {\n                    return _this2._fixCaptionVisibility(data.item);\n                }, { priority: 'high' });\n                // Hide caption when everything is removed from it.\n                editing.modelToView.on('remove', function (evt, data) {\n                    return _this2._fixCaptionVisibility(data.sourcePosition.parent);\n                }, { priority: 'high' });\n                // Update view before each rendering.\n                this.listenTo(viewDocument, 'render', function () {\n                    return _this2._updateCaptionVisibility();\n                }, { priority: 'high' });\n            }    /**\n   * Updates the view before each rendering, making sure that empty captions (so unnecessary ones) are hidden\n   * and then visible when the image is selected.\n   *\n   * @private\n   */\n        },\n        {\n            key: '_updateCaptionVisibility',\n            value: function _updateCaptionVisibility() {\n                var mapper = this.editor.editing.mapper;\n                var viewSelection = this.editor.editing.view.selection;\n                var selectedElement = viewSelection.getSelectedElement();\n                var viewCaption = void 0;\n                // Hide last selected caption if have no child elements.\n                if (this._lastSelectedCaption && !this._lastSelectedCaption.childCount) {\n                    this._lastSelectedCaption.addClass('ck-hidden');\n                }\n                // If whole image widget is selected.\n                if (selectedElement && (0, _utils.isImageWidget)(selectedElement)) {\n                    var modelImage = mapper.toModelElement(selectedElement);\n                    var modelCaption = (0, _utils2.getCaptionFromImage)(modelImage);\n                    viewCaption = mapper.toViewElement(modelCaption);\n                }\n                // If selection is placed inside caption.\n                if ((0, _utils2.isCaption)(viewSelection.editableElement)) {\n                    viewCaption = viewSelection.editableElement;\n                }\n                if (viewCaption) {\n                    viewCaption.removeClass('ck-hidden');\n                    this._lastSelectedCaption = viewCaption;\n                }\n            }    /**\n   * Fixes caption visibility during the model-to-view conversion.\n   * Checks if the changed node is placed inside the caption element and fixes its visibility in the view.\n   *\n   * @private\n   * @param {module:engine/model/node~Node} node\n   */\n        },\n        {\n            key: '_fixCaptionVisibility',\n            value: function _fixCaptionVisibility(node) {\n                var modelCaption = getParentCaption(node);\n                var mapper = this.editor.editing.mapper;\n                if (modelCaption) {\n                    var viewCaption = mapper.toViewElement(modelCaption);\n                    if (viewCaption) {\n                        if (modelCaption.childCount) {\n                            viewCaption.removeClass('ck-hidden');\n                        } else {\n                            viewCaption.addClass('ck-hidden');\n                        }\n                    }\n                }\n            }\n        }\n    ]);\n    return ImageCaptionEngine;\n}(_plugin2.default);\n// Checks whether data inserted to the model document have image element that has no caption element inside it.\n// If there is none - adds it to the image element.\n//\n// @private\nexports.default = ImageCaptionEngine;\nfunction insertMissingModelCaptionElement(evt, changeType, data, batch) {\n    if (changeType !== 'insert') {\n        return;\n    }\n    var walker = new _treewalker2.default({\n        boundaries: data.range,\n        ignoreElementEnd: true\n    });\n    var _loop = function _loop(value) {\n        var item = value.item;\n        if (value.type == 'elementStart' && (0, _utils.isImage)(item) && !(0, _utils2.getCaptionFromImage)(item)) {\n            batch.document.enqueueChanges(function () {\n                // Make sure that the image does not have caption already.\n                // https://github.com/ckeditor/ckeditor5-image/issues/78\n                if (!(0, _utils2.getCaptionFromImage)(item)) {\n                    batch.insert(_position2.default.createAt(item, 'end'), new _element2.default('caption'));\n                }\n            });\n        }\n    };\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n    try {\n        for (var _iterator = walker[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var value = _step.value;\n            _loop(value);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n}\n// Creates a converter that converts image caption model element to view element.\n//\n// @private\n// @param {Function|module:engine/view/element~Element} elementCreator\n// @param {Boolean} [hide=true] When set to `false` view element will not be inserted when it's empty.\n// @return {Function}\nfunction captionModelToView(elementCreator) {\n    var hide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    return function (evt, data, consumable, conversionApi) {\n        var captionElement = data.item;\n        // Return if element shouldn't be present when empty.\n        if (!captionElement.childCount && !hide) {\n            return;\n        }\n        if ((0, _utils.isImage)(captionElement.parent)) {\n            if (!consumable.consume(data.item, 'insert')) {\n                return;\n            }\n            var viewImage = conversionApi.mapper.toViewElement(data.range.start.parent);\n            var viewCaption = elementCreator instanceof _element4.default ? elementCreator.clone(true) : elementCreator();\n            // Hide if empty.\n            if (!captionElement.childCount) {\n                viewCaption.addClass('ck-hidden');\n            }\n            insertViewCaptionAndBind(viewCaption, data.item, viewImage, conversionApi.mapper);\n        }\n    };\n}\n// Inserts `viewCaption` at the end of `viewImage` and binds it to `modelCaption`.\n//\n// @private\n// @param {module:engine/view/containerelement~ContainerElement} viewCaption\n// @param {module:engine/model/element~Element} modelCaption\n// @param {module:engine/view/containerelement~ContainerElement} viewImage\n// @param {module:engine/conversion/mapper~Mapper} mapper\nfunction insertViewCaptionAndBind(viewCaption, modelCaption, viewImage, mapper) {\n    var viewPosition = _position4.default.createAt(viewImage, 'end');\n    _writer2.default.insert(viewPosition, viewCaption);\n    mapper.bindElements(modelCaption, viewCaption);\n}\n/**\n * Checks if the provided node or one of its ancestors is a caption element, and returns it.\n *\n * @param {module:engine/model/node~Node} node\n * @returns {module:engine/model/element~Element|null}\n */\nfunction getParentCaption(node) {\n    var ancestors = node.getAncestors({ includeSelf: true });\n    var caption = ancestors.find(function (ancestor) {\n        return ancestor.name == 'caption';\n    });\n    if (caption && caption.parent && caption.parent.name == 'image') {\n        return caption;\n    }\n    return null;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-image/src/imagecaption/imagecaptionengine.js\n// module id = 342\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.captionElementCreator = captionElementCreator;\nexports.isCaption = isCaption;\nexports.getCaptionFromImage = getCaptionFromImage;\nexports.matchImageCaption = matchImageCaption;\n\nvar _element = require('@ckeditor/ckeditor5-engine/src/model/element');\n\nvar _element2 = _interopRequireDefault(_element);\n\nvar _editableelement = require('@ckeditor/ckeditor5-engine/src/view/editableelement');\n\nvar _editableelement2 = _interopRequireDefault(_editableelement);\n\nvar _placeholder = require('@ckeditor/ckeditor5-engine/src/view/placeholder');\n\nvar _utils = require('@ckeditor/ckeditor5-widget/src/utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module image/imagecaption/utils\n */\n\nvar captionSymbol = Symbol('imageCaption');\n\n/**\n * Returns a function that creates a caption editable element for the given {@link module:engine/view/document~Document}.\n *\n * @param {module:engine/view/document~Document} viewDocument\n * @param {String} placeholderText The text to be displayed when the caption is empty.\n * @return {Function}\n */\nfunction captionElementCreator(viewDocument, placeholderText) {\n  return function () {\n    var editable = new _editableelement2.default('figcaption');\n    editable.document = viewDocument;\n    editable.setCustomProperty(captionSymbol, true);\n    (0, _placeholder.attachPlaceholder)(editable, placeholderText);\n\n    return (0, _utils.toWidgetEditable)(editable);\n  };\n}\n\n/**\n * Returns `true` if a given view element is the image caption editable.\n *\n * @param {module:engine/view/element~Element} viewElement\n * @return {Boolean}\n */\nfunction isCaption(viewElement) {\n  return !!viewElement.getCustomProperty(captionSymbol);\n}\n\n/**\n * Returns the caption model element from a given image element. Returns `null` if no caption is found.\n *\n * @param {module:engine/model/element~Element} imageModelElement\n * @return {module:engine/model/element~Element|null}\n */\nfunction getCaptionFromImage(imageModelElement) {\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = imageModelElement.getChildren()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var node = _step.value;\n\n      if (node instanceof _element2.default && node.name == 'caption') {\n        return node;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return null;\n}\n\n/**\n * {@link module:engine/view/matcher~Matcher} pattern. Checks if a given element is a `<figcaption>` element that is placed\n * inside the image `<figure>` element.\n *\n * @param {module:engine/view/element~Element} element\n * @returns {Object|null} Returns the object accepted by {@link module:engine/view/matcher~Matcher} or `null` if the element\n * cannot be matched.\n */\nfunction matchImageCaption(element) {\n  var parent = element.parent;\n\n  // Convert only captions for images.\n  if (element.name == 'figcaption' && parent && parent.name == 'figure' && parent.hasClass('image')) {\n    return { name: true };\n  }\n\n  return null;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-image/src/imagecaption/utils.js\n// module id = 343\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _plugin = require('@ckeditor/ckeditor5-core/src/plugin');\n\nvar _plugin2 = _interopRequireDefault(_plugin);\n\nvar _imagestyleengine = require('./imagestyle/imagestyleengine');\n\nvar _imagestyleengine2 = _interopRequireDefault(_imagestyleengine);\n\nvar _buttonview = require('@ckeditor/ckeditor5-ui/src/button/buttonview');\n\nvar _buttonview2 = _interopRequireDefault(_buttonview);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module image/imagestyle\n */\n\n/**\n * The image style plugin.\n *\n * Uses the {@link module:image/imagestyle/imagestyleengine~ImageStyleEngine}.\n *\n * @extends module:core/plugin~Plugin\n */\nvar ImageStyle = function (_Plugin) {\n  _inherits(ImageStyle, _Plugin);\n\n  function ImageStyle() {\n    _classCallCheck(this, ImageStyle);\n\n    return _possibleConstructorReturn(this, (ImageStyle.__proto__ || Object.getPrototypeOf(ImageStyle)).apply(this, arguments));\n  }\n\n  _createClass(ImageStyle, [{\n    key: 'init',\n\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      var styles = this.editor.config.get('image.styles');\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = styles[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var style = _step.value;\n\n          this._createButton(style);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n\n    /**\n     * Creates a button for each style and stores it in the editor {@link module:ui/componentfactory~ComponentFactory ComponentFactory}.\n     *\n     * @private\n     * @param {module:image/imagestyle/imagestyleengine~ImageStyleFormat} style\n     */\n\n  }, {\n    key: '_createButton',\n    value: function _createButton(style) {\n      var _this2 = this;\n\n      var editor = this.editor;\n      var command = editor.commands.get(style.name);\n\n      editor.ui.componentFactory.add(style.name, function (locale) {\n        var view = new _buttonview2.default(locale);\n\n        view.set({\n          label: style.title,\n          icon: style.icon,\n          tooltip: true\n        });\n\n        view.bind('isEnabled').to(command, 'isEnabled');\n        view.bind('isOn').to(command, 'value');\n\n        _this2.listenTo(view, 'execute', function () {\n          return editor.execute(style.name);\n        });\n\n        return view;\n      });\n    }\n  }], [{\n    key: 'requires',\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return [_imagestyleengine2.default];\n    }\n\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: 'pluginName',\n    get: function get() {\n      return 'ImageStyle';\n    }\n  }]);\n\n  return ImageStyle;\n}(_plugin2.default);\n\n/**\n * Available image styles.\n * The option is used by the {@link module:image/imagestyle/imagestyleengine~ImageStyleEngine} feature.\n *\n * The default value is:\n *\n *\t\timport fullSizeIcon from '@ckeditor/ckeditor5-core/theme/icons/object-center.svg';\n *\t\timport sideIcon from '@ckeditor/ckeditor5-core/theme/icons/object-right.svg';\n *\n *\t\t// ...\n *\n *\t\tconst imageConfig = {\n *\t\t\tstyles: [\n *\t\t\t\t// Option which defines a style which doesn't apply any class.\n *\t\t\t\t// The style is titled \"full\" because such images are often styled to take 100% width of the content.\n *\t\t\t\t{ name: 'imageStyleFull', title: t( 'Full size image' ), icon: fullSizeIcon, value: null },\n *\n *\t\t\t\t// Option which represents a side image.\n *\t\t\t\t{ name: 'imageStyleSide', title: t( 'Side image' ), icon: sideIcon, value: 'side', className: 'image-style-side' }\n *\t\t\t]\n *\t\t};\n *\n * Read more about styling images in the {@linkTODO Image styles guide}.\n *\n * The feature creates commands based on defined styles, so you can change the style of a selected image by executing\n * the following command:\n *\n *\t\teditor.execute( 'imageStyleSide' );\n *\n * The features creates also buttons which execute the commands, so assuming that you use the\n * default image styles setting you can {@link module:image/image~ImageConfig#toolbar configure the image toolbar}\n * to contain these options:\n *\n *\t\tconst imageConfig = {\n *\t\t\ttoolbar: [ 'imageStyleFull', 'imageStyleSide' ]\n *\t\t};\n *\n * @member {Array.<module:image/imagestyle/imagestyleengine~ImageStyleFormat>} module:image/image~ImageConfig#styles\n */\n\n\nexports.default = ImageStyle;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-image/src/imagestyle.js\n// module id = 344\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.modelToViewStyleAttribute = modelToViewStyleAttribute;\nexports.viewToModelStyleAttribute = viewToModelStyleAttribute;\n\nvar _utils = require('../image/utils');\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /**\n                                                                                                                                                                                                     * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                     * For licensing, see LICENSE.md.\n                                                                                                                                                                                                     */\n\n/**\n * @module image/imagestyle/converters\n */\n\n/**\n * Returns a converter for the `imageStyle` attribute. It can be used for adding, changing and removing the attribute.\n *\n * @param {Object} styles An object containing available styles. See {@link module:image/imagestyle/imagestyleengine~ImageStyleFormat}\n * for more details.\n * @returns {Function} A model-to-view attribute converter.\n */\nfunction modelToViewStyleAttribute(styles) {\n\treturn function (evt, data, consumable, conversionApi) {\n\t\tvar eventType = evt.name.split(':')[0];\n\t\tvar consumableType = eventType + ':imageStyle';\n\n\t\tif (!consumable.test(data.item, consumableType)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Check if there is class name associated with given value.\n\t\tvar newStyle = getStyleByValue(data.attributeNewValue, styles);\n\t\tvar oldStyle = getStyleByValue(data.attributeOldValue, styles);\n\t\tvar viewElement = conversionApi.mapper.toViewElement(data.item);\n\n\t\tif (handleRemoval(eventType, oldStyle, viewElement) || handleAddition(eventType, newStyle, viewElement)) {\n\t\t\tconsumable.consume(data.item, consumableType);\n\t\t}\n\t};\n}\n\n/**\n * Returns a view-to-model converter converting image CSS classes to a proper value in the model.\n *\n * @param {Array.<module:image/imagestyle/imagestyleengine~ImageStyleFormat>} styles Styles for which the converter is created.\n * @returns {Function} A view-to-model converter.\n */\nfunction viewToModelStyleAttribute(styles) {\n\t// Convert only styles without `null` value.\n\tvar filteredStyles = styles.filter(function (style) {\n\t\treturn style.value !== null;\n\t});\n\n\treturn function (evt, data, consumable, conversionApi) {\n\t\tvar _iteratorNormalCompletion = true;\n\t\tvar _didIteratorError = false;\n\t\tvar _iteratorError = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator = filteredStyles[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\tvar style = _step.value;\n\n\t\t\t\tviewToModelImageStyle(style, data, consumable, conversionApi);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t_didIteratorError = true;\n\t\t\t_iteratorError = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t_iterator.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Converter from view to model converting single style.\n// For more information see {@link module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher};\n//\n// @param {module:image/imagestyle/imagestyleengine~ImageStyleFormat} style\n// @param {Object} data\n// @param {module:engine/conversion/viewconsumable~ViewConsumable} consumable\n// @param {Object} conversionApi\nfunction viewToModelImageStyle(style, data, consumable, conversionApi) {\n\tvar viewFigureElement = data.input;\n\tvar modelImageElement = data.output;\n\n\t// *** Step 1: Validate conversion.\n\t// Check if view element has proper class to consume.\n\tif (!consumable.test(viewFigureElement, { class: style.className })) {\n\t\treturn;\n\t}\n\n\t// Check if figure is converted to image.\n\tif (!(0, _utils.isImage)(modelImageElement)) {\n\t\treturn;\n\t}\n\n\t// Check if image element can be placed in current context wit additional attribute.\n\tvar attributes = [].concat(_toConsumableArray(modelImageElement.getAttributeKeys()), ['imageStyle']);\n\n\tif (!conversionApi.schema.check({ name: 'image', inside: data.context, attributes: attributes })) {\n\t\treturn;\n\t}\n\n\t// *** Step2: Convert to model.\n\tconsumable.consume(viewFigureElement, { class: style.className });\n\tmodelImageElement.setAttribute('imageStyle', style.value);\n}\n\n// Returns style with given `value` from array of styles.\n//\n// @param {String} value\n// @param {Array.<module:image/imagestyle/imagestyleengine~ImageStyleFormat> } styles\n// @return {module:image/imagestyle/imagestyleengine~ImageStyleFormat|undefined}\nfunction getStyleByValue(value, styles) {\n\tvar _iteratorNormalCompletion2 = true;\n\tvar _didIteratorError2 = false;\n\tvar _iteratorError2 = undefined;\n\n\ttry {\n\t\tfor (var _iterator2 = styles[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\tvar style = _step2.value;\n\n\t\t\tif (style.value === value) {\n\t\t\t\treturn style;\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError2 = true;\n\t\t_iteratorError2 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t_iterator2.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError2) {\n\t\t\t\tthrow _iteratorError2;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Handles converting removal of the attribute.\n// Returns `true` when handling was processed correctly and further conversion can be performed.\n//\n// @param {String} eventType Type of the event.\n// @param {module:image/imagestyle/imagestyleengine~ImageStyleFormat} style\n// @param {module:engine/view/element~Element} viewElement\n// @returns {Boolean} Whether the change was handled.\nfunction handleRemoval(eventType, style, viewElement) {\n\tif (style && (eventType == 'changeAttribute' || eventType == 'removeAttribute')) {\n\t\tviewElement.removeClass(style.className);\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n// Handles converting addition of the attribute.\n// Returns `true` when handling was processed correctly and further conversion can be performed.\n//\n// @param {String} eventType Type of the event.\n// @param {module:image/imagestyle/imagestyleengine~ImageStyleFormat} style\n// @param {module:engine/view/element~Element} viewElement\n// @returns {Boolean} Whether the change was handled.\nfunction handleAddition(evenType, style, viewElement) {\n\tif (style && (evenType == 'addAttribute' || evenType == 'changeAttribute')) {\n\t\tviewElement.addClass(style.className);\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-image/src/imagestyle/converters.js\n// module id = 345\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _command = require('@ckeditor/ckeditor5-core/src/command');\n\nvar _command2 = _interopRequireDefault(_command);\n\nvar _utils = require('../image/utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module image/imagestyle/imagestylecommand\n */\n\n/**\n * The image style command. It is used to apply different image styles.\n *\n * @extends module:core/command~Command\n */\nvar ImageStyleCommand = function (_Command) {\n\t_inherits(ImageStyleCommand, _Command);\n\n\t/**\n  * Creates an instance of the image style command. Each command instance is handling one style.\n  *\n  * @param {module:core/editor/editor~Editor} editor The editor instance.\n  * @param {module:image/imagestyle/imagestyleengine~ImageStyleFormat} styles A style to be applied by this command.\n  */\n\tfunction ImageStyleCommand(editor, style) {\n\t\t_classCallCheck(this, ImageStyleCommand);\n\n\t\t/**\n   * The value of the command &mdash; `true` if a style handled by the command is applied on a currently selected image,\n   * `false` otherwise.\n   *\n   * @readonly\n   * @observable\n   * @member {Boolean} #value\n   */\n\n\t\t/**\n   * A style handled by this command.\n   *\n   * @readonly\n   * @member {module:image/imagestyle/imagestyleengine~ImageStyleFormat} #style\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (ImageStyleCommand.__proto__ || Object.getPrototypeOf(ImageStyleCommand)).call(this, editor));\n\n\t\t_this.style = style;\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(ImageStyleCommand, [{\n\t\tkey: 'refresh',\n\t\tvalue: function refresh() {\n\t\t\tvar element = this.editor.document.selection.getSelectedElement();\n\n\t\t\tthis.isEnabled = (0, _utils.isImage)(element);\n\n\t\t\tif (!element) {\n\t\t\t\tthis.value = false;\n\t\t\t} else if (this.style.value === null) {\n\t\t\t\tthis.value = !element.hasAttribute('imageStyle');\n\t\t\t} else {\n\t\t\t\tthis.value = element.getAttribute('imageStyle') == this.style.value;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Executes the command.\n   *\n   * @fires execute\n   * @param {Object} options\n   * @param {module:engine/model/batch~Batch} [options.batch] A batch to collect all the change steps. A new batch will be\n   * created if this option is not set.\n   */\n\n\t}, {\n\t\tkey: 'execute',\n\t\tvalue: function execute() {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\t\t\tif (this.value) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar doc = this.editor.document;\n\t\t\tvar imageElement = doc.selection.getSelectedElement();\n\n\t\t\tdoc.enqueueChanges(function () {\n\t\t\t\tvar batch = options.batch || doc.batch();\n\n\t\t\t\tbatch.setAttribute(imageElement, 'imageStyle', _this2.style.value);\n\t\t\t});\n\t\t}\n\t}]);\n\n\treturn ImageStyleCommand;\n}(_command2.default);\n\nexports.default = ImageStyleCommand;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-image/src/imagestyle/imagestylecommand.js\n// module id = 346\n// module chunks = 0","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if ('value' in descriptor)\n                descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }\n    return function (Constructor, protoProps, staticProps) {\n        if (protoProps)\n            defineProperties(Constructor.prototype, protoProps);\n        if (staticProps)\n            defineProperties(Constructor, staticProps);\n        return Constructor;\n    };\n}();\nvar _plugin = require('@ckeditor/ckeditor5-core/src/plugin');\nvar _plugin2 = _interopRequireDefault(_plugin);\nvar _imagestylecommand = require('./imagestylecommand');\nvar _imagestylecommand2 = _interopRequireDefault(_imagestylecommand);\nvar _imageengine = require('../image/imageengine');\nvar _imageengine2 = _interopRequireDefault(_imageengine);\nvar _converters = require('./converters');\nvar _objectCenter = require('@ckeditor/ckeditor5-core/theme/icons/object-center.svg');\nvar _objectCenter2 = _interopRequireDefault(_objectCenter);\nvar _objectRight = require('@ckeditor/ckeditor5-core/theme/icons/object-right.svg');\nvar _objectRight2 = _interopRequireDefault(_objectRight);\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError('Cannot call a class as a function');\n    }\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n    }\n    return call && (typeof call === 'object' || typeof call === 'function') ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n        throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass)\n        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n/**\n * @module image/imagestyle/imagestyleengine\n */\n/**\n * The image style engine plugin. It sets the default configuration, creates converters and registers\n * {@link module:image/imagestyle/imagestylecommand~ImageStyleCommand ImageStyleCommand}.\n *\n * @extends {module:core/plugin~Plugin}\n */\nvar ImageStyleEngine = function (_Plugin) {\n    _inherits(ImageStyleEngine, _Plugin);\n    function ImageStyleEngine() {\n        _classCallCheck(this, ImageStyleEngine);\n        return _possibleConstructorReturn(this, (ImageStyleEngine.__proto__ || Object.getPrototypeOf(ImageStyleEngine)).apply(this, arguments));\n    }\n    _createClass(ImageStyleEngine, [{\n            key: 'init',\n            /**\n   * @inheritDoc\n   */\n            value: function init() {\n                var editor = this.editor;\n                var t = editor.t;\n                var doc = editor.document;\n                var schema = doc.schema;\n                var data = editor.data;\n                var editing = editor.editing;\n                // Define default configuration.\n                editor.config.define('image.styles', [\n                    // This option is equal to situation when no style is applied.\n                    {\n                        name: 'imageStyleFull',\n                        title: t('Full size image'),\n                        icon: _objectCenter2.default,\n                        value: null\n                    },\n                    // This represents side image.\n                    {\n                        name: 'imageStyleSide',\n                        title: t('Side image'),\n                        icon: _objectRight2.default,\n                        value: 'side',\n                        className: 'image-style-side'\n                    }\n                ]);\n                // Get configuration.\n                var styles = editor.config.get('image.styles');\n                // Allow imageStyle attribute in image.\n                // We could call it 'style' but https://github.com/ckeditor/ckeditor5-engine/issues/559.\n                schema.allow({\n                    name: 'image',\n                    attributes: 'imageStyle',\n                    inside: '$root'\n                });\n                // Converters for imageStyle attribute from model to view.\n                var modelToViewConverter = (0, _converters.modelToViewStyleAttribute)(styles);\n                editing.modelToView.on('addAttribute:imageStyle:image', modelToViewConverter);\n                data.modelToView.on('addAttribute:imageStyle:image', modelToViewConverter);\n                editing.modelToView.on('changeAttribute:imageStyle:image', modelToViewConverter);\n                data.modelToView.on('changeAttribute:imageStyle:image', modelToViewConverter);\n                editing.modelToView.on('removeAttribute:imageStyle:image', modelToViewConverter);\n                data.modelToView.on('removeAttribute:imageStyle:image', modelToViewConverter);\n                // Converter for figure element from view to model.\n                data.viewToModel.on('element:figure', (0, _converters.viewToModelStyleAttribute)(styles), { priority: 'low' });\n                // Register separate command for each style.\n                var _iteratorNormalCompletion = true;\n                var _didIteratorError = false;\n                var _iteratorError = undefined;\n                try {\n                    for (var _iterator = styles[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                        var style = _step.value;\n                        editor.commands.add(style.name, new _imagestylecommand2.default(editor, style));\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return) {\n                            _iterator.return();\n                        }\n                    } finally {\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n            }\n        }], [{\n            key: 'requires',\n            /**\n   * @inheritDoc\n   */\n            get: function get() {\n                return [_imageengine2.default];\n            }\n        }]);\n    return ImageStyleEngine;\n}(_plugin2.default);\n/**\n * Image style format descriptor.\n *\n *\t\timport fullIcon from 'path/to/icon.svg`;\n *\n *\t\tconst imageStyleFormat = {\n *\t\t\tname: 'fullSizeImage',\n *\t\t\tvalue: 'full',\n *\t\t\ticon: fullIcon,\n *\t\t\ttitle: 'Full size image',\n *\t\t\tclass: 'image-full-size'\n *\t\t}\n *\n * @typedef {Object} module:image/imagestyle/imagestyleengine~ImageStyleFormat\n * @property {String} name The name of the style. It will be used to:\n * * register the {@link module:core/command~Command command} which will apply this style,\n * * store the style's button in the editor {@link module:ui/componentfactory~ComponentFactory}.\n * @property {String} value A value used to store this style in the model attribute.\n * When the value is `null`, the style will be used as the default one. A default style does not apply any CSS class to the view element.\n * @property {String} icon An SVG icon source (as XML string) to use when creating the style's button.\n * @property {String} title The style's title.\n * @property {String} className The CSS class used to represent the style in view.\n */\nexports.default = ImageStyleEngine;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-image/src/imagestyle/imagestyleengine.js\n// module id = 347\n// module chunks = 0","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if ('value' in descriptor)\n                descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }\n    return function (Constructor, protoProps, staticProps) {\n        if (protoProps)\n            defineProperties(Constructor.prototype, protoProps);\n        if (staticProps)\n            defineProperties(Constructor, staticProps);\n        return Constructor;\n    };\n}();\nvar _plugin = require('@ckeditor/ckeditor5-core/src/plugin');\nvar _plugin2 = _interopRequireDefault(_plugin);\nvar _buttonview = require('@ckeditor/ckeditor5-ui/src/button/buttonview');\nvar _buttonview2 = _interopRequireDefault(_buttonview);\nvar _imagetextalternativeengine = require('./imagetextalternative/imagetextalternativeengine');\nvar _imagetextalternativeengine2 = _interopRequireDefault(_imagetextalternativeengine);\nvar _clickoutsidehandler = require('@ckeditor/ckeditor5-ui/src/bindings/clickoutsidehandler');\nvar _clickoutsidehandler2 = _interopRequireDefault(_clickoutsidehandler);\nvar _textalternativeformview = require('./imagetextalternative/ui/textalternativeformview');\nvar _textalternativeformview2 = _interopRequireDefault(_textalternativeformview);\nvar _contextualballoon = require('@ckeditor/ckeditor5-ui/src/panel/balloon/contextualballoon');\nvar _contextualballoon2 = _interopRequireDefault(_contextualballoon);\nvar _lowVision = require('@ckeditor/ckeditor5-core/theme/icons/low-vision.svg');\nvar _lowVision2 = _interopRequireDefault(_lowVision);\nvar _utils = require('./image/ui/utils');\nrequire('../theme/imagetextalternative/theme.scss');\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError('Cannot call a class as a function');\n    }\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n    }\n    return call && (typeof call === 'object' || typeof call === 'function') ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n        throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass)\n        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n/**\n * @module image/imagetextalternative\n */\n/**\n * The image text alternative plugin.\n *\n * The plugin uses the {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon}.\n *\n * @extends module:core/plugin~Plugin\n */\nvar ImageTextAlternative = function (_Plugin) {\n    _inherits(ImageTextAlternative, _Plugin);\n    function ImageTextAlternative() {\n        _classCallCheck(this, ImageTextAlternative);\n        return _possibleConstructorReturn(this, (ImageTextAlternative.__proto__ || Object.getPrototypeOf(ImageTextAlternative)).apply(this, arguments));\n    }\n    _createClass(ImageTextAlternative, [\n        {\n            key: 'init',\n            /**\n   * @inheritDoc\n   */\n            value: function init() {\n                this._createButton();\n                this._createForm();\n            }    /**\n   * Creates a button showing the balloon panel for changing the image text alternative and\n   * registers it in the editor {@link module:ui/componentfactory~ComponentFactory ComponentFactory}.\n   *\n   * @private\n   */\n        },\n        {\n            key: '_createButton',\n            value: function _createButton() {\n                var _this2 = this;\n                var editor = this.editor;\n                var command = editor.commands.get('imageTextAlternative');\n                var t = editor.t;\n                editor.ui.componentFactory.add('imageTextAlternative', function (locale) {\n                    var view = new _buttonview2.default(locale);\n                    view.set({\n                        label: t('Change image text alternative'),\n                        icon: _lowVision2.default,\n                        tooltip: true\n                    });\n                    view.bind('isEnabled').to(command, 'isEnabled');\n                    _this2.listenTo(view, 'execute', function () {\n                        return _this2._showForm();\n                    });\n                    return view;\n                });\n            }    /**\n   * Creates the {@link module:image/imagetextalternative/ui/textalternativeformview~TextAlternativeFormView}\n   * form.\n   *\n   * @private\n   */\n        },\n        {\n            key: '_createForm',\n            value: function _createForm() {\n                var _this3 = this;\n                var editor = this.editor;\n                var editingView = editor.editing.view;\n                /**\n    * The contextual balloon plugin instance.\n    *\n    * @private\n    * @member {module:ui/panel/balloon/contextualballoon~ContextualBalloon}\n    */\n                this._balloon = this.editor.plugins.get('ContextualBalloon');\n                /**\n    * A form containing a textarea and buttons, used to change the `alt` text value.\n    *\n    * @member {module:image/imagetextalternative/ui/textalternativeformview~TextAlternativeFormView} #form\n    */\n                this._form = new _textalternativeformview2.default(editor.locale);\n                this.listenTo(this._form, 'submit', function () {\n                    editor.execute('imageTextAlternative', { newValue: _this3._form.labeledInput.inputView.element.value });\n                    _this3._hideForm(true);\n                });\n                this.listenTo(this._form, 'cancel', function () {\n                    _this3._hideForm(true);\n                });\n                // Close the form on Esc key press.\n                this._form.keystrokes.set('Esc', function (data, cancel) {\n                    _this3._hideForm(true);\n                    cancel();\n                });\n                // Reposition the balloon upon #render.\n                this.listenTo(editingView, 'render', function () {\n                    if (_this3._isVisible) {\n                        (0, _utils.repositionContextualBalloon)(editor);\n                    }\n                }, { priority: 'low' });\n                // Hide the form when the editor is blurred.\n                this.listenTo(editor.ui.focusTracker, 'change:isFocused', function (evt, name, is) {\n                    if (!is) {\n                        _this3._hideForm();\n                    }\n                }, { priority: 'low' });\n                // Close on click outside of balloon panel element.\n                (0, _clickoutsidehandler2.default)({\n                    emitter: this._form,\n                    activator: function activator() {\n                        return _this3._isVisible;\n                    },\n                    contextElements: [this._form.element],\n                    callback: function callback() {\n                        return _this3._hideForm();\n                    }\n                });\n            }    /**\n   * Shows the {@link #_form} in the {@link #_balloon}.\n   *\n   * @private\n   */\n        },\n        {\n            key: '_showForm',\n            value: function _showForm() {\n                if (this._isVisible) {\n                    return;\n                }\n                var editor = this.editor;\n                var command = editor.commands.get('imageTextAlternative');\n                var labeledInput = this._form.labeledInput;\n                if (!this._balloon.hasView(this._form)) {\n                    this._balloon.add({\n                        view: this._form,\n                        position: (0, _utils.getBalloonPositionData)(editor)\n                    });\n                }\n                // Make sure that each time the panel shows up, the field remains in sync with the value of\n                // the command. If the user typed in the input, then canceled the balloon (`labeledInput#value`\n                // stays unaltered) and re-opened it without changing the value of the command, they would see the\n                // old value instead of the actual value of the command.\n                // https://github.com/ckeditor/ckeditor5-image/issues/114\n                labeledInput.value = labeledInput.inputView.element.value = command.value || '';\n                this._form.labeledInput.select();\n            }    /**\n   * Removes the {@link #_form} from the {@link #_balloon}.\n   *\n   * @param {Boolean} focusEditable Controls whether the editing view is focused afterwards.\n   * @private\n   */\n        },\n        {\n            key: '_hideForm',\n            value: function _hideForm(focusEditable) {\n                if (!this._isVisible) {\n                    return;\n                }\n                this._balloon.remove(this._form);\n                if (focusEditable) {\n                    this.editor.editing.view.focus();\n                }\n            }    /**\n   * Returns `true` when the {@link #_form} is the visible view\n   * in the {@link #_balloon}.\n   *\n   * @private\n   * @type {Boolean}\n   */\n        },\n        {\n            key: '_isVisible',\n            get: function get() {\n                return this._balloon.visibleView == this._form;\n            }\n        }\n    ], [\n        {\n            key: 'requires',\n            /**\n   * @inheritDoc\n   */\n            get: function get() {\n                return [\n                    _imagetextalternativeengine2.default,\n                    _contextualballoon2.default\n                ];\n            }    /**\n   * @inheritDoc\n   */\n        },\n        {\n            key: 'pluginName',\n            get: function get() {\n                return 'ImageTextAlternative';\n            }\n        }\n    ]);\n    return ImageTextAlternative;\n}(_plugin2.default);\nexports.default = ImageTextAlternative;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-image/src/imagetextalternative.js\n// module id = 348\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _command = require('@ckeditor/ckeditor5-core/src/command');\n\nvar _command2 = _interopRequireDefault(_command);\n\nvar _utils = require('../image/utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module image/imagetextalternative/imagetextalternativecommand\n */\n\n/**\n * The image text alternative command. It is used to change the `alt` attribute on `<image>` elements.\n *\n * @extends module:core/command~Command\n */\nvar ImageTextAlternativeCommand = function (_Command) {\n\t_inherits(ImageTextAlternativeCommand, _Command);\n\n\tfunction ImageTextAlternativeCommand() {\n\t\t_classCallCheck(this, ImageTextAlternativeCommand);\n\n\t\treturn _possibleConstructorReturn(this, (ImageTextAlternativeCommand.__proto__ || Object.getPrototypeOf(ImageTextAlternativeCommand)).apply(this, arguments));\n\t}\n\n\t_createClass(ImageTextAlternativeCommand, [{\n\t\tkey: 'refresh',\n\n\t\t/**\n   * The command value: `false` if there is no `alt` attribute, otherwise the value of the `alt` attribute.\n   *\n   * @readonly\n   * @observable\n   * @member {String|Boolean} #value\n   */\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tvalue: function refresh() {\n\t\t\tvar element = this.editor.document.selection.getSelectedElement();\n\n\t\t\tthis.isEnabled = (0, _utils.isImage)(element);\n\n\t\t\tif ((0, _utils.isImage)(element) && element.hasAttribute('alt')) {\n\t\t\t\tthis.value = element.getAttribute('alt');\n\t\t\t} else {\n\t\t\t\tthis.value = false;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Executes the command.\n   *\n   * @fires execute\n   * @param {Object} options\n   * @param {String} options.newValue The new value of the `alt` attribute to set.\n   * @param {module:engine/model/batch~Batch} [options.batch] A batch to collect all the change steps. A new batch will be\n   * created if this option is not set.\n   */\n\n\t}, {\n\t\tkey: 'execute',\n\t\tvalue: function execute(options) {\n\t\t\tvar doc = this.editor.document;\n\t\t\tvar imageElement = doc.selection.getSelectedElement();\n\n\t\t\tdoc.enqueueChanges(function () {\n\t\t\t\tvar batch = options.batch || doc.batch();\n\n\t\t\t\tbatch.setAttribute(imageElement, 'alt', options.newValue);\n\t\t\t});\n\t\t}\n\t}]);\n\n\treturn ImageTextAlternativeCommand;\n}(_command2.default);\n\nexports.default = ImageTextAlternativeCommand;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-image/src/imagetextalternative/imagetextalternativecommand.js\n// module id = 349\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _imagetextalternativecommand = require('./imagetextalternativecommand');\n\nvar _imagetextalternativecommand2 = _interopRequireDefault(_imagetextalternativecommand);\n\nvar _plugin = require('@ckeditor/ckeditor5-core/src/plugin');\n\nvar _plugin2 = _interopRequireDefault(_plugin);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module image/imagetextalternative/imagetextalternativeengine\n */\n\n/**\n * The image text alternative engine plugin.\n * Registers the `imageTextAlternative` command.\n *\n * @extends module:core/plugin~Plugin\n */\nvar ImageTextAlternativeEngine = function (_Plugin) {\n  _inherits(ImageTextAlternativeEngine, _Plugin);\n\n  function ImageTextAlternativeEngine() {\n    _classCallCheck(this, ImageTextAlternativeEngine);\n\n    return _possibleConstructorReturn(this, (ImageTextAlternativeEngine.__proto__ || Object.getPrototypeOf(ImageTextAlternativeEngine)).apply(this, arguments));\n  }\n\n  _createClass(ImageTextAlternativeEngine, [{\n    key: 'init',\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      this.editor.commands.add('imageTextAlternative', new _imagetextalternativecommand2.default(this.editor));\n    }\n  }]);\n\n  return ImageTextAlternativeEngine;\n}(_plugin2.default);\n\nexports.default = ImageTextAlternativeEngine;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-image/src/imagetextalternative/imagetextalternativeengine.js\n// module id = 350\n// module chunks = 0","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if ('value' in descriptor)\n                descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }\n    return function (Constructor, protoProps, staticProps) {\n        if (protoProps)\n            defineProperties(Constructor.prototype, protoProps);\n        if (staticProps)\n            defineProperties(Constructor, staticProps);\n        return Constructor;\n    };\n}();\nvar _get = function get(object, property, receiver) {\n    if (object === null)\n        object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n    if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);\n        if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if ('value' in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;\n        if (getter === undefined) {\n            return undefined;\n        }\n        return getter.call(receiver);\n    }\n};\nvar _view = require('@ckeditor/ckeditor5-ui/src/view');\nvar _view2 = _interopRequireDefault(_view);\nvar _buttonview = require('@ckeditor/ckeditor5-ui/src/button/buttonview');\nvar _buttonview2 = _interopRequireDefault(_buttonview);\nvar _template = require('@ckeditor/ckeditor5-ui/src/template');\nvar _template2 = _interopRequireDefault(_template);\nvar _labeledinputview = require('@ckeditor/ckeditor5-ui/src/labeledinput/labeledinputview');\nvar _labeledinputview2 = _interopRequireDefault(_labeledinputview);\nvar _inputtextview = require('@ckeditor/ckeditor5-ui/src/inputtext/inputtextview');\nvar _inputtextview2 = _interopRequireDefault(_inputtextview);\nvar _submithandler = require('@ckeditor/ckeditor5-ui/src/bindings/submithandler');\nvar _submithandler2 = _interopRequireDefault(_submithandler);\nvar _keystrokehandler = require('@ckeditor/ckeditor5-utils/src/keystrokehandler');\nvar _keystrokehandler2 = _interopRequireDefault(_keystrokehandler);\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError('Cannot call a class as a function');\n    }\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n    }\n    return call && (typeof call === 'object' || typeof call === 'function') ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n        throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass)\n        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n/**\n * @module image/imagetextalternative/ui/textalternativeformview\n */\n/**\n * The TextAlternativeFormView class.\n *\n * @extends module:ui/view~View\n */\nvar TextAlternativeFormView = function (_View) {\n    _inherits(TextAlternativeFormView, _View);\n    /**\n  * @inheritDoc\n  */\n    function TextAlternativeFormView(locale) {\n        _classCallCheck(this, TextAlternativeFormView);\n        var _this = _possibleConstructorReturn(this, (TextAlternativeFormView.__proto__ || Object.getPrototypeOf(TextAlternativeFormView)).call(this, locale));\n        var t = _this.locale.t;\n        /**\n   * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n   *\n   * @readonly\n   * @member {module:utils/keystrokehandler~KeystrokeHandler}\n   */\n        _this.keystrokes = new _keystrokehandler2.default();\n        /**\n   * A textarea with a label.\n   *\n   * @member {module:ui/labeledinput/labeledinputview~LabeledInputView} #labeledTextarea\n   */\n        _this.labeledInput = _this._createLabeledInputView();\n        /**\n   * A button used to submit the form.\n   *\n   * @member {module:ui/button/buttonview~ButtonView} #saveButtonView\n   */\n        _this.saveButtonView = _this._createButton(t('Save'));\n        _this.saveButtonView.type = 'submit';\n        /**\n   * A button used to cancel the form.\n   *\n   * @member {module:ui/button/buttonview~ButtonView} #cancelButtonView\n   */\n        _this.cancelButtonView = _this._createButton(t('Cancel'), 'cancel');\n        _template2.default.extend(_this.saveButtonView.template, { attributes: { class: ['ck-button-action'] } });\n        _this.template = new _template2.default({\n            tag: 'form',\n            attributes: { class: ['cke-text-alternative-form'] },\n            children: [\n                _this.labeledInput,\n                {\n                    tag: 'div',\n                    attributes: { class: ['cke-text-alternative-form__actions'] },\n                    children: [\n                        _this.saveButtonView,\n                        _this.cancelButtonView\n                    ]\n                }\n            ]\n        });\n        (0, _submithandler2.default)({ view: _this });\n        return _this;\n    }\n    /**\n  * @inheritDoc\n  */\n    _createClass(TextAlternativeFormView, [\n        {\n            key: 'init',\n            value: function init() {\n                _get(TextAlternativeFormView.prototype.__proto__ || Object.getPrototypeOf(TextAlternativeFormView.prototype), 'init', this).call(this);\n                this.keystrokes.listenTo(this.element);\n            }    /**\n   * Creates the button view.\n   *\n   * @private\n   * @param {String} label The button label\n   * @param {String} [eventName] The event name that the ButtonView#execute event will be delegated to.\n   * @returns {module:ui/button/buttonview~ButtonView} The button view instance.\n   */\n        },\n        {\n            key: '_createButton',\n            value: function _createButton(label, eventName) {\n                var button = new _buttonview2.default(this.locale);\n                button.label = label;\n                button.withText = true;\n                if (eventName) {\n                    button.delegate('execute').to(this, eventName);\n                }\n                return button;\n            }    /**\n   * Creates an input with a label.\n   *\n   * @private\n   * @return {module:ui/labeledinput/labeledinputview~LabeledInputView}\n   */\n        },\n        {\n            key: '_createLabeledInputView',\n            value: function _createLabeledInputView() {\n                var t = this.locale.t;\n                var labeledInput = new _labeledinputview2.default(this.locale, _inputtextview2.default);\n                labeledInput.label = t('Text alternative');\n                return labeledInput;\n            }\n        }\n    ]);\n    return TextAlternativeFormView;\n}(_view2.default);\nexports.default = TextAlternativeFormView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-image/src/imagetextalternative/ui/textalternativeformview.js\n// module id = 351\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _template = require('@ckeditor/ckeditor5-ui/src/template');\n\nvar _template2 = _interopRequireDefault(_template);\n\nvar _plugin = require('@ckeditor/ckeditor5-core/src/plugin');\n\nvar _plugin2 = _interopRequireDefault(_plugin);\n\nvar _toolbarview = require('@ckeditor/ckeditor5-ui/src/toolbar/toolbarview');\n\nvar _toolbarview2 = _interopRequireDefault(_toolbarview);\n\nvar _contextualballoon = require('@ckeditor/ckeditor5-ui/src/panel/balloon/contextualballoon');\n\nvar _contextualballoon2 = _interopRequireDefault(_contextualballoon);\n\nvar _utils = require('./image/utils');\n\nvar _utils2 = require('./image/ui/utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module image/imagetoolbar\n */\n\nvar balloonClassName = 'ck-toolbar-container ck-editor-toolbar-container';\n\n/**\n * The image toolbar class. Creates an image toolbar that shows up when the image widget is selected.\n *\n * Toolbar components are created using the editor {@link module:ui/componentfactory~ComponentFactory ComponentFactory}\n * based on the {@link module:core/editor/editor~Editor#config configuration} stored under `image.toolbar`.\n *\n * The toolbar uses the {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon}.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar ImageToolbar = function (_Plugin) {\n\t_inherits(ImageToolbar, _Plugin);\n\n\tfunction ImageToolbar() {\n\t\t_classCallCheck(this, ImageToolbar);\n\n\t\treturn _possibleConstructorReturn(this, (ImageToolbar.__proto__ || Object.getPrototypeOf(ImageToolbar)).apply(this, arguments));\n\t}\n\n\t_createClass(ImageToolbar, [{\n\t\tkey: 'afterInit',\n\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tvalue: function afterInit() {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar editor = this.editor;\n\t\t\tvar toolbarConfig = editor.config.get('image.toolbar');\n\n\t\t\t// Don't add the toolbar if there is no configuration.\n\t\t\tif (!toolbarConfig || !toolbarConfig.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/**\n    * The contextual balloon plugin instance.\n    *\n    * @private\n    * @member {module:ui/panel/balloon/contextualballoon~ContextualBalloon}\n    */\n\t\t\tthis._balloon = this.editor.plugins.get('ContextualBalloon');\n\n\t\t\t/**\n    * A `ToolbarView` instance used to display the buttons specific for image\n    * editing.\n    *\n    * @protected\n    * @type {module:ui/toolbar/toolbarview~ToolbarView}\n    */\n\t\t\tthis._toolbar = new _toolbarview2.default();\n\n\t\t\t// Add CSS class to the toolbar.\n\t\t\t_template2.default.extend(this._toolbar.template, {\n\t\t\t\tattributes: {\n\t\t\t\t\tclass: 'ck-editor-toolbar'\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Add buttons to the toolbar.\n\t\t\tthis._toolbar.fillFromConfig(toolbarConfig, editor.ui.componentFactory);\n\n\t\t\t// Show balloon panel each time image widget is selected.\n\t\t\tthis.listenTo(editor.editing.view, 'render', function () {\n\t\t\t\t_this2._checkIsVisible();\n\t\t\t}, { priority: 'low' });\n\n\t\t\t// There is no render method after focus is back in editor, we need to check if balloon panel should be visible.\n\t\t\tthis.listenTo(editor.ui.focusTracker, 'change:isFocused', function () {\n\t\t\t\t_this2._checkIsVisible();\n\t\t\t}, { priority: 'low' });\n\t\t}\n\n\t\t/**\n   * Checks whether the toolbar should show up or hide depending on the\n   * current selection.\n   *\n   * @private\n   */\n\n\t}, {\n\t\tkey: '_checkIsVisible',\n\t\tvalue: function _checkIsVisible() {\n\t\t\tvar editor = this.editor;\n\n\t\t\tif (!editor.ui.focusTracker.isFocused) {\n\t\t\t\tthis._hideToolbar();\n\t\t\t} else {\n\t\t\t\tvar editingView = editor.editing.view;\n\t\t\t\tvar selectedElement = editingView.selection.getSelectedElement();\n\n\t\t\t\tif (selectedElement && (0, _utils.isImageWidget)(selectedElement)) {\n\t\t\t\t\tthis._showToolbar();\n\t\t\t\t} else {\n\t\t\t\t\tthis._hideToolbar();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Shows the {@link #_toolbar} in the {@link #_balloon}.\n   *\n   * @private\n   */\n\n\t}, {\n\t\tkey: '_showToolbar',\n\t\tvalue: function _showToolbar() {\n\t\t\tvar editor = this.editor;\n\n\t\t\tif (this._isVisible) {\n\t\t\t\t(0, _utils2.repositionContextualBalloon)(editor);\n\t\t\t} else {\n\t\t\t\tif (!this._balloon.hasView(this._toolbar)) {\n\t\t\t\t\tthis._balloon.add({\n\t\t\t\t\t\tview: this._toolbar,\n\t\t\t\t\t\tposition: (0, _utils2.getBalloonPositionData)(editor),\n\t\t\t\t\t\tballoonClassName: balloonClassName\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Removes the {@link #_toolbar} from the {@link #_balloon}.\n   *\n   * @private\n   */\n\n\t}, {\n\t\tkey: '_hideToolbar',\n\t\tvalue: function _hideToolbar() {\n\t\t\tif (!this._isVisible) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._balloon.remove(this._toolbar);\n\t\t}\n\n\t\t/**\n   * Returns `true` when the {@link #_toolbar} is the visible view\n   * in the {@link #_balloon}.\n   *\n   * @private\n   * @type {Boolean}\n   */\n\n\t}, {\n\t\tkey: '_isVisible',\n\t\tget: function get() {\n\t\t\treturn this._balloon.visibleView == this._toolbar;\n\t\t}\n\t}], [{\n\t\tkey: 'requires',\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tget: function get() {\n\t\t\treturn [_contextualballoon2.default];\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'pluginName',\n\t\tget: function get() {\n\t\t\treturn 'ImageToolbar';\n\t\t}\n\t}]);\n\n\treturn ImageToolbar;\n}(_plugin2.default);\n\n/**\n * Items to be placed in the image toolbar.\n * The option is used by the {@link module:image/imagetoolbar~ImageToolbar} feature.\n *\n * Assuming that you use the following features:\n *\n * * {@link module:image/imagestyle~ImageStyle} (with a default configuration),\n * * {@link module:image/imagetextalternative~ImageTextAlternative}.\n *\n * Three toolbar items will be available in {@link module:ui/componentfactory~ComponentFactory}:\n * `'imageStyleFull'`, `'imageStyleSide'`, and `'imageTextAlternative'` so you can configure the toolbar like this:\n *\n *\t\tconst imageConfig = {\n *\t\t\ttoolbar: [ 'imageStyleFull', 'imageStyleSide', '|', 'imageTextAlternative' ]\n *\t\t};\n *\n * Of course, the same buttons can also be used in the\n * {@link module:core/editor/editorconfig~EditorConfig#toolbar main editor toolbar}.\n *\n * Read more about configuring toolbar in {@link module:core/editor/editorconfig~EditorConfig#toolbar}.\n *\n * @member {Array.<String>} module:image/image~ImageConfig#toolbar\n */\n\n\nexports.default = ImageToolbar;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-image/src/imagetoolbar.js\n// module id = 352\n// module chunks = 0","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if ('value' in descriptor)\n                descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }\n    return function (Constructor, protoProps, staticProps) {\n        if (protoProps)\n            defineProperties(Constructor.prototype, protoProps);\n        if (staticProps)\n            defineProperties(Constructor, staticProps);\n        return Constructor;\n    };\n}();\nvar _plugin = require('@ckeditor/ckeditor5-core/src/plugin');\nvar _plugin2 = _interopRequireDefault(_plugin);\nvar _clickobserver = require('@ckeditor/ckeditor5-engine/src/view/observer/clickobserver');\nvar _clickobserver2 = _interopRequireDefault(_clickobserver);\nvar _range = require('@ckeditor/ckeditor5-engine/src/view/range');\nvar _range2 = _interopRequireDefault(_range);\nvar _linkengine = require('./linkengine');\nvar _linkengine2 = _interopRequireDefault(_linkengine);\nvar _linkelement = require('./linkelement');\nvar _linkelement2 = _interopRequireDefault(_linkelement);\nvar _contextualballoon = require('@ckeditor/ckeditor5-ui/src/panel/balloon/contextualballoon');\nvar _contextualballoon2 = _interopRequireDefault(_contextualballoon);\nvar _clickoutsidehandler = require('@ckeditor/ckeditor5-ui/src/bindings/clickoutsidehandler');\nvar _clickoutsidehandler2 = _interopRequireDefault(_clickoutsidehandler);\nvar _buttonview = require('@ckeditor/ckeditor5-ui/src/button/buttonview');\nvar _buttonview2 = _interopRequireDefault(_buttonview);\nvar _linkformview = require('./ui/linkformview');\nvar _linkformview2 = _interopRequireDefault(_linkformview);\nvar _link = require('../theme/icons/link.svg');\nvar _link2 = _interopRequireDefault(_link);\nvar _unlink = require('../theme/icons/unlink.svg');\nvar _unlink2 = _interopRequireDefault(_unlink);\nrequire('../theme/theme.scss');\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError('Cannot call a class as a function');\n    }\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n    }\n    return call && (typeof call === 'object' || typeof call === 'function') ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n        throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass)\n        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n/**\n * @module link/link\n */\nvar linkKeystroke = 'Ctrl+K';\n/**\n * The link plugin. It introduces the Link and Unlink buttons and the <kbd>Ctrl+K</kbd> keystroke.\n *\n * It uses the {@link module:link/linkengine~LinkEngine link engine plugin} and the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon plugin}.\n *\n * @extends module:core/plugin~Plugin\n */\nvar Link = function (_Plugin) {\n    _inherits(Link, _Plugin);\n    function Link() {\n        _classCallCheck(this, Link);\n        return _possibleConstructorReturn(this, (Link.__proto__ || Object.getPrototypeOf(Link)).apply(this, arguments));\n    }\n    _createClass(Link, [\n        {\n            key: 'init',\n            /**\n   * @inheritDoc\n   */\n            value: function init() {\n                this.editor.editing.view.addObserver(_clickobserver2.default);\n                /**\n    * The form view displayed inside the balloon.\n    *\n    * @member {module:link/ui/linkformview~LinkFormView}\n    */\n                this.formView = this._createForm();\n                /**\n    * The contextual balloon plugin instance.\n    *\n    * @private\n    * @member {module:ui/panel/balloon/contextualballoon~ContextualBalloon}\n    */\n                this._balloon = this.editor.plugins.get(_contextualballoon2.default);\n                // Create toolbar buttons.\n                this._createToolbarLinkButton();\n                this._createToolbarUnlinkButton();\n                // Attach lifecycle actions to the the balloon.\n                this._attachActions();\n            }    /**\n   * Creates the {@link module:link/ui/linkformview~LinkFormView} instance.\n   *\n   * @private\n   * @returns {module:link/ui/linkformview~LinkFormView} The link form instance.\n   */\n        },\n        {\n            key: '_createForm',\n            value: function _createForm() {\n                var _this2 = this;\n                var editor = this.editor;\n                var formView = new _linkformview2.default(editor.locale);\n                var linkCommand = editor.commands.get('link');\n                var unlinkCommand = editor.commands.get('unlink');\n                formView.urlInputView.bind('value').to(linkCommand, 'value');\n                // Form elements should be read-only when corresponding commands are disabled.\n                formView.urlInputView.bind('isReadOnly').to(linkCommand, 'isEnabled', function (value) {\n                    return !value;\n                });\n                formView.saveButtonView.bind('isEnabled').to(linkCommand);\n                formView.unlinkButtonView.bind('isEnabled').to(unlinkCommand);\n                // Execute link command after clicking on formView `Save` button.\n                this.listenTo(formView, 'submit', function () {\n                    editor.execute('link', formView.urlInputView.inputView.element.value);\n                    _this2._hidePanel(true);\n                });\n                // Execute unlink command after clicking on formView `Unlink` button.\n                this.listenTo(formView, 'unlink', function () {\n                    editor.execute('unlink');\n                    _this2._hidePanel(true);\n                });\n                // Hide the panel after clicking on formView `Cancel` button.\n                this.listenTo(formView, 'cancel', function () {\n                    return _this2._hidePanel(true);\n                });\n                // Close the panel on esc key press when the form has focus.\n                formView.keystrokes.set('Esc', function (data, cancel) {\n                    _this2._hidePanel(true);\n                    cancel();\n                });\n                return formView;\n            }    /**\n   * Creates a toolbar Link button. Clicking this button will show\n   * a {@link #_balloon} attached to the selection.\n   *\n   * @private\n   */\n        },\n        {\n            key: '_createToolbarLinkButton',\n            value: function _createToolbarLinkButton() {\n                var _this3 = this;\n                var editor = this.editor;\n                var linkCommand = editor.commands.get('link');\n                var t = editor.t;\n                // Handle the `Ctrl+K` keystroke and show the panel.\n                editor.keystrokes.set(linkKeystroke, function () {\n                    if (linkCommand.isEnabled) {\n                        _this3._showPanel(true);\n                    }\n                });\n                editor.ui.componentFactory.add('link', function (locale) {\n                    var button = new _buttonview2.default(locale);\n                    button.isEnabled = true;\n                    button.label = t('Link');\n                    button.icon = _link2.default;\n                    button.keystroke = linkKeystroke;\n                    button.tooltip = true;\n                    // Bind button to the command.\n                    button.bind('isEnabled').to(linkCommand, 'isEnabled');\n                    // Show the panel on button click.\n                    _this3.listenTo(button, 'execute', function () {\n                        return _this3._showPanel(true);\n                    });\n                    return button;\n                });\n            }    /**\n   * Creates a toolbar Unlink button. Clicking this button will unlink\n   * the selected link.\n   *\n   * @private\n   */\n        },\n        {\n            key: '_createToolbarUnlinkButton',\n            value: function _createToolbarUnlinkButton() {\n                var _this4 = this;\n                var editor = this.editor;\n                var t = editor.t;\n                var unlinkCommand = editor.commands.get('unlink');\n                editor.ui.componentFactory.add('unlink', function (locale) {\n                    var button = new _buttonview2.default(locale);\n                    button.isEnabled = false;\n                    button.label = t('Unlink');\n                    button.icon = _unlink2.default;\n                    button.tooltip = true;\n                    // Bind button to the command.\n                    button.bind('isEnabled').to(unlinkCommand, 'isEnabled');\n                    // Execute unlink command and hide panel, if open on button click.\n                    _this4.listenTo(button, 'execute', function () {\n                        return editor.execute('unlink');\n                    });\n                    return button;\n                });\n            }    /**\n   * Attaches actions that control whether the balloon panel containing the\n   * {@link #formView} is visible or not.\n   *\n   * @private\n   */\n        },\n        {\n            key: '_attachActions',\n            value: function _attachActions() {\n                var _this5 = this;\n                var viewDocument = this.editor.editing.view;\n                // Handle click on view document and show panel when selection is placed inside the link element.\n                // Keep panel open until selection will be inside the same link element.\n                this.listenTo(viewDocument, 'click', function () {\n                    var parentLink = _this5._getSelectedLinkElement();\n                    if (parentLink) {\n                        // Then show panel but keep focus inside editor editable.\n                        _this5._showPanel();\n                    }\n                });\n                // Focus the form if the balloon is visible and the Tab key has been pressed.\n                this.editor.keystrokes.set('Tab', function (data, cancel) {\n                    if (_this5._balloon.visibleView === _this5.formView && !_this5.formView.focusTracker.isFocused) {\n                        _this5.formView.focus();\n                        cancel();\n                    }\n                });\n                // Close the panel on the Esc key press when the editable has focus and the balloon is visible.\n                this.editor.keystrokes.set('Esc', function (data, cancel) {\n                    if (_this5._balloon.visibleView === _this5.formView) {\n                        _this5._hidePanel();\n                        cancel();\n                    }\n                });\n                // Close on click outside of balloon panel element.\n                (0, _clickoutsidehandler2.default)({\n                    emitter: this.formView,\n                    activator: function activator() {\n                        return _this5._balloon.hasView(_this5.formView);\n                    },\n                    contextElements: [this._balloon.view.element],\n                    callback: function callback() {\n                        return _this5._hidePanel();\n                    }\n                });\n            }    /**\n   * Adds the {@link #formView} to the {@link #_balloon}.\n   *\n   * @protected\n   * @param {Boolean} [focusInput=false] When `true`, the link form will be focused on panel show.\n   */\n        },\n        {\n            key: '_showPanel',\n            value: function _showPanel(focusInput) {\n                var _this6 = this;\n                var editor = this.editor;\n                var linkCommand = editor.commands.get('link');\n                var unlinkCommand = editor.commands.get('unlink');\n                var editing = editor.editing;\n                var showViewDocument = editing.view;\n                var showIsCollapsed = showViewDocument.selection.isCollapsed;\n                var showSelectedLink = this._getSelectedLinkElement();\n                // https://github.com/ckeditor/ckeditor5-link/issues/53\n                this.formView.unlinkButtonView.isVisible = unlinkCommand.isEnabled;\n                // Make sure that each time the panel shows up, the URL field remains in sync with the value of\n                // the command. If the user typed in the input, then canceled the balloon (`urlInputView#value` stays\n                // unaltered) and re-opened it without changing the value of the link command (e.g. because they\n                // clicked the same link), they would see the old value instead of the actual value of the command.\n                // https://github.com/ckeditor/ckeditor5-link/issues/78\n                // https://github.com/ckeditor/ckeditor5-link/issues/123\n                this.formView.urlInputView.inputView.element.value = linkCommand.value || '';\n                this.listenTo(showViewDocument, 'render', function () {\n                    var renderSelectedLink = _this6._getSelectedLinkElement();\n                    var renderIsCollapsed = showViewDocument.selection.isCollapsed;\n                    var hasSellectionExpanded = showIsCollapsed && !renderIsCollapsed;\n                    // Hide the panel if:\n                    //   * the selection went out of the original link element\n                    //     (e.g. paragraph containing the link was removed),\n                    //   * the selection has expanded\n                    // upon the #render event.\n                    if (hasSellectionExpanded || showSelectedLink !== renderSelectedLink) {\n                        _this6._hidePanel(true);\n                    }    // Update the position of the panel when:\n                         //  * the selection remains in the original link element,\n                         //  * there was no link element in the first place, i.e. creating a new link\n                    else {\n                        // If still in a link element, simply update the position of the balloon.\n                        if (renderSelectedLink) {\n                            _this6._balloon.updatePosition();\n                        }    // If there was no link, upon #render, the balloon must be moved\n                             // to the new position in the editing view (a new native DOM range).\n                        else {\n                            _this6._balloon.updatePosition(_this6._getBalloonPositionData());\n                        }\n                    }\n                });\n                if (this._balloon.hasView(this.formView)) {\n                    // Check if formView should be focused and focus it if is visible.\n                    if (focusInput && this._balloon.visibleView === this.formView) {\n                        this.formView.urlInputView.select();\n                    }\n                } else {\n                    this._balloon.add({\n                        view: this.formView,\n                        position: this._getBalloonPositionData()\n                    });\n                    if (focusInput) {\n                        this.formView.urlInputView.select();\n                    }\n                }\n            }    /**\n   * Removes the {@link #formView} from the {@link #_balloon}.\n   *\n   * See {@link #_showPanel}.\n   *\n   * @protected\n   * @param {Boolean} [focusEditable=false] When `true`, editable focus will be restored on panel hide.\n   */\n        },\n        {\n            key: '_hidePanel',\n            value: function _hidePanel(focusEditable) {\n                this.stopListening(this.editor.editing.view, 'render');\n                if (!this._balloon.hasView(this.formView)) {\n                    return;\n                }\n                if (focusEditable) {\n                    this.editor.editing.view.focus();\n                }\n                this.stopListening(this.editor.editing.view, 'render');\n                this._balloon.remove(this.formView);\n            }    /**\n   * Returns positioning options for the {@link #_balloon}. They control the way the balloon is attached\n   * to the target element or selection.\n   *\n   * If the selection is collapsed and inside a link element, the panel will be attached to the\n   * entire link element. Otherwise, it will be attached to the selection.\n   *\n   * @private\n   * @returns {module:utils/dom/position~Options}\n   */\n        },\n        {\n            key: '_getBalloonPositionData',\n            value: function _getBalloonPositionData() {\n                var viewDocument = this.editor.editing.view;\n                var targetLink = this._getSelectedLinkElement();\n                var target = targetLink ? // When selection is inside link element, then attach panel to this element.\n                viewDocument.domConverter.mapViewToDom(targetLink) : // Otherwise attach panel to the selection.\n                viewDocument.domConverter.viewRangeToDom(viewDocument.selection.getFirstRange());\n                return {\n                    target: target,\n                    limiter: viewDocument.domConverter.mapViewToDom(viewDocument.selection.editableElement)\n                };\n            }    /**\n   * Returns the {@link module:link/linkelement~LinkElement} under\n   * the {@link module:engine/view/document~Document editing view's} selection or `null`\n   * if there is none.\n   *\n   * **Note**: For a non–collapsed selection the `LinkElement` is only returned when **fully**\n   * selected and the **only** element within the selection boundaries.\n   *\n   * @private\n   * @returns {module:link/linkelement~LinkElement|null}\n   */\n        },\n        {\n            key: '_getSelectedLinkElement',\n            value: function _getSelectedLinkElement() {\n                var selection = this.editor.editing.view.selection;\n                if (selection.isCollapsed) {\n                    return findLinkElementAncestor(selection.getFirstPosition());\n                } else {\n                    // The range for fully selected link is usually anchored in adjacent text nodes.\n                    // Trim it to get closer to the actual LinkElement.\n                    var range = selection.getFirstRange().getTrimmed();\n                    var startLink = findLinkElementAncestor(range.start);\n                    var endLink = findLinkElementAncestor(range.end);\n                    if (!startLink || startLink != endLink) {\n                        return null;\n                    }\n                    // Check if the LinkElement is fully selected.\n                    if (_range2.default.createIn(startLink).getTrimmed().isEqual(range)) {\n                        return startLink;\n                    } else {\n                        return null;\n                    }\n                }\n            }\n        }\n    ], [\n        {\n            key: 'requires',\n            /**\n   * @inheritDoc\n   */\n            get: function get() {\n                return [\n                    _linkengine2.default,\n                    _contextualballoon2.default\n                ];\n            }    /**\n   * @inheritDoc\n   */\n        },\n        {\n            key: 'pluginName',\n            get: function get() {\n                return 'Link';\n            }\n        }\n    ]);\n    return Link;\n}(_plugin2.default);\n// Returns a `LinkElement` if there's one among the ancestors of the provided `Position`.\n//\n// @private\n// @param {module:engine/view/position~Position} View position to analyze.\n// @returns {module:link/linkelement~LinkElement|null} LinkElement at the position or null.\nexports.default = Link;\nfunction findLinkElementAncestor(position) {\n    return position.getAncestors().find(function (ancestor) {\n        return ancestor instanceof _linkelement2.default;\n    });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-link/src/link.js\n// module id = 353\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _command = require('@ckeditor/ckeditor5-core/src/command');\n\nvar _command2 = _interopRequireDefault(_command);\n\nvar _text = require('@ckeditor/ckeditor5-engine/src/model/text');\n\nvar _text2 = _interopRequireDefault(_text);\n\nvar _range = require('@ckeditor/ckeditor5-engine/src/model/range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _findlinkrange = require('./findlinkrange');\n\nvar _findlinkrange2 = _interopRequireDefault(_findlinkrange);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module link/linkcommand\n */\n\n/**\n * The link command. It is used by the {@link module:link/link~Link link feature}.\n *\n * @extends module:core/command~Command\n */\nvar LinkCommand = function (_Command) {\n\t_inherits(LinkCommand, _Command);\n\n\tfunction LinkCommand() {\n\t\t_classCallCheck(this, LinkCommand);\n\n\t\treturn _possibleConstructorReturn(this, (LinkCommand.__proto__ || Object.getPrototypeOf(LinkCommand)).apply(this, arguments));\n\t}\n\n\t_createClass(LinkCommand, [{\n\t\tkey: 'refresh',\n\n\t\t/**\n   * The value of the `'linkHref'` attribute if the start of the selection is located in a node with this attribute.\n   *\n   * @observable\n   * @readonly\n   * @member {Object|undefined} #value\n   */\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tvalue: function refresh() {\n\t\t\tvar doc = this.editor.document;\n\n\t\t\tthis.value = doc.selection.getAttribute('linkHref');\n\t\t\tthis.isEnabled = doc.schema.checkAttributeInSelection(doc.selection, 'linkHref');\n\t\t}\n\n\t\t/**\n   * Executes the command.\n   *\n   * When the selection is non-collapsed, the `linkHref` attribute will be applied to nodes inside the selection, but only to\n   * those nodes where the `linkHref` attribute is allowed (disallowed nodes will be omitted).\n   *\n   * When the selection is collapsed and is not inside the text with the `linkHref` attribute, the\n   * new {@link module:engine/model/text~Text Text node} with the `linkHref` attribute will be inserted in place of caret, but\n   * only if such element is allowed in this place. The `_data` of the inserted text will equal the `href` parameter.\n   * The selection will be updated to wrap the just inserted text node.\n   *\n   * When the selection is collapsed and inside the text with the `linkHref` attribute, the attribute value will be updated.\n   *\n   * @fires execute\n   * @param {String} href Link destination.\n   */\n\n\t}, {\n\t\tkey: 'execute',\n\t\tvalue: function execute(href) {\n\t\t\tvar doc = this.editor.document;\n\t\t\tvar selection = doc.selection;\n\n\t\t\tdoc.enqueueChanges(function () {\n\t\t\t\t// Keep it as one undo step.\n\t\t\t\tvar batch = doc.batch();\n\n\t\t\t\t// If selection is collapsed then update selected link or insert new one at the place of caret.\n\t\t\t\tif (selection.isCollapsed) {\n\t\t\t\t\tvar position = selection.getFirstPosition();\n\n\t\t\t\t\t// When selection is inside text with `linkHref` attribute.\n\t\t\t\t\tif (selection.hasAttribute('linkHref')) {\n\t\t\t\t\t\t// Then update `linkHref` value.\n\t\t\t\t\t\tvar linkRange = (0, _findlinkrange2.default)(selection.getFirstPosition(), selection.getAttribute('linkHref'));\n\n\t\t\t\t\t\tbatch.setAttribute(linkRange, 'linkHref', href);\n\n\t\t\t\t\t\t// Create new range wrapping changed link.\n\t\t\t\t\t\tselection.setRanges([linkRange]);\n\t\t\t\t\t}\n\t\t\t\t\t// If not then insert text node with `linkHref` attribute in place of caret.\n\t\t\t\t\telse {\n\t\t\t\t\t\t\tvar node = new _text2.default(href, { linkHref: href });\n\n\t\t\t\t\t\t\tbatch.insert(position, node);\n\n\t\t\t\t\t\t\t// Create new range wrapping created node.\n\t\t\t\t\t\t\tselection.setRanges([_range2.default.createOn(node)]);\n\t\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// If selection has non-collapsed ranges, we change attribute on nodes inside those ranges\n\t\t\t\t\t// omitting nodes where `linkHref` attribute is disallowed.\n\t\t\t\t\tvar ranges = doc.schema.getValidRanges(selection.getRanges(), 'linkHref');\n\n\t\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\t\tvar _didIteratorError = false;\n\t\t\t\t\tvar _iteratorError = undefined;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (var _iterator = ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\t\tvar range = _step.value;\n\n\t\t\t\t\t\t\tbatch.setAttribute(range, 'linkHref', href);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t\t_iteratorError = err;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}]);\n\n\treturn LinkCommand;\n}(_command2.default);\n\nexports.default = LinkCommand;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-link/src/linkcommand.js\n// module id = 354\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _plugin = require('@ckeditor/ckeditor5-core/src/plugin');\n\nvar _plugin2 = _interopRequireDefault(_plugin);\n\nvar _buildmodelconverter = require('@ckeditor/ckeditor5-engine/src/conversion/buildmodelconverter');\n\nvar _buildmodelconverter2 = _interopRequireDefault(_buildmodelconverter);\n\nvar _buildviewconverter = require('@ckeditor/ckeditor5-engine/src/conversion/buildviewconverter');\n\nvar _buildviewconverter2 = _interopRequireDefault(_buildviewconverter);\n\nvar _linkelement = require('./linkelement');\n\nvar _linkelement2 = _interopRequireDefault(_linkelement);\n\nvar _linkcommand = require('./linkcommand');\n\nvar _linkcommand2 = _interopRequireDefault(_linkcommand);\n\nvar _unlinkcommand = require('./unlinkcommand');\n\nvar _unlinkcommand2 = _interopRequireDefault(_unlinkcommand);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module link/linkengine\n */\n\n/**\n * The link engine feature.\n *\n * It introduces the `linkHref=\"url\"` attribute in the model which renders to the view as a `<a href=\"url\">` element.\n *\n * @extends module:core/plugin~Plugin\n */\nvar LinkEngine = function (_Plugin) {\n\t_inherits(LinkEngine, _Plugin);\n\n\tfunction LinkEngine() {\n\t\t_classCallCheck(this, LinkEngine);\n\n\t\treturn _possibleConstructorReturn(this, (LinkEngine.__proto__ || Object.getPrototypeOf(LinkEngine)).apply(this, arguments));\n\t}\n\n\t_createClass(LinkEngine, [{\n\t\tkey: 'init',\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tvalue: function init() {\n\t\t\tvar editor = this.editor;\n\t\t\tvar data = editor.data;\n\t\t\tvar editing = editor.editing;\n\n\t\t\t// Allow link attribute on all inline nodes.\n\t\t\teditor.document.schema.allow({ name: '$inline', attributes: 'linkHref', inside: '$block' });\n\t\t\t// Temporary workaround. See https://github.com/ckeditor/ckeditor5/issues/477.\n\t\t\teditor.document.schema.allow({ name: '$inline', attributes: 'linkHref', inside: '$clipboardHolder' });\n\n\t\t\t// Build converter from model to view for data and editing pipelines.\n\t\t\t(0, _buildmodelconverter2.default)().for(data.modelToView, editing.modelToView).fromAttribute('linkHref').toElement(function (linkHref) {\n\t\t\t\tvar linkElement = new _linkelement2.default('a', { href: linkHref });\n\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-link/issues/121\n\t\t\t\tlinkElement.priority = 5;\n\n\t\t\t\treturn linkElement;\n\t\t\t});\n\n\t\t\t// Build converter from view to model for data pipeline.\n\t\t\t(0, _buildviewconverter2.default)().for(data.viewToModel)\n\t\t\t// Convert <a> with href (value doesn't matter).\n\t\t\t.from({ name: 'a', attribute: { href: /.?/ } }).toAttribute(function (viewElement) {\n\t\t\t\treturn {\n\t\t\t\t\tkey: 'linkHref',\n\t\t\t\t\tvalue: viewElement.getAttribute('href')\n\t\t\t\t};\n\t\t\t});\n\n\t\t\t// Create linking commands.\n\t\t\teditor.commands.add('link', new _linkcommand2.default(editor));\n\t\t\teditor.commands.add('unlink', new _unlinkcommand2.default(editor));\n\t\t}\n\t}]);\n\n\treturn LinkEngine;\n}(_plugin2.default);\n\nexports.default = LinkEngine;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-link/src/linkengine.js\n// module id = 355\n// module chunks = 0","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if ('value' in descriptor)\n                descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }\n    return function (Constructor, protoProps, staticProps) {\n        if (protoProps)\n            defineProperties(Constructor.prototype, protoProps);\n        if (staticProps)\n            defineProperties(Constructor, staticProps);\n        return Constructor;\n    };\n}();\nvar _get = function get(object, property, receiver) {\n    if (object === null)\n        object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n    if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);\n        if (parent === null) {\n            return undefined;\n        } else {\n            return get(parent, property, receiver);\n        }\n    } else if ('value' in desc) {\n        return desc.value;\n    } else {\n        var getter = desc.get;\n        if (getter === undefined) {\n            return undefined;\n        }\n        return getter.call(receiver);\n    }\n};\nvar _view = require('@ckeditor/ckeditor5-ui/src/view');\nvar _view2 = _interopRequireDefault(_view);\nvar _template = require('@ckeditor/ckeditor5-ui/src/template');\nvar _template2 = _interopRequireDefault(_template);\nvar _viewcollection = require('@ckeditor/ckeditor5-ui/src/viewcollection');\nvar _viewcollection2 = _interopRequireDefault(_viewcollection);\nvar _buttonview = require('@ckeditor/ckeditor5-ui/src/button/buttonview');\nvar _buttonview2 = _interopRequireDefault(_buttonview);\nvar _labeledinputview = require('@ckeditor/ckeditor5-ui/src/labeledinput/labeledinputview');\nvar _labeledinputview2 = _interopRequireDefault(_labeledinputview);\nvar _inputtextview = require('@ckeditor/ckeditor5-ui/src/inputtext/inputtextview');\nvar _inputtextview2 = _interopRequireDefault(_inputtextview);\nvar _submithandler = require('@ckeditor/ckeditor5-ui/src/bindings/submithandler');\nvar _submithandler2 = _interopRequireDefault(_submithandler);\nvar _focustracker = require('@ckeditor/ckeditor5-utils/src/focustracker');\nvar _focustracker2 = _interopRequireDefault(_focustracker);\nvar _focuscycler = require('@ckeditor/ckeditor5-ui/src/focuscycler');\nvar _focuscycler2 = _interopRequireDefault(_focuscycler);\nvar _keystrokehandler = require('@ckeditor/ckeditor5-utils/src/keystrokehandler');\nvar _keystrokehandler2 = _interopRequireDefault(_keystrokehandler);\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError('Cannot call a class as a function');\n    }\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n    }\n    return call && (typeof call === 'object' || typeof call === 'function') ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n        throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass)\n        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n/**\n * @module link/ui/linkformview\n */\n/**\n * The link form view controller class.\n *\n * See {@link module:link/ui/linkformview~LinkFormView}.\n *\n * @extends module:ui/view~View\n */\nvar LinkFormView = function (_View) {\n    _inherits(LinkFormView, _View);\n    /**\n  * @inheritDoc\n  */\n    function LinkFormView(locale) {\n        _classCallCheck(this, LinkFormView);\n        var _this = _possibleConstructorReturn(this, (LinkFormView.__proto__ || Object.getPrototypeOf(LinkFormView)).call(this, locale));\n        var t = locale.t;\n        /**\n   * Tracks information about DOM focus in the form.\n   *\n   * @readonly\n   * @member {module:utils/focustracker~FocusTracker}\n   */\n        _this.focusTracker = new _focustracker2.default();\n        /**\n   * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n   *\n   * @readonly\n   * @member {module:utils/keystrokehandler~KeystrokeHandler}\n   */\n        _this.keystrokes = new _keystrokehandler2.default();\n        /**\n   * The URL input view.\n   *\n   * @member {module:ui/labeledinput/labeledinputview~LabeledInputView}\n   */\n        _this.urlInputView = _this._createUrlInput();\n        /**\n   * The Save button view.\n   *\n   * @member {module:ui/button/buttonview~ButtonView}\n   */\n        _this.saveButtonView = _this._createButton(t('Save'));\n        _this.saveButtonView.type = 'submit';\n        /**\n   * The Cancel button view.\n   *\n   * @member {module:ui/button/buttonview~ButtonView}\n   */\n        _this.cancelButtonView = _this._createButton(t('Cancel'), 'cancel');\n        /**\n   * The Unlink button view.\n   *\n   * @member {module:ui/button/buttonview~ButtonView}\n   */\n        _this.unlinkButtonView = _this._createButton(t('Unlink'), 'unlink');\n        /**\n   * A collection of views which can be focused in the form.\n   *\n   * @readonly\n   * @protected\n   * @member {module:ui/viewcollection~ViewCollection}\n   */\n        _this._focusables = new _viewcollection2.default();\n        /**\n   * Helps cycling over {@link #_focusables} in the form.\n   *\n   * @readonly\n   * @protected\n   * @member {module:ui/focuscycler~FocusCycler}\n   */\n        _this._focusCycler = new _focuscycler2.default({\n            focusables: _this._focusables,\n            focusTracker: _this.focusTracker,\n            keystrokeHandler: _this.keystrokes,\n            actions: {\n                // Navigate form fields backwards using the Shift + Tab keystroke.\n                focusPrevious: 'shift + tab',\n                // Navigate form fields forwards using the Tab key.\n                focusNext: 'tab'\n            }\n        });\n        _template2.default.extend(_this.saveButtonView.template, { attributes: { class: ['ck-button-action'] } });\n        _this.template = new _template2.default({\n            tag: 'form',\n            attributes: {\n                class: ['ck-link-form'],\n                // https://github.com/ckeditor/ckeditor5-link/issues/90\n                tabindex: '-1'\n            },\n            children: [\n                _this.urlInputView,\n                {\n                    tag: 'div',\n                    attributes: { class: ['ck-link-form__actions'] },\n                    children: [\n                        _this.saveButtonView,\n                        _this.cancelButtonView,\n                        _this.unlinkButtonView\n                    ]\n                }\n            ]\n        });\n        (0, _submithandler2.default)({ view: _this });\n        var childViews = [\n            _this.urlInputView,\n            _this.saveButtonView,\n            _this.cancelButtonView,\n            _this.unlinkButtonView\n        ];\n        childViews.forEach(function (v) {\n            // Register the view as focusable.\n            _this._focusables.add(v);\n            // Register the view in the focus tracker.\n            _this.focusTracker.add(v.element);\n        });\n        return _this;\n    }\n    /**\n  * @inheritDoc\n  */\n    _createClass(LinkFormView, [\n        {\n            key: 'init',\n            value: function init() {\n                // Start listening for the keystrokes coming from #element.\n                this.keystrokes.listenTo(this.element);\n                return _get(LinkFormView.prototype.__proto__ || Object.getPrototypeOf(LinkFormView.prototype), 'init', this).call(this);\n            }    /**\n   * Focuses the fist {@link #_focusables} in the form.\n   */\n        },\n        {\n            key: 'focus',\n            value: function focus() {\n                this._focusCycler.focusFirst();\n            }    /**\n   * Creates a labeled input view.\n   *\n   * @private\n   * @returns {module:ui/labeledinput/labeledinputview~LabeledInputView} Labeled input view instance.\n   */\n        },\n        {\n            key: '_createUrlInput',\n            value: function _createUrlInput() {\n                var t = this.locale.t;\n                var labeledInput = new _labeledinputview2.default(this.locale, _inputtextview2.default);\n                labeledInput.label = t('Link URL');\n                labeledInput.inputView.placeholder = 'https://example.com';\n                return labeledInput;\n            }    /**\n   * Creates a button view.\n   *\n   * @private\n   * @param {String} label The button label\n   * @param {String} [eventName] An event name that the `ButtonView#execute` event will be delegated to.\n   * @returns {module:ui/button/buttonview~ButtonView} The button view instance.\n   */\n        },\n        {\n            key: '_createButton',\n            value: function _createButton(label, eventName) {\n                var button = new _buttonview2.default(this.locale);\n                button.label = label;\n                button.withText = true;\n                if (eventName) {\n                    button.delegate('execute').to(this, eventName);\n                }\n                return button;\n            }\n        }\n    ]);\n    return LinkFormView;\n}(_view2.default);\n/**\n * Fired when the form view is submitted (when one of the children triggered the submit event),\n * e.g. click on {@link #saveButtonView}.\n *\n * @event submit\n */\n/**\n * Fired when the form view is canceled, e.g. click on {@link #cancelButtonView}.\n *\n * @event cancel\n */\n/**\n * Fired when the {@link #unlinkButtonView} is clicked.\n *\n * @event unlink\n */\nexports.default = LinkFormView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-link/src/ui/linkformview.js\n// module id = 356\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _command = require('@ckeditor/ckeditor5-core/src/command');\n\nvar _command2 = _interopRequireDefault(_command);\n\nvar _findlinkrange = require('./findlinkrange');\n\nvar _findlinkrange2 = _interopRequireDefault(_findlinkrange);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module link/unlinkcommand\n */\n\n/**\n * The unlink command. It is used by the {@link module:link/link~Link link plugin}.\n *\n * @extends module:core/command~Command\n */\nvar UnlinkCommand = function (_Command) {\n\t_inherits(UnlinkCommand, _Command);\n\n\tfunction UnlinkCommand() {\n\t\t_classCallCheck(this, UnlinkCommand);\n\n\t\treturn _possibleConstructorReturn(this, (UnlinkCommand.__proto__ || Object.getPrototypeOf(UnlinkCommand)).apply(this, arguments));\n\t}\n\n\t_createClass(UnlinkCommand, [{\n\t\tkey: 'refresh',\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tvalue: function refresh() {\n\t\t\tthis.isEnabled = this.editor.document.selection.hasAttribute('linkHref');\n\t\t}\n\n\t\t/**\n   * Executes the command.\n   *\n   * When the selection is collapsed, removes the `linkHref` attribute from each node with the same `linkHref` attribute value.\n   * When the selection is non-collapsed, removes the `linkHref` attribute from each node in selected ranges.\n   *\n   * @fires execute\n   */\n\n\t}, {\n\t\tkey: 'execute',\n\t\tvalue: function execute() {\n\t\t\tvar document = this.editor.document;\n\t\t\tvar selection = document.selection;\n\n\t\t\tdocument.enqueueChanges(function () {\n\t\t\t\t// Get ranges to unlink.\n\t\t\t\tvar rangesToUnlink = selection.isCollapsed ? [(0, _findlinkrange2.default)(selection.getFirstPosition(), selection.getAttribute('linkHref'))] : selection.getRanges();\n\n\t\t\t\t// Keep it as one undo step.\n\t\t\t\tvar batch = document.batch();\n\n\t\t\t\t// Remove `linkHref` attribute from specified ranges.\n\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\tvar _didIteratorError = false;\n\t\t\t\tvar _iteratorError = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator = rangesToUnlink[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\tvar range = _step.value;\n\n\t\t\t\t\t\tbatch.removeAttribute(range, 'linkHref');\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t_iteratorError = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}]);\n\n\treturn UnlinkCommand;\n}(_command2.default);\n\nexports.default = UnlinkCommand;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-link/src/unlinkcommand.js\n// module id = 357\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nexports.modelViewInsertion = modelViewInsertion;\nexports.modelViewChangeType = modelViewChangeType;\nexports.modelViewRemove = modelViewRemove;\nexports.modelViewChangeIndent = modelViewChangeIndent;\nexports.modelViewSplitOnInsert = modelViewSplitOnInsert;\nexports.modelViewMergeAfter = modelViewMergeAfter;\nexports.viewModelConverter = viewModelConverter;\nexports.cleanList = cleanList;\nexports.cleanListItem = cleanListItem;\nexports.modelToViewPosition = modelToViewPosition;\nexports.viewToModelPosition = viewToModelPosition;\nexports.modelChangePostFixer = modelChangePostFixer;\nexports.modelIndentPasteFixer = modelIndentPasteFixer;\n\nvar _viewlistitemelement = require('./viewlistitemelement');\n\nvar _viewlistitemelement2 = _interopRequireDefault(_viewlistitemelement);\n\nvar _documentfragment = require('@ckeditor/ckeditor5-engine/src/model/documentfragment');\n\nvar _documentfragment2 = _interopRequireDefault(_documentfragment);\n\nvar _element = require('@ckeditor/ckeditor5-engine/src/model/element');\n\nvar _element2 = _interopRequireDefault(_element);\n\nvar _position = require('@ckeditor/ckeditor5-engine/src/model/position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _writer = require('@ckeditor/ckeditor5-engine/src/model/writer');\n\nvar _writer2 = _interopRequireDefault(_writer);\n\nvar _containerelement = require('@ckeditor/ckeditor5-engine/src/view/containerelement');\n\nvar _containerelement2 = _interopRequireDefault(_containerelement);\n\nvar _position3 = require('@ckeditor/ckeditor5-engine/src/view/position');\n\nvar _position4 = _interopRequireDefault(_position3);\n\nvar _range = require('@ckeditor/ckeditor5-engine/src/view/range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _treewalker = require('@ckeditor/ckeditor5-engine/src/view/treewalker');\n\nvar _treewalker2 = _interopRequireDefault(_treewalker);\n\nvar _writer3 = require('@ckeditor/ckeditor5-engine/src/view/writer');\n\nvar _writer4 = _interopRequireDefault(_writer3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /**\n                                                                                                                                                                                                     * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                     * For licensing, see LICENSE.md.\n                                                                                                                                                                                                     */\n\n/**\n * @module list/converters\n */\n\n/**\n * A model-to-view converter for `listItem` model element insertion.\n *\n * It creates a `<ul><li></li><ul>` (or `<ol>`) view structure out of a `listItem` model element, inserts it at the correct\n * position, and merges the list with surrounding lists (if available).\n *\n * @see module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:insert\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data Additional information about the change.\n * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n * @param {Object} conversionApi Conversion interface.\n */\nfunction modelViewInsertion(evt, data, consumable, conversionApi) {\n\tif (!consumable.test(data.item, 'insert') || !consumable.test(data.item, 'addAttribute:type') || !consumable.test(data.item, 'addAttribute:indent')) {\n\t\treturn;\n\t}\n\n\tconsumable.consume(data.item, 'insert');\n\tconsumable.consume(data.item, 'addAttribute:type');\n\tconsumable.consume(data.item, 'addAttribute:indent');\n\n\tvar modelItem = data.item;\n\tvar viewItem = generateLiInUl(modelItem, conversionApi.mapper);\n\n\t// Providing kind of \"default\" insert position in case of converting incorrect model.\n\tvar insertPosition = conversionApi.mapper.toViewPosition(_position2.default.createBefore(modelItem));\n\n\tinjectViewList(modelItem, viewItem, conversionApi.mapper, insertPosition);\n}\n\n/**\n * A model-to-view converter for `type` attribute change on `listItem` model element.\n *\n * This change means that `<li>` elements parent changes from `<ul>` to `<ol>` (or vice versa). This is accomplished\n * by breaking view elements, changing their name and merging them.\n *\n * @see module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:changeAttribute\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data Additional information about the change.\n * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n * @param {Object} conversionApi Conversion interface.\n */\nfunction modelViewChangeType(evt, data, consumable, conversionApi) {\n\tif (!consumable.consume(data.item, 'changeAttribute:type')) {\n\t\treturn;\n\t}\n\n\tvar viewItem = conversionApi.mapper.toViewElement(data.item);\n\n\t// 1. Break the container after and before the list item.\n\t// This will create a view list with one view list item -- the one that changed type.\n\t_writer4.default.breakContainer(_position4.default.createBefore(viewItem));\n\t_writer4.default.breakContainer(_position4.default.createAfter(viewItem));\n\n\t// 2. Change name of the view list that holds the changed view item.\n\t// We cannot just change name property, because that would not render properly.\n\tvar viewList = viewItem.parent;\n\tvar listName = data.attributeNewValue == 'numbered' ? 'ol' : 'ul';\n\tviewList = _writer4.default.rename(viewList, listName);\n\n\t// 3. Merge the changed view list with other lists, if possible.\n\tmergeViewLists(viewList, viewList.nextSibling);\n\tmergeViewLists(viewList.previousSibling, viewList);\n}\n\n/**\n * A model-to-view converter for `listItem` model element removal.\n *\n * @see module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:remove\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data Additional information about the change.\n * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n * @param {Object} conversionApi Conversion interface.\n */\nfunction modelViewRemove(evt, data, consumable, conversionApi) {\n\tif (!consumable.consume(data.item, 'remove')) {\n\t\treturn;\n\t}\n\n\tvar viewPosition = conversionApi.mapper.toViewPosition(data.sourcePosition);\n\tvar viewItem = viewPosition.nodeAfter.is('li') ? viewPosition.nodeAfter : viewPosition.nodeAfter.getChild(0);\n\n\t// 1. Break the container after and before the list item.\n\t// This will create a view list with one view list item -- the one that changed type.\n\t_writer4.default.breakContainer(_position4.default.createBefore(viewItem));\n\t_writer4.default.breakContainer(_position4.default.createAfter(viewItem));\n\n\t// 2. Remove the UL that contains just the removed <li>.\n\tvar viewList = viewItem.parent;\n\tvar viewListPrev = viewList.previousSibling;\n\tvar removeRange = _range2.default.createOn(viewList);\n\t_writer4.default.remove(removeRange);\n\n\tif (viewListPrev && viewListPrev.nextSibling) {\n\t\tmergeViewLists(viewListPrev, viewListPrev.nextSibling);\n\t}\n\n\t// 3. Bring back nested list that was in the removed <li>.\n\thoistNestedLists(data.item.getAttribute('indent') + 1, data.sourcePosition, removeRange.start, viewItem, conversionApi.mapper);\n\n\t// Unbind this element only if it was moved to graveyard.\n\t// See #847.\n\tif (data.item.root.rootName == '$graveyard') {\n\t\tconversionApi.mapper.unbindModelElement(data.item);\n\t}\n}\n\n/**\n * A model-to-view converter for `indent` attribute change on `listItem` model element.\n *\n * @see module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:changeAttribute\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data Additional information about the change.\n * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n * @param {Object} conversionApi Conversion interface.\n */\nfunction modelViewChangeIndent(evt, data, consumable, conversionApi) {\n\tif (!consumable.consume(data.item, 'changeAttribute:indent')) {\n\t\treturn;\n\t}\n\n\tvar viewItem = conversionApi.mapper.toViewElement(data.item);\n\n\t// 1. Break the container after and before the list item.\n\t// This will create a view list with one view list item -- the one that changed type.\n\t_writer4.default.breakContainer(_position4.default.createBefore(viewItem));\n\t_writer4.default.breakContainer(_position4.default.createAfter(viewItem));\n\n\t// 2. Extract view list with changed view list item and merge \"hole\" possibly created by breaking and removing elements.\n\tvar viewList = viewItem.parent;\n\tvar viewListPrev = viewList.previousSibling;\n\tvar removeRange = _range2.default.createOn(viewList);\n\t_writer4.default.remove(removeRange);\n\n\t// TODO: get rid of `removePosition` when conversion is done on `changesDone`.\n\tvar removePosition = void 0;\n\n\tif (viewListPrev && viewListPrev.nextSibling) {\n\t\tremovePosition = mergeViewLists(viewListPrev, viewListPrev.nextSibling);\n\t}\n\n\tif (!removePosition) {\n\t\tremovePosition = removeRange.start;\n\t}\n\n\t// 3. Bring back nested list that was in the removed <li>.\n\thoistNestedLists(data.attributeOldValue + 1, data.range.start, removeRange.start, viewItem, conversionApi.mapper);\n\n\t// 4. Inject view list like it is newly inserted.\n\tinjectViewList(data.item, viewItem, conversionApi.mapper, removePosition);\n}\n\n/**\n * A special model-to-view converter introduced by the {@link module:list/list~List list feature}. This converter is fired for\n * insert change of every model item, and should be fired before the actual converter. The converter checks whether the inserted\n * model item is a non-`listItem` element. If it is, and it is inserted inside a view list, the converter breaks the\n * list so the model element is inserted to the view parent element corresponding to its model parent element.\n *\n * The converter prevents such situations:\n *\n *\t\t// Model:                        // View:\n *\t\t<listItem>foo</listItem>         <ul>\n *\t\t<listItem>bar</listItem>             <li>foo</li>\n *\t\t                                     <li>bar</li>\n *\t\t                                 </ul>\n *\n *\t\t// After change:                 // Correct view guaranteed by this converter:\n *\t\t<listItem>foo</listItem>         <ul><li>foo</li></ul><p>xxx</p><ul><li>bar</li></ul>\n *\t\t<paragraph>xxx</paragraph>       // Instead of this wrong view state:\n *\t\t<listItem>bar</listItem>         <ul><li>foo</li><p>xxx</p><li>bar</li></ul>\n *\n * @see module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:insert\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data Additional information about the change.\n * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n * @param {Object} conversionApi Conversion interface.\n */\nfunction modelViewSplitOnInsert(evt, data, consumable, conversionApi) {\n\tif (data.item.name != 'listItem') {\n\t\tvar viewPosition = conversionApi.mapper.toViewPosition(data.range.start);\n\n\t\tvar lists = [];\n\n\t\t// Break multiple ULs/OLs if there are.\n\t\t//\n\t\t// Imagine following list:\n\t\t//\n\t\t// 1 --------\n\t\t//   1.1 --------\n\t\t//     1.1.1 --------\n\t\t//     1.1.2 --------\n\t\t//     1.1.3 --------\n\t\t//       1.1.3.1 --------\n\t\t//   1.2 --------\n\t\t//     1.2.1 --------\n\t\t// 2 --------\n\t\t//\n\t\t// Insert paragraph after item 1.1.1:\n\t\t//\n\t\t// 1 --------\n\t\t//   1.1 --------\n\t\t//     1.1.1 --------\n\t\t//\n\t\t// Lorem ipsum.\n\t\t//\n\t\t//     1.1.2 --------\n\t\t//     1.1.3 --------\n\t\t//       1.1.3.1 --------\n\t\t//   1.2 --------\n\t\t//     1.2.1 --------\n\t\t// 2 --------\n\t\t//\n\t\t// In this case 1.1.2 has to become beginning of a new list.\n\t\t// We need to break list before 1.1.2 (obvious), then we need to break list also before 1.2.\n\t\t// Then we need to move those broken pieces one after another and merge:\n\t\t//\n\t\t// 1 --------\n\t\t//   1.1 --------\n\t\t//     1.1.1 --------\n\t\t//\n\t\t// Lorem ipsum.\n\t\t//\n\t\t// 1.1.2 --------\n\t\t//   1.1.3 --------\n\t\t//     1.1.3.1 --------\n\t\t// 1.2 --------\n\t\t//   1.2.1 --------\n\t\t// 2 --------\n\t\t//\n\t\twhile (viewPosition.parent.name == 'ul' || viewPosition.parent.name == 'ol') {\n\t\t\tviewPosition = _writer4.default.breakContainer(viewPosition);\n\n\t\t\tif (viewPosition.parent.name != 'li') {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Remove lists that are after inserted element.\n\t\t\t// They will be brought back later, below the inserted element.\n\t\t\tvar removeStart = viewPosition;\n\t\t\tvar removeEnd = _position4.default.createAt(viewPosition.parent, 'end');\n\n\t\t\t// Don't remove if there is nothing to remove.\n\t\t\tif (!removeStart.isEqual(removeEnd)) {\n\t\t\t\tvar removed = _writer4.default.remove(new _range2.default(removeStart, removeEnd));\n\t\t\t\tlists.push(removed);\n\t\t\t}\n\n\t\t\tviewPosition = _position4.default.createAfter(viewPosition.parent);\n\t\t}\n\n\t\t// Bring back removed lists.\n\t\tif (lists.length > 0) {\n\t\t\tfor (var i = 0; i < lists.length; i++) {\n\t\t\t\tvar previousList = viewPosition.nodeBefore;\n\t\t\t\tvar insertedRange = _writer4.default.insert(viewPosition, lists[i]);\n\t\t\t\tviewPosition = insertedRange.end;\n\n\t\t\t\t// Don't merge first list! We want a split in that place (this is why this converter is introduced).\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tvar mergePos = mergeViewLists(previousList, previousList.nextSibling);\n\n\t\t\t\t\t// If `mergePos` is in `previousList` it means that the lists got merged.\n\t\t\t\t\t// In this case, we need to fix insert position.\n\t\t\t\t\tif (mergePos && mergePos.parent == previousList) {\n\t\t\t\t\t\tviewPosition.offset--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Merge last inserted list with element after it.\n\t\t\tmergeViewLists(viewPosition.nodeBefore, viewPosition.nodeAfter);\n\t\t}\n\t}\n}\n\n/**\n * A special model-to-view converter introduced by the {@link module:list/list~List list feature}. This converter takes care of\n * merging view lists after something is removed or moved from near them.\n *\n * Example:\n *\n *\t\t// Model:                        // View:\n *\t\t<listItem>foo</listItem>         <ul><li>foo</li></ul>\n *\t\t<paragraph>xxx</paragraph>       <p>xxx</p>\n *\t\t<listItem>bar</listItem>         <ul><li>bar</li></ul>\n *\n *\t\t// After change:                 // Correct view guaranteed by this converter:\n *\t\t<listItem>foo</listItem>         <ul>\n *\t\t<listItem>bar</listItem>             <li>foo</li>\n *\t\t                                     <li>bar</li>\n *\t\t                                 </ul>\n *\n * @see module:engine/conversion/modelconversiondispatcher~ModelConversionDispatcher#event:remove\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data Additional information about the change.\n * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n * @param {Object} conversionApi Conversion interface.\n */\nfunction modelViewMergeAfter(evt, data, consumable, conversionApi) {\n\tif (!data.item.is('listItem')) {\n\t\tvar viewPosition = conversionApi.mapper.toViewPosition(data.sourcePosition);\n\t\tvar viewItemPrev = viewPosition.nodeBefore;\n\t\tvar viewItemNext = viewPosition.nodeAfter;\n\n\t\t// Merge lists if something (remove, move) was done from inside of list.\n\t\t// Merging will be done only if both items are view lists of the same type.\n\t\t// The check is done inside the helper function.\n\t\tmergeViewLists(viewItemPrev, viewItemNext);\n\t}\n}\n\n/**\n * A view-to-model converter that converts `<li>` view elements into `listItem` model elements.\n *\n * To set correct values of the `type` and `indent` attributes the converter:\n * * checks `<li>`'s parent,\n * * passes the `data.indent` value when `<li>`'s sub-items are converted.\n *\n * @see module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher#event:element\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data An object containing conversion input and a placeholder for conversion output and possibly other values.\n * @param {module:engine/conversion/viewconsumable~ViewConsumable} consumable Values to consume.\n * @param {Object} conversionApi Conversion interface to be used by the callback.\n */\nfunction viewModelConverter(evt, data, consumable, conversionApi) {\n\tif (consumable.consume(data.input, { name: true })) {\n\t\t// 1. Create `listItem` model element.\n\t\tvar listItem = new _element2.default('listItem');\n\n\t\t// 2. Handle `listItem` model element attributes.\n\t\tdata.indent = data.indent ? data.indent : 0;\n\n\t\tvar type = data.input.parent.name == 'ul' ? 'bulleted' : 'numbered';\n\t\tlistItem.setAttribute('type', type);\n\t\tlistItem.setAttribute('indent', data.indent);\n\n\t\t// 3. Handle `<li>` children.\n\t\tdata.context.push(listItem);\n\n\t\t// `listItem`s created recursively should have bigger indent.\n\t\tdata.indent++;\n\n\t\t// `listItem`s will be kept in flat structure.\n\t\tvar items = new _documentfragment2.default();\n\t\titems.appendChildren(listItem);\n\n\t\t// Check all children of the converted `<li>`.\n\t\t// At this point we assume there are no \"whitespace\" view text nodes in view list, between view list items.\n\t\t// This should be handled by `<ul>` and `<ol>` converters.\n\t\tvar _iteratorNormalCompletion = true;\n\t\tvar _didIteratorError = false;\n\t\tvar _iteratorError = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator = data.input.getChildren()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\tvar child = _step.value;\n\n\t\t\t\t// Let's convert the child.\n\t\t\t\tvar converted = conversionApi.convertItem(child, consumable, data);\n\n\t\t\t\t// If this is a view list element, we will convert it and concat the result (`listItem` model elements)\n\t\t\t\t// with already gathered results (in `items` array). `converted` should be a `ModelDocumentFragment`.\n\t\t\t\tif (child.name == 'ul' || child.name == 'ol') {\n\t\t\t\t\titems.appendChildren(Array.from(converted.getChildren()));\n\t\t\t\t}\n\t\t\t\t// If it was not a list it was a \"regular\" list item content. Just append it to `listItem`.\n\t\t\t\telse {\n\t\t\t\t\t\t_writer2.default.insert(_position2.default.createAt(listItem, 'end'), converted);\n\t\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t_didIteratorError = true;\n\t\t\t_iteratorError = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t_iterator.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdata.indent--;\n\t\tdata.context.pop();\n\n\t\tdata.output = items;\n\t}\n}\n\n/**\n * A view-to-model converter for `<ul>` and `<ol>` view elements that cleans the input view of garbage.\n * This is mostly to clean whitespaces from between `<li>` view elements inside the view list element, however, also\n * incorrect data can be cleared if the view was incorrect.\n *\n * @see module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher#event:element\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data An object containing conversion input and a placeholder for conversion output and possibly other values.\n * @param {module:engine/conversion/viewconsumable~ViewConsumable} consumable Values to consume.\n */\nfunction cleanList(evt, data, consumable) {\n\tif (consumable.test(data.input, { name: true })) {\n\t\t// Caching children because when we start removing them iterating fails.\n\t\tvar children = Array.from(data.input.getChildren());\n\n\t\tvar _iteratorNormalCompletion2 = true;\n\t\tvar _didIteratorError2 = false;\n\t\tvar _iteratorError2 = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator2 = children[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\tvar child = _step2.value;\n\n\t\t\t\tif (!child.is('li')) {\n\t\t\t\t\tchild.remove();\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t_didIteratorError2 = true;\n\t\t\t_iteratorError2 = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t_iterator2.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A view-to-model converter for `<li>` elements that cleans whitespace formatting from the input view.\n *\n * @see module:engine/conversion/viewconversiondispatcher~ViewConversionDispatcher#event:element\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data An object containing conversion input and a placeholder for conversion output and possibly other values.\n * @param {module:engine/conversion/viewconsumable~ViewConsumable} consumable Values to consume.\n */\nfunction cleanListItem(evt, data, consumable) {\n\tif (consumable.test(data.input, { name: true })) {\n\t\tif (data.input.childCount === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar children = [].concat(_toConsumableArray(data.input.getChildren()));\n\n\t\tvar foundList = false;\n\t\tvar firstNode = true;\n\n\t\tvar _iteratorNormalCompletion3 = true;\n\t\tvar _didIteratorError3 = false;\n\t\tvar _iteratorError3 = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator3 = children[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\tvar child = _step3.value;\n\n\t\t\t\tif (foundList && !child.is('ul') && !child.is('ol')) {\n\t\t\t\t\tchild.remove();\n\t\t\t\t}\n\n\t\t\t\tif (child.is('text')) {\n\t\t\t\t\t// If this is the first node and it's a text node, left-trim it.\n\t\t\t\t\tif (firstNode) {\n\t\t\t\t\t\tchild.data = child.data.replace(/^\\s+/, '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// If this is the last text node before <ul> or <ol>, right-trim it.\n\t\t\t\t\tif (!child.nextSibling || child.nextSibling.is('ul') || child.nextSibling.is('ol')) {\n\t\t\t\t\t\tchild.data = child.data.replace(/\\s+$/, '');\n\t\t\t\t\t}\n\t\t\t\t} else if (child.is('ul') || child.is('ol')) {\n\t\t\t\t\t// If this is a <ul> or <ol>, do not process it, just mark that we already visited list element.\n\t\t\t\t\tfoundList = true;\n\t\t\t\t}\n\n\t\t\t\tfirstNode = false;\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t_didIteratorError3 = true;\n\t\t\t_iteratorError3 = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t_iterator3.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * The callback for model position to view position mapping for {@link module:engine/conversion/mapper~Mapper}. The callback fixes\n * positions between `listItem` elements that would be incorrectly mapped because of how list items are represented in model\n * and view.\n *\n * @see module:engine/conversion/mapper~Mapper#event:modelToViewPosition\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data An object containing additional data and placeholder for mapping result.\n */\nfunction modelToViewPosition(evt, data) {\n\tvar modelItem = data.modelPosition.nodeBefore;\n\n\tif (modelItem && modelItem.is('listItem')) {\n\t\tvar viewItem = data.mapper.toViewElement(modelItem);\n\t\tvar topmostViewList = viewItem.getAncestors().find(function (element) {\n\t\t\treturn element.is('ul') || element.is('ol');\n\t\t});\n\t\tvar walker = new _treewalker2.default({\n\t\t\tstartPosition: _position4.default.createAt(viewItem, 0)\n\t\t});\n\n\t\tvar _iteratorNormalCompletion4 = true;\n\t\tvar _didIteratorError4 = false;\n\t\tvar _iteratorError4 = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator4 = walker[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\t\tvar value = _step4.value;\n\n\t\t\t\tif (value.type == 'elementStart' && value.item.is('li')) {\n\t\t\t\t\tdata.viewPosition = value.previousPosition;\n\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (value.type == 'elementEnd' && value.item == topmostViewList) {\n\t\t\t\t\tdata.viewPosition = value.nextPosition;\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t_didIteratorError4 = true;\n\t\t\t_iteratorError4 = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t\t\t\t\t_iterator4.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError4) {\n\t\t\t\t\tthrow _iteratorError4;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * The callback for view position to model position mapping for {@link module:engine/conversion/mapper~Mapper}. The callback fixes\n * positions between `<li>` elements that would be incorrectly mapped because of how list items are represented in model\n * and view.\n *\n * @see module:engine/conversion/mapper~Mapper#event:viewToModelPosition\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data An object containing additional data and placeholder for mapping result.\n */\nfunction viewToModelPosition(evt, data) {\n\tvar viewPos = data.viewPosition;\n\tvar viewParent = viewPos.parent;\n\tvar mapper = data.mapper;\n\n\tif (viewParent.name == 'ul' || viewParent.name == 'ol') {\n\t\t// Position is directly in <ul> or <ol>.\n\t\tif (!viewPos.isAtEnd) {\n\t\t\t// If position is not at the end, it must be before <li>.\n\t\t\t// Get that <li>, map it to `listItem` and set model position before that `listItem`.\n\t\t\tvar modelNode = mapper.toModelElement(viewPos.nodeAfter);\n\n\t\t\tdata.modelPosition = _position2.default.createBefore(modelNode);\n\t\t} else {\n\t\t\t// Position is at the end of <ul> or <ol>, so there is no <li> after it to be mapped.\n\t\t\t// There is <li> before the position, but we cannot just map it to `listItem` and set model position after it,\n\t\t\t// because that <li> may contain nested items.\n\t\t\t// We will check \"model length\" of that <li>, in other words - how many `listItem`s are in that <li>.\n\t\t\tvar _modelNode = mapper.toModelElement(viewPos.nodeBefore);\n\t\t\tvar modelLength = mapper.getModelLength(viewPos.nodeBefore);\n\n\t\t\t// Then we get model position before mapped `listItem` and shift it accordingly.\n\t\t\tdata.modelPosition = _position2.default.createBefore(_modelNode).getShiftedBy(modelLength);\n\t\t}\n\n\t\tevt.stop();\n\t} else if (viewParent.name == 'li' && viewPos.nodeBefore && (viewPos.nodeBefore.name == 'ul' || viewPos.nodeBefore.name == 'ol')) {\n\t\t// In most cases when view position is in <li> it is in text and this is a correct position.\n\t\t// However, if position is after <ul> or <ol> we have to fix it -- because in model <ul>/<ol> are not in the `listItem`.\n\t\tvar _modelNode2 = mapper.toModelElement(viewParent);\n\n\t\t// Check all <ul>s and <ol>s that are in the <li> but before mapped position.\n\t\t// Get model length of those elements and then add it to the offset of `listItem` mapped to the original <li>.\n\t\tvar _modelLength = 1; // Starts from 1 because the original <li> has to be counted in too.\n\t\tvar viewList = viewPos.nodeBefore;\n\n\t\twhile (viewList && (viewList.is('ul') || viewList.is('ol'))) {\n\t\t\t_modelLength += mapper.getModelLength(viewList);\n\n\t\t\tviewList = viewList.previousSibling;\n\t\t}\n\n\t\tdata.modelPosition = _position2.default.createBefore(_modelNode2).getShiftedBy(_modelLength);\n\n\t\tevt.stop();\n\t}\n}\n\n/**\n * Post-fixer that reacts to changes on document and fixes incorrect model states.\n *\n * Example:\n *\n *\t\t<listItem type=\"bulleted\" indent=0>Item 1</listItem>\n *\t\t<listItem type=\"bulleted\" indent=1>Item 2</listItem>   <--- this is removed.\n *\t\t<listItem type=\"bulleted\" indent=2>Item 3</listItem>\n *\n * Should become:\n *\n *\t\t<listItem type=\"bulleted\" indent=0>Item 1</listItem>\n *\t\t<listItem type=\"bulleted\" indent=1>Item 3</listItem>   <--- note that indent got post-fixed.\n *\n * @param {module:engine/model/document~Document} document The document to observe.\n * @returns {Function} A callback to be attached to the {@link module:engine/model/document~Document#event:change document change event}.\n */\nfunction modelChangePostFixer(document) {\n\treturn function (evt, type, changes, batch) {\n\t\tif (batch.type == 'transparent') {\n\t\t\treturn;\n\t\t}\n\n\t\tif (type == 'remove') {\n\t\t\t// Fix list items after the cut-out range.\n\t\t\t// This fix is needed if items in model after cut-out range have now wrong indents compared to their previous siblings.\n\t\t\t_fixItemsIndent(changes.sourcePosition, document, batch);\n\t\t\t// This fix is needed if two different nested lists got merged, change types of list items \"below\".\n\t\t\t_fixItemsType(changes.sourcePosition, false, document, batch);\n\t\t} else if (type == 'move') {\n\t\t\t// Fix list items after the cut-out range.\n\t\t\t// This fix is needed if items in model after cut-out range have now wrong indents compared to their previous siblings.\n\t\t\t_fixItemsIndent(changes.sourcePosition, document, batch);\n\t\t\t// This fix is needed if two different nested lists got merged, change types of list items \"below\".\n\t\t\t_fixItemsType(changes.sourcePosition, false, document, batch);\n\n\t\t\t// Fix items in moved range.\n\t\t\t// This fix is needed if inserted items are too deeply intended.\n\t\t\t_fixItemsIndent(changes.range.start, document, batch);\n\t\t\t// This fix is needed if one or more first inserted items have different type.\n\t\t\t_fixItemsType(changes.range.start, false, document, batch);\n\n\t\t\t// Fix list items after inserted range.\n\t\t\t// This fix is needed if items in model after inserted range have wrong indents.\n\t\t\t_fixItemsIndent(changes.range.end, document, batch);\n\t\t\t// This fix is needed if one or more last inserted items have different type.\n\t\t\t_fixItemsType(changes.range.end, true, document, batch);\n\t\t} else if (type == 'rename' && changes.oldName == 'listItem' && changes.newName != 'listItem') {\n\t\t\tvar element = changes.element;\n\n\t\t\t// Element name is changed from list to something else. Remove useless attributes.\n\t\t\tdocument.enqueueChanges(function () {\n\t\t\t\tbatch.removeAttribute(element, 'indent').removeAttribute(element, 'type');\n\t\t\t});\n\n\t\t\tvar changePos = _position2.default.createAfter(changes.element);\n\n\t\t\t// Fix list items after the renamed element.\n\t\t\t// This fix is needed if there are items after renamed element, those items should start from indent = 0.\n\t\t\t_fixItemsIndent(changePos, document, batch);\n\t\t} else if (type == 'insert') {\n\t\t\t// Fix list items in inserted range.\n\t\t\t// This fix is needed if inserted items are too deeply intended.\n\t\t\t_fixItemsIndent(changes.range.start, document, batch);\n\t\t\t// This fix is needed if one or more first inserted items have different type.\n\t\t\t_fixItemsType(changes.range.start, false, document, batch);\n\n\t\t\t// Fix list items after inserted range.\n\t\t\t// This fix is needed if items in model after inserted range have wrong indents.\n\t\t\t_fixItemsIndent(changes.range.end, document, batch);\n\t\t\t// This fix is needed if one or more last inserted items have different type.\n\t\t\t_fixItemsType(changes.range.end, true, document, batch);\n\t\t}\n\t};\n}\n\n// Helper function for post fixer callback. Performs fixing of model `listElement` items indent attribute. Checks the model at the\n// `changePosition`. Looks at the node before position where change occurred and uses that node as a reference for following list items.\nfunction _fixItemsIndent(changePosition, document, batch) {\n\tvar nextItem = changePosition.nodeAfter;\n\n\tif (nextItem && nextItem.name == 'listItem') {\n\t\tdocument.enqueueChanges(function () {\n\t\t\tvar prevItem = nextItem.previousSibling;\n\t\t\t// This is the maximum indent that following model list item may have.\n\t\t\tvar maxIndent = prevItem && prevItem.is('listItem') ? prevItem.getAttribute('indent') + 1 : 0;\n\n\t\t\t// Check how much the next item needs to be outdented.\n\t\t\tvar outdentBy = nextItem.getAttribute('indent') - maxIndent;\n\t\t\tvar items = [];\n\n\t\t\twhile (nextItem && nextItem.name == 'listItem' && nextItem.getAttribute('indent') > maxIndent) {\n\t\t\t\tif (outdentBy > nextItem.getAttribute('indent')) {\n\t\t\t\t\toutdentBy = nextItem.getAttribute('indent');\n\t\t\t\t}\n\n\t\t\t\tvar newIndent = nextItem.getAttribute('indent') - outdentBy;\n\n\t\t\t\titems.push({ item: nextItem, indent: newIndent });\n\n\t\t\t\tnextItem = nextItem.nextSibling;\n\t\t\t}\n\n\t\t\tif (items.length > 0) {\n\t\t\t\t// Since we are outdenting list items, it is safer to start from the last one (it will maintain correct model state).\n\t\t\t\tvar _iteratorNormalCompletion5 = true;\n\t\t\t\tvar _didIteratorError5 = false;\n\t\t\t\tvar _iteratorError5 = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator5 = items.reverse()[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t\t\t\t\t\tvar item = _step5.value;\n\n\t\t\t\t\t\tbatch.setAttribute(item.item, 'indent', item.indent);\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError5 = true;\n\t\t\t\t\t_iteratorError5 = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t\t\t\t\t\t\t_iterator5.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError5) {\n\t\t\t\t\t\t\tthrow _iteratorError5;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\n// Helper function for post fixer callback. Performs fixing of model nested `listElement` items type attribute.\n// Checks the model at the `changePosition`. Looks at nodes after/before that position and changes those items type\n// to the same as node before/after `changePosition`.\nfunction _fixItemsType(changePosition, fixPrevious, document, batch) {\n\tvar item = changePosition[fixPrevious ? 'nodeBefore' : 'nodeAfter'];\n\n\tif (!item || !item.is('listItem') || item.getAttribute('indent') === 0) {\n\t\t// !item - when last item got removed.\n\t\t// !item.is( 'listItem' ) - when first element to fix is not a list item already.\n\t\t// indent === 0 - do not fix if changes are done on top level lists.\n\t\treturn;\n\t}\n\n\tdocument.enqueueChanges(function () {\n\t\tvar refItem = _getBoundaryItemOfSameList(item, !fixPrevious);\n\n\t\tif (!refItem || refItem == item) {\n\t\t\t// !refItem - happens if first list item is inserted.\n\t\t\t// refItem == item - happens if last item is inserted.\n\t\t\treturn;\n\t\t}\n\n\t\tvar refIndent = refItem.getAttribute('indent');\n\t\tvar refType = refItem.getAttribute('type');\n\n\t\twhile (item && item.is('listItem') && item.getAttribute('indent') >= refIndent) {\n\t\t\tif (item.getAttribute('type') != refType && item.getAttribute('indent') == refIndent) {\n\t\t\t\tbatch.setAttribute(item, 'type', refType);\n\t\t\t}\n\n\t\t\titem = item[fixPrevious ? 'previousSibling' : 'nextSibling'];\n\t\t}\n\t});\n}\n\n/**\n * A fixer for pasted content that includes list items.\n *\n * It fixes indentation of pasted list items so the pasted items match correctly to the context they are pasted into.\n *\n * Example:\n *\n *\t\t<listItem type=\"bulleted\" indent=0>A</listItem>\n *\t\t<listItem type=\"bulleted\" indent=1>B^</listItem>\n *\t\t// At ^ paste:  <listItem type=\"bulleted\" indent=4>X</listItem>\n *\t\t//              <listItem type=\"bulleted\" indent=5>Y</listItem>\n *\t\t<listItem type=\"bulleted\" indent=2>C</listItem>\n *\n * Should become:\n *\n *\t\t<listItem type=\"bulleted\" indent=0>A</listItem>\n *\t\t<listItem type=\"bulleted\" indent=1>BX</listItem>\n *\t\t<listItem type=\"bulleted\" indent=2>Y/listItem>\n *\t\t<listItem type=\"bulleted\" indent=2>C</listItem>\n *\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Array} args Arguments of {@link module:engine/controller/datacontroller~DataController#insertContent}.\n */\nfunction modelIndentPasteFixer(evt, _ref) {\n\tvar _ref2 = _slicedToArray(_ref, 2),\n\t    content = _ref2[0],\n\t    selection = _ref2[1];\n\n\t// Check whether inserted content starts from a `listItem`. If it does not, it means that there are some other\n\t// elements before it and there is no need to fix indents, because even if we insert that content into a list,\n\t// that list will be broken.\n\t// Note: we also need to handle singular elements because inserting item with indent 0 into 0,1,[],2\n\t// would create incorrect model.\n\tvar item = content.is('documentFragment') ? content.getChild(0) : content;\n\n\tif (item.is('listItem')) {\n\t\t// Get a reference list item. Inserted list items will be fixed according to that item.\n\t\tvar pos = selection.getFirstPosition();\n\t\tvar refItem = null;\n\n\t\tif (pos.parent.is('listItem')) {\n\t\t\trefItem = pos.parent;\n\t\t} else if (pos.nodeBefore && pos.nodeBefore.is('listItem')) {\n\t\t\trefItem = pos.nodeBefore;\n\t\t}\n\n\t\t// If there is `refItem` it means that we do insert list items into an existing list.\n\t\tif (refItem) {\n\t\t\t// First list item in `data` has indent equal to 0 (it is a first list item). It should have indent equal\n\t\t\t// to the indent of reference item. We have to fix the first item and all of it's children and following siblings.\n\t\t\t// Indent of all those items has to be adjusted to reference item.\n\t\t\tvar indentChange = refItem.getAttribute('indent');\n\n\t\t\t// Fix only if there is anything to fix.\n\t\t\tif (indentChange > 0) {\n\t\t\t\t// Adjust indent of all \"first\" list items in inserted data.\n\t\t\t\twhile (item && item.is('listItem')) {\n\t\t\t\t\titem.setAttribute('indent', item.getAttribute('indent') + indentChange);\n\n\t\t\t\t\titem = item.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Helper function that creates a `<ul><li></li></ul>` or (`<ol>`) structure out of given `modelItem` model `listItem` element.\n// Then, it binds created view list item (<li>) with model `listItem` element.\n// The function then returns created view list item (<li>).\nfunction generateLiInUl(modelItem, mapper) {\n\tvar listType = modelItem.getAttribute('type') == 'numbered' ? 'ol' : 'ul';\n\tvar viewItem = new _viewlistitemelement2.default();\n\n\tvar viewList = new _containerelement2.default(listType, null);\n\tviewList.appendChildren(viewItem);\n\n\tmapper.bindElements(modelItem, viewItem);\n\n\treturn viewItem;\n}\n\n// Helper function that seeks for a list item sibling of given model item (or position) which meets given criteria.\n// `options` object may contain one or more of given values (by default they are `false`):\n// `options.getNext` - whether next or previous siblings should be checked (default = previous)\n// `options.checkAllSiblings` - whether all siblings or just the first one should be checked (default = only one),\n// `options.sameIndent` - whether sought sibling should have same indent (default = no),\n// `options.biggerIndent` - whether sought sibling should have bigger indent (default = no).\n// `options.smallerIndent` - whether sought sibling should have smaller indent (default = no).\n// `options.isMapped` - whether sought sibling must be mapped to view (default = no).\n// `options.mapper` - used to map model elements when `isMapped` option is set to true.\n// `options.indent` - used as reference item when first parameter is a position\n// Either `options.sameIndent` or `options.biggerIndent` should be set to `true`.\nfunction getSiblingListItem(modelItemOrPosition, options) {\n\tvar direction = options.getNext ? 'nextSibling' : 'previousSibling';\n\tvar posDirection = options.getNext ? 'nodeAfter' : 'nodeBefore';\n\tvar checkAllSiblings = !!options.checkAllSiblings;\n\tvar sameIndent = !!options.sameIndent;\n\tvar biggerIndent = !!options.biggerIndent;\n\tvar smallerIndent = !!options.smallerIndent;\n\tvar isMapped = !!options.isMapped;\n\n\tvar indent = modelItemOrPosition instanceof _element2.default ? modelItemOrPosition.getAttribute('indent') : options.indent;\n\tvar item = modelItemOrPosition instanceof _element2.default ? modelItemOrPosition[direction] : modelItemOrPosition[posDirection];\n\n\twhile (item && item.name == 'listItem') {\n\t\tvar itemIndent = item.getAttribute('indent');\n\n\t\tif (sameIndent && indent == itemIndent || biggerIndent && indent < itemIndent || smallerIndent && indent > itemIndent) {\n\t\t\tif (!isMapped || options.mapper.toViewElement(item)) {\n\t\t\t\treturn item;\n\t\t\t} else {\n\t\t\t\titem = item[direction];\n\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tif (!checkAllSiblings) {\n\t\t\treturn null;\n\t\t}\n\n\t\titem = item[direction];\n\t}\n\n\treturn null;\n}\n\n// Helper function that takes two parameters, that are expected to be view list elements, and merges them.\n// The merge happen only if both parameters are UL or OL elements.\nfunction mergeViewLists(firstList, secondList) {\n\tif (firstList && secondList && (firstList.name == 'ul' || firstList.name == 'ol') && firstList.name == secondList.name) {\n\t\treturn _writer4.default.mergeContainers(_position4.default.createAfter(firstList));\n\t}\n\n\treturn null;\n}\n\n// Helper function that takes model list item element `modelItem`, corresponding view list item element `injectedItem`\n// that is not added to the view and is inside a view list element (`ul` or `ol`) and is that's list only child.\n// The list is inserted at correct position (element breaking may be needed) and then merged with it's siblings.\n// See comments below to better understand the algorithm.\nfunction injectViewList(modelItem, injectedItem, mapper, removePosition) {\n\tvar injectedList = injectedItem.parent;\n\n\t// Position where view list will be inserted.\n\tvar insertPosition = void 0;\n\n\t// 1. Find previous list item that has same or smaller indent. Basically we are looking for a first model item\n\t// that is \"parent\" or \"sibling\" if injected model item.\n\t// If there is no such list item, it means that injected list item is the first item in \"its list\".\n\tvar prevItem = getSiblingListItem(modelItem, { sameIndent: true, smallerIndent: true, checkAllSiblings: true });\n\n\tif (prevItem && prevItem.getAttribute('indent') == modelItem.getAttribute('indent')) {\n\t\t// There is a list item with same indent - we found same-level sibling.\n\t\t// Break the list after it. Inserted view item will be inserted in the broken space.\n\t\tvar viewItem = mapper.toViewElement(prevItem);\n\t\tinsertPosition = _writer4.default.breakContainer(_position4.default.createAfter(viewItem));\n\t} else {\n\t\t// There is no list item with same indent. Check previous model item.\n\t\tprevItem = modelItem.previousSibling;\n\n\t\tif (prevItem && prevItem.name == 'listItem') {\n\t\t\t// // If it is a list item, it has to have lower indent.\n\t\t\t// // It means that inserted item should be added to it as its nested item.\n\t\t\t// insertPosition = mapper.toViewPosition( ModelPosition.createAt( prevItem, 'end' ) );\n\t\t\t// ^ ACTUALLY NOT BECAUSE FIXING DOES NOT WORK PROPERLY.\n\t\t\t// TODO: fix this part of code when conversion from model to view is done on `changesDone` event or post/prefixing is better.\n\t\t\tif (prevItem.getAttribute('indent') < modelItem.getAttribute('indent')) {\n\t\t\t\t// Lower indent, correct model, previous item is a parent and this model item is its nested item.\n\t\t\t\tinsertPosition = mapper.toViewPosition(_position2.default.createAt(prevItem, 'end'));\n\t\t\t} else {\n\t\t\t\t// Higher indent, incorrect model that is probably being fixed. Inject the view list where it was.\n\t\t\t\t// TODO: get rid of `removePosition` when conversion is done on `changesDone`.\n\t\t\t\tif (removePosition.parent.is('ul') || removePosition.parent.is('ol')) {\n\t\t\t\t\tinsertPosition = _writer4.default.breakContainer(removePosition);\n\t\t\t\t} else {\n\t\t\t\t\tinsertPosition = removePosition;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Previous item is not a list item (or does not exist at all).\n\t\t\t// Just map the position and insert the view item at mapped position.\n\t\t\tinsertPosition = mapper.toViewPosition(_position2.default.createBefore(modelItem));\n\t\t}\n\t}\n\n\tinsertPosition = positionAfterUiElements(insertPosition);\n\n\t// Insert the view item.\n\t_writer4.default.insert(insertPosition, injectedList);\n\n\t// 2. Handle possible children of injected model item.\n\t// We have to check if next list item in model has bigger indent. If it has, it means that it and possibly\n\t// some following list items should be nested in the injected view item.\n\t// Look only after model elements that are already mapped to view. Some following model items might not be mapped\n\t// if multiple items in model were inserted/moved at once.\n\tvar nextItem = getSiblingListItem(modelItem, { biggerIndent: true, getNext: true, isMapped: true, mapper: mapper });\n\n\tif (nextItem) {\n\t\tvar _viewItem = mapper.toViewElement(nextItem);\n\n\t\t// Break the list between found view item and its preceding `<li>`s.\n\t\t_writer4.default.breakContainer(_position4.default.createBefore(_viewItem));\n\n\t\t// The broken (\"lower\") part will be moved as nested children of the inserted view item.\n\t\tvar sourceStart = _position4.default.createBefore(_viewItem.parent);\n\n\t\tvar lastModelItem = _getBoundaryItemOfSameList(nextItem, false);\n\t\tvar lastViewItem = mapper.toViewElement(lastModelItem);\n\t\tvar sourceEnd = _writer4.default.breakContainer(_position4.default.createAfter(lastViewItem));\n\t\tvar sourceRange = new _range2.default(sourceStart, sourceEnd);\n\n\t\tvar targetPosition = _position4.default.createAt(injectedItem, 'end');\n\t\t_writer4.default.move(sourceRange, targetPosition);\n\t}\n\n\t// Merge inserted view list with its possible neighbour lists.\n\tmergeViewLists(injectedList, injectedList.nextSibling);\n\tmergeViewLists(injectedList.previousSibling, injectedList);\n}\n\n// Helper function that takes all children of given `viewRemovedItem` and moves them in a correct place, according\n// to other given parameters.\nfunction hoistNestedLists(nextIndent, modelRemoveStartPosition, viewRemoveStartPosition, viewRemovedItem, mapper) {\n\t// Find correct previous model list item element.\n\t// The element has to have either same or smaller indent than given reference indent.\n\t// This will be the model element which will get nested items (if it has smaller indent) or sibling items (if it has same indent).\n\t// Keep in mind that such element might not be found, if removed item was the first item.\n\tvar prevModelItem = getSiblingListItem(modelRemoveStartPosition, {\n\t\tsameIndent: true,\n\t\tsmallerIndent: true,\n\t\tcheckAllSiblings: true,\n\t\tindent: nextIndent\n\t});\n\n\t// Indent of found element or `null` if the element has not been found.\n\tvar prevIndent = prevModelItem ? prevModelItem.getAttribute('indent') : null;\n\n\tvar insertPosition = void 0;\n\n\tif (!prevModelItem) {\n\t\t// If element has not been found, simply insert lists at the position where the removed item was:\n\t\t//\n\t\t// Lorem ipsum.\n\t\t// 1 --------           <--- this is removed, no previous list item, put nested items in place of removed item.\n\t\t//   1.1 --------       <--- this is reference indent.\n\t\t//     1.1.1 --------\n\t\t//     1.1.2 --------\n\t\t//   1.2 --------\n\t\t//\n\t\t// Becomes:\n\t\t//\n\t\t// Lorem ipsum.\n\t\t// 1.1 --------\n\t\t//   1.1.1 --------\n\t\t//   1.1.2 --------\n\t\t// 1.2 --------\n\t\tinsertPosition = viewRemoveStartPosition;\n\t} else if (prevIndent == nextIndent) {\n\t\t// If element has been found and has same indent as reference indent it means that nested items should\n\t\t// become siblings of found element:\n\t\t//\n\t\t// 1 --------\n\t\t//   1.1 --------\n\t\t//   1.2 --------       <--- this is `prevModelItem`.\n\t\t// 2 --------           <--- this is removed, previous list item has indent same as reference indent.\n\t\t//   2.1 --------       <--- this is reference indent, this and 2.2 should become siblings of 1.2.\n\t\t//   2.2 --------\n\t\t//\n\t\t// Becomes:\n\t\t//\n\t\t// 1 --------\n\t\t//   1.1 --------\n\t\t//   1.2 --------\n\t\t//   2.1 --------\n\t\t//   2.2 --------\n\t\tvar prevViewList = mapper.toViewElement(prevModelItem).parent;\n\t\tinsertPosition = _position4.default.createAfter(prevViewList);\n\t} else {\n\t\t// If element has been found and has smaller indent as reference indent it means that nested items\n\t\t// should become nested items of found item:\n\t\t//\n\t\t// 1 --------           <--- this is `prevModelItem`.\n\t\t//   1.1 --------       <--- this is removed, previous list item has indent smaller than reference indent.\n\t\t//     1.1.1 --------   <--- this is reference indent, this and 1.1.1 should become nested items of 1.\n\t\t//     1.1.2 --------\n\t\t//   1.2 --------\n\t\t//\n\t\t// Becomes:\n\t\t//\n\t\t// 1 --------\n\t\t//   1.1.1 --------\n\t\t//   1.1.2 --------\n\t\t//   1.2 --------\n\t\t//\n\t\t// Note: in this case 1.1.1 have indent 2 while 1 have indent 0. In model that should not be possible,\n\t\t// because following item may have indent bigger only by one. But this is fixed by postfixer.\n\t\tvar modelPosition = _position2.default.createAt(prevModelItem, 'end');\n\t\tinsertPosition = mapper.toViewPosition(modelPosition);\n\t}\n\n\tinsertPosition = positionAfterUiElements(insertPosition);\n\n\t// Handle multiple lists. This happens if list item has nested numbered and bulleted lists. Following lists\n\t// are inserted after the first list (no need to recalculate insertion position for them).\n\n\tvar _arr = [].concat(_toConsumableArray(viewRemovedItem.getChildren()));\n\n\tfor (var _i = 0; _i < _arr.length; _i++) {\n\t\tvar child = _arr[_i];\n\t\tif (child.is('ul') || child.is('ol')) {\n\t\t\tinsertPosition = _writer4.default.move(_range2.default.createOn(child), insertPosition).end;\n\n\t\t\tmergeViewLists(child, child.nextSibling);\n\t\t\tmergeViewLists(child.previousSibling, child);\n\t\t}\n\t}\n}\n\n// Helper function to obtain the first or the last model list item which is in on the same indent level as given `item`.\nfunction _getBoundaryItemOfSameList(item, getFirst) {\n\tvar indent = item.getAttribute('indent');\n\tvar direction = getFirst ? 'previousSibling' : 'nextSibling';\n\n\tvar result = item;\n\n\twhile (item[direction] && item[direction].is('listItem') && item[direction].getAttribute('indent') >= indent) {\n\t\titem = item[direction];\n\n\t\tif (item.getAttribute('indent') == indent) {\n\t\t\tresult = item;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n// Helper function that for given `view.Position`, returns a `view.Position` that is after all `view.UIElement`s that\n// are after given position.\n// For example:\n// <container:p>foo^<ui:span></ui:span><ui:span></ui:span>bar</contain:p>\n// For position ^, a position before \"bar\" will be returned.\nfunction positionAfterUiElements(viewPosition) {\n\treturn viewPosition.getLastMatchingPosition(function (value) {\n\t\treturn value.item.is('uiElement');\n\t});\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-list/src/converters.js\n// module id = 358\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _command = require('@ckeditor/ckeditor5-core/src/command');\n\nvar _command2 = _interopRequireDefault(_command);\n\nvar _first = require('@ckeditor/ckeditor5-utils/src/first');\n\nvar _first2 = _interopRequireDefault(_first);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module list/indentcommand\n */\n\n/**\n * The list indent command. It is used by the {@link module:list/list~List list feature}.\n *\n * @extends module:core/command~Command\n */\nvar IndentCommand = function (_Command) {\n\t_inherits(IndentCommand, _Command);\n\n\t/**\n  * Creates an instance of the command.\n  *\n  * @param {module:core/editor/editor~Editor} editor The editor instance.\n  * @param {'forward'|'backward'} indentDirection The direction of indent. If it is equal to `backward`, the command\n  * will outdent a list item.\n  */\n\tfunction IndentCommand(editor, indentDirection) {\n\t\t_classCallCheck(this, IndentCommand);\n\n\t\t/**\n   * Determines by how much the command will change the list item's indent attribute.\n   *\n   * @readonly\n   * @private\n   * @member {Number}\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (IndentCommand.__proto__ || Object.getPrototypeOf(IndentCommand)).call(this, editor));\n\n\t\t_this._indentBy = indentDirection == 'forward' ? 1 : -1;\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(IndentCommand, [{\n\t\tkey: 'refresh',\n\t\tvalue: function refresh() {\n\t\t\tthis.isEnabled = this._checkEnabled();\n\t\t}\n\n\t\t/**\n   * Indents or outdents (depends on the {@link #constructor}'s `indentDirection` parameter) selected list items.\n   *\n   * @fires execute\n   */\n\n\t}, {\n\t\tkey: 'execute',\n\t\tvalue: function execute() {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar doc = this.editor.document;\n\t\t\tvar batch = doc.batch();\n\t\t\tvar itemsToChange = Array.from(doc.selection.getSelectedBlocks());\n\n\t\t\tdoc.enqueueChanges(function () {\n\t\t\t\tvar lastItem = itemsToChange[itemsToChange.length - 1];\n\n\t\t\t\t// Indenting a list item should also indent all the items that are already sub-items of indented item.\n\t\t\t\tvar next = lastItem.nextSibling;\n\n\t\t\t\t// Check all items after last indented item, as long as their indent is bigger than indent of that item.\n\t\t\t\twhile (next && next.name == 'listItem' && next.getAttribute('indent') > lastItem.getAttribute('indent')) {\n\t\t\t\t\titemsToChange.push(next);\n\n\t\t\t\t\tnext = next.nextSibling;\n\t\t\t\t}\n\n\t\t\t\t// We need to be sure to keep model in correct state after each small change, because converters\n\t\t\t\t// bases on that state and assumes that model is correct.\n\t\t\t\t// Because of that, if the command outdents items, we will outdent them starting from the last item, as\n\t\t\t\t// it is safer.\n\t\t\t\tif (_this2._indentBy < 0) {\n\t\t\t\t\titemsToChange = itemsToChange.reverse();\n\t\t\t\t}\n\n\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\tvar _didIteratorError = false;\n\t\t\t\tvar _iteratorError = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator = itemsToChange[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\tvar item = _step.value;\n\n\t\t\t\t\t\tvar indent = item.getAttribute('indent') + _this2._indentBy;\n\n\t\t\t\t\t\t// If indent is lower than 0, it means that the item got outdented when it was not indented.\n\t\t\t\t\t\t// This means that we need to convert that list item to paragraph.\n\t\t\t\t\t\tif (indent < 0) {\n\t\t\t\t\t\t\t// To keep the model as correct as possible, first rename listItem, then remove attributes,\n\t\t\t\t\t\t\t// as listItem without attributes is very incorrect and will cause problems in converters.\n\t\t\t\t\t\t\t// No need to remove attributes, will be removed by post fixer.\n\t\t\t\t\t\t\tbatch.rename(item, 'paragraph');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// If indent is >= 0, change the attribute value.\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tbatch.setAttribute(item, 'indent', indent);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check whether some of changed list items' type should not be fixed.\n\t\t\t\t\t// But first, reverse `itemsToChange` again -- we always want to perform those fixes starting from first item (source-wise).\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t_iteratorError = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (_this2._indentBy < 0) {\n\t\t\t\t\titemsToChange = itemsToChange.reverse();\n\t\t\t\t}\n\n\t\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\t\tvar _didIteratorError2 = false;\n\t\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator2 = itemsToChange[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\t\tvar _item = _step2.value;\n\n\t\t\t\t\t\t_fixType(_item, batch);\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t\t_iteratorError2 = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * Checks whether the command can be enabled in the current context.\n   *\n   * @private\n   * @returns {Boolean} Whether the command should be enabled.\n   */\n\n\t}, {\n\t\tkey: '_checkEnabled',\n\t\tvalue: function _checkEnabled() {\n\t\t\t// Check whether any of position's ancestor is a list item.\n\t\t\tvar listItem = (0, _first2.default)(this.editor.document.selection.getSelectedBlocks());\n\n\t\t\t// If selection is not in a list item, the command is disabled.\n\t\t\tif (!listItem || !listItem.is('listItem')) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this._indentBy > 0) {\n\t\t\t\t// Cannot indent first item in it's list. Check if before `listItem` is a list item that is in same list.\n\t\t\t\t// To be in the same list, the item has to have same attributes and cannot be \"split\" by an item with lower indent.\n\t\t\t\tvar indent = listItem.getAttribute('indent');\n\t\t\t\tvar type = listItem.getAttribute('type');\n\n\t\t\t\tvar prev = listItem.previousSibling;\n\n\t\t\t\twhile (prev && prev.is('listItem') && prev.getAttribute('indent') >= indent) {\n\t\t\t\t\tif (prev.getAttribute('indent') == indent) {\n\t\t\t\t\t\t// The item is on the same level.\n\t\t\t\t\t\t// If it has same type, it means that we found a preceding sibling from the same list.\n\t\t\t\t\t\t// If it does not have same type, it means that `listItem` is on different list (this can happen only\n\t\t\t\t\t\t// on top level lists, though).\n\t\t\t\t\t\treturn prev.getAttribute('type') == type;\n\t\t\t\t\t}\n\n\t\t\t\t\tprev = prev.previousSibling;\n\t\t\t\t}\n\n\t\t\t\t// Could not find similar list item, this means that `listItem` is first in its list.\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// If we are outdenting it is enough to be in list item. Every list item can always be outdented.\n\t\t\treturn true;\n\t\t}\n\t}]);\n\n\treturn IndentCommand;\n}(_command2.default);\n\n// Fixes type of `item` element after it was indented/outdented. Looks for a sibling of `item` that has the same\n// indent and sets `item`'s type to the same as that sibling.\n\n\nexports.default = IndentCommand;\nfunction _fixType(item, batch) {\n\t// Find a preceding sibling of `item` that is a list item of the same list as `item`.\n\tvar prev = _seekListItem(item, false);\n\n\t// If found, fix type.\n\tif (prev) {\n\t\tbatch.setAttribute(item, 'type', prev.getAttribute('type'));\n\n\t\treturn;\n\t}\n\n\t// If not found, find a following sibling of `item` that is a list item of the same list as `item`.\n\tvar next = _seekListItem(item, true);\n\n\t// If found, fix type.\n\tif (next) {\n\t\tbatch.setAttribute(item, 'type', next.getAttribute('type'));\n\t}\n}\n\n// Seeks for a list item that has same indent as given `item`. May look through next siblings (`seekForward = true`) or\n// previous siblings (`seekForward = false`). Returns found list item or `null` if item has not been found.\nfunction _seekListItem(item, seekForward) {\n\tvar result = item[seekForward ? 'nextSibling' : 'previousSibling'];\n\n\t// Look for the previous/next sibling that has same indent and is before a list item element with lower indent.\n\t// If elements are split by an element with lower indent, they are on different lists.\n\twhile (result && result.is('listItem') && result.getAttribute('indent') >= item.getAttribute('indent')) {\n\t\tif (result.getAttribute('indent') == item.getAttribute('indent')) {\n\t\t\t// We found sibling that is on the same list.\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = result[seekForward ? 'nextSibling' : 'previousSibling'];\n\t}\n\n\treturn null;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-list/src/indentcommand.js\n// module id = 359\n// module chunks = 0","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if ('value' in descriptor)\n                descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }\n    return function (Constructor, protoProps, staticProps) {\n        if (protoProps)\n            defineProperties(Constructor.prototype, protoProps);\n        if (staticProps)\n            defineProperties(Constructor, staticProps);\n        return Constructor;\n    };\n}();\nvar _listengine = require('./listengine');\nvar _listengine2 = _interopRequireDefault(_listengine);\nvar _numberedlist = require('../theme/icons/numberedlist.svg');\nvar _numberedlist2 = _interopRequireDefault(_numberedlist);\nvar _bulletedlist = require('../theme/icons/bulletedlist.svg');\nvar _bulletedlist2 = _interopRequireDefault(_bulletedlist);\nvar _plugin = require('@ckeditor/ckeditor5-core/src/plugin');\nvar _plugin2 = _interopRequireDefault(_plugin);\nvar _keyboard = require('@ckeditor/ckeditor5-utils/src/keyboard');\nvar _buttonview = require('@ckeditor/ckeditor5-ui/src/button/buttonview');\nvar _buttonview2 = _interopRequireDefault(_buttonview);\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError('Cannot call a class as a function');\n    }\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n    }\n    return call && (typeof call === 'object' || typeof call === 'function') ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n        throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass)\n        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n/**\n * @module list/list\n */\n/**\n * The list feature. It introduces the `numberedList` and `bulletedList` buttons that\n * allow to convert paragraphs to and from list items and indent or outdent them.\n *\n * See also {@link module:list/listengine~ListEngine}.\n *\n * @extends module:core/plugin~Plugin\n */\nvar List = function (_Plugin) {\n    _inherits(List, _Plugin);\n    function List() {\n        _classCallCheck(this, List);\n        return _possibleConstructorReturn(this, (List.__proto__ || Object.getPrototypeOf(List)).apply(this, arguments));\n    }\n    _createClass(List, [\n        {\n            key: 'init',\n            /**\n   * @inheritDoc\n   */\n            value: function init() {\n                var _this2 = this;\n                // Create two buttons and link them with numberedList and bulletedList commands.\n                var t = this.editor.t;\n                this._addButton('numberedList', t('Numbered List'), _numberedlist2.default);\n                this._addButton('bulletedList', t('Bulleted List'), _bulletedlist2.default);\n                // Overwrite default Enter key behavior.\n                // If Enter key is pressed with selection collapsed in empty list item, outdent it instead of breaking it.\n                this.listenTo(this.editor.editing.view, 'enter', function (evt, data) {\n                    var doc = _this2.editor.document;\n                    var positionParent = doc.selection.getLastPosition().parent;\n                    if (doc.selection.isCollapsed && positionParent.name == 'listItem' && positionParent.isEmpty) {\n                        _this2.editor.execute('outdentList');\n                        data.preventDefault();\n                        evt.stop();\n                    }\n                });\n                // Add Tab key support.\n                // When in list item, pressing Tab should indent list item, if possible.\n                // Pressing Shift+Tab should outdent list item.\n                this.listenTo(this.editor.editing.view, 'keydown', function (evt, data) {\n                    var commandName = void 0;\n                    if (data.keystroke == (0, _keyboard.parseKeystroke)('Tab')) {\n                        commandName = 'indentList';\n                    } else if (data.keystroke == (0, _keyboard.parseKeystroke)('Shift+Tab')) {\n                        commandName = 'outdentList';\n                    }\n                    if (commandName) {\n                        var command = _this2.editor.commands.get(commandName);\n                        if (command.isEnabled) {\n                            _this2.editor.execute(commandName);\n                            data.preventDefault();\n                            evt.stop();\n                        }\n                    }\n                });\n            }    /**\n   * Helper method for initializing a button and linking it with an appropriate command.\n   *\n   * @private\n   * @param {String} commandName The name of the command.\n   * @param {Object} label The button label.\n   * @param {String} icon The source of the icon.\n   */\n        },\n        {\n            key: '_addButton',\n            value: function _addButton(commandName, label, icon) {\n                var _this3 = this;\n                var editor = this.editor;\n                var command = editor.commands.get(commandName);\n                editor.ui.componentFactory.add(commandName, function (locale) {\n                    var buttonView = new _buttonview2.default(locale);\n                    buttonView.set({\n                        label: label,\n                        icon: icon,\n                        tooltip: true\n                    });\n                    // Bind button model to command.\n                    buttonView.bind('isOn', 'isEnabled').to(command, 'value', 'isEnabled');\n                    // Execute command.\n                    _this3.listenTo(buttonView, 'execute', function () {\n                        return editor.execute(commandName);\n                    });\n                    return buttonView;\n                });\n            }\n        }\n    ], [\n        {\n            key: 'requires',\n            /**\n   * @inheritDoc\n   */\n            get: function get() {\n                return [_listengine2.default];\n            }    /**\n   * @inheritDoc\n   */\n        },\n        {\n            key: 'pluginName',\n            get: function get() {\n                return 'List';\n            }\n        }\n    ]);\n    return List;\n}(_plugin2.default);\nexports.default = List;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-list/src/list.js\n// module id = 360\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _command = require('@ckeditor/ckeditor5-core/src/command');\n\nvar _command2 = _interopRequireDefault(_command);\n\nvar _position = require('@ckeditor/ckeditor5-engine/src/model/position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _first = require('@ckeditor/ckeditor5-utils/src/first');\n\nvar _first2 = _interopRequireDefault(_first);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module list/listcommand\n */\n\n/**\n * The list command. It is used by the {@link module:list/list~List list feature}.\n *\n * @extends module:core/command~Command\n */\nvar ListCommand = function (_Command) {\n\t_inherits(ListCommand, _Command);\n\n\t/**\n  * Creates an instance of the command.\n  *\n  * @param {module:core/editor/editor~Editor} editor The editor instance.\n  * @param {'numbered'|'bulleted'} type List type that will be handled by this command.\n  */\n\tfunction ListCommand(editor, type) {\n\t\t_classCallCheck(this, ListCommand);\n\n\t\t/**\n   * The type of the list created by the command.\n   *\n   * @readonly\n   * @member {'numbered'|'bulleted'}\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (ListCommand.__proto__ || Object.getPrototypeOf(ListCommand)).call(this, editor));\n\n\t\t_this.type = type == 'bulleted' ? 'bulleted' : 'numbered';\n\n\t\t/**\n   * A flag indicating whether the command is active, which means that the selection starts in a list of the same type.\n   *\n   * @observable\n   * @readonly\n   * @member {Boolean} #value\n   */\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(ListCommand, [{\n\t\tkey: 'refresh',\n\t\tvalue: function refresh() {\n\t\t\tthis.value = this._getValue();\n\t\t\tthis.isEnabled = this._checkEnabled();\n\t\t}\n\n\t\t/**\n   * Executes the command.\n   *\n   * @protected\n   * @param {Object} [options] Options for the executed command.\n   * @param {module:engine/model/batch~Batch} [options.batch] A batch to collect all the change steps.\n   * A new batch will be created if this option is not set.\n   */\n\n\t}, {\n\t\tkey: 'execute',\n\t\tvalue: function execute() {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\t\t\tvar document = this.editor.document;\n\t\t\tvar blocks = Array.from(document.selection.getSelectedBlocks()).filter(function (block) {\n\t\t\t\treturn checkCanBecomeListItem(block, document.schema);\n\t\t\t});\n\n\t\t\t// Whether we are turning off some items.\n\t\t\tvar turnOff = this.value === true;\n\t\t\t// If we are turning off items, we are going to rename them to paragraphs.\n\n\t\t\tdocument.enqueueChanges(function () {\n\t\t\t\tvar batch = options.batch || document.batch();\n\n\t\t\t\t// If part of a list got turned off, we need to handle (outdent) all of sub-items of the last turned-off item.\n\t\t\t\t// To be sure that model is all the time in a good state, we first fix items below turned-off item.\n\t\t\t\tif (turnOff) {\n\t\t\t\t\t// Start from the model item that is just after the last turned-off item.\n\t\t\t\t\tvar next = blocks[blocks.length - 1].nextSibling;\n\t\t\t\t\tvar currentIndent = Number.POSITIVE_INFINITY;\n\t\t\t\t\tvar changes = [];\n\n\t\t\t\t\t// Correct indent of all items after the last turned off item.\n\t\t\t\t\t// Rules that should be followed:\n\t\t\t\t\t// 1. All direct sub-items of turned-off item should become indent 0, because the first item after it\n\t\t\t\t\t//    will be the first item of a new list. Other items are at the same level, so should have same 0 index.\n\t\t\t\t\t// 2. All items with indent lower than indent of turned-off item should become indent 0, because they\n\t\t\t\t\t//    should not end up as a child of any of list items that they were not children of before.\n\t\t\t\t\t// 3. All other items should have their indent changed relatively to it's parent.\n\t\t\t\t\t//\n\t\t\t\t\t// For example:\n\t\t\t\t\t// 1  * --------\n\t\t\t\t\t// 2     * --------\n\t\t\t\t\t// 3        * --------\t\t\t<-- this is turned off.\n\t\t\t\t\t// 4           * --------\t\t<-- this has to become indent = 0, because it will be first item on a new list.\n\t\t\t\t\t// 5              * --------\t<-- this should be still be a child of item above, so indent = 1.\n\t\t\t\t\t// 6        * --------\t\t\t<-- this has to become indent = 0, because it should not be a child of any of items above.\n\t\t\t\t\t// 7           * --------\t\t<-- this should be still be a child of item above, so indent = 1.\n\t\t\t\t\t// 8     * --------\t\t\t\t<-- this has to become indent = 0.\n\t\t\t\t\t// 9        * --------\t\t\t<-- this should still be a child of item above, so indent = 1.\n\t\t\t\t\t// 10          * --------\t\t<-- this should still be a child of item above, so indent = 2.\n\t\t\t\t\t// 11          * --------\t\t<-- this should still be at the same level as item above, so indent = 2.\n\t\t\t\t\t// 12 * --------\t\t\t\t<-- this and all below are left unchanged.\n\t\t\t\t\t// 13    * --------\n\t\t\t\t\t// 14       * --------\n\t\t\t\t\t//\n\t\t\t\t\t// After turning off 3 the list becomes:\n\t\t\t\t\t//\n\t\t\t\t\t// 1  * --------\n\t\t\t\t\t// 2     * --------\n\t\t\t\t\t//\n\t\t\t\t\t// 3  --------\n\t\t\t\t\t//\n\t\t\t\t\t// 4  * --------\n\t\t\t\t\t// 5     * --------\n\t\t\t\t\t// 6  * --------\n\t\t\t\t\t// 7     * --------\n\t\t\t\t\t// 8  * --------\n\t\t\t\t\t// 9     * --------\n\t\t\t\t\t// 10       * --------\n\t\t\t\t\t// 11       * --------\n\t\t\t\t\t// 12 * --------\n\t\t\t\t\t// 13    * --------\n\t\t\t\t\t// 14       * --------\n\t\t\t\t\t//\n\t\t\t\t\t// Thanks to this algorithm no lists are mismatched and no items get unexpected children/parent, while\n\t\t\t\t\t// those parent-child connection which are possible to maintain are still maintained. It's worth noting\n\t\t\t\t\t// that this is the same effect that we would be get by multiple use of outdent command. However doing\n\t\t\t\t\t// it like this is much more efficient because it's less operation (less memory usage, easier OT) and\n\t\t\t\t\t// less conversion (faster).\n\t\t\t\t\twhile (next && next.name == 'listItem' && next.getAttribute('indent') !== 0) {\n\t\t\t\t\t\t// Check each next list item, as long as its indent is bigger than 0.\n\t\t\t\t\t\t// If the indent is 0 we are not going to change anything anyway.\n\t\t\t\t\t\tvar indent = next.getAttribute('indent');\n\n\t\t\t\t\t\t// We check if that's item indent is lower as current relative indent.\n\t\t\t\t\t\tif (indent < currentIndent) {\n\t\t\t\t\t\t\t// If it is, current relative indent becomes that indent.\n\t\t\t\t\t\t\tcurrentIndent = indent;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Fix indent relatively to current relative indent.\n\t\t\t\t\t\t// Note, that if we just changed the current relative indent, the newIndent will be equal to 0.\n\t\t\t\t\t\tvar newIndent = indent - currentIndent;\n\n\t\t\t\t\t\t// Save the entry in changes array. We do not apply it at the moment, because we will need to\n\t\t\t\t\t\t// reverse the changes so the last item is changed first.\n\t\t\t\t\t\t// This is to keep model in correct state all the time.\n\t\t\t\t\t\tchanges.push({ element: next, indent: newIndent });\n\n\t\t\t\t\t\t// Find next item.\n\t\t\t\t\t\tnext = next.nextSibling;\n\t\t\t\t\t}\n\n\t\t\t\t\tchanges = changes.reverse();\n\n\t\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\t\tvar _didIteratorError = false;\n\t\t\t\t\tvar _iteratorError = undefined;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (var _iterator = changes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\t\tvar item = _step.value;\n\n\t\t\t\t\t\t\tbatch.setAttribute(item.element, 'indent', item.indent);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t\t_iteratorError = err;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we are turning on, we might change some items that are already `listItem`s but with different type.\n\t\t\t\t// Changing one nested list item to other type should also trigger changing all its siblings so the\n\t\t\t\t// whole nested list is of the same type.\n\t\t\t\t// Example (assume changing to numbered list):\n\t\t\t\t// * ------\t\t\t\t<-- do not fix, top level item\n\t\t\t\t//   * ------\t\t\t<-- fix, because latter list item of this item's list is changed\n\t\t\t\t//      * ------\t\t<-- do not fix, item is not affected (different list)\n\t\t\t\t//   * ------\t\t\t<-- fix, because latter list item of this item's list is changed\n\t\t\t\t//      * ------\t\t<-- fix, because latter list item of this item's list is changed\n\t\t\t\t//      * ---[--\t\t<-- already in selection\n\t\t\t\t//   * ------\t\t\t<-- already in selection\n\t\t\t\t//   * ------\t\t\t<-- already in selection\n\t\t\t\t// * ------\t\t\t\t<-- already in selection, but does not cause other list items to change because is top-level\n\t\t\t\t//   * ---]--\t\t\t<-- already in selection\n\t\t\t\t//   * ------\t\t\t<-- fix, because preceding list item of this item's list is changed\n\t\t\t\t//      * ------\t\t<-- do not fix, item is not affected (different list)\n\t\t\t\t// * ------\t\t\t\t<-- do not fix, top level item\n\t\t\t\tif (!turnOff) {\n\t\t\t\t\t// Find lowest indent among selected items. This will be indicator what is the indent of\n\t\t\t\t\t// top-most list affected by the command.\n\t\t\t\t\tvar lowestIndent = Number.POSITIVE_INFINITY;\n\n\t\t\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\t\t\tvar _didIteratorError2 = false;\n\t\t\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (var _iterator2 = blocks[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\t\t\tvar _item = _step2.value;\n\n\t\t\t\t\t\t\tif (_item.is('listItem') && _item.getAttribute('indent') < lowestIndent) {\n\t\t\t\t\t\t\t\tlowestIndent = _item.getAttribute('indent');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not execute the fix for top-level lists.\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t\t\t_iteratorError2 = err;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlowestIndent = lowestIndent === 0 ? 1 : lowestIndent;\n\n\t\t\t\t\t// Fix types of list items that are \"before\" the selected blocks.\n\t\t\t\t\t_fixType(blocks, true, lowestIndent);\n\n\t\t\t\t\t// Fix types of list items that are \"after\" the selected blocks.\n\t\t\t\t\t_fixType(blocks, false, lowestIndent);\n\t\t\t\t}\n\n\t\t\t\t// Phew! Now it will be easier :).\n\t\t\t\t// For each block element that was in the selection, we will either: turn it to list item,\n\t\t\t\t// turn it to paragraph, or change it's type. Or leave it as it is.\n\t\t\t\t// Do it in reverse as there might be multiple blocks (same as with changing indents).\n\t\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\t\tvar _didIteratorError3 = false;\n\t\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator3 = blocks.reverse()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\t\tvar element = _step3.value;\n\n\t\t\t\t\t\tif (turnOff && element.name == 'listItem') {\n\t\t\t\t\t\t\t// We are turning off and the element is a `listItem` - it should be converted to `paragraph`.\n\t\t\t\t\t\t\t// List item specific attributes are removed by post fixer.\n\t\t\t\t\t\t\tbatch.rename(element, 'paragraph');\n\t\t\t\t\t\t} else if (!turnOff && element.name != 'listItem') {\n\t\t\t\t\t\t\t// We are turning on and the element is not a `listItem` - it should be converted to `listItem`.\n\t\t\t\t\t\t\t// The order of operations is important to keep model in correct state.\n\t\t\t\t\t\t\tbatch.setAttribute(element, 'type', _this2.type).setAttribute(element, 'indent', 0).rename(element, 'listItem');\n\t\t\t\t\t\t} else if (!turnOff && element.name == 'listItem' && element.getAttribute('type') != _this2.type) {\n\t\t\t\t\t\t\t// We are turning on and the element is a `listItem` but has different type - change it's type and\n\t\t\t\t\t\t\t// type of it's all siblings that have same indent.\n\t\t\t\t\t\t\tbatch.setAttribute(element, 'type', _this2.type);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t\t_iteratorError3 = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * Checks the command's {@link #value}.\n   *\n   * @private\n   * @returns {Boolean} The current value.\n   */\n\n\t}, {\n\t\tkey: '_getValue',\n\t\tvalue: function _getValue() {\n\t\t\t// Check whether closest `listItem` ancestor of the position has a correct type.\n\t\t\tvar listItem = (0, _first2.default)(this.editor.document.selection.getSelectedBlocks());\n\n\t\t\treturn !!listItem && listItem.is('listItem') && listItem.getAttribute('type') == this.type;\n\t\t}\n\n\t\t/**\n   * Checks whether the command can be enabled in the current context.\n   *\n   * @private\n   * @returns {Boolean} Whether the command should be enabled.\n   */\n\n\t}, {\n\t\tkey: '_checkEnabled',\n\t\tvalue: function _checkEnabled() {\n\t\t\t// If command value is true it means that we are in list item, so the command should be enabled.\n\t\t\tif (this.value) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar selection = this.editor.document.selection;\n\t\t\tvar schema = this.editor.document.schema;\n\n\t\t\tvar firstBlock = (0, _first2.default)(selection.getSelectedBlocks());\n\n\t\t\tif (!firstBlock) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Otherwise, check if list item can be inserted at the position start.\n\t\t\treturn checkCanBecomeListItem(firstBlock, schema);\n\t\t}\n\t}]);\n\n\treturn ListCommand;\n}(_command2.default);\n\n// Helper function used when one or more list item have their type changed. Fixes type of other list items\n// that are affected by the change (are in same lists) but are not directly in selection. The function got extracted\n// not to duplicated code, as same fix has to be performed before and after selection.\n//\n// @param {Array.<module:engine/model/node~Node>} blocks Blocks that are in selection.\n// @param {Boolean} isBackward Specified whether fix will be applied for blocks before first selected block (`true`)\n// or blocks after last selected block (`false`).\n// @param {Number} lowestIndent Lowest indent among selected blocks.\n\n\nexports.default = ListCommand;\nfunction _fixType(blocks, isBackward, lowestIndent) {\n\t// We need to check previous sibling of first changed item and next siblings of last changed item.\n\tvar startingItem = isBackward ? blocks[0] : blocks[blocks.length - 1];\n\n\tif (startingItem.is('listItem')) {\n\t\tvar item = startingItem[isBackward ? 'previousSibling' : 'nextSibling'];\n\t\t// During processing items, keeps the lowest indent of already processed items.\n\t\t// This saves us from changing too many items.\n\t\t// Following example is for going forward as it is easier to read, however same applies to going backward.\n\t\t// * ------\n\t\t//   * ------\n\t\t//     * --[---\n\t\t//   * ------\t\t<-- `lowestIndent` should be 1\n\t\t//     * --]---\t\t<-- `startingItem`, `currentIndent` = 2, `lowestIndent` == 1\n\t\t//     * ------\t\t<-- should be fixed, `indent` == 2 == `currentIndent`\n\t\t//   * ------\t\t<-- should be fixed, set `currentIndent` to 1, `indent` == 1 == `currentIndent`\n\t\t//     * ------\t\t<-- should not be fixed, item is in different list, `indent` = 2, `indent` != `currentIndent`\n\t\t//   * ------\t\t<-- should be fixed, `indent` == 1 == `currentIndent`\n\t\t// * ------\t\t\t<-- break loop (`indent` < `lowestIndent`)\n\t\tvar currentIndent = startingItem.getAttribute('indent');\n\n\t\t// Look back until a list item with indent lower than reference `lowestIndent`.\n\t\t// That would be the parent of nested sublist which contains item having `lowestIndent`.\n\t\twhile (item && item.is('listItem') && item.getAttribute('indent') >= lowestIndent) {\n\t\t\tif (currentIndent > item.getAttribute('indent')) {\n\t\t\t\tcurrentIndent = item.getAttribute('indent');\n\t\t\t}\n\n\t\t\t// Found an item that is in the same nested sublist.\n\t\t\tif (item.getAttribute('indent') == currentIndent) {\n\t\t\t\t// Just add the item to selected blocks like it was selected by the user.\n\t\t\t\tblocks[isBackward ? 'unshift' : 'push'](item);\n\t\t\t}\n\n\t\t\titem = item[isBackward ? 'previousSibling' : 'nextSibling'];\n\t\t}\n\t}\n}\n\n// Checks whether the given block can be replaced by a listItem.\n//\n// @private\n// @param {module:engine/model/element~Element} block A block to be tested.\n// @param {module:engine/model/schema~Schema} schema The schema of the document.\n// @returns {Boolean}\nfunction checkCanBecomeListItem(block, schema) {\n\treturn schema.check({\n\t\tname: 'listItem',\n\t\tattributes: ['type', 'indent'],\n\t\tinside: _position2.default.createBefore(block)\n\t});\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-list/src/listcommand.js\n// module id = 361\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _listcommand = require('./listcommand');\n\nvar _listcommand2 = _interopRequireDefault(_listcommand);\n\nvar _indentcommand = require('./indentcommand');\n\nvar _indentcommand2 = _interopRequireDefault(_indentcommand);\n\nvar _plugin = require('@ckeditor/ckeditor5-core/src/plugin');\n\nvar _plugin2 = _interopRequireDefault(_plugin);\n\nvar _paragraph = require('@ckeditor/ckeditor5-paragraph/src/paragraph');\n\nvar _paragraph2 = _interopRequireDefault(_paragraph);\n\nvar _converters = require('./converters');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module list/listengine\n */\n\n/**\n * The engine of the list feature. It handles creating, editing and removing lists and list items.\n * It registers the `numberedList`, `bulletedList`, `indentList` and `outdentList` commands.\n *\n * @extends module:core/plugin~Plugin\n */\nvar ListEngine = function (_Plugin) {\n\t_inherits(ListEngine, _Plugin);\n\n\tfunction ListEngine() {\n\t\t_classCallCheck(this, ListEngine);\n\n\t\treturn _possibleConstructorReturn(this, (ListEngine.__proto__ || Object.getPrototypeOf(ListEngine)).apply(this, arguments));\n\t}\n\n\t_createClass(ListEngine, [{\n\t\tkey: 'init',\n\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tvalue: function init() {\n\t\t\tvar editor = this.editor;\n\n\t\t\t// Schema.\n\t\t\t// Note: in case `$block` will be ever allowed in `listItem`, keep in mind that this feature\n\t\t\t// uses `Selection#getSelectedBlocks()` without any additional processing to obtain all selected list items.\n\t\t\t// If there are blocks allowed inside list item, algorithms using `getSelectedBlocks()` will have to be modified.\n\t\t\tvar schema = editor.document.schema;\n\t\t\tschema.registerItem('listItem', '$block');\n\t\t\tschema.allow({\n\t\t\t\tname: 'listItem',\n\t\t\t\tinside: '$root',\n\t\t\t\tattributes: ['type', 'indent']\n\t\t\t});\n\t\t\tschema.requireAttributes('listItem', ['type', 'indent']);\n\n\t\t\t// Converters.\n\t\t\tvar data = editor.data;\n\t\t\tvar editing = editor.editing;\n\n\t\t\tthis.editor.document.on('change', (0, _converters.modelChangePostFixer)(this.editor.document), { priority: 'high' });\n\n\t\t\t// Unbind all moved model elements before conversion happens. This is important for converters.\n\t\t\t// TODO: fix this when changes are converted on `changesDone`.\n\t\t\tthis.editor.document.on('change', function (evt, type, changes) {\n\t\t\t\tif (type == 'move') {\n\t\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\t\tvar _didIteratorError = false;\n\t\t\t\t\tvar _iteratorError = undefined;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (var _iterator = changes.range.getItems()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\t\tvar item = _step.value;\n\n\t\t\t\t\t\t\tif (item.is('listItem')) {\n\t\t\t\t\t\t\t\tediting.mapper.unbindModelElement(item);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t\t_iteratorError = err;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, { priority: 'high' });\n\n\t\t\tediting.mapper.registerViewToModelLength('li', getViewListItemLength);\n\t\t\tdata.mapper.registerViewToModelLength('li', getViewListItemLength);\n\n\t\t\tediting.mapper.on('modelToViewPosition', _converters.modelToViewPosition);\n\t\t\tediting.mapper.on('viewToModelPosition', _converters.viewToModelPosition);\n\t\t\tdata.mapper.on('modelToViewPosition', _converters.modelToViewPosition);\n\n\t\t\tediting.modelToView.on('insert', _converters.modelViewSplitOnInsert, { priority: 'high' });\n\t\t\tediting.modelToView.on('insert:listItem', _converters.modelViewInsertion);\n\t\t\tdata.modelToView.on('insert', _converters.modelViewSplitOnInsert, { priority: 'high' });\n\t\t\tdata.modelToView.on('insert:listItem', _converters.modelViewInsertion);\n\n\t\t\t// Only change converter is needed. List item's type attribute is required, so it's adding is handled when\n\t\t\t// list item is added and you cannot remove it.\n\t\t\tediting.modelToView.on('changeAttribute:type:listItem', _converters.modelViewChangeType);\n\t\t\tdata.modelToView.on('changeAttribute:type:listItem', _converters.modelViewChangeType);\n\n\t\t\tediting.modelToView.on('remove:listItem', _converters.modelViewRemove);\n\t\t\tediting.modelToView.on('remove', _converters.modelViewMergeAfter, { priority: 'low' });\n\t\t\tdata.modelToView.on('remove:listItem', _converters.modelViewRemove);\n\t\t\tdata.modelToView.on('remove', _converters.modelViewMergeAfter, { priority: 'low' });\n\n\t\t\tediting.modelToView.on('changeAttribute:indent:listItem', _converters.modelViewChangeIndent);\n\t\t\tdata.modelToView.on('changeAttribute:indent:listItem', _converters.modelViewChangeIndent);\n\n\t\t\tdata.viewToModel.on('element:ul', _converters.cleanList, { priority: 'high' });\n\t\t\tdata.viewToModel.on('element:ol', _converters.cleanList, { priority: 'high' });\n\t\t\tdata.viewToModel.on('element:li', _converters.cleanListItem, { priority: 'high' });\n\t\t\tdata.viewToModel.on('element:li', _converters.viewModelConverter);\n\n\t\t\t// Fix indentation of pasted items.\n\t\t\tdata.on('insertContent', _converters.modelIndentPasteFixer, { priority: 'high' });\n\n\t\t\t// Register commands for numbered and bulleted list.\n\t\t\teditor.commands.add('numberedList', new _listcommand2.default(editor, 'numbered'));\n\t\t\teditor.commands.add('bulletedList', new _listcommand2.default(editor, 'bulleted'));\n\n\t\t\t// Register commands for indenting.\n\t\t\teditor.commands.add('indentList', new _indentcommand2.default(editor, 'forward'));\n\t\t\teditor.commands.add('outdentList', new _indentcommand2.default(editor, 'backward'));\n\t\t}\n\t}], [{\n\t\tkey: 'requires',\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tget: function get() {\n\t\t\treturn [_paragraph2.default];\n\t\t}\n\t}]);\n\n\treturn ListEngine;\n}(_plugin2.default);\n\nexports.default = ListEngine;\n\n\nfunction getViewListItemLength(element) {\n\tvar length = 1;\n\n\tvar _iteratorNormalCompletion2 = true;\n\tvar _didIteratorError2 = false;\n\tvar _iteratorError2 = undefined;\n\n\ttry {\n\t\tfor (var _iterator2 = element.getChildren()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\tvar child = _step2.value;\n\n\t\t\tif (child.name == 'ul' || child.name == 'ol') {\n\t\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\t\tvar _didIteratorError3 = false;\n\t\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator3 = child.getChildren()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\t\tvar item = _step3.value;\n\n\t\t\t\t\t\tlength += getViewListItemLength(item);\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t\t_iteratorError3 = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError2 = true;\n\t\t_iteratorError2 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t_iterator2.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError2) {\n\t\t\t\tthrow _iteratorError2;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn length;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-list/src/listengine.js\n// module id = 362\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _containerelement = require('@ckeditor/ckeditor5-engine/src/view/containerelement');\n\nvar _containerelement2 = _interopRequireDefault(_containerelement);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module list/viewlistitemelement\n */\n\n/**\n * View element class representing a list item (`<li>`). It extends {@link module:engine/view/containerelement~ContainerElement}\n * and overwrites {@link module:list/viewlistitemelement~ViewListItemElement#getFillerOffset evaluating whether filler offset}\n * is needed.\n *\n * @extends module:engine/view/containerelement~ContainerElement\n */\nvar ViewListItemElement = function (_ViewContainerElement) {\n\t_inherits(ViewListItemElement, _ViewContainerElement);\n\n\t/**\n  * Creates a `<li>` view item.\n  *\n  * @param {Object|Iterable} [attrs] A collection of attributes.\n  * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children] The list of nodes to be inserted\n  * into the created element.\n  */\n\tfunction ViewListItemElement(attrs, children) {\n\t\t_classCallCheck(this, ViewListItemElement);\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (ViewListItemElement.__proto__ || Object.getPrototypeOf(ViewListItemElement)).call(this, 'li', attrs, children));\n\n\t\t_this.getFillerOffset = getFillerOffset;\n\t\treturn _this;\n\t}\n\n\treturn ViewListItemElement;\n}(_containerelement2.default);\n\n// Implementation of getFillerOffset for ViewListItemElements.\n//\n// @returns {Number|null} Block filler offset or `null` if block filler is not needed.\n\n\nexports.default = ViewListItemElement;\nfunction getFillerOffset() {\n\tvar hasOnlyLists = !this.isEmpty && (this.getChild(0).name == 'ul' || this.getChild(0).name == 'ol');\n\n\treturn this.isEmpty || hasOnlyLists ? 0 : null;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-list/src/viewlistitemelement.js\n// module id = 363\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _command = require('@ckeditor/ckeditor5-core/src/command');\n\nvar _command2 = _interopRequireDefault(_command);\n\nvar _position = require('@ckeditor/ckeditor5-engine/src/model/position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _first = require('@ckeditor/ckeditor5-utils/src/first');\n\nvar _first2 = _interopRequireDefault(_first);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module paragraph/paragraphcommand\n */\n\n/**\n * The paragraph command.\n *\n * @extends module:core/command~Command\n */\nvar ParagraphCommand = function (_Command) {\n\t_inherits(ParagraphCommand, _Command);\n\n\tfunction ParagraphCommand() {\n\t\t_classCallCheck(this, ParagraphCommand);\n\n\t\treturn _possibleConstructorReturn(this, (ParagraphCommand.__proto__ || Object.getPrototypeOf(ParagraphCommand)).apply(this, arguments));\n\t}\n\n\t_createClass(ParagraphCommand, [{\n\t\tkey: 'refresh',\n\n\t\t/**\n   * The value of the command. Indicates whether the selection start is placed in a paragraph.\n   *\n   * @readonly\n   * @observable\n   * @member {Boolean} #value\n   */\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tvalue: function refresh() {\n\t\t\tvar document = this.editor.document;\n\t\t\tvar block = (0, _first2.default)(document.selection.getSelectedBlocks());\n\n\t\t\tthis.value = !!block && block.is('paragraph');\n\t\t\tthis.isEnabled = !!block && checkCanBecomeParagraph(block, document.schema);\n\t\t}\n\n\t\t/**\n   * Executes the command. All the blocks (see {@link module:engine/model/schema~Schema}) in the selection\n   * will be turned to paragraphs.\n   *\n   * @fires execute\n   * @param {Object} [options] Options for the executed command.\n   * @param {module:engine/model/batch~Batch} [options.batch] A batch to collect all the change steps.\n   * A new batch will be created if this option is not set.\n   * @param {module:engine/model/selection~Selection} [options.selection] The selection that the command should be applied to.\n   * By default, if not provided, the command is applied to the {@link module:engine/model/document~Document#selection}.\n   */\n\n\t}, {\n\t\tkey: 'execute',\n\t\tvalue: function execute() {\n\t\t\tvar options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\t\t\tvar document = this.editor.document;\n\n\t\t\tdocument.enqueueChanges(function () {\n\t\t\t\tvar batch = options.batch || document.batch();\n\t\t\t\tvar blocks = (options.selection || document.selection).getSelectedBlocks();\n\n\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\tvar _didIteratorError = false;\n\t\t\t\tvar _iteratorError = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator = blocks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\tvar block = _step.value;\n\n\t\t\t\t\t\tif (!block.is('paragraph') && checkCanBecomeParagraph(block, document.schema)) {\n\t\t\t\t\t\t\tbatch.rename(block, 'paragraph');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t_iteratorError = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}]);\n\n\treturn ParagraphCommand;\n}(_command2.default);\n\n// Checks whether the given block can be replaced by a paragraph.\n//\n// @private\n// @param {module:engine/model/element~Element} block A block to be tested.\n// @param {module:engine/model/schema~Schema} schema The schema of the document.\n// @returns {Boolean}\n\n\nexports.default = ParagraphCommand;\nfunction checkCanBecomeParagraph(block, schema) {\n\treturn schema.check({\n\t\tname: 'paragraph',\n\t\tinside: _position2.default.createBefore(block)\n\t});\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-paragraph/src/paragraphcommand.js\n// module id = 364\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _plugin = require('@ckeditor/ckeditor5-core/src/plugin');\n\nvar _plugin2 = _interopRequireDefault(_plugin);\n\nvar _clipboard = require('@ckeditor/ckeditor5-clipboard/src/clipboard');\n\nvar _clipboard2 = _interopRequireDefault(_clipboard);\n\nvar _enter = require('@ckeditor/ckeditor5-enter/src/enter');\n\nvar _enter2 = _interopRequireDefault(_enter);\n\nvar _typing = require('@ckeditor/ckeditor5-typing/src/typing');\n\nvar _typing2 = _interopRequireDefault(_typing);\n\nvar _undo = require('@ckeditor/ckeditor5-undo/src/undo');\n\nvar _undo2 = _interopRequireDefault(_undo);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module presets/essentials\n */\n\n/**\n * Essential editing features preset. Represents a set of features that enables similar functionalities\n * to a `<textarea>` element.\n *\n * It includes:\n *\n * * {@link module:clipboard/clipboard~Clipboard},\n * * {@link module:enter/enter~Enter},\n * * {@link module:typing/typing~Typing},\n * * {@link module:undo/undo~Undo}.\n *\n * This preset does not define any block-level containers (such as {@link module:paragraph/paragraph~Paragraph}).\n * If your editor is supposed to handle block content, make sure to include it. You can also inlcude\n * the {@link module:presets/article~Article article preset}.\n *\n * @extends module:core/plugin~Plugin\n */\nvar Essentials = function (_Plugin) {\n  _inherits(Essentials, _Plugin);\n\n  function Essentials() {\n    _classCallCheck(this, Essentials);\n\n    return _possibleConstructorReturn(this, (Essentials.__proto__ || Object.getPrototypeOf(Essentials)).apply(this, arguments));\n  }\n\n  _createClass(Essentials, null, [{\n    key: 'requires',\n    get: function get() {\n      return [_clipboard2.default, _enter2.default, _typing2.default, _undo2.default];\n    }\n  }]);\n\n  return Essentials;\n}(_plugin2.default);\n\nexports.default = Essentials;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-presets/src/essentials.js\n// module id = 365\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _plugin = require('@ckeditor/ckeditor5-core/src/plugin');\n\nvar _plugin2 = _interopRequireDefault(_plugin);\n\nvar _deletecommand = require('./deletecommand');\n\nvar _deletecommand2 = _interopRequireDefault(_deletecommand);\n\nvar _deleteobserver = require('./deleteobserver');\n\nvar _deleteobserver2 = _interopRequireDefault(_deleteobserver);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module typing/delete\n */\n\n/**\n * The delete and backspace feature. Handles the <kbd>Delete</kbd> and <kbd>Backspace</kbd> keys in the editor.\n *\n * @extends module:core/plugin~Plugin\n */\nvar Delete = function (_Plugin) {\n\t_inherits(Delete, _Plugin);\n\n\tfunction Delete() {\n\t\t_classCallCheck(this, Delete);\n\n\t\treturn _possibleConstructorReturn(this, (Delete.__proto__ || Object.getPrototypeOf(Delete)).apply(this, arguments));\n\t}\n\n\t_createClass(Delete, [{\n\t\tkey: 'init',\n\t\tvalue: function init() {\n\t\t\tvar editor = this.editor;\n\t\t\tvar editingView = editor.editing.view;\n\n\t\t\teditingView.addObserver(_deleteobserver2.default);\n\n\t\t\teditor.commands.add('forwardDelete', new _deletecommand2.default(editor, 'forward'));\n\t\t\teditor.commands.add('delete', new _deletecommand2.default(editor, 'backward'));\n\n\t\t\tthis.listenTo(editingView, 'delete', function (evt, data) {\n\t\t\t\teditor.execute(data.direction == 'forward' ? 'forwardDelete' : 'delete', { unit: data.unit });\n\t\t\t\tdata.preventDefault();\n\t\t\t});\n\t\t}\n\t}], [{\n\t\tkey: 'pluginName',\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tget: function get() {\n\t\t\treturn 'Delete';\n\t\t}\n\t}]);\n\n\treturn Delete;\n}(_plugin2.default);\n\nexports.default = Delete;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-typing/src/delete.js\n// module id = 366\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _command = require('@ckeditor/ckeditor5-core/src/command');\n\nvar _command2 = _interopRequireDefault(_command);\n\nvar _selection = require('@ckeditor/ckeditor5-engine/src/model/selection');\n\nvar _selection2 = _interopRequireDefault(_selection);\n\nvar _changebuffer = require('./changebuffer');\n\nvar _changebuffer2 = _interopRequireDefault(_changebuffer);\n\nvar _count = require('@ckeditor/ckeditor5-utils/src/count');\n\nvar _count2 = _interopRequireDefault(_count);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module typing/deletecommand\n */\n\n/**\n * The delete command. Used by the {@link module:typing/delete~Delete delete feature} to handle the <kbd>Delete</kbd> and\n * <kbd>Backspace</kbd> keys.\n *\n * @extends module:core/command~Command\n */\nvar DeleteCommand = function (_Command) {\n\t_inherits(DeleteCommand, _Command);\n\n\t/**\n  * Creates an instance of the command.\n  *\n  * @param {module:core/editor/editor~Editor} editor\n  * @param {'forward'|'backward'} direction The directionality of the delete describing in what direction it\n  * should consume the content when the selection is collapsed.\n  */\n\tfunction DeleteCommand(editor, direction) {\n\t\t_classCallCheck(this, DeleteCommand);\n\n\t\t/**\n   * The directionality of the delete describing in what direction it should\n   * consume the content when the selection is collapsed.\n   *\n   * @readonly\n   * @member {'forward'|'backward'} #direction\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (DeleteCommand.__proto__ || Object.getPrototypeOf(DeleteCommand)).call(this, editor));\n\n\t\t_this.direction = direction;\n\n\t\t/**\n   * Delete's change buffer used to group subsequent changes into batches.\n   *\n   * @readonly\n   * @private\n   * @member {typing.ChangeBuffer} #buffer\n   */\n\t\t_this._buffer = new _changebuffer2.default(editor.document, editor.config.get('typing.undoStep'));\n\t\treturn _this;\n\t}\n\n\t/**\n  * Executes the delete command. Depending on whether the selection is collapsed or not, deletes its content\n  * or a piece of content in the {@link #direction defined direction}.\n  *\n  * @fires execute\n  * @param {Object} [options] The command options.\n  * @param {'character'} [options.unit='character'] See {@link module:engine/controller/modifyselection~modifySelection}'s\n  * options.\n  */\n\n\n\t_createClass(DeleteCommand, [{\n\t\tkey: 'execute',\n\t\tvalue: function execute() {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\t\t\tvar doc = this.editor.document;\n\t\t\tvar dataController = this.editor.data;\n\n\t\t\tdoc.enqueueChanges(function () {\n\t\t\t\t_this2._buffer.lock();\n\n\t\t\t\tvar selection = _selection2.default.createFromSelection(doc.selection);\n\n\t\t\t\t// Do not replace the whole selected content if selection was collapsed.\n\t\t\t\t// This prevents such situation:\n\t\t\t\t//\n\t\t\t\t// <h1></h1><p>[]</p>\t-->  <h1>[</h1><p>]</p> \t\t-->  <p></p>\n\t\t\t\t// starting content\t\t-->   after `modifySelection`\t-->  after `deleteContent`.\n\t\t\t\tvar doNotResetEntireContent = selection.isCollapsed;\n\n\t\t\t\t// Try to extend the selection in the specified direction.\n\t\t\t\tif (selection.isCollapsed) {\n\t\t\t\t\tdataController.modifySelection(selection, { direction: _this2.direction, unit: options.unit });\n\t\t\t\t}\n\n\t\t\t\t// If selection is still collapsed, then there's nothing to delete.\n\t\t\t\tif (selection.isCollapsed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar changeCount = 0;\n\n\t\t\t\tselection.getFirstRange().getMinimalFlatRanges().forEach(function (range) {\n\t\t\t\t\tchangeCount += (0, _count2.default)(range.getWalker({ singleCharacters: true, ignoreElementEnd: true, shallow: true }));\n\t\t\t\t});\n\n\t\t\t\tdataController.deleteContent(selection, _this2._buffer.batch, { doNotResetEntireContent: doNotResetEntireContent });\n\t\t\t\t_this2._buffer.input(changeCount);\n\n\t\t\t\tdoc.selection.setRanges(selection.getRanges(), selection.isBackward);\n\n\t\t\t\t_this2._buffer.unlock();\n\t\t\t});\n\t\t}\n\t}]);\n\n\treturn DeleteCommand;\n}(_command2.default);\n\nexports.default = DeleteCommand;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-typing/src/deletecommand.js\n// module id = 367\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _observer = require('@ckeditor/ckeditor5-engine/src/view/observer/observer');\n\nvar _observer2 = _interopRequireDefault(_observer);\n\nvar _domeventdata = require('@ckeditor/ckeditor5-engine/src/view/observer/domeventdata');\n\nvar _domeventdata2 = _interopRequireDefault(_domeventdata);\n\nvar _keyboard = require('@ckeditor/ckeditor5-utils/src/keyboard');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module typing/deleteobserver\n */\n\n/**\n * Delete observer introduces the {@link module:engine/view/document~Document#event:delete} event.\n *\n * @extends module:engine/view/observer/observer~Observer\n */\nvar DeleteObserver = function (_Observer) {\n\t_inherits(DeleteObserver, _Observer);\n\n\tfunction DeleteObserver(document) {\n\t\t_classCallCheck(this, DeleteObserver);\n\n\t\tvar _this = _possibleConstructorReturn(this, (DeleteObserver.__proto__ || Object.getPrototypeOf(DeleteObserver)).call(this, document));\n\n\t\tdocument.on('keydown', function (evt, data) {\n\t\t\tvar deleteData = {};\n\n\t\t\tif (data.keyCode == _keyboard.keyCodes.delete) {\n\t\t\t\tdeleteData.direction = 'forward';\n\t\t\t\tdeleteData.unit = 'character';\n\t\t\t} else if (data.keyCode == _keyboard.keyCodes.backspace) {\n\t\t\t\tdeleteData.direction = 'backward';\n\t\t\t\tdeleteData.unit = 'codePoint';\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdeleteData.unit = data.altKey ? 'word' : deleteData.unit;\n\n\t\t\tdocument.fire('delete', new _domeventdata2.default(document, data.domEvent, deleteData));\n\t\t});\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(DeleteObserver, [{\n\t\tkey: 'observe',\n\t\tvalue: function observe() {}\n\t}]);\n\n\treturn DeleteObserver;\n}(_observer2.default);\n\n/**\n * Event fired when the user tries to delete content (e.g. presses <kbd>Delete</kbd> or <kbd>Backspace</kbd>).\n *\n * Note: This event is fired by the {@link module:typing/deleteobserver~DeleteObserver observer}\n * (usually registered by the {@link module:typing/delete~Delete delete feature}).\n *\n * @event module:engine/view/document~Document#event:delete\n * @param {module:engine/view/observer/domeventdata~DomEventData} data\n * @param {'forward'|'delete'} data.direction The direction in which the deletion should happen.\n * @param {'character'|'word'} data.unit The \"amount\" of content that should be deleted.\n */\n\n\nexports.default = DeleteObserver;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-typing/src/deleteobserver.js\n// module id = 368\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _plugin = require('@ckeditor/ckeditor5-core/src/plugin');\n\nvar _plugin2 = _interopRequireDefault(_plugin);\n\nvar _range = require('@ckeditor/ckeditor5-engine/src/model/range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _position = require('@ckeditor/ckeditor5-engine/src/view/position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _text = require('@ckeditor/ckeditor5-engine/src/view/text');\n\nvar _text2 = _interopRequireDefault(_text);\n\nvar _diff = require('@ckeditor/ckeditor5-utils/src/diff');\n\nvar _diff2 = _interopRequireDefault(_diff);\n\nvar _difftochanges = require('@ckeditor/ckeditor5-utils/src/difftochanges');\n\nvar _difftochanges2 = _interopRequireDefault(_difftochanges);\n\nvar _keyboard = require('@ckeditor/ckeditor5-utils/src/keyboard');\n\nvar _domconverter = require('@ckeditor/ckeditor5-engine/src/view/domconverter');\n\nvar _domconverter2 = _interopRequireDefault(_domconverter);\n\nvar _inputcommand = require('./inputcommand');\n\nvar _inputcommand2 = _interopRequireDefault(_inputcommand);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module typing/input\n */\n\n/**\n * Handles text input coming from the keyboard or other input methods.\n *\n * @extends module:core/plugin~Plugin\n */\nvar Input = function (_Plugin) {\n\t_inherits(Input, _Plugin);\n\n\tfunction Input() {\n\t\t_classCallCheck(this, Input);\n\n\t\treturn _possibleConstructorReturn(this, (Input.__proto__ || Object.getPrototypeOf(Input)).apply(this, arguments));\n\t}\n\n\t_createClass(Input, [{\n\t\tkey: 'init',\n\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tvalue: function init() {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar editor = this.editor;\n\t\t\tvar editingView = editor.editing.view;\n\t\t\tvar inputCommand = new _inputcommand2.default(editor, editor.config.get('typing.undoStep') || 20);\n\n\t\t\t// TODO The above default configuration value should be defined using editor.config.define() once it's fixed.\n\n\t\t\teditor.commands.add('input', inputCommand);\n\n\t\t\tthis.listenTo(editingView, 'keydown', function (evt, data) {\n\t\t\t\t_this2._handleKeydown(data, inputCommand);\n\t\t\t}, { priority: 'lowest' });\n\n\t\t\tthis.listenTo(editingView, 'mutations', function (evt, mutations, viewSelection) {\n\t\t\t\t_this2._handleMutations(mutations, viewSelection);\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * Handles the keydown event. We need to guess whether such keystroke is going to result\n   * in typing. If so, then before character insertion happens, any selected content needs\n   * to be deleted. Otherwise the default browser deletion mechanism would be\n   * triggered, resulting in:\n   *\n   * * Hundreds of mutations which could not be handled.\n   * * But most importantly, loss of control over how the content is being deleted.\n   *\n   * The method is used in a low-priority listener, hence allowing other listeners (e.g. delete or enter features)\n   * to handle the event.\n   *\n   * @private\n   * @param {module:engine/view/observer/keyobserver~KeyEventData} evtData\n   * @param {module:typing/inputcommand~InputCommand} inputCommand\n   */\n\n\t}, {\n\t\tkey: '_handleKeydown',\n\t\tvalue: function _handleKeydown(evtData, inputCommand) {\n\t\t\tvar _this3 = this;\n\n\t\t\tvar doc = this.editor.document;\n\t\t\tvar buffer = inputCommand.buffer;\n\n\t\t\t// By relying on the state of the input command we allow disabling the entire input easily\n\t\t\t// by just disabling the input command. We could’ve used here the delete command but that\n\t\t\t// would mean requiring the delete feature which would block loading one without the other.\n\t\t\t// We could also check the editor.isReadOnly property, but that wouldn't allow to block\n\t\t\t// the input without blocking other features.\n\t\t\tif (!inputCommand.isEnabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (isSafeKeystroke(evtData) || doc.selection.isCollapsed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tbuffer.lock();\n\n\t\t\tdoc.enqueueChanges(function () {\n\t\t\t\t_this3.editor.data.deleteContent(doc.selection, buffer.batch);\n\t\t\t});\n\n\t\t\tbuffer.unlock();\n\t\t}\n\n\t\t/**\n   * Handles DOM mutations.\n   *\n   * @private\n   * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n   * module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n   * @param {module:engine/view/selection~Selection|null} viewSelection\n   */\n\n\t}, {\n\t\tkey: '_handleMutations',\n\t\tvalue: function _handleMutations(mutations, viewSelection) {\n\t\t\tnew MutationHandler(this.editor).handle(mutations, viewSelection);\n\t\t}\n\t}], [{\n\t\tkey: 'pluginName',\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tget: function get() {\n\t\t\treturn 'Input';\n\t\t}\n\t}]);\n\n\treturn Input;\n}(_plugin2.default);\n\n/**\n * Helper class for translating DOM mutations into model changes.\n *\n * @private\n */\n\n\nexports.default = Input;\n\nvar MutationHandler = function () {\n\t/**\n  * Creates an instance of the mutation handler.\n  *\n  * @param {module:core/editor/editor~Editor} editor\n  */\n\tfunction MutationHandler(editor) {\n\t\t_classCallCheck(this, MutationHandler);\n\n\t\t/**\n   * Editor instance for which mutations are handled.\n   *\n   * @readonly\n   * @member {module:core/editor/editor~Editor} #editor\n   */\n\t\tthis.editor = editor;\n\n\t\t/**\n   * The editing controller.\n   *\n   * @readonly\n   * @member {module:engine/controller/editingcontroller~EditingController} #editing\n   */\n\t\tthis.editing = this.editor.editing;\n\t}\n\n\t/**\n  * Handles given mutations.\n  *\n  * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n  * module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n  * @param {module:engine/view/selection~Selection|null} viewSelection\n  */\n\n\n\t_createClass(MutationHandler, [{\n\t\tkey: 'handle',\n\t\tvalue: function handle(mutations, viewSelection) {\n\t\t\tif (containerChildrenMutated(mutations)) {\n\t\t\t\tthis._handleContainerChildrenMutations(mutations, viewSelection);\n\t\t\t} else {\n\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\tvar _didIteratorError = false;\n\t\t\t\tvar _iteratorError = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator = mutations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\tvar mutation = _step.value;\n\n\t\t\t\t\t\t// Fortunately it will never be both.\n\t\t\t\t\t\tthis._handleTextMutation(mutation, viewSelection);\n\t\t\t\t\t\tthis._handleTextNodeInsertion(mutation);\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t_iteratorError = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Handles situations when container's children mutated during input. This can happen when\n   * the browser is trying to \"fix\" DOM in certain situations. For example, when the user starts to type\n   * in `<p><a href=\"\"><i>Link{}</i></a></p>`, the browser might change the order of elements\n   * to `<p><i><a href=\"\">Link</a>x{}</i></p>`. A similar situation happens when the spell checker\n   * replaces a word wrapped with `<strong>` with a word wrapped with a `<b>` element.\n   *\n   * To handle such situations, the common DOM ancestor of all mutations is converted to the model representation\n   * and then compared with the current model to calculate the proper text change.\n   *\n   * Note: Single text node insertion is handled in {@link #_handleTextNodeInsertion} and text node mutation is handled\n   * in {@link #_handleTextMutation}).\n   *\n   * @private\n   * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n   * module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n   * @param {module:engine/view/selection~Selection|null} viewSelection\n   */\n\n\t}, {\n\t\tkey: '_handleContainerChildrenMutations',\n\t\tvalue: function _handleContainerChildrenMutations(mutations, viewSelection) {\n\t\t\t// Get common ancestor of all mutations.\n\t\t\tvar mutationsCommonAncestor = getMutationsContainer(mutations);\n\n\t\t\t// Quit if there is no common ancestor.\n\t\t\tif (!mutationsCommonAncestor) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar domConverter = this.editor.editing.view.domConverter;\n\n\t\t\t// Get common ancestor in DOM.\n\t\t\tvar domMutationCommonAncestor = domConverter.mapViewToDom(mutationsCommonAncestor);\n\n\t\t\tif (!domMutationCommonAncestor) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Create fresh DomConverter so it will not use existing mapping and convert current DOM to model.\n\t\t\t// This wouldn't be needed if DomConverter would allow to create fresh view without checking any mappings.\n\t\t\tvar freshDomConverter = new _domconverter2.default();\n\t\t\tvar modelFromCurrentDom = this.editor.data.toModel(freshDomConverter.domToView(domMutationCommonAncestor)).getChild(0);\n\n\t\t\t// Current model.\n\t\t\tvar currentModel = this.editor.editing.mapper.toModelElement(mutationsCommonAncestor);\n\n\t\t\t// Get children from both ancestors.\n\t\t\tvar modelFromDomChildren = Array.from(modelFromCurrentDom.getChildren());\n\t\t\tvar currentModelChildren = Array.from(currentModel.getChildren());\n\n\t\t\t// Skip situations when common ancestor has any elements (cause they are too hard).\n\t\t\tif (!hasOnlyTextNodes(modelFromDomChildren) || !hasOnlyTextNodes(currentModelChildren)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Replace &nbsp; inserted by the browser with normal space.\n\t\t\t// See comment in `_handleTextMutation`.\n\t\t\tvar newText = modelFromDomChildren.map(function (item) {\n\t\t\t\treturn item.data;\n\t\t\t}).join('').replace(/\\u00A0/g, ' ');\n\t\t\tvar oldText = currentModelChildren.map(function (item) {\n\t\t\t\treturn item.data;\n\t\t\t}).join('');\n\n\t\t\t// Do nothing if mutations created same text.\n\t\t\tif (oldText === newText) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar diffResult = (0, _diff2.default)(oldText, newText);\n\n\t\t\tvar _calculateChanges = calculateChanges(diffResult),\n\t\t\t    firstChangeAt = _calculateChanges.firstChangeAt,\n\t\t\t    insertions = _calculateChanges.insertions,\n\t\t\t    deletions = _calculateChanges.deletions;\n\n\t\t\t// Try setting new model selection according to passed view selection.\n\n\n\t\t\tvar modelSelectionRange = null;\n\n\t\t\tif (viewSelection) {\n\t\t\t\tmodelSelectionRange = this.editing.mapper.toModelRange(viewSelection.getFirstRange());\n\t\t\t}\n\n\t\t\tvar insertText = newText.substr(firstChangeAt, insertions);\n\t\t\tvar removeRange = _range2.default.createFromParentsAndOffsets(currentModel, firstChangeAt, currentModel, firstChangeAt + deletions);\n\n\t\t\tthis.editor.execute('input', {\n\t\t\t\ttext: insertText,\n\t\t\t\trange: removeRange,\n\t\t\t\tresultRange: modelSelectionRange\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: '_handleTextMutation',\n\t\tvalue: function _handleTextMutation(mutation, viewSelection) {\n\t\t\tif (mutation.type != 'text') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Replace &nbsp; inserted by the browser with normal space.\n\t\t\t// We want only normal spaces in the model and in the view. Renderer and DOM Converter will be then responsible\n\t\t\t// for rendering consecutive spaces using &nbsp;, but the model and the view has to be clear.\n\t\t\t// Other feature may introduce inserting non-breakable space on specific key stroke (for example shift + space).\n\t\t\t// However then it will be handled outside of mutations, like enter key is.\n\t\t\t// The replacing is here because it has to be done before `diff` and `diffToChanges` functions, as they\n\t\t\t// take `newText` and compare it to (cleaned up) view.\n\t\t\t// It could also be done in mutation observer too, however if any outside plugin would like to\n\t\t\t// introduce additional events for mutations, they would get already cleaned up version (this may be good or not).\n\t\t\tvar newText = mutation.newText.replace(/\\u00A0/g, ' ');\n\t\t\t// To have correct `diffResult`, we also compare view node text data with &nbsp; replaced by space.\n\t\t\tvar oldText = mutation.oldText.replace(/\\u00A0/g, ' ');\n\n\t\t\tvar diffResult = (0, _diff2.default)(oldText, newText);\n\n\t\t\tvar _calculateChanges2 = calculateChanges(diffResult),\n\t\t\t    firstChangeAt = _calculateChanges2.firstChangeAt,\n\t\t\t    insertions = _calculateChanges2.insertions,\n\t\t\t    deletions = _calculateChanges2.deletions;\n\n\t\t\t// Try setting new model selection according to passed view selection.\n\n\n\t\t\tvar modelSelectionRange = null;\n\n\t\t\tif (viewSelection) {\n\t\t\t\tmodelSelectionRange = this.editing.mapper.toModelRange(viewSelection.getFirstRange());\n\t\t\t}\n\n\t\t\t// Get the position in view and model where the changes will happen.\n\t\t\tvar viewPos = new _position2.default(mutation.node, firstChangeAt);\n\t\t\tvar modelPos = this.editing.mapper.toModelPosition(viewPos);\n\t\t\tvar removeRange = _range2.default.createFromPositionAndShift(modelPos, deletions);\n\t\t\tvar insertText = newText.substr(firstChangeAt, insertions);\n\n\t\t\tthis.editor.execute('input', {\n\t\t\t\ttext: insertText,\n\t\t\t\trange: removeRange,\n\t\t\t\tresultRange: modelSelectionRange\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: '_handleTextNodeInsertion',\n\t\tvalue: function _handleTextNodeInsertion(mutation) {\n\t\t\tif (mutation.type != 'children') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar change = getSingleTextNodeChange(mutation);\n\t\t\tvar viewPos = new _position2.default(mutation.node, change.index);\n\t\t\tvar modelPos = this.editing.mapper.toModelPosition(viewPos);\n\t\t\tvar insertedText = change.values[0].data;\n\n\t\t\tthis.editor.execute('input', {\n\t\t\t\t// Replace &nbsp; inserted by the browser with normal space.\n\t\t\t\t// See comment in `_handleTextMutation`.\n\t\t\t\t// In this case we don't need to do this before `diff` because we diff whole nodes.\n\t\t\t\t// Just change &nbsp; in case there are some.\n\t\t\t\ttext: insertedText.replace(/\\u00A0/g, ' '),\n\t\t\t\trange: new _range2.default(modelPos)\n\t\t\t});\n\t\t}\n\t}]);\n\n\treturn MutationHandler;\n}();\n\nvar safeKeycodes = [(0, _keyboard.getCode)('arrowUp'), (0, _keyboard.getCode)('arrowRight'), (0, _keyboard.getCode)('arrowDown'), (0, _keyboard.getCode)('arrowLeft'), 9, // Tab\n16, // Shift\n17, // Ctrl\n18, // Alt\n20, // CapsLock\n27, // Escape\n33, // PageUp\n34, // PageDown\n35, // Home\n36, // End\n229 // Composition start key\n];\n\n// Function keys.\nfor (var code = 112; code <= 135; code++) {\n\tsafeKeycodes.push(code);\n}\n\n// Returns `true` if a keystroke should not cause any content change caused by \"typing\".\n//\n// Note: This implementation is very simple and will need to be refined with time.\n//\n// @private\n// @param {engine.view.observer.keyObserver.KeyEventData} keyData\n// @returns {Boolean}\nfunction isSafeKeystroke(keyData) {\n\t// Keystrokes which contain Ctrl don't represent typing.\n\tif (keyData.ctrlKey) {\n\t\treturn true;\n\t}\n\n\treturn safeKeycodes.includes(keyData.keyCode);\n}\n\n// Helper function that compares whether two given view nodes are same. It is used in `diff` when it's passed an array\n// with child nodes.\nfunction compareChildNodes(oldChild, newChild) {\n\tif (oldChild instanceof _text2.default && newChild instanceof _text2.default) {\n\t\treturn oldChild.data === newChild.data;\n\t} else {\n\t\treturn oldChild === newChild;\n\t}\n}\n\n// Returns change made to a single text node. Returns `undefined` if more than a single text node was changed.\n//\n// @private\n// @param mutation\nfunction getSingleTextNodeChange(mutation) {\n\t// One new node.\n\tif (mutation.newChildren.length - mutation.oldChildren.length != 1) {\n\t\treturn;\n\t}\n\n\t// Which is text.\n\tvar diffResult = (0, _diff2.default)(mutation.oldChildren, mutation.newChildren, compareChildNodes);\n\tvar changes = (0, _difftochanges2.default)(diffResult, mutation.newChildren);\n\n\t// In case of [ delete, insert, insert ] the previous check will not exit.\n\tif (changes.length > 1) {\n\t\treturn;\n\t}\n\n\tvar change = changes[0];\n\n\t// Which is text.\n\tif (!(change.values[0] instanceof _text2.default)) {\n\t\treturn;\n\t}\n\n\treturn change;\n}\n\n// Returns first common ancestor of all mutations that is either {@link module:engine/view/containerelement~ContainerElement}\n// or {@link module:engine/view/rootelement~RootElement}.\n//\n// @private\n// @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n// module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n// @returns {module:engine/view/containerelement~ContainerElement|engine/view/rootelement~RootElement|undefined}\nfunction getMutationsContainer(mutations) {\n\tvar lca = mutations.map(function (mutation) {\n\t\treturn mutation.node;\n\t}).reduce(function (commonAncestor, node) {\n\t\treturn commonAncestor.getCommonAncestor(node, { includeSelf: true });\n\t});\n\n\tif (!lca) {\n\t\treturn;\n\t}\n\n\t// We need to look for container and root elements only, so check all LCA's\n\t// ancestors (starting from itself).\n\treturn lca.getAncestors({ includeSelf: true, parentFirst: true }).find(function (element) {\n\t\treturn element.is('containerElement') || element.is('rootElement');\n\t});\n}\n\n// Returns true if container children have mutated and more than a single text node was changed. Single text node\n// child insertion is handled in {@link module:typing/input~MutationHandler#_handleTextNodeInsertion} and text\n// mutation is handled in {@link module:typing/input~MutationHandler#_handleTextMutation}.\n//\n// @private\n// @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n// module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n// @returns {Boolean}\nfunction containerChildrenMutated(mutations) {\n\tif (mutations.length == 0) {\n\t\treturn false;\n\t}\n\n\t// Check if all mutations are `children` type, and there is no single text node mutation.\n\tvar _iteratorNormalCompletion2 = true;\n\tvar _didIteratorError2 = false;\n\tvar _iteratorError2 = undefined;\n\n\ttry {\n\t\tfor (var _iterator2 = mutations[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\tvar mutation = _step2.value;\n\n\t\t\tif (mutation.type !== 'children' || getSingleTextNodeChange(mutation)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError2 = true;\n\t\t_iteratorError2 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t_iterator2.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError2) {\n\t\t\t\tthrow _iteratorError2;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\n// Returns true if provided array contains only {@link module:engine/model/text~Text model text nodes}.\n//\n// @param {Array.<module:engine/model/node~Node>} children\n// @returns {Boolean}\nfunction hasOnlyTextNodes(children) {\n\treturn children.every(function (child) {\n\t\treturn child.is('text');\n\t});\n}\n\n// Calculates first change index and number of characters that should be inserted and deleted starting from that index.\n//\n// @private\n// @param diffResult\n// @return {{insertions: number, deletions: number, firstChangeAt: *}}\nfunction calculateChanges(diffResult) {\n\t// Index where the first change happens. Used to set the position from which nodes will be removed and where will be inserted.\n\tvar firstChangeAt = null;\n\t// Index where the last change happens. Used to properly count how many characters have to be removed and inserted.\n\tvar lastChangeAt = null;\n\n\t// Get `firstChangeAt` and `lastChangeAt`.\n\tfor (var i = 0; i < diffResult.length; i++) {\n\t\tvar change = diffResult[i];\n\n\t\tif (change != 'equal') {\n\t\t\tfirstChangeAt = firstChangeAt === null ? i : firstChangeAt;\n\t\t\tlastChangeAt = i;\n\t\t}\n\t}\n\n\t// How many characters, starting from `firstChangeAt`, should be removed.\n\tvar deletions = 0;\n\t// How many characters, starting from `firstChangeAt`, should be inserted.\n\tvar insertions = 0;\n\n\tfor (var _i = firstChangeAt; _i <= lastChangeAt; _i++) {\n\t\t// If there is no change (equal) or delete, the character is existing in `oldText`. We count it for removing.\n\t\tif (diffResult[_i] != 'insert') {\n\t\t\tdeletions++;\n\t\t}\n\n\t\t// If there is no change (equal) or insert, the character is existing in `newText`. We count it for inserting.\n\t\tif (diffResult[_i] != 'delete') {\n\t\t\tinsertions++;\n\t\t}\n\t}\n\n\treturn { insertions: insertions, deletions: deletions, firstChangeAt: firstChangeAt };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-typing/src/input.js\n// module id = 369\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _command = require('@ckeditor/ckeditor5-core/src/command');\n\nvar _command2 = _interopRequireDefault(_command);\n\nvar _changebuffer = require('./changebuffer');\n\nvar _changebuffer2 = _interopRequireDefault(_changebuffer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module typing/inputcommand\n */\n\n/**\n * The input command. Used by the {@link module:typing/input~Input input feature} to handle typing.\n *\n * @extends module:core/command~Command\n */\nvar InputCommand = function (_Command) {\n\t_inherits(InputCommand, _Command);\n\n\t/**\n  * Creates an instance of the command.\n  *\n  * @param {module:core/editor/editor~Editor} editor\n  * @param {Number} undoStepSize The maximum number of atomic changes\n  * which can be contained in one batch in the command buffer.\n  */\n\tfunction InputCommand(editor, undoStepSize) {\n\t\t_classCallCheck(this, InputCommand);\n\n\t\t/**\n   * Typing's change buffer used to group subsequent changes into batches.\n   *\n   * @readonly\n   * @private\n   * @member {module:typing/changebuffer~ChangeBuffer} #_buffer\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (InputCommand.__proto__ || Object.getPrototypeOf(InputCommand)).call(this, editor));\n\n\t\t_this._buffer = new _changebuffer2.default(editor.document, undoStepSize);\n\t\treturn _this;\n\t}\n\n\t/**\n  * The current change buffer.\n  *\n  * @type {module:typing/changebuffer~ChangeBuffer}\n  */\n\n\n\t_createClass(InputCommand, [{\n\t\tkey: 'destroy',\n\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tvalue: function destroy() {\n\t\t\t_get(InputCommand.prototype.__proto__ || Object.getPrototypeOf(InputCommand.prototype), 'destroy', this).call(this);\n\n\t\t\tthis._buffer.destroy();\n\t\t}\n\n\t\t/**\n   * Executes the input command. It replaces the content within the given range with the given text.\n   * Replacing is a two step process, first the content within the range is removed and then the new text is inserted\n   * at the beginning of the range (which after the removal is a collapsed range).\n   *\n   * @fires execute\n   * @param {Object} [options] The command options.\n   * @param {String} [options.text=''] The text to be inserted.\n   * @param {module:engine/model/range~Range} [options.range] The range in which the text is inserted. Defaults\n   * to the first range in the current selection.\n   * @param {module:engine/model/range~Range} [options.resultRange] The range where the selection\n   * should be placed after the insertion. If not specified, the selection will be placed right after\n   * the inserted text.\n   */\n\n\t}, {\n\t\tkey: 'execute',\n\t\tvalue: function execute() {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\t\t\tvar doc = this.editor.document;\n\t\t\tvar text = options.text || '';\n\t\t\tvar textInsertions = text.length;\n\t\t\tvar range = options.range || doc.selection.getFirstRange();\n\t\t\tvar resultRange = options.resultRange;\n\n\t\t\tdoc.enqueueChanges(function () {\n\t\t\t\tvar isCollapsedRange = range.isCollapsed;\n\n\t\t\t\t_this2._buffer.lock();\n\n\t\t\t\tif (!isCollapsedRange) {\n\t\t\t\t\t_this2._buffer.batch.remove(range);\n\t\t\t\t}\n\n\t\t\t\t_this2._buffer.batch.weakInsert(range.start, text);\n\n\t\t\t\tif (resultRange) {\n\t\t\t\t\t_this2.editor.data.model.selection.setRanges([resultRange]);\n\t\t\t\t} else if (isCollapsedRange) {\n\t\t\t\t\t// If range was collapsed just shift the selection by the number of inserted characters.\n\t\t\t\t\t_this2.editor.data.model.selection.collapse(range.start.getShiftedBy(textInsertions));\n\t\t\t\t}\n\n\t\t\t\t_this2._buffer.unlock();\n\n\t\t\t\t_this2._buffer.input(textInsertions);\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'buffer',\n\t\tget: function get() {\n\t\t\treturn this._buffer;\n\t\t}\n\t}]);\n\n\treturn InputCommand;\n}(_command2.default);\n\nexports.default = InputCommand;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-typing/src/inputcommand.js\n// module id = 370\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _plugin = require('@ckeditor/ckeditor5-core/src/plugin');\n\nvar _plugin2 = _interopRequireDefault(_plugin);\n\nvar _input = require('./input');\n\nvar _input2 = _interopRequireDefault(_input);\n\nvar _delete = require('./delete');\n\nvar _delete2 = _interopRequireDefault(_delete);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module typing/typing\n */\n\n/**\n * The typing feature. It handles typing.\n *\n * @extends module:core/plugin~Plugin\n */\nvar Typing = function (_Plugin) {\n  _inherits(Typing, _Plugin);\n\n  function Typing() {\n    _classCallCheck(this, Typing);\n\n    return _possibleConstructorReturn(this, (Typing.__proto__ || Object.getPrototypeOf(Typing)).apply(this, arguments));\n  }\n\n  _createClass(Typing, null, [{\n    key: 'requires',\n    get: function get() {\n      return [_input2.default, _delete2.default];\n    }\n\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: 'pluginName',\n    get: function get() {\n      return 'Typing';\n    }\n  }]);\n\n  return Typing;\n}(_plugin2.default);\n\n/**\n * The configuration of the typing features. Used by the features from the `@ckeditor/ckeditor5-typing` package.\n *\n * Read more in {@link module:typing/typing~TypingConfig}.\n *\n * @member {module:typing/typing~TypingConfig} module:core/editor/editorconfig~EditorConfig#typing\n */\n\n/**\n * The configuration of the typing features. Used by the typing features in `@ckeditor/ckeditor5-typing` package.\n *\n *\t\tClassicEditor\n *\t\t\t.create( {\n * \t\t\t\ttyping: ... // Typing feature options.\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface TypingConfig\n */\n\n/**\n * The granularity of undo/redo for typing and deleting. The value `20` means (more or less) that a new undo step\n * is created every 20 characters are inserted or deleted.\n *\n * @member {Number} [module:typing/typing~TypingConfig#undoStep=20]\n */\n\n\nexports.default = Typing;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-typing/src/typing.js\n// module id = 371\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\nn\n/**\n * @module ui/componentfactory\n */\n\nvar _ckeditorerror = require('@ckeditor/ckeditor5-utils/src/ckeditorerror');\n\nvar _ckeditorerror2 = _interopRequireDefault(_ckeditorerror);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Class implementing the UI component factory.\n *\n * Factories of specific UI components can be registered under their unique names. Registered\n * components can be later instantiated by providing the name of the component.\n *\n * The main use case for the component factory is the {@link module:core/editor/editorui~EditorUI#componentFactory} factory.\n */\nvar ComponentFactory = function () {\n\t/**\n  * Creates ComponentFactory instance.\n  *\n  * @constructor\n  * @param {module:core/editor/editor~Editor} editor The editor instance.\n  */\n\tfunction ComponentFactory(editor) {\n\t\t_classCallCheck(this, ComponentFactory);\n\n\t\t/**\n   * The editor instance.\n   *\n   * @readonly\n   * @member {module:core/editor/editor~Editor}\n   */\n\t\tthis.editor = editor;\n\n\t\t/**\n   * Registered component factories.\n   *\n   * @private\n   * @member {Map}\n   */\n\t\tthis._components = new Map();\n\t}\n\n\t/**\n  * Returns iterator of component names.\n  *\n  * @returns {Iterator.<String>}\n  */\n\n\n\t_createClass(ComponentFactory, [{\n\t\tkey: 'names',\n\t\tvalue: regeneratorRuntime.mark(function names() {\n\t\t\treturn regeneratorRuntime.wrap(function names$(_context) {\n\t\t\t\twhile (1) {\n\t\t\t\t\tswitch (_context.prev = _context.next) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\treturn _context.delegateYield(this._components.keys(), 't0', 1);\n\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\tcase 'end':\n\t\t\t\t\t\t\treturn _context.stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, names, this);\n\t\t})\n\n\t\t/**\n   * Registers a component factory.\n   *\n   * @param {String} name The name of the component.\n   * @param {Function} ControllerClass The component controller constructor.\n   * @param {Function} ViewClass The component view constructor.\n   * @param {Function} [callback] The callback to process the view instance,\n   * i.e. to set attribute values, create attribute bindings, etc.\n   */\n\n\t}, {\n\t\tkey: 'add',\n\t\tvalue: function add(name, callback) {\n\t\t\tif (this._components.get(name)) {\n\t\t\t\t/**\n     * The item already exists in the component factory.\n     *\n     * @error componentfactory-item-exists\n     * @param {String} name The name of the component.\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('componentfactory-item-exists: The item already exists in the component factory.', { name: name });\n\t\t\t}\n\n\t\t\tthis._components.set(name, callback);\n\t\t}\n\n\t\t/**\n   * Creates a component view instance.\n   *\n   * @param {String} name The name of the component.\n   * @returns {module:ui/view~View} The instantiated component view.\n   */\n\n\t}, {\n\t\tkey: 'create',\n\t\tvalue: function create(name) {\n\t\t\tvar component = this._components.get(name);\n\n\t\t\tif (!component) {\n\t\t\t\t/**\n     * There is no such UI component in the factory.\n     *\n     * @error componentfactory-item-missing\n     * @param {String} name The name of the missing component.\n     */\n\t\t\t\tthrow new _ckeditorerror2.default('componentfactory-item-missing: There is no such UI component in the factory.', { name: name });\n\t\t\t}\n\n\t\t\treturn component(this.editor.locale);\n\t\t}\n\t}]);\n\n\treturn ComponentFactory;\n}();\n\nexports.default = ComponentFactory;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-ui/src/componentfactory.js\n// module id = 372\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createDropdown;\n\nvar _buttonview = require('../button/buttonview');\n\nvar _buttonview2 = _interopRequireDefault(_buttonview);\n\nvar _dropdownview = require('./dropdownview');\n\nvar _dropdownview2 = _interopRequireDefault(_dropdownview);\n\nvar _dropdownpanelview = require('./dropdownpanelview');\n\nvar _dropdownpanelview2 = _interopRequireDefault(_dropdownpanelview);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates an instance of {@link module:ui/dropdown/dropdownview~DropdownView} class using\n * defined model.\n *\n * @param {module:ui/dropdown/dropdownmodel~DropdownModel} model Model of this dropdown.\n * @param {module:utils/locale~Locale} locale The locale instance.\n * @returns {module:ui/dropdown/dropdownview~DropdownView} The dropdown view instance.\n */\nfunction createDropdown(model, locale) {\n  var buttonView = new _buttonview2.default(locale);\n  buttonView.bind('label', 'isOn', 'isEnabled', 'withText', 'keystroke', 'tooltip').to(model);\n\n  var panelView = new _dropdownpanelview2.default(locale);\n\n  return new _dropdownview2.default(locale, buttonView, panelView);\n} /**\n   * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n   * For licensing, see LICENSE.md.\n   */\n\n/**\n * @module ui/dropdown/createdropdown\n */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-ui/src/dropdown/createdropdown.js\n// module id = 373\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _view = require('../view');\n\nvar _view2 = _interopRequireDefault(_view);\n\nvar _template = require('../template');\n\nvar _template2 = _interopRequireDefault(_template);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module ui/dropdown/dropdownpanelview\n */\n\n/**\n * The dropdown panel view class.\n *\n * @extends module:ui/view~View\n */\nvar DropdownPanelView = function (_View) {\n\t_inherits(DropdownPanelView, _View);\n\n\t/**\n  * @inheritDoc\n  */\n\tfunction DropdownPanelView(locale) {\n\t\t_classCallCheck(this, DropdownPanelView);\n\n\t\tvar _this = _possibleConstructorReturn(this, (DropdownPanelView.__proto__ || Object.getPrototypeOf(DropdownPanelView)).call(this, locale));\n\n\t\tvar bind = _this.bindTemplate;\n\n\t\t/**\n   * Controls whether the panel is visible.\n   *\n   * @observable\n   * @member {Boolean} #isVisible\n   */\n\t\t_this.set('isVisible', false);\n\n\t\t/**\n   * Collection of the child views.\n   *\n   * @readonly\n   * @member {module:ui/viewcollection~ViewCollection}\n   */\n\t\t_this.children = _this.createCollection();\n\n\t\t_this.template = new _template2.default({\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: ['ck-reset', 'ck-dropdown__panel', bind.if('isVisible', 'ck-dropdown__panel-visible')]\n\t\t\t},\n\n\t\t\tchildren: _this.children,\n\n\t\t\ton: {\n\t\t\t\t// Drag and drop in the panel should not break the selection in the editor.\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/228\n\t\t\t\tselectstart: bind.to(function (evt) {\n\t\t\t\t\treturn evt.preventDefault();\n\t\t\t\t})\n\t\t\t}\n\t\t});\n\t\treturn _this;\n\t}\n\n\treturn DropdownPanelView;\n}(_view2.default);\n\nexports.default = DropdownPanelView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-ui/src/dropdown/dropdownpanelview.js\n// module id = 374\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _view = require('../view');\n\nvar _view2 = _interopRequireDefault(_view);\n\nvar _template = require('../template');\n\nvar _template2 = _interopRequireDefault(_template);\n\nvar _focustracker = require('@ckeditor/ckeditor5-utils/src/focustracker');\n\nvar _focustracker2 = _interopRequireDefault(_focustracker);\n\nvar _keystrokehandler = require('@ckeditor/ckeditor5-utils/src/keystrokehandler');\n\nvar _keystrokehandler2 = _interopRequireDefault(_keystrokehandler);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module ui/dropdown/dropdownview\n */\n\n/**\n * The dropdown view class.\n *\n * @extends module:ui/view~View\n */\nvar DropdownView = function (_View) {\n\t_inherits(DropdownView, _View);\n\n\t/**\n  * @inheritDoc\n  */\n\tfunction DropdownView(locale, buttonView, panelView) {\n\t\t_classCallCheck(this, DropdownView);\n\n\t\t// Extend button's template before it's registered as a child of the dropdown because\n\t\t// by doing so, its #element is rendered and any post–render template extension will\n\t\t// not be reflected in DOM.\n\t\tvar _this = _possibleConstructorReturn(this, (DropdownView.__proto__ || Object.getPrototypeOf(DropdownView)).call(this, locale));\n\n\t\t_template2.default.extend(buttonView.template, {\n\t\t\tattributes: {\n\t\t\t\tclass: ['ck-dropdown__button']\n\t\t\t}\n\t\t});\n\n\t\t/**\n   * Button of this dropdown view.\n   *\n   * @readonly\n   * @member {ui.button.ButtonView} #buttonView\n   */\n\t\t_this.buttonView = buttonView;\n\n\t\t/**\n   * Panel of this dropdown view.\n   *\n   * @readonly\n   * @member {module:ui/dropdown/dropdownpanelview~DropdownPanelView} #panelView\n   */\n\t\t_this.panelView = panelView;\n\n\t\t/**\n   * Controls whether the dropdown view is open, which also means its\n   * {@link #panelView panel} is visible.\n   *\n   * @observable\n   * @member {Boolean} #isOpen\n   */\n\t\t_this.set('isOpen', false);\n\n\t\t/**\n   * Tracks information about DOM focus in the list.\n   *\n   * @readonly\n   * @member {module:utils/focustracker~FocusTracker}\n   */\n\t\t_this.focusTracker = new _focustracker2.default();\n\n\t\t/**\n   * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n   *\n   * @readonly\n   * @member {module:utils/keystrokehandler~KeystrokeHandler}\n   */\n\t\t_this.keystrokes = new _keystrokehandler2.default();\n\n\t\t_this.template = new _template2.default({\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: ['ck-dropdown']\n\t\t\t},\n\n\t\t\tchildren: [buttonView, panelView]\n\t\t});\n\n\t\t// Toggle the the dropdown when it's button has been clicked.\n\t\t_this.listenTo(buttonView, 'execute', function () {\n\t\t\t_this.isOpen = !_this.isOpen;\n\t\t});\n\n\t\t// Toggle the visibility of the panel when the dropdown becomes open.\n\t\tpanelView.bind('isVisible').to(_this, 'isOpen');\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(DropdownView, [{\n\t\tkey: 'init',\n\t\tvalue: function init() {\n\t\t\tvar _this2 = this;\n\n\t\t\t// Listen for keystrokes coming from within #element.\n\t\t\tthis.keystrokes.listenTo(this.element);\n\n\t\t\t// Register #element in the focus tracker.\n\t\t\tthis.focusTracker.add(this.element);\n\n\t\t\tvar closeDropdown = function closeDropdown(data, cancel) {\n\t\t\t\tif (_this2.isOpen) {\n\t\t\t\t\t_this2.buttonView.focus();\n\t\t\t\t\t_this2.isOpen = false;\n\t\t\t\t\tcancel();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Open the dropdown panel using the arrow down key, just like with return or space.\n\t\t\tthis.keystrokes.set('arrowdown', function (data, cancel) {\n\t\t\t\t// Don't open if the dropdown is disabled or already open.\n\t\t\t\tif (_this2.buttonView.isEnabled && !_this2.isOpen) {\n\t\t\t\t\t_this2.isOpen = true;\n\t\t\t\t\tcancel();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Block the right arrow key (until nested dropdowns are implemented).\n\t\t\tthis.keystrokes.set('arrowright', function (data, cancel) {\n\t\t\t\tif (_this2.isOpen) {\n\t\t\t\t\tcancel();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Close the dropdown using the arrow left/escape key.\n\t\t\tthis.keystrokes.set('arrowleft', closeDropdown);\n\t\t\tthis.keystrokes.set('esc', closeDropdown);\n\n\t\t\t_get(DropdownView.prototype.__proto__ || Object.getPrototypeOf(DropdownView.prototype), 'init', this).call(this);\n\t\t}\n\n\t\t/**\n   * Focuses the {@link #buttonView}.\n   */\n\n\t}, {\n\t\tkey: 'focus',\n\t\tvalue: function focus() {\n\t\t\tthis.buttonView.focus();\n\t\t}\n\t}]);\n\n\treturn DropdownView;\n}(_view2.default);\n\nexports.default = DropdownView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-ui/src/dropdown/dropdownview.js\n// module id = 375\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = createListDropdown;\n\nvar _listview = require('../../list/listview');\n\nvar _listview2 = _interopRequireDefault(_listview);\n\nvar _listitemview = require('../../list/listitemview');\n\nvar _listitemview2 = _interopRequireDefault(_listitemview);\n\nvar _createdropdown = require('../createdropdown');\n\nvar _createdropdown2 = _interopRequireDefault(_createdropdown);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /**\n                                                                                                                                                                                                     * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                     * For licensing, see LICENSE.md.\n                                                                                                                                                                                                     */\n\n/**\n * @module ui/dropdown/list/createlistdropdown\n */\n\n/* global document */\n\n/**\n * Creates an instance of {@link module:ui/dropdown/list/listdropdownview~ListDropdownView} class using\n * defined model.\n *\n * @param {module:ui/dropdown/list/listdropdownmodel~ListDropdownModel} model Model of this list dropdown.\n * @param {module:utils/locale~Locale} locale The locale instance.\n * @returns {module:ui/dropdown/list/listdropdownview~ListDropdownView} The list dropdown view instance.\n */\nfunction createListDropdown(model, locale) {\n\tvar dropdownView = (0, _createdropdown2.default)(model, locale);\n\n\tvar listView = dropdownView.listView = new _listview2.default(locale);\n\n\tlistView.items.bindTo(model.items).using(function (itemModel) {\n\t\tvar item = new _listitemview2.default(locale);\n\n\t\t// Bind all attributes of the model to the item view.\n\t\titem.bind.apply(item, _toConsumableArray(Object.keys(itemModel))).to(itemModel);\n\n\t\treturn item;\n\t});\n\n\t// TODO: Delegate all events instead of just execute.\n\tlistView.items.delegate('execute').to(dropdownView);\n\n\tdropdownView.panelView.children.add(listView);\n\n\tdropdownView.on('change:isOpen', function (evt, name, value) {\n\t\tif (value) {\n\t\t\tattachDocumentClickListener(dropdownView);\n\t\t} else {\n\t\t\tdropdownView.stopListening(document);\n\t\t}\n\t});\n\n\t// Close the dropdown when one of the list items has been executed.\n\tdropdownView.on('execute', function () {\n\t\tdropdownView.isOpen = false;\n\t});\n\n\t// If the dropdown panel is already open, the arrow down key should\n\t// focus the first element in list.\n\tdropdownView.keystrokes.set('arrowdown', function (data, cancel) {\n\t\tif (dropdownView.isOpen) {\n\t\t\tlistView.focus();\n\t\t\tcancel();\n\t\t}\n\t});\n\n\t// If the dropdown panel is already open, the arrow up key should\n\t// focus the last element in the list.\n\tdropdownView.keystrokes.set('arrowup', function (data, cancel) {\n\t\tif (dropdownView.isOpen) {\n\t\t\tlistView.focusLast();\n\t\t\tcancel();\n\t\t}\n\t});\n\n\treturn dropdownView;\n}\n\n// Attaches a \"click\" listener in DOM to check if any element outside\n// the dropdown has been clicked.\n//\n// @private\n// @param {module:ui/dropdown/listdropdownview~ListDropdownView} dropdownView\nfunction attachDocumentClickListener(dropdownView) {\n\t// TODO: It will probably be focus/blur-based rather than click. It should be bound\n\t// to focusmanager of some sort.\n\tdropdownView.listenTo(document, 'click', function (evtInfo, _ref) {\n\t\tvar domEvtTarget = _ref.target;\n\n\t\t// Collapse the dropdown when the webpage outside of the component is clicked.\n\t\tif (dropdownView.element != domEvtTarget && !dropdownView.element.contains(domEvtTarget)) {\n\t\t\tdropdownView.isOpen = false;\n\t\t}\n\t});\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-ui/src/dropdown/list/createlistdropdown.js\n// module id = 376\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _view = require('../view');\n\nvar _view2 = _interopRequireDefault(_view);\n\nvar _template = require('../template');\n\nvar _template2 = _interopRequireDefault(_template);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module ui/editableui/editableuiview\n */\n\n/**\n * The editable UI view class.\n *\n * @extends module:ui/view~View\n */\nvar EditableUIView = function (_View) {\n\t_inherits(EditableUIView, _View);\n\n\t/**\n  * Creates an instance of EditableUIView class.\n  *\n  * @param {module:utils/locale~Locale} [locale] The locale instance.\n  * @param {HTMLElement} [editableElement] The editable element. If not specified, this view\n  * should create it. Otherwise, the existing element should be used.\n  */\n\tfunction EditableUIView(locale, editableElement) {\n\t\t_classCallCheck(this, EditableUIView);\n\n\t\tvar _this = _possibleConstructorReturn(this, (EditableUIView.__proto__ || Object.getPrototypeOf(EditableUIView)).call(this, locale));\n\n\t\tvar bind = _this.bindTemplate;\n\n\t\tif (editableElement) {\n\t\t\t_this.element = _this.editableElement = editableElement;\n\t\t}\n\n\t\t_this.template = new _template2.default({\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [bind.to('isFocused', function (value) {\n\t\t\t\t\treturn value ? 'ck-focused' : 'ck-blurred';\n\t\t\t\t}), 'ck-editor__editable'],\n\t\t\t\tcontenteditable: bind.to('isReadOnly', function (value) {\n\t\t\t\t\treturn !value;\n\t\t\t\t})\n\t\t\t}\n\t\t});\n\n\t\t/**\n   * Controls whether the editable is writable or not.\n   *\n   * @observable\n   * @member {Boolean} #isReadOnly\n   */\n\t\t_this.set('isReadOnly', false);\n\n\t\t/**\n   * Controls whether the editable is focused, i.e. the user is typing in it.\n   *\n   * @observable\n   * @member {Boolean} #isFocused\n   */\n\t\t_this.set('isFocused', false);\n\n\t\t/**\n   * An external {@link #editableElement} passed into the constructor, which also means\n   * the view will not render its {@link #template}.\n   *\n   * @member {HTMLElement} #externalElement\n   */\n\t\t_this.externalElement = editableElement;\n\n\t\t/**\n   * The element which is the main editable element (usually the one with `contentEditable=\"true\"`).\n   *\n   * @readonly\n   * @member {HTMLElement} #editableElement\n   */\n\t\treturn _this;\n\t}\n\n\t/**\n  * Initializes the view by either applying the {@link #template} to the existing\n  * {@link #editableElement} or assigning {@link #element} as {@link #editableElement}.\n  */\n\n\n\t_createClass(EditableUIView, [{\n\t\tkey: 'init',\n\t\tvalue: function init() {\n\t\t\tif (this.externalElement) {\n\t\t\t\tthis.template.apply(this.externalElement);\n\t\t\t} else {\n\t\t\t\tthis.editableElement = this.element;\n\t\t\t}\n\n\t\t\t_get(EditableUIView.prototype.__proto__ || Object.getPrototypeOf(EditableUIView.prototype), 'init', this).call(this);\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {\n\t\t\tif (this.externalElement) {\n\t\t\t\tthis.template.revert(this.externalElement);\n\t\t\t}\n\n\t\t\t_get(EditableUIView.prototype.__proto__ || Object.getPrototypeOf(EditableUIView.prototype), 'destroy', this).call(this);\n\t\t}\n\t}]);\n\n\treturn EditableUIView;\n}(_view2.default);\n\nexports.default = EditableUIView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-ui/src/editableui/editableuiview.js\n// module id = 377\n// module chunks = 0","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar _editableuiview = require('../../editableui/editableuiview');\nvar _editableuiview2 = _interopRequireDefault(_editableuiview);\nvar _template = require('../../template');\nvar _template2 = _interopRequireDefault(_template);\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError('Cannot call a class as a function');\n    }\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n    }\n    return call && (typeof call === 'object' || typeof call === 'function') ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n        throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass)\n        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n/**\n * @module ui/editableui/inline/inlineeditableuiview\n */\n/**\n * The inline editable UI class implementing an inline {@link module:ui/editableui/editableuiview~EditableUIView}.\n *\n * @extends module:ui/editableui/editableuiview~EditableUIView\n */\nvar InlineEditableUIView = function (_EditableUIView) {\n    _inherits(InlineEditableUIView, _EditableUIView);\n    /**\n  * Creates an instance of the InlineEditableUIView class.\n  *\n  * @param {module:utils/locale~Locale} [locale] The locale instance.\n  * @param {HTMLElement} [editableElement] The editable element. If not specified, the\n  * {@link module:ui/editableui/editableuiview~EditableUIView}\n  * should create it. Otherwise, the existing element should be used.\n  */\n    function InlineEditableUIView(locale, editableElement) {\n        _classCallCheck(this, InlineEditableUIView);\n        var _this = _possibleConstructorReturn(this, (InlineEditableUIView.__proto__ || Object.getPrototypeOf(InlineEditableUIView)).call(this, locale, editableElement));\n        var bind = _this.bindTemplate;\n        var t = _this.t;\n        /**\n   * The name of the editable UI view.\n   *\n   * @observable\n   * @member {String} #name\n   */\n        _this.set('name', null);\n        var getLabel = function getLabel(value) {\n            return t('Rich Text Editor, %0', [value]);\n        };\n        _template2.default.extend(_this.template, {\n            attributes: {\n                role: 'textbox',\n                'aria-label': bind.to('name', getLabel),\n                class: 'ck-editor__editable_inline'\n            }\n        });\n        return _this;\n    }\n    return InlineEditableUIView;\n}(_editableuiview2.default);\nexports.default = InlineEditableUIView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-ui/src/editableui/inline/inlineeditableuiview.js\n// module id = 378\n// module chunks = 0","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar _editoruiview = require('../../editorui/editoruiview');\nvar _editoruiview2 = _interopRequireDefault(_editoruiview);\nvar _uid = require('@ckeditor/ckeditor5-utils/src/uid');\nvar _uid2 = _interopRequireDefault(_uid);\nvar _template = require('../../template');\nvar _template2 = _interopRequireDefault(_template);\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError('Cannot call a class as a function');\n    }\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n    }\n    return call && (typeof call === 'object' || typeof call === 'function') ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n        throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass)\n        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n/**\n * @module ui/editorui/boxed/boxededitoruiview\n */\n/**\n * The boxed editor UI view class. This class represents an editor interface\n * consisting of a toolbar and an editable area, enclosed within a box.\n *\n * @extends module:ui/editorui/editoruiview~EditorUIView\n */\nvar BoxedEditorUIView = function (_EditorUIView) {\n    _inherits(BoxedEditorUIView, _EditorUIView);\n    /**\n  * Creates an instance of the boxed editor UI view class.\n  *\n  * @param {module:utils/locale~Locale} locale The locale instance..\n  */\n    function BoxedEditorUIView(locale) {\n        _classCallCheck(this, BoxedEditorUIView);\n        var _this = _possibleConstructorReturn(this, (BoxedEditorUIView.__proto__ || Object.getPrototypeOf(BoxedEditorUIView)).call(this, locale));\n        var t = _this.t;\n        var ariaLabelUid = (0, _uid2.default)();\n        /**\n   * The UI's width.\n   *\n   * @observable\n   * @member {Number} #width\n   */\n        _this.set('width', null);\n        /**\n   * The UI's height.\n   *\n   * @observable\n   * @member {Number} #height\n   */\n        _this.set('height', null);\n        /**\n   * Collection of the child views located in the top (`.ck-editor__top`)\n   * area of the UI.\n   *\n   * @readonly\n   * @member {module:ui/viewcollection~ViewCollection}\n   */\n        _this.top = _this.createCollection();\n        /**\n   * Collection of the child views located in the main (`.ck-editor__main`)\n   * area of the UI.\n   *\n   * @readonly\n   * @member {module:ui/viewcollection~ViewCollection}\n   */\n        _this.main = _this.createCollection();\n        _this.template = new _template2.default({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck-reset',\n                    'ck-editor',\n                    'ck-rounded-corners'\n                ],\n                role: 'application',\n                dir: 'ltr',\n                lang: locale.lang,\n                'aria-labelledby': 'cke-editor__aria-label_' + ariaLabelUid\n            },\n            children: [\n                {\n                    tag: 'span',\n                    attributes: {\n                        id: 'cke-editor__aria-label_' + ariaLabelUid,\n                        class: 'cke-voice-label'\n                    },\n                    children: [// TODO: Editor name?\n                        t('Rich Text Editor')]\n                },\n                {\n                    tag: 'div',\n                    attributes: {\n                        class: 'ck-editor__top ck-reset_all',\n                        role: 'presentation'\n                    },\n                    children: _this.top\n                },\n                {\n                    tag: 'div',\n                    attributes: {\n                        class: 'ck-editor__main',\n                        role: 'presentation'\n                    },\n                    children: _this.main\n                }\n            ]\n        });\n        return _this;\n    }\n    return BoxedEditorUIView;\n}(_editoruiview2.default);\nexports.default = BoxedEditorUIView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-ui/src/editorui/boxed/boxededitoruiview.js\n// module id = 379\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _view = require('../view');\n\nvar _view2 = _interopRequireDefault(_view);\n\nvar _template = require('../template');\n\nvar _template2 = _interopRequireDefault(_template);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module ui/editorui/editoruiview\n */\n\n/* globals document */\n\n/**\n * The editor UI view class. Base class for the editor main views.\n *\n * @extends module:ui/view~View\n */\nvar EditorUIView = function (_View) {\n\t_inherits(EditorUIView, _View);\n\n\t/**\n  * Creates an instance of the editor UI view class.\n  *\n  * @param {module:utils/locale~Locale} [locale] The locale instance.\n  */\n\tfunction EditorUIView(locale) {\n\t\t_classCallCheck(this, EditorUIView);\n\n\t\t/**\n   * Collection of the child views, detached from the DOM\n   * structure of the editor, like panels, icons etc.\n   *\n   * @readonly\n   * @member {module:ui/viewcollection~ViewCollection} #body\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (EditorUIView.__proto__ || Object.getPrototypeOf(EditorUIView)).call(this, locale));\n\n\t\t_this.body = _this.createCollection();\n\n\t\t/**\n   * The element holding elements of the 'body' region.\n   *\n   * @private\n   * @member {HTMLElement} #_bodyCollectionContainer\n   */\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(EditorUIView, [{\n\t\tkey: 'init',\n\t\tvalue: function init() {\n\t\t\tthis._renderBodyCollection();\n\t\t\t_get(EditorUIView.prototype.__proto__ || Object.getPrototypeOf(EditorUIView.prototype), 'init', this).call(this);\n\t\t}\n\n\t\t/**\n   * @inheritDoc\n   */\n\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {\n\t\t\tthis._bodyCollectionContainer.remove();\n\n\t\t\treturn _get(EditorUIView.prototype.__proto__ || Object.getPrototypeOf(EditorUIView.prototype), 'destroy', this).call(this);\n\t\t}\n\n\t\t/**\n   * Creates and appends to `<body>` the {@link #body} collection container.\n   *\n   * @private\n   */\n\n\t}, {\n\t\tkey: '_renderBodyCollection',\n\t\tvalue: function _renderBodyCollection() {\n\t\t\tvar bodyElement = this._bodyCollectionContainer = new _template2.default({\n\t\t\t\ttag: 'div',\n\t\t\t\tattributes: {\n\t\t\t\t\tclass: ['ck-body', 'ck-rounded-corners', 'ck-reset_all']\n\t\t\t\t},\n\t\t\t\tchildren: this.body\n\t\t\t}).render();\n\n\t\t\tdocument.body.appendChild(bodyElement);\n\t\t}\n\t}]);\n\n\treturn EditorUIView;\n}(_view2.default);\n\nexports.default = EditorUIView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-ui/src/editorui/editoruiview.js\n// module id = 380\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _view = require('../view');\n\nvar _view2 = _interopRequireDefault(_view);\n\nvar _template = require('../template');\n\nvar _template2 = _interopRequireDefault(_template);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/* global DOMParser */\n\n/**\n * @module ui/icon/iconview\n */\n\n/**\n * The icon view class.\n *\n * @extends module:ui/view~View\n */\nvar IconView = function (_View) {\n\t_inherits(IconView, _View);\n\n\t/**\n  * @inheritDoc\n  */\n\tfunction IconView() {\n\t\t_classCallCheck(this, IconView);\n\n\t\tvar _this = _possibleConstructorReturn(this, (IconView.__proto__ || Object.getPrototypeOf(IconView)).call(this));\n\n\t\tvar bind = _this.bindTemplate;\n\n\t\t/**\n   * The SVG source of the icon.\n   *\n   * @observable\n   * @member {String} #content\n   */\n\t\t_this.set('content');\n\n\t\t/**\n   * This attribute specifies the boundaries to which the\n   * icon content should stretch.\n   *\n   * @observable\n   * @default '0 0 20 20'\n   * @member {String} #viewBox\n   */\n\t\t_this.set('viewBox', '0 0 20 20');\n\n\t\t_this.template = new _template2.default({\n\t\t\ttag: 'svg',\n\t\t\tns: 'http://www.w3.org/2000/svg',\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-icon',\n\t\t\t\tviewBox: bind.to('viewBox')\n\t\t\t}\n\t\t});\n\n\t\t// This is a hack for lack of innerHTML binding.\n\t\t// See: https://github.com/ckeditor/ckeditor5-ui/issues/99.\n\t\t_this.on('change:content', function (evt, name, value) {\n\t\t\tvar svg = new DOMParser().parseFromString(value.trim(), 'image/svg+xml').firstChild;\n\n\t\t\twhile (svg.childNodes.length > 0) {\n\t\t\t\t_this.element.appendChild(svg.childNodes[0]);\n\t\t\t}\n\t\t});\n\t\treturn _this;\n\t}\n\n\treturn IconView;\n}(_view2.default);\n\nexports.default = IconView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-ui/src/icon/iconview.js\n// module id = 381\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _view = require('../view');\n\nvar _view2 = _interopRequireDefault(_view);\n\nvar _template = require('../template');\n\nvar _template2 = _interopRequireDefault(_template);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module ui/label/labelview\n */\n\n/**\n * The label view class.\n *\n * @extends module:ui/view~View\n */\nvar LabelView = function (_View) {\n\t_inherits(LabelView, _View);\n\n\t/**\n  * @inheritDoc\n  */\n\tfunction LabelView(locale) {\n\t\t_classCallCheck(this, LabelView);\n\n\t\t/**\n   * The text of the label.\n   *\n   * @observable\n   * @member {String} #text\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (LabelView.__proto__ || Object.getPrototypeOf(LabelView)).call(this, locale));\n\n\t\t_this.set('text');\n\n\t\t/**\n   * The `for` attribute of the label (i.e. to pair with an `<input>` element).\n   *\n   * @observable\n   * @member {String} #for\n   */\n\t\t_this.set('for');\n\n\t\tvar bind = _this.bindTemplate;\n\n\t\t_this.template = new _template2.default({\n\t\t\ttag: 'label',\n\t\t\tattributes: {\n\t\t\t\tclass: ['ck-label'],\n\t\t\t\tfor: bind.to('for')\n\t\t\t},\n\t\t\tchildren: [{\n\t\t\t\ttext: bind.to('text')\n\t\t\t}]\n\t\t});\n\t\treturn _this;\n\t}\n\n\treturn LabelView;\n}(_view2.default);\n\nexports.default = LabelView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-ui/src/label/labelview.js\n// module id = 382\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _view = require('../view');\n\nvar _view2 = _interopRequireDefault(_view);\n\nvar _template = require('../template');\n\nvar _template2 = _interopRequireDefault(_template);\n\nvar _keystrokehandler = require('@ckeditor/ckeditor5-utils/src/keystrokehandler');\n\nvar _keystrokehandler2 = _interopRequireDefault(_keystrokehandler);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module ui/list/listitemview\n */\n\n/**\n * The list item view class.\n *\n * @extends module:ui/view~View\n */\nvar ListItemView = function (_View) {\n\t_inherits(ListItemView, _View);\n\n\t/**\n  * @inheritDoc\n  */\n\tfunction ListItemView() {\n\t\t_classCallCheck(this, ListItemView);\n\n\t\t/**\n   * Controls the `tabindex` attribute of the item.\n   *\n   * @observable\n   * @default -1\n   * @member {String} #tabindex\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (ListItemView.__proto__ || Object.getPrototypeOf(ListItemView)).call(this));\n\n\t\t_this.set('tabindex', -1);\n\n\t\t/**\n   * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n   *\n   * @readonly\n   * @member {module:utils/keystrokehandler~KeystrokeHandler}\n   */\n\t\t_this.keystrokes = new _keystrokehandler2.default();\n\n\t\tvar bind = _this.bindTemplate;\n\n\t\t_this.template = new _template2.default({\n\t\t\ttag: 'li',\n\n\t\t\tattributes: {\n\t\t\t\tclass: ['ck-list__item', bind.to('class'), bind.if('isActive', 'ck-list__item_active')],\n\t\t\t\tstyle: bind.to('style'),\n\t\t\t\ttabindex: bind.to('tabindex')\n\t\t\t},\n\n\t\t\tchildren: [{\n\t\t\t\ttext: bind.to('label')\n\t\t\t}],\n\n\t\t\ton: {\n\t\t\t\tclick: bind.to('execute')\n\t\t\t}\n\t\t});\n\n\t\t/**\n   * The label of the list item.\n   *\n   * @observable\n   * @member {String} #label\n   */\n\n\t\t/**\n   * (Optional) The DOM style attribute of the list item.\n   *\n   * @observable\n   * @member {String} #style\n   */\n\n\t\t/**\n   * (Optional) The additional class set on the {@link #element}.\n   *\n   * @observable\n   * @member {String} #class\n   */\n\n\t\t/**\n   * (Optional) When set, it marks the item as active among the others.\n   *\n   * @observable\n   * @member {Boolean} #isActive\n   */\n\n\t\t/**\n   * Fired when the list item has been clicked.\n   *\n   * @event #execute\n   */\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(ListItemView, [{\n\t\tkey: 'init',\n\t\tvalue: function init() {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar onKeystrokePress = function onKeystrokePress(data, cancel) {\n\t\t\t\t_this2.fire('execute');\n\t\t\t\tcancel();\n\t\t\t};\n\n\t\t\tthis.keystrokes.listenTo(this.element);\n\n\t\t\t// Execute on Enter and Space key press.\n\t\t\tthis.keystrokes.set('Enter', onKeystrokePress);\n\t\t\tthis.keystrokes.set('Space', onKeystrokePress);\n\t\t}\n\n\t\t/**\n   * Focuses the list item.\n   */\n\n\t}, {\n\t\tkey: 'focus',\n\t\tvalue: function focus() {\n\t\t\tthis.element.focus();\n\t\t}\n\t}]);\n\n\treturn ListItemView;\n}(_view2.default);\n\nexports.default = ListItemView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-ui/src/list/listitemview.js\n// module id = 383\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _view = require('../view');\n\nvar _view2 = _interopRequireDefault(_view);\n\nvar _template = require('../template');\n\nvar _template2 = _interopRequireDefault(_template);\n\nvar _focustracker = require('@ckeditor/ckeditor5-utils/src/focustracker');\n\nvar _focustracker2 = _interopRequireDefault(_focustracker);\n\nvar _focuscycler = require('../focuscycler');\n\nvar _focuscycler2 = _interopRequireDefault(_focuscycler);\n\nvar _keystrokehandler = require('@ckeditor/ckeditor5-utils/src/keystrokehandler');\n\nvar _keystrokehandler2 = _interopRequireDefault(_keystrokehandler);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module ui/list/listview\n */\n\n/**\n * The list view class.\n *\n * @extends module:ui/view~View\n */\nvar ListView = function (_View) {\n\t_inherits(ListView, _View);\n\n\t/**\n  * @inheritDoc\n  */\n\tfunction ListView() {\n\t\t_classCallCheck(this, ListView);\n\n\t\t/**\n   * Collection of the child list views.\n   *\n   * @readonly\n   * @member {module:ui/viewcollection~ViewCollection}\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (ListView.__proto__ || Object.getPrototypeOf(ListView)).call(this));\n\n\t\t_this.items = _this.createCollection();\n\n\t\t/**\n   * Tracks information about DOM focus in the list.\n   *\n   * @readonly\n   * @member {module:utils/focustracker~FocusTracker}\n   */\n\t\t_this.focusTracker = new _focustracker2.default();\n\n\t\t/**\n   * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n   *\n   * @readonly\n   * @member {module:utils/keystrokehandler~KeystrokeHandler}\n   */\n\t\t_this.keystrokes = new _keystrokehandler2.default();\n\n\t\t/**\n   * Helps cycling over focusable {@link #items} in the list.\n   *\n   * @readonly\n   * @protected\n   * @member {module:ui/focuscycler~FocusCycler}\n   */\n\t\t_this._focusCycler = new _focuscycler2.default({\n\t\t\tfocusables: _this.items,\n\t\t\tfocusTracker: _this.focusTracker,\n\t\t\tkeystrokeHandler: _this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate list items backwards using the arrowup key.\n\t\t\t\tfocusPrevious: 'arrowup',\n\n\t\t\t\t// Navigate toolbar items forwards using the arrowdown key.\n\t\t\t\tfocusNext: 'arrowdown'\n\t\t\t}\n\t\t});\n\n\t\t_this.template = new _template2.default({\n\t\t\ttag: 'ul',\n\n\t\t\tattributes: {\n\t\t\t\tclass: ['ck-reset', 'ck-list']\n\t\t\t},\n\n\t\t\tchildren: _this.items\n\t\t});\n\n\t\t_this.items.on('add', function (evt, item) {\n\t\t\t_this.focusTracker.add(item.element);\n\t\t});\n\n\t\t_this.items.on('remove', function (evt, item) {\n\t\t\t_this.focusTracker.remove(item.element);\n\t\t});\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(ListView, [{\n\t\tkey: 'init',\n\t\tvalue: function init() {\n\t\t\t// Start listening for the keystrokes coming from #element.\n\t\t\tthis.keystrokes.listenTo(this.element);\n\n\t\t\t_get(ListView.prototype.__proto__ || Object.getPrototypeOf(ListView.prototype), 'init', this).call(this);\n\t\t}\n\n\t\t/**\n   * Focuses the first focusable in {@link #items}.\n   */\n\n\t}, {\n\t\tkey: 'focus',\n\t\tvalue: function focus() {\n\t\t\tthis._focusCycler.focusFirst();\n\t\t}\n\n\t\t/**\n   * Focuses the last focusable in {@link #items}.\n   */\n\n\t}, {\n\t\tkey: 'focusLast',\n\t\tvalue: function focusLast() {\n\t\t\tthis._focusCycler.focusLast();\n\t\t}\n\t}]);\n\n\treturn ListView;\n}(_view2.default);\n\nexports.default = ListView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-ui/src/list/listview.js\n// module id = 384\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _extend = require('@ckeditor/ckeditor5-utils/src/lib/lodash/extend');\n\nvar _extend2 = _interopRequireDefault(_extend);\n\nvar _mix = require('@ckeditor/ckeditor5-utils/src/mix');\n\nvar _mix2 = _interopRequireDefault(_mix);\n\nvar _observablemixin = require('@ckeditor/ckeditor5-utils/src/observablemixin');\n\nvar _observablemixin2 = _interopRequireDefault(_observablemixin);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n                                                                                                                                                           * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                           * For licensing, see LICENSE.md.\n                                                                                                                                                           */\n\n/**\n * @module ui/model\n */\n\n/**\n * The base MVC model class.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nvar Model =\n/**\n * Creates a new Model instance.\n *\n * @param {Object} [attributes] The model state attributes to be defined during the instance creation.\n * @param {Object} [properties] The (out of state) properties to be appended to the instance during creation.\n */\nfunction Model(attributes, properties) {\n\t_classCallCheck(this, Model);\n\n\t// Extend this instance with the additional (out of state) properties.\n\tif (properties) {\n\t\t(0, _extend2.default)(this, properties);\n\t}\n\n\t// Initialize the attributes.\n\tif (attributes) {\n\t\tthis.set(attributes);\n\t}\n};\n\nexports.default = Model;\n\n\n(0, _mix2.default)(Model, _observablemixin2.default);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-ui/src/model.js\n// module id = 385\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = enableToolbarKeyboardFocus;\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/toolbar/enabletoolbarkeyboardfocus\n */\n\n/**\n * Enables focus/blur toolbar navigation using `Alt+F10` and `Esc` keystrokes.\n *\n * @param {Object} options Options of the utility.\n * @param {*} options.origin A view to which the focus will return when `Esc` is pressed and\n * `options.toolbar` is focused.\n * @param {module:utils/keystrokehandler~KeystrokeHandler} options.originKeystrokeHandler A keystroke\n * handler to register `Alt+F10` keystroke.\n * @param {module:utils/focustracker~FocusTracker} options.originFocusTracker A focus tracker\n * for `options.origin`.\n * @param {module:ui/toolbar/toolbarview~ToolbarView} options.toolbar A toolbar which is to gain\n * focus when `Alt+F10` is pressed.\n * @param {Function} [options.beforeFocus] A callback executed before the `options.toolbar` gains focus\n * upon the `Alt+F10` keystroke.\n * @param {Function} [options.afterBlur] A callback executed after `options.toolbar` loses focus upon\n * `Esc` keystroke but before the focus goes back to `options.origin`.\n */\nfunction enableToolbarKeyboardFocus(_ref) {\n\tvar origin = _ref.origin,\n\t    originKeystrokeHandler = _ref.originKeystrokeHandler,\n\t    originFocusTracker = _ref.originFocusTracker,\n\t    toolbar = _ref.toolbar,\n\t    beforeFocus = _ref.beforeFocus,\n\t    afterBlur = _ref.afterBlur;\n\n\t// Because toolbar items can get focus, the overall state of the toolbar must\n\t// also be tracked.\n\toriginFocusTracker.add(toolbar.element);\n\n\t// Focus the toolbar on the keystroke, if not already focused.\n\toriginKeystrokeHandler.set('Alt+F10', function (data, cancel) {\n\t\tif (originFocusTracker.isFocused && !toolbar.focusTracker.isFocused) {\n\t\t\tif (beforeFocus) {\n\t\t\t\tbeforeFocus();\n\t\t\t}\n\n\t\t\ttoolbar.focus();\n\n\t\t\tcancel();\n\t\t}\n\t});\n\n\t// Blur the toolbar and bring the focus back to origin.\n\ttoolbar.keystrokes.set('Esc', function (data, cancel) {\n\t\tif (toolbar.focusTracker.isFocused) {\n\t\t\torigin.focus();\n\n\t\t\tif (afterBlur) {\n\t\t\t\tafterBlur();\n\t\t\t}\n\n\t\t\tcancel();\n\t\t}\n\t});\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-ui/src/toolbar/enabletoolbarkeyboardfocus.js\n// module id = 386\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = normalizeToolbarConfig;\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/toolbar/normalizetoolbarconfig\n */\n\n/**\n * Normalizes the toolbar configuration (`config.toolbar`), which may be defined as an `Array`:\n *\n * \t\ttoolbar: [ 'headings', 'bold', 'italic', 'link', 'unlink', ... ]\n *\n * or an `Object`:\n *\n *\t\ttoolbar: {\n *\t\t\titems: [ 'headings', 'bold', 'italic', 'link', 'unlink', ... ],\n *\t\t\t...\n *\t\t}\n *\n * and returns it in the object form.\n *\n * @param {Array|Object} config The value of `config.toolbar`.\n * @returns {Object} A normalized toolbar config object.\n */\nfunction normalizeToolbarConfig(config) {\n  if (Array.isArray(config)) {\n    config = {\n      items: config\n    };\n  }\n\n  return config;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-ui/src/toolbar/normalizetoolbarconfig.js\n// module id = 387\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _global = require('@ckeditor/ckeditor5-utils/src/dom/global');\n\nvar _global2 = _interopRequireDefault(_global);\n\nvar _template = require('../../template');\n\nvar _template2 = _interopRequireDefault(_template);\n\nvar _toolbarview = require('../toolbarview');\n\nvar _toolbarview2 = _interopRequireDefault(_toolbarview);\n\nvar _tounit = require('@ckeditor/ckeditor5-utils/src/dom/tounit');\n\nvar _tounit2 = _interopRequireDefault(_tounit);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module ui/toolbar/sticky/stickytoolbarview\n */\n\nvar toPx = (0, _tounit2.default)('px');\n\n/**\n * The sticky toolbar view class.\n *\n * @extends module:ui/toolbar/toolbarview~ToolbarView\n */\n\nvar StickyToolbarView = function (_ToolbarView) {\n\t_inherits(StickyToolbarView, _ToolbarView);\n\n\t/**\n  * @inheritDoc\n  */\n\tfunction StickyToolbarView(locale) {\n\t\t_classCallCheck(this, StickyToolbarView);\n\n\t\tvar _this = _possibleConstructorReturn(this, (StickyToolbarView.__proto__ || Object.getPrototypeOf(StickyToolbarView)).call(this, locale));\n\n\t\tvar bind = _this.bindTemplate;\n\n\t\t/**\n   * Controls whether the sticky toolbar should be active. When any editable\n   * is focused in the editor, toolbar becomes active.\n   *\n   * @readonly\n   * @observable\n   * @member {Boolean} #isActive\n   */\n\t\t_this.set('isActive', false);\n\n\t\t/**\n   * Controls whether the sticky toolbar is in the \"sticky\" state.\n   *\n   * @readonly\n   * @observable\n   * @member {Boolean} #isSticky\n   */\n\t\t_this.set('isSticky', false);\n\n\t\t/**\n   * The limiter element for the sticky toolbar instance. Its bounding rect limits\n   * the \"stickyness\" of the toolbar, i.e. when the toolbar reaches the bottom\n   * edge of the limiter, it becomes sticky to that edge and does not float\n   * off the limiter. It is mandatory for the toolbar to work properly and once\n   * set, it cannot be changed.\n   *\n   * @readonly\n   * @observable\n   * @member {HTMLElement} #limiterElement\n   */\n\t\t_this.set('limiterElement', null);\n\n\t\t/**\n   * The offset from the bottom edge of {@link #limiterElement}\n   * which stops the toolbar from stickying any further to prevent limiter's content\n   * from being completely covered.\n   *\n   * @readonly\n   * @observable\n   * @default 50\n   * @member {Number} #limiterBottomOffset\n   */\n\t\t_this.set('limiterBottomOffset', 50);\n\n\t\t/**\n   * The offset from the top edge of the web browser's viewport which makes the\n   * toolbar become sticky. The default value is `0`, which means the toolbar becomes\n   * sticky when it's upper edge touches the top of the page viewport.\n   *\n   * This attribute is useful when the web page has UI elements positioned to the top\n   * either using `position: fixed` or `position: sticky`, which would cover the\n   * sticky toolbar or vice–versa (depending on the `z-index` hierarchy).\n   *\n   * @readonly\n   * @observable\n   * @default 0\n   * @member {Number} #viewportTopOffset\n   */\n\t\t_this.set('viewportTopOffset', 0);\n\n\t\t/**\n   * Controls the `margin-left` CSS style of the toolbar.\n   *\n   * @protected\n   * @readonly\n   * @observable\n   * @member {String} #_marginLeft\n   */\n\t\t_this.set('_marginLeft', null);\n\n\t\t/**\n   * Set `true` if the sticky toolbar reached the bottom edge of the\n   * {@link #limiterElement}.\n   *\n   * @protected\n   * @readonly\n   * @observable\n   * @member {Boolean} #_isStickyToTheLimiter\n   */\n\t\t_this.set('_isStickyToTheLimiter', false);\n\n\t\t/**\n   * Set `true` if the sticky toolbar uses the {@link #viewportTopOffset},\n   * i.e. not {@link #_isStickyToTheLimiter} and the {@link #viewportTopOffset}\n   * is not `0`.\n   *\n   * @protected\n   * @readonly\n   * @observable\n   * @member {Boolean} #_hasViewportTopOffset\n   */\n\t\t_this.set('_hasViewportTopOffset', false);\n\n\t\t/**\n   * The DOM bounding client rect of the {@link module:ui/view~View#element} of the toolbar.\n   *\n   * @protected\n   * @member {Object} #_toolbarRect\n   */\n\n\t\t/**\n   * The DOM bounding client rect of the {@link #limiterElement}\n   * of the toolbar.\n   *\n   * @protected\n   * @member {Object} #_limiterRect\n   */\n\n\t\t_template2.default.extend(_this.template, {\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t// Toggle class of the toolbar when \"sticky\" state changes in the view.\n\t\t\t\tbind.if('isSticky', 'ck-toolbar_sticky'), bind.if('_isStickyToTheLimiter', 'ck-toolbar_sticky_bottom-limit')],\n\t\t\t\tstyle: {\n\t\t\t\t\twidth: bind.to('isSticky', function (isSticky) {\n\t\t\t\t\t\treturn isSticky ? toPx(_this._elementPlaceholder.getBoundingClientRect().width) : null;\n\t\t\t\t\t}),\n\n\t\t\t\t\ttop: bind.to('_hasViewportTopOffset', function (_hasViewportTopOffset) {\n\t\t\t\t\t\treturn _hasViewportTopOffset ? toPx(_this.viewportTopOffset) : null;\n\t\t\t\t\t}),\n\n\t\t\t\t\tbottom: bind.to('_isStickyToTheLimiter', function (_isStickyToTheLimiter) {\n\t\t\t\t\t\treturn _isStickyToTheLimiter ? toPx(_this.limiterBottomOffset) : null;\n\t\t\t\t\t}),\n\n\t\t\t\t\tmarginLeft: bind.to('_marginLeft')\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t/**\n   * A dummy element which visually fills the space as long as the\n   * actual toolbar is sticky. It prevents flickering of the UI.\n   *\n   * @private\n   * @property {HTMLElement}\n   */\n\t\t_this._elementPlaceholder = new _template2.default({\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: ['ck-toolbar__placeholder'],\n\t\t\t\tstyle: {\n\t\t\t\t\tdisplay: bind.to('isSticky', function (isSticky) {\n\t\t\t\t\t\treturn isSticky ? 'block' : 'none';\n\t\t\t\t\t}),\n\t\t\t\t\theight: bind.to('isSticky', function (isSticky) {\n\t\t\t\t\t\treturn isSticky ? toPx(_this._toolbarRect.height) : null;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}).render();\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(StickyToolbarView, [{\n\t\tkey: 'init',\n\t\tvalue: function init() {\n\t\t\tvar _this2 = this;\n\n\t\t\t_get(StickyToolbarView.prototype.__proto__ || Object.getPrototypeOf(StickyToolbarView.prototype), 'init', this).call(this);\n\n\t\t\tthis.element.parentNode.insertBefore(this._elementPlaceholder, this.element);\n\n\t\t\t// Check if the toolbar should go into the sticky state immediately.\n\t\t\tthis._checkIfShouldBeSticky();\n\n\t\t\t// Update sticky state of the toolbar as the window is being scrolled.\n\t\t\tthis.listenTo(_global2.default.window, 'scroll', function () {\n\t\t\t\t_this2._checkIfShouldBeSticky();\n\t\t\t});\n\n\t\t\t// Synchronize with `model.isActive` because sticking an inactive toolbar is pointless.\n\t\t\tthis.listenTo(this, 'change:isActive', function () {\n\t\t\t\t_this2._checkIfShouldBeSticky();\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * Destroys the toolbar and removes the {@link #_elementPlaceholder}.\n   */\n\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {\n\t\t\t_get(StickyToolbarView.prototype.__proto__ || Object.getPrototypeOf(StickyToolbarView.prototype), 'destroy', this).call(this);\n\t\t\tthis._elementPlaceholder.remove();\n\t\t}\n\n\t\t/**\n   * Analyzes the environment to decide whether the toolbar should\n   * be sticky or not.\n   *\n   * @protected\n   */\n\n\t}, {\n\t\tkey: '_checkIfShouldBeSticky',\n\t\tvalue: function _checkIfShouldBeSticky() {\n\t\t\tvar limiterRect = this._limiterRect = this.limiterElement.getBoundingClientRect();\n\t\t\tvar toolbarRect = this._toolbarRect = this.element.getBoundingClientRect();\n\n\t\t\t// The toolbar must be active to become sticky.\n\t\t\tthis.isSticky = this.isActive &&\n\t\t\t// The limiter's top edge must be beyond the upper edge of the visible viewport (+the viewportTopOffset).\n\t\t\tlimiterRect.top < this.viewportTopOffset &&\n\t\t\t// The model#limiterElement's height mustn't be smaller than the toolbar's height and model#limiterBottomOffset.\n\t\t\t// There's no point in entering the sticky mode if the model#limiterElement is very, very small, because\n\t\t\t// it would immediately set model#_isStickyToTheLimiter true and, given model#limiterBottomOffset, the toolbar\n\t\t\t// would be positioned before the model#limiterElement.\n\t\t\tthis._toolbarRect.height + this.limiterBottomOffset < limiterRect.height;\n\n\t\t\t// Stick the toolbar to the top edge of the viewport simulating CSS position:sticky.\n\t\t\t// TODO: Possibly replaced by CSS in the future http://caniuse.com/#feat=css-sticky\n\t\t\tif (this.isSticky) {\n\t\t\t\tthis._isStickyToTheLimiter = limiterRect.bottom < toolbarRect.height + this.limiterBottomOffset + this.viewportTopOffset;\n\t\t\t\tthis._hasViewportTopOffset = !this._isStickyToTheLimiter && !!this.viewportTopOffset;\n\t\t\t\tthis._marginLeft = this._isStickyToTheLimiter ? null : toPx(-_global2.default.window.scrollX);\n\t\t\t}\n\t\t\t// Detach the toolbar from the top edge of the viewport.\n\t\t\telse {\n\t\t\t\t\tthis._isStickyToTheLimiter = false;\n\t\t\t\t\tthis._hasViewportTopOffset = false;\n\t\t\t\t\tthis._marginLeft = null;\n\t\t\t\t}\n\t\t}\n\t}]);\n\n\treturn StickyToolbarView;\n}(_toolbarview2.default);\n\nexports.default = StickyToolbarView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-ui/src/toolbar/sticky/stickytoolbarview.js\n// module id = 388\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _view = require('../view');\n\nvar _view2 = _interopRequireDefault(_view);\n\nvar _template = require('../template');\n\nvar _template2 = _interopRequireDefault(_template);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module ui/toolbar/toolbarseparatorview\n */\n\n/**\n * The toolbar separator view class.\n *\n * @extends module:ui/view~View\n */\nvar ToolbarSeparatorView = function (_View) {\n\t_inherits(ToolbarSeparatorView, _View);\n\n\t/**\n  * @inheritDoc\n  */\n\tfunction ToolbarSeparatorView(locale) {\n\t\t_classCallCheck(this, ToolbarSeparatorView);\n\n\t\tvar _this = _possibleConstructorReturn(this, (ToolbarSeparatorView.__proto__ || Object.getPrototypeOf(ToolbarSeparatorView)).call(this, locale));\n\n\t\t_this.template = new _template2.default({\n\t\t\ttag: 'span',\n\t\t\tattributes: {\n\t\t\t\tclass: ['ck-toolbar__separator']\n\t\t\t}\n\t\t});\n\t\treturn _this;\n\t}\n\n\treturn ToolbarSeparatorView;\n}(_view2.default);\n\nexports.default = ToolbarSeparatorView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-ui/src/toolbar/toolbarseparatorview.js\n// module id = 389\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _view = require('../view');\n\nvar _view2 = _interopRequireDefault(_view);\n\nvar _template = require('../template');\n\nvar _template2 = _interopRequireDefault(_template);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module ui/tooltip/tooltipview\n */\n\n/**\n * The tooltip view class.\n *\n * @extends module:ui/view~View\n */\nvar TooltipView = function (_View) {\n\t_inherits(TooltipView, _View);\n\n\t/**\n  * @inheritDoc\n  */\n\tfunction TooltipView(locale) {\n\t\t_classCallCheck(this, TooltipView);\n\n\t\t/**\n   * The text of the tooltip visible to the user.\n   *\n   * @observable\n   * @member {String} #text\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (TooltipView.__proto__ || Object.getPrototypeOf(TooltipView)).call(this, locale));\n\n\t\t_this.set('text', '');\n\n\t\t/**\n   * The position of the tooltip (south or north).\n   *\n   *\t\t+-----------+\n   *\t\t|   north   |\n   *\t\t+-----------+\n   *\t\t      V\n   *\t\t  [element]\n   *\n   *\t\t  [element]\n   *\t\t      ^\n   *\t\t+-----------+\n   *\t\t|   south   |\n   *\t\t+-----------+\n   *\n   * @observable\n   * @default 's'\n   * @member {'s'|'n'} #position\n   */\n\t\t_this.set('position', 's');\n\n\t\tvar bind = _this.bindTemplate;\n\n\t\t_this.template = new _template2.default({\n\t\t\ttag: 'span',\n\t\t\tattributes: {\n\t\t\t\tclass: ['ck-tooltip', bind.to('position', function (position) {\n\t\t\t\t\treturn 'ck-tooltip_' + position;\n\t\t\t\t}), bind.if('text', 'ck-hidden', function (value) {\n\t\t\t\t\treturn !value.trim();\n\t\t\t\t})]\n\t\t\t},\n\t\t\tchildren: [{\n\t\t\t\ttag: 'span',\n\n\t\t\t\tattributes: {\n\t\t\t\t\tclass: ['ck-tooltip__text']\n\t\t\t\t},\n\n\t\t\t\tchildren: [{\n\t\t\t\t\ttext: bind.to('text')\n\t\t\t\t}]\n\t\t\t}]\n\t\t});\n\t\treturn _this;\n\t}\n\n\treturn TooltipView;\n}(_view2.default);\n\nexports.default = TooltipView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-ui/src/tooltip/tooltipview.js\n// module id = 390\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _basecommand = require('./basecommand');\n\nvar _basecommand2 = _interopRequireDefault(_basecommand);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module undo/redocommand\n */\n\n/**\n * The redo command stores {@link module:engine/model/batch~Batch batches} that were used to undo a batch by\n * {@link module:undo/undocommand~UndoCommand}. It is able to redo a previously undone batch by reversing the undoing\n * batches created by `UndoCommand`. The reversed batch is transformed by all the batches from\n * {@link module:engine/model/document~Document#history history} that happened after the reversed undo batch.\n *\n * The redo command also takes care of restoring the {@link module:engine/model/document~Document#selection document selection}.\n *\n * @extends module:undo/basecommand~BaseCommand\n */\nvar RedoCommand = function (_BaseCommand) {\n\t_inherits(RedoCommand, _BaseCommand);\n\n\tfunction RedoCommand() {\n\t\t_classCallCheck(this, RedoCommand);\n\n\t\treturn _possibleConstructorReturn(this, (RedoCommand.__proto__ || Object.getPrototypeOf(RedoCommand)).apply(this, arguments));\n\t}\n\n\t_createClass(RedoCommand, [{\n\t\tkey: 'execute',\n\n\t\t/**\n   * Executes the command. This method reverts the last {@link module:engine/model/batch~Batch batch} added to\n   * the command's stack, applies the reverted and transformed version on the\n   * {@link module:engine/model/document~Document document} and removes the batch from the stack.\n   * Then, it restores the {@link module:engine/model/document~Document#selection document selection}.\n   *\n   * @fires execute\n   */\n\t\tvalue: function execute() {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar item = this._stack.pop();\n\n\t\t\t// All changes have to be done in one `enqueueChanges` callback so other listeners will not\n\t\t\t// step between consecutive deltas, or won't do changes to the document before selection is properly restored.\n\t\t\tthis.editor.document.enqueueChanges(function () {\n\t\t\t\tvar lastDelta = item.batch.deltas[item.batch.deltas.length - 1];\n\t\t\t\tvar nextBaseVersion = lastDelta.baseVersion + lastDelta.operations.length;\n\t\t\t\tvar deltas = _this2.editor.document.history.getDeltas(nextBaseVersion);\n\n\t\t\t\t_this2._restoreSelection(item.selection.ranges, item.selection.isBackward, deltas);\n\t\t\t\t_this2._undo(item.batch);\n\t\t\t});\n\n\t\t\tthis.refresh();\n\t\t}\n\t}]);\n\n\treturn RedoCommand;\n}(_basecommand2.default);\n\nexports.default = RedoCommand;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-undo/src/redocommand.js\n// module id = 391\n// module chunks = 0","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if ('value' in descriptor)\n                descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }\n    return function (Constructor, protoProps, staticProps) {\n        if (protoProps)\n            defineProperties(Constructor.prototype, protoProps);\n        if (staticProps)\n            defineProperties(Constructor, staticProps);\n        return Constructor;\n    };\n}();\nvar _plugin = require('@ckeditor/ckeditor5-core/src/plugin');\nvar _plugin2 = _interopRequireDefault(_plugin);\nvar _undoengine = require('./undoengine');\nvar _undoengine2 = _interopRequireDefault(_undoengine);\nvar _buttonview = require('@ckeditor/ckeditor5-ui/src/button/buttonview');\nvar _buttonview2 = _interopRequireDefault(_buttonview);\nvar _undo = require('../theme/icons/undo.svg');\nvar _undo2 = _interopRequireDefault(_undo);\nvar _redo = require('../theme/icons/redo.svg');\nvar _redo2 = _interopRequireDefault(_redo);\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError('Cannot call a class as a function');\n    }\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n    }\n    return call && (typeof call === 'object' || typeof call === 'function') ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n        throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass)\n        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n/**\n * @module undo/undo\n */\n/**\n * The undo feature. It introduces the Undo and Redo buttons to the editor.\n *\n * Below is the explanation of the undo mechanism working together with {@link module:engine/model/history~History History}:\n *\n * Whenever a {@link module:engine/model/delta/delta~Delta delta} is applied to the\n * {@link module:engine/model/document~Document document}, it is saved to `History` as is.\n * The {@link module:engine/model/batch~Batch batch} that owns that delta is also saved, in\n * {@link module:undo/undocommand~UndoCommand}, together with the selection that was present in the document before the\n * delta was applied. A batch is saved instead of the delta because changes are undone batch-by-batch, not delta-by-delta\n * and a batch is seen as one undo step.\n *\n * After some changes happen to the document, the `History` and `UndoCommand` stack can be represented as follows:\n *\n *\t\t  History                           Undo stack\n *\t\t===========             ==================================\n *\t\t[delta A1]                          [batch A]\n *\t\t[delta B1]                          [batch B]\n *\t\t[delta B2]                          [batch C]\n *\t\t[delta C1]\n *\t\t[delta C2]\n *\t\t[delta B3]\n *\t\t[delta C3]\n *\n * Where deltas starting with the same letter are from same batch.\n *\n * Undoing a batch means that a set of deltas which will reverse the effects of that batch needs to be generated. For example, if a batch\n * added several letters, undoing the batch should remove them. It is important to apply undoing deltas in the reversed order,\n * so if a batch has delta `X`, `Y`, `Z`, reversed deltas `Zr`, `Yr` and `Xr` need to be applied. Otherwise reversed delta\n * `Xr` would operate on a wrong document state, because delta `X` does not know that deltas `Y` and `Z` happened.\n *\n * After deltas from an undone batch got {@link module:engine/model/delta/delta~Delta#getReversed reversed},\n * one needs to make sure if they are ready to be applied. In the scenario above, delta `C3` is the last delta and `C3r`\n * bases on up-to-date document state, so it can be applied to the document.\n *\n *\t\t  History                           Undo stack\n *\t\t=============             ==================================\n *\t\t[ delta A1  ]                      [  batch A  ]\n *\t\t[ delta B1  ]                      [  batch B  ]\n *\t\t[ delta B2  ]             [   processing undoing batch C   ]\n *\t\t[ delta C1  ]\n *\t\t[ delta C2  ]\n *\t\t[ delta B3  ]\n *\t\t[ delta C3  ]\n *\t\t[ delta C3r ]\n *\n * Next is delta `C2`, reversed to `C2r`. `C2r` bases on `C2`, so it bases on the wrong document state. It needs to be\n * transformed by deltas from history that happened after it, so it \"knows\" about them. Let us assume that `C2' = C2r * B3 * C3 * C3r`,\n * where `*` means \"transformed by\". Rest of deltas from that batch are processed in the same fashion.\n *\n *\t\t  History                           Undo stack                                     Redo stack\n *\t\t=============             ==================================             ==================================\n *\t\t[ delta A1  ]                      [  batch A  ]                                  [ batch Cr ]\n *\t\t[ delta B1  ]                      [  batch B  ]\n *\t\t[ delta B2  ]\n *\t\t[ delta C1  ]\n *\t\t[ delta C2  ]\n *\t\t[ delta B3  ]\n *\t\t[ delta C3  ]\n *\t\t[ delta C3r ]\n *\t\t[ delta C2' ]\n *\t\t[ delta C1' ]\n *\n * Selective undo works on the same basis, however, instead of undoing the last batch in the undo stack, any batch can be undone.\n * The same algorithm applies: deltas from a batch (i.e. `A1`) are reversed and then transformed by deltas stored in history.\n *\n * Redo also is very similar to undo. It has its own stack that is filled with undoing (reversed batches). Deltas from\n * batch that is re-done are reversed-back, transformed in proper order and applied to the document.\n *\n *\t\t  History                           Undo stack                                     Redo stack\n *\t\t=============             ==================================             ==================================\n *\t\t[ delta A1  ]                      [  batch A  ]\n *\t\t[ delta B1  ]                      [  batch B  ]\n *\t\t[ delta B2  ]                      [ batch Crr ]\n *\t\t[ delta C1  ]\n *\t\t[ delta C2  ]\n *\t\t[ delta B3  ]\n *\t\t[ delta C3  ]\n *\t\t[ delta C3r ]\n *\t\t[ delta C2' ]\n *\t\t[ delta C1' ]\n *\t\t[ delta C1'r]\n *\t\t[ delta C2'r]\n *\t\t[ delta C3rr]\n *\n * @extends module:core/plugin~Plugin\n */\nvar Undo = function (_Plugin) {\n    _inherits(Undo, _Plugin);\n    function Undo() {\n        _classCallCheck(this, Undo);\n        return _possibleConstructorReturn(this, (Undo.__proto__ || Object.getPrototypeOf(Undo)).apply(this, arguments));\n    }\n    _createClass(Undo, [\n        {\n            key: 'init',\n            /**\n     * @inheritDoc\n     */\n            value: function init() {\n                var editor = this.editor;\n                var t = editor.t;\n                this._addButton('undo', t('Undo'), 'CTRL+Z', _undo2.default);\n                this._addButton('redo', t('Redo'), 'CTRL+Y', _redo2.default);\n                editor.keystrokes.set('CTRL+Z', 'undo');\n                editor.keystrokes.set('CTRL+Y', 'redo');\n                editor.keystrokes.set('CTRL+SHIFT+Z', 'redo');\n            }    /**\n     * Creates a button for the specified command.\n     *\n     * @private\n     * @param {String} name Command name.\n     * @param {String} label Button label.\n     * @param {String} keystroke Command keystroke.\n     * @param {String} Icon Source of the icon.\n     */\n        },\n        {\n            key: '_addButton',\n            value: function _addButton(name, label, keystroke, Icon) {\n                var _this2 = this;\n                var editor = this.editor;\n                var command = editor.commands.get(name);\n                editor.ui.componentFactory.add(name, function (locale) {\n                    var view = new _buttonview2.default(locale);\n                    view.set({\n                        label: label,\n                        icon: Icon,\n                        keystroke: keystroke,\n                        tooltip: true\n                    });\n                    view.bind('isEnabled').to(command, 'isEnabled');\n                    _this2.listenTo(view, 'execute', function () {\n                        return editor.execute(name);\n                    });\n                    return view;\n                });\n            }\n        }\n    ], [\n        {\n            key: 'requires',\n            /**\n     * @inheritDoc\n     */\n            get: function get() {\n                return [_undoengine2.default];\n            }    /**\n     * @inheritDoc\n     */\n        },\n        {\n            key: 'pluginName',\n            get: function get() {\n                return 'Undo';\n            }\n        }\n    ]);\n    return Undo;\n}(_plugin2.default);\nexports.default = Undo;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-undo/src/undo.js\n// module id = 392\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _basecommand = require('./basecommand');\n\nvar _basecommand2 = _interopRequireDefault(_basecommand);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module undo/undocommand\n */\n\n/**\n * The undo command stores {@link module:engine/model/batch~Batch batches} applied to the\n * {@link module:engine/model/document~Document document} and is able to undo a batch by reversing it and transforming by\n * batches from {@link module:engine/model/document~Document#history history} that happened after the reversed batch.\n *\n * The undo command also takes care of restoring the {@link module:engine/model/document~Document#selection document selection}.\n *\n * @extends module:undo/basecommand~BaseCommand\n */\nvar UndoCommand = function (_BaseCommand) {\n\t_inherits(UndoCommand, _BaseCommand);\n\n\tfunction UndoCommand() {\n\t\t_classCallCheck(this, UndoCommand);\n\n\t\treturn _possibleConstructorReturn(this, (UndoCommand.__proto__ || Object.getPrototypeOf(UndoCommand)).apply(this, arguments));\n\t}\n\n\t_createClass(UndoCommand, [{\n\t\tkey: 'execute',\n\n\t\t/**\n   * Executes the command. This method reverts a {@link module:engine/model/batch~Batch batch} added to the command's stack, transforms\n   * and applies the reverted version on the {@link module:engine/model/document~Document document} and removes the batch from the stack.\n   * Then, it restores the {@link module:engine/model/document~Document#selection document selection}.\n   *\n   * @fires execute\n   * @fires revert\n   * @param {module:engine/model/batch~Batch} [batch] A batch that should be undone. If not set, the last added batch will be undone.\n   */\n\t\tvalue: function execute() {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar batch = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n\t\t\t// If batch is not given, set `batchIndex` to the last index in command stack.\n\t\t\tvar batchIndex = batch ? this._stack.findIndex(function (a) {\n\t\t\t\treturn a.batch == batch;\n\t\t\t}) : this._stack.length - 1;\n\n\t\t\tvar item = this._stack.splice(batchIndex, 1)[0];\n\n\t\t\t// All changes has to be done in one `enqueueChanges` callback so other listeners will not\n\t\t\t// step between consecutive deltas, or won't do changes to the document before selection is properly restored.\n\t\t\tthis.editor.document.enqueueChanges(function () {\n\t\t\t\tvar undoingBatch = _this2._undo(item.batch);\n\n\t\t\t\tvar deltas = _this2.editor.document.history.getDeltas(item.batch.baseVersion);\n\t\t\t\t_this2._restoreSelection(item.selection.ranges, item.selection.isBackward, deltas);\n\n\t\t\t\t_this2.fire('revert', item.batch, undoingBatch);\n\t\t\t});\n\n\t\t\tthis.refresh();\n\t\t}\n\t}]);\n\n\treturn UndoCommand;\n}(_basecommand2.default);\n\n/**\n * Fired when execution of the command reverts some batch.\n *\n * @event revert\n */\n\n\nexports.default = UndoCommand;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-undo/src/undocommand.js\n// module id = 393\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _plugin = require('@ckeditor/ckeditor5-core/src/plugin');\n\nvar _plugin2 = _interopRequireDefault(_plugin);\n\nvar _undocommand = require('./undocommand');\n\nvar _undocommand2 = _interopRequireDefault(_undocommand);\n\nvar _redocommand = require('./redocommand');\n\nvar _redocommand2 = _interopRequireDefault(_redocommand);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module undo/undoengine\n */\n\n/**\n * The undo engine feature.\n *\n * Undo brings in possibility to undo and redo changes done in the model by deltas through\n * the {@link module:engine/model/document~Document#batch Batch API}.\n *\n * @extends module:core/plugin~Plugin\n */\nvar UndoEngine = function (_Plugin) {\n\t_inherits(UndoEngine, _Plugin);\n\n\t/**\n  * @inheritDoc\n  */\n\tfunction UndoEngine(editor) {\n\t\t_classCallCheck(this, UndoEngine);\n\n\t\t/**\n   * The command that manages undo {@link module:engine/model/batch~Batch batches} stack (history).\n   * Created and registered during the {@link #init feature initialization}.\n   *\n   * @private\n   * @member {undo.UndoEngineCommand} #_undoCommand\n   */\n\n\t\t/**\n   * The command that manages redo {@link module:engine/model/batch~Batch batches} stack (history).\n   * Created and registered during the {@link #init feature initialization}.\n   *\n   * @private\n   * @member {undo.UndoEngineCommand} #_redoCommand\n   */\n\n\t\t/**\n   * Keeps track of which batches were registered in undo.\n   *\n   * @private\n   * @member {WeakSet.<module:engine/model/batch~Batch>}\n   */\n\t\tvar _this = _possibleConstructorReturn(this, (UndoEngine.__proto__ || Object.getPrototypeOf(UndoEngine)).call(this, editor));\n\n\t\t_this._batchRegistry = new WeakSet();\n\t\treturn _this;\n\t}\n\n\t/**\n  * @inheritDoc\n  */\n\n\n\t_createClass(UndoEngine, [{\n\t\tkey: 'init',\n\t\tvalue: function init() {\n\t\t\tvar _this2 = this;\n\n\t\t\t// Create commands.\n\t\t\tthis._undoCommand = new _undocommand2.default(this.editor);\n\t\t\tthis._redoCommand = new _redocommand2.default(this.editor);\n\n\t\t\t// Register command to the editor.\n\t\t\tthis.editor.commands.add('undo', this._undoCommand);\n\t\t\tthis.editor.commands.add('redo', this._redoCommand);\n\n\t\t\tthis.listenTo(this.editor.document, 'change', function (evt, type, changes, batch) {\n\t\t\t\t// If changes are not a part of a batch or this is not a new batch, omit those changes.\n\t\t\t\tif (_this2._batchRegistry.has(batch) || batch.type == 'transparent') {\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tif (_this2._redoCommand._createdBatches.has(batch)) {\n\t\t\t\t\t\t// If this batch comes from `redoCommand`, add it to `undoCommand` stack.\n\t\t\t\t\t\t_this2._undoCommand.addBatch(batch);\n\t\t\t\t\t} else if (!_this2._undoCommand._createdBatches.has(batch)) {\n\t\t\t\t\t\t// A default batch - these are new changes in the document, not introduced by undo feature.\n\t\t\t\t\t\t// Add them to `undoCommand` stack and clear `redoCommand` stack.\n\t\t\t\t\t\t_this2._undoCommand.addBatch(batch);\n\t\t\t\t\t\t_this2._redoCommand.clearStack();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Add the batch to the registry so it will not be processed again.\n\t\t\t\t_this2._batchRegistry.add(batch);\n\t\t\t}, { priority: 'highest' });\n\n\t\t\tthis.listenTo(this._undoCommand, 'revert', function (evt, undoneBatch, undoingBatch) {\n\t\t\t\t_this2._redoCommand.addBatch(undoingBatch);\n\t\t\t});\n\t\t}\n\t}]);\n\n\treturn UndoEngine;\n}(_plugin2.default);\n\nexports.default = UndoEngine;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-undo/src/undoengine.js\n// module id = 394\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\nn\n/**\n * @module utils/config\n */\n\nvar _isPlainObject = require('./lib/lodash/isPlainObject');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Handles a configuration dictionary.\n */\nvar Config = function () {\n\t/**\n  * Creates an instance of the {@link ~Config} class.\n  *\n  * @param {Object} [configurations] The initial configurations to be set. Usually, provided by the user.\n  * @param {Object} [defaultConfigurations] The default configurations. Usually, provided by the system.\n  */\n\tfunction Config(configurations, defaultConfigurations) {\n\t\t_classCallCheck(this, Config);\n\n\t\t/**\n   * Store for the whole configuration.\n   *\n   * @private\n   * @member {Object}\n   */\n\t\tthis._config = {};\n\n\t\t// Set default configuration.\n\t\tif (defaultConfigurations) {\n\t\t\tthis.define(defaultConfigurations);\n\t\t}\n\n\t\t// Set initial configuration.\n\t\tif (configurations) {\n\t\t\tthis._setObjectToTarget(this._config, configurations);\n\t\t}\n\t}\n\n\t/**\n  * Set configuration values.\n  *\n  * It accepts both a name/value pair or an object, which properties and values will be used to set\n  * configurations.\n  *\n  * It also accepts setting a \"deep configuration\" by using dots in the name. For example, `'resize.width'` sets\n  * the value for the `width` configuration in the `resize` subset.\n  *\n  *\t\tconfig.set( 'width', 500 );\n  *\t\tconfig.set( 'toolbar.collapsed', true );\n  *\n  *\t\t// Equivalent to:\n  *\t\tconfig.set( {\n  *\t\t\twidth: 500\n  *\t\t\ttoolbar: {\n  *\t\t\t\tcollapsed: true\n  *\t\t\t}\n  *\t\t} );\n  *\n  * Passing an object as the value will amend the configuration, not replace it.\n  *\n  *\t\tconfig.set( 'toolbar', {\n  *\t\t\tcollapsed: true,\n  *\t\t} );\n  *\n  *\t\tconfig.set( 'toolbar', {\n  *\t\t\tcolor: 'red',\n  *\t\t} );\n  *\n  *\t\tconfig.get( 'toolbar.collapsed' ); // true\n  *\t\tconfig.get( 'toolbar.color' ); // 'red'\n  *\n  * @param {String|Object} name The configuration name or an object from which take properties as\n  * configuration entries. Configuration names are case-sensitive.\n  * @param {*} value The configuration value. Used if a name is passed.\n  */\n\n\n\t_createClass(Config, [{\n\t\tkey: 'set',\n\t\tvalue: function set(name, value) {\n\t\t\tthis._setToTarget(this._config, name, value);\n\t\t}\n\n\t\t/**\n   * Does exactly the same as {@link #set} with one exception – passed configuration extends\n   * existing one, but does not overwrite already defined values.\n   *\n   * This method is supposed to be called by plugin developers to setup plugin's configurations. It would be\n   * rarely used for other needs.\n   *\n   * @param {String|Object} name The configuration name or an object from which take properties as\n   * configuration entries. Configuration names are case-sensitive.\n   * @param {*} value The configuration value. Used if a name is passed.\n   */\n\n\t}, {\n\t\tkey: 'define',\n\t\tvalue: function define(name, value) {\n\t\t\tvar isDefine = true;\n\n\t\t\tthis._setToTarget(this._config, name, value, isDefine);\n\t\t}\n\n\t\t/**\n   * Gets the value for a configuration entry.\n   *\n   *\t\tconfig.get( 'name' );\n   *\n   * Deep configurations can be retrieved by separating each part with a dot.\n   *\n   *\t\tconfig.get( 'toolbar.collapsed' );\n   *\n   * @param {String} name The configuration name. Configuration names are case-sensitive.\n   * @returns {*} The configuration value or `undefined` if the configuration entry was not found.\n   */\n\n\t}, {\n\t\tkey: 'get',\n\t\tvalue: function get(name) {\n\t\t\treturn this._getFromSource(this._config, name);\n\t\t}\n\n\t\t/**\n   * Saves passed configuration to the specified target (nested object).\n   *\n   * @private\n   * @param {Object} target Nested config object.\n   * @param {String|Object} name The configuration name or an object from which take properties as\n   * configuration entries. Configuration names are case-sensitive.\n   * @param {*} value The configuration value. Used if a name is passed.\n   * @param {Boolean} [isDefine=false] Define if passed configuration should overwrite existing one.\n   */\n\n\t}, {\n\t\tkey: '_setToTarget',\n\t\tvalue: function _setToTarget(target, name, value) {\n\t\t\tvar isDefine = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n\t\t\t// In case of an object, iterate through it and call `_setToTarget` again for each property.\n\t\t\tif ((0, _isPlainObject2.default)(name)) {\n\t\t\t\tthis._setObjectToTarget(target, name, isDefine);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// The configuration name should be split into parts if it has dots. E.g. `resize.width` -> [`resize`, `width`].\n\t\t\tvar parts = name.split('.');\n\n\t\t\t// Take the name of the configuration out of the parts. E.g. `resize.width` -> `width`.\n\t\t\tname = parts.pop();\n\n\t\t\t// Iterate over parts to check if currently stored configuration has proper structure.\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = parts[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar part = _step.value;\n\n\t\t\t\t\t// If there is no object for specified part then create one.\n\t\t\t\t\tif (!(0, _isPlainObject2.default)(target[part])) {\n\t\t\t\t\t\ttarget[part] = {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Nested object becomes a target.\n\t\t\t\t\ttarget = target[part];\n\t\t\t\t}\n\n\t\t\t\t// In case of value is an object.\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((0, _isPlainObject2.default)(value)) {\n\t\t\t\t// We take care of proper config structure.\n\t\t\t\tif (!(0, _isPlainObject2.default)(target[name])) {\n\t\t\t\t\ttarget[name] = {};\n\t\t\t\t}\n\n\t\t\t\ttarget = target[name];\n\n\t\t\t\t// And iterate through this object calling `_setToTarget` again for each property.\n\t\t\t\tthis._setObjectToTarget(target, value, isDefine);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Do nothing if we are defining configuration for non empty name.\n\t\t\tif (isDefine && typeof target[name] != 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttarget[name] = value;\n\t\t}\n\n\t\t/**\n   * Get specified configuration from specified source (nested object).\n   *\n   * @private\n   * @param {Object} source level of nested object.\n   * @param {String} name The configuration name. Configuration names are case-sensitive.\n   * @returns {*} The configuration value or `undefined` if the configuration entry was not found.\n   */\n\n\t}, {\n\t\tkey: '_getFromSource',\n\t\tvalue: function _getFromSource(source, name) {\n\t\t\t// The configuration name should be split into parts if it has dots. E.g. `resize.width` -> [`resize`, `width`].\n\t\t\tvar parts = name.split('.');\n\n\t\t\t// Take the name of the configuration out of the parts. E.g. `resize.width` -> `width`.\n\t\t\tname = parts.pop();\n\n\t\t\t// Iterate over parts to check if currently stored configuration has proper structure.\n\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\tvar _didIteratorError2 = false;\n\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator2 = parts[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\tvar part = _step2.value;\n\n\t\t\t\t\tif (!(0, _isPlainObject2.default)(source[part])) {\n\t\t\t\t\t\tsource = null;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Nested object becomes a source.\n\t\t\t\t\tsource = source[part];\n\t\t\t\t}\n\n\t\t\t\t// Always returns undefined for non existing configuration\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t_iteratorError2 = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn source ? source[name] : undefined;\n\t\t}\n\n\t\t/**\n   * Iterates through passed object and calls {@link #_setToTarget} method with object key and value for each property.\n   *\n   * @private\n   * @param {Object} target Nested config object.\n   * @param {Object} configuration Configuration data set\n   * @param {Boolean} [isDefine] Defines if passed configuration is default configuration or not.\n   */\n\n\t}, {\n\t\tkey: '_setObjectToTarget',\n\t\tvalue: function _setObjectToTarget(target, configuration, isDefine) {\n\t\t\tvar _this = this;\n\n\t\t\tObject.keys(configuration).forEach(function (key) {\n\t\t\t\t_this._setToTarget(target, key, configuration[key], isDefine);\n\t\t\t});\n\t\t}\n\t}]);\n\n\treturn Config;\n}();\n\nexports.default = Config;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/config.js\n// module id = 395\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = diffToChanges;\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/difftochanges\n */\n\n/**\n * Creates a set of changes which need to be applied to the input in order to transform\n * it into the output. This function can be used with strings or arrays.\n *\n *\t\tconst input = Array.from( 'abc' );\n *\t\tconst output = Array.from( 'xaby' );\n *\t\tconst changes = diffToChanges( diff( input, output ), output );\n *\n *\t\tchanges.forEach( change => {\n *\t\t\tif ( change.type == 'insert' ) {\n *\t\t\t\tinput.splice( change.index, 0, ...change.values );\n *\t\t\t} else if ( change.type == 'delete' ) {\n *\t\t\t\tinput.splice( change.index, change.howMany );\n *\t\t\t}\n *\t\t} );\n *\n *\t\tinput.join( '' ) == output.join( '' ); // -> true\n *\n * @param {Array.<'equal'|'insert'|'delete'>} diff Result of {@link module:utils/diff~diff}.\n * @param {String|Array} output The string or array which was passed as diff's output.\n * @returns {Array.<Object>} Set of changes (insert or delete) which need to be applied to the input\n * in order to transform it into the output.\n */\nfunction diffToChanges(diff, output) {\n\tvar changes = [];\n\tvar index = 0;\n\tvar lastOperation = void 0;\n\n\tdiff.forEach(function (change) {\n\t\tif (change == 'equal') {\n\t\t\tpushLast();\n\n\t\t\tindex++;\n\t\t} else if (change == 'insert') {\n\t\t\tif (isContinuationOf('insert')) {\n\t\t\t\tlastOperation.values.push(output[index]);\n\t\t\t} else {\n\t\t\t\tpushLast();\n\n\t\t\t\tlastOperation = {\n\t\t\t\t\ttype: 'insert',\n\t\t\t\t\tindex: index,\n\t\t\t\t\tvalues: [output[index]]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tindex++;\n\t\t} else /* if ( change == 'delete' ) */{\n\t\t\t\tif (isContinuationOf('delete')) {\n\t\t\t\t\tlastOperation.howMany++;\n\t\t\t\t} else {\n\t\t\t\t\tpushLast();\n\n\t\t\t\t\tlastOperation = {\n\t\t\t\t\t\ttype: 'delete',\n\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\thowMany: 1\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t});\n\n\tpushLast();\n\n\treturn changes;\n\n\tfunction pushLast() {\n\t\tif (lastOperation) {\n\t\t\tchanges.push(lastOperation);\n\t\t\tlastOperation = null;\n\t\t}\n\t}\n\n\tfunction isContinuationOf(expected) {\n\t\treturn lastOperation && lastOperation.type == expected;\n\t}\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/difftochanges.js\n// module id = 396\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getCommonAncestor;\n\nvar _getancestors = require('./getancestors');\n\nvar _getancestors2 = _interopRequireDefault(_getancestors);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Searches and returns the lowest common ancestor of two given nodes.\n *\n * @param {Node} nodeA First node.\n * @param {Node} nodeB Second node.\n * @returns {Node|DocumentFragment|Document|null} Lowest common ancestor of both nodes or `null` if nodes do not have a common ancestor.\n */\nfunction getCommonAncestor(nodeA, nodeB) {\n  var ancestorsA = (0, _getancestors2.default)(nodeA);\n  var ancestorsB = (0, _getancestors2.default)(nodeB);\n\n  var i = 0;\n\n  // It does not matter which array is shorter.\n  while (ancestorsA[i] == ancestorsB[i] && ancestorsA[i]) {\n    i++;\n  }\n\n  return i === 0 ? null : ancestorsA[i - 1];\n} /**\n   * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n   * For licensing, see LICENSE.md.\n   */\n\n/**\n * @module utils/dom/getcommonancestor\n */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/dom/getcommonancestor.js\n// module id = 397\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getDataFromElement;\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* globals HTMLTextAreaElement */\n\n/**\n * @module utils/dom/getdatafromelement\n */\n\n/**\n * Gets data from a given source element.\n *\n * @param {HTMLElement} el The element from which the data will be retrieved.\n * @returns {String} The data string.\n */\nfunction getDataFromElement(el) {\n  if (el instanceof HTMLTextAreaElement) {\n    return el.value;\n  }\n\n  return el.innerHTML;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/dom/getdatafromelement.js\n// module id = 398\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getPositionedAncestor;\n\nvar _global = require('./global');\n\nvar _global2 = _interopRequireDefault(_global);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * For a given element, returns the nearest ancestor element which CSS position is not \"static\".\n *\n * @param {HTMLElement} element Native DOM element to be checked.\n * @returns {HTMLElement|null}\n */\nfunction getPositionedAncestor(element) {\n  while (element && element.tagName.toLowerCase() != 'html') {\n    if (_global2.default.window.getComputedStyle(element).position != 'static') {\n      return element;\n    }\n\n    element = element.parentElement;\n  }\n\n  return null;\n} /**\n   * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n   * For licensing, see LICENSE.md.\n   */\n\n/**\n * @module utils/dom/getpositionedancestor\n */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/dom/getpositionedancestor.js\n// module id = 399\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = indexOf;\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/indexof\n */\n\n/**\n * Returns index of the node in the parent element.\n *\n * @param {Node} node Node which index is tested.\n * @returns {Number} Index of the node in the parent element. Returns 0 if node has no parent.\n */\nfunction indexOf(node) {\n  var index = 0;\n\n  while (node.previousSibling) {\n    node = node.previousSibling;\n    index++;\n  }\n\n  return index;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/dom/indexof.js\n// module id = 400\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = insertAt;\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/insertat\n */\n\n/**\n * Inserts node to the parent at given index.\n *\n * @param {Element} parentElement Parent element.\n * @param {Number} index Insertions index.\n * @param {Node} nodeToInsert Node to insert.\n */\nfunction insertAt(parentElement, index, nodeToInsert) {\n  parentElement.insertBefore(nodeToInsert, parentElement.childNodes[index] || null);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/dom/insertat.js\n// module id = 401\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\nn\n/**\n * @module utils/dom/position\n */\n\nexports.getOptimalPosition = getOptimalPosition;\n\nvar _global = require('./global');\n\nvar _global2 = _interopRequireDefault(_global);\n\nvar _rect = require('./rect');\n\nvar _rect2 = _interopRequireDefault(_rect);\n\nvar _getpositionedancestor = require('./getpositionedancestor');\n\nvar _getpositionedancestor2 = _interopRequireDefault(_getpositionedancestor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Calculates the `position: absolute` coordinates of a given element so it can be positioned with respect to the\n * target in the visually most efficient way, taking various restrictions like viewport or limiter geometry\n * into consideration.\n *\n *\t\t// The element which is to be positioned.\n *\t\tconst element = document.body.querySelector( '#toolbar' );\n *\n *\t\t// A target to which the element is positioned relatively.\n *\t\tconst target = document.body.querySelector( '#container' );\n *\n *\t\t// Finding the optimal coordinates for the positioning.\n *\t\tconst { left, top, name } = getOptimalPosition( {\n *\t\t\telement: element,\n *\t\t\ttarget: target,\n *\n * \t\t\t// The algorithm will chose among these positions to meet the requirements such\n * \t\t\t// as \"limiter\" element or \"fitInViewport\", set below. The positions are considered\n * \t\t\t// in the order of the array.\n *\t\t\tpositions: [\n *\t\t\t\t//\n *\t\t\t \t//\t[ Target ]\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\t|     Element     |\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\n *\t\t\t\ttargetRect => ( {\n *\t\t\t\t\ttop: targetRect.bottom,\n *\t\t\t\t\tleft: targetRect.left,\n *\t\t\t\t\tname: 'mySouthEastPosition'\n *\t\t\t\t} ),\n *\n *\t\t\t\t//\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\t|     Element     |\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\t[ Target ]\n *\t\t\t\t//\n *\t\t\t\t( targetRect, elementRect ) => ( {\n *\t\t\t\t\ttop: targetRect.top - elementRect.height,\n *\t\t\t\t\tleft: targetRect.left,\n *\t\t\t\t\tname: 'myNorthEastPosition'\n *\t\t\t\t} )\n *\t\t\t],\n *\n *\t\t\t// Find a position such guarantees the element remains within visible boundaries of <body>.\n *\t\t\tlimiter: document.body,\n *\n *\t\t\t// Find a position such guarantees the element remains within visible boundaries of the browser viewport.\n *\t\t\tfitInViewport: true\n *\t\t} );\n *\n *\t\t// The best position which fits into document.body and the viewport. May be useful\n *\t\t// to set proper class on the `element`.\n *\t\tconsole.log( name ); -> \"myNorthEastPosition\"\n *\n *\t\t// Using the absolute coordinates which has been found to position the element\n *\t\t// as in the diagram depicting the \"myNorthEastPosition\" position.\n *\t\telement.style.top = top;\n *\t\telement.style.left = left;\n *\n * @param {module:utils/dom/position~Options} options Positioning options object.\n * @returns {module:utils/dom/position~Position}\n */\nfunction getOptimalPosition(_ref) {\n\tvar element = _ref.element,\n\t    target = _ref.target,\n\t    positions = _ref.positions,\n\t    limiter = _ref.limiter,\n\t    fitInViewport = _ref.fitInViewport;\n\n\t// If the {@link module:utils/dom/position~Options#target} is a function, use what it returns.\n\t// https://github.com/ckeditor/ckeditor5-utils/issues/157\n\tif (typeof target == 'function') {\n\t\ttarget = target();\n\t}\n\n\tvar positionedElementAncestor = (0, _getpositionedancestor2.default)(element.parentElement);\n\tvar elementRect = new _rect2.default(element);\n\tvar targetRect = new _rect2.default(target);\n\n\tvar bestPosition = void 0;\n\tvar name = void 0;\n\n\t// If there are no limits, just grab the very first position and be done with that drama.\n\tif (!limiter && !fitInViewport) {\n\t\tvar _getPosition = getPosition(positions[0], targetRect, elementRect);\n\n\t\tvar _getPosition2 = _slicedToArray(_getPosition, 2);\n\n\t\tname = _getPosition2[0];\n\t\tbestPosition = _getPosition2[1];\n\t} else {\n\t\tvar limiterRect = limiter && new _rect2.default(limiter).getVisible();\n\t\tvar viewportRect = fitInViewport && _rect2.default.getViewportRect();\n\n\t\tvar _ref2 = getBestPosition(positions, targetRect, elementRect, limiterRect, viewportRect) ||\n\t\t// If there's no best position found, i.e. when all intersections have no area because\n\t\t// rects have no width or height, then just use the first available position.\n\t\tgetPosition(positions[0], targetRect, elementRect);\n\n\t\tvar _ref3 = _slicedToArray(_ref2, 2);\n\n\t\tname = _ref3[0];\n\t\tbestPosition = _ref3[1];\n\t}\n\n\tvar _getAbsoluteRectCoord = getAbsoluteRectCoordinates(bestPosition),\n\t    left = _getAbsoluteRectCoord.left,\n\t    top = _getAbsoluteRectCoord.top;\n\n\tif (positionedElementAncestor) {\n\t\tvar ancestorPosition = getAbsoluteRectCoordinates(new _rect2.default(positionedElementAncestor));\n\t\tvar ancestorComputedStyles = _global2.default.window.getComputedStyle(positionedElementAncestor);\n\n\t\t// (https://github.com/ckeditor/ckeditor5-ui-default/issues/126)\n\t\t// If there's some positioned ancestor of the panel, then its `Rect` must be taken into\n\t\t// consideration. `Rect` is always relative to the viewport while `position: absolute` works\n\t\t// with respect to that positioned ancestor.\n\t\tleft -= ancestorPosition.left;\n\t\ttop -= ancestorPosition.top;\n\n\t\t// (https://github.com/ckeditor/ckeditor5-utils/issues/139)\n\t\t// If there's some positioned ancestor of the panel, not only its position must be taken into\n\t\t// consideration (see above) but also its internal scrolls. Scroll have an impact here because `Rect`\n\t\t// is relative to the viewport (it doesn't care about scrolling), while `position: absolute`\n\t\t// must compensate that scrolling.\n\t\tleft += positionedElementAncestor.scrollLeft;\n\t\ttop += positionedElementAncestor.scrollTop;\n\n\t\t// (https://github.com/ckeditor/ckeditor5-utils/issues/139)\n\t\t// If there's some positioned ancestor of the panel, then its `Rect` includes its CSS `borderWidth`\n\t\t// while `position: absolute` positioning does not consider it.\n\t\t// E.g. `{ position: absolute, top: 0, left: 0 }` means upper left corner of the element,\n\t\t// not upper-left corner of its border.\n\t\tleft -= parseInt(ancestorComputedStyles.borderLeftWidth, 10);\n\t\ttop -= parseInt(ancestorComputedStyles.borderTopWidth, 10);\n\t}\n\n\treturn { left: left, top: top, name: name };\n}\n\n// For given position function, returns a corresponding `Rect` instance.\n//\n// @private\n// @param {Function} position A function returning {@link module:utils/dom/position~Position}.\n// @param {utils/dom/rect~Rect} targetRect A rect of the target.\n// @param {utils/dom/rect~Rect} elementRect A rect of positioned element.\n// @returns {Array} An array containing position name and its Rect.\nfunction getPosition(position, targetRect, elementRect) {\n\tvar _position = position(targetRect, elementRect),\n\t    left = _position.left,\n\t    top = _position.top,\n\t    name = _position.name;\n\n\treturn [name, elementRect.clone().moveTo(left, top)];\n}\n\n// For a given array of positioning functions, returns such that provides the best\n// fit of the `elementRect` into the `limiterRect` and `viewportRect`.\n//\n// @private\n// @param {module:utils/dom/position~Options#positions} positions Functions returning\n// {@link module:utils/dom/position~Position} to be checked, in the order of preference.\n// @param {utils/dom/rect~Rect} targetRect A rect of the {@link module:utils/dom/position~Options#target}.\n// @param {utils/dom/rect~Rect} elementRect A rect of positioned {@link module:utils/dom/position~Options#element}.\n// @param {utils/dom/rect~Rect} limiterRect A rect of the {@link module:utils/dom/position~Options#limiter}.\n// @param {utils/dom/rect~Rect} viewportRect A rect of the viewport.\n// @returns {Array} An array containing the name of the position and it's rect.\nfunction getBestPosition(positions, targetRect, elementRect, limiterRect, viewportRect) {\n\tvar maxLimiterIntersectArea = 0;\n\tvar maxViewportIntersectArea = 0;\n\tvar bestPositionRect = void 0;\n\tvar bestPositionName = void 0;\n\n\t// This is when element is fully visible.\n\tvar elementRectArea = elementRect.getArea();\n\n\tpositions.some(function (position) {\n\t\tvar _getPosition3 = getPosition(position, targetRect, elementRect),\n\t\t    _getPosition4 = _slicedToArray(_getPosition3, 2),\n\t\t    positionName = _getPosition4[0],\n\t\t    positionRect = _getPosition4[1];\n\n\t\tvar limiterIntersectArea = void 0;\n\t\tvar viewportIntersectArea = void 0;\n\n\t\tif (limiterRect) {\n\t\t\tif (viewportRect) {\n\t\t\t\t// Consider only the part of the limiter which is visible in the viewport. So the limiter is getting limited.\n\t\t\t\tvar limiterViewportIntersectRect = limiterRect.getIntersection(viewportRect);\n\n\t\t\t\tif (limiterViewportIntersectRect) {\n\t\t\t\t\t// If the limiter is within the viewport, then check the intersection between that part of the\n\t\t\t\t\t// limiter and actual position.\n\t\t\t\t\tlimiterIntersectArea = limiterViewportIntersectRect.getIntersectionArea(positionRect);\n\t\t\t\t} else {\n\t\t\t\t\tlimiterIntersectArea = 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlimiterIntersectArea = limiterRect.getIntersectionArea(positionRect);\n\t\t\t}\n\t\t}\n\n\t\tif (viewportRect) {\n\t\t\tviewportIntersectArea = viewportRect.getIntersectionArea(positionRect);\n\t\t}\n\n\t\t// The only criterion: intersection with the viewport.\n\t\tif (viewportRect && !limiterRect) {\n\t\t\tif (viewportIntersectArea > maxViewportIntersectArea) {\n\t\t\t\tsetBestPosition();\n\t\t\t}\n\t\t}\n\t\t// The only criterion: intersection with the limiter.\n\t\telse if (!viewportRect && limiterRect) {\n\t\t\t\tif (limiterIntersectArea > maxLimiterIntersectArea) {\n\t\t\t\t\tsetBestPosition();\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Two criteria: intersection with the viewport and the limiter visible in the viewport.\n\t\t\telse {\n\t\t\t\t\tif (viewportIntersectArea > maxViewportIntersectArea && limiterIntersectArea >= maxLimiterIntersectArea) {\n\t\t\t\t\t\tsetBestPosition();\n\t\t\t\t\t} else if (viewportIntersectArea >= maxViewportIntersectArea && limiterIntersectArea > maxLimiterIntersectArea) {\n\t\t\t\t\t\tsetBestPosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\tfunction setBestPosition() {\n\t\t\tmaxViewportIntersectArea = viewportIntersectArea;\n\t\t\tmaxLimiterIntersectArea = limiterIntersectArea;\n\t\t\tbestPositionRect = positionRect;\n\t\t\tbestPositionName = positionName;\n\t\t}\n\n\t\t// If a such position is found that element is fully container by the limiter then, obviously,\n\t\t// there will be no better one, so finishing.\n\t\treturn limiterIntersectArea === elementRectArea;\n\t});\n\n\treturn bestPositionRect ? [bestPositionName, bestPositionRect] : null;\n}\n\n// DOMRect (also Rect) works in a scroll–independent geometry but `position: absolute` doesn't.\n// This function converts Rect to `position: absolute` coordinates.\n//\n// @private\n// @param {utils/dom/rect~Rect} rect A rect to be converted.\n// @returns {Object} Object containing `left` and `top` properties, in absolute coordinates.\nfunction getAbsoluteRectCoordinates(_ref4) {\n\tvar left = _ref4.left,\n\t    top = _ref4.top;\n\tvar _global$window = _global2.default.window,\n\t    scrollX = _global$window.scrollX,\n\t    scrollY = _global$window.scrollY;\n\n\n\treturn {\n\t\tleft: left + scrollX,\n\t\ttop: top + scrollY\n\t};\n}\n\n/**\n * The `getOptimalPosition` helper options.\n *\n * @interface module:utils/dom/position~Options\n */\n\n/**\n * Element that is to be positioned.\n *\n * @member {HTMLElement} #element\n */\n\n/**\n * Target with respect to which the `element` is to be positioned.\n *\n * @member {HTMLElement|Range|ClientRect|Function} #target\n */\n\n/**\n * An array of functions which return {@link module:utils/dom/position~Position} relative\n * to the `target`, in the order of preference.\n *\n * @member {Array.<Function>} #positions\n */\n\n/**\n * When set, the algorithm will chose position which fits the most in the\n * limiter's bounding rect.\n *\n * @member {HTMLElement|Range|ClientRect} #limiter\n */\n\n/**\n * When set, the algorithm will chose such a position which fits `element`\n * the most inside visible viewport.\n *\n * @member {Boolean} #fitInViewport\n */\n\n/**\n * An object describing a position in `position: absolute` coordinate\n * system, along with position name.\n *\n * @typedef {Object} module:utils/dom/position~Position\n *\n * @property {Number} top Top position offset.\n * @property {Number} left Left position offset.\n * @property {String} name Name of the position.\n */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/dom/position.js\n// module id = 402\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\nn\n/**\n * @module utils/dom/rect\n */\n\nvar _global = require('./global');\n\nvar _global2 = _interopRequireDefault(_global);\n\nvar _isrange = require('./isrange');\n\nvar _isrange2 = _interopRequireDefault(_isrange);\n\nvar _isElement = require('../lib/lodash/isElement');\n\nvar _isElement2 = _interopRequireDefault(_isElement);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * A helper class representing a `ClientRect` object, e.g. value returned by\n * the native `object.getBoundingClientRect()` method. Provides a set of methods\n * to manipulate the rect and compare it against other `Rect` instances.\n */\nvar Rect = function () {\n\t/**\n  * Creates an instance of rect.\n  *\n  *\t\t// Rect of an HTMLElement.\n  *\t\tconst rectA = new Rect( document.body );\n  *\n  *\t\t// Rect of a DOM Range.\n  *\t\tconst rectB = new Rect( document.getSelection().getRangeAt( 0 ) );\n  *\n  *\t\t// Rect out of an object.\n  *\t\tconst rectC = new Rect( { top: 0, right: 10, bottom: 10, left: 0, width: 10, height: 10 } );\n  *\n  *\t\t// Rect out of another Rect instance.\n  *\t\tconst rectD = new Rect( rectC );\n  *\n  *\t\t// Rect out of a ClientRect.\n  *\t\tconst rectE = new Rect( document.body.getClientRects().item( 0 ) );\n  *\n  * @param {HTMLElement|Range|ClientRect|module:utils/dom/rect~Rect|Object} source A source object to create the rect.\n  */\n\tfunction Rect(source) {\n\t\t_classCallCheck(this, Rect);\n\n\t\t/**\n   * The object this rect is for.\n   *\n   * @protected\n   * @readonly\n   * @member {HTMLElement|Range|ClientRect|module:utils/dom/rect~Rect|Object} #_source\n   */\n\t\tObject.defineProperty(this, '_source', {\n\t\t\t// source._source if already the Rect instance\n\t\t\tvalue: source._source || source,\n\t\t\twritable: false,\n\t\t\tenumerable: false\n\t\t});\n\n\t\tif ((0, _isElement2.default)(source)) {\n\t\t\tcopyRectProperties(this, source.getBoundingClientRect());\n\t\t} else if ((0, _isrange2.default)(source)) {\n\t\t\tcopyRectProperties(this, Rect.getDomRangeRects(source)[0]);\n\t\t} else {\n\t\t\tcopyRectProperties(this, source);\n\t\t}\n\n\t\t/**\n   * The \"top\" value of the rect.\n   *\n   * @readonly\n   * @member {Number} #top\n   */\n\n\t\t/**\n   * The \"right\" value of the rect.\n   *\n   * @readonly\n   * @member {Number} #right\n   */\n\n\t\t/**\n   * The \"bottom\" value of the rect.\n   *\n   * @readonly\n   * @member {Number} #bottom\n   */\n\n\t\t/**\n   * The \"left\" value of the rect.\n   *\n   * @readonly\n   * @member {Number} #left\n   */\n\n\t\t/**\n   * The \"width\" value of the rect.\n   *\n   * @readonly\n   * @member {Number} #width\n   */\n\n\t\t/**\n   * The \"height\" value of the rect.\n   *\n   * @readonly\n   * @member {Number} #height\n   */\n\t}\n\n\t/**\n  * Returns a clone of the rect.\n  *\n  * @returns {module:utils/dom/rect~Rect} A cloned rect.\n  */\n\n\n\t_createClass(Rect, [{\n\t\tkey: 'clone',\n\t\tvalue: function clone() {\n\t\t\treturn new Rect(this);\n\t\t}\n\n\t\t/**\n   * Moves the rect so that its upper–left corner lands in desired `[ x, y ]` location.\n   *\n   * @param {Number} x Desired horizontal location.\n   * @param {Number} y Desired vertical location.\n   * @returns {module:utils/dom/rect~Rect} A rect which has been moved.\n   */\n\n\t}, {\n\t\tkey: 'moveTo',\n\t\tvalue: function moveTo(x, y) {\n\t\t\tthis.top = y;\n\t\t\tthis.right = x + this.width;\n\t\t\tthis.bottom = y + this.height;\n\t\t\tthis.left = x;\n\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Moves the rect in–place by a dedicated offset.\n   *\n   * @param {Number} x A horizontal offset.\n   * @param {Number} y A vertical offset\n   * @returns {module:utils/dom/rect~Rect} A rect which has been moved.\n   */\n\n\t}, {\n\t\tkey: 'moveBy',\n\t\tvalue: function moveBy(x, y) {\n\t\t\tthis.top += y;\n\t\t\tthis.right += x;\n\t\t\tthis.left += x;\n\t\t\tthis.bottom += y;\n\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * Returns a new rect a a result of intersection with another rect.\n   *\n   * @param {module:utils/dom/rect~Rect} anotherRect\n   * @returns {module:utils/dom/rect~Rect}\n   */\n\n\t}, {\n\t\tkey: 'getIntersection',\n\t\tvalue: function getIntersection(anotherRect) {\n\t\t\tvar rect = {\n\t\t\t\ttop: Math.max(this.top, anotherRect.top),\n\t\t\t\tright: Math.min(this.right, anotherRect.right),\n\t\t\t\tbottom: Math.min(this.bottom, anotherRect.bottom),\n\t\t\t\tleft: Math.max(this.left, anotherRect.left)\n\t\t\t};\n\n\t\t\trect.width = rect.right - rect.left;\n\t\t\trect.height = rect.bottom - rect.top;\n\n\t\t\tif (rect.width < 0 || rect.height < 0) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn new Rect(rect);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Returns the area of intersection with another rect.\n   *\n   * @param {module:utils/dom/rect~Rect} anotherRect [description]\n   * @returns {Number} Area of intersection.\n   */\n\n\t}, {\n\t\tkey: 'getIntersectionArea',\n\t\tvalue: function getIntersectionArea(anotherRect) {\n\t\t\tvar rect = this.getIntersection(anotherRect);\n\n\t\t\tif (rect) {\n\t\t\t\treturn rect.getArea();\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Returns the area of the rect.\n   *\n   * @returns {Number}\n   */\n\n\t}, {\n\t\tkey: 'getArea',\n\t\tvalue: function getArea() {\n\t\t\treturn this.width * this.height;\n\t\t}\n\n\t\t/**\n   * Returns a new rect, a part of the original rect, which is actually visible to the user,\n   * e.g. an original rect cropped by parent element rects which have `overflow` set in CSS\n   * other than `\"visible\"`.\n   *\n   * If there's no such visible rect, which is when the rect is limited by one or many of\n   * the ancestors, `null` is returned.\n   *\n   * @returns {module:utils/dom/rect~Rect|null} A visible rect instance or `null`, if there's none.\n   */\n\n\t}, {\n\t\tkey: 'getVisible',\n\t\tvalue: function getVisible() {\n\t\t\tvar source = this._source;\n\t\t\tvar visibleRect = this.clone();\n\n\t\t\t// There's no ancestor to crop <body> with the overflow.\n\t\t\tif (source != _global2.default.document.body) {\n\t\t\t\tvar parent = source.parentNode || source.commonAncestorContainer;\n\n\t\t\t\t// Check the ancestors all the way up to the <body>.\n\t\t\t\twhile (parent && parent != _global2.default.document.body) {\n\t\t\t\t\tvar parentRect = new Rect(parent);\n\t\t\t\t\tvar intersectionRect = visibleRect.getIntersection(parentRect);\n\n\t\t\t\t\tif (intersectionRect) {\n\t\t\t\t\t\tif (intersectionRect.getArea() < visibleRect.getArea()) {\n\t\t\t\t\t\t\t// Reduce the visible rect to the intersection.\n\t\t\t\t\t\t\tvisibleRect = intersectionRect;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// There's no intersection, the rect is completely invisible.\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\tparent = parent.parentNode;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn visibleRect;\n\t\t}\n\n\t\t/**\n   * Returns a rect of the web browser viewport.\n   *\n   * @returns {module:utils/dom/rect~Rect} A viewport rect.\n   */\n\n\t}], [{\n\t\tkey: 'getViewportRect',\n\t\tvalue: function getViewportRect() {\n\t\t\tvar _global$window = _global2.default.window,\n\t\t\t    innerWidth = _global$window.innerWidth,\n\t\t\t    innerHeight = _global$window.innerHeight;\n\n\n\t\t\treturn new Rect({\n\t\t\t\ttop: 0,\n\t\t\t\tright: innerWidth,\n\t\t\t\tbottom: innerHeight,\n\t\t\t\tleft: 0,\n\t\t\t\twidth: innerWidth,\n\t\t\t\theight: innerHeight\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * Returns an array of rects of the given native DOM Range.\n   *\n   * @param {Range} range A native DOM range.\n   * @returns {Array.<module:utils/dom/rect~Rect>} DOM Range rects.\n   */\n\n\t}, {\n\t\tkey: 'getDomRangeRects',\n\t\tvalue: function getDomRangeRects(range) {\n\t\t\tvar rects = [];\n\t\t\t// Safari does not iterate over ClientRectList using for...of loop.\n\t\t\tvar clientRects = Array.from(range.getClientRects());\n\n\t\t\tif (clientRects.length) {\n\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\tvar _didIteratorError = false;\n\t\t\t\tvar _iteratorError = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator = clientRects[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\tvar rect = _step.value;\n\n\t\t\t\t\t\trects.push(new Rect(rect));\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t_iteratorError = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If there's no client rects for the Range, use parent container's bounding rect\n\t\t\t// instead and adjust rect's width to simulate the actual geometry of such range.\n\t\t\t// https://github.com/ckeditor/ckeditor5-utils/issues/153\n\t\t\telse {\n\t\t\t\t\tvar startContainerRect = new Rect(range.startContainer.getBoundingClientRect());\n\t\t\t\t\tstartContainerRect.right = startContainerRect.left;\n\t\t\t\t\tstartContainerRect.width = 0;\n\n\t\t\t\t\trects.push(startContainerRect);\n\t\t\t\t}\n\n\t\t\treturn rects;\n\t\t}\n\t}]);\n\n\treturn Rect;\n}();\n\nexports.default = Rect;\n\n\nvar rectProperties = ['top', 'right', 'bottom', 'left', 'width', 'height'];\n\n// Acquires all the rect properties from the passed source.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} rect\n// @param {ClientRect|module:utils/dom/rect~Rect|Object} source\nfunction copyRectProperties(rect, source) {\n\tvar _iteratorNormalCompletion2 = true;\n\tvar _didIteratorError2 = false;\n\tvar _iteratorError2 = undefined;\n\n\ttry {\n\t\tfor (var _iterator2 = rectProperties[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\tvar p = _step2.value;\n\n\t\t\trect[p] = source[p];\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError2 = true;\n\t\t_iteratorError2 = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t_iterator2.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError2) {\n\t\t\t\tthrow _iteratorError2;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/dom/rect.js\n// module id = 403\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = remove;\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/remove\n */\n\n/**\n * Removes given node from parent.\n *\n * @param {Node} node Node to remove.\n */\nfunction remove(node) {\n  var parent = node.parentNode;\n\n  if (parent) {\n    parent.removeChild(node);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/dom/remove.js\n// module id = 404\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = setDataInElement;\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/setdatainelement\n */\n\n/* globals HTMLTextAreaElement */\n\n/**\n * Sets data in a given element.\n *\n * @param {HTMLElement} el The element in which the data will be set.\n * @param {String} data The data string.\n */\nfunction setDataInElement(el, data) {\n  if (el instanceof HTMLTextAreaElement) {\n    el.value = data;\n  }\n\n  el.innerHTML = data;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/dom/setdatainelement.js\n// module id = 405\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/elementreplacer\n */\n\n/**\n * Utility class allowing to hide existing HTML elements or replace them with given ones in a way that doesn't remove\n * the original elements from the DOM.\n */\nvar ElementReplacer = function () {\n\tfunction ElementReplacer() {\n\t\t_classCallCheck(this, ElementReplacer);\n\n\t\t/**\n   * The elements replaced by {@link #replace} and their replacements.\n   *\n   * @private\n   * @member {Array.<Object>}\n   */\n\t\tthis._replacedElements = [];\n\t}\n\n\t/**\n  * Hides the `element` and, if specified, inserts the the given element next to it.\n  *\n  * The effect of this method can be reverted by {@link #restore}.\n  *\n  * @param {HTMLElement} element The element to replace.\n  * @param {HTMLElement} [newElement] The replacement element. If not passed, then the `element` will just be hidden.\n  */\n\n\n\t_createClass(ElementReplacer, [{\n\t\tkey: 'replace',\n\t\tvalue: function replace(element, newElement) {\n\t\t\tthis._replacedElements.push({ element: element, newElement: newElement });\n\n\t\t\telement.style.display = 'none';\n\n\t\t\tif (newElement) {\n\t\t\t\telement.parentNode.insertBefore(newElement, element.nextSibling);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Restores what {@link #replace} did.\n   */\n\n\t}, {\n\t\tkey: 'restore',\n\t\tvalue: function restore() {\n\t\t\tthis._replacedElements.forEach(function (_ref) {\n\t\t\t\tvar element = _ref.element,\n\t\t\t\t    newElement = _ref.newElement;\n\n\t\t\t\telement.style.display = '';\n\n\t\t\t\tif (newElement) {\n\t\t\t\t\tnewElement.remove();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._replacedElements = [];\n\t\t}\n\t}]);\n\n\treturn ElementReplacer;\n}();\n\nexports.default = ElementReplacer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/elementreplacer.js\n// module id = 406\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isMac = isMac;\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* globals navigator:false */\n\n/**\n * @module utils/env\n */\n\nvar userAgent = navigator.userAgent.toLowerCase();\n\n/**\n * A namespace containing environment and browser information.\n *\n * @namespace\n */\nvar env = {\n  /**\n   * Indicates that application is running on Macintosh.\n   *\n   * @static\n   * @member {Boolean} module:utils/env~env#mac\n   */\n  mac: isMac(userAgent)\n};\n\nexports.default = env;\n\n/**\n * Checks if User Agent represented by the string is running on Macintosh.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is running on Macintosh or not.\n */\n\nfunction isMac(userAgent) {\n  return userAgent.indexOf('macintosh') > -1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/env.js\n// module id = 407\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _spy = require('./spy');\n\nvar _spy2 = _interopRequireDefault(_spy);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n                                                                                                                                                           * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                           * For licensing, see LICENSE.md.\n                                                                                                                                                           */\n\n/**\n * @module utils/eventinfo\n */\n\n/**\n * The event object passed to event callbacks. It is used to provide information about the event as well as a tool to\n * manipulate it.\n */\nvar EventInfo =\n/**\n * @param {Object} source The emitter.\n * @param {String} name The event name.\n */\nfunction EventInfo(source, name) {\n\t_classCallCheck(this, EventInfo);\n\n\t/**\n  * The object that fired the event.\n  *\n  * @readonly\n  * @member {Object}\n  */\n\tthis.source = source;\n\n\t/**\n  * The event name.\n  *\n  * @readonly\n  * @member {String}\n  */\n\tthis.name = name;\n\n\t/**\n  * Path this event has followed. See {@link module:utils/emittermixin~EmitterMixin#delegate}.\n  *\n  * @readonly\n  * @member {Array.<Object>}\n  */\n\tthis.path = [];\n\n\t// The following methods are defined in the constructor because they must be re-created per instance.\n\n\t/**\n  * Stops the event emitter to call further callbacks for this event interaction.\n  *\n  * @method #stop\n  */\n\tthis.stop = (0, _spy2.default)();\n\n\t/**\n  * Removes the current callback from future interactions of this event.\n  *\n  * @method #off\n  */\n\tthis.off = (0, _spy2.default)();\n\n\t/**\n  * The value which will be returned by {@link module:utils/emittermixin~EmitterMixin#fire}.\n  *\n  * It's `undefined` by default and can be changed by an event listener:\n  *\n  *\t\tdataController.fire( 'getSelectedContent', ( evt ) => {\n  *\t\t\t// This listener will make `dataController.fire( 'getSelectedContent' )`\n  *\t\t\t// always return an empty DocumentFragment.\n  *\t\t\tevt.return = new DocumentFragment();\n  *\n  *\t\t\t// Make sure no other listeners are executed.\n  *\t\t\tevt.stop();\n  *\t\t} );\n  *\n  * @member #return\n  */\n};\n\nexports.default = EventInfo;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/eventinfo.js\n// module id = 408\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getNative = require('./_getNative');\n\nvar _getNative2 = _interopRequireDefault(_getNative);\n\nvar _root = require('./_root');\n\nvar _root2 = _interopRequireDefault(_root);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* Built-in method references that are verified to be native. */\nvar DataView = (0, _getNative2.default)(_root2.default, 'DataView');\n\nexports.default = DataView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_DataView.js\n// module id = 409\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _hashClear = require('./_hashClear');\n\nvar _hashClear2 = _interopRequireDefault(_hashClear);\n\nvar _hashDelete = require('./_hashDelete');\n\nvar _hashDelete2 = _interopRequireDefault(_hashDelete);\n\nvar _hashGet = require('./_hashGet');\n\nvar _hashGet2 = _interopRequireDefault(_hashGet);\n\nvar _hashHas = require('./_hashHas');\n\nvar _hashHas2 = _interopRequireDefault(_hashHas);\n\nvar _hashSet = require('./_hashSet');\n\nvar _hashSet2 = _interopRequireDefault(_hashSet);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = _hashClear2.default;\nHash.prototype['delete'] = _hashDelete2.default;\nHash.prototype.get = _hashGet2.default;\nHash.prototype.has = _hashHas2.default;\nHash.prototype.set = _hashSet2.default;\n\nexports.default = Hash;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_Hash.js\n// module id = 410\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getNative = require('./_getNative');\n\nvar _getNative2 = _interopRequireDefault(_getNative);\n\nvar _root = require('./_root');\n\nvar _root2 = _interopRequireDefault(_root);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* Built-in method references that are verified to be native. */\nvar Promise = (0, _getNative2.default)(_root2.default, 'Promise');\n\nexports.default = Promise;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_Promise.js\n// module id = 411\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _root = require('./_root');\n\nvar _root2 = _interopRequireDefault(_root);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Built-in value references. */\nvar Reflect = _root2.default.Reflect;\n\nexports.default = Reflect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_Reflect.js\n// module id = 412\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getNative = require('./_getNative');\n\nvar _getNative2 = _interopRequireDefault(_getNative);\n\nvar _root = require('./_root');\n\nvar _root2 = _interopRequireDefault(_root);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = (0, _getNative2.default)(_root2.default, 'WeakMap');\n\nexports.default = WeakMap;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_WeakMap.js\n// module id = 413\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `Map#set` because it doesn't return the map instance in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\nexports.default = addMapEntry;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_addMapEntry.js\n// module id = 414\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  set.add(value);\n  return set;\n}\n\nexports.default = addSetEntry;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_addSetEntry.js\n// module id = 415\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexports.default = arrayEach;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_arrayEach.js\n// module id = 416\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexports.default = arraySome;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_arraySome.js\n// module id = 417\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _copyObject = require('./_copyObject');\n\nvar _copyObject2 = _interopRequireDefault(_copyObject);\n\nvar _keys = require('./keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && (0, _copyObject2.default)(source, (0, _keys2.default)(source), object);\n}\n\nexports.default = baseAssign;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseAssign.js\n// module id = 418\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _get = require('./get');\n\nvar _get2 = _interopRequireDefault(_get);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The base implementation of `_.at` without support for individual paths.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {string[]} paths The property paths of elements to pick.\n * @returns {Array} Returns the picked elements.\n */\nfunction baseAt(object, paths) {\n  var index = -1,\n      isNil = object == null,\n      length = paths.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = isNil ? undefined : (0, _get2.default)(object, paths[index]);\n  }\n  return result;\n}\n\nexports.default = baseAt;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseAt.js\n// module id = 419\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * The base implementation of `_.clamp` which doesn't coerce arguments to numbers.\n *\n * @private\n * @param {number} number The number to clamp.\n * @param {number} [lower] The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the clamped number.\n */\nfunction baseClamp(number, lower, upper) {\n  if (number === number) {\n    if (upper !== undefined) {\n      number = number <= upper ? number : upper;\n    }\n    if (lower !== undefined) {\n      number = number >= lower ? number : lower;\n    }\n  }\n  return number;\n}\n\nexports.default = baseClamp;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseClamp.js\n// module id = 420\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isObject = require('./isObject');\n\nvar _isObject2 = _interopRequireDefault(_isObject);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return (0, _isObject2.default)(proto) ? objectCreate(proto) : {};\n}\n\nexports.default = baseCreate;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseCreate.js\n// module id = 421\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _toInteger = require('./toInteger');\n\nvar _toInteger2 = _interopRequireDefault(_toInteger);\n\nvar _toLength = require('./toLength');\n\nvar _toLength2 = _interopRequireDefault(_toLength);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The base implementation of `_.fill` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to fill.\n * @param {*} value The value to fill `array` with.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns `array`.\n */\nfunction baseFill(array, value, start, end) {\n  var length = array.length;\n\n  start = (0, _toInteger2.default)(start);\n  if (start < 0) {\n    start = -start > length ? 0 : length + start;\n  }\n  end = end === undefined || end > length ? length : (0, _toInteger2.default)(end);\n  if (end < 0) {\n    end += length;\n  }\n  end = start > end ? 0 : (0, _toLength2.default)(end);\n  while (start < end) {\n    array[start++] = value;\n  }\n  return array;\n}\n\nexports.default = baseFill;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseFill.js\n// module id = 422\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _arrayPush = require('./_arrayPush');\n\nvar _arrayPush2 = _interopRequireDefault(_arrayPush);\n\nvar _isArray = require('./isArray');\n\nvar _isArray2 = _interopRequireDefault(_isArray);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return (0, _isArray2.default)(object) ? result : (0, _arrayPush2.default)(result, symbolsFunc(object));\n}\n\nexports.default = baseGetAllKeys;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseGetAllKeys.js\n// module id = 423\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return key in Object(object);\n}\n\nexports.default = baseHasIn;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseHasIn.js\n// module id = 424\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * This function is like `baseIndexOf` except that it accepts a comparator.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOfWith(array, value, fromIndex, comparator) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (comparator(array[index], value)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexports.default = baseIndexOfWith;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseIndexOfWith.js\n// module id = 425\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Stack = require('./_Stack');\n\nvar _Stack2 = _interopRequireDefault(_Stack);\n\nvar _equalArrays = require('./_equalArrays');\n\nvar _equalArrays2 = _interopRequireDefault(_equalArrays);\n\nvar _equalByTag = require('./_equalByTag');\n\nvar _equalByTag2 = _interopRequireDefault(_equalByTag);\n\nvar _equalObjects = require('./_equalObjects');\n\nvar _equalObjects2 = _interopRequireDefault(_equalObjects);\n\nvar _getTag = require('./_getTag');\n\nvar _getTag2 = _interopRequireDefault(_getTag);\n\nvar _isArray = require('./isArray');\n\nvar _isArray2 = _interopRequireDefault(_isArray);\n\nvar _isHostObject = require('./_isHostObject');\n\nvar _isHostObject2 = _interopRequireDefault(_isHostObject);\n\nvar _isTypedArray = require('./isTypedArray');\n\nvar _isTypedArray2 = _interopRequireDefault(_isTypedArray);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used to compose bitmasks for comparison styles. */\nvar PARTIAL_COMPARE_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n  var objIsArr = (0, _isArray2.default)(object),\n      othIsArr = (0, _isArray2.default)(other),\n      objTag = arrayTag,\n      othTag = arrayTag;\n\n  if (!objIsArr) {\n    objTag = (0, _getTag2.default)(object);\n    objTag = objTag == argsTag ? objectTag : objTag;\n  }\n  if (!othIsArr) {\n    othTag = (0, _getTag2.default)(other);\n    othTag = othTag == argsTag ? objectTag : othTag;\n  }\n  var objIsObj = objTag == objectTag && !(0, _isHostObject2.default)(object),\n      othIsObj = othTag == objectTag && !(0, _isHostObject2.default)(other),\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new _Stack2.default());\n    return objIsArr || (0, _isTypedArray2.default)(object) ? (0, _equalArrays2.default)(object, other, equalFunc, customizer, bitmask, stack) : (0, _equalByTag2.default)(object, other, objTag, equalFunc, customizer, bitmask, stack);\n  }\n  if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new _Stack2.default());\n      return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new _Stack2.default());\n  return (0, _equalObjects2.default)(object, other, equalFunc, customizer, bitmask, stack);\n}\n\nexports.default = baseIsEqualDeep;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseIsEqualDeep.js\n// module id = 426\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Stack = require('./_Stack');\n\nvar _Stack2 = _interopRequireDefault(_Stack);\n\nvar _baseIsEqual = require('./_baseIsEqual');\n\nvar _baseIsEqual2 = _interopRequireDefault(_baseIsEqual);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new _Stack2.default();\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined ? (0, _baseIsEqual2.default)(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack) : result)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nexports.default = baseIsMatch;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseIsMatch.js\n// module id = 427\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = Object.keys;\n\n/**\n * The base implementation of `_.keys` which doesn't skip the constructor\n * property of prototypes or treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  return nativeKeys(Object(object));\n}\n\nexports.default = baseKeys;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseKeys.js\n// module id = 428\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Reflect = require('./_Reflect');\n\nvar _Reflect2 = _interopRequireDefault(_Reflect);\n\nvar _iteratorToArray = require('./_iteratorToArray');\n\nvar _iteratorToArray2 = _interopRequireDefault(_iteratorToArray);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar enumerate = _Reflect2.default ? _Reflect2.default.enumerate : undefined,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * The base implementation of `_.keysIn` which doesn't skip the constructor\n * property of prototypes or treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  object = object == null ? object : Object(object);\n\n  var result = [];\n  for (var key in object) {\n    result.push(key);\n  }\n  return result;\n}\n\n// Fallback for IE < 9 with es6-shim.\nif (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {\n  baseKeysIn = function baseKeysIn(object) {\n    return (0, _iteratorToArray2.default)(enumerate(object));\n  };\n}\n\nexports.default = baseKeysIn;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseKeysIn.js\n// module id = 429\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseIsMatch = require('./_baseIsMatch');\n\nvar _baseIsMatch2 = _interopRequireDefault(_baseIsMatch);\n\nvar _getMatchData = require('./_getMatchData');\n\nvar _getMatchData2 = _interopRequireDefault(_getMatchData);\n\nvar _matchesStrictComparable = require('./_matchesStrictComparable');\n\nvar _matchesStrictComparable2 = _interopRequireDefault(_matchesStrictComparable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = (0, _getMatchData2.default)(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return (0, _matchesStrictComparable2.default)(matchData[0][0], matchData[0][1]);\n  }\n  return function (object) {\n    return object === source || (0, _baseIsMatch2.default)(object, source, matchData);\n  };\n}\n\nexports.default = baseMatches;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseMatches.js\n// module id = 430\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseIsEqual = require('./_baseIsEqual');\n\nvar _baseIsEqual2 = _interopRequireDefault(_baseIsEqual);\n\nvar _get = require('./get');\n\nvar _get2 = _interopRequireDefault(_get);\n\nvar _hasIn = require('./hasIn');\n\nvar _hasIn2 = _interopRequireDefault(_hasIn);\n\nvar _isKey = require('./_isKey');\n\nvar _isKey2 = _interopRequireDefault(_isKey);\n\nvar _isStrictComparable = require('./_isStrictComparable');\n\nvar _isStrictComparable2 = _interopRequireDefault(_isStrictComparable);\n\nvar _matchesStrictComparable = require('./_matchesStrictComparable');\n\nvar _matchesStrictComparable2 = _interopRequireDefault(_matchesStrictComparable);\n\nvar _toKey = require('./_toKey');\n\nvar _toKey2 = _interopRequireDefault(_toKey);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if ((0, _isKey2.default)(path) && (0, _isStrictComparable2.default)(srcValue)) {\n    return (0, _matchesStrictComparable2.default)((0, _toKey2.default)(path), srcValue);\n  }\n  return function (object) {\n    var objValue = (0, _get2.default)(object, path);\n    return objValue === undefined && objValue === srcValue ? (0, _hasIn2.default)(object, path) : (0, _baseIsEqual2.default)(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n  };\n}\n\nexports.default = baseMatchesProperty;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseMatchesProperty.js\n// module id = 431\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isIndex = require('./_isIndex');\n\nvar _isIndex2 = _interopRequireDefault(_isIndex);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The base implementation of `_.nth` which doesn't coerce `n` to an integer.\n *\n * @private\n * @param {Array} array The array to query.\n * @param {number} n The index of the element to return.\n * @returns {*} Returns the nth element of `array`.\n */\nfunction baseNth(array, n) {\n  var length = array.length;\n  if (!length) {\n    return;\n  }\n  n += n < 0 ? length : 0;\n  return (0, _isIndex2.default)(n, length) ? array[n] : undefined;\n}\n\nexports.default = baseNth;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseNth.js\n// module id = 432\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseGet = require('./_baseGet');\n\nvar _baseGet2 = _interopRequireDefault(_baseGet);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return (0, _baseGet2.default)(object, path);\n  };\n}\n\nexports.default = basePropertyDeep;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_basePropertyDeep.js\n// module id = 433\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _assignValue = require('./_assignValue');\n\nvar _assignValue2 = _interopRequireDefault(_assignValue);\n\nvar _castPath = require('./_castPath');\n\nvar _castPath2 = _interopRequireDefault(_castPath);\n\nvar _isIndex = require('./_isIndex');\n\nvar _isIndex2 = _interopRequireDefault(_isIndex);\n\nvar _isKey = require('./_isKey');\n\nvar _isKey2 = _interopRequireDefault(_isKey);\n\nvar _isObject = require('./isObject');\n\nvar _isObject2 = _interopRequireDefault(_isObject);\n\nvar _toKey = require('./_toKey');\n\nvar _toKey2 = _interopRequireDefault(_toKey);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  path = (0, _isKey2.default)(path, object) ? [path] : (0, _castPath2.default)(path);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = (0, _toKey2.default)(path[index]);\n    if ((0, _isObject2.default)(nested)) {\n      var newValue = value;\n      if (index != lastIndex) {\n        var objValue = nested[key];\n        newValue = customizer ? customizer(objValue, key, nested) : undefined;\n        if (newValue === undefined) {\n          newValue = objValue == null ? (0, _isIndex2.default)(path[index + 1]) ? [] : {} : objValue;\n        }\n      }\n      (0, _assignValue2.default)(nested, key, newValue);\n    }\n    nested = nested[key];\n  }\n  return object;\n}\n\nexports.default = baseSet;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseSet.js\n// module id = 434\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _arrayMap = require('./_arrayMap');\n\nvar _arrayMap2 = _interopRequireDefault(_arrayMap);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n * of key-value pairs for `object` corresponding to the property names of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the key-value pairs.\n */\nfunction baseToPairs(object, props) {\n  return (0, _arrayMap2.default)(props, function (key) {\n    return [key, object[key]];\n  });\n}\n\nexports.default = baseToPairs;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseToPairs.js\n// module id = 435\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Symbol2 = require('./_Symbol');\n\nvar _Symbol3 = _interopRequireDefault(_Symbol2);\n\nvar _isSymbol = require('./isSymbol');\n\nvar _isSymbol2 = _interopRequireDefault(_isSymbol);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = _Symbol3.default ? _Symbol3.default.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if ((0, _isSymbol2.default)(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nexports.default = baseToString;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_baseToString.js\n// module id = 436\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Checks if `value` is a global object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {null|Object} Returns `value` if it's a global object, else `null`.\n */\nfunction checkGlobal(value) {\n  return value && value.Object === Object ? value : null;\n}\n\nexports.default = checkGlobal;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_checkGlobal.js\n// module id = 437\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\nexports.default = cloneBuffer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_cloneBuffer.js\n// module id = 438\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _cloneArrayBuffer = require('./_cloneArrayBuffer');\n\nvar _cloneArrayBuffer2 = _interopRequireDefault(_cloneArrayBuffer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? (0, _cloneArrayBuffer2.default)(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexports.default = cloneDataView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_cloneDataView.js\n// module id = 439\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _addMapEntry = require('./_addMapEntry');\n\nvar _addMapEntry2 = _interopRequireDefault(_addMapEntry);\n\nvar _arrayReduce = require('./_arrayReduce');\n\nvar _arrayReduce2 = _interopRequireDefault(_arrayReduce);\n\nvar _mapToArray = require('./_mapToArray');\n\nvar _mapToArray2 = _interopRequireDefault(_mapToArray);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc((0, _mapToArray2.default)(map), true) : (0, _mapToArray2.default)(map);\n  return (0, _arrayReduce2.default)(array, _addMapEntry2.default, new map.constructor());\n}\n\nexports.default = cloneMap;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_cloneMap.js\n// module id = 440\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexports.default = cloneRegExp;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_cloneRegExp.js\n// module id = 441\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _addSetEntry = require('./_addSetEntry');\n\nvar _addSetEntry2 = _interopRequireDefault(_addSetEntry);\n\nvar _arrayReduce = require('./_arrayReduce');\n\nvar _arrayReduce2 = _interopRequireDefault(_arrayReduce);\n\nvar _setToArray = require('./_setToArray');\n\nvar _setToArray2 = _interopRequireDefault(_setToArray);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc((0, _setToArray2.default)(set), true) : (0, _setToArray2.default)(set);\n  return (0, _arrayReduce2.default)(array, _addSetEntry2.default, new set.constructor());\n}\n\nexports.default = cloneSet;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_cloneSet.js\n// module id = 442\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Symbol2 = require('./_Symbol');\n\nvar _Symbol3 = _interopRequireDefault(_Symbol2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = _Symbol3.default ? _Symbol3.default.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexports.default = cloneSymbol;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_cloneSymbol.js\n// module id = 443\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _cloneArrayBuffer = require('./_cloneArrayBuffer');\n\nvar _cloneArrayBuffer2 = _interopRequireDefault(_cloneArrayBuffer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? (0, _cloneArrayBuffer2.default)(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexports.default = cloneTypedArray;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_cloneTypedArray.js\n// module id = 444\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isSymbol = require('./isSymbol');\n\nvar _isSymbol2 = _interopRequireDefault(_isSymbol);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = (0, _isSymbol2.default)(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = (0, _isSymbol2.default)(other);\n\n    if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {\n      return 1;\n    }\n    if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nexports.default = compareAscending;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_compareAscending.js\n// module id = 445\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _copyObject = require('./_copyObject');\n\nvar _copyObject2 = _interopRequireDefault(_copyObject);\n\nvar _getSymbols = require('./_getSymbols');\n\nvar _getSymbols2 = _interopRequireDefault(_getSymbols);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return (0, _copyObject2.default)(source, (0, _getSymbols2.default)(source), object);\n}\n\nexports.default = copySymbols;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_copySymbols.js\n// module id = 446\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isIterateeCall = require('./_isIterateeCall');\n\nvar _isIterateeCall2 = _interopRequireDefault(_isIterateeCall);\n\nvar _rest = require('./rest');\n\nvar _rest2 = _interopRequireDefault(_rest);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return (0, _rest2.default)(function (object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = assigner.length > 3 && typeof customizer == 'function' ? (length--, customizer) : undefined;\n\n    if (guard && (0, _isIterateeCall2.default)(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nexports.default = createAssigner;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_createAssigner.js\n// module id = 447\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Set = require('./_Set');\n\nvar _Set2 = _interopRequireDefault(_Set);\n\nvar _noop = require('./noop');\n\nvar _noop2 = _interopRequireDefault(_noop);\n\nvar _setToArray = require('./_setToArray');\n\nvar _setToArray2 = _interopRequireDefault(_setToArray);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(_Set2.default && 1 / (0, _setToArray2.default)(new _Set2.default([, -0]))[1] == INFINITY) ? _noop2.default : function (values) {\n  return new _Set2.default(values);\n};\n\nexports.default = createSet;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_createSet.js\n// module id = 448\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseToPairs = require('./_baseToPairs');\n\nvar _baseToPairs2 = _interopRequireDefault(_baseToPairs);\n\nvar _getTag = require('./_getTag');\n\nvar _getTag2 = _interopRequireDefault(_getTag);\n\nvar _mapToArray = require('./_mapToArray');\n\nvar _mapToArray2 = _interopRequireDefault(_mapToArray);\n\nvar _setToPairs = require('./_setToPairs');\n\nvar _setToPairs2 = _interopRequireDefault(_setToPairs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/**\n * Creates a `_.toPairs` or `_.toPairsIn` function.\n *\n * @private\n * @param {Function} keysFunc The function to get the keys of a given object.\n * @returns {Function} Returns the new pairs function.\n */\nfunction createToPairs(keysFunc) {\n  return function (object) {\n    var tag = (0, _getTag2.default)(object);\n    if (tag == mapTag) {\n      return (0, _mapToArray2.default)(object);\n    }\n    if (tag == setTag) {\n      return (0, _setToPairs2.default)(object);\n    }\n    return (0, _baseToPairs2.default)(object, keysFunc(object));\n  };\n}\n\nexports.default = createToPairs;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_createToPairs.js\n// module id = 449\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Symbol2 = require('./_Symbol');\n\nvar _Symbol3 = _interopRequireDefault(_Symbol2);\n\nvar _Uint8Array = require('./_Uint8Array');\n\nvar _Uint8Array2 = _interopRequireDefault(_Uint8Array);\n\nvar _equalArrays = require('./_equalArrays');\n\nvar _equalArrays2 = _interopRequireDefault(_equalArrays);\n\nvar _mapToArray = require('./_mapToArray');\n\nvar _mapToArray2 = _interopRequireDefault(_mapToArray);\n\nvar _setToArray = require('./_setToArray');\n\nvar _setToArray2 = _interopRequireDefault(_setToArray);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = _Symbol3.default ? _Symbol3.default.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new _Uint8Array2.default(object), new _Uint8Array2.default(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n      // Coerce dates and booleans to numbers, dates to milliseconds and\n      // booleans to `1` or `0` treating invalid dates coerced to `NaN` as\n      // not equal.\n      return +object == +other;\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case numberTag:\n      // Treat `NaN` vs. `NaN` as equal.\n      return object != +object ? other != +other : object == +other;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/6.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = _mapToArray2.default;\n\n    case setTag:\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n      convert || (convert = _setToArray2.default);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= UNORDERED_COMPARE_FLAG;\n      stack.set(object, other);\n\n      // Recursively compare objects (susceptible to call stack limits).\n      return (0, _equalArrays2.default)(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nexports.default = equalByTag;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_equalByTag.js\n// module id = 450\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseHas = require('./_baseHas');\n\nvar _baseHas2 = _interopRequireDefault(_baseHas);\n\nvar _keys = require('./keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used to compose bitmasks for comparison styles. */\nvar PARTIAL_COMPARE_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      objProps = (0, _keys2.default)(object),\n      objLength = objProps.length,\n      othProps = (0, _keys2.default)(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : (0, _baseHas2.default)(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack) : compared)) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  return result;\n}\n\nexports.default = equalObjects;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_equalObjects.js\n// module id = 451\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseGetAllKeys = require('./_baseGetAllKeys');\n\nvar _baseGetAllKeys2 = _interopRequireDefault(_baseGetAllKeys);\n\nvar _getSymbols = require('./_getSymbols');\n\nvar _getSymbols2 = _interopRequireDefault(_getSymbols);\n\nvar _keys = require('./keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return (0, _baseGetAllKeys2.default)(object, _keys2.default, _getSymbols2.default);\n}\n\nexports.default = getAllKeys;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_getAllKeys.js\n// module id = 452\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseProperty = require('./_baseProperty');\n\nvar _baseProperty2 = _interopRequireDefault(_baseProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a\n * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects\n * Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = (0, _baseProperty2.default)('length');\n\nexports.default = getLength;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_getLength.js\n// module id = 453\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isStrictComparable = require('./_isStrictComparable');\n\nvar _isStrictComparable2 = _interopRequireDefault(_isStrictComparable);\n\nvar _toPairs = require('./toPairs');\n\nvar _toPairs2 = _interopRequireDefault(_toPairs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = (0, _toPairs2.default)(object),\n      length = result.length;\n\n  while (length--) {\n    result[length][2] = (0, _isStrictComparable2.default)(result[length][1]);\n  }\n  return result;\n}\n\nexports.default = getMatchData;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_getMatchData.js\n// module id = 454\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _castPath = require('./_castPath');\n\nvar _castPath2 = _interopRequireDefault(_castPath);\n\nvar _isArguments = require('./isArguments');\n\nvar _isArguments2 = _interopRequireDefault(_isArguments);\n\nvar _isArray = require('./isArray');\n\nvar _isArray2 = _interopRequireDefault(_isArray);\n\nvar _isIndex = require('./_isIndex');\n\nvar _isIndex2 = _interopRequireDefault(_isIndex);\n\nvar _isKey = require('./_isKey');\n\nvar _isKey2 = _interopRequireDefault(_isKey);\n\nvar _isLength = require('./isLength');\n\nvar _isLength2 = _interopRequireDefault(_isLength);\n\nvar _isString = require('./isString');\n\nvar _isString2 = _interopRequireDefault(_isString);\n\nvar _toKey = require('./_toKey');\n\nvar _toKey2 = _interopRequireDefault(_toKey);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = (0, _isKey2.default)(path, object) ? [path] : (0, _castPath2.default)(path);\n\n  var result,\n      index = -1,\n      length = path.length;\n\n  while (++index < length) {\n    var key = (0, _toKey2.default)(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result) {\n    return result;\n  }\n  var length = object ? object.length : 0;\n  return !!length && (0, _isLength2.default)(length) && (0, _isIndex2.default)(key, length) && ((0, _isArray2.default)(object) || (0, _isString2.default)(object) || (0, _isArguments2.default)(object));\n}\n\nexports.default = hasPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_hasPath.js\n// module id = 455\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _nativeCreate = require('./_nativeCreate');\n\nvar _nativeCreate2 = _interopRequireDefault(_nativeCreate);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = _nativeCreate2.default ? (0, _nativeCreate2.default)(null) : {};\n}\n\nexports.default = hashClear;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_hashClear.js\n// module id = 456\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\nexports.default = hashDelete;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_hashDelete.js\n// module id = 457\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _nativeCreate = require('./_nativeCreate');\n\nvar _nativeCreate2 = _interopRequireDefault(_nativeCreate);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (_nativeCreate2.default) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexports.default = hashGet;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_hashGet.js\n// module id = 458\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _nativeCreate = require('./_nativeCreate');\n\nvar _nativeCreate2 = _interopRequireDefault(_nativeCreate);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return _nativeCreate2.default ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nexports.default = hashHas;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_hashHas.js\n// module id = 459\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _nativeCreate = require('./_nativeCreate');\n\nvar _nativeCreate2 = _interopRequireDefault(_nativeCreate);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = _nativeCreate2.default && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexports.default = hashSet;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_hashSet.js\n// module id = 460\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nexports.default = initCloneArray;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_initCloneArray.js\n// module id = 461\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _cloneArrayBuffer = require('./_cloneArrayBuffer');\n\nvar _cloneArrayBuffer2 = _interopRequireDefault(_cloneArrayBuffer);\n\nvar _cloneDataView = require('./_cloneDataView');\n\nvar _cloneDataView2 = _interopRequireDefault(_cloneDataView);\n\nvar _cloneMap = require('./_cloneMap');\n\nvar _cloneMap2 = _interopRequireDefault(_cloneMap);\n\nvar _cloneRegExp = require('./_cloneRegExp');\n\nvar _cloneRegExp2 = _interopRequireDefault(_cloneRegExp);\n\nvar _cloneSet = require('./_cloneSet');\n\nvar _cloneSet2 = _interopRequireDefault(_cloneSet);\n\nvar _cloneSymbol = require('./_cloneSymbol');\n\nvar _cloneSymbol2 = _interopRequireDefault(_cloneSymbol);\n\nvar _cloneTypedArray = require('./_cloneTypedArray');\n\nvar _cloneTypedArray2 = _interopRequireDefault(_cloneTypedArray);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return (0, _cloneArrayBuffer2.default)(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return (0, _cloneDataView2.default)(object, isDeep);\n\n    case float32Tag:case float64Tag:\n    case int8Tag:case int16Tag:case int32Tag:\n    case uint8Tag:case uint8ClampedTag:case uint16Tag:case uint32Tag:\n      return (0, _cloneTypedArray2.default)(object, isDeep);\n\n    case mapTag:\n      return (0, _cloneMap2.default)(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return (0, _cloneRegExp2.default)(object);\n\n    case setTag:\n      return (0, _cloneSet2.default)(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return (0, _cloneSymbol2.default)(object);\n  }\n}\n\nexports.default = initCloneByTag;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_initCloneByTag.js\n// module id = 462\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseCreate = require('./_baseCreate');\n\nvar _baseCreate2 = _interopRequireDefault(_baseCreate);\n\nvar _getPrototype = require('./_getPrototype');\n\nvar _getPrototype2 = _interopRequireDefault(_getPrototype);\n\nvar _isPrototype = require('./_isPrototype');\n\nvar _isPrototype2 = _interopRequireDefault(_isPrototype);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return typeof object.constructor == 'function' && !(0, _isPrototype2.default)(object) ? (0, _baseCreate2.default)((0, _getPrototype2.default)(object)) : {};\n}\n\nexports.default = initCloneObject;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_initCloneObject.js\n// module id = 463\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isArguments = require('./isArguments');\n\nvar _isArguments2 = _interopRequireDefault(_isArguments);\n\nvar _isArray = require('./isArray');\n\nvar _isArray2 = _interopRequireDefault(_isArray);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return (0, _isArray2.default)(value) || (0, _isArguments2.default)(value);\n}\n\nexports.default = isFlattenable;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_isFlattenable.js\n// module id = 464\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nexports.default = isKeyable;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_isKeyable.js\n// module id = 465\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Converts `iterator` to an array.\n *\n * @private\n * @param {Object} iterator The iterator to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction iteratorToArray(iterator) {\n  var data,\n      result = [];\n\n  while (!(data = iterator.next()).done) {\n    result.push(data.value);\n  }\n  return result;\n}\n\nexports.default = iteratorToArray;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_iteratorToArray.js\n// module id = 466\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\nexports.default = listCacheClear;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_listCacheClear.js\n// module id = 467\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _assocIndexOf = require('./_assocIndexOf');\n\nvar _assocIndexOf2 = _interopRequireDefault(_assocIndexOf);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = (0, _assocIndexOf2.default)(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\nexports.default = listCacheDelete;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_listCacheDelete.js\n// module id = 468\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _assocIndexOf = require('./_assocIndexOf');\n\nvar _assocIndexOf2 = _interopRequireDefault(_assocIndexOf);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = (0, _assocIndexOf2.default)(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nexports.default = listCacheGet;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_listCacheGet.js\n// module id = 469\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _assocIndexOf = require('./_assocIndexOf');\n\nvar _assocIndexOf2 = _interopRequireDefault(_assocIndexOf);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return (0, _assocIndexOf2.default)(this.__data__, key) > -1;\n}\n\nexports.default = listCacheHas;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_listCacheHas.js\n// module id = 470\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _assocIndexOf = require('./_assocIndexOf');\n\nvar _assocIndexOf2 = _interopRequireDefault(_assocIndexOf);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = (0, _assocIndexOf2.default)(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nexports.default = listCacheSet;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_listCacheSet.js\n// module id = 471\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Hash = require('./_Hash');\n\nvar _Hash2 = _interopRequireDefault(_Hash);\n\nvar _ListCache = require('./_ListCache');\n\nvar _ListCache2 = _interopRequireDefault(_ListCache);\n\nvar _Map = require('./_Map');\n\nvar _Map2 = _interopRequireDefault(_Map);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new _Hash2.default(),\n    'map': new (_Map2.default || _ListCache2.default)(),\n    'string': new _Hash2.default()\n  };\n}\n\nexports.default = mapCacheClear;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_mapCacheClear.js\n// module id = 472\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getMapData = require('./_getMapData');\n\nvar _getMapData2 = _interopRequireDefault(_getMapData);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return (0, _getMapData2.default)(this, key)['delete'](key);\n}\n\nexports.default = mapCacheDelete;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_mapCacheDelete.js\n// module id = 473\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getMapData = require('./_getMapData');\n\nvar _getMapData2 = _interopRequireDefault(_getMapData);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return (0, _getMapData2.default)(this, key).get(key);\n}\n\nexports.default = mapCacheGet;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_mapCacheGet.js\n// module id = 474\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getMapData = require('./_getMapData');\n\nvar _getMapData2 = _interopRequireDefault(_getMapData);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return (0, _getMapData2.default)(this, key).has(key);\n}\n\nexports.default = mapCacheHas;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_mapCacheHas.js\n// module id = 475\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getMapData = require('./_getMapData');\n\nvar _getMapData2 = _interopRequireDefault(_getMapData);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  (0, _getMapData2.default)(this, key).set(key, value);\n  return this;\n}\n\nexports.default = mapCacheSet;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_mapCacheSet.js\n// module id = 476\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseGet = require('./_baseGet');\n\nvar _baseGet2 = _interopRequireDefault(_baseGet);\n\nvar _baseSlice = require('./_baseSlice');\n\nvar _baseSlice2 = _interopRequireDefault(_baseSlice);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length == 1 ? object : (0, _baseGet2.default)(object, (0, _baseSlice2.default)(path, 0, -1));\n}\n\nexports.default = parent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_parent.js\n// module id = 477\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nexports.default = setCacheAdd;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_setCacheAdd.js\n// module id = 478\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nexports.default = setCacheHas;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_setCacheHas.js\n// module id = 479\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Converts `set` to its value-value pairs.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the value-value pairs.\n */\nfunction setToPairs(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function (value) {\n    result[++index] = [value, value];\n  });\n  return result;\n}\n\nexports.default = setToPairs;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_setToPairs.js\n// module id = 480\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ListCache = require('./_ListCache');\n\nvar _ListCache2 = _interopRequireDefault(_ListCache);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new _ListCache2.default();\n}\n\nexports.default = stackClear;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_stackClear.js\n// module id = 481\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\nexports.default = stackDelete;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_stackDelete.js\n// module id = 482\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nexports.default = stackGet;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_stackGet.js\n// module id = 483\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nexports.default = stackHas;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_stackHas.js\n// module id = 484\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ListCache = require('./_ListCache');\n\nvar _ListCache2 = _interopRequireDefault(_ListCache);\n\nvar _MapCache = require('./_MapCache');\n\nvar _MapCache2 = _interopRequireDefault(_MapCache);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof _ListCache2.default && cache.__data__.length == LARGE_ARRAY_SIZE) {\n    cache = this.__data__ = new _MapCache2.default(cache.__data__);\n  }\n  cache.set(key, value);\n  return this;\n}\n\nexports.default = stackSet;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_stackSet.js\n// module id = 485\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _memoize = require('./memoize');\n\nvar _memoize2 = _interopRequireDefault(_memoize);\n\nvar _toString = require('./toString');\n\nvar _toString2 = _interopRequireDefault(_toString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = (0, _memoize2.default)(function (string) {\n  var result = [];\n  (0, _toString2.default)(string).replace(rePropName, function (match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\n\nexports.default = stringToPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/_stringToPath.js\n// module id = 486\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _chunk = require('./chunk');\n\nvar _chunk2 = _interopRequireDefault(_chunk);\n\nvar _compact = require('./compact');\n\nvar _compact2 = _interopRequireDefault(_compact);\n\nvar _concat = require('./concat');\n\nvar _concat2 = _interopRequireDefault(_concat);\n\nvar _difference = require('./difference');\n\nvar _difference2 = _interopRequireDefault(_difference);\n\nvar _differenceBy = require('./differenceBy');\n\nvar _differenceBy2 = _interopRequireDefault(_differenceBy);\n\nvar _differenceWith = require('./differenceWith');\n\nvar _differenceWith2 = _interopRequireDefault(_differenceWith);\n\nvar _drop = require('./drop');\n\nvar _drop2 = _interopRequireDefault(_drop);\n\nvar _dropRight = require('./dropRight');\n\nvar _dropRight2 = _interopRequireDefault(_dropRight);\n\nvar _dropRightWhile = require('./dropRightWhile');\n\nvar _dropRightWhile2 = _interopRequireDefault(_dropRightWhile);\n\nvar _dropWhile = require('./dropWhile');\n\nvar _dropWhile2 = _interopRequireDefault(_dropWhile);\n\nvar _fill = require('./fill');\n\nvar _fill2 = _interopRequireDefault(_fill);\n\nvar _findIndex = require('./findIndex');\n\nvar _findIndex2 = _interopRequireDefault(_findIndex);\n\nvar _findLastIndex = require('./findLastIndex');\n\nvar _findLastIndex2 = _interopRequireDefault(_findLastIndex);\n\nvar _first = require('./first');\n\nvar _first2 = _interopRequireDefault(_first);\n\nvar _flatten = require('./flatten');\n\nvar _flatten2 = _interopRequireDefault(_flatten);\n\nvar _flattenDeep = require('./flattenDeep');\n\nvar _flattenDeep2 = _interopRequireDefault(_flattenDeep);\n\nvar _flattenDepth = require('./flattenDepth');\n\nvar _flattenDepth2 = _interopRequireDefault(_flattenDepth);\n\nvar _fromPairs = require('./fromPairs');\n\nvar _fromPairs2 = _interopRequireDefault(_fromPairs);\n\nvar _head = require('./head');\n\nvar _head2 = _interopRequireDefault(_head);\n\nvar _indexOf = require('./indexOf');\n\nvar _indexOf2 = _interopRequireDefault(_indexOf);\n\nvar _initial = require('./initial');\n\nvar _initial2 = _interopRequireDefault(_initial);\n\nvar _intersection = require('./intersection');\n\nvar _intersection2 = _interopRequireDefault(_intersection);\n\nvar _intersectionBy = require('./intersectionBy');\n\nvar _intersectionBy2 = _interopRequireDefault(_intersectionBy);\n\nvar _intersectionWith = require('./intersectionWith');\n\nvar _intersectionWith2 = _interopRequireDefault(_intersectionWith);\n\nvar _join = require('./join');\n\nvar _join2 = _interopRequireDefault(_join);\n\nvar _last = require('./last');\n\nvar _last2 = _interopRequireDefault(_last);\n\nvar _lastIndexOf = require('./lastIndexOf');\n\nvar _lastIndexOf2 = _interopRequireDefault(_lastIndexOf);\n\nvar _nth = require('./nth');\n\nvar _nth2 = _interopRequireDefault(_nth);\n\nvar _pull = require('./pull');\n\nvar _pull2 = _interopRequireDefault(_pull);\n\nvar _pullAll = require('./pullAll');\n\nvar _pullAll2 = _interopRequireDefault(_pullAll);\n\nvar _pullAllBy = require('./pullAllBy');\n\nvar _pullAllBy2 = _interopRequireDefault(_pullAllBy);\n\nvar _pullAllWith = require('./pullAllWith');\n\nvar _pullAllWith2 = _interopRequireDefault(_pullAllWith);\n\nvar _pullAt = require('./pullAt');\n\nvar _pullAt2 = _interopRequireDefault(_pullAt);\n\nvar _remove = require('./remove');\n\nvar _remove2 = _interopRequireDefault(_remove);\n\nvar _reverse = require('./reverse');\n\nvar _reverse2 = _interopRequireDefault(_reverse);\n\nvar _slice = require('./slice');\n\nvar _slice2 = _interopRequireDefault(_slice);\n\nvar _sortedIndex = require('./sortedIndex');\n\nvar _sortedIndex2 = _interopRequireDefault(_sortedIndex);\n\nvar _sortedIndexBy = require('./sortedIndexBy');\n\nvar _sortedIndexBy2 = _interopRequireDefault(_sortedIndexBy);\n\nvar _sortedIndexOf = require('./sortedIndexOf');\n\nvar _sortedIndexOf2 = _interopRequireDefault(_sortedIndexOf);\n\nvar _sortedLastIndex = require('./sortedLastIndex');\n\nvar _sortedLastIndex2 = _interopRequireDefault(_sortedLastIndex);\n\nvar _sortedLastIndexBy = require('./sortedLastIndexBy');\n\nvar _sortedLastIndexBy2 = _interopRequireDefault(_sortedLastIndexBy);\n\nvar _sortedLastIndexOf = require('./sortedLastIndexOf');\n\nvar _sortedLastIndexOf2 = _interopRequireDefault(_sortedLastIndexOf);\n\nvar _sortedUniq = require('./sortedUniq');\n\nvar _sortedUniq2 = _interopRequireDefault(_sortedUniq);\n\nvar _sortedUniqBy = require('./sortedUniqBy');\n\nvar _sortedUniqBy2 = _interopRequireDefault(_sortedUniqBy);\n\nvar _tail = require('./tail');\n\nvar _tail2 = _interopRequireDefault(_tail);\n\nvar _take = require('./take');\n\nvar _take2 = _interopRequireDefault(_take);\n\nvar _takeRight = require('./takeRight');\n\nvar _takeRight2 = _interopRequireDefault(_takeRight);\n\nvar _takeRightWhile = require('./takeRightWhile');\n\nvar _takeRightWhile2 = _interopRequireDefault(_takeRightWhile);\n\nvar _takeWhile = require('./takeWhile');\n\nvar _takeWhile2 = _interopRequireDefault(_takeWhile);\n\nvar _union = require('./union');\n\nvar _union2 = _interopRequireDefault(_union);\n\nvar _unionBy = require('./unionBy');\n\nvar _unionBy2 = _interopRequireDefault(_unionBy);\n\nvar _unionWith = require('./unionWith');\n\nvar _unionWith2 = _interopRequireDefault(_unionWith);\n\nvar _uniq = require('./uniq');\n\nvar _uniq2 = _interopRequireDefault(_uniq);\n\nvar _uniqBy = require('./uniqBy');\n\nvar _uniqBy2 = _interopRequireDefault(_uniqBy);\n\nvar _uniqWith = require('./uniqWith');\n\nvar _uniqWith2 = _interopRequireDefault(_uniqWith);\n\nvar _unzip = require('./unzip');\n\nvar _unzip2 = _interopRequireDefault(_unzip);\n\nvar _unzipWith = require('./unzipWith');\n\nvar _unzipWith2 = _interopRequireDefault(_unzipWith);\n\nvar _without = require('./without');\n\nvar _without2 = _interopRequireDefault(_without);\n\nvar _xor = require('./xor');\n\nvar _xor2 = _interopRequireDefault(_xor);\n\nvar _xorBy = require('./xorBy');\n\nvar _xorBy2 = _interopRequireDefault(_xorBy);\n\nvar _xorWith = require('./xorWith');\n\nvar _xorWith2 = _interopRequireDefault(_xorWith);\n\nvar _zip = require('./zip');\n\nvar _zip2 = _interopRequireDefault(_zip);\n\nvar _zipObject = require('./zipObject');\n\nvar _zipObject2 = _interopRequireDefault(_zipObject);\n\nvar _zipObjectDeep = require('./zipObjectDeep');\n\nvar _zipObjectDeep2 = _interopRequireDefault(_zipObjectDeep);\n\nvar _zipWith = require('./zipWith');\n\nvar _zipWith2 = _interopRequireDefault(_zipWith);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  chunk: _chunk2.default, compact: _compact2.default, concat: _concat2.default, difference: _difference2.default, differenceBy: _differenceBy2.default,\n  differenceWith: _differenceWith2.default, drop: _drop2.default, dropRight: _dropRight2.default, dropRightWhile: _dropRightWhile2.default, dropWhile: _dropWhile2.default,\n  fill: _fill2.default, findIndex: _findIndex2.default, findLastIndex: _findLastIndex2.default, first: _first2.default, flatten: _flatten2.default,\n  flattenDeep: _flattenDeep2.default, flattenDepth: _flattenDepth2.default, fromPairs: _fromPairs2.default, head: _head2.default, indexOf: _indexOf2.default,\n  initial: _initial2.default, intersection: _intersection2.default, intersectionBy: _intersectionBy2.default, intersectionWith: _intersectionWith2.default, join: _join2.default,\n  last: _last2.default, lastIndexOf: _lastIndexOf2.default, nth: _nth2.default, pull: _pull2.default, pullAll: _pullAll2.default,\n  pullAllBy: _pullAllBy2.default, pullAllWith: _pullAllWith2.default, pullAt: _pullAt2.default, remove: _remove2.default, reverse: _reverse2.default,\n  slice: _slice2.default, sortedIndex: _sortedIndex2.default, sortedIndexBy: _sortedIndexBy2.default, sortedIndexOf: _sortedIndexOf2.default, sortedLastIndex: _sortedLastIndex2.default,\n  sortedLastIndexBy: _sortedLastIndexBy2.default, sortedLastIndexOf: _sortedLastIndexOf2.default, sortedUniq: _sortedUniq2.default, sortedUniqBy: _sortedUniqBy2.default, tail: _tail2.default,\n  take: _take2.default, takeRight: _takeRight2.default, takeRightWhile: _takeRightWhile2.default, takeWhile: _takeWhile2.default, union: _union2.default,\n  unionBy: _unionBy2.default, unionWith: _unionWith2.default, uniq: _uniq2.default, uniqBy: _uniqBy2.default, uniqWith: _uniqWith2.default,\n  unzip: _unzip2.default, unzipWith: _unzipWith2.default, without: _without2.default, xor: _xor2.default, xorBy: _xorBy2.default,\n  xorWith: _xorWith2.default, zip: _zip2.default, zipObject: _zipObject2.default, zipObjectDeep: _zipObjectDeep2.default, zipWith: _zipWith2.default\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/array.default.js\n// module id = 487\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _chunk = require('./chunk');\n\nObject.defineProperty(exports, 'chunk', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_chunk).default;\n  }\n});\n\nvar _compact = require('./compact');\n\nObject.defineProperty(exports, 'compact', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_compact).default;\n  }\n});\n\nvar _concat = require('./concat');\n\nObject.defineProperty(exports, 'concat', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_concat).default;\n  }\n});\n\nvar _difference = require('./difference');\n\nObject.defineProperty(exports, 'difference', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_difference).default;\n  }\n});\n\nvar _differenceBy = require('./differenceBy');\n\nObject.defineProperty(exports, 'differenceBy', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_differenceBy).default;\n  }\n});\n\nvar _differenceWith = require('./differenceWith');\n\nObject.defineProperty(exports, 'differenceWith', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_differenceWith).default;\n  }\n});\n\nvar _drop = require('./drop');\n\nObject.defineProperty(exports, 'drop', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_drop).default;\n  }\n});\n\nvar _dropRight = require('./dropRight');\n\nObject.defineProperty(exports, 'dropRight', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_dropRight).default;\n  }\n});\n\nvar _dropRightWhile = require('./dropRightWhile');\n\nObject.defineProperty(exports, 'dropRightWhile', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_dropRightWhile).default;\n  }\n});\n\nvar _dropWhile = require('./dropWhile');\n\nObject.defineProperty(exports, 'dropWhile', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_dropWhile).default;\n  }\n});\n\nvar _fill = require('./fill');\n\nObject.defineProperty(exports, 'fill', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_fill).default;\n  }\n});\n\nvar _findIndex = require('./findIndex');\n\nObject.defineProperty(exports, 'findIndex', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_findIndex).default;\n  }\n});\n\nvar _findLastIndex = require('./findLastIndex');\n\nObject.defineProperty(exports, 'findLastIndex', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_findLastIndex).default;\n  }\n});\n\nvar _first = require('./first');\n\nObject.defineProperty(exports, 'first', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_first).default;\n  }\n});\n\nvar _flatten = require('./flatten');\n\nObject.defineProperty(exports, 'flatten', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_flatten).default;\n  }\n});\n\nvar _flattenDeep = require('./flattenDeep');\n\nObject.defineProperty(exports, 'flattenDeep', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_flattenDeep).default;\n  }\n});\n\nvar _flattenDepth = require('./flattenDepth');\n\nObject.defineProperty(exports, 'flattenDepth', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_flattenDepth).default;\n  }\n});\n\nvar _fromPairs = require('./fromPairs');\n\nObject.defineProperty(exports, 'fromPairs', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_fromPairs).default;\n  }\n});\n\nvar _head = require('./head');\n\nObject.defineProperty(exports, 'head', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_head).default;\n  }\n});\n\nvar _indexOf = require('./indexOf');\n\nObject.defineProperty(exports, 'indexOf', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_indexOf).default;\n  }\n});\n\nvar _initial = require('./initial');\n\nObject.defineProperty(exports, 'initial', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_initial).default;\n  }\n});\n\nvar _intersection = require('./intersection');\n\nObject.defineProperty(exports, 'intersection', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_intersection).default;\n  }\n});\n\nvar _intersectionBy = require('./intersectionBy');\n\nObject.defineProperty(exports, 'intersectionBy', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_intersectionBy).default;\n  }\n});\n\nvar _intersectionWith = require('./intersectionWith');\n\nObject.defineProperty(exports, 'intersectionWith', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_intersectionWith).default;\n  }\n});\n\nvar _join = require('./join');\n\nObject.defineProperty(exports, 'join', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_join).default;\n  }\n});\n\nvar _last = require('./last');\n\nObject.defineProperty(exports, 'last', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_last).default;\n  }\n});\n\nvar _lastIndexOf = require('./lastIndexOf');\n\nObject.defineProperty(exports, 'lastIndexOf', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_lastIndexOf).default;\n  }\n});\n\nvar _nth = require('./nth');\n\nObject.defineProperty(exports, 'nth', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_nth).default;\n  }\n});\n\nvar _pull = require('./pull');\n\nObject.defineProperty(exports, 'pull', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_pull).default;\n  }\n});\n\nvar _pullAll = require('./pullAll');\n\nObject.defineProperty(exports, 'pullAll', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_pullAll).default;\n  }\n});\n\nvar _pullAllBy = require('./pullAllBy');\n\nObject.defineProperty(exports, 'pullAllBy', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_pullAllBy).default;\n  }\n});\n\nvar _pullAllWith = require('./pullAllWith');\n\nObject.defineProperty(exports, 'pullAllWith', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_pullAllWith).default;\n  }\n});\n\nvar _pullAt = require('./pullAt');\n\nObject.defineProperty(exports, 'pullAt', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_pullAt).default;\n  }\n});\n\nvar _remove = require('./remove');\n\nObject.defineProperty(exports, 'remove', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_remove).default;\n  }\n});\n\nvar _reverse = require('./reverse');\n\nObject.defineProperty(exports, 'reverse', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_reverse).default;\n  }\n});\n\nvar _slice = require('./slice');\n\nObject.defineProperty(exports, 'slice', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_slice).default;\n  }\n});\n\nvar _sortedIndex = require('./sortedIndex');\n\nObject.defineProperty(exports, 'sortedIndex', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_sortedIndex).default;\n  }\n});\n\nvar _sortedIndexBy = require('./sortedIndexBy');\n\nObject.defineProperty(exports, 'sortedIndexBy', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_sortedIndexBy).default;\n  }\n});\n\nvar _sortedIndexOf = require('./sortedIndexOf');\n\nObject.defineProperty(exports, 'sortedIndexOf', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_sortedIndexOf).default;\n  }\n});\n\nvar _sortedLastIndex = require('./sortedLastIndex');\n\nObject.defineProperty(exports, 'sortedLastIndex', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_sortedLastIndex).default;\n  }\n});\n\nvar _sortedLastIndexBy = require('./sortedLastIndexBy');\n\nObject.defineProperty(exports, 'sortedLastIndexBy', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_sortedLastIndexBy).default;\n  }\n});\n\nvar _sortedLastIndexOf = require('./sortedLastIndexOf');\n\nObject.defineProperty(exports, 'sortedLastIndexOf', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_sortedLastIndexOf).default;\n  }\n});\n\nvar _sortedUniq = require('./sortedUniq');\n\nObject.defineProperty(exports, 'sortedUniq', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_sortedUniq).default;\n  }\n});\n\nvar _sortedUniqBy = require('./sortedUniqBy');\n\nObject.defineProperty(exports, 'sortedUniqBy', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_sortedUniqBy).default;\n  }\n});\n\nvar _tail = require('./tail');\n\nObject.defineProperty(exports, 'tail', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_tail).default;\n  }\n});\n\nvar _take = require('./take');\n\nObject.defineProperty(exports, 'take', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_take).default;\n  }\n});\n\nvar _takeRight = require('./takeRight');\n\nObject.defineProperty(exports, 'takeRight', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_takeRight).default;\n  }\n});\n\nvar _takeRightWhile = require('./takeRightWhile');\n\nObject.defineProperty(exports, 'takeRightWhile', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_takeRightWhile).default;\n  }\n});\n\nvar _takeWhile = require('./takeWhile');\n\nObject.defineProperty(exports, 'takeWhile', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_takeWhile).default;\n  }\n});\n\nvar _union = require('./union');\n\nObject.defineProperty(exports, 'union', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_union).default;\n  }\n});\n\nvar _unionBy = require('./unionBy');\n\nObject.defineProperty(exports, 'unionBy', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_unionBy).default;\n  }\n});\n\nvar _unionWith = require('./unionWith');\n\nObject.defineProperty(exports, 'unionWith', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_unionWith).default;\n  }\n});\n\nvar _uniq = require('./uniq');\n\nObject.defineProperty(exports, 'uniq', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_uniq).default;\n  }\n});\n\nvar _uniqBy = require('./uniqBy');\n\nObject.defineProperty(exports, 'uniqBy', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_uniqBy).default;\n  }\n});\n\nvar _uniqWith = require('./uniqWith');\n\nObject.defineProperty(exports, 'uniqWith', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_uniqWith).default;\n  }\n});\n\nvar _unzip = require('./unzip');\n\nObject.defineProperty(exports, 'unzip', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_unzip).default;\n  }\n});\n\nvar _unzipWith = require('./unzipWith');\n\nObject.defineProperty(exports, 'unzipWith', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_unzipWith).default;\n  }\n});\n\nvar _without = require('./without');\n\nObject.defineProperty(exports, 'without', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_without).default;\n  }\n});\n\nvar _xor = require('./xor');\n\nObject.defineProperty(exports, 'xor', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_xor).default;\n  }\n});\n\nvar _xorBy = require('./xorBy');\n\nObject.defineProperty(exports, 'xorBy', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_xorBy).default;\n  }\n});\n\nvar _xorWith = require('./xorWith');\n\nObject.defineProperty(exports, 'xorWith', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_xorWith).default;\n  }\n});\n\nvar _zip = require('./zip');\n\nObject.defineProperty(exports, 'zip', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_zip).default;\n  }\n});\n\nvar _zipObject = require('./zipObject');\n\nObject.defineProperty(exports, 'zipObject', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_zipObject).default;\n  }\n});\n\nvar _zipObjectDeep = require('./zipObjectDeep');\n\nObject.defineProperty(exports, 'zipObjectDeep', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_zipObjectDeep).default;\n  }\n});\n\nvar _zipWith = require('./zipWith');\n\nObject.defineProperty(exports, 'zipWith', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_zipWith).default;\n  }\n});\n\nvar _array = require('./array.default');\n\nObject.defineProperty(exports, 'default', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_array).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/array.js\n// module id = 488\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _assignValue = require('./_assignValue');\n\nvar _assignValue2 = _interopRequireDefault(_assignValue);\n\nvar _copyObject = require('./_copyObject');\n\nvar _copyObject2 = _interopRequireDefault(_copyObject);\n\nvar _createAssigner = require('./_createAssigner');\n\nvar _createAssigner2 = _interopRequireDefault(_createAssigner);\n\nvar _isArrayLike = require('./isArrayLike');\n\nvar _isArrayLike2 = _interopRequireDefault(_isArrayLike);\n\nvar _isPrototype = require('./_isPrototype');\n\nvar _isPrototype2 = _interopRequireDefault(_isPrototype);\n\nvar _keysIn = require('./keysIn');\n\nvar _keysIn2 = _interopRequireDefault(_keysIn);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\nvar nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\n/**\n * This method is like `_.assign` except that it iterates over own and\n * inherited source properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extend\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assign\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * function Bar() {\n *   this.d = 4;\n * }\n *\n * Foo.prototype.c = 3;\n * Bar.prototype.e = 5;\n *\n * _.assignIn({ 'a': 1 }, new Foo, new Bar);\n * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5 }\n */\nvar assignIn = (0, _createAssigner2.default)(function (object, source) {\n  if (nonEnumShadows || (0, _isPrototype2.default)(source) || (0, _isArrayLike2.default)(source)) {\n    (0, _copyObject2.default)(source, (0, _keysIn2.default)(source), object);\n    return;\n  }\n  for (var key in source) {\n    (0, _assignValue2.default)(object, key, source[key]);\n  }\n});\n\nexports.default = assignIn;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/assignIn.js\n// module id = 489\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseClone = require('./_baseClone');\n\nvar _baseClone2 = _interopRequireDefault(_baseClone);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This method is like `_.cloneWith` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @param {Function} [customizer] The function to customize cloning.\n * @returns {*} Returns the deep cloned value.\n * @see _.cloneWith\n * @example\n *\n * function customizer(value) {\n *   if (_.isElement(value)) {\n *     return value.cloneNode(true);\n *   }\n * }\n *\n * var el = _.cloneDeepWith(document.body, customizer);\n *\n * console.log(el === document.body);\n * // => false\n * console.log(el.nodeName);\n * // => 'BODY'\n * console.log(el.childNodes.length);\n * // => 20\n */\nfunction cloneDeepWith(value, customizer) {\n  return (0, _baseClone2.default)(value, true, true, customizer);\n}\n\nexports.default = cloneDeepWith;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/cloneDeepWith.js\n// module id = 490\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var object = { 'user': 'fred' };\n * var getter = _.constant(object);\n *\n * getter() === object;\n * // => true\n */\nfunction constant(value) {\n  return function () {\n    return value;\n  };\n}\n\nexports.default = constant;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/constant.js\n// module id = 491\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseHasIn = require('./_baseHasIn');\n\nvar _baseHasIn2 = _interopRequireDefault(_baseHasIn);\n\nvar _hasPath = require('./_hasPath');\n\nvar _hasPath2 = _interopRequireDefault(_hasPath);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && (0, _hasPath2.default)(object, path, _baseHasIn2.default);\n}\n\nexports.default = hasIn;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/hasIn.js\n// module id = 492\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _constant = require('./constant');\n\nvar _constant2 = _interopRequireDefault(_constant);\n\nvar _root = require('./_root');\n\nvar _root2 = _interopRequireDefault(_root);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used to determine if values are of the language type `Object`. */\nvar objectTypes = {\n  'function': true,\n  'object': true\n};\n\n/** Detect free variable `exports`. */\nvar freeExports = objectTypes[typeof exports === 'undefined' ? 'undefined' : _typeof(exports)] && exports && !exports.nodeType ? exports : undefined;\n\n/** Detect free variable `module`. */\nvar freeModule = objectTypes[typeof module === 'undefined' ? 'undefined' : _typeof(module)] && module && !module.nodeType ? module : undefined;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports ? freeExports : undefined;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? _root2.default.Buffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = !Buffer ? (0, _constant2.default)(false) : function (value) {\n  return value instanceof Buffer;\n};\n\nexports.default = isBuffer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/isBuffer.js\n// module id = 493\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseIsEqual = require('./_baseIsEqual');\n\nvar _baseIsEqual2 = _interopRequireDefault(_baseIsEqual);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are **not** supported.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent,\n *  else `false`.\n * @example\n *\n * var object = { 'user': 'fred' };\n * var other = { 'user': 'fred' };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return (0, _baseIsEqual2.default)(value, other);\n}\n\nexports.default = isEqual;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/isEqual.js\n// module id = 494\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseIsEqual = require('./_baseIsEqual');\n\nvar _baseIsEqual2 = _interopRequireDefault(_baseIsEqual);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This method is like `_.isEqual` except that it accepts `customizer` which\n * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n * are handled by the method instead. The `customizer` is invoked with up to\n * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if the values are equivalent,\n *  else `false`.\n * @example\n *\n * function isGreeting(value) {\n *   return /^h(?:i|ello)$/.test(value);\n * }\n *\n * function customizer(objValue, othValue) {\n *   if (isGreeting(objValue) && isGreeting(othValue)) {\n *     return true;\n *   }\n * }\n *\n * var array = ['hello', 'goodbye'];\n * var other = ['hi', 'goodbye'];\n *\n * _.isEqualWith(array, other, customizer);\n * // => true\n */\nfunction isEqualWith(value, other, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  var result = customizer ? customizer(value, other) : undefined;\n  return result === undefined ? (0, _baseIsEqual2.default)(value, other, customizer) : !!result;\n}\n\nexports.default = isEqualWith;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/isEqualWith.js\n// module id = 495\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _isLength = require('./isLength');\n\nvar _isLength2 = _interopRequireDefault(_isLength);\n\nvar _isObjectLike = require('./isObjectLike');\n\nvar _isObjectLike2 = _interopRequireDefault(_isObjectLike);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n *  else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nfunction isTypedArray(value) {\n    return (0, _isObjectLike2.default)(value) && (0, _isLength2.default)(value.length) && !!typedArrayTags[objectToString.call(value)];\n}\n\nexports.default = isTypedArray;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/isTypedArray.js\n// module id = 496\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseKeysIn = require('./_baseKeysIn');\n\nvar _baseKeysIn2 = _interopRequireDefault(_baseKeysIn);\n\nvar _indexKeys = require('./_indexKeys');\n\nvar _indexKeys2 = _interopRequireDefault(_indexKeys);\n\nvar _isIndex = require('./_isIndex');\n\nvar _isIndex2 = _interopRequireDefault(_isIndex);\n\nvar _isPrototype = require('./_isPrototype');\n\nvar _isPrototype2 = _interopRequireDefault(_isPrototype);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  var index = -1,\n      isProto = (0, _isPrototype2.default)(object),\n      props = (0, _baseKeysIn2.default)(object),\n      propsLength = props.length,\n      indexes = (0, _indexKeys2.default)(object),\n      skipIndexes = !!indexes,\n      result = indexes || [],\n      length = result.length;\n\n  while (++index < propsLength) {\n    var key = props[index];\n    if (!(skipIndexes && (key == 'length' || (0, _isIndex2.default)(key, length))) && !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexports.default = keysIn;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/keysIn.js\n// module id = 497\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _MapCache = require('./_MapCache');\n\nvar _MapCache2 = _interopRequireDefault(_MapCache);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || _MapCache2.default)();\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = _MapCache2.default;\n\nexports.default = memoize;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/memoize.js\n// module id = 498\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * A no-operation function that returns `undefined` regardless of the\n * arguments it receives.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.noop(object) === undefined;\n * // => true\n */\nfunction noop() {\n  // No operation performed.\n}\n\nexports.default = noop;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/noop.js\n// module id = 499\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @type {Function}\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred function to be invoked.\n */\nvar now = Date.now;\n\nexports.default = now;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/now.js\n// module id = 500\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseProperty = require('./_baseProperty');\n\nvar _baseProperty2 = _interopRequireDefault(_baseProperty);\n\nvar _basePropertyDeep = require('./_basePropertyDeep');\n\nvar _basePropertyDeep2 = _interopRequireDefault(_basePropertyDeep);\n\nvar _isKey = require('./_isKey');\n\nvar _isKey2 = _interopRequireDefault(_isKey);\n\nvar _toKey = require('./_toKey');\n\nvar _toKey2 = _interopRequireDefault(_toKey);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return (0, _isKey2.default)(path) ? (0, _baseProperty2.default)((0, _toKey2.default)(path)) : (0, _basePropertyDeep2.default)(path);\n}\n\nexports.default = property;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/property.js\n// module id = 501\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _toNumber = require('./toNumber');\n\nvar _toNumber2 = _interopRequireDefault(_toNumber);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = (0, _toNumber2.default)(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = value < 0 ? -1 : 1;\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexports.default = toFinite;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/toFinite.js\n// module id = 502\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseClamp = require('./_baseClamp');\n\nvar _baseClamp2 = _interopRequireDefault(_baseClamp);\n\nvar _toInteger = require('./toInteger');\n\nvar _toInteger2 = _interopRequireDefault(_toInteger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/**\n * Converts `value` to an integer suitable for use as the length of an\n * array-like object.\n *\n * **Note:** This method is based on\n * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toLength(3.2);\n * // => 3\n *\n * _.toLength(Number.MIN_VALUE);\n * // => 0\n *\n * _.toLength(Infinity);\n * // => 4294967295\n *\n * _.toLength('3.2');\n * // => 3\n */\nfunction toLength(value) {\n  return value ? (0, _baseClamp2.default)((0, _toInteger2.default)(value), 0, MAX_ARRAY_LENGTH) : 0;\n}\n\nexports.default = toLength;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/toLength.js\n// module id = 503\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createToPairs = require('./_createToPairs');\n\nvar _createToPairs2 = _interopRequireDefault(_createToPairs);\n\nvar _keys = require('./keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates an array of own enumerable string keyed-value pairs for `object`\n * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n * entries are returned.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias entries\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the key-value pairs.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.toPairs(new Foo);\n * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n */\nvar toPairs = (0, _createToPairs2.default)(_keys2.default);\n\nexports.default = toPairs;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/toPairs.js\n// module id = 504\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseToString = require('./_baseToString');\n\nvar _baseToString2 = _interopRequireDefault(_baseToString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : (0, _baseToString2.default)(value);\n}\n\nexports.default = toString;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/lib/lodash/toString.js\n// module id = 505\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nlicense Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\nor licensing, see LICENSE.md.\nn\n/**\n * @module utils/locale\n */\n\nvar _translationService = require('./translation-service');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Represents the localization services.\n */\nvar Locale = function () {\n\t/**\n  * Creates a new instance of the Locale class.\n  *\n  * @param {String} [lang='en'] The language code in [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.\n  */\n\tfunction Locale(lang) {\n\t\tvar _this = this;\n\n\t\t_classCallCheck(this, Locale);\n\n\t\t/**\n   * The language code in [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.\n   *\n   * @readonly\n   * @member {String}\n   */\n\t\tthis.lang = lang || 'en';\n\n\t\t/**\n   * Translates the given string to the {@link #lang}. This method is also availble in {@link module:core/editor/editor~Editor#t} and\n   * {@link module:ui/view~View#t}.\n   *\n   * The strings may contain placeholders (`%<index>`) for values which are passed as the second argument.\n   * `<index>` is the index in the `values` array.\n   *\n   *\t\teditor.t( 'Created file \"%0\" in %1ms.', [ fileName, timeTaken ] );\n   *\n   * This method's context is statically bound to Locale instance,\n   * so it can be called as a function:\n   *\n   *\t\tconst t = this.t;\n   *\t\tt( 'Label' );\n   *\n   * @method #t\n   * @param {String} str The string to translate.\n   * @param {String[]} values Values that should be used to interpolate the string.\n   */\n\t\tthis.t = function () {\n\t\t\treturn _this._t.apply(_this, arguments);\n\t\t};\n\t}\n\n\t/**\n  * Base for the {@link #t} method.\n  *\n  * @private\n  */\n\n\n\t_createClass(Locale, [{\n\t\tkey: '_t',\n\t\tvalue: function _t(str, values) {\n\t\t\tvar translatedString = (0, _translationService.translate)(this.lang, str);\n\n\t\t\tif (values) {\n\t\t\t\ttranslatedString = translatedString.replace(/%(\\d+)/g, function (match, index) {\n\t\t\t\t\treturn index < values.length ? values[index] : match;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn translatedString;\n\t\t}\n\t}]);\n\n\treturn Locale;\n}();\n\nexports.default = Locale;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/locale.js\n// module id = 506\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = mapsEqual;\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/mapsequal\n */\n\n/**\n * Checks whether given {Map}s are equal, that is has same size and same key-value pairs.\n *\n * @returns {Boolean} `true` if given maps are equal, `false` otherwise.\n */\nfunction mapsEqual(mapA, mapB) {\n\tif (mapA.size != mapB.size) {\n\t\treturn false;\n\t}\n\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = mapA.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar attr = _step.value;\n\n\t\t\tvar valA = JSON.stringify(attr[1]);\n\t\t\tvar valB = JSON.stringify(mapB.get(attr[0]));\n\n\t\t\tif (valA !== valB) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/mapsequal.js\n// module id = 507\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/priorities\n */\n\n/**\n * String representing a priority value.\n *\n * @typedef {'highest'|'high'|'normal'|'low'|'lowest'} module:utils/priorities~PriorityString\n */\n\n/**\n * Provides group of constants to use instead of hardcoding numeric priority values.\n *\n * @namespace\n */\nvar priorities = {\n\t/**\n  * Converts a string with priority name to it's numeric value. If `Number` is given, it just returns it.\n  *\n  * @static\n  * @param {module:utils/priorities~PriorityString|Number} priority Priority to convert.\n  * @returns {Number} Converted priority.\n  */\n\tget: function get(priority) {\n\t\tif (typeof priority != 'number') {\n\t\t\treturn this[priority] || this.normal;\n\t\t} else {\n\t\t\treturn priority;\n\t\t}\n\t},\n\n\n\thighest: 100000,\n\thigh: 1000,\n\tnormal: 0,\n\tlow: -1000,\n\tlowest: -100000\n};\n\nexports.default = priorities;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/priorities.js\n// module id = 508\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/spy\n */\n\n/**\n * Creates a spy function (ala Sinon.js) that can be used to inspect call to it.\n *\n * The following are the present features:\n *\n * * spy.called: property set to `true` if the function has been called at least once.\n *\n * @returns {Function} The spy function.\n */\nfunction spy() {\n  return function spy() {\n    spy.called = true;\n  };\n}\n\nexports.default = spy;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/spy.js\n// module id = 509\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.add = add;\nexports.translate = translate;\nexports._clear = _clear;\n/**\n * @license Copyright (c) 2003-2016, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/translation-service\n */\n\nvar dictionaries = {};\n\n/**\n * Adds package translations to existing ones.\n * These translations will later be available for {@link module:utils/translation-service~translate translate}.\n *\n *\t\tadd( 'pl', {\n *\t\t\t'OK': 'OK',\n *\t\t\t'Cancel [context: reject]': 'Anuluj'\n *\t\t} );\n *\n * @param {String} lang Target language.\n * @param {Object.<String, String>} translations Translations which will be added to the dictionary.\n */\nfunction add(lang, translations) {\n  dictionaries[lang] = dictionaries[lang] || {};\n\n  Object.assign(dictionaries[lang], translations);\n}\n\n/**\n * Translates string if the translation of the string was previously {@link module:utils/translation-service~add added}\n * to the dictionary. This happens in a multi-language mode were translation modules are created by the bundler.\n *\n * When no translation is defined in the dictionary or the dictionary doesn't exist this function returns\n * the original string without the `'[context: ]'` (happens in development and single-language modes).\n *\n * In a single-language mode (when values passed to `t()` were replaced with target languange strings) the dictionary\n * is left empty, so this function will return the original strings always.\n *\n *\t\ttranslate( 'pl', 'Cancel [context: reject]' );\n *\n * @param {String} lang Target language.\n * @param {String} translationKey String which is going to be translated.\n * @returns {String} Translated sentence.\n */\nfunction translate(lang, translationKey) {\n  if (!hasTranslation(lang, translationKey)) {\n    return translationKey.replace(/ \\[context: [^\\]]+\\]$/, '');\n  }\n\n  return dictionaries[lang][translationKey];\n}\n\n// Checks whether the dictionary exists and translaiton in that dictionary exists.\nfunction hasTranslation(lang, translationKey) {\n  return lang in dictionaries && translationKey in dictionaries[lang];\n}\n\n/**\n * Clears dictionaries for test purposes.\n *\n * @protected\n */\nfunction _clear() {\n  dictionaries = {};\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-utils/src/translation-service.js\n// module id = 510\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _plugin = require('@ckeditor/ckeditor5-core/src/plugin');\n\nvar _plugin2 = _interopRequireDefault(_plugin);\n\nvar _mouseobserver = require('@ckeditor/ckeditor5-engine/src/view/observer/mouseobserver');\n\nvar _mouseobserver2 = _interopRequireDefault(_mouseobserver);\n\nvar _range = require('@ckeditor/ckeditor5-engine/src/model/range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _selection = require('@ckeditor/ckeditor5-engine/src/model/selection');\n\nvar _selection2 = _interopRequireDefault(_selection);\n\nvar _element = require('@ckeditor/ckeditor5-engine/src/model/element');\n\nvar _element2 = _interopRequireDefault(_element);\n\nvar _editableelement = require('@ckeditor/ckeditor5-engine/src/view/editableelement');\n\nvar _editableelement2 = _interopRequireDefault(_editableelement);\n\nvar _rooteditableelement = require('@ckeditor/ckeditor5-engine/src/view/rooteditableelement');\n\nvar _rooteditableelement2 = _interopRequireDefault(_rooteditableelement);\n\nvar _utils = require('./utils');\n\nvar _keyboard = require('@ckeditor/ckeditor5-utils/src/keyboard');\n\nrequire('../theme/theme.scss');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * For licensing, see LICENSE.md.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n/**\n * @module widget/widget\n */\n\n/**\n * The widget plugin.\n * Registers model to view selection converter for editing pipeline. It is hooked after default selection conversion.\n * If converted selection is placed around widget element, selection is marked as fake. Additionally, proper CSS class\n * is added to indicate that widget has been selected.\n * Adds default {@link module:engine/view/document~Document#event:mousedown mousedown} handling on widget elements.\n *\n * @extends module:core/plugin~Plugin.\n */\nvar Widget = function (_Plugin) {\n\t_inherits(Widget, _Plugin);\n\n\tfunction Widget() {\n\t\t_classCallCheck(this, Widget);\n\n\t\treturn _possibleConstructorReturn(this, (Widget.__proto__ || Object.getPrototypeOf(Widget)).apply(this, arguments));\n\t}\n\n\t_createClass(Widget, [{\n\t\tkey: 'init',\n\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tvalue: function init() {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar viewDocument = this.editor.editing.view;\n\n\t\t\tvar previouslySelected = void 0;\n\n\t\t\t// Model to view selection converter.\n\t\t\t// Converts selection placed over widget element to fake selection\n\t\t\tthis.editor.editing.modelToView.on('selection', function (evt, data, consumable, conversionApi) {\n\t\t\t\t// Remove selected class from previously selected widget.\n\t\t\t\tif (previouslySelected && previouslySelected.hasClass(_utils.WIDGET_SELECTED_CLASS_NAME)) {\n\t\t\t\t\tpreviouslySelected.removeClass(_utils.WIDGET_SELECTED_CLASS_NAME);\n\t\t\t\t}\n\n\t\t\t\tvar viewSelection = conversionApi.viewSelection;\n\n\t\t\t\t// Check if widget was clicked or some sub-element.\n\t\t\t\tvar selectedElement = viewSelection.getSelectedElement();\n\n\t\t\t\tif (!selectedElement || !(0, _utils.isWidget)(selectedElement)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tviewSelection.setFake(true, { label: (0, _utils.getLabel)(selectedElement) });\n\t\t\t\tselectedElement.addClass(_utils.WIDGET_SELECTED_CLASS_NAME);\n\t\t\t\tpreviouslySelected = selectedElement;\n\t\t\t}, { priority: 'low' });\n\n\t\t\t// If mouse down is pressed on widget - create selection over whole widget.\n\t\t\tviewDocument.addObserver(_mouseobserver2.default);\n\t\t\tthis.listenTo(viewDocument, 'mousedown', function () {\n\t\t\t\treturn _this2._onMousedown.apply(_this2, arguments);\n\t\t\t});\n\n\t\t\t// Handle custom keydown behaviour.\n\t\t\tthis.listenTo(viewDocument, 'keydown', function () {\n\t\t\t\treturn _this2._onKeydown.apply(_this2, arguments);\n\t\t\t}, { priority: 'high' });\n\t\t}\n\n\t\t/**\n   * Handles {@link module:engine/view/document~Document#event:mousedown mousedown} events on widget elements.\n   *\n   * @private\n   * @param {module:utils/eventinfo~EventInfo} eventInfo\n   * @param {module:engine/view/observer/domeventdata~DomEventData} domEventData\n   */\n\n\t}, {\n\t\tkey: '_onMousedown',\n\t\tvalue: function _onMousedown(eventInfo, domEventData) {\n\t\t\tvar _this3 = this;\n\n\t\t\tvar editor = this.editor;\n\t\t\tvar viewDocument = editor.editing.view;\n\t\t\tvar element = domEventData.target;\n\n\t\t\t// Do nothing if inside nested editable.\n\t\t\tif (isInsideNestedEditable(element)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If target is not a widget element - check if one of the ancestors is.\n\t\t\tif (!(0, _utils.isWidget)(element)) {\n\t\t\t\telement = element.findAncestor(_utils.isWidget);\n\n\t\t\t\tif (!element) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdomEventData.preventDefault();\n\n\t\t\t// Focus editor if is not focused already.\n\t\t\tif (!viewDocument.isFocused) {\n\t\t\t\tviewDocument.focus();\n\t\t\t}\n\n\t\t\t// Create model selection over widget.\n\t\t\tvar modelElement = editor.editing.mapper.toModelElement(element);\n\n\t\t\teditor.document.enqueueChanges(function () {\n\t\t\t\t_this3._setSelectionOverElement(modelElement);\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * Handles {@link module:engine/view/document~Document#event:keydown keydown} events.\n   *\n   * @private\n   * @param {module:utils/eventinfo~EventInfo} eventInfo\n   * @param {module:engine/view/observer/domeventdata~DomEventData} domEventData\n   */\n\n\t}, {\n\t\tkey: '_onKeydown',\n\t\tvalue: function _onKeydown(eventInfo, domEventData) {\n\t\t\tvar keyCode = domEventData.keyCode;\n\t\t\tvar isForward = keyCode == _keyboard.keyCodes.delete || keyCode == _keyboard.keyCodes.arrowdown || keyCode == _keyboard.keyCodes.arrowright;\n\n\t\t\t// Checks if delete/backspace or arrow keys were handled and then prevents default event behaviour and stops\n\t\t\t// event propagation.\n\t\t\tif (isDeleteKeyCode(keyCode) && this._handleDelete(isForward) || isArrowKeyCode(keyCode) && this._handleArrowKeys(isForward)) {\n\t\t\t\tdomEventData.preventDefault();\n\t\t\t\teventInfo.stop();\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Handles delete keys: backspace and delete.\n   *\n   * @private\n   * @param {Boolean} isForward Set to true if delete was performed in forward direction.\n   * @returns {Boolean|undefined} Returns `true` if keys were handled correctly.\n   */\n\n\t}, {\n\t\tkey: '_handleDelete',\n\t\tvalue: function _handleDelete(isForward) {\n\t\t\tvar _this4 = this;\n\n\t\t\tvar modelDocument = this.editor.document;\n\t\t\tvar modelSelection = modelDocument.selection;\n\n\t\t\t// Do nothing on non-collapsed selection.\n\t\t\tif (!modelSelection.isCollapsed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar objectElement = this._getObjectElementNextToSelection(isForward);\n\n\t\t\tif (objectElement) {\n\t\t\t\tmodelDocument.enqueueChanges(function () {\n\t\t\t\t\t// Remove previous element if empty.\n\t\t\t\t\tvar previousNode = modelSelection.anchor.parent;\n\n\t\t\t\t\tif (previousNode.isEmpty) {\n\t\t\t\t\t\tvar batch = modelDocument.batch();\n\t\t\t\t\t\tbatch.remove(previousNode);\n\t\t\t\t\t}\n\n\t\t\t\t\t_this4._setSelectionOverElement(objectElement);\n\t\t\t\t});\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Handles arrow keys.\n   *\n   * @param {Boolean} isForward Set to true if arrow key should be handled in forward direction.\n   * @returns {Boolean|undefined} Returns `true` if keys were handled correctly.\n   */\n\n\t}, {\n\t\tkey: '_handleArrowKeys',\n\t\tvalue: function _handleArrowKeys(isForward) {\n\t\t\tvar _this5 = this;\n\n\t\t\tvar modelDocument = this.editor.document;\n\t\t\tvar schema = modelDocument.schema;\n\t\t\tvar modelSelection = modelDocument.selection;\n\t\t\tvar objectElement = modelSelection.getSelectedElement();\n\n\t\t\t// if object element is selected.\n\t\t\tif (objectElement && schema.objects.has(objectElement.name)) {\n\t\t\t\tvar position = isForward ? modelSelection.getLastPosition() : modelSelection.getFirstPosition();\n\t\t\t\tvar newRange = modelDocument.getNearestSelectionRange(position, isForward ? 'forward' : 'backward');\n\n\t\t\t\tif (newRange) {\n\t\t\t\t\tmodelDocument.enqueueChanges(function () {\n\t\t\t\t\t\tmodelSelection.setRanges([newRange]);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// If selection is next to object element.\n\t\t\t// Return if not collapsed.\n\t\t\tif (!modelSelection.isCollapsed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar objectElement2 = this._getObjectElementNextToSelection(isForward);\n\n\t\t\tif (objectElement2 instanceof _element2.default && modelDocument.schema.objects.has(objectElement2.name)) {\n\t\t\t\tmodelDocument.enqueueChanges(function () {\n\t\t\t\t\t_this5._setSelectionOverElement(objectElement2);\n\t\t\t\t});\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Sets {@link module:engine/model/selection~Selection document's selection} over given element.\n   *\n   * @private\n   * @param {module:engine/model/element~Element} element\n   */\n\n\t}, {\n\t\tkey: '_setSelectionOverElement',\n\t\tvalue: function _setSelectionOverElement(element) {\n\t\t\tthis.editor.document.selection.setRanges([_range2.default.createOn(element)]);\n\t\t}\n\n\t\t/**\n   * Checks if {@link module:engine/model/element~Element element} placed next to the current\n   * {@link module:engine/model/selection~Selection model selection} exists and is marked in\n   * {@link module:engine/model/schema~Schema schema} as `object`.\n   *\n   * @private\n   * @param {Boolean} forward Direction of checking.\n   * @returns {module:engine/model/element~Element|null}\n   */\n\n\t}, {\n\t\tkey: '_getObjectElementNextToSelection',\n\t\tvalue: function _getObjectElementNextToSelection(forward) {\n\t\t\tvar modelDocument = this.editor.document;\n\t\t\tvar schema = modelDocument.schema;\n\t\t\tvar modelSelection = modelDocument.selection;\n\t\t\tvar dataController = this.editor.data;\n\n\t\t\t// Clone current selection to use it as a probe. We must leave default selection as it is so it can return\n\t\t\t// to its current state after undo.\n\t\t\tvar probe = _selection2.default.createFromSelection(modelSelection);\n\t\t\tdataController.modifySelection(probe, { direction: forward ? 'forward' : 'backward' });\n\t\t\tvar objectElement = forward ? probe.focus.nodeBefore : probe.focus.nodeAfter;\n\n\t\t\tif (objectElement instanceof _element2.default && schema.objects.has(objectElement.name)) {\n\t\t\t\treturn objectElement;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\t}], [{\n\t\tkey: 'pluginName',\n\n\t\t/**\n   * @inheritDoc\n   */\n\t\tget: function get() {\n\t\t\treturn 'Widget';\n\t\t}\n\t}]);\n\n\treturn Widget;\n}(_plugin2.default);\n\n// Returns 'true' if provided key code represents one of the arrow keys.\n//\n// @param {Number} keyCode\n// @returns {Boolean}\n\n\nexports.default = Widget;\nfunction isArrowKeyCode(keyCode) {\n\treturn keyCode == _keyboard.keyCodes.arrowright || keyCode == _keyboard.keyCodes.arrowleft || keyCode == _keyboard.keyCodes.arrowup || keyCode == _keyboard.keyCodes.arrowdown;\n}\n\n// Returns 'true' if provided key code represents one of the delete keys: delete or backspace.\n//\n// @param {Number} keyCode\n// @returns {Boolean}\nfunction isDeleteKeyCode(keyCode) {\n\treturn keyCode == _keyboard.keyCodes.delete || keyCode == _keyboard.keyCodes.backspace;\n}\n\n// Returns `true` when element is a nested editable or is placed inside one.\n//\n// @param {module:engine/view/element~Element}\n// @returns {Boolean}\nfunction isInsideNestedEditable(element) {\n\twhile (element) {\n\t\tif (element instanceof _editableelement2.default && !(element instanceof _rooteditableelement2.default)) {\n\t\t\treturn true;\n\t\t}\n\n\t\telement = element.parent;\n\t}\n\n\treturn false;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-widget/src/widget.js\n// module id = 511\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \"blockquote{border-left:5px solid #ccc;padding-left:20px;margin-left:0;font-style:italic}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/ckeditor5/~/css-loader?{\"minimize\":true}!/workspace/ckeditor5/~/sass-loader/lib/loader.js!../ckeditor5-block-quote/theme/theme.scss\n// module id = 512\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".ck-hidden{display:none!important}.ck-reset,.ck-reset_all,.ck-reset_all *,.ck-reset_all a,.ck-reset_all textarea{box-sizing:border-box;width:auto;height:auto;position:static}svg.ck-icon{min-width:20px;min-height:20px;font-size:1em;vertical-align:middle}svg.ck-icon,svg.ck-icon *{color:inherit;cursor:inherit}svg.ck-icon *{fill:currentColor}.ck-tooltip,.ck-tooltip__text:after{position:absolute;pointer-events:none;-webkit-backface-visibility:hidden}.ck-tooltip{visibility:hidden;opacity:0;display:none;z-index:999}.ck-tooltip__text{display:inline-block}.ck-tooltip__text:after{content:\\\"\\\";width:0;height:0}.ck-button,a.ck-button{display:inline-block;position:relative;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none}.ck-button .ck-tooltip,a.ck-button .ck-tooltip{display:block}.ck-button:hover .ck-tooltip,a.ck-button:hover .ck-tooltip{visibility:visible;opacity:1}.ck-button .ck-button__label,.ck-button:focus:not(:hover) .ck-tooltip,a.ck-button .ck-button__label,a.ck-button:focus:not(:hover) .ck-tooltip{display:none}.ck-toolbar__separator{display:inline-block}.ck-toolbar__newline{display:block;clear:left}.ck-dropdown{display:inline-block;position:relative}.ck-dropdown:after{content:\\\"\\\";width:0;height:0;pointer-events:none;z-index:1;position:absolute;top:50%;transform:translateY(-50%)}.ck-dropdown__panel{-webkit-backface-visibility:hidden;display:none;z-index:999;position:absolute;left:0;transform:translateY(100%)}.ck-dropdown__panel-visible{display:inline-block}.ck-label,.ck-list__item{display:block}.cke-voice-label{display:none}.ck-balloon-panel{-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;display:none;position:absolute;z-index:999}.ck-balloon-panel.ck-balloon-panel_with-arrow:after,.ck-balloon-panel.ck-balloon-panel_with-arrow:before{content:\\\"\\\";position:absolute}.ck-balloon-panel.ck-balloon-panel_with-arrow:before{z-index:1}.ck-balloon-panel.ck-balloon-panel_with-arrow:after{z-index:2}.ck-balloon-panel.ck-balloon-panel_arrow_n:before,.ck-balloon-panel.ck-balloon-panel_arrow_ne:before,.ck-balloon-panel.ck-balloon-panel_arrow_nw:before{z-index:1}.ck-balloon-panel.ck-balloon-panel_arrow_n:after,.ck-balloon-panel.ck-balloon-panel_arrow_ne:after,.ck-balloon-panel.ck-balloon-panel_arrow_nw:after{z-index:2}.ck-balloon-panel.ck-balloon-panel_arrow_s:before,.ck-balloon-panel.ck-balloon-panel_arrow_se:before,.ck-balloon-panel.ck-balloon-panel_arrow_sw:before{z-index:1}.ck-balloon-panel.ck-balloon-panel_arrow_s:after,.ck-balloon-panel.ck-balloon-panel_arrow_se:after,.ck-balloon-panel.ck-balloon-panel_arrow_sw:after{z-index:2}.ck-balloon-panel_visible{display:block}.ck-editor .ck-toolbar.ck-toolbar_sticky{position:fixed;top:0}.ck-editor .ck-toolbar.ck-toolbar_sticky.ck-toolbar_sticky_bottom-limit{top:auto;position:absolute}.ck-reset,.ck-reset_all,.ck-reset_all *,.ck-reset_all a,.ck-reset_all textarea{margin:0;padding:0;border:0;background:transparent;text-decoration:none;vertical-align:middle;transition:none;word-wrap:break-word}.ck-reset_all,.ck-reset_all *,.ck-reset_all a,.ck-reset_all textarea{border-collapse:collapse;font:normal normal normal 12px Helvetica,Arial,Tahoma,Verdana,Sans-Serif;color:#333;text-align:left;white-space:nowrap;cursor:auto;float:none}.ck-reset_all .ck-rtl *{text-align:right}.ck-reset_all iframe{vertical-align:inherit}.ck-reset_all textarea{white-space:pre-wrap}.ck-reset_all input[type=password],.ck-reset_all input[type=text],.ck-reset_all textarea{cursor:text}.ck-reset_all input[type=password][disabled],.ck-reset_all input[type=text][disabled],.ck-reset_all textarea[disabled]{cursor:default}.ck-reset_all fieldset{padding:10px;border:2px groove #e0dfe3}.ck-reset_all button::-moz-focus-inner{padding:0;border:0}svg.ck-icon{width:1.66667em;height:1.66667em}.ck-tooltip{left:50%}.ck-tooltip__text{color:#fff;font-size:.7rem;padding:.4em .64em;background:#333;position:relative;left:-50%;line-height:1.5}.ck-rounded-corners .ck-tooltip__text,.ck-tooltip__text.ck-rounded-corners{border-radius:2px}.ck-tooltip__text:after{border-style:solid;left:50%}.ck-tooltip.ck-tooltip_s{bottom:-5px;transform:translateY(100%)}.ck-tooltip.ck-tooltip_s .ck-tooltip__text:after{top:-5px;transform:translateX(-50%);border-color:transparent transparent #333;border-width:0 5px 5px}.ck-tooltip.ck-tooltip_n{top:-5px;transform:translateY(-100%)}.ck-tooltip.ck-tooltip_n .ck-tooltip__text:after{bottom:-5px;transform:translateX(-50%);border-color:#333 transparent transparent;border-width:5px 5px 0}.ck-tooltip,.ck-tooltip__text:after{transition:opacity .2s ease-in-out .2s}.ck-button,a.ck-button{background:#fff;border:1px solid #bfbfbf;white-space:nowrap;cursor:default;vertical-align:middle;padding:.4em;line-height:1.66667}.ck-button:not(.ck-disabled):focus,.ck-button:not(.ck-disabled):hover,a.ck-button:not(.ck-disabled):focus,a.ck-button:not(.ck-disabled):hover{background:#e6e6e6;border-color:#a6a6a6}.ck-button:not(.ck-disabled):active,a.ck-button:not(.ck-disabled):active{background:#d9d9d9;border-color:#999;box-shadow:inset 0 2px 2px #bfbfbf}.ck-button.ck-disabled,a.ck-button.ck-disabled{background:#fff;border-color:#d9d9d9}.ck-button.ck-rounded-corners,.ck-rounded-corners .ck-button,.ck-rounded-corners a.ck-button,a.ck-button.ck-rounded-corners{border-radius:2px}.ck-button:focus,a.ck-button:focus{outline:none;border:1px solid #6ab5f9;box-shadow:0 0 3px 2px #9bcdfb}.ck-button .ck-icon,a.ck-button .ck-icon{float:left}.ck-button.ck-disabled .ck-button__label,.ck-button.ck-disabled .ck-icon,a.ck-button.ck-disabled .ck-button__label,a.ck-button.ck-disabled .ck-icon{opacity:.5}.ck-button.ck-button_with-text,a.ck-button.ck-button_with-text{padding:.4em .8em}.ck-button.ck-button_with-text .ck-icon,a.ck-button.ck-button_with-text .ck-icon{margin-left:-.4em;margin-right:.4em}.ck-button.ck-button_with-text .ck-button__label,a.ck-button.ck-button_with-text .ck-button__label{display:block}.ck-button.ck-on,a.ck-button.ck-on{background:#f7f7f7;border-color:#b9b9b9}.ck-button.ck-on:not(.ck-disabled):focus,.ck-button.ck-on:not(.ck-disabled):hover,a.ck-button.ck-on:not(.ck-disabled):focus,a.ck-button.ck-on:not(.ck-disabled):hover{background:#dedede;border-color:#a1a1a1}.ck-button.ck-on:not(.ck-disabled):active,a.ck-button.ck-on:not(.ck-disabled):active{background:#d2d2d2;border-color:#949494;box-shadow:inset 0 2px 2px #b9b9b9}.ck-button.ck-on.ck-disabled,a.ck-button.ck-on.ck-disabled{background:#f8f8f8;border-color:#d2d2d2}.ck-button-action,a.ck-button-action{background:#61b145;border-color:#498534;text-shadow:0 -1px #4e8e37;color:#fff}.ck-button-action:not(.ck-disabled):focus,.ck-button-action:not(.ck-disabled):hover,a.ck-button-action:not(.ck-disabled):focus,a.ck-button-action:not(.ck-disabled):hover{background:#579f3e;border-color:#3f732d}.ck-button-action:not(.ck-disabled):active,a.ck-button-action:not(.ck-disabled):active{background:#52963b;border-color:#3a6a29;box-shadow:inset 0 2px 2px #498534}.ck-button-action.ck-disabled,a.ck-button-action.ck-disabled{background:#6fbc54;border-color:#52963b}.ck-button-action:active,.ck-button-action:focus,.ck-button-action:hover,a.ck-button-action:active,a.ck-button-action:focus,a.ck-button-action:hover{text-shadow:0 -1px #3a6a29}.ck-button-bold,a.ck-button-bold{font-weight:700}.ck-button .ck-icon use,.ck-button .ck-icon use *,a.ck-button .ck-icon use,a.ck-button .ck-icon use *{color:inherit}.ck-button .ck-button__label,a.ck-button .ck-button__label{float:left;line-height:inherit;font-size:inherit;font-weight:inherit;color:inherit;cursor:inherit}.ck-toolbar{line-height:1;padding:.4em;border:1px solid #bfbfbf;white-space:normal;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none}.ck-toolbar_floating{white-space:nowrap}.ck-rounded-corners .ck-toolbar,.ck-toolbar.ck-rounded-corners{border-radius:2px}.ck-toolbar__separator{width:1px;height:2.28em;vertical-align:middle;background:#bfbfbf}.ck-toolbar__newline{height:.4em}.ck-toolbar>*{margin-right:.4em}.ck-toolbar>:last-child{margin-right:0}.ck-toolbar-container .ck-toolbar{border:0}.ck-dropdown:after{border-style:solid;border-width:.4em .4em 0;border-color:#707070 transparent;right:.8em}.ck-dropdown .ck-button.ck-dropdown__button{padding-right:1.6em}.ck-dropdown .ck-button.ck-dropdown__button.ck-disabled .ck-button__label{opacity:.5}.ck-dropdown .ck-button.ck-dropdown__button .ck-button__label{width:7em;overflow:hidden;text-overflow:ellipsis}.ck-dropdown__panel{border:1px solid #b9b9b9;bottom:1px;background:#fff;box-shadow:0 1px 2px 0 rgba(0,0,0,.2)}.ck-dropdown__panel.ck-rounded-corners,.ck-rounded-corners .ck-dropdown__panel{border-radius:2px}.ck-list{-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;list-style-type:none;background:#fff}.ck-list.ck-rounded-corners,.ck-rounded-corners .ck-list{border-radius:2px}.ck-list__item{padding:.64em;cursor:default;min-width:12em}.ck-list__item:focus,.ck-list__item:hover{background:#f7f7f7}.ck-list__item:focus{box-shadow:0 0 3px 2px #9bcdfb;position:relative;z-index:1;outline:none}.ck-list__item:last-of-type{border:none}.ck-list__item_active{background:#1a8bf1;color:#fff}.ck-list__item_active:focus,.ck-list__item_active:hover{background:#0e7ee2}.ck-label{font-weight:700}.ck-input-text{box-shadow:inset 2px 2px 3px #e6e6e6;border:1px solid #b9b9b9;padding:.64em;min-width:250px}.ck-input-text.ck-rounded-corners,.ck-rounded-corners .ck-input-text{border-radius:2px}.ck-input-text:focus{outline:none;border:1px solid #6ab5f9;box-shadow:0 0 3px 2px #9bcdfb,inset 2px 2px 3px #e6e6e6}.ck-input-text[readonly]{border:1px solid #d2d2d2;background:#f7f7f7;color:#5c5c5c}.ck-balloon-panel{box-shadow:0 1px 2px 0 rgba(0,0,0,.2);min-height:15px;background:#fff;border:1px solid #b9b9b9}.ck-balloon-panel.ck-rounded-corners,.ck-rounded-corners .ck-balloon-panel{border-radius:2px}.ck-balloon-panel.ck-balloon-panel_with-arrow:after,.ck-balloon-panel.ck-balloon-panel_with-arrow:before{width:0;height:0;border-style:solid}.ck-balloon-panel.ck-balloon-panel_arrow_n:after,.ck-balloon-panel.ck-balloon-panel_arrow_n:before,.ck-balloon-panel.ck-balloon-panel_arrow_ne:after,.ck-balloon-panel.ck-balloon-panel_arrow_ne:before,.ck-balloon-panel.ck-balloon-panel_arrow_nw:after,.ck-balloon-panel.ck-balloon-panel_arrow_nw:before{border-width:0 10px 15px}.ck-balloon-panel.ck-balloon-panel_arrow_n:before,.ck-balloon-panel.ck-balloon-panel_arrow_ne:before,.ck-balloon-panel.ck-balloon-panel_arrow_nw:before{border-color:transparent transparent #b9b9b9}.ck-balloon-panel.ck-balloon-panel_arrow_n:after,.ck-balloon-panel.ck-balloon-panel_arrow_ne:after,.ck-balloon-panel.ck-balloon-panel_arrow_nw:after{border-color:transparent transparent #fff;margin-top:2px}.ck-balloon-panel.ck-balloon-panel_arrow_s:after,.ck-balloon-panel.ck-balloon-panel_arrow_s:before,.ck-balloon-panel.ck-balloon-panel_arrow_se:after,.ck-balloon-panel.ck-balloon-panel_arrow_se:before,.ck-balloon-panel.ck-balloon-panel_arrow_sw:after,.ck-balloon-panel.ck-balloon-panel_arrow_sw:before{border-width:15px 10px 0}.ck-balloon-panel.ck-balloon-panel_arrow_s:before,.ck-balloon-panel.ck-balloon-panel_arrow_se:before,.ck-balloon-panel.ck-balloon-panel_arrow_sw:before{border-color:#b9b9b9 transparent transparent}.ck-balloon-panel.ck-balloon-panel_arrow_s:after,.ck-balloon-panel.ck-balloon-panel_arrow_se:after,.ck-balloon-panel.ck-balloon-panel_arrow_sw:after{border-color:#fff transparent transparent;margin-bottom:2px}.ck-balloon-panel.ck-balloon-panel_arrow_n:after,.ck-balloon-panel.ck-balloon-panel_arrow_n:before{left:50%;margin-left:-10px;top:-15px}.ck-balloon-panel.ck-balloon-panel_arrow_nw:after,.ck-balloon-panel.ck-balloon-panel_arrow_nw:before{left:20px;top:-15px}.ck-balloon-panel.ck-balloon-panel_arrow_ne:after,.ck-balloon-panel.ck-balloon-panel_arrow_ne:before{right:20px;top:-15px}.ck-balloon-panel.ck-balloon-panel_arrow_s:after,.ck-balloon-panel.ck-balloon-panel_arrow_s:before{left:50%;margin-left:-10px;bottom:-15px}.ck-balloon-panel.ck-balloon-panel_arrow_sw:after,.ck-balloon-panel.ck-balloon-panel_arrow_sw:before{left:20px;bottom:-15px}.ck-balloon-panel.ck-balloon-panel_arrow_se:after,.ck-balloon-panel.ck-balloon-panel_arrow_se:before{right:20px;bottom:-15px}.ck-editor-toolbar{border-radius:0}.ck-editor-toolbar .ck-button{border-width:0}.ck-editor-toolbar .ck-button.ck-disabled,.ck-editor-toolbar .ck-button:not(:hover):not(:focus):not(.ck-on){background:#f7f7f7}.ck-editor-toolbar .ck-button.ck-on{background:#dedede;border-color:#a1a1a1}.ck-editor-toolbar .ck-button.ck-on:not(.ck-disabled):focus,.ck-editor-toolbar .ck-button.ck-on:not(.ck-disabled):hover{background:#c6c6c6;border-color:#888}.ck-editor-toolbar .ck-button.ck-on:not(.ck-disabled):active{background:#b9b9b9;border-color:#7c7c7c;box-shadow:inset 0 2px 2px #a1a1a1}.ck-editor-toolbar .ck-button.ck-on.ck-disabled{background:#f7f7f7;border-color:#b9b9b9}.ck-editor-toolbar .ck-dropdown__button{border-width:1px}.ck-editor-toolbar .ck-dropdown__button:not(:hover):not(:focus):not(.ck-on){background:#fff}.ck-toolbar-container .ck-editor-toolbar{background:#f7f7f7}.ck-editor-toolbar-container.ck-balloon-panel_arrow_n:after,.ck-editor-toolbar-container.ck-balloon-panel_arrow_ne:after,.ck-editor-toolbar-container.ck-balloon-panel_arrow_nw:after{border-bottom-color:#f7f7f7}.ck-editor-toolbar-container.ck-balloon-panel_arrow_s:after,.ck-editor-toolbar-container.ck-balloon-panel_arrow_se:after,.ck-editor-toolbar-container.ck-balloon-panel_arrow_sw:after{border-top-color:#f7f7f7}.ck-editor .ck-toolbar.ck-toolbar_sticky{box-shadow:0 1px 2px 0 rgba(0,0,0,.2);border:1px solid #bfbfbf;border-width:0 0 1px;background:#f7f7f7}.ck-editor{position:relative}.ck-editor.ck-rounded-corners,.ck-rounded-corners .ck-editor{border-radius:2px}.ck-editor .ck-editor__top .ck-toolbar{border-top:0;border-left:0;border-right:0;z-index:999}.ck-editor .ck-editor__main{background:#fff}.ck-editor .ck-editor__bottom{border-bottom:0;border-left:0;border-right:0;padding:.8em}.ck-editor .ck-editor__editable.ck-focused{outline:1px solid #6ab5f9;box-shadow:inset 2px 2px 3px #e6e6e6}.ck-editor .ck-editor__editable_inline{overflow:auto;padding:0 .8em}.ck-editor,.ck-editor-bottom{background:#f7f7f7;border:1px solid #b9b9b9}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/ckeditor5/~/css-loader?{\"minimize\":true}!/workspace/ckeditor5/~/sass-loader/lib/loader.js!../ckeditor5-editor-classic/theme/theme.scss\n// module id = 513\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".ck-placeholder:before{content:attr(data-placeholder);cursor:text;color:#c2c2c2;pointer-events:none}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/ckeditor5/~/css-loader?{\"minimize\":true}!/workspace/ckeditor5/~/sass-loader/lib/loader.js!../ckeditor5-engine/theme/placeholder.scss\n// module id = 514\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".ck-heading_heading1{font-size:1.5em}.ck-heading_heading2{font-size:1.3em}.ck-heading_heading3{font-size:1.1em}[class*=ck-heading_]{line-height:21.6px;padding:9.6px}[class*=ck-heading_heading]{font-weight:700}.ck-dropdown.ck-heading-dropdown .ck-dropdown__button .ck-button__label{width:8em}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/ckeditor5/~/css-loader?{\"minimize\":true}!/workspace/ckeditor5/~/sass-loader/lib/loader.js!../ckeditor5-heading/theme/theme.scss\n// module id = 515\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".ck-editor__editable .image>figcaption{background-color:#f7f7f7;padding:.8em;font-size:.75rem;color:#858585;outline-offset:-1px}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/ckeditor5/~/css-loader?{\"minimize\":true}!/workspace/ckeditor5/~/sass-loader/lib/loader.js!../ckeditor5-image/theme/imagecaption/theme.scss\n// module id = 516\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".cke-text-alternative-form{padding:1.2em;overflow:hidden}.cke-text-alternative-form .ck-label{margin-bottom:.4em}.cke-text-alternative-form__actions{clear:both;padding-top:1.2em}.cke-text-alternative-form__actions .ck-button{float:right}.cke-text-alternative-form__actions .ck-button+.ck-button{margin-right:.64em}.cke-text-alternative-form__actions .ck-button+.ck-button+.ck-button{float:left}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/ckeditor5/~/css-loader?{\"minimize\":true}!/workspace/ckeditor5/~/sass-loader/lib/loader.js!../ckeditor5-image/theme/imagetextalternative/theme.scss\n// module id = 517\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".ck-editor__editable .image{text-align:center;clear:both}.ck-editor__editable .image.image-style-side{float:right;margin-left:.8em;max-width:50%}.ck-editor__editable .image>img{display:block;margin:0 auto;max-width:100%}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/ckeditor5/~/css-loader?{\"minimize\":true}!/workspace/ckeditor5/~/sass-loader/lib/loader.js!../ckeditor5-image/theme/theme.scss\n// module id = 518\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".ck-link-form{padding:1.2em;overflow:hidden}.ck-link-form:focus{outline:none}.ck-link-form .ck-label{margin-bottom:.4em}.ck-link-form__actions{clear:both;padding-top:1.2em}.ck-link-form__actions .ck-button{float:right}.ck-link-form__actions .ck-button+.ck-button{margin-right:.64em}.ck-link-form__actions .ck-button+.ck-button+.ck-button{float:left}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/ckeditor5/~/css-loader?{\"minimize\":true}!/workspace/ckeditor5/~/sass-loader/lib/loader.js!../ckeditor5-link/theme/theme.scss\n// module id = 519\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".ck-widget{margin:.8em 0;padding:0}.ck-widget.ck-widget_selected,.ck-widget.ck-widget_selected:hover{outline:3px solid #6ab5f9}.ck-editor__editable.ck-blurred .ck-widget.ck-widget_selected{outline:3px solid #ddd}.ck-widget:hover{outline:3px solid #ffd25c}.ck-widget .ck-editable.ck-editable_focused,.ck-widget .ck-editable:focus{outline:1px solid #6ab5f9;box-shadow:inset 2px 2px 3px #e6e6e6;background-color:#fff}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /workspace/ckeditor5/~/css-loader?{\"minimize\":true}!/workspace/ckeditor5/~/sass-loader/lib/loader.js!../ckeditor5-widget/theme/theme.scss\n// module id = 520\n// module chunks = 0","module.exports = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M15.135 10.409c.361.248.654.56.88.934.225.375.338.816.338 1.324 0 .609-.128 1.123-.385 1.543-.256.42-.624.751-1.103.994a5.908 5.908 0 0 1-1.755.55c-.663.107-1.442.16-2.338.16H4.539v-.66a22.5 22.5 0 0 0 .66-.076c.265-.033.45-.073.558-.118.208-.085.35-.196.427-.334.076-.138.114-.317.114-.537V5.732c0-.203-.031-.372-.093-.507s-.211-.254-.448-.355a3.326 3.326 0 0 0-.61-.182 14.136 14.136 0 0 0-.608-.114v-.66h6.52c1.64 0 2.825.226 3.552.677.727.45 1.09 1.116 1.09 1.995 0 .406-.08.763-.244 1.07a2.388 2.388 0 0 1-.702.8 4.214 4.214 0 0 1-.99.54c-.383.153-.795.28-1.234.381v.16c.44.046.896.143 1.37.292.473.15.885.343 1.234.58zm-2.723-3.611c0-.665-.187-1.184-.562-1.556-.375-.372-.937-.558-1.687-.558-.107 0-.247.004-.419.012l-.444.021v4.449h.44c.913 0 1.587-.213 2.021-.639.434-.425.651-1.002.651-1.73zm.592 5.759c0-.835-.248-1.475-.744-1.92-.496-.445-1.21-.668-2.14-.668a22.977 22.977 0 0 0-.82.034v4.389c.05.208.209.385.474.528.265.144.586.216.964.216.67 0 1.216-.225 1.636-.676.42-.452.63-1.086.63-1.903z\\\" fill=\\\"#454545\\\" fill-rule=\\\"evenodd\\\"/></svg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-basic-styles/theme/icons/bold.svg\n// module id = 521\n// module chunks = 0","module.exports = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M13.825 3.914l-.126.558a5.701 5.701 0 0 0-.685.076c-.282.045-.49.088-.626.127-.237.073-.406.186-.508.338a1.586 1.586 0 0 0-.22.5l-2.03 8.769a1.24 1.24 0 0 0-.034.27c.001.13.03.24.086.33.056.09.157.17.304.237.085.04.27.086.558.14.288.053.502.086.643.097l-.127.558H5.656l.127-.558.677-.05c.293-.023.501-.057.625-.102a1.11 1.11 0 0 0 .5-.326c.112-.138.188-.306.228-.503l2.02-8.778a1.428 1.428 0 0 0 .035-.305.59.59 0 0 0-.072-.295c-.048-.085-.148-.161-.3-.229a3.457 3.457 0 0 0-.622-.19 5.001 5.001 0 0 0-.58-.106l.128-.558h5.403z\\\" fill=\\\"#454545\\\" fill-rule=\\\"evenodd\\\"/></svg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-basic-styles/theme/icons/italic.svg\n// module id = 522\n// module chunks = 0","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" stroke-linejoin=\\\"round\\\" stroke-miterlimit=\\\"1.414\\\"><path d=\\\"M5.414 6.749L2.903 4.237a.49.49 0 1 1 .694-.694L6.394 6.34a10.662 10.662 0 0 1 2.127-.53c.366-.051.734-.081 1.103-.095a10.628 10.628 0 0 1 1.524.07c1.109.134 2.204.449 3.243.936a9.65 9.65 0 0 1 2.12 1.331c.276.231.542.484.784.766.18.211.349.439.488.692.169.307.301.664.301 1.039 0 .375-.132.732-.301 1.039a4.143 4.143 0 0 1-.488.691 6.668 6.668 0 0 1-.784.767 9.628 9.628 0 0 1-2.092 1.318l2.196 2.197a.49.49 0 1 1-.694.694l-2.485-2.484-.008.003-.931-.931.009-.003-6.215-6.215a9.887 9.887 0 0 0-.945.444l6.239 6.24-.006.005.78.78c-.388.094-.78.166-1.174.215l-1.11-1.11h.011L4.483 8.596a7.2 7.2 0 0 0-.665.514l-.112.098 4.897 4.897-.005.006 1.276 1.276a10.164 10.164 0 0 1-1.477-.117l-.479-.479-.009.009-4.863-4.863-.022.031a2.563 2.563 0 0 0-.124.2 1.497 1.497 0 0 0-.108.241.534.534 0 0 0-.028.133.29.29 0 0 0 .008.072.927.927 0 0 0 .082.226 2.613 2.613 0 0 0 .234.379l3.463 3.594a10.565 10.565 0 0 1-2.125-1 9.096 9.096 0 0 1-1.015-.721 6.672 6.672 0 0 1-.798-.764 4.325 4.325 0 0 1-.502-.69c-.184-.319-.329-.693-.329-1.089 0-.375.131-.732.301-1.039.139-.253.307-.481.488-.692.225-.263.471-.5.728-.719a9.538 9.538 0 0 1 2.096-1.341l.019-.009zm6.674.401a4.632 4.632 0 0 1 1.108 5.992l.345.344.046-.018a9.313 9.313 0 0 0 2-1.112 6.86 6.86 0 0 0 .727-.613c.137-.134.27-.277.392-.431.072-.091.141-.185.203-.286a1.966 1.966 0 0 0 .148-.292.72.72 0 0 0 .036-.12.29.29 0 0 0 .008-.072.492.492 0 0 0-.028-.133.999.999 0 0 0-.036-.096 2.165 2.165 0 0 0-.071-.145 2.917 2.917 0 0 0-.125-.2 3.592 3.592 0 0 0-.263-.335 5.444 5.444 0 0 0-.53-.523 7.955 7.955 0 0 0-1.054-.768 9.766 9.766 0 0 0-1.879-.891 10.119 10.119 0 0 0-1.027-.301zm-2.85.21l-.069.002a.508.508 0 0 0-.254.097.496.496 0 0 0-.104.679.498.498 0 0 0 .326.199l.045.005c.091.003.181.003.272.012a2.449 2.449 0 0 1 2.017 1.513c.024.061.043.125.069.185a.494.494 0 0 0 .45.287h.008a.496.496 0 0 0 .35-.158.482.482 0 0 0 .13-.335.638.638 0 0 0-.048-.219 3.379 3.379 0 0 0-.36-.723 3.438 3.438 0 0 0-2.791-1.543l-.028-.001h-.013z\\\"/></svg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-core/theme/icons/low-vision.svg\n// module id = 523\n// module chunks = 0","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M2 16h16v1H2v-1zm15-2H3V6h14v8zm-1-7H4v6h12V7zM2 3h16v1H2V3z\\\"/></svg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-core/theme/icons/object-center.svg\n// module id = 524\n// module chunks = 0","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M18 16H2v-1h16v1zM6.978 13H2v-1h4.978v1zM18 6v7H9V6h9zm-1 6V7h-7v5h7zM6.978 10H2V9h4.978v1zm0-3H2V6h4.978v1zM18 4H2V3h16v1z\\\"/></svg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-core/theme/icons/object-right.svg\n// module id = 525\n// module chunks = 0","module.exports = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M12.061 15.51v-.882c1.395-.847 2.345-1.633 2.85-2.358.37-.533.554-1.162.554-1.887 0-.437-.082-.759-.246-.964-.15-.205-.328-.307-.533-.307-.137 0-.328.048-.574.143-.37.123-.67.185-.902.185-.547 0-1.033-.205-1.456-.615-.424-.41-.636-.923-.636-1.538 0-.698.212-1.238.636-1.62a3.002 3.002 0 0 1 2.05-.78c.93 0 1.757.39 2.482 1.17.724.778 1.087 1.742 1.087 2.89 0 1.614-.602 3.084-1.805 4.41-.807.875-1.976 1.593-3.507 2.153zm-8.386 0v-.882c1.394-.847 2.345-1.633 2.85-2.358.37-.533.554-1.162.554-1.887 0-.437-.082-.759-.246-.964-.15-.205-.328-.307-.533-.307-.137 0-.328.048-.574.143-.37.123-.67.185-.903.185-.547 0-1.032-.205-1.456-.615-.424-.41-.636-.923-.636-1.538 0-.698.212-1.238.636-1.62a3.002 3.002 0 0 1 2.051-.78c.93 0 1.757.39 2.481 1.17.725.778 1.087 1.742 1.087 2.89 0 1.614-.601 3.084-1.804 4.41-.807.875-1.976 1.593-3.507 2.153z\\\" fill=\\\"#454545\\\" fill-rule=\\\"evenodd\\\"/></svg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-core/theme/icons/quote.svg\n// module id = 526\n// module chunks = 0","module.exports = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><g fill=\\\"#222\\\" fill-rule=\\\"evenodd\\\"><path d=\\\"M14.2 10.956l1.227-1.227a3.995 3.995 0 0 0-.002-5.654 4 4 0 0 0-5.654-.002L7.698 6.145a3.995 3.995 0 0 0 .003 5.654c.39.39.84.682 1.32.878l-.305-.307.638-.638a2.99 2.99 0 0 1-.946-.64 2.995 2.995 0 0 1-.003-4.24l2.073-2.072a3 3 0 0 1 4.242 4.242l-1.226 1.227.707.707z\\\"/><path d=\\\"M10.166 7.405c.41.192.795.457 1.133.796a3.995 3.995 0 0 1 .003 5.654l-2.073 2.072a4 4 0 0 1-5.654-.002 3.995 3.995 0 0 1-.002-5.654l1.362-1.363.707.707-1.362 1.363a3 3 0 0 0 4.243 4.243l2.072-2.073a2.995 2.995 0 0 0-.003-4.24 2.987 2.987 0 0 0-1.196-.733l.77-.77z\\\"/></g></svg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-link/theme/icons/link.svg\n// module id = 527\n// module chunks = 0","module.exports = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><g fill=\\\"#222\\\" fill-rule=\\\"evenodd\\\"><path d=\\\"M14.2 10.956l1.227-1.227a3.995 3.995 0 0 0-.002-5.654 4 4 0 0 0-5.654-.002L7.698 6.145a3.995 3.995 0 0 0 .003 5.654c.39.39.84.682 1.32.878l-.305-.307.638-.638a2.99 2.99 0 0 1-.946-.64 2.995 2.995 0 0 1-.003-4.24l2.073-2.072a3 3 0 0 1 4.242 4.242l-1.226 1.227.707.707z\\\"/><path d=\\\"M14.906 16.092l2.557-2.557-.722-.721-2.556 2.556-2.345-2.345-.722.721 2.345 2.346-2.556 2.556.721.722 2.557-2.557 2.768 2.768.721-.722-2.768-2.767zm-2.513-3.999A4.067 4.067 0 0 0 10.148 7.5l-.794.794c.448.142.869.39 1.223.745a3.054 3.054 0 0 1 .758 3.055h1.058zm-2.204 3.104l-1.049 1.05c-1.609 1.608-4.208 1.62-5.8.028-1.595-1.595-1.584-4.188.028-5.8l1.406-1.406.721.722-1.405 1.405c-1.21 1.21-1.216 3.154-.02 4.35 1.192 1.192 3.142 1.186 4.349-.021l1.77-1.771v1.443z\\\"/></g></svg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-link/theme/icons/unlink.svg\n// module id = 528\n// module chunks = 0","module.exports = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M6 16v1h10v-1H6zM6 4v1h12V4H6zm0 6v1h11v-1H6zM1 4.5C1 3.672 1.666 3 2.5 3 3.328 3 4 3.666 4 4.5 4 5.328 3.334 6 2.5 6 1.672 6 1 5.334 1 4.5zm0 6C1 9.672 1.666 9 2.5 9c.828 0 1.5.666 1.5 1.5 0 .828-.666 1.5-1.5 1.5-.828 0-1.5-.666-1.5-1.5zm0 6c0-.828.666-1.5 1.5-1.5.828 0 1.5.666 1.5 1.5 0 .828-.666 1.5-1.5 1.5-.828 0-1.5-.666-1.5-1.5z\\\" fill=\\\"#454545\\\" fill-rule=\\\"evenodd\\\"/></svg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-list/theme/icons/bulletedlist.svg\n// module id = 529\n// module chunks = 0","module.exports = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M7 17h10v-1H7v1zM6 4v1h13V4H6zm1 6v1h11v-1H7zM2 2.5c0 .277.223.5.5.5H3v3.5a.499.499 0 1 0 1 0v-4c0-.277-.223-.5-.5-.5h-1c-.277 0-.5.223-.5.5zM2.5 8a.499.499 0 1 0 0 1H4v1H2.5c-.277 0-.5.223-.5.5v2c0 .277.223.5.5.5h2a.499.499 0 1 0 0-1H3v-1h1.5a.46.46 0 0 0 .188-.031.45.45 0 0 0 .28-.281A.461.461 0 0 0 5 10.5v-2a.46.46 0 0 0-.031-.187.45.45 0 0 0-.282-.282.463.463 0 0 0-.125-.03H2.5V8zm2.352 10.853a.493.493 0 0 0 .148-.35v-4.005A.493.493 0 0 0 4.505 14h-2.01a.494.494 0 0 0-.495.5c0 .268.222.5.495.5H4v1H2.495a.494.494 0 0 0-.495.5c0 .268.222.5.495.5H4v1H2.495a.494.494 0 0 0-.495.5c0 .268.222.5.495.5h2.01a.49.49 0 0 0 .351-.146z\\\" fill=\\\"#454545\\\" fill-rule=\\\"evenodd\\\"/></svg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-list/theme/icons/numberedlist.svg\n// module id = 530\n// module chunks = 0","module.exports = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M10 16l1-3.982c-3.417 0-8.616.869-10 3.982 0-5.983 6.601-7.96 10-7.96 0-.85-1-3.32-1-4.04l8 6-8 6z\\\" fill=\\\"#454545\\\" fill-rule=\\\"evenodd\\\"/></svg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-undo/theme/icons/redo.svg\n// module id = 531\n// module chunks = 0","module.exports = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M2 10l8 6-1-3.982c3.417 0 8.616.869 10 3.982 0-5.983-6.601-7.96-10-7.96 0-.85 1-3.32 1-4.04l-8 6z\\\" fill=\\\"#454545\\\" fill-rule=\\\"evenodd\\\"/></svg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-undo/theme/icons/undo.svg\n// module id = 532\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-block-quote/theme/theme.scss\n// module id = 533\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-editor-classic/theme/theme.scss\n// module id = 534\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./placeholder.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./placeholder.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./placeholder.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-engine/theme/placeholder.scss\n// module id = 535\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-heading/theme/theme.scss\n// module id = 536\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js??ref--2-1!../../../../node_modules/sass-loader/lib/loader.js!./theme.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js??ref--2-1!../../../../node_modules/sass-loader/lib/loader.js!./theme.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js??ref--2-1!../../../../node_modules/sass-loader/lib/loader.js!./theme.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-image/theme/imagecaption/theme.scss\n// module id = 537\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js??ref--2-1!../../../../node_modules/sass-loader/lib/loader.js!./theme.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js??ref--2-1!../../../../node_modules/sass-loader/lib/loader.js!./theme.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js??ref--2-1!../../../../node_modules/sass-loader/lib/loader.js!./theme.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-image/theme/imagetextalternative/theme.scss\n// module id = 538\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-image/theme/theme.scss\n// module id = 539\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-link/theme/theme.scss\n// module id = 540\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js??ref--2-1!../../../node_modules/sass-loader/lib/loader.js!./theme.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../ckeditor5-widget/theme/theme.scss\n// module id = 541\n// module chunks = 0"],"sourceRoot":""}